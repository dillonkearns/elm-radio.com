{"text": " Hello Jeroen. Hello Dillon. I'm quite positive you're going to enjoy this episode. But I could be wrong. Maybe it's a false positive. Maybe it's a false positive. That's a good one. What are we talking about today? Today let's talk about false positives. Let's talk about how Elm removes kinds of false positives in at least the area that I care about, static analysis. But I think we can find ways how that applies to other things like optimizations, stuff like that. Oh, okay. I like this. So let's start with the definition. What is a false positive? This one is always kind of tricky. Like which one is the positive and which one is the negative? Yeah, because you got false positives, you got false negatives. So yeah, a false positive is when, at least for a linter or for a tool like Elm review for a competitor, is when the tool reports a problem when it should not. Like it tells you, hey, there's a problem here and actually there's no problem. That is a false positive. So positives means that we think there's something and there isn't. And then you've got false negatives, which are the tool should report a problem, but it doesn't. And then you've got true positives and true negatives, which are like real errors and real non errors, which yeah, maybe those names are weird. I actually don't know if there are names for those probably. Yeah, it seems reasonable. If you take a COVID test and it comes back positive, it could be a false positive, which means the test said you had COVID, but you don't have COVID. It could be a false negative, which means the test said you do not have COVID, but you do have COVID, which in fact is quite common, which kind of makes you think like how much value is there to testing when there's actually like, from what I understand, a fairly high rate of both of those. And it just like makes you like question the whole, how can I make decisions based on this information, which I know is flawed quite often. So it's a strange situation. The same dynamic applies in static analysis. If you can't rely on the results you're getting, it makes you sort of lose faith in what the tool is telling you. Yeah. Well, there's a difference between lenders and medicine. There is. Although sometimes, you know, you rely on the guarantees you make in your code for medical procedures and when people's health is on the line. So there can be an overlap. Yeah, absolutely. So yeah, what is in your opinion, the root cause of false positives? Well, I did see a tweet this morning that I was thinking maybe should have been marked with spoiler warning, at least for Elm Radio co hosts. I regret posting it. Let me try to forget I ever saw that and see if I can answer the question without prior knowledge. Please forget the correct answer. Which was a very good tweet, by the way. We will link to that tweet. I will explain it, I guess. It's hard not to be biased by the nice tweet you wrote, but I would tend to think of it as like maybe complexity. Like how complex is an answer. Like if you're looking at a chess position and you want to say, is there a forced checkmate in this chess position? It's easier to, you know, if you can confirm that there is, you know that there is. But if you can't, maybe there is one, but it's so complex. There's just so much complexity to the position that there are nearly infinite possibilities. So it's very hard for you to say. Like if you look at an opening chess position, is there like a forced checkmate? Like maybe, I don't know, if I had infinite capacity to process infinite lines, then maybe I could answer that. But it's just too complex for me to say yes or no. Yeah, it's really easy to figure out whether there's a forced checkmate if you have two pieces on the board and they can both only move, do one move, then it's really easy. Like you got two or three, four things to check, depending on how things work. And that's it. But if you got 10, 20 pieces on the board and they can all move in so many directions, yeah, things become a lot harder. You have a lot more checks to do. You have a lot more scenarios to evaluate. Complexity is in my opinion, for sure, a cause of false positives. Yeah. And if you can rule things out and if you can eliminate variables, that helps eliminate that. As you said, that's a very good example with if you just have four pieces on the board in a chess game, and can you answer that question? At that point, you can answer that with confidence. If you can say, and sometimes it's easier to say proof by existence proof. And existence proof is easy. I mean, if you can find it, but sometimes proving absence is difficult. You could prove existence like, do black birds exist? Well, I can look out my window and see a crow and say, yes, there are black birds, but then do... Wrong, it's a dinosaur. Well, then perhaps. And I mean, yeah, it does get quite philosophical. Like what can you know? In a way, this is sort of like the term epistemology comes to mind, which is just sort of what is knowable. And I often found it frustrating in philosophy classes when epistemology comes up. I always found that topic extremely frustrating in a philosophical context because it's kind of a dead end because you say what can be known? And at the end of the day, you basically get to Descartes conclusion. I think therefore I am, which is to say that is the only thing that I can prove. The only thing that's knowable because my senses can mislead me. I can see, have I ever seen something and come to the wrong conclusion about what it was and later discovered that I was wrong? So how can we trust anything that we think we know? What is knowable? What is the nature of knowing and what is knowable in the universe? And it's just to me, it's just not a satisfying subject in philosophy because it's just like, well, nothing except that we exist. And so, okay, done. Like what more can we do with that topic except go around in circles and we don't really get anywhere. But with code, what is knowable? With static analysis, what is knowable? That's kind of a more satisfying question because it's a more constrained area where we're looking at. It's not just like questioning, can we trust these axioms about the universe? We can sort of just think about it in terms of what can we know about this code? So yeah, you want to give us your answer to that question. What is the root cause of false positives? Well, the one that I came up with, and maybe we can figure out something even deeper than that, but what I came down to is missing information just in general. Some of that through complexity, some of that through other things, other means. But basically the way that I imagine it is if you were omniscient being or omniscient tool, you had knowledge of everything, you knew everything that happened in your program at runtime, at compile time, and you knew what the developer's intents was, then you would always be right in what you report and you would never miss anything. You would know, well, this is never used or this never happens or this is not a problem or this is a problem. If you had all the information in the world, then I think you would never be wrong. Therefore, the problem is missing information and you can get those through different means. So for instance, for static analysis tool, one of the bigger problems is dynamic code. So knowing what a value is at a certain point is hard to figure out. Some tools can do it quite well. TypeScript does it quite well and to some extent, much better than Elm. Elm knows the types, but it doesn't know the values nor does it care about it. Languages that try to do proofs like Isabel or TLA+, I think they know a lot more about what's going on in the program, but they're also pretty complex and I don't know how they work. I don't know what their limitations are. Dynamic things are complex, for instance. So when you have missing information, what do you do? Because that's going to happen, right? And perhaps you want to use the precautionary principle and say, I don't know if there's a problem, so I will say, I can't prove that everything is okay, therefore, I'm going to say there's potentially a problem because I can't prove that there's not a problem. I guess this or the other approach I can think of is you could say, well, I didn't find a problem, so no problems, right? That's sort of like what TypeScript does, right? It says, I will tell you if I can guarantee that there is a problem rather than I will tell you if I cannot guarantee there are no problems. Yeah. So to me, that is making a presumption. So I might be wrong about the correct word, but a presumption is when you accept something as true on the basis of probabilities. Like it's very likely, I'm missing some information. I don't know whether this is true or not, but I think it's going to be more likely to be true than false. So the example that I'd like to take is an ESLint rule that is called array callback return, which is basically when you do array.map and you pass it a function, that function should always return something. Right. So you don't accidentally have a list of... that you're writing TypeScript, you don't write return and so it's returning void, which I think has happened to everybody that goes between like JavaScript and Elm that you forget a return and you're like, why is this value all nulls or undefined? Yeah, undefined. Yeah. So it's a very useful rule to have. But the thing is when you analyze JavaScript code, there is something that is missing and that is type information. So TypeScript could potentially help here, but basically when you see array.map, array being a variable or something, it looks like an array or the map method of an array. And therefore you're going to consider, you're going to presume, well, it's pretty much for sure the array.map method. So I'm going to report any problems that are confined in the function that is passed to it, but that might be wrong. So when you're missing, you're having missing information, you're going to make presumptions and when they turn out to be wrong, that's when you have a false positive or false negative. Because what we could also do is say, do some more analysis, like is this read an array? Can we find somewhere where it is declared where we can clearly see that this is an array? And if we see that it's an array, then we report a problem. And if we don't see that it's an array, if we don't know, then we don't report anything. And that removes all the false positives that we have, but that creates a lot of false negatives. So whenever you need to make presumptions, you're going to have the choice to lean more towards a false positive or false negative, but you're going to have to choose or do more analysis, which can be complex and maybe you're not going to be able to figure out the answer. Yeah. And it strikes me that this doing more analysis piece, that there are maybe two different categories here that either something is knowable, but takes a lot of work to know potentially to the degree where it's essentially unknowable because it's infinite. Like is there a forced checkmate from the first move on a chessboard? Like technically knowable, but practically unknowable or even if you knew, maybe the sequence of moves that would lead you there is so large that it's not usable information. You mean it's not, you can't compute it? Or if you compute it, it's like, yeah, here's a list of size 30 trillion of all the possible responses to these different lines that gives you guaranteed ways to respond with a forced checkmate and it's like, okay, well I can't really use that. So even if it's technically knowable, it's essentially as the amount of analysis and information to deduce if something is knowable approaches infinity, it starts to resemble being unknowable. But there's like unknowable and then there's knowable with work. Those are two different things. So like an example of something that is literally unknowable would be like, if you take eval into account, if you run eval, what can this code do? Well, if it's from user input, that user input is undefined. You don't know what the bound, there are no bounds on it. So well, it's not undefined, it's a string. Right. Or who knows? Maybe it's a string undefined. Yeah, it's not known. And therefore there's not enough information there to analyze certain things about that. Whereas there are certain scenarios where you often talk about code flow analysis and maybe it's like a massive amount of work. Maybe you need some postdoc programming language researchers to assemble a team to solve this problem, but it's technically knowable and you could do that or it's just a huge amount of work. If you listener want to do that, please contact me. And Elm is a very interesting space for these problems because as you've sort of been hinting at it is more knowable because it's more constraint. Like in our chess analogy, it's more akin to the chessboard that just has a handful of pieces rather than the starting chess position. Yeah. So you're now hinting at something interesting is like, why is Elm more knowable, more analyzable than other languages like JavaScript? And to me, there are multiple aspects to that. One of which is that there's a compiler. Doesn't seem like a big thing, but it actually is because potentially when you analyze your JavaScript code, it's a bunch of gibberish, like saying A equals A or one equals two or well, actually not. Yeah. But basically what you can have is a code that looks like code, but doesn't mean anything like it references undefined variables or it has embedded semantics. It's syntactically valid, but not well defined code. Yeah, exactly. And those are all things that a compiler checks for. So when you know that these are checked for you by the compiler, by a compiler, then you can start to rely on them. And that is quite important actually. So JavaScript doesn't have a compiler, but what it does, what it does have is a linter. So what ends up happening for language like JavaScript is that you have a lot of ESL rules to do the same work that a compiler would do. So you have a rule for undefined references. You have a rule for reporting duplicate declarations, stuff like that. And once you have those, then other rules can kind of depend on those semantic issues being not there. But it is like they can kind of rely on those because people can disable the ESLint errors or people can just not enable those. And the fact that we kind of need those rules is a reason why they're using the recommended configuration for ESLint or other tools. If the tool doesn't ship with it, then they're not going to be enforced and other rules will not be able to depend on those. And that is actually something that we don't, we need with Elm because the compiler checks for so many things that the Elm review rules don't need any more certainty. They can just rely on the things that the compiler checks for and that's enough for pretty much anything. Right. They might have like a snowball effect where by applying different rules and applying fixes to those rules, you can eliminate more dead code because making one piece of dead code go away makes another piece of dead code go away and there's this snowball effect. But as you say, the language guarantees are enough that you're not depending on, I need this guarantee in order to make my checks, therefore you have to turn on these rules as prerequisites. I mean, you could imagine scenarios like that, but I guess you haven't encountered them yet. Yeah, I haven't yet. But yeah, for instance, if you were trying to evaluate an expression and you saw a reference to a variable and you didn't have the guarantee because you were in JavaScript that that variable was actually referenced anywhere, then potentially you would enter a weird state or you would crash because, oh, well, I expected this to be in the scope somewhere. So it's really nice not to have to be defensive about those things. So therefore a compiler really helps with all those things. Right. I could imagine like some rules around divide by zero or not a number or something like that. And you could say, well, there are certain entry points where you could get a number from a port from a JSON decoder. And at those terminal points, maybe you have an Elm review rule that checks that you need to unwrap them into safe types that are not a number. And then that rule could be a prerequisite for another rule that assuming that all of the number inputs that you're using are not a number to begin with, you're dividing them in a way that you're checking for divide by zero and things like that. And you're going to have well defined values. Yeah, I could imagine that as well. At work, we have a rule that detects unused CSS classes. So what we do is we take our CSS files and we extract all the classes from those and we turn them into an Elm file that our Elm review configuration then uses. And then we just go through the entire files and find out the ones that are used and report the ones that are left. But to be able to tell that, we also have another rule that checks for any usages of the class function that are too dynamic, that are too hard for Elm review to tell. So they kind of depend on each other. I actually don't remember whether we merge them into one rule. But as long as you don't make anything depend on the other one, like a fix, like imagine you have a fix that you want to apply, that should probably not depend on information that has not been validated before. And because in Elm review fixes take the upper hand or prioritize compared to non fixed errors, at least in fixed mode, that can be kind of dangerous. But yeah, at least the number of guarantees that we have, the number of presumptions that we need to do in Elm, or at least in Elm review is a lot lower than what you would do in ESLint. So this hasn't been a problem really, so far, in my experience, it could be, but I'm guessing it would be for things that are a lot more precise than what we're currently doing. And this seems like what you're talking about with checking for class names that are too dynamic for you to basically effectively analyze. Because you could imagine pulling on that thread more and more and saying, well, what if it's just an inline concatenation between two string values? Could we just check those two literal concatenated string values? And is that literal enough for us to use? And you say, okay, well, now that we're checking for concatenated string literals, why don't we add something that says, well, what if it's a string constant that's concatenated to another one? And maybe that's quite useful because you want to be a little more dynamic with your class name. So and then you say, well, what if we want to add a number to it? Can we and then we want to be able to do arithmetic on that numbers, or we want to be able to map over a list of numbers and then check those values. And eventually, you're just building like a pre compilation like evaluator that's actually evaluating your program before a compile time. And you certainly can do those things. But you're intentionally choosing a strategy there to preemptively give a false positive and just say, or to put a constraint on the rule where you're I mean, I guess another way to look at it is rather than the false positive, you're saying it's not a false positive, it's just a constraint that the rule as the rule is saying, this is not a false positive that like, hey, this could actually be valid, you're actually saying, I'm adding, here's a rule that adds an additional constraint to your code. And it's not a false positive. It's a true positive, this is not okay, you have to use this constraint where you only use string literals for class names. Yeah, yeah, as you said, like, if you want to figure out a lot more things, basically, at some point, you're building an interpreter, as I see it, which would definitely be valuable to be able to infer a lot more things. And in Elm, you can do a lot in that regard. I think you can do a lot. Yeah, because it's just pure functions, right? So it's none of them have side effects that make the next things a lot easier. But it would still be a lot of work and would make the tool a lot more slower, I think. And for the rule that doesn't report false positives, but reports things that it wants to enforce new constraints, you're absolutely right. Where I would say that it switches from a false positive to a constraint is in the error message. Like if the error message actually explains like, hey, this is not a problem in the sense that it's not going to cause your code to crash or behave weirdly. But for the sake of this other Elm review rule that makes sure that we don't have any new CSS classes, we require that this is a that the argument to class is a static string, a string literal. And that's what we did. So if you explain the problem and if you explain the benefits, then people accept it. Now, I haven't heard anyone complain about this, so I'm very happy about that. But if you have like a one liner in like in most static analysis tools, like that's going to be hard to explain. Like what do you what is a problem? How to move forward? Why is this a real problem? Like, yeah, people want to understand the problems that you're reporting. So Elm review does, I mean, obviously abstract some things away from the user. In this case, like a review rule author. Like, for example, like you do provide this lookup table, the module name lookup table is sort of somewhat going down this path of being able to provide more information about, you know, like, and it's a very, to me, it's a very interesting path in Elm review. And I'm curious, like, are there any other examples where you sort of do some amount of additional analysis of the code where you can sort of process some information? Not, you know, not a full on pre interpreter, but doing a little more analysis. Are there other examples of that in Elm review? And are there things on your mind that you think might be appropriate for Elm review to expose? Yeah. So just to explain the lookup table that you mentioned, the module name lookup table is just basically a dictionary that says at this location in the source code, this is a reference to this value, which comes from this import from this module. Because in the abstract syntax tree, you have when you say a dots b, you reference the b function or b type, depending on the uppercase of the a module. Right, because HTML dot text could just be text, or it could be import HTML as h, and then it's h dot text. Yeah, or imports HTML dot styled as HTML, stuff like that. So the module name lookup table is there to make it much easier for you to figure out what is the real original module that this value comes from, which we didn't have at the beginning. People probably invented that from scratch or a sort of imperfect version of that, I would imagine. Yeah, basically people were like, do I see an import to HTML? If so, what is the alias? And also, does it expose the text function literally or using exposing dot dot? And basically, people did it like that way, which in practice is good enough. I don't think you're gonna have a lot of false positives, but it's a lot of work. And you could have some false negatives potentially. So yeah, this was something that I really wanted to add to Elm Review and I got it in there. And now I don't think about this sort of problem, which is really nice. But it did require a few iterations to get right. Yeah, it's basically something that you pass into the context, right? Yeah, the way that you initialize your context, basically your model for going through the AST, you say, hey, I'm interested in having the lookup table because I think that's gonna be useful. Please compute it for me and give it to me. And then people can use it. Which is largely like a performance optimization, right? If it's not needed, then you don't need to compute it. Yes, exactly. Currently, if any rule requires it, then I compute it. I think I want to be smart in the future where only the rules that I'm going to run now will, if any of them are needed, then I compute it. Because basically, the fix mode is quite slow. And I think I'm going to need to be able to cut up the review phase and running one rule at a time and be able to stop whenever I find like a fix. Elm is very interesting in that regard because certain times you need to compute certain things upfront in a sort of framework design because the user can't just invoke a method that then mutates some dictionary somewhere and then suddenly it doesn't have that value, but it goes and performs a side effect and puts it in there and memoizes it. So you sort of architect things differently in Elm. Yeah, and also because we can't memorize it. So either we say, well, we're going to compute it once and then people will use it zero to n times, or we're going to compute it lazily and then it will be computed as many times as people require it, which is unfortunate. In practice, it probably works out okay a lot of the time, especially in the context of a browser application. Maybe for CLI applications, it's a little bit different. For performance heavy tools, yeah. So are there more cases where you've considered adding these types of things that provide more sort of, you know, rather than just the abstract syntax tree, the syntax tree with a little processing, with a little extra analysis performed for you that you can access through the Elm review platform? Yeah, I actually just added one this morning, this weekend, basically the module documentation. So that's the curly brace dash pipe comment that you have at the beginning of your file before the imports. That is the module documentation. And currently Elm syntax, the AST library that we use doesn't have a way to store that as the documentation of the module. It's just among the comments. So what I had to do in a bunch of rules is to go through the comments, find the module documentation, which I just learned this weekend that there was room for false positives because ports also have that problem. Like the documentation for port is also not attached to the port. Whereas documentation for a function or for a type is properly attached. So yeah, basically it was possible to confuse the documentation for port as the module documentation. So yeah, that's, it's not super tricky, but it's not nice to have to compute it everywhere. And in all of my implementations it was potentially broken. So I just made it, I added a new visitor or a new context creator function to be able to have that information right away, basically. And so I'm going to publish that in the next version. And the other big one is type information. Yeah. So it is really surprising that Elm review works so well for a typed language, considering we don't have type information. There are two ways that we can do that. One of them is by invoking the compiler, which has a few problems, notably that you can't invoke the compiler in tests. So probably have to write a separate testing framework for Elm review rules where it would create files, run the compiler thousands of times, because I have thousands of tests. And also the whole review process is one giant pure function currently. And if I had to ask for the type information, then I would have to break out of that somehow, especially in the fix all mode, it would be very messy in practice. So the other method is to do the type inference ourselves, which I've tried a few times so far and got so far. It's a somewhat challenging problem, I would imagine. Yeah. I think you need to know how things work, what the algorithm that Elm uses works so that you have the same results because you got some edge cases where it can have some differences. But basically you need to know the theory well in order to do a nice implementation. And I've never understood that algorithm properly. Yeah. It's a huge task. I know someone who's working on this on and off. I don't want to put pressure on them. Someone who has a very common name, it would seem. Maybe yes. We know you're listening. Yeah. But yeah, that would be really nice. A few applications of that would be, for instance, the no missing type annotation rule that could generate the missing type annotations. That would be so nice. Yeah. So we already have that in the editors. So we know that could work well. It doesn't always give the nicest error, the nicest type spots. It could still be helpful. But that would unlock more information. You said that removing false positives, it comes down to needing more information. If you had unlimited information, you could remove all false positives. So what are the areas that you could remove false positives with that extra information? Well, it's not necessarily false positives. It's false positives and false negatives because you would be able to know more and therefore you would be able to report more. In Elm Review, there are basically no false positives. So I'm not sure it would help with much. I know with one location where it could potentially help, where we do have a false positive that people report sometimes, which is the no unused custom type constructor arcs. It's a mouthful. Basically, you can create a custom type where you say type A equals A int, type ID equals ID int, for instance. And then you never extract that identifier, that string value. So the rule reports that as not used. But potentially you could use that in a comparison. Like, is this ID the same one that this one has? And if you use it that way, there's a false positive. If you never extract the ID in another way. So that could potentially be able to tell us like, hey, in this comparison, is there a usage of this type? If so, don't report that type. So that's a false positive that we could remove. And then it's mostly going to be about false negatives because there's a bunch of rules that we can't write with that type of information. And well, I don't have that many in mind, but a few, like for instance, the one that I really want and that some people want is reporting unused record fields. That can get quite tricky to do right if you want to, basically we can do it. It's just going to have a lot of false negatives. So as I said, like you can either lean towards false negatives or false positives when you don't have information. Right. So basically what we can do is, well, if we see that a function takes a extensible record as an argument and some of those fields are not used, then we can remove those. And I actually already have a prototype without working, but if you pass that argument to a list.map function, for instance, so you have a list of some records and you pass that to a list.map. Well, now you need to figure out what is the type of that mapper function that you pass to the list.map because if that one uses some of the fields and those fields are used, if it doesn't, then they're not used. But if you don't know the type, well, you don't know whether they will be able to, which fields are used and which ones are unused. So therefore, if we want to be safe and not report false positive, we're just going to say, well, it looks like it could use anything. So we're not going to report anything. And that's the same thing for a model. Like you pass your model, which is usually a record with plenty of fields, you pass a model to some function that is a lambda that is hard to evaluate. Therefore, we can't tell anything about it. So we stop. So having type information here would be a lot, very helpful because we could analyze the type of those functions and we could see, well, it seems to be using this field, this field, and that's it. Yeah. It seems like that would unlock a lot of possibilities, not to mention fixes that could, you know, I mean, code generation fixes, all sorts of ideas you could find there. Yeah. I can imagine we will still have plenty of false negatives, but I think we will be able to catch all false positives or we would not have false positives, but that's yeah, again, like how conservative we want to be about things being used or unused. Cause we could go either way. We could potentially have a configuration, the rule that says try to be more aggressive now just for a while. And then you go check the false positives and maybe you can remove, you could check the errors and maybe you can remove a few things. Maybe you don't, but yeah. Right. But yeah, in general, we want to be very conservative and not report any false positives because those are super annoying. Yeah. So it seems like, I'm not sure if this falls into the same groups you've mentioned of choosing to err towards false positives or err towards false negatives. But when we're talking about ways to work with less information, you don't have as much information as you need to be 100% sure of something that you're checking for. Well, like if we look at the chess example again, you know, what do you do in that situation? If you, if you can concretely determine it, then it's, then it's easy enough. If you can't, then you end up, you know, what do you do for an opening chess move? You tend to rely on strategies and heuristics. So heuristic for, you know, determining whether a chess move is good is you want your pawns to be supporting each other. You want, you want to try to take the opponent's queen if you can for trading for your knight. That might turn out to be a move that, that leads to you being checkmated in the next move. But that's a heuristic that you can say, well, let's just kind of generally assume that this is going to tend to be a good thing. And so now your rule is now going back to like Elm review rules in the context of Elm review. Now these heuristics are telling you things about your code that might give you unreliable results. Because you're, cause essentially what a heuristic is, is it's measuring the thing that is not directly what you care about. Like in a chess game, you care about checkmate. That's the only thing you care about. But, and maybe like the number of moves until you checkmate, like that's all you care about. But in this heuristic of trying to take the opponent's queen, if you can, you are having a stand in goal that's, that's easier to determine, but might that stand in might be flawed in some cases that stand in might actually not yield the result you might, might lead to you getting checkmated. Yeah. So yeah, in chess, I think computers are powerful enough to basically compute every possible move in a game or close to no, no, probably not. They're actually not. They actually rely a lot on heuristics to like prune the tree because it's an exponentially growing tree. So it it's approaching infinite. So computers can't deal with that, but they, so they do have to use heuristics. Yes. They do use heuristics and do prune at all things. Yeah. Let's imagine they could compute every case. Then basically it has perfect information. Right. So whatever it's going to feed into try, it's going to work. If it's slightly limited, which in this case it is, then you can improve the logic by saying, well, this is obviously a bad move. Right. And you can remove some complexity. You can now rely on those. It's going to be a presumption. Yeah. Right. Exactly. So when that turned out to be wrong, you're going to have worse results than expected. But when those are true, then you get some nice results. Right. So is that acceptable to have that in an Elm review rule or do you try to avoid that? To have presumptions? Yeah. To have to have heuristics because if it's a rule, it's telling you it's an error. There's no way to disable it. And in some cases you might say, well, actually in this case it's okay. Like a code smell, like, well, it's a code smell if you have a function that's over a certain number of lines, but maybe in this particular instance, it's fine. Yeah. In Elm review, I would, well, in general I would say it depends on the criticality of the issue and how much you want to force it. For instance, the unused CSS classes rule, that is basically like going to report false positives by saying, yeah, you should use a literal, but as we said, it's going to be more of a constraint than a false positive depending on how you frame it. Right. Yeah. Because we don't, so those opinionated rules are fine if you opt in to those, I think. You need to be, to have the whole team accept this rule in my opinion, like all of the rules, but in general Elm review doesn't allow ignoring issues. So that's why at least all of the rules that I wrote tend to go to lean towards false negatives or false positives. Right. Instead of heuristics. Using heuristics, like basically using presumptions. I see. Well, I don't know, so I'm going to take the route that I know will lead to people not getting false positives. You can view it as a simple heuristic in a way, I think. So basically a heuristic is how you choose to put some things into the false positive category or choose to put some things into the false negative category. That heuristic is what determines that. Yeah, I'd say so. And I think that Elm review really has this stance to go towards false negatives more than other tools because in those other tools you can disable the errors when you have false positives. And that also impacts how people write those rules or when they choose to write and enable those rules. Because I know if I don't have disable comments, I know that if I report false positives, it's going to be very annoying. And I know that if some rule that reports like a code smell, which is not always bad when it reports an error and shouldn't, well, people are going to be blocked. So if I have a way to tell them like, please write the code this way in order to not have this false positive, then that's acceptable I think. If I don't, then I'm just not going to write the rule. Right. And not writing a rule is basically 100% false negatives. Right, right, right. Right. Right. Although you could argue that 100% false negatives feels very different than 99% or 1% false negatives because you know you just can't rely on 100% false negatives. Whereas you don't know if it's 1% false negatives. You don't know if you can rely on that or not. But other tools like ESLint and they have a lot more rules that have the potential for false positives and they're considered okay because you can disable them. So I really think that having the ability to disable errors impacts the way that we choose which rules to write. Yeah. And as you say, it depends on the criticality of the issue if it is a constraint that you really depend on for something that you're doing, then it's going to change the calculus there. Yeah, if it's to report an issue that you know for sure will crash your application, but it might be wrong, then yeah, it is probably something you want to enforce at the cost of being a bit annoying sometimes. So people will have to add to the disable comments or rewrite the code in a way that the linter will understand that this is not a problem. But yeah, I haven't found any critical problems like that for Elm Review so far, I think. So yeah. So you often mention that code flow analysis is sort of the thing that makes a lot of rules not worth writing. And I wonder... So here's the original tweet that we were talking about earlier where you kind of talked about missing information being the root cause. So you said, missing information is the root cause of false positives slash negatives in linters. Add more information to find more problems and be less wrong at the same time. How? One, the linter should provide more information to rule authors. And two, languages should restrict dynamic features. So one, the linter should provide more information to rule authors. Like what? Like is there information that Elm Review could provide to rule authors to help them with code flow analysis in addition to the module lookup table we discussed? Like comparing references seeing if something refers to the same value. Yeah, for instance, having aliases. And I'm definitely thinking about ways to make analysis easier, which is in a way providing information that would be hard to compute otherwise. Also, there's just simply plenty of information that you sometimes can't get. Not so much with Elm Reviews anymore, but like for instance, only recently I added the function to give you the file path of a module to analyze. Because I thought people might do some weird things with it. That's something that I was quite scared about, like people misusing the tool at the beginning. In practice, not so much. So now I make that available and people do use that for some applications. I don't have any in my head anymore. But so yeah, give all the information that you can. And then yeah, make it possible to analyze codes in a simpler way, like give type inference, give the real module name and yeah, provide code flow analysis tools. I know that ESLint has something like that, which I never understood. So I don't know how that would work. I've also thought about being able to figure out like, is this value an alias to the other function? And that could be interesting. That could catch more things. Definitely. For the performance question, I could imagine, I don't know if this would be a fruitful direction at all, but I could imagine a design where you sort of have, actually very much like the store pattern that Martin was telling us about in our store pattern episode. Essentially, you know, the store pattern you have your, I can't remember what he called it now, but your query of these are the things I depend on for this page. This is the data I need. You could sort of have that as a sort of subscription that says, this is what I need, which as we discussed in the store pattern episode, as more information comes online in the store pattern, it could be getting it with HTTP requests. Then you can do follow up information because it's sort of a subscription that gets called whenever that changes. And then it just keeps going until the information you say you need matches the information that you have already or is a subset of it. So I can imagine something like that where you sort of have like a subscription to like, here's some computationally expensive data I need that you're not just going to go analyze constantly and then you have these sort of remote data or maybe values or whatever that you're waiting on. And then you can sort of take all those together once you have them all filled in and then you can continue your analysis. So that could be really interesting to like provide some primitives for doing that sort of thing. I think the way that I understand it is I think already what Elm Review does to some extent because we say like, I request the module name lookup table, therefore please compute it. And the framework could do a better job at computing only what is necessary. And then when it looks at the next file, compute again only what is necessary and so on and so on. That I definitely want to have. And I think that's kind of the same idea like this module depends on the lookup table for this module. So whenever you get to the next module you compute it again for that module, etc. Yeah, it is a similar pattern. I think the main difference would be in the case of a module Elm Review knows what module it's looking at. And so it can fill in that bit of context to say, okay, it's requesting the module lookup table and it's in this module so I can compute it for this specific module. But if it's something more nuanced like I want to pre evaluate this string for example, then it doesn't know which strings to pre evaluate based on some implicit context of the process it's running. So in that case, that sort of store pattern style could work where you can give it that information. You can say, hey, here's the node I'm looking at and I would like to wait until you can finish analyzing, like pre computing this string value, please. And then you wait until it's no longer a maybe and then get it back. And that could allow you to lazily compute and memoize some of these more expensive values with specific context where the user can say, I want it for this node. So anyway, like seems like an interesting path to explore. Yeah, it could be interesting. Yeah. In this case, it would definitely help to be able to say, please compute this now and store it in the store directly without just by mutation. That would definitely make things easier. Right. Yeah. And I guess it's maybe a little bit of a chicken and egg problem to know which of these things would open up interesting possibilities because when you offer this information to review authors, review rule authors, then they do interesting things with it. And then when they do interesting things with that, it builds and snowballs and it sparks people's imaginations. And so it's sort of hard to know which ones to explore before you've seen what people do with them. Yeah. Yeah. Well, I have my own opinions about things that could be interesting or ideas, not opinions. But yeah, I've been surprised by what people came up with. For instance, you made the Elm review HTML to Elm. Yes, that's right. Yeah. Based on what Martin Stewart made credit to him and to you, obviously, but the idea was from Martin. His idea to use Elm review fixes as a code generation tool is 100% credit to him. And I used a bunch of his code for that. So yeah, that one I did not expect. And yeah, that's a pretty cool avenue to explore. Definitely. I also know that some people would like to be able to generate modules to create files on disk based on the same idea. So like, that could be interesting. Yeah. So the type information is like the big one on your wish list right now. Yeah. And also performance for fixes and performance for Elm review because in my opinion, it's too slow. But there's maybe just me as a parent to the tool. Like, ah, at works, it takes like a whole minute to run on our code base, which like, yeah, that's too slow. Like, if even I want to go do scroll on Twitter while the review is ongoing, like, it's too long. Yeah. Right. But I do wonder like, what kinds of use cases could people come up with if there was more information? Like, I wonder if some sort of dependent typed kind of techniques could emerge if people had more tools for doing code flow analysis or, you know, just more information at their fingertips. Because like what Elm can do with all the information it has about your code, both because it's a compiler and has computed all this information and because the constraints of the Elm language, all the things, all the guarantees it has based on how you have to write your code for it to be valid. There are just so many cool things that it can do. And if you start like looking at the compiler code, you're thinking of all these possibilities. Like I know I do with Elm pages. I'm like, oh my God, if I was a compiler, there are so many cool things I could do with the information I would have. Yeah. So a compiler is basically a static analysis tool, just like Elintor, right? Right. It's a static analysis tool that the code must pass through in order to run, which that's basically all it is. It's those two things. And then it generates some files. Right. Right. Also then, right. That is a compiler part, but the rest is very important as well. And the thing is the compiler is a general purpose tool, right? So it's only going to be able to infer things that the language tries to allow and to report things that it doesn't want to allow. But then if you want to do something more precise that the language was not designed for, you could potentially do that with a very powerful static analysis tool. So like, I don't know much about dependent types, but being able to figure out at compile time that some number is always smaller than five, you could potentially do it by adding constraints, just like a language with dependent types would do. Maybe, I don't know enough, but you could definitely try to do that and then report errors like, Hey, I am not smart enough to figure this out. Please change the way that you work with your code. Kind of like proof languages, which I think they accept plenty of things, but if it's too hard, then they ask the people to rewrite their code in a way that they can understand. Right. Which I mean, in a way, like, yeah, if you say non empty list, you know, from cons or whatever, right? That's like a lazy approach to that in a way where you're saying, I'm not going to do code flow analysis. You must prove to me by actually passing a single definite value and then a list which could be empty. I don't care. And so you've proven it. That's like the shortcut to proving that. Or you could do code flow analysis and you could say, well, I can analyze your code paths and I can see that you're using this non empty type that promises to be non empty, but maybe not through the compiler, but through Elm review and I see this one pinch point that I know this type will always go through and it adds something to the list. Therefore, you're good. Like that would be the deluxe approach. Yeah. But then some things are very hard to infer because it uses code from dependencies that we don't have information about. So again, misinformation. There is a request to be able to analyze the code from dependencies before analyzing the project. And I think that would be very valuable. If you do that, you can basically do whole program analysis except for the JavaScript parts. Maybe we would like to be able to analyze CSS and JavaScript files as well, but I think that's getting a bit of out of hand at the moment at least. It should be interesting, but maybe it's better to use two tools like ESLens and Elm review and configure them in a way to give you all the same guarantees. And you can always go the other way too, right? Like if you're wanting to analyze things with your CSS, you can generate CSS from Elm and then you have a more constrained place to analyze it. Whereas if you're like guarantees are always, you can always flip it on its head. You can say, well, this is too unconstrained and hard to analyze. Therefore I'm going to constrain it. Like to take something from an unconstrained environment to a constrained environment is very, very hard to take something from a constrained environment to an unconstrained environment is very easy, relatively speaking. I remember when I rewrote an Elm application to React, that was really easy. Whereas the opposite would have been way harder, just like basically re implement everything. But for Elm to React, there was a translation, which is much easier. To take a lossless audio file and turn it into a compressed one is easy. To take a compressed audio file or compressed image and turn it into a lossless one or to do the CSI enhance, it's a harder problem. I don't know if you want to talk about side effects as well. That's interesting, but I don't know how we are on time. We could talk a little more and still be in our general time window. Well, we can extend our episodes to be two hours long. That's fine as well. I mean, we did have shorter episodes recently, so we need to compensate, right? One area where you have a lot of false positives or false negatives in a lot of other languages and other linters is with the presence of side effects. For instance, if we take the no unused variables rule for Elm, where you say if you have A equals some function call, and then this value A is never used. In Elm review, we know, well, this function call has no side effects. We can remove the entire declaration from the code, and then we can look at whether that function is used or not used anywhere else. But in a language with side effects, it's very hard to tell that. We know we can remove const A equals, we can remove that part, but we don't know if we can remove the function call because it might have side effects, right? And that is going to be true for any language, as far as I know, that is not a pure functional language, or at least where the function is not annotated in some way as being pure. So being able to rely on the fact that functions have no side effects, that actually allows us to do some very cool things, just like dead coded animation, a very powerful one, as we've seen. I think removing dead coded in Elm using Elm review is something that a lot of people love, and I definitely do. And that is very hard to do if you have side effects. And yeah, then you got things like moving code around where you have one function call after another one. And if you want to optimize the code or make it nicer to read, then potentially you have to inverse the order of those function calls. Well, is that safe to do? Well, we don't know. Unless we have no side effects, then we know we can do it. So we could still do that analysis. Does this function have a side effect? Does this one also have a side effect? Do they impact each other? Do they depend on each other? And that's a lot of work. That's really a big amount of work to do, like a lot of interpretation and a lot of analysis. And potentially at the end, you still don't know the answer. So you're still going to have to make a presumption like, yeah, I think this is going to... We don't know. So we're just going to assume that it has a side effect and that it needs to stay this way. Right. Yeah. It's the poison pill. Things can be very easily tainted. And it's the unconstrained versus constrained environments. And if you can take, as we've talked about in the past, if you take pure functional Elm code, you can do more complex things under the hood preserving those guarantees, like persisting data in Lamedera, for example. So it's pretty compelling how you can still preserve those guarantees and do more complex things when you have that purity. For example, you could even imagine doing some of these kind of costly computations in Elm review. Like instead of doing this sort of Elm store pattern style, you could imagine doing some sort of hacks under the hood, like a sort of Elm review compiler that could... Oh, I never thought about doing that. Definitely on my mind, but so far I've never attempted it because I wanted... For type inference, I think that's going to be slow. Evan said that it's going to be slow in a language where you don't have mutation. So I'm thinking about altering that at compile time to make it much faster. We don't have type inference yet. So I will wait for that to happen. Interesting. Oh, that's cool. Yeah. Yeah. So I could imagine like... But I don't know if that will have any surprising effects. That's going to be interesting to figure out. Well, it's definitely an ambitious path to go down, but it would open up a lot of interesting possibilities. But yeah, you could certainly like, I could imagine you saying here's essentially a magic function that gives you some expensive computational result and under the hood, swap it out to do some optimizations and make it more efficient and not call it if it's not needed and that sort of thing. Yeah, potentially. But yeah, I would definitely not write a baggage code that would depend on this. It would just be like an improvement that people will not notice. Yeah, exactly. In terms of performance, under the hood optimization, that's the only way that I would accept doing something like that. Yes, I agree. Exactly. Yeah. But as long as you can preserve the semantics and expectations of how it's going to behave, you can swap it out for however you achieve that under the hood. Yeah. But it would be kind of tricky to test because you could not use Elm test for this anymore. Yeah. All of these guarantees that we've talked about, things that we can rely on that makes analysis easier, it applies to linters, but it also applies to code optimizers. For instance, Elm optimize level two, it knows that it can move some functions or some operations around as long as they don't depend on each other because they know, well, this function has no side effect, this function has no side effect, so they can move things. They can do a lot of these things because they know that the compiler wrote code in a specific way that the original code was in a specific way, that things are valid, that semantics match, that types match as it was in the code. So using all of these guarantees that the compilers, that the type checker, the language design give you, you can do a lot of powerful things. But as soon as you missing one of those, well, some areas, some optimization ideas, some linter rules that you wouldn't want to write, they crumble, you can't do them anymore. Or they require a lot more analysis, which we've seen can be hard. So yeah. So that's the part about what I was saying, languages should remove dynamic features or features that are hard to analyze, like side effects and dynamic values. Those are hard and therefore, if we can remove those, if we can make them more static, well, that helps static analysis tools. And that is something that I don't think that a lot of other languages know fully enough, right? I just wish people knew that more. What I'm taking away from this is basically like move the goalposts. Like instead of trying to solve a hard problem, define the problem in a way that makes it easier, right? So like we talked about with static analysis, like if you have a like, oh, I have to do all this code flow analysis to make this, to figure out what the class name is. Make the problem easier for yourself by making more assumptions, having more constraints. So you can do that in a language and you can do that in a static analysis rule and any sort of static analysis context you can move the goalposts, make the problem easier for yourself. Yeah. I wrote a blog post called safe unsafe operations in Elm, which is basically doing the same idea. Like we want to make the idea is we want to make something like reg ex dot from literal, where we can basically have a function that doesn't return a maybe reg ex, but a reg ex and Elm review then says, well, this is okay. We know that at compile time this works because this looks like a valid reg ex. So this is fine. And whenever you pass in a dynamic value, we move the goalposts and by saying like, please don't write it this way. We don't understand it. And you can, you can do that that way or you can do, make the analysis more complex, both work. But as long as at some point you can give the guarantee then everyone's happy. Otherwise you can fall back on the reg ex dot from string, which returns maybe never maybe reg ex. Well, are there any other things people should look at? Any, any blog posts, any conference talks, perhaps soon to be released? Yeah. So I, a lot of what I said today was explained hopefully better than today in a talk that I made at Lender Days mid mid July. So it's called static analysis tools, love pure FP. I think it's going to be released. I'm pretty sure it's going to be released after this episode. So hopefully we, I haven't spoiled too much. I think some parts of it at least, but I think it's going to be, I think it was a good talk. I'm very pleased with it at least. I'm excited to watch it. Yeah. We'll keep an eye on our Twitter account then we will, we'll tweet a link to it. We will we'll try to update the show notes though. They may be immutable in your podcast. Yeah. They often are right. Yeah, I think so. But yeah, keep an eye on our Twitter and you're in until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.08, "text": " Hello Jeroen. Hello Dillon. I'm quite positive you're going to enjoy this episode. But I", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 286, 478, 1596, 3353, 291, 434, 516, 281, 2103, 341, 3500, 13, 583, 286, 50768, 50768, 727, 312, 2085, 13, 2704, 309, 311, 257, 7908, 3353, 13, 2704, 309, 311, 257, 7908, 3353, 13, 663, 311, 257, 665, 51118, 51118, 472, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 718, 311, 751, 466, 7908, 35127, 13, 961, 311, 751, 51422, 51422, 466, 577, 2699, 76, 30445, 3685, 295, 7908, 35127, 294, 412, 1935, 264, 1859, 300, 286, 1127, 466, 11, 13437, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19396402480754446, "compression_ratio": 1.7378640776699028, "no_caption_prob": 0.20381952822208405}, {"id": 1, "seek": 0, "start": 8.08, "end": 15.08, "text": " could be wrong. Maybe it's a false positive. Maybe it's a false positive. That's a good", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 286, 478, 1596, 3353, 291, 434, 516, 281, 2103, 341, 3500, 13, 583, 286, 50768, 50768, 727, 312, 2085, 13, 2704, 309, 311, 257, 7908, 3353, 13, 2704, 309, 311, 257, 7908, 3353, 13, 663, 311, 257, 665, 51118, 51118, 472, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 718, 311, 751, 466, 7908, 35127, 13, 961, 311, 751, 51422, 51422, 466, 577, 2699, 76, 30445, 3685, 295, 7908, 35127, 294, 412, 1935, 264, 1859, 300, 286, 1127, 466, 11, 13437, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19396402480754446, "compression_ratio": 1.7378640776699028, "no_caption_prob": 0.20381952822208405}, {"id": 2, "seek": 0, "start": 15.08, "end": 21.16, "text": " one. What are we talking about today? Today let's talk about false positives. Let's talk", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 286, 478, 1596, 3353, 291, 434, 516, 281, 2103, 341, 3500, 13, 583, 286, 50768, 50768, 727, 312, 2085, 13, 2704, 309, 311, 257, 7908, 3353, 13, 2704, 309, 311, 257, 7908, 3353, 13, 663, 311, 257, 665, 51118, 51118, 472, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 718, 311, 751, 466, 7908, 35127, 13, 961, 311, 751, 51422, 51422, 466, 577, 2699, 76, 30445, 3685, 295, 7908, 35127, 294, 412, 1935, 264, 1859, 300, 286, 1127, 466, 11, 13437, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19396402480754446, "compression_ratio": 1.7378640776699028, "no_caption_prob": 0.20381952822208405}, {"id": 3, "seek": 0, "start": 21.16, "end": 28.400000000000002, "text": " about how Elm removes kinds of false positives in at least the area that I care about, static", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 286, 478, 1596, 3353, 291, 434, 516, 281, 2103, 341, 3500, 13, 583, 286, 50768, 50768, 727, 312, 2085, 13, 2704, 309, 311, 257, 7908, 3353, 13, 2704, 309, 311, 257, 7908, 3353, 13, 663, 311, 257, 665, 51118, 51118, 472, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 718, 311, 751, 466, 7908, 35127, 13, 961, 311, 751, 51422, 51422, 466, 577, 2699, 76, 30445, 3685, 295, 7908, 35127, 294, 412, 1935, 264, 1859, 300, 286, 1127, 466, 11, 13437, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19396402480754446, "compression_ratio": 1.7378640776699028, "no_caption_prob": 0.20381952822208405}, {"id": 4, "seek": 2840, "start": 28.4, "end": 35.12, "text": " analysis. But I think we can find ways how that applies to other things like optimizations,", "tokens": [50364, 5215, 13, 583, 286, 519, 321, 393, 915, 2098, 577, 300, 13165, 281, 661, 721, 411, 5028, 14455, 11, 50700, 50700, 1507, 411, 300, 13, 876, 11, 1392, 13, 286, 411, 341, 13, 407, 718, 311, 722, 365, 264, 7123, 13, 708, 307, 257, 50976, 50976, 7908, 3353, 30, 639, 472, 307, 1009, 733, 295, 12414, 13, 1743, 597, 472, 307, 264, 3353, 293, 51176, 51176, 597, 472, 307, 264, 3671, 30, 865, 11, 570, 291, 658, 7908, 35127, 11, 291, 658, 7908, 40019, 13, 51394, 51394, 407, 1338, 11, 257, 7908, 3353, 307, 562, 11, 412, 1935, 337, 257, 287, 5106, 420, 337, 257, 2290, 411, 2699, 76, 3131, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1870968969244706, "compression_ratio": 1.7710843373493976, "no_caption_prob": 5.2245519327698275e-05}, {"id": 5, "seek": 2840, "start": 35.12, "end": 40.64, "text": " stuff like that. Oh, okay. I like this. So let's start with the definition. What is a", "tokens": [50364, 5215, 13, 583, 286, 519, 321, 393, 915, 2098, 577, 300, 13165, 281, 661, 721, 411, 5028, 14455, 11, 50700, 50700, 1507, 411, 300, 13, 876, 11, 1392, 13, 286, 411, 341, 13, 407, 718, 311, 722, 365, 264, 7123, 13, 708, 307, 257, 50976, 50976, 7908, 3353, 30, 639, 472, 307, 1009, 733, 295, 12414, 13, 1743, 597, 472, 307, 264, 3353, 293, 51176, 51176, 597, 472, 307, 264, 3671, 30, 865, 11, 570, 291, 658, 7908, 35127, 11, 291, 658, 7908, 40019, 13, 51394, 51394, 407, 1338, 11, 257, 7908, 3353, 307, 562, 11, 412, 1935, 337, 257, 287, 5106, 420, 337, 257, 2290, 411, 2699, 76, 3131, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1870968969244706, "compression_ratio": 1.7710843373493976, "no_caption_prob": 5.2245519327698275e-05}, {"id": 6, "seek": 2840, "start": 40.64, "end": 44.64, "text": " false positive? This one is always kind of tricky. Like which one is the positive and", "tokens": [50364, 5215, 13, 583, 286, 519, 321, 393, 915, 2098, 577, 300, 13165, 281, 661, 721, 411, 5028, 14455, 11, 50700, 50700, 1507, 411, 300, 13, 876, 11, 1392, 13, 286, 411, 341, 13, 407, 718, 311, 722, 365, 264, 7123, 13, 708, 307, 257, 50976, 50976, 7908, 3353, 30, 639, 472, 307, 1009, 733, 295, 12414, 13, 1743, 597, 472, 307, 264, 3353, 293, 51176, 51176, 597, 472, 307, 264, 3671, 30, 865, 11, 570, 291, 658, 7908, 35127, 11, 291, 658, 7908, 40019, 13, 51394, 51394, 407, 1338, 11, 257, 7908, 3353, 307, 562, 11, 412, 1935, 337, 257, 287, 5106, 420, 337, 257, 2290, 411, 2699, 76, 3131, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1870968969244706, "compression_ratio": 1.7710843373493976, "no_caption_prob": 5.2245519327698275e-05}, {"id": 7, "seek": 2840, "start": 44.64, "end": 49.0, "text": " which one is the negative? Yeah, because you got false positives, you got false negatives.", "tokens": [50364, 5215, 13, 583, 286, 519, 321, 393, 915, 2098, 577, 300, 13165, 281, 661, 721, 411, 5028, 14455, 11, 50700, 50700, 1507, 411, 300, 13, 876, 11, 1392, 13, 286, 411, 341, 13, 407, 718, 311, 722, 365, 264, 7123, 13, 708, 307, 257, 50976, 50976, 7908, 3353, 30, 639, 472, 307, 1009, 733, 295, 12414, 13, 1743, 597, 472, 307, 264, 3353, 293, 51176, 51176, 597, 472, 307, 264, 3671, 30, 865, 11, 570, 291, 658, 7908, 35127, 11, 291, 658, 7908, 40019, 13, 51394, 51394, 407, 1338, 11, 257, 7908, 3353, 307, 562, 11, 412, 1935, 337, 257, 287, 5106, 420, 337, 257, 2290, 411, 2699, 76, 3131, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1870968969244706, "compression_ratio": 1.7710843373493976, "no_caption_prob": 5.2245519327698275e-05}, {"id": 8, "seek": 2840, "start": 49.0, "end": 55.72, "text": " So yeah, a false positive is when, at least for a linter or for a tool like Elm review", "tokens": [50364, 5215, 13, 583, 286, 519, 321, 393, 915, 2098, 577, 300, 13165, 281, 661, 721, 411, 5028, 14455, 11, 50700, 50700, 1507, 411, 300, 13, 876, 11, 1392, 13, 286, 411, 341, 13, 407, 718, 311, 722, 365, 264, 7123, 13, 708, 307, 257, 50976, 50976, 7908, 3353, 30, 639, 472, 307, 1009, 733, 295, 12414, 13, 1743, 597, 472, 307, 264, 3353, 293, 51176, 51176, 597, 472, 307, 264, 3671, 30, 865, 11, 570, 291, 658, 7908, 35127, 11, 291, 658, 7908, 40019, 13, 51394, 51394, 407, 1338, 11, 257, 7908, 3353, 307, 562, 11, 412, 1935, 337, 257, 287, 5106, 420, 337, 257, 2290, 411, 2699, 76, 3131, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.1870968969244706, "compression_ratio": 1.7710843373493976, "no_caption_prob": 5.2245519327698275e-05}, {"id": 9, "seek": 5572, "start": 55.72, "end": 63.08, "text": " for a competitor, is when the tool reports a problem when it should not. Like it tells", "tokens": [50364, 337, 257, 27266, 11, 307, 562, 264, 2290, 7122, 257, 1154, 562, 309, 820, 406, 13, 1743, 309, 5112, 50732, 50732, 291, 11, 4177, 11, 456, 311, 257, 1154, 510, 293, 767, 456, 311, 572, 1154, 13, 663, 307, 257, 7908, 3353, 13, 50954, 50954, 407, 35127, 1355, 300, 321, 519, 456, 311, 746, 293, 456, 1943, 380, 13, 400, 550, 291, 600, 658, 7908, 51296, 51296, 40019, 11, 597, 366, 264, 2290, 820, 2275, 257, 1154, 11, 457, 309, 1177, 380, 13, 400, 550, 291, 600, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.15687086293985555, "compression_ratio": 1.795, "no_caption_prob": 7.368235674221069e-05}, {"id": 10, "seek": 5572, "start": 63.08, "end": 67.52, "text": " you, hey, there's a problem here and actually there's no problem. That is a false positive.", "tokens": [50364, 337, 257, 27266, 11, 307, 562, 264, 2290, 7122, 257, 1154, 562, 309, 820, 406, 13, 1743, 309, 5112, 50732, 50732, 291, 11, 4177, 11, 456, 311, 257, 1154, 510, 293, 767, 456, 311, 572, 1154, 13, 663, 307, 257, 7908, 3353, 13, 50954, 50954, 407, 35127, 1355, 300, 321, 519, 456, 311, 746, 293, 456, 1943, 380, 13, 400, 550, 291, 600, 658, 7908, 51296, 51296, 40019, 11, 597, 366, 264, 2290, 820, 2275, 257, 1154, 11, 457, 309, 1177, 380, 13, 400, 550, 291, 600, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.15687086293985555, "compression_ratio": 1.795, "no_caption_prob": 7.368235674221069e-05}, {"id": 11, "seek": 5572, "start": 67.52, "end": 74.36, "text": " So positives means that we think there's something and there isn't. And then you've got false", "tokens": [50364, 337, 257, 27266, 11, 307, 562, 264, 2290, 7122, 257, 1154, 562, 309, 820, 406, 13, 1743, 309, 5112, 50732, 50732, 291, 11, 4177, 11, 456, 311, 257, 1154, 510, 293, 767, 456, 311, 572, 1154, 13, 663, 307, 257, 7908, 3353, 13, 50954, 50954, 407, 35127, 1355, 300, 321, 519, 456, 311, 746, 293, 456, 1943, 380, 13, 400, 550, 291, 600, 658, 7908, 51296, 51296, 40019, 11, 597, 366, 264, 2290, 820, 2275, 257, 1154, 11, 457, 309, 1177, 380, 13, 400, 550, 291, 600, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.15687086293985555, "compression_ratio": 1.795, "no_caption_prob": 7.368235674221069e-05}, {"id": 12, "seek": 5572, "start": 74.36, "end": 80.0, "text": " negatives, which are the tool should report a problem, but it doesn't. And then you've", "tokens": [50364, 337, 257, 27266, 11, 307, 562, 264, 2290, 7122, 257, 1154, 562, 309, 820, 406, 13, 1743, 309, 5112, 50732, 50732, 291, 11, 4177, 11, 456, 311, 257, 1154, 510, 293, 767, 456, 311, 572, 1154, 13, 663, 307, 257, 7908, 3353, 13, 50954, 50954, 407, 35127, 1355, 300, 321, 519, 456, 311, 746, 293, 456, 1943, 380, 13, 400, 550, 291, 600, 658, 7908, 51296, 51296, 40019, 11, 597, 366, 264, 2290, 820, 2275, 257, 1154, 11, 457, 309, 1177, 380, 13, 400, 550, 291, 600, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.15687086293985555, "compression_ratio": 1.795, "no_caption_prob": 7.368235674221069e-05}, {"id": 13, "seek": 8000, "start": 80.0, "end": 86.0, "text": " got true positives and true negatives, which are like real errors and real non errors,", "tokens": [50364, 658, 2074, 35127, 293, 2074, 40019, 11, 597, 366, 411, 957, 13603, 293, 957, 2107, 13603, 11, 50664, 50664, 597, 1338, 11, 1310, 729, 5288, 366, 3657, 13, 286, 767, 500, 380, 458, 498, 456, 366, 5288, 337, 50944, 50944, 729, 1391, 13, 865, 11, 309, 2544, 10585, 13, 759, 291, 747, 257, 4566, 1500, 293, 309, 1487, 646, 51258, 51258, 3353, 11, 309, 727, 312, 257, 7908, 3353, 11, 597, 1355, 264, 1500, 848, 291, 632, 4566, 11, 457, 291, 51512, 51512, 500, 380, 362, 4566, 13, 467, 727, 312, 257, 7908, 3671, 11, 597, 1355, 264, 1500, 848, 291, 360, 406, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.13773408642521612, "compression_ratio": 1.8836206896551724, "no_caption_prob": 2.111222784151323e-05}, {"id": 14, "seek": 8000, "start": 86.0, "end": 91.6, "text": " which yeah, maybe those names are weird. I actually don't know if there are names for", "tokens": [50364, 658, 2074, 35127, 293, 2074, 40019, 11, 597, 366, 411, 957, 13603, 293, 957, 2107, 13603, 11, 50664, 50664, 597, 1338, 11, 1310, 729, 5288, 366, 3657, 13, 286, 767, 500, 380, 458, 498, 456, 366, 5288, 337, 50944, 50944, 729, 1391, 13, 865, 11, 309, 2544, 10585, 13, 759, 291, 747, 257, 4566, 1500, 293, 309, 1487, 646, 51258, 51258, 3353, 11, 309, 727, 312, 257, 7908, 3353, 11, 597, 1355, 264, 1500, 848, 291, 632, 4566, 11, 457, 291, 51512, 51512, 500, 380, 362, 4566, 13, 467, 727, 312, 257, 7908, 3671, 11, 597, 1355, 264, 1500, 848, 291, 360, 406, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.13773408642521612, "compression_ratio": 1.8836206896551724, "no_caption_prob": 2.111222784151323e-05}, {"id": 15, "seek": 8000, "start": 91.6, "end": 97.88, "text": " those probably. Yeah, it seems reasonable. If you take a COVID test and it comes back", "tokens": [50364, 658, 2074, 35127, 293, 2074, 40019, 11, 597, 366, 411, 957, 13603, 293, 957, 2107, 13603, 11, 50664, 50664, 597, 1338, 11, 1310, 729, 5288, 366, 3657, 13, 286, 767, 500, 380, 458, 498, 456, 366, 5288, 337, 50944, 50944, 729, 1391, 13, 865, 11, 309, 2544, 10585, 13, 759, 291, 747, 257, 4566, 1500, 293, 309, 1487, 646, 51258, 51258, 3353, 11, 309, 727, 312, 257, 7908, 3353, 11, 597, 1355, 264, 1500, 848, 291, 632, 4566, 11, 457, 291, 51512, 51512, 500, 380, 362, 4566, 13, 467, 727, 312, 257, 7908, 3671, 11, 597, 1355, 264, 1500, 848, 291, 360, 406, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.13773408642521612, "compression_ratio": 1.8836206896551724, "no_caption_prob": 2.111222784151323e-05}, {"id": 16, "seek": 8000, "start": 97.88, "end": 102.96000000000001, "text": " positive, it could be a false positive, which means the test said you had COVID, but you", "tokens": [50364, 658, 2074, 35127, 293, 2074, 40019, 11, 597, 366, 411, 957, 13603, 293, 957, 2107, 13603, 11, 50664, 50664, 597, 1338, 11, 1310, 729, 5288, 366, 3657, 13, 286, 767, 500, 380, 458, 498, 456, 366, 5288, 337, 50944, 50944, 729, 1391, 13, 865, 11, 309, 2544, 10585, 13, 759, 291, 747, 257, 4566, 1500, 293, 309, 1487, 646, 51258, 51258, 3353, 11, 309, 727, 312, 257, 7908, 3353, 11, 597, 1355, 264, 1500, 848, 291, 632, 4566, 11, 457, 291, 51512, 51512, 500, 380, 362, 4566, 13, 467, 727, 312, 257, 7908, 3671, 11, 597, 1355, 264, 1500, 848, 291, 360, 406, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.13773408642521612, "compression_ratio": 1.8836206896551724, "no_caption_prob": 2.111222784151323e-05}, {"id": 17, "seek": 8000, "start": 102.96000000000001, "end": 107.24000000000001, "text": " don't have COVID. It could be a false negative, which means the test said you do not have", "tokens": [50364, 658, 2074, 35127, 293, 2074, 40019, 11, 597, 366, 411, 957, 13603, 293, 957, 2107, 13603, 11, 50664, 50664, 597, 1338, 11, 1310, 729, 5288, 366, 3657, 13, 286, 767, 500, 380, 458, 498, 456, 366, 5288, 337, 50944, 50944, 729, 1391, 13, 865, 11, 309, 2544, 10585, 13, 759, 291, 747, 257, 4566, 1500, 293, 309, 1487, 646, 51258, 51258, 3353, 11, 309, 727, 312, 257, 7908, 3353, 11, 597, 1355, 264, 1500, 848, 291, 632, 4566, 11, 457, 291, 51512, 51512, 500, 380, 362, 4566, 13, 467, 727, 312, 257, 7908, 3671, 11, 597, 1355, 264, 1500, 848, 291, 360, 406, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.13773408642521612, "compression_ratio": 1.8836206896551724, "no_caption_prob": 2.111222784151323e-05}, {"id": 18, "seek": 10724, "start": 107.24, "end": 112.44, "text": " COVID, but you do have COVID, which in fact is quite common, which kind of makes you think", "tokens": [50364, 4566, 11, 457, 291, 360, 362, 4566, 11, 597, 294, 1186, 307, 1596, 2689, 11, 597, 733, 295, 1669, 291, 519, 50624, 50624, 411, 577, 709, 2158, 307, 456, 281, 4997, 562, 456, 311, 767, 411, 11, 490, 437, 286, 1223, 11, 50840, 50840, 257, 6457, 1090, 3314, 295, 1293, 295, 729, 13, 400, 309, 445, 411, 1669, 291, 411, 1168, 264, 1379, 11, 51257, 51257, 577, 393, 286, 652, 5327, 2361, 322, 341, 1589, 11, 597, 286, 458, 307, 38823, 1596, 2049, 13, 407, 309, 311, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.09733312208573897, "compression_ratio": 1.5683760683760684, "no_caption_prob": 3.269818262197077e-05}, {"id": 19, "seek": 10724, "start": 112.44, "end": 116.75999999999999, "text": " like how much value is there to testing when there's actually like, from what I understand,", "tokens": [50364, 4566, 11, 457, 291, 360, 362, 4566, 11, 597, 294, 1186, 307, 1596, 2689, 11, 597, 733, 295, 1669, 291, 519, 50624, 50624, 411, 577, 709, 2158, 307, 456, 281, 4997, 562, 456, 311, 767, 411, 11, 490, 437, 286, 1223, 11, 50840, 50840, 257, 6457, 1090, 3314, 295, 1293, 295, 729, 13, 400, 309, 445, 411, 1669, 291, 411, 1168, 264, 1379, 11, 51257, 51257, 577, 393, 286, 652, 5327, 2361, 322, 341, 1589, 11, 597, 286, 458, 307, 38823, 1596, 2049, 13, 407, 309, 311, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.09733312208573897, "compression_ratio": 1.5683760683760684, "no_caption_prob": 3.269818262197077e-05}, {"id": 20, "seek": 10724, "start": 116.75999999999999, "end": 125.1, "text": " a fairly high rate of both of those. And it just like makes you like question the whole,", "tokens": [50364, 4566, 11, 457, 291, 360, 362, 4566, 11, 597, 294, 1186, 307, 1596, 2689, 11, 597, 733, 295, 1669, 291, 519, 50624, 50624, 411, 577, 709, 2158, 307, 456, 281, 4997, 562, 456, 311, 767, 411, 11, 490, 437, 286, 1223, 11, 50840, 50840, 257, 6457, 1090, 3314, 295, 1293, 295, 729, 13, 400, 309, 445, 411, 1669, 291, 411, 1168, 264, 1379, 11, 51257, 51257, 577, 393, 286, 652, 5327, 2361, 322, 341, 1589, 11, 597, 286, 458, 307, 38823, 1596, 2049, 13, 407, 309, 311, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.09733312208573897, "compression_ratio": 1.5683760683760684, "no_caption_prob": 3.269818262197077e-05}, {"id": 21, "seek": 10724, "start": 125.1, "end": 132.8, "text": " how can I make decisions based on this information, which I know is flawed quite often. So it's", "tokens": [50364, 4566, 11, 457, 291, 360, 362, 4566, 11, 597, 294, 1186, 307, 1596, 2689, 11, 597, 733, 295, 1669, 291, 519, 50624, 50624, 411, 577, 709, 2158, 307, 456, 281, 4997, 562, 456, 311, 767, 411, 11, 490, 437, 286, 1223, 11, 50840, 50840, 257, 6457, 1090, 3314, 295, 1293, 295, 729, 13, 400, 309, 445, 411, 1669, 291, 411, 1168, 264, 1379, 11, 51257, 51257, 577, 393, 286, 652, 5327, 2361, 322, 341, 1589, 11, 597, 286, 458, 307, 38823, 1596, 2049, 13, 407, 309, 311, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.09733312208573897, "compression_ratio": 1.5683760683760684, "no_caption_prob": 3.269818262197077e-05}, {"id": 22, "seek": 13280, "start": 132.8, "end": 138.84, "text": " a strange situation. The same dynamic applies in static analysis. If you can't rely on the", "tokens": [50364, 257, 5861, 2590, 13, 440, 912, 8546, 13165, 294, 13437, 5215, 13, 759, 291, 393, 380, 10687, 322, 264, 50666, 50666, 3542, 291, 434, 1242, 11, 309, 1669, 291, 1333, 295, 3624, 4522, 294, 437, 264, 2290, 307, 3585, 50914, 50914, 291, 13, 865, 13, 1042, 11, 456, 311, 257, 2649, 1296, 287, 16292, 293, 7195, 13, 821, 307, 13, 5780, 2171, 11, 51348, 51348, 291, 458, 11, 291, 10687, 322, 264, 32567, 291, 652, 294, 428, 3089, 337, 4625, 13846, 293, 562, 51597, 51597, 561, 311, 1585, 307, 322, 264, 1622, 13, 407, 456, 393, 312, 364, 19959, 13, 865, 11, 3122, 13, 407, 1338, 11, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1186023574691635, "compression_ratio": 1.6423357664233578, "no_caption_prob": 3.321326585137285e-05}, {"id": 23, "seek": 13280, "start": 138.84, "end": 143.8, "text": " results you're getting, it makes you sort of lose faith in what the tool is telling", "tokens": [50364, 257, 5861, 2590, 13, 440, 912, 8546, 13165, 294, 13437, 5215, 13, 759, 291, 393, 380, 10687, 322, 264, 50666, 50666, 3542, 291, 434, 1242, 11, 309, 1669, 291, 1333, 295, 3624, 4522, 294, 437, 264, 2290, 307, 3585, 50914, 50914, 291, 13, 865, 13, 1042, 11, 456, 311, 257, 2649, 1296, 287, 16292, 293, 7195, 13, 821, 307, 13, 5780, 2171, 11, 51348, 51348, 291, 458, 11, 291, 10687, 322, 264, 32567, 291, 652, 294, 428, 3089, 337, 4625, 13846, 293, 562, 51597, 51597, 561, 311, 1585, 307, 322, 264, 1622, 13, 407, 456, 393, 312, 364, 19959, 13, 865, 11, 3122, 13, 407, 1338, 11, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1186023574691635, "compression_ratio": 1.6423357664233578, "no_caption_prob": 3.321326585137285e-05}, {"id": 24, "seek": 13280, "start": 143.8, "end": 152.48000000000002, "text": " you. Yeah. Well, there's a difference between lenders and medicine. There is. Although sometimes,", "tokens": [50364, 257, 5861, 2590, 13, 440, 912, 8546, 13165, 294, 13437, 5215, 13, 759, 291, 393, 380, 10687, 322, 264, 50666, 50666, 3542, 291, 434, 1242, 11, 309, 1669, 291, 1333, 295, 3624, 4522, 294, 437, 264, 2290, 307, 3585, 50914, 50914, 291, 13, 865, 13, 1042, 11, 456, 311, 257, 2649, 1296, 287, 16292, 293, 7195, 13, 821, 307, 13, 5780, 2171, 11, 51348, 51348, 291, 458, 11, 291, 10687, 322, 264, 32567, 291, 652, 294, 428, 3089, 337, 4625, 13846, 293, 562, 51597, 51597, 561, 311, 1585, 307, 322, 264, 1622, 13, 407, 456, 393, 312, 364, 19959, 13, 865, 11, 3122, 13, 407, 1338, 11, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1186023574691635, "compression_ratio": 1.6423357664233578, "no_caption_prob": 3.321326585137285e-05}, {"id": 25, "seek": 13280, "start": 152.48000000000002, "end": 157.46, "text": " you know, you rely on the guarantees you make in your code for medical procedures and when", "tokens": [50364, 257, 5861, 2590, 13, 440, 912, 8546, 13165, 294, 13437, 5215, 13, 759, 291, 393, 380, 10687, 322, 264, 50666, 50666, 3542, 291, 434, 1242, 11, 309, 1669, 291, 1333, 295, 3624, 4522, 294, 437, 264, 2290, 307, 3585, 50914, 50914, 291, 13, 865, 13, 1042, 11, 456, 311, 257, 2649, 1296, 287, 16292, 293, 7195, 13, 821, 307, 13, 5780, 2171, 11, 51348, 51348, 291, 458, 11, 291, 10687, 322, 264, 32567, 291, 652, 294, 428, 3089, 337, 4625, 13846, 293, 562, 51597, 51597, 561, 311, 1585, 307, 322, 264, 1622, 13, 407, 456, 393, 312, 364, 19959, 13, 865, 11, 3122, 13, 407, 1338, 11, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1186023574691635, "compression_ratio": 1.6423357664233578, "no_caption_prob": 3.321326585137285e-05}, {"id": 26, "seek": 13280, "start": 157.46, "end": 162.60000000000002, "text": " people's health is on the line. So there can be an overlap. Yeah, absolutely. So yeah,", "tokens": [50364, 257, 5861, 2590, 13, 440, 912, 8546, 13165, 294, 13437, 5215, 13, 759, 291, 393, 380, 10687, 322, 264, 50666, 50666, 3542, 291, 434, 1242, 11, 309, 1669, 291, 1333, 295, 3624, 4522, 294, 437, 264, 2290, 307, 3585, 50914, 50914, 291, 13, 865, 13, 1042, 11, 456, 311, 257, 2649, 1296, 287, 16292, 293, 7195, 13, 821, 307, 13, 5780, 2171, 11, 51348, 51348, 291, 458, 11, 291, 10687, 322, 264, 32567, 291, 652, 294, 428, 3089, 337, 4625, 13846, 293, 562, 51597, 51597, 561, 311, 1585, 307, 322, 264, 1622, 13, 407, 456, 393, 312, 364, 19959, 13, 865, 11, 3122, 13, 407, 1338, 11, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1186023574691635, "compression_ratio": 1.6423357664233578, "no_caption_prob": 3.321326585137285e-05}, {"id": 27, "seek": 16260, "start": 162.6, "end": 169.96, "text": " what is in your opinion, the root cause of false positives? Well, I did see a tweet this", "tokens": [50364, 437, 307, 294, 428, 4800, 11, 264, 5593, 3082, 295, 7908, 35127, 30, 1042, 11, 286, 630, 536, 257, 15258, 341, 50732, 50732, 2446, 300, 286, 390, 1953, 1310, 820, 362, 668, 12658, 365, 26927, 9164, 11, 412, 1935, 50978, 50978, 337, 2699, 76, 17296, 598, 21573, 13, 286, 10879, 15978, 309, 13, 961, 385, 853, 281, 2870, 286, 1562, 1866, 300, 293, 536, 51448, 51448, 498, 286, 393, 1867, 264, 1168, 1553, 4059, 3601, 13, 2555, 2870, 264, 3006, 1867, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1284540198570074, "compression_ratio": 1.5301724137931034, "no_caption_prob": 2.5071061827475205e-05}, {"id": 28, "seek": 16260, "start": 169.96, "end": 174.88, "text": " morning that I was thinking maybe should have been marked with spoiler warning, at least", "tokens": [50364, 437, 307, 294, 428, 4800, 11, 264, 5593, 3082, 295, 7908, 35127, 30, 1042, 11, 286, 630, 536, 257, 15258, 341, 50732, 50732, 2446, 300, 286, 390, 1953, 1310, 820, 362, 668, 12658, 365, 26927, 9164, 11, 412, 1935, 50978, 50978, 337, 2699, 76, 17296, 598, 21573, 13, 286, 10879, 15978, 309, 13, 961, 385, 853, 281, 2870, 286, 1562, 1866, 300, 293, 536, 51448, 51448, 498, 286, 393, 1867, 264, 1168, 1553, 4059, 3601, 13, 2555, 2870, 264, 3006, 1867, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1284540198570074, "compression_ratio": 1.5301724137931034, "no_caption_prob": 2.5071061827475205e-05}, {"id": 29, "seek": 16260, "start": 174.88, "end": 184.28, "text": " for Elm Radio co hosts. I regret posting it. Let me try to forget I ever saw that and see", "tokens": [50364, 437, 307, 294, 428, 4800, 11, 264, 5593, 3082, 295, 7908, 35127, 30, 1042, 11, 286, 630, 536, 257, 15258, 341, 50732, 50732, 2446, 300, 286, 390, 1953, 1310, 820, 362, 668, 12658, 365, 26927, 9164, 11, 412, 1935, 50978, 50978, 337, 2699, 76, 17296, 598, 21573, 13, 286, 10879, 15978, 309, 13, 961, 385, 853, 281, 2870, 286, 1562, 1866, 300, 293, 536, 51448, 51448, 498, 286, 393, 1867, 264, 1168, 1553, 4059, 3601, 13, 2555, 2870, 264, 3006, 1867, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1284540198570074, "compression_ratio": 1.5301724137931034, "no_caption_prob": 2.5071061827475205e-05}, {"id": 30, "seek": 16260, "start": 184.28, "end": 191.51999999999998, "text": " if I can answer the question without prior knowledge. Please forget the correct answer.", "tokens": [50364, 437, 307, 294, 428, 4800, 11, 264, 5593, 3082, 295, 7908, 35127, 30, 1042, 11, 286, 630, 536, 257, 15258, 341, 50732, 50732, 2446, 300, 286, 390, 1953, 1310, 820, 362, 668, 12658, 365, 26927, 9164, 11, 412, 1935, 50978, 50978, 337, 2699, 76, 17296, 598, 21573, 13, 286, 10879, 15978, 309, 13, 961, 385, 853, 281, 2870, 286, 1562, 1866, 300, 293, 536, 51448, 51448, 498, 286, 393, 1867, 264, 1168, 1553, 4059, 3601, 13, 2555, 2870, 264, 3006, 1867, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1284540198570074, "compression_ratio": 1.5301724137931034, "no_caption_prob": 2.5071061827475205e-05}, {"id": 31, "seek": 19152, "start": 191.52, "end": 196.68, "text": " Which was a very good tweet, by the way. We will link to that tweet. I will explain it,", "tokens": [50364, 3013, 390, 257, 588, 665, 15258, 11, 538, 264, 636, 13, 492, 486, 2113, 281, 300, 15258, 13, 286, 486, 2903, 309, 11, 50622, 50622, 286, 2041, 13, 467, 311, 1152, 406, 281, 312, 28035, 538, 264, 1481, 15258, 291, 4114, 11, 457, 286, 576, 3928, 281, 50956, 50956, 519, 295, 309, 382, 411, 1310, 14024, 13, 1743, 577, 3997, 307, 364, 1867, 13, 1743, 498, 291, 434, 1237, 51440, 51440, 412, 257, 24122, 2535, 293, 291, 528, 281, 584, 11, 307, 456, 257, 7579, 1520, 13963, 294, 341, 24122, 2535, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1731467843055725, "compression_ratio": 1.6227272727272728, "no_caption_prob": 0.00012146650260547176}, {"id": 32, "seek": 19152, "start": 196.68, "end": 203.36, "text": " I guess. It's hard not to be biased by the nice tweet you wrote, but I would tend to", "tokens": [50364, 3013, 390, 257, 588, 665, 15258, 11, 538, 264, 636, 13, 492, 486, 2113, 281, 300, 15258, 13, 286, 486, 2903, 309, 11, 50622, 50622, 286, 2041, 13, 467, 311, 1152, 406, 281, 312, 28035, 538, 264, 1481, 15258, 291, 4114, 11, 457, 286, 576, 3928, 281, 50956, 50956, 519, 295, 309, 382, 411, 1310, 14024, 13, 1743, 577, 3997, 307, 364, 1867, 13, 1743, 498, 291, 434, 1237, 51440, 51440, 412, 257, 24122, 2535, 293, 291, 528, 281, 584, 11, 307, 456, 257, 7579, 1520, 13963, 294, 341, 24122, 2535, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1731467843055725, "compression_ratio": 1.6227272727272728, "no_caption_prob": 0.00012146650260547176}, {"id": 33, "seek": 19152, "start": 203.36, "end": 213.04000000000002, "text": " think of it as like maybe complexity. Like how complex is an answer. Like if you're looking", "tokens": [50364, 3013, 390, 257, 588, 665, 15258, 11, 538, 264, 636, 13, 492, 486, 2113, 281, 300, 15258, 13, 286, 486, 2903, 309, 11, 50622, 50622, 286, 2041, 13, 467, 311, 1152, 406, 281, 312, 28035, 538, 264, 1481, 15258, 291, 4114, 11, 457, 286, 576, 3928, 281, 50956, 50956, 519, 295, 309, 382, 411, 1310, 14024, 13, 1743, 577, 3997, 307, 364, 1867, 13, 1743, 498, 291, 434, 1237, 51440, 51440, 412, 257, 24122, 2535, 293, 291, 528, 281, 584, 11, 307, 456, 257, 7579, 1520, 13963, 294, 341, 24122, 2535, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1731467843055725, "compression_ratio": 1.6227272727272728, "no_caption_prob": 0.00012146650260547176}, {"id": 34, "seek": 19152, "start": 213.04000000000002, "end": 220.48000000000002, "text": " at a chess position and you want to say, is there a forced checkmate in this chess position?", "tokens": [50364, 3013, 390, 257, 588, 665, 15258, 11, 538, 264, 636, 13, 492, 486, 2113, 281, 300, 15258, 13, 286, 486, 2903, 309, 11, 50622, 50622, 286, 2041, 13, 467, 311, 1152, 406, 281, 312, 28035, 538, 264, 1481, 15258, 291, 4114, 11, 457, 286, 576, 3928, 281, 50956, 50956, 519, 295, 309, 382, 411, 1310, 14024, 13, 1743, 577, 3997, 307, 364, 1867, 13, 1743, 498, 291, 434, 1237, 51440, 51440, 412, 257, 24122, 2535, 293, 291, 528, 281, 584, 11, 307, 456, 257, 7579, 1520, 13963, 294, 341, 24122, 2535, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.1731467843055725, "compression_ratio": 1.6227272727272728, "no_caption_prob": 0.00012146650260547176}, {"id": 35, "seek": 22048, "start": 220.48, "end": 226.07999999999998, "text": " It's easier to, you know, if you can confirm that there is, you know that there is. But", "tokens": [50364, 467, 311, 3571, 281, 11, 291, 458, 11, 498, 291, 393, 9064, 300, 456, 307, 11, 291, 458, 300, 456, 307, 13, 583, 50644, 50644, 498, 291, 393, 380, 11, 1310, 456, 307, 472, 11, 457, 309, 311, 370, 3997, 13, 821, 311, 445, 370, 709, 14024, 50970, 50970, 281, 264, 2535, 300, 456, 366, 6217, 13785, 12178, 13, 407, 309, 311, 588, 1152, 337, 291, 281, 51266, 51266, 584, 13, 1743, 498, 291, 574, 412, 364, 5193, 24122, 2535, 11, 307, 456, 411, 257, 7579, 1520, 13963, 30, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14223100805795322, "compression_ratio": 1.6794258373205742, "no_caption_prob": 0.00020340287301223725}, {"id": 36, "seek": 22048, "start": 226.07999999999998, "end": 232.6, "text": " if you can't, maybe there is one, but it's so complex. There's just so much complexity", "tokens": [50364, 467, 311, 3571, 281, 11, 291, 458, 11, 498, 291, 393, 9064, 300, 456, 307, 11, 291, 458, 300, 456, 307, 13, 583, 50644, 50644, 498, 291, 393, 380, 11, 1310, 456, 307, 472, 11, 457, 309, 311, 370, 3997, 13, 821, 311, 445, 370, 709, 14024, 50970, 50970, 281, 264, 2535, 300, 456, 366, 6217, 13785, 12178, 13, 407, 309, 311, 588, 1152, 337, 291, 281, 51266, 51266, 584, 13, 1743, 498, 291, 574, 412, 364, 5193, 24122, 2535, 11, 307, 456, 411, 257, 7579, 1520, 13963, 30, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14223100805795322, "compression_ratio": 1.6794258373205742, "no_caption_prob": 0.00020340287301223725}, {"id": 37, "seek": 22048, "start": 232.6, "end": 238.51999999999998, "text": " to the position that there are nearly infinite possibilities. So it's very hard for you to", "tokens": [50364, 467, 311, 3571, 281, 11, 291, 458, 11, 498, 291, 393, 9064, 300, 456, 307, 11, 291, 458, 300, 456, 307, 13, 583, 50644, 50644, 498, 291, 393, 380, 11, 1310, 456, 307, 472, 11, 457, 309, 311, 370, 3997, 13, 821, 311, 445, 370, 709, 14024, 50970, 50970, 281, 264, 2535, 300, 456, 366, 6217, 13785, 12178, 13, 407, 309, 311, 588, 1152, 337, 291, 281, 51266, 51266, 584, 13, 1743, 498, 291, 574, 412, 364, 5193, 24122, 2535, 11, 307, 456, 411, 257, 7579, 1520, 13963, 30, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14223100805795322, "compression_ratio": 1.6794258373205742, "no_caption_prob": 0.00020340287301223725}, {"id": 38, "seek": 22048, "start": 238.51999999999998, "end": 245.51999999999998, "text": " say. Like if you look at an opening chess position, is there like a forced checkmate?", "tokens": [50364, 467, 311, 3571, 281, 11, 291, 458, 11, 498, 291, 393, 9064, 300, 456, 307, 11, 291, 458, 300, 456, 307, 13, 583, 50644, 50644, 498, 291, 393, 380, 11, 1310, 456, 307, 472, 11, 457, 309, 311, 370, 3997, 13, 821, 311, 445, 370, 709, 14024, 50970, 50970, 281, 264, 2535, 300, 456, 366, 6217, 13785, 12178, 13, 407, 309, 311, 588, 1152, 337, 291, 281, 51266, 51266, 584, 13, 1743, 498, 291, 574, 412, 364, 5193, 24122, 2535, 11, 307, 456, 411, 257, 7579, 1520, 13963, 30, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.14223100805795322, "compression_ratio": 1.6794258373205742, "no_caption_prob": 0.00020340287301223725}, {"id": 39, "seek": 24552, "start": 245.52, "end": 253.20000000000002, "text": " Like maybe, I don't know, if I had infinite capacity to process infinite lines, then maybe", "tokens": [50364, 1743, 1310, 11, 286, 500, 380, 458, 11, 498, 286, 632, 13785, 6042, 281, 1399, 13785, 3876, 11, 550, 1310, 50748, 50748, 286, 727, 1867, 300, 13, 583, 309, 311, 445, 886, 3997, 337, 385, 281, 584, 2086, 420, 572, 13, 51016, 51016, 865, 11, 309, 311, 534, 1858, 281, 2573, 484, 1968, 456, 311, 257, 7579, 1520, 13963, 498, 291, 362, 732, 51365, 51365, 3755, 322, 264, 3150, 293, 436, 393, 1293, 787, 1286, 11, 360, 472, 1286, 11, 550, 309, 311, 534, 1858, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13130682839287652, "compression_ratio": 1.5654205607476634, "no_caption_prob": 0.00018233314040116966}, {"id": 40, "seek": 24552, "start": 253.20000000000002, "end": 258.56, "text": " I could answer that. But it's just too complex for me to say yes or no.", "tokens": [50364, 1743, 1310, 11, 286, 500, 380, 458, 11, 498, 286, 632, 13785, 6042, 281, 1399, 13785, 3876, 11, 550, 1310, 50748, 50748, 286, 727, 1867, 300, 13, 583, 309, 311, 445, 886, 3997, 337, 385, 281, 584, 2086, 420, 572, 13, 51016, 51016, 865, 11, 309, 311, 534, 1858, 281, 2573, 484, 1968, 456, 311, 257, 7579, 1520, 13963, 498, 291, 362, 732, 51365, 51365, 3755, 322, 264, 3150, 293, 436, 393, 1293, 787, 1286, 11, 360, 472, 1286, 11, 550, 309, 311, 534, 1858, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13130682839287652, "compression_ratio": 1.5654205607476634, "no_caption_prob": 0.00018233314040116966}, {"id": 41, "seek": 24552, "start": 258.56, "end": 265.54, "text": " Yeah, it's really easy to figure out whether there's a forced checkmate if you have two", "tokens": [50364, 1743, 1310, 11, 286, 500, 380, 458, 11, 498, 286, 632, 13785, 6042, 281, 1399, 13785, 3876, 11, 550, 1310, 50748, 50748, 286, 727, 1867, 300, 13, 583, 309, 311, 445, 886, 3997, 337, 385, 281, 584, 2086, 420, 572, 13, 51016, 51016, 865, 11, 309, 311, 534, 1858, 281, 2573, 484, 1968, 456, 311, 257, 7579, 1520, 13963, 498, 291, 362, 732, 51365, 51365, 3755, 322, 264, 3150, 293, 436, 393, 1293, 787, 1286, 11, 360, 472, 1286, 11, 550, 309, 311, 534, 1858, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13130682839287652, "compression_ratio": 1.5654205607476634, "no_caption_prob": 0.00018233314040116966}, {"id": 42, "seek": 24552, "start": 265.54, "end": 272.92, "text": " pieces on the board and they can both only move, do one move, then it's really easy.", "tokens": [50364, 1743, 1310, 11, 286, 500, 380, 458, 11, 498, 286, 632, 13785, 6042, 281, 1399, 13785, 3876, 11, 550, 1310, 50748, 50748, 286, 727, 1867, 300, 13, 583, 309, 311, 445, 886, 3997, 337, 385, 281, 584, 2086, 420, 572, 13, 51016, 51016, 865, 11, 309, 311, 534, 1858, 281, 2573, 484, 1968, 456, 311, 257, 7579, 1520, 13963, 498, 291, 362, 732, 51365, 51365, 3755, 322, 264, 3150, 293, 436, 393, 1293, 787, 1286, 11, 360, 472, 1286, 11, 550, 309, 311, 534, 1858, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13130682839287652, "compression_ratio": 1.5654205607476634, "no_caption_prob": 0.00018233314040116966}, {"id": 43, "seek": 27292, "start": 272.92, "end": 278.84000000000003, "text": " Like you got two or three, four things to check, depending on how things work. And that's", "tokens": [50364, 1743, 291, 658, 732, 420, 1045, 11, 1451, 721, 281, 1520, 11, 5413, 322, 577, 721, 589, 13, 400, 300, 311, 50660, 50660, 309, 13, 583, 498, 291, 658, 1266, 11, 945, 3755, 322, 264, 3150, 293, 436, 393, 439, 1286, 294, 370, 867, 11095, 11, 51026, 51026, 1338, 11, 721, 1813, 257, 688, 6081, 13, 509, 362, 257, 688, 544, 13834, 281, 360, 13, 509, 362, 257, 688, 544, 51278, 51278, 15077, 281, 13059, 13, 51440, 51440, 41184, 507, 307, 294, 452, 4800, 11, 337, 988, 11, 257, 3082, 295, 7908, 35127, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.17677556251992985, "compression_ratio": 1.5982142857142858, "no_caption_prob": 2.1444369849632494e-05}, {"id": 44, "seek": 27292, "start": 278.84000000000003, "end": 286.16, "text": " it. But if you got 10, 20 pieces on the board and they can all move in so many directions,", "tokens": [50364, 1743, 291, 658, 732, 420, 1045, 11, 1451, 721, 281, 1520, 11, 5413, 322, 577, 721, 589, 13, 400, 300, 311, 50660, 50660, 309, 13, 583, 498, 291, 658, 1266, 11, 945, 3755, 322, 264, 3150, 293, 436, 393, 439, 1286, 294, 370, 867, 11095, 11, 51026, 51026, 1338, 11, 721, 1813, 257, 688, 6081, 13, 509, 362, 257, 688, 544, 13834, 281, 360, 13, 509, 362, 257, 688, 544, 51278, 51278, 15077, 281, 13059, 13, 51440, 51440, 41184, 507, 307, 294, 452, 4800, 11, 337, 988, 11, 257, 3082, 295, 7908, 35127, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.17677556251992985, "compression_ratio": 1.5982142857142858, "no_caption_prob": 2.1444369849632494e-05}, {"id": 45, "seek": 27292, "start": 286.16, "end": 291.20000000000005, "text": " yeah, things become a lot harder. You have a lot more checks to do. You have a lot more", "tokens": [50364, 1743, 291, 658, 732, 420, 1045, 11, 1451, 721, 281, 1520, 11, 5413, 322, 577, 721, 589, 13, 400, 300, 311, 50660, 50660, 309, 13, 583, 498, 291, 658, 1266, 11, 945, 3755, 322, 264, 3150, 293, 436, 393, 439, 1286, 294, 370, 867, 11095, 11, 51026, 51026, 1338, 11, 721, 1813, 257, 688, 6081, 13, 509, 362, 257, 688, 544, 13834, 281, 360, 13, 509, 362, 257, 688, 544, 51278, 51278, 15077, 281, 13059, 13, 51440, 51440, 41184, 507, 307, 294, 452, 4800, 11, 337, 988, 11, 257, 3082, 295, 7908, 35127, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.17677556251992985, "compression_ratio": 1.5982142857142858, "no_caption_prob": 2.1444369849632494e-05}, {"id": 46, "seek": 27292, "start": 291.20000000000005, "end": 294.44, "text": " scenarios to evaluate.", "tokens": [50364, 1743, 291, 658, 732, 420, 1045, 11, 1451, 721, 281, 1520, 11, 5413, 322, 577, 721, 589, 13, 400, 300, 311, 50660, 50660, 309, 13, 583, 498, 291, 658, 1266, 11, 945, 3755, 322, 264, 3150, 293, 436, 393, 439, 1286, 294, 370, 867, 11095, 11, 51026, 51026, 1338, 11, 721, 1813, 257, 688, 6081, 13, 509, 362, 257, 688, 544, 13834, 281, 360, 13, 509, 362, 257, 688, 544, 51278, 51278, 15077, 281, 13059, 13, 51440, 51440, 41184, 507, 307, 294, 452, 4800, 11, 337, 988, 11, 257, 3082, 295, 7908, 35127, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.17677556251992985, "compression_ratio": 1.5982142857142858, "no_caption_prob": 2.1444369849632494e-05}, {"id": 47, "seek": 27292, "start": 294.44, "end": 299.04, "text": " Complexity is in my opinion, for sure, a cause of false positives.", "tokens": [50364, 1743, 291, 658, 732, 420, 1045, 11, 1451, 721, 281, 1520, 11, 5413, 322, 577, 721, 589, 13, 400, 300, 311, 50660, 50660, 309, 13, 583, 498, 291, 658, 1266, 11, 945, 3755, 322, 264, 3150, 293, 436, 393, 439, 1286, 294, 370, 867, 11095, 11, 51026, 51026, 1338, 11, 721, 1813, 257, 688, 6081, 13, 509, 362, 257, 688, 544, 13834, 281, 360, 13, 509, 362, 257, 688, 544, 51278, 51278, 15077, 281, 13059, 13, 51440, 51440, 41184, 507, 307, 294, 452, 4800, 11, 337, 988, 11, 257, 3082, 295, 7908, 35127, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.17677556251992985, "compression_ratio": 1.5982142857142858, "no_caption_prob": 2.1444369849632494e-05}, {"id": 48, "seek": 29904, "start": 299.04, "end": 307.36, "text": " Yeah. And if you can rule things out and if you can eliminate variables, that helps eliminate", "tokens": [50364, 865, 13, 400, 498, 291, 393, 4978, 721, 484, 293, 498, 291, 393, 13819, 9102, 11, 300, 3665, 13819, 50780, 50780, 300, 13, 1018, 291, 848, 11, 300, 311, 257, 588, 665, 1365, 365, 498, 291, 445, 362, 1451, 3755, 322, 264, 3150, 51048, 51048, 294, 257, 24122, 1216, 11, 293, 393, 291, 1867, 300, 1168, 30, 1711, 300, 935, 11, 291, 393, 1867, 300, 365, 6687, 13, 51340, 51340, 759, 291, 393, 584, 11, 293, 2171, 309, 311, 3571, 281, 584, 8177, 538, 9123, 8177, 13, 400, 9123, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.10905132498792423, "compression_ratio": 1.7419354838709677, "no_caption_prob": 5.6494591262890026e-05}, {"id": 49, "seek": 29904, "start": 307.36, "end": 312.72, "text": " that. As you said, that's a very good example with if you just have four pieces on the board", "tokens": [50364, 865, 13, 400, 498, 291, 393, 4978, 721, 484, 293, 498, 291, 393, 13819, 9102, 11, 300, 3665, 13819, 50780, 50780, 300, 13, 1018, 291, 848, 11, 300, 311, 257, 588, 665, 1365, 365, 498, 291, 445, 362, 1451, 3755, 322, 264, 3150, 51048, 51048, 294, 257, 24122, 1216, 11, 293, 393, 291, 1867, 300, 1168, 30, 1711, 300, 935, 11, 291, 393, 1867, 300, 365, 6687, 13, 51340, 51340, 759, 291, 393, 584, 11, 293, 2171, 309, 311, 3571, 281, 584, 8177, 538, 9123, 8177, 13, 400, 9123, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.10905132498792423, "compression_ratio": 1.7419354838709677, "no_caption_prob": 5.6494591262890026e-05}, {"id": 50, "seek": 29904, "start": 312.72, "end": 318.56, "text": " in a chess game, and can you answer that question? At that point, you can answer that with confidence.", "tokens": [50364, 865, 13, 400, 498, 291, 393, 4978, 721, 484, 293, 498, 291, 393, 13819, 9102, 11, 300, 3665, 13819, 50780, 50780, 300, 13, 1018, 291, 848, 11, 300, 311, 257, 588, 665, 1365, 365, 498, 291, 445, 362, 1451, 3755, 322, 264, 3150, 51048, 51048, 294, 257, 24122, 1216, 11, 293, 393, 291, 1867, 300, 1168, 30, 1711, 300, 935, 11, 291, 393, 1867, 300, 365, 6687, 13, 51340, 51340, 759, 291, 393, 584, 11, 293, 2171, 309, 311, 3571, 281, 584, 8177, 538, 9123, 8177, 13, 400, 9123, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.10905132498792423, "compression_ratio": 1.7419354838709677, "no_caption_prob": 5.6494591262890026e-05}, {"id": 51, "seek": 29904, "start": 318.56, "end": 324.84000000000003, "text": " If you can say, and sometimes it's easier to say proof by existence proof. And existence", "tokens": [50364, 865, 13, 400, 498, 291, 393, 4978, 721, 484, 293, 498, 291, 393, 13819, 9102, 11, 300, 3665, 13819, 50780, 50780, 300, 13, 1018, 291, 848, 11, 300, 311, 257, 588, 665, 1365, 365, 498, 291, 445, 362, 1451, 3755, 322, 264, 3150, 51048, 51048, 294, 257, 24122, 1216, 11, 293, 393, 291, 1867, 300, 1168, 30, 1711, 300, 935, 11, 291, 393, 1867, 300, 365, 6687, 13, 51340, 51340, 759, 291, 393, 584, 11, 293, 2171, 309, 311, 3571, 281, 584, 8177, 538, 9123, 8177, 13, 400, 9123, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.10905132498792423, "compression_ratio": 1.7419354838709677, "no_caption_prob": 5.6494591262890026e-05}, {"id": 52, "seek": 32484, "start": 324.84, "end": 331.76, "text": " proof is easy. I mean, if you can find it, but sometimes proving absence is difficult.", "tokens": [50364, 8177, 307, 1858, 13, 286, 914, 11, 498, 291, 393, 915, 309, 11, 457, 2171, 27221, 17145, 307, 2252, 13, 50710, 50710, 509, 727, 7081, 9123, 411, 11, 360, 2211, 9009, 2514, 30, 1042, 11, 286, 393, 574, 484, 452, 4910, 293, 51129, 51129, 536, 257, 6401, 293, 584, 11, 2086, 11, 456, 366, 2211, 9009, 11, 457, 550, 360, 485, 51312, 51312, 28150, 11, 309, 311, 257, 23627, 13, 51412, 51412, 1042, 11, 550, 4317, 13, 400, 286, 914, 11, 1338, 11, 309, 775, 483, 1596, 25066, 13, 1743, 437, 393, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.19865039943419782, "compression_ratio": 1.5394736842105263, "no_caption_prob": 1.805816646083258e-05}, {"id": 53, "seek": 32484, "start": 331.76, "end": 340.14, "text": " You could prove existence like, do black birds exist? Well, I can look out my window and", "tokens": [50364, 8177, 307, 1858, 13, 286, 914, 11, 498, 291, 393, 915, 309, 11, 457, 2171, 27221, 17145, 307, 2252, 13, 50710, 50710, 509, 727, 7081, 9123, 411, 11, 360, 2211, 9009, 2514, 30, 1042, 11, 286, 393, 574, 484, 452, 4910, 293, 51129, 51129, 536, 257, 6401, 293, 584, 11, 2086, 11, 456, 366, 2211, 9009, 11, 457, 550, 360, 485, 51312, 51312, 28150, 11, 309, 311, 257, 23627, 13, 51412, 51412, 1042, 11, 550, 4317, 13, 400, 286, 914, 11, 1338, 11, 309, 775, 483, 1596, 25066, 13, 1743, 437, 393, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.19865039943419782, "compression_ratio": 1.5394736842105263, "no_caption_prob": 1.805816646083258e-05}, {"id": 54, "seek": 32484, "start": 340.14, "end": 343.79999999999995, "text": " see a crow and say, yes, there are black birds, but then do...", "tokens": [50364, 8177, 307, 1858, 13, 286, 914, 11, 498, 291, 393, 915, 309, 11, 457, 2171, 27221, 17145, 307, 2252, 13, 50710, 50710, 509, 727, 7081, 9123, 411, 11, 360, 2211, 9009, 2514, 30, 1042, 11, 286, 393, 574, 484, 452, 4910, 293, 51129, 51129, 536, 257, 6401, 293, 584, 11, 2086, 11, 456, 366, 2211, 9009, 11, 457, 550, 360, 485, 51312, 51312, 28150, 11, 309, 311, 257, 23627, 13, 51412, 51412, 1042, 11, 550, 4317, 13, 400, 286, 914, 11, 1338, 11, 309, 775, 483, 1596, 25066, 13, 1743, 437, 393, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.19865039943419782, "compression_ratio": 1.5394736842105263, "no_caption_prob": 1.805816646083258e-05}, {"id": 55, "seek": 32484, "start": 343.79999999999995, "end": 345.79999999999995, "text": " Wrong, it's a dinosaur.", "tokens": [50364, 8177, 307, 1858, 13, 286, 914, 11, 498, 291, 393, 915, 309, 11, 457, 2171, 27221, 17145, 307, 2252, 13, 50710, 50710, 509, 727, 7081, 9123, 411, 11, 360, 2211, 9009, 2514, 30, 1042, 11, 286, 393, 574, 484, 452, 4910, 293, 51129, 51129, 536, 257, 6401, 293, 584, 11, 2086, 11, 456, 366, 2211, 9009, 11, 457, 550, 360, 485, 51312, 51312, 28150, 11, 309, 311, 257, 23627, 13, 51412, 51412, 1042, 11, 550, 4317, 13, 400, 286, 914, 11, 1338, 11, 309, 775, 483, 1596, 25066, 13, 1743, 437, 393, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.19865039943419782, "compression_ratio": 1.5394736842105263, "no_caption_prob": 1.805816646083258e-05}, {"id": 56, "seek": 32484, "start": 345.79999999999995, "end": 352.71999999999997, "text": " Well, then perhaps. And I mean, yeah, it does get quite philosophical. Like what can you", "tokens": [50364, 8177, 307, 1858, 13, 286, 914, 11, 498, 291, 393, 915, 309, 11, 457, 2171, 27221, 17145, 307, 2252, 13, 50710, 50710, 509, 727, 7081, 9123, 411, 11, 360, 2211, 9009, 2514, 30, 1042, 11, 286, 393, 574, 484, 452, 4910, 293, 51129, 51129, 536, 257, 6401, 293, 584, 11, 2086, 11, 456, 366, 2211, 9009, 11, 457, 550, 360, 485, 51312, 51312, 28150, 11, 309, 311, 257, 23627, 13, 51412, 51412, 1042, 11, 550, 4317, 13, 400, 286, 914, 11, 1338, 11, 309, 775, 483, 1596, 25066, 13, 1743, 437, 393, 291, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.19865039943419782, "compression_ratio": 1.5394736842105263, "no_caption_prob": 1.805816646083258e-05}, {"id": 57, "seek": 35272, "start": 352.72, "end": 357.8, "text": " know? In a way, this is sort of like the term epistemology comes to mind, which is just", "tokens": [50364, 458, 30, 682, 257, 636, 11, 341, 307, 1333, 295, 411, 264, 1433, 2388, 43958, 1793, 1487, 281, 1575, 11, 597, 307, 445, 50618, 50618, 1333, 295, 437, 307, 458, 712, 13, 400, 286, 2049, 1352, 309, 16522, 294, 10675, 5359, 562, 51134, 51134, 2388, 43958, 1793, 1487, 493, 13, 286, 1009, 1352, 300, 4829, 4664, 16522, 294, 257, 25066, 51371, 51371, 4319, 570, 309, 311, 733, 295, 257, 3116, 917, 570, 291, 584, 437, 393, 312, 2570, 30, 400, 412, 264, 917, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.1246600753959568, "compression_ratio": 1.6572769953051643, "no_caption_prob": 3.321309122839011e-05}, {"id": 58, "seek": 35272, "start": 357.8, "end": 368.12, "text": " sort of what is knowable. And I often found it frustrating in philosophy classes when", "tokens": [50364, 458, 30, 682, 257, 636, 11, 341, 307, 1333, 295, 411, 264, 1433, 2388, 43958, 1793, 1487, 281, 1575, 11, 597, 307, 445, 50618, 50618, 1333, 295, 437, 307, 458, 712, 13, 400, 286, 2049, 1352, 309, 16522, 294, 10675, 5359, 562, 51134, 51134, 2388, 43958, 1793, 1487, 493, 13, 286, 1009, 1352, 300, 4829, 4664, 16522, 294, 257, 25066, 51371, 51371, 4319, 570, 309, 311, 733, 295, 257, 3116, 917, 570, 291, 584, 437, 393, 312, 2570, 30, 400, 412, 264, 917, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.1246600753959568, "compression_ratio": 1.6572769953051643, "no_caption_prob": 3.321309122839011e-05}, {"id": 59, "seek": 35272, "start": 368.12, "end": 372.86, "text": " epistemology comes up. I always found that topic extremely frustrating in a philosophical", "tokens": [50364, 458, 30, 682, 257, 636, 11, 341, 307, 1333, 295, 411, 264, 1433, 2388, 43958, 1793, 1487, 281, 1575, 11, 597, 307, 445, 50618, 50618, 1333, 295, 437, 307, 458, 712, 13, 400, 286, 2049, 1352, 309, 16522, 294, 10675, 5359, 562, 51134, 51134, 2388, 43958, 1793, 1487, 493, 13, 286, 1009, 1352, 300, 4829, 4664, 16522, 294, 257, 25066, 51371, 51371, 4319, 570, 309, 311, 733, 295, 257, 3116, 917, 570, 291, 584, 437, 393, 312, 2570, 30, 400, 412, 264, 917, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.1246600753959568, "compression_ratio": 1.6572769953051643, "no_caption_prob": 3.321309122839011e-05}, {"id": 60, "seek": 35272, "start": 372.86, "end": 379.26000000000005, "text": " context because it's kind of a dead end because you say what can be known? And at the end", "tokens": [50364, 458, 30, 682, 257, 636, 11, 341, 307, 1333, 295, 411, 264, 1433, 2388, 43958, 1793, 1487, 281, 1575, 11, 597, 307, 445, 50618, 50618, 1333, 295, 437, 307, 458, 712, 13, 400, 286, 2049, 1352, 309, 16522, 294, 10675, 5359, 562, 51134, 51134, 2388, 43958, 1793, 1487, 493, 13, 286, 1009, 1352, 300, 4829, 4664, 16522, 294, 257, 25066, 51371, 51371, 4319, 570, 309, 311, 733, 295, 257, 3116, 917, 570, 291, 584, 437, 393, 312, 2570, 30, 400, 412, 264, 917, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.1246600753959568, "compression_ratio": 1.6572769953051643, "no_caption_prob": 3.321309122839011e-05}, {"id": 61, "seek": 37926, "start": 379.26, "end": 385.03999999999996, "text": " of the day, you basically get to Descartes conclusion. I think therefore I am, which", "tokens": [50364, 295, 264, 786, 11, 291, 1936, 483, 281, 3885, 44672, 279, 10063, 13, 286, 519, 4412, 286, 669, 11, 597, 50653, 50653, 307, 281, 584, 300, 307, 264, 787, 551, 300, 286, 393, 7081, 13, 440, 787, 551, 300, 311, 458, 712, 570, 50929, 50929, 452, 17057, 393, 3346, 306, 345, 385, 13, 286, 393, 536, 11, 362, 286, 1562, 1612, 746, 293, 808, 281, 264, 2085, 51308, 51308, 10063, 466, 437, 309, 390, 293, 1780, 6941, 300, 286, 390, 2085, 30, 407, 577, 393, 321, 3361, 1340, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.1346922439077626, "compression_ratio": 1.6376146788990826, "no_caption_prob": 1.2606590644281823e-05}, {"id": 62, "seek": 37926, "start": 385.03999999999996, "end": 390.56, "text": " is to say that is the only thing that I can prove. The only thing that's knowable because", "tokens": [50364, 295, 264, 786, 11, 291, 1936, 483, 281, 3885, 44672, 279, 10063, 13, 286, 519, 4412, 286, 669, 11, 597, 50653, 50653, 307, 281, 584, 300, 307, 264, 787, 551, 300, 286, 393, 7081, 13, 440, 787, 551, 300, 311, 458, 712, 570, 50929, 50929, 452, 17057, 393, 3346, 306, 345, 385, 13, 286, 393, 536, 11, 362, 286, 1562, 1612, 746, 293, 808, 281, 264, 2085, 51308, 51308, 10063, 466, 437, 309, 390, 293, 1780, 6941, 300, 286, 390, 2085, 30, 407, 577, 393, 321, 3361, 1340, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.1346922439077626, "compression_ratio": 1.6376146788990826, "no_caption_prob": 1.2606590644281823e-05}, {"id": 63, "seek": 37926, "start": 390.56, "end": 398.14, "text": " my senses can mislead me. I can see, have I ever seen something and come to the wrong", "tokens": [50364, 295, 264, 786, 11, 291, 1936, 483, 281, 3885, 44672, 279, 10063, 13, 286, 519, 4412, 286, 669, 11, 597, 50653, 50653, 307, 281, 584, 300, 307, 264, 787, 551, 300, 286, 393, 7081, 13, 440, 787, 551, 300, 311, 458, 712, 570, 50929, 50929, 452, 17057, 393, 3346, 306, 345, 385, 13, 286, 393, 536, 11, 362, 286, 1562, 1612, 746, 293, 808, 281, 264, 2085, 51308, 51308, 10063, 466, 437, 309, 390, 293, 1780, 6941, 300, 286, 390, 2085, 30, 407, 577, 393, 321, 3361, 1340, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.1346922439077626, "compression_ratio": 1.6376146788990826, "no_caption_prob": 1.2606590644281823e-05}, {"id": 64, "seek": 37926, "start": 398.14, "end": 404.18, "text": " conclusion about what it was and later discovered that I was wrong? So how can we trust anything", "tokens": [50364, 295, 264, 786, 11, 291, 1936, 483, 281, 3885, 44672, 279, 10063, 13, 286, 519, 4412, 286, 669, 11, 597, 50653, 50653, 307, 281, 584, 300, 307, 264, 787, 551, 300, 286, 393, 7081, 13, 440, 787, 551, 300, 311, 458, 712, 570, 50929, 50929, 452, 17057, 393, 3346, 306, 345, 385, 13, 286, 393, 536, 11, 362, 286, 1562, 1612, 746, 293, 808, 281, 264, 2085, 51308, 51308, 10063, 466, 437, 309, 390, 293, 1780, 6941, 300, 286, 390, 2085, 30, 407, 577, 393, 321, 3361, 1340, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.1346922439077626, "compression_ratio": 1.6376146788990826, "no_caption_prob": 1.2606590644281823e-05}, {"id": 65, "seek": 40418, "start": 404.18, "end": 409.36, "text": " that we think we know? What is knowable? What is the nature of knowing and what is knowable", "tokens": [50364, 300, 321, 519, 321, 458, 30, 708, 307, 458, 712, 30, 708, 307, 264, 3687, 295, 5276, 293, 437, 307, 458, 712, 50623, 50623, 294, 264, 6445, 30, 400, 309, 311, 445, 281, 385, 11, 309, 311, 445, 406, 257, 18348, 3983, 294, 10675, 50897, 50897, 570, 309, 311, 445, 411, 11, 731, 11, 1825, 3993, 300, 321, 2514, 13, 400, 370, 11, 1392, 11, 1096, 13, 1743, 437, 51231, 51231, 544, 393, 321, 360, 365, 300, 4829, 3993, 352, 926, 294, 13040, 293, 321, 500, 380, 534, 483, 4992, 13, 51487, 51487, 583, 365, 3089, 11, 437, 307, 458, 712, 30, 2022, 13437, 5215, 11, 437, 307, 458, 712, 30, 663, 311, 733, 295, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10495952798538849, "compression_ratio": 1.796, "no_caption_prob": 2.6274028641637415e-05}, {"id": 66, "seek": 40418, "start": 409.36, "end": 414.84000000000003, "text": " in the universe? And it's just to me, it's just not a satisfying subject in philosophy", "tokens": [50364, 300, 321, 519, 321, 458, 30, 708, 307, 458, 712, 30, 708, 307, 264, 3687, 295, 5276, 293, 437, 307, 458, 712, 50623, 50623, 294, 264, 6445, 30, 400, 309, 311, 445, 281, 385, 11, 309, 311, 445, 406, 257, 18348, 3983, 294, 10675, 50897, 50897, 570, 309, 311, 445, 411, 11, 731, 11, 1825, 3993, 300, 321, 2514, 13, 400, 370, 11, 1392, 11, 1096, 13, 1743, 437, 51231, 51231, 544, 393, 321, 360, 365, 300, 4829, 3993, 352, 926, 294, 13040, 293, 321, 500, 380, 534, 483, 4992, 13, 51487, 51487, 583, 365, 3089, 11, 437, 307, 458, 712, 30, 2022, 13437, 5215, 11, 437, 307, 458, 712, 30, 663, 311, 733, 295, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10495952798538849, "compression_ratio": 1.796, "no_caption_prob": 2.6274028641637415e-05}, {"id": 67, "seek": 40418, "start": 414.84000000000003, "end": 421.52, "text": " because it's just like, well, nothing except that we exist. And so, okay, done. Like what", "tokens": [50364, 300, 321, 519, 321, 458, 30, 708, 307, 458, 712, 30, 708, 307, 264, 3687, 295, 5276, 293, 437, 307, 458, 712, 50623, 50623, 294, 264, 6445, 30, 400, 309, 311, 445, 281, 385, 11, 309, 311, 445, 406, 257, 18348, 3983, 294, 10675, 50897, 50897, 570, 309, 311, 445, 411, 11, 731, 11, 1825, 3993, 300, 321, 2514, 13, 400, 370, 11, 1392, 11, 1096, 13, 1743, 437, 51231, 51231, 544, 393, 321, 360, 365, 300, 4829, 3993, 352, 926, 294, 13040, 293, 321, 500, 380, 534, 483, 4992, 13, 51487, 51487, 583, 365, 3089, 11, 437, 307, 458, 712, 30, 2022, 13437, 5215, 11, 437, 307, 458, 712, 30, 663, 311, 733, 295, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10495952798538849, "compression_ratio": 1.796, "no_caption_prob": 2.6274028641637415e-05}, {"id": 68, "seek": 40418, "start": 421.52, "end": 426.64, "text": " more can we do with that topic except go around in circles and we don't really get anywhere.", "tokens": [50364, 300, 321, 519, 321, 458, 30, 708, 307, 458, 712, 30, 708, 307, 264, 3687, 295, 5276, 293, 437, 307, 458, 712, 50623, 50623, 294, 264, 6445, 30, 400, 309, 311, 445, 281, 385, 11, 309, 311, 445, 406, 257, 18348, 3983, 294, 10675, 50897, 50897, 570, 309, 311, 445, 411, 11, 731, 11, 1825, 3993, 300, 321, 2514, 13, 400, 370, 11, 1392, 11, 1096, 13, 1743, 437, 51231, 51231, 544, 393, 321, 360, 365, 300, 4829, 3993, 352, 926, 294, 13040, 293, 321, 500, 380, 534, 483, 4992, 13, 51487, 51487, 583, 365, 3089, 11, 437, 307, 458, 712, 30, 2022, 13437, 5215, 11, 437, 307, 458, 712, 30, 663, 311, 733, 295, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10495952798538849, "compression_ratio": 1.796, "no_caption_prob": 2.6274028641637415e-05}, {"id": 69, "seek": 40418, "start": 426.64, "end": 431.42, "text": " But with code, what is knowable? With static analysis, what is knowable? That's kind of", "tokens": [50364, 300, 321, 519, 321, 458, 30, 708, 307, 458, 712, 30, 708, 307, 264, 3687, 295, 5276, 293, 437, 307, 458, 712, 50623, 50623, 294, 264, 6445, 30, 400, 309, 311, 445, 281, 385, 11, 309, 311, 445, 406, 257, 18348, 3983, 294, 10675, 50897, 50897, 570, 309, 311, 445, 411, 11, 731, 11, 1825, 3993, 300, 321, 2514, 13, 400, 370, 11, 1392, 11, 1096, 13, 1743, 437, 51231, 51231, 544, 393, 321, 360, 365, 300, 4829, 3993, 352, 926, 294, 13040, 293, 321, 500, 380, 534, 483, 4992, 13, 51487, 51487, 583, 365, 3089, 11, 437, 307, 458, 712, 30, 2022, 13437, 5215, 11, 437, 307, 458, 712, 30, 663, 311, 733, 295, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10495952798538849, "compression_ratio": 1.796, "no_caption_prob": 2.6274028641637415e-05}, {"id": 70, "seek": 43142, "start": 431.42, "end": 436.88, "text": " a more satisfying question because it's a more constrained area where we're looking", "tokens": [50364, 257, 544, 18348, 1168, 570, 309, 311, 257, 544, 38901, 1859, 689, 321, 434, 1237, 50637, 50637, 412, 13, 467, 311, 406, 445, 411, 21257, 11, 393, 321, 3361, 613, 6360, 72, 4785, 466, 264, 6445, 30, 492, 50977, 50977, 393, 1333, 295, 445, 519, 466, 309, 294, 2115, 295, 437, 393, 321, 458, 466, 341, 3089, 30, 407, 1338, 11, 51212, 51212, 291, 528, 281, 976, 505, 428, 1867, 281, 300, 1168, 13, 708, 307, 264, 5593, 3082, 295, 7908, 35127, 30, 51445, 51445, 1042, 11, 264, 472, 300, 286, 1361, 493, 365, 11, 293, 1310, 321, 393, 2573, 484, 746, 754, 7731, 813, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.12237694941529441, "compression_ratio": 1.6653992395437263, "no_caption_prob": 3.647766061476432e-05}, {"id": 71, "seek": 43142, "start": 436.88, "end": 443.68, "text": " at. It's not just like questioning, can we trust these axioms about the universe? We", "tokens": [50364, 257, 544, 18348, 1168, 570, 309, 311, 257, 544, 38901, 1859, 689, 321, 434, 1237, 50637, 50637, 412, 13, 467, 311, 406, 445, 411, 21257, 11, 393, 321, 3361, 613, 6360, 72, 4785, 466, 264, 6445, 30, 492, 50977, 50977, 393, 1333, 295, 445, 519, 466, 309, 294, 2115, 295, 437, 393, 321, 458, 466, 341, 3089, 30, 407, 1338, 11, 51212, 51212, 291, 528, 281, 976, 505, 428, 1867, 281, 300, 1168, 13, 708, 307, 264, 5593, 3082, 295, 7908, 35127, 30, 51445, 51445, 1042, 11, 264, 472, 300, 286, 1361, 493, 365, 11, 293, 1310, 321, 393, 2573, 484, 746, 754, 7731, 813, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.12237694941529441, "compression_ratio": 1.6653992395437263, "no_caption_prob": 3.647766061476432e-05}, {"id": 72, "seek": 43142, "start": 443.68, "end": 448.38, "text": " can sort of just think about it in terms of what can we know about this code? So yeah,", "tokens": [50364, 257, 544, 18348, 1168, 570, 309, 311, 257, 544, 38901, 1859, 689, 321, 434, 1237, 50637, 50637, 412, 13, 467, 311, 406, 445, 411, 21257, 11, 393, 321, 3361, 613, 6360, 72, 4785, 466, 264, 6445, 30, 492, 50977, 50977, 393, 1333, 295, 445, 519, 466, 309, 294, 2115, 295, 437, 393, 321, 458, 466, 341, 3089, 30, 407, 1338, 11, 51212, 51212, 291, 528, 281, 976, 505, 428, 1867, 281, 300, 1168, 13, 708, 307, 264, 5593, 3082, 295, 7908, 35127, 30, 51445, 51445, 1042, 11, 264, 472, 300, 286, 1361, 493, 365, 11, 293, 1310, 321, 393, 2573, 484, 746, 754, 7731, 813, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.12237694941529441, "compression_ratio": 1.6653992395437263, "no_caption_prob": 3.647766061476432e-05}, {"id": 73, "seek": 43142, "start": 448.38, "end": 453.04, "text": " you want to give us your answer to that question. What is the root cause of false positives?", "tokens": [50364, 257, 544, 18348, 1168, 570, 309, 311, 257, 544, 38901, 1859, 689, 321, 434, 1237, 50637, 50637, 412, 13, 467, 311, 406, 445, 411, 21257, 11, 393, 321, 3361, 613, 6360, 72, 4785, 466, 264, 6445, 30, 492, 50977, 50977, 393, 1333, 295, 445, 519, 466, 309, 294, 2115, 295, 437, 393, 321, 458, 466, 341, 3089, 30, 407, 1338, 11, 51212, 51212, 291, 528, 281, 976, 505, 428, 1867, 281, 300, 1168, 13, 708, 307, 264, 5593, 3082, 295, 7908, 35127, 30, 51445, 51445, 1042, 11, 264, 472, 300, 286, 1361, 493, 365, 11, 293, 1310, 321, 393, 2573, 484, 746, 754, 7731, 813, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.12237694941529441, "compression_ratio": 1.6653992395437263, "no_caption_prob": 3.647766061476432e-05}, {"id": 74, "seek": 43142, "start": 453.04, "end": 458.96000000000004, "text": " Well, the one that I came up with, and maybe we can figure out something even deeper than", "tokens": [50364, 257, 544, 18348, 1168, 570, 309, 311, 257, 544, 38901, 1859, 689, 321, 434, 1237, 50637, 50637, 412, 13, 467, 311, 406, 445, 411, 21257, 11, 393, 321, 3361, 613, 6360, 72, 4785, 466, 264, 6445, 30, 492, 50977, 50977, 393, 1333, 295, 445, 519, 466, 309, 294, 2115, 295, 437, 393, 321, 458, 466, 341, 3089, 30, 407, 1338, 11, 51212, 51212, 291, 528, 281, 976, 505, 428, 1867, 281, 300, 1168, 13, 708, 307, 264, 5593, 3082, 295, 7908, 35127, 30, 51445, 51445, 1042, 11, 264, 472, 300, 286, 1361, 493, 365, 11, 293, 1310, 321, 393, 2573, 484, 746, 754, 7731, 813, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.12237694941529441, "compression_ratio": 1.6653992395437263, "no_caption_prob": 3.647766061476432e-05}, {"id": 75, "seek": 45896, "start": 458.96, "end": 466.32, "text": " that, but what I came down to is missing information just in general. Some of that through complexity,", "tokens": [50364, 300, 11, 457, 437, 286, 1361, 760, 281, 307, 5361, 1589, 445, 294, 2674, 13, 2188, 295, 300, 807, 14024, 11, 50732, 50732, 512, 295, 300, 807, 661, 721, 11, 661, 1355, 13, 583, 1936, 264, 636, 300, 286, 3811, 309, 307, 51012, 51012, 498, 291, 645, 3406, 10661, 5412, 885, 420, 3406, 10661, 5412, 2290, 11, 291, 632, 3601, 295, 1203, 11, 291, 51280, 51280, 2586, 1203, 300, 2011, 294, 428, 1461, 412, 34474, 11, 412, 31413, 565, 11, 293, 291, 2586, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.1516702695824634, "compression_ratio": 1.6990740740740742, "no_caption_prob": 4.611141048371792e-05}, {"id": 76, "seek": 45896, "start": 466.32, "end": 471.91999999999996, "text": " some of that through other things, other means. But basically the way that I imagine it is", "tokens": [50364, 300, 11, 457, 437, 286, 1361, 760, 281, 307, 5361, 1589, 445, 294, 2674, 13, 2188, 295, 300, 807, 14024, 11, 50732, 50732, 512, 295, 300, 807, 661, 721, 11, 661, 1355, 13, 583, 1936, 264, 636, 300, 286, 3811, 309, 307, 51012, 51012, 498, 291, 645, 3406, 10661, 5412, 885, 420, 3406, 10661, 5412, 2290, 11, 291, 632, 3601, 295, 1203, 11, 291, 51280, 51280, 2586, 1203, 300, 2011, 294, 428, 1461, 412, 34474, 11, 412, 31413, 565, 11, 293, 291, 2586, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.1516702695824634, "compression_ratio": 1.6990740740740742, "no_caption_prob": 4.611141048371792e-05}, {"id": 77, "seek": 45896, "start": 471.91999999999996, "end": 477.28, "text": " if you were omniscient being or omniscient tool, you had knowledge of everything, you", "tokens": [50364, 300, 11, 457, 437, 286, 1361, 760, 281, 307, 5361, 1589, 445, 294, 2674, 13, 2188, 295, 300, 807, 14024, 11, 50732, 50732, 512, 295, 300, 807, 661, 721, 11, 661, 1355, 13, 583, 1936, 264, 636, 300, 286, 3811, 309, 307, 51012, 51012, 498, 291, 645, 3406, 10661, 5412, 885, 420, 3406, 10661, 5412, 2290, 11, 291, 632, 3601, 295, 1203, 11, 291, 51280, 51280, 2586, 1203, 300, 2011, 294, 428, 1461, 412, 34474, 11, 412, 31413, 565, 11, 293, 291, 2586, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.1516702695824634, "compression_ratio": 1.6990740740740742, "no_caption_prob": 4.611141048371792e-05}, {"id": 78, "seek": 45896, "start": 477.28, "end": 484.08, "text": " knew everything that happened in your program at runtime, at compile time, and you knew", "tokens": [50364, 300, 11, 457, 437, 286, 1361, 760, 281, 307, 5361, 1589, 445, 294, 2674, 13, 2188, 295, 300, 807, 14024, 11, 50732, 50732, 512, 295, 300, 807, 661, 721, 11, 661, 1355, 13, 583, 1936, 264, 636, 300, 286, 3811, 309, 307, 51012, 51012, 498, 291, 645, 3406, 10661, 5412, 885, 420, 3406, 10661, 5412, 2290, 11, 291, 632, 3601, 295, 1203, 11, 291, 51280, 51280, 2586, 1203, 300, 2011, 294, 428, 1461, 412, 34474, 11, 412, 31413, 565, 11, 293, 291, 2586, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.1516702695824634, "compression_ratio": 1.6990740740740742, "no_caption_prob": 4.611141048371792e-05}, {"id": 79, "seek": 48408, "start": 484.08, "end": 491.68, "text": " what the developer's intents was, then you would always be right in what you report and", "tokens": [50364, 437, 264, 10754, 311, 560, 791, 390, 11, 550, 291, 576, 1009, 312, 558, 294, 437, 291, 2275, 293, 50744, 50744, 291, 576, 1128, 1713, 1340, 13, 509, 576, 458, 11, 731, 11, 341, 307, 1128, 1143, 420, 341, 1128, 2314, 51028, 51028, 420, 341, 307, 406, 257, 1154, 420, 341, 307, 257, 1154, 13, 759, 291, 632, 439, 264, 1589, 294, 264, 1002, 11, 51292, 51292, 550, 286, 519, 291, 576, 1128, 312, 2085, 13, 7504, 11, 264, 1154, 307, 5361, 1589, 293, 291, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1327331628692284, "compression_ratio": 1.8673469387755102, "no_caption_prob": 4.1984618292190135e-05}, {"id": 80, "seek": 48408, "start": 491.68, "end": 497.36, "text": " you would never miss anything. You would know, well, this is never used or this never happens", "tokens": [50364, 437, 264, 10754, 311, 560, 791, 390, 11, 550, 291, 576, 1009, 312, 558, 294, 437, 291, 2275, 293, 50744, 50744, 291, 576, 1128, 1713, 1340, 13, 509, 576, 458, 11, 731, 11, 341, 307, 1128, 1143, 420, 341, 1128, 2314, 51028, 51028, 420, 341, 307, 406, 257, 1154, 420, 341, 307, 257, 1154, 13, 759, 291, 632, 439, 264, 1589, 294, 264, 1002, 11, 51292, 51292, 550, 286, 519, 291, 576, 1128, 312, 2085, 13, 7504, 11, 264, 1154, 307, 5361, 1589, 293, 291, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1327331628692284, "compression_ratio": 1.8673469387755102, "no_caption_prob": 4.1984618292190135e-05}, {"id": 81, "seek": 48408, "start": 497.36, "end": 502.64, "text": " or this is not a problem or this is a problem. If you had all the information in the world,", "tokens": [50364, 437, 264, 10754, 311, 560, 791, 390, 11, 550, 291, 576, 1009, 312, 558, 294, 437, 291, 2275, 293, 50744, 50744, 291, 576, 1128, 1713, 1340, 13, 509, 576, 458, 11, 731, 11, 341, 307, 1128, 1143, 420, 341, 1128, 2314, 51028, 51028, 420, 341, 307, 406, 257, 1154, 420, 341, 307, 257, 1154, 13, 759, 291, 632, 439, 264, 1589, 294, 264, 1002, 11, 51292, 51292, 550, 286, 519, 291, 576, 1128, 312, 2085, 13, 7504, 11, 264, 1154, 307, 5361, 1589, 293, 291, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1327331628692284, "compression_ratio": 1.8673469387755102, "no_caption_prob": 4.1984618292190135e-05}, {"id": 82, "seek": 48408, "start": 502.64, "end": 509.79999999999995, "text": " then I think you would never be wrong. Therefore, the problem is missing information and you", "tokens": [50364, 437, 264, 10754, 311, 560, 791, 390, 11, 550, 291, 576, 1009, 312, 558, 294, 437, 291, 2275, 293, 50744, 50744, 291, 576, 1128, 1713, 1340, 13, 509, 576, 458, 11, 731, 11, 341, 307, 1128, 1143, 420, 341, 1128, 2314, 51028, 51028, 420, 341, 307, 406, 257, 1154, 420, 341, 307, 257, 1154, 13, 759, 291, 632, 439, 264, 1589, 294, 264, 1002, 11, 51292, 51292, 550, 286, 519, 291, 576, 1128, 312, 2085, 13, 7504, 11, 264, 1154, 307, 5361, 1589, 293, 291, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1327331628692284, "compression_ratio": 1.8673469387755102, "no_caption_prob": 4.1984618292190135e-05}, {"id": 83, "seek": 50980, "start": 509.8, "end": 517.04, "text": " can get those through different means. So for instance, for static analysis tool, one", "tokens": [50364, 393, 483, 729, 807, 819, 1355, 13, 407, 337, 5197, 11, 337, 13437, 5215, 2290, 11, 472, 50726, 50726, 295, 264, 3801, 2740, 307, 8546, 3089, 13, 407, 5276, 437, 257, 2158, 307, 412, 257, 1629, 935, 51106, 51106, 307, 1152, 281, 2573, 484, 13, 2188, 3873, 393, 360, 309, 1596, 731, 13, 15576, 14237, 775, 309, 1596, 731, 51366, 51366, 293, 281, 512, 8396, 11, 709, 1101, 813, 2699, 76, 13, 2699, 76, 3255, 264, 3467, 11, 457, 309, 1177, 380, 458, 264, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.13350167057730936, "compression_ratio": 1.5779816513761469, "no_caption_prob": 2.627364665386267e-05}, {"id": 84, "seek": 50980, "start": 517.04, "end": 524.64, "text": " of the bigger problems is dynamic code. So knowing what a value is at a certain point", "tokens": [50364, 393, 483, 729, 807, 819, 1355, 13, 407, 337, 5197, 11, 337, 13437, 5215, 2290, 11, 472, 50726, 50726, 295, 264, 3801, 2740, 307, 8546, 3089, 13, 407, 5276, 437, 257, 2158, 307, 412, 257, 1629, 935, 51106, 51106, 307, 1152, 281, 2573, 484, 13, 2188, 3873, 393, 360, 309, 1596, 731, 13, 15576, 14237, 775, 309, 1596, 731, 51366, 51366, 293, 281, 512, 8396, 11, 709, 1101, 813, 2699, 76, 13, 2699, 76, 3255, 264, 3467, 11, 457, 309, 1177, 380, 458, 264, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.13350167057730936, "compression_ratio": 1.5779816513761469, "no_caption_prob": 2.627364665386267e-05}, {"id": 85, "seek": 50980, "start": 524.64, "end": 529.84, "text": " is hard to figure out. Some tools can do it quite well. TypeScript does it quite well", "tokens": [50364, 393, 483, 729, 807, 819, 1355, 13, 407, 337, 5197, 11, 337, 13437, 5215, 2290, 11, 472, 50726, 50726, 295, 264, 3801, 2740, 307, 8546, 3089, 13, 407, 5276, 437, 257, 2158, 307, 412, 257, 1629, 935, 51106, 51106, 307, 1152, 281, 2573, 484, 13, 2188, 3873, 393, 360, 309, 1596, 731, 13, 15576, 14237, 775, 309, 1596, 731, 51366, 51366, 293, 281, 512, 8396, 11, 709, 1101, 813, 2699, 76, 13, 2699, 76, 3255, 264, 3467, 11, 457, 309, 1177, 380, 458, 264, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.13350167057730936, "compression_ratio": 1.5779816513761469, "no_caption_prob": 2.627364665386267e-05}, {"id": 86, "seek": 50980, "start": 529.84, "end": 535.08, "text": " and to some extent, much better than Elm. Elm knows the types, but it doesn't know the", "tokens": [50364, 393, 483, 729, 807, 819, 1355, 13, 407, 337, 5197, 11, 337, 13437, 5215, 2290, 11, 472, 50726, 50726, 295, 264, 3801, 2740, 307, 8546, 3089, 13, 407, 5276, 437, 257, 2158, 307, 412, 257, 1629, 935, 51106, 51106, 307, 1152, 281, 2573, 484, 13, 2188, 3873, 393, 360, 309, 1596, 731, 13, 15576, 14237, 775, 309, 1596, 731, 51366, 51366, 293, 281, 512, 8396, 11, 709, 1101, 813, 2699, 76, 13, 2699, 76, 3255, 264, 3467, 11, 457, 309, 1177, 380, 458, 264, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.13350167057730936, "compression_ratio": 1.5779816513761469, "no_caption_prob": 2.627364665386267e-05}, {"id": 87, "seek": 53508, "start": 535.08, "end": 545.0, "text": " values nor does it care about it. Languages that try to do proofs like Isabel or TLA+,", "tokens": [50364, 4190, 6051, 775, 309, 1127, 466, 309, 13, 13313, 84, 1660, 300, 853, 281, 360, 8177, 82, 411, 1119, 18657, 420, 314, 11435, 46797, 50860, 50860, 286, 519, 436, 458, 257, 688, 544, 466, 437, 311, 516, 322, 294, 264, 1461, 11, 457, 436, 434, 611, 51128, 51128, 1238, 3997, 293, 286, 500, 380, 458, 577, 436, 589, 13, 286, 500, 380, 458, 437, 641, 15705, 366, 13, 45440, 51362, 51362, 721, 366, 3997, 11, 337, 5197, 13, 407, 562, 291, 362, 5361, 1589, 11, 437, 360, 291, 51616, 51616, 360, 30, 1436, 300, 311, 516, 281, 1051, 11, 558, 30, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16238941010974703, "compression_ratio": 1.5783132530120483, "no_caption_prob": 1.2028985111101065e-05}, {"id": 88, "seek": 53508, "start": 545.0, "end": 550.36, "text": " I think they know a lot more about what's going on in the program, but they're also", "tokens": [50364, 4190, 6051, 775, 309, 1127, 466, 309, 13, 13313, 84, 1660, 300, 853, 281, 360, 8177, 82, 411, 1119, 18657, 420, 314, 11435, 46797, 50860, 50860, 286, 519, 436, 458, 257, 688, 544, 466, 437, 311, 516, 322, 294, 264, 1461, 11, 457, 436, 434, 611, 51128, 51128, 1238, 3997, 293, 286, 500, 380, 458, 577, 436, 589, 13, 286, 500, 380, 458, 437, 641, 15705, 366, 13, 45440, 51362, 51362, 721, 366, 3997, 11, 337, 5197, 13, 407, 562, 291, 362, 5361, 1589, 11, 437, 360, 291, 51616, 51616, 360, 30, 1436, 300, 311, 516, 281, 1051, 11, 558, 30, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16238941010974703, "compression_ratio": 1.5783132530120483, "no_caption_prob": 1.2028985111101065e-05}, {"id": 89, "seek": 53508, "start": 550.36, "end": 555.0400000000001, "text": " pretty complex and I don't know how they work. I don't know what their limitations are. Dynamic", "tokens": [50364, 4190, 6051, 775, 309, 1127, 466, 309, 13, 13313, 84, 1660, 300, 853, 281, 360, 8177, 82, 411, 1119, 18657, 420, 314, 11435, 46797, 50860, 50860, 286, 519, 436, 458, 257, 688, 544, 466, 437, 311, 516, 322, 294, 264, 1461, 11, 457, 436, 434, 611, 51128, 51128, 1238, 3997, 293, 286, 500, 380, 458, 577, 436, 589, 13, 286, 500, 380, 458, 437, 641, 15705, 366, 13, 45440, 51362, 51362, 721, 366, 3997, 11, 337, 5197, 13, 407, 562, 291, 362, 5361, 1589, 11, 437, 360, 291, 51616, 51616, 360, 30, 1436, 300, 311, 516, 281, 1051, 11, 558, 30, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16238941010974703, "compression_ratio": 1.5783132530120483, "no_caption_prob": 1.2028985111101065e-05}, {"id": 90, "seek": 53508, "start": 555.0400000000001, "end": 560.12, "text": " things are complex, for instance. So when you have missing information, what do you", "tokens": [50364, 4190, 6051, 775, 309, 1127, 466, 309, 13, 13313, 84, 1660, 300, 853, 281, 360, 8177, 82, 411, 1119, 18657, 420, 314, 11435, 46797, 50860, 50860, 286, 519, 436, 458, 257, 688, 544, 466, 437, 311, 516, 322, 294, 264, 1461, 11, 457, 436, 434, 611, 51128, 51128, 1238, 3997, 293, 286, 500, 380, 458, 577, 436, 589, 13, 286, 500, 380, 458, 437, 641, 15705, 366, 13, 45440, 51362, 51362, 721, 366, 3997, 11, 337, 5197, 13, 407, 562, 291, 362, 5361, 1589, 11, 437, 360, 291, 51616, 51616, 360, 30, 1436, 300, 311, 516, 281, 1051, 11, 558, 30, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16238941010974703, "compression_ratio": 1.5783132530120483, "no_caption_prob": 1.2028985111101065e-05}, {"id": 91, "seek": 53508, "start": 560.12, "end": 562.9200000000001, "text": " do? Because that's going to happen, right?", "tokens": [50364, 4190, 6051, 775, 309, 1127, 466, 309, 13, 13313, 84, 1660, 300, 853, 281, 360, 8177, 82, 411, 1119, 18657, 420, 314, 11435, 46797, 50860, 50860, 286, 519, 436, 458, 257, 688, 544, 466, 437, 311, 516, 322, 294, 264, 1461, 11, 457, 436, 434, 611, 51128, 51128, 1238, 3997, 293, 286, 500, 380, 458, 577, 436, 589, 13, 286, 500, 380, 458, 437, 641, 15705, 366, 13, 45440, 51362, 51362, 721, 366, 3997, 11, 337, 5197, 13, 407, 562, 291, 362, 5361, 1589, 11, 437, 360, 291, 51616, 51616, 360, 30, 1436, 300, 311, 516, 281, 1051, 11, 558, 30, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.16238941010974703, "compression_ratio": 1.5783132530120483, "no_caption_prob": 1.2028985111101065e-05}, {"id": 92, "seek": 56292, "start": 562.92, "end": 568.9599999999999, "text": " And perhaps you want to use the precautionary principle and say, I don't know if there's", "tokens": [50364, 400, 4317, 291, 528, 281, 764, 264, 25651, 1448, 822, 8665, 293, 584, 11, 286, 500, 380, 458, 498, 456, 311, 50666, 50666, 257, 1154, 11, 370, 286, 486, 584, 11, 286, 393, 380, 7081, 300, 1203, 307, 1392, 11, 4412, 11, 286, 478, 516, 281, 51084, 51084, 584, 456, 311, 7263, 257, 1154, 570, 286, 393, 380, 7081, 300, 456, 311, 406, 257, 1154, 13, 51314, 51314, 286, 2041, 341, 420, 264, 661, 3109, 286, 393, 519, 295, 307, 291, 727, 584, 11, 731, 11, 286, 994, 380, 915, 257, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.15417726416336863, "compression_ratio": 1.7205882352941178, "no_caption_prob": 0.00014425170957110822}, {"id": 93, "seek": 56292, "start": 568.9599999999999, "end": 577.3199999999999, "text": " a problem, so I will say, I can't prove that everything is okay, therefore, I'm going to", "tokens": [50364, 400, 4317, 291, 528, 281, 764, 264, 25651, 1448, 822, 8665, 293, 584, 11, 286, 500, 380, 458, 498, 456, 311, 50666, 50666, 257, 1154, 11, 370, 286, 486, 584, 11, 286, 393, 380, 7081, 300, 1203, 307, 1392, 11, 4412, 11, 286, 478, 516, 281, 51084, 51084, 584, 456, 311, 7263, 257, 1154, 570, 286, 393, 380, 7081, 300, 456, 311, 406, 257, 1154, 13, 51314, 51314, 286, 2041, 341, 420, 264, 661, 3109, 286, 393, 519, 295, 307, 291, 727, 584, 11, 731, 11, 286, 994, 380, 915, 257, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.15417726416336863, "compression_ratio": 1.7205882352941178, "no_caption_prob": 0.00014425170957110822}, {"id": 94, "seek": 56292, "start": 577.3199999999999, "end": 581.92, "text": " say there's potentially a problem because I can't prove that there's not a problem.", "tokens": [50364, 400, 4317, 291, 528, 281, 764, 264, 25651, 1448, 822, 8665, 293, 584, 11, 286, 500, 380, 458, 498, 456, 311, 50666, 50666, 257, 1154, 11, 370, 286, 486, 584, 11, 286, 393, 380, 7081, 300, 1203, 307, 1392, 11, 4412, 11, 286, 478, 516, 281, 51084, 51084, 584, 456, 311, 7263, 257, 1154, 570, 286, 393, 380, 7081, 300, 456, 311, 406, 257, 1154, 13, 51314, 51314, 286, 2041, 341, 420, 264, 661, 3109, 286, 393, 519, 295, 307, 291, 727, 584, 11, 731, 11, 286, 994, 380, 915, 257, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.15417726416336863, "compression_ratio": 1.7205882352941178, "no_caption_prob": 0.00014425170957110822}, {"id": 95, "seek": 56292, "start": 581.92, "end": 587.88, "text": " I guess this or the other approach I can think of is you could say, well, I didn't find a", "tokens": [50364, 400, 4317, 291, 528, 281, 764, 264, 25651, 1448, 822, 8665, 293, 584, 11, 286, 500, 380, 458, 498, 456, 311, 50666, 50666, 257, 1154, 11, 370, 286, 486, 584, 11, 286, 393, 380, 7081, 300, 1203, 307, 1392, 11, 4412, 11, 286, 478, 516, 281, 51084, 51084, 584, 456, 311, 7263, 257, 1154, 570, 286, 393, 380, 7081, 300, 456, 311, 406, 257, 1154, 13, 51314, 51314, 286, 2041, 341, 420, 264, 661, 3109, 286, 393, 519, 295, 307, 291, 727, 584, 11, 731, 11, 286, 994, 380, 915, 257, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.15417726416336863, "compression_ratio": 1.7205882352941178, "no_caption_prob": 0.00014425170957110822}, {"id": 96, "seek": 58788, "start": 587.88, "end": 593.36, "text": " problem, so no problems, right? That's sort of like what TypeScript does, right? It says,", "tokens": [50364, 1154, 11, 370, 572, 2740, 11, 558, 30, 663, 311, 1333, 295, 411, 437, 15576, 14237, 775, 11, 558, 30, 467, 1619, 11, 50638, 50638, 286, 486, 980, 291, 498, 286, 393, 10815, 300, 456, 307, 257, 1154, 2831, 813, 286, 486, 980, 291, 498, 50914, 50914, 286, 2644, 10815, 456, 366, 572, 2740, 13, 51094, 51094, 865, 13, 407, 281, 385, 11, 300, 307, 1455, 257, 18028, 1695, 13, 407, 286, 1062, 312, 2085, 466, 264, 3006, 1349, 11, 51434, 51434, 457, 257, 18028, 1695, 307, 562, 291, 3241, 746, 382, 2074, 322, 264, 5143, 295, 33783, 13, 1743, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13444004609034613, "compression_ratio": 1.7478260869565216, "no_caption_prob": 1.2218985830259044e-05}, {"id": 97, "seek": 58788, "start": 593.36, "end": 598.88, "text": " I will tell you if I can guarantee that there is a problem rather than I will tell you if", "tokens": [50364, 1154, 11, 370, 572, 2740, 11, 558, 30, 663, 311, 1333, 295, 411, 437, 15576, 14237, 775, 11, 558, 30, 467, 1619, 11, 50638, 50638, 286, 486, 980, 291, 498, 286, 393, 10815, 300, 456, 307, 257, 1154, 2831, 813, 286, 486, 980, 291, 498, 50914, 50914, 286, 2644, 10815, 456, 366, 572, 2740, 13, 51094, 51094, 865, 13, 407, 281, 385, 11, 300, 307, 1455, 257, 18028, 1695, 13, 407, 286, 1062, 312, 2085, 466, 264, 3006, 1349, 11, 51434, 51434, 457, 257, 18028, 1695, 307, 562, 291, 3241, 746, 382, 2074, 322, 264, 5143, 295, 33783, 13, 1743, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13444004609034613, "compression_ratio": 1.7478260869565216, "no_caption_prob": 1.2218985830259044e-05}, {"id": 98, "seek": 58788, "start": 598.88, "end": 602.48, "text": " I cannot guarantee there are no problems.", "tokens": [50364, 1154, 11, 370, 572, 2740, 11, 558, 30, 663, 311, 1333, 295, 411, 437, 15576, 14237, 775, 11, 558, 30, 467, 1619, 11, 50638, 50638, 286, 486, 980, 291, 498, 286, 393, 10815, 300, 456, 307, 257, 1154, 2831, 813, 286, 486, 980, 291, 498, 50914, 50914, 286, 2644, 10815, 456, 366, 572, 2740, 13, 51094, 51094, 865, 13, 407, 281, 385, 11, 300, 307, 1455, 257, 18028, 1695, 13, 407, 286, 1062, 312, 2085, 466, 264, 3006, 1349, 11, 51434, 51434, 457, 257, 18028, 1695, 307, 562, 291, 3241, 746, 382, 2074, 322, 264, 5143, 295, 33783, 13, 1743, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13444004609034613, "compression_ratio": 1.7478260869565216, "no_caption_prob": 1.2218985830259044e-05}, {"id": 99, "seek": 58788, "start": 602.48, "end": 609.28, "text": " Yeah. So to me, that is making a presumption. So I might be wrong about the correct word,", "tokens": [50364, 1154, 11, 370, 572, 2740, 11, 558, 30, 663, 311, 1333, 295, 411, 437, 15576, 14237, 775, 11, 558, 30, 467, 1619, 11, 50638, 50638, 286, 486, 980, 291, 498, 286, 393, 10815, 300, 456, 307, 257, 1154, 2831, 813, 286, 486, 980, 291, 498, 50914, 50914, 286, 2644, 10815, 456, 366, 572, 2740, 13, 51094, 51094, 865, 13, 407, 281, 385, 11, 300, 307, 1455, 257, 18028, 1695, 13, 407, 286, 1062, 312, 2085, 466, 264, 3006, 1349, 11, 51434, 51434, 457, 257, 18028, 1695, 307, 562, 291, 3241, 746, 382, 2074, 322, 264, 5143, 295, 33783, 13, 1743, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13444004609034613, "compression_ratio": 1.7478260869565216, "no_caption_prob": 1.2218985830259044e-05}, {"id": 100, "seek": 58788, "start": 609.28, "end": 616.24, "text": " but a presumption is when you accept something as true on the basis of probabilities. Like", "tokens": [50364, 1154, 11, 370, 572, 2740, 11, 558, 30, 663, 311, 1333, 295, 411, 437, 15576, 14237, 775, 11, 558, 30, 467, 1619, 11, 50638, 50638, 286, 486, 980, 291, 498, 286, 393, 10815, 300, 456, 307, 257, 1154, 2831, 813, 286, 486, 980, 291, 498, 50914, 50914, 286, 2644, 10815, 456, 366, 572, 2740, 13, 51094, 51094, 865, 13, 407, 281, 385, 11, 300, 307, 1455, 257, 18028, 1695, 13, 407, 286, 1062, 312, 2085, 466, 264, 3006, 1349, 11, 51434, 51434, 457, 257, 18028, 1695, 307, 562, 291, 3241, 746, 382, 2074, 322, 264, 5143, 295, 33783, 13, 1743, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13444004609034613, "compression_ratio": 1.7478260869565216, "no_caption_prob": 1.2218985830259044e-05}, {"id": 101, "seek": 61624, "start": 616.24, "end": 621.72, "text": " it's very likely, I'm missing some information. I don't know whether this is true or not,", "tokens": [50364, 309, 311, 588, 3700, 11, 286, 478, 5361, 512, 1589, 13, 286, 500, 380, 458, 1968, 341, 307, 2074, 420, 406, 11, 50638, 50638, 457, 286, 519, 309, 311, 516, 281, 312, 544, 3700, 281, 312, 2074, 813, 7908, 13, 407, 264, 1365, 300, 286, 1116, 50950, 50950, 411, 281, 747, 307, 364, 12564, 43, 686, 4978, 300, 307, 1219, 10225, 818, 3207, 2736, 11, 597, 307, 1936, 51308, 51308, 562, 291, 360, 10225, 13, 24223, 293, 291, 1320, 309, 257, 2445, 11, 300, 2445, 820, 1009, 2736, 746, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.12217724576909492, "compression_ratio": 1.5973451327433628, "no_caption_prob": 2.1112044123583473e-05}, {"id": 102, "seek": 61624, "start": 621.72, "end": 627.96, "text": " but I think it's going to be more likely to be true than false. So the example that I'd", "tokens": [50364, 309, 311, 588, 3700, 11, 286, 478, 5361, 512, 1589, 13, 286, 500, 380, 458, 1968, 341, 307, 2074, 420, 406, 11, 50638, 50638, 457, 286, 519, 309, 311, 516, 281, 312, 544, 3700, 281, 312, 2074, 813, 7908, 13, 407, 264, 1365, 300, 286, 1116, 50950, 50950, 411, 281, 747, 307, 364, 12564, 43, 686, 4978, 300, 307, 1219, 10225, 818, 3207, 2736, 11, 597, 307, 1936, 51308, 51308, 562, 291, 360, 10225, 13, 24223, 293, 291, 1320, 309, 257, 2445, 11, 300, 2445, 820, 1009, 2736, 746, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.12217724576909492, "compression_ratio": 1.5973451327433628, "no_caption_prob": 2.1112044123583473e-05}, {"id": 103, "seek": 61624, "start": 627.96, "end": 635.12, "text": " like to take is an ESLint rule that is called array callback return, which is basically", "tokens": [50364, 309, 311, 588, 3700, 11, 286, 478, 5361, 512, 1589, 13, 286, 500, 380, 458, 1968, 341, 307, 2074, 420, 406, 11, 50638, 50638, 457, 286, 519, 309, 311, 516, 281, 312, 544, 3700, 281, 312, 2074, 813, 7908, 13, 407, 264, 1365, 300, 286, 1116, 50950, 50950, 411, 281, 747, 307, 364, 12564, 43, 686, 4978, 300, 307, 1219, 10225, 818, 3207, 2736, 11, 597, 307, 1936, 51308, 51308, 562, 291, 360, 10225, 13, 24223, 293, 291, 1320, 309, 257, 2445, 11, 300, 2445, 820, 1009, 2736, 746, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.12217724576909492, "compression_ratio": 1.5973451327433628, "no_caption_prob": 2.1112044123583473e-05}, {"id": 104, "seek": 61624, "start": 635.12, "end": 640.64, "text": " when you do array.map and you pass it a function, that function should always return something.", "tokens": [50364, 309, 311, 588, 3700, 11, 286, 478, 5361, 512, 1589, 13, 286, 500, 380, 458, 1968, 341, 307, 2074, 420, 406, 11, 50638, 50638, 457, 286, 519, 309, 311, 516, 281, 312, 544, 3700, 281, 312, 2074, 813, 7908, 13, 407, 264, 1365, 300, 286, 1116, 50950, 50950, 411, 281, 747, 307, 364, 12564, 43, 686, 4978, 300, 307, 1219, 10225, 818, 3207, 2736, 11, 597, 307, 1936, 51308, 51308, 562, 291, 360, 10225, 13, 24223, 293, 291, 1320, 309, 257, 2445, 11, 300, 2445, 820, 1009, 2736, 746, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.12217724576909492, "compression_ratio": 1.5973451327433628, "no_caption_prob": 2.1112044123583473e-05}, {"id": 105, "seek": 64064, "start": 640.64, "end": 646.4399999999999, "text": " Right. So you don't accidentally have a list of... that you're writing TypeScript, you don't", "tokens": [50364, 1779, 13, 407, 291, 500, 380, 15715, 362, 257, 1329, 295, 485, 300, 291, 434, 3579, 15576, 14237, 11, 291, 500, 380, 50654, 50654, 2464, 2736, 293, 370, 309, 311, 12678, 22009, 11, 597, 286, 519, 575, 2011, 281, 2201, 300, 1709, 50950, 50950, 1296, 411, 15778, 293, 2699, 76, 300, 291, 2870, 257, 2736, 293, 291, 434, 411, 11, 983, 307, 341, 2158, 51232, 51232, 439, 18184, 82, 420, 674, 5666, 2001, 30, 51348, 51348, 865, 11, 674, 5666, 2001, 13, 865, 13, 407, 309, 311, 257, 588, 4420, 4978, 281, 362, 13, 583, 264, 551, 307, 562, 291, 12477, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18421910603841146, "compression_ratio": 1.6131687242798354, "no_caption_prob": 6.814685184508562e-05}, {"id": 106, "seek": 64064, "start": 646.4399999999999, "end": 652.36, "text": " write return and so it's returning void, which I think has happened to everybody that goes", "tokens": [50364, 1779, 13, 407, 291, 500, 380, 15715, 362, 257, 1329, 295, 485, 300, 291, 434, 3579, 15576, 14237, 11, 291, 500, 380, 50654, 50654, 2464, 2736, 293, 370, 309, 311, 12678, 22009, 11, 597, 286, 519, 575, 2011, 281, 2201, 300, 1709, 50950, 50950, 1296, 411, 15778, 293, 2699, 76, 300, 291, 2870, 257, 2736, 293, 291, 434, 411, 11, 983, 307, 341, 2158, 51232, 51232, 439, 18184, 82, 420, 674, 5666, 2001, 30, 51348, 51348, 865, 11, 674, 5666, 2001, 13, 865, 13, 407, 309, 311, 257, 588, 4420, 4978, 281, 362, 13, 583, 264, 551, 307, 562, 291, 12477, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18421910603841146, "compression_ratio": 1.6131687242798354, "no_caption_prob": 6.814685184508562e-05}, {"id": 107, "seek": 64064, "start": 652.36, "end": 658.0, "text": " between like JavaScript and Elm that you forget a return and you're like, why is this value", "tokens": [50364, 1779, 13, 407, 291, 500, 380, 15715, 362, 257, 1329, 295, 485, 300, 291, 434, 3579, 15576, 14237, 11, 291, 500, 380, 50654, 50654, 2464, 2736, 293, 370, 309, 311, 12678, 22009, 11, 597, 286, 519, 575, 2011, 281, 2201, 300, 1709, 50950, 50950, 1296, 411, 15778, 293, 2699, 76, 300, 291, 2870, 257, 2736, 293, 291, 434, 411, 11, 983, 307, 341, 2158, 51232, 51232, 439, 18184, 82, 420, 674, 5666, 2001, 30, 51348, 51348, 865, 11, 674, 5666, 2001, 13, 865, 13, 407, 309, 311, 257, 588, 4420, 4978, 281, 362, 13, 583, 264, 551, 307, 562, 291, 12477, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18421910603841146, "compression_ratio": 1.6131687242798354, "no_caption_prob": 6.814685184508562e-05}, {"id": 108, "seek": 64064, "start": 658.0, "end": 660.3199999999999, "text": " all nulls or undefined?", "tokens": [50364, 1779, 13, 407, 291, 500, 380, 15715, 362, 257, 1329, 295, 485, 300, 291, 434, 3579, 15576, 14237, 11, 291, 500, 380, 50654, 50654, 2464, 2736, 293, 370, 309, 311, 12678, 22009, 11, 597, 286, 519, 575, 2011, 281, 2201, 300, 1709, 50950, 50950, 1296, 411, 15778, 293, 2699, 76, 300, 291, 2870, 257, 2736, 293, 291, 434, 411, 11, 983, 307, 341, 2158, 51232, 51232, 439, 18184, 82, 420, 674, 5666, 2001, 30, 51348, 51348, 865, 11, 674, 5666, 2001, 13, 865, 13, 407, 309, 311, 257, 588, 4420, 4978, 281, 362, 13, 583, 264, 551, 307, 562, 291, 12477, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18421910603841146, "compression_ratio": 1.6131687242798354, "no_caption_prob": 6.814685184508562e-05}, {"id": 109, "seek": 64064, "start": 660.3199999999999, "end": 666.64, "text": " Yeah, undefined. Yeah. So it's a very useful rule to have. But the thing is when you analyze", "tokens": [50364, 1779, 13, 407, 291, 500, 380, 15715, 362, 257, 1329, 295, 485, 300, 291, 434, 3579, 15576, 14237, 11, 291, 500, 380, 50654, 50654, 2464, 2736, 293, 370, 309, 311, 12678, 22009, 11, 597, 286, 519, 575, 2011, 281, 2201, 300, 1709, 50950, 50950, 1296, 411, 15778, 293, 2699, 76, 300, 291, 2870, 257, 2736, 293, 291, 434, 411, 11, 983, 307, 341, 2158, 51232, 51232, 439, 18184, 82, 420, 674, 5666, 2001, 30, 51348, 51348, 865, 11, 674, 5666, 2001, 13, 865, 13, 407, 309, 311, 257, 588, 4420, 4978, 281, 362, 13, 583, 264, 551, 307, 562, 291, 12477, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18421910603841146, "compression_ratio": 1.6131687242798354, "no_caption_prob": 6.814685184508562e-05}, {"id": 110, "seek": 66664, "start": 666.64, "end": 671.84, "text": " JavaScript code, there is something that is missing and that is type information. So TypeScript", "tokens": [50364, 15778, 3089, 11, 456, 307, 746, 300, 307, 5361, 293, 300, 307, 2010, 1589, 13, 407, 15576, 14237, 50624, 50624, 727, 7263, 854, 510, 11, 457, 1936, 562, 291, 536, 10225, 13, 24223, 11, 10225, 885, 257, 7006, 50946, 50946, 420, 746, 11, 309, 1542, 411, 364, 10225, 420, 264, 4471, 3170, 295, 364, 10225, 13, 400, 4412, 291, 434, 51214, 51214, 516, 281, 1949, 11, 291, 434, 516, 281, 43283, 11, 731, 11, 309, 311, 1238, 709, 337, 988, 264, 10225, 13, 24223, 51550, 51550, 3170, 13, 407, 286, 478, 516, 281, 2275, 604, 2740, 300, 366, 31745, 294, 264, 2445, 300, 307, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12243927849663629, "compression_ratio": 1.7647058823529411, "no_caption_prob": 4.7575431381119415e-05}, {"id": 111, "seek": 66664, "start": 671.84, "end": 678.28, "text": " could potentially help here, but basically when you see array.map, array being a variable", "tokens": [50364, 15778, 3089, 11, 456, 307, 746, 300, 307, 5361, 293, 300, 307, 2010, 1589, 13, 407, 15576, 14237, 50624, 50624, 727, 7263, 854, 510, 11, 457, 1936, 562, 291, 536, 10225, 13, 24223, 11, 10225, 885, 257, 7006, 50946, 50946, 420, 746, 11, 309, 1542, 411, 364, 10225, 420, 264, 4471, 3170, 295, 364, 10225, 13, 400, 4412, 291, 434, 51214, 51214, 516, 281, 1949, 11, 291, 434, 516, 281, 43283, 11, 731, 11, 309, 311, 1238, 709, 337, 988, 264, 10225, 13, 24223, 51550, 51550, 3170, 13, 407, 286, 478, 516, 281, 2275, 604, 2740, 300, 366, 31745, 294, 264, 2445, 300, 307, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12243927849663629, "compression_ratio": 1.7647058823529411, "no_caption_prob": 4.7575431381119415e-05}, {"id": 112, "seek": 66664, "start": 678.28, "end": 683.64, "text": " or something, it looks like an array or the map method of an array. And therefore you're", "tokens": [50364, 15778, 3089, 11, 456, 307, 746, 300, 307, 5361, 293, 300, 307, 2010, 1589, 13, 407, 15576, 14237, 50624, 50624, 727, 7263, 854, 510, 11, 457, 1936, 562, 291, 536, 10225, 13, 24223, 11, 10225, 885, 257, 7006, 50946, 50946, 420, 746, 11, 309, 1542, 411, 364, 10225, 420, 264, 4471, 3170, 295, 364, 10225, 13, 400, 4412, 291, 434, 51214, 51214, 516, 281, 1949, 11, 291, 434, 516, 281, 43283, 11, 731, 11, 309, 311, 1238, 709, 337, 988, 264, 10225, 13, 24223, 51550, 51550, 3170, 13, 407, 286, 478, 516, 281, 2275, 604, 2740, 300, 366, 31745, 294, 264, 2445, 300, 307, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12243927849663629, "compression_ratio": 1.7647058823529411, "no_caption_prob": 4.7575431381119415e-05}, {"id": 113, "seek": 66664, "start": 683.64, "end": 690.36, "text": " going to consider, you're going to presume, well, it's pretty much for sure the array.map", "tokens": [50364, 15778, 3089, 11, 456, 307, 746, 300, 307, 5361, 293, 300, 307, 2010, 1589, 13, 407, 15576, 14237, 50624, 50624, 727, 7263, 854, 510, 11, 457, 1936, 562, 291, 536, 10225, 13, 24223, 11, 10225, 885, 257, 7006, 50946, 50946, 420, 746, 11, 309, 1542, 411, 364, 10225, 420, 264, 4471, 3170, 295, 364, 10225, 13, 400, 4412, 291, 434, 51214, 51214, 516, 281, 1949, 11, 291, 434, 516, 281, 43283, 11, 731, 11, 309, 311, 1238, 709, 337, 988, 264, 10225, 13, 24223, 51550, 51550, 3170, 13, 407, 286, 478, 516, 281, 2275, 604, 2740, 300, 366, 31745, 294, 264, 2445, 300, 307, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12243927849663629, "compression_ratio": 1.7647058823529411, "no_caption_prob": 4.7575431381119415e-05}, {"id": 114, "seek": 66664, "start": 690.36, "end": 696.08, "text": " method. So I'm going to report any problems that are confined in the function that is", "tokens": [50364, 15778, 3089, 11, 456, 307, 746, 300, 307, 5361, 293, 300, 307, 2010, 1589, 13, 407, 15576, 14237, 50624, 50624, 727, 7263, 854, 510, 11, 457, 1936, 562, 291, 536, 10225, 13, 24223, 11, 10225, 885, 257, 7006, 50946, 50946, 420, 746, 11, 309, 1542, 411, 364, 10225, 420, 264, 4471, 3170, 295, 364, 10225, 13, 400, 4412, 291, 434, 51214, 51214, 516, 281, 1949, 11, 291, 434, 516, 281, 43283, 11, 731, 11, 309, 311, 1238, 709, 337, 988, 264, 10225, 13, 24223, 51550, 51550, 3170, 13, 407, 286, 478, 516, 281, 2275, 604, 2740, 300, 366, 31745, 294, 264, 2445, 300, 307, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12243927849663629, "compression_ratio": 1.7647058823529411, "no_caption_prob": 4.7575431381119415e-05}, {"id": 115, "seek": 69608, "start": 696.08, "end": 701.76, "text": " passed to it, but that might be wrong. So when you're missing, you're having missing", "tokens": [50364, 4678, 281, 309, 11, 457, 300, 1062, 312, 2085, 13, 407, 562, 291, 434, 5361, 11, 291, 434, 1419, 5361, 50648, 50648, 1589, 11, 291, 434, 516, 281, 652, 18028, 9799, 293, 562, 436, 1261, 484, 281, 312, 2085, 11, 300, 311, 50914, 50914, 562, 291, 362, 257, 7908, 3353, 420, 7908, 3671, 13, 1436, 437, 321, 727, 611, 360, 307, 584, 11, 360, 512, 51208, 51208, 544, 5215, 11, 411, 307, 341, 1401, 364, 10225, 30, 1664, 321, 915, 4079, 689, 309, 307, 15489, 51516, 51516, 689, 321, 393, 4448, 536, 300, 341, 307, 364, 10225, 30, 400, 498, 321, 536, 300, 309, 311, 364, 10225, 11, 550, 321, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13440348809225516, "compression_ratio": 1.7698412698412698, "no_caption_prob": 1.7502692571724765e-05}, {"id": 116, "seek": 69608, "start": 701.76, "end": 707.08, "text": " information, you're going to make presumptions and when they turn out to be wrong, that's", "tokens": [50364, 4678, 281, 309, 11, 457, 300, 1062, 312, 2085, 13, 407, 562, 291, 434, 5361, 11, 291, 434, 1419, 5361, 50648, 50648, 1589, 11, 291, 434, 516, 281, 652, 18028, 9799, 293, 562, 436, 1261, 484, 281, 312, 2085, 11, 300, 311, 50914, 50914, 562, 291, 362, 257, 7908, 3353, 420, 7908, 3671, 13, 1436, 437, 321, 727, 611, 360, 307, 584, 11, 360, 512, 51208, 51208, 544, 5215, 11, 411, 307, 341, 1401, 364, 10225, 30, 1664, 321, 915, 4079, 689, 309, 307, 15489, 51516, 51516, 689, 321, 393, 4448, 536, 300, 341, 307, 364, 10225, 30, 400, 498, 321, 536, 300, 309, 311, 364, 10225, 11, 550, 321, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13440348809225516, "compression_ratio": 1.7698412698412698, "no_caption_prob": 1.7502692571724765e-05}, {"id": 117, "seek": 69608, "start": 707.08, "end": 712.96, "text": " when you have a false positive or false negative. Because what we could also do is say, do some", "tokens": [50364, 4678, 281, 309, 11, 457, 300, 1062, 312, 2085, 13, 407, 562, 291, 434, 5361, 11, 291, 434, 1419, 5361, 50648, 50648, 1589, 11, 291, 434, 516, 281, 652, 18028, 9799, 293, 562, 436, 1261, 484, 281, 312, 2085, 11, 300, 311, 50914, 50914, 562, 291, 362, 257, 7908, 3353, 420, 7908, 3671, 13, 1436, 437, 321, 727, 611, 360, 307, 584, 11, 360, 512, 51208, 51208, 544, 5215, 11, 411, 307, 341, 1401, 364, 10225, 30, 1664, 321, 915, 4079, 689, 309, 307, 15489, 51516, 51516, 689, 321, 393, 4448, 536, 300, 341, 307, 364, 10225, 30, 400, 498, 321, 536, 300, 309, 311, 364, 10225, 11, 550, 321, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13440348809225516, "compression_ratio": 1.7698412698412698, "no_caption_prob": 1.7502692571724765e-05}, {"id": 118, "seek": 69608, "start": 712.96, "end": 719.12, "text": " more analysis, like is this read an array? Can we find somewhere where it is declared", "tokens": [50364, 4678, 281, 309, 11, 457, 300, 1062, 312, 2085, 13, 407, 562, 291, 434, 5361, 11, 291, 434, 1419, 5361, 50648, 50648, 1589, 11, 291, 434, 516, 281, 652, 18028, 9799, 293, 562, 436, 1261, 484, 281, 312, 2085, 11, 300, 311, 50914, 50914, 562, 291, 362, 257, 7908, 3353, 420, 7908, 3671, 13, 1436, 437, 321, 727, 611, 360, 307, 584, 11, 360, 512, 51208, 51208, 544, 5215, 11, 411, 307, 341, 1401, 364, 10225, 30, 1664, 321, 915, 4079, 689, 309, 307, 15489, 51516, 51516, 689, 321, 393, 4448, 536, 300, 341, 307, 364, 10225, 30, 400, 498, 321, 536, 300, 309, 311, 364, 10225, 11, 550, 321, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13440348809225516, "compression_ratio": 1.7698412698412698, "no_caption_prob": 1.7502692571724765e-05}, {"id": 119, "seek": 69608, "start": 719.12, "end": 725.88, "text": " where we can clearly see that this is an array? And if we see that it's an array, then we", "tokens": [50364, 4678, 281, 309, 11, 457, 300, 1062, 312, 2085, 13, 407, 562, 291, 434, 5361, 11, 291, 434, 1419, 5361, 50648, 50648, 1589, 11, 291, 434, 516, 281, 652, 18028, 9799, 293, 562, 436, 1261, 484, 281, 312, 2085, 11, 300, 311, 50914, 50914, 562, 291, 362, 257, 7908, 3353, 420, 7908, 3671, 13, 1436, 437, 321, 727, 611, 360, 307, 584, 11, 360, 512, 51208, 51208, 544, 5215, 11, 411, 307, 341, 1401, 364, 10225, 30, 1664, 321, 915, 4079, 689, 309, 307, 15489, 51516, 51516, 689, 321, 393, 4448, 536, 300, 341, 307, 364, 10225, 30, 400, 498, 321, 536, 300, 309, 311, 364, 10225, 11, 550, 321, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.13440348809225516, "compression_ratio": 1.7698412698412698, "no_caption_prob": 1.7502692571724765e-05}, {"id": 120, "seek": 72588, "start": 725.88, "end": 730.68, "text": " report a problem. And if we don't see that it's an array, if we don't know, then we don't", "tokens": [50364, 2275, 257, 1154, 13, 400, 498, 321, 500, 380, 536, 300, 309, 311, 364, 10225, 11, 498, 321, 500, 380, 458, 11, 550, 321, 500, 380, 50604, 50604, 2275, 1340, 13, 400, 300, 30445, 439, 264, 7908, 35127, 300, 321, 362, 11, 457, 300, 7829, 50814, 50814, 257, 688, 295, 7908, 40019, 13, 407, 5699, 291, 643, 281, 652, 18028, 9799, 11, 291, 434, 516, 281, 51082, 51082, 362, 264, 3922, 281, 11659, 544, 3030, 257, 7908, 3353, 420, 7908, 3671, 11, 457, 291, 434, 516, 51366, 51366, 281, 362, 281, 2826, 420, 360, 544, 5215, 11, 597, 393, 312, 3997, 293, 1310, 291, 434, 406, 516, 51592, 51592, 281, 312, 1075, 281, 2573, 484, 264, 1867, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10140840342787445, "compression_ratio": 1.8705882352941177, "no_caption_prob": 3.883035242324695e-05}, {"id": 121, "seek": 72588, "start": 730.68, "end": 734.88, "text": " report anything. And that removes all the false positives that we have, but that creates", "tokens": [50364, 2275, 257, 1154, 13, 400, 498, 321, 500, 380, 536, 300, 309, 311, 364, 10225, 11, 498, 321, 500, 380, 458, 11, 550, 321, 500, 380, 50604, 50604, 2275, 1340, 13, 400, 300, 30445, 439, 264, 7908, 35127, 300, 321, 362, 11, 457, 300, 7829, 50814, 50814, 257, 688, 295, 7908, 40019, 13, 407, 5699, 291, 643, 281, 652, 18028, 9799, 11, 291, 434, 516, 281, 51082, 51082, 362, 264, 3922, 281, 11659, 544, 3030, 257, 7908, 3353, 420, 7908, 3671, 11, 457, 291, 434, 516, 51366, 51366, 281, 362, 281, 2826, 420, 360, 544, 5215, 11, 597, 393, 312, 3997, 293, 1310, 291, 434, 406, 516, 51592, 51592, 281, 312, 1075, 281, 2573, 484, 264, 1867, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10140840342787445, "compression_ratio": 1.8705882352941177, "no_caption_prob": 3.883035242324695e-05}, {"id": 122, "seek": 72588, "start": 734.88, "end": 740.24, "text": " a lot of false negatives. So whenever you need to make presumptions, you're going to", "tokens": [50364, 2275, 257, 1154, 13, 400, 498, 321, 500, 380, 536, 300, 309, 311, 364, 10225, 11, 498, 321, 500, 380, 458, 11, 550, 321, 500, 380, 50604, 50604, 2275, 1340, 13, 400, 300, 30445, 439, 264, 7908, 35127, 300, 321, 362, 11, 457, 300, 7829, 50814, 50814, 257, 688, 295, 7908, 40019, 13, 407, 5699, 291, 643, 281, 652, 18028, 9799, 11, 291, 434, 516, 281, 51082, 51082, 362, 264, 3922, 281, 11659, 544, 3030, 257, 7908, 3353, 420, 7908, 3671, 11, 457, 291, 434, 516, 51366, 51366, 281, 362, 281, 2826, 420, 360, 544, 5215, 11, 597, 393, 312, 3997, 293, 1310, 291, 434, 406, 516, 51592, 51592, 281, 312, 1075, 281, 2573, 484, 264, 1867, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10140840342787445, "compression_ratio": 1.8705882352941177, "no_caption_prob": 3.883035242324695e-05}, {"id": 123, "seek": 72588, "start": 740.24, "end": 745.92, "text": " have the choice to lean more towards a false positive or false negative, but you're going", "tokens": [50364, 2275, 257, 1154, 13, 400, 498, 321, 500, 380, 536, 300, 309, 311, 364, 10225, 11, 498, 321, 500, 380, 458, 11, 550, 321, 500, 380, 50604, 50604, 2275, 1340, 13, 400, 300, 30445, 439, 264, 7908, 35127, 300, 321, 362, 11, 457, 300, 7829, 50814, 50814, 257, 688, 295, 7908, 40019, 13, 407, 5699, 291, 643, 281, 652, 18028, 9799, 11, 291, 434, 516, 281, 51082, 51082, 362, 264, 3922, 281, 11659, 544, 3030, 257, 7908, 3353, 420, 7908, 3671, 11, 457, 291, 434, 516, 51366, 51366, 281, 362, 281, 2826, 420, 360, 544, 5215, 11, 597, 393, 312, 3997, 293, 1310, 291, 434, 406, 516, 51592, 51592, 281, 312, 1075, 281, 2573, 484, 264, 1867, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10140840342787445, "compression_ratio": 1.8705882352941177, "no_caption_prob": 3.883035242324695e-05}, {"id": 124, "seek": 72588, "start": 745.92, "end": 750.44, "text": " to have to choose or do more analysis, which can be complex and maybe you're not going", "tokens": [50364, 2275, 257, 1154, 13, 400, 498, 321, 500, 380, 536, 300, 309, 311, 364, 10225, 11, 498, 321, 500, 380, 458, 11, 550, 321, 500, 380, 50604, 50604, 2275, 1340, 13, 400, 300, 30445, 439, 264, 7908, 35127, 300, 321, 362, 11, 457, 300, 7829, 50814, 50814, 257, 688, 295, 7908, 40019, 13, 407, 5699, 291, 643, 281, 652, 18028, 9799, 11, 291, 434, 516, 281, 51082, 51082, 362, 264, 3922, 281, 11659, 544, 3030, 257, 7908, 3353, 420, 7908, 3671, 11, 457, 291, 434, 516, 51366, 51366, 281, 362, 281, 2826, 420, 360, 544, 5215, 11, 597, 393, 312, 3997, 293, 1310, 291, 434, 406, 516, 51592, 51592, 281, 312, 1075, 281, 2573, 484, 264, 1867, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10140840342787445, "compression_ratio": 1.8705882352941177, "no_caption_prob": 3.883035242324695e-05}, {"id": 125, "seek": 72588, "start": 750.44, "end": 752.36, "text": " to be able to figure out the answer.", "tokens": [50364, 2275, 257, 1154, 13, 400, 498, 321, 500, 380, 536, 300, 309, 311, 364, 10225, 11, 498, 321, 500, 380, 458, 11, 550, 321, 500, 380, 50604, 50604, 2275, 1340, 13, 400, 300, 30445, 439, 264, 7908, 35127, 300, 321, 362, 11, 457, 300, 7829, 50814, 50814, 257, 688, 295, 7908, 40019, 13, 407, 5699, 291, 643, 281, 652, 18028, 9799, 11, 291, 434, 516, 281, 51082, 51082, 362, 264, 3922, 281, 11659, 544, 3030, 257, 7908, 3353, 420, 7908, 3671, 11, 457, 291, 434, 516, 51366, 51366, 281, 362, 281, 2826, 420, 360, 544, 5215, 11, 597, 393, 312, 3997, 293, 1310, 291, 434, 406, 516, 51592, 51592, 281, 312, 1075, 281, 2573, 484, 264, 1867, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10140840342787445, "compression_ratio": 1.8705882352941177, "no_caption_prob": 3.883035242324695e-05}, {"id": 126, "seek": 75236, "start": 752.36, "end": 759.92, "text": " Yeah. And it strikes me that this doing more analysis piece, that there are maybe two different", "tokens": [50364, 865, 13, 400, 309, 16750, 385, 300, 341, 884, 544, 5215, 2522, 11, 300, 456, 366, 1310, 732, 819, 50742, 50742, 10479, 510, 300, 2139, 746, 307, 458, 712, 11, 457, 2516, 257, 688, 295, 589, 281, 458, 7263, 51198, 51198, 281, 264, 4314, 689, 309, 311, 4476, 517, 15869, 712, 570, 309, 311, 13785, 13, 1743, 307, 456, 257, 7579, 51486, 51486, 1520, 13963, 490, 264, 700, 1286, 322, 257, 24122, 3787, 30, 1743, 12120, 458, 712, 11, 457, 15667, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13755254184498505, "compression_ratio": 1.654867256637168, "no_caption_prob": 8.480524411424994e-05}, {"id": 127, "seek": 75236, "start": 759.92, "end": 769.04, "text": " categories here that either something is knowable, but takes a lot of work to know potentially", "tokens": [50364, 865, 13, 400, 309, 16750, 385, 300, 341, 884, 544, 5215, 2522, 11, 300, 456, 366, 1310, 732, 819, 50742, 50742, 10479, 510, 300, 2139, 746, 307, 458, 712, 11, 457, 2516, 257, 688, 295, 589, 281, 458, 7263, 51198, 51198, 281, 264, 4314, 689, 309, 311, 4476, 517, 15869, 712, 570, 309, 311, 13785, 13, 1743, 307, 456, 257, 7579, 51486, 51486, 1520, 13963, 490, 264, 700, 1286, 322, 257, 24122, 3787, 30, 1743, 12120, 458, 712, 11, 457, 15667, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13755254184498505, "compression_ratio": 1.654867256637168, "no_caption_prob": 8.480524411424994e-05}, {"id": 128, "seek": 75236, "start": 769.04, "end": 774.8000000000001, "text": " to the degree where it's essentially unknowable because it's infinite. Like is there a forced", "tokens": [50364, 865, 13, 400, 309, 16750, 385, 300, 341, 884, 544, 5215, 2522, 11, 300, 456, 366, 1310, 732, 819, 50742, 50742, 10479, 510, 300, 2139, 746, 307, 458, 712, 11, 457, 2516, 257, 688, 295, 589, 281, 458, 7263, 51198, 51198, 281, 264, 4314, 689, 309, 311, 4476, 517, 15869, 712, 570, 309, 311, 13785, 13, 1743, 307, 456, 257, 7579, 51486, 51486, 1520, 13963, 490, 264, 700, 1286, 322, 257, 24122, 3787, 30, 1743, 12120, 458, 712, 11, 457, 15667, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13755254184498505, "compression_ratio": 1.654867256637168, "no_caption_prob": 8.480524411424994e-05}, {"id": 129, "seek": 75236, "start": 774.8000000000001, "end": 780.84, "text": " checkmate from the first move on a chessboard? Like technically knowable, but practically", "tokens": [50364, 865, 13, 400, 309, 16750, 385, 300, 341, 884, 544, 5215, 2522, 11, 300, 456, 366, 1310, 732, 819, 50742, 50742, 10479, 510, 300, 2139, 746, 307, 458, 712, 11, 457, 2516, 257, 688, 295, 589, 281, 458, 7263, 51198, 51198, 281, 264, 4314, 689, 309, 311, 4476, 517, 15869, 712, 570, 309, 311, 13785, 13, 1743, 307, 456, 257, 7579, 51486, 51486, 1520, 13963, 490, 264, 700, 1286, 322, 257, 24122, 3787, 30, 1743, 12120, 458, 712, 11, 457, 15667, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13755254184498505, "compression_ratio": 1.654867256637168, "no_caption_prob": 8.480524411424994e-05}, {"id": 130, "seek": 78084, "start": 780.84, "end": 787.2800000000001, "text": " unknowable or even if you knew, maybe the sequence of moves that would lead you there", "tokens": [50364, 517, 15869, 712, 420, 754, 498, 291, 2586, 11, 1310, 264, 8310, 295, 6067, 300, 576, 1477, 291, 456, 50686, 50686, 307, 370, 2416, 300, 309, 311, 406, 29975, 1589, 13, 50878, 50878, 509, 914, 309, 311, 406, 11, 291, 393, 380, 14722, 309, 30, 51052, 51052, 1610, 498, 291, 14722, 309, 11, 309, 311, 411, 11, 1338, 11, 510, 311, 257, 1329, 295, 2744, 2217, 18723, 295, 439, 264, 1944, 51382, 51382, 13019, 281, 613, 819, 3876, 300, 2709, 291, 18031, 2098, 281, 4196, 365, 257, 7579, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1210733289303987, "compression_ratio": 1.6108597285067874, "no_caption_prob": 5.305717058945447e-05}, {"id": 131, "seek": 78084, "start": 787.2800000000001, "end": 791.12, "text": " is so large that it's not usable information.", "tokens": [50364, 517, 15869, 712, 420, 754, 498, 291, 2586, 11, 1310, 264, 8310, 295, 6067, 300, 576, 1477, 291, 456, 50686, 50686, 307, 370, 2416, 300, 309, 311, 406, 29975, 1589, 13, 50878, 50878, 509, 914, 309, 311, 406, 11, 291, 393, 380, 14722, 309, 30, 51052, 51052, 1610, 498, 291, 14722, 309, 11, 309, 311, 411, 11, 1338, 11, 510, 311, 257, 1329, 295, 2744, 2217, 18723, 295, 439, 264, 1944, 51382, 51382, 13019, 281, 613, 819, 3876, 300, 2709, 291, 18031, 2098, 281, 4196, 365, 257, 7579, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1210733289303987, "compression_ratio": 1.6108597285067874, "no_caption_prob": 5.305717058945447e-05}, {"id": 132, "seek": 78084, "start": 791.12, "end": 794.6, "text": " You mean it's not, you can't compute it?", "tokens": [50364, 517, 15869, 712, 420, 754, 498, 291, 2586, 11, 1310, 264, 8310, 295, 6067, 300, 576, 1477, 291, 456, 50686, 50686, 307, 370, 2416, 300, 309, 311, 406, 29975, 1589, 13, 50878, 50878, 509, 914, 309, 311, 406, 11, 291, 393, 380, 14722, 309, 30, 51052, 51052, 1610, 498, 291, 14722, 309, 11, 309, 311, 411, 11, 1338, 11, 510, 311, 257, 1329, 295, 2744, 2217, 18723, 295, 439, 264, 1944, 51382, 51382, 13019, 281, 613, 819, 3876, 300, 2709, 291, 18031, 2098, 281, 4196, 365, 257, 7579, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1210733289303987, "compression_ratio": 1.6108597285067874, "no_caption_prob": 5.305717058945447e-05}, {"id": 133, "seek": 78084, "start": 794.6, "end": 801.2, "text": " Or if you compute it, it's like, yeah, here's a list of size 30 trillion of all the possible", "tokens": [50364, 517, 15869, 712, 420, 754, 498, 291, 2586, 11, 1310, 264, 8310, 295, 6067, 300, 576, 1477, 291, 456, 50686, 50686, 307, 370, 2416, 300, 309, 311, 406, 29975, 1589, 13, 50878, 50878, 509, 914, 309, 311, 406, 11, 291, 393, 380, 14722, 309, 30, 51052, 51052, 1610, 498, 291, 14722, 309, 11, 309, 311, 411, 11, 1338, 11, 510, 311, 257, 1329, 295, 2744, 2217, 18723, 295, 439, 264, 1944, 51382, 51382, 13019, 281, 613, 819, 3876, 300, 2709, 291, 18031, 2098, 281, 4196, 365, 257, 7579, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1210733289303987, "compression_ratio": 1.6108597285067874, "no_caption_prob": 5.305717058945447e-05}, {"id": 134, "seek": 78084, "start": 801.2, "end": 806.4000000000001, "text": " responses to these different lines that gives you guaranteed ways to respond with a forced", "tokens": [50364, 517, 15869, 712, 420, 754, 498, 291, 2586, 11, 1310, 264, 8310, 295, 6067, 300, 576, 1477, 291, 456, 50686, 50686, 307, 370, 2416, 300, 309, 311, 406, 29975, 1589, 13, 50878, 50878, 509, 914, 309, 311, 406, 11, 291, 393, 380, 14722, 309, 30, 51052, 51052, 1610, 498, 291, 14722, 309, 11, 309, 311, 411, 11, 1338, 11, 510, 311, 257, 1329, 295, 2744, 2217, 18723, 295, 439, 264, 1944, 51382, 51382, 13019, 281, 613, 819, 3876, 300, 2709, 291, 18031, 2098, 281, 4196, 365, 257, 7579, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1210733289303987, "compression_ratio": 1.6108597285067874, "no_caption_prob": 5.305717058945447e-05}, {"id": 135, "seek": 80640, "start": 806.4, "end": 810.88, "text": " checkmate and it's like, okay, well I can't really use that. So even if it's technically", "tokens": [50364, 1520, 13963, 293, 309, 311, 411, 11, 1392, 11, 731, 286, 393, 380, 534, 764, 300, 13, 407, 754, 498, 309, 311, 12120, 50588, 50588, 458, 712, 11, 309, 311, 4476, 382, 264, 2372, 295, 5215, 293, 1589, 281, 4172, 4176, 498, 746, 50918, 50918, 307, 458, 712, 11587, 13202, 11, 309, 3719, 281, 36870, 885, 517, 15869, 712, 13, 583, 456, 311, 51416, 51416, 411, 517, 15869, 712, 293, 550, 456, 311, 458, 712, 365, 589, 13, 3950, 366, 732, 819, 721, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.10883059284903786, "compression_ratio": 1.650943396226415, "no_caption_prob": 5.224940105108544e-05}, {"id": 136, "seek": 80640, "start": 810.88, "end": 817.48, "text": " knowable, it's essentially as the amount of analysis and information to deduce if something", "tokens": [50364, 1520, 13963, 293, 309, 311, 411, 11, 1392, 11, 731, 286, 393, 380, 534, 764, 300, 13, 407, 754, 498, 309, 311, 12120, 50588, 50588, 458, 712, 11, 309, 311, 4476, 382, 264, 2372, 295, 5215, 293, 1589, 281, 4172, 4176, 498, 746, 50918, 50918, 307, 458, 712, 11587, 13202, 11, 309, 3719, 281, 36870, 885, 517, 15869, 712, 13, 583, 456, 311, 51416, 51416, 411, 517, 15869, 712, 293, 550, 456, 311, 458, 712, 365, 589, 13, 3950, 366, 732, 819, 721, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.10883059284903786, "compression_ratio": 1.650943396226415, "no_caption_prob": 5.224940105108544e-05}, {"id": 137, "seek": 80640, "start": 817.48, "end": 827.4399999999999, "text": " is knowable approaches infinity, it starts to resemble being unknowable. But there's", "tokens": [50364, 1520, 13963, 293, 309, 311, 411, 11, 1392, 11, 731, 286, 393, 380, 534, 764, 300, 13, 407, 754, 498, 309, 311, 12120, 50588, 50588, 458, 712, 11, 309, 311, 4476, 382, 264, 2372, 295, 5215, 293, 1589, 281, 4172, 4176, 498, 746, 50918, 50918, 307, 458, 712, 11587, 13202, 11, 309, 3719, 281, 36870, 885, 517, 15869, 712, 13, 583, 456, 311, 51416, 51416, 411, 517, 15869, 712, 293, 550, 456, 311, 458, 712, 365, 589, 13, 3950, 366, 732, 819, 721, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.10883059284903786, "compression_ratio": 1.650943396226415, "no_caption_prob": 5.224940105108544e-05}, {"id": 138, "seek": 80640, "start": 827.4399999999999, "end": 831.86, "text": " like unknowable and then there's knowable with work. Those are two different things.", "tokens": [50364, 1520, 13963, 293, 309, 311, 411, 11, 1392, 11, 731, 286, 393, 380, 534, 764, 300, 13, 407, 754, 498, 309, 311, 12120, 50588, 50588, 458, 712, 11, 309, 311, 4476, 382, 264, 2372, 295, 5215, 293, 1589, 281, 4172, 4176, 498, 746, 50918, 50918, 307, 458, 712, 11587, 13202, 11, 309, 3719, 281, 36870, 885, 517, 15869, 712, 13, 583, 456, 311, 51416, 51416, 411, 517, 15869, 712, 293, 550, 456, 311, 458, 712, 365, 589, 13, 3950, 366, 732, 819, 721, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.10883059284903786, "compression_ratio": 1.650943396226415, "no_caption_prob": 5.224940105108544e-05}, {"id": 139, "seek": 83186, "start": 831.86, "end": 839.76, "text": " So like an example of something that is literally unknowable would be like, if you take eval", "tokens": [50364, 407, 411, 364, 1365, 295, 746, 300, 307, 3736, 517, 15869, 712, 576, 312, 411, 11, 498, 291, 747, 1073, 304, 50759, 50759, 666, 2696, 11, 498, 291, 1190, 1073, 304, 11, 437, 393, 341, 3089, 360, 30, 1042, 11, 498, 309, 311, 490, 4195, 4846, 11, 300, 51115, 51115, 4195, 4846, 307, 674, 5666, 2001, 13, 509, 500, 380, 458, 437, 264, 5472, 11, 456, 366, 572, 29905, 322, 309, 13, 51345, 51345, 407, 731, 11, 309, 311, 406, 674, 5666, 2001, 11, 309, 311, 257, 6798, 13, 51511, 51511, 1779, 13, 1610, 567, 3255, 30, 51661, 51661, 2704, 309, 311, 257, 6798, 674, 5666, 2001, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.2303565399987357, "compression_ratio": 1.6484018264840183, "no_caption_prob": 8.800946488918271e-06}, {"id": 140, "seek": 83186, "start": 839.76, "end": 846.88, "text": " into account, if you run eval, what can this code do? Well, if it's from user input, that", "tokens": [50364, 407, 411, 364, 1365, 295, 746, 300, 307, 3736, 517, 15869, 712, 576, 312, 411, 11, 498, 291, 747, 1073, 304, 50759, 50759, 666, 2696, 11, 498, 291, 1190, 1073, 304, 11, 437, 393, 341, 3089, 360, 30, 1042, 11, 498, 309, 311, 490, 4195, 4846, 11, 300, 51115, 51115, 4195, 4846, 307, 674, 5666, 2001, 13, 509, 500, 380, 458, 437, 264, 5472, 11, 456, 366, 572, 29905, 322, 309, 13, 51345, 51345, 407, 731, 11, 309, 311, 406, 674, 5666, 2001, 11, 309, 311, 257, 6798, 13, 51511, 51511, 1779, 13, 1610, 567, 3255, 30, 51661, 51661, 2704, 309, 311, 257, 6798, 674, 5666, 2001, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.2303565399987357, "compression_ratio": 1.6484018264840183, "no_caption_prob": 8.800946488918271e-06}, {"id": 141, "seek": 83186, "start": 846.88, "end": 851.48, "text": " user input is undefined. You don't know what the bound, there are no bounds on it.", "tokens": [50364, 407, 411, 364, 1365, 295, 746, 300, 307, 3736, 517, 15869, 712, 576, 312, 411, 11, 498, 291, 747, 1073, 304, 50759, 50759, 666, 2696, 11, 498, 291, 1190, 1073, 304, 11, 437, 393, 341, 3089, 360, 30, 1042, 11, 498, 309, 311, 490, 4195, 4846, 11, 300, 51115, 51115, 4195, 4846, 307, 674, 5666, 2001, 13, 509, 500, 380, 458, 437, 264, 5472, 11, 456, 366, 572, 29905, 322, 309, 13, 51345, 51345, 407, 731, 11, 309, 311, 406, 674, 5666, 2001, 11, 309, 311, 257, 6798, 13, 51511, 51511, 1779, 13, 1610, 567, 3255, 30, 51661, 51661, 2704, 309, 311, 257, 6798, 674, 5666, 2001, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.2303565399987357, "compression_ratio": 1.6484018264840183, "no_caption_prob": 8.800946488918271e-06}, {"id": 142, "seek": 83186, "start": 851.48, "end": 854.8000000000001, "text": " So well, it's not undefined, it's a string.", "tokens": [50364, 407, 411, 364, 1365, 295, 746, 300, 307, 3736, 517, 15869, 712, 576, 312, 411, 11, 498, 291, 747, 1073, 304, 50759, 50759, 666, 2696, 11, 498, 291, 1190, 1073, 304, 11, 437, 393, 341, 3089, 360, 30, 1042, 11, 498, 309, 311, 490, 4195, 4846, 11, 300, 51115, 51115, 4195, 4846, 307, 674, 5666, 2001, 13, 509, 500, 380, 458, 437, 264, 5472, 11, 456, 366, 572, 29905, 322, 309, 13, 51345, 51345, 407, 731, 11, 309, 311, 406, 674, 5666, 2001, 11, 309, 311, 257, 6798, 13, 51511, 51511, 1779, 13, 1610, 567, 3255, 30, 51661, 51661, 2704, 309, 311, 257, 6798, 674, 5666, 2001, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.2303565399987357, "compression_ratio": 1.6484018264840183, "no_caption_prob": 8.800946488918271e-06}, {"id": 143, "seek": 83186, "start": 854.8000000000001, "end": 857.8000000000001, "text": " Right. Or who knows?", "tokens": [50364, 407, 411, 364, 1365, 295, 746, 300, 307, 3736, 517, 15869, 712, 576, 312, 411, 11, 498, 291, 747, 1073, 304, 50759, 50759, 666, 2696, 11, 498, 291, 1190, 1073, 304, 11, 437, 393, 341, 3089, 360, 30, 1042, 11, 498, 309, 311, 490, 4195, 4846, 11, 300, 51115, 51115, 4195, 4846, 307, 674, 5666, 2001, 13, 509, 500, 380, 458, 437, 264, 5472, 11, 456, 366, 572, 29905, 322, 309, 13, 51345, 51345, 407, 731, 11, 309, 311, 406, 674, 5666, 2001, 11, 309, 311, 257, 6798, 13, 51511, 51511, 1779, 13, 1610, 567, 3255, 30, 51661, 51661, 2704, 309, 311, 257, 6798, 674, 5666, 2001, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.2303565399987357, "compression_ratio": 1.6484018264840183, "no_caption_prob": 8.800946488918271e-06}, {"id": 144, "seek": 83186, "start": 857.8000000000001, "end": 860.48, "text": " Maybe it's a string undefined.", "tokens": [50364, 407, 411, 364, 1365, 295, 746, 300, 307, 3736, 517, 15869, 712, 576, 312, 411, 11, 498, 291, 747, 1073, 304, 50759, 50759, 666, 2696, 11, 498, 291, 1190, 1073, 304, 11, 437, 393, 341, 3089, 360, 30, 1042, 11, 498, 309, 311, 490, 4195, 4846, 11, 300, 51115, 51115, 4195, 4846, 307, 674, 5666, 2001, 13, 509, 500, 380, 458, 437, 264, 5472, 11, 456, 366, 572, 29905, 322, 309, 13, 51345, 51345, 407, 731, 11, 309, 311, 406, 674, 5666, 2001, 11, 309, 311, 257, 6798, 13, 51511, 51511, 1779, 13, 1610, 567, 3255, 30, 51661, 51661, 2704, 309, 311, 257, 6798, 674, 5666, 2001, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.2303565399987357, "compression_ratio": 1.6484018264840183, "no_caption_prob": 8.800946488918271e-06}, {"id": 145, "seek": 86048, "start": 860.48, "end": 868.72, "text": " Yeah, it's not known. And therefore there's not enough information there to analyze certain", "tokens": [50364, 865, 11, 309, 311, 406, 2570, 13, 400, 4412, 456, 311, 406, 1547, 1589, 456, 281, 12477, 1629, 50776, 50776, 721, 466, 300, 13, 13813, 456, 366, 1629, 15077, 689, 291, 2049, 751, 466, 3089, 51084, 51084, 3095, 5215, 293, 1310, 309, 311, 411, 257, 5994, 2372, 295, 589, 13, 2704, 291, 643, 512, 2183, 39966, 51506, 51506, 9410, 2856, 10309, 281, 22364, 257, 1469, 281, 5039, 341, 1154, 11, 457, 309, 311, 12120, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12454372797256862, "compression_ratio": 1.6017699115044248, "no_caption_prob": 2.6687761419452727e-05}, {"id": 146, "seek": 86048, "start": 868.72, "end": 874.88, "text": " things about that. Whereas there are certain scenarios where you often talk about code", "tokens": [50364, 865, 11, 309, 311, 406, 2570, 13, 400, 4412, 456, 311, 406, 1547, 1589, 456, 281, 12477, 1629, 50776, 50776, 721, 466, 300, 13, 13813, 456, 366, 1629, 15077, 689, 291, 2049, 751, 466, 3089, 51084, 51084, 3095, 5215, 293, 1310, 309, 311, 411, 257, 5994, 2372, 295, 589, 13, 2704, 291, 643, 512, 2183, 39966, 51506, 51506, 9410, 2856, 10309, 281, 22364, 257, 1469, 281, 5039, 341, 1154, 11, 457, 309, 311, 12120, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12454372797256862, "compression_ratio": 1.6017699115044248, "no_caption_prob": 2.6687761419452727e-05}, {"id": 147, "seek": 86048, "start": 874.88, "end": 883.32, "text": " flow analysis and maybe it's like a massive amount of work. Maybe you need some postdoc", "tokens": [50364, 865, 11, 309, 311, 406, 2570, 13, 400, 4412, 456, 311, 406, 1547, 1589, 456, 281, 12477, 1629, 50776, 50776, 721, 466, 300, 13, 13813, 456, 366, 1629, 15077, 689, 291, 2049, 751, 466, 3089, 51084, 51084, 3095, 5215, 293, 1310, 309, 311, 411, 257, 5994, 2372, 295, 589, 13, 2704, 291, 643, 512, 2183, 39966, 51506, 51506, 9410, 2856, 10309, 281, 22364, 257, 1469, 281, 5039, 341, 1154, 11, 457, 309, 311, 12120, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12454372797256862, "compression_ratio": 1.6017699115044248, "no_caption_prob": 2.6687761419452727e-05}, {"id": 148, "seek": 86048, "start": 883.32, "end": 890.2, "text": " programming language researchers to assemble a team to solve this problem, but it's technically", "tokens": [50364, 865, 11, 309, 311, 406, 2570, 13, 400, 4412, 456, 311, 406, 1547, 1589, 456, 281, 12477, 1629, 50776, 50776, 721, 466, 300, 13, 13813, 456, 366, 1629, 15077, 689, 291, 2049, 751, 466, 3089, 51084, 51084, 3095, 5215, 293, 1310, 309, 311, 411, 257, 5994, 2372, 295, 589, 13, 2704, 291, 643, 512, 2183, 39966, 51506, 51506, 9410, 2856, 10309, 281, 22364, 257, 1469, 281, 5039, 341, 1154, 11, 457, 309, 311, 12120, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12454372797256862, "compression_ratio": 1.6017699115044248, "no_caption_prob": 2.6687761419452727e-05}, {"id": 149, "seek": 89020, "start": 890.2, "end": 895.2800000000001, "text": " knowable and you could do that or it's just a huge amount of work.", "tokens": [50364, 458, 712, 293, 291, 727, 360, 300, 420, 309, 311, 445, 257, 2603, 2372, 295, 589, 13, 50618, 50618, 759, 291, 31569, 528, 281, 360, 300, 11, 1767, 3385, 385, 13, 50846, 50846, 400, 2699, 76, 307, 257, 588, 1880, 1901, 337, 613, 2740, 570, 382, 291, 600, 1333, 295, 668, 12075, 278, 51090, 51090, 412, 309, 307, 544, 458, 712, 570, 309, 311, 544, 25534, 13, 1743, 294, 527, 24122, 21663, 11, 309, 311, 544, 47540, 51430, 51430, 281, 264, 24122, 3787, 300, 445, 575, 257, 16458, 295, 3755, 2831, 813, 264, 2891, 24122, 2535, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.13668086741230276, "compression_ratio": 1.646090534979424, "no_caption_prob": 5.30743709532544e-05}, {"id": 150, "seek": 89020, "start": 895.2800000000001, "end": 899.84, "text": " If you listener want to do that, please contact me.", "tokens": [50364, 458, 712, 293, 291, 727, 360, 300, 420, 309, 311, 445, 257, 2603, 2372, 295, 589, 13, 50618, 50618, 759, 291, 31569, 528, 281, 360, 300, 11, 1767, 3385, 385, 13, 50846, 50846, 400, 2699, 76, 307, 257, 588, 1880, 1901, 337, 613, 2740, 570, 382, 291, 600, 1333, 295, 668, 12075, 278, 51090, 51090, 412, 309, 307, 544, 458, 712, 570, 309, 311, 544, 25534, 13, 1743, 294, 527, 24122, 21663, 11, 309, 311, 544, 47540, 51430, 51430, 281, 264, 24122, 3787, 300, 445, 575, 257, 16458, 295, 3755, 2831, 813, 264, 2891, 24122, 2535, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.13668086741230276, "compression_ratio": 1.646090534979424, "no_caption_prob": 5.30743709532544e-05}, {"id": 151, "seek": 89020, "start": 899.84, "end": 904.72, "text": " And Elm is a very interesting space for these problems because as you've sort of been hinting", "tokens": [50364, 458, 712, 293, 291, 727, 360, 300, 420, 309, 311, 445, 257, 2603, 2372, 295, 589, 13, 50618, 50618, 759, 291, 31569, 528, 281, 360, 300, 11, 1767, 3385, 385, 13, 50846, 50846, 400, 2699, 76, 307, 257, 588, 1880, 1901, 337, 613, 2740, 570, 382, 291, 600, 1333, 295, 668, 12075, 278, 51090, 51090, 412, 309, 307, 544, 458, 712, 570, 309, 311, 544, 25534, 13, 1743, 294, 527, 24122, 21663, 11, 309, 311, 544, 47540, 51430, 51430, 281, 264, 24122, 3787, 300, 445, 575, 257, 16458, 295, 3755, 2831, 813, 264, 2891, 24122, 2535, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.13668086741230276, "compression_ratio": 1.646090534979424, "no_caption_prob": 5.30743709532544e-05}, {"id": 152, "seek": 89020, "start": 904.72, "end": 911.5200000000001, "text": " at it is more knowable because it's more constraint. Like in our chess analogy, it's more akin", "tokens": [50364, 458, 712, 293, 291, 727, 360, 300, 420, 309, 311, 445, 257, 2603, 2372, 295, 589, 13, 50618, 50618, 759, 291, 31569, 528, 281, 360, 300, 11, 1767, 3385, 385, 13, 50846, 50846, 400, 2699, 76, 307, 257, 588, 1880, 1901, 337, 613, 2740, 570, 382, 291, 600, 1333, 295, 668, 12075, 278, 51090, 51090, 412, 309, 307, 544, 458, 712, 570, 309, 311, 544, 25534, 13, 1743, 294, 527, 24122, 21663, 11, 309, 311, 544, 47540, 51430, 51430, 281, 264, 24122, 3787, 300, 445, 575, 257, 16458, 295, 3755, 2831, 813, 264, 2891, 24122, 2535, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.13668086741230276, "compression_ratio": 1.646090534979424, "no_caption_prob": 5.30743709532544e-05}, {"id": 153, "seek": 89020, "start": 911.5200000000001, "end": 916.48, "text": " to the chessboard that just has a handful of pieces rather than the starting chess position.", "tokens": [50364, 458, 712, 293, 291, 727, 360, 300, 420, 309, 311, 445, 257, 2603, 2372, 295, 589, 13, 50618, 50618, 759, 291, 31569, 528, 281, 360, 300, 11, 1767, 3385, 385, 13, 50846, 50846, 400, 2699, 76, 307, 257, 588, 1880, 1901, 337, 613, 2740, 570, 382, 291, 600, 1333, 295, 668, 12075, 278, 51090, 51090, 412, 309, 307, 544, 458, 712, 570, 309, 311, 544, 25534, 13, 1743, 294, 527, 24122, 21663, 11, 309, 311, 544, 47540, 51430, 51430, 281, 264, 24122, 3787, 300, 445, 575, 257, 16458, 295, 3755, 2831, 813, 264, 2891, 24122, 2535, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.13668086741230276, "compression_ratio": 1.646090534979424, "no_caption_prob": 5.30743709532544e-05}, {"id": 154, "seek": 91648, "start": 916.48, "end": 923.72, "text": " Yeah. So you're now hinting at something interesting is like, why is Elm more knowable, more analyzable", "tokens": [50364, 865, 13, 407, 291, 434, 586, 12075, 278, 412, 746, 1880, 307, 411, 11, 983, 307, 2699, 76, 544, 458, 712, 11, 544, 6459, 89, 712, 50726, 50726, 813, 661, 8650, 411, 15778, 30, 400, 281, 385, 11, 456, 366, 3866, 7270, 281, 300, 13, 51048, 51048, 1485, 295, 597, 307, 300, 456, 311, 257, 31958, 13, 12955, 380, 1643, 411, 257, 955, 551, 11, 457, 309, 767, 307, 51308, 51308, 570, 7263, 562, 291, 12477, 428, 15778, 3089, 11, 309, 311, 257, 3840, 295, 4553, 43189, 11, 51555, 51555], "temperature": 0.0, "avg_logprob": -0.12192153930664062, "compression_ratio": 1.553191489361702, "no_caption_prob": 1.0129709153261501e-05}, {"id": 155, "seek": 91648, "start": 923.72, "end": 930.16, "text": " than other languages like JavaScript? And to me, there are multiple aspects to that.", "tokens": [50364, 865, 13, 407, 291, 434, 586, 12075, 278, 412, 746, 1880, 307, 411, 11, 983, 307, 2699, 76, 544, 458, 712, 11, 544, 6459, 89, 712, 50726, 50726, 813, 661, 8650, 411, 15778, 30, 400, 281, 385, 11, 456, 366, 3866, 7270, 281, 300, 13, 51048, 51048, 1485, 295, 597, 307, 300, 456, 311, 257, 31958, 13, 12955, 380, 1643, 411, 257, 955, 551, 11, 457, 309, 767, 307, 51308, 51308, 570, 7263, 562, 291, 12477, 428, 15778, 3089, 11, 309, 311, 257, 3840, 295, 4553, 43189, 11, 51555, 51555], "temperature": 0.0, "avg_logprob": -0.12192153930664062, "compression_ratio": 1.553191489361702, "no_caption_prob": 1.0129709153261501e-05}, {"id": 156, "seek": 91648, "start": 930.16, "end": 935.36, "text": " One of which is that there's a compiler. Doesn't seem like a big thing, but it actually is", "tokens": [50364, 865, 13, 407, 291, 434, 586, 12075, 278, 412, 746, 1880, 307, 411, 11, 983, 307, 2699, 76, 544, 458, 712, 11, 544, 6459, 89, 712, 50726, 50726, 813, 661, 8650, 411, 15778, 30, 400, 281, 385, 11, 456, 366, 3866, 7270, 281, 300, 13, 51048, 51048, 1485, 295, 597, 307, 300, 456, 311, 257, 31958, 13, 12955, 380, 1643, 411, 257, 955, 551, 11, 457, 309, 767, 307, 51308, 51308, 570, 7263, 562, 291, 12477, 428, 15778, 3089, 11, 309, 311, 257, 3840, 295, 4553, 43189, 11, 51555, 51555], "temperature": 0.0, "avg_logprob": -0.12192153930664062, "compression_ratio": 1.553191489361702, "no_caption_prob": 1.0129709153261501e-05}, {"id": 157, "seek": 91648, "start": 935.36, "end": 940.3000000000001, "text": " because potentially when you analyze your JavaScript code, it's a bunch of gibberish,", "tokens": [50364, 865, 13, 407, 291, 434, 586, 12075, 278, 412, 746, 1880, 307, 411, 11, 983, 307, 2699, 76, 544, 458, 712, 11, 544, 6459, 89, 712, 50726, 50726, 813, 661, 8650, 411, 15778, 30, 400, 281, 385, 11, 456, 366, 3866, 7270, 281, 300, 13, 51048, 51048, 1485, 295, 597, 307, 300, 456, 311, 257, 31958, 13, 12955, 380, 1643, 411, 257, 955, 551, 11, 457, 309, 767, 307, 51308, 51308, 570, 7263, 562, 291, 12477, 428, 15778, 3089, 11, 309, 311, 257, 3840, 295, 4553, 43189, 11, 51555, 51555], "temperature": 0.0, "avg_logprob": -0.12192153930664062, "compression_ratio": 1.553191489361702, "no_caption_prob": 1.0129709153261501e-05}, {"id": 158, "seek": 94030, "start": 940.3, "end": 948.64, "text": " like saying A equals A or one equals two or well, actually not. Yeah. But basically what", "tokens": [50364, 411, 1566, 316, 6915, 316, 420, 472, 6915, 732, 420, 731, 11, 767, 406, 13, 865, 13, 583, 1936, 437, 50781, 50781, 291, 393, 362, 307, 257, 3089, 300, 1542, 411, 3089, 11, 457, 1177, 380, 914, 1340, 411, 309, 15400, 51141, 51141, 674, 5666, 2001, 9102, 420, 309, 575, 16741, 4361, 45298, 13, 51451, 51451, 467, 311, 23980, 578, 984, 7363, 11, 457, 406, 731, 7642, 3089, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.21139500239124037, "compression_ratio": 1.510752688172043, "no_caption_prob": 3.944103809772059e-05}, {"id": 159, "seek": 94030, "start": 948.64, "end": 955.8399999999999, "text": " you can have is a code that looks like code, but doesn't mean anything like it references", "tokens": [50364, 411, 1566, 316, 6915, 316, 420, 472, 6915, 732, 420, 731, 11, 767, 406, 13, 865, 13, 583, 1936, 437, 50781, 50781, 291, 393, 362, 307, 257, 3089, 300, 1542, 411, 3089, 11, 457, 1177, 380, 914, 1340, 411, 309, 15400, 51141, 51141, 674, 5666, 2001, 9102, 420, 309, 575, 16741, 4361, 45298, 13, 51451, 51451, 467, 311, 23980, 578, 984, 7363, 11, 457, 406, 731, 7642, 3089, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.21139500239124037, "compression_ratio": 1.510752688172043, "no_caption_prob": 3.944103809772059e-05}, {"id": 160, "seek": 94030, "start": 955.8399999999999, "end": 962.04, "text": " undefined variables or it has embedded semantics.", "tokens": [50364, 411, 1566, 316, 6915, 316, 420, 472, 6915, 732, 420, 731, 11, 767, 406, 13, 865, 13, 583, 1936, 437, 50781, 50781, 291, 393, 362, 307, 257, 3089, 300, 1542, 411, 3089, 11, 457, 1177, 380, 914, 1340, 411, 309, 15400, 51141, 51141, 674, 5666, 2001, 9102, 420, 309, 575, 16741, 4361, 45298, 13, 51451, 51451, 467, 311, 23980, 578, 984, 7363, 11, 457, 406, 731, 7642, 3089, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.21139500239124037, "compression_ratio": 1.510752688172043, "no_caption_prob": 3.944103809772059e-05}, {"id": 161, "seek": 94030, "start": 962.04, "end": 965.4799999999999, "text": " It's syntactically valid, but not well defined code.", "tokens": [50364, 411, 1566, 316, 6915, 316, 420, 472, 6915, 732, 420, 731, 11, 767, 406, 13, 865, 13, 583, 1936, 437, 50781, 50781, 291, 393, 362, 307, 257, 3089, 300, 1542, 411, 3089, 11, 457, 1177, 380, 914, 1340, 411, 309, 15400, 51141, 51141, 674, 5666, 2001, 9102, 420, 309, 575, 16741, 4361, 45298, 13, 51451, 51451, 467, 311, 23980, 578, 984, 7363, 11, 457, 406, 731, 7642, 3089, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.21139500239124037, "compression_ratio": 1.510752688172043, "no_caption_prob": 3.944103809772059e-05}, {"id": 162, "seek": 96548, "start": 965.48, "end": 971.4, "text": " Yeah, exactly. And those are all things that a compiler checks for. So when you know that", "tokens": [50364, 865, 11, 2293, 13, 400, 729, 366, 439, 721, 300, 257, 31958, 13834, 337, 13, 407, 562, 291, 458, 300, 50660, 50660, 613, 366, 10033, 337, 291, 538, 264, 31958, 11, 538, 257, 31958, 11, 550, 291, 393, 722, 281, 10687, 50979, 50979, 322, 552, 13, 400, 300, 307, 1596, 1021, 767, 13, 407, 15778, 1177, 380, 362, 257, 31958, 11, 457, 51230, 51230, 437, 309, 775, 11, 437, 309, 775, 362, 307, 257, 287, 5106, 13, 407, 437, 5314, 493, 2737, 337, 2856, 411, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10121351949284586, "compression_ratio": 1.7053140096618358, "no_caption_prob": 3.169172487105243e-05}, {"id": 163, "seek": 96548, "start": 971.4, "end": 977.78, "text": " these are checked for you by the compiler, by a compiler, then you can start to rely", "tokens": [50364, 865, 11, 2293, 13, 400, 729, 366, 439, 721, 300, 257, 31958, 13834, 337, 13, 407, 562, 291, 458, 300, 50660, 50660, 613, 366, 10033, 337, 291, 538, 264, 31958, 11, 538, 257, 31958, 11, 550, 291, 393, 722, 281, 10687, 50979, 50979, 322, 552, 13, 400, 300, 307, 1596, 1021, 767, 13, 407, 15778, 1177, 380, 362, 257, 31958, 11, 457, 51230, 51230, 437, 309, 775, 11, 437, 309, 775, 362, 307, 257, 287, 5106, 13, 407, 437, 5314, 493, 2737, 337, 2856, 411, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10121351949284586, "compression_ratio": 1.7053140096618358, "no_caption_prob": 3.169172487105243e-05}, {"id": 164, "seek": 96548, "start": 977.78, "end": 982.8000000000001, "text": " on them. And that is quite important actually. So JavaScript doesn't have a compiler, but", "tokens": [50364, 865, 11, 2293, 13, 400, 729, 366, 439, 721, 300, 257, 31958, 13834, 337, 13, 407, 562, 291, 458, 300, 50660, 50660, 613, 366, 10033, 337, 291, 538, 264, 31958, 11, 538, 257, 31958, 11, 550, 291, 393, 722, 281, 10687, 50979, 50979, 322, 552, 13, 400, 300, 307, 1596, 1021, 767, 13, 407, 15778, 1177, 380, 362, 257, 31958, 11, 457, 51230, 51230, 437, 309, 775, 11, 437, 309, 775, 362, 307, 257, 287, 5106, 13, 407, 437, 5314, 493, 2737, 337, 2856, 411, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10121351949284586, "compression_ratio": 1.7053140096618358, "no_caption_prob": 3.169172487105243e-05}, {"id": 165, "seek": 96548, "start": 982.8000000000001, "end": 989.76, "text": " what it does, what it does have is a linter. So what ends up happening for language like", "tokens": [50364, 865, 11, 2293, 13, 400, 729, 366, 439, 721, 300, 257, 31958, 13834, 337, 13, 407, 562, 291, 458, 300, 50660, 50660, 613, 366, 10033, 337, 291, 538, 264, 31958, 11, 538, 257, 31958, 11, 550, 291, 393, 722, 281, 10687, 50979, 50979, 322, 552, 13, 400, 300, 307, 1596, 1021, 767, 13, 407, 15778, 1177, 380, 362, 257, 31958, 11, 457, 51230, 51230, 437, 309, 775, 11, 437, 309, 775, 362, 307, 257, 287, 5106, 13, 407, 437, 5314, 493, 2737, 337, 2856, 411, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10121351949284586, "compression_ratio": 1.7053140096618358, "no_caption_prob": 3.169172487105243e-05}, {"id": 166, "seek": 98976, "start": 989.76, "end": 996.76, "text": " JavaScript is that you have a lot of ESL rules to do the same work that a compiler would", "tokens": [50364, 15778, 307, 300, 291, 362, 257, 688, 295, 12564, 43, 4474, 281, 360, 264, 912, 589, 300, 257, 31958, 576, 50714, 50714, 360, 13, 407, 291, 362, 257, 4978, 337, 674, 5666, 2001, 15400, 13, 509, 362, 257, 4978, 337, 10031, 23976, 16694, 763, 11, 51182, 51182, 1507, 411, 300, 13, 400, 1564, 291, 362, 729, 11, 550, 661, 4474, 393, 733, 295, 5672, 322, 729, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.14823705128261022, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.2606506061274558e-05}, {"id": 167, "seek": 98976, "start": 996.76, "end": 1006.12, "text": " do. So you have a rule for undefined references. You have a rule for reporting duplicate declarations,", "tokens": [50364, 15778, 307, 300, 291, 362, 257, 688, 295, 12564, 43, 4474, 281, 360, 264, 912, 589, 300, 257, 31958, 576, 50714, 50714, 360, 13, 407, 291, 362, 257, 4978, 337, 674, 5666, 2001, 15400, 13, 509, 362, 257, 4978, 337, 10031, 23976, 16694, 763, 11, 51182, 51182, 1507, 411, 300, 13, 400, 1564, 291, 362, 729, 11, 550, 661, 4474, 393, 733, 295, 5672, 322, 729, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.14823705128261022, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.2606506061274558e-05}, {"id": 168, "seek": 98976, "start": 1006.12, "end": 1014.24, "text": " stuff like that. And once you have those, then other rules can kind of depend on those", "tokens": [50364, 15778, 307, 300, 291, 362, 257, 688, 295, 12564, 43, 4474, 281, 360, 264, 912, 589, 300, 257, 31958, 576, 50714, 50714, 360, 13, 407, 291, 362, 257, 4978, 337, 674, 5666, 2001, 15400, 13, 509, 362, 257, 4978, 337, 10031, 23976, 16694, 763, 11, 51182, 51182, 1507, 411, 300, 13, 400, 1564, 291, 362, 729, 11, 550, 661, 4474, 393, 733, 295, 5672, 322, 729, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.14823705128261022, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.2606506061274558e-05}, {"id": 169, "seek": 101424, "start": 1014.24, "end": 1022.48, "text": " semantic issues being not there. But it is like they can kind of rely on those because", "tokens": [50364, 47982, 2663, 885, 406, 456, 13, 583, 309, 307, 411, 436, 393, 733, 295, 10687, 322, 729, 570, 50776, 50776, 561, 393, 28362, 264, 12564, 43, 686, 13603, 420, 561, 393, 445, 406, 9528, 729, 13, 400, 264, 1186, 300, 51220, 51220, 321, 733, 295, 643, 729, 4474, 307, 257, 1778, 983, 436, 434, 1228, 264, 9628, 11694, 51504, 51504, 337, 12564, 43, 686, 420, 661, 3873, 13, 759, 264, 2290, 1177, 380, 5374, 365, 309, 11, 550, 436, 434, 406, 516, 281, 312, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10901907357302579, "compression_ratio": 1.6108597285067874, "no_caption_prob": 2.5866105715977028e-05}, {"id": 170, "seek": 101424, "start": 1022.48, "end": 1031.36, "text": " people can disable the ESLint errors or people can just not enable those. And the fact that", "tokens": [50364, 47982, 2663, 885, 406, 456, 13, 583, 309, 307, 411, 436, 393, 733, 295, 10687, 322, 729, 570, 50776, 50776, 561, 393, 28362, 264, 12564, 43, 686, 13603, 420, 561, 393, 445, 406, 9528, 729, 13, 400, 264, 1186, 300, 51220, 51220, 321, 733, 295, 643, 729, 4474, 307, 257, 1778, 983, 436, 434, 1228, 264, 9628, 11694, 51504, 51504, 337, 12564, 43, 686, 420, 661, 3873, 13, 759, 264, 2290, 1177, 380, 5374, 365, 309, 11, 550, 436, 434, 406, 516, 281, 312, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10901907357302579, "compression_ratio": 1.6108597285067874, "no_caption_prob": 2.5866105715977028e-05}, {"id": 171, "seek": 101424, "start": 1031.36, "end": 1037.04, "text": " we kind of need those rules is a reason why they're using the recommended configuration", "tokens": [50364, 47982, 2663, 885, 406, 456, 13, 583, 309, 307, 411, 436, 393, 733, 295, 10687, 322, 729, 570, 50776, 50776, 561, 393, 28362, 264, 12564, 43, 686, 13603, 420, 561, 393, 445, 406, 9528, 729, 13, 400, 264, 1186, 300, 51220, 51220, 321, 733, 295, 643, 729, 4474, 307, 257, 1778, 983, 436, 434, 1228, 264, 9628, 11694, 51504, 51504, 337, 12564, 43, 686, 420, 661, 3873, 13, 759, 264, 2290, 1177, 380, 5374, 365, 309, 11, 550, 436, 434, 406, 516, 281, 312, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10901907357302579, "compression_ratio": 1.6108597285067874, "no_caption_prob": 2.5866105715977028e-05}, {"id": 172, "seek": 101424, "start": 1037.04, "end": 1042.68, "text": " for ESLint or other tools. If the tool doesn't ship with it, then they're not going to be", "tokens": [50364, 47982, 2663, 885, 406, 456, 13, 583, 309, 307, 411, 436, 393, 733, 295, 10687, 322, 729, 570, 50776, 50776, 561, 393, 28362, 264, 12564, 43, 686, 13603, 420, 561, 393, 445, 406, 9528, 729, 13, 400, 264, 1186, 300, 51220, 51220, 321, 733, 295, 643, 729, 4474, 307, 257, 1778, 983, 436, 434, 1228, 264, 9628, 11694, 51504, 51504, 337, 12564, 43, 686, 420, 661, 3873, 13, 759, 264, 2290, 1177, 380, 5374, 365, 309, 11, 550, 436, 434, 406, 516, 281, 312, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.10901907357302579, "compression_ratio": 1.6108597285067874, "no_caption_prob": 2.5866105715977028e-05}, {"id": 173, "seek": 104268, "start": 1042.68, "end": 1047.0, "text": " enforced and other rules will not be able to depend on those. And that is actually something", "tokens": [50364, 40953, 293, 661, 4474, 486, 406, 312, 1075, 281, 5672, 322, 729, 13, 400, 300, 307, 767, 746, 50580, 50580, 300, 321, 500, 380, 11, 321, 643, 365, 2699, 76, 570, 264, 31958, 13834, 337, 370, 867, 721, 300, 264, 50886, 50886, 2699, 76, 3131, 4474, 500, 380, 643, 604, 544, 27022, 13, 814, 393, 445, 10687, 322, 264, 721, 300, 264, 51176, 51176, 31958, 13834, 337, 293, 300, 311, 1547, 337, 1238, 709, 1340, 13, 51366, 51366, 1779, 13, 814, 1062, 362, 411, 257, 46143, 1802, 689, 538, 9275, 819, 4474, 293, 9275, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.13888010686757613, "compression_ratio": 1.7357723577235773, "no_caption_prob": 3.591240238165483e-05}, {"id": 174, "seek": 104268, "start": 1047.0, "end": 1053.1200000000001, "text": " that we don't, we need with Elm because the compiler checks for so many things that the", "tokens": [50364, 40953, 293, 661, 4474, 486, 406, 312, 1075, 281, 5672, 322, 729, 13, 400, 300, 307, 767, 746, 50580, 50580, 300, 321, 500, 380, 11, 321, 643, 365, 2699, 76, 570, 264, 31958, 13834, 337, 370, 867, 721, 300, 264, 50886, 50886, 2699, 76, 3131, 4474, 500, 380, 643, 604, 544, 27022, 13, 814, 393, 445, 10687, 322, 264, 721, 300, 264, 51176, 51176, 31958, 13834, 337, 293, 300, 311, 1547, 337, 1238, 709, 1340, 13, 51366, 51366, 1779, 13, 814, 1062, 362, 411, 257, 46143, 1802, 689, 538, 9275, 819, 4474, 293, 9275, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.13888010686757613, "compression_ratio": 1.7357723577235773, "no_caption_prob": 3.591240238165483e-05}, {"id": 175, "seek": 104268, "start": 1053.1200000000001, "end": 1058.92, "text": " Elm review rules don't need any more certainty. They can just rely on the things that the", "tokens": [50364, 40953, 293, 661, 4474, 486, 406, 312, 1075, 281, 5672, 322, 729, 13, 400, 300, 307, 767, 746, 50580, 50580, 300, 321, 500, 380, 11, 321, 643, 365, 2699, 76, 570, 264, 31958, 13834, 337, 370, 867, 721, 300, 264, 50886, 50886, 2699, 76, 3131, 4474, 500, 380, 643, 604, 544, 27022, 13, 814, 393, 445, 10687, 322, 264, 721, 300, 264, 51176, 51176, 31958, 13834, 337, 293, 300, 311, 1547, 337, 1238, 709, 1340, 13, 51366, 51366, 1779, 13, 814, 1062, 362, 411, 257, 46143, 1802, 689, 538, 9275, 819, 4474, 293, 9275, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.13888010686757613, "compression_ratio": 1.7357723577235773, "no_caption_prob": 3.591240238165483e-05}, {"id": 176, "seek": 104268, "start": 1058.92, "end": 1062.72, "text": " compiler checks for and that's enough for pretty much anything.", "tokens": [50364, 40953, 293, 661, 4474, 486, 406, 312, 1075, 281, 5672, 322, 729, 13, 400, 300, 307, 767, 746, 50580, 50580, 300, 321, 500, 380, 11, 321, 643, 365, 2699, 76, 570, 264, 31958, 13834, 337, 370, 867, 721, 300, 264, 50886, 50886, 2699, 76, 3131, 4474, 500, 380, 643, 604, 544, 27022, 13, 814, 393, 445, 10687, 322, 264, 721, 300, 264, 51176, 51176, 31958, 13834, 337, 293, 300, 311, 1547, 337, 1238, 709, 1340, 13, 51366, 51366, 1779, 13, 814, 1062, 362, 411, 257, 46143, 1802, 689, 538, 9275, 819, 4474, 293, 9275, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.13888010686757613, "compression_ratio": 1.7357723577235773, "no_caption_prob": 3.591240238165483e-05}, {"id": 177, "seek": 104268, "start": 1062.72, "end": 1070.02, "text": " Right. They might have like a snowball effect where by applying different rules and applying", "tokens": [50364, 40953, 293, 661, 4474, 486, 406, 312, 1075, 281, 5672, 322, 729, 13, 400, 300, 307, 767, 746, 50580, 50580, 300, 321, 500, 380, 11, 321, 643, 365, 2699, 76, 570, 264, 31958, 13834, 337, 370, 867, 721, 300, 264, 50886, 50886, 2699, 76, 3131, 4474, 500, 380, 643, 604, 544, 27022, 13, 814, 393, 445, 10687, 322, 264, 721, 300, 264, 51176, 51176, 31958, 13834, 337, 293, 300, 311, 1547, 337, 1238, 709, 1340, 13, 51366, 51366, 1779, 13, 814, 1062, 362, 411, 257, 46143, 1802, 689, 538, 9275, 819, 4474, 293, 9275, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.13888010686757613, "compression_ratio": 1.7357723577235773, "no_caption_prob": 3.591240238165483e-05}, {"id": 178, "seek": 107002, "start": 1070.02, "end": 1079.2, "text": " fixes to those rules, you can eliminate more dead code because making one piece of dead", "tokens": [50364, 32539, 281, 729, 4474, 11, 291, 393, 13819, 544, 3116, 3089, 570, 1455, 472, 2522, 295, 3116, 50823, 50823, 3089, 352, 1314, 1669, 1071, 2522, 295, 3116, 3089, 352, 1314, 293, 456, 311, 341, 46143, 1802, 13, 51041, 51041, 583, 382, 291, 584, 11, 264, 2856, 32567, 366, 1547, 300, 291, 434, 406, 5413, 322, 11, 286, 643, 51407, 51407, 341, 10815, 294, 1668, 281, 652, 452, 13834, 11, 4412, 291, 362, 281, 1261, 322, 613, 4474, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10808656245102118, "compression_ratio": 1.7058823529411764, "no_caption_prob": 2.7108051654067822e-05}, {"id": 179, "seek": 107002, "start": 1079.2, "end": 1083.56, "text": " code go away makes another piece of dead code go away and there's this snowball effect.", "tokens": [50364, 32539, 281, 729, 4474, 11, 291, 393, 13819, 544, 3116, 3089, 570, 1455, 472, 2522, 295, 3116, 50823, 50823, 3089, 352, 1314, 1669, 1071, 2522, 295, 3116, 3089, 352, 1314, 293, 456, 311, 341, 46143, 1802, 13, 51041, 51041, 583, 382, 291, 584, 11, 264, 2856, 32567, 366, 1547, 300, 291, 434, 406, 5413, 322, 11, 286, 643, 51407, 51407, 341, 10815, 294, 1668, 281, 652, 452, 13834, 11, 4412, 291, 362, 281, 1261, 322, 613, 4474, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10808656245102118, "compression_ratio": 1.7058823529411764, "no_caption_prob": 2.7108051654067822e-05}, {"id": 180, "seek": 107002, "start": 1083.56, "end": 1090.8799999999999, "text": " But as you say, the language guarantees are enough that you're not depending on, I need", "tokens": [50364, 32539, 281, 729, 4474, 11, 291, 393, 13819, 544, 3116, 3089, 570, 1455, 472, 2522, 295, 3116, 50823, 50823, 3089, 352, 1314, 1669, 1071, 2522, 295, 3116, 3089, 352, 1314, 293, 456, 311, 341, 46143, 1802, 13, 51041, 51041, 583, 382, 291, 584, 11, 264, 2856, 32567, 366, 1547, 300, 291, 434, 406, 5413, 322, 11, 286, 643, 51407, 51407, 341, 10815, 294, 1668, 281, 652, 452, 13834, 11, 4412, 291, 362, 281, 1261, 322, 613, 4474, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10808656245102118, "compression_ratio": 1.7058823529411764, "no_caption_prob": 2.7108051654067822e-05}, {"id": 181, "seek": 107002, "start": 1090.8799999999999, "end": 1095.1, "text": " this guarantee in order to make my checks, therefore you have to turn on these rules", "tokens": [50364, 32539, 281, 729, 4474, 11, 291, 393, 13819, 544, 3116, 3089, 570, 1455, 472, 2522, 295, 3116, 50823, 50823, 3089, 352, 1314, 1669, 1071, 2522, 295, 3116, 3089, 352, 1314, 293, 456, 311, 341, 46143, 1802, 13, 51041, 51041, 583, 382, 291, 584, 11, 264, 2856, 32567, 366, 1547, 300, 291, 434, 406, 5413, 322, 11, 286, 643, 51407, 51407, 341, 10815, 294, 1668, 281, 652, 452, 13834, 11, 4412, 291, 362, 281, 1261, 322, 613, 4474, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10808656245102118, "compression_ratio": 1.7058823529411764, "no_caption_prob": 2.7108051654067822e-05}, {"id": 182, "seek": 109510, "start": 1095.1, "end": 1100.9199999999998, "text": " as prerequisites. I mean, you could imagine scenarios like that, but I guess you haven't", "tokens": [50364, 382, 38333, 15398, 3324, 13, 286, 914, 11, 291, 727, 3811, 15077, 411, 300, 11, 457, 286, 2041, 291, 2378, 380, 50655, 50655, 20381, 552, 1939, 13, 50717, 50717, 865, 11, 286, 2378, 380, 1939, 13, 583, 1338, 11, 337, 5197, 11, 498, 291, 645, 1382, 281, 13059, 364, 6114, 51021, 51021, 293, 291, 1866, 257, 6408, 281, 257, 7006, 293, 291, 994, 380, 362, 264, 10815, 570, 291, 51223, 51223, 645, 294, 15778, 300, 300, 7006, 390, 767, 32734, 4992, 11, 550, 7263, 51533, 51533, 291, 576, 3242, 257, 3657, 1785, 420, 291, 576, 8252, 570, 11, 1954, 11, 731, 11, 286, 5176, 341, 281, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.12292376431551846, "compression_ratio": 1.7358490566037736, "no_caption_prob": 0.00013134388427715749}, {"id": 183, "seek": 109510, "start": 1100.9199999999998, "end": 1102.1599999999999, "text": " encountered them yet.", "tokens": [50364, 382, 38333, 15398, 3324, 13, 286, 914, 11, 291, 727, 3811, 15077, 411, 300, 11, 457, 286, 2041, 291, 2378, 380, 50655, 50655, 20381, 552, 1939, 13, 50717, 50717, 865, 11, 286, 2378, 380, 1939, 13, 583, 1338, 11, 337, 5197, 11, 498, 291, 645, 1382, 281, 13059, 364, 6114, 51021, 51021, 293, 291, 1866, 257, 6408, 281, 257, 7006, 293, 291, 994, 380, 362, 264, 10815, 570, 291, 51223, 51223, 645, 294, 15778, 300, 300, 7006, 390, 767, 32734, 4992, 11, 550, 7263, 51533, 51533, 291, 576, 3242, 257, 3657, 1785, 420, 291, 576, 8252, 570, 11, 1954, 11, 731, 11, 286, 5176, 341, 281, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.12292376431551846, "compression_ratio": 1.7358490566037736, "no_caption_prob": 0.00013134388427715749}, {"id": 184, "seek": 109510, "start": 1102.1599999999999, "end": 1108.24, "text": " Yeah, I haven't yet. But yeah, for instance, if you were trying to evaluate an expression", "tokens": [50364, 382, 38333, 15398, 3324, 13, 286, 914, 11, 291, 727, 3811, 15077, 411, 300, 11, 457, 286, 2041, 291, 2378, 380, 50655, 50655, 20381, 552, 1939, 13, 50717, 50717, 865, 11, 286, 2378, 380, 1939, 13, 583, 1338, 11, 337, 5197, 11, 498, 291, 645, 1382, 281, 13059, 364, 6114, 51021, 51021, 293, 291, 1866, 257, 6408, 281, 257, 7006, 293, 291, 994, 380, 362, 264, 10815, 570, 291, 51223, 51223, 645, 294, 15778, 300, 300, 7006, 390, 767, 32734, 4992, 11, 550, 7263, 51533, 51533, 291, 576, 3242, 257, 3657, 1785, 420, 291, 576, 8252, 570, 11, 1954, 11, 731, 11, 286, 5176, 341, 281, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.12292376431551846, "compression_ratio": 1.7358490566037736, "no_caption_prob": 0.00013134388427715749}, {"id": 185, "seek": 109510, "start": 1108.24, "end": 1112.28, "text": " and you saw a reference to a variable and you didn't have the guarantee because you", "tokens": [50364, 382, 38333, 15398, 3324, 13, 286, 914, 11, 291, 727, 3811, 15077, 411, 300, 11, 457, 286, 2041, 291, 2378, 380, 50655, 50655, 20381, 552, 1939, 13, 50717, 50717, 865, 11, 286, 2378, 380, 1939, 13, 583, 1338, 11, 337, 5197, 11, 498, 291, 645, 1382, 281, 13059, 364, 6114, 51021, 51021, 293, 291, 1866, 257, 6408, 281, 257, 7006, 293, 291, 994, 380, 362, 264, 10815, 570, 291, 51223, 51223, 645, 294, 15778, 300, 300, 7006, 390, 767, 32734, 4992, 11, 550, 7263, 51533, 51533, 291, 576, 3242, 257, 3657, 1785, 420, 291, 576, 8252, 570, 11, 1954, 11, 731, 11, 286, 5176, 341, 281, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.12292376431551846, "compression_ratio": 1.7358490566037736, "no_caption_prob": 0.00013134388427715749}, {"id": 186, "seek": 109510, "start": 1112.28, "end": 1118.48, "text": " were in JavaScript that that variable was actually referenced anywhere, then potentially", "tokens": [50364, 382, 38333, 15398, 3324, 13, 286, 914, 11, 291, 727, 3811, 15077, 411, 300, 11, 457, 286, 2041, 291, 2378, 380, 50655, 50655, 20381, 552, 1939, 13, 50717, 50717, 865, 11, 286, 2378, 380, 1939, 13, 583, 1338, 11, 337, 5197, 11, 498, 291, 645, 1382, 281, 13059, 364, 6114, 51021, 51021, 293, 291, 1866, 257, 6408, 281, 257, 7006, 293, 291, 994, 380, 362, 264, 10815, 570, 291, 51223, 51223, 645, 294, 15778, 300, 300, 7006, 390, 767, 32734, 4992, 11, 550, 7263, 51533, 51533, 291, 576, 3242, 257, 3657, 1785, 420, 291, 576, 8252, 570, 11, 1954, 11, 731, 11, 286, 5176, 341, 281, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.12292376431551846, "compression_ratio": 1.7358490566037736, "no_caption_prob": 0.00013134388427715749}, {"id": 187, "seek": 109510, "start": 1118.48, "end": 1124.84, "text": " you would enter a weird state or you would crash because, oh, well, I expected this to", "tokens": [50364, 382, 38333, 15398, 3324, 13, 286, 914, 11, 291, 727, 3811, 15077, 411, 300, 11, 457, 286, 2041, 291, 2378, 380, 50655, 50655, 20381, 552, 1939, 13, 50717, 50717, 865, 11, 286, 2378, 380, 1939, 13, 583, 1338, 11, 337, 5197, 11, 498, 291, 645, 1382, 281, 13059, 364, 6114, 51021, 51021, 293, 291, 1866, 257, 6408, 281, 257, 7006, 293, 291, 994, 380, 362, 264, 10815, 570, 291, 51223, 51223, 645, 294, 15778, 300, 300, 7006, 390, 767, 32734, 4992, 11, 550, 7263, 51533, 51533, 291, 576, 3242, 257, 3657, 1785, 420, 291, 576, 8252, 570, 11, 1954, 11, 731, 11, 286, 5176, 341, 281, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.12292376431551846, "compression_ratio": 1.7358490566037736, "no_caption_prob": 0.00013134388427715749}, {"id": 188, "seek": 112484, "start": 1124.84, "end": 1130.56, "text": " be in the scope somewhere. So it's really nice not to have to be defensive about those", "tokens": [50364, 312, 294, 264, 11923, 4079, 13, 407, 309, 311, 534, 1481, 406, 281, 362, 281, 312, 16468, 466, 729, 50650, 50650, 721, 13, 407, 4412, 257, 31958, 534, 3665, 365, 439, 729, 721, 13, 50906, 50906, 1779, 13, 286, 727, 3811, 411, 512, 4474, 926, 9845, 538, 4018, 420, 406, 257, 1230, 420, 746, 51392, 51392, 411, 300, 13, 400, 291, 727, 584, 11, 731, 11, 456, 366, 1629, 8729, 2793, 689, 291, 727, 483, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.13729457613788074, "compression_ratio": 1.5990338164251208, "no_caption_prob": 2.046259214694146e-05}, {"id": 189, "seek": 112484, "start": 1130.56, "end": 1135.6799999999998, "text": " things. So therefore a compiler really helps with all those things.", "tokens": [50364, 312, 294, 264, 11923, 4079, 13, 407, 309, 311, 534, 1481, 406, 281, 362, 281, 312, 16468, 466, 729, 50650, 50650, 721, 13, 407, 4412, 257, 31958, 534, 3665, 365, 439, 729, 721, 13, 50906, 50906, 1779, 13, 286, 727, 3811, 411, 512, 4474, 926, 9845, 538, 4018, 420, 406, 257, 1230, 420, 746, 51392, 51392, 411, 300, 13, 400, 291, 727, 584, 11, 731, 11, 456, 366, 1629, 8729, 2793, 689, 291, 727, 483, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.13729457613788074, "compression_ratio": 1.5990338164251208, "no_caption_prob": 2.046259214694146e-05}, {"id": 190, "seek": 112484, "start": 1135.6799999999998, "end": 1145.3999999999999, "text": " Right. I could imagine like some rules around divide by zero or not a number or something", "tokens": [50364, 312, 294, 264, 11923, 4079, 13, 407, 309, 311, 534, 1481, 406, 281, 362, 281, 312, 16468, 466, 729, 50650, 50650, 721, 13, 407, 4412, 257, 31958, 534, 3665, 365, 439, 729, 721, 13, 50906, 50906, 1779, 13, 286, 727, 3811, 411, 512, 4474, 926, 9845, 538, 4018, 420, 406, 257, 1230, 420, 746, 51392, 51392, 411, 300, 13, 400, 291, 727, 584, 11, 731, 11, 456, 366, 1629, 8729, 2793, 689, 291, 727, 483, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.13729457613788074, "compression_ratio": 1.5990338164251208, "no_caption_prob": 2.046259214694146e-05}, {"id": 191, "seek": 112484, "start": 1145.3999999999999, "end": 1151.02, "text": " like that. And you could say, well, there are certain entry points where you could get", "tokens": [50364, 312, 294, 264, 11923, 4079, 13, 407, 309, 311, 534, 1481, 406, 281, 362, 281, 312, 16468, 466, 729, 50650, 50650, 721, 13, 407, 4412, 257, 31958, 534, 3665, 365, 439, 729, 721, 13, 50906, 50906, 1779, 13, 286, 727, 3811, 411, 512, 4474, 926, 9845, 538, 4018, 420, 406, 257, 1230, 420, 746, 51392, 51392, 411, 300, 13, 400, 291, 727, 584, 11, 731, 11, 456, 366, 1629, 8729, 2793, 689, 291, 727, 483, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.13729457613788074, "compression_ratio": 1.5990338164251208, "no_caption_prob": 2.046259214694146e-05}, {"id": 192, "seek": 115102, "start": 1151.02, "end": 1159.44, "text": " a number from a port from a JSON decoder. And at those terminal points, maybe you have", "tokens": [50364, 257, 1230, 490, 257, 2436, 490, 257, 31828, 979, 19866, 13, 400, 412, 729, 14709, 2793, 11, 1310, 291, 362, 50785, 50785, 364, 2699, 76, 3131, 4978, 300, 13834, 300, 291, 643, 281, 14853, 4007, 552, 666, 3273, 3467, 300, 366, 406, 51151, 51151, 257, 1230, 13, 400, 550, 300, 4978, 727, 312, 257, 38333, 34152, 337, 1071, 4978, 300, 11926, 300, 439, 295, 51521, 51521, 264, 1230, 15743, 300, 291, 434, 1228, 366, 406, 257, 1230, 281, 1841, 365, 11, 291, 434, 26764, 552, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.1131608620118559, "compression_ratio": 1.6822429906542056, "no_caption_prob": 9.972695806936827e-06}, {"id": 193, "seek": 115102, "start": 1159.44, "end": 1166.76, "text": " an Elm review rule that checks that you need to unwrap them into safe types that are not", "tokens": [50364, 257, 1230, 490, 257, 2436, 490, 257, 31828, 979, 19866, 13, 400, 412, 729, 14709, 2793, 11, 1310, 291, 362, 50785, 50785, 364, 2699, 76, 3131, 4978, 300, 13834, 300, 291, 643, 281, 14853, 4007, 552, 666, 3273, 3467, 300, 366, 406, 51151, 51151, 257, 1230, 13, 400, 550, 300, 4978, 727, 312, 257, 38333, 34152, 337, 1071, 4978, 300, 11926, 300, 439, 295, 51521, 51521, 264, 1230, 15743, 300, 291, 434, 1228, 366, 406, 257, 1230, 281, 1841, 365, 11, 291, 434, 26764, 552, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.1131608620118559, "compression_ratio": 1.6822429906542056, "no_caption_prob": 9.972695806936827e-06}, {"id": 194, "seek": 115102, "start": 1166.76, "end": 1174.16, "text": " a number. And then that rule could be a prerequisite for another rule that assuming that all of", "tokens": [50364, 257, 1230, 490, 257, 2436, 490, 257, 31828, 979, 19866, 13, 400, 412, 729, 14709, 2793, 11, 1310, 291, 362, 50785, 50785, 364, 2699, 76, 3131, 4978, 300, 13834, 300, 291, 643, 281, 14853, 4007, 552, 666, 3273, 3467, 300, 366, 406, 51151, 51151, 257, 1230, 13, 400, 550, 300, 4978, 727, 312, 257, 38333, 34152, 337, 1071, 4978, 300, 11926, 300, 439, 295, 51521, 51521, 264, 1230, 15743, 300, 291, 434, 1228, 366, 406, 257, 1230, 281, 1841, 365, 11, 291, 434, 26764, 552, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.1131608620118559, "compression_ratio": 1.6822429906542056, "no_caption_prob": 9.972695806936827e-06}, {"id": 195, "seek": 115102, "start": 1174.16, "end": 1178.96, "text": " the number inputs that you're using are not a number to begin with, you're dividing them", "tokens": [50364, 257, 1230, 490, 257, 2436, 490, 257, 31828, 979, 19866, 13, 400, 412, 729, 14709, 2793, 11, 1310, 291, 362, 50785, 50785, 364, 2699, 76, 3131, 4978, 300, 13834, 300, 291, 643, 281, 14853, 4007, 552, 666, 3273, 3467, 300, 366, 406, 51151, 51151, 257, 1230, 13, 400, 550, 300, 4978, 727, 312, 257, 38333, 34152, 337, 1071, 4978, 300, 11926, 300, 439, 295, 51521, 51521, 264, 1230, 15743, 300, 291, 434, 1228, 366, 406, 257, 1230, 281, 1841, 365, 11, 291, 434, 26764, 552, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.1131608620118559, "compression_ratio": 1.6822429906542056, "no_caption_prob": 9.972695806936827e-06}, {"id": 196, "seek": 117896, "start": 1178.96, "end": 1184.96, "text": " in a way that you're checking for divide by zero and things like that. And you're going", "tokens": [50364, 294, 257, 636, 300, 291, 434, 8568, 337, 9845, 538, 4018, 293, 721, 411, 300, 13, 400, 291, 434, 516, 50664, 50664, 281, 362, 731, 7642, 4190, 13, 50730, 50730, 865, 11, 286, 727, 3811, 300, 382, 731, 13, 1711, 589, 11, 321, 362, 257, 4978, 300, 5531, 82, 44383, 24387, 5359, 13, 51142, 51142, 407, 437, 321, 360, 307, 321, 747, 527, 24387, 7098, 293, 321, 8947, 439, 264, 5359, 490, 729, 293, 51450, 51450, 321, 1261, 552, 666, 364, 2699, 76, 3991, 300, 527, 2699, 76, 3131, 11694, 550, 4960, 13, 400, 550, 321, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11216748237609864, "compression_ratio": 1.6212765957446809, "no_caption_prob": 1.2218690244480968e-05}, {"id": 197, "seek": 117896, "start": 1184.96, "end": 1186.28, "text": " to have well defined values.", "tokens": [50364, 294, 257, 636, 300, 291, 434, 8568, 337, 9845, 538, 4018, 293, 721, 411, 300, 13, 400, 291, 434, 516, 50664, 50664, 281, 362, 731, 7642, 4190, 13, 50730, 50730, 865, 11, 286, 727, 3811, 300, 382, 731, 13, 1711, 589, 11, 321, 362, 257, 4978, 300, 5531, 82, 44383, 24387, 5359, 13, 51142, 51142, 407, 437, 321, 360, 307, 321, 747, 527, 24387, 7098, 293, 321, 8947, 439, 264, 5359, 490, 729, 293, 51450, 51450, 321, 1261, 552, 666, 364, 2699, 76, 3991, 300, 527, 2699, 76, 3131, 11694, 550, 4960, 13, 400, 550, 321, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11216748237609864, "compression_ratio": 1.6212765957446809, "no_caption_prob": 1.2218690244480968e-05}, {"id": 198, "seek": 117896, "start": 1186.28, "end": 1194.52, "text": " Yeah, I could imagine that as well. At work, we have a rule that detects unused CSS classes.", "tokens": [50364, 294, 257, 636, 300, 291, 434, 8568, 337, 9845, 538, 4018, 293, 721, 411, 300, 13, 400, 291, 434, 516, 50664, 50664, 281, 362, 731, 7642, 4190, 13, 50730, 50730, 865, 11, 286, 727, 3811, 300, 382, 731, 13, 1711, 589, 11, 321, 362, 257, 4978, 300, 5531, 82, 44383, 24387, 5359, 13, 51142, 51142, 407, 437, 321, 360, 307, 321, 747, 527, 24387, 7098, 293, 321, 8947, 439, 264, 5359, 490, 729, 293, 51450, 51450, 321, 1261, 552, 666, 364, 2699, 76, 3991, 300, 527, 2699, 76, 3131, 11694, 550, 4960, 13, 400, 550, 321, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11216748237609864, "compression_ratio": 1.6212765957446809, "no_caption_prob": 1.2218690244480968e-05}, {"id": 199, "seek": 117896, "start": 1194.52, "end": 1200.68, "text": " So what we do is we take our CSS files and we extract all the classes from those and", "tokens": [50364, 294, 257, 636, 300, 291, 434, 8568, 337, 9845, 538, 4018, 293, 721, 411, 300, 13, 400, 291, 434, 516, 50664, 50664, 281, 362, 731, 7642, 4190, 13, 50730, 50730, 865, 11, 286, 727, 3811, 300, 382, 731, 13, 1711, 589, 11, 321, 362, 257, 4978, 300, 5531, 82, 44383, 24387, 5359, 13, 51142, 51142, 407, 437, 321, 360, 307, 321, 747, 527, 24387, 7098, 293, 321, 8947, 439, 264, 5359, 490, 729, 293, 51450, 51450, 321, 1261, 552, 666, 364, 2699, 76, 3991, 300, 527, 2699, 76, 3131, 11694, 550, 4960, 13, 400, 550, 321, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11216748237609864, "compression_ratio": 1.6212765957446809, "no_caption_prob": 1.2218690244480968e-05}, {"id": 200, "seek": 117896, "start": 1200.68, "end": 1206.28, "text": " we turn them into an Elm file that our Elm review configuration then uses. And then we", "tokens": [50364, 294, 257, 636, 300, 291, 434, 8568, 337, 9845, 538, 4018, 293, 721, 411, 300, 13, 400, 291, 434, 516, 50664, 50664, 281, 362, 731, 7642, 4190, 13, 50730, 50730, 865, 11, 286, 727, 3811, 300, 382, 731, 13, 1711, 589, 11, 321, 362, 257, 4978, 300, 5531, 82, 44383, 24387, 5359, 13, 51142, 51142, 407, 437, 321, 360, 307, 321, 747, 527, 24387, 7098, 293, 321, 8947, 439, 264, 5359, 490, 729, 293, 51450, 51450, 321, 1261, 552, 666, 364, 2699, 76, 3991, 300, 527, 2699, 76, 3131, 11694, 550, 4960, 13, 400, 550, 321, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11216748237609864, "compression_ratio": 1.6212765957446809, "no_caption_prob": 1.2218690244480968e-05}, {"id": 201, "seek": 120628, "start": 1206.28, "end": 1211.16, "text": " just go through the entire files and find out the ones that are used and report the", "tokens": [50364, 445, 352, 807, 264, 2302, 7098, 293, 915, 484, 264, 2306, 300, 366, 1143, 293, 2275, 264, 50608, 50608, 2306, 300, 366, 1411, 13, 583, 281, 312, 1075, 281, 980, 300, 11, 321, 611, 362, 1071, 4978, 300, 13834, 50904, 50904, 337, 604, 505, 1660, 295, 264, 1508, 2445, 300, 366, 886, 8546, 11, 300, 366, 886, 1152, 337, 2699, 76, 51278, 51278, 3131, 281, 980, 13, 407, 436, 733, 295, 5672, 322, 1184, 661, 13, 286, 767, 500, 380, 1604, 1968, 51520, 51520, 321, 22183, 552, 666, 472, 4978, 13, 583, 382, 938, 382, 291, 500, 380, 652, 1340, 5672, 322, 264, 661, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.08091281961511683, "compression_ratio": 1.7520325203252032, "no_caption_prob": 1.9525608877302147e-05}, {"id": 202, "seek": 120628, "start": 1211.16, "end": 1217.08, "text": " ones that are left. But to be able to tell that, we also have another rule that checks", "tokens": [50364, 445, 352, 807, 264, 2302, 7098, 293, 915, 484, 264, 2306, 300, 366, 1143, 293, 2275, 264, 50608, 50608, 2306, 300, 366, 1411, 13, 583, 281, 312, 1075, 281, 980, 300, 11, 321, 611, 362, 1071, 4978, 300, 13834, 50904, 50904, 337, 604, 505, 1660, 295, 264, 1508, 2445, 300, 366, 886, 8546, 11, 300, 366, 886, 1152, 337, 2699, 76, 51278, 51278, 3131, 281, 980, 13, 407, 436, 733, 295, 5672, 322, 1184, 661, 13, 286, 767, 500, 380, 1604, 1968, 51520, 51520, 321, 22183, 552, 666, 472, 4978, 13, 583, 382, 938, 382, 291, 500, 380, 652, 1340, 5672, 322, 264, 661, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.08091281961511683, "compression_ratio": 1.7520325203252032, "no_caption_prob": 1.9525608877302147e-05}, {"id": 203, "seek": 120628, "start": 1217.08, "end": 1224.56, "text": " for any usages of the class function that are too dynamic, that are too hard for Elm", "tokens": [50364, 445, 352, 807, 264, 2302, 7098, 293, 915, 484, 264, 2306, 300, 366, 1143, 293, 2275, 264, 50608, 50608, 2306, 300, 366, 1411, 13, 583, 281, 312, 1075, 281, 980, 300, 11, 321, 611, 362, 1071, 4978, 300, 13834, 50904, 50904, 337, 604, 505, 1660, 295, 264, 1508, 2445, 300, 366, 886, 8546, 11, 300, 366, 886, 1152, 337, 2699, 76, 51278, 51278, 3131, 281, 980, 13, 407, 436, 733, 295, 5672, 322, 1184, 661, 13, 286, 767, 500, 380, 1604, 1968, 51520, 51520, 321, 22183, 552, 666, 472, 4978, 13, 583, 382, 938, 382, 291, 500, 380, 652, 1340, 5672, 322, 264, 661, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.08091281961511683, "compression_ratio": 1.7520325203252032, "no_caption_prob": 1.9525608877302147e-05}, {"id": 204, "seek": 120628, "start": 1224.56, "end": 1229.3999999999999, "text": " review to tell. So they kind of depend on each other. I actually don't remember whether", "tokens": [50364, 445, 352, 807, 264, 2302, 7098, 293, 915, 484, 264, 2306, 300, 366, 1143, 293, 2275, 264, 50608, 50608, 2306, 300, 366, 1411, 13, 583, 281, 312, 1075, 281, 980, 300, 11, 321, 611, 362, 1071, 4978, 300, 13834, 50904, 50904, 337, 604, 505, 1660, 295, 264, 1508, 2445, 300, 366, 886, 8546, 11, 300, 366, 886, 1152, 337, 2699, 76, 51278, 51278, 3131, 281, 980, 13, 407, 436, 733, 295, 5672, 322, 1184, 661, 13, 286, 767, 500, 380, 1604, 1968, 51520, 51520, 321, 22183, 552, 666, 472, 4978, 13, 583, 382, 938, 382, 291, 500, 380, 652, 1340, 5672, 322, 264, 661, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.08091281961511683, "compression_ratio": 1.7520325203252032, "no_caption_prob": 1.9525608877302147e-05}, {"id": 205, "seek": 120628, "start": 1229.3999999999999, "end": 1235.36, "text": " we merge them into one rule. But as long as you don't make anything depend on the other", "tokens": [50364, 445, 352, 807, 264, 2302, 7098, 293, 915, 484, 264, 2306, 300, 366, 1143, 293, 2275, 264, 50608, 50608, 2306, 300, 366, 1411, 13, 583, 281, 312, 1075, 281, 980, 300, 11, 321, 611, 362, 1071, 4978, 300, 13834, 50904, 50904, 337, 604, 505, 1660, 295, 264, 1508, 2445, 300, 366, 886, 8546, 11, 300, 366, 886, 1152, 337, 2699, 76, 51278, 51278, 3131, 281, 980, 13, 407, 436, 733, 295, 5672, 322, 1184, 661, 13, 286, 767, 500, 380, 1604, 1968, 51520, 51520, 321, 22183, 552, 666, 472, 4978, 13, 583, 382, 938, 382, 291, 500, 380, 652, 1340, 5672, 322, 264, 661, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.08091281961511683, "compression_ratio": 1.7520325203252032, "no_caption_prob": 1.9525608877302147e-05}, {"id": 206, "seek": 123536, "start": 1235.36, "end": 1242.28, "text": " one, like a fix, like imagine you have a fix that you want to apply, that should probably", "tokens": [50364, 472, 11, 411, 257, 3191, 11, 411, 3811, 291, 362, 257, 3191, 300, 291, 528, 281, 3079, 11, 300, 820, 1391, 50710, 50710, 406, 5672, 322, 1589, 300, 575, 406, 668, 40693, 949, 13, 400, 570, 294, 2699, 76, 3131, 50998, 50998, 32539, 747, 264, 6597, 1011, 420, 25164, 5347, 281, 2107, 6806, 13603, 11, 412, 1935, 294, 6806, 4391, 11, 51451, 51451, 300, 393, 312, 733, 295, 5795, 13, 583, 1338, 11, 412, 1935, 264, 1230, 295, 32567, 300, 321, 362, 11, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.14548742360082165, "compression_ratio": 1.6071428571428572, "no_caption_prob": 8.749063999857754e-05}, {"id": 207, "seek": 123536, "start": 1242.28, "end": 1248.04, "text": " not depend on information that has not been validated before. And because in Elm review", "tokens": [50364, 472, 11, 411, 257, 3191, 11, 411, 3811, 291, 362, 257, 3191, 300, 291, 528, 281, 3079, 11, 300, 820, 1391, 50710, 50710, 406, 5672, 322, 1589, 300, 575, 406, 668, 40693, 949, 13, 400, 570, 294, 2699, 76, 3131, 50998, 50998, 32539, 747, 264, 6597, 1011, 420, 25164, 5347, 281, 2107, 6806, 13603, 11, 412, 1935, 294, 6806, 4391, 11, 51451, 51451, 300, 393, 312, 733, 295, 5795, 13, 583, 1338, 11, 412, 1935, 264, 1230, 295, 32567, 300, 321, 362, 11, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.14548742360082165, "compression_ratio": 1.6071428571428572, "no_caption_prob": 8.749063999857754e-05}, {"id": 208, "seek": 123536, "start": 1248.04, "end": 1257.1, "text": " fixes take the upper hand or prioritize compared to non fixed errors, at least in fixed mode,", "tokens": [50364, 472, 11, 411, 257, 3191, 11, 411, 3811, 291, 362, 257, 3191, 300, 291, 528, 281, 3079, 11, 300, 820, 1391, 50710, 50710, 406, 5672, 322, 1589, 300, 575, 406, 668, 40693, 949, 13, 400, 570, 294, 2699, 76, 3131, 50998, 50998, 32539, 747, 264, 6597, 1011, 420, 25164, 5347, 281, 2107, 6806, 13603, 11, 412, 1935, 294, 6806, 4391, 11, 51451, 51451, 300, 393, 312, 733, 295, 5795, 13, 583, 1338, 11, 412, 1935, 264, 1230, 295, 32567, 300, 321, 362, 11, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.14548742360082165, "compression_ratio": 1.6071428571428572, "no_caption_prob": 8.749063999857754e-05}, {"id": 209, "seek": 123536, "start": 1257.1, "end": 1261.24, "text": " that can be kind of dangerous. But yeah, at least the number of guarantees that we have,", "tokens": [50364, 472, 11, 411, 257, 3191, 11, 411, 3811, 291, 362, 257, 3191, 300, 291, 528, 281, 3079, 11, 300, 820, 1391, 50710, 50710, 406, 5672, 322, 1589, 300, 575, 406, 668, 40693, 949, 13, 400, 570, 294, 2699, 76, 3131, 50998, 50998, 32539, 747, 264, 6597, 1011, 420, 25164, 5347, 281, 2107, 6806, 13603, 11, 412, 1935, 294, 6806, 4391, 11, 51451, 51451, 300, 393, 312, 733, 295, 5795, 13, 583, 1338, 11, 412, 1935, 264, 1230, 295, 32567, 300, 321, 362, 11, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.14548742360082165, "compression_ratio": 1.6071428571428572, "no_caption_prob": 8.749063999857754e-05}, {"id": 210, "seek": 126124, "start": 1261.24, "end": 1266.52, "text": " the number of presumptions that we need to do in Elm, or at least in Elm review is a", "tokens": [50364, 264, 1230, 295, 18028, 9799, 300, 321, 643, 281, 360, 294, 2699, 76, 11, 420, 412, 1935, 294, 2699, 76, 3131, 307, 257, 50628, 50628, 688, 3126, 813, 437, 291, 576, 360, 294, 12564, 43, 686, 13, 407, 341, 6132, 380, 668, 257, 1154, 534, 11, 370, 1400, 11, 50972, 50972, 294, 452, 1752, 11, 309, 727, 312, 11, 457, 286, 478, 17939, 309, 576, 312, 337, 721, 300, 366, 257, 688, 544, 51264, 51264, 13600, 813, 437, 321, 434, 4362, 884, 13, 51460, 51460, 400, 341, 2544, 411, 437, 291, 434, 1417, 466, 365, 8568, 337, 1508, 5288, 300, 366, 886, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13731090077814065, "compression_ratio": 1.6527196652719665, "no_caption_prob": 6.502461474156007e-05}, {"id": 211, "seek": 126124, "start": 1266.52, "end": 1273.4, "text": " lot lower than what you would do in ESLint. So this hasn't been a problem really, so far,", "tokens": [50364, 264, 1230, 295, 18028, 9799, 300, 321, 643, 281, 360, 294, 2699, 76, 11, 420, 412, 1935, 294, 2699, 76, 3131, 307, 257, 50628, 50628, 688, 3126, 813, 437, 291, 576, 360, 294, 12564, 43, 686, 13, 407, 341, 6132, 380, 668, 257, 1154, 534, 11, 370, 1400, 11, 50972, 50972, 294, 452, 1752, 11, 309, 727, 312, 11, 457, 286, 478, 17939, 309, 576, 312, 337, 721, 300, 366, 257, 688, 544, 51264, 51264, 13600, 813, 437, 321, 434, 4362, 884, 13, 51460, 51460, 400, 341, 2544, 411, 437, 291, 434, 1417, 466, 365, 8568, 337, 1508, 5288, 300, 366, 886, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13731090077814065, "compression_ratio": 1.6527196652719665, "no_caption_prob": 6.502461474156007e-05}, {"id": 212, "seek": 126124, "start": 1273.4, "end": 1279.24, "text": " in my experience, it could be, but I'm guessing it would be for things that are a lot more", "tokens": [50364, 264, 1230, 295, 18028, 9799, 300, 321, 643, 281, 360, 294, 2699, 76, 11, 420, 412, 1935, 294, 2699, 76, 3131, 307, 257, 50628, 50628, 688, 3126, 813, 437, 291, 576, 360, 294, 12564, 43, 686, 13, 407, 341, 6132, 380, 668, 257, 1154, 534, 11, 370, 1400, 11, 50972, 50972, 294, 452, 1752, 11, 309, 727, 312, 11, 457, 286, 478, 17939, 309, 576, 312, 337, 721, 300, 366, 257, 688, 544, 51264, 51264, 13600, 813, 437, 321, 434, 4362, 884, 13, 51460, 51460, 400, 341, 2544, 411, 437, 291, 434, 1417, 466, 365, 8568, 337, 1508, 5288, 300, 366, 886, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13731090077814065, "compression_ratio": 1.6527196652719665, "no_caption_prob": 6.502461474156007e-05}, {"id": 213, "seek": 126124, "start": 1279.24, "end": 1283.16, "text": " precise than what we're currently doing.", "tokens": [50364, 264, 1230, 295, 18028, 9799, 300, 321, 643, 281, 360, 294, 2699, 76, 11, 420, 412, 1935, 294, 2699, 76, 3131, 307, 257, 50628, 50628, 688, 3126, 813, 437, 291, 576, 360, 294, 12564, 43, 686, 13, 407, 341, 6132, 380, 668, 257, 1154, 534, 11, 370, 1400, 11, 50972, 50972, 294, 452, 1752, 11, 309, 727, 312, 11, 457, 286, 478, 17939, 309, 576, 312, 337, 721, 300, 366, 257, 688, 544, 51264, 51264, 13600, 813, 437, 321, 434, 4362, 884, 13, 51460, 51460, 400, 341, 2544, 411, 437, 291, 434, 1417, 466, 365, 8568, 337, 1508, 5288, 300, 366, 886, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13731090077814065, "compression_ratio": 1.6527196652719665, "no_caption_prob": 6.502461474156007e-05}, {"id": 214, "seek": 126124, "start": 1283.16, "end": 1289.0, "text": " And this seems like what you're talking about with checking for class names that are too", "tokens": [50364, 264, 1230, 295, 18028, 9799, 300, 321, 643, 281, 360, 294, 2699, 76, 11, 420, 412, 1935, 294, 2699, 76, 3131, 307, 257, 50628, 50628, 688, 3126, 813, 437, 291, 576, 360, 294, 12564, 43, 686, 13, 407, 341, 6132, 380, 668, 257, 1154, 534, 11, 370, 1400, 11, 50972, 50972, 294, 452, 1752, 11, 309, 727, 312, 11, 457, 286, 478, 17939, 309, 576, 312, 337, 721, 300, 366, 257, 688, 544, 51264, 51264, 13600, 813, 437, 321, 434, 4362, 884, 13, 51460, 51460, 400, 341, 2544, 411, 437, 291, 434, 1417, 466, 365, 8568, 337, 1508, 5288, 300, 366, 886, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13731090077814065, "compression_ratio": 1.6527196652719665, "no_caption_prob": 6.502461474156007e-05}, {"id": 215, "seek": 128900, "start": 1289.0, "end": 1295.4, "text": " dynamic for you to basically effectively analyze. Because you could imagine pulling on that", "tokens": [50364, 8546, 337, 291, 281, 1936, 8659, 12477, 13, 1436, 291, 727, 3811, 8407, 322, 300, 50684, 50684, 7207, 544, 293, 544, 293, 1566, 11, 731, 11, 437, 498, 309, 311, 445, 364, 294, 1889, 1588, 7186, 399, 1296, 51062, 51062, 732, 6798, 4190, 30, 7497, 321, 445, 1520, 729, 732, 20411, 1588, 7186, 770, 6798, 4190, 30, 400, 51328, 51328, 307, 300, 20411, 1547, 337, 505, 281, 764, 30, 400, 291, 584, 11, 1392, 11, 731, 11, 586, 300, 321, 434, 8568, 51558, 51558, 337, 1588, 7186, 770, 6798, 2733, 1124, 11, 983, 500, 380, 321, 909, 746, 300, 1619, 11, 731, 11, 437, 498, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.09783848053818449, "compression_ratio": 1.83402489626556, "no_caption_prob": 0.0002823646937031299}, {"id": 216, "seek": 128900, "start": 1295.4, "end": 1302.96, "text": " thread more and more and saying, well, what if it's just an inline concatenation between", "tokens": [50364, 8546, 337, 291, 281, 1936, 8659, 12477, 13, 1436, 291, 727, 3811, 8407, 322, 300, 50684, 50684, 7207, 544, 293, 544, 293, 1566, 11, 731, 11, 437, 498, 309, 311, 445, 364, 294, 1889, 1588, 7186, 399, 1296, 51062, 51062, 732, 6798, 4190, 30, 7497, 321, 445, 1520, 729, 732, 20411, 1588, 7186, 770, 6798, 4190, 30, 400, 51328, 51328, 307, 300, 20411, 1547, 337, 505, 281, 764, 30, 400, 291, 584, 11, 1392, 11, 731, 11, 586, 300, 321, 434, 8568, 51558, 51558, 337, 1588, 7186, 770, 6798, 2733, 1124, 11, 983, 500, 380, 321, 909, 746, 300, 1619, 11, 731, 11, 437, 498, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.09783848053818449, "compression_ratio": 1.83402489626556, "no_caption_prob": 0.0002823646937031299}, {"id": 217, "seek": 128900, "start": 1302.96, "end": 1308.28, "text": " two string values? Could we just check those two literal concatenated string values? And", "tokens": [50364, 8546, 337, 291, 281, 1936, 8659, 12477, 13, 1436, 291, 727, 3811, 8407, 322, 300, 50684, 50684, 7207, 544, 293, 544, 293, 1566, 11, 731, 11, 437, 498, 309, 311, 445, 364, 294, 1889, 1588, 7186, 399, 1296, 51062, 51062, 732, 6798, 4190, 30, 7497, 321, 445, 1520, 729, 732, 20411, 1588, 7186, 770, 6798, 4190, 30, 400, 51328, 51328, 307, 300, 20411, 1547, 337, 505, 281, 764, 30, 400, 291, 584, 11, 1392, 11, 731, 11, 586, 300, 321, 434, 8568, 51558, 51558, 337, 1588, 7186, 770, 6798, 2733, 1124, 11, 983, 500, 380, 321, 909, 746, 300, 1619, 11, 731, 11, 437, 498, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.09783848053818449, "compression_ratio": 1.83402489626556, "no_caption_prob": 0.0002823646937031299}, {"id": 218, "seek": 128900, "start": 1308.28, "end": 1312.88, "text": " is that literal enough for us to use? And you say, okay, well, now that we're checking", "tokens": [50364, 8546, 337, 291, 281, 1936, 8659, 12477, 13, 1436, 291, 727, 3811, 8407, 322, 300, 50684, 50684, 7207, 544, 293, 544, 293, 1566, 11, 731, 11, 437, 498, 309, 311, 445, 364, 294, 1889, 1588, 7186, 399, 1296, 51062, 51062, 732, 6798, 4190, 30, 7497, 321, 445, 1520, 729, 732, 20411, 1588, 7186, 770, 6798, 4190, 30, 400, 51328, 51328, 307, 300, 20411, 1547, 337, 505, 281, 764, 30, 400, 291, 584, 11, 1392, 11, 731, 11, 586, 300, 321, 434, 8568, 51558, 51558, 337, 1588, 7186, 770, 6798, 2733, 1124, 11, 983, 500, 380, 321, 909, 746, 300, 1619, 11, 731, 11, 437, 498, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.09783848053818449, "compression_ratio": 1.83402489626556, "no_caption_prob": 0.0002823646937031299}, {"id": 219, "seek": 128900, "start": 1312.88, "end": 1318.2, "text": " for concatenated string literals, why don't we add something that says, well, what if", "tokens": [50364, 8546, 337, 291, 281, 1936, 8659, 12477, 13, 1436, 291, 727, 3811, 8407, 322, 300, 50684, 50684, 7207, 544, 293, 544, 293, 1566, 11, 731, 11, 437, 498, 309, 311, 445, 364, 294, 1889, 1588, 7186, 399, 1296, 51062, 51062, 732, 6798, 4190, 30, 7497, 321, 445, 1520, 729, 732, 20411, 1588, 7186, 770, 6798, 4190, 30, 400, 51328, 51328, 307, 300, 20411, 1547, 337, 505, 281, 764, 30, 400, 291, 584, 11, 1392, 11, 731, 11, 586, 300, 321, 434, 8568, 51558, 51558, 337, 1588, 7186, 770, 6798, 2733, 1124, 11, 983, 500, 380, 321, 909, 746, 300, 1619, 11, 731, 11, 437, 498, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.09783848053818449, "compression_ratio": 1.83402489626556, "no_caption_prob": 0.0002823646937031299}, {"id": 220, "seek": 131820, "start": 1318.2, "end": 1322.44, "text": " it's a string constant that's concatenated to another one? And maybe that's quite useful", "tokens": [50364, 309, 311, 257, 6798, 5754, 300, 311, 1588, 7186, 770, 281, 1071, 472, 30, 400, 1310, 300, 311, 1596, 4420, 50576, 50576, 570, 291, 528, 281, 312, 257, 707, 544, 8546, 365, 428, 1508, 1315, 13, 407, 293, 550, 291, 584, 11, 50852, 50852, 731, 11, 437, 498, 321, 528, 281, 909, 257, 1230, 281, 309, 30, 1664, 321, 293, 550, 321, 528, 281, 312, 1075, 281, 360, 42973, 51176, 51176, 322, 300, 3547, 11, 420, 321, 528, 281, 312, 1075, 281, 4471, 670, 257, 1329, 295, 3547, 293, 550, 1520, 51416, 51416, 729, 4190, 13, 400, 4728, 11, 291, 434, 445, 2390, 411, 257, 659, 40261, 411, 6133, 1639, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.13024772677505225, "compression_ratio": 1.735408560311284, "no_caption_prob": 3.071753599215299e-05}, {"id": 221, "seek": 131820, "start": 1322.44, "end": 1327.96, "text": " because you want to be a little more dynamic with your class name. So and then you say,", "tokens": [50364, 309, 311, 257, 6798, 5754, 300, 311, 1588, 7186, 770, 281, 1071, 472, 30, 400, 1310, 300, 311, 1596, 4420, 50576, 50576, 570, 291, 528, 281, 312, 257, 707, 544, 8546, 365, 428, 1508, 1315, 13, 407, 293, 550, 291, 584, 11, 50852, 50852, 731, 11, 437, 498, 321, 528, 281, 909, 257, 1230, 281, 309, 30, 1664, 321, 293, 550, 321, 528, 281, 312, 1075, 281, 360, 42973, 51176, 51176, 322, 300, 3547, 11, 420, 321, 528, 281, 312, 1075, 281, 4471, 670, 257, 1329, 295, 3547, 293, 550, 1520, 51416, 51416, 729, 4190, 13, 400, 4728, 11, 291, 434, 445, 2390, 411, 257, 659, 40261, 411, 6133, 1639, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.13024772677505225, "compression_ratio": 1.735408560311284, "no_caption_prob": 3.071753599215299e-05}, {"id": 222, "seek": 131820, "start": 1327.96, "end": 1334.44, "text": " well, what if we want to add a number to it? Can we and then we want to be able to do arithmetic", "tokens": [50364, 309, 311, 257, 6798, 5754, 300, 311, 1588, 7186, 770, 281, 1071, 472, 30, 400, 1310, 300, 311, 1596, 4420, 50576, 50576, 570, 291, 528, 281, 312, 257, 707, 544, 8546, 365, 428, 1508, 1315, 13, 407, 293, 550, 291, 584, 11, 50852, 50852, 731, 11, 437, 498, 321, 528, 281, 909, 257, 1230, 281, 309, 30, 1664, 321, 293, 550, 321, 528, 281, 312, 1075, 281, 360, 42973, 51176, 51176, 322, 300, 3547, 11, 420, 321, 528, 281, 312, 1075, 281, 4471, 670, 257, 1329, 295, 3547, 293, 550, 1520, 51416, 51416, 729, 4190, 13, 400, 4728, 11, 291, 434, 445, 2390, 411, 257, 659, 40261, 411, 6133, 1639, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.13024772677505225, "compression_ratio": 1.735408560311284, "no_caption_prob": 3.071753599215299e-05}, {"id": 223, "seek": 131820, "start": 1334.44, "end": 1339.24, "text": " on that numbers, or we want to be able to map over a list of numbers and then check", "tokens": [50364, 309, 311, 257, 6798, 5754, 300, 311, 1588, 7186, 770, 281, 1071, 472, 30, 400, 1310, 300, 311, 1596, 4420, 50576, 50576, 570, 291, 528, 281, 312, 257, 707, 544, 8546, 365, 428, 1508, 1315, 13, 407, 293, 550, 291, 584, 11, 50852, 50852, 731, 11, 437, 498, 321, 528, 281, 909, 257, 1230, 281, 309, 30, 1664, 321, 293, 550, 321, 528, 281, 312, 1075, 281, 360, 42973, 51176, 51176, 322, 300, 3547, 11, 420, 321, 528, 281, 312, 1075, 281, 4471, 670, 257, 1329, 295, 3547, 293, 550, 1520, 51416, 51416, 729, 4190, 13, 400, 4728, 11, 291, 434, 445, 2390, 411, 257, 659, 40261, 411, 6133, 1639, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.13024772677505225, "compression_ratio": 1.735408560311284, "no_caption_prob": 3.071753599215299e-05}, {"id": 224, "seek": 131820, "start": 1339.24, "end": 1346.72, "text": " those values. And eventually, you're just building like a pre compilation like evaluator", "tokens": [50364, 309, 311, 257, 6798, 5754, 300, 311, 1588, 7186, 770, 281, 1071, 472, 30, 400, 1310, 300, 311, 1596, 4420, 50576, 50576, 570, 291, 528, 281, 312, 257, 707, 544, 8546, 365, 428, 1508, 1315, 13, 407, 293, 550, 291, 584, 11, 50852, 50852, 731, 11, 437, 498, 321, 528, 281, 909, 257, 1230, 281, 309, 30, 1664, 321, 293, 550, 321, 528, 281, 312, 1075, 281, 360, 42973, 51176, 51176, 322, 300, 3547, 11, 420, 321, 528, 281, 312, 1075, 281, 4471, 670, 257, 1329, 295, 3547, 293, 550, 1520, 51416, 51416, 729, 4190, 13, 400, 4728, 11, 291, 434, 445, 2390, 411, 257, 659, 40261, 411, 6133, 1639, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.13024772677505225, "compression_ratio": 1.735408560311284, "no_caption_prob": 3.071753599215299e-05}, {"id": 225, "seek": 134672, "start": 1346.72, "end": 1355.24, "text": " that's actually evaluating your program before a compile time. And you certainly can do those", "tokens": [50364, 300, 311, 767, 27479, 428, 1461, 949, 257, 31413, 565, 13, 400, 291, 3297, 393, 360, 729, 50790, 50790, 721, 13, 583, 291, 434, 22062, 10875, 257, 5206, 456, 281, 659, 4543, 3413, 976, 257, 7908, 51092, 51092, 3353, 293, 445, 584, 11, 420, 281, 829, 257, 25534, 322, 264, 4978, 689, 291, 434, 286, 914, 11, 286, 2041, 1071, 51398, 51398, 636, 281, 574, 412, 309, 307, 2831, 813, 264, 7908, 3353, 11, 291, 434, 1566, 309, 311, 406, 257, 7908, 3353, 11, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1142035722732544, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013764319010078907}, {"id": 226, "seek": 134672, "start": 1355.24, "end": 1361.28, "text": " things. But you're intentionally choosing a strategy there to preemptively give a false", "tokens": [50364, 300, 311, 767, 27479, 428, 1461, 949, 257, 31413, 565, 13, 400, 291, 3297, 393, 360, 729, 50790, 50790, 721, 13, 583, 291, 434, 22062, 10875, 257, 5206, 456, 281, 659, 4543, 3413, 976, 257, 7908, 51092, 51092, 3353, 293, 445, 584, 11, 420, 281, 829, 257, 25534, 322, 264, 4978, 689, 291, 434, 286, 914, 11, 286, 2041, 1071, 51398, 51398, 636, 281, 574, 412, 309, 307, 2831, 813, 264, 7908, 3353, 11, 291, 434, 1566, 309, 311, 406, 257, 7908, 3353, 11, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1142035722732544, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013764319010078907}, {"id": 227, "seek": 134672, "start": 1361.28, "end": 1367.4, "text": " positive and just say, or to put a constraint on the rule where you're I mean, I guess another", "tokens": [50364, 300, 311, 767, 27479, 428, 1461, 949, 257, 31413, 565, 13, 400, 291, 3297, 393, 360, 729, 50790, 50790, 721, 13, 583, 291, 434, 22062, 10875, 257, 5206, 456, 281, 659, 4543, 3413, 976, 257, 7908, 51092, 51092, 3353, 293, 445, 584, 11, 420, 281, 829, 257, 25534, 322, 264, 4978, 689, 291, 434, 286, 914, 11, 286, 2041, 1071, 51398, 51398, 636, 281, 574, 412, 309, 307, 2831, 813, 264, 7908, 3353, 11, 291, 434, 1566, 309, 311, 406, 257, 7908, 3353, 11, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1142035722732544, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013764319010078907}, {"id": 228, "seek": 134672, "start": 1367.4, "end": 1372.04, "text": " way to look at it is rather than the false positive, you're saying it's not a false positive,", "tokens": [50364, 300, 311, 767, 27479, 428, 1461, 949, 257, 31413, 565, 13, 400, 291, 3297, 393, 360, 729, 50790, 50790, 721, 13, 583, 291, 434, 22062, 10875, 257, 5206, 456, 281, 659, 4543, 3413, 976, 257, 7908, 51092, 51092, 3353, 293, 445, 584, 11, 420, 281, 829, 257, 25534, 322, 264, 4978, 689, 291, 434, 286, 914, 11, 286, 2041, 1071, 51398, 51398, 636, 281, 574, 412, 309, 307, 2831, 813, 264, 7908, 3353, 11, 291, 434, 1566, 309, 311, 406, 257, 7908, 3353, 11, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1142035722732544, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013764319010078907}, {"id": 229, "seek": 137204, "start": 1372.04, "end": 1377.3999999999999, "text": " it's just a constraint that the rule as the rule is saying, this is not a false positive", "tokens": [50364, 309, 311, 445, 257, 25534, 300, 264, 4978, 382, 264, 4978, 307, 1566, 11, 341, 307, 406, 257, 7908, 3353, 50632, 50632, 300, 411, 11, 4177, 11, 341, 727, 767, 312, 7363, 11, 291, 434, 767, 1566, 11, 286, 478, 5127, 11, 510, 311, 50878, 50878, 257, 4978, 300, 10860, 364, 4497, 25534, 281, 428, 3089, 13, 400, 309, 311, 406, 257, 7908, 3353, 13, 51098, 51098, 467, 311, 257, 2074, 3353, 11, 341, 307, 406, 1392, 11, 291, 362, 281, 764, 341, 25534, 689, 291, 787, 51352, 51352, 764, 6798, 2733, 1124, 337, 1508, 5288, 13, 51450, 51450, 865, 11, 1338, 11, 382, 291, 848, 11, 411, 11, 498, 291, 528, 281, 2573, 484, 257, 688, 544, 721, 11, 1936, 11, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.13627049279591394, "compression_ratio": 1.8774703557312253, "no_caption_prob": 2.468168349878397e-05}, {"id": 230, "seek": 137204, "start": 1377.3999999999999, "end": 1382.32, "text": " that like, hey, this could actually be valid, you're actually saying, I'm adding, here's", "tokens": [50364, 309, 311, 445, 257, 25534, 300, 264, 4978, 382, 264, 4978, 307, 1566, 11, 341, 307, 406, 257, 7908, 3353, 50632, 50632, 300, 411, 11, 4177, 11, 341, 727, 767, 312, 7363, 11, 291, 434, 767, 1566, 11, 286, 478, 5127, 11, 510, 311, 50878, 50878, 257, 4978, 300, 10860, 364, 4497, 25534, 281, 428, 3089, 13, 400, 309, 311, 406, 257, 7908, 3353, 13, 51098, 51098, 467, 311, 257, 2074, 3353, 11, 341, 307, 406, 1392, 11, 291, 362, 281, 764, 341, 25534, 689, 291, 787, 51352, 51352, 764, 6798, 2733, 1124, 337, 1508, 5288, 13, 51450, 51450, 865, 11, 1338, 11, 382, 291, 848, 11, 411, 11, 498, 291, 528, 281, 2573, 484, 257, 688, 544, 721, 11, 1936, 11, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.13627049279591394, "compression_ratio": 1.8774703557312253, "no_caption_prob": 2.468168349878397e-05}, {"id": 231, "seek": 137204, "start": 1382.32, "end": 1386.72, "text": " a rule that adds an additional constraint to your code. And it's not a false positive.", "tokens": [50364, 309, 311, 445, 257, 25534, 300, 264, 4978, 382, 264, 4978, 307, 1566, 11, 341, 307, 406, 257, 7908, 3353, 50632, 50632, 300, 411, 11, 4177, 11, 341, 727, 767, 312, 7363, 11, 291, 434, 767, 1566, 11, 286, 478, 5127, 11, 510, 311, 50878, 50878, 257, 4978, 300, 10860, 364, 4497, 25534, 281, 428, 3089, 13, 400, 309, 311, 406, 257, 7908, 3353, 13, 51098, 51098, 467, 311, 257, 2074, 3353, 11, 341, 307, 406, 1392, 11, 291, 362, 281, 764, 341, 25534, 689, 291, 787, 51352, 51352, 764, 6798, 2733, 1124, 337, 1508, 5288, 13, 51450, 51450, 865, 11, 1338, 11, 382, 291, 848, 11, 411, 11, 498, 291, 528, 281, 2573, 484, 257, 688, 544, 721, 11, 1936, 11, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.13627049279591394, "compression_ratio": 1.8774703557312253, "no_caption_prob": 2.468168349878397e-05}, {"id": 232, "seek": 137204, "start": 1386.72, "end": 1391.8, "text": " It's a true positive, this is not okay, you have to use this constraint where you only", "tokens": [50364, 309, 311, 445, 257, 25534, 300, 264, 4978, 382, 264, 4978, 307, 1566, 11, 341, 307, 406, 257, 7908, 3353, 50632, 50632, 300, 411, 11, 4177, 11, 341, 727, 767, 312, 7363, 11, 291, 434, 767, 1566, 11, 286, 478, 5127, 11, 510, 311, 50878, 50878, 257, 4978, 300, 10860, 364, 4497, 25534, 281, 428, 3089, 13, 400, 309, 311, 406, 257, 7908, 3353, 13, 51098, 51098, 467, 311, 257, 2074, 3353, 11, 341, 307, 406, 1392, 11, 291, 362, 281, 764, 341, 25534, 689, 291, 787, 51352, 51352, 764, 6798, 2733, 1124, 337, 1508, 5288, 13, 51450, 51450, 865, 11, 1338, 11, 382, 291, 848, 11, 411, 11, 498, 291, 528, 281, 2573, 484, 257, 688, 544, 721, 11, 1936, 11, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.13627049279591394, "compression_ratio": 1.8774703557312253, "no_caption_prob": 2.468168349878397e-05}, {"id": 233, "seek": 137204, "start": 1391.8, "end": 1393.76, "text": " use string literals for class names.", "tokens": [50364, 309, 311, 445, 257, 25534, 300, 264, 4978, 382, 264, 4978, 307, 1566, 11, 341, 307, 406, 257, 7908, 3353, 50632, 50632, 300, 411, 11, 4177, 11, 341, 727, 767, 312, 7363, 11, 291, 434, 767, 1566, 11, 286, 478, 5127, 11, 510, 311, 50878, 50878, 257, 4978, 300, 10860, 364, 4497, 25534, 281, 428, 3089, 13, 400, 309, 311, 406, 257, 7908, 3353, 13, 51098, 51098, 467, 311, 257, 2074, 3353, 11, 341, 307, 406, 1392, 11, 291, 362, 281, 764, 341, 25534, 689, 291, 787, 51352, 51352, 764, 6798, 2733, 1124, 337, 1508, 5288, 13, 51450, 51450, 865, 11, 1338, 11, 382, 291, 848, 11, 411, 11, 498, 291, 528, 281, 2573, 484, 257, 688, 544, 721, 11, 1936, 11, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.13627049279591394, "compression_ratio": 1.8774703557312253, "no_caption_prob": 2.468168349878397e-05}, {"id": 234, "seek": 137204, "start": 1393.76, "end": 1400.48, "text": " Yeah, yeah, as you said, like, if you want to figure out a lot more things, basically,", "tokens": [50364, 309, 311, 445, 257, 25534, 300, 264, 4978, 382, 264, 4978, 307, 1566, 11, 341, 307, 406, 257, 7908, 3353, 50632, 50632, 300, 411, 11, 4177, 11, 341, 727, 767, 312, 7363, 11, 291, 434, 767, 1566, 11, 286, 478, 5127, 11, 510, 311, 50878, 50878, 257, 4978, 300, 10860, 364, 4497, 25534, 281, 428, 3089, 13, 400, 309, 311, 406, 257, 7908, 3353, 13, 51098, 51098, 467, 311, 257, 2074, 3353, 11, 341, 307, 406, 1392, 11, 291, 362, 281, 764, 341, 25534, 689, 291, 787, 51352, 51352, 764, 6798, 2733, 1124, 337, 1508, 5288, 13, 51450, 51450, 865, 11, 1338, 11, 382, 291, 848, 11, 411, 11, 498, 291, 528, 281, 2573, 484, 257, 688, 544, 721, 11, 1936, 11, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.13627049279591394, "compression_ratio": 1.8774703557312253, "no_caption_prob": 2.468168349878397e-05}, {"id": 235, "seek": 140048, "start": 1400.48, "end": 1407.08, "text": " at some point, you're building an interpreter, as I see it, which would definitely be valuable", "tokens": [50364, 412, 512, 935, 11, 291, 434, 2390, 364, 34132, 11, 382, 286, 536, 309, 11, 597, 576, 2138, 312, 8263, 50694, 50694, 281, 312, 1075, 281, 13596, 257, 688, 544, 721, 13, 50814, 50814, 400, 294, 2699, 76, 11, 291, 393, 360, 257, 688, 294, 300, 3843, 13, 50960, 50960, 286, 519, 291, 393, 360, 257, 688, 13, 865, 11, 570, 309, 311, 445, 6075, 6828, 11, 558, 30, 407, 309, 311, 6022, 295, 51240, 51240, 552, 362, 1252, 5065, 300, 652, 264, 958, 721, 257, 688, 3571, 13, 583, 309, 576, 920, 312, 51452, 51452, 257, 688, 295, 589, 293, 576, 652, 264, 2290, 257, 688, 544, 14009, 11, 286, 519, 13, 400, 337, 264, 4978, 300, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1161072527775999, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.095302195608383e-05}, {"id": 236, "seek": 140048, "start": 1407.08, "end": 1409.48, "text": " to be able to infer a lot more things.", "tokens": [50364, 412, 512, 935, 11, 291, 434, 2390, 364, 34132, 11, 382, 286, 536, 309, 11, 597, 576, 2138, 312, 8263, 50694, 50694, 281, 312, 1075, 281, 13596, 257, 688, 544, 721, 13, 50814, 50814, 400, 294, 2699, 76, 11, 291, 393, 360, 257, 688, 294, 300, 3843, 13, 50960, 50960, 286, 519, 291, 393, 360, 257, 688, 13, 865, 11, 570, 309, 311, 445, 6075, 6828, 11, 558, 30, 407, 309, 311, 6022, 295, 51240, 51240, 552, 362, 1252, 5065, 300, 652, 264, 958, 721, 257, 688, 3571, 13, 583, 309, 576, 920, 312, 51452, 51452, 257, 688, 295, 589, 293, 576, 652, 264, 2290, 257, 688, 544, 14009, 11, 286, 519, 13, 400, 337, 264, 4978, 300, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1161072527775999, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.095302195608383e-05}, {"id": 237, "seek": 140048, "start": 1409.48, "end": 1412.4, "text": " And in Elm, you can do a lot in that regard.", "tokens": [50364, 412, 512, 935, 11, 291, 434, 2390, 364, 34132, 11, 382, 286, 536, 309, 11, 597, 576, 2138, 312, 8263, 50694, 50694, 281, 312, 1075, 281, 13596, 257, 688, 544, 721, 13, 50814, 50814, 400, 294, 2699, 76, 11, 291, 393, 360, 257, 688, 294, 300, 3843, 13, 50960, 50960, 286, 519, 291, 393, 360, 257, 688, 13, 865, 11, 570, 309, 311, 445, 6075, 6828, 11, 558, 30, 407, 309, 311, 6022, 295, 51240, 51240, 552, 362, 1252, 5065, 300, 652, 264, 958, 721, 257, 688, 3571, 13, 583, 309, 576, 920, 312, 51452, 51452, 257, 688, 295, 589, 293, 576, 652, 264, 2290, 257, 688, 544, 14009, 11, 286, 519, 13, 400, 337, 264, 4978, 300, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1161072527775999, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.095302195608383e-05}, {"id": 238, "seek": 140048, "start": 1412.4, "end": 1418.0, "text": " I think you can do a lot. Yeah, because it's just pure functions, right? So it's none of", "tokens": [50364, 412, 512, 935, 11, 291, 434, 2390, 364, 34132, 11, 382, 286, 536, 309, 11, 597, 576, 2138, 312, 8263, 50694, 50694, 281, 312, 1075, 281, 13596, 257, 688, 544, 721, 13, 50814, 50814, 400, 294, 2699, 76, 11, 291, 393, 360, 257, 688, 294, 300, 3843, 13, 50960, 50960, 286, 519, 291, 393, 360, 257, 688, 13, 865, 11, 570, 309, 311, 445, 6075, 6828, 11, 558, 30, 407, 309, 311, 6022, 295, 51240, 51240, 552, 362, 1252, 5065, 300, 652, 264, 958, 721, 257, 688, 3571, 13, 583, 309, 576, 920, 312, 51452, 51452, 257, 688, 295, 589, 293, 576, 652, 264, 2290, 257, 688, 544, 14009, 11, 286, 519, 13, 400, 337, 264, 4978, 300, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1161072527775999, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.095302195608383e-05}, {"id": 239, "seek": 140048, "start": 1418.0, "end": 1422.24, "text": " them have side effects that make the next things a lot easier. But it would still be", "tokens": [50364, 412, 512, 935, 11, 291, 434, 2390, 364, 34132, 11, 382, 286, 536, 309, 11, 597, 576, 2138, 312, 8263, 50694, 50694, 281, 312, 1075, 281, 13596, 257, 688, 544, 721, 13, 50814, 50814, 400, 294, 2699, 76, 11, 291, 393, 360, 257, 688, 294, 300, 3843, 13, 50960, 50960, 286, 519, 291, 393, 360, 257, 688, 13, 865, 11, 570, 309, 311, 445, 6075, 6828, 11, 558, 30, 407, 309, 311, 6022, 295, 51240, 51240, 552, 362, 1252, 5065, 300, 652, 264, 958, 721, 257, 688, 3571, 13, 583, 309, 576, 920, 312, 51452, 51452, 257, 688, 295, 589, 293, 576, 652, 264, 2290, 257, 688, 544, 14009, 11, 286, 519, 13, 400, 337, 264, 4978, 300, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1161072527775999, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.095302195608383e-05}, {"id": 240, "seek": 140048, "start": 1422.24, "end": 1428.56, "text": " a lot of work and would make the tool a lot more slower, I think. And for the rule that", "tokens": [50364, 412, 512, 935, 11, 291, 434, 2390, 364, 34132, 11, 382, 286, 536, 309, 11, 597, 576, 2138, 312, 8263, 50694, 50694, 281, 312, 1075, 281, 13596, 257, 688, 544, 721, 13, 50814, 50814, 400, 294, 2699, 76, 11, 291, 393, 360, 257, 688, 294, 300, 3843, 13, 50960, 50960, 286, 519, 291, 393, 360, 257, 688, 13, 865, 11, 570, 309, 311, 445, 6075, 6828, 11, 558, 30, 407, 309, 311, 6022, 295, 51240, 51240, 552, 362, 1252, 5065, 300, 652, 264, 958, 721, 257, 688, 3571, 13, 583, 309, 576, 920, 312, 51452, 51452, 257, 688, 295, 589, 293, 576, 652, 264, 2290, 257, 688, 544, 14009, 11, 286, 519, 13, 400, 337, 264, 4978, 300, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1161072527775999, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.095302195608383e-05}, {"id": 241, "seek": 142856, "start": 1428.56, "end": 1434.56, "text": " doesn't report false positives, but reports things that it wants to enforce new constraints,", "tokens": [50364, 1177, 380, 2275, 7908, 35127, 11, 457, 7122, 721, 300, 309, 2738, 281, 24825, 777, 18491, 11, 50664, 50664, 291, 434, 3122, 558, 13, 2305, 286, 576, 584, 300, 309, 19458, 490, 257, 7908, 3353, 281, 50922, 50922, 257, 25534, 307, 294, 264, 6713, 3636, 13, 1743, 498, 264, 6713, 3636, 767, 13948, 411, 11, 51274, 51274, 4177, 11, 341, 307, 406, 257, 1154, 294, 264, 2020, 300, 309, 311, 406, 516, 281, 3082, 428, 3089, 281, 8252, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.12385732371632646, "compression_ratio": 1.680952380952381, "no_caption_prob": 8.01329588284716e-06}, {"id": 242, "seek": 142856, "start": 1434.56, "end": 1439.72, "text": " you're absolutely right. Where I would say that it switches from a false positive to", "tokens": [50364, 1177, 380, 2275, 7908, 35127, 11, 457, 7122, 721, 300, 309, 2738, 281, 24825, 777, 18491, 11, 50664, 50664, 291, 434, 3122, 558, 13, 2305, 286, 576, 584, 300, 309, 19458, 490, 257, 7908, 3353, 281, 50922, 50922, 257, 25534, 307, 294, 264, 6713, 3636, 13, 1743, 498, 264, 6713, 3636, 767, 13948, 411, 11, 51274, 51274, 4177, 11, 341, 307, 406, 257, 1154, 294, 264, 2020, 300, 309, 311, 406, 516, 281, 3082, 428, 3089, 281, 8252, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.12385732371632646, "compression_ratio": 1.680952380952381, "no_caption_prob": 8.01329588284716e-06}, {"id": 243, "seek": 142856, "start": 1439.72, "end": 1446.76, "text": " a constraint is in the error message. Like if the error message actually explains like,", "tokens": [50364, 1177, 380, 2275, 7908, 35127, 11, 457, 7122, 721, 300, 309, 2738, 281, 24825, 777, 18491, 11, 50664, 50664, 291, 434, 3122, 558, 13, 2305, 286, 576, 584, 300, 309, 19458, 490, 257, 7908, 3353, 281, 50922, 50922, 257, 25534, 307, 294, 264, 6713, 3636, 13, 1743, 498, 264, 6713, 3636, 767, 13948, 411, 11, 51274, 51274, 4177, 11, 341, 307, 406, 257, 1154, 294, 264, 2020, 300, 309, 311, 406, 516, 281, 3082, 428, 3089, 281, 8252, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.12385732371632646, "compression_ratio": 1.680952380952381, "no_caption_prob": 8.01329588284716e-06}, {"id": 244, "seek": 142856, "start": 1446.76, "end": 1452.8, "text": " hey, this is not a problem in the sense that it's not going to cause your code to crash", "tokens": [50364, 1177, 380, 2275, 7908, 35127, 11, 457, 7122, 721, 300, 309, 2738, 281, 24825, 777, 18491, 11, 50664, 50664, 291, 434, 3122, 558, 13, 2305, 286, 576, 584, 300, 309, 19458, 490, 257, 7908, 3353, 281, 50922, 50922, 257, 25534, 307, 294, 264, 6713, 3636, 13, 1743, 498, 264, 6713, 3636, 767, 13948, 411, 11, 51274, 51274, 4177, 11, 341, 307, 406, 257, 1154, 294, 264, 2020, 300, 309, 311, 406, 516, 281, 3082, 428, 3089, 281, 8252, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.12385732371632646, "compression_ratio": 1.680952380952381, "no_caption_prob": 8.01329588284716e-06}, {"id": 245, "seek": 145280, "start": 1452.8, "end": 1459.84, "text": " or behave weirdly. But for the sake of this other Elm review rule that makes sure that", "tokens": [50364, 420, 15158, 48931, 13, 583, 337, 264, 9717, 295, 341, 661, 2699, 76, 3131, 4978, 300, 1669, 988, 300, 50716, 50716, 321, 500, 380, 362, 604, 777, 24387, 5359, 11, 321, 3651, 300, 341, 307, 257, 300, 264, 6770, 281, 1508, 51050, 51050, 307, 257, 13437, 6798, 11, 257, 6798, 20411, 13, 400, 300, 311, 437, 321, 630, 13, 407, 498, 291, 2903, 264, 51390, 51390, 1154, 293, 498, 291, 2903, 264, 5311, 11, 550, 561, 3241, 309, 13, 823, 11, 286, 2378, 380, 2198, 2878, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.10522101720174154, "compression_ratio": 1.627906976744186, "no_caption_prob": 0.00020024798868689686}, {"id": 246, "seek": 145280, "start": 1459.84, "end": 1466.52, "text": " we don't have any new CSS classes, we require that this is a that the argument to class", "tokens": [50364, 420, 15158, 48931, 13, 583, 337, 264, 9717, 295, 341, 661, 2699, 76, 3131, 4978, 300, 1669, 988, 300, 50716, 50716, 321, 500, 380, 362, 604, 777, 24387, 5359, 11, 321, 3651, 300, 341, 307, 257, 300, 264, 6770, 281, 1508, 51050, 51050, 307, 257, 13437, 6798, 11, 257, 6798, 20411, 13, 400, 300, 311, 437, 321, 630, 13, 407, 498, 291, 2903, 264, 51390, 51390, 1154, 293, 498, 291, 2903, 264, 5311, 11, 550, 561, 3241, 309, 13, 823, 11, 286, 2378, 380, 2198, 2878, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.10522101720174154, "compression_ratio": 1.627906976744186, "no_caption_prob": 0.00020024798868689686}, {"id": 247, "seek": 145280, "start": 1466.52, "end": 1473.32, "text": " is a static string, a string literal. And that's what we did. So if you explain the", "tokens": [50364, 420, 15158, 48931, 13, 583, 337, 264, 9717, 295, 341, 661, 2699, 76, 3131, 4978, 300, 1669, 988, 300, 50716, 50716, 321, 500, 380, 362, 604, 777, 24387, 5359, 11, 321, 3651, 300, 341, 307, 257, 300, 264, 6770, 281, 1508, 51050, 51050, 307, 257, 13437, 6798, 11, 257, 6798, 20411, 13, 400, 300, 311, 437, 321, 630, 13, 407, 498, 291, 2903, 264, 51390, 51390, 1154, 293, 498, 291, 2903, 264, 5311, 11, 550, 561, 3241, 309, 13, 823, 11, 286, 2378, 380, 2198, 2878, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.10522101720174154, "compression_ratio": 1.627906976744186, "no_caption_prob": 0.00020024798868689686}, {"id": 248, "seek": 145280, "start": 1473.32, "end": 1481.0, "text": " problem and if you explain the benefits, then people accept it. Now, I haven't heard anyone", "tokens": [50364, 420, 15158, 48931, 13, 583, 337, 264, 9717, 295, 341, 661, 2699, 76, 3131, 4978, 300, 1669, 988, 300, 50716, 50716, 321, 500, 380, 362, 604, 777, 24387, 5359, 11, 321, 3651, 300, 341, 307, 257, 300, 264, 6770, 281, 1508, 51050, 51050, 307, 257, 13437, 6798, 11, 257, 6798, 20411, 13, 400, 300, 311, 437, 321, 630, 13, 407, 498, 291, 2903, 264, 51390, 51390, 1154, 293, 498, 291, 2903, 264, 5311, 11, 550, 561, 3241, 309, 13, 823, 11, 286, 2378, 380, 2198, 2878, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.10522101720174154, "compression_ratio": 1.627906976744186, "no_caption_prob": 0.00020024798868689686}, {"id": 249, "seek": 148100, "start": 1481.0, "end": 1485.76, "text": " complain about this, so I'm very happy about that. But if you have like a one liner in", "tokens": [50364, 11024, 466, 341, 11, 370, 286, 478, 588, 2055, 466, 300, 13, 583, 498, 291, 362, 411, 257, 472, 24468, 294, 50602, 50602, 411, 294, 881, 13437, 5215, 3873, 11, 411, 300, 311, 516, 281, 312, 1152, 281, 2903, 13, 1743, 437, 360, 50856, 50856, 291, 437, 307, 257, 1154, 30, 1012, 281, 1286, 2128, 30, 1545, 307, 341, 257, 957, 1154, 30, 1743, 11, 1338, 11, 561, 51198, 51198, 528, 281, 1223, 264, 2740, 300, 291, 434, 10031, 13, 51350, 51350, 407, 2699, 76, 3131, 775, 11, 286, 914, 11, 2745, 12649, 512, 721, 1314, 490, 264, 4195, 13, 682, 341, 1389, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1742595390037254, "compression_ratio": 1.5900383141762453, "no_caption_prob": 5.920635521761142e-05}, {"id": 250, "seek": 148100, "start": 1485.76, "end": 1490.84, "text": " like in most static analysis tools, like that's going to be hard to explain. Like what do", "tokens": [50364, 11024, 466, 341, 11, 370, 286, 478, 588, 2055, 466, 300, 13, 583, 498, 291, 362, 411, 257, 472, 24468, 294, 50602, 50602, 411, 294, 881, 13437, 5215, 3873, 11, 411, 300, 311, 516, 281, 312, 1152, 281, 2903, 13, 1743, 437, 360, 50856, 50856, 291, 437, 307, 257, 1154, 30, 1012, 281, 1286, 2128, 30, 1545, 307, 341, 257, 957, 1154, 30, 1743, 11, 1338, 11, 561, 51198, 51198, 528, 281, 1223, 264, 2740, 300, 291, 434, 10031, 13, 51350, 51350, 407, 2699, 76, 3131, 775, 11, 286, 914, 11, 2745, 12649, 512, 721, 1314, 490, 264, 4195, 13, 682, 341, 1389, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1742595390037254, "compression_ratio": 1.5900383141762453, "no_caption_prob": 5.920635521761142e-05}, {"id": 251, "seek": 148100, "start": 1490.84, "end": 1497.68, "text": " you what is a problem? How to move forward? Why is this a real problem? Like, yeah, people", "tokens": [50364, 11024, 466, 341, 11, 370, 286, 478, 588, 2055, 466, 300, 13, 583, 498, 291, 362, 411, 257, 472, 24468, 294, 50602, 50602, 411, 294, 881, 13437, 5215, 3873, 11, 411, 300, 311, 516, 281, 312, 1152, 281, 2903, 13, 1743, 437, 360, 50856, 50856, 291, 437, 307, 257, 1154, 30, 1012, 281, 1286, 2128, 30, 1545, 307, 341, 257, 957, 1154, 30, 1743, 11, 1338, 11, 561, 51198, 51198, 528, 281, 1223, 264, 2740, 300, 291, 434, 10031, 13, 51350, 51350, 407, 2699, 76, 3131, 775, 11, 286, 914, 11, 2745, 12649, 512, 721, 1314, 490, 264, 4195, 13, 682, 341, 1389, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1742595390037254, "compression_ratio": 1.5900383141762453, "no_caption_prob": 5.920635521761142e-05}, {"id": 252, "seek": 148100, "start": 1497.68, "end": 1500.72, "text": " want to understand the problems that you're reporting.", "tokens": [50364, 11024, 466, 341, 11, 370, 286, 478, 588, 2055, 466, 300, 13, 583, 498, 291, 362, 411, 257, 472, 24468, 294, 50602, 50602, 411, 294, 881, 13437, 5215, 3873, 11, 411, 300, 311, 516, 281, 312, 1152, 281, 2903, 13, 1743, 437, 360, 50856, 50856, 291, 437, 307, 257, 1154, 30, 1012, 281, 1286, 2128, 30, 1545, 307, 341, 257, 957, 1154, 30, 1743, 11, 1338, 11, 561, 51198, 51198, 528, 281, 1223, 264, 2740, 300, 291, 434, 10031, 13, 51350, 51350, 407, 2699, 76, 3131, 775, 11, 286, 914, 11, 2745, 12649, 512, 721, 1314, 490, 264, 4195, 13, 682, 341, 1389, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1742595390037254, "compression_ratio": 1.5900383141762453, "no_caption_prob": 5.920635521761142e-05}, {"id": 253, "seek": 148100, "start": 1500.72, "end": 1509.12, "text": " So Elm review does, I mean, obviously abstract some things away from the user. In this case,", "tokens": [50364, 11024, 466, 341, 11, 370, 286, 478, 588, 2055, 466, 300, 13, 583, 498, 291, 362, 411, 257, 472, 24468, 294, 50602, 50602, 411, 294, 881, 13437, 5215, 3873, 11, 411, 300, 311, 516, 281, 312, 1152, 281, 2903, 13, 1743, 437, 360, 50856, 50856, 291, 437, 307, 257, 1154, 30, 1012, 281, 1286, 2128, 30, 1545, 307, 341, 257, 957, 1154, 30, 1743, 11, 1338, 11, 561, 51198, 51198, 528, 281, 1223, 264, 2740, 300, 291, 434, 10031, 13, 51350, 51350, 407, 2699, 76, 3131, 775, 11, 286, 914, 11, 2745, 12649, 512, 721, 1314, 490, 264, 4195, 13, 682, 341, 1389, 11, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1742595390037254, "compression_ratio": 1.5900383141762453, "no_caption_prob": 5.920635521761142e-05}, {"id": 254, "seek": 150912, "start": 1509.12, "end": 1517.6799999999998, "text": " like a review rule author. Like, for example, like you do provide this lookup table, the", "tokens": [50364, 411, 257, 3131, 4978, 3793, 13, 1743, 11, 337, 1365, 11, 411, 291, 360, 2893, 341, 574, 1010, 3199, 11, 264, 50792, 50792, 10088, 1315, 574, 1010, 3199, 307, 1333, 295, 8344, 516, 760, 341, 3100, 295, 885, 1075, 281, 2893, 51134, 51134, 544, 1589, 466, 11, 291, 458, 11, 411, 11, 293, 309, 311, 257, 588, 11, 281, 385, 11, 309, 311, 257, 588, 1880, 51393, 51393, 3100, 294, 2699, 76, 3131, 13, 400, 286, 478, 6369, 11, 411, 11, 366, 456, 604, 661, 5110, 689, 291, 1333, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12383426133022514, "compression_ratio": 1.6619718309859155, "no_caption_prob": 9.027538180816919e-05}, {"id": 255, "seek": 150912, "start": 1517.6799999999998, "end": 1524.52, "text": " module name lookup table is sort of somewhat going down this path of being able to provide", "tokens": [50364, 411, 257, 3131, 4978, 3793, 13, 1743, 11, 337, 1365, 11, 411, 291, 360, 2893, 341, 574, 1010, 3199, 11, 264, 50792, 50792, 10088, 1315, 574, 1010, 3199, 307, 1333, 295, 8344, 516, 760, 341, 3100, 295, 885, 1075, 281, 2893, 51134, 51134, 544, 1589, 466, 11, 291, 458, 11, 411, 11, 293, 309, 311, 257, 588, 11, 281, 385, 11, 309, 311, 257, 588, 1880, 51393, 51393, 3100, 294, 2699, 76, 3131, 13, 400, 286, 478, 6369, 11, 411, 11, 366, 456, 604, 661, 5110, 689, 291, 1333, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12383426133022514, "compression_ratio": 1.6619718309859155, "no_caption_prob": 9.027538180816919e-05}, {"id": 256, "seek": 150912, "start": 1524.52, "end": 1529.6999999999998, "text": " more information about, you know, like, and it's a very, to me, it's a very interesting", "tokens": [50364, 411, 257, 3131, 4978, 3793, 13, 1743, 11, 337, 1365, 11, 411, 291, 360, 2893, 341, 574, 1010, 3199, 11, 264, 50792, 50792, 10088, 1315, 574, 1010, 3199, 307, 1333, 295, 8344, 516, 760, 341, 3100, 295, 885, 1075, 281, 2893, 51134, 51134, 544, 1589, 466, 11, 291, 458, 11, 411, 11, 293, 309, 311, 257, 588, 11, 281, 385, 11, 309, 311, 257, 588, 1880, 51393, 51393, 3100, 294, 2699, 76, 3131, 13, 400, 286, 478, 6369, 11, 411, 11, 366, 456, 604, 661, 5110, 689, 291, 1333, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12383426133022514, "compression_ratio": 1.6619718309859155, "no_caption_prob": 9.027538180816919e-05}, {"id": 257, "seek": 150912, "start": 1529.6999999999998, "end": 1536.0, "text": " path in Elm review. And I'm curious, like, are there any other examples where you sort", "tokens": [50364, 411, 257, 3131, 4978, 3793, 13, 1743, 11, 337, 1365, 11, 411, 291, 360, 2893, 341, 574, 1010, 3199, 11, 264, 50792, 50792, 10088, 1315, 574, 1010, 3199, 307, 1333, 295, 8344, 516, 760, 341, 3100, 295, 885, 1075, 281, 2893, 51134, 51134, 544, 1589, 466, 11, 291, 458, 11, 411, 11, 293, 309, 311, 257, 588, 11, 281, 385, 11, 309, 311, 257, 588, 1880, 51393, 51393, 3100, 294, 2699, 76, 3131, 13, 400, 286, 478, 6369, 11, 411, 11, 366, 456, 604, 661, 5110, 689, 291, 1333, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.12383426133022514, "compression_ratio": 1.6619718309859155, "no_caption_prob": 9.027538180816919e-05}, {"id": 258, "seek": 153600, "start": 1536.0, "end": 1542.0, "text": " of do some amount of additional analysis of the code where you can sort of process some", "tokens": [50364, 295, 360, 512, 2372, 295, 4497, 5215, 295, 264, 3089, 689, 291, 393, 1333, 295, 1399, 512, 50664, 50664, 1589, 30, 1726, 11, 291, 458, 11, 406, 257, 1577, 322, 659, 34132, 11, 457, 884, 257, 707, 544, 5215, 13, 51028, 51028, 2014, 456, 661, 5110, 295, 300, 294, 2699, 76, 3131, 30, 400, 366, 456, 721, 322, 428, 1575, 300, 291, 51266, 51266, 519, 1062, 312, 6854, 337, 2699, 76, 3131, 281, 19219, 30, 51458, 51458, 865, 13, 407, 445, 281, 2903, 264, 574, 1010, 3199, 300, 291, 2835, 11, 264, 10088, 1315, 574, 1010, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.12736970901489258, "compression_ratio": 1.6762295081967213, "no_caption_prob": 8.013433216547128e-06}, {"id": 259, "seek": 153600, "start": 1542.0, "end": 1549.28, "text": " information? Not, you know, not a full on pre interpreter, but doing a little more analysis.", "tokens": [50364, 295, 360, 512, 2372, 295, 4497, 5215, 295, 264, 3089, 689, 291, 393, 1333, 295, 1399, 512, 50664, 50664, 1589, 30, 1726, 11, 291, 458, 11, 406, 257, 1577, 322, 659, 34132, 11, 457, 884, 257, 707, 544, 5215, 13, 51028, 51028, 2014, 456, 661, 5110, 295, 300, 294, 2699, 76, 3131, 30, 400, 366, 456, 721, 322, 428, 1575, 300, 291, 51266, 51266, 519, 1062, 312, 6854, 337, 2699, 76, 3131, 281, 19219, 30, 51458, 51458, 865, 13, 407, 445, 281, 2903, 264, 574, 1010, 3199, 300, 291, 2835, 11, 264, 10088, 1315, 574, 1010, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.12736970901489258, "compression_ratio": 1.6762295081967213, "no_caption_prob": 8.013433216547128e-06}, {"id": 260, "seek": 153600, "start": 1549.28, "end": 1554.04, "text": " Are there other examples of that in Elm review? And are there things on your mind that you", "tokens": [50364, 295, 360, 512, 2372, 295, 4497, 5215, 295, 264, 3089, 689, 291, 393, 1333, 295, 1399, 512, 50664, 50664, 1589, 30, 1726, 11, 291, 458, 11, 406, 257, 1577, 322, 659, 34132, 11, 457, 884, 257, 707, 544, 5215, 13, 51028, 51028, 2014, 456, 661, 5110, 295, 300, 294, 2699, 76, 3131, 30, 400, 366, 456, 721, 322, 428, 1575, 300, 291, 51266, 51266, 519, 1062, 312, 6854, 337, 2699, 76, 3131, 281, 19219, 30, 51458, 51458, 865, 13, 407, 445, 281, 2903, 264, 574, 1010, 3199, 300, 291, 2835, 11, 264, 10088, 1315, 574, 1010, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.12736970901489258, "compression_ratio": 1.6762295081967213, "no_caption_prob": 8.013433216547128e-06}, {"id": 261, "seek": 153600, "start": 1554.04, "end": 1557.88, "text": " think might be appropriate for Elm review to expose?", "tokens": [50364, 295, 360, 512, 2372, 295, 4497, 5215, 295, 264, 3089, 689, 291, 393, 1333, 295, 1399, 512, 50664, 50664, 1589, 30, 1726, 11, 291, 458, 11, 406, 257, 1577, 322, 659, 34132, 11, 457, 884, 257, 707, 544, 5215, 13, 51028, 51028, 2014, 456, 661, 5110, 295, 300, 294, 2699, 76, 3131, 30, 400, 366, 456, 721, 322, 428, 1575, 300, 291, 51266, 51266, 519, 1062, 312, 6854, 337, 2699, 76, 3131, 281, 19219, 30, 51458, 51458, 865, 13, 407, 445, 281, 2903, 264, 574, 1010, 3199, 300, 291, 2835, 11, 264, 10088, 1315, 574, 1010, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.12736970901489258, "compression_ratio": 1.6762295081967213, "no_caption_prob": 8.013433216547128e-06}, {"id": 262, "seek": 153600, "start": 1557.88, "end": 1564.08, "text": " Yeah. So just to explain the lookup table that you mentioned, the module name lookup", "tokens": [50364, 295, 360, 512, 2372, 295, 4497, 5215, 295, 264, 3089, 689, 291, 393, 1333, 295, 1399, 512, 50664, 50664, 1589, 30, 1726, 11, 291, 458, 11, 406, 257, 1577, 322, 659, 34132, 11, 457, 884, 257, 707, 544, 5215, 13, 51028, 51028, 2014, 456, 661, 5110, 295, 300, 294, 2699, 76, 3131, 30, 400, 366, 456, 721, 322, 428, 1575, 300, 291, 51266, 51266, 519, 1062, 312, 6854, 337, 2699, 76, 3131, 281, 19219, 30, 51458, 51458, 865, 13, 407, 445, 281, 2903, 264, 574, 1010, 3199, 300, 291, 2835, 11, 264, 10088, 1315, 574, 1010, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.12736970901489258, "compression_ratio": 1.6762295081967213, "no_caption_prob": 8.013433216547128e-06}, {"id": 263, "seek": 156408, "start": 1564.08, "end": 1569.34, "text": " table is just basically a dictionary that says at this location in the source code,", "tokens": [50364, 3199, 307, 445, 1936, 257, 25890, 300, 1619, 412, 341, 4914, 294, 264, 4009, 3089, 11, 50627, 50627, 341, 307, 257, 6408, 281, 341, 2158, 11, 597, 1487, 490, 341, 974, 490, 341, 10088, 13, 1436, 50928, 50928, 294, 264, 12649, 28431, 4230, 11, 291, 362, 562, 291, 584, 257, 15026, 272, 11, 291, 6408, 264, 272, 2445, 51352, 51352, 420, 272, 2010, 11, 5413, 322, 264, 11775, 2869, 651, 295, 264, 257, 10088, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.18087908587878263, "compression_ratio": 1.6736842105263159, "no_caption_prob": 3.7635047192452475e-05}, {"id": 264, "seek": 156408, "start": 1569.34, "end": 1575.36, "text": " this is a reference to this value, which comes from this import from this module. Because", "tokens": [50364, 3199, 307, 445, 1936, 257, 25890, 300, 1619, 412, 341, 4914, 294, 264, 4009, 3089, 11, 50627, 50627, 341, 307, 257, 6408, 281, 341, 2158, 11, 597, 1487, 490, 341, 974, 490, 341, 10088, 13, 1436, 50928, 50928, 294, 264, 12649, 28431, 4230, 11, 291, 362, 562, 291, 584, 257, 15026, 272, 11, 291, 6408, 264, 272, 2445, 51352, 51352, 420, 272, 2010, 11, 5413, 322, 264, 11775, 2869, 651, 295, 264, 257, 10088, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.18087908587878263, "compression_ratio": 1.6736842105263159, "no_caption_prob": 3.7635047192452475e-05}, {"id": 265, "seek": 156408, "start": 1575.36, "end": 1583.84, "text": " in the abstract syntax tree, you have when you say a dots b, you reference the b function", "tokens": [50364, 3199, 307, 445, 1936, 257, 25890, 300, 1619, 412, 341, 4914, 294, 264, 4009, 3089, 11, 50627, 50627, 341, 307, 257, 6408, 281, 341, 2158, 11, 597, 1487, 490, 341, 974, 490, 341, 10088, 13, 1436, 50928, 50928, 294, 264, 12649, 28431, 4230, 11, 291, 362, 562, 291, 584, 257, 15026, 272, 11, 291, 6408, 264, 272, 2445, 51352, 51352, 420, 272, 2010, 11, 5413, 322, 264, 11775, 2869, 651, 295, 264, 257, 10088, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.18087908587878263, "compression_ratio": 1.6736842105263159, "no_caption_prob": 3.7635047192452475e-05}, {"id": 266, "seek": 156408, "start": 1583.84, "end": 1588.52, "text": " or b type, depending on the uppercase of the a module.", "tokens": [50364, 3199, 307, 445, 1936, 257, 25890, 300, 1619, 412, 341, 4914, 294, 264, 4009, 3089, 11, 50627, 50627, 341, 307, 257, 6408, 281, 341, 2158, 11, 597, 1487, 490, 341, 974, 490, 341, 10088, 13, 1436, 50928, 50928, 294, 264, 12649, 28431, 4230, 11, 291, 362, 562, 291, 584, 257, 15026, 272, 11, 291, 6408, 264, 272, 2445, 51352, 51352, 420, 272, 2010, 11, 5413, 322, 264, 11775, 2869, 651, 295, 264, 257, 10088, 13, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.18087908587878263, "compression_ratio": 1.6736842105263159, "no_caption_prob": 3.7635047192452475e-05}, {"id": 267, "seek": 158852, "start": 1588.52, "end": 1596.48, "text": " Right, because HTML dot text could just be text, or it could be import HTML as h, and", "tokens": [50364, 1779, 11, 570, 17995, 5893, 2487, 727, 445, 312, 2487, 11, 420, 309, 727, 312, 974, 17995, 382, 276, 11, 293, 50762, 50762, 550, 309, 311, 276, 5893, 2487, 13, 50856, 50856, 865, 11, 420, 41596, 17995, 5893, 7952, 1493, 382, 17995, 11, 1507, 411, 300, 13, 407, 264, 10088, 1315, 574, 1010, 51212, 51212, 3199, 307, 456, 281, 652, 309, 709, 3571, 337, 291, 281, 2573, 484, 437, 307, 264, 957, 3380, 51556, 51556, 10088, 300, 341, 2158, 1487, 490, 11, 597, 321, 994, 380, 362, 412, 264, 2863, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.15860329678184107, "compression_ratio": 1.5855855855855856, "no_caption_prob": 1.384576262353221e-05}, {"id": 268, "seek": 158852, "start": 1596.48, "end": 1598.36, "text": " then it's h dot text.", "tokens": [50364, 1779, 11, 570, 17995, 5893, 2487, 727, 445, 312, 2487, 11, 420, 309, 727, 312, 974, 17995, 382, 276, 11, 293, 50762, 50762, 550, 309, 311, 276, 5893, 2487, 13, 50856, 50856, 865, 11, 420, 41596, 17995, 5893, 7952, 1493, 382, 17995, 11, 1507, 411, 300, 13, 407, 264, 10088, 1315, 574, 1010, 51212, 51212, 3199, 307, 456, 281, 652, 309, 709, 3571, 337, 291, 281, 2573, 484, 437, 307, 264, 957, 3380, 51556, 51556, 10088, 300, 341, 2158, 1487, 490, 11, 597, 321, 994, 380, 362, 412, 264, 2863, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.15860329678184107, "compression_ratio": 1.5855855855855856, "no_caption_prob": 1.384576262353221e-05}, {"id": 269, "seek": 158852, "start": 1598.36, "end": 1605.48, "text": " Yeah, or imports HTML dot styled as HTML, stuff like that. So the module name lookup", "tokens": [50364, 1779, 11, 570, 17995, 5893, 2487, 727, 445, 312, 2487, 11, 420, 309, 727, 312, 974, 17995, 382, 276, 11, 293, 50762, 50762, 550, 309, 311, 276, 5893, 2487, 13, 50856, 50856, 865, 11, 420, 41596, 17995, 5893, 7952, 1493, 382, 17995, 11, 1507, 411, 300, 13, 407, 264, 10088, 1315, 574, 1010, 51212, 51212, 3199, 307, 456, 281, 652, 309, 709, 3571, 337, 291, 281, 2573, 484, 437, 307, 264, 957, 3380, 51556, 51556, 10088, 300, 341, 2158, 1487, 490, 11, 597, 321, 994, 380, 362, 412, 264, 2863, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.15860329678184107, "compression_ratio": 1.5855855855855856, "no_caption_prob": 1.384576262353221e-05}, {"id": 270, "seek": 158852, "start": 1605.48, "end": 1612.36, "text": " table is there to make it much easier for you to figure out what is the real original", "tokens": [50364, 1779, 11, 570, 17995, 5893, 2487, 727, 445, 312, 2487, 11, 420, 309, 727, 312, 974, 17995, 382, 276, 11, 293, 50762, 50762, 550, 309, 311, 276, 5893, 2487, 13, 50856, 50856, 865, 11, 420, 41596, 17995, 5893, 7952, 1493, 382, 17995, 11, 1507, 411, 300, 13, 407, 264, 10088, 1315, 574, 1010, 51212, 51212, 3199, 307, 456, 281, 652, 309, 709, 3571, 337, 291, 281, 2573, 484, 437, 307, 264, 957, 3380, 51556, 51556, 10088, 300, 341, 2158, 1487, 490, 11, 597, 321, 994, 380, 362, 412, 264, 2863, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.15860329678184107, "compression_ratio": 1.5855855855855856, "no_caption_prob": 1.384576262353221e-05}, {"id": 271, "seek": 158852, "start": 1612.36, "end": 1616.7, "text": " module that this value comes from, which we didn't have at the beginning.", "tokens": [50364, 1779, 11, 570, 17995, 5893, 2487, 727, 445, 312, 2487, 11, 420, 309, 727, 312, 974, 17995, 382, 276, 11, 293, 50762, 50762, 550, 309, 311, 276, 5893, 2487, 13, 50856, 50856, 865, 11, 420, 41596, 17995, 5893, 7952, 1493, 382, 17995, 11, 1507, 411, 300, 13, 407, 264, 10088, 1315, 574, 1010, 51212, 51212, 3199, 307, 456, 281, 652, 309, 709, 3571, 337, 291, 281, 2573, 484, 437, 307, 264, 957, 3380, 51556, 51556, 10088, 300, 341, 2158, 1487, 490, 11, 597, 321, 994, 380, 362, 412, 264, 2863, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.15860329678184107, "compression_ratio": 1.5855855855855856, "no_caption_prob": 1.384576262353221e-05}, {"id": 272, "seek": 161670, "start": 1616.7, "end": 1623.1200000000001, "text": " People probably invented that from scratch or a sort of imperfect version of that, I", "tokens": [50364, 3432, 1391, 14479, 300, 490, 8459, 420, 257, 1333, 295, 26714, 3037, 295, 300, 11, 286, 50685, 50685, 576, 3811, 13, 50735, 50735, 865, 11, 1936, 561, 645, 411, 11, 360, 286, 536, 364, 974, 281, 17995, 30, 759, 370, 11, 437, 307, 264, 419, 4609, 30, 51103, 51103, 400, 611, 11, 775, 309, 19219, 264, 2487, 2445, 3736, 420, 1228, 33178, 5893, 5893, 30, 400, 1936, 11, 51457, 51457, 561, 630, 309, 411, 300, 636, 11, 597, 294, 3124, 307, 665, 1547, 13, 286, 500, 380, 519, 291, 434, 799, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1462282883493524, "compression_ratio": 1.5245901639344261, "no_caption_prob": 2.3552076527266763e-05}, {"id": 273, "seek": 161670, "start": 1623.1200000000001, "end": 1624.1200000000001, "text": " would imagine.", "tokens": [50364, 3432, 1391, 14479, 300, 490, 8459, 420, 257, 1333, 295, 26714, 3037, 295, 300, 11, 286, 50685, 50685, 576, 3811, 13, 50735, 50735, 865, 11, 1936, 561, 645, 411, 11, 360, 286, 536, 364, 974, 281, 17995, 30, 759, 370, 11, 437, 307, 264, 419, 4609, 30, 51103, 51103, 400, 611, 11, 775, 309, 19219, 264, 2487, 2445, 3736, 420, 1228, 33178, 5893, 5893, 30, 400, 1936, 11, 51457, 51457, 561, 630, 309, 411, 300, 636, 11, 597, 294, 3124, 307, 665, 1547, 13, 286, 500, 380, 519, 291, 434, 799, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1462282883493524, "compression_ratio": 1.5245901639344261, "no_caption_prob": 2.3552076527266763e-05}, {"id": 274, "seek": 161670, "start": 1624.1200000000001, "end": 1631.48, "text": " Yeah, basically people were like, do I see an import to HTML? If so, what is the alias?", "tokens": [50364, 3432, 1391, 14479, 300, 490, 8459, 420, 257, 1333, 295, 26714, 3037, 295, 300, 11, 286, 50685, 50685, 576, 3811, 13, 50735, 50735, 865, 11, 1936, 561, 645, 411, 11, 360, 286, 536, 364, 974, 281, 17995, 30, 759, 370, 11, 437, 307, 264, 419, 4609, 30, 51103, 51103, 400, 611, 11, 775, 309, 19219, 264, 2487, 2445, 3736, 420, 1228, 33178, 5893, 5893, 30, 400, 1936, 11, 51457, 51457, 561, 630, 309, 411, 300, 636, 11, 597, 294, 3124, 307, 665, 1547, 13, 286, 500, 380, 519, 291, 434, 799, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1462282883493524, "compression_ratio": 1.5245901639344261, "no_caption_prob": 2.3552076527266763e-05}, {"id": 275, "seek": 161670, "start": 1631.48, "end": 1638.56, "text": " And also, does it expose the text function literally or using exposing dot dot? And basically,", "tokens": [50364, 3432, 1391, 14479, 300, 490, 8459, 420, 257, 1333, 295, 26714, 3037, 295, 300, 11, 286, 50685, 50685, 576, 3811, 13, 50735, 50735, 865, 11, 1936, 561, 645, 411, 11, 360, 286, 536, 364, 974, 281, 17995, 30, 759, 370, 11, 437, 307, 264, 419, 4609, 30, 51103, 51103, 400, 611, 11, 775, 309, 19219, 264, 2487, 2445, 3736, 420, 1228, 33178, 5893, 5893, 30, 400, 1936, 11, 51457, 51457, 561, 630, 309, 411, 300, 636, 11, 597, 294, 3124, 307, 665, 1547, 13, 286, 500, 380, 519, 291, 434, 799, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1462282883493524, "compression_ratio": 1.5245901639344261, "no_caption_prob": 2.3552076527266763e-05}, {"id": 276, "seek": 161670, "start": 1638.56, "end": 1644.24, "text": " people did it like that way, which in practice is good enough. I don't think you're gonna", "tokens": [50364, 3432, 1391, 14479, 300, 490, 8459, 420, 257, 1333, 295, 26714, 3037, 295, 300, 11, 286, 50685, 50685, 576, 3811, 13, 50735, 50735, 865, 11, 1936, 561, 645, 411, 11, 360, 286, 536, 364, 974, 281, 17995, 30, 759, 370, 11, 437, 307, 264, 419, 4609, 30, 51103, 51103, 400, 611, 11, 775, 309, 19219, 264, 2487, 2445, 3736, 420, 1228, 33178, 5893, 5893, 30, 400, 1936, 11, 51457, 51457, 561, 630, 309, 411, 300, 636, 11, 597, 294, 3124, 307, 665, 1547, 13, 286, 500, 380, 519, 291, 434, 799, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1462282883493524, "compression_ratio": 1.5245901639344261, "no_caption_prob": 2.3552076527266763e-05}, {"id": 277, "seek": 164424, "start": 1644.24, "end": 1649.32, "text": " have a lot of false positives, but it's a lot of work. And you could have some false", "tokens": [50364, 362, 257, 688, 295, 7908, 35127, 11, 457, 309, 311, 257, 688, 295, 589, 13, 400, 291, 727, 362, 512, 7908, 50618, 50618, 40019, 7263, 13, 407, 1338, 11, 341, 390, 746, 300, 286, 534, 1415, 281, 909, 281, 2699, 76, 19954, 50906, 50906, 293, 286, 658, 309, 294, 456, 13, 400, 586, 286, 500, 380, 519, 466, 341, 1333, 295, 1154, 11, 597, 307, 534, 51188, 51188, 1481, 13, 583, 309, 630, 3651, 257, 1326, 36540, 281, 483, 558, 13, 51408, 51408, 865, 11, 309, 311, 1936, 746, 300, 291, 1320, 666, 264, 4319, 11, 558, 30, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1591193629246132, "compression_ratio": 1.6131687242798354, "no_caption_prob": 2.3187243641586974e-05}, {"id": 278, "seek": 164424, "start": 1649.32, "end": 1655.08, "text": " negatives potentially. So yeah, this was something that I really wanted to add to Elm Review", "tokens": [50364, 362, 257, 688, 295, 7908, 35127, 11, 457, 309, 311, 257, 688, 295, 589, 13, 400, 291, 727, 362, 512, 7908, 50618, 50618, 40019, 7263, 13, 407, 1338, 11, 341, 390, 746, 300, 286, 534, 1415, 281, 909, 281, 2699, 76, 19954, 50906, 50906, 293, 286, 658, 309, 294, 456, 13, 400, 586, 286, 500, 380, 519, 466, 341, 1333, 295, 1154, 11, 597, 307, 534, 51188, 51188, 1481, 13, 583, 309, 630, 3651, 257, 1326, 36540, 281, 483, 558, 13, 51408, 51408, 865, 11, 309, 311, 1936, 746, 300, 291, 1320, 666, 264, 4319, 11, 558, 30, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1591193629246132, "compression_ratio": 1.6131687242798354, "no_caption_prob": 2.3187243641586974e-05}, {"id": 279, "seek": 164424, "start": 1655.08, "end": 1660.72, "text": " and I got it in there. And now I don't think about this sort of problem, which is really", "tokens": [50364, 362, 257, 688, 295, 7908, 35127, 11, 457, 309, 311, 257, 688, 295, 589, 13, 400, 291, 727, 362, 512, 7908, 50618, 50618, 40019, 7263, 13, 407, 1338, 11, 341, 390, 746, 300, 286, 534, 1415, 281, 909, 281, 2699, 76, 19954, 50906, 50906, 293, 286, 658, 309, 294, 456, 13, 400, 586, 286, 500, 380, 519, 466, 341, 1333, 295, 1154, 11, 597, 307, 534, 51188, 51188, 1481, 13, 583, 309, 630, 3651, 257, 1326, 36540, 281, 483, 558, 13, 51408, 51408, 865, 11, 309, 311, 1936, 746, 300, 291, 1320, 666, 264, 4319, 11, 558, 30, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1591193629246132, "compression_ratio": 1.6131687242798354, "no_caption_prob": 2.3187243641586974e-05}, {"id": 280, "seek": 164424, "start": 1660.72, "end": 1665.1200000000001, "text": " nice. But it did require a few iterations to get right.", "tokens": [50364, 362, 257, 688, 295, 7908, 35127, 11, 457, 309, 311, 257, 688, 295, 589, 13, 400, 291, 727, 362, 512, 7908, 50618, 50618, 40019, 7263, 13, 407, 1338, 11, 341, 390, 746, 300, 286, 534, 1415, 281, 909, 281, 2699, 76, 19954, 50906, 50906, 293, 286, 658, 309, 294, 456, 13, 400, 586, 286, 500, 380, 519, 466, 341, 1333, 295, 1154, 11, 597, 307, 534, 51188, 51188, 1481, 13, 583, 309, 630, 3651, 257, 1326, 36540, 281, 483, 558, 13, 51408, 51408, 865, 11, 309, 311, 1936, 746, 300, 291, 1320, 666, 264, 4319, 11, 558, 30, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1591193629246132, "compression_ratio": 1.6131687242798354, "no_caption_prob": 2.3187243641586974e-05}, {"id": 281, "seek": 164424, "start": 1665.1200000000001, "end": 1671.28, "text": " Yeah, it's basically something that you pass into the context, right?", "tokens": [50364, 362, 257, 688, 295, 7908, 35127, 11, 457, 309, 311, 257, 688, 295, 589, 13, 400, 291, 727, 362, 512, 7908, 50618, 50618, 40019, 7263, 13, 407, 1338, 11, 341, 390, 746, 300, 286, 534, 1415, 281, 909, 281, 2699, 76, 19954, 50906, 50906, 293, 286, 658, 309, 294, 456, 13, 400, 586, 286, 500, 380, 519, 466, 341, 1333, 295, 1154, 11, 597, 307, 534, 51188, 51188, 1481, 13, 583, 309, 630, 3651, 257, 1326, 36540, 281, 483, 558, 13, 51408, 51408, 865, 11, 309, 311, 1936, 746, 300, 291, 1320, 666, 264, 4319, 11, 558, 30, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.1591193629246132, "compression_ratio": 1.6131687242798354, "no_caption_prob": 2.3187243641586974e-05}, {"id": 282, "seek": 167128, "start": 1671.28, "end": 1678.0, "text": " Yeah, the way that you initialize your context, basically your model for going through the", "tokens": [50364, 865, 11, 264, 636, 300, 291, 5883, 1125, 428, 4319, 11, 1936, 428, 2316, 337, 516, 807, 264, 50700, 50700, 316, 6840, 11, 291, 584, 11, 4177, 11, 286, 478, 3102, 294, 1419, 264, 574, 1010, 3199, 570, 286, 519, 300, 311, 799, 51006, 51006, 312, 4420, 13, 2555, 14722, 309, 337, 385, 293, 976, 309, 281, 385, 13, 51216, 51216, 400, 550, 561, 393, 764, 309, 13, 51266, 51266, 3013, 307, 11611, 411, 257, 3389, 19618, 11, 558, 30, 759, 309, 311, 406, 2978, 11, 550, 291, 500, 380, 51460, 51460, 643, 281, 14722, 309, 13, 51524, 51524, 1079, 11, 2293, 13, 19964, 11, 498, 604, 4978, 7029, 309, 11, 550, 286, 14722, 309, 13, 286, 519, 286, 528, 281, 312, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14870580037434897, "compression_ratio": 1.5870307167235496, "no_caption_prob": 7.254066440509632e-05}, {"id": 283, "seek": 167128, "start": 1678.0, "end": 1684.12, "text": " AST, you say, hey, I'm interested in having the lookup table because I think that's gonna", "tokens": [50364, 865, 11, 264, 636, 300, 291, 5883, 1125, 428, 4319, 11, 1936, 428, 2316, 337, 516, 807, 264, 50700, 50700, 316, 6840, 11, 291, 584, 11, 4177, 11, 286, 478, 3102, 294, 1419, 264, 574, 1010, 3199, 570, 286, 519, 300, 311, 799, 51006, 51006, 312, 4420, 13, 2555, 14722, 309, 337, 385, 293, 976, 309, 281, 385, 13, 51216, 51216, 400, 550, 561, 393, 764, 309, 13, 51266, 51266, 3013, 307, 11611, 411, 257, 3389, 19618, 11, 558, 30, 759, 309, 311, 406, 2978, 11, 550, 291, 500, 380, 51460, 51460, 643, 281, 14722, 309, 13, 51524, 51524, 1079, 11, 2293, 13, 19964, 11, 498, 604, 4978, 7029, 309, 11, 550, 286, 14722, 309, 13, 286, 519, 286, 528, 281, 312, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14870580037434897, "compression_ratio": 1.5870307167235496, "no_caption_prob": 7.254066440509632e-05}, {"id": 284, "seek": 167128, "start": 1684.12, "end": 1688.32, "text": " be useful. Please compute it for me and give it to me.", "tokens": [50364, 865, 11, 264, 636, 300, 291, 5883, 1125, 428, 4319, 11, 1936, 428, 2316, 337, 516, 807, 264, 50700, 50700, 316, 6840, 11, 291, 584, 11, 4177, 11, 286, 478, 3102, 294, 1419, 264, 574, 1010, 3199, 570, 286, 519, 300, 311, 799, 51006, 51006, 312, 4420, 13, 2555, 14722, 309, 337, 385, 293, 976, 309, 281, 385, 13, 51216, 51216, 400, 550, 561, 393, 764, 309, 13, 51266, 51266, 3013, 307, 11611, 411, 257, 3389, 19618, 11, 558, 30, 759, 309, 311, 406, 2978, 11, 550, 291, 500, 380, 51460, 51460, 643, 281, 14722, 309, 13, 51524, 51524, 1079, 11, 2293, 13, 19964, 11, 498, 604, 4978, 7029, 309, 11, 550, 286, 14722, 309, 13, 286, 519, 286, 528, 281, 312, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14870580037434897, "compression_ratio": 1.5870307167235496, "no_caption_prob": 7.254066440509632e-05}, {"id": 285, "seek": 167128, "start": 1688.32, "end": 1689.32, "text": " And then people can use it.", "tokens": [50364, 865, 11, 264, 636, 300, 291, 5883, 1125, 428, 4319, 11, 1936, 428, 2316, 337, 516, 807, 264, 50700, 50700, 316, 6840, 11, 291, 584, 11, 4177, 11, 286, 478, 3102, 294, 1419, 264, 574, 1010, 3199, 570, 286, 519, 300, 311, 799, 51006, 51006, 312, 4420, 13, 2555, 14722, 309, 337, 385, 293, 976, 309, 281, 385, 13, 51216, 51216, 400, 550, 561, 393, 764, 309, 13, 51266, 51266, 3013, 307, 11611, 411, 257, 3389, 19618, 11, 558, 30, 759, 309, 311, 406, 2978, 11, 550, 291, 500, 380, 51460, 51460, 643, 281, 14722, 309, 13, 51524, 51524, 1079, 11, 2293, 13, 19964, 11, 498, 604, 4978, 7029, 309, 11, 550, 286, 14722, 309, 13, 286, 519, 286, 528, 281, 312, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14870580037434897, "compression_ratio": 1.5870307167235496, "no_caption_prob": 7.254066440509632e-05}, {"id": 286, "seek": 167128, "start": 1689.32, "end": 1693.2, "text": " Which is largely like a performance optimization, right? If it's not needed, then you don't", "tokens": [50364, 865, 11, 264, 636, 300, 291, 5883, 1125, 428, 4319, 11, 1936, 428, 2316, 337, 516, 807, 264, 50700, 50700, 316, 6840, 11, 291, 584, 11, 4177, 11, 286, 478, 3102, 294, 1419, 264, 574, 1010, 3199, 570, 286, 519, 300, 311, 799, 51006, 51006, 312, 4420, 13, 2555, 14722, 309, 337, 385, 293, 976, 309, 281, 385, 13, 51216, 51216, 400, 550, 561, 393, 764, 309, 13, 51266, 51266, 3013, 307, 11611, 411, 257, 3389, 19618, 11, 558, 30, 759, 309, 311, 406, 2978, 11, 550, 291, 500, 380, 51460, 51460, 643, 281, 14722, 309, 13, 51524, 51524, 1079, 11, 2293, 13, 19964, 11, 498, 604, 4978, 7029, 309, 11, 550, 286, 14722, 309, 13, 286, 519, 286, 528, 281, 312, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14870580037434897, "compression_ratio": 1.5870307167235496, "no_caption_prob": 7.254066440509632e-05}, {"id": 287, "seek": 167128, "start": 1693.2, "end": 1694.48, "text": " need to compute it.", "tokens": [50364, 865, 11, 264, 636, 300, 291, 5883, 1125, 428, 4319, 11, 1936, 428, 2316, 337, 516, 807, 264, 50700, 50700, 316, 6840, 11, 291, 584, 11, 4177, 11, 286, 478, 3102, 294, 1419, 264, 574, 1010, 3199, 570, 286, 519, 300, 311, 799, 51006, 51006, 312, 4420, 13, 2555, 14722, 309, 337, 385, 293, 976, 309, 281, 385, 13, 51216, 51216, 400, 550, 561, 393, 764, 309, 13, 51266, 51266, 3013, 307, 11611, 411, 257, 3389, 19618, 11, 558, 30, 759, 309, 311, 406, 2978, 11, 550, 291, 500, 380, 51460, 51460, 643, 281, 14722, 309, 13, 51524, 51524, 1079, 11, 2293, 13, 19964, 11, 498, 604, 4978, 7029, 309, 11, 550, 286, 14722, 309, 13, 286, 519, 286, 528, 281, 312, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14870580037434897, "compression_ratio": 1.5870307167235496, "no_caption_prob": 7.254066440509632e-05}, {"id": 288, "seek": 167128, "start": 1694.48, "end": 1701.08, "text": " Yes, exactly. Currently, if any rule requires it, then I compute it. I think I want to be", "tokens": [50364, 865, 11, 264, 636, 300, 291, 5883, 1125, 428, 4319, 11, 1936, 428, 2316, 337, 516, 807, 264, 50700, 50700, 316, 6840, 11, 291, 584, 11, 4177, 11, 286, 478, 3102, 294, 1419, 264, 574, 1010, 3199, 570, 286, 519, 300, 311, 799, 51006, 51006, 312, 4420, 13, 2555, 14722, 309, 337, 385, 293, 976, 309, 281, 385, 13, 51216, 51216, 400, 550, 561, 393, 764, 309, 13, 51266, 51266, 3013, 307, 11611, 411, 257, 3389, 19618, 11, 558, 30, 759, 309, 311, 406, 2978, 11, 550, 291, 500, 380, 51460, 51460, 643, 281, 14722, 309, 13, 51524, 51524, 1079, 11, 2293, 13, 19964, 11, 498, 604, 4978, 7029, 309, 11, 550, 286, 14722, 309, 13, 286, 519, 286, 528, 281, 312, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.14870580037434897, "compression_ratio": 1.5870307167235496, "no_caption_prob": 7.254066440509632e-05}, {"id": 289, "seek": 170108, "start": 1701.08, "end": 1708.8, "text": " smart in the future where only the rules that I'm going to run now will, if any of them", "tokens": [50364, 4069, 294, 264, 2027, 689, 787, 264, 4474, 300, 286, 478, 516, 281, 1190, 586, 486, 11, 498, 604, 295, 552, 50750, 50750, 366, 2978, 11, 550, 286, 14722, 309, 13, 1436, 1936, 11, 264, 3191, 4391, 307, 1596, 2964, 13, 400, 286, 519, 286, 478, 51052, 51052, 516, 281, 643, 281, 312, 1075, 281, 1723, 493, 264, 3131, 5574, 293, 2614, 472, 4978, 412, 257, 565, 293, 312, 51356, 51356, 1075, 281, 1590, 5699, 286, 915, 411, 257, 3191, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.17734619589412914, "compression_ratio": 1.5757575757575757, "no_caption_prob": 4.469195118872449e-05}, {"id": 290, "seek": 170108, "start": 1708.8, "end": 1714.84, "text": " are needed, then I compute it. Because basically, the fix mode is quite slow. And I think I'm", "tokens": [50364, 4069, 294, 264, 2027, 689, 787, 264, 4474, 300, 286, 478, 516, 281, 1190, 586, 486, 11, 498, 604, 295, 552, 50750, 50750, 366, 2978, 11, 550, 286, 14722, 309, 13, 1436, 1936, 11, 264, 3191, 4391, 307, 1596, 2964, 13, 400, 286, 519, 286, 478, 51052, 51052, 516, 281, 643, 281, 312, 1075, 281, 1723, 493, 264, 3131, 5574, 293, 2614, 472, 4978, 412, 257, 565, 293, 312, 51356, 51356, 1075, 281, 1590, 5699, 286, 915, 411, 257, 3191, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.17734619589412914, "compression_ratio": 1.5757575757575757, "no_caption_prob": 4.469195118872449e-05}, {"id": 291, "seek": 170108, "start": 1714.84, "end": 1720.9199999999998, "text": " going to need to be able to cut up the review phase and running one rule at a time and be", "tokens": [50364, 4069, 294, 264, 2027, 689, 787, 264, 4474, 300, 286, 478, 516, 281, 1190, 586, 486, 11, 498, 604, 295, 552, 50750, 50750, 366, 2978, 11, 550, 286, 14722, 309, 13, 1436, 1936, 11, 264, 3191, 4391, 307, 1596, 2964, 13, 400, 286, 519, 286, 478, 51052, 51052, 516, 281, 643, 281, 312, 1075, 281, 1723, 493, 264, 3131, 5574, 293, 2614, 472, 4978, 412, 257, 565, 293, 312, 51356, 51356, 1075, 281, 1590, 5699, 286, 915, 411, 257, 3191, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.17734619589412914, "compression_ratio": 1.5757575757575757, "no_caption_prob": 4.469195118872449e-05}, {"id": 292, "seek": 170108, "start": 1720.9199999999998, "end": 1724.8799999999999, "text": " able to stop whenever I find like a fix.", "tokens": [50364, 4069, 294, 264, 2027, 689, 787, 264, 4474, 300, 286, 478, 516, 281, 1190, 586, 486, 11, 498, 604, 295, 552, 50750, 50750, 366, 2978, 11, 550, 286, 14722, 309, 13, 1436, 1936, 11, 264, 3191, 4391, 307, 1596, 2964, 13, 400, 286, 519, 286, 478, 51052, 51052, 516, 281, 643, 281, 312, 1075, 281, 1723, 493, 264, 3131, 5574, 293, 2614, 472, 4978, 412, 257, 565, 293, 312, 51356, 51356, 1075, 281, 1590, 5699, 286, 915, 411, 257, 3191, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.17734619589412914, "compression_ratio": 1.5757575757575757, "no_caption_prob": 4.469195118872449e-05}, {"id": 293, "seek": 172488, "start": 1724.88, "end": 1732.4, "text": " Elm is very interesting in that regard because certain times you need to compute certain", "tokens": [50364, 2699, 76, 307, 588, 1880, 294, 300, 3843, 570, 1629, 1413, 291, 643, 281, 14722, 1629, 50740, 50740, 721, 30264, 294, 257, 1333, 295, 8388, 1715, 570, 264, 4195, 393, 380, 445, 41117, 257, 3170, 51090, 51090, 300, 550, 5839, 1024, 512, 25890, 4079, 293, 550, 5800, 309, 1177, 380, 362, 300, 2158, 11, 51398, 51398, 457, 309, 1709, 293, 26213, 257, 1252, 1802, 293, 8137, 309, 294, 456, 293, 35900, 5660, 309, 13, 407, 291, 1333, 51658, 51658, 295, 6331, 721, 7614, 294, 2699, 76, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1209218266246083, "compression_ratio": 1.6708860759493671, "no_caption_prob": 6.013760867062956e-05}, {"id": 294, "seek": 172488, "start": 1732.4, "end": 1739.4, "text": " things upfront in a sort of framework design because the user can't just invoke a method", "tokens": [50364, 2699, 76, 307, 588, 1880, 294, 300, 3843, 570, 1629, 1413, 291, 643, 281, 14722, 1629, 50740, 50740, 721, 30264, 294, 257, 1333, 295, 8388, 1715, 570, 264, 4195, 393, 380, 445, 41117, 257, 3170, 51090, 51090, 300, 550, 5839, 1024, 512, 25890, 4079, 293, 550, 5800, 309, 1177, 380, 362, 300, 2158, 11, 51398, 51398, 457, 309, 1709, 293, 26213, 257, 1252, 1802, 293, 8137, 309, 294, 456, 293, 35900, 5660, 309, 13, 407, 291, 1333, 51658, 51658, 295, 6331, 721, 7614, 294, 2699, 76, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1209218266246083, "compression_ratio": 1.6708860759493671, "no_caption_prob": 6.013760867062956e-05}, {"id": 295, "seek": 172488, "start": 1739.4, "end": 1745.5600000000002, "text": " that then mutates some dictionary somewhere and then suddenly it doesn't have that value,", "tokens": [50364, 2699, 76, 307, 588, 1880, 294, 300, 3843, 570, 1629, 1413, 291, 643, 281, 14722, 1629, 50740, 50740, 721, 30264, 294, 257, 1333, 295, 8388, 1715, 570, 264, 4195, 393, 380, 445, 41117, 257, 3170, 51090, 51090, 300, 550, 5839, 1024, 512, 25890, 4079, 293, 550, 5800, 309, 1177, 380, 362, 300, 2158, 11, 51398, 51398, 457, 309, 1709, 293, 26213, 257, 1252, 1802, 293, 8137, 309, 294, 456, 293, 35900, 5660, 309, 13, 407, 291, 1333, 51658, 51658, 295, 6331, 721, 7614, 294, 2699, 76, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1209218266246083, "compression_ratio": 1.6708860759493671, "no_caption_prob": 6.013760867062956e-05}, {"id": 296, "seek": 172488, "start": 1745.5600000000002, "end": 1750.7600000000002, "text": " but it goes and performs a side effect and puts it in there and memoizes it. So you sort", "tokens": [50364, 2699, 76, 307, 588, 1880, 294, 300, 3843, 570, 1629, 1413, 291, 643, 281, 14722, 1629, 50740, 50740, 721, 30264, 294, 257, 1333, 295, 8388, 1715, 570, 264, 4195, 393, 380, 445, 41117, 257, 3170, 51090, 51090, 300, 550, 5839, 1024, 512, 25890, 4079, 293, 550, 5800, 309, 1177, 380, 362, 300, 2158, 11, 51398, 51398, 457, 309, 1709, 293, 26213, 257, 1252, 1802, 293, 8137, 309, 294, 456, 293, 35900, 5660, 309, 13, 407, 291, 1333, 51658, 51658, 295, 6331, 721, 7614, 294, 2699, 76, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1209218266246083, "compression_ratio": 1.6708860759493671, "no_caption_prob": 6.013760867062956e-05}, {"id": 297, "seek": 172488, "start": 1750.7600000000002, "end": 1753.5600000000002, "text": " of architect things differently in Elm.", "tokens": [50364, 2699, 76, 307, 588, 1880, 294, 300, 3843, 570, 1629, 1413, 291, 643, 281, 14722, 1629, 50740, 50740, 721, 30264, 294, 257, 1333, 295, 8388, 1715, 570, 264, 4195, 393, 380, 445, 41117, 257, 3170, 51090, 51090, 300, 550, 5839, 1024, 512, 25890, 4079, 293, 550, 5800, 309, 1177, 380, 362, 300, 2158, 11, 51398, 51398, 457, 309, 1709, 293, 26213, 257, 1252, 1802, 293, 8137, 309, 294, 456, 293, 35900, 5660, 309, 13, 407, 291, 1333, 51658, 51658, 295, 6331, 721, 7614, 294, 2699, 76, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.1209218266246083, "compression_ratio": 1.6708860759493671, "no_caption_prob": 6.013760867062956e-05}, {"id": 298, "seek": 175356, "start": 1753.56, "end": 1759.1599999999999, "text": " Yeah, and also because we can't memorize it. So either we say, well, we're going to compute", "tokens": [50364, 865, 11, 293, 611, 570, 321, 393, 380, 27478, 309, 13, 407, 2139, 321, 584, 11, 731, 11, 321, 434, 516, 281, 14722, 50644, 50644, 309, 1564, 293, 550, 561, 486, 764, 309, 4018, 281, 297, 1413, 11, 420, 321, 434, 516, 281, 14722, 309, 19320, 953, 50986, 50986, 293, 550, 309, 486, 312, 40610, 382, 867, 1413, 382, 561, 3651, 309, 11, 597, 307, 17843, 13, 51320, 51320, 682, 3124, 11, 309, 1391, 1985, 484, 1392, 257, 688, 295, 264, 565, 11, 2318, 294, 264, 4319, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.12961564745221818, "compression_ratio": 1.6603773584905661, "no_caption_prob": 1.593585875525605e-05}, {"id": 299, "seek": 175356, "start": 1759.1599999999999, "end": 1766.0, "text": " it once and then people will use it zero to n times, or we're going to compute it lazily", "tokens": [50364, 865, 11, 293, 611, 570, 321, 393, 380, 27478, 309, 13, 407, 2139, 321, 584, 11, 731, 11, 321, 434, 516, 281, 14722, 50644, 50644, 309, 1564, 293, 550, 561, 486, 764, 309, 4018, 281, 297, 1413, 11, 420, 321, 434, 516, 281, 14722, 309, 19320, 953, 50986, 50986, 293, 550, 309, 486, 312, 40610, 382, 867, 1413, 382, 561, 3651, 309, 11, 597, 307, 17843, 13, 51320, 51320, 682, 3124, 11, 309, 1391, 1985, 484, 1392, 257, 688, 295, 264, 565, 11, 2318, 294, 264, 4319, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.12961564745221818, "compression_ratio": 1.6603773584905661, "no_caption_prob": 1.593585875525605e-05}, {"id": 300, "seek": 175356, "start": 1766.0, "end": 1772.6799999999998, "text": " and then it will be computed as many times as people require it, which is unfortunate.", "tokens": [50364, 865, 11, 293, 611, 570, 321, 393, 380, 27478, 309, 13, 407, 2139, 321, 584, 11, 731, 11, 321, 434, 516, 281, 14722, 50644, 50644, 309, 1564, 293, 550, 561, 486, 764, 309, 4018, 281, 297, 1413, 11, 420, 321, 434, 516, 281, 14722, 309, 19320, 953, 50986, 50986, 293, 550, 309, 486, 312, 40610, 382, 867, 1413, 382, 561, 3651, 309, 11, 597, 307, 17843, 13, 51320, 51320, 682, 3124, 11, 309, 1391, 1985, 484, 1392, 257, 688, 295, 264, 565, 11, 2318, 294, 264, 4319, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.12961564745221818, "compression_ratio": 1.6603773584905661, "no_caption_prob": 1.593585875525605e-05}, {"id": 301, "seek": 175356, "start": 1772.6799999999998, "end": 1777.12, "text": " In practice, it probably works out okay a lot of the time, especially in the context", "tokens": [50364, 865, 11, 293, 611, 570, 321, 393, 380, 27478, 309, 13, 407, 2139, 321, 584, 11, 731, 11, 321, 434, 516, 281, 14722, 50644, 50644, 309, 1564, 293, 550, 561, 486, 764, 309, 4018, 281, 297, 1413, 11, 420, 321, 434, 516, 281, 14722, 309, 19320, 953, 50986, 50986, 293, 550, 309, 486, 312, 40610, 382, 867, 1413, 382, 561, 3651, 309, 11, 597, 307, 17843, 13, 51320, 51320, 682, 3124, 11, 309, 1391, 1985, 484, 1392, 257, 688, 295, 264, 565, 11, 2318, 294, 264, 4319, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.12961564745221818, "compression_ratio": 1.6603773584905661, "no_caption_prob": 1.593585875525605e-05}, {"id": 302, "seek": 177712, "start": 1777.12, "end": 1784.6399999999999, "text": " of a browser application. Maybe for CLI applications, it's a little bit different.", "tokens": [50364, 295, 257, 11185, 3861, 13, 2704, 337, 12855, 40, 5821, 11, 309, 311, 257, 707, 857, 819, 13, 50740, 50740, 1171, 3389, 4676, 3873, 11, 1338, 13, 50860, 50860, 407, 366, 456, 544, 3331, 689, 291, 600, 4888, 5127, 613, 3467, 295, 721, 300, 2893, 51180, 51180, 544, 1333, 295, 11, 291, 458, 11, 2831, 813, 445, 264, 12649, 28431, 4230, 11, 264, 28431, 4230, 365, 51446, 51446, 257, 707, 9007, 11, 365, 257, 707, 2857, 5215, 10332, 337, 291, 300, 291, 393, 2105, 807, 51760, 51760, 264, 2699, 76, 3131, 3663, 30, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.14128450020072386, "compression_ratio": 1.657370517928287, "no_caption_prob": 9.078946277440991e-06}, {"id": 303, "seek": 177712, "start": 1784.6399999999999, "end": 1787.04, "text": " For performance heavy tools, yeah.", "tokens": [50364, 295, 257, 11185, 3861, 13, 2704, 337, 12855, 40, 5821, 11, 309, 311, 257, 707, 857, 819, 13, 50740, 50740, 1171, 3389, 4676, 3873, 11, 1338, 13, 50860, 50860, 407, 366, 456, 544, 3331, 689, 291, 600, 4888, 5127, 613, 3467, 295, 721, 300, 2893, 51180, 51180, 544, 1333, 295, 11, 291, 458, 11, 2831, 813, 445, 264, 12649, 28431, 4230, 11, 264, 28431, 4230, 365, 51446, 51446, 257, 707, 9007, 11, 365, 257, 707, 2857, 5215, 10332, 337, 291, 300, 291, 393, 2105, 807, 51760, 51760, 264, 2699, 76, 3131, 3663, 30, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.14128450020072386, "compression_ratio": 1.657370517928287, "no_caption_prob": 9.078946277440991e-06}, {"id": 304, "seek": 177712, "start": 1787.04, "end": 1793.4399999999998, "text": " So are there more cases where you've considered adding these types of things that provide", "tokens": [50364, 295, 257, 11185, 3861, 13, 2704, 337, 12855, 40, 5821, 11, 309, 311, 257, 707, 857, 819, 13, 50740, 50740, 1171, 3389, 4676, 3873, 11, 1338, 13, 50860, 50860, 407, 366, 456, 544, 3331, 689, 291, 600, 4888, 5127, 613, 3467, 295, 721, 300, 2893, 51180, 51180, 544, 1333, 295, 11, 291, 458, 11, 2831, 813, 445, 264, 12649, 28431, 4230, 11, 264, 28431, 4230, 365, 51446, 51446, 257, 707, 9007, 11, 365, 257, 707, 2857, 5215, 10332, 337, 291, 300, 291, 393, 2105, 807, 51760, 51760, 264, 2699, 76, 3131, 3663, 30, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.14128450020072386, "compression_ratio": 1.657370517928287, "no_caption_prob": 9.078946277440991e-06}, {"id": 305, "seek": 177712, "start": 1793.4399999999998, "end": 1798.76, "text": " more sort of, you know, rather than just the abstract syntax tree, the syntax tree with", "tokens": [50364, 295, 257, 11185, 3861, 13, 2704, 337, 12855, 40, 5821, 11, 309, 311, 257, 707, 857, 819, 13, 50740, 50740, 1171, 3389, 4676, 3873, 11, 1338, 13, 50860, 50860, 407, 366, 456, 544, 3331, 689, 291, 600, 4888, 5127, 613, 3467, 295, 721, 300, 2893, 51180, 51180, 544, 1333, 295, 11, 291, 458, 11, 2831, 813, 445, 264, 12649, 28431, 4230, 11, 264, 28431, 4230, 365, 51446, 51446, 257, 707, 9007, 11, 365, 257, 707, 2857, 5215, 10332, 337, 291, 300, 291, 393, 2105, 807, 51760, 51760, 264, 2699, 76, 3131, 3663, 30, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.14128450020072386, "compression_ratio": 1.657370517928287, "no_caption_prob": 9.078946277440991e-06}, {"id": 306, "seek": 177712, "start": 1798.76, "end": 1805.04, "text": " a little processing, with a little extra analysis performed for you that you can access through", "tokens": [50364, 295, 257, 11185, 3861, 13, 2704, 337, 12855, 40, 5821, 11, 309, 311, 257, 707, 857, 819, 13, 50740, 50740, 1171, 3389, 4676, 3873, 11, 1338, 13, 50860, 50860, 407, 366, 456, 544, 3331, 689, 291, 600, 4888, 5127, 613, 3467, 295, 721, 300, 2893, 51180, 51180, 544, 1333, 295, 11, 291, 458, 11, 2831, 813, 445, 264, 12649, 28431, 4230, 11, 264, 28431, 4230, 365, 51446, 51446, 257, 707, 9007, 11, 365, 257, 707, 2857, 5215, 10332, 337, 291, 300, 291, 393, 2105, 807, 51760, 51760, 264, 2699, 76, 3131, 3663, 30, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.14128450020072386, "compression_ratio": 1.657370517928287, "no_caption_prob": 9.078946277440991e-06}, {"id": 307, "seek": 177712, "start": 1805.04, "end": 1806.3999999999999, "text": " the Elm review platform?", "tokens": [50364, 295, 257, 11185, 3861, 13, 2704, 337, 12855, 40, 5821, 11, 309, 311, 257, 707, 857, 819, 13, 50740, 50740, 1171, 3389, 4676, 3873, 11, 1338, 13, 50860, 50860, 407, 366, 456, 544, 3331, 689, 291, 600, 4888, 5127, 613, 3467, 295, 721, 300, 2893, 51180, 51180, 544, 1333, 295, 11, 291, 458, 11, 2831, 813, 445, 264, 12649, 28431, 4230, 11, 264, 28431, 4230, 365, 51446, 51446, 257, 707, 9007, 11, 365, 257, 707, 2857, 5215, 10332, 337, 291, 300, 291, 393, 2105, 807, 51760, 51760, 264, 2699, 76, 3131, 3663, 30, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.14128450020072386, "compression_ratio": 1.657370517928287, "no_caption_prob": 9.078946277440991e-06}, {"id": 308, "seek": 180640, "start": 1806.4, "end": 1815.4, "text": " Yeah, I actually just added one this morning, this weekend, basically the module documentation.", "tokens": [50364, 865, 11, 286, 767, 445, 3869, 472, 341, 2446, 11, 341, 6711, 11, 1936, 264, 10088, 14333, 13, 50814, 50814, 407, 300, 311, 264, 32066, 38458, 8240, 11240, 2871, 300, 291, 362, 412, 264, 2863, 295, 428, 3991, 51120, 51120, 949, 264, 41596, 13, 663, 307, 264, 10088, 14333, 13, 400, 4362, 2699, 76, 28431, 11, 264, 316, 6840, 6405, 51408, 51408, 300, 321, 764, 1177, 380, 362, 257, 636, 281, 3531, 300, 382, 264, 14333, 295, 264, 10088, 13, 467, 311, 445, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13841850456150098, "compression_ratio": 1.6972477064220184, "no_caption_prob": 1.2804630387108773e-05}, {"id": 309, "seek": 180640, "start": 1815.4, "end": 1821.52, "text": " So that's the curly brace dash pipe comment that you have at the beginning of your file", "tokens": [50364, 865, 11, 286, 767, 445, 3869, 472, 341, 2446, 11, 341, 6711, 11, 1936, 264, 10088, 14333, 13, 50814, 50814, 407, 300, 311, 264, 32066, 38458, 8240, 11240, 2871, 300, 291, 362, 412, 264, 2863, 295, 428, 3991, 51120, 51120, 949, 264, 41596, 13, 663, 307, 264, 10088, 14333, 13, 400, 4362, 2699, 76, 28431, 11, 264, 316, 6840, 6405, 51408, 51408, 300, 321, 764, 1177, 380, 362, 257, 636, 281, 3531, 300, 382, 264, 14333, 295, 264, 10088, 13, 467, 311, 445, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13841850456150098, "compression_ratio": 1.6972477064220184, "no_caption_prob": 1.2804630387108773e-05}, {"id": 310, "seek": 180640, "start": 1821.52, "end": 1827.2800000000002, "text": " before the imports. That is the module documentation. And currently Elm syntax, the AST library", "tokens": [50364, 865, 11, 286, 767, 445, 3869, 472, 341, 2446, 11, 341, 6711, 11, 1936, 264, 10088, 14333, 13, 50814, 50814, 407, 300, 311, 264, 32066, 38458, 8240, 11240, 2871, 300, 291, 362, 412, 264, 2863, 295, 428, 3991, 51120, 51120, 949, 264, 41596, 13, 663, 307, 264, 10088, 14333, 13, 400, 4362, 2699, 76, 28431, 11, 264, 316, 6840, 6405, 51408, 51408, 300, 321, 764, 1177, 380, 362, 257, 636, 281, 3531, 300, 382, 264, 14333, 295, 264, 10088, 13, 467, 311, 445, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13841850456150098, "compression_ratio": 1.6972477064220184, "no_caption_prob": 1.2804630387108773e-05}, {"id": 311, "seek": 180640, "start": 1827.2800000000002, "end": 1834.3600000000001, "text": " that we use doesn't have a way to store that as the documentation of the module. It's just", "tokens": [50364, 865, 11, 286, 767, 445, 3869, 472, 341, 2446, 11, 341, 6711, 11, 1936, 264, 10088, 14333, 13, 50814, 50814, 407, 300, 311, 264, 32066, 38458, 8240, 11240, 2871, 300, 291, 362, 412, 264, 2863, 295, 428, 3991, 51120, 51120, 949, 264, 41596, 13, 663, 307, 264, 10088, 14333, 13, 400, 4362, 2699, 76, 28431, 11, 264, 316, 6840, 6405, 51408, 51408, 300, 321, 764, 1177, 380, 362, 257, 636, 281, 3531, 300, 382, 264, 14333, 295, 264, 10088, 13, 467, 311, 445, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13841850456150098, "compression_ratio": 1.6972477064220184, "no_caption_prob": 1.2804630387108773e-05}, {"id": 312, "seek": 183436, "start": 1834.36, "end": 1841.7199999999998, "text": " among the comments. So what I had to do in a bunch of rules is to go through the comments,", "tokens": [50364, 3654, 264, 3053, 13, 407, 437, 286, 632, 281, 360, 294, 257, 3840, 295, 4474, 307, 281, 352, 807, 264, 3053, 11, 50732, 50732, 915, 264, 10088, 14333, 11, 597, 286, 445, 3264, 341, 6711, 300, 456, 390, 1808, 337, 51060, 51060, 7908, 35127, 570, 18160, 611, 362, 300, 1154, 13, 1743, 264, 14333, 337, 2436, 307, 51410, 51410, 611, 406, 8570, 281, 264, 2436, 13, 13813, 14333, 337, 257, 2445, 420, 337, 257, 2010, 307, 6108, 8570, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11493859808129, "compression_ratio": 1.7302325581395348, "no_caption_prob": 2.468179263814818e-05}, {"id": 313, "seek": 183436, "start": 1841.7199999999998, "end": 1848.28, "text": " find the module documentation, which I just learned this weekend that there was room for", "tokens": [50364, 3654, 264, 3053, 13, 407, 437, 286, 632, 281, 360, 294, 257, 3840, 295, 4474, 307, 281, 352, 807, 264, 3053, 11, 50732, 50732, 915, 264, 10088, 14333, 11, 597, 286, 445, 3264, 341, 6711, 300, 456, 390, 1808, 337, 51060, 51060, 7908, 35127, 570, 18160, 611, 362, 300, 1154, 13, 1743, 264, 14333, 337, 2436, 307, 51410, 51410, 611, 406, 8570, 281, 264, 2436, 13, 13813, 14333, 337, 257, 2445, 420, 337, 257, 2010, 307, 6108, 8570, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11493859808129, "compression_ratio": 1.7302325581395348, "no_caption_prob": 2.468179263814818e-05}, {"id": 314, "seek": 183436, "start": 1848.28, "end": 1855.28, "text": " false positives because ports also have that problem. Like the documentation for port is", "tokens": [50364, 3654, 264, 3053, 13, 407, 437, 286, 632, 281, 360, 294, 257, 3840, 295, 4474, 307, 281, 352, 807, 264, 3053, 11, 50732, 50732, 915, 264, 10088, 14333, 11, 597, 286, 445, 3264, 341, 6711, 300, 456, 390, 1808, 337, 51060, 51060, 7908, 35127, 570, 18160, 611, 362, 300, 1154, 13, 1743, 264, 14333, 337, 2436, 307, 51410, 51410, 611, 406, 8570, 281, 264, 2436, 13, 13813, 14333, 337, 257, 2445, 420, 337, 257, 2010, 307, 6108, 8570, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11493859808129, "compression_ratio": 1.7302325581395348, "no_caption_prob": 2.468179263814818e-05}, {"id": 315, "seek": 183436, "start": 1855.28, "end": 1862.6, "text": " also not attached to the port. Whereas documentation for a function or for a type is properly attached.", "tokens": [50364, 3654, 264, 3053, 13, 407, 437, 286, 632, 281, 360, 294, 257, 3840, 295, 4474, 307, 281, 352, 807, 264, 3053, 11, 50732, 50732, 915, 264, 10088, 14333, 11, 597, 286, 445, 3264, 341, 6711, 300, 456, 390, 1808, 337, 51060, 51060, 7908, 35127, 570, 18160, 611, 362, 300, 1154, 13, 1743, 264, 14333, 337, 2436, 307, 51410, 51410, 611, 406, 8570, 281, 264, 2436, 13, 13813, 14333, 337, 257, 2445, 420, 337, 257, 2010, 307, 6108, 8570, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11493859808129, "compression_ratio": 1.7302325581395348, "no_caption_prob": 2.468179263814818e-05}, {"id": 316, "seek": 186260, "start": 1862.6, "end": 1870.62, "text": " So yeah, basically it was possible to confuse the documentation for port as the module documentation.", "tokens": [50364, 407, 1338, 11, 1936, 309, 390, 1944, 281, 28584, 264, 14333, 337, 2436, 382, 264, 10088, 14333, 13, 50765, 50765, 407, 1338, 11, 300, 311, 11, 309, 311, 406, 1687, 12414, 11, 457, 309, 311, 406, 1481, 281, 362, 281, 14722, 309, 5315, 13, 51098, 51098, 400, 294, 439, 295, 452, 4445, 763, 309, 390, 7263, 5463, 13, 407, 286, 445, 1027, 309, 11, 286, 3869, 257, 777, 28222, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.15038950149327107, "compression_ratio": 1.572192513368984, "no_caption_prob": 1.209846686833771e-06}, {"id": 317, "seek": 186260, "start": 1870.62, "end": 1877.28, "text": " So yeah, that's, it's not super tricky, but it's not nice to have to compute it everywhere.", "tokens": [50364, 407, 1338, 11, 1936, 309, 390, 1944, 281, 28584, 264, 14333, 337, 2436, 382, 264, 10088, 14333, 13, 50765, 50765, 407, 1338, 11, 300, 311, 11, 309, 311, 406, 1687, 12414, 11, 457, 309, 311, 406, 1481, 281, 362, 281, 14722, 309, 5315, 13, 51098, 51098, 400, 294, 439, 295, 452, 4445, 763, 309, 390, 7263, 5463, 13, 407, 286, 445, 1027, 309, 11, 286, 3869, 257, 777, 28222, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.15038950149327107, "compression_ratio": 1.572192513368984, "no_caption_prob": 1.209846686833771e-06}, {"id": 318, "seek": 186260, "start": 1877.28, "end": 1886.04, "text": " And in all of my implementations it was potentially broken. So I just made it, I added a new visitor", "tokens": [50364, 407, 1338, 11, 1936, 309, 390, 1944, 281, 28584, 264, 14333, 337, 2436, 382, 264, 10088, 14333, 13, 50765, 50765, 407, 1338, 11, 300, 311, 11, 309, 311, 406, 1687, 12414, 11, 457, 309, 311, 406, 1481, 281, 362, 281, 14722, 309, 5315, 13, 51098, 51098, 400, 294, 439, 295, 452, 4445, 763, 309, 390, 7263, 5463, 13, 407, 286, 445, 1027, 309, 11, 286, 3869, 257, 777, 28222, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.15038950149327107, "compression_ratio": 1.572192513368984, "no_caption_prob": 1.209846686833771e-06}, {"id": 319, "seek": 188604, "start": 1886.04, "end": 1893.12, "text": " or a new context creator function to be able to have that information right away, basically.", "tokens": [50364, 420, 257, 777, 4319, 14181, 2445, 281, 312, 1075, 281, 362, 300, 1589, 558, 1314, 11, 1936, 13, 50718, 50718, 400, 370, 286, 478, 516, 281, 11374, 300, 294, 264, 958, 3037, 13, 400, 264, 661, 955, 472, 307, 2010, 1589, 13, 50996, 50996, 865, 13, 407, 309, 307, 534, 8830, 300, 2699, 76, 3131, 1985, 370, 731, 337, 257, 33941, 2856, 11, 51340, 51340, 8079, 321, 500, 380, 362, 2010, 1589, 13, 821, 366, 732, 2098, 300, 321, 393, 360, 300, 13, 1485, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.13898770375685257, "compression_ratio": 1.5947136563876652, "no_caption_prob": 5.173850240680622e-06}, {"id": 320, "seek": 188604, "start": 1893.12, "end": 1898.68, "text": " And so I'm going to publish that in the next version. And the other big one is type information.", "tokens": [50364, 420, 257, 777, 4319, 14181, 2445, 281, 312, 1075, 281, 362, 300, 1589, 558, 1314, 11, 1936, 13, 50718, 50718, 400, 370, 286, 478, 516, 281, 11374, 300, 294, 264, 958, 3037, 13, 400, 264, 661, 955, 472, 307, 2010, 1589, 13, 50996, 50996, 865, 13, 407, 309, 307, 534, 8830, 300, 2699, 76, 3131, 1985, 370, 731, 337, 257, 33941, 2856, 11, 51340, 51340, 8079, 321, 500, 380, 362, 2010, 1589, 13, 821, 366, 732, 2098, 300, 321, 393, 360, 300, 13, 1485, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.13898770375685257, "compression_ratio": 1.5947136563876652, "no_caption_prob": 5.173850240680622e-06}, {"id": 321, "seek": 188604, "start": 1898.68, "end": 1905.56, "text": " Yeah. So it is really surprising that Elm review works so well for a typed language,", "tokens": [50364, 420, 257, 777, 4319, 14181, 2445, 281, 312, 1075, 281, 362, 300, 1589, 558, 1314, 11, 1936, 13, 50718, 50718, 400, 370, 286, 478, 516, 281, 11374, 300, 294, 264, 958, 3037, 13, 400, 264, 661, 955, 472, 307, 2010, 1589, 13, 50996, 50996, 865, 13, 407, 309, 307, 534, 8830, 300, 2699, 76, 3131, 1985, 370, 731, 337, 257, 33941, 2856, 11, 51340, 51340, 8079, 321, 500, 380, 362, 2010, 1589, 13, 821, 366, 732, 2098, 300, 321, 393, 360, 300, 13, 1485, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.13898770375685257, "compression_ratio": 1.5947136563876652, "no_caption_prob": 5.173850240680622e-06}, {"id": 322, "seek": 188604, "start": 1905.56, "end": 1910.6, "text": " considering we don't have type information. There are two ways that we can do that. One", "tokens": [50364, 420, 257, 777, 4319, 14181, 2445, 281, 312, 1075, 281, 362, 300, 1589, 558, 1314, 11, 1936, 13, 50718, 50718, 400, 370, 286, 478, 516, 281, 11374, 300, 294, 264, 958, 3037, 13, 400, 264, 661, 955, 472, 307, 2010, 1589, 13, 50996, 50996, 865, 13, 407, 309, 307, 534, 8830, 300, 2699, 76, 3131, 1985, 370, 731, 337, 257, 33941, 2856, 11, 51340, 51340, 8079, 321, 500, 380, 362, 2010, 1589, 13, 821, 366, 732, 2098, 300, 321, 393, 360, 300, 13, 1485, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.13898770375685257, "compression_ratio": 1.5947136563876652, "no_caption_prob": 5.173850240680622e-06}, {"id": 323, "seek": 191060, "start": 1910.6, "end": 1917.1999999999998, "text": " of them is by invoking the compiler, which has a few problems, notably that you can't", "tokens": [50364, 295, 552, 307, 538, 1048, 5953, 264, 31958, 11, 597, 575, 257, 1326, 2740, 11, 31357, 300, 291, 393, 380, 50694, 50694, 41117, 264, 31958, 294, 6921, 13, 407, 1391, 362, 281, 2464, 257, 4994, 4997, 8388, 50954, 50954, 337, 2699, 76, 3131, 4474, 689, 309, 576, 1884, 7098, 11, 1190, 264, 31958, 5383, 295, 1413, 11, 51270, 51270, 570, 286, 362, 5383, 295, 6921, 13, 400, 611, 264, 1379, 3131, 1399, 307, 472, 7410, 6075, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.10878117084503174, "compression_ratio": 1.638095238095238, "no_caption_prob": 1.5205982890620362e-05}, {"id": 324, "seek": 191060, "start": 1917.1999999999998, "end": 1922.3999999999999, "text": " invoke the compiler in tests. So probably have to write a separate testing framework", "tokens": [50364, 295, 552, 307, 538, 1048, 5953, 264, 31958, 11, 597, 575, 257, 1326, 2740, 11, 31357, 300, 291, 393, 380, 50694, 50694, 41117, 264, 31958, 294, 6921, 13, 407, 1391, 362, 281, 2464, 257, 4994, 4997, 8388, 50954, 50954, 337, 2699, 76, 3131, 4474, 689, 309, 576, 1884, 7098, 11, 1190, 264, 31958, 5383, 295, 1413, 11, 51270, 51270, 570, 286, 362, 5383, 295, 6921, 13, 400, 611, 264, 1379, 3131, 1399, 307, 472, 7410, 6075, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.10878117084503174, "compression_ratio": 1.638095238095238, "no_caption_prob": 1.5205982890620362e-05}, {"id": 325, "seek": 191060, "start": 1922.3999999999999, "end": 1928.7199999999998, "text": " for Elm review rules where it would create files, run the compiler thousands of times,", "tokens": [50364, 295, 552, 307, 538, 1048, 5953, 264, 31958, 11, 597, 575, 257, 1326, 2740, 11, 31357, 300, 291, 393, 380, 50694, 50694, 41117, 264, 31958, 294, 6921, 13, 407, 1391, 362, 281, 2464, 257, 4994, 4997, 8388, 50954, 50954, 337, 2699, 76, 3131, 4474, 689, 309, 576, 1884, 7098, 11, 1190, 264, 31958, 5383, 295, 1413, 11, 51270, 51270, 570, 286, 362, 5383, 295, 6921, 13, 400, 611, 264, 1379, 3131, 1399, 307, 472, 7410, 6075, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.10878117084503174, "compression_ratio": 1.638095238095238, "no_caption_prob": 1.5205982890620362e-05}, {"id": 326, "seek": 191060, "start": 1928.7199999999998, "end": 1935.7199999999998, "text": " because I have thousands of tests. And also the whole review process is one giant pure", "tokens": [50364, 295, 552, 307, 538, 1048, 5953, 264, 31958, 11, 597, 575, 257, 1326, 2740, 11, 31357, 300, 291, 393, 380, 50694, 50694, 41117, 264, 31958, 294, 6921, 13, 407, 1391, 362, 281, 2464, 257, 4994, 4997, 8388, 50954, 50954, 337, 2699, 76, 3131, 4474, 689, 309, 576, 1884, 7098, 11, 1190, 264, 31958, 5383, 295, 1413, 11, 51270, 51270, 570, 286, 362, 5383, 295, 6921, 13, 400, 611, 264, 1379, 3131, 1399, 307, 472, 7410, 6075, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.10878117084503174, "compression_ratio": 1.638095238095238, "no_caption_prob": 1.5205982890620362e-05}, {"id": 327, "seek": 193572, "start": 1935.72, "end": 1943.04, "text": " function currently. And if I had to ask for the type information, then I would have to", "tokens": [50364, 2445, 4362, 13, 400, 498, 286, 632, 281, 1029, 337, 264, 2010, 1589, 11, 550, 286, 576, 362, 281, 50730, 50730, 1821, 484, 295, 300, 6063, 11, 2318, 294, 264, 3191, 439, 4391, 11, 309, 576, 312, 588, 16191, 294, 3124, 13, 51262, 51262, 407, 264, 661, 3170, 307, 281, 360, 264, 2010, 38253, 4175, 11, 597, 286, 600, 3031, 257, 1326, 1413, 370, 51569, 51569, 1400, 293, 658, 370, 1400, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15802668270311857, "compression_ratio": 1.5051546391752577, "no_caption_prob": 1.8627704776008613e-05}, {"id": 328, "seek": 193572, "start": 1943.04, "end": 1953.68, "text": " break out of that somehow, especially in the fix all mode, it would be very messy in practice.", "tokens": [50364, 2445, 4362, 13, 400, 498, 286, 632, 281, 1029, 337, 264, 2010, 1589, 11, 550, 286, 576, 362, 281, 50730, 50730, 1821, 484, 295, 300, 6063, 11, 2318, 294, 264, 3191, 439, 4391, 11, 309, 576, 312, 588, 16191, 294, 3124, 13, 51262, 51262, 407, 264, 661, 3170, 307, 281, 360, 264, 2010, 38253, 4175, 11, 597, 286, 600, 3031, 257, 1326, 1413, 370, 51569, 51569, 1400, 293, 658, 370, 1400, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15802668270311857, "compression_ratio": 1.5051546391752577, "no_caption_prob": 1.8627704776008613e-05}, {"id": 329, "seek": 193572, "start": 1953.68, "end": 1959.82, "text": " So the other method is to do the type inference ourselves, which I've tried a few times so", "tokens": [50364, 2445, 4362, 13, 400, 498, 286, 632, 281, 1029, 337, 264, 2010, 1589, 11, 550, 286, 576, 362, 281, 50730, 50730, 1821, 484, 295, 300, 6063, 11, 2318, 294, 264, 3191, 439, 4391, 11, 309, 576, 312, 588, 16191, 294, 3124, 13, 51262, 51262, 407, 264, 661, 3170, 307, 281, 360, 264, 2010, 38253, 4175, 11, 597, 286, 600, 3031, 257, 1326, 1413, 370, 51569, 51569, 1400, 293, 658, 370, 1400, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15802668270311857, "compression_ratio": 1.5051546391752577, "no_caption_prob": 1.8627704776008613e-05}, {"id": 330, "seek": 193572, "start": 1959.82, "end": 1963.6000000000001, "text": " far and got so far.", "tokens": [50364, 2445, 4362, 13, 400, 498, 286, 632, 281, 1029, 337, 264, 2010, 1589, 11, 550, 286, 576, 362, 281, 50730, 50730, 1821, 484, 295, 300, 6063, 11, 2318, 294, 264, 3191, 439, 4391, 11, 309, 576, 312, 588, 16191, 294, 3124, 13, 51262, 51262, 407, 264, 661, 3170, 307, 281, 360, 264, 2010, 38253, 4175, 11, 597, 286, 600, 3031, 257, 1326, 1413, 370, 51569, 51569, 1400, 293, 658, 370, 1400, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15802668270311857, "compression_ratio": 1.5051546391752577, "no_caption_prob": 1.8627704776008613e-05}, {"id": 331, "seek": 196360, "start": 1963.6, "end": 1967.08, "text": " It's a somewhat challenging problem, I would imagine.", "tokens": [50364, 467, 311, 257, 8344, 7595, 1154, 11, 286, 576, 3811, 13, 50538, 50538, 865, 13, 286, 519, 291, 643, 281, 458, 577, 721, 589, 11, 437, 264, 9284, 300, 2699, 76, 4960, 1985, 50914, 50914, 370, 300, 291, 362, 264, 912, 3542, 570, 291, 658, 512, 4691, 3331, 689, 309, 393, 362, 51230, 51230, 512, 7300, 13, 583, 1936, 291, 643, 281, 458, 264, 5261, 731, 294, 1668, 281, 360, 257, 1481, 51516, 51516, 11420, 13, 400, 286, 600, 1128, 7320, 300, 9284, 6108, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20041281453679116, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00011060143151553348}, {"id": 332, "seek": 196360, "start": 1967.08, "end": 1974.6, "text": " Yeah. I think you need to know how things work, what the algorithm that Elm uses works", "tokens": [50364, 467, 311, 257, 8344, 7595, 1154, 11, 286, 576, 3811, 13, 50538, 50538, 865, 13, 286, 519, 291, 643, 281, 458, 577, 721, 589, 11, 437, 264, 9284, 300, 2699, 76, 4960, 1985, 50914, 50914, 370, 300, 291, 362, 264, 912, 3542, 570, 291, 658, 512, 4691, 3331, 689, 309, 393, 362, 51230, 51230, 512, 7300, 13, 583, 1936, 291, 643, 281, 458, 264, 5261, 731, 294, 1668, 281, 360, 257, 1481, 51516, 51516, 11420, 13, 400, 286, 600, 1128, 7320, 300, 9284, 6108, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20041281453679116, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00011060143151553348}, {"id": 333, "seek": 196360, "start": 1974.6, "end": 1980.9199999999998, "text": " so that you have the same results because you got some edge cases where it can have", "tokens": [50364, 467, 311, 257, 8344, 7595, 1154, 11, 286, 576, 3811, 13, 50538, 50538, 865, 13, 286, 519, 291, 643, 281, 458, 577, 721, 589, 11, 437, 264, 9284, 300, 2699, 76, 4960, 1985, 50914, 50914, 370, 300, 291, 362, 264, 912, 3542, 570, 291, 658, 512, 4691, 3331, 689, 309, 393, 362, 51230, 51230, 512, 7300, 13, 583, 1936, 291, 643, 281, 458, 264, 5261, 731, 294, 1668, 281, 360, 257, 1481, 51516, 51516, 11420, 13, 400, 286, 600, 1128, 7320, 300, 9284, 6108, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20041281453679116, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00011060143151553348}, {"id": 334, "seek": 196360, "start": 1980.9199999999998, "end": 1986.6399999999999, "text": " some differences. But basically you need to know the theory well in order to do a nice", "tokens": [50364, 467, 311, 257, 8344, 7595, 1154, 11, 286, 576, 3811, 13, 50538, 50538, 865, 13, 286, 519, 291, 643, 281, 458, 577, 721, 589, 11, 437, 264, 9284, 300, 2699, 76, 4960, 1985, 50914, 50914, 370, 300, 291, 362, 264, 912, 3542, 570, 291, 658, 512, 4691, 3331, 689, 309, 393, 362, 51230, 51230, 512, 7300, 13, 583, 1936, 291, 643, 281, 458, 264, 5261, 731, 294, 1668, 281, 360, 257, 1481, 51516, 51516, 11420, 13, 400, 286, 600, 1128, 7320, 300, 9284, 6108, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20041281453679116, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00011060143151553348}, {"id": 335, "seek": 196360, "start": 1986.6399999999999, "end": 1991.12, "text": " implementation. And I've never understood that algorithm properly.", "tokens": [50364, 467, 311, 257, 8344, 7595, 1154, 11, 286, 576, 3811, 13, 50538, 50538, 865, 13, 286, 519, 291, 643, 281, 458, 577, 721, 589, 11, 437, 264, 9284, 300, 2699, 76, 4960, 1985, 50914, 50914, 370, 300, 291, 362, 264, 912, 3542, 570, 291, 658, 512, 4691, 3331, 689, 309, 393, 362, 51230, 51230, 512, 7300, 13, 583, 1936, 291, 643, 281, 458, 264, 5261, 731, 294, 1668, 281, 360, 257, 1481, 51516, 51516, 11420, 13, 400, 286, 600, 1128, 7320, 300, 9284, 6108, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20041281453679116, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00011060143151553348}, {"id": 336, "seek": 199112, "start": 1991.12, "end": 1993.84, "text": " Yeah. It's a huge task.", "tokens": [50364, 865, 13, 467, 311, 257, 2603, 5633, 13, 50500, 50500, 286, 458, 1580, 567, 311, 1364, 322, 341, 322, 293, 766, 13, 286, 500, 380, 528, 281, 829, 3321, 322, 552, 13, 50784, 50784, 8734, 567, 575, 257, 588, 2689, 1315, 11, 309, 576, 1643, 13, 51022, 51022, 2704, 2086, 13, 51072, 51072, 492, 458, 291, 434, 4764, 13, 51222, 51222, 865, 13, 583, 1338, 11, 300, 576, 312, 534, 1481, 13, 316, 1326, 5821, 295, 300, 576, 312, 11, 337, 5197, 11, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2220770956455976, "compression_ratio": 1.482233502538071, "no_caption_prob": 2.6687221179599874e-05}, {"id": 337, "seek": 199112, "start": 1993.84, "end": 1999.52, "text": " I know someone who's working on this on and off. I don't want to put pressure on them.", "tokens": [50364, 865, 13, 467, 311, 257, 2603, 5633, 13, 50500, 50500, 286, 458, 1580, 567, 311, 1364, 322, 341, 322, 293, 766, 13, 286, 500, 380, 528, 281, 829, 3321, 322, 552, 13, 50784, 50784, 8734, 567, 575, 257, 588, 2689, 1315, 11, 309, 576, 1643, 13, 51022, 51022, 2704, 2086, 13, 51072, 51072, 492, 458, 291, 434, 4764, 13, 51222, 51222, 865, 13, 583, 1338, 11, 300, 576, 312, 534, 1481, 13, 316, 1326, 5821, 295, 300, 576, 312, 11, 337, 5197, 11, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2220770956455976, "compression_ratio": 1.482233502538071, "no_caption_prob": 2.6687221179599874e-05}, {"id": 338, "seek": 199112, "start": 1999.52, "end": 2004.28, "text": " Someone who has a very common name, it would seem.", "tokens": [50364, 865, 13, 467, 311, 257, 2603, 5633, 13, 50500, 50500, 286, 458, 1580, 567, 311, 1364, 322, 341, 322, 293, 766, 13, 286, 500, 380, 528, 281, 829, 3321, 322, 552, 13, 50784, 50784, 8734, 567, 575, 257, 588, 2689, 1315, 11, 309, 576, 1643, 13, 51022, 51022, 2704, 2086, 13, 51072, 51072, 492, 458, 291, 434, 4764, 13, 51222, 51222, 865, 13, 583, 1338, 11, 300, 576, 312, 534, 1481, 13, 316, 1326, 5821, 295, 300, 576, 312, 11, 337, 5197, 11, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2220770956455976, "compression_ratio": 1.482233502538071, "no_caption_prob": 2.6687221179599874e-05}, {"id": 339, "seek": 199112, "start": 2004.28, "end": 2005.28, "text": " Maybe yes.", "tokens": [50364, 865, 13, 467, 311, 257, 2603, 5633, 13, 50500, 50500, 286, 458, 1580, 567, 311, 1364, 322, 341, 322, 293, 766, 13, 286, 500, 380, 528, 281, 829, 3321, 322, 552, 13, 50784, 50784, 8734, 567, 575, 257, 588, 2689, 1315, 11, 309, 576, 1643, 13, 51022, 51022, 2704, 2086, 13, 51072, 51072, 492, 458, 291, 434, 4764, 13, 51222, 51222, 865, 13, 583, 1338, 11, 300, 576, 312, 534, 1481, 13, 316, 1326, 5821, 295, 300, 576, 312, 11, 337, 5197, 11, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2220770956455976, "compression_ratio": 1.482233502538071, "no_caption_prob": 2.6687221179599874e-05}, {"id": 340, "seek": 199112, "start": 2005.28, "end": 2008.28, "text": " We know you're listening.", "tokens": [50364, 865, 13, 467, 311, 257, 2603, 5633, 13, 50500, 50500, 286, 458, 1580, 567, 311, 1364, 322, 341, 322, 293, 766, 13, 286, 500, 380, 528, 281, 829, 3321, 322, 552, 13, 50784, 50784, 8734, 567, 575, 257, 588, 2689, 1315, 11, 309, 576, 1643, 13, 51022, 51022, 2704, 2086, 13, 51072, 51072, 492, 458, 291, 434, 4764, 13, 51222, 51222, 865, 13, 583, 1338, 11, 300, 576, 312, 534, 1481, 13, 316, 1326, 5821, 295, 300, 576, 312, 11, 337, 5197, 11, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2220770956455976, "compression_ratio": 1.482233502538071, "no_caption_prob": 2.6687221179599874e-05}, {"id": 341, "seek": 199112, "start": 2008.28, "end": 2019.52, "text": " Yeah. But yeah, that would be really nice. A few applications of that would be, for instance,", "tokens": [50364, 865, 13, 467, 311, 257, 2603, 5633, 13, 50500, 50500, 286, 458, 1580, 567, 311, 1364, 322, 341, 322, 293, 766, 13, 286, 500, 380, 528, 281, 829, 3321, 322, 552, 13, 50784, 50784, 8734, 567, 575, 257, 588, 2689, 1315, 11, 309, 576, 1643, 13, 51022, 51022, 2704, 2086, 13, 51072, 51072, 492, 458, 291, 434, 4764, 13, 51222, 51222, 865, 13, 583, 1338, 11, 300, 576, 312, 534, 1481, 13, 316, 1326, 5821, 295, 300, 576, 312, 11, 337, 5197, 11, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2220770956455976, "compression_ratio": 1.482233502538071, "no_caption_prob": 2.6687221179599874e-05}, {"id": 342, "seek": 201952, "start": 2019.52, "end": 2026.4, "text": " the no missing type annotation rule that could generate the missing type annotations.", "tokens": [50364, 264, 572, 5361, 2010, 48654, 4978, 300, 727, 8460, 264, 5361, 2010, 25339, 763, 13, 50708, 50708, 663, 576, 312, 370, 1481, 13, 50758, 50758, 865, 13, 407, 321, 1217, 362, 300, 294, 264, 31446, 13, 407, 321, 458, 300, 727, 589, 731, 13, 467, 1177, 380, 51106, 51106, 1009, 976, 264, 45516, 6713, 11, 264, 45516, 2010, 10681, 13, 467, 727, 920, 312, 4961, 13, 51400, 51400, 583, 300, 576, 11634, 544, 1589, 13, 509, 848, 300, 12720, 7908, 35127, 11, 309, 1487, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.16045636480504816, "compression_ratio": 1.7230046948356808, "no_caption_prob": 3.0717128538526595e-05}, {"id": 343, "seek": 201952, "start": 2026.4, "end": 2027.4, "text": " That would be so nice.", "tokens": [50364, 264, 572, 5361, 2010, 48654, 4978, 300, 727, 8460, 264, 5361, 2010, 25339, 763, 13, 50708, 50708, 663, 576, 312, 370, 1481, 13, 50758, 50758, 865, 13, 407, 321, 1217, 362, 300, 294, 264, 31446, 13, 407, 321, 458, 300, 727, 589, 731, 13, 467, 1177, 380, 51106, 51106, 1009, 976, 264, 45516, 6713, 11, 264, 45516, 2010, 10681, 13, 467, 727, 920, 312, 4961, 13, 51400, 51400, 583, 300, 576, 11634, 544, 1589, 13, 509, 848, 300, 12720, 7908, 35127, 11, 309, 1487, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.16045636480504816, "compression_ratio": 1.7230046948356808, "no_caption_prob": 3.0717128538526595e-05}, {"id": 344, "seek": 201952, "start": 2027.4, "end": 2034.36, "text": " Yeah. So we already have that in the editors. So we know that could work well. It doesn't", "tokens": [50364, 264, 572, 5361, 2010, 48654, 4978, 300, 727, 8460, 264, 5361, 2010, 25339, 763, 13, 50708, 50708, 663, 576, 312, 370, 1481, 13, 50758, 50758, 865, 13, 407, 321, 1217, 362, 300, 294, 264, 31446, 13, 407, 321, 458, 300, 727, 589, 731, 13, 467, 1177, 380, 51106, 51106, 1009, 976, 264, 45516, 6713, 11, 264, 45516, 2010, 10681, 13, 467, 727, 920, 312, 4961, 13, 51400, 51400, 583, 300, 576, 11634, 544, 1589, 13, 509, 848, 300, 12720, 7908, 35127, 11, 309, 1487, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.16045636480504816, "compression_ratio": 1.7230046948356808, "no_caption_prob": 3.0717128538526595e-05}, {"id": 345, "seek": 201952, "start": 2034.36, "end": 2040.24, "text": " always give the nicest error, the nicest type spots. It could still be helpful.", "tokens": [50364, 264, 572, 5361, 2010, 48654, 4978, 300, 727, 8460, 264, 5361, 2010, 25339, 763, 13, 50708, 50708, 663, 576, 312, 370, 1481, 13, 50758, 50758, 865, 13, 407, 321, 1217, 362, 300, 294, 264, 31446, 13, 407, 321, 458, 300, 727, 589, 731, 13, 467, 1177, 380, 51106, 51106, 1009, 976, 264, 45516, 6713, 11, 264, 45516, 2010, 10681, 13, 467, 727, 920, 312, 4961, 13, 51400, 51400, 583, 300, 576, 11634, 544, 1589, 13, 509, 848, 300, 12720, 7908, 35127, 11, 309, 1487, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.16045636480504816, "compression_ratio": 1.7230046948356808, "no_caption_prob": 3.0717128538526595e-05}, {"id": 346, "seek": 201952, "start": 2040.24, "end": 2046.48, "text": " But that would unlock more information. You said that removing false positives, it comes", "tokens": [50364, 264, 572, 5361, 2010, 48654, 4978, 300, 727, 8460, 264, 5361, 2010, 25339, 763, 13, 50708, 50708, 663, 576, 312, 370, 1481, 13, 50758, 50758, 865, 13, 407, 321, 1217, 362, 300, 294, 264, 31446, 13, 407, 321, 458, 300, 727, 589, 731, 13, 467, 1177, 380, 51106, 51106, 1009, 976, 264, 45516, 6713, 11, 264, 45516, 2010, 10681, 13, 467, 727, 920, 312, 4961, 13, 51400, 51400, 583, 300, 576, 11634, 544, 1589, 13, 509, 848, 300, 12720, 7908, 35127, 11, 309, 1487, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.16045636480504816, "compression_ratio": 1.7230046948356808, "no_caption_prob": 3.0717128538526595e-05}, {"id": 347, "seek": 204648, "start": 2046.48, "end": 2052.56, "text": " down to needing more information. If you had unlimited information, you could remove all", "tokens": [50364, 760, 281, 18006, 544, 1589, 13, 759, 291, 632, 21950, 1589, 11, 291, 727, 4159, 439, 50668, 50668, 7908, 35127, 13, 407, 437, 366, 264, 3179, 300, 291, 727, 4159, 7908, 35127, 365, 300, 50966, 50966, 2857, 1589, 30, 51016, 51016, 1042, 11, 309, 311, 406, 4725, 7908, 35127, 13, 467, 311, 7908, 35127, 293, 7908, 40019, 570, 51268, 51268, 291, 576, 312, 1075, 281, 458, 544, 293, 4412, 291, 576, 312, 1075, 281, 2275, 544, 13, 682, 2699, 76, 19954, 11, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10667677812798079, "compression_ratio": 1.8495145631067962, "no_caption_prob": 1.4285368706623558e-05}, {"id": 348, "seek": 204648, "start": 2052.56, "end": 2058.52, "text": " false positives. So what are the areas that you could remove false positives with that", "tokens": [50364, 760, 281, 18006, 544, 1589, 13, 759, 291, 632, 21950, 1589, 11, 291, 727, 4159, 439, 50668, 50668, 7908, 35127, 13, 407, 437, 366, 264, 3179, 300, 291, 727, 4159, 7908, 35127, 365, 300, 50966, 50966, 2857, 1589, 30, 51016, 51016, 1042, 11, 309, 311, 406, 4725, 7908, 35127, 13, 467, 311, 7908, 35127, 293, 7908, 40019, 570, 51268, 51268, 291, 576, 312, 1075, 281, 458, 544, 293, 4412, 291, 576, 312, 1075, 281, 2275, 544, 13, 682, 2699, 76, 19954, 11, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10667677812798079, "compression_ratio": 1.8495145631067962, "no_caption_prob": 1.4285368706623558e-05}, {"id": 349, "seek": 204648, "start": 2058.52, "end": 2059.52, "text": " extra information?", "tokens": [50364, 760, 281, 18006, 544, 1589, 13, 759, 291, 632, 21950, 1589, 11, 291, 727, 4159, 439, 50668, 50668, 7908, 35127, 13, 407, 437, 366, 264, 3179, 300, 291, 727, 4159, 7908, 35127, 365, 300, 50966, 50966, 2857, 1589, 30, 51016, 51016, 1042, 11, 309, 311, 406, 4725, 7908, 35127, 13, 467, 311, 7908, 35127, 293, 7908, 40019, 570, 51268, 51268, 291, 576, 312, 1075, 281, 458, 544, 293, 4412, 291, 576, 312, 1075, 281, 2275, 544, 13, 682, 2699, 76, 19954, 11, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10667677812798079, "compression_ratio": 1.8495145631067962, "no_caption_prob": 1.4285368706623558e-05}, {"id": 350, "seek": 204648, "start": 2059.52, "end": 2064.56, "text": " Well, it's not necessarily false positives. It's false positives and false negatives because", "tokens": [50364, 760, 281, 18006, 544, 1589, 13, 759, 291, 632, 21950, 1589, 11, 291, 727, 4159, 439, 50668, 50668, 7908, 35127, 13, 407, 437, 366, 264, 3179, 300, 291, 727, 4159, 7908, 35127, 365, 300, 50966, 50966, 2857, 1589, 30, 51016, 51016, 1042, 11, 309, 311, 406, 4725, 7908, 35127, 13, 467, 311, 7908, 35127, 293, 7908, 40019, 570, 51268, 51268, 291, 576, 312, 1075, 281, 458, 544, 293, 4412, 291, 576, 312, 1075, 281, 2275, 544, 13, 682, 2699, 76, 19954, 11, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10667677812798079, "compression_ratio": 1.8495145631067962, "no_caption_prob": 1.4285368706623558e-05}, {"id": 351, "seek": 204648, "start": 2064.56, "end": 2071.56, "text": " you would be able to know more and therefore you would be able to report more. In Elm Review,", "tokens": [50364, 760, 281, 18006, 544, 1589, 13, 759, 291, 632, 21950, 1589, 11, 291, 727, 4159, 439, 50668, 50668, 7908, 35127, 13, 407, 437, 366, 264, 3179, 300, 291, 727, 4159, 7908, 35127, 365, 300, 50966, 50966, 2857, 1589, 30, 51016, 51016, 1042, 11, 309, 311, 406, 4725, 7908, 35127, 13, 467, 311, 7908, 35127, 293, 7908, 40019, 570, 51268, 51268, 291, 576, 312, 1075, 281, 458, 544, 293, 4412, 291, 576, 312, 1075, 281, 2275, 544, 13, 682, 2699, 76, 19954, 11, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.10667677812798079, "compression_ratio": 1.8495145631067962, "no_caption_prob": 1.4285368706623558e-05}, {"id": 352, "seek": 207156, "start": 2071.56, "end": 2078.36, "text": " there are basically no false positives. So I'm not sure it would help with much. I know", "tokens": [50364, 456, 366, 1936, 572, 7908, 35127, 13, 407, 286, 478, 406, 988, 309, 576, 854, 365, 709, 13, 286, 458, 50704, 50704, 365, 472, 4914, 689, 309, 727, 7263, 854, 11, 689, 321, 360, 362, 257, 7908, 3353, 300, 50964, 50964, 561, 2275, 2171, 11, 597, 307, 264, 572, 44383, 2375, 2010, 47479, 10346, 82, 13, 467, 311, 257, 4525, 906, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.15256368752681848, "compression_ratio": 1.511111111111111, "no_caption_prob": 8.749221888137981e-05}, {"id": 353, "seek": 207156, "start": 2078.36, "end": 2083.56, "text": " with one location where it could potentially help, where we do have a false positive that", "tokens": [50364, 456, 366, 1936, 572, 7908, 35127, 13, 407, 286, 478, 406, 988, 309, 576, 854, 365, 709, 13, 286, 458, 50704, 50704, 365, 472, 4914, 689, 309, 727, 7263, 854, 11, 689, 321, 360, 362, 257, 7908, 3353, 300, 50964, 50964, 561, 2275, 2171, 11, 597, 307, 264, 572, 44383, 2375, 2010, 47479, 10346, 82, 13, 467, 311, 257, 4525, 906, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.15256368752681848, "compression_ratio": 1.511111111111111, "no_caption_prob": 8.749221888137981e-05}, {"id": 354, "seek": 207156, "start": 2083.56, "end": 2094.12, "text": " people report sometimes, which is the no unused custom type constructor arcs. It's a mouthful.", "tokens": [50364, 456, 366, 1936, 572, 7908, 35127, 13, 407, 286, 478, 406, 988, 309, 576, 854, 365, 709, 13, 286, 458, 50704, 50704, 365, 472, 4914, 689, 309, 727, 7263, 854, 11, 689, 321, 360, 362, 257, 7908, 3353, 300, 50964, 50964, 561, 2275, 2171, 11, 597, 307, 264, 572, 44383, 2375, 2010, 47479, 10346, 82, 13, 467, 311, 257, 4525, 906, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.15256368752681848, "compression_ratio": 1.511111111111111, "no_caption_prob": 8.749221888137981e-05}, {"id": 355, "seek": 209412, "start": 2094.12, "end": 2102.96, "text": " Basically, you can create a custom type where you say type A equals A int, type ID equals", "tokens": [50364, 8537, 11, 291, 393, 1884, 257, 2375, 2010, 689, 291, 584, 2010, 316, 6915, 316, 560, 11, 2010, 7348, 6915, 50806, 50806, 7348, 560, 11, 337, 5197, 13, 400, 550, 291, 1128, 8947, 300, 45690, 11, 300, 6798, 2158, 13, 407, 264, 51252, 51252, 4978, 7122, 300, 382, 406, 1143, 13, 583, 7263, 291, 727, 764, 300, 294, 257, 9660, 13, 1743, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.2424806053958722, "compression_ratio": 1.5168539325842696, "no_caption_prob": 8.013255865080282e-06}, {"id": 356, "seek": 209412, "start": 2102.96, "end": 2111.88, "text": " ID int, for instance. And then you never extract that identifier, that string value. So the", "tokens": [50364, 8537, 11, 291, 393, 1884, 257, 2375, 2010, 689, 291, 584, 2010, 316, 6915, 316, 560, 11, 2010, 7348, 6915, 50806, 50806, 7348, 560, 11, 337, 5197, 13, 400, 550, 291, 1128, 8947, 300, 45690, 11, 300, 6798, 2158, 13, 407, 264, 51252, 51252, 4978, 7122, 300, 382, 406, 1143, 13, 583, 7263, 291, 727, 764, 300, 294, 257, 9660, 13, 1743, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.2424806053958722, "compression_ratio": 1.5168539325842696, "no_caption_prob": 8.013255865080282e-06}, {"id": 357, "seek": 209412, "start": 2111.88, "end": 2120.08, "text": " rule reports that as not used. But potentially you could use that in a comparison. Like,", "tokens": [50364, 8537, 11, 291, 393, 1884, 257, 2375, 2010, 689, 291, 584, 2010, 316, 6915, 316, 560, 11, 2010, 7348, 6915, 50806, 50806, 7348, 560, 11, 337, 5197, 13, 400, 550, 291, 1128, 8947, 300, 45690, 11, 300, 6798, 2158, 13, 407, 264, 51252, 51252, 4978, 7122, 300, 382, 406, 1143, 13, 583, 7263, 291, 727, 764, 300, 294, 257, 9660, 13, 1743, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.2424806053958722, "compression_ratio": 1.5168539325842696, "no_caption_prob": 8.013255865080282e-06}, {"id": 358, "seek": 212008, "start": 2120.08, "end": 2127.16, "text": " is this ID the same one that this one has? And if you use it that way, there's a false", "tokens": [50364, 307, 341, 7348, 264, 912, 472, 300, 341, 472, 575, 30, 400, 498, 291, 764, 309, 300, 636, 11, 456, 311, 257, 7908, 50718, 50718, 3353, 13, 759, 291, 1128, 8947, 264, 7348, 294, 1071, 636, 13, 407, 300, 727, 7263, 312, 1075, 281, 51060, 51060, 980, 505, 411, 11, 4177, 11, 294, 341, 9660, 11, 307, 456, 257, 14924, 295, 341, 2010, 30, 759, 370, 11, 500, 380, 2275, 51422, 51422, 300, 2010, 13, 407, 300, 311, 257, 7908, 3353, 300, 321, 727, 4159, 13, 400, 550, 309, 311, 5240, 516, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10384829839070638, "compression_ratio": 1.6542056074766356, "no_caption_prob": 1.670080928306561e-05}, {"id": 359, "seek": 212008, "start": 2127.16, "end": 2134.0, "text": " positive. If you never extract the ID in another way. So that could potentially be able to", "tokens": [50364, 307, 341, 7348, 264, 912, 472, 300, 341, 472, 575, 30, 400, 498, 291, 764, 309, 300, 636, 11, 456, 311, 257, 7908, 50718, 50718, 3353, 13, 759, 291, 1128, 8947, 264, 7348, 294, 1071, 636, 13, 407, 300, 727, 7263, 312, 1075, 281, 51060, 51060, 980, 505, 411, 11, 4177, 11, 294, 341, 9660, 11, 307, 456, 257, 14924, 295, 341, 2010, 30, 759, 370, 11, 500, 380, 2275, 51422, 51422, 300, 2010, 13, 407, 300, 311, 257, 7908, 3353, 300, 321, 727, 4159, 13, 400, 550, 309, 311, 5240, 516, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10384829839070638, "compression_ratio": 1.6542056074766356, "no_caption_prob": 1.670080928306561e-05}, {"id": 360, "seek": 212008, "start": 2134.0, "end": 2141.24, "text": " tell us like, hey, in this comparison, is there a usage of this type? If so, don't report", "tokens": [50364, 307, 341, 7348, 264, 912, 472, 300, 341, 472, 575, 30, 400, 498, 291, 764, 309, 300, 636, 11, 456, 311, 257, 7908, 50718, 50718, 3353, 13, 759, 291, 1128, 8947, 264, 7348, 294, 1071, 636, 13, 407, 300, 727, 7263, 312, 1075, 281, 51060, 51060, 980, 505, 411, 11, 4177, 11, 294, 341, 9660, 11, 307, 456, 257, 14924, 295, 341, 2010, 30, 759, 370, 11, 500, 380, 2275, 51422, 51422, 300, 2010, 13, 407, 300, 311, 257, 7908, 3353, 300, 321, 727, 4159, 13, 400, 550, 309, 311, 5240, 516, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10384829839070638, "compression_ratio": 1.6542056074766356, "no_caption_prob": 1.670080928306561e-05}, {"id": 361, "seek": 212008, "start": 2141.24, "end": 2144.96, "text": " that type. So that's a false positive that we could remove. And then it's mostly going", "tokens": [50364, 307, 341, 7348, 264, 912, 472, 300, 341, 472, 575, 30, 400, 498, 291, 764, 309, 300, 636, 11, 456, 311, 257, 7908, 50718, 50718, 3353, 13, 759, 291, 1128, 8947, 264, 7348, 294, 1071, 636, 13, 407, 300, 727, 7263, 312, 1075, 281, 51060, 51060, 980, 505, 411, 11, 4177, 11, 294, 341, 9660, 11, 307, 456, 257, 14924, 295, 341, 2010, 30, 759, 370, 11, 500, 380, 2275, 51422, 51422, 300, 2010, 13, 407, 300, 311, 257, 7908, 3353, 300, 321, 727, 4159, 13, 400, 550, 309, 311, 5240, 516, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10384829839070638, "compression_ratio": 1.6542056074766356, "no_caption_prob": 1.670080928306561e-05}, {"id": 362, "seek": 214496, "start": 2144.96, "end": 2151.92, "text": " to be about false negatives because there's a bunch of rules that we can't write with", "tokens": [50364, 281, 312, 466, 7908, 40019, 570, 456, 311, 257, 3840, 295, 4474, 300, 321, 393, 380, 2464, 365, 50712, 50712, 300, 2010, 295, 1589, 13, 400, 731, 11, 286, 500, 380, 362, 300, 867, 294, 1575, 11, 457, 257, 1326, 11, 411, 337, 50924, 50924, 5197, 11, 264, 472, 300, 286, 534, 528, 293, 300, 512, 561, 528, 307, 10031, 44383, 2136, 51244, 51244, 7909, 13, 663, 393, 483, 1596, 12414, 281, 360, 558, 498, 291, 528, 281, 11, 1936, 321, 393, 360, 309, 13, 467, 311, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.15626022841904189, "compression_ratio": 1.5733333333333333, "no_caption_prob": 3.426098919590004e-05}, {"id": 363, "seek": 214496, "start": 2151.92, "end": 2156.16, "text": " that type of information. And well, I don't have that many in mind, but a few, like for", "tokens": [50364, 281, 312, 466, 7908, 40019, 570, 456, 311, 257, 3840, 295, 4474, 300, 321, 393, 380, 2464, 365, 50712, 50712, 300, 2010, 295, 1589, 13, 400, 731, 11, 286, 500, 380, 362, 300, 867, 294, 1575, 11, 457, 257, 1326, 11, 411, 337, 50924, 50924, 5197, 11, 264, 472, 300, 286, 534, 528, 293, 300, 512, 561, 528, 307, 10031, 44383, 2136, 51244, 51244, 7909, 13, 663, 393, 483, 1596, 12414, 281, 360, 558, 498, 291, 528, 281, 11, 1936, 321, 393, 360, 309, 13, 467, 311, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.15626022841904189, "compression_ratio": 1.5733333333333333, "no_caption_prob": 3.426098919590004e-05}, {"id": 364, "seek": 214496, "start": 2156.16, "end": 2162.56, "text": " instance, the one that I really want and that some people want is reporting unused record", "tokens": [50364, 281, 312, 466, 7908, 40019, 570, 456, 311, 257, 3840, 295, 4474, 300, 321, 393, 380, 2464, 365, 50712, 50712, 300, 2010, 295, 1589, 13, 400, 731, 11, 286, 500, 380, 362, 300, 867, 294, 1575, 11, 457, 257, 1326, 11, 411, 337, 50924, 50924, 5197, 11, 264, 472, 300, 286, 534, 528, 293, 300, 512, 561, 528, 307, 10031, 44383, 2136, 51244, 51244, 7909, 13, 663, 393, 483, 1596, 12414, 281, 360, 558, 498, 291, 528, 281, 11, 1936, 321, 393, 360, 309, 13, 467, 311, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.15626022841904189, "compression_ratio": 1.5733333333333333, "no_caption_prob": 3.426098919590004e-05}, {"id": 365, "seek": 214496, "start": 2162.56, "end": 2171.08, "text": " fields. That can get quite tricky to do right if you want to, basically we can do it. It's", "tokens": [50364, 281, 312, 466, 7908, 40019, 570, 456, 311, 257, 3840, 295, 4474, 300, 321, 393, 380, 2464, 365, 50712, 50712, 300, 2010, 295, 1589, 13, 400, 731, 11, 286, 500, 380, 362, 300, 867, 294, 1575, 11, 457, 257, 1326, 11, 411, 337, 50924, 50924, 5197, 11, 264, 472, 300, 286, 534, 528, 293, 300, 512, 561, 528, 307, 10031, 44383, 2136, 51244, 51244, 7909, 13, 663, 393, 483, 1596, 12414, 281, 360, 558, 498, 291, 528, 281, 11, 1936, 321, 393, 360, 309, 13, 467, 311, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.15626022841904189, "compression_ratio": 1.5733333333333333, "no_caption_prob": 3.426098919590004e-05}, {"id": 366, "seek": 217108, "start": 2171.08, "end": 2175.04, "text": " just going to have a lot of false negatives. So as I said, like you can either lean towards", "tokens": [50364, 445, 516, 281, 362, 257, 688, 295, 7908, 40019, 13, 407, 382, 286, 848, 11, 411, 291, 393, 2139, 11659, 3030, 50562, 50562, 7908, 40019, 420, 7908, 35127, 562, 291, 500, 380, 362, 1589, 13, 1779, 13, 407, 1936, 50772, 50772, 437, 321, 393, 360, 307, 11, 731, 11, 498, 321, 536, 300, 257, 2445, 2516, 257, 1279, 30633, 2136, 382, 364, 6770, 51208, 51208, 293, 512, 295, 729, 7909, 366, 406, 1143, 11, 550, 321, 393, 4159, 729, 13, 400, 286, 767, 1217, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08249456774104726, "compression_ratio": 1.609865470852018, "no_caption_prob": 8.013416845642496e-06}, {"id": 367, "seek": 217108, "start": 2175.04, "end": 2179.24, "text": " false negatives or false positives when you don't have information. Right. So basically", "tokens": [50364, 445, 516, 281, 362, 257, 688, 295, 7908, 40019, 13, 407, 382, 286, 848, 11, 411, 291, 393, 2139, 11659, 3030, 50562, 50562, 7908, 40019, 420, 7908, 35127, 562, 291, 500, 380, 362, 1589, 13, 1779, 13, 407, 1936, 50772, 50772, 437, 321, 393, 360, 307, 11, 731, 11, 498, 321, 536, 300, 257, 2445, 2516, 257, 1279, 30633, 2136, 382, 364, 6770, 51208, 51208, 293, 512, 295, 729, 7909, 366, 406, 1143, 11, 550, 321, 393, 4159, 729, 13, 400, 286, 767, 1217, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08249456774104726, "compression_ratio": 1.609865470852018, "no_caption_prob": 8.013416845642496e-06}, {"id": 368, "seek": 217108, "start": 2179.24, "end": 2187.96, "text": " what we can do is, well, if we see that a function takes a extensible record as an argument", "tokens": [50364, 445, 516, 281, 362, 257, 688, 295, 7908, 40019, 13, 407, 382, 286, 848, 11, 411, 291, 393, 2139, 11659, 3030, 50562, 50562, 7908, 40019, 420, 7908, 35127, 562, 291, 500, 380, 362, 1589, 13, 1779, 13, 407, 1936, 50772, 50772, 437, 321, 393, 360, 307, 11, 731, 11, 498, 321, 536, 300, 257, 2445, 2516, 257, 1279, 30633, 2136, 382, 364, 6770, 51208, 51208, 293, 512, 295, 729, 7909, 366, 406, 1143, 11, 550, 321, 393, 4159, 729, 13, 400, 286, 767, 1217, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08249456774104726, "compression_ratio": 1.609865470852018, "no_caption_prob": 8.013416845642496e-06}, {"id": 369, "seek": 217108, "start": 2187.96, "end": 2193.64, "text": " and some of those fields are not used, then we can remove those. And I actually already", "tokens": [50364, 445, 516, 281, 362, 257, 688, 295, 7908, 40019, 13, 407, 382, 286, 848, 11, 411, 291, 393, 2139, 11659, 3030, 50562, 50562, 7908, 40019, 420, 7908, 35127, 562, 291, 500, 380, 362, 1589, 13, 1779, 13, 407, 1936, 50772, 50772, 437, 321, 393, 360, 307, 11, 731, 11, 498, 321, 536, 300, 257, 2445, 2516, 257, 1279, 30633, 2136, 382, 364, 6770, 51208, 51208, 293, 512, 295, 729, 7909, 366, 406, 1143, 11, 550, 321, 393, 4159, 729, 13, 400, 286, 767, 1217, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08249456774104726, "compression_ratio": 1.609865470852018, "no_caption_prob": 8.013416845642496e-06}, {"id": 370, "seek": 219364, "start": 2193.64, "end": 2202.56, "text": " have a prototype without working, but if you pass that argument to a list.map function,", "tokens": [50364, 362, 257, 19475, 1553, 1364, 11, 457, 498, 291, 1320, 300, 6770, 281, 257, 1329, 13, 24223, 2445, 11, 50810, 50810, 337, 5197, 11, 370, 291, 362, 257, 1329, 295, 512, 7724, 293, 291, 1320, 300, 281, 257, 1329, 13, 24223, 13, 1042, 11, 586, 51084, 51084, 291, 643, 281, 2573, 484, 437, 307, 264, 2010, 295, 300, 463, 3717, 2445, 300, 291, 1320, 281, 264, 51402, 51402, 1329, 13, 24223, 570, 498, 300, 472, 4960, 512, 295, 264, 7909, 293, 729, 7909, 366, 1143, 11, 498, 309, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.19087246189946713, "compression_ratio": 1.8421052631578947, "no_caption_prob": 1.4063873095437884e-05}, {"id": 371, "seek": 219364, "start": 2202.56, "end": 2208.04, "text": " for instance, so you have a list of some records and you pass that to a list.map. Well, now", "tokens": [50364, 362, 257, 19475, 1553, 1364, 11, 457, 498, 291, 1320, 300, 6770, 281, 257, 1329, 13, 24223, 2445, 11, 50810, 50810, 337, 5197, 11, 370, 291, 362, 257, 1329, 295, 512, 7724, 293, 291, 1320, 300, 281, 257, 1329, 13, 24223, 13, 1042, 11, 586, 51084, 51084, 291, 643, 281, 2573, 484, 437, 307, 264, 2010, 295, 300, 463, 3717, 2445, 300, 291, 1320, 281, 264, 51402, 51402, 1329, 13, 24223, 570, 498, 300, 472, 4960, 512, 295, 264, 7909, 293, 729, 7909, 366, 1143, 11, 498, 309, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.19087246189946713, "compression_ratio": 1.8421052631578947, "no_caption_prob": 1.4063873095437884e-05}, {"id": 372, "seek": 219364, "start": 2208.04, "end": 2214.4, "text": " you need to figure out what is the type of that mapper function that you pass to the", "tokens": [50364, 362, 257, 19475, 1553, 1364, 11, 457, 498, 291, 1320, 300, 6770, 281, 257, 1329, 13, 24223, 2445, 11, 50810, 50810, 337, 5197, 11, 370, 291, 362, 257, 1329, 295, 512, 7724, 293, 291, 1320, 300, 281, 257, 1329, 13, 24223, 13, 1042, 11, 586, 51084, 51084, 291, 643, 281, 2573, 484, 437, 307, 264, 2010, 295, 300, 463, 3717, 2445, 300, 291, 1320, 281, 264, 51402, 51402, 1329, 13, 24223, 570, 498, 300, 472, 4960, 512, 295, 264, 7909, 293, 729, 7909, 366, 1143, 11, 498, 309, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.19087246189946713, "compression_ratio": 1.8421052631578947, "no_caption_prob": 1.4063873095437884e-05}, {"id": 373, "seek": 219364, "start": 2214.4, "end": 2220.3599999999997, "text": " list.map because if that one uses some of the fields and those fields are used, if it", "tokens": [50364, 362, 257, 19475, 1553, 1364, 11, 457, 498, 291, 1320, 300, 6770, 281, 257, 1329, 13, 24223, 2445, 11, 50810, 50810, 337, 5197, 11, 370, 291, 362, 257, 1329, 295, 512, 7724, 293, 291, 1320, 300, 281, 257, 1329, 13, 24223, 13, 1042, 11, 586, 51084, 51084, 291, 643, 281, 2573, 484, 437, 307, 264, 2010, 295, 300, 463, 3717, 2445, 300, 291, 1320, 281, 264, 51402, 51402, 1329, 13, 24223, 570, 498, 300, 472, 4960, 512, 295, 264, 7909, 293, 729, 7909, 366, 1143, 11, 498, 309, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.19087246189946713, "compression_ratio": 1.8421052631578947, "no_caption_prob": 1.4063873095437884e-05}, {"id": 374, "seek": 222036, "start": 2220.36, "end": 2225.08, "text": " doesn't, then they're not used. But if you don't know the type, well, you don't know", "tokens": [50364, 1177, 380, 11, 550, 436, 434, 406, 1143, 13, 583, 498, 291, 500, 380, 458, 264, 2010, 11, 731, 11, 291, 500, 380, 458, 50600, 50600, 1968, 436, 486, 312, 1075, 281, 11, 597, 7909, 366, 1143, 293, 597, 2306, 366, 44383, 13, 407, 4412, 11, 50956, 50956, 498, 321, 528, 281, 312, 3273, 293, 406, 2275, 7908, 3353, 11, 321, 434, 445, 516, 281, 584, 11, 731, 11, 309, 51156, 51156, 1542, 411, 309, 727, 764, 1340, 13, 407, 321, 434, 406, 516, 281, 2275, 1340, 13, 400, 300, 311, 264, 51378, 51378, 912, 551, 337, 257, 2316, 13, 1743, 291, 1320, 428, 2316, 11, 597, 307, 2673, 257, 2136, 365, 7140, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.09761544578095786, "compression_ratio": 1.7391304347826086, "no_caption_prob": 3.5355667932890356e-05}, {"id": 375, "seek": 222036, "start": 2225.08, "end": 2232.2000000000003, "text": " whether they will be able to, which fields are used and which ones are unused. So therefore,", "tokens": [50364, 1177, 380, 11, 550, 436, 434, 406, 1143, 13, 583, 498, 291, 500, 380, 458, 264, 2010, 11, 731, 11, 291, 500, 380, 458, 50600, 50600, 1968, 436, 486, 312, 1075, 281, 11, 597, 7909, 366, 1143, 293, 597, 2306, 366, 44383, 13, 407, 4412, 11, 50956, 50956, 498, 321, 528, 281, 312, 3273, 293, 406, 2275, 7908, 3353, 11, 321, 434, 445, 516, 281, 584, 11, 731, 11, 309, 51156, 51156, 1542, 411, 309, 727, 764, 1340, 13, 407, 321, 434, 406, 516, 281, 2275, 1340, 13, 400, 300, 311, 264, 51378, 51378, 912, 551, 337, 257, 2316, 13, 1743, 291, 1320, 428, 2316, 11, 597, 307, 2673, 257, 2136, 365, 7140, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.09761544578095786, "compression_ratio": 1.7391304347826086, "no_caption_prob": 3.5355667932890356e-05}, {"id": 376, "seek": 222036, "start": 2232.2000000000003, "end": 2236.2000000000003, "text": " if we want to be safe and not report false positive, we're just going to say, well, it", "tokens": [50364, 1177, 380, 11, 550, 436, 434, 406, 1143, 13, 583, 498, 291, 500, 380, 458, 264, 2010, 11, 731, 11, 291, 500, 380, 458, 50600, 50600, 1968, 436, 486, 312, 1075, 281, 11, 597, 7909, 366, 1143, 293, 597, 2306, 366, 44383, 13, 407, 4412, 11, 50956, 50956, 498, 321, 528, 281, 312, 3273, 293, 406, 2275, 7908, 3353, 11, 321, 434, 445, 516, 281, 584, 11, 731, 11, 309, 51156, 51156, 1542, 411, 309, 727, 764, 1340, 13, 407, 321, 434, 406, 516, 281, 2275, 1340, 13, 400, 300, 311, 264, 51378, 51378, 912, 551, 337, 257, 2316, 13, 1743, 291, 1320, 428, 2316, 11, 597, 307, 2673, 257, 2136, 365, 7140, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.09761544578095786, "compression_ratio": 1.7391304347826086, "no_caption_prob": 3.5355667932890356e-05}, {"id": 377, "seek": 222036, "start": 2236.2000000000003, "end": 2240.6400000000003, "text": " looks like it could use anything. So we're not going to report anything. And that's the", "tokens": [50364, 1177, 380, 11, 550, 436, 434, 406, 1143, 13, 583, 498, 291, 500, 380, 458, 264, 2010, 11, 731, 11, 291, 500, 380, 458, 50600, 50600, 1968, 436, 486, 312, 1075, 281, 11, 597, 7909, 366, 1143, 293, 597, 2306, 366, 44383, 13, 407, 4412, 11, 50956, 50956, 498, 321, 528, 281, 312, 3273, 293, 406, 2275, 7908, 3353, 11, 321, 434, 445, 516, 281, 584, 11, 731, 11, 309, 51156, 51156, 1542, 411, 309, 727, 764, 1340, 13, 407, 321, 434, 406, 516, 281, 2275, 1340, 13, 400, 300, 311, 264, 51378, 51378, 912, 551, 337, 257, 2316, 13, 1743, 291, 1320, 428, 2316, 11, 597, 307, 2673, 257, 2136, 365, 7140, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.09761544578095786, "compression_ratio": 1.7391304347826086, "no_caption_prob": 3.5355667932890356e-05}, {"id": 378, "seek": 222036, "start": 2240.6400000000003, "end": 2247.1200000000003, "text": " same thing for a model. Like you pass your model, which is usually a record with plenty", "tokens": [50364, 1177, 380, 11, 550, 436, 434, 406, 1143, 13, 583, 498, 291, 500, 380, 458, 264, 2010, 11, 731, 11, 291, 500, 380, 458, 50600, 50600, 1968, 436, 486, 312, 1075, 281, 11, 597, 7909, 366, 1143, 293, 597, 2306, 366, 44383, 13, 407, 4412, 11, 50956, 50956, 498, 321, 528, 281, 312, 3273, 293, 406, 2275, 7908, 3353, 11, 321, 434, 445, 516, 281, 584, 11, 731, 11, 309, 51156, 51156, 1542, 411, 309, 727, 764, 1340, 13, 407, 321, 434, 406, 516, 281, 2275, 1340, 13, 400, 300, 311, 264, 51378, 51378, 912, 551, 337, 257, 2316, 13, 1743, 291, 1320, 428, 2316, 11, 597, 307, 2673, 257, 2136, 365, 7140, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.09761544578095786, "compression_ratio": 1.7391304347826086, "no_caption_prob": 3.5355667932890356e-05}, {"id": 379, "seek": 224712, "start": 2247.12, "end": 2253.04, "text": " of fields, you pass a model to some function that is a lambda that is hard to evaluate.", "tokens": [50364, 295, 7909, 11, 291, 1320, 257, 2316, 281, 512, 2445, 300, 307, 257, 13607, 300, 307, 1152, 281, 13059, 13, 50660, 50660, 7504, 11, 321, 393, 380, 980, 1340, 466, 309, 13, 407, 321, 1590, 13, 407, 1419, 2010, 1589, 510, 50938, 50938, 576, 312, 257, 688, 11, 588, 4961, 570, 321, 727, 12477, 264, 2010, 295, 729, 6828, 293, 321, 51306, 51306, 727, 536, 11, 731, 11, 309, 2544, 281, 312, 1228, 341, 2519, 11, 341, 2519, 11, 293, 300, 311, 309, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1889094656163996, "compression_ratio": 1.6715686274509804, "no_caption_prob": 2.1112015019753017e-05}, {"id": 380, "seek": 224712, "start": 2253.04, "end": 2258.6, "text": " Therefore, we can't tell anything about it. So we stop. So having type information here", "tokens": [50364, 295, 7909, 11, 291, 1320, 257, 2316, 281, 512, 2445, 300, 307, 257, 13607, 300, 307, 1152, 281, 13059, 13, 50660, 50660, 7504, 11, 321, 393, 380, 980, 1340, 466, 309, 13, 407, 321, 1590, 13, 407, 1419, 2010, 1589, 510, 50938, 50938, 576, 312, 257, 688, 11, 588, 4961, 570, 321, 727, 12477, 264, 2010, 295, 729, 6828, 293, 321, 51306, 51306, 727, 536, 11, 731, 11, 309, 2544, 281, 312, 1228, 341, 2519, 11, 341, 2519, 11, 293, 300, 311, 309, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1889094656163996, "compression_ratio": 1.6715686274509804, "no_caption_prob": 2.1112015019753017e-05}, {"id": 381, "seek": 224712, "start": 2258.6, "end": 2265.96, "text": " would be a lot, very helpful because we could analyze the type of those functions and we", "tokens": [50364, 295, 7909, 11, 291, 1320, 257, 2316, 281, 512, 2445, 300, 307, 257, 13607, 300, 307, 1152, 281, 13059, 13, 50660, 50660, 7504, 11, 321, 393, 380, 980, 1340, 466, 309, 13, 407, 321, 1590, 13, 407, 1419, 2010, 1589, 510, 50938, 50938, 576, 312, 257, 688, 11, 588, 4961, 570, 321, 727, 12477, 264, 2010, 295, 729, 6828, 293, 321, 51306, 51306, 727, 536, 11, 731, 11, 309, 2544, 281, 312, 1228, 341, 2519, 11, 341, 2519, 11, 293, 300, 311, 309, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1889094656163996, "compression_ratio": 1.6715686274509804, "no_caption_prob": 2.1112015019753017e-05}, {"id": 382, "seek": 224712, "start": 2265.96, "end": 2271.44, "text": " could see, well, it seems to be using this field, this field, and that's it.", "tokens": [50364, 295, 7909, 11, 291, 1320, 257, 2316, 281, 512, 2445, 300, 307, 257, 13607, 300, 307, 1152, 281, 13059, 13, 50660, 50660, 7504, 11, 321, 393, 380, 980, 1340, 466, 309, 13, 407, 321, 1590, 13, 407, 1419, 2010, 1589, 510, 50938, 50938, 576, 312, 257, 688, 11, 588, 4961, 570, 321, 727, 12477, 264, 2010, 295, 729, 6828, 293, 321, 51306, 51306, 727, 536, 11, 731, 11, 309, 2544, 281, 312, 1228, 341, 2519, 11, 341, 2519, 11, 293, 300, 311, 309, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.1889094656163996, "compression_ratio": 1.6715686274509804, "no_caption_prob": 2.1112015019753017e-05}, {"id": 383, "seek": 227144, "start": 2271.44, "end": 2277.32, "text": " Yeah. It seems like that would unlock a lot of possibilities, not to mention fixes that", "tokens": [50364, 865, 13, 467, 2544, 411, 300, 576, 11634, 257, 688, 295, 12178, 11, 406, 281, 2152, 32539, 300, 50658, 50658, 727, 11, 291, 458, 11, 286, 914, 11, 3089, 5125, 32539, 11, 439, 7527, 295, 3487, 291, 727, 915, 456, 13, 51012, 51012, 865, 13, 286, 393, 3811, 321, 486, 920, 362, 7140, 295, 7908, 40019, 11, 457, 286, 519, 321, 486, 312, 51258, 51258, 1075, 281, 3745, 439, 7908, 35127, 420, 321, 576, 406, 362, 7908, 35127, 11, 457, 300, 311, 1338, 11, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.20887253501198508, "compression_ratio": 1.669811320754717, "no_caption_prob": 4.0058330341707915e-05}, {"id": 384, "seek": 227144, "start": 2277.32, "end": 2284.4, "text": " could, you know, I mean, code generation fixes, all sorts of ideas you could find there.", "tokens": [50364, 865, 13, 467, 2544, 411, 300, 576, 11634, 257, 688, 295, 12178, 11, 406, 281, 2152, 32539, 300, 50658, 50658, 727, 11, 291, 458, 11, 286, 914, 11, 3089, 5125, 32539, 11, 439, 7527, 295, 3487, 291, 727, 915, 456, 13, 51012, 51012, 865, 13, 286, 393, 3811, 321, 486, 920, 362, 7140, 295, 7908, 40019, 11, 457, 286, 519, 321, 486, 312, 51258, 51258, 1075, 281, 3745, 439, 7908, 35127, 420, 321, 576, 406, 362, 7908, 35127, 11, 457, 300, 311, 1338, 11, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.20887253501198508, "compression_ratio": 1.669811320754717, "no_caption_prob": 4.0058330341707915e-05}, {"id": 385, "seek": 227144, "start": 2284.4, "end": 2289.32, "text": " Yeah. I can imagine we will still have plenty of false negatives, but I think we will be", "tokens": [50364, 865, 13, 467, 2544, 411, 300, 576, 11634, 257, 688, 295, 12178, 11, 406, 281, 2152, 32539, 300, 50658, 50658, 727, 11, 291, 458, 11, 286, 914, 11, 3089, 5125, 32539, 11, 439, 7527, 295, 3487, 291, 727, 915, 456, 13, 51012, 51012, 865, 13, 286, 393, 3811, 321, 486, 920, 362, 7140, 295, 7908, 40019, 11, 457, 286, 519, 321, 486, 312, 51258, 51258, 1075, 281, 3745, 439, 7908, 35127, 420, 321, 576, 406, 362, 7908, 35127, 11, 457, 300, 311, 1338, 11, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.20887253501198508, "compression_ratio": 1.669811320754717, "no_caption_prob": 4.0058330341707915e-05}, {"id": 386, "seek": 227144, "start": 2289.32, "end": 2295.96, "text": " able to catch all false positives or we would not have false positives, but that's yeah,", "tokens": [50364, 865, 13, 467, 2544, 411, 300, 576, 11634, 257, 688, 295, 12178, 11, 406, 281, 2152, 32539, 300, 50658, 50658, 727, 11, 291, 458, 11, 286, 914, 11, 3089, 5125, 32539, 11, 439, 7527, 295, 3487, 291, 727, 915, 456, 13, 51012, 51012, 865, 13, 286, 393, 3811, 321, 486, 920, 362, 7140, 295, 7908, 40019, 11, 457, 286, 519, 321, 486, 312, 51258, 51258, 1075, 281, 3745, 439, 7908, 35127, 420, 321, 576, 406, 362, 7908, 35127, 11, 457, 300, 311, 1338, 11, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.20887253501198508, "compression_ratio": 1.669811320754717, "no_caption_prob": 4.0058330341707915e-05}, {"id": 387, "seek": 229596, "start": 2295.96, "end": 2302.2400000000002, "text": " again, like how conservative we want to be about things being used or unused. Cause we", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 388, "seek": 229596, "start": 2302.2400000000002, "end": 2306.56, "text": " could go either way. We could potentially have a configuration, the rule that says try", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 389, "seek": 229596, "start": 2306.56, "end": 2311.56, "text": " to be more aggressive now just for a while. And then you go check the false positives", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 390, "seek": 229596, "start": 2311.56, "end": 2315.68, "text": " and maybe you can remove, you could check the errors and maybe you can remove a few", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 391, "seek": 229596, "start": 2315.68, "end": 2317.44, "text": " things. Maybe you don't, but yeah.", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 392, "seek": 229596, "start": 2317.44, "end": 2318.44, "text": " Right.", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 393, "seek": 229596, "start": 2318.44, "end": 2322.84, "text": " But yeah, in general, we want to be very conservative and not report any false positives because", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 394, "seek": 229596, "start": 2322.84, "end": 2325.0, "text": " those are super annoying.", "tokens": [50364, 797, 11, 411, 577, 13780, 321, 528, 281, 312, 466, 721, 885, 1143, 420, 44383, 13, 10865, 321, 50678, 50678, 727, 352, 2139, 636, 13, 492, 727, 7263, 362, 257, 11694, 11, 264, 4978, 300, 1619, 853, 50894, 50894, 281, 312, 544, 10762, 586, 445, 337, 257, 1339, 13, 400, 550, 291, 352, 1520, 264, 7908, 35127, 51144, 51144, 293, 1310, 291, 393, 4159, 11, 291, 727, 1520, 264, 13603, 293, 1310, 291, 393, 4159, 257, 1326, 51350, 51350, 721, 13, 2704, 291, 500, 380, 11, 457, 1338, 13, 51438, 51438, 1779, 13, 51488, 51488, 583, 1338, 11, 294, 2674, 11, 321, 528, 281, 312, 588, 13780, 293, 406, 2275, 604, 7908, 35127, 570, 51708, 51708, 729, 366, 1687, 11304, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16931817626953125, "compression_ratio": 1.795053003533569, "no_caption_prob": 3.071714672842063e-05}, {"id": 395, "seek": 232500, "start": 2325.0, "end": 2331.84, "text": " Yeah. So it seems like, I'm not sure if this falls into the same groups you've mentioned", "tokens": [50364, 865, 13, 407, 309, 2544, 411, 11, 286, 478, 406, 988, 498, 341, 8804, 666, 264, 912, 3935, 291, 600, 2835, 50706, 50706, 295, 10875, 281, 45267, 3030, 7908, 35127, 420, 45267, 3030, 7908, 40019, 13, 583, 562, 321, 434, 51043, 51043, 1417, 466, 2098, 281, 589, 365, 1570, 1589, 11, 291, 500, 380, 362, 382, 709, 1589, 382, 291, 51346, 51346, 643, 281, 312, 2319, 4, 988, 295, 746, 300, 291, 434, 8568, 337, 13, 1042, 11, 411, 498, 321, 574, 412, 264, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.095545617016879, "compression_ratio": 1.5745614035087718, "no_caption_prob": 4.908225673716515e-05}, {"id": 396, "seek": 232500, "start": 2331.84, "end": 2338.58, "text": " of choosing to err towards false positives or err towards false negatives. But when we're", "tokens": [50364, 865, 13, 407, 309, 2544, 411, 11, 286, 478, 406, 988, 498, 341, 8804, 666, 264, 912, 3935, 291, 600, 2835, 50706, 50706, 295, 10875, 281, 45267, 3030, 7908, 35127, 420, 45267, 3030, 7908, 40019, 13, 583, 562, 321, 434, 51043, 51043, 1417, 466, 2098, 281, 589, 365, 1570, 1589, 11, 291, 500, 380, 362, 382, 709, 1589, 382, 291, 51346, 51346, 643, 281, 312, 2319, 4, 988, 295, 746, 300, 291, 434, 8568, 337, 13, 1042, 11, 411, 498, 321, 574, 412, 264, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.095545617016879, "compression_ratio": 1.5745614035087718, "no_caption_prob": 4.908225673716515e-05}, {"id": 397, "seek": 232500, "start": 2338.58, "end": 2344.64, "text": " talking about ways to work with less information, you don't have as much information as you", "tokens": [50364, 865, 13, 407, 309, 2544, 411, 11, 286, 478, 406, 988, 498, 341, 8804, 666, 264, 912, 3935, 291, 600, 2835, 50706, 50706, 295, 10875, 281, 45267, 3030, 7908, 35127, 420, 45267, 3030, 7908, 40019, 13, 583, 562, 321, 434, 51043, 51043, 1417, 466, 2098, 281, 589, 365, 1570, 1589, 11, 291, 500, 380, 362, 382, 709, 1589, 382, 291, 51346, 51346, 643, 281, 312, 2319, 4, 988, 295, 746, 300, 291, 434, 8568, 337, 13, 1042, 11, 411, 498, 321, 574, 412, 264, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.095545617016879, "compression_ratio": 1.5745614035087718, "no_caption_prob": 4.908225673716515e-05}, {"id": 398, "seek": 232500, "start": 2344.64, "end": 2353.18, "text": " need to be 100% sure of something that you're checking for. Well, like if we look at the", "tokens": [50364, 865, 13, 407, 309, 2544, 411, 11, 286, 478, 406, 988, 498, 341, 8804, 666, 264, 912, 3935, 291, 600, 2835, 50706, 50706, 295, 10875, 281, 45267, 3030, 7908, 35127, 420, 45267, 3030, 7908, 40019, 13, 583, 562, 321, 434, 51043, 51043, 1417, 466, 2098, 281, 589, 365, 1570, 1589, 11, 291, 500, 380, 362, 382, 709, 1589, 382, 291, 51346, 51346, 643, 281, 312, 2319, 4, 988, 295, 746, 300, 291, 434, 8568, 337, 13, 1042, 11, 411, 498, 321, 574, 412, 264, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.095545617016879, "compression_ratio": 1.5745614035087718, "no_caption_prob": 4.908225673716515e-05}, {"id": 399, "seek": 235318, "start": 2353.18, "end": 2358.56, "text": " chess example again, you know, what do you do in that situation? If you, if you can concretely", "tokens": [50364, 24122, 1365, 797, 11, 291, 458, 11, 437, 360, 291, 360, 294, 300, 2590, 30, 759, 291, 11, 498, 291, 393, 39481, 736, 50633, 50633, 6997, 309, 11, 550, 309, 311, 11, 550, 309, 311, 1858, 1547, 13, 759, 291, 393, 380, 11, 550, 291, 917, 493, 11, 291, 458, 11, 437, 50921, 50921, 360, 291, 360, 337, 364, 5193, 24122, 1286, 30, 509, 3928, 281, 10687, 322, 9029, 293, 415, 374, 6006, 13, 407, 415, 374, 3142, 51277, 51277, 337, 11, 291, 458, 11, 23751, 1968, 257, 24122, 1286, 307, 665, 307, 291, 528, 428, 30905, 82, 281, 312, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.07946486656482403, "compression_ratio": 1.8137254901960784, "no_caption_prob": 2.5464114514761604e-05}, {"id": 400, "seek": 235318, "start": 2358.56, "end": 2364.3199999999997, "text": " determine it, then it's, then it's easy enough. If you can't, then you end up, you know, what", "tokens": [50364, 24122, 1365, 797, 11, 291, 458, 11, 437, 360, 291, 360, 294, 300, 2590, 30, 759, 291, 11, 498, 291, 393, 39481, 736, 50633, 50633, 6997, 309, 11, 550, 309, 311, 11, 550, 309, 311, 1858, 1547, 13, 759, 291, 393, 380, 11, 550, 291, 917, 493, 11, 291, 458, 11, 437, 50921, 50921, 360, 291, 360, 337, 364, 5193, 24122, 1286, 30, 509, 3928, 281, 10687, 322, 9029, 293, 415, 374, 6006, 13, 407, 415, 374, 3142, 51277, 51277, 337, 11, 291, 458, 11, 23751, 1968, 257, 24122, 1286, 307, 665, 307, 291, 528, 428, 30905, 82, 281, 312, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.07946486656482403, "compression_ratio": 1.8137254901960784, "no_caption_prob": 2.5464114514761604e-05}, {"id": 401, "seek": 235318, "start": 2364.3199999999997, "end": 2371.44, "text": " do you do for an opening chess move? You tend to rely on strategies and heuristics. So heuristic", "tokens": [50364, 24122, 1365, 797, 11, 291, 458, 11, 437, 360, 291, 360, 294, 300, 2590, 30, 759, 291, 11, 498, 291, 393, 39481, 736, 50633, 50633, 6997, 309, 11, 550, 309, 311, 11, 550, 309, 311, 1858, 1547, 13, 759, 291, 393, 380, 11, 550, 291, 917, 493, 11, 291, 458, 11, 437, 50921, 50921, 360, 291, 360, 337, 364, 5193, 24122, 1286, 30, 509, 3928, 281, 10687, 322, 9029, 293, 415, 374, 6006, 13, 407, 415, 374, 3142, 51277, 51277, 337, 11, 291, 458, 11, 23751, 1968, 257, 24122, 1286, 307, 665, 307, 291, 528, 428, 30905, 82, 281, 312, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.07946486656482403, "compression_ratio": 1.8137254901960784, "no_caption_prob": 2.5464114514761604e-05}, {"id": 402, "seek": 235318, "start": 2371.44, "end": 2377.7799999999997, "text": " for, you know, determining whether a chess move is good is you want your pawns to be", "tokens": [50364, 24122, 1365, 797, 11, 291, 458, 11, 437, 360, 291, 360, 294, 300, 2590, 30, 759, 291, 11, 498, 291, 393, 39481, 736, 50633, 50633, 6997, 309, 11, 550, 309, 311, 11, 550, 309, 311, 1858, 1547, 13, 759, 291, 393, 380, 11, 550, 291, 917, 493, 11, 291, 458, 11, 437, 50921, 50921, 360, 291, 360, 337, 364, 5193, 24122, 1286, 30, 509, 3928, 281, 10687, 322, 9029, 293, 415, 374, 6006, 13, 407, 415, 374, 3142, 51277, 51277, 337, 11, 291, 458, 11, 23751, 1968, 257, 24122, 1286, 307, 665, 307, 291, 528, 428, 30905, 82, 281, 312, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.07946486656482403, "compression_ratio": 1.8137254901960784, "no_caption_prob": 2.5464114514761604e-05}, {"id": 403, "seek": 237778, "start": 2377.78, "end": 2383.92, "text": " supporting each other. You want, you want to try to take the opponent's queen if you", "tokens": [50364, 7231, 1184, 661, 13, 509, 528, 11, 291, 528, 281, 853, 281, 747, 264, 10620, 311, 12206, 498, 291, 50671, 50671, 393, 337, 9529, 337, 428, 26054, 13, 663, 1062, 1261, 484, 281, 312, 257, 1286, 300, 11, 300, 6689, 281, 50994, 50994, 291, 885, 1520, 76, 770, 294, 264, 958, 1286, 13, 583, 300, 311, 257, 415, 374, 3142, 300, 291, 393, 584, 11, 731, 11, 51244, 51244, 718, 311, 445, 733, 295, 5101, 6552, 300, 341, 307, 516, 281, 3928, 281, 312, 257, 665, 551, 13, 400, 370, 51476, 51476, 586, 428, 4978, 307, 586, 516, 646, 281, 411, 2699, 76, 3131, 4474, 294, 264, 4319, 295, 2699, 76, 3131, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.09322806301279965, "compression_ratio": 1.69140625, "no_caption_prob": 6.50254005449824e-05}, {"id": 404, "seek": 237778, "start": 2383.92, "end": 2390.38, "text": " can for trading for your knight. That might turn out to be a move that, that leads to", "tokens": [50364, 7231, 1184, 661, 13, 509, 528, 11, 291, 528, 281, 853, 281, 747, 264, 10620, 311, 12206, 498, 291, 50671, 50671, 393, 337, 9529, 337, 428, 26054, 13, 663, 1062, 1261, 484, 281, 312, 257, 1286, 300, 11, 300, 6689, 281, 50994, 50994, 291, 885, 1520, 76, 770, 294, 264, 958, 1286, 13, 583, 300, 311, 257, 415, 374, 3142, 300, 291, 393, 584, 11, 731, 11, 51244, 51244, 718, 311, 445, 733, 295, 5101, 6552, 300, 341, 307, 516, 281, 3928, 281, 312, 257, 665, 551, 13, 400, 370, 51476, 51476, 586, 428, 4978, 307, 586, 516, 646, 281, 411, 2699, 76, 3131, 4474, 294, 264, 4319, 295, 2699, 76, 3131, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.09322806301279965, "compression_ratio": 1.69140625, "no_caption_prob": 6.50254005449824e-05}, {"id": 405, "seek": 237778, "start": 2390.38, "end": 2395.38, "text": " you being checkmated in the next move. But that's a heuristic that you can say, well,", "tokens": [50364, 7231, 1184, 661, 13, 509, 528, 11, 291, 528, 281, 853, 281, 747, 264, 10620, 311, 12206, 498, 291, 50671, 50671, 393, 337, 9529, 337, 428, 26054, 13, 663, 1062, 1261, 484, 281, 312, 257, 1286, 300, 11, 300, 6689, 281, 50994, 50994, 291, 885, 1520, 76, 770, 294, 264, 958, 1286, 13, 583, 300, 311, 257, 415, 374, 3142, 300, 291, 393, 584, 11, 731, 11, 51244, 51244, 718, 311, 445, 733, 295, 5101, 6552, 300, 341, 307, 516, 281, 3928, 281, 312, 257, 665, 551, 13, 400, 370, 51476, 51476, 586, 428, 4978, 307, 586, 516, 646, 281, 411, 2699, 76, 3131, 4474, 294, 264, 4319, 295, 2699, 76, 3131, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.09322806301279965, "compression_ratio": 1.69140625, "no_caption_prob": 6.50254005449824e-05}, {"id": 406, "seek": 237778, "start": 2395.38, "end": 2400.02, "text": " let's just kind of generally assume that this is going to tend to be a good thing. And so", "tokens": [50364, 7231, 1184, 661, 13, 509, 528, 11, 291, 528, 281, 853, 281, 747, 264, 10620, 311, 12206, 498, 291, 50671, 50671, 393, 337, 9529, 337, 428, 26054, 13, 663, 1062, 1261, 484, 281, 312, 257, 1286, 300, 11, 300, 6689, 281, 50994, 50994, 291, 885, 1520, 76, 770, 294, 264, 958, 1286, 13, 583, 300, 311, 257, 415, 374, 3142, 300, 291, 393, 584, 11, 731, 11, 51244, 51244, 718, 311, 445, 733, 295, 5101, 6552, 300, 341, 307, 516, 281, 3928, 281, 312, 257, 665, 551, 13, 400, 370, 51476, 51476, 586, 428, 4978, 307, 586, 516, 646, 281, 411, 2699, 76, 3131, 4474, 294, 264, 4319, 295, 2699, 76, 3131, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.09322806301279965, "compression_ratio": 1.69140625, "no_caption_prob": 6.50254005449824e-05}, {"id": 407, "seek": 237778, "start": 2400.02, "end": 2406.1600000000003, "text": " now your rule is now going back to like Elm review rules in the context of Elm review.", "tokens": [50364, 7231, 1184, 661, 13, 509, 528, 11, 291, 528, 281, 853, 281, 747, 264, 10620, 311, 12206, 498, 291, 50671, 50671, 393, 337, 9529, 337, 428, 26054, 13, 663, 1062, 1261, 484, 281, 312, 257, 1286, 300, 11, 300, 6689, 281, 50994, 50994, 291, 885, 1520, 76, 770, 294, 264, 958, 1286, 13, 583, 300, 311, 257, 415, 374, 3142, 300, 291, 393, 584, 11, 731, 11, 51244, 51244, 718, 311, 445, 733, 295, 5101, 6552, 300, 341, 307, 516, 281, 3928, 281, 312, 257, 665, 551, 13, 400, 370, 51476, 51476, 586, 428, 4978, 307, 586, 516, 646, 281, 411, 2699, 76, 3131, 4474, 294, 264, 4319, 295, 2699, 76, 3131, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.09322806301279965, "compression_ratio": 1.69140625, "no_caption_prob": 6.50254005449824e-05}, {"id": 408, "seek": 240616, "start": 2406.16, "end": 2414.44, "text": " Now these heuristics are telling you things about your code that might give you unreliable", "tokens": [50364, 823, 613, 415, 374, 6006, 366, 3585, 291, 721, 466, 428, 3089, 300, 1062, 976, 291, 20584, 2081, 712, 50778, 50778, 3542, 13, 1436, 291, 434, 11, 3082, 4476, 437, 257, 415, 374, 3142, 307, 11, 307, 309, 311, 13389, 264, 51057, 51057, 551, 300, 307, 406, 3838, 437, 291, 1127, 466, 13, 1743, 294, 257, 24122, 1216, 11, 291, 1127, 466, 1520, 13963, 13, 51363, 51363, 663, 311, 264, 787, 551, 291, 1127, 466, 13, 583, 11, 293, 1310, 411, 264, 1230, 295, 6067, 1826, 291, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.10899131900661595, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.1125410310341977e-05}, {"id": 409, "seek": 240616, "start": 2414.44, "end": 2420.02, "text": " results. Because you're, cause essentially what a heuristic is, is it's measuring the", "tokens": [50364, 823, 613, 415, 374, 6006, 366, 3585, 291, 721, 466, 428, 3089, 300, 1062, 976, 291, 20584, 2081, 712, 50778, 50778, 3542, 13, 1436, 291, 434, 11, 3082, 4476, 437, 257, 415, 374, 3142, 307, 11, 307, 309, 311, 13389, 264, 51057, 51057, 551, 300, 307, 406, 3838, 437, 291, 1127, 466, 13, 1743, 294, 257, 24122, 1216, 11, 291, 1127, 466, 1520, 13963, 13, 51363, 51363, 663, 311, 264, 787, 551, 291, 1127, 466, 13, 583, 11, 293, 1310, 411, 264, 1230, 295, 6067, 1826, 291, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.10899131900661595, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.1125410310341977e-05}, {"id": 410, "seek": 240616, "start": 2420.02, "end": 2426.14, "text": " thing that is not directly what you care about. Like in a chess game, you care about checkmate.", "tokens": [50364, 823, 613, 415, 374, 6006, 366, 3585, 291, 721, 466, 428, 3089, 300, 1062, 976, 291, 20584, 2081, 712, 50778, 50778, 3542, 13, 1436, 291, 434, 11, 3082, 4476, 437, 257, 415, 374, 3142, 307, 11, 307, 309, 311, 13389, 264, 51057, 51057, 551, 300, 307, 406, 3838, 437, 291, 1127, 466, 13, 1743, 294, 257, 24122, 1216, 11, 291, 1127, 466, 1520, 13963, 13, 51363, 51363, 663, 311, 264, 787, 551, 291, 1127, 466, 13, 583, 11, 293, 1310, 411, 264, 1230, 295, 6067, 1826, 291, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.10899131900661595, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.1125410310341977e-05}, {"id": 411, "seek": 240616, "start": 2426.14, "end": 2430.8999999999996, "text": " That's the only thing you care about. But, and maybe like the number of moves until you", "tokens": [50364, 823, 613, 415, 374, 6006, 366, 3585, 291, 721, 466, 428, 3089, 300, 1062, 976, 291, 20584, 2081, 712, 50778, 50778, 3542, 13, 1436, 291, 434, 11, 3082, 4476, 437, 257, 415, 374, 3142, 307, 11, 307, 309, 311, 13389, 264, 51057, 51057, 551, 300, 307, 406, 3838, 437, 291, 1127, 466, 13, 1743, 294, 257, 24122, 1216, 11, 291, 1127, 466, 1520, 13963, 13, 51363, 51363, 663, 311, 264, 787, 551, 291, 1127, 466, 13, 583, 11, 293, 1310, 411, 264, 1230, 295, 6067, 1826, 291, 51601, 51601], "temperature": 0.0, "avg_logprob": -0.10899131900661595, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.1125410310341977e-05}, {"id": 412, "seek": 243090, "start": 2430.9, "end": 2437.46, "text": " checkmate, like that's all you care about. But in this heuristic of trying to take the", "tokens": [50364, 1520, 13963, 11, 411, 300, 311, 439, 291, 1127, 466, 13, 583, 294, 341, 415, 374, 3142, 295, 1382, 281, 747, 264, 50692, 50692, 10620, 311, 12206, 11, 498, 291, 393, 11, 291, 366, 1419, 257, 1463, 294, 3387, 300, 311, 11, 300, 311, 3571, 281, 6997, 11, 51102, 51102, 457, 1062, 300, 1463, 294, 1062, 312, 38823, 294, 512, 3331, 300, 1463, 294, 1062, 767, 406, 51416, 51416, 11257, 264, 1874, 291, 1062, 11, 1062, 1477, 281, 291, 1242, 1520, 76, 770, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1483708294955167, "compression_ratio": 1.731958762886598, "no_caption_prob": 5.2250659791752696e-05}, {"id": 413, "seek": 243090, "start": 2437.46, "end": 2445.6600000000003, "text": " opponent's queen, if you can, you are having a stand in goal that's, that's easier to determine,", "tokens": [50364, 1520, 13963, 11, 411, 300, 311, 439, 291, 1127, 466, 13, 583, 294, 341, 415, 374, 3142, 295, 1382, 281, 747, 264, 50692, 50692, 10620, 311, 12206, 11, 498, 291, 393, 11, 291, 366, 1419, 257, 1463, 294, 3387, 300, 311, 11, 300, 311, 3571, 281, 6997, 11, 51102, 51102, 457, 1062, 300, 1463, 294, 1062, 312, 38823, 294, 512, 3331, 300, 1463, 294, 1062, 767, 406, 51416, 51416, 11257, 264, 1874, 291, 1062, 11, 1062, 1477, 281, 291, 1242, 1520, 76, 770, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1483708294955167, "compression_ratio": 1.731958762886598, "no_caption_prob": 5.2250659791752696e-05}, {"id": 414, "seek": 243090, "start": 2445.6600000000003, "end": 2451.94, "text": " but might that stand in might be flawed in some cases that stand in might actually not", "tokens": [50364, 1520, 13963, 11, 411, 300, 311, 439, 291, 1127, 466, 13, 583, 294, 341, 415, 374, 3142, 295, 1382, 281, 747, 264, 50692, 50692, 10620, 311, 12206, 11, 498, 291, 393, 11, 291, 366, 1419, 257, 1463, 294, 3387, 300, 311, 11, 300, 311, 3571, 281, 6997, 11, 51102, 51102, 457, 1062, 300, 1463, 294, 1062, 312, 38823, 294, 512, 3331, 300, 1463, 294, 1062, 767, 406, 51416, 51416, 11257, 264, 1874, 291, 1062, 11, 1062, 1477, 281, 291, 1242, 1520, 76, 770, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1483708294955167, "compression_ratio": 1.731958762886598, "no_caption_prob": 5.2250659791752696e-05}, {"id": 415, "seek": 243090, "start": 2451.94, "end": 2455.14, "text": " yield the result you might, might lead to you getting checkmated.", "tokens": [50364, 1520, 13963, 11, 411, 300, 311, 439, 291, 1127, 466, 13, 583, 294, 341, 415, 374, 3142, 295, 1382, 281, 747, 264, 50692, 50692, 10620, 311, 12206, 11, 498, 291, 393, 11, 291, 366, 1419, 257, 1463, 294, 3387, 300, 311, 11, 300, 311, 3571, 281, 6997, 11, 51102, 51102, 457, 1062, 300, 1463, 294, 1062, 312, 38823, 294, 512, 3331, 300, 1463, 294, 1062, 767, 406, 51416, 51416, 11257, 264, 1874, 291, 1062, 11, 1062, 1477, 281, 291, 1242, 1520, 76, 770, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1483708294955167, "compression_ratio": 1.731958762886598, "no_caption_prob": 5.2250659791752696e-05}, {"id": 416, "seek": 245514, "start": 2455.14, "end": 2462.62, "text": " Yeah. So yeah, in chess, I think computers are powerful enough to basically compute every", "tokens": [50364, 865, 13, 407, 1338, 11, 294, 24122, 11, 286, 519, 10807, 366, 4005, 1547, 281, 1936, 14722, 633, 50738, 50738, 1944, 1286, 294, 257, 1216, 420, 1998, 281, 572, 11, 572, 11, 1391, 406, 13, 51016, 51016, 814, 434, 767, 406, 13, 814, 767, 10687, 257, 688, 322, 415, 374, 6006, 281, 411, 582, 2613, 264, 4230, 570, 51331, 51331, 309, 311, 364, 37330, 4194, 4230, 13, 407, 309, 309, 311, 14908, 13785, 13, 407, 10807, 393, 380, 51712, 51712, 2028, 365, 300, 11, 457, 436, 11, 370, 436, 360, 362, 281, 764, 415, 374, 6006, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.14556206807051555, "compression_ratio": 1.6581196581196582, "no_caption_prob": 3.426757757551968e-05}, {"id": 417, "seek": 245514, "start": 2462.62, "end": 2468.18, "text": " possible move in a game or close to no, no, probably not.", "tokens": [50364, 865, 13, 407, 1338, 11, 294, 24122, 11, 286, 519, 10807, 366, 4005, 1547, 281, 1936, 14722, 633, 50738, 50738, 1944, 1286, 294, 257, 1216, 420, 1998, 281, 572, 11, 572, 11, 1391, 406, 13, 51016, 51016, 814, 434, 767, 406, 13, 814, 767, 10687, 257, 688, 322, 415, 374, 6006, 281, 411, 582, 2613, 264, 4230, 570, 51331, 51331, 309, 311, 364, 37330, 4194, 4230, 13, 407, 309, 309, 311, 14908, 13785, 13, 407, 10807, 393, 380, 51712, 51712, 2028, 365, 300, 11, 457, 436, 11, 370, 436, 360, 362, 281, 764, 415, 374, 6006, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.14556206807051555, "compression_ratio": 1.6581196581196582, "no_caption_prob": 3.426757757551968e-05}, {"id": 418, "seek": 245514, "start": 2468.18, "end": 2474.48, "text": " They're actually not. They actually rely a lot on heuristics to like prune the tree because", "tokens": [50364, 865, 13, 407, 1338, 11, 294, 24122, 11, 286, 519, 10807, 366, 4005, 1547, 281, 1936, 14722, 633, 50738, 50738, 1944, 1286, 294, 257, 1216, 420, 1998, 281, 572, 11, 572, 11, 1391, 406, 13, 51016, 51016, 814, 434, 767, 406, 13, 814, 767, 10687, 257, 688, 322, 415, 374, 6006, 281, 411, 582, 2613, 264, 4230, 570, 51331, 51331, 309, 311, 364, 37330, 4194, 4230, 13, 407, 309, 309, 311, 14908, 13785, 13, 407, 10807, 393, 380, 51712, 51712, 2028, 365, 300, 11, 457, 436, 11, 370, 436, 360, 362, 281, 764, 415, 374, 6006, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.14556206807051555, "compression_ratio": 1.6581196581196582, "no_caption_prob": 3.426757757551968e-05}, {"id": 419, "seek": 245514, "start": 2474.48, "end": 2482.1, "text": " it's an exponentially growing tree. So it it's approaching infinite. So computers can't", "tokens": [50364, 865, 13, 407, 1338, 11, 294, 24122, 11, 286, 519, 10807, 366, 4005, 1547, 281, 1936, 14722, 633, 50738, 50738, 1944, 1286, 294, 257, 1216, 420, 1998, 281, 572, 11, 572, 11, 1391, 406, 13, 51016, 51016, 814, 434, 767, 406, 13, 814, 767, 10687, 257, 688, 322, 415, 374, 6006, 281, 411, 582, 2613, 264, 4230, 570, 51331, 51331, 309, 311, 364, 37330, 4194, 4230, 13, 407, 309, 309, 311, 14908, 13785, 13, 407, 10807, 393, 380, 51712, 51712, 2028, 365, 300, 11, 457, 436, 11, 370, 436, 360, 362, 281, 764, 415, 374, 6006, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.14556206807051555, "compression_ratio": 1.6581196581196582, "no_caption_prob": 3.426757757551968e-05}, {"id": 420, "seek": 245514, "start": 2482.1, "end": 2484.7, "text": " deal with that, but they, so they do have to use heuristics.", "tokens": [50364, 865, 13, 407, 1338, 11, 294, 24122, 11, 286, 519, 10807, 366, 4005, 1547, 281, 1936, 14722, 633, 50738, 50738, 1944, 1286, 294, 257, 1216, 420, 1998, 281, 572, 11, 572, 11, 1391, 406, 13, 51016, 51016, 814, 434, 767, 406, 13, 814, 767, 10687, 257, 688, 322, 415, 374, 6006, 281, 411, 582, 2613, 264, 4230, 570, 51331, 51331, 309, 311, 364, 37330, 4194, 4230, 13, 407, 309, 309, 311, 14908, 13785, 13, 407, 10807, 393, 380, 51712, 51712, 2028, 365, 300, 11, 457, 436, 11, 370, 436, 360, 362, 281, 764, 415, 374, 6006, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.14556206807051555, "compression_ratio": 1.6581196581196582, "no_caption_prob": 3.426757757551968e-05}, {"id": 421, "seek": 248470, "start": 2484.7, "end": 2493.14, "text": " Yes. They do use heuristics and do prune at all things. Yeah. Let's imagine they could", "tokens": [50364, 1079, 13, 814, 360, 764, 415, 374, 6006, 293, 360, 582, 2613, 412, 439, 721, 13, 865, 13, 961, 311, 3811, 436, 727, 50786, 50786, 14722, 633, 1389, 13, 1396, 1936, 309, 575, 2176, 1589, 13, 1779, 13, 407, 2035, 309, 311, 51146, 51146, 516, 281, 3154, 666, 853, 11, 309, 311, 516, 281, 589, 13, 759, 309, 311, 4748, 5567, 11, 597, 294, 341, 1389, 51483, 51483, 309, 307, 11, 550, 291, 393, 3470, 264, 9952, 538, 1566, 11, 731, 11, 341, 307, 2745, 257, 1578, 1286, 13, 1779, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.24306052358526933, "compression_ratio": 1.5526315789473684, "no_caption_prob": 6.302449037320912e-05}, {"id": 422, "seek": 248470, "start": 2493.14, "end": 2500.3399999999997, "text": " compute every case. Then basically it has perfect information. Right. So whatever it's", "tokens": [50364, 1079, 13, 814, 360, 764, 415, 374, 6006, 293, 360, 582, 2613, 412, 439, 721, 13, 865, 13, 961, 311, 3811, 436, 727, 50786, 50786, 14722, 633, 1389, 13, 1396, 1936, 309, 575, 2176, 1589, 13, 1779, 13, 407, 2035, 309, 311, 51146, 51146, 516, 281, 3154, 666, 853, 11, 309, 311, 516, 281, 589, 13, 759, 309, 311, 4748, 5567, 11, 597, 294, 341, 1389, 51483, 51483, 309, 307, 11, 550, 291, 393, 3470, 264, 9952, 538, 1566, 11, 731, 11, 341, 307, 2745, 257, 1578, 1286, 13, 1779, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.24306052358526933, "compression_ratio": 1.5526315789473684, "no_caption_prob": 6.302449037320912e-05}, {"id": 423, "seek": 248470, "start": 2500.3399999999997, "end": 2507.08, "text": " going to feed into try, it's going to work. If it's slightly limited, which in this case", "tokens": [50364, 1079, 13, 814, 360, 764, 415, 374, 6006, 293, 360, 582, 2613, 412, 439, 721, 13, 865, 13, 961, 311, 3811, 436, 727, 50786, 50786, 14722, 633, 1389, 13, 1396, 1936, 309, 575, 2176, 1589, 13, 1779, 13, 407, 2035, 309, 311, 51146, 51146, 516, 281, 3154, 666, 853, 11, 309, 311, 516, 281, 589, 13, 759, 309, 311, 4748, 5567, 11, 597, 294, 341, 1389, 51483, 51483, 309, 307, 11, 550, 291, 393, 3470, 264, 9952, 538, 1566, 11, 731, 11, 341, 307, 2745, 257, 1578, 1286, 13, 1779, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.24306052358526933, "compression_ratio": 1.5526315789473684, "no_caption_prob": 6.302449037320912e-05}, {"id": 424, "seek": 248470, "start": 2507.08, "end": 2513.54, "text": " it is, then you can improve the logic by saying, well, this is obviously a bad move. Right.", "tokens": [50364, 1079, 13, 814, 360, 764, 415, 374, 6006, 293, 360, 582, 2613, 412, 439, 721, 13, 865, 13, 961, 311, 3811, 436, 727, 50786, 50786, 14722, 633, 1389, 13, 1396, 1936, 309, 575, 2176, 1589, 13, 1779, 13, 407, 2035, 309, 311, 51146, 51146, 516, 281, 3154, 666, 853, 11, 309, 311, 516, 281, 589, 13, 759, 309, 311, 4748, 5567, 11, 597, 294, 341, 1389, 51483, 51483, 309, 307, 11, 550, 291, 393, 3470, 264, 9952, 538, 1566, 11, 731, 11, 341, 307, 2745, 257, 1578, 1286, 13, 1779, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.24306052358526933, "compression_ratio": 1.5526315789473684, "no_caption_prob": 6.302449037320912e-05}, {"id": 425, "seek": 251354, "start": 2513.54, "end": 2519.54, "text": " And you can remove some complexity. You can now rely on those. It's going to be a presumption.", "tokens": [50364, 400, 291, 393, 4159, 512, 14024, 13, 509, 393, 586, 10687, 322, 729, 13, 467, 311, 516, 281, 312, 257, 18028, 1695, 13, 50664, 50664, 865, 13, 1779, 13, 7587, 13, 407, 562, 300, 3574, 484, 281, 312, 2085, 11, 291, 434, 516, 281, 362, 5324, 50864, 50864, 3542, 813, 5176, 13, 583, 562, 729, 366, 2074, 11, 550, 291, 483, 512, 1481, 3542, 13, 51132, 51132, 1779, 13, 407, 307, 300, 15513, 281, 362, 300, 294, 364, 2699, 76, 3131, 4978, 420, 360, 291, 853, 281, 5042, 51454, 51454, 300, 30, 1407, 362, 18028, 9799, 30, 865, 13, 1407, 362, 281, 362, 51624, 51624, 415, 374, 6006, 570, 498, 309, 311, 257, 4978, 11, 309, 311, 3585, 291, 309, 311, 364, 6713, 13, 821, 311, 572, 636, 281, 28362, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1550662481962745, "compression_ratio": 1.7625899280575539, "no_caption_prob": 1.4970912161516026e-05}, {"id": 426, "seek": 251354, "start": 2519.54, "end": 2523.54, "text": " Yeah. Right. Exactly. So when that turned out to be wrong, you're going to have worse", "tokens": [50364, 400, 291, 393, 4159, 512, 14024, 13, 509, 393, 586, 10687, 322, 729, 13, 467, 311, 516, 281, 312, 257, 18028, 1695, 13, 50664, 50664, 865, 13, 1779, 13, 7587, 13, 407, 562, 300, 3574, 484, 281, 312, 2085, 11, 291, 434, 516, 281, 362, 5324, 50864, 50864, 3542, 813, 5176, 13, 583, 562, 729, 366, 2074, 11, 550, 291, 483, 512, 1481, 3542, 13, 51132, 51132, 1779, 13, 407, 307, 300, 15513, 281, 362, 300, 294, 364, 2699, 76, 3131, 4978, 420, 360, 291, 853, 281, 5042, 51454, 51454, 300, 30, 1407, 362, 18028, 9799, 30, 865, 13, 1407, 362, 281, 362, 51624, 51624, 415, 374, 6006, 570, 498, 309, 311, 257, 4978, 11, 309, 311, 3585, 291, 309, 311, 364, 6713, 13, 821, 311, 572, 636, 281, 28362, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1550662481962745, "compression_ratio": 1.7625899280575539, "no_caption_prob": 1.4970912161516026e-05}, {"id": 427, "seek": 251354, "start": 2523.54, "end": 2528.9, "text": " results than expected. But when those are true, then you get some nice results.", "tokens": [50364, 400, 291, 393, 4159, 512, 14024, 13, 509, 393, 586, 10687, 322, 729, 13, 467, 311, 516, 281, 312, 257, 18028, 1695, 13, 50664, 50664, 865, 13, 1779, 13, 7587, 13, 407, 562, 300, 3574, 484, 281, 312, 2085, 11, 291, 434, 516, 281, 362, 5324, 50864, 50864, 3542, 813, 5176, 13, 583, 562, 729, 366, 2074, 11, 550, 291, 483, 512, 1481, 3542, 13, 51132, 51132, 1779, 13, 407, 307, 300, 15513, 281, 362, 300, 294, 364, 2699, 76, 3131, 4978, 420, 360, 291, 853, 281, 5042, 51454, 51454, 300, 30, 1407, 362, 18028, 9799, 30, 865, 13, 1407, 362, 281, 362, 51624, 51624, 415, 374, 6006, 570, 498, 309, 311, 257, 4978, 11, 309, 311, 3585, 291, 309, 311, 364, 6713, 13, 821, 311, 572, 636, 281, 28362, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1550662481962745, "compression_ratio": 1.7625899280575539, "no_caption_prob": 1.4970912161516026e-05}, {"id": 428, "seek": 251354, "start": 2528.9, "end": 2535.34, "text": " Right. So is that acceptable to have that in an Elm review rule or do you try to avoid", "tokens": [50364, 400, 291, 393, 4159, 512, 14024, 13, 509, 393, 586, 10687, 322, 729, 13, 467, 311, 516, 281, 312, 257, 18028, 1695, 13, 50664, 50664, 865, 13, 1779, 13, 7587, 13, 407, 562, 300, 3574, 484, 281, 312, 2085, 11, 291, 434, 516, 281, 362, 5324, 50864, 50864, 3542, 813, 5176, 13, 583, 562, 729, 366, 2074, 11, 550, 291, 483, 512, 1481, 3542, 13, 51132, 51132, 1779, 13, 407, 307, 300, 15513, 281, 362, 300, 294, 364, 2699, 76, 3131, 4978, 420, 360, 291, 853, 281, 5042, 51454, 51454, 300, 30, 1407, 362, 18028, 9799, 30, 865, 13, 1407, 362, 281, 362, 51624, 51624, 415, 374, 6006, 570, 498, 309, 311, 257, 4978, 11, 309, 311, 3585, 291, 309, 311, 364, 6713, 13, 821, 311, 572, 636, 281, 28362, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1550662481962745, "compression_ratio": 1.7625899280575539, "no_caption_prob": 1.4970912161516026e-05}, {"id": 429, "seek": 251354, "start": 2535.34, "end": 2538.74, "text": " that? To have presumptions? Yeah. To have to have", "tokens": [50364, 400, 291, 393, 4159, 512, 14024, 13, 509, 393, 586, 10687, 322, 729, 13, 467, 311, 516, 281, 312, 257, 18028, 1695, 13, 50664, 50664, 865, 13, 1779, 13, 7587, 13, 407, 562, 300, 3574, 484, 281, 312, 2085, 11, 291, 434, 516, 281, 362, 5324, 50864, 50864, 3542, 813, 5176, 13, 583, 562, 729, 366, 2074, 11, 550, 291, 483, 512, 1481, 3542, 13, 51132, 51132, 1779, 13, 407, 307, 300, 15513, 281, 362, 300, 294, 364, 2699, 76, 3131, 4978, 420, 360, 291, 853, 281, 5042, 51454, 51454, 300, 30, 1407, 362, 18028, 9799, 30, 865, 13, 1407, 362, 281, 362, 51624, 51624, 415, 374, 6006, 570, 498, 309, 311, 257, 4978, 11, 309, 311, 3585, 291, 309, 311, 364, 6713, 13, 821, 311, 572, 636, 281, 28362, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1550662481962745, "compression_ratio": 1.7625899280575539, "no_caption_prob": 1.4970912161516026e-05}, {"id": 430, "seek": 251354, "start": 2538.74, "end": 2542.7, "text": " heuristics because if it's a rule, it's telling you it's an error. There's no way to disable", "tokens": [50364, 400, 291, 393, 4159, 512, 14024, 13, 509, 393, 586, 10687, 322, 729, 13, 467, 311, 516, 281, 312, 257, 18028, 1695, 13, 50664, 50664, 865, 13, 1779, 13, 7587, 13, 407, 562, 300, 3574, 484, 281, 312, 2085, 11, 291, 434, 516, 281, 362, 5324, 50864, 50864, 3542, 813, 5176, 13, 583, 562, 729, 366, 2074, 11, 550, 291, 483, 512, 1481, 3542, 13, 51132, 51132, 1779, 13, 407, 307, 300, 15513, 281, 362, 300, 294, 364, 2699, 76, 3131, 4978, 420, 360, 291, 853, 281, 5042, 51454, 51454, 300, 30, 1407, 362, 18028, 9799, 30, 865, 13, 1407, 362, 281, 362, 51624, 51624, 415, 374, 6006, 570, 498, 309, 311, 257, 4978, 11, 309, 311, 3585, 291, 309, 311, 364, 6713, 13, 821, 311, 572, 636, 281, 28362, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.1550662481962745, "compression_ratio": 1.7625899280575539, "no_caption_prob": 1.4970912161516026e-05}, {"id": 431, "seek": 254270, "start": 2542.7, "end": 2547.7799999999997, "text": " it. And in some cases you might say, well, actually in this case it's okay. Like a code", "tokens": [50364, 309, 13, 400, 294, 512, 3331, 291, 1062, 584, 11, 731, 11, 767, 294, 341, 1389, 309, 311, 1392, 13, 1743, 257, 3089, 50618, 50618, 4316, 11, 411, 11, 731, 11, 309, 311, 257, 3089, 4316, 498, 291, 362, 257, 2445, 300, 311, 670, 257, 1629, 1230, 50854, 50854, 295, 3876, 11, 457, 1310, 294, 341, 1729, 5197, 11, 309, 311, 2489, 13, 51096, 51096, 865, 13, 682, 2699, 76, 3131, 11, 286, 576, 11, 731, 11, 294, 2674, 286, 576, 584, 309, 5946, 322, 264, 4924, 507, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.15829647105673086, "compression_ratio": 1.5853658536585367, "no_caption_prob": 7.254166848724708e-05}, {"id": 432, "seek": 254270, "start": 2547.7799999999997, "end": 2552.5, "text": " smell, like, well, it's a code smell if you have a function that's over a certain number", "tokens": [50364, 309, 13, 400, 294, 512, 3331, 291, 1062, 584, 11, 731, 11, 767, 294, 341, 1389, 309, 311, 1392, 13, 1743, 257, 3089, 50618, 50618, 4316, 11, 411, 11, 731, 11, 309, 311, 257, 3089, 4316, 498, 291, 362, 257, 2445, 300, 311, 670, 257, 1629, 1230, 50854, 50854, 295, 3876, 11, 457, 1310, 294, 341, 1729, 5197, 11, 309, 311, 2489, 13, 51096, 51096, 865, 13, 682, 2699, 76, 3131, 11, 286, 576, 11, 731, 11, 294, 2674, 286, 576, 584, 309, 5946, 322, 264, 4924, 507, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.15829647105673086, "compression_ratio": 1.5853658536585367, "no_caption_prob": 7.254166848724708e-05}, {"id": 433, "seek": 254270, "start": 2552.5, "end": 2557.3399999999997, "text": " of lines, but maybe in this particular instance, it's fine.", "tokens": [50364, 309, 13, 400, 294, 512, 3331, 291, 1062, 584, 11, 731, 11, 767, 294, 341, 1389, 309, 311, 1392, 13, 1743, 257, 3089, 50618, 50618, 4316, 11, 411, 11, 731, 11, 309, 311, 257, 3089, 4316, 498, 291, 362, 257, 2445, 300, 311, 670, 257, 1629, 1230, 50854, 50854, 295, 3876, 11, 457, 1310, 294, 341, 1729, 5197, 11, 309, 311, 2489, 13, 51096, 51096, 865, 13, 682, 2699, 76, 3131, 11, 286, 576, 11, 731, 11, 294, 2674, 286, 576, 584, 309, 5946, 322, 264, 4924, 507, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.15829647105673086, "compression_ratio": 1.5853658536585367, "no_caption_prob": 7.254166848724708e-05}, {"id": 434, "seek": 254270, "start": 2557.3399999999997, "end": 2565.74, "text": " Yeah. In Elm review, I would, well, in general I would say it depends on the criticality", "tokens": [50364, 309, 13, 400, 294, 512, 3331, 291, 1062, 584, 11, 731, 11, 767, 294, 341, 1389, 309, 311, 1392, 13, 1743, 257, 3089, 50618, 50618, 4316, 11, 411, 11, 731, 11, 309, 311, 257, 3089, 4316, 498, 291, 362, 257, 2445, 300, 311, 670, 257, 1629, 1230, 50854, 50854, 295, 3876, 11, 457, 1310, 294, 341, 1729, 5197, 11, 309, 311, 2489, 13, 51096, 51096, 865, 13, 682, 2699, 76, 3131, 11, 286, 576, 11, 731, 11, 294, 2674, 286, 576, 584, 309, 5946, 322, 264, 4924, 507, 51516, 51516], "temperature": 0.0, "avg_logprob": -0.15829647105673086, "compression_ratio": 1.5853658536585367, "no_caption_prob": 7.254166848724708e-05}, {"id": 435, "seek": 256574, "start": 2565.74, "end": 2573.4599999999996, "text": " of the issue and how much you want to force it. For instance, the unused CSS classes rule,", "tokens": [50364, 295, 264, 2734, 293, 577, 709, 291, 528, 281, 3464, 309, 13, 1171, 5197, 11, 264, 44383, 24387, 5359, 4978, 11, 50750, 50750, 300, 307, 1936, 411, 516, 281, 2275, 7908, 35127, 538, 1566, 11, 1338, 11, 291, 820, 764, 51058, 51058, 257, 20411, 11, 457, 382, 321, 848, 11, 309, 311, 516, 281, 312, 544, 295, 257, 25534, 813, 257, 7908, 3353, 51355, 51355, 5413, 322, 577, 291, 3920, 309, 13, 1779, 13, 865, 13, 1436, 321, 500, 380, 11, 370, 729, 4800, 770, 4474, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.13209717008802627, "compression_ratio": 1.5414847161572052, "no_caption_prob": 6.962181942071766e-06}, {"id": 436, "seek": 256574, "start": 2573.4599999999996, "end": 2579.62, "text": " that is basically like going to report false positives by saying, yeah, you should use", "tokens": [50364, 295, 264, 2734, 293, 577, 709, 291, 528, 281, 3464, 309, 13, 1171, 5197, 11, 264, 44383, 24387, 5359, 4978, 11, 50750, 50750, 300, 307, 1936, 411, 516, 281, 2275, 7908, 35127, 538, 1566, 11, 1338, 11, 291, 820, 764, 51058, 51058, 257, 20411, 11, 457, 382, 321, 848, 11, 309, 311, 516, 281, 312, 544, 295, 257, 25534, 813, 257, 7908, 3353, 51355, 51355, 5413, 322, 577, 291, 3920, 309, 13, 1779, 13, 865, 13, 1436, 321, 500, 380, 11, 370, 729, 4800, 770, 4474, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.13209717008802627, "compression_ratio": 1.5414847161572052, "no_caption_prob": 6.962181942071766e-06}, {"id": 437, "seek": 256574, "start": 2579.62, "end": 2585.56, "text": " a literal, but as we said, it's going to be more of a constraint than a false positive", "tokens": [50364, 295, 264, 2734, 293, 577, 709, 291, 528, 281, 3464, 309, 13, 1171, 5197, 11, 264, 44383, 24387, 5359, 4978, 11, 50750, 50750, 300, 307, 1936, 411, 516, 281, 2275, 7908, 35127, 538, 1566, 11, 1338, 11, 291, 820, 764, 51058, 51058, 257, 20411, 11, 457, 382, 321, 848, 11, 309, 311, 516, 281, 312, 544, 295, 257, 25534, 813, 257, 7908, 3353, 51355, 51355, 5413, 322, 577, 291, 3920, 309, 13, 1779, 13, 865, 13, 1436, 321, 500, 380, 11, 370, 729, 4800, 770, 4474, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.13209717008802627, "compression_ratio": 1.5414847161572052, "no_caption_prob": 6.962181942071766e-06}, {"id": 438, "seek": 256574, "start": 2585.56, "end": 2590.4199999999996, "text": " depending on how you frame it. Right. Yeah. Because we don't, so those opinionated rules", "tokens": [50364, 295, 264, 2734, 293, 577, 709, 291, 528, 281, 3464, 309, 13, 1171, 5197, 11, 264, 44383, 24387, 5359, 4978, 11, 50750, 50750, 300, 307, 1936, 411, 516, 281, 2275, 7908, 35127, 538, 1566, 11, 1338, 11, 291, 820, 764, 51058, 51058, 257, 20411, 11, 457, 382, 321, 848, 11, 309, 311, 516, 281, 312, 544, 295, 257, 25534, 813, 257, 7908, 3353, 51355, 51355, 5413, 322, 577, 291, 3920, 309, 13, 1779, 13, 865, 13, 1436, 321, 500, 380, 11, 370, 729, 4800, 770, 4474, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.13209717008802627, "compression_ratio": 1.5414847161572052, "no_caption_prob": 6.962181942071766e-06}, {"id": 439, "seek": 259042, "start": 2590.42, "end": 2597.54, "text": " are fine if you opt in to those, I think. You need to be, to have the whole team accept", "tokens": [50364, 366, 2489, 498, 291, 2427, 294, 281, 729, 11, 286, 519, 13, 509, 643, 281, 312, 11, 281, 362, 264, 1379, 1469, 3241, 50720, 50720, 341, 4978, 294, 452, 4800, 11, 411, 439, 295, 264, 4474, 11, 457, 294, 2674, 2699, 76, 3131, 1177, 380, 2089, 26258, 51096, 51096, 2663, 13, 407, 300, 311, 983, 412, 1935, 439, 295, 264, 4474, 300, 286, 4114, 3928, 281, 352, 281, 11659, 3030, 51430, 51430, 7908, 40019, 420, 7908, 35127, 13, 1779, 13, 7156, 295, 415, 374, 6006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15951624976264106, "compression_ratio": 1.572093023255814, "no_caption_prob": 5.5619722843403e-05}, {"id": 440, "seek": 259042, "start": 2597.54, "end": 2605.06, "text": " this rule in my opinion, like all of the rules, but in general Elm review doesn't allow ignoring", "tokens": [50364, 366, 2489, 498, 291, 2427, 294, 281, 729, 11, 286, 519, 13, 509, 643, 281, 312, 11, 281, 362, 264, 1379, 1469, 3241, 50720, 50720, 341, 4978, 294, 452, 4800, 11, 411, 439, 295, 264, 4474, 11, 457, 294, 2674, 2699, 76, 3131, 1177, 380, 2089, 26258, 51096, 51096, 2663, 13, 407, 300, 311, 983, 412, 1935, 439, 295, 264, 4474, 300, 286, 4114, 3928, 281, 352, 281, 11659, 3030, 51430, 51430, 7908, 40019, 420, 7908, 35127, 13, 1779, 13, 7156, 295, 415, 374, 6006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15951624976264106, "compression_ratio": 1.572093023255814, "no_caption_prob": 5.5619722843403e-05}, {"id": 441, "seek": 259042, "start": 2605.06, "end": 2611.7400000000002, "text": " issues. So that's why at least all of the rules that I wrote tend to go to lean towards", "tokens": [50364, 366, 2489, 498, 291, 2427, 294, 281, 729, 11, 286, 519, 13, 509, 643, 281, 312, 11, 281, 362, 264, 1379, 1469, 3241, 50720, 50720, 341, 4978, 294, 452, 4800, 11, 411, 439, 295, 264, 4474, 11, 457, 294, 2674, 2699, 76, 3131, 1177, 380, 2089, 26258, 51096, 51096, 2663, 13, 407, 300, 311, 983, 412, 1935, 439, 295, 264, 4474, 300, 286, 4114, 3928, 281, 352, 281, 11659, 3030, 51430, 51430, 7908, 40019, 420, 7908, 35127, 13, 1779, 13, 7156, 295, 415, 374, 6006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15951624976264106, "compression_ratio": 1.572093023255814, "no_caption_prob": 5.5619722843403e-05}, {"id": 442, "seek": 259042, "start": 2611.7400000000002, "end": 2617.3, "text": " false negatives or false positives. Right. Instead of heuristics.", "tokens": [50364, 366, 2489, 498, 291, 2427, 294, 281, 729, 11, 286, 519, 13, 509, 643, 281, 312, 11, 281, 362, 264, 1379, 1469, 3241, 50720, 50720, 341, 4978, 294, 452, 4800, 11, 411, 439, 295, 264, 4474, 11, 457, 294, 2674, 2699, 76, 3131, 1177, 380, 2089, 26258, 51096, 51096, 2663, 13, 407, 300, 311, 983, 412, 1935, 439, 295, 264, 4474, 300, 286, 4114, 3928, 281, 352, 281, 11659, 3030, 51430, 51430, 7908, 40019, 420, 7908, 35127, 13, 1779, 13, 7156, 295, 415, 374, 6006, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15951624976264106, "compression_ratio": 1.572093023255814, "no_caption_prob": 5.5619722843403e-05}, {"id": 443, "seek": 261730, "start": 2617.3, "end": 2623.7000000000003, "text": " Using heuristics, like basically using presumptions. I see. Well, I don't know, so I'm going to", "tokens": [50364, 11142, 415, 374, 6006, 11, 411, 1936, 1228, 18028, 9799, 13, 286, 536, 13, 1042, 11, 286, 500, 380, 458, 11, 370, 286, 478, 516, 281, 50684, 50684, 747, 264, 7955, 300, 286, 458, 486, 1477, 281, 561, 406, 1242, 7908, 35127, 13, 509, 393, 1910, 50980, 50980, 309, 382, 257, 2199, 415, 374, 3142, 294, 257, 636, 11, 286, 519, 13, 407, 1936, 257, 415, 374, 3142, 307, 577, 291, 2826, 51392, 51392, 281, 829, 512, 721, 666, 264, 7908, 3353, 7719, 420, 2826, 281, 829, 512, 721, 666, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10464125491203145, "compression_ratio": 1.733009708737864, "no_caption_prob": 4.133478432777338e-05}, {"id": 444, "seek": 261730, "start": 2623.7000000000003, "end": 2629.6200000000003, "text": " take the route that I know will lead to people not getting false positives. You can view", "tokens": [50364, 11142, 415, 374, 6006, 11, 411, 1936, 1228, 18028, 9799, 13, 286, 536, 13, 1042, 11, 286, 500, 380, 458, 11, 370, 286, 478, 516, 281, 50684, 50684, 747, 264, 7955, 300, 286, 458, 486, 1477, 281, 561, 406, 1242, 7908, 35127, 13, 509, 393, 1910, 50980, 50980, 309, 382, 257, 2199, 415, 374, 3142, 294, 257, 636, 11, 286, 519, 13, 407, 1936, 257, 415, 374, 3142, 307, 577, 291, 2826, 51392, 51392, 281, 829, 512, 721, 666, 264, 7908, 3353, 7719, 420, 2826, 281, 829, 512, 721, 666, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10464125491203145, "compression_ratio": 1.733009708737864, "no_caption_prob": 4.133478432777338e-05}, {"id": 445, "seek": 261730, "start": 2629.6200000000003, "end": 2637.86, "text": " it as a simple heuristic in a way, I think. So basically a heuristic is how you choose", "tokens": [50364, 11142, 415, 374, 6006, 11, 411, 1936, 1228, 18028, 9799, 13, 286, 536, 13, 1042, 11, 286, 500, 380, 458, 11, 370, 286, 478, 516, 281, 50684, 50684, 747, 264, 7955, 300, 286, 458, 486, 1477, 281, 561, 406, 1242, 7908, 35127, 13, 509, 393, 1910, 50980, 50980, 309, 382, 257, 2199, 415, 374, 3142, 294, 257, 636, 11, 286, 519, 13, 407, 1936, 257, 415, 374, 3142, 307, 577, 291, 2826, 51392, 51392, 281, 829, 512, 721, 666, 264, 7908, 3353, 7719, 420, 2826, 281, 829, 512, 721, 666, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10464125491203145, "compression_ratio": 1.733009708737864, "no_caption_prob": 4.133478432777338e-05}, {"id": 446, "seek": 261730, "start": 2637.86, "end": 2643.38, "text": " to put some things into the false positive category or choose to put some things into", "tokens": [50364, 11142, 415, 374, 6006, 11, 411, 1936, 1228, 18028, 9799, 13, 286, 536, 13, 1042, 11, 286, 500, 380, 458, 11, 370, 286, 478, 516, 281, 50684, 50684, 747, 264, 7955, 300, 286, 458, 486, 1477, 281, 561, 406, 1242, 7908, 35127, 13, 509, 393, 1910, 50980, 50980, 309, 382, 257, 2199, 415, 374, 3142, 294, 257, 636, 11, 286, 519, 13, 407, 1936, 257, 415, 374, 3142, 307, 577, 291, 2826, 51392, 51392, 281, 829, 512, 721, 666, 264, 7908, 3353, 7719, 420, 2826, 281, 829, 512, 721, 666, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10464125491203145, "compression_ratio": 1.733009708737864, "no_caption_prob": 4.133478432777338e-05}, {"id": 447, "seek": 264338, "start": 2643.38, "end": 2648.98, "text": " the false negative category. That heuristic is what determines that. Yeah, I'd say so.", "tokens": [50364, 264, 7908, 3671, 7719, 13, 663, 415, 374, 3142, 307, 437, 24799, 300, 13, 865, 11, 286, 1116, 584, 370, 13, 50644, 50644, 400, 286, 519, 300, 2699, 76, 3131, 534, 575, 341, 21033, 281, 352, 3030, 7908, 40019, 544, 50916, 50916, 813, 661, 3873, 570, 294, 729, 661, 3873, 291, 393, 28362, 264, 13603, 562, 291, 362, 7908, 51156, 51156, 35127, 13, 400, 300, 611, 11606, 577, 561, 2464, 729, 4474, 420, 562, 436, 2826, 281, 2464, 51482, 51482, 293, 9528, 729, 4474, 13, 1436, 286, 458, 498, 286, 500, 380, 362, 28362, 3053, 11, 286, 458, 300, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.14042808014212302, "compression_ratio": 1.7294117647058824, "no_caption_prob": 1.028942278935574e-05}, {"id": 448, "seek": 264338, "start": 2648.98, "end": 2654.42, "text": " And I think that Elm review really has this stance to go towards false negatives more", "tokens": [50364, 264, 7908, 3671, 7719, 13, 663, 415, 374, 3142, 307, 437, 24799, 300, 13, 865, 11, 286, 1116, 584, 370, 13, 50644, 50644, 400, 286, 519, 300, 2699, 76, 3131, 534, 575, 341, 21033, 281, 352, 3030, 7908, 40019, 544, 50916, 50916, 813, 661, 3873, 570, 294, 729, 661, 3873, 291, 393, 28362, 264, 13603, 562, 291, 362, 7908, 51156, 51156, 35127, 13, 400, 300, 611, 11606, 577, 561, 2464, 729, 4474, 420, 562, 436, 2826, 281, 2464, 51482, 51482, 293, 9528, 729, 4474, 13, 1436, 286, 458, 498, 286, 500, 380, 362, 28362, 3053, 11, 286, 458, 300, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.14042808014212302, "compression_ratio": 1.7294117647058824, "no_caption_prob": 1.028942278935574e-05}, {"id": 449, "seek": 264338, "start": 2654.42, "end": 2659.2200000000003, "text": " than other tools because in those other tools you can disable the errors when you have false", "tokens": [50364, 264, 7908, 3671, 7719, 13, 663, 415, 374, 3142, 307, 437, 24799, 300, 13, 865, 11, 286, 1116, 584, 370, 13, 50644, 50644, 400, 286, 519, 300, 2699, 76, 3131, 534, 575, 341, 21033, 281, 352, 3030, 7908, 40019, 544, 50916, 50916, 813, 661, 3873, 570, 294, 729, 661, 3873, 291, 393, 28362, 264, 13603, 562, 291, 362, 7908, 51156, 51156, 35127, 13, 400, 300, 611, 11606, 577, 561, 2464, 729, 4474, 420, 562, 436, 2826, 281, 2464, 51482, 51482, 293, 9528, 729, 4474, 13, 1436, 286, 458, 498, 286, 500, 380, 362, 28362, 3053, 11, 286, 458, 300, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.14042808014212302, "compression_ratio": 1.7294117647058824, "no_caption_prob": 1.028942278935574e-05}, {"id": 450, "seek": 264338, "start": 2659.2200000000003, "end": 2665.7400000000002, "text": " positives. And that also impacts how people write those rules or when they choose to write", "tokens": [50364, 264, 7908, 3671, 7719, 13, 663, 415, 374, 3142, 307, 437, 24799, 300, 13, 865, 11, 286, 1116, 584, 370, 13, 50644, 50644, 400, 286, 519, 300, 2699, 76, 3131, 534, 575, 341, 21033, 281, 352, 3030, 7908, 40019, 544, 50916, 50916, 813, 661, 3873, 570, 294, 729, 661, 3873, 291, 393, 28362, 264, 13603, 562, 291, 362, 7908, 51156, 51156, 35127, 13, 400, 300, 611, 11606, 577, 561, 2464, 729, 4474, 420, 562, 436, 2826, 281, 2464, 51482, 51482, 293, 9528, 729, 4474, 13, 1436, 286, 458, 498, 286, 500, 380, 362, 28362, 3053, 11, 286, 458, 300, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.14042808014212302, "compression_ratio": 1.7294117647058824, "no_caption_prob": 1.028942278935574e-05}, {"id": 451, "seek": 264338, "start": 2665.7400000000002, "end": 2670.42, "text": " and enable those rules. Because I know if I don't have disable comments, I know that", "tokens": [50364, 264, 7908, 3671, 7719, 13, 663, 415, 374, 3142, 307, 437, 24799, 300, 13, 865, 11, 286, 1116, 584, 370, 13, 50644, 50644, 400, 286, 519, 300, 2699, 76, 3131, 534, 575, 341, 21033, 281, 352, 3030, 7908, 40019, 544, 50916, 50916, 813, 661, 3873, 570, 294, 729, 661, 3873, 291, 393, 28362, 264, 13603, 562, 291, 362, 7908, 51156, 51156, 35127, 13, 400, 300, 611, 11606, 577, 561, 2464, 729, 4474, 420, 562, 436, 2826, 281, 2464, 51482, 51482, 293, 9528, 729, 4474, 13, 1436, 286, 458, 498, 286, 500, 380, 362, 28362, 3053, 11, 286, 458, 300, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.14042808014212302, "compression_ratio": 1.7294117647058824, "no_caption_prob": 1.028942278935574e-05}, {"id": 452, "seek": 267042, "start": 2670.42, "end": 2675.14, "text": " if I report false positives, it's going to be very annoying. And I know that if some", "tokens": [50364, 498, 286, 2275, 7908, 35127, 11, 309, 311, 516, 281, 312, 588, 11304, 13, 400, 286, 458, 300, 498, 512, 50600, 50600, 4978, 300, 7122, 411, 257, 3089, 4316, 11, 597, 307, 406, 1009, 1578, 562, 309, 7122, 364, 6713, 50896, 50896, 293, 4659, 380, 11, 731, 11, 561, 366, 516, 281, 312, 15470, 13, 407, 498, 286, 362, 257, 636, 281, 980, 552, 411, 11, 51217, 51217, 1767, 2464, 264, 3089, 341, 636, 294, 1668, 281, 406, 362, 341, 7908, 3353, 11, 550, 300, 311, 51496, 51496, 15513, 286, 519, 13, 759, 286, 500, 380, 11, 550, 286, 478, 445, 406, 516, 281, 2464, 264, 4978, 13, 1779, 13, 400, 406, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10381196285116262, "compression_ratio": 1.7301587301587302, "no_caption_prob": 1.7778133042156696e-05}, {"id": 453, "seek": 267042, "start": 2675.14, "end": 2681.06, "text": " rule that reports like a code smell, which is not always bad when it reports an error", "tokens": [50364, 498, 286, 2275, 7908, 35127, 11, 309, 311, 516, 281, 312, 588, 11304, 13, 400, 286, 458, 300, 498, 512, 50600, 50600, 4978, 300, 7122, 411, 257, 3089, 4316, 11, 597, 307, 406, 1009, 1578, 562, 309, 7122, 364, 6713, 50896, 50896, 293, 4659, 380, 11, 731, 11, 561, 366, 516, 281, 312, 15470, 13, 407, 498, 286, 362, 257, 636, 281, 980, 552, 411, 11, 51217, 51217, 1767, 2464, 264, 3089, 341, 636, 294, 1668, 281, 406, 362, 341, 7908, 3353, 11, 550, 300, 311, 51496, 51496, 15513, 286, 519, 13, 759, 286, 500, 380, 11, 550, 286, 478, 445, 406, 516, 281, 2464, 264, 4978, 13, 1779, 13, 400, 406, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10381196285116262, "compression_ratio": 1.7301587301587302, "no_caption_prob": 1.7778133042156696e-05}, {"id": 454, "seek": 267042, "start": 2681.06, "end": 2687.48, "text": " and shouldn't, well, people are going to be blocked. So if I have a way to tell them like,", "tokens": [50364, 498, 286, 2275, 7908, 35127, 11, 309, 311, 516, 281, 312, 588, 11304, 13, 400, 286, 458, 300, 498, 512, 50600, 50600, 4978, 300, 7122, 411, 257, 3089, 4316, 11, 597, 307, 406, 1009, 1578, 562, 309, 7122, 364, 6713, 50896, 50896, 293, 4659, 380, 11, 731, 11, 561, 366, 516, 281, 312, 15470, 13, 407, 498, 286, 362, 257, 636, 281, 980, 552, 411, 11, 51217, 51217, 1767, 2464, 264, 3089, 341, 636, 294, 1668, 281, 406, 362, 341, 7908, 3353, 11, 550, 300, 311, 51496, 51496, 15513, 286, 519, 13, 759, 286, 500, 380, 11, 550, 286, 478, 445, 406, 516, 281, 2464, 264, 4978, 13, 1779, 13, 400, 406, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10381196285116262, "compression_ratio": 1.7301587301587302, "no_caption_prob": 1.7778133042156696e-05}, {"id": 455, "seek": 267042, "start": 2687.48, "end": 2693.06, "text": " please write the code this way in order to not have this false positive, then that's", "tokens": [50364, 498, 286, 2275, 7908, 35127, 11, 309, 311, 516, 281, 312, 588, 11304, 13, 400, 286, 458, 300, 498, 512, 50600, 50600, 4978, 300, 7122, 411, 257, 3089, 4316, 11, 597, 307, 406, 1009, 1578, 562, 309, 7122, 364, 6713, 50896, 50896, 293, 4659, 380, 11, 731, 11, 561, 366, 516, 281, 312, 15470, 13, 407, 498, 286, 362, 257, 636, 281, 980, 552, 411, 11, 51217, 51217, 1767, 2464, 264, 3089, 341, 636, 294, 1668, 281, 406, 362, 341, 7908, 3353, 11, 550, 300, 311, 51496, 51496, 15513, 286, 519, 13, 759, 286, 500, 380, 11, 550, 286, 478, 445, 406, 516, 281, 2464, 264, 4978, 13, 1779, 13, 400, 406, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10381196285116262, "compression_ratio": 1.7301587301587302, "no_caption_prob": 1.7778133042156696e-05}, {"id": 456, "seek": 267042, "start": 2693.06, "end": 2699.02, "text": " acceptable I think. If I don't, then I'm just not going to write the rule. Right. And not", "tokens": [50364, 498, 286, 2275, 7908, 35127, 11, 309, 311, 516, 281, 312, 588, 11304, 13, 400, 286, 458, 300, 498, 512, 50600, 50600, 4978, 300, 7122, 411, 257, 3089, 4316, 11, 597, 307, 406, 1009, 1578, 562, 309, 7122, 364, 6713, 50896, 50896, 293, 4659, 380, 11, 731, 11, 561, 366, 516, 281, 312, 15470, 13, 407, 498, 286, 362, 257, 636, 281, 980, 552, 411, 11, 51217, 51217, 1767, 2464, 264, 3089, 341, 636, 294, 1668, 281, 406, 362, 341, 7908, 3353, 11, 550, 300, 311, 51496, 51496, 15513, 286, 519, 13, 759, 286, 500, 380, 11, 550, 286, 478, 445, 406, 516, 281, 2464, 264, 4978, 13, 1779, 13, 400, 406, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10381196285116262, "compression_ratio": 1.7301587301587302, "no_caption_prob": 1.7778133042156696e-05}, {"id": 457, "seek": 269902, "start": 2699.02, "end": 2707.06, "text": " writing a rule is basically 100% false negatives. Right, right, right. Right. Right. Although", "tokens": [50364, 3579, 257, 4978, 307, 1936, 2319, 4, 7908, 40019, 13, 1779, 11, 558, 11, 558, 13, 1779, 13, 1779, 13, 5780, 50766, 50766, 291, 727, 9695, 300, 2319, 4, 7908, 40019, 3417, 588, 819, 813, 11803, 4, 420, 502, 4, 7908, 51141, 51141, 40019, 570, 291, 458, 291, 445, 393, 380, 10687, 322, 2319, 4, 7908, 40019, 13, 13813, 291, 51382, 51382, 500, 380, 458, 498, 309, 311, 502, 4, 7908, 40019, 13, 509, 500, 380, 458, 498, 291, 393, 10687, 322, 300, 420, 406, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.12392400105794271, "compression_ratio": 1.9171270718232045, "no_caption_prob": 2.586659866210539e-05}, {"id": 458, "seek": 269902, "start": 2707.06, "end": 2714.56, "text": " you could argue that 100% false negatives feels very different than 99% or 1% false", "tokens": [50364, 3579, 257, 4978, 307, 1936, 2319, 4, 7908, 40019, 13, 1779, 11, 558, 11, 558, 13, 1779, 13, 1779, 13, 5780, 50766, 50766, 291, 727, 9695, 300, 2319, 4, 7908, 40019, 3417, 588, 819, 813, 11803, 4, 420, 502, 4, 7908, 51141, 51141, 40019, 570, 291, 458, 291, 445, 393, 380, 10687, 322, 2319, 4, 7908, 40019, 13, 13813, 291, 51382, 51382, 500, 380, 458, 498, 309, 311, 502, 4, 7908, 40019, 13, 509, 500, 380, 458, 498, 291, 393, 10687, 322, 300, 420, 406, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.12392400105794271, "compression_ratio": 1.9171270718232045, "no_caption_prob": 2.586659866210539e-05}, {"id": 459, "seek": 269902, "start": 2714.56, "end": 2719.38, "text": " negatives because you know you just can't rely on 100% false negatives. Whereas you", "tokens": [50364, 3579, 257, 4978, 307, 1936, 2319, 4, 7908, 40019, 13, 1779, 11, 558, 11, 558, 13, 1779, 13, 1779, 13, 5780, 50766, 50766, 291, 727, 9695, 300, 2319, 4, 7908, 40019, 3417, 588, 819, 813, 11803, 4, 420, 502, 4, 7908, 51141, 51141, 40019, 570, 291, 458, 291, 445, 393, 380, 10687, 322, 2319, 4, 7908, 40019, 13, 13813, 291, 51382, 51382, 500, 380, 458, 498, 309, 311, 502, 4, 7908, 40019, 13, 509, 500, 380, 458, 498, 291, 393, 10687, 322, 300, 420, 406, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.12392400105794271, "compression_ratio": 1.9171270718232045, "no_caption_prob": 2.586659866210539e-05}, {"id": 460, "seek": 269902, "start": 2719.38, "end": 2725.62, "text": " don't know if it's 1% false negatives. You don't know if you can rely on that or not.", "tokens": [50364, 3579, 257, 4978, 307, 1936, 2319, 4, 7908, 40019, 13, 1779, 11, 558, 11, 558, 13, 1779, 13, 1779, 13, 5780, 50766, 50766, 291, 727, 9695, 300, 2319, 4, 7908, 40019, 3417, 588, 819, 813, 11803, 4, 420, 502, 4, 7908, 51141, 51141, 40019, 570, 291, 458, 291, 445, 393, 380, 10687, 322, 2319, 4, 7908, 40019, 13, 13813, 291, 51382, 51382, 500, 380, 458, 498, 309, 311, 502, 4, 7908, 40019, 13, 509, 500, 380, 458, 498, 291, 393, 10687, 322, 300, 420, 406, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.12392400105794271, "compression_ratio": 1.9171270718232045, "no_caption_prob": 2.586659866210539e-05}, {"id": 461, "seek": 272562, "start": 2725.62, "end": 2732.42, "text": " But other tools like ESLint and they have a lot more rules that have the potential for", "tokens": [50364, 583, 661, 3873, 411, 12564, 43, 686, 293, 436, 362, 257, 688, 544, 4474, 300, 362, 264, 3995, 337, 50704, 50704, 7908, 35127, 293, 436, 434, 4888, 1392, 570, 291, 393, 28362, 552, 13, 407, 286, 534, 50910, 50910, 519, 300, 1419, 264, 3485, 281, 28362, 13603, 11606, 264, 636, 300, 321, 2826, 597, 4474, 51314, 51314, 281, 2464, 13, 865, 13, 400, 382, 291, 584, 11, 309, 5946, 322, 264, 4924, 507, 295, 264, 2734, 498, 309, 307, 257, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.18223304975600468, "compression_ratio": 1.608294930875576, "no_caption_prob": 2.1112044123583473e-05}, {"id": 462, "seek": 272562, "start": 2732.42, "end": 2736.54, "text": " false positives and they're considered okay because you can disable them. So I really", "tokens": [50364, 583, 661, 3873, 411, 12564, 43, 686, 293, 436, 362, 257, 688, 544, 4474, 300, 362, 264, 3995, 337, 50704, 50704, 7908, 35127, 293, 436, 434, 4888, 1392, 570, 291, 393, 28362, 552, 13, 407, 286, 534, 50910, 50910, 519, 300, 1419, 264, 3485, 281, 28362, 13603, 11606, 264, 636, 300, 321, 2826, 597, 4474, 51314, 51314, 281, 2464, 13, 865, 13, 400, 382, 291, 584, 11, 309, 5946, 322, 264, 4924, 507, 295, 264, 2734, 498, 309, 307, 257, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.18223304975600468, "compression_ratio": 1.608294930875576, "no_caption_prob": 2.1112044123583473e-05}, {"id": 463, "seek": 272562, "start": 2736.54, "end": 2744.62, "text": " think that having the ability to disable errors impacts the way that we choose which rules", "tokens": [50364, 583, 661, 3873, 411, 12564, 43, 686, 293, 436, 362, 257, 688, 544, 4474, 300, 362, 264, 3995, 337, 50704, 50704, 7908, 35127, 293, 436, 434, 4888, 1392, 570, 291, 393, 28362, 552, 13, 407, 286, 534, 50910, 50910, 519, 300, 1419, 264, 3485, 281, 28362, 13603, 11606, 264, 636, 300, 321, 2826, 597, 4474, 51314, 51314, 281, 2464, 13, 865, 13, 400, 382, 291, 584, 11, 309, 5946, 322, 264, 4924, 507, 295, 264, 2734, 498, 309, 307, 257, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.18223304975600468, "compression_ratio": 1.608294930875576, "no_caption_prob": 2.1112044123583473e-05}, {"id": 464, "seek": 272562, "start": 2744.62, "end": 2752.1, "text": " to write. Yeah. And as you say, it depends on the criticality of the issue if it is a", "tokens": [50364, 583, 661, 3873, 411, 12564, 43, 686, 293, 436, 362, 257, 688, 544, 4474, 300, 362, 264, 3995, 337, 50704, 50704, 7908, 35127, 293, 436, 434, 4888, 1392, 570, 291, 393, 28362, 552, 13, 407, 286, 534, 50910, 50910, 519, 300, 1419, 264, 3485, 281, 28362, 13603, 11606, 264, 636, 300, 321, 2826, 597, 4474, 51314, 51314, 281, 2464, 13, 865, 13, 400, 382, 291, 584, 11, 309, 5946, 322, 264, 4924, 507, 295, 264, 2734, 498, 309, 307, 257, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.18223304975600468, "compression_ratio": 1.608294930875576, "no_caption_prob": 2.1112044123583473e-05}, {"id": 465, "seek": 275210, "start": 2752.1, "end": 2758.46, "text": " constraint that you really depend on for something that you're doing, then it's going to change", "tokens": [50364, 25534, 300, 291, 534, 5672, 322, 337, 746, 300, 291, 434, 884, 11, 550, 309, 311, 516, 281, 1319, 50682, 50682, 264, 33400, 456, 13, 865, 11, 498, 309, 311, 281, 2275, 364, 2734, 300, 291, 458, 337, 988, 486, 8252, 50970, 50970, 428, 3861, 11, 457, 309, 1062, 312, 2085, 11, 550, 1338, 11, 309, 307, 1391, 746, 291, 528, 281, 51258, 51258, 24825, 412, 264, 2063, 295, 885, 257, 857, 11304, 2171, 13, 407, 561, 486, 362, 281, 909, 281, 264, 51568, 51568, 28362, 3053, 420, 28132, 264, 3089, 294, 257, 636, 300, 264, 287, 5106, 486, 1223, 300, 341, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.17961367121282615, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.7778282199287787e-05}, {"id": 466, "seek": 275210, "start": 2758.46, "end": 2764.22, "text": " the calculus there. Yeah, if it's to report an issue that you know for sure will crash", "tokens": [50364, 25534, 300, 291, 534, 5672, 322, 337, 746, 300, 291, 434, 884, 11, 550, 309, 311, 516, 281, 1319, 50682, 50682, 264, 33400, 456, 13, 865, 11, 498, 309, 311, 281, 2275, 364, 2734, 300, 291, 458, 337, 988, 486, 8252, 50970, 50970, 428, 3861, 11, 457, 309, 1062, 312, 2085, 11, 550, 1338, 11, 309, 307, 1391, 746, 291, 528, 281, 51258, 51258, 24825, 412, 264, 2063, 295, 885, 257, 857, 11304, 2171, 13, 407, 561, 486, 362, 281, 909, 281, 264, 51568, 51568, 28362, 3053, 420, 28132, 264, 3089, 294, 257, 636, 300, 264, 287, 5106, 486, 1223, 300, 341, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.17961367121282615, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.7778282199287787e-05}, {"id": 467, "seek": 275210, "start": 2764.22, "end": 2769.98, "text": " your application, but it might be wrong, then yeah, it is probably something you want to", "tokens": [50364, 25534, 300, 291, 534, 5672, 322, 337, 746, 300, 291, 434, 884, 11, 550, 309, 311, 516, 281, 1319, 50682, 50682, 264, 33400, 456, 13, 865, 11, 498, 309, 311, 281, 2275, 364, 2734, 300, 291, 458, 337, 988, 486, 8252, 50970, 50970, 428, 3861, 11, 457, 309, 1062, 312, 2085, 11, 550, 1338, 11, 309, 307, 1391, 746, 291, 528, 281, 51258, 51258, 24825, 412, 264, 2063, 295, 885, 257, 857, 11304, 2171, 13, 407, 561, 486, 362, 281, 909, 281, 264, 51568, 51568, 28362, 3053, 420, 28132, 264, 3089, 294, 257, 636, 300, 264, 287, 5106, 486, 1223, 300, 341, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.17961367121282615, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.7778282199287787e-05}, {"id": 468, "seek": 275210, "start": 2769.98, "end": 2776.18, "text": " enforce at the cost of being a bit annoying sometimes. So people will have to add to the", "tokens": [50364, 25534, 300, 291, 534, 5672, 322, 337, 746, 300, 291, 434, 884, 11, 550, 309, 311, 516, 281, 1319, 50682, 50682, 264, 33400, 456, 13, 865, 11, 498, 309, 311, 281, 2275, 364, 2734, 300, 291, 458, 337, 988, 486, 8252, 50970, 50970, 428, 3861, 11, 457, 309, 1062, 312, 2085, 11, 550, 1338, 11, 309, 307, 1391, 746, 291, 528, 281, 51258, 51258, 24825, 412, 264, 2063, 295, 885, 257, 857, 11304, 2171, 13, 407, 561, 486, 362, 281, 909, 281, 264, 51568, 51568, 28362, 3053, 420, 28132, 264, 3089, 294, 257, 636, 300, 264, 287, 5106, 486, 1223, 300, 341, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.17961367121282615, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.7778282199287787e-05}, {"id": 469, "seek": 275210, "start": 2776.18, "end": 2780.46, "text": " disable comments or rewrite the code in a way that the linter will understand that this", "tokens": [50364, 25534, 300, 291, 534, 5672, 322, 337, 746, 300, 291, 434, 884, 11, 550, 309, 311, 516, 281, 1319, 50682, 50682, 264, 33400, 456, 13, 865, 11, 498, 309, 311, 281, 2275, 364, 2734, 300, 291, 458, 337, 988, 486, 8252, 50970, 50970, 428, 3861, 11, 457, 309, 1062, 312, 2085, 11, 550, 1338, 11, 309, 307, 1391, 746, 291, 528, 281, 51258, 51258, 24825, 412, 264, 2063, 295, 885, 257, 857, 11304, 2171, 13, 407, 561, 486, 362, 281, 909, 281, 264, 51568, 51568, 28362, 3053, 420, 28132, 264, 3089, 294, 257, 636, 300, 264, 287, 5106, 486, 1223, 300, 341, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.17961367121282615, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.7778282199287787e-05}, {"id": 470, "seek": 278046, "start": 2780.46, "end": 2788.18, "text": " is not a problem. But yeah, I haven't found any critical problems like that for Elm Review", "tokens": [50364, 307, 406, 257, 1154, 13, 583, 1338, 11, 286, 2378, 380, 1352, 604, 4924, 2740, 411, 300, 337, 2699, 76, 19954, 50750, 50750, 370, 1400, 11, 286, 519, 13, 407, 1338, 13, 50882, 50882, 407, 291, 2049, 2152, 300, 3089, 3095, 5215, 307, 1333, 295, 264, 551, 300, 1669, 257, 688, 295, 4474, 51300, 51300, 406, 3163, 3579, 13, 400, 286, 2441, 485, 407, 510, 311, 264, 3380, 15258, 300, 321, 645, 1417, 466, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.1748026334322416, "compression_ratio": 1.517766497461929, "no_caption_prob": 1.6700949345249683e-05}, {"id": 471, "seek": 278046, "start": 2788.18, "end": 2790.82, "text": " so far, I think. So yeah.", "tokens": [50364, 307, 406, 257, 1154, 13, 583, 1338, 11, 286, 2378, 380, 1352, 604, 4924, 2740, 411, 300, 337, 2699, 76, 19954, 50750, 50750, 370, 1400, 11, 286, 519, 13, 407, 1338, 13, 50882, 50882, 407, 291, 2049, 2152, 300, 3089, 3095, 5215, 307, 1333, 295, 264, 551, 300, 1669, 257, 688, 295, 4474, 51300, 51300, 406, 3163, 3579, 13, 400, 286, 2441, 485, 407, 510, 311, 264, 3380, 15258, 300, 321, 645, 1417, 466, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.1748026334322416, "compression_ratio": 1.517766497461929, "no_caption_prob": 1.6700949345249683e-05}, {"id": 472, "seek": 278046, "start": 2790.82, "end": 2799.18, "text": " So you often mention that code flow analysis is sort of the thing that makes a lot of rules", "tokens": [50364, 307, 406, 257, 1154, 13, 583, 1338, 11, 286, 2378, 380, 1352, 604, 4924, 2740, 411, 300, 337, 2699, 76, 19954, 50750, 50750, 370, 1400, 11, 286, 519, 13, 407, 1338, 13, 50882, 50882, 407, 291, 2049, 2152, 300, 3089, 3095, 5215, 307, 1333, 295, 264, 551, 300, 1669, 257, 688, 295, 4474, 51300, 51300, 406, 3163, 3579, 13, 400, 286, 2441, 485, 407, 510, 311, 264, 3380, 15258, 300, 321, 645, 1417, 466, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.1748026334322416, "compression_ratio": 1.517766497461929, "no_caption_prob": 1.6700949345249683e-05}, {"id": 473, "seek": 278046, "start": 2799.18, "end": 2807.1, "text": " not worth writing. And I wonder... So here's the original tweet that we were talking about", "tokens": [50364, 307, 406, 257, 1154, 13, 583, 1338, 11, 286, 2378, 380, 1352, 604, 4924, 2740, 411, 300, 337, 2699, 76, 19954, 50750, 50750, 370, 1400, 11, 286, 519, 13, 407, 1338, 13, 50882, 50882, 407, 291, 2049, 2152, 300, 3089, 3095, 5215, 307, 1333, 295, 264, 551, 300, 1669, 257, 688, 295, 4474, 51300, 51300, 406, 3163, 3579, 13, 400, 286, 2441, 485, 407, 510, 311, 264, 3380, 15258, 300, 321, 645, 1417, 466, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.1748026334322416, "compression_ratio": 1.517766497461929, "no_caption_prob": 1.6700949345249683e-05}, {"id": 474, "seek": 280710, "start": 2807.1, "end": 2811.98, "text": " earlier where you kind of talked about missing information being the root cause. So you said,", "tokens": [50364, 3071, 689, 291, 733, 295, 2825, 466, 5361, 1589, 885, 264, 5593, 3082, 13, 407, 291, 848, 11, 50608, 50608, 5361, 1589, 307, 264, 5593, 3082, 295, 7908, 35127, 17330, 40019, 294, 22896, 1559, 13, 5349, 544, 50850, 50850, 1589, 281, 915, 544, 2740, 293, 312, 1570, 2085, 412, 264, 912, 565, 13, 1012, 30, 1485, 11, 264, 287, 5106, 51098, 51098, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 400, 732, 11, 8650, 820, 7694, 8546, 51382, 51382, 4122, 13, 407, 472, 11, 264, 287, 5106, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 1743, 437, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1242980770036286, "compression_ratio": 1.978448275862069, "no_caption_prob": 2.507048520783428e-05}, {"id": 475, "seek": 280710, "start": 2811.98, "end": 2816.8199999999997, "text": " missing information is the root cause of false positives slash negatives in linters. Add more", "tokens": [50364, 3071, 689, 291, 733, 295, 2825, 466, 5361, 1589, 885, 264, 5593, 3082, 13, 407, 291, 848, 11, 50608, 50608, 5361, 1589, 307, 264, 5593, 3082, 295, 7908, 35127, 17330, 40019, 294, 22896, 1559, 13, 5349, 544, 50850, 50850, 1589, 281, 915, 544, 2740, 293, 312, 1570, 2085, 412, 264, 912, 565, 13, 1012, 30, 1485, 11, 264, 287, 5106, 51098, 51098, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 400, 732, 11, 8650, 820, 7694, 8546, 51382, 51382, 4122, 13, 407, 472, 11, 264, 287, 5106, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 1743, 437, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1242980770036286, "compression_ratio": 1.978448275862069, "no_caption_prob": 2.507048520783428e-05}, {"id": 476, "seek": 280710, "start": 2816.8199999999997, "end": 2821.7799999999997, "text": " information to find more problems and be less wrong at the same time. How? One, the linter", "tokens": [50364, 3071, 689, 291, 733, 295, 2825, 466, 5361, 1589, 885, 264, 5593, 3082, 13, 407, 291, 848, 11, 50608, 50608, 5361, 1589, 307, 264, 5593, 3082, 295, 7908, 35127, 17330, 40019, 294, 22896, 1559, 13, 5349, 544, 50850, 50850, 1589, 281, 915, 544, 2740, 293, 312, 1570, 2085, 412, 264, 912, 565, 13, 1012, 30, 1485, 11, 264, 287, 5106, 51098, 51098, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 400, 732, 11, 8650, 820, 7694, 8546, 51382, 51382, 4122, 13, 407, 472, 11, 264, 287, 5106, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 1743, 437, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1242980770036286, "compression_ratio": 1.978448275862069, "no_caption_prob": 2.507048520783428e-05}, {"id": 477, "seek": 280710, "start": 2821.7799999999997, "end": 2827.46, "text": " should provide more information to rule authors. And two, languages should restrict dynamic", "tokens": [50364, 3071, 689, 291, 733, 295, 2825, 466, 5361, 1589, 885, 264, 5593, 3082, 13, 407, 291, 848, 11, 50608, 50608, 5361, 1589, 307, 264, 5593, 3082, 295, 7908, 35127, 17330, 40019, 294, 22896, 1559, 13, 5349, 544, 50850, 50850, 1589, 281, 915, 544, 2740, 293, 312, 1570, 2085, 412, 264, 912, 565, 13, 1012, 30, 1485, 11, 264, 287, 5106, 51098, 51098, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 400, 732, 11, 8650, 820, 7694, 8546, 51382, 51382, 4122, 13, 407, 472, 11, 264, 287, 5106, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 1743, 437, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1242980770036286, "compression_ratio": 1.978448275862069, "no_caption_prob": 2.507048520783428e-05}, {"id": 478, "seek": 280710, "start": 2827.46, "end": 2833.54, "text": " features. So one, the linter should provide more information to rule authors. Like what?", "tokens": [50364, 3071, 689, 291, 733, 295, 2825, 466, 5361, 1589, 885, 264, 5593, 3082, 13, 407, 291, 848, 11, 50608, 50608, 5361, 1589, 307, 264, 5593, 3082, 295, 7908, 35127, 17330, 40019, 294, 22896, 1559, 13, 5349, 544, 50850, 50850, 1589, 281, 915, 544, 2740, 293, 312, 1570, 2085, 412, 264, 912, 565, 13, 1012, 30, 1485, 11, 264, 287, 5106, 51098, 51098, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 400, 732, 11, 8650, 820, 7694, 8546, 51382, 51382, 4122, 13, 407, 472, 11, 264, 287, 5106, 820, 2893, 544, 1589, 281, 4978, 16552, 13, 1743, 437, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1242980770036286, "compression_ratio": 1.978448275862069, "no_caption_prob": 2.507048520783428e-05}, {"id": 479, "seek": 283354, "start": 2833.54, "end": 2838.14, "text": " Like is there information that Elm Review could provide to rule authors to help them", "tokens": [50364, 1743, 307, 456, 1589, 300, 2699, 76, 19954, 727, 2893, 281, 4978, 16552, 281, 854, 552, 50594, 50594, 365, 3089, 3095, 5215, 294, 4500, 281, 264, 10088, 574, 1010, 3199, 321, 7152, 30, 1743, 15763, 50878, 50878, 15400, 2577, 498, 746, 14942, 281, 264, 912, 2158, 13, 51074, 51074, 865, 11, 337, 5197, 11, 1419, 10198, 1957, 13, 400, 286, 478, 2138, 1953, 466, 2098, 281, 652, 5215, 51358, 51358, 3571, 11, 597, 307, 294, 257, 636, 6530, 1589, 300, 576, 312, 1152, 281, 14722, 5911, 13, 2743, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.18039533143402428, "compression_ratio": 1.627906976744186, "no_caption_prob": 1.618727583263535e-05}, {"id": 480, "seek": 283354, "start": 2838.14, "end": 2843.82, "text": " with code flow analysis in addition to the module lookup table we discussed? Like comparing", "tokens": [50364, 1743, 307, 456, 1589, 300, 2699, 76, 19954, 727, 2893, 281, 4978, 16552, 281, 854, 552, 50594, 50594, 365, 3089, 3095, 5215, 294, 4500, 281, 264, 10088, 574, 1010, 3199, 321, 7152, 30, 1743, 15763, 50878, 50878, 15400, 2577, 498, 746, 14942, 281, 264, 912, 2158, 13, 51074, 51074, 865, 11, 337, 5197, 11, 1419, 10198, 1957, 13, 400, 286, 478, 2138, 1953, 466, 2098, 281, 652, 5215, 51358, 51358, 3571, 11, 597, 307, 294, 257, 636, 6530, 1589, 300, 576, 312, 1152, 281, 14722, 5911, 13, 2743, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.18039533143402428, "compression_ratio": 1.627906976744186, "no_caption_prob": 1.618727583263535e-05}, {"id": 481, "seek": 283354, "start": 2843.82, "end": 2847.74, "text": " references seeing if something refers to the same value.", "tokens": [50364, 1743, 307, 456, 1589, 300, 2699, 76, 19954, 727, 2893, 281, 4978, 16552, 281, 854, 552, 50594, 50594, 365, 3089, 3095, 5215, 294, 4500, 281, 264, 10088, 574, 1010, 3199, 321, 7152, 30, 1743, 15763, 50878, 50878, 15400, 2577, 498, 746, 14942, 281, 264, 912, 2158, 13, 51074, 51074, 865, 11, 337, 5197, 11, 1419, 10198, 1957, 13, 400, 286, 478, 2138, 1953, 466, 2098, 281, 652, 5215, 51358, 51358, 3571, 11, 597, 307, 294, 257, 636, 6530, 1589, 300, 576, 312, 1152, 281, 14722, 5911, 13, 2743, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.18039533143402428, "compression_ratio": 1.627906976744186, "no_caption_prob": 1.618727583263535e-05}, {"id": 482, "seek": 283354, "start": 2847.74, "end": 2853.42, "text": " Yeah, for instance, having aliases. And I'm definitely thinking about ways to make analysis", "tokens": [50364, 1743, 307, 456, 1589, 300, 2699, 76, 19954, 727, 2893, 281, 4978, 16552, 281, 854, 552, 50594, 50594, 365, 3089, 3095, 5215, 294, 4500, 281, 264, 10088, 574, 1010, 3199, 321, 7152, 30, 1743, 15763, 50878, 50878, 15400, 2577, 498, 746, 14942, 281, 264, 912, 2158, 13, 51074, 51074, 865, 11, 337, 5197, 11, 1419, 10198, 1957, 13, 400, 286, 478, 2138, 1953, 466, 2098, 281, 652, 5215, 51358, 51358, 3571, 11, 597, 307, 294, 257, 636, 6530, 1589, 300, 576, 312, 1152, 281, 14722, 5911, 13, 2743, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.18039533143402428, "compression_ratio": 1.627906976744186, "no_caption_prob": 1.618727583263535e-05}, {"id": 483, "seek": 283354, "start": 2853.42, "end": 2860.42, "text": " easier, which is in a way providing information that would be hard to compute otherwise. Also,", "tokens": [50364, 1743, 307, 456, 1589, 300, 2699, 76, 19954, 727, 2893, 281, 4978, 16552, 281, 854, 552, 50594, 50594, 365, 3089, 3095, 5215, 294, 4500, 281, 264, 10088, 574, 1010, 3199, 321, 7152, 30, 1743, 15763, 50878, 50878, 15400, 2577, 498, 746, 14942, 281, 264, 912, 2158, 13, 51074, 51074, 865, 11, 337, 5197, 11, 1419, 10198, 1957, 13, 400, 286, 478, 2138, 1953, 466, 2098, 281, 652, 5215, 51358, 51358, 3571, 11, 597, 307, 294, 257, 636, 6530, 1589, 300, 576, 312, 1152, 281, 14722, 5911, 13, 2743, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.18039533143402428, "compression_ratio": 1.627906976744186, "no_caption_prob": 1.618727583263535e-05}, {"id": 484, "seek": 286042, "start": 2860.42, "end": 2865.42, "text": " there's just simply plenty of information that you sometimes can't get. Not so much", "tokens": [50364, 456, 311, 445, 2935, 7140, 295, 1589, 300, 291, 2171, 393, 380, 483, 13, 1726, 370, 709, 50614, 50614, 365, 2699, 76, 19954, 82, 3602, 11, 457, 411, 337, 5197, 11, 787, 3938, 286, 3869, 264, 2445, 281, 976, 50984, 50984, 291, 264, 3991, 3100, 295, 257, 10088, 281, 12477, 13, 1436, 286, 1194, 561, 1062, 360, 512, 3657, 51308, 51308, 721, 365, 309, 13, 663, 311, 746, 300, 286, 390, 1596, 5338, 466, 11, 411, 561, 3346, 7981, 264, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.13548454784211658, "compression_ratio": 1.5194805194805194, "no_caption_prob": 6.708392174914479e-05}, {"id": 485, "seek": 286042, "start": 2865.42, "end": 2872.82, "text": " with Elm Reviews anymore, but like for instance, only recently I added the function to give", "tokens": [50364, 456, 311, 445, 2935, 7140, 295, 1589, 300, 291, 2171, 393, 380, 483, 13, 1726, 370, 709, 50614, 50614, 365, 2699, 76, 19954, 82, 3602, 11, 457, 411, 337, 5197, 11, 787, 3938, 286, 3869, 264, 2445, 281, 976, 50984, 50984, 291, 264, 3991, 3100, 295, 257, 10088, 281, 12477, 13, 1436, 286, 1194, 561, 1062, 360, 512, 3657, 51308, 51308, 721, 365, 309, 13, 663, 311, 746, 300, 286, 390, 1596, 5338, 466, 11, 411, 561, 3346, 7981, 264, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.13548454784211658, "compression_ratio": 1.5194805194805194, "no_caption_prob": 6.708392174914479e-05}, {"id": 486, "seek": 286042, "start": 2872.82, "end": 2879.3, "text": " you the file path of a module to analyze. Because I thought people might do some weird", "tokens": [50364, 456, 311, 445, 2935, 7140, 295, 1589, 300, 291, 2171, 393, 380, 483, 13, 1726, 370, 709, 50614, 50614, 365, 2699, 76, 19954, 82, 3602, 11, 457, 411, 337, 5197, 11, 787, 3938, 286, 3869, 264, 2445, 281, 976, 50984, 50984, 291, 264, 3991, 3100, 295, 257, 10088, 281, 12477, 13, 1436, 286, 1194, 561, 1062, 360, 512, 3657, 51308, 51308, 721, 365, 309, 13, 663, 311, 746, 300, 286, 390, 1596, 5338, 466, 11, 411, 561, 3346, 7981, 264, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.13548454784211658, "compression_ratio": 1.5194805194805194, "no_caption_prob": 6.708392174914479e-05}, {"id": 487, "seek": 286042, "start": 2879.3, "end": 2884.38, "text": " things with it. That's something that I was quite scared about, like people misusing the", "tokens": [50364, 456, 311, 445, 2935, 7140, 295, 1589, 300, 291, 2171, 393, 380, 483, 13, 1726, 370, 709, 50614, 50614, 365, 2699, 76, 19954, 82, 3602, 11, 457, 411, 337, 5197, 11, 787, 3938, 286, 3869, 264, 2445, 281, 976, 50984, 50984, 291, 264, 3991, 3100, 295, 257, 10088, 281, 12477, 13, 1436, 286, 1194, 561, 1062, 360, 512, 3657, 51308, 51308, 721, 365, 309, 13, 663, 311, 746, 300, 286, 390, 1596, 5338, 466, 11, 411, 561, 3346, 7981, 264, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.13548454784211658, "compression_ratio": 1.5194805194805194, "no_caption_prob": 6.708392174914479e-05}, {"id": 488, "seek": 288438, "start": 2884.38, "end": 2891.06, "text": " tool at the beginning. In practice, not so much. So now I make that available and people", "tokens": [50364, 2290, 412, 264, 2863, 13, 682, 3124, 11, 406, 370, 709, 13, 407, 586, 286, 652, 300, 2435, 293, 561, 50698, 50698, 360, 764, 300, 337, 512, 5821, 13, 286, 500, 380, 362, 604, 294, 452, 1378, 3602, 13, 583, 370, 1338, 11, 51062, 51062, 976, 439, 264, 1589, 300, 291, 393, 13, 400, 550, 1338, 11, 652, 309, 1944, 281, 12477, 14211, 51332, 51332, 294, 257, 18587, 636, 11, 411, 976, 2010, 38253, 11, 976, 264, 957, 10088, 1315, 293, 1338, 11, 2893, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1609973582354459, "compression_ratio": 1.5863636363636364, "no_caption_prob": 8.613045793026686e-05}, {"id": 489, "seek": 288438, "start": 2891.06, "end": 2898.34, "text": " do use that for some applications. I don't have any in my head anymore. But so yeah,", "tokens": [50364, 2290, 412, 264, 2863, 13, 682, 3124, 11, 406, 370, 709, 13, 407, 586, 286, 652, 300, 2435, 293, 561, 50698, 50698, 360, 764, 300, 337, 512, 5821, 13, 286, 500, 380, 362, 604, 294, 452, 1378, 3602, 13, 583, 370, 1338, 11, 51062, 51062, 976, 439, 264, 1589, 300, 291, 393, 13, 400, 550, 1338, 11, 652, 309, 1944, 281, 12477, 14211, 51332, 51332, 294, 257, 18587, 636, 11, 411, 976, 2010, 38253, 11, 976, 264, 957, 10088, 1315, 293, 1338, 11, 2893, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1609973582354459, "compression_ratio": 1.5863636363636364, "no_caption_prob": 8.613045793026686e-05}, {"id": 490, "seek": 288438, "start": 2898.34, "end": 2903.7400000000002, "text": " give all the information that you can. And then yeah, make it possible to analyze codes", "tokens": [50364, 2290, 412, 264, 2863, 13, 682, 3124, 11, 406, 370, 709, 13, 407, 586, 286, 652, 300, 2435, 293, 561, 50698, 50698, 360, 764, 300, 337, 512, 5821, 13, 286, 500, 380, 362, 604, 294, 452, 1378, 3602, 13, 583, 370, 1338, 11, 51062, 51062, 976, 439, 264, 1589, 300, 291, 393, 13, 400, 550, 1338, 11, 652, 309, 1944, 281, 12477, 14211, 51332, 51332, 294, 257, 18587, 636, 11, 411, 976, 2010, 38253, 11, 976, 264, 957, 10088, 1315, 293, 1338, 11, 2893, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1609973582354459, "compression_ratio": 1.5863636363636364, "no_caption_prob": 8.613045793026686e-05}, {"id": 491, "seek": 288438, "start": 2903.7400000000002, "end": 2911.1600000000003, "text": " in a simpler way, like give type inference, give the real module name and yeah, provide", "tokens": [50364, 2290, 412, 264, 2863, 13, 682, 3124, 11, 406, 370, 709, 13, 407, 586, 286, 652, 300, 2435, 293, 561, 50698, 50698, 360, 764, 300, 337, 512, 5821, 13, 286, 500, 380, 362, 604, 294, 452, 1378, 3602, 13, 583, 370, 1338, 11, 51062, 51062, 976, 439, 264, 1589, 300, 291, 393, 13, 400, 550, 1338, 11, 652, 309, 1944, 281, 12477, 14211, 51332, 51332, 294, 257, 18587, 636, 11, 411, 976, 2010, 38253, 11, 976, 264, 957, 10088, 1315, 293, 1338, 11, 2893, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1609973582354459, "compression_ratio": 1.5863636363636364, "no_caption_prob": 8.613045793026686e-05}, {"id": 492, "seek": 291116, "start": 2911.16, "end": 2918.8599999999997, "text": " code flow analysis tools. I know that ESLint has something like that, which I never understood.", "tokens": [50364, 3089, 3095, 5215, 3873, 13, 286, 458, 300, 12564, 43, 686, 575, 746, 411, 300, 11, 597, 286, 1128, 7320, 13, 50749, 50749, 407, 286, 500, 380, 458, 577, 300, 576, 589, 13, 286, 600, 611, 1194, 466, 885, 1075, 281, 2573, 484, 51053, 51053, 411, 11, 307, 341, 2158, 364, 419, 4609, 281, 264, 661, 2445, 30, 400, 300, 727, 312, 1880, 13, 663, 51515, 51515, 727, 3745, 544, 721, 13, 12151, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16971251903436121, "compression_ratio": 1.4782608695652173, "no_caption_prob": 4.610756514011882e-05}, {"id": 493, "seek": 291116, "start": 2918.8599999999997, "end": 2924.94, "text": " So I don't know how that would work. I've also thought about being able to figure out", "tokens": [50364, 3089, 3095, 5215, 3873, 13, 286, 458, 300, 12564, 43, 686, 575, 746, 411, 300, 11, 597, 286, 1128, 7320, 13, 50749, 50749, 407, 286, 500, 380, 458, 577, 300, 576, 589, 13, 286, 600, 611, 1194, 466, 885, 1075, 281, 2573, 484, 51053, 51053, 411, 11, 307, 341, 2158, 364, 419, 4609, 281, 264, 661, 2445, 30, 400, 300, 727, 312, 1880, 13, 663, 51515, 51515, 727, 3745, 544, 721, 13, 12151, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16971251903436121, "compression_ratio": 1.4782608695652173, "no_caption_prob": 4.610756514011882e-05}, {"id": 494, "seek": 291116, "start": 2924.94, "end": 2934.18, "text": " like, is this value an alias to the other function? And that could be interesting. That", "tokens": [50364, 3089, 3095, 5215, 3873, 13, 286, 458, 300, 12564, 43, 686, 575, 746, 411, 300, 11, 597, 286, 1128, 7320, 13, 50749, 50749, 407, 286, 500, 380, 458, 577, 300, 576, 589, 13, 286, 600, 611, 1194, 466, 885, 1075, 281, 2573, 484, 51053, 51053, 411, 11, 307, 341, 2158, 364, 419, 4609, 281, 264, 661, 2445, 30, 400, 300, 727, 312, 1880, 13, 663, 51515, 51515, 727, 3745, 544, 721, 13, 12151, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16971251903436121, "compression_ratio": 1.4782608695652173, "no_caption_prob": 4.610756514011882e-05}, {"id": 495, "seek": 291116, "start": 2934.18, "end": 2939.42, "text": " could catch more things. Definitely.", "tokens": [50364, 3089, 3095, 5215, 3873, 13, 286, 458, 300, 12564, 43, 686, 575, 746, 411, 300, 11, 597, 286, 1128, 7320, 13, 50749, 50749, 407, 286, 500, 380, 458, 577, 300, 576, 589, 13, 286, 600, 611, 1194, 466, 885, 1075, 281, 2573, 484, 51053, 51053, 411, 11, 307, 341, 2158, 364, 419, 4609, 281, 264, 661, 2445, 30, 400, 300, 727, 312, 1880, 13, 663, 51515, 51515, 727, 3745, 544, 721, 13, 12151, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16971251903436121, "compression_ratio": 1.4782608695652173, "no_caption_prob": 4.610756514011882e-05}, {"id": 496, "seek": 293942, "start": 2939.42, "end": 2946.26, "text": " For the performance question, I could imagine, I don't know if this would be a fruitful direction", "tokens": [50364, 1171, 264, 3389, 1168, 11, 286, 727, 3811, 11, 286, 500, 380, 458, 498, 341, 576, 312, 257, 49795, 3513, 50706, 50706, 412, 439, 11, 457, 286, 727, 3811, 257, 1715, 689, 291, 1333, 295, 362, 11, 767, 588, 709, 411, 50990, 50990, 264, 3531, 5102, 300, 9184, 390, 3585, 505, 466, 294, 527, 3531, 5102, 3500, 13, 23596, 11, 51260, 51260, 291, 458, 11, 264, 3531, 5102, 291, 362, 428, 11, 286, 393, 380, 1604, 437, 415, 1219, 309, 586, 11, 457, 51458, 51458, 428, 14581, 295, 613, 366, 264, 721, 286, 5672, 322, 337, 341, 3028, 13, 639, 307, 264, 1412, 286, 643, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.11503953066739168, "compression_ratio": 1.7110266159695817, "no_caption_prob": 2.014494384638965e-05}, {"id": 497, "seek": 293942, "start": 2946.26, "end": 2951.94, "text": " at all, but I could imagine a design where you sort of have, actually very much like", "tokens": [50364, 1171, 264, 3389, 1168, 11, 286, 727, 3811, 11, 286, 500, 380, 458, 498, 341, 576, 312, 257, 49795, 3513, 50706, 50706, 412, 439, 11, 457, 286, 727, 3811, 257, 1715, 689, 291, 1333, 295, 362, 11, 767, 588, 709, 411, 50990, 50990, 264, 3531, 5102, 300, 9184, 390, 3585, 505, 466, 294, 527, 3531, 5102, 3500, 13, 23596, 11, 51260, 51260, 291, 458, 11, 264, 3531, 5102, 291, 362, 428, 11, 286, 393, 380, 1604, 437, 415, 1219, 309, 586, 11, 457, 51458, 51458, 428, 14581, 295, 613, 366, 264, 721, 286, 5672, 322, 337, 341, 3028, 13, 639, 307, 264, 1412, 286, 643, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.11503953066739168, "compression_ratio": 1.7110266159695817, "no_caption_prob": 2.014494384638965e-05}, {"id": 498, "seek": 293942, "start": 2951.94, "end": 2957.34, "text": " the store pattern that Martin was telling us about in our store pattern episode. Essentially,", "tokens": [50364, 1171, 264, 3389, 1168, 11, 286, 727, 3811, 11, 286, 500, 380, 458, 498, 341, 576, 312, 257, 49795, 3513, 50706, 50706, 412, 439, 11, 457, 286, 727, 3811, 257, 1715, 689, 291, 1333, 295, 362, 11, 767, 588, 709, 411, 50990, 50990, 264, 3531, 5102, 300, 9184, 390, 3585, 505, 466, 294, 527, 3531, 5102, 3500, 13, 23596, 11, 51260, 51260, 291, 458, 11, 264, 3531, 5102, 291, 362, 428, 11, 286, 393, 380, 1604, 437, 415, 1219, 309, 586, 11, 457, 51458, 51458, 428, 14581, 295, 613, 366, 264, 721, 286, 5672, 322, 337, 341, 3028, 13, 639, 307, 264, 1412, 286, 643, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.11503953066739168, "compression_ratio": 1.7110266159695817, "no_caption_prob": 2.014494384638965e-05}, {"id": 499, "seek": 293942, "start": 2957.34, "end": 2961.3, "text": " you know, the store pattern you have your, I can't remember what he called it now, but", "tokens": [50364, 1171, 264, 3389, 1168, 11, 286, 727, 3811, 11, 286, 500, 380, 458, 498, 341, 576, 312, 257, 49795, 3513, 50706, 50706, 412, 439, 11, 457, 286, 727, 3811, 257, 1715, 689, 291, 1333, 295, 362, 11, 767, 588, 709, 411, 50990, 50990, 264, 3531, 5102, 300, 9184, 390, 3585, 505, 466, 294, 527, 3531, 5102, 3500, 13, 23596, 11, 51260, 51260, 291, 458, 11, 264, 3531, 5102, 291, 362, 428, 11, 286, 393, 380, 1604, 437, 415, 1219, 309, 586, 11, 457, 51458, 51458, 428, 14581, 295, 613, 366, 264, 721, 286, 5672, 322, 337, 341, 3028, 13, 639, 307, 264, 1412, 286, 643, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.11503953066739168, "compression_ratio": 1.7110266159695817, "no_caption_prob": 2.014494384638965e-05}, {"id": 500, "seek": 293942, "start": 2961.3, "end": 2966.46, "text": " your query of these are the things I depend on for this page. This is the data I need.", "tokens": [50364, 1171, 264, 3389, 1168, 11, 286, 727, 3811, 11, 286, 500, 380, 458, 498, 341, 576, 312, 257, 49795, 3513, 50706, 50706, 412, 439, 11, 457, 286, 727, 3811, 257, 1715, 689, 291, 1333, 295, 362, 11, 767, 588, 709, 411, 50990, 50990, 264, 3531, 5102, 300, 9184, 390, 3585, 505, 466, 294, 527, 3531, 5102, 3500, 13, 23596, 11, 51260, 51260, 291, 458, 11, 264, 3531, 5102, 291, 362, 428, 11, 286, 393, 380, 1604, 437, 415, 1219, 309, 586, 11, 457, 51458, 51458, 428, 14581, 295, 613, 366, 264, 721, 286, 5672, 322, 337, 341, 3028, 13, 639, 307, 264, 1412, 286, 643, 13, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.11503953066739168, "compression_ratio": 1.7110266159695817, "no_caption_prob": 2.014494384638965e-05}, {"id": 501, "seek": 296646, "start": 2966.46, "end": 2970.64, "text": " You could sort of have that as a sort of subscription that says, this is what I need, which as we", "tokens": [50364, 509, 727, 1333, 295, 362, 300, 382, 257, 1333, 295, 17231, 300, 1619, 11, 341, 307, 437, 286, 643, 11, 597, 382, 321, 50573, 50573, 7152, 294, 264, 3531, 5102, 3500, 11, 382, 544, 1589, 1487, 2950, 294, 264, 3531, 50800, 50800, 5102, 11, 309, 727, 312, 1242, 309, 365, 33283, 12475, 13, 1396, 291, 393, 360, 1524, 493, 1589, 51026, 51026, 570, 309, 311, 1333, 295, 257, 17231, 300, 2170, 1219, 5699, 300, 2962, 13, 400, 550, 309, 51224, 51224, 445, 5965, 516, 1826, 264, 1589, 291, 584, 291, 643, 10676, 264, 1589, 300, 51470, 51470, 291, 362, 1217, 420, 307, 257, 25993, 295, 309, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.08494171795544324, "compression_ratio": 1.8233082706766917, "no_caption_prob": 2.355219294258859e-05}, {"id": 502, "seek": 296646, "start": 2970.64, "end": 2975.18, "text": " discussed in the store pattern episode, as more information comes online in the store", "tokens": [50364, 509, 727, 1333, 295, 362, 300, 382, 257, 1333, 295, 17231, 300, 1619, 11, 341, 307, 437, 286, 643, 11, 597, 382, 321, 50573, 50573, 7152, 294, 264, 3531, 5102, 3500, 11, 382, 544, 1589, 1487, 2950, 294, 264, 3531, 50800, 50800, 5102, 11, 309, 727, 312, 1242, 309, 365, 33283, 12475, 13, 1396, 291, 393, 360, 1524, 493, 1589, 51026, 51026, 570, 309, 311, 1333, 295, 257, 17231, 300, 2170, 1219, 5699, 300, 2962, 13, 400, 550, 309, 51224, 51224, 445, 5965, 516, 1826, 264, 1589, 291, 584, 291, 643, 10676, 264, 1589, 300, 51470, 51470, 291, 362, 1217, 420, 307, 257, 25993, 295, 309, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.08494171795544324, "compression_ratio": 1.8233082706766917, "no_caption_prob": 2.355219294258859e-05}, {"id": 503, "seek": 296646, "start": 2975.18, "end": 2979.7, "text": " pattern, it could be getting it with HTTP requests. Then you can do follow up information", "tokens": [50364, 509, 727, 1333, 295, 362, 300, 382, 257, 1333, 295, 17231, 300, 1619, 11, 341, 307, 437, 286, 643, 11, 597, 382, 321, 50573, 50573, 7152, 294, 264, 3531, 5102, 3500, 11, 382, 544, 1589, 1487, 2950, 294, 264, 3531, 50800, 50800, 5102, 11, 309, 727, 312, 1242, 309, 365, 33283, 12475, 13, 1396, 291, 393, 360, 1524, 493, 1589, 51026, 51026, 570, 309, 311, 1333, 295, 257, 17231, 300, 2170, 1219, 5699, 300, 2962, 13, 400, 550, 309, 51224, 51224, 445, 5965, 516, 1826, 264, 1589, 291, 584, 291, 643, 10676, 264, 1589, 300, 51470, 51470, 291, 362, 1217, 420, 307, 257, 25993, 295, 309, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.08494171795544324, "compression_ratio": 1.8233082706766917, "no_caption_prob": 2.355219294258859e-05}, {"id": 504, "seek": 296646, "start": 2979.7, "end": 2983.66, "text": " because it's sort of a subscription that gets called whenever that changes. And then it", "tokens": [50364, 509, 727, 1333, 295, 362, 300, 382, 257, 1333, 295, 17231, 300, 1619, 11, 341, 307, 437, 286, 643, 11, 597, 382, 321, 50573, 50573, 7152, 294, 264, 3531, 5102, 3500, 11, 382, 544, 1589, 1487, 2950, 294, 264, 3531, 50800, 50800, 5102, 11, 309, 727, 312, 1242, 309, 365, 33283, 12475, 13, 1396, 291, 393, 360, 1524, 493, 1589, 51026, 51026, 570, 309, 311, 1333, 295, 257, 17231, 300, 2170, 1219, 5699, 300, 2962, 13, 400, 550, 309, 51224, 51224, 445, 5965, 516, 1826, 264, 1589, 291, 584, 291, 643, 10676, 264, 1589, 300, 51470, 51470, 291, 362, 1217, 420, 307, 257, 25993, 295, 309, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.08494171795544324, "compression_ratio": 1.8233082706766917, "no_caption_prob": 2.355219294258859e-05}, {"id": 505, "seek": 296646, "start": 2983.66, "end": 2988.58, "text": " just keeps going until the information you say you need matches the information that", "tokens": [50364, 509, 727, 1333, 295, 362, 300, 382, 257, 1333, 295, 17231, 300, 1619, 11, 341, 307, 437, 286, 643, 11, 597, 382, 321, 50573, 50573, 7152, 294, 264, 3531, 5102, 3500, 11, 382, 544, 1589, 1487, 2950, 294, 264, 3531, 50800, 50800, 5102, 11, 309, 727, 312, 1242, 309, 365, 33283, 12475, 13, 1396, 291, 393, 360, 1524, 493, 1589, 51026, 51026, 570, 309, 311, 1333, 295, 257, 17231, 300, 2170, 1219, 5699, 300, 2962, 13, 400, 550, 309, 51224, 51224, 445, 5965, 516, 1826, 264, 1589, 291, 584, 291, 643, 10676, 264, 1589, 300, 51470, 51470, 291, 362, 1217, 420, 307, 257, 25993, 295, 309, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.08494171795544324, "compression_ratio": 1.8233082706766917, "no_caption_prob": 2.355219294258859e-05}, {"id": 506, "seek": 296646, "start": 2988.58, "end": 2992.7, "text": " you have already or is a subset of it.", "tokens": [50364, 509, 727, 1333, 295, 362, 300, 382, 257, 1333, 295, 17231, 300, 1619, 11, 341, 307, 437, 286, 643, 11, 597, 382, 321, 50573, 50573, 7152, 294, 264, 3531, 5102, 3500, 11, 382, 544, 1589, 1487, 2950, 294, 264, 3531, 50800, 50800, 5102, 11, 309, 727, 312, 1242, 309, 365, 33283, 12475, 13, 1396, 291, 393, 360, 1524, 493, 1589, 51026, 51026, 570, 309, 311, 1333, 295, 257, 17231, 300, 2170, 1219, 5699, 300, 2962, 13, 400, 550, 309, 51224, 51224, 445, 5965, 516, 1826, 264, 1589, 291, 584, 291, 643, 10676, 264, 1589, 300, 51470, 51470, 291, 362, 1217, 420, 307, 257, 25993, 295, 309, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.08494171795544324, "compression_ratio": 1.8233082706766917, "no_caption_prob": 2.355219294258859e-05}, {"id": 507, "seek": 299270, "start": 2992.7, "end": 2998.14, "text": " So I can imagine something like that where you sort of have like a subscription to like,", "tokens": [50364, 407, 286, 393, 3811, 746, 411, 300, 689, 291, 1333, 295, 362, 411, 257, 17231, 281, 411, 11, 50636, 50636, 510, 311, 512, 24903, 379, 5124, 1412, 286, 643, 300, 291, 434, 406, 445, 516, 281, 352, 12477, 50883, 50883, 6460, 293, 550, 291, 362, 613, 1333, 295, 8607, 1412, 420, 1310, 4190, 420, 2035, 300, 51250, 51250, 291, 434, 3806, 322, 13, 400, 550, 291, 393, 1333, 295, 747, 439, 729, 1214, 1564, 291, 362, 552, 51514, 51514, 439, 6412, 294, 293, 550, 291, 393, 2354, 428, 5215, 13, 407, 300, 727, 312, 534, 1880, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13350638389587402, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.157311195740476e-06}, {"id": 508, "seek": 299270, "start": 2998.14, "end": 3003.08, "text": " here's some computationally expensive data I need that you're not just going to go analyze", "tokens": [50364, 407, 286, 393, 3811, 746, 411, 300, 689, 291, 1333, 295, 362, 411, 257, 17231, 281, 411, 11, 50636, 50636, 510, 311, 512, 24903, 379, 5124, 1412, 286, 643, 300, 291, 434, 406, 445, 516, 281, 352, 12477, 50883, 50883, 6460, 293, 550, 291, 362, 613, 1333, 295, 8607, 1412, 420, 1310, 4190, 420, 2035, 300, 51250, 51250, 291, 434, 3806, 322, 13, 400, 550, 291, 393, 1333, 295, 747, 439, 729, 1214, 1564, 291, 362, 552, 51514, 51514, 439, 6412, 294, 293, 550, 291, 393, 2354, 428, 5215, 13, 407, 300, 727, 312, 534, 1880, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13350638389587402, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.157311195740476e-06}, {"id": 509, "seek": 299270, "start": 3003.08, "end": 3010.4199999999996, "text": " constantly and then you have these sort of remote data or maybe values or whatever that", "tokens": [50364, 407, 286, 393, 3811, 746, 411, 300, 689, 291, 1333, 295, 362, 411, 257, 17231, 281, 411, 11, 50636, 50636, 510, 311, 512, 24903, 379, 5124, 1412, 286, 643, 300, 291, 434, 406, 445, 516, 281, 352, 12477, 50883, 50883, 6460, 293, 550, 291, 362, 613, 1333, 295, 8607, 1412, 420, 1310, 4190, 420, 2035, 300, 51250, 51250, 291, 434, 3806, 322, 13, 400, 550, 291, 393, 1333, 295, 747, 439, 729, 1214, 1564, 291, 362, 552, 51514, 51514, 439, 6412, 294, 293, 550, 291, 393, 2354, 428, 5215, 13, 407, 300, 727, 312, 534, 1880, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13350638389587402, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.157311195740476e-06}, {"id": 510, "seek": 299270, "start": 3010.4199999999996, "end": 3015.7, "text": " you're waiting on. And then you can sort of take all those together once you have them", "tokens": [50364, 407, 286, 393, 3811, 746, 411, 300, 689, 291, 1333, 295, 362, 411, 257, 17231, 281, 411, 11, 50636, 50636, 510, 311, 512, 24903, 379, 5124, 1412, 286, 643, 300, 291, 434, 406, 445, 516, 281, 352, 12477, 50883, 50883, 6460, 293, 550, 291, 362, 613, 1333, 295, 8607, 1412, 420, 1310, 4190, 420, 2035, 300, 51250, 51250, 291, 434, 3806, 322, 13, 400, 550, 291, 393, 1333, 295, 747, 439, 729, 1214, 1564, 291, 362, 552, 51514, 51514, 439, 6412, 294, 293, 550, 291, 393, 2354, 428, 5215, 13, 407, 300, 727, 312, 534, 1880, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13350638389587402, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.157311195740476e-06}, {"id": 511, "seek": 299270, "start": 3015.7, "end": 3020.66, "text": " all filled in and then you can continue your analysis. So that could be really interesting", "tokens": [50364, 407, 286, 393, 3811, 746, 411, 300, 689, 291, 1333, 295, 362, 411, 257, 17231, 281, 411, 11, 50636, 50636, 510, 311, 512, 24903, 379, 5124, 1412, 286, 643, 300, 291, 434, 406, 445, 516, 281, 352, 12477, 50883, 50883, 6460, 293, 550, 291, 362, 613, 1333, 295, 8607, 1412, 420, 1310, 4190, 420, 2035, 300, 51250, 51250, 291, 434, 3806, 322, 13, 400, 550, 291, 393, 1333, 295, 747, 439, 729, 1214, 1564, 291, 362, 552, 51514, 51514, 439, 6412, 294, 293, 550, 291, 393, 2354, 428, 5215, 13, 407, 300, 727, 312, 534, 1880, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.13350638389587402, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.157311195740476e-06}, {"id": 512, "seek": 302066, "start": 3020.66, "end": 3023.98, "text": " to like provide some primitives for doing that sort of thing.", "tokens": [50364, 281, 411, 2893, 512, 2886, 38970, 337, 884, 300, 1333, 295, 551, 13, 50530, 50530, 286, 519, 264, 636, 300, 286, 1223, 309, 307, 286, 519, 1217, 437, 2699, 76, 19954, 775, 281, 512, 50842, 50842, 8396, 570, 321, 584, 411, 11, 286, 5308, 264, 10088, 1315, 574, 1010, 3199, 11, 4412, 1767, 51176, 51176, 14722, 309, 13, 400, 264, 8388, 727, 360, 257, 1101, 1691, 412, 15866, 787, 437, 307, 4818, 13, 400, 51524, 51524, 550, 562, 309, 1542, 412, 264, 958, 3991, 11, 14722, 797, 787, 437, 307, 4818, 293, 370, 322, 293, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.180143972839972, "compression_ratio": 1.7095435684647302, "no_caption_prob": 4.611181793734431e-05}, {"id": 513, "seek": 302066, "start": 3023.98, "end": 3030.22, "text": " I think the way that I understand it is I think already what Elm Review does to some", "tokens": [50364, 281, 411, 2893, 512, 2886, 38970, 337, 884, 300, 1333, 295, 551, 13, 50530, 50530, 286, 519, 264, 636, 300, 286, 1223, 309, 307, 286, 519, 1217, 437, 2699, 76, 19954, 775, 281, 512, 50842, 50842, 8396, 570, 321, 584, 411, 11, 286, 5308, 264, 10088, 1315, 574, 1010, 3199, 11, 4412, 1767, 51176, 51176, 14722, 309, 13, 400, 264, 8388, 727, 360, 257, 1101, 1691, 412, 15866, 787, 437, 307, 4818, 13, 400, 51524, 51524, 550, 562, 309, 1542, 412, 264, 958, 3991, 11, 14722, 797, 787, 437, 307, 4818, 293, 370, 322, 293, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.180143972839972, "compression_ratio": 1.7095435684647302, "no_caption_prob": 4.611181793734431e-05}, {"id": 514, "seek": 302066, "start": 3030.22, "end": 3036.8999999999996, "text": " extent because we say like, I request the module name lookup table, therefore please", "tokens": [50364, 281, 411, 2893, 512, 2886, 38970, 337, 884, 300, 1333, 295, 551, 13, 50530, 50530, 286, 519, 264, 636, 300, 286, 1223, 309, 307, 286, 519, 1217, 437, 2699, 76, 19954, 775, 281, 512, 50842, 50842, 8396, 570, 321, 584, 411, 11, 286, 5308, 264, 10088, 1315, 574, 1010, 3199, 11, 4412, 1767, 51176, 51176, 14722, 309, 13, 400, 264, 8388, 727, 360, 257, 1101, 1691, 412, 15866, 787, 437, 307, 4818, 13, 400, 51524, 51524, 550, 562, 309, 1542, 412, 264, 958, 3991, 11, 14722, 797, 787, 437, 307, 4818, 293, 370, 322, 293, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.180143972839972, "compression_ratio": 1.7095435684647302, "no_caption_prob": 4.611181793734431e-05}, {"id": 515, "seek": 302066, "start": 3036.8999999999996, "end": 3043.8599999999997, "text": " compute it. And the framework could do a better job at computing only what is necessary. And", "tokens": [50364, 281, 411, 2893, 512, 2886, 38970, 337, 884, 300, 1333, 295, 551, 13, 50530, 50530, 286, 519, 264, 636, 300, 286, 1223, 309, 307, 286, 519, 1217, 437, 2699, 76, 19954, 775, 281, 512, 50842, 50842, 8396, 570, 321, 584, 411, 11, 286, 5308, 264, 10088, 1315, 574, 1010, 3199, 11, 4412, 1767, 51176, 51176, 14722, 309, 13, 400, 264, 8388, 727, 360, 257, 1101, 1691, 412, 15866, 787, 437, 307, 4818, 13, 400, 51524, 51524, 550, 562, 309, 1542, 412, 264, 958, 3991, 11, 14722, 797, 787, 437, 307, 4818, 293, 370, 322, 293, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.180143972839972, "compression_ratio": 1.7095435684647302, "no_caption_prob": 4.611181793734431e-05}, {"id": 516, "seek": 302066, "start": 3043.8599999999997, "end": 3048.8199999999997, "text": " then when it looks at the next file, compute again only what is necessary and so on and", "tokens": [50364, 281, 411, 2893, 512, 2886, 38970, 337, 884, 300, 1333, 295, 551, 13, 50530, 50530, 286, 519, 264, 636, 300, 286, 1223, 309, 307, 286, 519, 1217, 437, 2699, 76, 19954, 775, 281, 512, 50842, 50842, 8396, 570, 321, 584, 411, 11, 286, 5308, 264, 10088, 1315, 574, 1010, 3199, 11, 4412, 1767, 51176, 51176, 14722, 309, 13, 400, 264, 8388, 727, 360, 257, 1101, 1691, 412, 15866, 787, 437, 307, 4818, 13, 400, 51524, 51524, 550, 562, 309, 1542, 412, 264, 958, 3991, 11, 14722, 797, 787, 437, 307, 4818, 293, 370, 322, 293, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.180143972839972, "compression_ratio": 1.7095435684647302, "no_caption_prob": 4.611181793734431e-05}, {"id": 517, "seek": 304882, "start": 3048.82, "end": 3054.54, "text": " so on. That I definitely want to have. And I think that's kind of the same idea like", "tokens": [50364, 370, 322, 13, 663, 286, 2138, 528, 281, 362, 13, 400, 286, 519, 300, 311, 733, 295, 264, 912, 1558, 411, 50650, 50650, 341, 10088, 5946, 322, 264, 574, 1010, 3199, 337, 341, 10088, 13, 407, 5699, 291, 483, 281, 264, 958, 50872, 50872, 10088, 291, 14722, 309, 797, 337, 300, 10088, 11, 5183, 13, 51124, 51124, 865, 11, 309, 307, 257, 2531, 5102, 13, 286, 519, 264, 2135, 2649, 576, 312, 294, 264, 1389, 295, 257, 51332, 51332, 10088, 2699, 76, 19954, 3255, 437, 10088, 309, 311, 1237, 412, 13, 400, 370, 309, 393, 2836, 294, 300, 857, 295, 4319, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.15511361984979538, "compression_ratio": 1.6584362139917694, "no_caption_prob": 2.507118733774405e-05}, {"id": 518, "seek": 304882, "start": 3054.54, "end": 3058.98, "text": " this module depends on the lookup table for this module. So whenever you get to the next", "tokens": [50364, 370, 322, 13, 663, 286, 2138, 528, 281, 362, 13, 400, 286, 519, 300, 311, 733, 295, 264, 912, 1558, 411, 50650, 50650, 341, 10088, 5946, 322, 264, 574, 1010, 3199, 337, 341, 10088, 13, 407, 5699, 291, 483, 281, 264, 958, 50872, 50872, 10088, 291, 14722, 309, 797, 337, 300, 10088, 11, 5183, 13, 51124, 51124, 865, 11, 309, 307, 257, 2531, 5102, 13, 286, 519, 264, 2135, 2649, 576, 312, 294, 264, 1389, 295, 257, 51332, 51332, 10088, 2699, 76, 19954, 3255, 437, 10088, 309, 311, 1237, 412, 13, 400, 370, 309, 393, 2836, 294, 300, 857, 295, 4319, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.15511361984979538, "compression_ratio": 1.6584362139917694, "no_caption_prob": 2.507118733774405e-05}, {"id": 519, "seek": 304882, "start": 3058.98, "end": 3064.02, "text": " module you compute it again for that module, etc.", "tokens": [50364, 370, 322, 13, 663, 286, 2138, 528, 281, 362, 13, 400, 286, 519, 300, 311, 733, 295, 264, 912, 1558, 411, 50650, 50650, 341, 10088, 5946, 322, 264, 574, 1010, 3199, 337, 341, 10088, 13, 407, 5699, 291, 483, 281, 264, 958, 50872, 50872, 10088, 291, 14722, 309, 797, 337, 300, 10088, 11, 5183, 13, 51124, 51124, 865, 11, 309, 307, 257, 2531, 5102, 13, 286, 519, 264, 2135, 2649, 576, 312, 294, 264, 1389, 295, 257, 51332, 51332, 10088, 2699, 76, 19954, 3255, 437, 10088, 309, 311, 1237, 412, 13, 400, 370, 309, 393, 2836, 294, 300, 857, 295, 4319, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.15511361984979538, "compression_ratio": 1.6584362139917694, "no_caption_prob": 2.507118733774405e-05}, {"id": 520, "seek": 304882, "start": 3064.02, "end": 3068.1800000000003, "text": " Yeah, it is a similar pattern. I think the main difference would be in the case of a", "tokens": [50364, 370, 322, 13, 663, 286, 2138, 528, 281, 362, 13, 400, 286, 519, 300, 311, 733, 295, 264, 912, 1558, 411, 50650, 50650, 341, 10088, 5946, 322, 264, 574, 1010, 3199, 337, 341, 10088, 13, 407, 5699, 291, 483, 281, 264, 958, 50872, 50872, 10088, 291, 14722, 309, 797, 337, 300, 10088, 11, 5183, 13, 51124, 51124, 865, 11, 309, 307, 257, 2531, 5102, 13, 286, 519, 264, 2135, 2649, 576, 312, 294, 264, 1389, 295, 257, 51332, 51332, 10088, 2699, 76, 19954, 3255, 437, 10088, 309, 311, 1237, 412, 13, 400, 370, 309, 393, 2836, 294, 300, 857, 295, 4319, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.15511361984979538, "compression_ratio": 1.6584362139917694, "no_caption_prob": 2.507118733774405e-05}, {"id": 521, "seek": 304882, "start": 3068.1800000000003, "end": 3074.6400000000003, "text": " module Elm Review knows what module it's looking at. And so it can fill in that bit of context", "tokens": [50364, 370, 322, 13, 663, 286, 2138, 528, 281, 362, 13, 400, 286, 519, 300, 311, 733, 295, 264, 912, 1558, 411, 50650, 50650, 341, 10088, 5946, 322, 264, 574, 1010, 3199, 337, 341, 10088, 13, 407, 5699, 291, 483, 281, 264, 958, 50872, 50872, 10088, 291, 14722, 309, 797, 337, 300, 10088, 11, 5183, 13, 51124, 51124, 865, 11, 309, 307, 257, 2531, 5102, 13, 286, 519, 264, 2135, 2649, 576, 312, 294, 264, 1389, 295, 257, 51332, 51332, 10088, 2699, 76, 19954, 3255, 437, 10088, 309, 311, 1237, 412, 13, 400, 370, 309, 393, 2836, 294, 300, 857, 295, 4319, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.15511361984979538, "compression_ratio": 1.6584362139917694, "no_caption_prob": 2.507118733774405e-05}, {"id": 522, "seek": 307464, "start": 3074.64, "end": 3080.62, "text": " to say, okay, it's requesting the module lookup table and it's in this module so I can compute", "tokens": [50364, 281, 584, 11, 1392, 11, 309, 311, 31937, 264, 10088, 574, 1010, 3199, 293, 309, 311, 294, 341, 10088, 370, 286, 393, 14722, 50663, 50663, 309, 337, 341, 2685, 10088, 13, 583, 498, 309, 311, 746, 544, 45115, 411, 286, 528, 281, 659, 13059, 341, 50969, 50969, 6798, 337, 1365, 11, 550, 309, 1177, 380, 458, 597, 13985, 281, 659, 13059, 2361, 322, 512, 26947, 51341, 51341, 4319, 295, 264, 1399, 309, 311, 2614, 13, 407, 294, 300, 1389, 11, 300, 1333, 295, 3531, 5102, 3758, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.11588274637858073, "compression_ratio": 1.6832579185520362, "no_caption_prob": 2.5465576982242055e-05}, {"id": 523, "seek": 307464, "start": 3080.62, "end": 3086.74, "text": " it for this specific module. But if it's something more nuanced like I want to pre evaluate this", "tokens": [50364, 281, 584, 11, 1392, 11, 309, 311, 31937, 264, 10088, 574, 1010, 3199, 293, 309, 311, 294, 341, 10088, 370, 286, 393, 14722, 50663, 50663, 309, 337, 341, 2685, 10088, 13, 583, 498, 309, 311, 746, 544, 45115, 411, 286, 528, 281, 659, 13059, 341, 50969, 50969, 6798, 337, 1365, 11, 550, 309, 1177, 380, 458, 597, 13985, 281, 659, 13059, 2361, 322, 512, 26947, 51341, 51341, 4319, 295, 264, 1399, 309, 311, 2614, 13, 407, 294, 300, 1389, 11, 300, 1333, 295, 3531, 5102, 3758, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.11588274637858073, "compression_ratio": 1.6832579185520362, "no_caption_prob": 2.5465576982242055e-05}, {"id": 524, "seek": 307464, "start": 3086.74, "end": 3094.18, "text": " string for example, then it doesn't know which strings to pre evaluate based on some implicit", "tokens": [50364, 281, 584, 11, 1392, 11, 309, 311, 31937, 264, 10088, 574, 1010, 3199, 293, 309, 311, 294, 341, 10088, 370, 286, 393, 14722, 50663, 50663, 309, 337, 341, 2685, 10088, 13, 583, 498, 309, 311, 746, 544, 45115, 411, 286, 528, 281, 659, 13059, 341, 50969, 50969, 6798, 337, 1365, 11, 550, 309, 1177, 380, 458, 597, 13985, 281, 659, 13059, 2361, 322, 512, 26947, 51341, 51341, 4319, 295, 264, 1399, 309, 311, 2614, 13, 407, 294, 300, 1389, 11, 300, 1333, 295, 3531, 5102, 3758, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.11588274637858073, "compression_ratio": 1.6832579185520362, "no_caption_prob": 2.5465576982242055e-05}, {"id": 525, "seek": 307464, "start": 3094.18, "end": 3100.14, "text": " context of the process it's running. So in that case, that sort of store pattern style", "tokens": [50364, 281, 584, 11, 1392, 11, 309, 311, 31937, 264, 10088, 574, 1010, 3199, 293, 309, 311, 294, 341, 10088, 370, 286, 393, 14722, 50663, 50663, 309, 337, 341, 2685, 10088, 13, 583, 498, 309, 311, 746, 544, 45115, 411, 286, 528, 281, 659, 13059, 341, 50969, 50969, 6798, 337, 1365, 11, 550, 309, 1177, 380, 458, 597, 13985, 281, 659, 13059, 2361, 322, 512, 26947, 51341, 51341, 4319, 295, 264, 1399, 309, 311, 2614, 13, 407, 294, 300, 1389, 11, 300, 1333, 295, 3531, 5102, 3758, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.11588274637858073, "compression_ratio": 1.6832579185520362, "no_caption_prob": 2.5465576982242055e-05}, {"id": 526, "seek": 310014, "start": 3100.14, "end": 3105.62, "text": " could work where you can give it that information. You can say, hey, here's the node I'm looking", "tokens": [50364, 727, 589, 689, 291, 393, 976, 309, 300, 1589, 13, 509, 393, 584, 11, 4177, 11, 510, 311, 264, 9984, 286, 478, 1237, 50638, 50638, 412, 293, 286, 576, 411, 281, 1699, 1826, 291, 393, 2413, 23663, 11, 411, 659, 15866, 341, 50988, 50988, 6798, 2158, 11, 1767, 13, 400, 550, 291, 1699, 1826, 309, 311, 572, 2854, 257, 1310, 293, 550, 483, 309, 646, 13, 51286, 51286, 400, 300, 727, 2089, 291, 281, 19320, 953, 14722, 293, 35900, 1125, 512, 295, 613, 544, 5124, 4190, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11587466133965386, "compression_ratio": 1.6160714285714286, "no_caption_prob": 4.006195376859978e-05}, {"id": 527, "seek": 310014, "start": 3105.62, "end": 3112.62, "text": " at and I would like to wait until you can finish analyzing, like pre computing this", "tokens": [50364, 727, 589, 689, 291, 393, 976, 309, 300, 1589, 13, 509, 393, 584, 11, 4177, 11, 510, 311, 264, 9984, 286, 478, 1237, 50638, 50638, 412, 293, 286, 576, 411, 281, 1699, 1826, 291, 393, 2413, 23663, 11, 411, 659, 15866, 341, 50988, 50988, 6798, 2158, 11, 1767, 13, 400, 550, 291, 1699, 1826, 309, 311, 572, 2854, 257, 1310, 293, 550, 483, 309, 646, 13, 51286, 51286, 400, 300, 727, 2089, 291, 281, 19320, 953, 14722, 293, 35900, 1125, 512, 295, 613, 544, 5124, 4190, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11587466133965386, "compression_ratio": 1.6160714285714286, "no_caption_prob": 4.006195376859978e-05}, {"id": 528, "seek": 310014, "start": 3112.62, "end": 3118.58, "text": " string value, please. And then you wait until it's no longer a maybe and then get it back.", "tokens": [50364, 727, 589, 689, 291, 393, 976, 309, 300, 1589, 13, 509, 393, 584, 11, 4177, 11, 510, 311, 264, 9984, 286, 478, 1237, 50638, 50638, 412, 293, 286, 576, 411, 281, 1699, 1826, 291, 393, 2413, 23663, 11, 411, 659, 15866, 341, 50988, 50988, 6798, 2158, 11, 1767, 13, 400, 550, 291, 1699, 1826, 309, 311, 572, 2854, 257, 1310, 293, 550, 483, 309, 646, 13, 51286, 51286, 400, 300, 727, 2089, 291, 281, 19320, 953, 14722, 293, 35900, 1125, 512, 295, 613, 544, 5124, 4190, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11587466133965386, "compression_ratio": 1.6160714285714286, "no_caption_prob": 4.006195376859978e-05}, {"id": 529, "seek": 310014, "start": 3118.58, "end": 3125.52, "text": " And that could allow you to lazily compute and memoize some of these more expensive values", "tokens": [50364, 727, 589, 689, 291, 393, 976, 309, 300, 1589, 13, 509, 393, 584, 11, 4177, 11, 510, 311, 264, 9984, 286, 478, 1237, 50638, 50638, 412, 293, 286, 576, 411, 281, 1699, 1826, 291, 393, 2413, 23663, 11, 411, 659, 15866, 341, 50988, 50988, 6798, 2158, 11, 1767, 13, 400, 550, 291, 1699, 1826, 309, 311, 572, 2854, 257, 1310, 293, 550, 483, 309, 646, 13, 51286, 51286, 400, 300, 727, 2089, 291, 281, 19320, 953, 14722, 293, 35900, 1125, 512, 295, 613, 544, 5124, 4190, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.11587466133965386, "compression_ratio": 1.6160714285714286, "no_caption_prob": 4.006195376859978e-05}, {"id": 530, "seek": 312552, "start": 3125.52, "end": 3130.58, "text": " with specific context where the user can say, I want it for this node. So anyway, like seems", "tokens": [50364, 365, 2685, 4319, 689, 264, 4195, 393, 584, 11, 286, 528, 309, 337, 341, 9984, 13, 407, 4033, 11, 411, 2544, 50617, 50617, 411, 364, 1880, 3100, 281, 6839, 13, 50733, 50733, 865, 11, 309, 727, 312, 1880, 13, 865, 13, 682, 341, 1389, 11, 309, 576, 2138, 854, 281, 312, 1075, 50981, 50981, 281, 584, 11, 1767, 14722, 341, 586, 293, 3531, 309, 294, 264, 3531, 3838, 1553, 445, 538, 27960, 13, 51343, 51343, 663, 576, 2138, 652, 721, 3571, 13, 51503, 51503, 1779, 13, 51553, 51553, 865, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1976524921173745, "compression_ratio": 1.6470588235294117, "no_caption_prob": 1.384582992614014e-05}, {"id": 531, "seek": 312552, "start": 3130.58, "end": 3132.9, "text": " like an interesting path to explore.", "tokens": [50364, 365, 2685, 4319, 689, 264, 4195, 393, 584, 11, 286, 528, 309, 337, 341, 9984, 13, 407, 4033, 11, 411, 2544, 50617, 50617, 411, 364, 1880, 3100, 281, 6839, 13, 50733, 50733, 865, 11, 309, 727, 312, 1880, 13, 865, 13, 682, 341, 1389, 11, 309, 576, 2138, 854, 281, 312, 1075, 50981, 50981, 281, 584, 11, 1767, 14722, 341, 586, 293, 3531, 309, 294, 264, 3531, 3838, 1553, 445, 538, 27960, 13, 51343, 51343, 663, 576, 2138, 652, 721, 3571, 13, 51503, 51503, 1779, 13, 51553, 51553, 865, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1976524921173745, "compression_ratio": 1.6470588235294117, "no_caption_prob": 1.384582992614014e-05}, {"id": 532, "seek": 312552, "start": 3132.9, "end": 3137.86, "text": " Yeah, it could be interesting. Yeah. In this case, it would definitely help to be able", "tokens": [50364, 365, 2685, 4319, 689, 264, 4195, 393, 584, 11, 286, 528, 309, 337, 341, 9984, 13, 407, 4033, 11, 411, 2544, 50617, 50617, 411, 364, 1880, 3100, 281, 6839, 13, 50733, 50733, 865, 11, 309, 727, 312, 1880, 13, 865, 13, 682, 341, 1389, 11, 309, 576, 2138, 854, 281, 312, 1075, 50981, 50981, 281, 584, 11, 1767, 14722, 341, 586, 293, 3531, 309, 294, 264, 3531, 3838, 1553, 445, 538, 27960, 13, 51343, 51343, 663, 576, 2138, 652, 721, 3571, 13, 51503, 51503, 1779, 13, 51553, 51553, 865, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1976524921173745, "compression_ratio": 1.6470588235294117, "no_caption_prob": 1.384582992614014e-05}, {"id": 533, "seek": 312552, "start": 3137.86, "end": 3145.1, "text": " to say, please compute this now and store it in the store directly without just by mutation.", "tokens": [50364, 365, 2685, 4319, 689, 264, 4195, 393, 584, 11, 286, 528, 309, 337, 341, 9984, 13, 407, 4033, 11, 411, 2544, 50617, 50617, 411, 364, 1880, 3100, 281, 6839, 13, 50733, 50733, 865, 11, 309, 727, 312, 1880, 13, 865, 13, 682, 341, 1389, 11, 309, 576, 2138, 854, 281, 312, 1075, 50981, 50981, 281, 584, 11, 1767, 14722, 341, 586, 293, 3531, 309, 294, 264, 3531, 3838, 1553, 445, 538, 27960, 13, 51343, 51343, 663, 576, 2138, 652, 721, 3571, 13, 51503, 51503, 1779, 13, 51553, 51553, 865, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1976524921173745, "compression_ratio": 1.6470588235294117, "no_caption_prob": 1.384582992614014e-05}, {"id": 534, "seek": 312552, "start": 3145.1, "end": 3148.3, "text": " That would definitely make things easier.", "tokens": [50364, 365, 2685, 4319, 689, 264, 4195, 393, 584, 11, 286, 528, 309, 337, 341, 9984, 13, 407, 4033, 11, 411, 2544, 50617, 50617, 411, 364, 1880, 3100, 281, 6839, 13, 50733, 50733, 865, 11, 309, 727, 312, 1880, 13, 865, 13, 682, 341, 1389, 11, 309, 576, 2138, 854, 281, 312, 1075, 50981, 50981, 281, 584, 11, 1767, 14722, 341, 586, 293, 3531, 309, 294, 264, 3531, 3838, 1553, 445, 538, 27960, 13, 51343, 51343, 663, 576, 2138, 652, 721, 3571, 13, 51503, 51503, 1779, 13, 51553, 51553, 865, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1976524921173745, "compression_ratio": 1.6470588235294117, "no_caption_prob": 1.384582992614014e-05}, {"id": 535, "seek": 312552, "start": 3148.3, "end": 3149.3, "text": " Right.", "tokens": [50364, 365, 2685, 4319, 689, 264, 4195, 393, 584, 11, 286, 528, 309, 337, 341, 9984, 13, 407, 4033, 11, 411, 2544, 50617, 50617, 411, 364, 1880, 3100, 281, 6839, 13, 50733, 50733, 865, 11, 309, 727, 312, 1880, 13, 865, 13, 682, 341, 1389, 11, 309, 576, 2138, 854, 281, 312, 1075, 50981, 50981, 281, 584, 11, 1767, 14722, 341, 586, 293, 3531, 309, 294, 264, 3531, 3838, 1553, 445, 538, 27960, 13, 51343, 51343, 663, 576, 2138, 652, 721, 3571, 13, 51503, 51503, 1779, 13, 51553, 51553, 865, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1976524921173745, "compression_ratio": 1.6470588235294117, "no_caption_prob": 1.384582992614014e-05}, {"id": 536, "seek": 312552, "start": 3149.3, "end": 3150.3, "text": " Yeah.", "tokens": [50364, 365, 2685, 4319, 689, 264, 4195, 393, 584, 11, 286, 528, 309, 337, 341, 9984, 13, 407, 4033, 11, 411, 2544, 50617, 50617, 411, 364, 1880, 3100, 281, 6839, 13, 50733, 50733, 865, 11, 309, 727, 312, 1880, 13, 865, 13, 682, 341, 1389, 11, 309, 576, 2138, 854, 281, 312, 1075, 50981, 50981, 281, 584, 11, 1767, 14722, 341, 586, 293, 3531, 309, 294, 264, 3531, 3838, 1553, 445, 538, 27960, 13, 51343, 51343, 663, 576, 2138, 652, 721, 3571, 13, 51503, 51503, 1779, 13, 51553, 51553, 865, 13, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1976524921173745, "compression_ratio": 1.6470588235294117, "no_caption_prob": 1.384582992614014e-05}, {"id": 537, "seek": 315030, "start": 3150.3, "end": 3157.38, "text": " And I guess it's maybe a little bit of a chicken and egg problem to know which of these things", "tokens": [50364, 400, 286, 2041, 309, 311, 1310, 257, 707, 857, 295, 257, 4662, 293, 3777, 1154, 281, 458, 597, 295, 613, 721, 50718, 50718, 576, 1269, 493, 1880, 12178, 570, 562, 291, 2626, 341, 1589, 281, 3131, 51048, 51048, 16552, 11, 3131, 4978, 16552, 11, 550, 436, 360, 1880, 721, 365, 309, 13, 400, 550, 562, 51256, 51256, 436, 360, 1880, 721, 365, 300, 11, 309, 15182, 293, 5756, 19194, 293, 309, 44102, 561, 311, 2576, 10325, 13, 51590, 51590, 400, 370, 309, 311, 1333, 295, 1152, 281, 458, 597, 2306, 281, 6839, 949, 291, 600, 1612, 437, 561, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12485010483685662, "compression_ratio": 1.8087649402390438, "no_caption_prob": 8.939521649153903e-06}, {"id": 538, "seek": 315030, "start": 3157.38, "end": 3163.98, "text": " would open up interesting possibilities because when you offer this information to review", "tokens": [50364, 400, 286, 2041, 309, 311, 1310, 257, 707, 857, 295, 257, 4662, 293, 3777, 1154, 281, 458, 597, 295, 613, 721, 50718, 50718, 576, 1269, 493, 1880, 12178, 570, 562, 291, 2626, 341, 1589, 281, 3131, 51048, 51048, 16552, 11, 3131, 4978, 16552, 11, 550, 436, 360, 1880, 721, 365, 309, 13, 400, 550, 562, 51256, 51256, 436, 360, 1880, 721, 365, 300, 11, 309, 15182, 293, 5756, 19194, 293, 309, 44102, 561, 311, 2576, 10325, 13, 51590, 51590, 400, 370, 309, 311, 1333, 295, 1152, 281, 458, 597, 2306, 281, 6839, 949, 291, 600, 1612, 437, 561, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12485010483685662, "compression_ratio": 1.8087649402390438, "no_caption_prob": 8.939521649153903e-06}, {"id": 539, "seek": 315030, "start": 3163.98, "end": 3168.1400000000003, "text": " authors, review rule authors, then they do interesting things with it. And then when", "tokens": [50364, 400, 286, 2041, 309, 311, 1310, 257, 707, 857, 295, 257, 4662, 293, 3777, 1154, 281, 458, 597, 295, 613, 721, 50718, 50718, 576, 1269, 493, 1880, 12178, 570, 562, 291, 2626, 341, 1589, 281, 3131, 51048, 51048, 16552, 11, 3131, 4978, 16552, 11, 550, 436, 360, 1880, 721, 365, 309, 13, 400, 550, 562, 51256, 51256, 436, 360, 1880, 721, 365, 300, 11, 309, 15182, 293, 5756, 19194, 293, 309, 44102, 561, 311, 2576, 10325, 13, 51590, 51590, 400, 370, 309, 311, 1333, 295, 1152, 281, 458, 597, 2306, 281, 6839, 949, 291, 600, 1612, 437, 561, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12485010483685662, "compression_ratio": 1.8087649402390438, "no_caption_prob": 8.939521649153903e-06}, {"id": 540, "seek": 315030, "start": 3168.1400000000003, "end": 3174.82, "text": " they do interesting things with that, it builds and snowballs and it sparks people's imaginations.", "tokens": [50364, 400, 286, 2041, 309, 311, 1310, 257, 707, 857, 295, 257, 4662, 293, 3777, 1154, 281, 458, 597, 295, 613, 721, 50718, 50718, 576, 1269, 493, 1880, 12178, 570, 562, 291, 2626, 341, 1589, 281, 3131, 51048, 51048, 16552, 11, 3131, 4978, 16552, 11, 550, 436, 360, 1880, 721, 365, 309, 13, 400, 550, 562, 51256, 51256, 436, 360, 1880, 721, 365, 300, 11, 309, 15182, 293, 5756, 19194, 293, 309, 44102, 561, 311, 2576, 10325, 13, 51590, 51590, 400, 370, 309, 311, 1333, 295, 1152, 281, 458, 597, 2306, 281, 6839, 949, 291, 600, 1612, 437, 561, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12485010483685662, "compression_ratio": 1.8087649402390438, "no_caption_prob": 8.939521649153903e-06}, {"id": 541, "seek": 315030, "start": 3174.82, "end": 3179.7400000000002, "text": " And so it's sort of hard to know which ones to explore before you've seen what people", "tokens": [50364, 400, 286, 2041, 309, 311, 1310, 257, 707, 857, 295, 257, 4662, 293, 3777, 1154, 281, 458, 597, 295, 613, 721, 50718, 50718, 576, 1269, 493, 1880, 12178, 570, 562, 291, 2626, 341, 1589, 281, 3131, 51048, 51048, 16552, 11, 3131, 4978, 16552, 11, 550, 436, 360, 1880, 721, 365, 309, 13, 400, 550, 562, 51256, 51256, 436, 360, 1880, 721, 365, 300, 11, 309, 15182, 293, 5756, 19194, 293, 309, 44102, 561, 311, 2576, 10325, 13, 51590, 51590, 400, 370, 309, 311, 1333, 295, 1152, 281, 458, 597, 2306, 281, 6839, 949, 291, 600, 1612, 437, 561, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12485010483685662, "compression_ratio": 1.8087649402390438, "no_caption_prob": 8.939521649153903e-06}, {"id": 542, "seek": 317974, "start": 3179.74, "end": 3180.74, "text": " do with them.", "tokens": [50364, 360, 365, 552, 13, 50414, 50414, 865, 13, 865, 13, 1042, 11, 286, 362, 452, 1065, 11819, 466, 721, 300, 727, 312, 1880, 420, 3487, 11, 50692, 50692, 406, 11819, 13, 583, 1338, 11, 286, 600, 668, 6100, 538, 437, 561, 1361, 493, 365, 13, 1171, 5197, 11, 51066, 51066, 291, 1027, 264, 2699, 76, 3131, 17995, 281, 2699, 76, 13, 51250, 51250, 1079, 11, 300, 311, 558, 13, 865, 13, 51362, 51362, 18785, 322, 437, 9184, 25951, 1027, 5397, 281, 796, 293, 281, 291, 11, 2745, 11, 457, 264, 1558, 390, 51650, 51650, 490, 9184, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.20757890455793626, "compression_ratio": 1.521551724137931, "no_caption_prob": 3.4267246519448236e-05}, {"id": 543, "seek": 317974, "start": 3180.74, "end": 3186.2999999999997, "text": " Yeah. Yeah. Well, I have my own opinions about things that could be interesting or ideas,", "tokens": [50364, 360, 365, 552, 13, 50414, 50414, 865, 13, 865, 13, 1042, 11, 286, 362, 452, 1065, 11819, 466, 721, 300, 727, 312, 1880, 420, 3487, 11, 50692, 50692, 406, 11819, 13, 583, 1338, 11, 286, 600, 668, 6100, 538, 437, 561, 1361, 493, 365, 13, 1171, 5197, 11, 51066, 51066, 291, 1027, 264, 2699, 76, 3131, 17995, 281, 2699, 76, 13, 51250, 51250, 1079, 11, 300, 311, 558, 13, 865, 13, 51362, 51362, 18785, 322, 437, 9184, 25951, 1027, 5397, 281, 796, 293, 281, 291, 11, 2745, 11, 457, 264, 1558, 390, 51650, 51650, 490, 9184, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.20757890455793626, "compression_ratio": 1.521551724137931, "no_caption_prob": 3.4267246519448236e-05}, {"id": 544, "seek": 317974, "start": 3186.2999999999997, "end": 3193.7799999999997, "text": " not opinions. But yeah, I've been surprised by what people came up with. For instance,", "tokens": [50364, 360, 365, 552, 13, 50414, 50414, 865, 13, 865, 13, 1042, 11, 286, 362, 452, 1065, 11819, 466, 721, 300, 727, 312, 1880, 420, 3487, 11, 50692, 50692, 406, 11819, 13, 583, 1338, 11, 286, 600, 668, 6100, 538, 437, 561, 1361, 493, 365, 13, 1171, 5197, 11, 51066, 51066, 291, 1027, 264, 2699, 76, 3131, 17995, 281, 2699, 76, 13, 51250, 51250, 1079, 11, 300, 311, 558, 13, 865, 13, 51362, 51362, 18785, 322, 437, 9184, 25951, 1027, 5397, 281, 796, 293, 281, 291, 11, 2745, 11, 457, 264, 1558, 390, 51650, 51650, 490, 9184, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.20757890455793626, "compression_ratio": 1.521551724137931, "no_caption_prob": 3.4267246519448236e-05}, {"id": 545, "seek": 317974, "start": 3193.7799999999997, "end": 3197.4599999999996, "text": " you made the Elm review HTML to Elm.", "tokens": [50364, 360, 365, 552, 13, 50414, 50414, 865, 13, 865, 13, 1042, 11, 286, 362, 452, 1065, 11819, 466, 721, 300, 727, 312, 1880, 420, 3487, 11, 50692, 50692, 406, 11819, 13, 583, 1338, 11, 286, 600, 668, 6100, 538, 437, 561, 1361, 493, 365, 13, 1171, 5197, 11, 51066, 51066, 291, 1027, 264, 2699, 76, 3131, 17995, 281, 2699, 76, 13, 51250, 51250, 1079, 11, 300, 311, 558, 13, 865, 13, 51362, 51362, 18785, 322, 437, 9184, 25951, 1027, 5397, 281, 796, 293, 281, 291, 11, 2745, 11, 457, 264, 1558, 390, 51650, 51650, 490, 9184, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.20757890455793626, "compression_ratio": 1.521551724137931, "no_caption_prob": 3.4267246519448236e-05}, {"id": 546, "seek": 317974, "start": 3197.4599999999996, "end": 3199.7, "text": " Yes, that's right. Yeah.", "tokens": [50364, 360, 365, 552, 13, 50414, 50414, 865, 13, 865, 13, 1042, 11, 286, 362, 452, 1065, 11819, 466, 721, 300, 727, 312, 1880, 420, 3487, 11, 50692, 50692, 406, 11819, 13, 583, 1338, 11, 286, 600, 668, 6100, 538, 437, 561, 1361, 493, 365, 13, 1171, 5197, 11, 51066, 51066, 291, 1027, 264, 2699, 76, 3131, 17995, 281, 2699, 76, 13, 51250, 51250, 1079, 11, 300, 311, 558, 13, 865, 13, 51362, 51362, 18785, 322, 437, 9184, 25951, 1027, 5397, 281, 796, 293, 281, 291, 11, 2745, 11, 457, 264, 1558, 390, 51650, 51650, 490, 9184, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.20757890455793626, "compression_ratio": 1.521551724137931, "no_caption_prob": 3.4267246519448236e-05}, {"id": 547, "seek": 317974, "start": 3199.7, "end": 3205.4599999999996, "text": " Based on what Martin Stewart made credit to him and to you, obviously, but the idea was", "tokens": [50364, 360, 365, 552, 13, 50414, 50414, 865, 13, 865, 13, 1042, 11, 286, 362, 452, 1065, 11819, 466, 721, 300, 727, 312, 1880, 420, 3487, 11, 50692, 50692, 406, 11819, 13, 583, 1338, 11, 286, 600, 668, 6100, 538, 437, 561, 1361, 493, 365, 13, 1171, 5197, 11, 51066, 51066, 291, 1027, 264, 2699, 76, 3131, 17995, 281, 2699, 76, 13, 51250, 51250, 1079, 11, 300, 311, 558, 13, 865, 13, 51362, 51362, 18785, 322, 437, 9184, 25951, 1027, 5397, 281, 796, 293, 281, 291, 11, 2745, 11, 457, 264, 1558, 390, 51650, 51650, 490, 9184, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.20757890455793626, "compression_ratio": 1.521551724137931, "no_caption_prob": 3.4267246519448236e-05}, {"id": 548, "seek": 317974, "start": 3205.4599999999996, "end": 3207.1, "text": " from Martin.", "tokens": [50364, 360, 365, 552, 13, 50414, 50414, 865, 13, 865, 13, 1042, 11, 286, 362, 452, 1065, 11819, 466, 721, 300, 727, 312, 1880, 420, 3487, 11, 50692, 50692, 406, 11819, 13, 583, 1338, 11, 286, 600, 668, 6100, 538, 437, 561, 1361, 493, 365, 13, 1171, 5197, 11, 51066, 51066, 291, 1027, 264, 2699, 76, 3131, 17995, 281, 2699, 76, 13, 51250, 51250, 1079, 11, 300, 311, 558, 13, 865, 13, 51362, 51362, 18785, 322, 437, 9184, 25951, 1027, 5397, 281, 796, 293, 281, 291, 11, 2745, 11, 457, 264, 1558, 390, 51650, 51650, 490, 9184, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.20757890455793626, "compression_ratio": 1.521551724137931, "no_caption_prob": 3.4267246519448236e-05}, {"id": 549, "seek": 320710, "start": 3207.1, "end": 3212.2999999999997, "text": " His idea to use Elm review fixes as a code generation tool is 100% credit to him. And", "tokens": [50364, 2812, 1558, 281, 764, 2699, 76, 3131, 32539, 382, 257, 3089, 5125, 2290, 307, 2319, 4, 5397, 281, 796, 13, 400, 50624, 50624, 286, 1143, 257, 3840, 295, 702, 3089, 337, 300, 13, 50752, 50752, 407, 1338, 11, 300, 472, 286, 630, 406, 2066, 13, 400, 1338, 11, 300, 311, 257, 1238, 1627, 39230, 281, 6839, 13, 12151, 13, 51066, 51066, 286, 611, 458, 300, 512, 561, 576, 411, 281, 312, 1075, 281, 8460, 16679, 281, 1884, 7098, 51342, 51342, 322, 12355, 2361, 322, 264, 912, 1558, 13, 407, 411, 11, 300, 727, 312, 1880, 13, 51576, 51576, 865, 13, 407, 264, 2010, 1589, 307, 411, 264, 955, 472, 322, 428, 3172, 1329, 558, 586, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17768624623616536, "compression_ratio": 1.6156583629893237, "no_caption_prob": 1.5446121324202977e-05}, {"id": 550, "seek": 320710, "start": 3212.2999999999997, "end": 3214.86, "text": " I used a bunch of his code for that.", "tokens": [50364, 2812, 1558, 281, 764, 2699, 76, 3131, 32539, 382, 257, 3089, 5125, 2290, 307, 2319, 4, 5397, 281, 796, 13, 400, 50624, 50624, 286, 1143, 257, 3840, 295, 702, 3089, 337, 300, 13, 50752, 50752, 407, 1338, 11, 300, 472, 286, 630, 406, 2066, 13, 400, 1338, 11, 300, 311, 257, 1238, 1627, 39230, 281, 6839, 13, 12151, 13, 51066, 51066, 286, 611, 458, 300, 512, 561, 576, 411, 281, 312, 1075, 281, 8460, 16679, 281, 1884, 7098, 51342, 51342, 322, 12355, 2361, 322, 264, 912, 1558, 13, 407, 411, 11, 300, 727, 312, 1880, 13, 51576, 51576, 865, 13, 407, 264, 2010, 1589, 307, 411, 264, 955, 472, 322, 428, 3172, 1329, 558, 586, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17768624623616536, "compression_ratio": 1.6156583629893237, "no_caption_prob": 1.5446121324202977e-05}, {"id": 551, "seek": 320710, "start": 3214.86, "end": 3221.14, "text": " So yeah, that one I did not expect. And yeah, that's a pretty cool avenue to explore. Definitely.", "tokens": [50364, 2812, 1558, 281, 764, 2699, 76, 3131, 32539, 382, 257, 3089, 5125, 2290, 307, 2319, 4, 5397, 281, 796, 13, 400, 50624, 50624, 286, 1143, 257, 3840, 295, 702, 3089, 337, 300, 13, 50752, 50752, 407, 1338, 11, 300, 472, 286, 630, 406, 2066, 13, 400, 1338, 11, 300, 311, 257, 1238, 1627, 39230, 281, 6839, 13, 12151, 13, 51066, 51066, 286, 611, 458, 300, 512, 561, 576, 411, 281, 312, 1075, 281, 8460, 16679, 281, 1884, 7098, 51342, 51342, 322, 12355, 2361, 322, 264, 912, 1558, 13, 407, 411, 11, 300, 727, 312, 1880, 13, 51576, 51576, 865, 13, 407, 264, 2010, 1589, 307, 411, 264, 955, 472, 322, 428, 3172, 1329, 558, 586, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17768624623616536, "compression_ratio": 1.6156583629893237, "no_caption_prob": 1.5446121324202977e-05}, {"id": 552, "seek": 320710, "start": 3221.14, "end": 3226.66, "text": " I also know that some people would like to be able to generate modules to create files", "tokens": [50364, 2812, 1558, 281, 764, 2699, 76, 3131, 32539, 382, 257, 3089, 5125, 2290, 307, 2319, 4, 5397, 281, 796, 13, 400, 50624, 50624, 286, 1143, 257, 3840, 295, 702, 3089, 337, 300, 13, 50752, 50752, 407, 1338, 11, 300, 472, 286, 630, 406, 2066, 13, 400, 1338, 11, 300, 311, 257, 1238, 1627, 39230, 281, 6839, 13, 12151, 13, 51066, 51066, 286, 611, 458, 300, 512, 561, 576, 411, 281, 312, 1075, 281, 8460, 16679, 281, 1884, 7098, 51342, 51342, 322, 12355, 2361, 322, 264, 912, 1558, 13, 407, 411, 11, 300, 727, 312, 1880, 13, 51576, 51576, 865, 13, 407, 264, 2010, 1589, 307, 411, 264, 955, 472, 322, 428, 3172, 1329, 558, 586, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17768624623616536, "compression_ratio": 1.6156583629893237, "no_caption_prob": 1.5446121324202977e-05}, {"id": 553, "seek": 320710, "start": 3226.66, "end": 3231.3399999999997, "text": " on disk based on the same idea. So like, that could be interesting.", "tokens": [50364, 2812, 1558, 281, 764, 2699, 76, 3131, 32539, 382, 257, 3089, 5125, 2290, 307, 2319, 4, 5397, 281, 796, 13, 400, 50624, 50624, 286, 1143, 257, 3840, 295, 702, 3089, 337, 300, 13, 50752, 50752, 407, 1338, 11, 300, 472, 286, 630, 406, 2066, 13, 400, 1338, 11, 300, 311, 257, 1238, 1627, 39230, 281, 6839, 13, 12151, 13, 51066, 51066, 286, 611, 458, 300, 512, 561, 576, 411, 281, 312, 1075, 281, 8460, 16679, 281, 1884, 7098, 51342, 51342, 322, 12355, 2361, 322, 264, 912, 1558, 13, 407, 411, 11, 300, 727, 312, 1880, 13, 51576, 51576, 865, 13, 407, 264, 2010, 1589, 307, 411, 264, 955, 472, 322, 428, 3172, 1329, 558, 586, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17768624623616536, "compression_ratio": 1.6156583629893237, "no_caption_prob": 1.5446121324202977e-05}, {"id": 554, "seek": 320710, "start": 3231.3399999999997, "end": 3236.54, "text": " Yeah. So the type information is like the big one on your wish list right now.", "tokens": [50364, 2812, 1558, 281, 764, 2699, 76, 3131, 32539, 382, 257, 3089, 5125, 2290, 307, 2319, 4, 5397, 281, 796, 13, 400, 50624, 50624, 286, 1143, 257, 3840, 295, 702, 3089, 337, 300, 13, 50752, 50752, 407, 1338, 11, 300, 472, 286, 630, 406, 2066, 13, 400, 1338, 11, 300, 311, 257, 1238, 1627, 39230, 281, 6839, 13, 12151, 13, 51066, 51066, 286, 611, 458, 300, 512, 561, 576, 411, 281, 312, 1075, 281, 8460, 16679, 281, 1884, 7098, 51342, 51342, 322, 12355, 2361, 322, 264, 912, 1558, 13, 407, 411, 11, 300, 727, 312, 1880, 13, 51576, 51576, 865, 13, 407, 264, 2010, 1589, 307, 411, 264, 955, 472, 322, 428, 3172, 1329, 558, 586, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.17768624623616536, "compression_ratio": 1.6156583629893237, "no_caption_prob": 1.5446121324202977e-05}, {"id": 555, "seek": 323654, "start": 3236.54, "end": 3244.3, "text": " Yeah. And also performance for fixes and performance for Elm review because in my opinion, it's", "tokens": [50364, 865, 13, 400, 611, 3389, 337, 32539, 293, 3389, 337, 2699, 76, 3131, 570, 294, 452, 4800, 11, 309, 311, 50752, 50752, 886, 2964, 13, 583, 456, 311, 1310, 445, 385, 382, 257, 2596, 281, 264, 2290, 13, 1743, 11, 3716, 11, 412, 1985, 11, 309, 2516, 51094, 51094, 411, 257, 1379, 3456, 281, 1190, 322, 527, 3089, 3096, 11, 597, 411, 11, 1338, 11, 300, 311, 886, 2964, 13, 1743, 11, 498, 51428, 51428, 754, 286, 528, 281, 352, 360, 11369, 322, 5794, 1339, 264, 3131, 307, 10452, 11, 411, 11, 309, 311, 886, 938, 13, 51780, 51780, 865, 13, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24024929510098753, "compression_ratio": 1.613733905579399, "no_caption_prob": 4.6108838432701305e-05}, {"id": 556, "seek": 323654, "start": 3244.3, "end": 3251.14, "text": " too slow. But there's maybe just me as a parent to the tool. Like, ah, at works, it takes", "tokens": [50364, 865, 13, 400, 611, 3389, 337, 32539, 293, 3389, 337, 2699, 76, 3131, 570, 294, 452, 4800, 11, 309, 311, 50752, 50752, 886, 2964, 13, 583, 456, 311, 1310, 445, 385, 382, 257, 2596, 281, 264, 2290, 13, 1743, 11, 3716, 11, 412, 1985, 11, 309, 2516, 51094, 51094, 411, 257, 1379, 3456, 281, 1190, 322, 527, 3089, 3096, 11, 597, 411, 11, 1338, 11, 300, 311, 886, 2964, 13, 1743, 11, 498, 51428, 51428, 754, 286, 528, 281, 352, 360, 11369, 322, 5794, 1339, 264, 3131, 307, 10452, 11, 411, 11, 309, 311, 886, 938, 13, 51780, 51780, 865, 13, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24024929510098753, "compression_ratio": 1.613733905579399, "no_caption_prob": 4.6108838432701305e-05}, {"id": 557, "seek": 323654, "start": 3251.14, "end": 3257.82, "text": " like a whole minute to run on our code base, which like, yeah, that's too slow. Like, if", "tokens": [50364, 865, 13, 400, 611, 3389, 337, 32539, 293, 3389, 337, 2699, 76, 3131, 570, 294, 452, 4800, 11, 309, 311, 50752, 50752, 886, 2964, 13, 583, 456, 311, 1310, 445, 385, 382, 257, 2596, 281, 264, 2290, 13, 1743, 11, 3716, 11, 412, 1985, 11, 309, 2516, 51094, 51094, 411, 257, 1379, 3456, 281, 1190, 322, 527, 3089, 3096, 11, 597, 411, 11, 1338, 11, 300, 311, 886, 2964, 13, 1743, 11, 498, 51428, 51428, 754, 286, 528, 281, 352, 360, 11369, 322, 5794, 1339, 264, 3131, 307, 10452, 11, 411, 11, 309, 311, 886, 938, 13, 51780, 51780, 865, 13, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24024929510098753, "compression_ratio": 1.613733905579399, "no_caption_prob": 4.6108838432701305e-05}, {"id": 558, "seek": 323654, "start": 3257.82, "end": 3264.86, "text": " even I want to go do scroll on Twitter while the review is ongoing, like, it's too long.", "tokens": [50364, 865, 13, 400, 611, 3389, 337, 32539, 293, 3389, 337, 2699, 76, 3131, 570, 294, 452, 4800, 11, 309, 311, 50752, 50752, 886, 2964, 13, 583, 456, 311, 1310, 445, 385, 382, 257, 2596, 281, 264, 2290, 13, 1743, 11, 3716, 11, 412, 1985, 11, 309, 2516, 51094, 51094, 411, 257, 1379, 3456, 281, 1190, 322, 527, 3089, 3096, 11, 597, 411, 11, 1338, 11, 300, 311, 886, 2964, 13, 1743, 11, 498, 51428, 51428, 754, 286, 528, 281, 352, 360, 11369, 322, 5794, 1339, 264, 3131, 307, 10452, 11, 411, 11, 309, 311, 886, 938, 13, 51780, 51780, 865, 13, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24024929510098753, "compression_ratio": 1.613733905579399, "no_caption_prob": 4.6108838432701305e-05}, {"id": 559, "seek": 323654, "start": 3264.86, "end": 3265.86, "text": " Yeah. Right.", "tokens": [50364, 865, 13, 400, 611, 3389, 337, 32539, 293, 3389, 337, 2699, 76, 3131, 570, 294, 452, 4800, 11, 309, 311, 50752, 50752, 886, 2964, 13, 583, 456, 311, 1310, 445, 385, 382, 257, 2596, 281, 264, 2290, 13, 1743, 11, 3716, 11, 412, 1985, 11, 309, 2516, 51094, 51094, 411, 257, 1379, 3456, 281, 1190, 322, 527, 3089, 3096, 11, 597, 411, 11, 1338, 11, 300, 311, 886, 2964, 13, 1743, 11, 498, 51428, 51428, 754, 286, 528, 281, 352, 360, 11369, 322, 5794, 1339, 264, 3131, 307, 10452, 11, 411, 11, 309, 311, 886, 938, 13, 51780, 51780, 865, 13, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24024929510098753, "compression_ratio": 1.613733905579399, "no_caption_prob": 4.6108838432701305e-05}, {"id": 560, "seek": 326586, "start": 3265.86, "end": 3273.86, "text": " But I do wonder like, what kinds of use cases could people come up with if there was more", "tokens": [50364, 583, 286, 360, 2441, 411, 11, 437, 3685, 295, 764, 3331, 727, 561, 808, 493, 365, 498, 456, 390, 544, 50764, 50764, 1589, 30, 1743, 11, 286, 2441, 498, 512, 1333, 295, 12334, 33941, 733, 295, 7512, 727, 21511, 51140, 51140, 498, 561, 632, 544, 3873, 337, 884, 3089, 3095, 5215, 420, 11, 291, 458, 11, 445, 544, 1589, 51478, 51478, 412, 641, 27715, 13, 1436, 411, 437, 2699, 76, 393, 360, 365, 439, 264, 1589, 309, 575, 466, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1421120999807335, "compression_ratio": 1.617117117117117, "no_caption_prob": 2.8855978598585352e-05}, {"id": 561, "seek": 326586, "start": 3273.86, "end": 3281.38, "text": " information? Like, I wonder if some sort of dependent typed kind of techniques could emerge", "tokens": [50364, 583, 286, 360, 2441, 411, 11, 437, 3685, 295, 764, 3331, 727, 561, 808, 493, 365, 498, 456, 390, 544, 50764, 50764, 1589, 30, 1743, 11, 286, 2441, 498, 512, 1333, 295, 12334, 33941, 733, 295, 7512, 727, 21511, 51140, 51140, 498, 561, 632, 544, 3873, 337, 884, 3089, 3095, 5215, 420, 11, 291, 458, 11, 445, 544, 1589, 51478, 51478, 412, 641, 27715, 13, 1436, 411, 437, 2699, 76, 393, 360, 365, 439, 264, 1589, 309, 575, 466, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1421120999807335, "compression_ratio": 1.617117117117117, "no_caption_prob": 2.8855978598585352e-05}, {"id": 562, "seek": 326586, "start": 3281.38, "end": 3288.1400000000003, "text": " if people had more tools for doing code flow analysis or, you know, just more information", "tokens": [50364, 583, 286, 360, 2441, 411, 11, 437, 3685, 295, 764, 3331, 727, 561, 808, 493, 365, 498, 456, 390, 544, 50764, 50764, 1589, 30, 1743, 11, 286, 2441, 498, 512, 1333, 295, 12334, 33941, 733, 295, 7512, 727, 21511, 51140, 51140, 498, 561, 632, 544, 3873, 337, 884, 3089, 3095, 5215, 420, 11, 291, 458, 11, 445, 544, 1589, 51478, 51478, 412, 641, 27715, 13, 1436, 411, 437, 2699, 76, 393, 360, 365, 439, 264, 1589, 309, 575, 466, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1421120999807335, "compression_ratio": 1.617117117117117, "no_caption_prob": 2.8855978598585352e-05}, {"id": 563, "seek": 326586, "start": 3288.1400000000003, "end": 3293.94, "text": " at their fingertips. Because like what Elm can do with all the information it has about", "tokens": [50364, 583, 286, 360, 2441, 411, 11, 437, 3685, 295, 764, 3331, 727, 561, 808, 493, 365, 498, 456, 390, 544, 50764, 50764, 1589, 30, 1743, 11, 286, 2441, 498, 512, 1333, 295, 12334, 33941, 733, 295, 7512, 727, 21511, 51140, 51140, 498, 561, 632, 544, 3873, 337, 884, 3089, 3095, 5215, 420, 11, 291, 458, 11, 445, 544, 1589, 51478, 51478, 412, 641, 27715, 13, 1436, 411, 437, 2699, 76, 393, 360, 365, 439, 264, 1589, 309, 575, 466, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1421120999807335, "compression_ratio": 1.617117117117117, "no_caption_prob": 2.8855978598585352e-05}, {"id": 564, "seek": 329394, "start": 3293.94, "end": 3298.9, "text": " your code, both because it's a compiler and has computed all this information and because", "tokens": [50364, 428, 3089, 11, 1293, 570, 309, 311, 257, 31958, 293, 575, 40610, 439, 341, 1589, 293, 570, 50612, 50612, 264, 18491, 295, 264, 2699, 76, 2856, 11, 439, 264, 721, 11, 439, 264, 32567, 309, 575, 2361, 322, 50860, 50860, 577, 291, 362, 281, 2464, 428, 3089, 337, 309, 281, 312, 7363, 13, 821, 366, 445, 370, 867, 1627, 721, 51054, 51054, 300, 309, 393, 360, 13, 400, 498, 291, 722, 411, 1237, 412, 264, 31958, 3089, 11, 291, 434, 1953, 295, 439, 51294, 51294, 613, 12178, 13, 1743, 286, 458, 286, 360, 365, 2699, 76, 7183, 13, 286, 478, 411, 11, 1954, 452, 1265, 11, 498, 286, 390, 257, 51506, 51506, 31958, 11, 456, 366, 370, 867, 1627, 721, 286, 727, 360, 365, 264, 1589, 286, 576, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12287707826984462, "compression_ratio": 1.7986348122866893, "no_caption_prob": 7.843141065677628e-05}, {"id": 565, "seek": 329394, "start": 3298.9, "end": 3303.86, "text": " the constraints of the Elm language, all the things, all the guarantees it has based on", "tokens": [50364, 428, 3089, 11, 1293, 570, 309, 311, 257, 31958, 293, 575, 40610, 439, 341, 1589, 293, 570, 50612, 50612, 264, 18491, 295, 264, 2699, 76, 2856, 11, 439, 264, 721, 11, 439, 264, 32567, 309, 575, 2361, 322, 50860, 50860, 577, 291, 362, 281, 2464, 428, 3089, 337, 309, 281, 312, 7363, 13, 821, 366, 445, 370, 867, 1627, 721, 51054, 51054, 300, 309, 393, 360, 13, 400, 498, 291, 722, 411, 1237, 412, 264, 31958, 3089, 11, 291, 434, 1953, 295, 439, 51294, 51294, 613, 12178, 13, 1743, 286, 458, 286, 360, 365, 2699, 76, 7183, 13, 286, 478, 411, 11, 1954, 452, 1265, 11, 498, 286, 390, 257, 51506, 51506, 31958, 11, 456, 366, 370, 867, 1627, 721, 286, 727, 360, 365, 264, 1589, 286, 576, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12287707826984462, "compression_ratio": 1.7986348122866893, "no_caption_prob": 7.843141065677628e-05}, {"id": 566, "seek": 329394, "start": 3303.86, "end": 3307.7400000000002, "text": " how you have to write your code for it to be valid. There are just so many cool things", "tokens": [50364, 428, 3089, 11, 1293, 570, 309, 311, 257, 31958, 293, 575, 40610, 439, 341, 1589, 293, 570, 50612, 50612, 264, 18491, 295, 264, 2699, 76, 2856, 11, 439, 264, 721, 11, 439, 264, 32567, 309, 575, 2361, 322, 50860, 50860, 577, 291, 362, 281, 2464, 428, 3089, 337, 309, 281, 312, 7363, 13, 821, 366, 445, 370, 867, 1627, 721, 51054, 51054, 300, 309, 393, 360, 13, 400, 498, 291, 722, 411, 1237, 412, 264, 31958, 3089, 11, 291, 434, 1953, 295, 439, 51294, 51294, 613, 12178, 13, 1743, 286, 458, 286, 360, 365, 2699, 76, 7183, 13, 286, 478, 411, 11, 1954, 452, 1265, 11, 498, 286, 390, 257, 51506, 51506, 31958, 11, 456, 366, 370, 867, 1627, 721, 286, 727, 360, 365, 264, 1589, 286, 576, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12287707826984462, "compression_ratio": 1.7986348122866893, "no_caption_prob": 7.843141065677628e-05}, {"id": 567, "seek": 329394, "start": 3307.7400000000002, "end": 3312.54, "text": " that it can do. And if you start like looking at the compiler code, you're thinking of all", "tokens": [50364, 428, 3089, 11, 1293, 570, 309, 311, 257, 31958, 293, 575, 40610, 439, 341, 1589, 293, 570, 50612, 50612, 264, 18491, 295, 264, 2699, 76, 2856, 11, 439, 264, 721, 11, 439, 264, 32567, 309, 575, 2361, 322, 50860, 50860, 577, 291, 362, 281, 2464, 428, 3089, 337, 309, 281, 312, 7363, 13, 821, 366, 445, 370, 867, 1627, 721, 51054, 51054, 300, 309, 393, 360, 13, 400, 498, 291, 722, 411, 1237, 412, 264, 31958, 3089, 11, 291, 434, 1953, 295, 439, 51294, 51294, 613, 12178, 13, 1743, 286, 458, 286, 360, 365, 2699, 76, 7183, 13, 286, 478, 411, 11, 1954, 452, 1265, 11, 498, 286, 390, 257, 51506, 51506, 31958, 11, 456, 366, 370, 867, 1627, 721, 286, 727, 360, 365, 264, 1589, 286, 576, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12287707826984462, "compression_ratio": 1.7986348122866893, "no_caption_prob": 7.843141065677628e-05}, {"id": 568, "seek": 329394, "start": 3312.54, "end": 3316.78, "text": " these possibilities. Like I know I do with Elm pages. I'm like, oh my God, if I was a", "tokens": [50364, 428, 3089, 11, 1293, 570, 309, 311, 257, 31958, 293, 575, 40610, 439, 341, 1589, 293, 570, 50612, 50612, 264, 18491, 295, 264, 2699, 76, 2856, 11, 439, 264, 721, 11, 439, 264, 32567, 309, 575, 2361, 322, 50860, 50860, 577, 291, 362, 281, 2464, 428, 3089, 337, 309, 281, 312, 7363, 13, 821, 366, 445, 370, 867, 1627, 721, 51054, 51054, 300, 309, 393, 360, 13, 400, 498, 291, 722, 411, 1237, 412, 264, 31958, 3089, 11, 291, 434, 1953, 295, 439, 51294, 51294, 613, 12178, 13, 1743, 286, 458, 286, 360, 365, 2699, 76, 7183, 13, 286, 478, 411, 11, 1954, 452, 1265, 11, 498, 286, 390, 257, 51506, 51506, 31958, 11, 456, 366, 370, 867, 1627, 721, 286, 727, 360, 365, 264, 1589, 286, 576, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12287707826984462, "compression_ratio": 1.7986348122866893, "no_caption_prob": 7.843141065677628e-05}, {"id": 569, "seek": 329394, "start": 3316.78, "end": 3322.82, "text": " compiler, there are so many cool things I could do with the information I would have.", "tokens": [50364, 428, 3089, 11, 1293, 570, 309, 311, 257, 31958, 293, 575, 40610, 439, 341, 1589, 293, 570, 50612, 50612, 264, 18491, 295, 264, 2699, 76, 2856, 11, 439, 264, 721, 11, 439, 264, 32567, 309, 575, 2361, 322, 50860, 50860, 577, 291, 362, 281, 2464, 428, 3089, 337, 309, 281, 312, 7363, 13, 821, 366, 445, 370, 867, 1627, 721, 51054, 51054, 300, 309, 393, 360, 13, 400, 498, 291, 722, 411, 1237, 412, 264, 31958, 3089, 11, 291, 434, 1953, 295, 439, 51294, 51294, 613, 12178, 13, 1743, 286, 458, 286, 360, 365, 2699, 76, 7183, 13, 286, 478, 411, 11, 1954, 452, 1265, 11, 498, 286, 390, 257, 51506, 51506, 31958, 11, 456, 366, 370, 867, 1627, 721, 286, 727, 360, 365, 264, 1589, 286, 576, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12287707826984462, "compression_ratio": 1.7986348122866893, "no_caption_prob": 7.843141065677628e-05}, {"id": 570, "seek": 332282, "start": 3322.82, "end": 3328.9, "text": " Yeah. So a compiler is basically a static analysis tool, just like Elintor, right?", "tokens": [50364, 865, 13, 407, 257, 31958, 307, 1936, 257, 13437, 5215, 2290, 11, 445, 411, 2699, 686, 284, 11, 558, 30, 50668, 50668, 1779, 13, 467, 311, 257, 13437, 5215, 2290, 300, 264, 3089, 1633, 1320, 807, 294, 1668, 281, 1190, 11, 597, 51036, 51036, 300, 311, 1936, 439, 309, 307, 13, 467, 311, 729, 732, 721, 13, 51186, 51186, 400, 550, 309, 23815, 512, 7098, 13, 51280, 51280, 1779, 13, 1779, 13, 2743, 550, 11, 558, 13, 51414, 51414, 663, 307, 257, 31958, 644, 11, 457, 264, 1472, 307, 588, 1021, 382, 731, 13, 400, 264, 551, 307, 264, 31958, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.22156665875361517, "compression_ratio": 1.7142857142857142, "no_caption_prob": 3.269861190347001e-05}, {"id": 571, "seek": 332282, "start": 3328.9, "end": 3336.26, "text": " Right. It's a static analysis tool that the code must pass through in order to run, which", "tokens": [50364, 865, 13, 407, 257, 31958, 307, 1936, 257, 13437, 5215, 2290, 11, 445, 411, 2699, 686, 284, 11, 558, 30, 50668, 50668, 1779, 13, 467, 311, 257, 13437, 5215, 2290, 300, 264, 3089, 1633, 1320, 807, 294, 1668, 281, 1190, 11, 597, 51036, 51036, 300, 311, 1936, 439, 309, 307, 13, 467, 311, 729, 732, 721, 13, 51186, 51186, 400, 550, 309, 23815, 512, 7098, 13, 51280, 51280, 1779, 13, 1779, 13, 2743, 550, 11, 558, 13, 51414, 51414, 663, 307, 257, 31958, 644, 11, 457, 264, 1472, 307, 588, 1021, 382, 731, 13, 400, 264, 551, 307, 264, 31958, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.22156665875361517, "compression_ratio": 1.7142857142857142, "no_caption_prob": 3.269861190347001e-05}, {"id": 572, "seek": 332282, "start": 3336.26, "end": 3339.26, "text": " that's basically all it is. It's those two things.", "tokens": [50364, 865, 13, 407, 257, 31958, 307, 1936, 257, 13437, 5215, 2290, 11, 445, 411, 2699, 686, 284, 11, 558, 30, 50668, 50668, 1779, 13, 467, 311, 257, 13437, 5215, 2290, 300, 264, 3089, 1633, 1320, 807, 294, 1668, 281, 1190, 11, 597, 51036, 51036, 300, 311, 1936, 439, 309, 307, 13, 467, 311, 729, 732, 721, 13, 51186, 51186, 400, 550, 309, 23815, 512, 7098, 13, 51280, 51280, 1779, 13, 1779, 13, 2743, 550, 11, 558, 13, 51414, 51414, 663, 307, 257, 31958, 644, 11, 457, 264, 1472, 307, 588, 1021, 382, 731, 13, 400, 264, 551, 307, 264, 31958, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.22156665875361517, "compression_ratio": 1.7142857142857142, "no_caption_prob": 3.269861190347001e-05}, {"id": 573, "seek": 332282, "start": 3339.26, "end": 3341.1400000000003, "text": " And then it generates some files.", "tokens": [50364, 865, 13, 407, 257, 31958, 307, 1936, 257, 13437, 5215, 2290, 11, 445, 411, 2699, 686, 284, 11, 558, 30, 50668, 50668, 1779, 13, 467, 311, 257, 13437, 5215, 2290, 300, 264, 3089, 1633, 1320, 807, 294, 1668, 281, 1190, 11, 597, 51036, 51036, 300, 311, 1936, 439, 309, 307, 13, 467, 311, 729, 732, 721, 13, 51186, 51186, 400, 550, 309, 23815, 512, 7098, 13, 51280, 51280, 1779, 13, 1779, 13, 2743, 550, 11, 558, 13, 51414, 51414, 663, 307, 257, 31958, 644, 11, 457, 264, 1472, 307, 588, 1021, 382, 731, 13, 400, 264, 551, 307, 264, 31958, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.22156665875361517, "compression_ratio": 1.7142857142857142, "no_caption_prob": 3.269861190347001e-05}, {"id": 574, "seek": 332282, "start": 3341.1400000000003, "end": 3343.82, "text": " Right. Right. Also then, right.", "tokens": [50364, 865, 13, 407, 257, 31958, 307, 1936, 257, 13437, 5215, 2290, 11, 445, 411, 2699, 686, 284, 11, 558, 30, 50668, 50668, 1779, 13, 467, 311, 257, 13437, 5215, 2290, 300, 264, 3089, 1633, 1320, 807, 294, 1668, 281, 1190, 11, 597, 51036, 51036, 300, 311, 1936, 439, 309, 307, 13, 467, 311, 729, 732, 721, 13, 51186, 51186, 400, 550, 309, 23815, 512, 7098, 13, 51280, 51280, 1779, 13, 1779, 13, 2743, 550, 11, 558, 13, 51414, 51414, 663, 307, 257, 31958, 644, 11, 457, 264, 1472, 307, 588, 1021, 382, 731, 13, 400, 264, 551, 307, 264, 31958, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.22156665875361517, "compression_ratio": 1.7142857142857142, "no_caption_prob": 3.269861190347001e-05}, {"id": 575, "seek": 332282, "start": 3343.82, "end": 3350.7000000000003, "text": " That is a compiler part, but the rest is very important as well. And the thing is the compiler", "tokens": [50364, 865, 13, 407, 257, 31958, 307, 1936, 257, 13437, 5215, 2290, 11, 445, 411, 2699, 686, 284, 11, 558, 30, 50668, 50668, 1779, 13, 467, 311, 257, 13437, 5215, 2290, 300, 264, 3089, 1633, 1320, 807, 294, 1668, 281, 1190, 11, 597, 51036, 51036, 300, 311, 1936, 439, 309, 307, 13, 467, 311, 729, 732, 721, 13, 51186, 51186, 400, 550, 309, 23815, 512, 7098, 13, 51280, 51280, 1779, 13, 1779, 13, 2743, 550, 11, 558, 13, 51414, 51414, 663, 307, 257, 31958, 644, 11, 457, 264, 1472, 307, 588, 1021, 382, 731, 13, 400, 264, 551, 307, 264, 31958, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.22156665875361517, "compression_ratio": 1.7142857142857142, "no_caption_prob": 3.269861190347001e-05}, {"id": 576, "seek": 335070, "start": 3350.7, "end": 3355.66, "text": " is a general purpose tool, right? So it's only going to be able to infer things that", "tokens": [50364, 307, 257, 2674, 4334, 2290, 11, 558, 30, 407, 309, 311, 787, 516, 281, 312, 1075, 281, 13596, 721, 300, 50612, 50612, 264, 2856, 9898, 281, 2089, 293, 281, 2275, 721, 300, 309, 1177, 380, 528, 281, 2089, 13, 583, 50930, 50930, 550, 498, 291, 528, 281, 360, 746, 544, 13600, 300, 264, 2856, 390, 406, 4761, 337, 11, 291, 51216, 51216, 727, 7263, 360, 300, 365, 257, 588, 4005, 13437, 5215, 2290, 13, 407, 411, 11, 286, 500, 380, 458, 51476, 51476, 709, 466, 12334, 3467, 11, 457, 885, 1075, 281, 2573, 484, 412, 31413, 565, 300, 512, 1230, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1094055359180157, "compression_ratio": 1.6884615384615385, "no_caption_prob": 1.2029338904540055e-05}, {"id": 577, "seek": 335070, "start": 3355.66, "end": 3362.02, "text": " the language tries to allow and to report things that it doesn't want to allow. But", "tokens": [50364, 307, 257, 2674, 4334, 2290, 11, 558, 30, 407, 309, 311, 787, 516, 281, 312, 1075, 281, 13596, 721, 300, 50612, 50612, 264, 2856, 9898, 281, 2089, 293, 281, 2275, 721, 300, 309, 1177, 380, 528, 281, 2089, 13, 583, 50930, 50930, 550, 498, 291, 528, 281, 360, 746, 544, 13600, 300, 264, 2856, 390, 406, 4761, 337, 11, 291, 51216, 51216, 727, 7263, 360, 300, 365, 257, 588, 4005, 13437, 5215, 2290, 13, 407, 411, 11, 286, 500, 380, 458, 51476, 51476, 709, 466, 12334, 3467, 11, 457, 885, 1075, 281, 2573, 484, 412, 31413, 565, 300, 512, 1230, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1094055359180157, "compression_ratio": 1.6884615384615385, "no_caption_prob": 1.2029338904540055e-05}, {"id": 578, "seek": 335070, "start": 3362.02, "end": 3367.74, "text": " then if you want to do something more precise that the language was not designed for, you", "tokens": [50364, 307, 257, 2674, 4334, 2290, 11, 558, 30, 407, 309, 311, 787, 516, 281, 312, 1075, 281, 13596, 721, 300, 50612, 50612, 264, 2856, 9898, 281, 2089, 293, 281, 2275, 721, 300, 309, 1177, 380, 528, 281, 2089, 13, 583, 50930, 50930, 550, 498, 291, 528, 281, 360, 746, 544, 13600, 300, 264, 2856, 390, 406, 4761, 337, 11, 291, 51216, 51216, 727, 7263, 360, 300, 365, 257, 588, 4005, 13437, 5215, 2290, 13, 407, 411, 11, 286, 500, 380, 458, 51476, 51476, 709, 466, 12334, 3467, 11, 457, 885, 1075, 281, 2573, 484, 412, 31413, 565, 300, 512, 1230, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1094055359180157, "compression_ratio": 1.6884615384615385, "no_caption_prob": 1.2029338904540055e-05}, {"id": 579, "seek": 335070, "start": 3367.74, "end": 3372.9399999999996, "text": " could potentially do that with a very powerful static analysis tool. So like, I don't know", "tokens": [50364, 307, 257, 2674, 4334, 2290, 11, 558, 30, 407, 309, 311, 787, 516, 281, 312, 1075, 281, 13596, 721, 300, 50612, 50612, 264, 2856, 9898, 281, 2089, 293, 281, 2275, 721, 300, 309, 1177, 380, 528, 281, 2089, 13, 583, 50930, 50930, 550, 498, 291, 528, 281, 360, 746, 544, 13600, 300, 264, 2856, 390, 406, 4761, 337, 11, 291, 51216, 51216, 727, 7263, 360, 300, 365, 257, 588, 4005, 13437, 5215, 2290, 13, 407, 411, 11, 286, 500, 380, 458, 51476, 51476, 709, 466, 12334, 3467, 11, 457, 885, 1075, 281, 2573, 484, 412, 31413, 565, 300, 512, 1230, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1094055359180157, "compression_ratio": 1.6884615384615385, "no_caption_prob": 1.2029338904540055e-05}, {"id": 580, "seek": 335070, "start": 3372.9399999999996, "end": 3379.9399999999996, "text": " much about dependent types, but being able to figure out at compile time that some number", "tokens": [50364, 307, 257, 2674, 4334, 2290, 11, 558, 30, 407, 309, 311, 787, 516, 281, 312, 1075, 281, 13596, 721, 300, 50612, 50612, 264, 2856, 9898, 281, 2089, 293, 281, 2275, 721, 300, 309, 1177, 380, 528, 281, 2089, 13, 583, 50930, 50930, 550, 498, 291, 528, 281, 360, 746, 544, 13600, 300, 264, 2856, 390, 406, 4761, 337, 11, 291, 51216, 51216, 727, 7263, 360, 300, 365, 257, 588, 4005, 13437, 5215, 2290, 13, 407, 411, 11, 286, 500, 380, 458, 51476, 51476, 709, 466, 12334, 3467, 11, 457, 885, 1075, 281, 2573, 484, 412, 31413, 565, 300, 512, 1230, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1094055359180157, "compression_ratio": 1.6884615384615385, "no_caption_prob": 1.2029338904540055e-05}, {"id": 581, "seek": 337994, "start": 3379.94, "end": 3386.58, "text": " is always smaller than five, you could potentially do it by adding constraints, just like a language", "tokens": [50364, 307, 1009, 4356, 813, 1732, 11, 291, 727, 7263, 360, 309, 538, 5127, 18491, 11, 445, 411, 257, 2856, 50696, 50696, 365, 12334, 3467, 576, 360, 13, 2704, 11, 286, 500, 380, 458, 1547, 11, 457, 291, 727, 2138, 853, 50966, 50966, 281, 360, 300, 293, 550, 2275, 13603, 411, 11, 1911, 11, 286, 669, 406, 4069, 1547, 281, 2573, 341, 484, 13, 51322, 51322, 2555, 1319, 264, 636, 300, 291, 589, 365, 428, 3089, 13, 9242, 295, 411, 8177, 8650, 11, 597, 51584, 51584, 286, 519, 436, 3241, 7140, 295, 721, 11, 457, 498, 309, 311, 886, 1152, 11, 550, 436, 1029, 264, 561, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.100045195413292, "compression_ratio": 1.6231884057971016, "no_caption_prob": 8.267765224445611e-06}, {"id": 582, "seek": 337994, "start": 3386.58, "end": 3391.98, "text": " with dependent types would do. Maybe, I don't know enough, but you could definitely try", "tokens": [50364, 307, 1009, 4356, 813, 1732, 11, 291, 727, 7263, 360, 309, 538, 5127, 18491, 11, 445, 411, 257, 2856, 50696, 50696, 365, 12334, 3467, 576, 360, 13, 2704, 11, 286, 500, 380, 458, 1547, 11, 457, 291, 727, 2138, 853, 50966, 50966, 281, 360, 300, 293, 550, 2275, 13603, 411, 11, 1911, 11, 286, 669, 406, 4069, 1547, 281, 2573, 341, 484, 13, 51322, 51322, 2555, 1319, 264, 636, 300, 291, 589, 365, 428, 3089, 13, 9242, 295, 411, 8177, 8650, 11, 597, 51584, 51584, 286, 519, 436, 3241, 7140, 295, 721, 11, 457, 498, 309, 311, 886, 1152, 11, 550, 436, 1029, 264, 561, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.100045195413292, "compression_ratio": 1.6231884057971016, "no_caption_prob": 8.267765224445611e-06}, {"id": 583, "seek": 337994, "start": 3391.98, "end": 3399.1, "text": " to do that and then report errors like, Hey, I am not smart enough to figure this out.", "tokens": [50364, 307, 1009, 4356, 813, 1732, 11, 291, 727, 7263, 360, 309, 538, 5127, 18491, 11, 445, 411, 257, 2856, 50696, 50696, 365, 12334, 3467, 576, 360, 13, 2704, 11, 286, 500, 380, 458, 1547, 11, 457, 291, 727, 2138, 853, 50966, 50966, 281, 360, 300, 293, 550, 2275, 13603, 411, 11, 1911, 11, 286, 669, 406, 4069, 1547, 281, 2573, 341, 484, 13, 51322, 51322, 2555, 1319, 264, 636, 300, 291, 589, 365, 428, 3089, 13, 9242, 295, 411, 8177, 8650, 11, 597, 51584, 51584, 286, 519, 436, 3241, 7140, 295, 721, 11, 457, 498, 309, 311, 886, 1152, 11, 550, 436, 1029, 264, 561, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.100045195413292, "compression_ratio": 1.6231884057971016, "no_caption_prob": 8.267765224445611e-06}, {"id": 584, "seek": 337994, "start": 3399.1, "end": 3404.34, "text": " Please change the way that you work with your code. Kind of like proof languages, which", "tokens": [50364, 307, 1009, 4356, 813, 1732, 11, 291, 727, 7263, 360, 309, 538, 5127, 18491, 11, 445, 411, 257, 2856, 50696, 50696, 365, 12334, 3467, 576, 360, 13, 2704, 11, 286, 500, 380, 458, 1547, 11, 457, 291, 727, 2138, 853, 50966, 50966, 281, 360, 300, 293, 550, 2275, 13603, 411, 11, 1911, 11, 286, 669, 406, 4069, 1547, 281, 2573, 341, 484, 13, 51322, 51322, 2555, 1319, 264, 636, 300, 291, 589, 365, 428, 3089, 13, 9242, 295, 411, 8177, 8650, 11, 597, 51584, 51584, 286, 519, 436, 3241, 7140, 295, 721, 11, 457, 498, 309, 311, 886, 1152, 11, 550, 436, 1029, 264, 561, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.100045195413292, "compression_ratio": 1.6231884057971016, "no_caption_prob": 8.267765224445611e-06}, {"id": 585, "seek": 337994, "start": 3404.34, "end": 3409.68, "text": " I think they accept plenty of things, but if it's too hard, then they ask the people", "tokens": [50364, 307, 1009, 4356, 813, 1732, 11, 291, 727, 7263, 360, 309, 538, 5127, 18491, 11, 445, 411, 257, 2856, 50696, 50696, 365, 12334, 3467, 576, 360, 13, 2704, 11, 286, 500, 380, 458, 1547, 11, 457, 291, 727, 2138, 853, 50966, 50966, 281, 360, 300, 293, 550, 2275, 13603, 411, 11, 1911, 11, 286, 669, 406, 4069, 1547, 281, 2573, 341, 484, 13, 51322, 51322, 2555, 1319, 264, 636, 300, 291, 589, 365, 428, 3089, 13, 9242, 295, 411, 8177, 8650, 11, 597, 51584, 51584, 286, 519, 436, 3241, 7140, 295, 721, 11, 457, 498, 309, 311, 886, 1152, 11, 550, 436, 1029, 264, 561, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.100045195413292, "compression_ratio": 1.6231884057971016, "no_caption_prob": 8.267765224445611e-06}, {"id": 586, "seek": 340968, "start": 3409.68, "end": 3412.94, "text": " to rewrite their code in a way that they can understand.", "tokens": [50364, 281, 28132, 641, 3089, 294, 257, 636, 300, 436, 393, 1223, 13, 50527, 50527, 1779, 13, 3013, 286, 914, 11, 294, 257, 636, 11, 411, 11, 1338, 11, 498, 291, 584, 2107, 6707, 1329, 11, 291, 458, 11, 490, 50945, 50945, 1014, 420, 2035, 11, 558, 30, 663, 311, 411, 257, 14847, 3109, 281, 300, 294, 257, 636, 689, 291, 434, 1566, 11, 51273, 51273, 286, 478, 406, 516, 281, 360, 3089, 3095, 5215, 13, 509, 1633, 7081, 281, 385, 538, 767, 8437, 257, 2167, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.17188627264472875, "compression_ratio": 1.511737089201878, "no_caption_prob": 3.5911958548240364e-05}, {"id": 587, "seek": 340968, "start": 3412.94, "end": 3421.2999999999997, "text": " Right. Which I mean, in a way, like, yeah, if you say non empty list, you know, from", "tokens": [50364, 281, 28132, 641, 3089, 294, 257, 636, 300, 436, 393, 1223, 13, 50527, 50527, 1779, 13, 3013, 286, 914, 11, 294, 257, 636, 11, 411, 11, 1338, 11, 498, 291, 584, 2107, 6707, 1329, 11, 291, 458, 11, 490, 50945, 50945, 1014, 420, 2035, 11, 558, 30, 663, 311, 411, 257, 14847, 3109, 281, 300, 294, 257, 636, 689, 291, 434, 1566, 11, 51273, 51273, 286, 478, 406, 516, 281, 360, 3089, 3095, 5215, 13, 509, 1633, 7081, 281, 385, 538, 767, 8437, 257, 2167, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.17188627264472875, "compression_ratio": 1.511737089201878, "no_caption_prob": 3.5911958548240364e-05}, {"id": 588, "seek": 340968, "start": 3421.2999999999997, "end": 3427.8599999999997, "text": " cons or whatever, right? That's like a lazy approach to that in a way where you're saying,", "tokens": [50364, 281, 28132, 641, 3089, 294, 257, 636, 300, 436, 393, 1223, 13, 50527, 50527, 1779, 13, 3013, 286, 914, 11, 294, 257, 636, 11, 411, 11, 1338, 11, 498, 291, 584, 2107, 6707, 1329, 11, 291, 458, 11, 490, 50945, 50945, 1014, 420, 2035, 11, 558, 30, 663, 311, 411, 257, 14847, 3109, 281, 300, 294, 257, 636, 689, 291, 434, 1566, 11, 51273, 51273, 286, 478, 406, 516, 281, 360, 3089, 3095, 5215, 13, 509, 1633, 7081, 281, 385, 538, 767, 8437, 257, 2167, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.17188627264472875, "compression_ratio": 1.511737089201878, "no_caption_prob": 3.5911958548240364e-05}, {"id": 589, "seek": 340968, "start": 3427.8599999999997, "end": 3433.22, "text": " I'm not going to do code flow analysis. You must prove to me by actually passing a single", "tokens": [50364, 281, 28132, 641, 3089, 294, 257, 636, 300, 436, 393, 1223, 13, 50527, 50527, 1779, 13, 3013, 286, 914, 11, 294, 257, 636, 11, 411, 11, 1338, 11, 498, 291, 584, 2107, 6707, 1329, 11, 291, 458, 11, 490, 50945, 50945, 1014, 420, 2035, 11, 558, 30, 663, 311, 411, 257, 14847, 3109, 281, 300, 294, 257, 636, 689, 291, 434, 1566, 11, 51273, 51273, 286, 478, 406, 516, 281, 360, 3089, 3095, 5215, 13, 509, 1633, 7081, 281, 385, 538, 767, 8437, 257, 2167, 51541, 51541], "temperature": 0.0, "avg_logprob": -0.17188627264472875, "compression_ratio": 1.511737089201878, "no_caption_prob": 3.5911958548240364e-05}, {"id": 590, "seek": 343322, "start": 3433.22, "end": 3439.7799999999997, "text": " definite value and then a list which could be empty. I don't care. And so you've proven", "tokens": [50364, 25131, 2158, 293, 550, 257, 1329, 597, 727, 312, 6707, 13, 286, 500, 380, 1127, 13, 400, 370, 291, 600, 12785, 50692, 50692, 309, 13, 663, 311, 411, 264, 24822, 281, 27221, 300, 13, 1610, 291, 727, 360, 3089, 3095, 5215, 293, 291, 50992, 50992, 727, 584, 11, 731, 11, 286, 393, 12477, 428, 3089, 14518, 293, 286, 393, 536, 300, 291, 434, 1228, 341, 2107, 6707, 51352, 51352, 2010, 300, 16403, 281, 312, 2107, 6707, 11, 457, 1310, 406, 807, 264, 31958, 11, 457, 807, 2699, 76, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12251473509747049, "compression_ratio": 1.6574074074074074, "no_caption_prob": 3.2191077480092645e-05}, {"id": 591, "seek": 343322, "start": 3439.7799999999997, "end": 3445.7799999999997, "text": " it. That's like the shortcut to proving that. Or you could do code flow analysis and you", "tokens": [50364, 25131, 2158, 293, 550, 257, 1329, 597, 727, 312, 6707, 13, 286, 500, 380, 1127, 13, 400, 370, 291, 600, 12785, 50692, 50692, 309, 13, 663, 311, 411, 264, 24822, 281, 27221, 300, 13, 1610, 291, 727, 360, 3089, 3095, 5215, 293, 291, 50992, 50992, 727, 584, 11, 731, 11, 286, 393, 12477, 428, 3089, 14518, 293, 286, 393, 536, 300, 291, 434, 1228, 341, 2107, 6707, 51352, 51352, 2010, 300, 16403, 281, 312, 2107, 6707, 11, 457, 1310, 406, 807, 264, 31958, 11, 457, 807, 2699, 76, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12251473509747049, "compression_ratio": 1.6574074074074074, "no_caption_prob": 3.2191077480092645e-05}, {"id": 592, "seek": 343322, "start": 3445.7799999999997, "end": 3452.98, "text": " could say, well, I can analyze your code paths and I can see that you're using this non empty", "tokens": [50364, 25131, 2158, 293, 550, 257, 1329, 597, 727, 312, 6707, 13, 286, 500, 380, 1127, 13, 400, 370, 291, 600, 12785, 50692, 50692, 309, 13, 663, 311, 411, 264, 24822, 281, 27221, 300, 13, 1610, 291, 727, 360, 3089, 3095, 5215, 293, 291, 50992, 50992, 727, 584, 11, 731, 11, 286, 393, 12477, 428, 3089, 14518, 293, 286, 393, 536, 300, 291, 434, 1228, 341, 2107, 6707, 51352, 51352, 2010, 300, 16403, 281, 312, 2107, 6707, 11, 457, 1310, 406, 807, 264, 31958, 11, 457, 807, 2699, 76, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12251473509747049, "compression_ratio": 1.6574074074074074, "no_caption_prob": 3.2191077480092645e-05}, {"id": 593, "seek": 343322, "start": 3452.98, "end": 3458.22, "text": " type that promises to be non empty, but maybe not through the compiler, but through Elm", "tokens": [50364, 25131, 2158, 293, 550, 257, 1329, 597, 727, 312, 6707, 13, 286, 500, 380, 1127, 13, 400, 370, 291, 600, 12785, 50692, 50692, 309, 13, 663, 311, 411, 264, 24822, 281, 27221, 300, 13, 1610, 291, 727, 360, 3089, 3095, 5215, 293, 291, 50992, 50992, 727, 584, 11, 731, 11, 286, 393, 12477, 428, 3089, 14518, 293, 286, 393, 536, 300, 291, 434, 1228, 341, 2107, 6707, 51352, 51352, 2010, 300, 16403, 281, 312, 2107, 6707, 11, 457, 1310, 406, 807, 264, 31958, 11, 457, 807, 2699, 76, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12251473509747049, "compression_ratio": 1.6574074074074074, "no_caption_prob": 3.2191077480092645e-05}, {"id": 594, "seek": 345822, "start": 3458.22, "end": 3465.98, "text": " review and I see this one pinch point that I know this type will always go through and", "tokens": [50364, 3131, 293, 286, 536, 341, 472, 14614, 935, 300, 286, 458, 341, 2010, 486, 1009, 352, 807, 293, 50752, 50752, 309, 10860, 746, 281, 264, 1329, 13, 7504, 11, 291, 434, 665, 13, 1743, 300, 576, 312, 264, 1103, 43344, 50992, 50992, 3109, 13, 51042, 51042, 865, 13, 583, 550, 512, 721, 366, 588, 1152, 281, 13596, 570, 309, 4960, 3089, 490, 36606, 51373, 51373, 300, 321, 500, 380, 362, 1589, 466, 13, 407, 797, 11, 34238, 13, 821, 307, 257, 5308, 281, 312, 1075, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12718319624997257, "compression_ratio": 1.5423728813559323, "no_caption_prob": 6.502543692477047e-05}, {"id": 595, "seek": 345822, "start": 3465.98, "end": 3470.7799999999997, "text": " it adds something to the list. Therefore, you're good. Like that would be the deluxe", "tokens": [50364, 3131, 293, 286, 536, 341, 472, 14614, 935, 300, 286, 458, 341, 2010, 486, 1009, 352, 807, 293, 50752, 50752, 309, 10860, 746, 281, 264, 1329, 13, 7504, 11, 291, 434, 665, 13, 1743, 300, 576, 312, 264, 1103, 43344, 50992, 50992, 3109, 13, 51042, 51042, 865, 13, 583, 550, 512, 721, 366, 588, 1152, 281, 13596, 570, 309, 4960, 3089, 490, 36606, 51373, 51373, 300, 321, 500, 380, 362, 1589, 466, 13, 407, 797, 11, 34238, 13, 821, 307, 257, 5308, 281, 312, 1075, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12718319624997257, "compression_ratio": 1.5423728813559323, "no_caption_prob": 6.502543692477047e-05}, {"id": 596, "seek": 345822, "start": 3470.7799999999997, "end": 3471.7799999999997, "text": " approach.", "tokens": [50364, 3131, 293, 286, 536, 341, 472, 14614, 935, 300, 286, 458, 341, 2010, 486, 1009, 352, 807, 293, 50752, 50752, 309, 10860, 746, 281, 264, 1329, 13, 7504, 11, 291, 434, 665, 13, 1743, 300, 576, 312, 264, 1103, 43344, 50992, 50992, 3109, 13, 51042, 51042, 865, 13, 583, 550, 512, 721, 366, 588, 1152, 281, 13596, 570, 309, 4960, 3089, 490, 36606, 51373, 51373, 300, 321, 500, 380, 362, 1589, 466, 13, 407, 797, 11, 34238, 13, 821, 307, 257, 5308, 281, 312, 1075, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12718319624997257, "compression_ratio": 1.5423728813559323, "no_caption_prob": 6.502543692477047e-05}, {"id": 597, "seek": 345822, "start": 3471.7799999999997, "end": 3478.3999999999996, "text": " Yeah. But then some things are very hard to infer because it uses code from dependencies", "tokens": [50364, 3131, 293, 286, 536, 341, 472, 14614, 935, 300, 286, 458, 341, 2010, 486, 1009, 352, 807, 293, 50752, 50752, 309, 10860, 746, 281, 264, 1329, 13, 7504, 11, 291, 434, 665, 13, 1743, 300, 576, 312, 264, 1103, 43344, 50992, 50992, 3109, 13, 51042, 51042, 865, 13, 583, 550, 512, 721, 366, 588, 1152, 281, 13596, 570, 309, 4960, 3089, 490, 36606, 51373, 51373, 300, 321, 500, 380, 362, 1589, 466, 13, 407, 797, 11, 34238, 13, 821, 307, 257, 5308, 281, 312, 1075, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12718319624997257, "compression_ratio": 1.5423728813559323, "no_caption_prob": 6.502543692477047e-05}, {"id": 598, "seek": 345822, "start": 3478.3999999999996, "end": 3485.4599999999996, "text": " that we don't have information about. So again, misinformation. There is a request to be able", "tokens": [50364, 3131, 293, 286, 536, 341, 472, 14614, 935, 300, 286, 458, 341, 2010, 486, 1009, 352, 807, 293, 50752, 50752, 309, 10860, 746, 281, 264, 1329, 13, 7504, 11, 291, 434, 665, 13, 1743, 300, 576, 312, 264, 1103, 43344, 50992, 50992, 3109, 13, 51042, 51042, 865, 13, 583, 550, 512, 721, 366, 588, 1152, 281, 13596, 570, 309, 4960, 3089, 490, 36606, 51373, 51373, 300, 321, 500, 380, 362, 1589, 466, 13, 407, 797, 11, 34238, 13, 821, 307, 257, 5308, 281, 312, 1075, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12718319624997257, "compression_ratio": 1.5423728813559323, "no_caption_prob": 6.502543692477047e-05}, {"id": 599, "seek": 348546, "start": 3485.46, "end": 3491.2200000000003, "text": " to analyze the code from dependencies before analyzing the project. And I think that would", "tokens": [50364, 281, 12477, 264, 3089, 490, 36606, 949, 23663, 264, 1716, 13, 400, 286, 519, 300, 576, 50652, 50652, 312, 588, 8263, 13, 759, 291, 360, 300, 11, 291, 393, 1936, 360, 1379, 1461, 5215, 3993, 50928, 50928, 337, 264, 15778, 3166, 13, 2704, 321, 576, 411, 281, 312, 1075, 281, 12477, 24387, 293, 15778, 7098, 51229, 51229, 382, 731, 11, 457, 286, 519, 300, 311, 1242, 257, 857, 295, 484, 295, 1011, 412, 264, 1623, 412, 1935, 13, 467, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.15924059626567794, "compression_ratio": 1.5784753363228698, "no_caption_prob": 3.7265879200276686e-06}, {"id": 600, "seek": 348546, "start": 3491.2200000000003, "end": 3496.7400000000002, "text": " be very valuable. If you do that, you can basically do whole program analysis except", "tokens": [50364, 281, 12477, 264, 3089, 490, 36606, 949, 23663, 264, 1716, 13, 400, 286, 519, 300, 576, 50652, 50652, 312, 588, 8263, 13, 759, 291, 360, 300, 11, 291, 393, 1936, 360, 1379, 1461, 5215, 3993, 50928, 50928, 337, 264, 15778, 3166, 13, 2704, 321, 576, 411, 281, 312, 1075, 281, 12477, 24387, 293, 15778, 7098, 51229, 51229, 382, 731, 11, 457, 286, 519, 300, 311, 1242, 257, 857, 295, 484, 295, 1011, 412, 264, 1623, 412, 1935, 13, 467, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.15924059626567794, "compression_ratio": 1.5784753363228698, "no_caption_prob": 3.7265879200276686e-06}, {"id": 601, "seek": 348546, "start": 3496.7400000000002, "end": 3502.76, "text": " for the JavaScript parts. Maybe we would like to be able to analyze CSS and JavaScript files", "tokens": [50364, 281, 12477, 264, 3089, 490, 36606, 949, 23663, 264, 1716, 13, 400, 286, 519, 300, 576, 50652, 50652, 312, 588, 8263, 13, 759, 291, 360, 300, 11, 291, 393, 1936, 360, 1379, 1461, 5215, 3993, 50928, 50928, 337, 264, 15778, 3166, 13, 2704, 321, 576, 411, 281, 312, 1075, 281, 12477, 24387, 293, 15778, 7098, 51229, 51229, 382, 731, 11, 457, 286, 519, 300, 311, 1242, 257, 857, 295, 484, 295, 1011, 412, 264, 1623, 412, 1935, 13, 467, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.15924059626567794, "compression_ratio": 1.5784753363228698, "no_caption_prob": 3.7265879200276686e-06}, {"id": 602, "seek": 348546, "start": 3502.76, "end": 3509.06, "text": " as well, but I think that's getting a bit of out of hand at the moment at least. It", "tokens": [50364, 281, 12477, 264, 3089, 490, 36606, 949, 23663, 264, 1716, 13, 400, 286, 519, 300, 576, 50652, 50652, 312, 588, 8263, 13, 759, 291, 360, 300, 11, 291, 393, 1936, 360, 1379, 1461, 5215, 3993, 50928, 50928, 337, 264, 15778, 3166, 13, 2704, 321, 576, 411, 281, 312, 1075, 281, 12477, 24387, 293, 15778, 7098, 51229, 51229, 382, 731, 11, 457, 286, 519, 300, 311, 1242, 257, 857, 295, 484, 295, 1011, 412, 264, 1623, 412, 1935, 13, 467, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.15924059626567794, "compression_ratio": 1.5784753363228698, "no_caption_prob": 3.7265879200276686e-06}, {"id": 603, "seek": 350906, "start": 3509.06, "end": 3515.38, "text": " should be interesting, but maybe it's better to use two tools like ESLens and Elm review", "tokens": [50364, 820, 312, 1880, 11, 457, 1310, 309, 311, 1101, 281, 764, 732, 3873, 411, 12564, 43, 694, 293, 2699, 76, 3131, 50680, 50680, 293, 22162, 552, 294, 257, 636, 281, 976, 291, 439, 264, 912, 32567, 13, 50906, 50906, 400, 291, 393, 1009, 352, 264, 661, 636, 886, 11, 558, 30, 1743, 498, 291, 434, 7935, 281, 12477, 721, 365, 51182, 51182, 428, 24387, 11, 291, 393, 8460, 24387, 490, 2699, 76, 293, 550, 291, 362, 257, 544, 38901, 1081, 281, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.11037691901711856, "compression_ratio": 1.5345622119815667, "no_caption_prob": 5.2249561122152954e-05}, {"id": 604, "seek": 350906, "start": 3515.38, "end": 3519.9, "text": " and configure them in a way to give you all the same guarantees.", "tokens": [50364, 820, 312, 1880, 11, 457, 1310, 309, 311, 1101, 281, 764, 732, 3873, 411, 12564, 43, 694, 293, 2699, 76, 3131, 50680, 50680, 293, 22162, 552, 294, 257, 636, 281, 976, 291, 439, 264, 912, 32567, 13, 50906, 50906, 400, 291, 393, 1009, 352, 264, 661, 636, 886, 11, 558, 30, 1743, 498, 291, 434, 7935, 281, 12477, 721, 365, 51182, 51182, 428, 24387, 11, 291, 393, 8460, 24387, 490, 2699, 76, 293, 550, 291, 362, 257, 544, 38901, 1081, 281, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.11037691901711856, "compression_ratio": 1.5345622119815667, "no_caption_prob": 5.2249561122152954e-05}, {"id": 605, "seek": 350906, "start": 3519.9, "end": 3525.42, "text": " And you can always go the other way too, right? Like if you're wanting to analyze things with", "tokens": [50364, 820, 312, 1880, 11, 457, 1310, 309, 311, 1101, 281, 764, 732, 3873, 411, 12564, 43, 694, 293, 2699, 76, 3131, 50680, 50680, 293, 22162, 552, 294, 257, 636, 281, 976, 291, 439, 264, 912, 32567, 13, 50906, 50906, 400, 291, 393, 1009, 352, 264, 661, 636, 886, 11, 558, 30, 1743, 498, 291, 434, 7935, 281, 12477, 721, 365, 51182, 51182, 428, 24387, 11, 291, 393, 8460, 24387, 490, 2699, 76, 293, 550, 291, 362, 257, 544, 38901, 1081, 281, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.11037691901711856, "compression_ratio": 1.5345622119815667, "no_caption_prob": 5.2249561122152954e-05}, {"id": 606, "seek": 350906, "start": 3525.42, "end": 3533.58, "text": " your CSS, you can generate CSS from Elm and then you have a more constrained place to", "tokens": [50364, 820, 312, 1880, 11, 457, 1310, 309, 311, 1101, 281, 764, 732, 3873, 411, 12564, 43, 694, 293, 2699, 76, 3131, 50680, 50680, 293, 22162, 552, 294, 257, 636, 281, 976, 291, 439, 264, 912, 32567, 13, 50906, 50906, 400, 291, 393, 1009, 352, 264, 661, 636, 886, 11, 558, 30, 1743, 498, 291, 434, 7935, 281, 12477, 721, 365, 51182, 51182, 428, 24387, 11, 291, 393, 8460, 24387, 490, 2699, 76, 293, 550, 291, 362, 257, 544, 38901, 1081, 281, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.11037691901711856, "compression_ratio": 1.5345622119815667, "no_caption_prob": 5.2249561122152954e-05}, {"id": 607, "seek": 353358, "start": 3533.58, "end": 3539.34, "text": " analyze it. Whereas if you're like guarantees are always, you can always flip it on its", "tokens": [50364, 12477, 309, 13, 13813, 498, 291, 434, 411, 32567, 366, 1009, 11, 291, 393, 1009, 7929, 309, 322, 1080, 50652, 50652, 1378, 13, 509, 393, 584, 11, 731, 11, 341, 307, 886, 35847, 19639, 2001, 293, 1152, 281, 12477, 13, 7504, 286, 478, 516, 281, 50936, 50936, 1817, 7146, 309, 13, 1743, 281, 747, 746, 490, 364, 35847, 19639, 2001, 2823, 281, 257, 38901, 51239, 51239, 2823, 307, 588, 11, 588, 1152, 281, 747, 746, 490, 257, 38901, 2823, 281, 364, 35847, 19639, 2001, 51538, 51538, 2823, 307, 588, 1858, 11, 7226, 4124, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14128107927283462, "compression_ratio": 1.9763033175355451, "no_caption_prob": 0.00012146540393587202}, {"id": 608, "seek": 353358, "start": 3539.34, "end": 3545.02, "text": " head. You can say, well, this is too unconstrained and hard to analyze. Therefore I'm going to", "tokens": [50364, 12477, 309, 13, 13813, 498, 291, 434, 411, 32567, 366, 1009, 11, 291, 393, 1009, 7929, 309, 322, 1080, 50652, 50652, 1378, 13, 509, 393, 584, 11, 731, 11, 341, 307, 886, 35847, 19639, 2001, 293, 1152, 281, 12477, 13, 7504, 286, 478, 516, 281, 50936, 50936, 1817, 7146, 309, 13, 1743, 281, 747, 746, 490, 364, 35847, 19639, 2001, 2823, 281, 257, 38901, 51239, 51239, 2823, 307, 588, 11, 588, 1152, 281, 747, 746, 490, 257, 38901, 2823, 281, 364, 35847, 19639, 2001, 51538, 51538, 2823, 307, 588, 1858, 11, 7226, 4124, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14128107927283462, "compression_ratio": 1.9763033175355451, "no_caption_prob": 0.00012146540393587202}, {"id": 609, "seek": 353358, "start": 3545.02, "end": 3551.08, "text": " constrain it. Like to take something from an unconstrained environment to a constrained", "tokens": [50364, 12477, 309, 13, 13813, 498, 291, 434, 411, 32567, 366, 1009, 11, 291, 393, 1009, 7929, 309, 322, 1080, 50652, 50652, 1378, 13, 509, 393, 584, 11, 731, 11, 341, 307, 886, 35847, 19639, 2001, 293, 1152, 281, 12477, 13, 7504, 286, 478, 516, 281, 50936, 50936, 1817, 7146, 309, 13, 1743, 281, 747, 746, 490, 364, 35847, 19639, 2001, 2823, 281, 257, 38901, 51239, 51239, 2823, 307, 588, 11, 588, 1152, 281, 747, 746, 490, 257, 38901, 2823, 281, 364, 35847, 19639, 2001, 51538, 51538, 2823, 307, 588, 1858, 11, 7226, 4124, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14128107927283462, "compression_ratio": 1.9763033175355451, "no_caption_prob": 0.00012146540393587202}, {"id": 610, "seek": 353358, "start": 3551.08, "end": 3557.06, "text": " environment is very, very hard to take something from a constrained environment to an unconstrained", "tokens": [50364, 12477, 309, 13, 13813, 498, 291, 434, 411, 32567, 366, 1009, 11, 291, 393, 1009, 7929, 309, 322, 1080, 50652, 50652, 1378, 13, 509, 393, 584, 11, 731, 11, 341, 307, 886, 35847, 19639, 2001, 293, 1152, 281, 12477, 13, 7504, 286, 478, 516, 281, 50936, 50936, 1817, 7146, 309, 13, 1743, 281, 747, 746, 490, 364, 35847, 19639, 2001, 2823, 281, 257, 38901, 51239, 51239, 2823, 307, 588, 11, 588, 1152, 281, 747, 746, 490, 257, 38901, 2823, 281, 364, 35847, 19639, 2001, 51538, 51538, 2823, 307, 588, 1858, 11, 7226, 4124, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14128107927283462, "compression_ratio": 1.9763033175355451, "no_caption_prob": 0.00012146540393587202}, {"id": 611, "seek": 353358, "start": 3557.06, "end": 3559.7, "text": " environment is very easy, relatively speaking.", "tokens": [50364, 12477, 309, 13, 13813, 498, 291, 434, 411, 32567, 366, 1009, 11, 291, 393, 1009, 7929, 309, 322, 1080, 50652, 50652, 1378, 13, 509, 393, 584, 11, 731, 11, 341, 307, 886, 35847, 19639, 2001, 293, 1152, 281, 12477, 13, 7504, 286, 478, 516, 281, 50936, 50936, 1817, 7146, 309, 13, 1743, 281, 747, 746, 490, 364, 35847, 19639, 2001, 2823, 281, 257, 38901, 51239, 51239, 2823, 307, 588, 11, 588, 1152, 281, 747, 746, 490, 257, 38901, 2823, 281, 364, 35847, 19639, 2001, 51538, 51538, 2823, 307, 588, 1858, 11, 7226, 4124, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14128107927283462, "compression_ratio": 1.9763033175355451, "no_caption_prob": 0.00012146540393587202}, {"id": 612, "seek": 355970, "start": 3559.7, "end": 3567.3799999999997, "text": " I remember when I rewrote an Elm application to React, that was really easy. Whereas the", "tokens": [50364, 286, 1604, 562, 286, 319, 7449, 1370, 364, 2699, 76, 3861, 281, 30644, 11, 300, 390, 534, 1858, 13, 13813, 264, 50748, 50748, 6182, 576, 362, 668, 636, 6081, 11, 445, 411, 1936, 319, 4445, 1203, 13, 583, 50986, 50986, 337, 2699, 76, 281, 30644, 11, 456, 390, 257, 12853, 11, 597, 307, 709, 3571, 13, 51248, 51248, 1407, 747, 257, 4470, 1832, 6278, 3991, 293, 1261, 309, 666, 257, 30353, 472, 307, 1858, 13, 1407, 747, 257, 30353, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.15606860654899873, "compression_ratio": 1.5560747663551402, "no_caption_prob": 6.144131020846544e-06}, {"id": 613, "seek": 355970, "start": 3567.3799999999997, "end": 3572.14, "text": " opposite would have been way harder, just like basically re implement everything. But", "tokens": [50364, 286, 1604, 562, 286, 319, 7449, 1370, 364, 2699, 76, 3861, 281, 30644, 11, 300, 390, 534, 1858, 13, 13813, 264, 50748, 50748, 6182, 576, 362, 668, 636, 6081, 11, 445, 411, 1936, 319, 4445, 1203, 13, 583, 50986, 50986, 337, 2699, 76, 281, 30644, 11, 456, 390, 257, 12853, 11, 597, 307, 709, 3571, 13, 51248, 51248, 1407, 747, 257, 4470, 1832, 6278, 3991, 293, 1261, 309, 666, 257, 30353, 472, 307, 1858, 13, 1407, 747, 257, 30353, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.15606860654899873, "compression_ratio": 1.5560747663551402, "no_caption_prob": 6.144131020846544e-06}, {"id": 614, "seek": 355970, "start": 3572.14, "end": 3577.3799999999997, "text": " for Elm to React, there was a translation, which is much easier.", "tokens": [50364, 286, 1604, 562, 286, 319, 7449, 1370, 364, 2699, 76, 3861, 281, 30644, 11, 300, 390, 534, 1858, 13, 13813, 264, 50748, 50748, 6182, 576, 362, 668, 636, 6081, 11, 445, 411, 1936, 319, 4445, 1203, 13, 583, 50986, 50986, 337, 2699, 76, 281, 30644, 11, 456, 390, 257, 12853, 11, 597, 307, 709, 3571, 13, 51248, 51248, 1407, 747, 257, 4470, 1832, 6278, 3991, 293, 1261, 309, 666, 257, 30353, 472, 307, 1858, 13, 1407, 747, 257, 30353, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.15606860654899873, "compression_ratio": 1.5560747663551402, "no_caption_prob": 6.144131020846544e-06}, {"id": 615, "seek": 355970, "start": 3577.3799999999997, "end": 3584.2599999999998, "text": " To take a lossless audio file and turn it into a compressed one is easy. To take a compressed", "tokens": [50364, 286, 1604, 562, 286, 319, 7449, 1370, 364, 2699, 76, 3861, 281, 30644, 11, 300, 390, 534, 1858, 13, 13813, 264, 50748, 50748, 6182, 576, 362, 668, 636, 6081, 11, 445, 411, 1936, 319, 4445, 1203, 13, 583, 50986, 50986, 337, 2699, 76, 281, 30644, 11, 456, 390, 257, 12853, 11, 597, 307, 709, 3571, 13, 51248, 51248, 1407, 747, 257, 4470, 1832, 6278, 3991, 293, 1261, 309, 666, 257, 30353, 472, 307, 1858, 13, 1407, 747, 257, 30353, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.15606860654899873, "compression_ratio": 1.5560747663551402, "no_caption_prob": 6.144131020846544e-06}, {"id": 616, "seek": 358426, "start": 3584.26, "end": 3591.6600000000003, "text": " audio file or compressed image and turn it into a lossless one or to do the CSI enhance,", "tokens": [50364, 6278, 3991, 420, 30353, 3256, 293, 1261, 309, 666, 257, 4470, 1832, 472, 420, 281, 360, 264, 9460, 40, 11985, 11, 50734, 50734, 309, 311, 257, 6081, 1154, 13, 50784, 50784, 286, 500, 380, 458, 498, 291, 528, 281, 751, 466, 1252, 5065, 382, 731, 13, 663, 311, 1880, 11, 457, 286, 51186, 51186, 500, 380, 458, 577, 321, 366, 322, 565, 13, 51282, 51282, 492, 727, 751, 257, 707, 544, 293, 920, 312, 294, 527, 2674, 565, 4910, 13, 51488, 51488, 1042, 11, 321, 393, 10101, 527, 9313, 281, 312, 732, 2496, 938, 13, 663, 311, 2489, 382, 731, 13, 286, 914, 11, 321, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16433295853641056, "compression_ratio": 1.5975103734439835, "no_caption_prob": 3.373627987457439e-05}, {"id": 617, "seek": 358426, "start": 3591.6600000000003, "end": 3592.6600000000003, "text": " it's a harder problem.", "tokens": [50364, 6278, 3991, 420, 30353, 3256, 293, 1261, 309, 666, 257, 4470, 1832, 472, 420, 281, 360, 264, 9460, 40, 11985, 11, 50734, 50734, 309, 311, 257, 6081, 1154, 13, 50784, 50784, 286, 500, 380, 458, 498, 291, 528, 281, 751, 466, 1252, 5065, 382, 731, 13, 663, 311, 1880, 11, 457, 286, 51186, 51186, 500, 380, 458, 577, 321, 366, 322, 565, 13, 51282, 51282, 492, 727, 751, 257, 707, 544, 293, 920, 312, 294, 527, 2674, 565, 4910, 13, 51488, 51488, 1042, 11, 321, 393, 10101, 527, 9313, 281, 312, 732, 2496, 938, 13, 663, 311, 2489, 382, 731, 13, 286, 914, 11, 321, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16433295853641056, "compression_ratio": 1.5975103734439835, "no_caption_prob": 3.373627987457439e-05}, {"id": 618, "seek": 358426, "start": 3592.6600000000003, "end": 3600.7000000000003, "text": " I don't know if you want to talk about side effects as well. That's interesting, but I", "tokens": [50364, 6278, 3991, 420, 30353, 3256, 293, 1261, 309, 666, 257, 4470, 1832, 472, 420, 281, 360, 264, 9460, 40, 11985, 11, 50734, 50734, 309, 311, 257, 6081, 1154, 13, 50784, 50784, 286, 500, 380, 458, 498, 291, 528, 281, 751, 466, 1252, 5065, 382, 731, 13, 663, 311, 1880, 11, 457, 286, 51186, 51186, 500, 380, 458, 577, 321, 366, 322, 565, 13, 51282, 51282, 492, 727, 751, 257, 707, 544, 293, 920, 312, 294, 527, 2674, 565, 4910, 13, 51488, 51488, 1042, 11, 321, 393, 10101, 527, 9313, 281, 312, 732, 2496, 938, 13, 663, 311, 2489, 382, 731, 13, 286, 914, 11, 321, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16433295853641056, "compression_ratio": 1.5975103734439835, "no_caption_prob": 3.373627987457439e-05}, {"id": 619, "seek": 358426, "start": 3600.7000000000003, "end": 3602.6200000000003, "text": " don't know how we are on time.", "tokens": [50364, 6278, 3991, 420, 30353, 3256, 293, 1261, 309, 666, 257, 4470, 1832, 472, 420, 281, 360, 264, 9460, 40, 11985, 11, 50734, 50734, 309, 311, 257, 6081, 1154, 13, 50784, 50784, 286, 500, 380, 458, 498, 291, 528, 281, 751, 466, 1252, 5065, 382, 731, 13, 663, 311, 1880, 11, 457, 286, 51186, 51186, 500, 380, 458, 577, 321, 366, 322, 565, 13, 51282, 51282, 492, 727, 751, 257, 707, 544, 293, 920, 312, 294, 527, 2674, 565, 4910, 13, 51488, 51488, 1042, 11, 321, 393, 10101, 527, 9313, 281, 312, 732, 2496, 938, 13, 663, 311, 2489, 382, 731, 13, 286, 914, 11, 321, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16433295853641056, "compression_ratio": 1.5975103734439835, "no_caption_prob": 3.373627987457439e-05}, {"id": 620, "seek": 358426, "start": 3602.6200000000003, "end": 3606.7400000000002, "text": " We could talk a little more and still be in our general time window.", "tokens": [50364, 6278, 3991, 420, 30353, 3256, 293, 1261, 309, 666, 257, 4470, 1832, 472, 420, 281, 360, 264, 9460, 40, 11985, 11, 50734, 50734, 309, 311, 257, 6081, 1154, 13, 50784, 50784, 286, 500, 380, 458, 498, 291, 528, 281, 751, 466, 1252, 5065, 382, 731, 13, 663, 311, 1880, 11, 457, 286, 51186, 51186, 500, 380, 458, 577, 321, 366, 322, 565, 13, 51282, 51282, 492, 727, 751, 257, 707, 544, 293, 920, 312, 294, 527, 2674, 565, 4910, 13, 51488, 51488, 1042, 11, 321, 393, 10101, 527, 9313, 281, 312, 732, 2496, 938, 13, 663, 311, 2489, 382, 731, 13, 286, 914, 11, 321, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16433295853641056, "compression_ratio": 1.5975103734439835, "no_caption_prob": 3.373627987457439e-05}, {"id": 621, "seek": 358426, "start": 3606.7400000000002, "end": 3613.46, "text": " Well, we can extend our episodes to be two hours long. That's fine as well. I mean, we", "tokens": [50364, 6278, 3991, 420, 30353, 3256, 293, 1261, 309, 666, 257, 4470, 1832, 472, 420, 281, 360, 264, 9460, 40, 11985, 11, 50734, 50734, 309, 311, 257, 6081, 1154, 13, 50784, 50784, 286, 500, 380, 458, 498, 291, 528, 281, 751, 466, 1252, 5065, 382, 731, 13, 663, 311, 1880, 11, 457, 286, 51186, 51186, 500, 380, 458, 577, 321, 366, 322, 565, 13, 51282, 51282, 492, 727, 751, 257, 707, 544, 293, 920, 312, 294, 527, 2674, 565, 4910, 13, 51488, 51488, 1042, 11, 321, 393, 10101, 527, 9313, 281, 312, 732, 2496, 938, 13, 663, 311, 2489, 382, 731, 13, 286, 914, 11, 321, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.16433295853641056, "compression_ratio": 1.5975103734439835, "no_caption_prob": 3.373627987457439e-05}, {"id": 622, "seek": 361346, "start": 3613.46, "end": 3618.42, "text": " did have shorter episodes recently, so we need to compensate, right?", "tokens": [50364, 630, 362, 11639, 9313, 3938, 11, 370, 321, 643, 281, 29458, 11, 558, 30, 50612, 50612, 1485, 1859, 689, 291, 362, 257, 688, 295, 7908, 35127, 420, 7908, 40019, 294, 257, 688, 295, 661, 8650, 50942, 50942, 293, 661, 22896, 1559, 307, 365, 264, 6814, 295, 1252, 5065, 13, 1171, 5197, 11, 498, 321, 747, 264, 51350, 51350, 572, 44383, 9102, 4978, 337, 2699, 76, 11, 689, 291, 584, 498, 291, 362, 316, 6915, 512, 2445, 818, 11, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14465880975490664, "compression_ratio": 1.6018957345971565, "no_caption_prob": 3.0716513720108196e-05}, {"id": 623, "seek": 361346, "start": 3618.42, "end": 3625.02, "text": " One area where you have a lot of false positives or false negatives in a lot of other languages", "tokens": [50364, 630, 362, 11639, 9313, 3938, 11, 370, 321, 643, 281, 29458, 11, 558, 30, 50612, 50612, 1485, 1859, 689, 291, 362, 257, 688, 295, 7908, 35127, 420, 7908, 40019, 294, 257, 688, 295, 661, 8650, 50942, 50942, 293, 661, 22896, 1559, 307, 365, 264, 6814, 295, 1252, 5065, 13, 1171, 5197, 11, 498, 321, 747, 264, 51350, 51350, 572, 44383, 9102, 4978, 337, 2699, 76, 11, 689, 291, 584, 498, 291, 362, 316, 6915, 512, 2445, 818, 11, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14465880975490664, "compression_ratio": 1.6018957345971565, "no_caption_prob": 3.0716513720108196e-05}, {"id": 624, "seek": 361346, "start": 3625.02, "end": 3633.18, "text": " and other linters is with the presence of side effects. For instance, if we take the", "tokens": [50364, 630, 362, 11639, 9313, 3938, 11, 370, 321, 643, 281, 29458, 11, 558, 30, 50612, 50612, 1485, 1859, 689, 291, 362, 257, 688, 295, 7908, 35127, 420, 7908, 40019, 294, 257, 688, 295, 661, 8650, 50942, 50942, 293, 661, 22896, 1559, 307, 365, 264, 6814, 295, 1252, 5065, 13, 1171, 5197, 11, 498, 321, 747, 264, 51350, 51350, 572, 44383, 9102, 4978, 337, 2699, 76, 11, 689, 291, 584, 498, 291, 362, 316, 6915, 512, 2445, 818, 11, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14465880975490664, "compression_ratio": 1.6018957345971565, "no_caption_prob": 3.0716513720108196e-05}, {"id": 625, "seek": 361346, "start": 3633.18, "end": 3641.14, "text": " no unused variables rule for Elm, where you say if you have A equals some function call,", "tokens": [50364, 630, 362, 11639, 9313, 3938, 11, 370, 321, 643, 281, 29458, 11, 558, 30, 50612, 50612, 1485, 1859, 689, 291, 362, 257, 688, 295, 7908, 35127, 420, 7908, 40019, 294, 257, 688, 295, 661, 8650, 50942, 50942, 293, 661, 22896, 1559, 307, 365, 264, 6814, 295, 1252, 5065, 13, 1171, 5197, 11, 498, 321, 747, 264, 51350, 51350, 572, 44383, 9102, 4978, 337, 2699, 76, 11, 689, 291, 584, 498, 291, 362, 316, 6915, 512, 2445, 818, 11, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.14465880975490664, "compression_ratio": 1.6018957345971565, "no_caption_prob": 3.0716513720108196e-05}, {"id": 626, "seek": 364114, "start": 3641.14, "end": 3645.14, "text": " and then this value A is never used.", "tokens": [50364, 293, 550, 341, 2158, 316, 307, 1128, 1143, 13, 50564, 50564, 682, 2699, 76, 3131, 11, 321, 458, 11, 731, 11, 341, 2445, 818, 575, 572, 1252, 5065, 13, 492, 393, 4159, 264, 50952, 50952, 2302, 27606, 490, 264, 3089, 11, 293, 550, 321, 393, 574, 412, 1968, 300, 2445, 307, 1143, 51244, 51244, 420, 406, 1143, 4992, 1646, 13, 51339, 51339, 583, 294, 257, 2856, 365, 1252, 5065, 11, 309, 311, 588, 1152, 281, 980, 300, 13, 492, 458, 321, 393, 4159, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.12978947299650345, "compression_ratio": 1.618811881188119, "no_caption_prob": 2.2124542738310993e-05}, {"id": 627, "seek": 364114, "start": 3645.14, "end": 3652.9, "text": " In Elm review, we know, well, this function call has no side effects. We can remove the", "tokens": [50364, 293, 550, 341, 2158, 316, 307, 1128, 1143, 13, 50564, 50564, 682, 2699, 76, 3131, 11, 321, 458, 11, 731, 11, 341, 2445, 818, 575, 572, 1252, 5065, 13, 492, 393, 4159, 264, 50952, 50952, 2302, 27606, 490, 264, 3089, 11, 293, 550, 321, 393, 574, 412, 1968, 300, 2445, 307, 1143, 51244, 51244, 420, 406, 1143, 4992, 1646, 13, 51339, 51339, 583, 294, 257, 2856, 365, 1252, 5065, 11, 309, 311, 588, 1152, 281, 980, 300, 13, 492, 458, 321, 393, 4159, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.12978947299650345, "compression_ratio": 1.618811881188119, "no_caption_prob": 2.2124542738310993e-05}, {"id": 628, "seek": 364114, "start": 3652.9, "end": 3658.74, "text": " entire declaration from the code, and then we can look at whether that function is used", "tokens": [50364, 293, 550, 341, 2158, 316, 307, 1128, 1143, 13, 50564, 50564, 682, 2699, 76, 3131, 11, 321, 458, 11, 731, 11, 341, 2445, 818, 575, 572, 1252, 5065, 13, 492, 393, 4159, 264, 50952, 50952, 2302, 27606, 490, 264, 3089, 11, 293, 550, 321, 393, 574, 412, 1968, 300, 2445, 307, 1143, 51244, 51244, 420, 406, 1143, 4992, 1646, 13, 51339, 51339, 583, 294, 257, 2856, 365, 1252, 5065, 11, 309, 311, 588, 1152, 281, 980, 300, 13, 492, 458, 321, 393, 4159, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.12978947299650345, "compression_ratio": 1.618811881188119, "no_caption_prob": 2.2124542738310993e-05}, {"id": 629, "seek": 364114, "start": 3658.74, "end": 3660.64, "text": " or not used anywhere else.", "tokens": [50364, 293, 550, 341, 2158, 316, 307, 1128, 1143, 13, 50564, 50564, 682, 2699, 76, 3131, 11, 321, 458, 11, 731, 11, 341, 2445, 818, 575, 572, 1252, 5065, 13, 492, 393, 4159, 264, 50952, 50952, 2302, 27606, 490, 264, 3089, 11, 293, 550, 321, 393, 574, 412, 1968, 300, 2445, 307, 1143, 51244, 51244, 420, 406, 1143, 4992, 1646, 13, 51339, 51339, 583, 294, 257, 2856, 365, 1252, 5065, 11, 309, 311, 588, 1152, 281, 980, 300, 13, 492, 458, 321, 393, 4159, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.12978947299650345, "compression_ratio": 1.618811881188119, "no_caption_prob": 2.2124542738310993e-05}, {"id": 630, "seek": 364114, "start": 3660.64, "end": 3669.06, "text": " But in a language with side effects, it's very hard to tell that. We know we can remove", "tokens": [50364, 293, 550, 341, 2158, 316, 307, 1128, 1143, 13, 50564, 50564, 682, 2699, 76, 3131, 11, 321, 458, 11, 731, 11, 341, 2445, 818, 575, 572, 1252, 5065, 13, 492, 393, 4159, 264, 50952, 50952, 2302, 27606, 490, 264, 3089, 11, 293, 550, 321, 393, 574, 412, 1968, 300, 2445, 307, 1143, 51244, 51244, 420, 406, 1143, 4992, 1646, 13, 51339, 51339, 583, 294, 257, 2856, 365, 1252, 5065, 11, 309, 311, 588, 1152, 281, 980, 300, 13, 492, 458, 321, 393, 4159, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.12978947299650345, "compression_ratio": 1.618811881188119, "no_caption_prob": 2.2124542738310993e-05}, {"id": 631, "seek": 366906, "start": 3669.06, "end": 3673.58, "text": " const A equals, we can remove that part, but we don't know if we can remove the function", "tokens": [50364, 1817, 316, 6915, 11, 321, 393, 4159, 300, 644, 11, 457, 321, 500, 380, 458, 498, 321, 393, 4159, 264, 2445, 50590, 50590, 818, 570, 309, 1062, 362, 1252, 5065, 11, 558, 30, 50806, 50806, 400, 300, 307, 516, 281, 312, 2074, 337, 604, 2856, 11, 382, 1400, 382, 286, 458, 11, 300, 307, 406, 257, 6075, 11745, 51164, 51164, 2856, 11, 420, 412, 1935, 689, 264, 2445, 307, 406, 25339, 770, 294, 512, 636, 382, 885, 6075, 13, 51478, 51478, 407, 885, 1075, 281, 10687, 322, 264, 1186, 300, 6828, 362, 572, 1252, 5065, 11, 300, 767, 4045, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10617985771697702, "compression_ratio": 1.7973568281938326, "no_caption_prob": 5.828682697028853e-05}, {"id": 632, "seek": 366906, "start": 3673.58, "end": 3677.9, "text": " call because it might have side effects, right?", "tokens": [50364, 1817, 316, 6915, 11, 321, 393, 4159, 300, 644, 11, 457, 321, 500, 380, 458, 498, 321, 393, 4159, 264, 2445, 50590, 50590, 818, 570, 309, 1062, 362, 1252, 5065, 11, 558, 30, 50806, 50806, 400, 300, 307, 516, 281, 312, 2074, 337, 604, 2856, 11, 382, 1400, 382, 286, 458, 11, 300, 307, 406, 257, 6075, 11745, 51164, 51164, 2856, 11, 420, 412, 1935, 689, 264, 2445, 307, 406, 25339, 770, 294, 512, 636, 382, 885, 6075, 13, 51478, 51478, 407, 885, 1075, 281, 10687, 322, 264, 1186, 300, 6828, 362, 572, 1252, 5065, 11, 300, 767, 4045, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10617985771697702, "compression_ratio": 1.7973568281938326, "no_caption_prob": 5.828682697028853e-05}, {"id": 633, "seek": 366906, "start": 3677.9, "end": 3685.06, "text": " And that is going to be true for any language, as far as I know, that is not a pure functional", "tokens": [50364, 1817, 316, 6915, 11, 321, 393, 4159, 300, 644, 11, 457, 321, 500, 380, 458, 498, 321, 393, 4159, 264, 2445, 50590, 50590, 818, 570, 309, 1062, 362, 1252, 5065, 11, 558, 30, 50806, 50806, 400, 300, 307, 516, 281, 312, 2074, 337, 604, 2856, 11, 382, 1400, 382, 286, 458, 11, 300, 307, 406, 257, 6075, 11745, 51164, 51164, 2856, 11, 420, 412, 1935, 689, 264, 2445, 307, 406, 25339, 770, 294, 512, 636, 382, 885, 6075, 13, 51478, 51478, 407, 885, 1075, 281, 10687, 322, 264, 1186, 300, 6828, 362, 572, 1252, 5065, 11, 300, 767, 4045, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10617985771697702, "compression_ratio": 1.7973568281938326, "no_caption_prob": 5.828682697028853e-05}, {"id": 634, "seek": 366906, "start": 3685.06, "end": 3691.34, "text": " language, or at least where the function is not annotated in some way as being pure.", "tokens": [50364, 1817, 316, 6915, 11, 321, 393, 4159, 300, 644, 11, 457, 321, 500, 380, 458, 498, 321, 393, 4159, 264, 2445, 50590, 50590, 818, 570, 309, 1062, 362, 1252, 5065, 11, 558, 30, 50806, 50806, 400, 300, 307, 516, 281, 312, 2074, 337, 604, 2856, 11, 382, 1400, 382, 286, 458, 11, 300, 307, 406, 257, 6075, 11745, 51164, 51164, 2856, 11, 420, 412, 1935, 689, 264, 2445, 307, 406, 25339, 770, 294, 512, 636, 382, 885, 6075, 13, 51478, 51478, 407, 885, 1075, 281, 10687, 322, 264, 1186, 300, 6828, 362, 572, 1252, 5065, 11, 300, 767, 4045, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10617985771697702, "compression_ratio": 1.7973568281938326, "no_caption_prob": 5.828682697028853e-05}, {"id": 635, "seek": 366906, "start": 3691.34, "end": 3698.5, "text": " So being able to rely on the fact that functions have no side effects, that actually allows", "tokens": [50364, 1817, 316, 6915, 11, 321, 393, 4159, 300, 644, 11, 457, 321, 500, 380, 458, 498, 321, 393, 4159, 264, 2445, 50590, 50590, 818, 570, 309, 1062, 362, 1252, 5065, 11, 558, 30, 50806, 50806, 400, 300, 307, 516, 281, 312, 2074, 337, 604, 2856, 11, 382, 1400, 382, 286, 458, 11, 300, 307, 406, 257, 6075, 11745, 51164, 51164, 2856, 11, 420, 412, 1935, 689, 264, 2445, 307, 406, 25339, 770, 294, 512, 636, 382, 885, 6075, 13, 51478, 51478, 407, 885, 1075, 281, 10687, 322, 264, 1186, 300, 6828, 362, 572, 1252, 5065, 11, 300, 767, 4045, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10617985771697702, "compression_ratio": 1.7973568281938326, "no_caption_prob": 5.828682697028853e-05}, {"id": 636, "seek": 369850, "start": 3698.5, "end": 3704.34, "text": " us to do some very cool things, just like dead coded animation, a very powerful one,", "tokens": [50364, 505, 281, 360, 512, 588, 1627, 721, 11, 445, 411, 3116, 34874, 9603, 11, 257, 588, 4005, 472, 11, 50656, 50656, 382, 321, 600, 1612, 13, 50706, 50706, 286, 519, 12720, 3116, 34874, 294, 2699, 76, 1228, 2699, 76, 3131, 307, 746, 300, 257, 688, 295, 561, 959, 11, 50968, 50968, 293, 286, 2138, 360, 13, 400, 300, 307, 588, 1152, 281, 360, 498, 291, 362, 1252, 5065, 13, 400, 1338, 11, 51326, 51326, 550, 291, 658, 721, 411, 2684, 3089, 926, 689, 291, 362, 472, 2445, 818, 934, 1071, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.1765592656237014, "compression_ratio": 1.6531531531531531, "no_caption_prob": 1.3845647117705084e-05}, {"id": 637, "seek": 369850, "start": 3704.34, "end": 3705.34, "text": " as we've seen.", "tokens": [50364, 505, 281, 360, 512, 588, 1627, 721, 11, 445, 411, 3116, 34874, 9603, 11, 257, 588, 4005, 472, 11, 50656, 50656, 382, 321, 600, 1612, 13, 50706, 50706, 286, 519, 12720, 3116, 34874, 294, 2699, 76, 1228, 2699, 76, 3131, 307, 746, 300, 257, 688, 295, 561, 959, 11, 50968, 50968, 293, 286, 2138, 360, 13, 400, 300, 307, 588, 1152, 281, 360, 498, 291, 362, 1252, 5065, 13, 400, 1338, 11, 51326, 51326, 550, 291, 658, 721, 411, 2684, 3089, 926, 689, 291, 362, 472, 2445, 818, 934, 1071, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.1765592656237014, "compression_ratio": 1.6531531531531531, "no_caption_prob": 1.3845647117705084e-05}, {"id": 638, "seek": 369850, "start": 3705.34, "end": 3710.58, "text": " I think removing dead coded in Elm using Elm review is something that a lot of people love,", "tokens": [50364, 505, 281, 360, 512, 588, 1627, 721, 11, 445, 411, 3116, 34874, 9603, 11, 257, 588, 4005, 472, 11, 50656, 50656, 382, 321, 600, 1612, 13, 50706, 50706, 286, 519, 12720, 3116, 34874, 294, 2699, 76, 1228, 2699, 76, 3131, 307, 746, 300, 257, 688, 295, 561, 959, 11, 50968, 50968, 293, 286, 2138, 360, 13, 400, 300, 307, 588, 1152, 281, 360, 498, 291, 362, 1252, 5065, 13, 400, 1338, 11, 51326, 51326, 550, 291, 658, 721, 411, 2684, 3089, 926, 689, 291, 362, 472, 2445, 818, 934, 1071, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.1765592656237014, "compression_ratio": 1.6531531531531531, "no_caption_prob": 1.3845647117705084e-05}, {"id": 639, "seek": 369850, "start": 3710.58, "end": 3717.74, "text": " and I definitely do. And that is very hard to do if you have side effects. And yeah,", "tokens": [50364, 505, 281, 360, 512, 588, 1627, 721, 11, 445, 411, 3116, 34874, 9603, 11, 257, 588, 4005, 472, 11, 50656, 50656, 382, 321, 600, 1612, 13, 50706, 50706, 286, 519, 12720, 3116, 34874, 294, 2699, 76, 1228, 2699, 76, 3131, 307, 746, 300, 257, 688, 295, 561, 959, 11, 50968, 50968, 293, 286, 2138, 360, 13, 400, 300, 307, 588, 1152, 281, 360, 498, 291, 362, 1252, 5065, 13, 400, 1338, 11, 51326, 51326, 550, 291, 658, 721, 411, 2684, 3089, 926, 689, 291, 362, 472, 2445, 818, 934, 1071, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.1765592656237014, "compression_ratio": 1.6531531531531531, "no_caption_prob": 1.3845647117705084e-05}, {"id": 640, "seek": 369850, "start": 3717.74, "end": 3722.98, "text": " then you got things like moving code around where you have one function call after another", "tokens": [50364, 505, 281, 360, 512, 588, 1627, 721, 11, 445, 411, 3116, 34874, 9603, 11, 257, 588, 4005, 472, 11, 50656, 50656, 382, 321, 600, 1612, 13, 50706, 50706, 286, 519, 12720, 3116, 34874, 294, 2699, 76, 1228, 2699, 76, 3131, 307, 746, 300, 257, 688, 295, 561, 959, 11, 50968, 50968, 293, 286, 2138, 360, 13, 400, 300, 307, 588, 1152, 281, 360, 498, 291, 362, 1252, 5065, 13, 400, 1338, 11, 51326, 51326, 550, 291, 658, 721, 411, 2684, 3089, 926, 689, 291, 362, 472, 2445, 818, 934, 1071, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.1765592656237014, "compression_ratio": 1.6531531531531531, "no_caption_prob": 1.3845647117705084e-05}, {"id": 641, "seek": 372298, "start": 3722.98, "end": 3731.38, "text": " one. And if you want to optimize the code or make it nicer to read, then potentially", "tokens": [50364, 472, 13, 400, 498, 291, 528, 281, 19719, 264, 3089, 420, 652, 309, 22842, 281, 1401, 11, 550, 7263, 50784, 50784, 291, 362, 281, 17340, 264, 1668, 295, 729, 2445, 5498, 13, 1042, 11, 307, 300, 3273, 281, 360, 30, 1042, 11, 321, 51074, 51074, 500, 380, 458, 13, 16581, 321, 362, 572, 1252, 5065, 11, 550, 321, 458, 321, 393, 360, 309, 13, 51318, 51318, 407, 321, 727, 920, 360, 300, 5215, 13, 4402, 341, 2445, 362, 257, 1252, 1802, 30, 4402, 341, 472, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.11609531788343794, "compression_ratio": 1.6372549019607843, "no_caption_prob": 1.3006212611799128e-05}, {"id": 642, "seek": 372298, "start": 3731.38, "end": 3737.18, "text": " you have to inverse the order of those function calls. Well, is that safe to do? Well, we", "tokens": [50364, 472, 13, 400, 498, 291, 528, 281, 19719, 264, 3089, 420, 652, 309, 22842, 281, 1401, 11, 550, 7263, 50784, 50784, 291, 362, 281, 17340, 264, 1668, 295, 729, 2445, 5498, 13, 1042, 11, 307, 300, 3273, 281, 360, 30, 1042, 11, 321, 51074, 51074, 500, 380, 458, 13, 16581, 321, 362, 572, 1252, 5065, 11, 550, 321, 458, 321, 393, 360, 309, 13, 51318, 51318, 407, 321, 727, 920, 360, 300, 5215, 13, 4402, 341, 2445, 362, 257, 1252, 1802, 30, 4402, 341, 472, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.11609531788343794, "compression_ratio": 1.6372549019607843, "no_caption_prob": 1.3006212611799128e-05}, {"id": 643, "seek": 372298, "start": 3737.18, "end": 3742.06, "text": " don't know. Unless we have no side effects, then we know we can do it.", "tokens": [50364, 472, 13, 400, 498, 291, 528, 281, 19719, 264, 3089, 420, 652, 309, 22842, 281, 1401, 11, 550, 7263, 50784, 50784, 291, 362, 281, 17340, 264, 1668, 295, 729, 2445, 5498, 13, 1042, 11, 307, 300, 3273, 281, 360, 30, 1042, 11, 321, 51074, 51074, 500, 380, 458, 13, 16581, 321, 362, 572, 1252, 5065, 11, 550, 321, 458, 321, 393, 360, 309, 13, 51318, 51318, 407, 321, 727, 920, 360, 300, 5215, 13, 4402, 341, 2445, 362, 257, 1252, 1802, 30, 4402, 341, 472, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.11609531788343794, "compression_ratio": 1.6372549019607843, "no_caption_prob": 1.3006212611799128e-05}, {"id": 644, "seek": 372298, "start": 3742.06, "end": 3748.0, "text": " So we could still do that analysis. Does this function have a side effect? Does this one", "tokens": [50364, 472, 13, 400, 498, 291, 528, 281, 19719, 264, 3089, 420, 652, 309, 22842, 281, 1401, 11, 550, 7263, 50784, 50784, 291, 362, 281, 17340, 264, 1668, 295, 729, 2445, 5498, 13, 1042, 11, 307, 300, 3273, 281, 360, 30, 1042, 11, 321, 51074, 51074, 500, 380, 458, 13, 16581, 321, 362, 572, 1252, 5065, 11, 550, 321, 458, 321, 393, 360, 309, 13, 51318, 51318, 407, 321, 727, 920, 360, 300, 5215, 13, 4402, 341, 2445, 362, 257, 1252, 1802, 30, 4402, 341, 472, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.11609531788343794, "compression_ratio": 1.6372549019607843, "no_caption_prob": 1.3006212611799128e-05}, {"id": 645, "seek": 374800, "start": 3748.0, "end": 3753.58, "text": " also have a side effect? Do they impact each other? Do they depend on each other? And that's", "tokens": [50364, 611, 362, 257, 1252, 1802, 30, 1144, 436, 2712, 1184, 661, 30, 1144, 436, 5672, 322, 1184, 661, 30, 400, 300, 311, 50643, 50643, 257, 688, 295, 589, 13, 663, 311, 534, 257, 955, 2372, 295, 589, 281, 360, 11, 411, 257, 688, 295, 14174, 50905, 50905, 293, 257, 688, 295, 5215, 13, 400, 7263, 412, 264, 917, 11, 291, 920, 500, 380, 458, 264, 1867, 13, 51126, 51126, 407, 291, 434, 920, 516, 281, 362, 281, 652, 257, 18028, 1695, 411, 11, 1338, 11, 286, 519, 341, 307, 516, 281, 485, 492, 51399, 51399, 500, 380, 458, 13, 407, 321, 434, 445, 516, 281, 6552, 300, 309, 575, 257, 1252, 1802, 293, 300, 309, 2203, 51629, 51629, 281, 1754, 341, 636, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.14031365161805642, "compression_ratio": 1.80078125, "no_caption_prob": 8.480530959786847e-05}, {"id": 646, "seek": 374800, "start": 3753.58, "end": 3758.82, "text": " a lot of work. That's really a big amount of work to do, like a lot of interpretation", "tokens": [50364, 611, 362, 257, 1252, 1802, 30, 1144, 436, 2712, 1184, 661, 30, 1144, 436, 5672, 322, 1184, 661, 30, 400, 300, 311, 50643, 50643, 257, 688, 295, 589, 13, 663, 311, 534, 257, 955, 2372, 295, 589, 281, 360, 11, 411, 257, 688, 295, 14174, 50905, 50905, 293, 257, 688, 295, 5215, 13, 400, 7263, 412, 264, 917, 11, 291, 920, 500, 380, 458, 264, 1867, 13, 51126, 51126, 407, 291, 434, 920, 516, 281, 362, 281, 652, 257, 18028, 1695, 411, 11, 1338, 11, 286, 519, 341, 307, 516, 281, 485, 492, 51399, 51399, 500, 380, 458, 13, 407, 321, 434, 445, 516, 281, 6552, 300, 309, 575, 257, 1252, 1802, 293, 300, 309, 2203, 51629, 51629, 281, 1754, 341, 636, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.14031365161805642, "compression_ratio": 1.80078125, "no_caption_prob": 8.480530959786847e-05}, {"id": 647, "seek": 374800, "start": 3758.82, "end": 3763.24, "text": " and a lot of analysis. And potentially at the end, you still don't know the answer.", "tokens": [50364, 611, 362, 257, 1252, 1802, 30, 1144, 436, 2712, 1184, 661, 30, 1144, 436, 5672, 322, 1184, 661, 30, 400, 300, 311, 50643, 50643, 257, 688, 295, 589, 13, 663, 311, 534, 257, 955, 2372, 295, 589, 281, 360, 11, 411, 257, 688, 295, 14174, 50905, 50905, 293, 257, 688, 295, 5215, 13, 400, 7263, 412, 264, 917, 11, 291, 920, 500, 380, 458, 264, 1867, 13, 51126, 51126, 407, 291, 434, 920, 516, 281, 362, 281, 652, 257, 18028, 1695, 411, 11, 1338, 11, 286, 519, 341, 307, 516, 281, 485, 492, 51399, 51399, 500, 380, 458, 13, 407, 321, 434, 445, 516, 281, 6552, 300, 309, 575, 257, 1252, 1802, 293, 300, 309, 2203, 51629, 51629, 281, 1754, 341, 636, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.14031365161805642, "compression_ratio": 1.80078125, "no_caption_prob": 8.480530959786847e-05}, {"id": 648, "seek": 374800, "start": 3763.24, "end": 3768.7, "text": " So you're still going to have to make a presumption like, yeah, I think this is going to... We", "tokens": [50364, 611, 362, 257, 1252, 1802, 30, 1144, 436, 2712, 1184, 661, 30, 1144, 436, 5672, 322, 1184, 661, 30, 400, 300, 311, 50643, 50643, 257, 688, 295, 589, 13, 663, 311, 534, 257, 955, 2372, 295, 589, 281, 360, 11, 411, 257, 688, 295, 14174, 50905, 50905, 293, 257, 688, 295, 5215, 13, 400, 7263, 412, 264, 917, 11, 291, 920, 500, 380, 458, 264, 1867, 13, 51126, 51126, 407, 291, 434, 920, 516, 281, 362, 281, 652, 257, 18028, 1695, 411, 11, 1338, 11, 286, 519, 341, 307, 516, 281, 485, 492, 51399, 51399, 500, 380, 458, 13, 407, 321, 434, 445, 516, 281, 6552, 300, 309, 575, 257, 1252, 1802, 293, 300, 309, 2203, 51629, 51629, 281, 1754, 341, 636, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.14031365161805642, "compression_ratio": 1.80078125, "no_caption_prob": 8.480530959786847e-05}, {"id": 649, "seek": 374800, "start": 3768.7, "end": 3773.3, "text": " don't know. So we're just going to assume that it has a side effect and that it needs", "tokens": [50364, 611, 362, 257, 1252, 1802, 30, 1144, 436, 2712, 1184, 661, 30, 1144, 436, 5672, 322, 1184, 661, 30, 400, 300, 311, 50643, 50643, 257, 688, 295, 589, 13, 663, 311, 534, 257, 955, 2372, 295, 589, 281, 360, 11, 411, 257, 688, 295, 14174, 50905, 50905, 293, 257, 688, 295, 5215, 13, 400, 7263, 412, 264, 917, 11, 291, 920, 500, 380, 458, 264, 1867, 13, 51126, 51126, 407, 291, 434, 920, 516, 281, 362, 281, 652, 257, 18028, 1695, 411, 11, 1338, 11, 286, 519, 341, 307, 516, 281, 485, 492, 51399, 51399, 500, 380, 458, 13, 407, 321, 434, 445, 516, 281, 6552, 300, 309, 575, 257, 1252, 1802, 293, 300, 309, 2203, 51629, 51629, 281, 1754, 341, 636, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.14031365161805642, "compression_ratio": 1.80078125, "no_caption_prob": 8.480530959786847e-05}, {"id": 650, "seek": 374800, "start": 3773.3, "end": 3775.62, "text": " to stay this way.", "tokens": [50364, 611, 362, 257, 1252, 1802, 30, 1144, 436, 2712, 1184, 661, 30, 1144, 436, 5672, 322, 1184, 661, 30, 400, 300, 311, 50643, 50643, 257, 688, 295, 589, 13, 663, 311, 534, 257, 955, 2372, 295, 589, 281, 360, 11, 411, 257, 688, 295, 14174, 50905, 50905, 293, 257, 688, 295, 5215, 13, 400, 7263, 412, 264, 917, 11, 291, 920, 500, 380, 458, 264, 1867, 13, 51126, 51126, 407, 291, 434, 920, 516, 281, 362, 281, 652, 257, 18028, 1695, 411, 11, 1338, 11, 286, 519, 341, 307, 516, 281, 485, 492, 51399, 51399, 500, 380, 458, 13, 407, 321, 434, 445, 516, 281, 6552, 300, 309, 575, 257, 1252, 1802, 293, 300, 309, 2203, 51629, 51629, 281, 1754, 341, 636, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.14031365161805642, "compression_ratio": 1.80078125, "no_caption_prob": 8.480530959786847e-05}, {"id": 651, "seek": 377562, "start": 3775.62, "end": 3782.9, "text": " Right. Yeah. It's the poison pill. Things can be very easily tainted. And it's the unconstrained", "tokens": [50364, 1779, 13, 865, 13, 467, 311, 264, 10836, 8100, 13, 9514, 393, 312, 588, 3612, 256, 26278, 13, 400, 309, 311, 264, 35847, 19639, 2001, 50728, 50728, 5717, 38901, 12388, 13, 400, 498, 291, 393, 747, 11, 382, 321, 600, 2825, 466, 294, 264, 1791, 11, 51069, 51069, 498, 291, 747, 6075, 11745, 2699, 76, 3089, 11, 291, 393, 360, 544, 3997, 721, 833, 264, 13376, 51452, 51452, 33173, 729, 32567, 11, 411, 13233, 278, 1412, 294, 441, 3475, 1663, 11, 337, 1365, 13, 407, 309, 311, 1238, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13960255747256073, "compression_ratio": 1.5584415584415585, "no_caption_prob": 9.460794535698369e-05}, {"id": 652, "seek": 377562, "start": 3782.9, "end": 3789.72, "text": " versus constrained environments. And if you can take, as we've talked about in the past,", "tokens": [50364, 1779, 13, 865, 13, 467, 311, 264, 10836, 8100, 13, 9514, 393, 312, 588, 3612, 256, 26278, 13, 400, 309, 311, 264, 35847, 19639, 2001, 50728, 50728, 5717, 38901, 12388, 13, 400, 498, 291, 393, 747, 11, 382, 321, 600, 2825, 466, 294, 264, 1791, 11, 51069, 51069, 498, 291, 747, 6075, 11745, 2699, 76, 3089, 11, 291, 393, 360, 544, 3997, 721, 833, 264, 13376, 51452, 51452, 33173, 729, 32567, 11, 411, 13233, 278, 1412, 294, 441, 3475, 1663, 11, 337, 1365, 13, 407, 309, 311, 1238, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13960255747256073, "compression_ratio": 1.5584415584415585, "no_caption_prob": 9.460794535698369e-05}, {"id": 653, "seek": 377562, "start": 3789.72, "end": 3797.38, "text": " if you take pure functional Elm code, you can do more complex things under the hood", "tokens": [50364, 1779, 13, 865, 13, 467, 311, 264, 10836, 8100, 13, 9514, 393, 312, 588, 3612, 256, 26278, 13, 400, 309, 311, 264, 35847, 19639, 2001, 50728, 50728, 5717, 38901, 12388, 13, 400, 498, 291, 393, 747, 11, 382, 321, 600, 2825, 466, 294, 264, 1791, 11, 51069, 51069, 498, 291, 747, 6075, 11745, 2699, 76, 3089, 11, 291, 393, 360, 544, 3997, 721, 833, 264, 13376, 51452, 51452, 33173, 729, 32567, 11, 411, 13233, 278, 1412, 294, 441, 3475, 1663, 11, 337, 1365, 13, 407, 309, 311, 1238, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13960255747256073, "compression_ratio": 1.5584415584415585, "no_caption_prob": 9.460794535698369e-05}, {"id": 654, "seek": 377562, "start": 3797.38, "end": 3805.2999999999997, "text": " preserving those guarantees, like persisting data in Lamedera, for example. So it's pretty", "tokens": [50364, 1779, 13, 865, 13, 467, 311, 264, 10836, 8100, 13, 9514, 393, 312, 588, 3612, 256, 26278, 13, 400, 309, 311, 264, 35847, 19639, 2001, 50728, 50728, 5717, 38901, 12388, 13, 400, 498, 291, 393, 747, 11, 382, 321, 600, 2825, 466, 294, 264, 1791, 11, 51069, 51069, 498, 291, 747, 6075, 11745, 2699, 76, 3089, 11, 291, 393, 360, 544, 3997, 721, 833, 264, 13376, 51452, 51452, 33173, 729, 32567, 11, 411, 13233, 278, 1412, 294, 441, 3475, 1663, 11, 337, 1365, 13, 407, 309, 311, 1238, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13960255747256073, "compression_ratio": 1.5584415584415585, "no_caption_prob": 9.460794535698369e-05}, {"id": 655, "seek": 380530, "start": 3805.3, "end": 3811.86, "text": " compelling how you can still preserve those guarantees and do more complex things when", "tokens": [50364, 20050, 577, 291, 393, 920, 15665, 729, 32567, 293, 360, 544, 3997, 721, 562, 50692, 50692, 291, 362, 300, 34382, 13, 1171, 1365, 11, 291, 727, 754, 3811, 884, 512, 295, 613, 733, 295, 28328, 51106, 51106, 2807, 763, 294, 2699, 76, 3131, 13, 1743, 2602, 295, 884, 341, 1333, 295, 2699, 76, 3531, 5102, 3758, 11, 51406, 51406, 291, 727, 3811, 884, 512, 1333, 295, 33617, 833, 264, 13376, 11, 411, 257, 1333, 295, 2699, 76, 3131, 51670, 51670, 31958, 300, 727, 485, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1574882377277721, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828930443385616e-05}, {"id": 656, "seek": 380530, "start": 3811.86, "end": 3820.1400000000003, "text": " you have that purity. For example, you could even imagine doing some of these kind of costly", "tokens": [50364, 20050, 577, 291, 393, 920, 15665, 729, 32567, 293, 360, 544, 3997, 721, 562, 50692, 50692, 291, 362, 300, 34382, 13, 1171, 1365, 11, 291, 727, 754, 3811, 884, 512, 295, 613, 733, 295, 28328, 51106, 51106, 2807, 763, 294, 2699, 76, 3131, 13, 1743, 2602, 295, 884, 341, 1333, 295, 2699, 76, 3531, 5102, 3758, 11, 51406, 51406, 291, 727, 3811, 884, 512, 1333, 295, 33617, 833, 264, 13376, 11, 411, 257, 1333, 295, 2699, 76, 3131, 51670, 51670, 31958, 300, 727, 485, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1574882377277721, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828930443385616e-05}, {"id": 657, "seek": 380530, "start": 3820.1400000000003, "end": 3826.1400000000003, "text": " computations in Elm review. Like instead of doing this sort of Elm store pattern style,", "tokens": [50364, 20050, 577, 291, 393, 920, 15665, 729, 32567, 293, 360, 544, 3997, 721, 562, 50692, 50692, 291, 362, 300, 34382, 13, 1171, 1365, 11, 291, 727, 754, 3811, 884, 512, 295, 613, 733, 295, 28328, 51106, 51106, 2807, 763, 294, 2699, 76, 3131, 13, 1743, 2602, 295, 884, 341, 1333, 295, 2699, 76, 3531, 5102, 3758, 11, 51406, 51406, 291, 727, 3811, 884, 512, 1333, 295, 33617, 833, 264, 13376, 11, 411, 257, 1333, 295, 2699, 76, 3131, 51670, 51670, 31958, 300, 727, 485, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1574882377277721, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828930443385616e-05}, {"id": 658, "seek": 380530, "start": 3826.1400000000003, "end": 3831.42, "text": " you could imagine doing some sort of hacks under the hood, like a sort of Elm review", "tokens": [50364, 20050, 577, 291, 393, 920, 15665, 729, 32567, 293, 360, 544, 3997, 721, 562, 50692, 50692, 291, 362, 300, 34382, 13, 1171, 1365, 11, 291, 727, 754, 3811, 884, 512, 295, 613, 733, 295, 28328, 51106, 51106, 2807, 763, 294, 2699, 76, 3131, 13, 1743, 2602, 295, 884, 341, 1333, 295, 2699, 76, 3531, 5102, 3758, 11, 51406, 51406, 291, 727, 3811, 884, 512, 1333, 295, 33617, 833, 264, 13376, 11, 411, 257, 1333, 295, 2699, 76, 3131, 51670, 51670, 31958, 300, 727, 485, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1574882377277721, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828930443385616e-05}, {"id": 659, "seek": 380530, "start": 3831.42, "end": 3833.38, "text": " compiler that could...", "tokens": [50364, 20050, 577, 291, 393, 920, 15665, 729, 32567, 293, 360, 544, 3997, 721, 562, 50692, 50692, 291, 362, 300, 34382, 13, 1171, 1365, 11, 291, 727, 754, 3811, 884, 512, 295, 613, 733, 295, 28328, 51106, 51106, 2807, 763, 294, 2699, 76, 3131, 13, 1743, 2602, 295, 884, 341, 1333, 295, 2699, 76, 3531, 5102, 3758, 11, 51406, 51406, 291, 727, 3811, 884, 512, 1333, 295, 33617, 833, 264, 13376, 11, 411, 257, 1333, 295, 2699, 76, 3131, 51670, 51670, 31958, 300, 727, 485, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1574882377277721, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828930443385616e-05}, {"id": 660, "seek": 383338, "start": 3833.38, "end": 3842.7400000000002, "text": " Oh, I never thought about doing that. Definitely on my mind, but so far I've never attempted", "tokens": [50364, 876, 11, 286, 1128, 1194, 466, 884, 300, 13, 12151, 322, 452, 1575, 11, 457, 370, 1400, 286, 600, 1128, 18997, 50832, 50832, 309, 570, 286, 1415, 485, 1171, 2010, 38253, 11, 286, 519, 300, 311, 516, 281, 312, 2964, 13, 22613, 848, 51124, 51124, 300, 309, 311, 516, 281, 312, 2964, 294, 257, 2856, 689, 291, 500, 380, 362, 27960, 13, 407, 286, 478, 1953, 466, 51388, 51388, 11337, 278, 300, 412, 31413, 565, 281, 652, 309, 709, 4663, 13, 492, 500, 380, 362, 2010, 38253, 1939, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.13509264299946447, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.2827360226074234e-05}, {"id": 661, "seek": 383338, "start": 3842.7400000000002, "end": 3848.58, "text": " it because I wanted... For type inference, I think that's going to be slow. Evan said", "tokens": [50364, 876, 11, 286, 1128, 1194, 466, 884, 300, 13, 12151, 322, 452, 1575, 11, 457, 370, 1400, 286, 600, 1128, 18997, 50832, 50832, 309, 570, 286, 1415, 485, 1171, 2010, 38253, 11, 286, 519, 300, 311, 516, 281, 312, 2964, 13, 22613, 848, 51124, 51124, 300, 309, 311, 516, 281, 312, 2964, 294, 257, 2856, 689, 291, 500, 380, 362, 27960, 13, 407, 286, 478, 1953, 466, 51388, 51388, 11337, 278, 300, 412, 31413, 565, 281, 652, 309, 709, 4663, 13, 492, 500, 380, 362, 2010, 38253, 1939, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.13509264299946447, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.2827360226074234e-05}, {"id": 662, "seek": 383338, "start": 3848.58, "end": 3853.86, "text": " that it's going to be slow in a language where you don't have mutation. So I'm thinking about", "tokens": [50364, 876, 11, 286, 1128, 1194, 466, 884, 300, 13, 12151, 322, 452, 1575, 11, 457, 370, 1400, 286, 600, 1128, 18997, 50832, 50832, 309, 570, 286, 1415, 485, 1171, 2010, 38253, 11, 286, 519, 300, 311, 516, 281, 312, 2964, 13, 22613, 848, 51124, 51124, 300, 309, 311, 516, 281, 312, 2964, 294, 257, 2856, 689, 291, 500, 380, 362, 27960, 13, 407, 286, 478, 1953, 466, 51388, 51388, 11337, 278, 300, 412, 31413, 565, 281, 652, 309, 709, 4663, 13, 492, 500, 380, 362, 2010, 38253, 1939, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.13509264299946447, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.2827360226074234e-05}, {"id": 663, "seek": 383338, "start": 3853.86, "end": 3861.84, "text": " altering that at compile time to make it much faster. We don't have type inference yet.", "tokens": [50364, 876, 11, 286, 1128, 1194, 466, 884, 300, 13, 12151, 322, 452, 1575, 11, 457, 370, 1400, 286, 600, 1128, 18997, 50832, 50832, 309, 570, 286, 1415, 485, 1171, 2010, 38253, 11, 286, 519, 300, 311, 516, 281, 312, 2964, 13, 22613, 848, 51124, 51124, 300, 309, 311, 516, 281, 312, 2964, 294, 257, 2856, 689, 291, 500, 380, 362, 27960, 13, 407, 286, 478, 1953, 466, 51388, 51388, 11337, 278, 300, 412, 31413, 565, 281, 652, 309, 709, 4663, 13, 492, 500, 380, 362, 2010, 38253, 1939, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.13509264299946447, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.2827360226074234e-05}, {"id": 664, "seek": 386184, "start": 3861.84, "end": 3864.94, "text": " So I will wait for that to happen.", "tokens": [50364, 407, 286, 486, 1699, 337, 300, 281, 1051, 13, 50519, 50519, 14711, 13, 876, 11, 300, 311, 1627, 13, 865, 13, 865, 13, 407, 286, 727, 3811, 411, 485, 50743, 50743, 583, 286, 500, 380, 458, 498, 300, 486, 362, 604, 8830, 5065, 13, 663, 311, 516, 281, 312, 1880, 281, 51023, 51023, 2573, 484, 13, 51073, 51073, 1042, 11, 309, 311, 2138, 364, 20239, 3100, 281, 352, 760, 11, 457, 309, 576, 1269, 493, 257, 688, 295, 1880, 51289, 51289, 12178, 13, 583, 1338, 11, 291, 727, 3297, 411, 11, 286, 727, 3811, 291, 1566, 510, 311, 4476, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.16992526378446413, "compression_ratio": 1.6219512195121952, "no_caption_prob": 1.7230526282219216e-05}, {"id": 665, "seek": 386184, "start": 3864.94, "end": 3869.42, "text": " Interesting. Oh, that's cool. Yeah. Yeah. So I could imagine like...", "tokens": [50364, 407, 286, 486, 1699, 337, 300, 281, 1051, 13, 50519, 50519, 14711, 13, 876, 11, 300, 311, 1627, 13, 865, 13, 865, 13, 407, 286, 727, 3811, 411, 485, 50743, 50743, 583, 286, 500, 380, 458, 498, 300, 486, 362, 604, 8830, 5065, 13, 663, 311, 516, 281, 312, 1880, 281, 51023, 51023, 2573, 484, 13, 51073, 51073, 1042, 11, 309, 311, 2138, 364, 20239, 3100, 281, 352, 760, 11, 457, 309, 576, 1269, 493, 257, 688, 295, 1880, 51289, 51289, 12178, 13, 583, 1338, 11, 291, 727, 3297, 411, 11, 286, 727, 3811, 291, 1566, 510, 311, 4476, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.16992526378446413, "compression_ratio": 1.6219512195121952, "no_caption_prob": 1.7230526282219216e-05}, {"id": 666, "seek": 386184, "start": 3869.42, "end": 3875.02, "text": " But I don't know if that will have any surprising effects. That's going to be interesting to", "tokens": [50364, 407, 286, 486, 1699, 337, 300, 281, 1051, 13, 50519, 50519, 14711, 13, 876, 11, 300, 311, 1627, 13, 865, 13, 865, 13, 407, 286, 727, 3811, 411, 485, 50743, 50743, 583, 286, 500, 380, 458, 498, 300, 486, 362, 604, 8830, 5065, 13, 663, 311, 516, 281, 312, 1880, 281, 51023, 51023, 2573, 484, 13, 51073, 51073, 1042, 11, 309, 311, 2138, 364, 20239, 3100, 281, 352, 760, 11, 457, 309, 576, 1269, 493, 257, 688, 295, 1880, 51289, 51289, 12178, 13, 583, 1338, 11, 291, 727, 3297, 411, 11, 286, 727, 3811, 291, 1566, 510, 311, 4476, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.16992526378446413, "compression_ratio": 1.6219512195121952, "no_caption_prob": 1.7230526282219216e-05}, {"id": 667, "seek": 386184, "start": 3875.02, "end": 3876.02, "text": " figure out.", "tokens": [50364, 407, 286, 486, 1699, 337, 300, 281, 1051, 13, 50519, 50519, 14711, 13, 876, 11, 300, 311, 1627, 13, 865, 13, 865, 13, 407, 286, 727, 3811, 411, 485, 50743, 50743, 583, 286, 500, 380, 458, 498, 300, 486, 362, 604, 8830, 5065, 13, 663, 311, 516, 281, 312, 1880, 281, 51023, 51023, 2573, 484, 13, 51073, 51073, 1042, 11, 309, 311, 2138, 364, 20239, 3100, 281, 352, 760, 11, 457, 309, 576, 1269, 493, 257, 688, 295, 1880, 51289, 51289, 12178, 13, 583, 1338, 11, 291, 727, 3297, 411, 11, 286, 727, 3811, 291, 1566, 510, 311, 4476, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.16992526378446413, "compression_ratio": 1.6219512195121952, "no_caption_prob": 1.7230526282219216e-05}, {"id": 668, "seek": 386184, "start": 3876.02, "end": 3880.34, "text": " Well, it's definitely an ambitious path to go down, but it would open up a lot of interesting", "tokens": [50364, 407, 286, 486, 1699, 337, 300, 281, 1051, 13, 50519, 50519, 14711, 13, 876, 11, 300, 311, 1627, 13, 865, 13, 865, 13, 407, 286, 727, 3811, 411, 485, 50743, 50743, 583, 286, 500, 380, 458, 498, 300, 486, 362, 604, 8830, 5065, 13, 663, 311, 516, 281, 312, 1880, 281, 51023, 51023, 2573, 484, 13, 51073, 51073, 1042, 11, 309, 311, 2138, 364, 20239, 3100, 281, 352, 760, 11, 457, 309, 576, 1269, 493, 257, 688, 295, 1880, 51289, 51289, 12178, 13, 583, 1338, 11, 291, 727, 3297, 411, 11, 286, 727, 3811, 291, 1566, 510, 311, 4476, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.16992526378446413, "compression_ratio": 1.6219512195121952, "no_caption_prob": 1.7230526282219216e-05}, {"id": 669, "seek": 386184, "start": 3880.34, "end": 3886.56, "text": " possibilities. But yeah, you could certainly like, I could imagine you saying here's essentially", "tokens": [50364, 407, 286, 486, 1699, 337, 300, 281, 1051, 13, 50519, 50519, 14711, 13, 876, 11, 300, 311, 1627, 13, 865, 13, 865, 13, 407, 286, 727, 3811, 411, 485, 50743, 50743, 583, 286, 500, 380, 458, 498, 300, 486, 362, 604, 8830, 5065, 13, 663, 311, 516, 281, 312, 1880, 281, 51023, 51023, 2573, 484, 13, 51073, 51073, 1042, 11, 309, 311, 2138, 364, 20239, 3100, 281, 352, 760, 11, 457, 309, 576, 1269, 493, 257, 688, 295, 1880, 51289, 51289, 12178, 13, 583, 1338, 11, 291, 727, 3297, 411, 11, 286, 727, 3811, 291, 1566, 510, 311, 4476, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.16992526378446413, "compression_ratio": 1.6219512195121952, "no_caption_prob": 1.7230526282219216e-05}, {"id": 670, "seek": 388656, "start": 3886.56, "end": 3894.54, "text": " a magic function that gives you some expensive computational result and under the hood, swap", "tokens": [50364, 257, 5585, 2445, 300, 2709, 291, 512, 5124, 28270, 1874, 293, 833, 264, 13376, 11, 18135, 50763, 50763, 309, 484, 281, 360, 512, 5028, 14455, 293, 652, 309, 544, 7148, 293, 406, 818, 309, 498, 309, 311, 406, 50993, 50993, 2978, 293, 300, 1333, 295, 551, 13, 51073, 51073, 865, 11, 7263, 13, 583, 1338, 11, 286, 576, 2138, 406, 2464, 257, 41567, 3089, 300, 576, 5672, 51311, 51311, 322, 341, 13, 467, 576, 445, 312, 411, 364, 10444, 300, 561, 486, 406, 3449, 13, 51555, 51555, 865, 11, 2293, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.13981090344880756, "compression_ratio": 1.6291666666666667, "no_caption_prob": 1.1125513992737979e-05}, {"id": 671, "seek": 388656, "start": 3894.54, "end": 3899.14, "text": " it out to do some optimizations and make it more efficient and not call it if it's not", "tokens": [50364, 257, 5585, 2445, 300, 2709, 291, 512, 5124, 28270, 1874, 293, 833, 264, 13376, 11, 18135, 50763, 50763, 309, 484, 281, 360, 512, 5028, 14455, 293, 652, 309, 544, 7148, 293, 406, 818, 309, 498, 309, 311, 406, 50993, 50993, 2978, 293, 300, 1333, 295, 551, 13, 51073, 51073, 865, 11, 7263, 13, 583, 1338, 11, 286, 576, 2138, 406, 2464, 257, 41567, 3089, 300, 576, 5672, 51311, 51311, 322, 341, 13, 467, 576, 445, 312, 411, 364, 10444, 300, 561, 486, 406, 3449, 13, 51555, 51555, 865, 11, 2293, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.13981090344880756, "compression_ratio": 1.6291666666666667, "no_caption_prob": 1.1125513992737979e-05}, {"id": 672, "seek": 388656, "start": 3899.14, "end": 3900.74, "text": " needed and that sort of thing.", "tokens": [50364, 257, 5585, 2445, 300, 2709, 291, 512, 5124, 28270, 1874, 293, 833, 264, 13376, 11, 18135, 50763, 50763, 309, 484, 281, 360, 512, 5028, 14455, 293, 652, 309, 544, 7148, 293, 406, 818, 309, 498, 309, 311, 406, 50993, 50993, 2978, 293, 300, 1333, 295, 551, 13, 51073, 51073, 865, 11, 7263, 13, 583, 1338, 11, 286, 576, 2138, 406, 2464, 257, 41567, 3089, 300, 576, 5672, 51311, 51311, 322, 341, 13, 467, 576, 445, 312, 411, 364, 10444, 300, 561, 486, 406, 3449, 13, 51555, 51555, 865, 11, 2293, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.13981090344880756, "compression_ratio": 1.6291666666666667, "no_caption_prob": 1.1125513992737979e-05}, {"id": 673, "seek": 388656, "start": 3900.74, "end": 3905.5, "text": " Yeah, potentially. But yeah, I would definitely not write a baggage code that would depend", "tokens": [50364, 257, 5585, 2445, 300, 2709, 291, 512, 5124, 28270, 1874, 293, 833, 264, 13376, 11, 18135, 50763, 50763, 309, 484, 281, 360, 512, 5028, 14455, 293, 652, 309, 544, 7148, 293, 406, 818, 309, 498, 309, 311, 406, 50993, 50993, 2978, 293, 300, 1333, 295, 551, 13, 51073, 51073, 865, 11, 7263, 13, 583, 1338, 11, 286, 576, 2138, 406, 2464, 257, 41567, 3089, 300, 576, 5672, 51311, 51311, 322, 341, 13, 467, 576, 445, 312, 411, 364, 10444, 300, 561, 486, 406, 3449, 13, 51555, 51555, 865, 11, 2293, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.13981090344880756, "compression_ratio": 1.6291666666666667, "no_caption_prob": 1.1125513992737979e-05}, {"id": 674, "seek": 388656, "start": 3905.5, "end": 3910.38, "text": " on this. It would just be like an improvement that people will not notice.", "tokens": [50364, 257, 5585, 2445, 300, 2709, 291, 512, 5124, 28270, 1874, 293, 833, 264, 13376, 11, 18135, 50763, 50763, 309, 484, 281, 360, 512, 5028, 14455, 293, 652, 309, 544, 7148, 293, 406, 818, 309, 498, 309, 311, 406, 50993, 50993, 2978, 293, 300, 1333, 295, 551, 13, 51073, 51073, 865, 11, 7263, 13, 583, 1338, 11, 286, 576, 2138, 406, 2464, 257, 41567, 3089, 300, 576, 5672, 51311, 51311, 322, 341, 13, 467, 576, 445, 312, 411, 364, 10444, 300, 561, 486, 406, 3449, 13, 51555, 51555, 865, 11, 2293, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.13981090344880756, "compression_ratio": 1.6291666666666667, "no_caption_prob": 1.1125513992737979e-05}, {"id": 675, "seek": 388656, "start": 3910.38, "end": 3911.38, "text": " Yeah, exactly.", "tokens": [50364, 257, 5585, 2445, 300, 2709, 291, 512, 5124, 28270, 1874, 293, 833, 264, 13376, 11, 18135, 50763, 50763, 309, 484, 281, 360, 512, 5028, 14455, 293, 652, 309, 544, 7148, 293, 406, 818, 309, 498, 309, 311, 406, 50993, 50993, 2978, 293, 300, 1333, 295, 551, 13, 51073, 51073, 865, 11, 7263, 13, 583, 1338, 11, 286, 576, 2138, 406, 2464, 257, 41567, 3089, 300, 576, 5672, 51311, 51311, 322, 341, 13, 467, 576, 445, 312, 411, 364, 10444, 300, 561, 486, 406, 3449, 13, 51555, 51555, 865, 11, 2293, 13, 51605, 51605], "temperature": 0.0, "avg_logprob": -0.13981090344880756, "compression_ratio": 1.6291666666666667, "no_caption_prob": 1.1125513992737979e-05}, {"id": 676, "seek": 391138, "start": 3911.38, "end": 3917.86, "text": " In terms of performance, under the hood optimization, that's the only way that I would accept doing", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 677, "seek": 391138, "start": 3917.86, "end": 3918.86, "text": " something like that.", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 678, "seek": 391138, "start": 3918.86, "end": 3924.7000000000003, "text": " Yes, I agree. Exactly. Yeah. But as long as you can preserve the semantics and expectations", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 679, "seek": 391138, "start": 3924.7000000000003, "end": 3928.86, "text": " of how it's going to behave, you can swap it out for however you achieve that under", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 680, "seek": 391138, "start": 3928.86, "end": 3929.86, "text": " the hood.", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 681, "seek": 391138, "start": 3929.86, "end": 3935.9, "text": " Yeah. But it would be kind of tricky to test because you could not use Elm test for this", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 682, "seek": 391138, "start": 3935.9, "end": 3936.9, "text": " anymore.", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 683, "seek": 391138, "start": 3936.9, "end": 3937.9, "text": " Yeah.", "tokens": [50364, 682, 2115, 295, 3389, 11, 833, 264, 13376, 19618, 11, 300, 311, 264, 787, 636, 300, 286, 576, 3241, 884, 50688, 50688, 746, 411, 300, 13, 50738, 50738, 1079, 11, 286, 3986, 13, 7587, 13, 865, 13, 583, 382, 938, 382, 291, 393, 15665, 264, 4361, 45298, 293, 9843, 51030, 51030, 295, 577, 309, 311, 516, 281, 15158, 11, 291, 393, 18135, 309, 484, 337, 4461, 291, 4584, 300, 833, 51238, 51238, 264, 13376, 13, 51288, 51288, 865, 13, 583, 309, 576, 312, 733, 295, 12414, 281, 1500, 570, 291, 727, 406, 764, 2699, 76, 1500, 337, 341, 51590, 51590, 3602, 13, 51640, 51640, 865, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.12516684098677203, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.133438051212579e-05}, {"id": 684, "seek": 393790, "start": 3937.9, "end": 3945.14, "text": " All of these guarantees that we've talked about, things that we can rely on that makes", "tokens": [50364, 1057, 295, 613, 32567, 300, 321, 600, 2825, 466, 11, 721, 300, 321, 393, 10687, 322, 300, 1669, 50726, 50726, 5215, 3571, 11, 309, 13165, 281, 22896, 1559, 11, 457, 309, 611, 13165, 281, 3089, 5028, 22525, 13, 1171, 5197, 11, 51166, 51166, 2699, 76, 19719, 1496, 732, 11, 309, 3255, 300, 309, 393, 1286, 512, 6828, 420, 512, 7705, 926, 51526, 51526, 382, 938, 382, 436, 500, 380, 5672, 322, 1184, 661, 570, 436, 458, 11, 731, 11, 341, 2445, 575, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.18481563967327738, "compression_ratio": 1.6451612903225807, "no_caption_prob": 3.269856460974552e-05}, {"id": 685, "seek": 393790, "start": 3945.14, "end": 3953.94, "text": " analysis easier, it applies to linters, but it also applies to code optimizers. For instance,", "tokens": [50364, 1057, 295, 613, 32567, 300, 321, 600, 2825, 466, 11, 721, 300, 321, 393, 10687, 322, 300, 1669, 50726, 50726, 5215, 3571, 11, 309, 13165, 281, 22896, 1559, 11, 457, 309, 611, 13165, 281, 3089, 5028, 22525, 13, 1171, 5197, 11, 51166, 51166, 2699, 76, 19719, 1496, 732, 11, 309, 3255, 300, 309, 393, 1286, 512, 6828, 420, 512, 7705, 926, 51526, 51526, 382, 938, 382, 436, 500, 380, 5672, 322, 1184, 661, 570, 436, 458, 11, 731, 11, 341, 2445, 575, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.18481563967327738, "compression_ratio": 1.6451612903225807, "no_caption_prob": 3.269856460974552e-05}, {"id": 686, "seek": 393790, "start": 3953.94, "end": 3961.14, "text": " Elm optimize level two, it knows that it can move some functions or some operations around", "tokens": [50364, 1057, 295, 613, 32567, 300, 321, 600, 2825, 466, 11, 721, 300, 321, 393, 10687, 322, 300, 1669, 50726, 50726, 5215, 3571, 11, 309, 13165, 281, 22896, 1559, 11, 457, 309, 611, 13165, 281, 3089, 5028, 22525, 13, 1171, 5197, 11, 51166, 51166, 2699, 76, 19719, 1496, 732, 11, 309, 3255, 300, 309, 393, 1286, 512, 6828, 420, 512, 7705, 926, 51526, 51526, 382, 938, 382, 436, 500, 380, 5672, 322, 1184, 661, 570, 436, 458, 11, 731, 11, 341, 2445, 575, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.18481563967327738, "compression_ratio": 1.6451612903225807, "no_caption_prob": 3.269856460974552e-05}, {"id": 687, "seek": 393790, "start": 3961.14, "end": 3964.98, "text": " as long as they don't depend on each other because they know, well, this function has", "tokens": [50364, 1057, 295, 613, 32567, 300, 321, 600, 2825, 466, 11, 721, 300, 321, 393, 10687, 322, 300, 1669, 50726, 50726, 5215, 3571, 11, 309, 13165, 281, 22896, 1559, 11, 457, 309, 611, 13165, 281, 3089, 5028, 22525, 13, 1171, 5197, 11, 51166, 51166, 2699, 76, 19719, 1496, 732, 11, 309, 3255, 300, 309, 393, 1286, 512, 6828, 420, 512, 7705, 926, 51526, 51526, 382, 938, 382, 436, 500, 380, 5672, 322, 1184, 661, 570, 436, 458, 11, 731, 11, 341, 2445, 575, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.18481563967327738, "compression_ratio": 1.6451612903225807, "no_caption_prob": 3.269856460974552e-05}, {"id": 688, "seek": 396498, "start": 3964.98, "end": 3969.7, "text": " no side effect, this function has no side effect, so they can move things. They can", "tokens": [50364, 572, 1252, 1802, 11, 341, 2445, 575, 572, 1252, 1802, 11, 370, 436, 393, 1286, 721, 13, 814, 393, 50600, 50600, 360, 257, 688, 295, 613, 721, 570, 436, 458, 300, 264, 31958, 4114, 3089, 294, 257, 2685, 50880, 50880, 636, 300, 264, 3380, 3089, 390, 294, 257, 2685, 636, 11, 300, 721, 366, 7363, 11, 300, 4361, 45298, 51178, 51178, 2995, 11, 300, 3467, 2995, 382, 309, 390, 294, 264, 3089, 13, 407, 1228, 439, 295, 613, 32567, 300, 264, 51550, 51550, 715, 388, 433, 11, 300, 264, 2010, 1520, 260, 11, 264, 2856, 1715, 976, 291, 11, 291, 393, 360, 257, 688, 295, 4005, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17457124536687676, "compression_ratio": 1.9864253393665159, "no_caption_prob": 6.814741209382191e-05}, {"id": 689, "seek": 396498, "start": 3969.7, "end": 3975.3, "text": " do a lot of these things because they know that the compiler wrote code in a specific", "tokens": [50364, 572, 1252, 1802, 11, 341, 2445, 575, 572, 1252, 1802, 11, 370, 436, 393, 1286, 721, 13, 814, 393, 50600, 50600, 360, 257, 688, 295, 613, 721, 570, 436, 458, 300, 264, 31958, 4114, 3089, 294, 257, 2685, 50880, 50880, 636, 300, 264, 3380, 3089, 390, 294, 257, 2685, 636, 11, 300, 721, 366, 7363, 11, 300, 4361, 45298, 51178, 51178, 2995, 11, 300, 3467, 2995, 382, 309, 390, 294, 264, 3089, 13, 407, 1228, 439, 295, 613, 32567, 300, 264, 51550, 51550, 715, 388, 433, 11, 300, 264, 2010, 1520, 260, 11, 264, 2856, 1715, 976, 291, 11, 291, 393, 360, 257, 688, 295, 4005, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17457124536687676, "compression_ratio": 1.9864253393665159, "no_caption_prob": 6.814741209382191e-05}, {"id": 690, "seek": 396498, "start": 3975.3, "end": 3981.26, "text": " way that the original code was in a specific way, that things are valid, that semantics", "tokens": [50364, 572, 1252, 1802, 11, 341, 2445, 575, 572, 1252, 1802, 11, 370, 436, 393, 1286, 721, 13, 814, 393, 50600, 50600, 360, 257, 688, 295, 613, 721, 570, 436, 458, 300, 264, 31958, 4114, 3089, 294, 257, 2685, 50880, 50880, 636, 300, 264, 3380, 3089, 390, 294, 257, 2685, 636, 11, 300, 721, 366, 7363, 11, 300, 4361, 45298, 51178, 51178, 2995, 11, 300, 3467, 2995, 382, 309, 390, 294, 264, 3089, 13, 407, 1228, 439, 295, 613, 32567, 300, 264, 51550, 51550, 715, 388, 433, 11, 300, 264, 2010, 1520, 260, 11, 264, 2856, 1715, 976, 291, 11, 291, 393, 360, 257, 688, 295, 4005, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17457124536687676, "compression_ratio": 1.9864253393665159, "no_caption_prob": 6.814741209382191e-05}, {"id": 691, "seek": 396498, "start": 3981.26, "end": 3988.7, "text": " match, that types match as it was in the code. So using all of these guarantees that the", "tokens": [50364, 572, 1252, 1802, 11, 341, 2445, 575, 572, 1252, 1802, 11, 370, 436, 393, 1286, 721, 13, 814, 393, 50600, 50600, 360, 257, 688, 295, 613, 721, 570, 436, 458, 300, 264, 31958, 4114, 3089, 294, 257, 2685, 50880, 50880, 636, 300, 264, 3380, 3089, 390, 294, 257, 2685, 636, 11, 300, 721, 366, 7363, 11, 300, 4361, 45298, 51178, 51178, 2995, 11, 300, 3467, 2995, 382, 309, 390, 294, 264, 3089, 13, 407, 1228, 439, 295, 613, 32567, 300, 264, 51550, 51550, 715, 388, 433, 11, 300, 264, 2010, 1520, 260, 11, 264, 2856, 1715, 976, 291, 11, 291, 393, 360, 257, 688, 295, 4005, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17457124536687676, "compression_ratio": 1.9864253393665159, "no_caption_prob": 6.814741209382191e-05}, {"id": 692, "seek": 396498, "start": 3988.7, "end": 3993.98, "text": " compilers, that the type checker, the language design give you, you can do a lot of powerful", "tokens": [50364, 572, 1252, 1802, 11, 341, 2445, 575, 572, 1252, 1802, 11, 370, 436, 393, 1286, 721, 13, 814, 393, 50600, 50600, 360, 257, 688, 295, 613, 721, 570, 436, 458, 300, 264, 31958, 4114, 3089, 294, 257, 2685, 50880, 50880, 636, 300, 264, 3380, 3089, 390, 294, 257, 2685, 636, 11, 300, 721, 366, 7363, 11, 300, 4361, 45298, 51178, 51178, 2995, 11, 300, 3467, 2995, 382, 309, 390, 294, 264, 3089, 13, 407, 1228, 439, 295, 613, 32567, 300, 264, 51550, 51550, 715, 388, 433, 11, 300, 264, 2010, 1520, 260, 11, 264, 2856, 1715, 976, 291, 11, 291, 393, 360, 257, 688, 295, 4005, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17457124536687676, "compression_ratio": 1.9864253393665159, "no_caption_prob": 6.814741209382191e-05}, {"id": 693, "seek": 399398, "start": 3993.98, "end": 3999.22, "text": " things. But as soon as you missing one of those, well, some areas, some optimization", "tokens": [50364, 721, 13, 583, 382, 2321, 382, 291, 5361, 472, 295, 729, 11, 731, 11, 512, 3179, 11, 512, 19618, 50626, 50626, 3487, 11, 512, 287, 5106, 4474, 300, 291, 2759, 380, 528, 281, 2464, 11, 436, 47478, 11, 291, 393, 380, 360, 50986, 50986, 552, 3602, 13, 1610, 436, 3651, 257, 688, 544, 5215, 11, 597, 321, 600, 1612, 393, 312, 1152, 13, 407, 1338, 13, 407, 51344, 51344, 300, 311, 264, 644, 466, 437, 286, 390, 1566, 11, 8650, 820, 4159, 8546, 4122, 420, 4122, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.17235919104682074, "compression_ratio": 1.5614035087719298, "no_caption_prob": 8.48068593768403e-05}, {"id": 694, "seek": 399398, "start": 3999.22, "end": 4006.42, "text": " ideas, some linter rules that you wouldn't want to write, they crumble, you can't do", "tokens": [50364, 721, 13, 583, 382, 2321, 382, 291, 5361, 472, 295, 729, 11, 731, 11, 512, 3179, 11, 512, 19618, 50626, 50626, 3487, 11, 512, 287, 5106, 4474, 300, 291, 2759, 380, 528, 281, 2464, 11, 436, 47478, 11, 291, 393, 380, 360, 50986, 50986, 552, 3602, 13, 1610, 436, 3651, 257, 688, 544, 5215, 11, 597, 321, 600, 1612, 393, 312, 1152, 13, 407, 1338, 13, 407, 51344, 51344, 300, 311, 264, 644, 466, 437, 286, 390, 1566, 11, 8650, 820, 4159, 8546, 4122, 420, 4122, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.17235919104682074, "compression_ratio": 1.5614035087719298, "no_caption_prob": 8.48068593768403e-05}, {"id": 695, "seek": 399398, "start": 4006.42, "end": 4013.58, "text": " them anymore. Or they require a lot more analysis, which we've seen can be hard. So yeah. So", "tokens": [50364, 721, 13, 583, 382, 2321, 382, 291, 5361, 472, 295, 729, 11, 731, 11, 512, 3179, 11, 512, 19618, 50626, 50626, 3487, 11, 512, 287, 5106, 4474, 300, 291, 2759, 380, 528, 281, 2464, 11, 436, 47478, 11, 291, 393, 380, 360, 50986, 50986, 552, 3602, 13, 1610, 436, 3651, 257, 688, 544, 5215, 11, 597, 321, 600, 1612, 393, 312, 1152, 13, 407, 1338, 13, 407, 51344, 51344, 300, 311, 264, 644, 466, 437, 286, 390, 1566, 11, 8650, 820, 4159, 8546, 4122, 420, 4122, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.17235919104682074, "compression_ratio": 1.5614035087719298, "no_caption_prob": 8.48068593768403e-05}, {"id": 696, "seek": 399398, "start": 4013.58, "end": 4019.66, "text": " that's the part about what I was saying, languages should remove dynamic features or features", "tokens": [50364, 721, 13, 583, 382, 2321, 382, 291, 5361, 472, 295, 729, 11, 731, 11, 512, 3179, 11, 512, 19618, 50626, 50626, 3487, 11, 512, 287, 5106, 4474, 300, 291, 2759, 380, 528, 281, 2464, 11, 436, 47478, 11, 291, 393, 380, 360, 50986, 50986, 552, 3602, 13, 1610, 436, 3651, 257, 688, 544, 5215, 11, 597, 321, 600, 1612, 393, 312, 1152, 13, 407, 1338, 13, 407, 51344, 51344, 300, 311, 264, 644, 466, 437, 286, 390, 1566, 11, 8650, 820, 4159, 8546, 4122, 420, 4122, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.17235919104682074, "compression_ratio": 1.5614035087719298, "no_caption_prob": 8.48068593768403e-05}, {"id": 697, "seek": 401966, "start": 4019.66, "end": 4026.94, "text": " that are hard to analyze, like side effects and dynamic values. Those are hard and therefore,", "tokens": [50364, 300, 366, 1152, 281, 12477, 11, 411, 1252, 5065, 293, 8546, 4190, 13, 3950, 366, 1152, 293, 4412, 11, 50728, 50728, 498, 321, 393, 4159, 729, 11, 498, 321, 393, 652, 552, 544, 13437, 11, 731, 11, 300, 3665, 13437, 5215, 51084, 51084, 3873, 13, 400, 300, 307, 746, 300, 286, 500, 380, 519, 300, 257, 688, 295, 661, 8650, 458, 4498, 51418, 51418, 1547, 11, 558, 30, 286, 445, 3172, 561, 2586, 300, 544, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16288869380950927, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.111162211804185e-05}, {"id": 698, "seek": 401966, "start": 4026.94, "end": 4034.06, "text": " if we can remove those, if we can make them more static, well, that helps static analysis", "tokens": [50364, 300, 366, 1152, 281, 12477, 11, 411, 1252, 5065, 293, 8546, 4190, 13, 3950, 366, 1152, 293, 4412, 11, 50728, 50728, 498, 321, 393, 4159, 729, 11, 498, 321, 393, 652, 552, 544, 13437, 11, 731, 11, 300, 3665, 13437, 5215, 51084, 51084, 3873, 13, 400, 300, 307, 746, 300, 286, 500, 380, 519, 300, 257, 688, 295, 661, 8650, 458, 4498, 51418, 51418, 1547, 11, 558, 30, 286, 445, 3172, 561, 2586, 300, 544, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16288869380950927, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.111162211804185e-05}, {"id": 699, "seek": 401966, "start": 4034.06, "end": 4040.74, "text": " tools. And that is something that I don't think that a lot of other languages know fully", "tokens": [50364, 300, 366, 1152, 281, 12477, 11, 411, 1252, 5065, 293, 8546, 4190, 13, 3950, 366, 1152, 293, 4412, 11, 50728, 50728, 498, 321, 393, 4159, 729, 11, 498, 321, 393, 652, 552, 544, 13437, 11, 731, 11, 300, 3665, 13437, 5215, 51084, 51084, 3873, 13, 400, 300, 307, 746, 300, 286, 500, 380, 519, 300, 257, 688, 295, 661, 8650, 458, 4498, 51418, 51418, 1547, 11, 558, 30, 286, 445, 3172, 561, 2586, 300, 544, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16288869380950927, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.111162211804185e-05}, {"id": 700, "seek": 401966, "start": 4040.74, "end": 4044.54, "text": " enough, right? I just wish people knew that more.", "tokens": [50364, 300, 366, 1152, 281, 12477, 11, 411, 1252, 5065, 293, 8546, 4190, 13, 3950, 366, 1152, 293, 4412, 11, 50728, 50728, 498, 321, 393, 4159, 729, 11, 498, 321, 393, 652, 552, 544, 13437, 11, 731, 11, 300, 3665, 13437, 5215, 51084, 51084, 3873, 13, 400, 300, 307, 746, 300, 286, 500, 380, 519, 300, 257, 688, 295, 661, 8650, 458, 4498, 51418, 51418, 1547, 11, 558, 30, 286, 445, 3172, 561, 2586, 300, 544, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16288869380950927, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.111162211804185e-05}, {"id": 701, "seek": 404454, "start": 4044.54, "end": 4051.02, "text": " What I'm taking away from this is basically like move the goalposts. Like instead of trying", "tokens": [50364, 708, 286, 478, 1940, 1314, 490, 341, 307, 1936, 411, 1286, 264, 3387, 23744, 82, 13, 1743, 2602, 295, 1382, 50688, 50688, 281, 5039, 257, 1152, 1154, 11, 6964, 264, 1154, 294, 257, 636, 300, 1669, 309, 3571, 11, 558, 30, 407, 411, 51104, 51104, 321, 2825, 466, 365, 13437, 5215, 11, 411, 498, 291, 362, 257, 411, 11, 1954, 11, 286, 362, 281, 360, 439, 341, 51384, 51384, 3089, 3095, 5215, 281, 652, 341, 11, 281, 2573, 484, 437, 264, 1508, 1315, 307, 13, 4387, 264, 1154, 51626, 51626, 3571, 337, 1803, 538, 1455, 544, 17695, 11, 1419, 544, 18491, 13, 407, 291, 393, 360, 300, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11405016924883868, "compression_ratio": 1.6981132075471699, "no_caption_prob": 0.00012929504737257957}, {"id": 702, "seek": 404454, "start": 4051.02, "end": 4059.34, "text": " to solve a hard problem, define the problem in a way that makes it easier, right? So like", "tokens": [50364, 708, 286, 478, 1940, 1314, 490, 341, 307, 1936, 411, 1286, 264, 3387, 23744, 82, 13, 1743, 2602, 295, 1382, 50688, 50688, 281, 5039, 257, 1152, 1154, 11, 6964, 264, 1154, 294, 257, 636, 300, 1669, 309, 3571, 11, 558, 30, 407, 411, 51104, 51104, 321, 2825, 466, 365, 13437, 5215, 11, 411, 498, 291, 362, 257, 411, 11, 1954, 11, 286, 362, 281, 360, 439, 341, 51384, 51384, 3089, 3095, 5215, 281, 652, 341, 11, 281, 2573, 484, 437, 264, 1508, 1315, 307, 13, 4387, 264, 1154, 51626, 51626, 3571, 337, 1803, 538, 1455, 544, 17695, 11, 1419, 544, 18491, 13, 407, 291, 393, 360, 300, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11405016924883868, "compression_ratio": 1.6981132075471699, "no_caption_prob": 0.00012929504737257957}, {"id": 703, "seek": 404454, "start": 4059.34, "end": 4064.94, "text": " we talked about with static analysis, like if you have a like, oh, I have to do all this", "tokens": [50364, 708, 286, 478, 1940, 1314, 490, 341, 307, 1936, 411, 1286, 264, 3387, 23744, 82, 13, 1743, 2602, 295, 1382, 50688, 50688, 281, 5039, 257, 1152, 1154, 11, 6964, 264, 1154, 294, 257, 636, 300, 1669, 309, 3571, 11, 558, 30, 407, 411, 51104, 51104, 321, 2825, 466, 365, 13437, 5215, 11, 411, 498, 291, 362, 257, 411, 11, 1954, 11, 286, 362, 281, 360, 439, 341, 51384, 51384, 3089, 3095, 5215, 281, 652, 341, 11, 281, 2573, 484, 437, 264, 1508, 1315, 307, 13, 4387, 264, 1154, 51626, 51626, 3571, 337, 1803, 538, 1455, 544, 17695, 11, 1419, 544, 18491, 13, 407, 291, 393, 360, 300, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11405016924883868, "compression_ratio": 1.6981132075471699, "no_caption_prob": 0.00012929504737257957}, {"id": 704, "seek": 404454, "start": 4064.94, "end": 4069.7799999999997, "text": " code flow analysis to make this, to figure out what the class name is. Make the problem", "tokens": [50364, 708, 286, 478, 1940, 1314, 490, 341, 307, 1936, 411, 1286, 264, 3387, 23744, 82, 13, 1743, 2602, 295, 1382, 50688, 50688, 281, 5039, 257, 1152, 1154, 11, 6964, 264, 1154, 294, 257, 636, 300, 1669, 309, 3571, 11, 558, 30, 407, 411, 51104, 51104, 321, 2825, 466, 365, 13437, 5215, 11, 411, 498, 291, 362, 257, 411, 11, 1954, 11, 286, 362, 281, 360, 439, 341, 51384, 51384, 3089, 3095, 5215, 281, 652, 341, 11, 281, 2573, 484, 437, 264, 1508, 1315, 307, 13, 4387, 264, 1154, 51626, 51626, 3571, 337, 1803, 538, 1455, 544, 17695, 11, 1419, 544, 18491, 13, 407, 291, 393, 360, 300, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11405016924883868, "compression_ratio": 1.6981132075471699, "no_caption_prob": 0.00012929504737257957}, {"id": 705, "seek": 404454, "start": 4069.7799999999997, "end": 4074.2599999999998, "text": " easier for yourself by making more assumptions, having more constraints. So you can do that", "tokens": [50364, 708, 286, 478, 1940, 1314, 490, 341, 307, 1936, 411, 1286, 264, 3387, 23744, 82, 13, 1743, 2602, 295, 1382, 50688, 50688, 281, 5039, 257, 1152, 1154, 11, 6964, 264, 1154, 294, 257, 636, 300, 1669, 309, 3571, 11, 558, 30, 407, 411, 51104, 51104, 321, 2825, 466, 365, 13437, 5215, 11, 411, 498, 291, 362, 257, 411, 11, 1954, 11, 286, 362, 281, 360, 439, 341, 51384, 51384, 3089, 3095, 5215, 281, 652, 341, 11, 281, 2573, 484, 437, 264, 1508, 1315, 307, 13, 4387, 264, 1154, 51626, 51626, 3571, 337, 1803, 538, 1455, 544, 17695, 11, 1419, 544, 18491, 13, 407, 291, 393, 360, 300, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.11405016924883868, "compression_ratio": 1.6981132075471699, "no_caption_prob": 0.00012929504737257957}, {"id": 706, "seek": 407426, "start": 4074.26, "end": 4079.78, "text": " in a language and you can do that in a static analysis rule and any sort of static analysis", "tokens": [50364, 294, 257, 2856, 293, 291, 393, 360, 300, 294, 257, 13437, 5215, 4978, 293, 604, 1333, 295, 13437, 5215, 50640, 50640, 4319, 291, 393, 1286, 264, 3387, 23744, 82, 11, 652, 264, 1154, 3571, 337, 1803, 13, 50850, 50850, 865, 13, 286, 4114, 257, 6968, 2183, 1219, 3273, 35948, 7705, 294, 2699, 76, 11, 597, 307, 1936, 884, 51150, 51150, 264, 912, 1558, 13, 1743, 321, 528, 281, 652, 264, 1558, 307, 321, 528, 281, 652, 746, 411, 1121, 454, 5893, 51406, 51406, 490, 20411, 11, 689, 321, 393, 1936, 362, 257, 2445, 300, 1177, 380, 2736, 257, 1310, 1121, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19848361382117638, "compression_ratio": 1.7228915662650603, "no_caption_prob": 2.7108313588541932e-05}, {"id": 707, "seek": 407426, "start": 4079.78, "end": 4083.98, "text": " context you can move the goalposts, make the problem easier for yourself.", "tokens": [50364, 294, 257, 2856, 293, 291, 393, 360, 300, 294, 257, 13437, 5215, 4978, 293, 604, 1333, 295, 13437, 5215, 50640, 50640, 4319, 291, 393, 1286, 264, 3387, 23744, 82, 11, 652, 264, 1154, 3571, 337, 1803, 13, 50850, 50850, 865, 13, 286, 4114, 257, 6968, 2183, 1219, 3273, 35948, 7705, 294, 2699, 76, 11, 597, 307, 1936, 884, 51150, 51150, 264, 912, 1558, 13, 1743, 321, 528, 281, 652, 264, 1558, 307, 321, 528, 281, 652, 746, 411, 1121, 454, 5893, 51406, 51406, 490, 20411, 11, 689, 321, 393, 1936, 362, 257, 2445, 300, 1177, 380, 2736, 257, 1310, 1121, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19848361382117638, "compression_ratio": 1.7228915662650603, "no_caption_prob": 2.7108313588541932e-05}, {"id": 708, "seek": 407426, "start": 4083.98, "end": 4089.98, "text": " Yeah. I wrote a blog post called safe unsafe operations in Elm, which is basically doing", "tokens": [50364, 294, 257, 2856, 293, 291, 393, 360, 300, 294, 257, 13437, 5215, 4978, 293, 604, 1333, 295, 13437, 5215, 50640, 50640, 4319, 291, 393, 1286, 264, 3387, 23744, 82, 11, 652, 264, 1154, 3571, 337, 1803, 13, 50850, 50850, 865, 13, 286, 4114, 257, 6968, 2183, 1219, 3273, 35948, 7705, 294, 2699, 76, 11, 597, 307, 1936, 884, 51150, 51150, 264, 912, 1558, 13, 1743, 321, 528, 281, 652, 264, 1558, 307, 321, 528, 281, 652, 746, 411, 1121, 454, 5893, 51406, 51406, 490, 20411, 11, 689, 321, 393, 1936, 362, 257, 2445, 300, 1177, 380, 2736, 257, 1310, 1121, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19848361382117638, "compression_ratio": 1.7228915662650603, "no_caption_prob": 2.7108313588541932e-05}, {"id": 709, "seek": 407426, "start": 4089.98, "end": 4095.1000000000004, "text": " the same idea. Like we want to make the idea is we want to make something like reg ex dot", "tokens": [50364, 294, 257, 2856, 293, 291, 393, 360, 300, 294, 257, 13437, 5215, 4978, 293, 604, 1333, 295, 13437, 5215, 50640, 50640, 4319, 291, 393, 1286, 264, 3387, 23744, 82, 11, 652, 264, 1154, 3571, 337, 1803, 13, 50850, 50850, 865, 13, 286, 4114, 257, 6968, 2183, 1219, 3273, 35948, 7705, 294, 2699, 76, 11, 597, 307, 1936, 884, 51150, 51150, 264, 912, 1558, 13, 1743, 321, 528, 281, 652, 264, 1558, 307, 321, 528, 281, 652, 746, 411, 1121, 454, 5893, 51406, 51406, 490, 20411, 11, 689, 321, 393, 1936, 362, 257, 2445, 300, 1177, 380, 2736, 257, 1310, 1121, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19848361382117638, "compression_ratio": 1.7228915662650603, "no_caption_prob": 2.7108313588541932e-05}, {"id": 710, "seek": 407426, "start": 4095.1000000000004, "end": 4102.66, "text": " from literal, where we can basically have a function that doesn't return a maybe reg", "tokens": [50364, 294, 257, 2856, 293, 291, 393, 360, 300, 294, 257, 13437, 5215, 4978, 293, 604, 1333, 295, 13437, 5215, 50640, 50640, 4319, 291, 393, 1286, 264, 3387, 23744, 82, 11, 652, 264, 1154, 3571, 337, 1803, 13, 50850, 50850, 865, 13, 286, 4114, 257, 6968, 2183, 1219, 3273, 35948, 7705, 294, 2699, 76, 11, 597, 307, 1936, 884, 51150, 51150, 264, 912, 1558, 13, 1743, 321, 528, 281, 652, 264, 1558, 307, 321, 528, 281, 652, 746, 411, 1121, 454, 5893, 51406, 51406, 490, 20411, 11, 689, 321, 393, 1936, 362, 257, 2445, 300, 1177, 380, 2736, 257, 1310, 1121, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.19848361382117638, "compression_ratio": 1.7228915662650603, "no_caption_prob": 2.7108313588541932e-05}, {"id": 711, "seek": 410266, "start": 4102.66, "end": 4108.66, "text": " ex, but a reg ex and Elm review then says, well, this is okay. We know that at compile", "tokens": [50364, 454, 11, 457, 257, 1121, 454, 293, 2699, 76, 3131, 550, 1619, 11, 731, 11, 341, 307, 1392, 13, 492, 458, 300, 412, 31413, 50664, 50664, 565, 341, 1985, 570, 341, 1542, 411, 257, 7363, 1121, 454, 13, 407, 341, 307, 2489, 13, 400, 5699, 50945, 50945, 291, 1320, 294, 257, 8546, 2158, 11, 321, 1286, 264, 3387, 23744, 82, 293, 538, 1566, 411, 11, 1767, 500, 380, 2464, 309, 51208, 51208, 341, 636, 13, 492, 500, 380, 1223, 309, 13, 400, 291, 393, 11, 291, 393, 360, 300, 300, 636, 420, 291, 393, 360, 11, 51498, 51498, 652, 264, 5215, 544, 3997, 11, 1293, 589, 13, 583, 382, 938, 382, 412, 512, 935, 291, 393, 976, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13883103614996287, "compression_ratio": 1.693798449612403, "no_caption_prob": 0.00012146892549935728}, {"id": 712, "seek": 410266, "start": 4108.66, "end": 4114.28, "text": " time this works because this looks like a valid reg ex. So this is fine. And whenever", "tokens": [50364, 454, 11, 457, 257, 1121, 454, 293, 2699, 76, 3131, 550, 1619, 11, 731, 11, 341, 307, 1392, 13, 492, 458, 300, 412, 31413, 50664, 50664, 565, 341, 1985, 570, 341, 1542, 411, 257, 7363, 1121, 454, 13, 407, 341, 307, 2489, 13, 400, 5699, 50945, 50945, 291, 1320, 294, 257, 8546, 2158, 11, 321, 1286, 264, 3387, 23744, 82, 293, 538, 1566, 411, 11, 1767, 500, 380, 2464, 309, 51208, 51208, 341, 636, 13, 492, 500, 380, 1223, 309, 13, 400, 291, 393, 11, 291, 393, 360, 300, 300, 636, 420, 291, 393, 360, 11, 51498, 51498, 652, 264, 5215, 544, 3997, 11, 1293, 589, 13, 583, 382, 938, 382, 412, 512, 935, 291, 393, 976, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13883103614996287, "compression_ratio": 1.693798449612403, "no_caption_prob": 0.00012146892549935728}, {"id": 713, "seek": 410266, "start": 4114.28, "end": 4119.54, "text": " you pass in a dynamic value, we move the goalposts and by saying like, please don't write it", "tokens": [50364, 454, 11, 457, 257, 1121, 454, 293, 2699, 76, 3131, 550, 1619, 11, 731, 11, 341, 307, 1392, 13, 492, 458, 300, 412, 31413, 50664, 50664, 565, 341, 1985, 570, 341, 1542, 411, 257, 7363, 1121, 454, 13, 407, 341, 307, 2489, 13, 400, 5699, 50945, 50945, 291, 1320, 294, 257, 8546, 2158, 11, 321, 1286, 264, 3387, 23744, 82, 293, 538, 1566, 411, 11, 1767, 500, 380, 2464, 309, 51208, 51208, 341, 636, 13, 492, 500, 380, 1223, 309, 13, 400, 291, 393, 11, 291, 393, 360, 300, 300, 636, 420, 291, 393, 360, 11, 51498, 51498, 652, 264, 5215, 544, 3997, 11, 1293, 589, 13, 583, 382, 938, 382, 412, 512, 935, 291, 393, 976, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13883103614996287, "compression_ratio": 1.693798449612403, "no_caption_prob": 0.00012146892549935728}, {"id": 714, "seek": 410266, "start": 4119.54, "end": 4125.34, "text": " this way. We don't understand it. And you can, you can do that that way or you can do,", "tokens": [50364, 454, 11, 457, 257, 1121, 454, 293, 2699, 76, 3131, 550, 1619, 11, 731, 11, 341, 307, 1392, 13, 492, 458, 300, 412, 31413, 50664, 50664, 565, 341, 1985, 570, 341, 1542, 411, 257, 7363, 1121, 454, 13, 407, 341, 307, 2489, 13, 400, 5699, 50945, 50945, 291, 1320, 294, 257, 8546, 2158, 11, 321, 1286, 264, 3387, 23744, 82, 293, 538, 1566, 411, 11, 1767, 500, 380, 2464, 309, 51208, 51208, 341, 636, 13, 492, 500, 380, 1223, 309, 13, 400, 291, 393, 11, 291, 393, 360, 300, 300, 636, 420, 291, 393, 360, 11, 51498, 51498, 652, 264, 5215, 544, 3997, 11, 1293, 589, 13, 583, 382, 938, 382, 412, 512, 935, 291, 393, 976, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13883103614996287, "compression_ratio": 1.693798449612403, "no_caption_prob": 0.00012146892549935728}, {"id": 715, "seek": 410266, "start": 4125.34, "end": 4131.58, "text": " make the analysis more complex, both work. But as long as at some point you can give", "tokens": [50364, 454, 11, 457, 257, 1121, 454, 293, 2699, 76, 3131, 550, 1619, 11, 731, 11, 341, 307, 1392, 13, 492, 458, 300, 412, 31413, 50664, 50664, 565, 341, 1985, 570, 341, 1542, 411, 257, 7363, 1121, 454, 13, 407, 341, 307, 2489, 13, 400, 5699, 50945, 50945, 291, 1320, 294, 257, 8546, 2158, 11, 321, 1286, 264, 3387, 23744, 82, 293, 538, 1566, 411, 11, 1767, 500, 380, 2464, 309, 51208, 51208, 341, 636, 13, 492, 500, 380, 1223, 309, 13, 400, 291, 393, 11, 291, 393, 360, 300, 300, 636, 420, 291, 393, 360, 11, 51498, 51498, 652, 264, 5215, 544, 3997, 11, 1293, 589, 13, 583, 382, 938, 382, 412, 512, 935, 291, 393, 976, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.13883103614996287, "compression_ratio": 1.693798449612403, "no_caption_prob": 0.00012146892549935728}, {"id": 716, "seek": 413158, "start": 4131.58, "end": 4139.26, "text": " the guarantee then everyone's happy. Otherwise you can fall back on the reg ex dot from string,", "tokens": [50364, 264, 10815, 550, 1518, 311, 2055, 13, 10328, 291, 393, 2100, 646, 322, 264, 1121, 454, 5893, 490, 6798, 11, 50748, 50748, 597, 11247, 1310, 1128, 1310, 1121, 454, 13, 50880, 50880, 1042, 11, 366, 456, 604, 661, 721, 561, 820, 574, 412, 30, 2639, 11, 604, 6968, 12300, 11, 604, 7586, 51156, 51156, 6686, 11, 4317, 2321, 281, 312, 4736, 30, 51314, 51314, 865, 13, 407, 286, 11, 257, 688, 295, 437, 286, 848, 965, 390, 8825, 4696, 1101, 813, 965, 294, 257, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.22090021046725186, "compression_ratio": 1.517391304347826, "no_caption_prob": 1.1842999811051413e-05}, {"id": 717, "seek": 413158, "start": 4139.26, "end": 4141.9, "text": " which returns maybe never maybe reg ex.", "tokens": [50364, 264, 10815, 550, 1518, 311, 2055, 13, 10328, 291, 393, 2100, 646, 322, 264, 1121, 454, 5893, 490, 6798, 11, 50748, 50748, 597, 11247, 1310, 1128, 1310, 1121, 454, 13, 50880, 50880, 1042, 11, 366, 456, 604, 661, 721, 561, 820, 574, 412, 30, 2639, 11, 604, 6968, 12300, 11, 604, 7586, 51156, 51156, 6686, 11, 4317, 2321, 281, 312, 4736, 30, 51314, 51314, 865, 13, 407, 286, 11, 257, 688, 295, 437, 286, 848, 965, 390, 8825, 4696, 1101, 813, 965, 294, 257, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.22090021046725186, "compression_ratio": 1.517391304347826, "no_caption_prob": 1.1842999811051413e-05}, {"id": 718, "seek": 413158, "start": 4141.9, "end": 4147.42, "text": " Well, are there any other things people should look at? Any, any blog posts, any conference", "tokens": [50364, 264, 10815, 550, 1518, 311, 2055, 13, 10328, 291, 393, 2100, 646, 322, 264, 1121, 454, 5893, 490, 6798, 11, 50748, 50748, 597, 11247, 1310, 1128, 1310, 1121, 454, 13, 50880, 50880, 1042, 11, 366, 456, 604, 661, 721, 561, 820, 574, 412, 30, 2639, 11, 604, 6968, 12300, 11, 604, 7586, 51156, 51156, 6686, 11, 4317, 2321, 281, 312, 4736, 30, 51314, 51314, 865, 13, 407, 286, 11, 257, 688, 295, 437, 286, 848, 965, 390, 8825, 4696, 1101, 813, 965, 294, 257, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.22090021046725186, "compression_ratio": 1.517391304347826, "no_caption_prob": 1.1842999811051413e-05}, {"id": 719, "seek": 413158, "start": 4147.42, "end": 4150.58, "text": " talks, perhaps soon to be released?", "tokens": [50364, 264, 10815, 550, 1518, 311, 2055, 13, 10328, 291, 393, 2100, 646, 322, 264, 1121, 454, 5893, 490, 6798, 11, 50748, 50748, 597, 11247, 1310, 1128, 1310, 1121, 454, 13, 50880, 50880, 1042, 11, 366, 456, 604, 661, 721, 561, 820, 574, 412, 30, 2639, 11, 604, 6968, 12300, 11, 604, 7586, 51156, 51156, 6686, 11, 4317, 2321, 281, 312, 4736, 30, 51314, 51314, 865, 13, 407, 286, 11, 257, 688, 295, 437, 286, 848, 965, 390, 8825, 4696, 1101, 813, 965, 294, 257, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.22090021046725186, "compression_ratio": 1.517391304347826, "no_caption_prob": 1.1842999811051413e-05}, {"id": 720, "seek": 413158, "start": 4150.58, "end": 4158.78, "text": " Yeah. So I, a lot of what I said today was explained hopefully better than today in a", "tokens": [50364, 264, 10815, 550, 1518, 311, 2055, 13, 10328, 291, 393, 2100, 646, 322, 264, 1121, 454, 5893, 490, 6798, 11, 50748, 50748, 597, 11247, 1310, 1128, 1310, 1121, 454, 13, 50880, 50880, 1042, 11, 366, 456, 604, 661, 721, 561, 820, 574, 412, 30, 2639, 11, 604, 6968, 12300, 11, 604, 7586, 51156, 51156, 6686, 11, 4317, 2321, 281, 312, 4736, 30, 51314, 51314, 865, 13, 407, 286, 11, 257, 688, 295, 437, 286, 848, 965, 390, 8825, 4696, 1101, 813, 965, 294, 257, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.22090021046725186, "compression_ratio": 1.517391304347826, "no_caption_prob": 1.1842999811051413e-05}, {"id": 721, "seek": 415878, "start": 4158.78, "end": 4165.58, "text": " talk that I made at Lender Days mid mid July. So it's called static analysis tools, love", "tokens": [50364, 751, 300, 286, 1027, 412, 441, 3216, 26007, 2062, 2062, 7370, 13, 407, 309, 311, 1219, 13437, 5215, 3873, 11, 959, 50704, 50704, 6075, 36655, 13, 286, 519, 309, 311, 516, 281, 312, 4736, 13, 286, 478, 1238, 988, 309, 311, 516, 281, 312, 4736, 50914, 50914, 934, 341, 3500, 13, 407, 4696, 321, 11, 286, 2378, 380, 32439, 886, 709, 13, 286, 519, 512, 3166, 295, 309, 51238, 51238, 412, 1935, 11, 457, 286, 519, 309, 311, 516, 281, 312, 11, 286, 519, 309, 390, 257, 665, 751, 13, 286, 478, 588, 10587, 51478, 51478, 365, 309, 412, 1935, 13, 51528, 51528, 286, 478, 2919, 281, 1159, 309, 13, 865, 13, 492, 603, 1066, 364, 3313, 322, 527, 5794, 2696, 550, 321, 486, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1501466618027798, "compression_ratio": 1.7290076335877862, "no_caption_prob": 2.5070878109545447e-05}, {"id": 722, "seek": 415878, "start": 4165.58, "end": 4169.78, "text": " pure FP. I think it's going to be released. I'm pretty sure it's going to be released", "tokens": [50364, 751, 300, 286, 1027, 412, 441, 3216, 26007, 2062, 2062, 7370, 13, 407, 309, 311, 1219, 13437, 5215, 3873, 11, 959, 50704, 50704, 6075, 36655, 13, 286, 519, 309, 311, 516, 281, 312, 4736, 13, 286, 478, 1238, 988, 309, 311, 516, 281, 312, 4736, 50914, 50914, 934, 341, 3500, 13, 407, 4696, 321, 11, 286, 2378, 380, 32439, 886, 709, 13, 286, 519, 512, 3166, 295, 309, 51238, 51238, 412, 1935, 11, 457, 286, 519, 309, 311, 516, 281, 312, 11, 286, 519, 309, 390, 257, 665, 751, 13, 286, 478, 588, 10587, 51478, 51478, 365, 309, 412, 1935, 13, 51528, 51528, 286, 478, 2919, 281, 1159, 309, 13, 865, 13, 492, 603, 1066, 364, 3313, 322, 527, 5794, 2696, 550, 321, 486, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1501466618027798, "compression_ratio": 1.7290076335877862, "no_caption_prob": 2.5070878109545447e-05}, {"id": 723, "seek": 415878, "start": 4169.78, "end": 4176.259999999999, "text": " after this episode. So hopefully we, I haven't spoiled too much. I think some parts of it", "tokens": [50364, 751, 300, 286, 1027, 412, 441, 3216, 26007, 2062, 2062, 7370, 13, 407, 309, 311, 1219, 13437, 5215, 3873, 11, 959, 50704, 50704, 6075, 36655, 13, 286, 519, 309, 311, 516, 281, 312, 4736, 13, 286, 478, 1238, 988, 309, 311, 516, 281, 312, 4736, 50914, 50914, 934, 341, 3500, 13, 407, 4696, 321, 11, 286, 2378, 380, 32439, 886, 709, 13, 286, 519, 512, 3166, 295, 309, 51238, 51238, 412, 1935, 11, 457, 286, 519, 309, 311, 516, 281, 312, 11, 286, 519, 309, 390, 257, 665, 751, 13, 286, 478, 588, 10587, 51478, 51478, 365, 309, 412, 1935, 13, 51528, 51528, 286, 478, 2919, 281, 1159, 309, 13, 865, 13, 492, 603, 1066, 364, 3313, 322, 527, 5794, 2696, 550, 321, 486, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1501466618027798, "compression_ratio": 1.7290076335877862, "no_caption_prob": 2.5070878109545447e-05}, {"id": 724, "seek": 415878, "start": 4176.259999999999, "end": 4181.0599999999995, "text": " at least, but I think it's going to be, I think it was a good talk. I'm very pleased", "tokens": [50364, 751, 300, 286, 1027, 412, 441, 3216, 26007, 2062, 2062, 7370, 13, 407, 309, 311, 1219, 13437, 5215, 3873, 11, 959, 50704, 50704, 6075, 36655, 13, 286, 519, 309, 311, 516, 281, 312, 4736, 13, 286, 478, 1238, 988, 309, 311, 516, 281, 312, 4736, 50914, 50914, 934, 341, 3500, 13, 407, 4696, 321, 11, 286, 2378, 380, 32439, 886, 709, 13, 286, 519, 512, 3166, 295, 309, 51238, 51238, 412, 1935, 11, 457, 286, 519, 309, 311, 516, 281, 312, 11, 286, 519, 309, 390, 257, 665, 751, 13, 286, 478, 588, 10587, 51478, 51478, 365, 309, 412, 1935, 13, 51528, 51528, 286, 478, 2919, 281, 1159, 309, 13, 865, 13, 492, 603, 1066, 364, 3313, 322, 527, 5794, 2696, 550, 321, 486, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1501466618027798, "compression_ratio": 1.7290076335877862, "no_caption_prob": 2.5070878109545447e-05}, {"id": 725, "seek": 415878, "start": 4181.0599999999995, "end": 4182.0599999999995, "text": " with it at least.", "tokens": [50364, 751, 300, 286, 1027, 412, 441, 3216, 26007, 2062, 2062, 7370, 13, 407, 309, 311, 1219, 13437, 5215, 3873, 11, 959, 50704, 50704, 6075, 36655, 13, 286, 519, 309, 311, 516, 281, 312, 4736, 13, 286, 478, 1238, 988, 309, 311, 516, 281, 312, 4736, 50914, 50914, 934, 341, 3500, 13, 407, 4696, 321, 11, 286, 2378, 380, 32439, 886, 709, 13, 286, 519, 512, 3166, 295, 309, 51238, 51238, 412, 1935, 11, 457, 286, 519, 309, 311, 516, 281, 312, 11, 286, 519, 309, 390, 257, 665, 751, 13, 286, 478, 588, 10587, 51478, 51478, 365, 309, 412, 1935, 13, 51528, 51528, 286, 478, 2919, 281, 1159, 309, 13, 865, 13, 492, 603, 1066, 364, 3313, 322, 527, 5794, 2696, 550, 321, 486, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1501466618027798, "compression_ratio": 1.7290076335877862, "no_caption_prob": 2.5070878109545447e-05}, {"id": 726, "seek": 415878, "start": 4182.0599999999995, "end": 4186.259999999999, "text": " I'm excited to watch it. Yeah. We'll keep an eye on our Twitter account then we will,", "tokens": [50364, 751, 300, 286, 1027, 412, 441, 3216, 26007, 2062, 2062, 7370, 13, 407, 309, 311, 1219, 13437, 5215, 3873, 11, 959, 50704, 50704, 6075, 36655, 13, 286, 519, 309, 311, 516, 281, 312, 4736, 13, 286, 478, 1238, 988, 309, 311, 516, 281, 312, 4736, 50914, 50914, 934, 341, 3500, 13, 407, 4696, 321, 11, 286, 2378, 380, 32439, 886, 709, 13, 286, 519, 512, 3166, 295, 309, 51238, 51238, 412, 1935, 11, 457, 286, 519, 309, 311, 516, 281, 312, 11, 286, 519, 309, 390, 257, 665, 751, 13, 286, 478, 588, 10587, 51478, 51478, 365, 309, 412, 1935, 13, 51528, 51528, 286, 478, 2919, 281, 1159, 309, 13, 865, 13, 492, 603, 1066, 364, 3313, 322, 527, 5794, 2696, 550, 321, 486, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1501466618027798, "compression_ratio": 1.7290076335877862, "no_caption_prob": 2.5070878109545447e-05}, {"id": 727, "seek": 418626, "start": 4186.26, "end": 4190.860000000001, "text": " we'll tweet a link to it. We will we'll try to update the show notes though. They may", "tokens": [50364, 321, 603, 15258, 257, 2113, 281, 309, 13, 492, 486, 321, 603, 853, 281, 5623, 264, 855, 5570, 1673, 13, 814, 815, 50594, 50594, 312, 3397, 32148, 294, 428, 7367, 13, 50706, 50706, 865, 13, 814, 2049, 366, 558, 13, 50796, 50796, 865, 11, 286, 519, 370, 13, 583, 1338, 11, 1066, 364, 3313, 322, 527, 5794, 293, 291, 434, 294, 1826, 958, 565, 13, 51124, 51124, 9088, 958, 565, 13, 51142], "temperature": 0.0, "avg_logprob": -0.23171043395996094, "compression_ratio": 1.5, "no_caption_prob": 0.00010228527389699593}, {"id": 728, "seek": 418626, "start": 4190.860000000001, "end": 4193.1, "text": " be immutable in your podcast.", "tokens": [50364, 321, 603, 15258, 257, 2113, 281, 309, 13, 492, 486, 321, 603, 853, 281, 5623, 264, 855, 5570, 1673, 13, 814, 815, 50594, 50594, 312, 3397, 32148, 294, 428, 7367, 13, 50706, 50706, 865, 13, 814, 2049, 366, 558, 13, 50796, 50796, 865, 11, 286, 519, 370, 13, 583, 1338, 11, 1066, 364, 3313, 322, 527, 5794, 293, 291, 434, 294, 1826, 958, 565, 13, 51124, 51124, 9088, 958, 565, 13, 51142], "temperature": 0.0, "avg_logprob": -0.23171043395996094, "compression_ratio": 1.5, "no_caption_prob": 0.00010228527389699593}, {"id": 729, "seek": 418626, "start": 4193.1, "end": 4194.900000000001, "text": " Yeah. They often are right.", "tokens": [50364, 321, 603, 15258, 257, 2113, 281, 309, 13, 492, 486, 321, 603, 853, 281, 5623, 264, 855, 5570, 1673, 13, 814, 815, 50594, 50594, 312, 3397, 32148, 294, 428, 7367, 13, 50706, 50706, 865, 13, 814, 2049, 366, 558, 13, 50796, 50796, 865, 11, 286, 519, 370, 13, 583, 1338, 11, 1066, 364, 3313, 322, 527, 5794, 293, 291, 434, 294, 1826, 958, 565, 13, 51124, 51124, 9088, 958, 565, 13, 51142], "temperature": 0.0, "avg_logprob": -0.23171043395996094, "compression_ratio": 1.5, "no_caption_prob": 0.00010228527389699593}, {"id": 730, "seek": 418626, "start": 4194.900000000001, "end": 4201.46, "text": " Yeah, I think so. But yeah, keep an eye on our Twitter and you're in until next time.", "tokens": [50364, 321, 603, 15258, 257, 2113, 281, 309, 13, 492, 486, 321, 603, 853, 281, 5623, 264, 855, 5570, 1673, 13, 814, 815, 50594, 50594, 312, 3397, 32148, 294, 428, 7367, 13, 50706, 50706, 865, 13, 814, 2049, 366, 558, 13, 50796, 50796, 865, 11, 286, 519, 370, 13, 583, 1338, 11, 1066, 364, 3313, 322, 527, 5794, 293, 291, 434, 294, 1826, 958, 565, 13, 51124, 51124, 9088, 958, 565, 13, 51142], "temperature": 0.0, "avg_logprob": -0.23171043395996094, "compression_ratio": 1.5, "no_caption_prob": 0.00010228527389699593}, {"id": 731, "seek": 420146, "start": 4201.46, "end": 4218.1, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 51196], "temperature": 0.0, "avg_logprob": -0.7233997072492327, "compression_ratio": 0.6666666666666666, "no_caption_prob": 1.3002010746276937e-05}], "language": "en"}