{"text": " Hello, Jeroen. Hello, Dillon. And once again, we're back with Robin Hanson. Thanks so much for coming back on, Robin. Thanks for having me on. What's it been, a year? Yeah, I haven't talked to you all year long. It's really exciting to sit down with you. And Jeroen, I have a feeling you're going to be itching to ask a bunch of performance related questions because today we're talking about performance with Robin, the Elm Performance Guy and Jeroen, the guy who's trying to dethrone Robin as the one who's optimized performance most in Elm. Yeah, I'm looking forward to it. I let you win one game and now you're all confident. You will never win again. Never. Yeah, so yeah, this is really exciting. I think it's kind of an exciting time for performance stuff in Elm. I think maybe these things have been happening in back channels right now, but I think we might be seeing some performance improvements in Elm Optimize Level 2, which we've talked about in previous episodes. It's just a sort of post processor that goes in and tweaks the Elm compiled output to do some performance optimizations. So I think we've got some exciting stuff coming. So I'm curious, before we get into some of these details about these performance optimizations and everything, you've got a long history of doing performance work in Elm, working on these data structures and benchmarking things. Why do you do it? Like, why do you care about Elm performance? Okay, so there are two answers to this question. The first one is like what people want to hear. And the second answer to this question is the truth. I think what people want to hear is that performance is really, really important. I think it's I think the worst thing that can happen to Elm is that someone sits down, writes a production app, and then it's laggy. And for a language with a relatively small following, like Elm, where people might not know how to fix a laggy application, that would be bad for the reputation of the language and further adoption of the language. So performance should not be your primary concern when doing the stuff that Elm is good at. Because most of the time, optimizing for performance is simply not going to matter for the sort of applications that you typically do with Elm. But if you do get a performance problem, I think that would be very bad for Elm. And so I've been working on performance things simply because I don't want people to have a performance problem. Wait, now, is that the truth? Or is that what people want to hear? The truth. That is a true answer. But really what got me into this is fixing performance things or improving performance problems is a relatively simple and fun activity. Because if you do it correctly, no one is going to notice anything. And so you don't have to go through a lot of API design discussions. There's a lot less things to consider. So it's a relatively easy thing to get into. And it's also a relatively easy thing to measure the improvements of. And of course, if you can improve something... And you can probably attest to this, Jeroen. If you make something 10 times faster or 50 times faster, it feels kind of good. Kind of. Slightly. Slightly good. It's a hell of a drive. It's super exciting. So it's fun. But it's also important. I think to avoid that. To avoid people having a bad experience with Elm. Although in most cases, people won't have them. Right. So Elm is a pretty high level language. Like you were describing, if people get painted into a corner and there's a performance issue, they might not have much they can do about it with Elm because it's pretty high level. Doesn't give you a lot of control about expressing low level things that would affect performance in a way that a language like Rust would maybe. But at the same time, on the other side of the coin, because it's this high level, very declarative and pure language, does that give you the opportunity to do more with performance because it's more constrained? Both yes and no. Like so in Elm you have... Well for the HTML library specifically, you have the HTML lazy namespace which provides functions which allows you to avoid computation in the cases where nothing has ever changed. And the reason why that is a good optimization when you can apply it and the reason it works and is very, very fast is because of Elm's purity. So you can do the same things in React, but it requires that you have made sure that everything is pure. And when you do need such an optimization in React, I think you are going to have a problem applying that optimization because things aren't pure by default. And so there are definitely certain things which are much, much easier in Elm because of purity. But on the other hand, there are things which is harder because of purity as well. Like a dictionary maybe. Yeah. So that doesn't necessarily mean that data structures can't be faster in a pure language compared to a language which allows you to use mutable data structures. So one example of this is the dictionary implementation in Clojure, the HashMap implementation in Clojure more specifically. It turns out that when reading from a Clojure HashMap, admittedly when you have a HashMap consisting of maybe like five or six million entries. Kind of big. Which you do hardly ever. But in the case you have such a big dictionary, it turns out that Clojure can actually be faster for reading from said dictionary simply because of the tree structure which makes it more cache friendly than your typical mutable HashMap, which is one continuous array. So it can be faster by doing things in a purer way. But you will normally struggle to make it as fast as mutable alternatives because you have to copy a lot of stuff around. Do you need to have immutability under the hood in an immutable language? Because I mean, Richard has been talking a lot about these types of optimizations in this rock language that he's been developing. We'll link to a talk where he goes into some details on this. But he uses some optimizations under the hood to perform mutation when possible in a way where the user doesn't have the ability to mutate data. But the compiler might see, well, the user won't notice that I've mutated something as far as they're concerned. They have the illusion of immutability. And that's all we need. So like, does that trade off apply to optimizing stuff in Elm? Or for practical reasons, is that not a good approach? Or for philosophical reasons, is that not the desired approach? So if you can do it, then you can definitely get a lot of performance out of that. And Rock has, at least from what I've seen, proven that you can have almost as fast code written in a purely functional language as long as the compiler is able to utilize these tricks under the hood. And it's important to say that we don't really care about things actually being pure under the hood, as long as you have the illusion of that being the case. But currently in Elm, I don't think we make use of such optimizations. No, that's kind of what I'm researching at the moment. Like some of the optimizations that Rock does is kind of what I'm looking at at the moment. There's some good results, but also it's like limited in what you can do, what you cannot optimize. And I think that Rock has much more solid foundations to do it at the moment. Yeah, when it's baked into the core of what the compiler is attempting to do, then the compiler can track information around where a mutation happens and optimize for that. But another very important aspect is that Rock doesn't have to compile to JavaScript. And so it has a lot more control over what it can and cannot do. For good and bad, you know, compiling to JavaScript is a lot easier. But you lose some control along the way. One thing that I'm thinking of which Elm does do and which most functional languages do is tail call optimization. Now tail call optimization isn't done first and foremost for performance. It's done for safety. So for those who don't know, tail call optimization is when you have a recursive function call where the recursive call, the result of the recursive call will be the result of the calling function, if that's correct, will not actually be compiled down to a function calling itself over and over. It will be compiled down to a while loop. And that is to avoid adding elements to the stack and eventually causing a stack overflow exception. That's the main use of it. But because you avoid a lot of function calls, you also increase performance a lot. So that's a case where the language only allows you to use functions and functions calling functions. But as long as we keep the illusion that that is what is happening, we don't really care about how it's compiled. And so compiling it down to a while loop is perfectly fine and faster and safer. Yeah, so while loop plus mutations as well. Otherwise it doesn't make much sense. Yeah, Jeroen, I think you've been trying to make more opportunities for tail call recursion so that the Elm compiler isn't as limited in where it can apply that optimization, right? Exactly. Yeah. And very promising results so far, but that's all I will say at the moment. So that's sort of like, when I think about all this performance stuff, one of the things that I think about is this idea of a compiler. So like, for example, Svelte and the creator of Svelte, Rich Harris, talks a lot about this idea of, he talks about a compiler for JavaScript and for JavaScript front end apps. And the way he talks about it, he says, hey, we've got, instead of just writing interpreted code, what if we had something that could be more intelligent and could understand how to help us do what we're trying to achieve by understanding things better? That's kind of how he talks about a compiler. In Elm, it's almost like water to a fish. Compiler is just such a ubiquitous concept in Elm that we almost don't think of it. But what can the compiler do, knowing what it knows, to make our job easier? So ideally, we shouldn't have to know this particular way of writing something is more efficient than this other way, because the compiler can deduce that, especially with like a pure language. And so I find this to be like one of the really interesting things in Elm in particular is how sophisticated can we get with the work that the compiler can take on to optimize things intelligently for us? That's a very good point. And there are a bunch of things that the Elm compiler can do, knowing the semantics of the language. So currently, if you do a simple operation like checking two objects for equality, say, if you were to do a value based comparison, a value based equality check of two objects in JavaScript, that would be hard, I guess, to get something that works fast, is safe from a Stack Overflow perspective, because doing that isn't baked into the language. The right code, making sure that all the contents of two objects are in fact exactly the same. It also has to be unambiguous, like, do you check the prototype of the object? Yes, exactly. And so that is actually surprisingly difficult in JavaScript to get that working 100% of every single case. In Elm, it's very simple. First of all, because it's baked in, but also because of not allowing mutation, the implementation of equality checking can actually be a shallow comparison, because you know that two objects who have the same identity are also equal. And so you can skip a lot of the work necessary to check two objects for equality. And so having a compiler that understands or which lays certain restrictions on how you write code can in fact make certain things a lot easier and more performant when compiled too. So if you look at the output of the Elm compiler, the JavaScript it produces, if you look at how equality is implemented, if you were to hand that over to a JavaScript developer and say does this perform a deep equality check? And he would say no, there are tons of issues with this. But in the context of Elm, it works just fine, because it can rely on the fact that mutation doesn't happen and these sorts of things. Like having the same identity, if you have two objects with the same identity, that doesn't necessarily mean that the object hasn't changed. But in Elm that is in fact true. So there's a bunch of stuff you can do knowing all the restrictions that Elm places on you. Yeah, it's really interesting. This blog post series you wrote about successes and failures in optimizing Elm's runtime performance, which we'll link to in the show notes, you talk a lot about essentially how there are all these optimizations baked into v8, which really it's sort of like a heuristics based optimization, right? Because their JavaScript is an interpreted language. And then you have this sort of just in time compiler, which applies heuristics, which can then get deoptimized. That's why they're heuristics, because it's interpreting things as it goes and saying, oh, hey, this will probably make it perform better. And then it assumes that the shape of an object has these fields. And then suddenly, boom, now there's a null in there that it didn't expect, or now something is a string that was an int elsewhere. And now it deoptimizes. So it's doing these heuristics. And as somebody doing these performance tunings in Elm compiler output, you're doing this strange work of sort of trying to understand those heuristics and trying to activate the heuristics in a way that they can predict Elm. But you're not predicting it. You know it because it's statically compiled code. But you're trying to get this like just in time optimization to kick in in those places. So it's like a weird it's a weird dance, isn't it? Yeah, so like and that really boils down to the fact that the just in time compiler understands JavaScript very, very well and has to account for all this sort of stuff so you can do in JavaScript. And there are certain things that you can't do in Elm and certain things you can do, which the JavaScript just in time compiler naturally has no knowledge about. So really a lot of the stuff that I've done with this performance work is so Elm makes it so that these things are always true. How can I tell that to the JavaScript just in time compiler? How can I make a JavaScript engine understand these things? And that is sometimes very hard. I actually have no clue how you would do that. Is it just you write you transform the code to something that is relatively simple or something like that? Yeah, so like so one thing that the Elm compiler does today, which is which wasn't which was originally done to reduce asset size, but which has a very cool performance benefit, is that when it reads your entire Elm project compiles into JavaScript, it compiles all your Elm code and all the dependencies and the core library, the runtime, everything into one single namespace. And when you call functions, and if you don't run this through Elm optimize level two, if you if you call single error functions, then there are two things that comes out of this. One is that you can see the function in scope. And so it knows that the function cannot be no because it's right there. And second of all, it knows that it's actually a function and not some crazy evaluated thing that evaluated to a function. So by having functions in the same scope, and readily available, the JavaScript engine can infer a surprising amount of things about that function. It doesn't have to look it up in the window or global, for instance, that would have a performance cost. And so the natural way to do namespacing in Elm is to create an object with certain fields and that those fields point to functions, say. But in Elm, you're just referencing a local function, the function that rise within local scope. So you know, it's a function, you know, it's not no, you don't have to look it up in an object, which means you don't have to check is this an object, is the object referencing actually there? And if that property exists, is it no, right? So there are a bunch of things that the compiler just doesn't have to deal with, because it can see the function in the local scope. And V8 understands that it makes it run faster than if you had to go through objects with a lookup, for instance. Exactly. So one thing that I've seen in when just asking the V8 engine to just tell me, what are the steps you go through to, like, how do you optimize this plain regular JavaScript function into assembly, then every time you do like an object lookup, it will produce this check, which checks is this thing that I got from this object null. And that will always happen because in JavaScript, you can always go into a REPL and then add stuff which can change. And so even though the just in time compiler can be reasonably certain at some point that this thing isn't null, that doesn't mean it cannot be null later. So it always has to like defensively add a bunch of checks. Yeah. And that's kind of annoying because we have all those guarantees and then we still have to re prove it again, kind of like going through paperwork for administration. You have to send a sign up form, send it over and then do the same one again for another service or something. Yeah. Yeah. It is very bureaucratic, isn't it? In a way. At least it's faster. Yeah. So that makes me think about WebAssembly. And of course, I mean, I think that WebAssembly can become maybe a silver bullet where it solves all the performance issues, right? In people's minds. And that's not necessarily, it's not as simple as that. What is WebAssembly? What is this WebAssembly that you're talking about? Should we define WebAssembly? Yeah. So it is essentially, correct me if I'm wrong, but it is something that gives you lower level control rather than this like interpreted language of JavaScript that can run natively in the browsers. It's something that can be executed natively in the browsers. It actually has, it's actually typed. So you write these sort of essentially byte code instructions, right? And you can have it as a compile target so you can compile Rust or whatever languages to that compile target. And it gives you more low level control over memory management. It doesn't come with built in garbage collection, things like that. But it gives you more nuanced control over performance and doesn't rely as much on these heuristics for just in time optimizations. Is that a fair summary? It's pretty correct. So it's a very low level language in the same way that Java byte code and.NET byte code. In fact, it's very similar to those sort of things, which most developers don't look at at all. But the big difference from WebAssembly and compared to something like Java byte code is that there are way fewer instructions and there are way fewer built in things. Like it doesn't have a garbage collector. That is one thing it just doesn't have. It doesn't have strings or any sort of data structure. All you get is this one huge continuous array, some instructions to look into that. And you get functions and you get four types. Five if you include functions. And those four types are 32 bit integer, 64 bit integer, 32 bit float, and 64 bit float. And that's really all you have to work with. Regarding the point that people think that WebAssembly will come in and solve all our performance problems, that's not really true. Like if you have a compiler that spits out very easily to optimize JavaScript and you have a compiler that compiles into very performant WebAssembly, you can probably expect about the same performance. However, the thing about WebAssembly is that it doesn't, since it's not JavaScript and since you don't have to do a lot of crazy stuff to get good performance, WebAssembly, like there is no guesswork involved. The compiler doesn't have to guess how do I compile this in the most optimal way. It simply just, okay, these byte codes can be compiled directly into this. And so it's much faster to compile and it doesn't have to guess how this should be compiled, which means it doesn't get a lot of stuff wrong. And the result of that is that you can expect to a much higher degree what the performance of compiled WebAssembly will be compared to JavaScript. Because in JavaScript, everything depends on what happens at runtime. So if you have a very simple program, all it does is that it takes an array of a thousand elements and wants to call the plus operation on them. It's a very simple thing to write in JavaScript. It's relatively simple to write in WebAssembly. In WebAssembly, if that array contains integers or if it contains strings, it will be pretty much the same performance if you implement it to support both. You will get the same performance every time. In JavaScript, if the just in time compiler only sees arrays of integers, you will get very good performance. But if it sees sometimes an array of integers and sometimes an array of strings, then you will get worse performance than if it only sees integers. It can't specialize the code as well. So in WebAssembly, you can write code where I expect it to have this performance profile and it will pretty much always have that. Whereas in JavaScript, it all depends on what the just in time compiler sees when the program is running. Yeah. And you also remove all those checks that we mentioned like, is this indeed an integer? Is this indeed a string? Those won't have to be done in WebAssembly, but they're done under the hood in JavaScript all the time. That's true. But so there was this blog post and I don't remember the name of it. I can try to find out later and maybe we can add it to show notes. But there was this blog post where somebody wrote, I think it was the Firefox team, which rewrote PDF reader, I think. They rewrote it in WebAssembly and said, look, it's a hundred times faster or something because the previous version was in JavaScript. Well, that's promising. Yeah. A PDF viewer it was. Yeah. So it was the built in PDF viewer in Firefox. They rewrote to WebAssembly and it was 50, 100 times faster, something along those lines. And then there was a followup blog post to that where someone just changed the JavaScript version and they got about the same performance. But the thing is, so if you compile to WebAssembly, it is much easier for you to create WebAssembly, which will give you the best performance. Whereas in JavaScript, you have to not only know JavaScript very well, but you have to know how the different JavaScript engines compile optimal code. And so that is, it's much harder to create optimal JavaScript that compiles and optimize as well than WebAssembly in theory, I guess. So one thing that is pretty tricky with compiling to JavaScript and expecting good performance is that you need to compare it to multiple implementations of engines. So you need to run benchmarks on Chrome, on Firefox, on Safari, and they have very different engines and therefore have very different results on benchmarks. So if you change some code, sometimes you will have better performance on Chrome and worse performance on Safari, for instance. Would that also be the case with WebAssembly? Would each browser have their own implementation of WebAssembly? Well yes, they will. But at the same time, there are only so many ways of compiling a WebAssembly program because there are very few byte codes and there are very few data structures. And essentially, there aren't many ways that a single byte code instruction can be compiled. And so you are likely, so if you compile WebAssembly a specific way, you are likely to get the best possible performance for that code. And of course, the Firefox WebAssembly compiler could be a worse compiler than the Chrome one, but at the very least, you're not relying on how good the compiler is at guessing how it should optimize the code. I'm guessing that will be true for the beginning, but maybe not later. For instance, I'm guessing the V8 or actually the engines for the different JavaScript engines, they were not trying to be smart at the beginning, but then they noticed, oh, we can try to be smart to improve performance. And then they just piled improvement over improvement and made it very complex and unintuitive. And I'm guessing maybe that could be true for WebAssembly as well, maybe not to the same extent. So I mean, that's always possible, right? You always run the risk that Safari adds another WebAssembly specialized compiler, which does runtime profiling to improve code. That can of course happen. But one thing that has happened a lot in my performance work is that... So when I was implementing the array data structure for Elm, one thing that surprised me was that, okay, I was going to implement array.map. And in my mind, the Elm array, for those who don't know, is a tree structure that if you have 32 elements or less, it's just a normal JavaScript array. If you have more than 32 elements, it will become a tree where each level of the tree has 32 elements. And so it will grow... So if you have 60 elements, then the Elm array will be one array with two elements. Those elements point to arrays where the first array contains the first 32 elements and the second array contains the next 28. And as you add more elements, the tree grows. That was probably not the best summary of how an Elm array works. But the important thing for this particular story is to know that an array consists of multiple JavaScript arrays under the hood. So when I was implementing array.map, the natural thing for me to do was to implement that in terms of the built in JavaScript array.map instead of writing a for loop and kind of like reimplementing array.map myself. But it turned out that using the built in array.map for JavaScript arrays was very fast in Chrome. But compared to a for loop doing array.push, it was slower in Firefox. In Firefox, writing the actual loop was way faster than using array.map. And in WebAssembly, you wouldn't have such a difference. If you were going to implement the array.map, you would do it pretty much the only way you can in WebAssembly. And even though the performance can be worse in one browser compared to another, there wouldn't be... You wouldn't do it... You wouldn't get better performance by doing it in a less obvious way, I guess. There aren't that many ways of doing the same thing. And so you can just count on the most obvious thing also being the fastest thing. So what did you end up doing with the array.map? How did you make that choice? Well, really, since Elm is supposed to be used... If I were doing this and I only cared about Chrome, then I would do whatever is fastest for Chrome. But because Elm can be used in a lot of scenarios, I had to do it the way which overall gave the best thing. And if I remember correctly, the performance difference for Firefox was so big that I ended up prioritizing what was fastest for Firefox because the difference in Chrome wasn't that big. So you kind of have to find one solution that works best when all browsers are considered. Yeah. So are you secretly hoping for Chrome to just win the competition used by everyone? No, I think this is a slight departure from performance, but I think in the browser space we're very well served with competition. So I think the current... I was sad to see Microsoft just adopt Chrome as their web browser, essentially, even though I have no fond feelings towards Microsoft. I think it's good with some competition in the browser space. Of course, from a performance perspective, it would be nice if everything worked the same way. It would make my life a lot easier. But I think for most people, it would be better with competition in the browser space. Yeah. So it seems like it comes down to control, like WebAssembly gives you more control over performance. Now, if you have more control over performance, that means it's not going to do an optimization that you didn't build into it, which V8 or whatever SpiderMonkey's pre compilers are going to do. And to bring this back to Rock, one of the reasons why Rock can perform a lot of mutations, which are safe to do in practice without losing purity, is because they have full control of how the code compiles. So in JavaScript, you have a garbage collector. No matter what you do, you are going to create a language which on some level is garbage collected. So when you're compiling to WebAssembly or regular assembly, you don't have a garbage collector, which gives you the freedom to implement memory management how you want to. In Rock, one of the things they've done is that they use a reference counting sort of garbage collection. And while that, from a throughput perspective, is in general worse than a tracing garbage collector, what it gives them is that they know when they have an object, they know exactly how many is looking at that object. And if the person who wants to change the object is also the only person who can observe the object, doing a mutation is perfectly fine. And so by using reference counting, they can actually get this performance optimization, which is difficult to get with the garbage collected language. And so that level of control, the problem with it is that you have to implement everything yourself. But the upside is that you can do a lot of things you wouldn't normally be able to do. So whatever the future holds for Elm, Brian Carroll has done some really cool experiments prototyping WebAssembly output for Elm, which it's sort of an early prototype. We don't know if that would ever be production ready or if it's just a proof of concept, but either way, it's very interesting work. But whatever the future holds for Elm, I kind of wonder what, I mean, in particular, the two of you, Robin and Jeroen, you've been digging into performance a lot. Jeroen has been doing that as a passion project lately. And I wonder, are we scratching the surface for performance stuff in Elm? Or is there a lot more that we have left? Because one of the really interesting parts of the Elm story to me is in the early days, there was a blog post, I think, comparing performance between these different front end frameworks. And Elm was one of the top performers, right? And that's very interesting when you have this very high level language, and you have these things that, you know, I mean, if it's your cup of tea, things like immutability are really exciting in terms of reducing the cognitive load of the developer being able to easily trace what your code is doing. And it seems like it would be a burden for performance, but then suddenly you're getting better performance. And that's one of the really fascinating things to me is how can you take these characteristics of the Elm language and leverage them to actually be ahead of the pack with performance? So where do you guys think we are with performance optimizations in Elm? Because I'm seeing all these like blog posts that you're writing, Robin, and I'm seeing Jeroen's messages about like his screenshots on Twitter with these large percentage improvements on certain benchmarks. So are those things going to keep happening for a while? Or are we reaching the limit of how much we can optimize Elm's performance? Go ahead Jeroen. Yeah, we talked about this in private and Robin said, we probably did the easy stuff. So what I'm doing, like I'm seeing a function and I see a way to improve it performance wise. It's mostly just about removing unnecessary work or duplicate work, which happens a lot more often than expected. Like if you loop over a list two times, then it's slower than looping over it once. So I'd see it a lot in a few functions and that's just more about how you write those functions. So it's easy to optimize those. On a more optimizer level, so a compiler or Elm optimize level two or any other tool to make all those manual changes not necessary, that would be a lot more work. So you could write it an optimizer that says, well, here we are unnecessarily looping over the list two times and we could merge those into one or write using a while loop or something like that. But that's a lot more work. You need some knowledge that you may or may not have about what every function does. So yeah, it's more complex and there's also a bundle size that we need to care about in Elm, which is a trade off. So from my point of view of what I've seen, I'm still touching things that feel pretty easy. So yeah, I don't know what's remaining. But I'm starting to see other areas of explorations and then the scientific papers become a bit complex. Let's put it that way. Yeah. That's when the postdocs start doing the optimizations. Yeah. And also since we're using a pure function language, I don't know if it's the most researched thing. I'm sure a lot more people have researched how to improve the performance of C code than Haskell code or Elm code for that matter. So yeah. I think there are two very interesting... I think I'll go as far as to say that we have a lot of knowledge and a lot of ideas about how we can make Elm code compile faster. And there are certainly... Compile to faster output. Yes. Right. Because it compiles pretty darn fast. I mean, any more improvements are welcome. Yeah. Thank you for that. Yeah. So I think there are several people who knows a lot of easy wins, I guess we can say. Elm optimized level two does this thing where it's able to compile a lot of stuff into direct function calls instead of going through carrying helpers. That happens today. And from the benchmarks I've seen, that can easily increase performance by up to 20% in some cases. Of the overall program. Yeah. And then there are things that I've written about in the series of blog posts that I wrote before Christmas where updating a record can be made up to eight times faster in some cases. Yeah. Which is huge. Especially for applications that are continually looping over and up. I mean, like games, for example, if you're on every frame updating game state and records. Yeah. Yeah. So in that way, we are scratching the surface, I think, in what we can add. We know that there are a lot of games that can be easily added to make Elm code run faster. I know of several ways that the way that Elm is compiled in JavaScript could be changed in order to increase the runtime performance of Elm code. However, a lot of those optimizations would increase the JavaScript bundle size. Sometimes by a lot. So there are a lot. So one of the things that make... There are two things that kind of make performance work very difficult. One of them is how much of a code size increase are we willing to accept in order to get optimal performance? And that is not going to be an easy thing to answer because that's always going to change depending on what you do. Like if you're writing a single page application, then as long as the characters the user types on his keyboard arrives in a timely manner, performance isn't a concern. And so asset size is probably the most important thing. But for people writing games and physics engines and, you know, WebGL stuff, they would probably accept pretty big code size increase in order to get most optimal performance. And so that is a question which is very difficult to deal with when doing performance optimizations. Right. And the same for tooling like Elm Review and Elm Pages both do pretty heavy lifting in a Node.js environment in your command line or your build step. And if they can have big performance gains, whatever, give it 50% larger bundle size. For a CLI app, that's an easy win. For something that's running in your browser, that's probably not the right trade off. Exactly. And then, of course, another thing is the guesswork involved by the JavaScript just in time compiler. So there are certain things we could do, which, like in most languages, is the way to increase performance like function inlining. That would add most likely would increase the code size of the output. But the thing is that the JavaScript just in time compiler already has inlining enabled. So we could go through the hassle of creating a function inlining pass, but it wouldn't necessarily give us better performance because the JavaScript engine might already do those exact things. And so that's one area where WebAssembly would be an easier thing to work with. It wouldn't be easier because you'd have to implement a lot of stuff yourself. But you would, to a much larger degree, understand if something was worth looking into because it's a more predictable target. Yeah. So, like, a lot of the time that I've spent looking into performance has simply been, so in theory, this should give better performance. But in actuality, that may not be the case. And so there are a bunch of experiments which I've done which sounds reasonable or sounds completely unreasonable. And I've been surprised by the result on more than one occasion. So regarding bundle size, do you have a sense, Robin, because for anyone who doesn't know, you've been working on Stabble. It's a, what's it called, a stack language? It's a stack based programming language, or stack oriented. Stack oriented. And it's really interesting, like, I know that one of the things that you wanted to experiment with for that project was just outputting something to WebAssembly. And so that's what it does. And so you have a grasp of some of these real world applications of WebAssembly. And how does it, how is it for bundle size? Are WebAssembly output, is the bundle size larger, smaller, could go either way? So it's difficult to know. It depends on the language you want to compile to. But I believe Brian Carroll posted some numbers on this. Because in theory, WebAssembly bytecode instruction takes potentially just a byte. So doing plus one two is smaller than writing one plus two in JavaScript. Because it's compiled very efficiently. On the other hand, you have to reimplement garbage collection, strings, carrying in the case of Elm. So it's not necessarily a clear win. But I believe Brian Carroll has posted numbers on this sometime in the past. And I believe with the garbage collection and with, admittedly not with all the semantics of Elm in place. But I think it had proof of concept garbage collector. And I think a Hello World app or like the counter, the button counter example in Elm. I think that compiled to, I'm taking this from memory so I could be very wrong. But I believe it was something in the order of 12, 13 kilobytes before GZIP. Oh, before GZIP. Yeah. So, and of course, the larger application becomes, the more in favor of WebAssembly implementation becomes. So I believe, and also with my experiments with Stavel, I believe that asset size would be the one clear win from WebAssembly. Yeah. I didn't know it was, that the instructions were so condensed. So WebAssembly has two formats. There's a text format, which is meant for like, it's meant for, you can handwrite it, but usually it's for viewing, debugging, sanity checking, that sort of stuff. But the actual WebAssembly format is binary and it is very dense. Like one of the things it does is that all integer literals are encoded using variable sized encoding. So even though you are representing a 32 bit integer, if the int literal is the number 10, it only takes up eight bits in the WebAssembly output. So it's a very, very dense and optimized for size format. That's huge. I mean, the tiny bundle size potential is huge. Well, or tiny, I don't know, but it's, that could be just as interesting as any performance gains there. So that's, that is super interesting. Yeah, it's super interesting. But of course, like Brian Carroll has been working on this for years and I don't think is close to like a production ready compiler, which kind of goes to show that, you know, WebAssembly has a lot of potential benefits, but working with it is very difficult. Well not difficult, but very time consuming. And I think with the current state of the compiler, you would have to do a lot of work to get anywhere close to what Brian Carroll has got running today. Absolutely. And one thing that's easy to do, not easy, one thing that's important to keep in mind is that the Elm compiler is not an optimizing compiler. Even though it type checks your code, it doesn't actually retain that information to the code generation stage. So there are a ton of things you would have to improve or complicate, I guess is a better word. Like there, you would have to add a ton of complication to the Elm compiler in order to be able to output WebAssembly, and that is very likely to come at a cost to compiler speed. Yes, which Evan has painstakingly optimized, I think largely by just reducing the amount of memory that's passed around and that would be additional memory that you're passing around. So yeah, it would have a cost for performance. So yeah, it's not like WebAssembly is interesting. It is super interesting, but it's also, it's not easy. And of course, the JavaScript has a lot of faults, but it has a world class garbage collector built in and it is pretty good at optimizing high level code. So you wouldn't necessarily get better performance. You will get a lot of complications in JavaScript interop. You would probably get smaller asset sizes, but to get there would be a huge amount of work. But it's not a clear improvement over what we have today. Yeah. Well, one of the things that has always fascinated me is like when you can have a paradigm that you just slightly changed the way you're working and it has huge implications. Like for example, I always found it really interesting how you take Elixir and this web framework Phoenix and simply by having this one property of immutability, which actually it feels fairly similar to writing something like Ruby. You can even rebind variables and under the hood it's using immutable data, but it can feel very familiar for somebody who's used to writing Ruby. But you take Ruby on Rails and Elixir Phoenix and suddenly you can get this incredible request throughput because the optimizations they can perform under the hood largely with trivial parallelization. You have this immutability that you can rely on and suddenly this very challenging problem of parallelization, which requires a lot of work, including by the application developer to manage how to safely share memory. Those problems suddenly all just go away. And I think that there's similar potential in Elm. This is big picture, long term, who knows what will happen. But when I look at the big picture of trends of programming languages, everything becomes a question of parallelization rather than brute performance. So like CPUs aren't getting any faster. For five, 10 years they haven't gotten any faster. The clock speed is not improving because it would start to get to the temperature of the surface of the sun just the way that the physics of increasing clock speed works. But what you can do by getting more transistors on a chip is you can have more parallel processing, but you can't do it at a faster clock speed. That's just a limit that we hit a long time ago and that's not going to change. Can't they just improve physics? Maybe. Maybe quantum computers. So when we're on the topic of Elixir, Joe Armstrong, who is one of the creators of the Erlang programming language, which Elixir compiles down to, said that like so Erlang has this notion of easy parallel writing, parallel programs is very easy. Part of that is immutability. Part of that is isolated actor processes. It's a super interesting language. So if you haven't checked it out, do. But he worked on a project where they had an Erlang program and then they swapped out the hardware from like a four core CPU to a 64 core CPU. And then the same exact same program just ran, I believe it was 34 times faster or something. And the product manager said, well, we got 64 cores. Shouldn't it run even faster? And his response was, well, if you were to take a C++ program and just swap out the CPU, it would be zero times faster. So it's yeah. Wait, yeah. Zero times faster or one time faster? I don't know math. It would be one extra speed and a 0% performance increase. All right. I mean, you could say it just crashes and then it's just zero times faster. That's also likely, I would say. Yeah. Yeah. Yeah. This is to me. I mean, Yaron and I had this sort of episode in the new year where we talked about what's working for Elm. And that was like one of the points that came up was, hey, we've got this language with some really unique characteristics. And how can we, instead of saying, oh, performance is really hard with immutability, how can we say, well, but these things become easier and these things we have more opportunities. I think parallelization is one of them. And I don't know, looking 10 years down the road, are web apps going to be leveraging parallelization more? I don't know. Maybe. And I believe WebAssembly has primitives for delegating things in a parallel way. So if I'm not mistaken. So that could be an interesting space, long term, big picture. And I think if you if you I forget if it is in 0.19, it could be 0.18. But I believe if you look into Elm core and look at the process namespace, then you will get to that. There will be a comment there in the documentation that refers to in the future, we might have multiple actors or multiple mailboxes or something along those lines, which is a clear reference to Erlang actors. And so this aspect has actually been thought about by Evan since multiple years. So yeah, that might be like one aspect we tap into. And of course, when just to underline the point even more, one of the big things when Clojure came out, Clojure was like the first functional program that I it wasn't the first functional program that I learned. It was the first immutable by default language. And one of the big draws to Clojure was that because of immutability, concurrency is suddenly super easy. And so even though you have to pay the price of immutable code, adding concurrency to program is so easier that in a lot of cases, you actually get more correct and better performing programs. Right. And on the web, in a web browser, your code is single threaded. So if you are doing work on the main thread, which if you just open up an index.js and load that and do some work, that is that is blocking the main thread, including if a user tries to scroll or tries to click a button, and there's an animation from a built in button element on the page that's blocked, the render thread needs the opportunity to run. And you're running on that same thread. So you can you can use worker threads to do work, you do need to send send memory back and forth. But this is another potential space that could be very interesting for Elm because this sort of Elm architecture is a very natural fit for performing the main work off of the main thread, and then sending messages back to tell the main thread to update. Who knows if anything like that will ever happen. But these are these are the things that, again, it's like Elm is a compiler, and what can we do make taking advantage of that. And so I from this whole conversation, I really do get the sense that whatever the future holds, there's more opportunity. And we were not done picking off the low hanging fruit even but there are who knows, maybe there's some big thing in the future that could could even blow those out of the water. So it's it'll be interesting to see what happens. Exactly. And there are multiple cases of this also. Like we talked a little bit about Elixir. I mentioned Clojure, right, like immutability by default enables concurrency, or easy concurrency. There is there is also like so one interesting thing is JavaScript itself. One of the reasons node.js took off was because it has this event loop built in. And so even though you can't perform computationally expensive things, because you will block the thread, the node runtime or the JavaScript runtime makes it very easy to do to do event based programming. And if you write servers that, you know, call a database, and then they just wait for the results, node was really, really good at utilizing the one thread it has, which languages like Java and dotnet, which is spawn threads, wasn't that good at same with Ruby, Ruby's had a lot of issues with blocking file, oh, IO operations. Yeah. So really, the reason why node took off was because in practice, you managed to get servers which could handle more load without like without careful engineering, right, just by default, you could handle tons of requests, as long as those requests weren't doing anything expensive. And that's like JavaScript has a lot of flaws, but even JavaScript because of the limitations it has, was able to outperform naive implementations in the server space, which is partly why it took off. So today, there are better alternatives, but back in 2009, or whatever it was, it was, it was very interesting how you could handle a lot of requests on a single node.js server compared to naive Java program, right, which is actually I believe why Ryan doll chose JavaScript as the target language. It wasn't originally his intent. I can't remember maybe it was go or something else that he had in mind, but that event driven architecture was just such a good fit for for JavaScript that he went with that. Yeah, I never actually understood whether it was part of JavaScript or just part of the implementations of JavaScript, that it was limited to a single thread. I mean, I think that's the semantics of JavaScript basically that any anything you do runs on a single thread, but then there's this concept of being able to have a queue up callbacks, the callback queue and stuff. Like I think the concept of like a callback queue and everything is baked into the semantics of JavaScript. And then the specifics of the things that can be done in a non blocking way are specific to the node runtime or to the web runtime, like set timeout, for example, set timeout is not part of JavaScript. Set timeout is part of a runtime like the browser runtime or the nodejs runtime. It doesn't exist independent of that. But it uses the same mechanisms that you mentioned before that are built in. Yes. Part of the spec, I guess. Yeah, exactly. Those same semantics of a callback queue. Yeah. So yeah, so having languages which have limits, those limits can enable certain features that can be very well suited to certain kinds of programs. And Elm definitely, if there's one thing that Elm has a lot of, it's limits. Right. Exactly. And those exact limits can be utilized to some pretty interesting results. HTML lazy, which we talked about earlier is one example of that. Doing the similar kind of optimization in React takes a lot more planning. I guess like you need to know that you do not perform mutation in this component or it will be slow or it will produce buggy behavior. Whereas now it's very likely that you can just tap into that optimization. I wouldn't say it is limited. I would say it has limitations and those enable you to have no limits. Oh, that's great. Hey, that's another t shirt. Love it. So Robin, when you're sitting down to write Elm application code, I mean, I'm sure performance is this thing that you can't help but think about no matter what you do. But are you typically just focused on writing the application code or do you run into places where as an Elm application developer, you find that you need to really think about performance and tune performance? Does that happen very often? You are correct in that when I write Elm code, it's very difficult for me to not think about this is suboptimal from a performance perspective. Fortunately, that's something I've become better to ignore as I've grown older. So I would say that today I don't focus too much on performance normally. Now I take it like if we have a performance problem, that's when I'm called in. So like the reasons Elm CSS improvements are a result of that. This application is laggy. You know Elm very well. How can you improve the situation? And we improved it by using HTML lazy. And then I got home and thought about how could we have avoided that optimization in the first place? Like could we have changed the framework to not have needed HTML lazy in that case? So that's how it works now. But one thing that I have learned is that there are certain things which do improve performance but which also at least I think improve readability of the code. There are many cases where that is opposite. Like improving performance worsens code. But I've found several things that improves performance and increases readability. And usually this involves data structures. Most often you can recognize a pattern, realize that this would be more efficient and more readable by using the correct data structure. And really in Elm we have this mantra, making possible states impossible. And in a lot of cases making impossible states impossible also improves performance. Because there's less error handling and it's easier to get exactly what you want with safety guarantees but also performance guarantees. Less checks as well. So one simple thing that I also use in other programming languages like Java and Kotlin is whenever I see list.find or something similar to do like a give me the item with this key. To me that's like this should be a dictionary. Like why isn't this a dictionary? Like sometimes using a dictionary would be worse overall but in many cases it just screams associative lookup. You have a dictionary for this. Yeah, usually I see list.map and list.head and I'm thinking I should reach out for find. And then maybe I should reach out for dicts. But in the case that you mentioned list.map, list.head, that's a perfect use of just using a different data structure which gives you both performance and it improves the intent. What did you, what are you trying to do? So that's also a valid case. Using dictionaries or using sets instead of like manually or through some other means deduplicating your code usually also improves performance and makes it very clear what the intent is. And then using sippers or nonempty lists, same thing. But retrieving the head of a nonempty list lets you avoid a case of which has performance implications. Now granted in many cases the performance improvement we're talking about is small and insignificant. But the true benefit is clearer code. It's nice to realize that you can actually have both. Right. And you have to really consider the cost if you're doing performance optimization that makes the code harder to reason about. Also what's to prevent someone in the future from looking at that code and saying, oh, this is kind of ugly and then tweaking it and then breaking the performance up. But if it's the most elegant way to express it, it's a lasting improvement that's good for your code base. That's also kind of like what motivated me to improve performance of Elm CSS. Because where I work, a lot of the people who write Elm code are working on their first Elm application. They learned Elm because they were hired at V or in some other back project. And then we teach them Elm in a day or two and then we throw them out into the deep waters of an Elm application. Now figure it out. Exactly. And so there aren't many people that I work with on a day to day basis who has years of Elm experience. And so expecting them to not mess up code that involves HTML lazy is kind of a stretch. So not having HTML lazy, like if we didn't need HTML lazy, it is less likely that performance will degrade at some point. Robin, how do you go about finding your next opportunity? Is it like you were kind of describing with this Elm CSS case, scratching your own itch where you're driving home from work and you're like, hmm, can we avoid doing an HTML lazy there? Is that usually where you find your next opportunities for improvements? I would love to say yes, because that's the way it should be. But that is only something I realized once I turned 32. Before that, I was probably where Jeroen is now. Like he has discovered that performance work is really fun. And so he starts looking at, well, maybe I can make this faster. And oh, I could. Maybe I should make this faster. And there's nothing there's not necessarily anything wrong with that. I don't mean to single you out. No, I turned 32 in like three months. Excellent. Excellent. Looking forward to it. Prepare for wisdom. But really, I did the same thing. So the way I got into performance work was that I re implemented Elm arrays for zero 18, I think. And the main reason for that was because Elm arrays were buggy. They were written in JavaScript entirely. And then there was like a very thin layer of Elm code to expose it to Elm. And it had like it did have in certain cases, mutability, like if visible mutability, it could cause runtime exceptions. It wasn't good. It wasn't pretty. So the main reason was to rewrite it in as much Elm code as possible to make it safer. But for it to be acceptable, it had to have at least the same ballpark of performance to what was already there. And so that's how I got into performance work. I was trying to make an Elm array replacement, which didn't come at the cost of a huge performance decrease. And like having a benchmark and seeing those numbers go up when you make changes became addictive and then I just started looking around like the Elm core library seeing what else can I make faster. But really the biggest performance, the most important performance improvements are the ones you notice is a problem. Because I realized that I've spent a lot of time fixing things which aren't an issue and which aren't necessarily likely to be an issue. Wait, are you saying that string.pad improving the performance of that function is not big? I'm just saying unless you have a performance problem, fixing a performance problem isn't necessarily going to bring value to someone. That's not to say that making something faster just for the sake of making it faster won't be very useful somewhere down the line. And if you enjoy optimizations, especially optimizations which doesn't make code look worse and is harder to grasp, then there's no harm in it. But if you want to be entirely certain that the work you do has meaning, then ideally you should just come over something where you think this should be faster and then fix that. And I might add, fix that in a scientific way. Don't just think that, oh, if I replace this list fine with dict.get, then it will be much faster. And while it's probably faster now, do measurements and be certain that you are in fact making something better. And in an inevitable way. Yes, yes. So like a thousand times improvement is cool on paper, but if it in practice doesn't change anything, then not saying that you should stop doing what you're doing, you're doing awesome stuff. I'm currently working on something that I think has users as well as improving performance. So I'm very happy about that. Okay, good, good. But yeah, I remember that in some places I thought like list that appends is faster than plus plus and I started using it everywhere. And then I ran a benchmark just to just on list append versus plus plus. Yeah, no difference. So I did a lot of changes that were unnecessary and that didn't read much better. So yeah, benchmark it. And ultimately those things don't last. You know, I mean, like, again, like somebody could refactor it because some something looks ugly or it's a hack or if some if some code is using list dot append and it's a little bit awkward and they're like, why doesn't this use plus plus and change it? They're probably going to change it. Maybe maybe it changes which one's faster than the other. So there's always a cost to to making code uglier, right? It's like a make it work. Make it right. Make it fast. But that should be the last resort if you if you need to. And if you benchmark it and see there's a problem. Yeah. So don't do this at home, kids. Only do it at work. So yeah, performance work is is a hobby. It doesn't always bear fruits sometimes to do. And that's great. So it's it's as long as you're not hurting anyone. Yeah. Well, we do know that we've gotten a lot of amazing performance improvements from your work, Robin. So thank you for your work. Thank you for being on to talk about this with us. And yeah, thanks so much for coming back on. Oh, my pleasure. If anybody wants to to find out more, where should they where should they follow you? Where can they go to read more? Any any resources to leave people with? I think perhaps the I think the best way is to follow me on Twitter. That's at Rob Higgin. Yeah, we'll drop a link in the show notes for people to do that. Because sometimes I do when I do when I do stuff that's related to work or relatable to work, then I post on the Beck blog. And when I do stuff that's purely my own invention, I do it on my own dev2 account. In either case, it ends up on Twitter. So that's probably the best way to. Perfect. All right. Thanks again, Robin. Jeroen, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dillon.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 2, "seek": 0, "start": 2.0, "end": 7.04, "text": " And once again, we're back with Robin Hanson.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 3, "seek": 0, "start": 7.04, "end": 9.08, "text": " Thanks so much for coming back on, Robin.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 4, "seek": 0, "start": 9.08, "end": 10.08, "text": " Thanks for having me on.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 5, "seek": 0, "start": 10.08, "end": 11.08, "text": " What's it been, a year?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 6, "seek": 0, "start": 11.08, "end": 13.8, "text": " Yeah, I haven't talked to you all year long.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 7, "seek": 0, "start": 13.8, "end": 16.76, "text": " It's really exciting to sit down with you.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 8, "seek": 0, "start": 16.76, "end": 21.580000000000002, "text": " And Jeroen, I have a feeling you're going to be itching to ask a bunch of performance", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 9, "seek": 0, "start": 21.580000000000002, "end": 27.34, "text": " related questions because today we're talking about performance with Robin, the Elm Performance", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 1564, 797, 11, 321, 434, 646, 365, 16533, 17926, 266, 13, 50716, 50716, 2561, 370, 709, 337, 1348, 646, 322, 11, 16533, 13, 50818, 50818, 2561, 337, 1419, 385, 322, 13, 50868, 50868, 708, 311, 309, 668, 11, 257, 1064, 30, 50918, 50918, 865, 11, 286, 2378, 380, 2825, 281, 291, 439, 1064, 938, 13, 51054, 51054, 467, 311, 534, 4670, 281, 1394, 760, 365, 291, 13, 51202, 51202, 400, 508, 2032, 268, 11, 286, 362, 257, 2633, 291, 434, 516, 281, 312, 309, 17354, 281, 1029, 257, 3840, 295, 3389, 51443, 51443, 4077, 1651, 570, 965, 321, 434, 1417, 466, 3389, 365, 16533, 11, 264, 2699, 76, 25047, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.20081014931201935, "compression_ratio": 1.6730769230769231, "no_caption_prob": 0.2219415158033371}, {"id": 10, "seek": 2734, "start": 27.34, "end": 34.68, "text": " Guy and Jeroen, the guy who's trying to dethrone Robin as the one who's optimized performance", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 11, "seek": 2734, "start": 34.68, "end": 35.68, "text": " most in Elm.", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 12, "seek": 2734, "start": 35.68, "end": 37.88, "text": " Yeah, I'm looking forward to it.", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 13, "seek": 2734, "start": 37.88, "end": 44.0, "text": " I let you win one game and now you're all confident.", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 14, "seek": 2734, "start": 44.0, "end": 47.36, "text": " You will never win again.", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 15, "seek": 2734, "start": 47.36, "end": 48.36, "text": " Never.", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 16, "seek": 2734, "start": 48.36, "end": 53.56, "text": " Yeah, so yeah, this is really exciting.", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 17, "seek": 2734, "start": 53.56, "end": 57.120000000000005, "text": " I think it's kind of an exciting time for performance stuff in Elm.", "tokens": [50364, 14690, 293, 508, 2032, 268, 11, 264, 2146, 567, 311, 1382, 281, 1141, 1703, 546, 16533, 382, 264, 472, 567, 311, 26941, 3389, 50731, 50731, 881, 294, 2699, 76, 13, 50781, 50781, 865, 11, 286, 478, 1237, 2128, 281, 309, 13, 50891, 50891, 286, 718, 291, 1942, 472, 1216, 293, 586, 291, 434, 439, 6679, 13, 51197, 51197, 509, 486, 1128, 1942, 797, 13, 51365, 51365, 7344, 13, 51415, 51415, 865, 11, 370, 1338, 11, 341, 307, 534, 4670, 13, 51675, 51675, 286, 519, 309, 311, 733, 295, 364, 4670, 565, 337, 3389, 1507, 294, 2699, 76, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.23532650517482384, "compression_ratio": 1.570754716981132, "no_caption_prob": 0.0001909383718157187}, {"id": 18, "seek": 5712, "start": 57.12, "end": 63.559999999999995, "text": " I think maybe these things have been happening in back channels right now, but I think we", "tokens": [50364, 286, 519, 1310, 613, 721, 362, 668, 2737, 294, 646, 9235, 558, 586, 11, 457, 286, 519, 321, 50686, 50686, 1062, 312, 2577, 512, 3389, 13797, 294, 2699, 76, 35013, 1125, 16872, 568, 11, 597, 321, 600, 2825, 50909, 50909, 466, 294, 3894, 9313, 13, 50980, 50980, 467, 311, 445, 257, 1333, 295, 2183, 15321, 300, 1709, 294, 293, 46664, 264, 2699, 76, 36548, 5598, 281, 360, 51288, 51288, 512, 3389, 5028, 14455, 13, 51408, 51408, 407, 286, 519, 321, 600, 658, 512, 4670, 1507, 1348, 13, 51502, 51502, 407, 286, 478, 6369, 11, 949, 321, 483, 666, 512, 295, 613, 4365, 466, 613, 3389, 5028, 14455, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10637898488087696, "compression_ratio": 1.728937728937729, "no_caption_prob": 1.3419609786069486e-05}, {"id": 19, "seek": 5712, "start": 63.559999999999995, "end": 68.02, "text": " might be seeing some performance improvements in Elm Optimize Level 2, which we've talked", "tokens": [50364, 286, 519, 1310, 613, 721, 362, 668, 2737, 294, 646, 9235, 558, 586, 11, 457, 286, 519, 321, 50686, 50686, 1062, 312, 2577, 512, 3389, 13797, 294, 2699, 76, 35013, 1125, 16872, 568, 11, 597, 321, 600, 2825, 50909, 50909, 466, 294, 3894, 9313, 13, 50980, 50980, 467, 311, 445, 257, 1333, 295, 2183, 15321, 300, 1709, 294, 293, 46664, 264, 2699, 76, 36548, 5598, 281, 360, 51288, 51288, 512, 3389, 5028, 14455, 13, 51408, 51408, 407, 286, 519, 321, 600, 658, 512, 4670, 1507, 1348, 13, 51502, 51502, 407, 286, 478, 6369, 11, 949, 321, 483, 666, 512, 295, 613, 4365, 466, 613, 3389, 5028, 14455, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10637898488087696, "compression_ratio": 1.728937728937729, "no_caption_prob": 1.3419609786069486e-05}, {"id": 20, "seek": 5712, "start": 68.02, "end": 69.44, "text": " about in previous episodes.", "tokens": [50364, 286, 519, 1310, 613, 721, 362, 668, 2737, 294, 646, 9235, 558, 586, 11, 457, 286, 519, 321, 50686, 50686, 1062, 312, 2577, 512, 3389, 13797, 294, 2699, 76, 35013, 1125, 16872, 568, 11, 597, 321, 600, 2825, 50909, 50909, 466, 294, 3894, 9313, 13, 50980, 50980, 467, 311, 445, 257, 1333, 295, 2183, 15321, 300, 1709, 294, 293, 46664, 264, 2699, 76, 36548, 5598, 281, 360, 51288, 51288, 512, 3389, 5028, 14455, 13, 51408, 51408, 407, 286, 519, 321, 600, 658, 512, 4670, 1507, 1348, 13, 51502, 51502, 407, 286, 478, 6369, 11, 949, 321, 483, 666, 512, 295, 613, 4365, 466, 613, 3389, 5028, 14455, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10637898488087696, "compression_ratio": 1.728937728937729, "no_caption_prob": 1.3419609786069486e-05}, {"id": 21, "seek": 5712, "start": 69.44, "end": 75.6, "text": " It's just a sort of post processor that goes in and tweaks the Elm compiled output to do", "tokens": [50364, 286, 519, 1310, 613, 721, 362, 668, 2737, 294, 646, 9235, 558, 586, 11, 457, 286, 519, 321, 50686, 50686, 1062, 312, 2577, 512, 3389, 13797, 294, 2699, 76, 35013, 1125, 16872, 568, 11, 597, 321, 600, 2825, 50909, 50909, 466, 294, 3894, 9313, 13, 50980, 50980, 467, 311, 445, 257, 1333, 295, 2183, 15321, 300, 1709, 294, 293, 46664, 264, 2699, 76, 36548, 5598, 281, 360, 51288, 51288, 512, 3389, 5028, 14455, 13, 51408, 51408, 407, 286, 519, 321, 600, 658, 512, 4670, 1507, 1348, 13, 51502, 51502, 407, 286, 478, 6369, 11, 949, 321, 483, 666, 512, 295, 613, 4365, 466, 613, 3389, 5028, 14455, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10637898488087696, "compression_ratio": 1.728937728937729, "no_caption_prob": 1.3419609786069486e-05}, {"id": 22, "seek": 5712, "start": 75.6, "end": 78.0, "text": " some performance optimizations.", "tokens": [50364, 286, 519, 1310, 613, 721, 362, 668, 2737, 294, 646, 9235, 558, 586, 11, 457, 286, 519, 321, 50686, 50686, 1062, 312, 2577, 512, 3389, 13797, 294, 2699, 76, 35013, 1125, 16872, 568, 11, 597, 321, 600, 2825, 50909, 50909, 466, 294, 3894, 9313, 13, 50980, 50980, 467, 311, 445, 257, 1333, 295, 2183, 15321, 300, 1709, 294, 293, 46664, 264, 2699, 76, 36548, 5598, 281, 360, 51288, 51288, 512, 3389, 5028, 14455, 13, 51408, 51408, 407, 286, 519, 321, 600, 658, 512, 4670, 1507, 1348, 13, 51502, 51502, 407, 286, 478, 6369, 11, 949, 321, 483, 666, 512, 295, 613, 4365, 466, 613, 3389, 5028, 14455, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10637898488087696, "compression_ratio": 1.728937728937729, "no_caption_prob": 1.3419609786069486e-05}, {"id": 23, "seek": 5712, "start": 78.0, "end": 79.88, "text": " So I think we've got some exciting stuff coming.", "tokens": [50364, 286, 519, 1310, 613, 721, 362, 668, 2737, 294, 646, 9235, 558, 586, 11, 457, 286, 519, 321, 50686, 50686, 1062, 312, 2577, 512, 3389, 13797, 294, 2699, 76, 35013, 1125, 16872, 568, 11, 597, 321, 600, 2825, 50909, 50909, 466, 294, 3894, 9313, 13, 50980, 50980, 467, 311, 445, 257, 1333, 295, 2183, 15321, 300, 1709, 294, 293, 46664, 264, 2699, 76, 36548, 5598, 281, 360, 51288, 51288, 512, 3389, 5028, 14455, 13, 51408, 51408, 407, 286, 519, 321, 600, 658, 512, 4670, 1507, 1348, 13, 51502, 51502, 407, 286, 478, 6369, 11, 949, 321, 483, 666, 512, 295, 613, 4365, 466, 613, 3389, 5028, 14455, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10637898488087696, "compression_ratio": 1.728937728937729, "no_caption_prob": 1.3419609786069486e-05}, {"id": 24, "seek": 5712, "start": 79.88, "end": 85.16, "text": " So I'm curious, before we get into some of these details about these performance optimizations", "tokens": [50364, 286, 519, 1310, 613, 721, 362, 668, 2737, 294, 646, 9235, 558, 586, 11, 457, 286, 519, 321, 50686, 50686, 1062, 312, 2577, 512, 3389, 13797, 294, 2699, 76, 35013, 1125, 16872, 568, 11, 597, 321, 600, 2825, 50909, 50909, 466, 294, 3894, 9313, 13, 50980, 50980, 467, 311, 445, 257, 1333, 295, 2183, 15321, 300, 1709, 294, 293, 46664, 264, 2699, 76, 36548, 5598, 281, 360, 51288, 51288, 512, 3389, 5028, 14455, 13, 51408, 51408, 407, 286, 519, 321, 600, 658, 512, 4670, 1507, 1348, 13, 51502, 51502, 407, 286, 478, 6369, 11, 949, 321, 483, 666, 512, 295, 613, 4365, 466, 613, 3389, 5028, 14455, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10637898488087696, "compression_ratio": 1.728937728937729, "no_caption_prob": 1.3419609786069486e-05}, {"id": 25, "seek": 8516, "start": 85.16, "end": 90.86, "text": " and everything, you've got a long history of doing performance work in Elm, working", "tokens": [50364, 293, 1203, 11, 291, 600, 658, 257, 938, 2503, 295, 884, 3389, 589, 294, 2699, 76, 11, 1364, 50649, 50649, 322, 613, 1412, 9227, 293, 18927, 278, 721, 13, 50864, 50864, 1545, 360, 291, 360, 309, 30, 50914, 50914, 1743, 11, 983, 360, 291, 1127, 466, 2699, 76, 3389, 30, 51110, 51110, 1033, 11, 370, 456, 366, 732, 6338, 281, 341, 1168, 13, 51346, 51346, 440, 700, 472, 307, 411, 437, 561, 528, 281, 1568, 13, 51490, 51490, 400, 264, 1150, 1867, 281, 341, 1168, 307, 264, 3494, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13056763269568003, "compression_ratio": 1.5944700460829493, "no_caption_prob": 3.7632096791639924e-05}, {"id": 26, "seek": 8516, "start": 90.86, "end": 95.16, "text": " on these data structures and benchmarking things.", "tokens": [50364, 293, 1203, 11, 291, 600, 658, 257, 938, 2503, 295, 884, 3389, 589, 294, 2699, 76, 11, 1364, 50649, 50649, 322, 613, 1412, 9227, 293, 18927, 278, 721, 13, 50864, 50864, 1545, 360, 291, 360, 309, 30, 50914, 50914, 1743, 11, 983, 360, 291, 1127, 466, 2699, 76, 3389, 30, 51110, 51110, 1033, 11, 370, 456, 366, 732, 6338, 281, 341, 1168, 13, 51346, 51346, 440, 700, 472, 307, 411, 437, 561, 528, 281, 1568, 13, 51490, 51490, 400, 264, 1150, 1867, 281, 341, 1168, 307, 264, 3494, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13056763269568003, "compression_ratio": 1.5944700460829493, "no_caption_prob": 3.7632096791639924e-05}, {"id": 27, "seek": 8516, "start": 95.16, "end": 96.16, "text": " Why do you do it?", "tokens": [50364, 293, 1203, 11, 291, 600, 658, 257, 938, 2503, 295, 884, 3389, 589, 294, 2699, 76, 11, 1364, 50649, 50649, 322, 613, 1412, 9227, 293, 18927, 278, 721, 13, 50864, 50864, 1545, 360, 291, 360, 309, 30, 50914, 50914, 1743, 11, 983, 360, 291, 1127, 466, 2699, 76, 3389, 30, 51110, 51110, 1033, 11, 370, 456, 366, 732, 6338, 281, 341, 1168, 13, 51346, 51346, 440, 700, 472, 307, 411, 437, 561, 528, 281, 1568, 13, 51490, 51490, 400, 264, 1150, 1867, 281, 341, 1168, 307, 264, 3494, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13056763269568003, "compression_ratio": 1.5944700460829493, "no_caption_prob": 3.7632096791639924e-05}, {"id": 28, "seek": 8516, "start": 96.16, "end": 100.08, "text": " Like, why do you care about Elm performance?", "tokens": [50364, 293, 1203, 11, 291, 600, 658, 257, 938, 2503, 295, 884, 3389, 589, 294, 2699, 76, 11, 1364, 50649, 50649, 322, 613, 1412, 9227, 293, 18927, 278, 721, 13, 50864, 50864, 1545, 360, 291, 360, 309, 30, 50914, 50914, 1743, 11, 983, 360, 291, 1127, 466, 2699, 76, 3389, 30, 51110, 51110, 1033, 11, 370, 456, 366, 732, 6338, 281, 341, 1168, 13, 51346, 51346, 440, 700, 472, 307, 411, 437, 561, 528, 281, 1568, 13, 51490, 51490, 400, 264, 1150, 1867, 281, 341, 1168, 307, 264, 3494, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13056763269568003, "compression_ratio": 1.5944700460829493, "no_caption_prob": 3.7632096791639924e-05}, {"id": 29, "seek": 8516, "start": 100.08, "end": 104.8, "text": " Okay, so there are two answers to this question.", "tokens": [50364, 293, 1203, 11, 291, 600, 658, 257, 938, 2503, 295, 884, 3389, 589, 294, 2699, 76, 11, 1364, 50649, 50649, 322, 613, 1412, 9227, 293, 18927, 278, 721, 13, 50864, 50864, 1545, 360, 291, 360, 309, 30, 50914, 50914, 1743, 11, 983, 360, 291, 1127, 466, 2699, 76, 3389, 30, 51110, 51110, 1033, 11, 370, 456, 366, 732, 6338, 281, 341, 1168, 13, 51346, 51346, 440, 700, 472, 307, 411, 437, 561, 528, 281, 1568, 13, 51490, 51490, 400, 264, 1150, 1867, 281, 341, 1168, 307, 264, 3494, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13056763269568003, "compression_ratio": 1.5944700460829493, "no_caption_prob": 3.7632096791639924e-05}, {"id": 30, "seek": 8516, "start": 104.8, "end": 107.67999999999999, "text": " The first one is like what people want to hear.", "tokens": [50364, 293, 1203, 11, 291, 600, 658, 257, 938, 2503, 295, 884, 3389, 589, 294, 2699, 76, 11, 1364, 50649, 50649, 322, 613, 1412, 9227, 293, 18927, 278, 721, 13, 50864, 50864, 1545, 360, 291, 360, 309, 30, 50914, 50914, 1743, 11, 983, 360, 291, 1127, 466, 2699, 76, 3389, 30, 51110, 51110, 1033, 11, 370, 456, 366, 732, 6338, 281, 341, 1168, 13, 51346, 51346, 440, 700, 472, 307, 411, 437, 561, 528, 281, 1568, 13, 51490, 51490, 400, 264, 1150, 1867, 281, 341, 1168, 307, 264, 3494, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13056763269568003, "compression_ratio": 1.5944700460829493, "no_caption_prob": 3.7632096791639924e-05}, {"id": 31, "seek": 8516, "start": 107.67999999999999, "end": 110.88, "text": " And the second answer to this question is the truth.", "tokens": [50364, 293, 1203, 11, 291, 600, 658, 257, 938, 2503, 295, 884, 3389, 589, 294, 2699, 76, 11, 1364, 50649, 50649, 322, 613, 1412, 9227, 293, 18927, 278, 721, 13, 50864, 50864, 1545, 360, 291, 360, 309, 30, 50914, 50914, 1743, 11, 983, 360, 291, 1127, 466, 2699, 76, 3389, 30, 51110, 51110, 1033, 11, 370, 456, 366, 732, 6338, 281, 341, 1168, 13, 51346, 51346, 440, 700, 472, 307, 411, 437, 561, 528, 281, 1568, 13, 51490, 51490, 400, 264, 1150, 1867, 281, 341, 1168, 307, 264, 3494, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.13056763269568003, "compression_ratio": 1.5944700460829493, "no_caption_prob": 3.7632096791639924e-05}, {"id": 32, "seek": 11088, "start": 110.88, "end": 116.96, "text": " I think what people want to hear is that performance is really, really important.", "tokens": [50364, 286, 519, 437, 561, 528, 281, 1568, 307, 300, 3389, 307, 534, 11, 534, 1021, 13, 50668, 50668, 286, 519, 309, 311, 286, 519, 264, 5855, 551, 300, 393, 1051, 281, 2699, 76, 307, 300, 1580, 12696, 760, 11, 51018, 51018, 13657, 257, 4265, 724, 11, 293, 550, 309, 311, 8953, 1480, 13, 51178, 51178, 400, 337, 257, 2856, 365, 257, 7226, 1359, 3480, 11, 411, 2699, 76, 11, 689, 561, 1062, 406, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.0983501285701603, "compression_ratio": 1.5677083333333333, "no_caption_prob": 1.2028553101117723e-05}, {"id": 33, "seek": 11088, "start": 116.96, "end": 123.96, "text": " I think it's I think the worst thing that can happen to Elm is that someone sits down,", "tokens": [50364, 286, 519, 437, 561, 528, 281, 1568, 307, 300, 3389, 307, 534, 11, 534, 1021, 13, 50668, 50668, 286, 519, 309, 311, 286, 519, 264, 5855, 551, 300, 393, 1051, 281, 2699, 76, 307, 300, 1580, 12696, 760, 11, 51018, 51018, 13657, 257, 4265, 724, 11, 293, 550, 309, 311, 8953, 1480, 13, 51178, 51178, 400, 337, 257, 2856, 365, 257, 7226, 1359, 3480, 11, 411, 2699, 76, 11, 689, 561, 1062, 406, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.0983501285701603, "compression_ratio": 1.5677083333333333, "no_caption_prob": 1.2028553101117723e-05}, {"id": 34, "seek": 11088, "start": 123.96, "end": 127.16, "text": " writes a production app, and then it's laggy.", "tokens": [50364, 286, 519, 437, 561, 528, 281, 1568, 307, 300, 3389, 307, 534, 11, 534, 1021, 13, 50668, 50668, 286, 519, 309, 311, 286, 519, 264, 5855, 551, 300, 393, 1051, 281, 2699, 76, 307, 300, 1580, 12696, 760, 11, 51018, 51018, 13657, 257, 4265, 724, 11, 293, 550, 309, 311, 8953, 1480, 13, 51178, 51178, 400, 337, 257, 2856, 365, 257, 7226, 1359, 3480, 11, 411, 2699, 76, 11, 689, 561, 1062, 406, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.0983501285701603, "compression_ratio": 1.5677083333333333, "no_caption_prob": 1.2028553101117723e-05}, {"id": 35, "seek": 11088, "start": 127.16, "end": 134.12, "text": " And for a language with a relatively small following, like Elm, where people might not", "tokens": [50364, 286, 519, 437, 561, 528, 281, 1568, 307, 300, 3389, 307, 534, 11, 534, 1021, 13, 50668, 50668, 286, 519, 309, 311, 286, 519, 264, 5855, 551, 300, 393, 1051, 281, 2699, 76, 307, 300, 1580, 12696, 760, 11, 51018, 51018, 13657, 257, 4265, 724, 11, 293, 550, 309, 311, 8953, 1480, 13, 51178, 51178, 400, 337, 257, 2856, 365, 257, 7226, 1359, 3480, 11, 411, 2699, 76, 11, 689, 561, 1062, 406, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.0983501285701603, "compression_ratio": 1.5677083333333333, "no_caption_prob": 1.2028553101117723e-05}, {"id": 36, "seek": 13412, "start": 134.12, "end": 141.26, "text": " know how to fix a laggy application, that would be bad for the reputation of the language", "tokens": [50364, 458, 577, 281, 3191, 257, 8953, 1480, 3861, 11, 300, 576, 312, 1578, 337, 264, 13061, 295, 264, 2856, 50721, 50721, 293, 3052, 19215, 295, 264, 2856, 13, 50824, 50824, 407, 3389, 820, 406, 312, 428, 6194, 3136, 562, 884, 264, 1507, 300, 2699, 76, 307, 665, 51198, 51198, 412, 13, 51248, 51248, 1436, 881, 295, 264, 565, 11, 40425, 337, 3389, 307, 2935, 406, 516, 281, 1871, 337, 264, 1333, 51484, 51484, 295, 5821, 300, 291, 5850, 360, 365, 2699, 76, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.09020553238090427, "compression_ratio": 1.704225352112676, "no_caption_prob": 2.078297984553501e-05}, {"id": 37, "seek": 13412, "start": 141.26, "end": 143.32, "text": " and further adoption of the language.", "tokens": [50364, 458, 577, 281, 3191, 257, 8953, 1480, 3861, 11, 300, 576, 312, 1578, 337, 264, 13061, 295, 264, 2856, 50721, 50721, 293, 3052, 19215, 295, 264, 2856, 13, 50824, 50824, 407, 3389, 820, 406, 312, 428, 6194, 3136, 562, 884, 264, 1507, 300, 2699, 76, 307, 665, 51198, 51198, 412, 13, 51248, 51248, 1436, 881, 295, 264, 565, 11, 40425, 337, 3389, 307, 2935, 406, 516, 281, 1871, 337, 264, 1333, 51484, 51484, 295, 5821, 300, 291, 5850, 360, 365, 2699, 76, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.09020553238090427, "compression_ratio": 1.704225352112676, "no_caption_prob": 2.078297984553501e-05}, {"id": 38, "seek": 13412, "start": 143.32, "end": 150.8, "text": " So performance should not be your primary concern when doing the stuff that Elm is good", "tokens": [50364, 458, 577, 281, 3191, 257, 8953, 1480, 3861, 11, 300, 576, 312, 1578, 337, 264, 13061, 295, 264, 2856, 50721, 50721, 293, 3052, 19215, 295, 264, 2856, 13, 50824, 50824, 407, 3389, 820, 406, 312, 428, 6194, 3136, 562, 884, 264, 1507, 300, 2699, 76, 307, 665, 51198, 51198, 412, 13, 51248, 51248, 1436, 881, 295, 264, 565, 11, 40425, 337, 3389, 307, 2935, 406, 516, 281, 1871, 337, 264, 1333, 51484, 51484, 295, 5821, 300, 291, 5850, 360, 365, 2699, 76, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.09020553238090427, "compression_ratio": 1.704225352112676, "no_caption_prob": 2.078297984553501e-05}, {"id": 39, "seek": 13412, "start": 150.8, "end": 151.8, "text": " at.", "tokens": [50364, 458, 577, 281, 3191, 257, 8953, 1480, 3861, 11, 300, 576, 312, 1578, 337, 264, 13061, 295, 264, 2856, 50721, 50721, 293, 3052, 19215, 295, 264, 2856, 13, 50824, 50824, 407, 3389, 820, 406, 312, 428, 6194, 3136, 562, 884, 264, 1507, 300, 2699, 76, 307, 665, 51198, 51198, 412, 13, 51248, 51248, 1436, 881, 295, 264, 565, 11, 40425, 337, 3389, 307, 2935, 406, 516, 281, 1871, 337, 264, 1333, 51484, 51484, 295, 5821, 300, 291, 5850, 360, 365, 2699, 76, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.09020553238090427, "compression_ratio": 1.704225352112676, "no_caption_prob": 2.078297984553501e-05}, {"id": 40, "seek": 13412, "start": 151.8, "end": 156.52, "text": " Because most of the time, optimizing for performance is simply not going to matter for the sort", "tokens": [50364, 458, 577, 281, 3191, 257, 8953, 1480, 3861, 11, 300, 576, 312, 1578, 337, 264, 13061, 295, 264, 2856, 50721, 50721, 293, 3052, 19215, 295, 264, 2856, 13, 50824, 50824, 407, 3389, 820, 406, 312, 428, 6194, 3136, 562, 884, 264, 1507, 300, 2699, 76, 307, 665, 51198, 51198, 412, 13, 51248, 51248, 1436, 881, 295, 264, 565, 11, 40425, 337, 3389, 307, 2935, 406, 516, 281, 1871, 337, 264, 1333, 51484, 51484, 295, 5821, 300, 291, 5850, 360, 365, 2699, 76, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.09020553238090427, "compression_ratio": 1.704225352112676, "no_caption_prob": 2.078297984553501e-05}, {"id": 41, "seek": 13412, "start": 156.52, "end": 160.04000000000002, "text": " of applications that you typically do with Elm.", "tokens": [50364, 458, 577, 281, 3191, 257, 8953, 1480, 3861, 11, 300, 576, 312, 1578, 337, 264, 13061, 295, 264, 2856, 50721, 50721, 293, 3052, 19215, 295, 264, 2856, 13, 50824, 50824, 407, 3389, 820, 406, 312, 428, 6194, 3136, 562, 884, 264, 1507, 300, 2699, 76, 307, 665, 51198, 51198, 412, 13, 51248, 51248, 1436, 881, 295, 264, 565, 11, 40425, 337, 3389, 307, 2935, 406, 516, 281, 1871, 337, 264, 1333, 51484, 51484, 295, 5821, 300, 291, 5850, 360, 365, 2699, 76, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.09020553238090427, "compression_ratio": 1.704225352112676, "no_caption_prob": 2.078297984553501e-05}, {"id": 42, "seek": 16004, "start": 160.04, "end": 165.56, "text": " But if you do get a performance problem, I think that would be very bad for Elm.", "tokens": [50364, 583, 498, 291, 360, 483, 257, 3389, 1154, 11, 286, 519, 300, 576, 312, 588, 1578, 337, 2699, 76, 13, 50640, 50640, 400, 370, 286, 600, 668, 1364, 322, 3389, 721, 2935, 570, 286, 500, 380, 528, 561, 281, 362, 50918, 50918, 257, 3389, 1154, 13, 50992, 50992, 3802, 11, 586, 11, 307, 300, 264, 3494, 30, 51120, 51120, 1610, 307, 300, 437, 561, 528, 281, 1568, 30, 51214, 51214, 440, 3494, 13, 51452, 51452, 663, 307, 257, 2074, 1867, 13, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.151065310309915, "compression_ratio": 1.572192513368984, "no_caption_prob": 3.1198549550026655e-05}, {"id": 43, "seek": 16004, "start": 165.56, "end": 171.12, "text": " And so I've been working on performance things simply because I don't want people to have", "tokens": [50364, 583, 498, 291, 360, 483, 257, 3389, 1154, 11, 286, 519, 300, 576, 312, 588, 1578, 337, 2699, 76, 13, 50640, 50640, 400, 370, 286, 600, 668, 1364, 322, 3389, 721, 2935, 570, 286, 500, 380, 528, 561, 281, 362, 50918, 50918, 257, 3389, 1154, 13, 50992, 50992, 3802, 11, 586, 11, 307, 300, 264, 3494, 30, 51120, 51120, 1610, 307, 300, 437, 561, 528, 281, 1568, 30, 51214, 51214, 440, 3494, 13, 51452, 51452, 663, 307, 257, 2074, 1867, 13, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.151065310309915, "compression_ratio": 1.572192513368984, "no_caption_prob": 3.1198549550026655e-05}, {"id": 44, "seek": 16004, "start": 171.12, "end": 172.6, "text": " a performance problem.", "tokens": [50364, 583, 498, 291, 360, 483, 257, 3389, 1154, 11, 286, 519, 300, 576, 312, 588, 1578, 337, 2699, 76, 13, 50640, 50640, 400, 370, 286, 600, 668, 1364, 322, 3389, 721, 2935, 570, 286, 500, 380, 528, 561, 281, 362, 50918, 50918, 257, 3389, 1154, 13, 50992, 50992, 3802, 11, 586, 11, 307, 300, 264, 3494, 30, 51120, 51120, 1610, 307, 300, 437, 561, 528, 281, 1568, 30, 51214, 51214, 440, 3494, 13, 51452, 51452, 663, 307, 257, 2074, 1867, 13, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.151065310309915, "compression_ratio": 1.572192513368984, "no_caption_prob": 3.1198549550026655e-05}, {"id": 45, "seek": 16004, "start": 172.6, "end": 175.16, "text": " Wait, now, is that the truth?", "tokens": [50364, 583, 498, 291, 360, 483, 257, 3389, 1154, 11, 286, 519, 300, 576, 312, 588, 1578, 337, 2699, 76, 13, 50640, 50640, 400, 370, 286, 600, 668, 1364, 322, 3389, 721, 2935, 570, 286, 500, 380, 528, 561, 281, 362, 50918, 50918, 257, 3389, 1154, 13, 50992, 50992, 3802, 11, 586, 11, 307, 300, 264, 3494, 30, 51120, 51120, 1610, 307, 300, 437, 561, 528, 281, 1568, 30, 51214, 51214, 440, 3494, 13, 51452, 51452, 663, 307, 257, 2074, 1867, 13, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.151065310309915, "compression_ratio": 1.572192513368984, "no_caption_prob": 3.1198549550026655e-05}, {"id": 46, "seek": 16004, "start": 175.16, "end": 177.04, "text": " Or is that what people want to hear?", "tokens": [50364, 583, 498, 291, 360, 483, 257, 3389, 1154, 11, 286, 519, 300, 576, 312, 588, 1578, 337, 2699, 76, 13, 50640, 50640, 400, 370, 286, 600, 668, 1364, 322, 3389, 721, 2935, 570, 286, 500, 380, 528, 561, 281, 362, 50918, 50918, 257, 3389, 1154, 13, 50992, 50992, 3802, 11, 586, 11, 307, 300, 264, 3494, 30, 51120, 51120, 1610, 307, 300, 437, 561, 528, 281, 1568, 30, 51214, 51214, 440, 3494, 13, 51452, 51452, 663, 307, 257, 2074, 1867, 13, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.151065310309915, "compression_ratio": 1.572192513368984, "no_caption_prob": 3.1198549550026655e-05}, {"id": 47, "seek": 16004, "start": 177.04, "end": 181.79999999999998, "text": " The truth.", "tokens": [50364, 583, 498, 291, 360, 483, 257, 3389, 1154, 11, 286, 519, 300, 576, 312, 588, 1578, 337, 2699, 76, 13, 50640, 50640, 400, 370, 286, 600, 668, 1364, 322, 3389, 721, 2935, 570, 286, 500, 380, 528, 561, 281, 362, 50918, 50918, 257, 3389, 1154, 13, 50992, 50992, 3802, 11, 586, 11, 307, 300, 264, 3494, 30, 51120, 51120, 1610, 307, 300, 437, 561, 528, 281, 1568, 30, 51214, 51214, 440, 3494, 13, 51452, 51452, 663, 307, 257, 2074, 1867, 13, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.151065310309915, "compression_ratio": 1.572192513368984, "no_caption_prob": 3.1198549550026655e-05}, {"id": 48, "seek": 16004, "start": 181.79999999999998, "end": 183.79999999999998, "text": " That is a true answer.", "tokens": [50364, 583, 498, 291, 360, 483, 257, 3389, 1154, 11, 286, 519, 300, 576, 312, 588, 1578, 337, 2699, 76, 13, 50640, 50640, 400, 370, 286, 600, 668, 1364, 322, 3389, 721, 2935, 570, 286, 500, 380, 528, 561, 281, 362, 50918, 50918, 257, 3389, 1154, 13, 50992, 50992, 3802, 11, 586, 11, 307, 300, 264, 3494, 30, 51120, 51120, 1610, 307, 300, 437, 561, 528, 281, 1568, 30, 51214, 51214, 440, 3494, 13, 51452, 51452, 663, 307, 257, 2074, 1867, 13, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.151065310309915, "compression_ratio": 1.572192513368984, "no_caption_prob": 3.1198549550026655e-05}, {"id": 49, "seek": 18380, "start": 183.8, "end": 190.20000000000002, "text": " But really what got me into this is fixing performance things or improving performance", "tokens": [50364, 583, 534, 437, 658, 385, 666, 341, 307, 19442, 3389, 721, 420, 11470, 3389, 50684, 50684, 2740, 307, 257, 7226, 2199, 293, 1019, 5191, 13, 50898, 50898, 1436, 498, 291, 360, 309, 8944, 11, 572, 472, 307, 516, 281, 3449, 1340, 13, 51151, 51151, 400, 370, 291, 500, 380, 362, 281, 352, 807, 257, 688, 295, 9362, 1715, 11088, 13, 51410, 51410, 821, 311, 257, 688, 1570, 721, 281, 1949, 13, 51500, 51500, 407, 309, 311, 257, 7226, 1858, 551, 281, 483, 666, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07589526068080556, "compression_ratio": 1.6153846153846154, "no_caption_prob": 3.0714763852301985e-05}, {"id": 50, "seek": 18380, "start": 190.20000000000002, "end": 194.48000000000002, "text": " problems is a relatively simple and fun activity.", "tokens": [50364, 583, 534, 437, 658, 385, 666, 341, 307, 19442, 3389, 721, 420, 11470, 3389, 50684, 50684, 2740, 307, 257, 7226, 2199, 293, 1019, 5191, 13, 50898, 50898, 1436, 498, 291, 360, 309, 8944, 11, 572, 472, 307, 516, 281, 3449, 1340, 13, 51151, 51151, 400, 370, 291, 500, 380, 362, 281, 352, 807, 257, 688, 295, 9362, 1715, 11088, 13, 51410, 51410, 821, 311, 257, 688, 1570, 721, 281, 1949, 13, 51500, 51500, 407, 309, 311, 257, 7226, 1858, 551, 281, 483, 666, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07589526068080556, "compression_ratio": 1.6153846153846154, "no_caption_prob": 3.0714763852301985e-05}, {"id": 51, "seek": 18380, "start": 194.48000000000002, "end": 199.54000000000002, "text": " Because if you do it correctly, no one is going to notice anything.", "tokens": [50364, 583, 534, 437, 658, 385, 666, 341, 307, 19442, 3389, 721, 420, 11470, 3389, 50684, 50684, 2740, 307, 257, 7226, 2199, 293, 1019, 5191, 13, 50898, 50898, 1436, 498, 291, 360, 309, 8944, 11, 572, 472, 307, 516, 281, 3449, 1340, 13, 51151, 51151, 400, 370, 291, 500, 380, 362, 281, 352, 807, 257, 688, 295, 9362, 1715, 11088, 13, 51410, 51410, 821, 311, 257, 688, 1570, 721, 281, 1949, 13, 51500, 51500, 407, 309, 311, 257, 7226, 1858, 551, 281, 483, 666, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07589526068080556, "compression_ratio": 1.6153846153846154, "no_caption_prob": 3.0714763852301985e-05}, {"id": 52, "seek": 18380, "start": 199.54000000000002, "end": 204.72000000000003, "text": " And so you don't have to go through a lot of API design discussions.", "tokens": [50364, 583, 534, 437, 658, 385, 666, 341, 307, 19442, 3389, 721, 420, 11470, 3389, 50684, 50684, 2740, 307, 257, 7226, 2199, 293, 1019, 5191, 13, 50898, 50898, 1436, 498, 291, 360, 309, 8944, 11, 572, 472, 307, 516, 281, 3449, 1340, 13, 51151, 51151, 400, 370, 291, 500, 380, 362, 281, 352, 807, 257, 688, 295, 9362, 1715, 11088, 13, 51410, 51410, 821, 311, 257, 688, 1570, 721, 281, 1949, 13, 51500, 51500, 407, 309, 311, 257, 7226, 1858, 551, 281, 483, 666, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07589526068080556, "compression_ratio": 1.6153846153846154, "no_caption_prob": 3.0714763852301985e-05}, {"id": 53, "seek": 18380, "start": 204.72000000000003, "end": 206.52, "text": " There's a lot less things to consider.", "tokens": [50364, 583, 534, 437, 658, 385, 666, 341, 307, 19442, 3389, 721, 420, 11470, 3389, 50684, 50684, 2740, 307, 257, 7226, 2199, 293, 1019, 5191, 13, 50898, 50898, 1436, 498, 291, 360, 309, 8944, 11, 572, 472, 307, 516, 281, 3449, 1340, 13, 51151, 51151, 400, 370, 291, 500, 380, 362, 281, 352, 807, 257, 688, 295, 9362, 1715, 11088, 13, 51410, 51410, 821, 311, 257, 688, 1570, 721, 281, 1949, 13, 51500, 51500, 407, 309, 311, 257, 7226, 1858, 551, 281, 483, 666, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07589526068080556, "compression_ratio": 1.6153846153846154, "no_caption_prob": 3.0714763852301985e-05}, {"id": 54, "seek": 18380, "start": 206.52, "end": 209.94, "text": " So it's a relatively easy thing to get into.", "tokens": [50364, 583, 534, 437, 658, 385, 666, 341, 307, 19442, 3389, 721, 420, 11470, 3389, 50684, 50684, 2740, 307, 257, 7226, 2199, 293, 1019, 5191, 13, 50898, 50898, 1436, 498, 291, 360, 309, 8944, 11, 572, 472, 307, 516, 281, 3449, 1340, 13, 51151, 51151, 400, 370, 291, 500, 380, 362, 281, 352, 807, 257, 688, 295, 9362, 1715, 11088, 13, 51410, 51410, 821, 311, 257, 688, 1570, 721, 281, 1949, 13, 51500, 51500, 407, 309, 311, 257, 7226, 1858, 551, 281, 483, 666, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07589526068080556, "compression_ratio": 1.6153846153846154, "no_caption_prob": 3.0714763852301985e-05}, {"id": 55, "seek": 20994, "start": 209.94, "end": 215.82, "text": " And it's also a relatively easy thing to measure the improvements of.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 56, "seek": 20994, "start": 215.82, "end": 218.07999999999998, "text": " And of course, if you can improve something...", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 57, "seek": 20994, "start": 218.07999999999998, "end": 220.56, "text": " And you can probably attest to this, Jeroen.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 58, "seek": 20994, "start": 220.56, "end": 226.36, "text": " If you make something 10 times faster or 50 times faster, it feels kind of good.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 59, "seek": 20994, "start": 226.36, "end": 227.36, "text": " Kind of.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 60, "seek": 20994, "start": 227.36, "end": 228.36, "text": " Slightly.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 61, "seek": 20994, "start": 228.36, "end": 229.8, "text": " Slightly good.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 62, "seek": 20994, "start": 229.8, "end": 230.8, "text": " It's a hell of a drive.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 63, "seek": 20994, "start": 230.8, "end": 234.2, "text": " It's super exciting.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 64, "seek": 20994, "start": 234.2, "end": 236.38, "text": " So it's fun.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 65, "seek": 20994, "start": 236.38, "end": 239.32, "text": " But it's also important.", "tokens": [50364, 400, 309, 311, 611, 257, 7226, 1858, 551, 281, 3481, 264, 13797, 295, 13, 50658, 50658, 400, 295, 1164, 11, 498, 291, 393, 3470, 746, 485, 50771, 50771, 400, 291, 393, 1391, 951, 377, 281, 341, 11, 508, 2032, 268, 13, 50895, 50895, 759, 291, 652, 746, 1266, 1413, 4663, 420, 2625, 1413, 4663, 11, 309, 3417, 733, 295, 665, 13, 51185, 51185, 9242, 295, 13, 51235, 51235, 318, 44872, 13, 51285, 51285, 318, 44872, 665, 13, 51357, 51357, 467, 311, 257, 4921, 295, 257, 3332, 13, 51407, 51407, 467, 311, 1687, 4670, 13, 51577, 51577, 407, 309, 311, 1019, 13, 51686, 51686, 583, 309, 311, 611, 1021, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1728151372048707, "compression_ratio": 1.669767441860465, "no_caption_prob": 2.2472855562227778e-05}, {"id": 66, "seek": 23932, "start": 239.32, "end": 241.88, "text": " I think to avoid that.", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 67, "seek": 23932, "start": 241.88, "end": 244.4, "text": " To avoid people having a bad experience with Elm.", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 68, "seek": 23932, "start": 244.4, "end": 248.0, "text": " Although in most cases, people won't have them.", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 69, "seek": 23932, "start": 248.0, "end": 249.0, "text": " Right.", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 70, "seek": 23932, "start": 249.0, "end": 251.51999999999998, "text": " So Elm is a pretty high level language.", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 71, "seek": 23932, "start": 251.51999999999998, "end": 257.28, "text": " Like you were describing, if people get painted into a corner and there's a performance issue,", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 72, "seek": 23932, "start": 257.28, "end": 262.0, "text": " they might not have much they can do about it with Elm because it's pretty high level.", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 73, "seek": 23932, "start": 262.0, "end": 267.36, "text": " Doesn't give you a lot of control about expressing low level things that would affect performance", "tokens": [50364, 286, 519, 281, 5042, 300, 13, 50492, 50492, 1407, 5042, 561, 1419, 257, 1578, 1752, 365, 2699, 76, 13, 50618, 50618, 5780, 294, 881, 3331, 11, 561, 1582, 380, 362, 552, 13, 50798, 50798, 1779, 13, 50848, 50848, 407, 2699, 76, 307, 257, 1238, 1090, 1496, 2856, 13, 50974, 50974, 1743, 291, 645, 16141, 11, 498, 561, 483, 11797, 666, 257, 4538, 293, 456, 311, 257, 3389, 2734, 11, 51262, 51262, 436, 1062, 406, 362, 709, 436, 393, 360, 466, 309, 365, 2699, 76, 570, 309, 311, 1238, 1090, 1496, 13, 51498, 51498, 12955, 380, 976, 291, 257, 688, 295, 1969, 466, 22171, 2295, 1496, 721, 300, 576, 3345, 3389, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.14485939762048555, "compression_ratio": 1.6679104477611941, "no_caption_prob": 3.426246621529572e-05}, {"id": 74, "seek": 26736, "start": 267.36, "end": 270.8, "text": " in a way that a language like Rust would maybe.", "tokens": [50364, 294, 257, 636, 300, 257, 2856, 411, 34952, 576, 1310, 13, 50536, 50536, 583, 412, 264, 912, 565, 11, 322, 264, 661, 1252, 295, 264, 11464, 11, 570, 309, 311, 341, 1090, 1496, 11, 588, 50758, 50758, 16694, 1166, 293, 6075, 2856, 11, 775, 300, 976, 291, 264, 2650, 281, 360, 544, 365, 3389, 51101, 51101, 570, 309, 311, 544, 38901, 30, 51240, 51240, 6767, 2086, 293, 572, 13, 51290, 51290, 1743, 370, 294, 2699, 76, 291, 362, 485, 51447, 51447], "temperature": 0.0, "avg_logprob": -0.1528576081057629, "compression_ratio": 1.504950495049505, "no_caption_prob": 5.9199126553721726e-05}, {"id": 75, "seek": 26736, "start": 270.8, "end": 275.24, "text": " But at the same time, on the other side of the coin, because it's this high level, very", "tokens": [50364, 294, 257, 636, 300, 257, 2856, 411, 34952, 576, 1310, 13, 50536, 50536, 583, 412, 264, 912, 565, 11, 322, 264, 661, 1252, 295, 264, 11464, 11, 570, 309, 311, 341, 1090, 1496, 11, 588, 50758, 50758, 16694, 1166, 293, 6075, 2856, 11, 775, 300, 976, 291, 264, 2650, 281, 360, 544, 365, 3389, 51101, 51101, 570, 309, 311, 544, 38901, 30, 51240, 51240, 6767, 2086, 293, 572, 13, 51290, 51290, 1743, 370, 294, 2699, 76, 291, 362, 485, 51447, 51447], "temperature": 0.0, "avg_logprob": -0.1528576081057629, "compression_ratio": 1.504950495049505, "no_caption_prob": 5.9199126553721726e-05}, {"id": 76, "seek": 26736, "start": 275.24, "end": 282.1, "text": " declarative and pure language, does that give you the opportunity to do more with performance", "tokens": [50364, 294, 257, 636, 300, 257, 2856, 411, 34952, 576, 1310, 13, 50536, 50536, 583, 412, 264, 912, 565, 11, 322, 264, 661, 1252, 295, 264, 11464, 11, 570, 309, 311, 341, 1090, 1496, 11, 588, 50758, 50758, 16694, 1166, 293, 6075, 2856, 11, 775, 300, 976, 291, 264, 2650, 281, 360, 544, 365, 3389, 51101, 51101, 570, 309, 311, 544, 38901, 30, 51240, 51240, 6767, 2086, 293, 572, 13, 51290, 51290, 1743, 370, 294, 2699, 76, 291, 362, 485, 51447, 51447], "temperature": 0.0, "avg_logprob": -0.1528576081057629, "compression_ratio": 1.504950495049505, "no_caption_prob": 5.9199126553721726e-05}, {"id": 77, "seek": 26736, "start": 282.1, "end": 284.88, "text": " because it's more constrained?", "tokens": [50364, 294, 257, 636, 300, 257, 2856, 411, 34952, 576, 1310, 13, 50536, 50536, 583, 412, 264, 912, 565, 11, 322, 264, 661, 1252, 295, 264, 11464, 11, 570, 309, 311, 341, 1090, 1496, 11, 588, 50758, 50758, 16694, 1166, 293, 6075, 2856, 11, 775, 300, 976, 291, 264, 2650, 281, 360, 544, 365, 3389, 51101, 51101, 570, 309, 311, 544, 38901, 30, 51240, 51240, 6767, 2086, 293, 572, 13, 51290, 51290, 1743, 370, 294, 2699, 76, 291, 362, 485, 51447, 51447], "temperature": 0.0, "avg_logprob": -0.1528576081057629, "compression_ratio": 1.504950495049505, "no_caption_prob": 5.9199126553721726e-05}, {"id": 78, "seek": 26736, "start": 284.88, "end": 285.88, "text": " Both yes and no.", "tokens": [50364, 294, 257, 636, 300, 257, 2856, 411, 34952, 576, 1310, 13, 50536, 50536, 583, 412, 264, 912, 565, 11, 322, 264, 661, 1252, 295, 264, 11464, 11, 570, 309, 311, 341, 1090, 1496, 11, 588, 50758, 50758, 16694, 1166, 293, 6075, 2856, 11, 775, 300, 976, 291, 264, 2650, 281, 360, 544, 365, 3389, 51101, 51101, 570, 309, 311, 544, 38901, 30, 51240, 51240, 6767, 2086, 293, 572, 13, 51290, 51290, 1743, 370, 294, 2699, 76, 291, 362, 485, 51447, 51447], "temperature": 0.0, "avg_logprob": -0.1528576081057629, "compression_ratio": 1.504950495049505, "no_caption_prob": 5.9199126553721726e-05}, {"id": 79, "seek": 26736, "start": 285.88, "end": 289.02000000000004, "text": " Like so in Elm you have...", "tokens": [50364, 294, 257, 636, 300, 257, 2856, 411, 34952, 576, 1310, 13, 50536, 50536, 583, 412, 264, 912, 565, 11, 322, 264, 661, 1252, 295, 264, 11464, 11, 570, 309, 311, 341, 1090, 1496, 11, 588, 50758, 50758, 16694, 1166, 293, 6075, 2856, 11, 775, 300, 976, 291, 264, 2650, 281, 360, 544, 365, 3389, 51101, 51101, 570, 309, 311, 544, 38901, 30, 51240, 51240, 6767, 2086, 293, 572, 13, 51290, 51290, 1743, 370, 294, 2699, 76, 291, 362, 485, 51447, 51447], "temperature": 0.0, "avg_logprob": -0.1528576081057629, "compression_ratio": 1.504950495049505, "no_caption_prob": 5.9199126553721726e-05}, {"id": 80, "seek": 28902, "start": 289.02, "end": 297.44, "text": " Well for the HTML library specifically, you have the HTML lazy namespace which provides", "tokens": [50364, 1042, 337, 264, 17995, 6405, 4682, 11, 291, 362, 264, 17995, 14847, 5288, 17940, 597, 6417, 50785, 50785, 6828, 597, 4045, 291, 281, 5042, 24903, 294, 264, 3331, 689, 1825, 575, 1562, 3105, 13, 51063, 51063, 400, 264, 1778, 983, 300, 307, 257, 665, 19618, 562, 291, 393, 3079, 309, 293, 264, 1778, 309, 1985, 51385, 51385, 293, 307, 588, 11, 588, 2370, 307, 570, 295, 2699, 76, 311, 34382, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11285630544026692, "compression_ratio": 1.528301886792453, "no_caption_prob": 1.4509734683088027e-05}, {"id": 81, "seek": 28902, "start": 297.44, "end": 303.0, "text": " functions which allows you to avoid computation in the cases where nothing has ever changed.", "tokens": [50364, 1042, 337, 264, 17995, 6405, 4682, 11, 291, 362, 264, 17995, 14847, 5288, 17940, 597, 6417, 50785, 50785, 6828, 597, 4045, 291, 281, 5042, 24903, 294, 264, 3331, 689, 1825, 575, 1562, 3105, 13, 51063, 51063, 400, 264, 1778, 983, 300, 307, 257, 665, 19618, 562, 291, 393, 3079, 309, 293, 264, 1778, 309, 1985, 51385, 51385, 293, 307, 588, 11, 588, 2370, 307, 570, 295, 2699, 76, 311, 34382, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11285630544026692, "compression_ratio": 1.528301886792453, "no_caption_prob": 1.4509734683088027e-05}, {"id": 82, "seek": 28902, "start": 303.0, "end": 309.44, "text": " And the reason why that is a good optimization when you can apply it and the reason it works", "tokens": [50364, 1042, 337, 264, 17995, 6405, 4682, 11, 291, 362, 264, 17995, 14847, 5288, 17940, 597, 6417, 50785, 50785, 6828, 597, 4045, 291, 281, 5042, 24903, 294, 264, 3331, 689, 1825, 575, 1562, 3105, 13, 51063, 51063, 400, 264, 1778, 983, 300, 307, 257, 665, 19618, 562, 291, 393, 3079, 309, 293, 264, 1778, 309, 1985, 51385, 51385, 293, 307, 588, 11, 588, 2370, 307, 570, 295, 2699, 76, 311, 34382, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11285630544026692, "compression_ratio": 1.528301886792453, "no_caption_prob": 1.4509734683088027e-05}, {"id": 83, "seek": 28902, "start": 309.44, "end": 315.4, "text": " and is very, very fast is because of Elm's purity.", "tokens": [50364, 1042, 337, 264, 17995, 6405, 4682, 11, 291, 362, 264, 17995, 14847, 5288, 17940, 597, 6417, 50785, 50785, 6828, 597, 4045, 291, 281, 5042, 24903, 294, 264, 3331, 689, 1825, 575, 1562, 3105, 13, 51063, 51063, 400, 264, 1778, 983, 300, 307, 257, 665, 19618, 562, 291, 393, 3079, 309, 293, 264, 1778, 309, 1985, 51385, 51385, 293, 307, 588, 11, 588, 2370, 307, 570, 295, 2699, 76, 311, 34382, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11285630544026692, "compression_ratio": 1.528301886792453, "no_caption_prob": 1.4509734683088027e-05}, {"id": 84, "seek": 31540, "start": 315.4, "end": 322.44, "text": " So you can do the same things in React, but it requires that you have made sure that everything", "tokens": [50364, 407, 291, 393, 360, 264, 912, 721, 294, 30644, 11, 457, 309, 7029, 300, 291, 362, 1027, 988, 300, 1203, 50716, 50716, 307, 6075, 13, 50820, 50820, 400, 562, 291, 360, 643, 1270, 364, 19618, 294, 30644, 11, 286, 519, 291, 366, 516, 281, 362, 257, 51118, 51118, 1154, 9275, 300, 19618, 570, 721, 3212, 380, 6075, 538, 7576, 13, 51363, 51363, 400, 370, 456, 366, 2138, 1629, 721, 597, 366, 709, 11, 709, 3571, 294, 2699, 76, 570, 51650, 51650, 295, 34382, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.09347566691311923, "compression_ratio": 1.669767441860465, "no_caption_prob": 1.0782942808873486e-05}, {"id": 85, "seek": 31540, "start": 322.44, "end": 324.52, "text": " is pure.", "tokens": [50364, 407, 291, 393, 360, 264, 912, 721, 294, 30644, 11, 457, 309, 7029, 300, 291, 362, 1027, 988, 300, 1203, 50716, 50716, 307, 6075, 13, 50820, 50820, 400, 562, 291, 360, 643, 1270, 364, 19618, 294, 30644, 11, 286, 519, 291, 366, 516, 281, 362, 257, 51118, 51118, 1154, 9275, 300, 19618, 570, 721, 3212, 380, 6075, 538, 7576, 13, 51363, 51363, 400, 370, 456, 366, 2138, 1629, 721, 597, 366, 709, 11, 709, 3571, 294, 2699, 76, 570, 51650, 51650, 295, 34382, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.09347566691311923, "compression_ratio": 1.669767441860465, "no_caption_prob": 1.0782942808873486e-05}, {"id": 86, "seek": 31540, "start": 324.52, "end": 330.47999999999996, "text": " And when you do need such an optimization in React, I think you are going to have a", "tokens": [50364, 407, 291, 393, 360, 264, 912, 721, 294, 30644, 11, 457, 309, 7029, 300, 291, 362, 1027, 988, 300, 1203, 50716, 50716, 307, 6075, 13, 50820, 50820, 400, 562, 291, 360, 643, 1270, 364, 19618, 294, 30644, 11, 286, 519, 291, 366, 516, 281, 362, 257, 51118, 51118, 1154, 9275, 300, 19618, 570, 721, 3212, 380, 6075, 538, 7576, 13, 51363, 51363, 400, 370, 456, 366, 2138, 1629, 721, 597, 366, 709, 11, 709, 3571, 294, 2699, 76, 570, 51650, 51650, 295, 34382, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.09347566691311923, "compression_ratio": 1.669767441860465, "no_caption_prob": 1.0782942808873486e-05}, {"id": 87, "seek": 31540, "start": 330.47999999999996, "end": 335.38, "text": " problem applying that optimization because things aren't pure by default.", "tokens": [50364, 407, 291, 393, 360, 264, 912, 721, 294, 30644, 11, 457, 309, 7029, 300, 291, 362, 1027, 988, 300, 1203, 50716, 50716, 307, 6075, 13, 50820, 50820, 400, 562, 291, 360, 643, 1270, 364, 19618, 294, 30644, 11, 286, 519, 291, 366, 516, 281, 362, 257, 51118, 51118, 1154, 9275, 300, 19618, 570, 721, 3212, 380, 6075, 538, 7576, 13, 51363, 51363, 400, 370, 456, 366, 2138, 1629, 721, 597, 366, 709, 11, 709, 3571, 294, 2699, 76, 570, 51650, 51650, 295, 34382, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.09347566691311923, "compression_ratio": 1.669767441860465, "no_caption_prob": 1.0782942808873486e-05}, {"id": 88, "seek": 31540, "start": 335.38, "end": 341.12, "text": " And so there are definitely certain things which are much, much easier in Elm because", "tokens": [50364, 407, 291, 393, 360, 264, 912, 721, 294, 30644, 11, 457, 309, 7029, 300, 291, 362, 1027, 988, 300, 1203, 50716, 50716, 307, 6075, 13, 50820, 50820, 400, 562, 291, 360, 643, 1270, 364, 19618, 294, 30644, 11, 286, 519, 291, 366, 516, 281, 362, 257, 51118, 51118, 1154, 9275, 300, 19618, 570, 721, 3212, 380, 6075, 538, 7576, 13, 51363, 51363, 400, 370, 456, 366, 2138, 1629, 721, 597, 366, 709, 11, 709, 3571, 294, 2699, 76, 570, 51650, 51650, 295, 34382, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.09347566691311923, "compression_ratio": 1.669767441860465, "no_caption_prob": 1.0782942808873486e-05}, {"id": 89, "seek": 31540, "start": 341.12, "end": 342.12, "text": " of purity.", "tokens": [50364, 407, 291, 393, 360, 264, 912, 721, 294, 30644, 11, 457, 309, 7029, 300, 291, 362, 1027, 988, 300, 1203, 50716, 50716, 307, 6075, 13, 50820, 50820, 400, 562, 291, 360, 643, 1270, 364, 19618, 294, 30644, 11, 286, 519, 291, 366, 516, 281, 362, 257, 51118, 51118, 1154, 9275, 300, 19618, 570, 721, 3212, 380, 6075, 538, 7576, 13, 51363, 51363, 400, 370, 456, 366, 2138, 1629, 721, 597, 366, 709, 11, 709, 3571, 294, 2699, 76, 570, 51650, 51650, 295, 34382, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.09347566691311923, "compression_ratio": 1.669767441860465, "no_caption_prob": 1.0782942808873486e-05}, {"id": 90, "seek": 34212, "start": 342.12, "end": 349.32, "text": " But on the other hand, there are things which is harder because of purity as well.", "tokens": [50364, 583, 322, 264, 661, 1011, 11, 456, 366, 721, 597, 307, 6081, 570, 295, 34382, 382, 731, 13, 50724, 50724, 1743, 257, 25890, 1310, 13, 50842, 50842, 865, 13, 50898, 50898, 407, 300, 1177, 380, 4725, 914, 300, 1412, 9227, 393, 380, 312, 4663, 294, 257, 6075, 2856, 51266, 51266, 5347, 281, 257, 2856, 597, 4045, 291, 281, 764, 5839, 712, 1412, 9227, 13, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.19541475352118998, "compression_ratio": 1.5138121546961325, "no_caption_prob": 1.7777831089915708e-05}, {"id": 91, "seek": 34212, "start": 349.32, "end": 351.68, "text": " Like a dictionary maybe.", "tokens": [50364, 583, 322, 264, 661, 1011, 11, 456, 366, 721, 597, 307, 6081, 570, 295, 34382, 382, 731, 13, 50724, 50724, 1743, 257, 25890, 1310, 13, 50842, 50842, 865, 13, 50898, 50898, 407, 300, 1177, 380, 4725, 914, 300, 1412, 9227, 393, 380, 312, 4663, 294, 257, 6075, 2856, 51266, 51266, 5347, 281, 257, 2856, 597, 4045, 291, 281, 764, 5839, 712, 1412, 9227, 13, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.19541475352118998, "compression_ratio": 1.5138121546961325, "no_caption_prob": 1.7777831089915708e-05}, {"id": 92, "seek": 34212, "start": 351.68, "end": 352.8, "text": " Yeah.", "tokens": [50364, 583, 322, 264, 661, 1011, 11, 456, 366, 721, 597, 307, 6081, 570, 295, 34382, 382, 731, 13, 50724, 50724, 1743, 257, 25890, 1310, 13, 50842, 50842, 865, 13, 50898, 50898, 407, 300, 1177, 380, 4725, 914, 300, 1412, 9227, 393, 380, 312, 4663, 294, 257, 6075, 2856, 51266, 51266, 5347, 281, 257, 2856, 597, 4045, 291, 281, 764, 5839, 712, 1412, 9227, 13, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.19541475352118998, "compression_ratio": 1.5138121546961325, "no_caption_prob": 1.7777831089915708e-05}, {"id": 93, "seek": 34212, "start": 352.8, "end": 360.16, "text": " So that doesn't necessarily mean that data structures can't be faster in a pure language", "tokens": [50364, 583, 322, 264, 661, 1011, 11, 456, 366, 721, 597, 307, 6081, 570, 295, 34382, 382, 731, 13, 50724, 50724, 1743, 257, 25890, 1310, 13, 50842, 50842, 865, 13, 50898, 50898, 407, 300, 1177, 380, 4725, 914, 300, 1412, 9227, 393, 380, 312, 4663, 294, 257, 6075, 2856, 51266, 51266, 5347, 281, 257, 2856, 597, 4045, 291, 281, 764, 5839, 712, 1412, 9227, 13, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.19541475352118998, "compression_ratio": 1.5138121546961325, "no_caption_prob": 1.7777831089915708e-05}, {"id": 94, "seek": 34212, "start": 360.16, "end": 365.28000000000003, "text": " compared to a language which allows you to use mutable data structures.", "tokens": [50364, 583, 322, 264, 661, 1011, 11, 456, 366, 721, 597, 307, 6081, 570, 295, 34382, 382, 731, 13, 50724, 50724, 1743, 257, 25890, 1310, 13, 50842, 50842, 865, 13, 50898, 50898, 407, 300, 1177, 380, 4725, 914, 300, 1412, 9227, 393, 380, 312, 4663, 294, 257, 6075, 2856, 51266, 51266, 5347, 281, 257, 2856, 597, 4045, 291, 281, 764, 5839, 712, 1412, 9227, 13, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.19541475352118998, "compression_ratio": 1.5138121546961325, "no_caption_prob": 1.7777831089915708e-05}, {"id": 95, "seek": 36528, "start": 365.28, "end": 374.64, "text": " So one example of this is the dictionary implementation in Clojure, the HashMap implementation in", "tokens": [50364, 407, 472, 1365, 295, 341, 307, 264, 25890, 11420, 294, 31901, 73, 540, 11, 264, 30775, 44, 569, 11420, 294, 50832, 50832, 31901, 73, 540, 544, 4682, 13, 50919, 50919, 467, 4523, 484, 300, 562, 3760, 490, 257, 31901, 73, 540, 30775, 44, 569, 11, 14920, 356, 562, 291, 362, 257, 30775, 44, 569, 51266, 51266, 33921, 295, 1310, 411, 1732, 420, 2309, 2459, 23041, 13, 51534, 51534, 9242, 295, 955, 13, 51590, 51590, 3013, 291, 360, 13572, 1562, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.2220783233642578, "compression_ratio": 1.566326530612245, "no_caption_prob": 1.4737763194716536e-05}, {"id": 96, "seek": 36528, "start": 374.64, "end": 376.38, "text": " Clojure more specifically.", "tokens": [50364, 407, 472, 1365, 295, 341, 307, 264, 25890, 11420, 294, 31901, 73, 540, 11, 264, 30775, 44, 569, 11420, 294, 50832, 50832, 31901, 73, 540, 544, 4682, 13, 50919, 50919, 467, 4523, 484, 300, 562, 3760, 490, 257, 31901, 73, 540, 30775, 44, 569, 11, 14920, 356, 562, 291, 362, 257, 30775, 44, 569, 51266, 51266, 33921, 295, 1310, 411, 1732, 420, 2309, 2459, 23041, 13, 51534, 51534, 9242, 295, 955, 13, 51590, 51590, 3013, 291, 360, 13572, 1562, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.2220783233642578, "compression_ratio": 1.566326530612245, "no_caption_prob": 1.4737763194716536e-05}, {"id": 97, "seek": 36528, "start": 376.38, "end": 383.32, "text": " It turns out that when reading from a Clojure HashMap, admittedly when you have a HashMap", "tokens": [50364, 407, 472, 1365, 295, 341, 307, 264, 25890, 11420, 294, 31901, 73, 540, 11, 264, 30775, 44, 569, 11420, 294, 50832, 50832, 31901, 73, 540, 544, 4682, 13, 50919, 50919, 467, 4523, 484, 300, 562, 3760, 490, 257, 31901, 73, 540, 30775, 44, 569, 11, 14920, 356, 562, 291, 362, 257, 30775, 44, 569, 51266, 51266, 33921, 295, 1310, 411, 1732, 420, 2309, 2459, 23041, 13, 51534, 51534, 9242, 295, 955, 13, 51590, 51590, 3013, 291, 360, 13572, 1562, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.2220783233642578, "compression_ratio": 1.566326530612245, "no_caption_prob": 1.4737763194716536e-05}, {"id": 98, "seek": 36528, "start": 383.32, "end": 388.67999999999995, "text": " consisting of maybe like five or six million entries.", "tokens": [50364, 407, 472, 1365, 295, 341, 307, 264, 25890, 11420, 294, 31901, 73, 540, 11, 264, 30775, 44, 569, 11420, 294, 50832, 50832, 31901, 73, 540, 544, 4682, 13, 50919, 50919, 467, 4523, 484, 300, 562, 3760, 490, 257, 31901, 73, 540, 30775, 44, 569, 11, 14920, 356, 562, 291, 362, 257, 30775, 44, 569, 51266, 51266, 33921, 295, 1310, 411, 1732, 420, 2309, 2459, 23041, 13, 51534, 51534, 9242, 295, 955, 13, 51590, 51590, 3013, 291, 360, 13572, 1562, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.2220783233642578, "compression_ratio": 1.566326530612245, "no_caption_prob": 1.4737763194716536e-05}, {"id": 99, "seek": 36528, "start": 388.67999999999995, "end": 389.79999999999995, "text": " Kind of big.", "tokens": [50364, 407, 472, 1365, 295, 341, 307, 264, 25890, 11420, 294, 31901, 73, 540, 11, 264, 30775, 44, 569, 11420, 294, 50832, 50832, 31901, 73, 540, 544, 4682, 13, 50919, 50919, 467, 4523, 484, 300, 562, 3760, 490, 257, 31901, 73, 540, 30775, 44, 569, 11, 14920, 356, 562, 291, 362, 257, 30775, 44, 569, 51266, 51266, 33921, 295, 1310, 411, 1732, 420, 2309, 2459, 23041, 13, 51534, 51534, 9242, 295, 955, 13, 51590, 51590, 3013, 291, 360, 13572, 1562, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.2220783233642578, "compression_ratio": 1.566326530612245, "no_caption_prob": 1.4737763194716536e-05}, {"id": 100, "seek": 36528, "start": 389.79999999999995, "end": 392.0, "text": " Which you do hardly ever.", "tokens": [50364, 407, 472, 1365, 295, 341, 307, 264, 25890, 11420, 294, 31901, 73, 540, 11, 264, 30775, 44, 569, 11420, 294, 50832, 50832, 31901, 73, 540, 544, 4682, 13, 50919, 50919, 467, 4523, 484, 300, 562, 3760, 490, 257, 31901, 73, 540, 30775, 44, 569, 11, 14920, 356, 562, 291, 362, 257, 30775, 44, 569, 51266, 51266, 33921, 295, 1310, 411, 1732, 420, 2309, 2459, 23041, 13, 51534, 51534, 9242, 295, 955, 13, 51590, 51590, 3013, 291, 360, 13572, 1562, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.2220783233642578, "compression_ratio": 1.566326530612245, "no_caption_prob": 1.4737763194716536e-05}, {"id": 101, "seek": 39200, "start": 392.0, "end": 396.42, "text": " But in the case you have such a big dictionary, it turns out that Clojure can actually be", "tokens": [50364, 583, 294, 264, 1389, 291, 362, 1270, 257, 955, 25890, 11, 309, 4523, 484, 300, 31901, 73, 540, 393, 767, 312, 50585, 50585, 4663, 337, 3760, 490, 848, 25890, 2935, 570, 295, 264, 4230, 3877, 597, 1669, 50864, 50864, 309, 544, 19459, 9208, 813, 428, 7476, 5839, 712, 30775, 44, 569, 11, 597, 307, 472, 10957, 10225, 13, 51250, 51250, 407, 309, 393, 312, 4663, 538, 884, 721, 294, 257, 1864, 260, 636, 13, 51514, 51514, 583, 291, 486, 5646, 7799, 281, 652, 309, 382, 2370, 382, 5839, 712, 20478, 570, 291, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.10103794932365417, "compression_ratio": 1.646341463414634, "no_caption_prob": 1.384547522320645e-05}, {"id": 102, "seek": 39200, "start": 396.42, "end": 402.0, "text": " faster for reading from said dictionary simply because of the tree structure which makes", "tokens": [50364, 583, 294, 264, 1389, 291, 362, 1270, 257, 955, 25890, 11, 309, 4523, 484, 300, 31901, 73, 540, 393, 767, 312, 50585, 50585, 4663, 337, 3760, 490, 848, 25890, 2935, 570, 295, 264, 4230, 3877, 597, 1669, 50864, 50864, 309, 544, 19459, 9208, 813, 428, 7476, 5839, 712, 30775, 44, 569, 11, 597, 307, 472, 10957, 10225, 13, 51250, 51250, 407, 309, 393, 312, 4663, 538, 884, 721, 294, 257, 1864, 260, 636, 13, 51514, 51514, 583, 291, 486, 5646, 7799, 281, 652, 309, 382, 2370, 382, 5839, 712, 20478, 570, 291, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.10103794932365417, "compression_ratio": 1.646341463414634, "no_caption_prob": 1.384547522320645e-05}, {"id": 103, "seek": 39200, "start": 402.0, "end": 409.72, "text": " it more cache friendly than your typical mutable HashMap, which is one continuous array.", "tokens": [50364, 583, 294, 264, 1389, 291, 362, 1270, 257, 955, 25890, 11, 309, 4523, 484, 300, 31901, 73, 540, 393, 767, 312, 50585, 50585, 4663, 337, 3760, 490, 848, 25890, 2935, 570, 295, 264, 4230, 3877, 597, 1669, 50864, 50864, 309, 544, 19459, 9208, 813, 428, 7476, 5839, 712, 30775, 44, 569, 11, 597, 307, 472, 10957, 10225, 13, 51250, 51250, 407, 309, 393, 312, 4663, 538, 884, 721, 294, 257, 1864, 260, 636, 13, 51514, 51514, 583, 291, 486, 5646, 7799, 281, 652, 309, 382, 2370, 382, 5839, 712, 20478, 570, 291, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.10103794932365417, "compression_ratio": 1.646341463414634, "no_caption_prob": 1.384547522320645e-05}, {"id": 104, "seek": 39200, "start": 409.72, "end": 415.0, "text": " So it can be faster by doing things in a purer way.", "tokens": [50364, 583, 294, 264, 1389, 291, 362, 1270, 257, 955, 25890, 11, 309, 4523, 484, 300, 31901, 73, 540, 393, 767, 312, 50585, 50585, 4663, 337, 3760, 490, 848, 25890, 2935, 570, 295, 264, 4230, 3877, 597, 1669, 50864, 50864, 309, 544, 19459, 9208, 813, 428, 7476, 5839, 712, 30775, 44, 569, 11, 597, 307, 472, 10957, 10225, 13, 51250, 51250, 407, 309, 393, 312, 4663, 538, 884, 721, 294, 257, 1864, 260, 636, 13, 51514, 51514, 583, 291, 486, 5646, 7799, 281, 652, 309, 382, 2370, 382, 5839, 712, 20478, 570, 291, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.10103794932365417, "compression_ratio": 1.646341463414634, "no_caption_prob": 1.384547522320645e-05}, {"id": 105, "seek": 39200, "start": 415.0, "end": 421.92, "text": " But you will normally struggle to make it as fast as mutable alternatives because you", "tokens": [50364, 583, 294, 264, 1389, 291, 362, 1270, 257, 955, 25890, 11, 309, 4523, 484, 300, 31901, 73, 540, 393, 767, 312, 50585, 50585, 4663, 337, 3760, 490, 848, 25890, 2935, 570, 295, 264, 4230, 3877, 597, 1669, 50864, 50864, 309, 544, 19459, 9208, 813, 428, 7476, 5839, 712, 30775, 44, 569, 11, 597, 307, 472, 10957, 10225, 13, 51250, 51250, 407, 309, 393, 312, 4663, 538, 884, 721, 294, 257, 1864, 260, 636, 13, 51514, 51514, 583, 291, 486, 5646, 7799, 281, 652, 309, 382, 2370, 382, 5839, 712, 20478, 570, 291, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.10103794932365417, "compression_ratio": 1.646341463414634, "no_caption_prob": 1.384547522320645e-05}, {"id": 106, "seek": 42192, "start": 421.92, "end": 425.36, "text": " have to copy a lot of stuff around.", "tokens": [50364, 362, 281, 5055, 257, 688, 295, 1507, 926, 13, 50536, 50536, 1144, 291, 643, 281, 362, 3397, 325, 2310, 833, 264, 13376, 294, 364, 3397, 32148, 2856, 30, 50894, 50894, 1436, 286, 914, 11, 9809, 575, 668, 1417, 257, 688, 466, 613, 3467, 295, 5028, 14455, 294, 51216, 51216, 341, 3727, 2856, 300, 415, 311, 668, 6416, 13, 51362, 51362, 492, 603, 2113, 281, 257, 751, 689, 415, 1709, 666, 512, 4365, 322, 341, 13, 51500, 51500, 583, 415, 4960, 512, 5028, 14455, 833, 264, 13376, 281, 2042, 27960, 562, 1944, 294, 257, 636, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.14352061797161492, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.5396125642582774e-05}, {"id": 107, "seek": 42192, "start": 425.36, "end": 432.52000000000004, "text": " Do you need to have immutability under the hood in an immutable language?", "tokens": [50364, 362, 281, 5055, 257, 688, 295, 1507, 926, 13, 50536, 50536, 1144, 291, 643, 281, 362, 3397, 325, 2310, 833, 264, 13376, 294, 364, 3397, 32148, 2856, 30, 50894, 50894, 1436, 286, 914, 11, 9809, 575, 668, 1417, 257, 688, 466, 613, 3467, 295, 5028, 14455, 294, 51216, 51216, 341, 3727, 2856, 300, 415, 311, 668, 6416, 13, 51362, 51362, 492, 603, 2113, 281, 257, 751, 689, 415, 1709, 666, 512, 4365, 322, 341, 13, 51500, 51500, 583, 415, 4960, 512, 5028, 14455, 833, 264, 13376, 281, 2042, 27960, 562, 1944, 294, 257, 636, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.14352061797161492, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.5396125642582774e-05}, {"id": 108, "seek": 42192, "start": 432.52000000000004, "end": 438.96000000000004, "text": " Because I mean, Richard has been talking a lot about these types of optimizations in", "tokens": [50364, 362, 281, 5055, 257, 688, 295, 1507, 926, 13, 50536, 50536, 1144, 291, 643, 281, 362, 3397, 325, 2310, 833, 264, 13376, 294, 364, 3397, 32148, 2856, 30, 50894, 50894, 1436, 286, 914, 11, 9809, 575, 668, 1417, 257, 688, 466, 613, 3467, 295, 5028, 14455, 294, 51216, 51216, 341, 3727, 2856, 300, 415, 311, 668, 6416, 13, 51362, 51362, 492, 603, 2113, 281, 257, 751, 689, 415, 1709, 666, 512, 4365, 322, 341, 13, 51500, 51500, 583, 415, 4960, 512, 5028, 14455, 833, 264, 13376, 281, 2042, 27960, 562, 1944, 294, 257, 636, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.14352061797161492, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.5396125642582774e-05}, {"id": 109, "seek": 42192, "start": 438.96000000000004, "end": 441.88, "text": " this rock language that he's been developing.", "tokens": [50364, 362, 281, 5055, 257, 688, 295, 1507, 926, 13, 50536, 50536, 1144, 291, 643, 281, 362, 3397, 325, 2310, 833, 264, 13376, 294, 364, 3397, 32148, 2856, 30, 50894, 50894, 1436, 286, 914, 11, 9809, 575, 668, 1417, 257, 688, 466, 613, 3467, 295, 5028, 14455, 294, 51216, 51216, 341, 3727, 2856, 300, 415, 311, 668, 6416, 13, 51362, 51362, 492, 603, 2113, 281, 257, 751, 689, 415, 1709, 666, 512, 4365, 322, 341, 13, 51500, 51500, 583, 415, 4960, 512, 5028, 14455, 833, 264, 13376, 281, 2042, 27960, 562, 1944, 294, 257, 636, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.14352061797161492, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.5396125642582774e-05}, {"id": 110, "seek": 42192, "start": 441.88, "end": 444.64, "text": " We'll link to a talk where he goes into some details on this.", "tokens": [50364, 362, 281, 5055, 257, 688, 295, 1507, 926, 13, 50536, 50536, 1144, 291, 643, 281, 362, 3397, 325, 2310, 833, 264, 13376, 294, 364, 3397, 32148, 2856, 30, 50894, 50894, 1436, 286, 914, 11, 9809, 575, 668, 1417, 257, 688, 466, 613, 3467, 295, 5028, 14455, 294, 51216, 51216, 341, 3727, 2856, 300, 415, 311, 668, 6416, 13, 51362, 51362, 492, 603, 2113, 281, 257, 751, 689, 415, 1709, 666, 512, 4365, 322, 341, 13, 51500, 51500, 583, 415, 4960, 512, 5028, 14455, 833, 264, 13376, 281, 2042, 27960, 562, 1944, 294, 257, 636, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.14352061797161492, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.5396125642582774e-05}, {"id": 111, "seek": 42192, "start": 444.64, "end": 451.18, "text": " But he uses some optimizations under the hood to perform mutation when possible in a way", "tokens": [50364, 362, 281, 5055, 257, 688, 295, 1507, 926, 13, 50536, 50536, 1144, 291, 643, 281, 362, 3397, 325, 2310, 833, 264, 13376, 294, 364, 3397, 32148, 2856, 30, 50894, 50894, 1436, 286, 914, 11, 9809, 575, 668, 1417, 257, 688, 466, 613, 3467, 295, 5028, 14455, 294, 51216, 51216, 341, 3727, 2856, 300, 415, 311, 668, 6416, 13, 51362, 51362, 492, 603, 2113, 281, 257, 751, 689, 415, 1709, 666, 512, 4365, 322, 341, 13, 51500, 51500, 583, 415, 4960, 512, 5028, 14455, 833, 264, 13376, 281, 2042, 27960, 562, 1944, 294, 257, 636, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.14352061797161492, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.5396125642582774e-05}, {"id": 112, "seek": 45118, "start": 451.18, "end": 455.6, "text": " where the user doesn't have the ability to mutate data.", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 113, "seek": 45118, "start": 455.6, "end": 460.56, "text": " But the compiler might see, well, the user won't notice that I've mutated something as", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 114, "seek": 45118, "start": 460.56, "end": 461.56, "text": " far as they're concerned.", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 115, "seek": 45118, "start": 461.56, "end": 464.3, "text": " They have the illusion of immutability.", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 116, "seek": 45118, "start": 464.3, "end": 465.78000000000003, "text": " And that's all we need.", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 117, "seek": 45118, "start": 465.78000000000003, "end": 471.6, "text": " So like, does that trade off apply to optimizing stuff in Elm?", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 118, "seek": 45118, "start": 471.6, "end": 475.26, "text": " Or for practical reasons, is that not a good approach?", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 119, "seek": 45118, "start": 475.26, "end": 479.92, "text": " Or for philosophical reasons, is that not the desired approach?", "tokens": [50364, 689, 264, 4195, 1177, 380, 362, 264, 3485, 281, 5839, 473, 1412, 13, 50585, 50585, 583, 264, 31958, 1062, 536, 11, 731, 11, 264, 4195, 1582, 380, 3449, 300, 286, 600, 5839, 770, 746, 382, 50833, 50833, 1400, 382, 436, 434, 5922, 13, 50883, 50883, 814, 362, 264, 18854, 295, 3397, 325, 2310, 13, 51020, 51020, 400, 300, 311, 439, 321, 643, 13, 51094, 51094, 407, 411, 11, 775, 300, 4923, 766, 3079, 281, 40425, 1507, 294, 2699, 76, 30, 51385, 51385, 1610, 337, 8496, 4112, 11, 307, 300, 406, 257, 665, 3109, 30, 51568, 51568, 1610, 337, 25066, 4112, 11, 307, 300, 406, 264, 14721, 3109, 30, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.13724385840552195, "compression_ratio": 1.725, "no_caption_prob": 6.40135258436203e-05}, {"id": 120, "seek": 47992, "start": 479.92, "end": 485.6, "text": " So if you can do it, then you can definitely get a lot of performance out of that.", "tokens": [50364, 407, 498, 291, 393, 360, 309, 11, 550, 291, 393, 2138, 483, 257, 688, 295, 3389, 484, 295, 300, 13, 50648, 50648, 400, 6922, 575, 11, 412, 1935, 490, 437, 286, 600, 1612, 11, 12785, 300, 291, 393, 362, 1920, 382, 2370, 3089, 51054, 51054, 3720, 294, 257, 17491, 11745, 2856, 382, 938, 382, 264, 31958, 307, 1075, 281, 16117, 613, 51326, 51326, 11733, 833, 264, 13376, 13, 51376, 51376, 400, 309, 311, 1021, 281, 584, 300, 321, 500, 380, 534, 1127, 466, 721, 767, 885, 6075, 833, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.08648108399432639, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.2029002391500399e-05}, {"id": 121, "seek": 47992, "start": 485.6, "end": 493.72, "text": " And Rock has, at least from what I've seen, proven that you can have almost as fast code", "tokens": [50364, 407, 498, 291, 393, 360, 309, 11, 550, 291, 393, 2138, 483, 257, 688, 295, 3389, 484, 295, 300, 13, 50648, 50648, 400, 6922, 575, 11, 412, 1935, 490, 437, 286, 600, 1612, 11, 12785, 300, 291, 393, 362, 1920, 382, 2370, 3089, 51054, 51054, 3720, 294, 257, 17491, 11745, 2856, 382, 938, 382, 264, 31958, 307, 1075, 281, 16117, 613, 51326, 51326, 11733, 833, 264, 13376, 13, 51376, 51376, 400, 309, 311, 1021, 281, 584, 300, 321, 500, 380, 534, 1127, 466, 721, 767, 885, 6075, 833, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.08648108399432639, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.2029002391500399e-05}, {"id": 122, "seek": 47992, "start": 493.72, "end": 499.16, "text": " written in a purely functional language as long as the compiler is able to utilize these", "tokens": [50364, 407, 498, 291, 393, 360, 309, 11, 550, 291, 393, 2138, 483, 257, 688, 295, 3389, 484, 295, 300, 13, 50648, 50648, 400, 6922, 575, 11, 412, 1935, 490, 437, 286, 600, 1612, 11, 12785, 300, 291, 393, 362, 1920, 382, 2370, 3089, 51054, 51054, 3720, 294, 257, 17491, 11745, 2856, 382, 938, 382, 264, 31958, 307, 1075, 281, 16117, 613, 51326, 51326, 11733, 833, 264, 13376, 13, 51376, 51376, 400, 309, 311, 1021, 281, 584, 300, 321, 500, 380, 534, 1127, 466, 721, 767, 885, 6075, 833, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.08648108399432639, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.2029002391500399e-05}, {"id": 123, "seek": 47992, "start": 499.16, "end": 500.16, "text": " tricks under the hood.", "tokens": [50364, 407, 498, 291, 393, 360, 309, 11, 550, 291, 393, 2138, 483, 257, 688, 295, 3389, 484, 295, 300, 13, 50648, 50648, 400, 6922, 575, 11, 412, 1935, 490, 437, 286, 600, 1612, 11, 12785, 300, 291, 393, 362, 1920, 382, 2370, 3089, 51054, 51054, 3720, 294, 257, 17491, 11745, 2856, 382, 938, 382, 264, 31958, 307, 1075, 281, 16117, 613, 51326, 51326, 11733, 833, 264, 13376, 13, 51376, 51376, 400, 309, 311, 1021, 281, 584, 300, 321, 500, 380, 534, 1127, 466, 721, 767, 885, 6075, 833, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.08648108399432639, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.2029002391500399e-05}, {"id": 124, "seek": 47992, "start": 500.16, "end": 506.28000000000003, "text": " And it's important to say that we don't really care about things actually being pure under", "tokens": [50364, 407, 498, 291, 393, 360, 309, 11, 550, 291, 393, 2138, 483, 257, 688, 295, 3389, 484, 295, 300, 13, 50648, 50648, 400, 6922, 575, 11, 412, 1935, 490, 437, 286, 600, 1612, 11, 12785, 300, 291, 393, 362, 1920, 382, 2370, 3089, 51054, 51054, 3720, 294, 257, 17491, 11745, 2856, 382, 938, 382, 264, 31958, 307, 1075, 281, 16117, 613, 51326, 51326, 11733, 833, 264, 13376, 13, 51376, 51376, 400, 309, 311, 1021, 281, 584, 300, 321, 500, 380, 534, 1127, 466, 721, 767, 885, 6075, 833, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.08648108399432639, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.2029002391500399e-05}, {"id": 125, "seek": 50628, "start": 506.28, "end": 510.91999999999996, "text": " the hood, as long as you have the illusion of that being the case.", "tokens": [50364, 264, 13376, 11, 382, 938, 382, 291, 362, 264, 18854, 295, 300, 885, 264, 1389, 13, 50596, 50596, 583, 4362, 294, 2699, 76, 11, 286, 500, 380, 519, 321, 652, 764, 295, 1270, 5028, 14455, 13, 50936, 50936, 883, 11, 300, 311, 733, 295, 437, 286, 478, 24176, 412, 264, 1623, 13, 51124, 51124, 1743, 512, 295, 264, 5028, 14455, 300, 6922, 775, 307, 733, 295, 437, 286, 478, 1237, 412, 412, 264, 1623, 13, 51424, 51424, 821, 311, 512, 665, 3542, 11, 457, 611, 309, 311, 411, 5567, 294, 437, 291, 393, 360, 11, 437, 291, 2644, 51632, 51632, 19719, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15872422704156838, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.507022327336017e-05}, {"id": 126, "seek": 50628, "start": 510.91999999999996, "end": 517.72, "text": " But currently in Elm, I don't think we make use of such optimizations.", "tokens": [50364, 264, 13376, 11, 382, 938, 382, 291, 362, 264, 18854, 295, 300, 885, 264, 1389, 13, 50596, 50596, 583, 4362, 294, 2699, 76, 11, 286, 500, 380, 519, 321, 652, 764, 295, 1270, 5028, 14455, 13, 50936, 50936, 883, 11, 300, 311, 733, 295, 437, 286, 478, 24176, 412, 264, 1623, 13, 51124, 51124, 1743, 512, 295, 264, 5028, 14455, 300, 6922, 775, 307, 733, 295, 437, 286, 478, 1237, 412, 412, 264, 1623, 13, 51424, 51424, 821, 311, 512, 665, 3542, 11, 457, 611, 309, 311, 411, 5567, 294, 437, 291, 393, 360, 11, 437, 291, 2644, 51632, 51632, 19719, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15872422704156838, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.507022327336017e-05}, {"id": 127, "seek": 50628, "start": 517.72, "end": 521.48, "text": " No, that's kind of what I'm researching at the moment.", "tokens": [50364, 264, 13376, 11, 382, 938, 382, 291, 362, 264, 18854, 295, 300, 885, 264, 1389, 13, 50596, 50596, 583, 4362, 294, 2699, 76, 11, 286, 500, 380, 519, 321, 652, 764, 295, 1270, 5028, 14455, 13, 50936, 50936, 883, 11, 300, 311, 733, 295, 437, 286, 478, 24176, 412, 264, 1623, 13, 51124, 51124, 1743, 512, 295, 264, 5028, 14455, 300, 6922, 775, 307, 733, 295, 437, 286, 478, 1237, 412, 412, 264, 1623, 13, 51424, 51424, 821, 311, 512, 665, 3542, 11, 457, 611, 309, 311, 411, 5567, 294, 437, 291, 393, 360, 11, 437, 291, 2644, 51632, 51632, 19719, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15872422704156838, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.507022327336017e-05}, {"id": 128, "seek": 50628, "start": 521.48, "end": 527.48, "text": " Like some of the optimizations that Rock does is kind of what I'm looking at at the moment.", "tokens": [50364, 264, 13376, 11, 382, 938, 382, 291, 362, 264, 18854, 295, 300, 885, 264, 1389, 13, 50596, 50596, 583, 4362, 294, 2699, 76, 11, 286, 500, 380, 519, 321, 652, 764, 295, 1270, 5028, 14455, 13, 50936, 50936, 883, 11, 300, 311, 733, 295, 437, 286, 478, 24176, 412, 264, 1623, 13, 51124, 51124, 1743, 512, 295, 264, 5028, 14455, 300, 6922, 775, 307, 733, 295, 437, 286, 478, 1237, 412, 412, 264, 1623, 13, 51424, 51424, 821, 311, 512, 665, 3542, 11, 457, 611, 309, 311, 411, 5567, 294, 437, 291, 393, 360, 11, 437, 291, 2644, 51632, 51632, 19719, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15872422704156838, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.507022327336017e-05}, {"id": 129, "seek": 50628, "start": 527.48, "end": 531.64, "text": " There's some good results, but also it's like limited in what you can do, what you cannot", "tokens": [50364, 264, 13376, 11, 382, 938, 382, 291, 362, 264, 18854, 295, 300, 885, 264, 1389, 13, 50596, 50596, 583, 4362, 294, 2699, 76, 11, 286, 500, 380, 519, 321, 652, 764, 295, 1270, 5028, 14455, 13, 50936, 50936, 883, 11, 300, 311, 733, 295, 437, 286, 478, 24176, 412, 264, 1623, 13, 51124, 51124, 1743, 512, 295, 264, 5028, 14455, 300, 6922, 775, 307, 733, 295, 437, 286, 478, 1237, 412, 412, 264, 1623, 13, 51424, 51424, 821, 311, 512, 665, 3542, 11, 457, 611, 309, 311, 411, 5567, 294, 437, 291, 393, 360, 11, 437, 291, 2644, 51632, 51632, 19719, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15872422704156838, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.507022327336017e-05}, {"id": 130, "seek": 50628, "start": 531.64, "end": 533.16, "text": " optimize.", "tokens": [50364, 264, 13376, 11, 382, 938, 382, 291, 362, 264, 18854, 295, 300, 885, 264, 1389, 13, 50596, 50596, 583, 4362, 294, 2699, 76, 11, 286, 500, 380, 519, 321, 652, 764, 295, 1270, 5028, 14455, 13, 50936, 50936, 883, 11, 300, 311, 733, 295, 437, 286, 478, 24176, 412, 264, 1623, 13, 51124, 51124, 1743, 512, 295, 264, 5028, 14455, 300, 6922, 775, 307, 733, 295, 437, 286, 478, 1237, 412, 412, 264, 1623, 13, 51424, 51424, 821, 311, 512, 665, 3542, 11, 457, 611, 309, 311, 411, 5567, 294, 437, 291, 393, 360, 11, 437, 291, 2644, 51632, 51632, 19719, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15872422704156838, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.507022327336017e-05}, {"id": 131, "seek": 53316, "start": 533.16, "end": 539.04, "text": " And I think that Rock has much more solid foundations to do it at the moment.", "tokens": [50364, 400, 286, 519, 300, 6922, 575, 709, 544, 5100, 22467, 281, 360, 309, 412, 264, 1623, 13, 50658, 50658, 865, 11, 562, 309, 311, 19453, 666, 264, 4965, 295, 437, 264, 31958, 307, 22001, 281, 360, 11, 550, 264, 50896, 50896, 31958, 393, 2837, 1589, 926, 689, 257, 27960, 2314, 293, 19719, 337, 300, 13, 51232, 51232, 583, 1071, 588, 1021, 4171, 307, 300, 6922, 1177, 380, 362, 281, 31413, 281, 15778, 13, 51595, 51595, 400, 370, 309, 575, 257, 688, 544, 1969, 670, 437, 309, 393, 293, 2644, 360, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12078568307976974, "compression_ratio": 1.636734693877551, "no_caption_prob": 7.4110503192059696e-06}, {"id": 132, "seek": 53316, "start": 539.04, "end": 543.8, "text": " Yeah, when it's baked into the core of what the compiler is attempting to do, then the", "tokens": [50364, 400, 286, 519, 300, 6922, 575, 709, 544, 5100, 22467, 281, 360, 309, 412, 264, 1623, 13, 50658, 50658, 865, 11, 562, 309, 311, 19453, 666, 264, 4965, 295, 437, 264, 31958, 307, 22001, 281, 360, 11, 550, 264, 50896, 50896, 31958, 393, 2837, 1589, 926, 689, 257, 27960, 2314, 293, 19719, 337, 300, 13, 51232, 51232, 583, 1071, 588, 1021, 4171, 307, 300, 6922, 1177, 380, 362, 281, 31413, 281, 15778, 13, 51595, 51595, 400, 370, 309, 575, 257, 688, 544, 1969, 670, 437, 309, 393, 293, 2644, 360, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12078568307976974, "compression_ratio": 1.636734693877551, "no_caption_prob": 7.4110503192059696e-06}, {"id": 133, "seek": 53316, "start": 543.8, "end": 550.52, "text": " compiler can track information around where a mutation happens and optimize for that.", "tokens": [50364, 400, 286, 519, 300, 6922, 575, 709, 544, 5100, 22467, 281, 360, 309, 412, 264, 1623, 13, 50658, 50658, 865, 11, 562, 309, 311, 19453, 666, 264, 4965, 295, 437, 264, 31958, 307, 22001, 281, 360, 11, 550, 264, 50896, 50896, 31958, 393, 2837, 1589, 926, 689, 257, 27960, 2314, 293, 19719, 337, 300, 13, 51232, 51232, 583, 1071, 588, 1021, 4171, 307, 300, 6922, 1177, 380, 362, 281, 31413, 281, 15778, 13, 51595, 51595, 400, 370, 309, 575, 257, 688, 544, 1969, 670, 437, 309, 393, 293, 2644, 360, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12078568307976974, "compression_ratio": 1.636734693877551, "no_caption_prob": 7.4110503192059696e-06}, {"id": 134, "seek": 53316, "start": 550.52, "end": 557.78, "text": " But another very important aspect is that Rock doesn't have to compile to JavaScript.", "tokens": [50364, 400, 286, 519, 300, 6922, 575, 709, 544, 5100, 22467, 281, 360, 309, 412, 264, 1623, 13, 50658, 50658, 865, 11, 562, 309, 311, 19453, 666, 264, 4965, 295, 437, 264, 31958, 307, 22001, 281, 360, 11, 550, 264, 50896, 50896, 31958, 393, 2837, 1589, 926, 689, 257, 27960, 2314, 293, 19719, 337, 300, 13, 51232, 51232, 583, 1071, 588, 1021, 4171, 307, 300, 6922, 1177, 380, 362, 281, 31413, 281, 15778, 13, 51595, 51595, 400, 370, 309, 575, 257, 688, 544, 1969, 670, 437, 309, 393, 293, 2644, 360, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12078568307976974, "compression_ratio": 1.636734693877551, "no_caption_prob": 7.4110503192059696e-06}, {"id": 135, "seek": 53316, "start": 557.78, "end": 562.88, "text": " And so it has a lot more control over what it can and cannot do.", "tokens": [50364, 400, 286, 519, 300, 6922, 575, 709, 544, 5100, 22467, 281, 360, 309, 412, 264, 1623, 13, 50658, 50658, 865, 11, 562, 309, 311, 19453, 666, 264, 4965, 295, 437, 264, 31958, 307, 22001, 281, 360, 11, 550, 264, 50896, 50896, 31958, 393, 2837, 1589, 926, 689, 257, 27960, 2314, 293, 19719, 337, 300, 13, 51232, 51232, 583, 1071, 588, 1021, 4171, 307, 300, 6922, 1177, 380, 362, 281, 31413, 281, 15778, 13, 51595, 51595, 400, 370, 309, 575, 257, 688, 544, 1969, 670, 437, 309, 393, 293, 2644, 360, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.12078568307976974, "compression_ratio": 1.636734693877551, "no_caption_prob": 7.4110503192059696e-06}, {"id": 136, "seek": 56288, "start": 562.88, "end": 568.48, "text": " For good and bad, you know, compiling to JavaScript is a lot easier.", "tokens": [50364, 1171, 665, 293, 1578, 11, 291, 458, 11, 715, 4883, 281, 15778, 307, 257, 688, 3571, 13, 50644, 50644, 583, 291, 3624, 512, 1969, 2051, 264, 636, 13, 50810, 50810, 1485, 551, 300, 286, 478, 1953, 295, 597, 2699, 76, 775, 360, 293, 597, 881, 11745, 8650, 360, 51032, 51032, 307, 6838, 818, 19618, 13, 51212, 51212, 823, 6838, 818, 19618, 1943, 380, 1096, 700, 293, 18864, 337, 3389, 13, 51446, 51446, 467, 311, 1096, 337, 4514, 13, 51554, 51554, 407, 337, 729, 567, 500, 380, 458, 11, 6838, 818, 19618, 307, 562, 291, 362, 257, 20560, 488, 2445, 818, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.09592225001408504, "compression_ratio": 1.7148760330578512, "no_caption_prob": 1.544591214042157e-05}, {"id": 137, "seek": 56288, "start": 568.48, "end": 571.8, "text": " But you lose some control along the way.", "tokens": [50364, 1171, 665, 293, 1578, 11, 291, 458, 11, 715, 4883, 281, 15778, 307, 257, 688, 3571, 13, 50644, 50644, 583, 291, 3624, 512, 1969, 2051, 264, 636, 13, 50810, 50810, 1485, 551, 300, 286, 478, 1953, 295, 597, 2699, 76, 775, 360, 293, 597, 881, 11745, 8650, 360, 51032, 51032, 307, 6838, 818, 19618, 13, 51212, 51212, 823, 6838, 818, 19618, 1943, 380, 1096, 700, 293, 18864, 337, 3389, 13, 51446, 51446, 467, 311, 1096, 337, 4514, 13, 51554, 51554, 407, 337, 729, 567, 500, 380, 458, 11, 6838, 818, 19618, 307, 562, 291, 362, 257, 20560, 488, 2445, 818, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.09592225001408504, "compression_ratio": 1.7148760330578512, "no_caption_prob": 1.544591214042157e-05}, {"id": 138, "seek": 56288, "start": 571.8, "end": 576.24, "text": " One thing that I'm thinking of which Elm does do and which most functional languages do", "tokens": [50364, 1171, 665, 293, 1578, 11, 291, 458, 11, 715, 4883, 281, 15778, 307, 257, 688, 3571, 13, 50644, 50644, 583, 291, 3624, 512, 1969, 2051, 264, 636, 13, 50810, 50810, 1485, 551, 300, 286, 478, 1953, 295, 597, 2699, 76, 775, 360, 293, 597, 881, 11745, 8650, 360, 51032, 51032, 307, 6838, 818, 19618, 13, 51212, 51212, 823, 6838, 818, 19618, 1943, 380, 1096, 700, 293, 18864, 337, 3389, 13, 51446, 51446, 467, 311, 1096, 337, 4514, 13, 51554, 51554, 407, 337, 729, 567, 500, 380, 458, 11, 6838, 818, 19618, 307, 562, 291, 362, 257, 20560, 488, 2445, 818, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.09592225001408504, "compression_ratio": 1.7148760330578512, "no_caption_prob": 1.544591214042157e-05}, {"id": 139, "seek": 56288, "start": 576.24, "end": 579.84, "text": " is tail call optimization.", "tokens": [50364, 1171, 665, 293, 1578, 11, 291, 458, 11, 715, 4883, 281, 15778, 307, 257, 688, 3571, 13, 50644, 50644, 583, 291, 3624, 512, 1969, 2051, 264, 636, 13, 50810, 50810, 1485, 551, 300, 286, 478, 1953, 295, 597, 2699, 76, 775, 360, 293, 597, 881, 11745, 8650, 360, 51032, 51032, 307, 6838, 818, 19618, 13, 51212, 51212, 823, 6838, 818, 19618, 1943, 380, 1096, 700, 293, 18864, 337, 3389, 13, 51446, 51446, 467, 311, 1096, 337, 4514, 13, 51554, 51554, 407, 337, 729, 567, 500, 380, 458, 11, 6838, 818, 19618, 307, 562, 291, 362, 257, 20560, 488, 2445, 818, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.09592225001408504, "compression_ratio": 1.7148760330578512, "no_caption_prob": 1.544591214042157e-05}, {"id": 140, "seek": 56288, "start": 579.84, "end": 584.52, "text": " Now tail call optimization isn't done first and foremost for performance.", "tokens": [50364, 1171, 665, 293, 1578, 11, 291, 458, 11, 715, 4883, 281, 15778, 307, 257, 688, 3571, 13, 50644, 50644, 583, 291, 3624, 512, 1969, 2051, 264, 636, 13, 50810, 50810, 1485, 551, 300, 286, 478, 1953, 295, 597, 2699, 76, 775, 360, 293, 597, 881, 11745, 8650, 360, 51032, 51032, 307, 6838, 818, 19618, 13, 51212, 51212, 823, 6838, 818, 19618, 1943, 380, 1096, 700, 293, 18864, 337, 3389, 13, 51446, 51446, 467, 311, 1096, 337, 4514, 13, 51554, 51554, 407, 337, 729, 567, 500, 380, 458, 11, 6838, 818, 19618, 307, 562, 291, 362, 257, 20560, 488, 2445, 818, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.09592225001408504, "compression_ratio": 1.7148760330578512, "no_caption_prob": 1.544591214042157e-05}, {"id": 141, "seek": 56288, "start": 584.52, "end": 586.68, "text": " It's done for safety.", "tokens": [50364, 1171, 665, 293, 1578, 11, 291, 458, 11, 715, 4883, 281, 15778, 307, 257, 688, 3571, 13, 50644, 50644, 583, 291, 3624, 512, 1969, 2051, 264, 636, 13, 50810, 50810, 1485, 551, 300, 286, 478, 1953, 295, 597, 2699, 76, 775, 360, 293, 597, 881, 11745, 8650, 360, 51032, 51032, 307, 6838, 818, 19618, 13, 51212, 51212, 823, 6838, 818, 19618, 1943, 380, 1096, 700, 293, 18864, 337, 3389, 13, 51446, 51446, 467, 311, 1096, 337, 4514, 13, 51554, 51554, 407, 337, 729, 567, 500, 380, 458, 11, 6838, 818, 19618, 307, 562, 291, 362, 257, 20560, 488, 2445, 818, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.09592225001408504, "compression_ratio": 1.7148760330578512, "no_caption_prob": 1.544591214042157e-05}, {"id": 142, "seek": 56288, "start": 586.68, "end": 592.48, "text": " So for those who don't know, tail call optimization is when you have a recursive function call", "tokens": [50364, 1171, 665, 293, 1578, 11, 291, 458, 11, 715, 4883, 281, 15778, 307, 257, 688, 3571, 13, 50644, 50644, 583, 291, 3624, 512, 1969, 2051, 264, 636, 13, 50810, 50810, 1485, 551, 300, 286, 478, 1953, 295, 597, 2699, 76, 775, 360, 293, 597, 881, 11745, 8650, 360, 51032, 51032, 307, 6838, 818, 19618, 13, 51212, 51212, 823, 6838, 818, 19618, 1943, 380, 1096, 700, 293, 18864, 337, 3389, 13, 51446, 51446, 467, 311, 1096, 337, 4514, 13, 51554, 51554, 407, 337, 729, 567, 500, 380, 458, 11, 6838, 818, 19618, 307, 562, 291, 362, 257, 20560, 488, 2445, 818, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.09592225001408504, "compression_ratio": 1.7148760330578512, "no_caption_prob": 1.544591214042157e-05}, {"id": 143, "seek": 59248, "start": 592.48, "end": 599.44, "text": " where the recursive call, the result of the recursive call will be the result of the calling", "tokens": [50364, 689, 264, 20560, 488, 818, 11, 264, 1874, 295, 264, 20560, 488, 818, 486, 312, 264, 1874, 295, 264, 5141, 50712, 50712, 2445, 11, 498, 300, 311, 3006, 11, 486, 406, 767, 312, 36548, 760, 281, 257, 2445, 5141, 2564, 51040, 51040, 670, 293, 670, 13, 51090, 51090, 467, 486, 312, 36548, 760, 281, 257, 1339, 6367, 13, 51262, 51262, 400, 300, 307, 281, 5042, 5127, 4959, 281, 264, 8630, 293, 4728, 9853, 257, 8630, 37772, 51512, 51512, 11183, 13, 51562, 51562, 663, 311, 264, 2135, 764, 295, 309, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09309375032465508, "compression_ratio": 1.8592964824120604, "no_caption_prob": 9.665982361184433e-06}, {"id": 144, "seek": 59248, "start": 599.44, "end": 606.0, "text": " function, if that's correct, will not actually be compiled down to a function calling itself", "tokens": [50364, 689, 264, 20560, 488, 818, 11, 264, 1874, 295, 264, 20560, 488, 818, 486, 312, 264, 1874, 295, 264, 5141, 50712, 50712, 2445, 11, 498, 300, 311, 3006, 11, 486, 406, 767, 312, 36548, 760, 281, 257, 2445, 5141, 2564, 51040, 51040, 670, 293, 670, 13, 51090, 51090, 467, 486, 312, 36548, 760, 281, 257, 1339, 6367, 13, 51262, 51262, 400, 300, 307, 281, 5042, 5127, 4959, 281, 264, 8630, 293, 4728, 9853, 257, 8630, 37772, 51512, 51512, 11183, 13, 51562, 51562, 663, 311, 264, 2135, 764, 295, 309, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09309375032465508, "compression_ratio": 1.8592964824120604, "no_caption_prob": 9.665982361184433e-06}, {"id": 145, "seek": 59248, "start": 606.0, "end": 607.0, "text": " over and over.", "tokens": [50364, 689, 264, 20560, 488, 818, 11, 264, 1874, 295, 264, 20560, 488, 818, 486, 312, 264, 1874, 295, 264, 5141, 50712, 50712, 2445, 11, 498, 300, 311, 3006, 11, 486, 406, 767, 312, 36548, 760, 281, 257, 2445, 5141, 2564, 51040, 51040, 670, 293, 670, 13, 51090, 51090, 467, 486, 312, 36548, 760, 281, 257, 1339, 6367, 13, 51262, 51262, 400, 300, 307, 281, 5042, 5127, 4959, 281, 264, 8630, 293, 4728, 9853, 257, 8630, 37772, 51512, 51512, 11183, 13, 51562, 51562, 663, 311, 264, 2135, 764, 295, 309, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09309375032465508, "compression_ratio": 1.8592964824120604, "no_caption_prob": 9.665982361184433e-06}, {"id": 146, "seek": 59248, "start": 607.0, "end": 610.44, "text": " It will be compiled down to a while loop.", "tokens": [50364, 689, 264, 20560, 488, 818, 11, 264, 1874, 295, 264, 20560, 488, 818, 486, 312, 264, 1874, 295, 264, 5141, 50712, 50712, 2445, 11, 498, 300, 311, 3006, 11, 486, 406, 767, 312, 36548, 760, 281, 257, 2445, 5141, 2564, 51040, 51040, 670, 293, 670, 13, 51090, 51090, 467, 486, 312, 36548, 760, 281, 257, 1339, 6367, 13, 51262, 51262, 400, 300, 307, 281, 5042, 5127, 4959, 281, 264, 8630, 293, 4728, 9853, 257, 8630, 37772, 51512, 51512, 11183, 13, 51562, 51562, 663, 311, 264, 2135, 764, 295, 309, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09309375032465508, "compression_ratio": 1.8592964824120604, "no_caption_prob": 9.665982361184433e-06}, {"id": 147, "seek": 59248, "start": 610.44, "end": 615.44, "text": " And that is to avoid adding elements to the stack and eventually causing a stack overflow", "tokens": [50364, 689, 264, 20560, 488, 818, 11, 264, 1874, 295, 264, 20560, 488, 818, 486, 312, 264, 1874, 295, 264, 5141, 50712, 50712, 2445, 11, 498, 300, 311, 3006, 11, 486, 406, 767, 312, 36548, 760, 281, 257, 2445, 5141, 2564, 51040, 51040, 670, 293, 670, 13, 51090, 51090, 467, 486, 312, 36548, 760, 281, 257, 1339, 6367, 13, 51262, 51262, 400, 300, 307, 281, 5042, 5127, 4959, 281, 264, 8630, 293, 4728, 9853, 257, 8630, 37772, 51512, 51512, 11183, 13, 51562, 51562, 663, 311, 264, 2135, 764, 295, 309, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09309375032465508, "compression_ratio": 1.8592964824120604, "no_caption_prob": 9.665982361184433e-06}, {"id": 148, "seek": 59248, "start": 615.44, "end": 616.44, "text": " exception.", "tokens": [50364, 689, 264, 20560, 488, 818, 11, 264, 1874, 295, 264, 20560, 488, 818, 486, 312, 264, 1874, 295, 264, 5141, 50712, 50712, 2445, 11, 498, 300, 311, 3006, 11, 486, 406, 767, 312, 36548, 760, 281, 257, 2445, 5141, 2564, 51040, 51040, 670, 293, 670, 13, 51090, 51090, 467, 486, 312, 36548, 760, 281, 257, 1339, 6367, 13, 51262, 51262, 400, 300, 307, 281, 5042, 5127, 4959, 281, 264, 8630, 293, 4728, 9853, 257, 8630, 37772, 51512, 51512, 11183, 13, 51562, 51562, 663, 311, 264, 2135, 764, 295, 309, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09309375032465508, "compression_ratio": 1.8592964824120604, "no_caption_prob": 9.665982361184433e-06}, {"id": 149, "seek": 59248, "start": 616.44, "end": 618.84, "text": " That's the main use of it.", "tokens": [50364, 689, 264, 20560, 488, 818, 11, 264, 1874, 295, 264, 20560, 488, 818, 486, 312, 264, 1874, 295, 264, 5141, 50712, 50712, 2445, 11, 498, 300, 311, 3006, 11, 486, 406, 767, 312, 36548, 760, 281, 257, 2445, 5141, 2564, 51040, 51040, 670, 293, 670, 13, 51090, 51090, 467, 486, 312, 36548, 760, 281, 257, 1339, 6367, 13, 51262, 51262, 400, 300, 307, 281, 5042, 5127, 4959, 281, 264, 8630, 293, 4728, 9853, 257, 8630, 37772, 51512, 51512, 11183, 13, 51562, 51562, 663, 311, 264, 2135, 764, 295, 309, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.09309375032465508, "compression_ratio": 1.8592964824120604, "no_caption_prob": 9.665982361184433e-06}, {"id": 150, "seek": 61884, "start": 618.84, "end": 623.6600000000001, "text": " But because you avoid a lot of function calls, you also increase performance a lot.", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 151, "seek": 61884, "start": 623.6600000000001, "end": 629.1600000000001, "text": " So that's a case where the language only allows you to use functions and functions calling", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 152, "seek": 61884, "start": 629.1600000000001, "end": 630.1600000000001, "text": " functions.", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 153, "seek": 61884, "start": 630.1600000000001, "end": 635.1, "text": " But as long as we keep the illusion that that is what is happening, we don't really care", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 154, "seek": 61884, "start": 635.1, "end": 636.4200000000001, "text": " about how it's compiled.", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 155, "seek": 61884, "start": 636.4200000000001, "end": 641.1600000000001, "text": " And so compiling it down to a while loop is perfectly fine and faster and safer.", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 156, "seek": 61884, "start": 641.1600000000001, "end": 644.44, "text": " Yeah, so while loop plus mutations as well.", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 157, "seek": 61884, "start": 644.44, "end": 647.2800000000001, "text": " Otherwise it doesn't make much sense.", "tokens": [50364, 583, 570, 291, 5042, 257, 688, 295, 2445, 5498, 11, 291, 611, 3488, 3389, 257, 688, 13, 50605, 50605, 407, 300, 311, 257, 1389, 689, 264, 2856, 787, 4045, 291, 281, 764, 6828, 293, 6828, 5141, 50880, 50880, 6828, 13, 50930, 50930, 583, 382, 938, 382, 321, 1066, 264, 18854, 300, 300, 307, 437, 307, 2737, 11, 321, 500, 380, 534, 1127, 51177, 51177, 466, 577, 309, 311, 36548, 13, 51243, 51243, 400, 370, 715, 4883, 309, 760, 281, 257, 1339, 6367, 307, 6239, 2489, 293, 4663, 293, 15856, 13, 51480, 51480, 865, 11, 370, 1339, 6367, 1804, 29243, 382, 731, 13, 51644, 51644, 10328, 309, 1177, 380, 652, 709, 2020, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15635427935370083, "compression_ratio": 1.711111111111111, "no_caption_prob": 1.2029297067783773e-05}, {"id": 158, "seek": 64728, "start": 647.28, "end": 653.9599999999999, "text": " Yeah, Jeroen, I think you've been trying to make more opportunities for tail call recursion", "tokens": [50364, 865, 11, 508, 2032, 268, 11, 286, 519, 291, 600, 668, 1382, 281, 652, 544, 4786, 337, 6838, 818, 20560, 313, 50698, 50698, 370, 300, 264, 2699, 76, 31958, 1943, 380, 382, 5567, 294, 689, 309, 393, 3079, 300, 19618, 11, 558, 30, 50954, 50954, 7587, 13, 51004, 51004, 865, 13, 51054, 51054, 400, 588, 20257, 3542, 370, 1400, 11, 457, 300, 311, 439, 286, 486, 584, 412, 264, 1623, 13, 51224, 51224, 407, 300, 311, 1333, 295, 411, 11, 562, 286, 519, 466, 439, 341, 3389, 1507, 11, 472, 295, 264, 721, 51442, 51442, 300, 286, 519, 466, 307, 341, 1558, 295, 257, 31958, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11850805282592773, "compression_ratio": 1.59375, "no_caption_prob": 1.6700649211998098e-05}, {"id": 159, "seek": 64728, "start": 653.9599999999999, "end": 659.0799999999999, "text": " so that the Elm compiler isn't as limited in where it can apply that optimization, right?", "tokens": [50364, 865, 11, 508, 2032, 268, 11, 286, 519, 291, 600, 668, 1382, 281, 652, 544, 4786, 337, 6838, 818, 20560, 313, 50698, 50698, 370, 300, 264, 2699, 76, 31958, 1943, 380, 382, 5567, 294, 689, 309, 393, 3079, 300, 19618, 11, 558, 30, 50954, 50954, 7587, 13, 51004, 51004, 865, 13, 51054, 51054, 400, 588, 20257, 3542, 370, 1400, 11, 457, 300, 311, 439, 286, 486, 584, 412, 264, 1623, 13, 51224, 51224, 407, 300, 311, 1333, 295, 411, 11, 562, 286, 519, 466, 439, 341, 3389, 1507, 11, 472, 295, 264, 721, 51442, 51442, 300, 286, 519, 466, 307, 341, 1558, 295, 257, 31958, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11850805282592773, "compression_ratio": 1.59375, "no_caption_prob": 1.6700649211998098e-05}, {"id": 160, "seek": 64728, "start": 659.0799999999999, "end": 660.0799999999999, "text": " Exactly.", "tokens": [50364, 865, 11, 508, 2032, 268, 11, 286, 519, 291, 600, 668, 1382, 281, 652, 544, 4786, 337, 6838, 818, 20560, 313, 50698, 50698, 370, 300, 264, 2699, 76, 31958, 1943, 380, 382, 5567, 294, 689, 309, 393, 3079, 300, 19618, 11, 558, 30, 50954, 50954, 7587, 13, 51004, 51004, 865, 13, 51054, 51054, 400, 588, 20257, 3542, 370, 1400, 11, 457, 300, 311, 439, 286, 486, 584, 412, 264, 1623, 13, 51224, 51224, 407, 300, 311, 1333, 295, 411, 11, 562, 286, 519, 466, 439, 341, 3389, 1507, 11, 472, 295, 264, 721, 51442, 51442, 300, 286, 519, 466, 307, 341, 1558, 295, 257, 31958, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11850805282592773, "compression_ratio": 1.59375, "no_caption_prob": 1.6700649211998098e-05}, {"id": 161, "seek": 64728, "start": 660.0799999999999, "end": 661.0799999999999, "text": " Yeah.", "tokens": [50364, 865, 11, 508, 2032, 268, 11, 286, 519, 291, 600, 668, 1382, 281, 652, 544, 4786, 337, 6838, 818, 20560, 313, 50698, 50698, 370, 300, 264, 2699, 76, 31958, 1943, 380, 382, 5567, 294, 689, 309, 393, 3079, 300, 19618, 11, 558, 30, 50954, 50954, 7587, 13, 51004, 51004, 865, 13, 51054, 51054, 400, 588, 20257, 3542, 370, 1400, 11, 457, 300, 311, 439, 286, 486, 584, 412, 264, 1623, 13, 51224, 51224, 407, 300, 311, 1333, 295, 411, 11, 562, 286, 519, 466, 439, 341, 3389, 1507, 11, 472, 295, 264, 721, 51442, 51442, 300, 286, 519, 466, 307, 341, 1558, 295, 257, 31958, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11850805282592773, "compression_ratio": 1.59375, "no_caption_prob": 1.6700649211998098e-05}, {"id": 162, "seek": 64728, "start": 661.0799999999999, "end": 664.48, "text": " And very promising results so far, but that's all I will say at the moment.", "tokens": [50364, 865, 11, 508, 2032, 268, 11, 286, 519, 291, 600, 668, 1382, 281, 652, 544, 4786, 337, 6838, 818, 20560, 313, 50698, 50698, 370, 300, 264, 2699, 76, 31958, 1943, 380, 382, 5567, 294, 689, 309, 393, 3079, 300, 19618, 11, 558, 30, 50954, 50954, 7587, 13, 51004, 51004, 865, 13, 51054, 51054, 400, 588, 20257, 3542, 370, 1400, 11, 457, 300, 311, 439, 286, 486, 584, 412, 264, 1623, 13, 51224, 51224, 407, 300, 311, 1333, 295, 411, 11, 562, 286, 519, 466, 439, 341, 3389, 1507, 11, 472, 295, 264, 721, 51442, 51442, 300, 286, 519, 466, 307, 341, 1558, 295, 257, 31958, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11850805282592773, "compression_ratio": 1.59375, "no_caption_prob": 1.6700649211998098e-05}, {"id": 163, "seek": 64728, "start": 664.48, "end": 668.8399999999999, "text": " So that's sort of like, when I think about all this performance stuff, one of the things", "tokens": [50364, 865, 11, 508, 2032, 268, 11, 286, 519, 291, 600, 668, 1382, 281, 652, 544, 4786, 337, 6838, 818, 20560, 313, 50698, 50698, 370, 300, 264, 2699, 76, 31958, 1943, 380, 382, 5567, 294, 689, 309, 393, 3079, 300, 19618, 11, 558, 30, 50954, 50954, 7587, 13, 51004, 51004, 865, 13, 51054, 51054, 400, 588, 20257, 3542, 370, 1400, 11, 457, 300, 311, 439, 286, 486, 584, 412, 264, 1623, 13, 51224, 51224, 407, 300, 311, 1333, 295, 411, 11, 562, 286, 519, 466, 439, 341, 3389, 1507, 11, 472, 295, 264, 721, 51442, 51442, 300, 286, 519, 466, 307, 341, 1558, 295, 257, 31958, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11850805282592773, "compression_ratio": 1.59375, "no_caption_prob": 1.6700649211998098e-05}, {"id": 164, "seek": 64728, "start": 668.8399999999999, "end": 672.68, "text": " that I think about is this idea of a compiler.", "tokens": [50364, 865, 11, 508, 2032, 268, 11, 286, 519, 291, 600, 668, 1382, 281, 652, 544, 4786, 337, 6838, 818, 20560, 313, 50698, 50698, 370, 300, 264, 2699, 76, 31958, 1943, 380, 382, 5567, 294, 689, 309, 393, 3079, 300, 19618, 11, 558, 30, 50954, 50954, 7587, 13, 51004, 51004, 865, 13, 51054, 51054, 400, 588, 20257, 3542, 370, 1400, 11, 457, 300, 311, 439, 286, 486, 584, 412, 264, 1623, 13, 51224, 51224, 407, 300, 311, 1333, 295, 411, 11, 562, 286, 519, 466, 439, 341, 3389, 1507, 11, 472, 295, 264, 721, 51442, 51442, 300, 286, 519, 466, 307, 341, 1558, 295, 257, 31958, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11850805282592773, "compression_ratio": 1.59375, "no_caption_prob": 1.6700649211998098e-05}, {"id": 165, "seek": 67268, "start": 672.68, "end": 677.64, "text": " So like, for example, Svelte and the creator of Svelte, Rich Harris, talks a lot about", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 318, 779, 975, 293, 264, 14181, 295, 318, 779, 975, 11, 6781, 17426, 11, 6686, 257, 688, 466, 50612, 50612, 341, 1558, 295, 11, 415, 6686, 466, 257, 31958, 337, 15778, 293, 337, 15778, 1868, 917, 7733, 13, 50978, 50978, 400, 264, 636, 415, 6686, 466, 309, 11, 415, 1619, 11, 4177, 11, 321, 600, 658, 11, 2602, 295, 445, 3579, 26749, 51246, 51246, 3089, 11, 437, 498, 321, 632, 746, 300, 727, 312, 544, 13232, 293, 727, 1223, 577, 51508, 51508, 281, 854, 505, 360, 437, 321, 434, 1382, 281, 4584, 538, 3701, 721, 1101, 30, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1121715563479985, "compression_ratio": 1.7131474103585658, "no_caption_prob": 1.2029020581394434e-05}, {"id": 166, "seek": 67268, "start": 677.64, "end": 684.9599999999999, "text": " this idea of, he talks about a compiler for JavaScript and for JavaScript front end apps.", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 318, 779, 975, 293, 264, 14181, 295, 318, 779, 975, 11, 6781, 17426, 11, 6686, 257, 688, 466, 50612, 50612, 341, 1558, 295, 11, 415, 6686, 466, 257, 31958, 337, 15778, 293, 337, 15778, 1868, 917, 7733, 13, 50978, 50978, 400, 264, 636, 415, 6686, 466, 309, 11, 415, 1619, 11, 4177, 11, 321, 600, 658, 11, 2602, 295, 445, 3579, 26749, 51246, 51246, 3089, 11, 437, 498, 321, 632, 746, 300, 727, 312, 544, 13232, 293, 727, 1223, 577, 51508, 51508, 281, 854, 505, 360, 437, 321, 434, 1382, 281, 4584, 538, 3701, 721, 1101, 30, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1121715563479985, "compression_ratio": 1.7131474103585658, "no_caption_prob": 1.2029020581394434e-05}, {"id": 167, "seek": 67268, "start": 684.9599999999999, "end": 690.3199999999999, "text": " And the way he talks about it, he says, hey, we've got, instead of just writing interpreted", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 318, 779, 975, 293, 264, 14181, 295, 318, 779, 975, 11, 6781, 17426, 11, 6686, 257, 688, 466, 50612, 50612, 341, 1558, 295, 11, 415, 6686, 466, 257, 31958, 337, 15778, 293, 337, 15778, 1868, 917, 7733, 13, 50978, 50978, 400, 264, 636, 415, 6686, 466, 309, 11, 415, 1619, 11, 4177, 11, 321, 600, 658, 11, 2602, 295, 445, 3579, 26749, 51246, 51246, 3089, 11, 437, 498, 321, 632, 746, 300, 727, 312, 544, 13232, 293, 727, 1223, 577, 51508, 51508, 281, 854, 505, 360, 437, 321, 434, 1382, 281, 4584, 538, 3701, 721, 1101, 30, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1121715563479985, "compression_ratio": 1.7131474103585658, "no_caption_prob": 1.2029020581394434e-05}, {"id": 168, "seek": 67268, "start": 690.3199999999999, "end": 695.56, "text": " code, what if we had something that could be more intelligent and could understand how", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 318, 779, 975, 293, 264, 14181, 295, 318, 779, 975, 11, 6781, 17426, 11, 6686, 257, 688, 466, 50612, 50612, 341, 1558, 295, 11, 415, 6686, 466, 257, 31958, 337, 15778, 293, 337, 15778, 1868, 917, 7733, 13, 50978, 50978, 400, 264, 636, 415, 6686, 466, 309, 11, 415, 1619, 11, 4177, 11, 321, 600, 658, 11, 2602, 295, 445, 3579, 26749, 51246, 51246, 3089, 11, 437, 498, 321, 632, 746, 300, 727, 312, 544, 13232, 293, 727, 1223, 577, 51508, 51508, 281, 854, 505, 360, 437, 321, 434, 1382, 281, 4584, 538, 3701, 721, 1101, 30, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1121715563479985, "compression_ratio": 1.7131474103585658, "no_caption_prob": 1.2029020581394434e-05}, {"id": 169, "seek": 67268, "start": 695.56, "end": 701.4599999999999, "text": " to help us do what we're trying to achieve by understanding things better?", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 318, 779, 975, 293, 264, 14181, 295, 318, 779, 975, 11, 6781, 17426, 11, 6686, 257, 688, 466, 50612, 50612, 341, 1558, 295, 11, 415, 6686, 466, 257, 31958, 337, 15778, 293, 337, 15778, 1868, 917, 7733, 13, 50978, 50978, 400, 264, 636, 415, 6686, 466, 309, 11, 415, 1619, 11, 4177, 11, 321, 600, 658, 11, 2602, 295, 445, 3579, 26749, 51246, 51246, 3089, 11, 437, 498, 321, 632, 746, 300, 727, 312, 544, 13232, 293, 727, 1223, 577, 51508, 51508, 281, 854, 505, 360, 437, 321, 434, 1382, 281, 4584, 538, 3701, 721, 1101, 30, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1121715563479985, "compression_ratio": 1.7131474103585658, "no_caption_prob": 1.2029020581394434e-05}, {"id": 170, "seek": 70146, "start": 701.46, "end": 704.22, "text": " That's kind of how he talks about a compiler.", "tokens": [50364, 663, 311, 733, 295, 577, 415, 6686, 466, 257, 31958, 13, 50502, 50502, 682, 2699, 76, 11, 309, 311, 1920, 411, 1281, 281, 257, 3506, 13, 50721, 50721, 6620, 5441, 307, 445, 1270, 257, 43868, 39831, 3410, 294, 2699, 76, 300, 321, 1920, 500, 380, 519, 295, 309, 13, 51069, 51069, 583, 437, 393, 264, 31958, 360, 11, 5276, 437, 309, 3255, 11, 281, 652, 527, 1691, 3571, 30, 51313, 51313, 407, 22915, 11, 321, 4659, 380, 362, 281, 458, 341, 1729, 636, 295, 3579, 746, 307, 544, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.12720416939776877, "compression_ratio": 1.5296803652968036, "no_caption_prob": 2.046204281214159e-05}, {"id": 171, "seek": 70146, "start": 704.22, "end": 708.6, "text": " In Elm, it's almost like water to a fish.", "tokens": [50364, 663, 311, 733, 295, 577, 415, 6686, 466, 257, 31958, 13, 50502, 50502, 682, 2699, 76, 11, 309, 311, 1920, 411, 1281, 281, 257, 3506, 13, 50721, 50721, 6620, 5441, 307, 445, 1270, 257, 43868, 39831, 3410, 294, 2699, 76, 300, 321, 1920, 500, 380, 519, 295, 309, 13, 51069, 51069, 583, 437, 393, 264, 31958, 360, 11, 5276, 437, 309, 3255, 11, 281, 652, 527, 1691, 3571, 30, 51313, 51313, 407, 22915, 11, 321, 4659, 380, 362, 281, 458, 341, 1729, 636, 295, 3579, 746, 307, 544, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.12720416939776877, "compression_ratio": 1.5296803652968036, "no_caption_prob": 2.046204281214159e-05}, {"id": 172, "seek": 70146, "start": 708.6, "end": 715.5600000000001, "text": " Compiler is just such a ubiquitous concept in Elm that we almost don't think of it.", "tokens": [50364, 663, 311, 733, 295, 577, 415, 6686, 466, 257, 31958, 13, 50502, 50502, 682, 2699, 76, 11, 309, 311, 1920, 411, 1281, 281, 257, 3506, 13, 50721, 50721, 6620, 5441, 307, 445, 1270, 257, 43868, 39831, 3410, 294, 2699, 76, 300, 321, 1920, 500, 380, 519, 295, 309, 13, 51069, 51069, 583, 437, 393, 264, 31958, 360, 11, 5276, 437, 309, 3255, 11, 281, 652, 527, 1691, 3571, 30, 51313, 51313, 407, 22915, 11, 321, 4659, 380, 362, 281, 458, 341, 1729, 636, 295, 3579, 746, 307, 544, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.12720416939776877, "compression_ratio": 1.5296803652968036, "no_caption_prob": 2.046204281214159e-05}, {"id": 173, "seek": 70146, "start": 715.5600000000001, "end": 720.44, "text": " But what can the compiler do, knowing what it knows, to make our job easier?", "tokens": [50364, 663, 311, 733, 295, 577, 415, 6686, 466, 257, 31958, 13, 50502, 50502, 682, 2699, 76, 11, 309, 311, 1920, 411, 1281, 281, 257, 3506, 13, 50721, 50721, 6620, 5441, 307, 445, 1270, 257, 43868, 39831, 3410, 294, 2699, 76, 300, 321, 1920, 500, 380, 519, 295, 309, 13, 51069, 51069, 583, 437, 393, 264, 31958, 360, 11, 5276, 437, 309, 3255, 11, 281, 652, 527, 1691, 3571, 30, 51313, 51313, 407, 22915, 11, 321, 4659, 380, 362, 281, 458, 341, 1729, 636, 295, 3579, 746, 307, 544, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.12720416939776877, "compression_ratio": 1.5296803652968036, "no_caption_prob": 2.046204281214159e-05}, {"id": 174, "seek": 70146, "start": 720.44, "end": 728.0, "text": " So ideally, we shouldn't have to know this particular way of writing something is more", "tokens": [50364, 663, 311, 733, 295, 577, 415, 6686, 466, 257, 31958, 13, 50502, 50502, 682, 2699, 76, 11, 309, 311, 1920, 411, 1281, 281, 257, 3506, 13, 50721, 50721, 6620, 5441, 307, 445, 1270, 257, 43868, 39831, 3410, 294, 2699, 76, 300, 321, 1920, 500, 380, 519, 295, 309, 13, 51069, 51069, 583, 437, 393, 264, 31958, 360, 11, 5276, 437, 309, 3255, 11, 281, 652, 527, 1691, 3571, 30, 51313, 51313, 407, 22915, 11, 321, 4659, 380, 362, 281, 458, 341, 1729, 636, 295, 3579, 746, 307, 544, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.12720416939776877, "compression_ratio": 1.5296803652968036, "no_caption_prob": 2.046204281214159e-05}, {"id": 175, "seek": 72800, "start": 728.0, "end": 732.64, "text": " efficient than this other way, because the compiler can deduce that, especially with", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 176, "seek": 72800, "start": 732.64, "end": 734.32, "text": " like a pure language.", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 177, "seek": 72800, "start": 734.32, "end": 742.36, "text": " And so I find this to be like one of the really interesting things in Elm in particular is", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 178, "seek": 72800, "start": 742.36, "end": 747.84, "text": " how sophisticated can we get with the work that the compiler can take on to optimize", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 179, "seek": 72800, "start": 747.84, "end": 749.84, "text": " things intelligently for us?", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 180, "seek": 72800, "start": 749.84, "end": 750.84, "text": " That's a very good point.", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 181, "seek": 72800, "start": 750.84, "end": 755.04, "text": " And there are a bunch of things that the Elm compiler can do, knowing the semantics of", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 182, "seek": 72800, "start": 755.04, "end": 756.08, "text": " the language.", "tokens": [50364, 7148, 813, 341, 661, 636, 11, 570, 264, 31958, 393, 4172, 4176, 300, 11, 2318, 365, 50596, 50596, 411, 257, 6075, 2856, 13, 50680, 50680, 400, 370, 286, 915, 341, 281, 312, 411, 472, 295, 264, 534, 1880, 721, 294, 2699, 76, 294, 1729, 307, 51082, 51082, 577, 16950, 393, 321, 483, 365, 264, 589, 300, 264, 31958, 393, 747, 322, 281, 19719, 51356, 51356, 721, 5613, 2276, 337, 505, 30, 51456, 51456, 663, 311, 257, 588, 665, 935, 13, 51506, 51506, 400, 456, 366, 257, 3840, 295, 721, 300, 264, 2699, 76, 31958, 393, 360, 11, 5276, 264, 4361, 45298, 295, 51716, 51716, 264, 2856, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10288332174490164, "compression_ratio": 1.745019920318725, "no_caption_prob": 2.796785884129349e-05}, {"id": 183, "seek": 75608, "start": 756.08, "end": 763.1, "text": " So currently, if you do a simple operation like checking two objects for equality, say,", "tokens": [50364, 407, 4362, 11, 498, 291, 360, 257, 2199, 6916, 411, 8568, 732, 6565, 337, 14949, 11, 584, 11, 50715, 50715, 498, 291, 645, 281, 360, 257, 2158, 2361, 9660, 11, 257, 2158, 2361, 14949, 1520, 295, 732, 6565, 51034, 51034, 294, 15778, 11, 300, 576, 312, 1152, 11, 286, 2041, 11, 281, 483, 746, 300, 1985, 2370, 11, 307, 3273, 51424, 51424, 490, 257, 37649, 4886, 10565, 4585, 11, 570, 884, 300, 1943, 380, 19453, 666, 264, 2856, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10764197843620577, "compression_ratio": 1.6168224299065421, "no_caption_prob": 1.3845021385350265e-05}, {"id": 184, "seek": 75608, "start": 763.1, "end": 769.48, "text": " if you were to do a value based comparison, a value based equality check of two objects", "tokens": [50364, 407, 4362, 11, 498, 291, 360, 257, 2199, 6916, 411, 8568, 732, 6565, 337, 14949, 11, 584, 11, 50715, 50715, 498, 291, 645, 281, 360, 257, 2158, 2361, 9660, 11, 257, 2158, 2361, 14949, 1520, 295, 732, 6565, 51034, 51034, 294, 15778, 11, 300, 576, 312, 1152, 11, 286, 2041, 11, 281, 483, 746, 300, 1985, 2370, 11, 307, 3273, 51424, 51424, 490, 257, 37649, 4886, 10565, 4585, 11, 570, 884, 300, 1943, 380, 19453, 666, 264, 2856, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10764197843620577, "compression_ratio": 1.6168224299065421, "no_caption_prob": 1.3845021385350265e-05}, {"id": 185, "seek": 75608, "start": 769.48, "end": 777.2800000000001, "text": " in JavaScript, that would be hard, I guess, to get something that works fast, is safe", "tokens": [50364, 407, 4362, 11, 498, 291, 360, 257, 2199, 6916, 411, 8568, 732, 6565, 337, 14949, 11, 584, 11, 50715, 50715, 498, 291, 645, 281, 360, 257, 2158, 2361, 9660, 11, 257, 2158, 2361, 14949, 1520, 295, 732, 6565, 51034, 51034, 294, 15778, 11, 300, 576, 312, 1152, 11, 286, 2041, 11, 281, 483, 746, 300, 1985, 2370, 11, 307, 3273, 51424, 51424, 490, 257, 37649, 4886, 10565, 4585, 11, 570, 884, 300, 1943, 380, 19453, 666, 264, 2856, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10764197843620577, "compression_ratio": 1.6168224299065421, "no_caption_prob": 1.3845021385350265e-05}, {"id": 186, "seek": 75608, "start": 777.2800000000001, "end": 784.08, "text": " from a Stack Overflow perspective, because doing that isn't baked into the language.", "tokens": [50364, 407, 4362, 11, 498, 291, 360, 257, 2199, 6916, 411, 8568, 732, 6565, 337, 14949, 11, 584, 11, 50715, 50715, 498, 291, 645, 281, 360, 257, 2158, 2361, 9660, 11, 257, 2158, 2361, 14949, 1520, 295, 732, 6565, 51034, 51034, 294, 15778, 11, 300, 576, 312, 1152, 11, 286, 2041, 11, 281, 483, 746, 300, 1985, 2370, 11, 307, 3273, 51424, 51424, 490, 257, 37649, 4886, 10565, 4585, 11, 570, 884, 300, 1943, 380, 19453, 666, 264, 2856, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10764197843620577, "compression_ratio": 1.6168224299065421, "no_caption_prob": 1.3845021385350265e-05}, {"id": 187, "seek": 78408, "start": 784.08, "end": 789.72, "text": " The right code, making sure that all the contents of two objects are in fact exactly the same.", "tokens": [50364, 440, 558, 3089, 11, 1455, 988, 300, 439, 264, 15768, 295, 732, 6565, 366, 294, 1186, 2293, 264, 912, 13, 50646, 50646, 467, 611, 575, 281, 312, 517, 2173, 30525, 11, 411, 11, 360, 291, 1520, 264, 19475, 295, 264, 2657, 30, 50870, 50870, 1079, 11, 2293, 13, 50938, 50938, 400, 370, 300, 307, 767, 17600, 2252, 294, 15778, 281, 483, 300, 1364, 2319, 4, 295, 51192, 51192, 633, 2167, 1389, 13, 51264, 51264, 682, 2699, 76, 11, 309, 311, 588, 2199, 13, 51390, 51390, 2386, 295, 439, 11, 570, 309, 311, 19453, 294, 11, 457, 611, 570, 295, 406, 8293, 27960, 11, 264, 11420, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13898577383898814, "compression_ratio": 1.5849056603773586, "no_caption_prob": 2.753430453594774e-05}, {"id": 188, "seek": 78408, "start": 789.72, "end": 794.2, "text": " It also has to be unambiguous, like, do you check the prototype of the object?", "tokens": [50364, 440, 558, 3089, 11, 1455, 988, 300, 439, 264, 15768, 295, 732, 6565, 366, 294, 1186, 2293, 264, 912, 13, 50646, 50646, 467, 611, 575, 281, 312, 517, 2173, 30525, 11, 411, 11, 360, 291, 1520, 264, 19475, 295, 264, 2657, 30, 50870, 50870, 1079, 11, 2293, 13, 50938, 50938, 400, 370, 300, 307, 767, 17600, 2252, 294, 15778, 281, 483, 300, 1364, 2319, 4, 295, 51192, 51192, 633, 2167, 1389, 13, 51264, 51264, 682, 2699, 76, 11, 309, 311, 588, 2199, 13, 51390, 51390, 2386, 295, 439, 11, 570, 309, 311, 19453, 294, 11, 457, 611, 570, 295, 406, 8293, 27960, 11, 264, 11420, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13898577383898814, "compression_ratio": 1.5849056603773586, "no_caption_prob": 2.753430453594774e-05}, {"id": 189, "seek": 78408, "start": 794.2, "end": 795.5600000000001, "text": " Yes, exactly.", "tokens": [50364, 440, 558, 3089, 11, 1455, 988, 300, 439, 264, 15768, 295, 732, 6565, 366, 294, 1186, 2293, 264, 912, 13, 50646, 50646, 467, 611, 575, 281, 312, 517, 2173, 30525, 11, 411, 11, 360, 291, 1520, 264, 19475, 295, 264, 2657, 30, 50870, 50870, 1079, 11, 2293, 13, 50938, 50938, 400, 370, 300, 307, 767, 17600, 2252, 294, 15778, 281, 483, 300, 1364, 2319, 4, 295, 51192, 51192, 633, 2167, 1389, 13, 51264, 51264, 682, 2699, 76, 11, 309, 311, 588, 2199, 13, 51390, 51390, 2386, 295, 439, 11, 570, 309, 311, 19453, 294, 11, 457, 611, 570, 295, 406, 8293, 27960, 11, 264, 11420, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13898577383898814, "compression_ratio": 1.5849056603773586, "no_caption_prob": 2.753430453594774e-05}, {"id": 190, "seek": 78408, "start": 795.5600000000001, "end": 800.64, "text": " And so that is actually surprisingly difficult in JavaScript to get that working 100% of", "tokens": [50364, 440, 558, 3089, 11, 1455, 988, 300, 439, 264, 15768, 295, 732, 6565, 366, 294, 1186, 2293, 264, 912, 13, 50646, 50646, 467, 611, 575, 281, 312, 517, 2173, 30525, 11, 411, 11, 360, 291, 1520, 264, 19475, 295, 264, 2657, 30, 50870, 50870, 1079, 11, 2293, 13, 50938, 50938, 400, 370, 300, 307, 767, 17600, 2252, 294, 15778, 281, 483, 300, 1364, 2319, 4, 295, 51192, 51192, 633, 2167, 1389, 13, 51264, 51264, 682, 2699, 76, 11, 309, 311, 588, 2199, 13, 51390, 51390, 2386, 295, 439, 11, 570, 309, 311, 19453, 294, 11, 457, 611, 570, 295, 406, 8293, 27960, 11, 264, 11420, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13898577383898814, "compression_ratio": 1.5849056603773586, "no_caption_prob": 2.753430453594774e-05}, {"id": 191, "seek": 78408, "start": 800.64, "end": 802.08, "text": " every single case.", "tokens": [50364, 440, 558, 3089, 11, 1455, 988, 300, 439, 264, 15768, 295, 732, 6565, 366, 294, 1186, 2293, 264, 912, 13, 50646, 50646, 467, 611, 575, 281, 312, 517, 2173, 30525, 11, 411, 11, 360, 291, 1520, 264, 19475, 295, 264, 2657, 30, 50870, 50870, 1079, 11, 2293, 13, 50938, 50938, 400, 370, 300, 307, 767, 17600, 2252, 294, 15778, 281, 483, 300, 1364, 2319, 4, 295, 51192, 51192, 633, 2167, 1389, 13, 51264, 51264, 682, 2699, 76, 11, 309, 311, 588, 2199, 13, 51390, 51390, 2386, 295, 439, 11, 570, 309, 311, 19453, 294, 11, 457, 611, 570, 295, 406, 8293, 27960, 11, 264, 11420, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13898577383898814, "compression_ratio": 1.5849056603773586, "no_caption_prob": 2.753430453594774e-05}, {"id": 192, "seek": 78408, "start": 802.08, "end": 804.6, "text": " In Elm, it's very simple.", "tokens": [50364, 440, 558, 3089, 11, 1455, 988, 300, 439, 264, 15768, 295, 732, 6565, 366, 294, 1186, 2293, 264, 912, 13, 50646, 50646, 467, 611, 575, 281, 312, 517, 2173, 30525, 11, 411, 11, 360, 291, 1520, 264, 19475, 295, 264, 2657, 30, 50870, 50870, 1079, 11, 2293, 13, 50938, 50938, 400, 370, 300, 307, 767, 17600, 2252, 294, 15778, 281, 483, 300, 1364, 2319, 4, 295, 51192, 51192, 633, 2167, 1389, 13, 51264, 51264, 682, 2699, 76, 11, 309, 311, 588, 2199, 13, 51390, 51390, 2386, 295, 439, 11, 570, 309, 311, 19453, 294, 11, 457, 611, 570, 295, 406, 8293, 27960, 11, 264, 11420, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13898577383898814, "compression_ratio": 1.5849056603773586, "no_caption_prob": 2.753430453594774e-05}, {"id": 193, "seek": 78408, "start": 804.6, "end": 811.88, "text": " First of all, because it's baked in, but also because of not allowing mutation, the implementation", "tokens": [50364, 440, 558, 3089, 11, 1455, 988, 300, 439, 264, 15768, 295, 732, 6565, 366, 294, 1186, 2293, 264, 912, 13, 50646, 50646, 467, 611, 575, 281, 312, 517, 2173, 30525, 11, 411, 11, 360, 291, 1520, 264, 19475, 295, 264, 2657, 30, 50870, 50870, 1079, 11, 2293, 13, 50938, 50938, 400, 370, 300, 307, 767, 17600, 2252, 294, 15778, 281, 483, 300, 1364, 2319, 4, 295, 51192, 51192, 633, 2167, 1389, 13, 51264, 51264, 682, 2699, 76, 11, 309, 311, 588, 2199, 13, 51390, 51390, 2386, 295, 439, 11, 570, 309, 311, 19453, 294, 11, 457, 611, 570, 295, 406, 8293, 27960, 11, 264, 11420, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13898577383898814, "compression_ratio": 1.5849056603773586, "no_caption_prob": 2.753430453594774e-05}, {"id": 194, "seek": 81188, "start": 811.88, "end": 817.2, "text": " of equality checking can actually be a shallow comparison, because you know that two objects", "tokens": [50364, 295, 14949, 8568, 393, 767, 312, 257, 20488, 9660, 11, 570, 291, 458, 300, 732, 6565, 50630, 50630, 567, 362, 264, 912, 6575, 366, 611, 2681, 13, 50748, 50748, 400, 370, 291, 393, 10023, 257, 688, 295, 264, 589, 4818, 281, 1520, 732, 6565, 337, 14949, 13, 51036, 51036, 400, 370, 1419, 257, 31958, 300, 15146, 420, 597, 32714, 1629, 14191, 322, 577, 51316, 51316, 291, 2464, 3089, 393, 294, 1186, 652, 1629, 721, 257, 688, 3571, 293, 544, 2042, 394, 562, 36548, 51738, 51738, 886, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.0908180173936781, "compression_ratio": 1.7063829787234042, "no_caption_prob": 1.1478178748802748e-05}, {"id": 195, "seek": 81188, "start": 817.2, "end": 819.56, "text": " who have the same identity are also equal.", "tokens": [50364, 295, 14949, 8568, 393, 767, 312, 257, 20488, 9660, 11, 570, 291, 458, 300, 732, 6565, 50630, 50630, 567, 362, 264, 912, 6575, 366, 611, 2681, 13, 50748, 50748, 400, 370, 291, 393, 10023, 257, 688, 295, 264, 589, 4818, 281, 1520, 732, 6565, 337, 14949, 13, 51036, 51036, 400, 370, 1419, 257, 31958, 300, 15146, 420, 597, 32714, 1629, 14191, 322, 577, 51316, 51316, 291, 2464, 3089, 393, 294, 1186, 652, 1629, 721, 257, 688, 3571, 293, 544, 2042, 394, 562, 36548, 51738, 51738, 886, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.0908180173936781, "compression_ratio": 1.7063829787234042, "no_caption_prob": 1.1478178748802748e-05}, {"id": 196, "seek": 81188, "start": 819.56, "end": 825.32, "text": " And so you can skip a lot of the work necessary to check two objects for equality.", "tokens": [50364, 295, 14949, 8568, 393, 767, 312, 257, 20488, 9660, 11, 570, 291, 458, 300, 732, 6565, 50630, 50630, 567, 362, 264, 912, 6575, 366, 611, 2681, 13, 50748, 50748, 400, 370, 291, 393, 10023, 257, 688, 295, 264, 589, 4818, 281, 1520, 732, 6565, 337, 14949, 13, 51036, 51036, 400, 370, 1419, 257, 31958, 300, 15146, 420, 597, 32714, 1629, 14191, 322, 577, 51316, 51316, 291, 2464, 3089, 393, 294, 1186, 652, 1629, 721, 257, 688, 3571, 293, 544, 2042, 394, 562, 36548, 51738, 51738, 886, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.0908180173936781, "compression_ratio": 1.7063829787234042, "no_caption_prob": 1.1478178748802748e-05}, {"id": 197, "seek": 81188, "start": 825.32, "end": 830.92, "text": " And so having a compiler that understands or which lays certain restrictions on how", "tokens": [50364, 295, 14949, 8568, 393, 767, 312, 257, 20488, 9660, 11, 570, 291, 458, 300, 732, 6565, 50630, 50630, 567, 362, 264, 912, 6575, 366, 611, 2681, 13, 50748, 50748, 400, 370, 291, 393, 10023, 257, 688, 295, 264, 589, 4818, 281, 1520, 732, 6565, 337, 14949, 13, 51036, 51036, 400, 370, 1419, 257, 31958, 300, 15146, 420, 597, 32714, 1629, 14191, 322, 577, 51316, 51316, 291, 2464, 3089, 393, 294, 1186, 652, 1629, 721, 257, 688, 3571, 293, 544, 2042, 394, 562, 36548, 51738, 51738, 886, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.0908180173936781, "compression_ratio": 1.7063829787234042, "no_caption_prob": 1.1478178748802748e-05}, {"id": 198, "seek": 81188, "start": 830.92, "end": 839.36, "text": " you write code can in fact make certain things a lot easier and more performant when compiled", "tokens": [50364, 295, 14949, 8568, 393, 767, 312, 257, 20488, 9660, 11, 570, 291, 458, 300, 732, 6565, 50630, 50630, 567, 362, 264, 912, 6575, 366, 611, 2681, 13, 50748, 50748, 400, 370, 291, 393, 10023, 257, 688, 295, 264, 589, 4818, 281, 1520, 732, 6565, 337, 14949, 13, 51036, 51036, 400, 370, 1419, 257, 31958, 300, 15146, 420, 597, 32714, 1629, 14191, 322, 577, 51316, 51316, 291, 2464, 3089, 393, 294, 1186, 652, 1629, 721, 257, 688, 3571, 293, 544, 2042, 394, 562, 36548, 51738, 51738, 886, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.0908180173936781, "compression_ratio": 1.7063829787234042, "no_caption_prob": 1.1478178748802748e-05}, {"id": 199, "seek": 81188, "start": 839.36, "end": 840.36, "text": " too.", "tokens": [50364, 295, 14949, 8568, 393, 767, 312, 257, 20488, 9660, 11, 570, 291, 458, 300, 732, 6565, 50630, 50630, 567, 362, 264, 912, 6575, 366, 611, 2681, 13, 50748, 50748, 400, 370, 291, 393, 10023, 257, 688, 295, 264, 589, 4818, 281, 1520, 732, 6565, 337, 14949, 13, 51036, 51036, 400, 370, 1419, 257, 31958, 300, 15146, 420, 597, 32714, 1629, 14191, 322, 577, 51316, 51316, 291, 2464, 3089, 393, 294, 1186, 652, 1629, 721, 257, 688, 3571, 293, 544, 2042, 394, 562, 36548, 51738, 51738, 886, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.0908180173936781, "compression_ratio": 1.7063829787234042, "no_caption_prob": 1.1478178748802748e-05}, {"id": 200, "seek": 84036, "start": 840.36, "end": 846.36, "text": " So if you look at the output of the Elm compiler, the JavaScript it produces, if you look at", "tokens": [50364, 407, 498, 291, 574, 412, 264, 5598, 295, 264, 2699, 76, 31958, 11, 264, 15778, 309, 14725, 11, 498, 291, 574, 412, 50664, 50664, 577, 14949, 307, 12270, 11, 498, 291, 645, 281, 1011, 300, 670, 281, 257, 15778, 10754, 293, 50938, 50938, 584, 775, 341, 2042, 257, 2452, 14949, 1520, 30, 51168, 51168, 400, 415, 576, 584, 572, 11, 456, 366, 9131, 295, 2663, 365, 341, 13, 51334, 51334, 583, 294, 264, 4319, 295, 2699, 76, 11, 309, 1985, 445, 2489, 11, 570, 309, 393, 10687, 322, 264, 1186, 300, 27960, 51614, 51614, 1177, 380, 1051, 293, 613, 7527, 295, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14470705584944965, "compression_ratio": 1.678714859437751, "no_caption_prob": 1.4970066331443377e-05}, {"id": 201, "seek": 84036, "start": 846.36, "end": 851.84, "text": " how equality is implemented, if you were to hand that over to a JavaScript developer and", "tokens": [50364, 407, 498, 291, 574, 412, 264, 5598, 295, 264, 2699, 76, 31958, 11, 264, 15778, 309, 14725, 11, 498, 291, 574, 412, 50664, 50664, 577, 14949, 307, 12270, 11, 498, 291, 645, 281, 1011, 300, 670, 281, 257, 15778, 10754, 293, 50938, 50938, 584, 775, 341, 2042, 257, 2452, 14949, 1520, 30, 51168, 51168, 400, 415, 576, 584, 572, 11, 456, 366, 9131, 295, 2663, 365, 341, 13, 51334, 51334, 583, 294, 264, 4319, 295, 2699, 76, 11, 309, 1985, 445, 2489, 11, 570, 309, 393, 10687, 322, 264, 1186, 300, 27960, 51614, 51614, 1177, 380, 1051, 293, 613, 7527, 295, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14470705584944965, "compression_ratio": 1.678714859437751, "no_caption_prob": 1.4970066331443377e-05}, {"id": 202, "seek": 84036, "start": 851.84, "end": 856.44, "text": " say does this perform a deep equality check?", "tokens": [50364, 407, 498, 291, 574, 412, 264, 5598, 295, 264, 2699, 76, 31958, 11, 264, 15778, 309, 14725, 11, 498, 291, 574, 412, 50664, 50664, 577, 14949, 307, 12270, 11, 498, 291, 645, 281, 1011, 300, 670, 281, 257, 15778, 10754, 293, 50938, 50938, 584, 775, 341, 2042, 257, 2452, 14949, 1520, 30, 51168, 51168, 400, 415, 576, 584, 572, 11, 456, 366, 9131, 295, 2663, 365, 341, 13, 51334, 51334, 583, 294, 264, 4319, 295, 2699, 76, 11, 309, 1985, 445, 2489, 11, 570, 309, 393, 10687, 322, 264, 1186, 300, 27960, 51614, 51614, 1177, 380, 1051, 293, 613, 7527, 295, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14470705584944965, "compression_ratio": 1.678714859437751, "no_caption_prob": 1.4970066331443377e-05}, {"id": 203, "seek": 84036, "start": 856.44, "end": 859.76, "text": " And he would say no, there are tons of issues with this.", "tokens": [50364, 407, 498, 291, 574, 412, 264, 5598, 295, 264, 2699, 76, 31958, 11, 264, 15778, 309, 14725, 11, 498, 291, 574, 412, 50664, 50664, 577, 14949, 307, 12270, 11, 498, 291, 645, 281, 1011, 300, 670, 281, 257, 15778, 10754, 293, 50938, 50938, 584, 775, 341, 2042, 257, 2452, 14949, 1520, 30, 51168, 51168, 400, 415, 576, 584, 572, 11, 456, 366, 9131, 295, 2663, 365, 341, 13, 51334, 51334, 583, 294, 264, 4319, 295, 2699, 76, 11, 309, 1985, 445, 2489, 11, 570, 309, 393, 10687, 322, 264, 1186, 300, 27960, 51614, 51614, 1177, 380, 1051, 293, 613, 7527, 295, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14470705584944965, "compression_ratio": 1.678714859437751, "no_caption_prob": 1.4970066331443377e-05}, {"id": 204, "seek": 84036, "start": 859.76, "end": 865.36, "text": " But in the context of Elm, it works just fine, because it can rely on the fact that mutation", "tokens": [50364, 407, 498, 291, 574, 412, 264, 5598, 295, 264, 2699, 76, 31958, 11, 264, 15778, 309, 14725, 11, 498, 291, 574, 412, 50664, 50664, 577, 14949, 307, 12270, 11, 498, 291, 645, 281, 1011, 300, 670, 281, 257, 15778, 10754, 293, 50938, 50938, 584, 775, 341, 2042, 257, 2452, 14949, 1520, 30, 51168, 51168, 400, 415, 576, 584, 572, 11, 456, 366, 9131, 295, 2663, 365, 341, 13, 51334, 51334, 583, 294, 264, 4319, 295, 2699, 76, 11, 309, 1985, 445, 2489, 11, 570, 309, 393, 10687, 322, 264, 1186, 300, 27960, 51614, 51614, 1177, 380, 1051, 293, 613, 7527, 295, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14470705584944965, "compression_ratio": 1.678714859437751, "no_caption_prob": 1.4970066331443377e-05}, {"id": 205, "seek": 84036, "start": 865.36, "end": 868.36, "text": " doesn't happen and these sorts of things.", "tokens": [50364, 407, 498, 291, 574, 412, 264, 5598, 295, 264, 2699, 76, 31958, 11, 264, 15778, 309, 14725, 11, 498, 291, 574, 412, 50664, 50664, 577, 14949, 307, 12270, 11, 498, 291, 645, 281, 1011, 300, 670, 281, 257, 15778, 10754, 293, 50938, 50938, 584, 775, 341, 2042, 257, 2452, 14949, 1520, 30, 51168, 51168, 400, 415, 576, 584, 572, 11, 456, 366, 9131, 295, 2663, 365, 341, 13, 51334, 51334, 583, 294, 264, 4319, 295, 2699, 76, 11, 309, 1985, 445, 2489, 11, 570, 309, 393, 10687, 322, 264, 1186, 300, 27960, 51614, 51614, 1177, 380, 1051, 293, 613, 7527, 295, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14470705584944965, "compression_ratio": 1.678714859437751, "no_caption_prob": 1.4970066331443377e-05}, {"id": 206, "seek": 86836, "start": 868.36, "end": 872.84, "text": " Like having the same identity, if you have two objects with the same identity, that doesn't", "tokens": [50364, 1743, 1419, 264, 912, 6575, 11, 498, 291, 362, 732, 6565, 365, 264, 912, 6575, 11, 300, 1177, 380, 50588, 50588, 4725, 914, 300, 264, 2657, 6132, 380, 3105, 13, 50740, 50740, 583, 294, 2699, 76, 300, 307, 294, 1186, 2074, 13, 50848, 50848, 407, 456, 311, 257, 3840, 295, 1507, 291, 393, 360, 5276, 439, 264, 14191, 300, 2699, 76, 3190, 322, 291, 13, 51114, 51114, 865, 11, 309, 311, 534, 1880, 13, 51230, 51230, 639, 6968, 2183, 2638, 291, 4114, 466, 26101, 293, 20774, 294, 40425, 2699, 76, 311, 34474, 3389, 11, 51554, 51554, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 11, 291, 751, 257, 688, 466, 4476, 577, 456, 366, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.16438200493820576, "compression_ratio": 1.6805555555555556, "no_caption_prob": 9.515985766483936e-06}, {"id": 207, "seek": 86836, "start": 872.84, "end": 875.88, "text": " necessarily mean that the object hasn't changed.", "tokens": [50364, 1743, 1419, 264, 912, 6575, 11, 498, 291, 362, 732, 6565, 365, 264, 912, 6575, 11, 300, 1177, 380, 50588, 50588, 4725, 914, 300, 264, 2657, 6132, 380, 3105, 13, 50740, 50740, 583, 294, 2699, 76, 300, 307, 294, 1186, 2074, 13, 50848, 50848, 407, 456, 311, 257, 3840, 295, 1507, 291, 393, 360, 5276, 439, 264, 14191, 300, 2699, 76, 3190, 322, 291, 13, 51114, 51114, 865, 11, 309, 311, 534, 1880, 13, 51230, 51230, 639, 6968, 2183, 2638, 291, 4114, 466, 26101, 293, 20774, 294, 40425, 2699, 76, 311, 34474, 3389, 11, 51554, 51554, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 11, 291, 751, 257, 688, 466, 4476, 577, 456, 366, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.16438200493820576, "compression_ratio": 1.6805555555555556, "no_caption_prob": 9.515985766483936e-06}, {"id": 208, "seek": 86836, "start": 875.88, "end": 878.04, "text": " But in Elm that is in fact true.", "tokens": [50364, 1743, 1419, 264, 912, 6575, 11, 498, 291, 362, 732, 6565, 365, 264, 912, 6575, 11, 300, 1177, 380, 50588, 50588, 4725, 914, 300, 264, 2657, 6132, 380, 3105, 13, 50740, 50740, 583, 294, 2699, 76, 300, 307, 294, 1186, 2074, 13, 50848, 50848, 407, 456, 311, 257, 3840, 295, 1507, 291, 393, 360, 5276, 439, 264, 14191, 300, 2699, 76, 3190, 322, 291, 13, 51114, 51114, 865, 11, 309, 311, 534, 1880, 13, 51230, 51230, 639, 6968, 2183, 2638, 291, 4114, 466, 26101, 293, 20774, 294, 40425, 2699, 76, 311, 34474, 3389, 11, 51554, 51554, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 11, 291, 751, 257, 688, 466, 4476, 577, 456, 366, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.16438200493820576, "compression_ratio": 1.6805555555555556, "no_caption_prob": 9.515985766483936e-06}, {"id": 209, "seek": 86836, "start": 878.04, "end": 883.36, "text": " So there's a bunch of stuff you can do knowing all the restrictions that Elm places on you.", "tokens": [50364, 1743, 1419, 264, 912, 6575, 11, 498, 291, 362, 732, 6565, 365, 264, 912, 6575, 11, 300, 1177, 380, 50588, 50588, 4725, 914, 300, 264, 2657, 6132, 380, 3105, 13, 50740, 50740, 583, 294, 2699, 76, 300, 307, 294, 1186, 2074, 13, 50848, 50848, 407, 456, 311, 257, 3840, 295, 1507, 291, 393, 360, 5276, 439, 264, 14191, 300, 2699, 76, 3190, 322, 291, 13, 51114, 51114, 865, 11, 309, 311, 534, 1880, 13, 51230, 51230, 639, 6968, 2183, 2638, 291, 4114, 466, 26101, 293, 20774, 294, 40425, 2699, 76, 311, 34474, 3389, 11, 51554, 51554, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 11, 291, 751, 257, 688, 466, 4476, 577, 456, 366, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.16438200493820576, "compression_ratio": 1.6805555555555556, "no_caption_prob": 9.515985766483936e-06}, {"id": 210, "seek": 86836, "start": 883.36, "end": 885.6800000000001, "text": " Yeah, it's really interesting.", "tokens": [50364, 1743, 1419, 264, 912, 6575, 11, 498, 291, 362, 732, 6565, 365, 264, 912, 6575, 11, 300, 1177, 380, 50588, 50588, 4725, 914, 300, 264, 2657, 6132, 380, 3105, 13, 50740, 50740, 583, 294, 2699, 76, 300, 307, 294, 1186, 2074, 13, 50848, 50848, 407, 456, 311, 257, 3840, 295, 1507, 291, 393, 360, 5276, 439, 264, 14191, 300, 2699, 76, 3190, 322, 291, 13, 51114, 51114, 865, 11, 309, 311, 534, 1880, 13, 51230, 51230, 639, 6968, 2183, 2638, 291, 4114, 466, 26101, 293, 20774, 294, 40425, 2699, 76, 311, 34474, 3389, 11, 51554, 51554, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 11, 291, 751, 257, 688, 466, 4476, 577, 456, 366, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.16438200493820576, "compression_ratio": 1.6805555555555556, "no_caption_prob": 9.515985766483936e-06}, {"id": 211, "seek": 86836, "start": 885.6800000000001, "end": 892.16, "text": " This blog post series you wrote about successes and failures in optimizing Elm's runtime performance,", "tokens": [50364, 1743, 1419, 264, 912, 6575, 11, 498, 291, 362, 732, 6565, 365, 264, 912, 6575, 11, 300, 1177, 380, 50588, 50588, 4725, 914, 300, 264, 2657, 6132, 380, 3105, 13, 50740, 50740, 583, 294, 2699, 76, 300, 307, 294, 1186, 2074, 13, 50848, 50848, 407, 456, 311, 257, 3840, 295, 1507, 291, 393, 360, 5276, 439, 264, 14191, 300, 2699, 76, 3190, 322, 291, 13, 51114, 51114, 865, 11, 309, 311, 534, 1880, 13, 51230, 51230, 639, 6968, 2183, 2638, 291, 4114, 466, 26101, 293, 20774, 294, 40425, 2699, 76, 311, 34474, 3389, 11, 51554, 51554, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 11, 291, 751, 257, 688, 466, 4476, 577, 456, 366, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.16438200493820576, "compression_ratio": 1.6805555555555556, "no_caption_prob": 9.515985766483936e-06}, {"id": 212, "seek": 86836, "start": 892.16, "end": 897.14, "text": " which we'll link to in the show notes, you talk a lot about essentially how there are", "tokens": [50364, 1743, 1419, 264, 912, 6575, 11, 498, 291, 362, 732, 6565, 365, 264, 912, 6575, 11, 300, 1177, 380, 50588, 50588, 4725, 914, 300, 264, 2657, 6132, 380, 3105, 13, 50740, 50740, 583, 294, 2699, 76, 300, 307, 294, 1186, 2074, 13, 50848, 50848, 407, 456, 311, 257, 3840, 295, 1507, 291, 393, 360, 5276, 439, 264, 14191, 300, 2699, 76, 3190, 322, 291, 13, 51114, 51114, 865, 11, 309, 311, 534, 1880, 13, 51230, 51230, 639, 6968, 2183, 2638, 291, 4114, 466, 26101, 293, 20774, 294, 40425, 2699, 76, 311, 34474, 3389, 11, 51554, 51554, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 11, 291, 751, 257, 688, 466, 4476, 577, 456, 366, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.16438200493820576, "compression_ratio": 1.6805555555555556, "no_caption_prob": 9.515985766483936e-06}, {"id": 213, "seek": 89714, "start": 897.14, "end": 902.76, "text": " all these optimizations baked into v8, which really it's sort of like a heuristics based", "tokens": [50364, 439, 613, 5028, 14455, 19453, 666, 371, 23, 11, 597, 534, 309, 311, 1333, 295, 411, 257, 415, 374, 6006, 2361, 50645, 50645, 19618, 11, 558, 30, 50715, 50715, 1436, 641, 15778, 307, 364, 26749, 2856, 13, 50915, 50915, 400, 550, 291, 362, 341, 1333, 295, 445, 294, 565, 31958, 11, 597, 13165, 415, 374, 6006, 11, 597, 51191, 51191, 393, 550, 483, 368, 5747, 332, 1602, 13, 51263, 51263, 663, 311, 983, 436, 434, 415, 374, 6006, 11, 570, 309, 311, 37395, 721, 382, 309, 1709, 293, 1566, 11, 51461, 51461, 1954, 11, 4177, 11, 341, 486, 1391, 652, 309, 2042, 1101, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13197018482066966, "compression_ratio": 1.6788617886178863, "no_caption_prob": 5.225021595833823e-05}, {"id": 214, "seek": 89714, "start": 902.76, "end": 904.16, "text": " optimization, right?", "tokens": [50364, 439, 613, 5028, 14455, 19453, 666, 371, 23, 11, 597, 534, 309, 311, 1333, 295, 411, 257, 415, 374, 6006, 2361, 50645, 50645, 19618, 11, 558, 30, 50715, 50715, 1436, 641, 15778, 307, 364, 26749, 2856, 13, 50915, 50915, 400, 550, 291, 362, 341, 1333, 295, 445, 294, 565, 31958, 11, 597, 13165, 415, 374, 6006, 11, 597, 51191, 51191, 393, 550, 483, 368, 5747, 332, 1602, 13, 51263, 51263, 663, 311, 983, 436, 434, 415, 374, 6006, 11, 570, 309, 311, 37395, 721, 382, 309, 1709, 293, 1566, 11, 51461, 51461, 1954, 11, 4177, 11, 341, 486, 1391, 652, 309, 2042, 1101, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13197018482066966, "compression_ratio": 1.6788617886178863, "no_caption_prob": 5.225021595833823e-05}, {"id": 215, "seek": 89714, "start": 904.16, "end": 908.16, "text": " Because their JavaScript is an interpreted language.", "tokens": [50364, 439, 613, 5028, 14455, 19453, 666, 371, 23, 11, 597, 534, 309, 311, 1333, 295, 411, 257, 415, 374, 6006, 2361, 50645, 50645, 19618, 11, 558, 30, 50715, 50715, 1436, 641, 15778, 307, 364, 26749, 2856, 13, 50915, 50915, 400, 550, 291, 362, 341, 1333, 295, 445, 294, 565, 31958, 11, 597, 13165, 415, 374, 6006, 11, 597, 51191, 51191, 393, 550, 483, 368, 5747, 332, 1602, 13, 51263, 51263, 663, 311, 983, 436, 434, 415, 374, 6006, 11, 570, 309, 311, 37395, 721, 382, 309, 1709, 293, 1566, 11, 51461, 51461, 1954, 11, 4177, 11, 341, 486, 1391, 652, 309, 2042, 1101, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13197018482066966, "compression_ratio": 1.6788617886178863, "no_caption_prob": 5.225021595833823e-05}, {"id": 216, "seek": 89714, "start": 908.16, "end": 913.68, "text": " And then you have this sort of just in time compiler, which applies heuristics, which", "tokens": [50364, 439, 613, 5028, 14455, 19453, 666, 371, 23, 11, 597, 534, 309, 311, 1333, 295, 411, 257, 415, 374, 6006, 2361, 50645, 50645, 19618, 11, 558, 30, 50715, 50715, 1436, 641, 15778, 307, 364, 26749, 2856, 13, 50915, 50915, 400, 550, 291, 362, 341, 1333, 295, 445, 294, 565, 31958, 11, 597, 13165, 415, 374, 6006, 11, 597, 51191, 51191, 393, 550, 483, 368, 5747, 332, 1602, 13, 51263, 51263, 663, 311, 983, 436, 434, 415, 374, 6006, 11, 570, 309, 311, 37395, 721, 382, 309, 1709, 293, 1566, 11, 51461, 51461, 1954, 11, 4177, 11, 341, 486, 1391, 652, 309, 2042, 1101, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13197018482066966, "compression_ratio": 1.6788617886178863, "no_caption_prob": 5.225021595833823e-05}, {"id": 217, "seek": 89714, "start": 913.68, "end": 915.12, "text": " can then get deoptimized.", "tokens": [50364, 439, 613, 5028, 14455, 19453, 666, 371, 23, 11, 597, 534, 309, 311, 1333, 295, 411, 257, 415, 374, 6006, 2361, 50645, 50645, 19618, 11, 558, 30, 50715, 50715, 1436, 641, 15778, 307, 364, 26749, 2856, 13, 50915, 50915, 400, 550, 291, 362, 341, 1333, 295, 445, 294, 565, 31958, 11, 597, 13165, 415, 374, 6006, 11, 597, 51191, 51191, 393, 550, 483, 368, 5747, 332, 1602, 13, 51263, 51263, 663, 311, 983, 436, 434, 415, 374, 6006, 11, 570, 309, 311, 37395, 721, 382, 309, 1709, 293, 1566, 11, 51461, 51461, 1954, 11, 4177, 11, 341, 486, 1391, 652, 309, 2042, 1101, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13197018482066966, "compression_ratio": 1.6788617886178863, "no_caption_prob": 5.225021595833823e-05}, {"id": 218, "seek": 89714, "start": 915.12, "end": 919.08, "text": " That's why they're heuristics, because it's interpreting things as it goes and saying,", "tokens": [50364, 439, 613, 5028, 14455, 19453, 666, 371, 23, 11, 597, 534, 309, 311, 1333, 295, 411, 257, 415, 374, 6006, 2361, 50645, 50645, 19618, 11, 558, 30, 50715, 50715, 1436, 641, 15778, 307, 364, 26749, 2856, 13, 50915, 50915, 400, 550, 291, 362, 341, 1333, 295, 445, 294, 565, 31958, 11, 597, 13165, 415, 374, 6006, 11, 597, 51191, 51191, 393, 550, 483, 368, 5747, 332, 1602, 13, 51263, 51263, 663, 311, 983, 436, 434, 415, 374, 6006, 11, 570, 309, 311, 37395, 721, 382, 309, 1709, 293, 1566, 11, 51461, 51461, 1954, 11, 4177, 11, 341, 486, 1391, 652, 309, 2042, 1101, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13197018482066966, "compression_ratio": 1.6788617886178863, "no_caption_prob": 5.225021595833823e-05}, {"id": 219, "seek": 89714, "start": 919.08, "end": 922.26, "text": " oh, hey, this will probably make it perform better.", "tokens": [50364, 439, 613, 5028, 14455, 19453, 666, 371, 23, 11, 597, 534, 309, 311, 1333, 295, 411, 257, 415, 374, 6006, 2361, 50645, 50645, 19618, 11, 558, 30, 50715, 50715, 1436, 641, 15778, 307, 364, 26749, 2856, 13, 50915, 50915, 400, 550, 291, 362, 341, 1333, 295, 445, 294, 565, 31958, 11, 597, 13165, 415, 374, 6006, 11, 597, 51191, 51191, 393, 550, 483, 368, 5747, 332, 1602, 13, 51263, 51263, 663, 311, 983, 436, 434, 415, 374, 6006, 11, 570, 309, 311, 37395, 721, 382, 309, 1709, 293, 1566, 11, 51461, 51461, 1954, 11, 4177, 11, 341, 486, 1391, 652, 309, 2042, 1101, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13197018482066966, "compression_ratio": 1.6788617886178863, "no_caption_prob": 5.225021595833823e-05}, {"id": 220, "seek": 92226, "start": 922.26, "end": 927.8, "text": " And then it assumes that the shape of an object has these fields.", "tokens": [50364, 400, 550, 309, 37808, 300, 264, 3909, 295, 364, 2657, 575, 613, 7909, 13, 50641, 50641, 400, 550, 5800, 11, 9351, 11, 586, 456, 311, 257, 18184, 294, 456, 300, 309, 994, 380, 2066, 11, 420, 586, 746, 50857, 50857, 307, 257, 6798, 300, 390, 364, 560, 14517, 13, 50981, 50981, 400, 586, 309, 368, 5747, 332, 5660, 13, 51031, 51031, 407, 309, 311, 884, 613, 415, 374, 6006, 13, 51133, 51133, 400, 382, 2618, 884, 613, 3389, 4267, 1109, 294, 2699, 76, 31958, 5598, 11, 291, 434, 884, 341, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08871184004114029, "compression_ratio": 1.6255924170616114, "no_caption_prob": 2.586622395028826e-05}, {"id": 221, "seek": 92226, "start": 927.8, "end": 932.12, "text": " And then suddenly, boom, now there's a null in there that it didn't expect, or now something", "tokens": [50364, 400, 550, 309, 37808, 300, 264, 3909, 295, 364, 2657, 575, 613, 7909, 13, 50641, 50641, 400, 550, 5800, 11, 9351, 11, 586, 456, 311, 257, 18184, 294, 456, 300, 309, 994, 380, 2066, 11, 420, 586, 746, 50857, 50857, 307, 257, 6798, 300, 390, 364, 560, 14517, 13, 50981, 50981, 400, 586, 309, 368, 5747, 332, 5660, 13, 51031, 51031, 407, 309, 311, 884, 613, 415, 374, 6006, 13, 51133, 51133, 400, 382, 2618, 884, 613, 3389, 4267, 1109, 294, 2699, 76, 31958, 5598, 11, 291, 434, 884, 341, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08871184004114029, "compression_ratio": 1.6255924170616114, "no_caption_prob": 2.586622395028826e-05}, {"id": 222, "seek": 92226, "start": 932.12, "end": 934.6, "text": " is a string that was an int elsewhere.", "tokens": [50364, 400, 550, 309, 37808, 300, 264, 3909, 295, 364, 2657, 575, 613, 7909, 13, 50641, 50641, 400, 550, 5800, 11, 9351, 11, 586, 456, 311, 257, 18184, 294, 456, 300, 309, 994, 380, 2066, 11, 420, 586, 746, 50857, 50857, 307, 257, 6798, 300, 390, 364, 560, 14517, 13, 50981, 50981, 400, 586, 309, 368, 5747, 332, 5660, 13, 51031, 51031, 407, 309, 311, 884, 613, 415, 374, 6006, 13, 51133, 51133, 400, 382, 2618, 884, 613, 3389, 4267, 1109, 294, 2699, 76, 31958, 5598, 11, 291, 434, 884, 341, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08871184004114029, "compression_ratio": 1.6255924170616114, "no_caption_prob": 2.586622395028826e-05}, {"id": 223, "seek": 92226, "start": 934.6, "end": 935.6, "text": " And now it deoptimizes.", "tokens": [50364, 400, 550, 309, 37808, 300, 264, 3909, 295, 364, 2657, 575, 613, 7909, 13, 50641, 50641, 400, 550, 5800, 11, 9351, 11, 586, 456, 311, 257, 18184, 294, 456, 300, 309, 994, 380, 2066, 11, 420, 586, 746, 50857, 50857, 307, 257, 6798, 300, 390, 364, 560, 14517, 13, 50981, 50981, 400, 586, 309, 368, 5747, 332, 5660, 13, 51031, 51031, 407, 309, 311, 884, 613, 415, 374, 6006, 13, 51133, 51133, 400, 382, 2618, 884, 613, 3389, 4267, 1109, 294, 2699, 76, 31958, 5598, 11, 291, 434, 884, 341, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08871184004114029, "compression_ratio": 1.6255924170616114, "no_caption_prob": 2.586622395028826e-05}, {"id": 224, "seek": 92226, "start": 935.6, "end": 937.64, "text": " So it's doing these heuristics.", "tokens": [50364, 400, 550, 309, 37808, 300, 264, 3909, 295, 364, 2657, 575, 613, 7909, 13, 50641, 50641, 400, 550, 5800, 11, 9351, 11, 586, 456, 311, 257, 18184, 294, 456, 300, 309, 994, 380, 2066, 11, 420, 586, 746, 50857, 50857, 307, 257, 6798, 300, 390, 364, 560, 14517, 13, 50981, 50981, 400, 586, 309, 368, 5747, 332, 5660, 13, 51031, 51031, 407, 309, 311, 884, 613, 415, 374, 6006, 13, 51133, 51133, 400, 382, 2618, 884, 613, 3389, 4267, 1109, 294, 2699, 76, 31958, 5598, 11, 291, 434, 884, 341, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08871184004114029, "compression_ratio": 1.6255924170616114, "no_caption_prob": 2.586622395028826e-05}, {"id": 225, "seek": 92226, "start": 937.64, "end": 946.26, "text": " And as somebody doing these performance tunings in Elm compiler output, you're doing this", "tokens": [50364, 400, 550, 309, 37808, 300, 264, 3909, 295, 364, 2657, 575, 613, 7909, 13, 50641, 50641, 400, 550, 5800, 11, 9351, 11, 586, 456, 311, 257, 18184, 294, 456, 300, 309, 994, 380, 2066, 11, 420, 586, 746, 50857, 50857, 307, 257, 6798, 300, 390, 364, 560, 14517, 13, 50981, 50981, 400, 586, 309, 368, 5747, 332, 5660, 13, 51031, 51031, 407, 309, 311, 884, 613, 415, 374, 6006, 13, 51133, 51133, 400, 382, 2618, 884, 613, 3389, 4267, 1109, 294, 2699, 76, 31958, 5598, 11, 291, 434, 884, 341, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08871184004114029, "compression_ratio": 1.6255924170616114, "no_caption_prob": 2.586622395028826e-05}, {"id": 226, "seek": 94626, "start": 946.26, "end": 953.4399999999999, "text": " strange work of sort of trying to understand those heuristics and trying to activate the", "tokens": [50364, 5861, 589, 295, 1333, 295, 1382, 281, 1223, 729, 415, 374, 6006, 293, 1382, 281, 13615, 264, 50723, 50723, 415, 374, 6006, 294, 257, 636, 300, 436, 393, 6069, 2699, 76, 13, 50899, 50899, 583, 291, 434, 406, 32884, 309, 13, 50983, 50983, 509, 458, 309, 570, 309, 311, 2219, 984, 36548, 3089, 13, 51186, 51186, 583, 291, 434, 1382, 281, 483, 341, 411, 445, 294, 565, 19618, 281, 4437, 294, 294, 729, 3190, 13, 51487, 51487, 407, 309, 311, 411, 257, 3657, 309, 311, 257, 3657, 4489, 11, 1943, 380, 309, 30, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.18250347412738605, "compression_ratio": 1.6713615023474178, "no_caption_prob": 5.828699795529246e-05}, {"id": 227, "seek": 94626, "start": 953.4399999999999, "end": 956.96, "text": " heuristics in a way that they can predict Elm.", "tokens": [50364, 5861, 589, 295, 1333, 295, 1382, 281, 1223, 729, 415, 374, 6006, 293, 1382, 281, 13615, 264, 50723, 50723, 415, 374, 6006, 294, 257, 636, 300, 436, 393, 6069, 2699, 76, 13, 50899, 50899, 583, 291, 434, 406, 32884, 309, 13, 50983, 50983, 509, 458, 309, 570, 309, 311, 2219, 984, 36548, 3089, 13, 51186, 51186, 583, 291, 434, 1382, 281, 483, 341, 411, 445, 294, 565, 19618, 281, 4437, 294, 294, 729, 3190, 13, 51487, 51487, 407, 309, 311, 411, 257, 3657, 309, 311, 257, 3657, 4489, 11, 1943, 380, 309, 30, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.18250347412738605, "compression_ratio": 1.6713615023474178, "no_caption_prob": 5.828699795529246e-05}, {"id": 228, "seek": 94626, "start": 956.96, "end": 958.64, "text": " But you're not predicting it.", "tokens": [50364, 5861, 589, 295, 1333, 295, 1382, 281, 1223, 729, 415, 374, 6006, 293, 1382, 281, 13615, 264, 50723, 50723, 415, 374, 6006, 294, 257, 636, 300, 436, 393, 6069, 2699, 76, 13, 50899, 50899, 583, 291, 434, 406, 32884, 309, 13, 50983, 50983, 509, 458, 309, 570, 309, 311, 2219, 984, 36548, 3089, 13, 51186, 51186, 583, 291, 434, 1382, 281, 483, 341, 411, 445, 294, 565, 19618, 281, 4437, 294, 294, 729, 3190, 13, 51487, 51487, 407, 309, 311, 411, 257, 3657, 309, 311, 257, 3657, 4489, 11, 1943, 380, 309, 30, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.18250347412738605, "compression_ratio": 1.6713615023474178, "no_caption_prob": 5.828699795529246e-05}, {"id": 229, "seek": 94626, "start": 958.64, "end": 962.7, "text": " You know it because it's statically compiled code.", "tokens": [50364, 5861, 589, 295, 1333, 295, 1382, 281, 1223, 729, 415, 374, 6006, 293, 1382, 281, 13615, 264, 50723, 50723, 415, 374, 6006, 294, 257, 636, 300, 436, 393, 6069, 2699, 76, 13, 50899, 50899, 583, 291, 434, 406, 32884, 309, 13, 50983, 50983, 509, 458, 309, 570, 309, 311, 2219, 984, 36548, 3089, 13, 51186, 51186, 583, 291, 434, 1382, 281, 483, 341, 411, 445, 294, 565, 19618, 281, 4437, 294, 294, 729, 3190, 13, 51487, 51487, 407, 309, 311, 411, 257, 3657, 309, 311, 257, 3657, 4489, 11, 1943, 380, 309, 30, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.18250347412738605, "compression_ratio": 1.6713615023474178, "no_caption_prob": 5.828699795529246e-05}, {"id": 230, "seek": 94626, "start": 962.7, "end": 968.72, "text": " But you're trying to get this like just in time optimization to kick in in those places.", "tokens": [50364, 5861, 589, 295, 1333, 295, 1382, 281, 1223, 729, 415, 374, 6006, 293, 1382, 281, 13615, 264, 50723, 50723, 415, 374, 6006, 294, 257, 636, 300, 436, 393, 6069, 2699, 76, 13, 50899, 50899, 583, 291, 434, 406, 32884, 309, 13, 50983, 50983, 509, 458, 309, 570, 309, 311, 2219, 984, 36548, 3089, 13, 51186, 51186, 583, 291, 434, 1382, 281, 483, 341, 411, 445, 294, 565, 19618, 281, 4437, 294, 294, 729, 3190, 13, 51487, 51487, 407, 309, 311, 411, 257, 3657, 309, 311, 257, 3657, 4489, 11, 1943, 380, 309, 30, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.18250347412738605, "compression_ratio": 1.6713615023474178, "no_caption_prob": 5.828699795529246e-05}, {"id": 231, "seek": 94626, "start": 968.72, "end": 972.08, "text": " So it's like a weird it's a weird dance, isn't it?", "tokens": [50364, 5861, 589, 295, 1333, 295, 1382, 281, 1223, 729, 415, 374, 6006, 293, 1382, 281, 13615, 264, 50723, 50723, 415, 374, 6006, 294, 257, 636, 300, 436, 393, 6069, 2699, 76, 13, 50899, 50899, 583, 291, 434, 406, 32884, 309, 13, 50983, 50983, 509, 458, 309, 570, 309, 311, 2219, 984, 36548, 3089, 13, 51186, 51186, 583, 291, 434, 1382, 281, 483, 341, 411, 445, 294, 565, 19618, 281, 4437, 294, 294, 729, 3190, 13, 51487, 51487, 407, 309, 311, 411, 257, 3657, 309, 311, 257, 3657, 4489, 11, 1943, 380, 309, 30, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.18250347412738605, "compression_ratio": 1.6713615023474178, "no_caption_prob": 5.828699795529246e-05}, {"id": 232, "seek": 97208, "start": 972.08, "end": 978.12, "text": " Yeah, so like and that really boils down to the fact that the just in time compiler understands", "tokens": [50364, 865, 11, 370, 411, 293, 300, 534, 35049, 760, 281, 264, 1186, 300, 264, 445, 294, 565, 31958, 15146, 50666, 50666, 15778, 588, 11, 588, 731, 293, 575, 281, 2696, 337, 439, 341, 1333, 295, 1507, 370, 291, 393, 360, 294, 50910, 50910, 15778, 13, 50973, 50973, 400, 456, 366, 1629, 721, 300, 291, 393, 380, 360, 294, 2699, 76, 293, 1629, 721, 291, 393, 360, 11, 597, 51190, 51190, 264, 15778, 445, 294, 565, 31958, 8195, 575, 572, 3601, 466, 13, 51387, 51387, 407, 534, 257, 688, 295, 264, 1507, 300, 286, 600, 1096, 365, 341, 3389, 589, 307, 370, 2699, 76, 1669, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12513296692459672, "compression_ratio": 1.7768924302788844, "no_caption_prob": 2.6687022909754887e-05}, {"id": 233, "seek": 97208, "start": 978.12, "end": 983.0, "text": " JavaScript very, very well and has to account for all this sort of stuff so you can do in", "tokens": [50364, 865, 11, 370, 411, 293, 300, 534, 35049, 760, 281, 264, 1186, 300, 264, 445, 294, 565, 31958, 15146, 50666, 50666, 15778, 588, 11, 588, 731, 293, 575, 281, 2696, 337, 439, 341, 1333, 295, 1507, 370, 291, 393, 360, 294, 50910, 50910, 15778, 13, 50973, 50973, 400, 456, 366, 1629, 721, 300, 291, 393, 380, 360, 294, 2699, 76, 293, 1629, 721, 291, 393, 360, 11, 597, 51190, 51190, 264, 15778, 445, 294, 565, 31958, 8195, 575, 572, 3601, 466, 13, 51387, 51387, 407, 534, 257, 688, 295, 264, 1507, 300, 286, 600, 1096, 365, 341, 3389, 589, 307, 370, 2699, 76, 1669, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12513296692459672, "compression_ratio": 1.7768924302788844, "no_caption_prob": 2.6687022909754887e-05}, {"id": 234, "seek": 97208, "start": 983.0, "end": 984.26, "text": " JavaScript.", "tokens": [50364, 865, 11, 370, 411, 293, 300, 534, 35049, 760, 281, 264, 1186, 300, 264, 445, 294, 565, 31958, 15146, 50666, 50666, 15778, 588, 11, 588, 731, 293, 575, 281, 2696, 337, 439, 341, 1333, 295, 1507, 370, 291, 393, 360, 294, 50910, 50910, 15778, 13, 50973, 50973, 400, 456, 366, 1629, 721, 300, 291, 393, 380, 360, 294, 2699, 76, 293, 1629, 721, 291, 393, 360, 11, 597, 51190, 51190, 264, 15778, 445, 294, 565, 31958, 8195, 575, 572, 3601, 466, 13, 51387, 51387, 407, 534, 257, 688, 295, 264, 1507, 300, 286, 600, 1096, 365, 341, 3389, 589, 307, 370, 2699, 76, 1669, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12513296692459672, "compression_ratio": 1.7768924302788844, "no_caption_prob": 2.6687022909754887e-05}, {"id": 235, "seek": 97208, "start": 984.26, "end": 988.6, "text": " And there are certain things that you can't do in Elm and certain things you can do, which", "tokens": [50364, 865, 11, 370, 411, 293, 300, 534, 35049, 760, 281, 264, 1186, 300, 264, 445, 294, 565, 31958, 15146, 50666, 50666, 15778, 588, 11, 588, 731, 293, 575, 281, 2696, 337, 439, 341, 1333, 295, 1507, 370, 291, 393, 360, 294, 50910, 50910, 15778, 13, 50973, 50973, 400, 456, 366, 1629, 721, 300, 291, 393, 380, 360, 294, 2699, 76, 293, 1629, 721, 291, 393, 360, 11, 597, 51190, 51190, 264, 15778, 445, 294, 565, 31958, 8195, 575, 572, 3601, 466, 13, 51387, 51387, 407, 534, 257, 688, 295, 264, 1507, 300, 286, 600, 1096, 365, 341, 3389, 589, 307, 370, 2699, 76, 1669, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12513296692459672, "compression_ratio": 1.7768924302788844, "no_caption_prob": 2.6687022909754887e-05}, {"id": 236, "seek": 97208, "start": 988.6, "end": 992.5400000000001, "text": " the JavaScript just in time compiler naturally has no knowledge about.", "tokens": [50364, 865, 11, 370, 411, 293, 300, 534, 35049, 760, 281, 264, 1186, 300, 264, 445, 294, 565, 31958, 15146, 50666, 50666, 15778, 588, 11, 588, 731, 293, 575, 281, 2696, 337, 439, 341, 1333, 295, 1507, 370, 291, 393, 360, 294, 50910, 50910, 15778, 13, 50973, 50973, 400, 456, 366, 1629, 721, 300, 291, 393, 380, 360, 294, 2699, 76, 293, 1629, 721, 291, 393, 360, 11, 597, 51190, 51190, 264, 15778, 445, 294, 565, 31958, 8195, 575, 572, 3601, 466, 13, 51387, 51387, 407, 534, 257, 688, 295, 264, 1507, 300, 286, 600, 1096, 365, 341, 3389, 589, 307, 370, 2699, 76, 1669, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12513296692459672, "compression_ratio": 1.7768924302788844, "no_caption_prob": 2.6687022909754887e-05}, {"id": 237, "seek": 97208, "start": 992.5400000000001, "end": 999.46, "text": " So really a lot of the stuff that I've done with this performance work is so Elm makes", "tokens": [50364, 865, 11, 370, 411, 293, 300, 534, 35049, 760, 281, 264, 1186, 300, 264, 445, 294, 565, 31958, 15146, 50666, 50666, 15778, 588, 11, 588, 731, 293, 575, 281, 2696, 337, 439, 341, 1333, 295, 1507, 370, 291, 393, 360, 294, 50910, 50910, 15778, 13, 50973, 50973, 400, 456, 366, 1629, 721, 300, 291, 393, 380, 360, 294, 2699, 76, 293, 1629, 721, 291, 393, 360, 11, 597, 51190, 51190, 264, 15778, 445, 294, 565, 31958, 8195, 575, 572, 3601, 466, 13, 51387, 51387, 407, 534, 257, 688, 295, 264, 1507, 300, 286, 600, 1096, 365, 341, 3389, 589, 307, 370, 2699, 76, 1669, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12513296692459672, "compression_ratio": 1.7768924302788844, "no_caption_prob": 2.6687022909754887e-05}, {"id": 238, "seek": 99946, "start": 999.46, "end": 1003.5, "text": " it so that these things are always true.", "tokens": [50364, 309, 370, 300, 613, 721, 366, 1009, 2074, 13, 50566, 50566, 1012, 393, 286, 980, 300, 281, 264, 15778, 445, 294, 565, 31958, 30, 50755, 50755, 1012, 393, 286, 652, 257, 15778, 2848, 1223, 613, 721, 30, 50988, 50988, 400, 300, 307, 2171, 588, 1152, 13, 51245, 51245, 286, 767, 362, 572, 13602, 577, 291, 576, 360, 300, 13, 51357, 51357, 1119, 309, 445, 291, 2464, 291, 4088, 264, 3089, 281, 746, 300, 307, 7226, 2199, 420, 51638, 51638, 746, 411, 300, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1471279078516467, "compression_ratio": 1.7142857142857142, "no_caption_prob": 8.800930118013639e-06}, {"id": 239, "seek": 99946, "start": 1003.5, "end": 1007.2800000000001, "text": " How can I tell that to the JavaScript just in time compiler?", "tokens": [50364, 309, 370, 300, 613, 721, 366, 1009, 2074, 13, 50566, 50566, 1012, 393, 286, 980, 300, 281, 264, 15778, 445, 294, 565, 31958, 30, 50755, 50755, 1012, 393, 286, 652, 257, 15778, 2848, 1223, 613, 721, 30, 50988, 50988, 400, 300, 307, 2171, 588, 1152, 13, 51245, 51245, 286, 767, 362, 572, 13602, 577, 291, 576, 360, 300, 13, 51357, 51357, 1119, 309, 445, 291, 2464, 291, 4088, 264, 3089, 281, 746, 300, 307, 7226, 2199, 420, 51638, 51638, 746, 411, 300, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1471279078516467, "compression_ratio": 1.7142857142857142, "no_caption_prob": 8.800930118013639e-06}, {"id": 240, "seek": 99946, "start": 1007.2800000000001, "end": 1011.94, "text": " How can I make a JavaScript engine understand these things?", "tokens": [50364, 309, 370, 300, 613, 721, 366, 1009, 2074, 13, 50566, 50566, 1012, 393, 286, 980, 300, 281, 264, 15778, 445, 294, 565, 31958, 30, 50755, 50755, 1012, 393, 286, 652, 257, 15778, 2848, 1223, 613, 721, 30, 50988, 50988, 400, 300, 307, 2171, 588, 1152, 13, 51245, 51245, 286, 767, 362, 572, 13602, 577, 291, 576, 360, 300, 13, 51357, 51357, 1119, 309, 445, 291, 2464, 291, 4088, 264, 3089, 281, 746, 300, 307, 7226, 2199, 420, 51638, 51638, 746, 411, 300, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1471279078516467, "compression_ratio": 1.7142857142857142, "no_caption_prob": 8.800930118013639e-06}, {"id": 241, "seek": 99946, "start": 1011.94, "end": 1017.08, "text": " And that is sometimes very hard.", "tokens": [50364, 309, 370, 300, 613, 721, 366, 1009, 2074, 13, 50566, 50566, 1012, 393, 286, 980, 300, 281, 264, 15778, 445, 294, 565, 31958, 30, 50755, 50755, 1012, 393, 286, 652, 257, 15778, 2848, 1223, 613, 721, 30, 50988, 50988, 400, 300, 307, 2171, 588, 1152, 13, 51245, 51245, 286, 767, 362, 572, 13602, 577, 291, 576, 360, 300, 13, 51357, 51357, 1119, 309, 445, 291, 2464, 291, 4088, 264, 3089, 281, 746, 300, 307, 7226, 2199, 420, 51638, 51638, 746, 411, 300, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1471279078516467, "compression_ratio": 1.7142857142857142, "no_caption_prob": 8.800930118013639e-06}, {"id": 242, "seek": 99946, "start": 1017.08, "end": 1019.32, "text": " I actually have no clue how you would do that.", "tokens": [50364, 309, 370, 300, 613, 721, 366, 1009, 2074, 13, 50566, 50566, 1012, 393, 286, 980, 300, 281, 264, 15778, 445, 294, 565, 31958, 30, 50755, 50755, 1012, 393, 286, 652, 257, 15778, 2848, 1223, 613, 721, 30, 50988, 50988, 400, 300, 307, 2171, 588, 1152, 13, 51245, 51245, 286, 767, 362, 572, 13602, 577, 291, 576, 360, 300, 13, 51357, 51357, 1119, 309, 445, 291, 2464, 291, 4088, 264, 3089, 281, 746, 300, 307, 7226, 2199, 420, 51638, 51638, 746, 411, 300, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1471279078516467, "compression_ratio": 1.7142857142857142, "no_caption_prob": 8.800930118013639e-06}, {"id": 243, "seek": 99946, "start": 1019.32, "end": 1024.94, "text": " Is it just you write you transform the code to something that is relatively simple or", "tokens": [50364, 309, 370, 300, 613, 721, 366, 1009, 2074, 13, 50566, 50566, 1012, 393, 286, 980, 300, 281, 264, 15778, 445, 294, 565, 31958, 30, 50755, 50755, 1012, 393, 286, 652, 257, 15778, 2848, 1223, 613, 721, 30, 50988, 50988, 400, 300, 307, 2171, 588, 1152, 13, 51245, 51245, 286, 767, 362, 572, 13602, 577, 291, 576, 360, 300, 13, 51357, 51357, 1119, 309, 445, 291, 2464, 291, 4088, 264, 3089, 281, 746, 300, 307, 7226, 2199, 420, 51638, 51638, 746, 411, 300, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1471279078516467, "compression_ratio": 1.7142857142857142, "no_caption_prob": 8.800930118013639e-06}, {"id": 244, "seek": 99946, "start": 1024.94, "end": 1025.94, "text": " something like that?", "tokens": [50364, 309, 370, 300, 613, 721, 366, 1009, 2074, 13, 50566, 50566, 1012, 393, 286, 980, 300, 281, 264, 15778, 445, 294, 565, 31958, 30, 50755, 50755, 1012, 393, 286, 652, 257, 15778, 2848, 1223, 613, 721, 30, 50988, 50988, 400, 300, 307, 2171, 588, 1152, 13, 51245, 51245, 286, 767, 362, 572, 13602, 577, 291, 576, 360, 300, 13, 51357, 51357, 1119, 309, 445, 291, 2464, 291, 4088, 264, 3089, 281, 746, 300, 307, 7226, 2199, 420, 51638, 51638, 746, 411, 300, 30, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1471279078516467, "compression_ratio": 1.7142857142857142, "no_caption_prob": 8.800930118013639e-06}, {"id": 245, "seek": 102594, "start": 1025.94, "end": 1033.56, "text": " Yeah, so like so one thing that the Elm compiler does today, which is which wasn't which was", "tokens": [50364, 865, 11, 370, 411, 370, 472, 551, 300, 264, 2699, 76, 31958, 775, 965, 11, 597, 307, 597, 2067, 380, 597, 390, 50745, 50745, 7993, 1096, 281, 5407, 11999, 2744, 11, 457, 597, 575, 257, 588, 1627, 3389, 5121, 11, 51102, 51102, 307, 300, 562, 309, 15700, 428, 2302, 2699, 76, 1716, 715, 4680, 666, 15778, 11, 309, 715, 4680, 439, 51411, 51411, 428, 2699, 76, 3089, 293, 439, 264, 36606, 293, 264, 4965, 6405, 11, 264, 34474, 11, 1203, 51644, 51644, 666, 472, 2167, 5288, 17940, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1562340674193009, "compression_ratio": 1.6535087719298245, "no_caption_prob": 1.834204886108637e-05}, {"id": 246, "seek": 102594, "start": 1033.56, "end": 1040.7, "text": " originally done to reduce asset size, but which has a very cool performance benefit,", "tokens": [50364, 865, 11, 370, 411, 370, 472, 551, 300, 264, 2699, 76, 31958, 775, 965, 11, 597, 307, 597, 2067, 380, 597, 390, 50745, 50745, 7993, 1096, 281, 5407, 11999, 2744, 11, 457, 597, 575, 257, 588, 1627, 3389, 5121, 11, 51102, 51102, 307, 300, 562, 309, 15700, 428, 2302, 2699, 76, 1716, 715, 4680, 666, 15778, 11, 309, 715, 4680, 439, 51411, 51411, 428, 2699, 76, 3089, 293, 439, 264, 36606, 293, 264, 4965, 6405, 11, 264, 34474, 11, 1203, 51644, 51644, 666, 472, 2167, 5288, 17940, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1562340674193009, "compression_ratio": 1.6535087719298245, "no_caption_prob": 1.834204886108637e-05}, {"id": 247, "seek": 102594, "start": 1040.7, "end": 1046.88, "text": " is that when it reads your entire Elm project compiles into JavaScript, it compiles all", "tokens": [50364, 865, 11, 370, 411, 370, 472, 551, 300, 264, 2699, 76, 31958, 775, 965, 11, 597, 307, 597, 2067, 380, 597, 390, 50745, 50745, 7993, 1096, 281, 5407, 11999, 2744, 11, 457, 597, 575, 257, 588, 1627, 3389, 5121, 11, 51102, 51102, 307, 300, 562, 309, 15700, 428, 2302, 2699, 76, 1716, 715, 4680, 666, 15778, 11, 309, 715, 4680, 439, 51411, 51411, 428, 2699, 76, 3089, 293, 439, 264, 36606, 293, 264, 4965, 6405, 11, 264, 34474, 11, 1203, 51644, 51644, 666, 472, 2167, 5288, 17940, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1562340674193009, "compression_ratio": 1.6535087719298245, "no_caption_prob": 1.834204886108637e-05}, {"id": 248, "seek": 102594, "start": 1046.88, "end": 1051.54, "text": " your Elm code and all the dependencies and the core library, the runtime, everything", "tokens": [50364, 865, 11, 370, 411, 370, 472, 551, 300, 264, 2699, 76, 31958, 775, 965, 11, 597, 307, 597, 2067, 380, 597, 390, 50745, 50745, 7993, 1096, 281, 5407, 11999, 2744, 11, 457, 597, 575, 257, 588, 1627, 3389, 5121, 11, 51102, 51102, 307, 300, 562, 309, 15700, 428, 2302, 2699, 76, 1716, 715, 4680, 666, 15778, 11, 309, 715, 4680, 439, 51411, 51411, 428, 2699, 76, 3089, 293, 439, 264, 36606, 293, 264, 4965, 6405, 11, 264, 34474, 11, 1203, 51644, 51644, 666, 472, 2167, 5288, 17940, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1562340674193009, "compression_ratio": 1.6535087719298245, "no_caption_prob": 1.834204886108637e-05}, {"id": 249, "seek": 102594, "start": 1051.54, "end": 1054.3200000000002, "text": " into one single namespace.", "tokens": [50364, 865, 11, 370, 411, 370, 472, 551, 300, 264, 2699, 76, 31958, 775, 965, 11, 597, 307, 597, 2067, 380, 597, 390, 50745, 50745, 7993, 1096, 281, 5407, 11999, 2744, 11, 457, 597, 575, 257, 588, 1627, 3389, 5121, 11, 51102, 51102, 307, 300, 562, 309, 15700, 428, 2302, 2699, 76, 1716, 715, 4680, 666, 15778, 11, 309, 715, 4680, 439, 51411, 51411, 428, 2699, 76, 3089, 293, 439, 264, 36606, 293, 264, 4965, 6405, 11, 264, 34474, 11, 1203, 51644, 51644, 666, 472, 2167, 5288, 17940, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1562340674193009, "compression_ratio": 1.6535087719298245, "no_caption_prob": 1.834204886108637e-05}, {"id": 250, "seek": 105432, "start": 1054.32, "end": 1059.6, "text": " And when you call functions, and if you don't run this through Elm optimize level two, if", "tokens": [50364, 400, 562, 291, 818, 6828, 11, 293, 498, 291, 500, 380, 1190, 341, 807, 2699, 76, 19719, 1496, 732, 11, 498, 50628, 50628, 291, 498, 291, 818, 2167, 6713, 6828, 11, 550, 456, 366, 732, 721, 300, 1487, 484, 295, 341, 13, 50984, 50984, 1485, 307, 300, 291, 393, 536, 264, 2445, 294, 11923, 13, 51132, 51132, 400, 370, 309, 3255, 300, 264, 2445, 2644, 312, 572, 570, 309, 311, 558, 456, 13, 51372, 51372, 400, 1150, 295, 439, 11, 309, 3255, 300, 309, 311, 767, 257, 2445, 293, 406, 512, 3219, 25509, 551, 51648, 51648, 300, 25509, 281, 257, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17310191100498415, "compression_ratio": 1.8672566371681416, "no_caption_prob": 2.7263977244729176e-06}, {"id": 251, "seek": 105432, "start": 1059.6, "end": 1066.72, "text": " you if you call single error functions, then there are two things that comes out of this.", "tokens": [50364, 400, 562, 291, 818, 6828, 11, 293, 498, 291, 500, 380, 1190, 341, 807, 2699, 76, 19719, 1496, 732, 11, 498, 50628, 50628, 291, 498, 291, 818, 2167, 6713, 6828, 11, 550, 456, 366, 732, 721, 300, 1487, 484, 295, 341, 13, 50984, 50984, 1485, 307, 300, 291, 393, 536, 264, 2445, 294, 11923, 13, 51132, 51132, 400, 370, 309, 3255, 300, 264, 2445, 2644, 312, 572, 570, 309, 311, 558, 456, 13, 51372, 51372, 400, 1150, 295, 439, 11, 309, 3255, 300, 309, 311, 767, 257, 2445, 293, 406, 512, 3219, 25509, 551, 51648, 51648, 300, 25509, 281, 257, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17310191100498415, "compression_ratio": 1.8672566371681416, "no_caption_prob": 2.7263977244729176e-06}, {"id": 252, "seek": 105432, "start": 1066.72, "end": 1069.6799999999998, "text": " One is that you can see the function in scope.", "tokens": [50364, 400, 562, 291, 818, 6828, 11, 293, 498, 291, 500, 380, 1190, 341, 807, 2699, 76, 19719, 1496, 732, 11, 498, 50628, 50628, 291, 498, 291, 818, 2167, 6713, 6828, 11, 550, 456, 366, 732, 721, 300, 1487, 484, 295, 341, 13, 50984, 50984, 1485, 307, 300, 291, 393, 536, 264, 2445, 294, 11923, 13, 51132, 51132, 400, 370, 309, 3255, 300, 264, 2445, 2644, 312, 572, 570, 309, 311, 558, 456, 13, 51372, 51372, 400, 1150, 295, 439, 11, 309, 3255, 300, 309, 311, 767, 257, 2445, 293, 406, 512, 3219, 25509, 551, 51648, 51648, 300, 25509, 281, 257, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17310191100498415, "compression_ratio": 1.8672566371681416, "no_caption_prob": 2.7263977244729176e-06}, {"id": 253, "seek": 105432, "start": 1069.6799999999998, "end": 1074.48, "text": " And so it knows that the function cannot be no because it's right there.", "tokens": [50364, 400, 562, 291, 818, 6828, 11, 293, 498, 291, 500, 380, 1190, 341, 807, 2699, 76, 19719, 1496, 732, 11, 498, 50628, 50628, 291, 498, 291, 818, 2167, 6713, 6828, 11, 550, 456, 366, 732, 721, 300, 1487, 484, 295, 341, 13, 50984, 50984, 1485, 307, 300, 291, 393, 536, 264, 2445, 294, 11923, 13, 51132, 51132, 400, 370, 309, 3255, 300, 264, 2445, 2644, 312, 572, 570, 309, 311, 558, 456, 13, 51372, 51372, 400, 1150, 295, 439, 11, 309, 3255, 300, 309, 311, 767, 257, 2445, 293, 406, 512, 3219, 25509, 551, 51648, 51648, 300, 25509, 281, 257, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17310191100498415, "compression_ratio": 1.8672566371681416, "no_caption_prob": 2.7263977244729176e-06}, {"id": 254, "seek": 105432, "start": 1074.48, "end": 1080.0, "text": " And second of all, it knows that it's actually a function and not some crazy evaluated thing", "tokens": [50364, 400, 562, 291, 818, 6828, 11, 293, 498, 291, 500, 380, 1190, 341, 807, 2699, 76, 19719, 1496, 732, 11, 498, 50628, 50628, 291, 498, 291, 818, 2167, 6713, 6828, 11, 550, 456, 366, 732, 721, 300, 1487, 484, 295, 341, 13, 50984, 50984, 1485, 307, 300, 291, 393, 536, 264, 2445, 294, 11923, 13, 51132, 51132, 400, 370, 309, 3255, 300, 264, 2445, 2644, 312, 572, 570, 309, 311, 558, 456, 13, 51372, 51372, 400, 1150, 295, 439, 11, 309, 3255, 300, 309, 311, 767, 257, 2445, 293, 406, 512, 3219, 25509, 551, 51648, 51648, 300, 25509, 281, 257, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17310191100498415, "compression_ratio": 1.8672566371681416, "no_caption_prob": 2.7263977244729176e-06}, {"id": 255, "seek": 105432, "start": 1080.0, "end": 1081.9199999999998, "text": " that evaluated to a function.", "tokens": [50364, 400, 562, 291, 818, 6828, 11, 293, 498, 291, 500, 380, 1190, 341, 807, 2699, 76, 19719, 1496, 732, 11, 498, 50628, 50628, 291, 498, 291, 818, 2167, 6713, 6828, 11, 550, 456, 366, 732, 721, 300, 1487, 484, 295, 341, 13, 50984, 50984, 1485, 307, 300, 291, 393, 536, 264, 2445, 294, 11923, 13, 51132, 51132, 400, 370, 309, 3255, 300, 264, 2445, 2644, 312, 572, 570, 309, 311, 558, 456, 13, 51372, 51372, 400, 1150, 295, 439, 11, 309, 3255, 300, 309, 311, 767, 257, 2445, 293, 406, 512, 3219, 25509, 551, 51648, 51648, 300, 25509, 281, 257, 2445, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17310191100498415, "compression_ratio": 1.8672566371681416, "no_caption_prob": 2.7263977244729176e-06}, {"id": 256, "seek": 108192, "start": 1081.92, "end": 1088.16, "text": " So by having functions in the same scope, and readily available, the JavaScript engine", "tokens": [50364, 407, 538, 1419, 6828, 294, 264, 912, 11923, 11, 293, 26336, 2435, 11, 264, 15778, 2848, 50676, 50676, 393, 13596, 257, 8830, 2372, 295, 721, 466, 300, 2445, 13, 50860, 50860, 467, 1177, 380, 362, 281, 574, 309, 493, 294, 264, 4910, 420, 4338, 11, 337, 5197, 11, 300, 576, 362, 257, 51118, 51118, 3389, 2063, 13, 51170, 51170, 400, 370, 264, 3303, 636, 281, 360, 5288, 79, 5615, 294, 2699, 76, 307, 281, 1884, 364, 2657, 365, 1629, 7909, 51495, 51495, 293, 300, 729, 7909, 935, 281, 6828, 11, 584, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1411513884862264, "compression_ratio": 1.5918367346938775, "no_caption_prob": 2.8852136892965063e-05}, {"id": 257, "seek": 108192, "start": 1088.16, "end": 1091.8400000000001, "text": " can infer a surprising amount of things about that function.", "tokens": [50364, 407, 538, 1419, 6828, 294, 264, 912, 11923, 11, 293, 26336, 2435, 11, 264, 15778, 2848, 50676, 50676, 393, 13596, 257, 8830, 2372, 295, 721, 466, 300, 2445, 13, 50860, 50860, 467, 1177, 380, 362, 281, 574, 309, 493, 294, 264, 4910, 420, 4338, 11, 337, 5197, 11, 300, 576, 362, 257, 51118, 51118, 3389, 2063, 13, 51170, 51170, 400, 370, 264, 3303, 636, 281, 360, 5288, 79, 5615, 294, 2699, 76, 307, 281, 1884, 364, 2657, 365, 1629, 7909, 51495, 51495, 293, 300, 729, 7909, 935, 281, 6828, 11, 584, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1411513884862264, "compression_ratio": 1.5918367346938775, "no_caption_prob": 2.8852136892965063e-05}, {"id": 258, "seek": 108192, "start": 1091.8400000000001, "end": 1097.0, "text": " It doesn't have to look it up in the window or global, for instance, that would have a", "tokens": [50364, 407, 538, 1419, 6828, 294, 264, 912, 11923, 11, 293, 26336, 2435, 11, 264, 15778, 2848, 50676, 50676, 393, 13596, 257, 8830, 2372, 295, 721, 466, 300, 2445, 13, 50860, 50860, 467, 1177, 380, 362, 281, 574, 309, 493, 294, 264, 4910, 420, 4338, 11, 337, 5197, 11, 300, 576, 362, 257, 51118, 51118, 3389, 2063, 13, 51170, 51170, 400, 370, 264, 3303, 636, 281, 360, 5288, 79, 5615, 294, 2699, 76, 307, 281, 1884, 364, 2657, 365, 1629, 7909, 51495, 51495, 293, 300, 729, 7909, 935, 281, 6828, 11, 584, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1411513884862264, "compression_ratio": 1.5918367346938775, "no_caption_prob": 2.8852136892965063e-05}, {"id": 259, "seek": 108192, "start": 1097.0, "end": 1098.04, "text": " performance cost.", "tokens": [50364, 407, 538, 1419, 6828, 294, 264, 912, 11923, 11, 293, 26336, 2435, 11, 264, 15778, 2848, 50676, 50676, 393, 13596, 257, 8830, 2372, 295, 721, 466, 300, 2445, 13, 50860, 50860, 467, 1177, 380, 362, 281, 574, 309, 493, 294, 264, 4910, 420, 4338, 11, 337, 5197, 11, 300, 576, 362, 257, 51118, 51118, 3389, 2063, 13, 51170, 51170, 400, 370, 264, 3303, 636, 281, 360, 5288, 79, 5615, 294, 2699, 76, 307, 281, 1884, 364, 2657, 365, 1629, 7909, 51495, 51495, 293, 300, 729, 7909, 935, 281, 6828, 11, 584, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1411513884862264, "compression_ratio": 1.5918367346938775, "no_caption_prob": 2.8852136892965063e-05}, {"id": 260, "seek": 108192, "start": 1098.04, "end": 1104.54, "text": " And so the natural way to do namespacing in Elm is to create an object with certain fields", "tokens": [50364, 407, 538, 1419, 6828, 294, 264, 912, 11923, 11, 293, 26336, 2435, 11, 264, 15778, 2848, 50676, 50676, 393, 13596, 257, 8830, 2372, 295, 721, 466, 300, 2445, 13, 50860, 50860, 467, 1177, 380, 362, 281, 574, 309, 493, 294, 264, 4910, 420, 4338, 11, 337, 5197, 11, 300, 576, 362, 257, 51118, 51118, 3389, 2063, 13, 51170, 51170, 400, 370, 264, 3303, 636, 281, 360, 5288, 79, 5615, 294, 2699, 76, 307, 281, 1884, 364, 2657, 365, 1629, 7909, 51495, 51495, 293, 300, 729, 7909, 935, 281, 6828, 11, 584, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1411513884862264, "compression_ratio": 1.5918367346938775, "no_caption_prob": 2.8852136892965063e-05}, {"id": 261, "seek": 108192, "start": 1104.54, "end": 1108.24, "text": " and that those fields point to functions, say.", "tokens": [50364, 407, 538, 1419, 6828, 294, 264, 912, 11923, 11, 293, 26336, 2435, 11, 264, 15778, 2848, 50676, 50676, 393, 13596, 257, 8830, 2372, 295, 721, 466, 300, 2445, 13, 50860, 50860, 467, 1177, 380, 362, 281, 574, 309, 493, 294, 264, 4910, 420, 4338, 11, 337, 5197, 11, 300, 576, 362, 257, 51118, 51118, 3389, 2063, 13, 51170, 51170, 400, 370, 264, 3303, 636, 281, 360, 5288, 79, 5615, 294, 2699, 76, 307, 281, 1884, 364, 2657, 365, 1629, 7909, 51495, 51495, 293, 300, 729, 7909, 935, 281, 6828, 11, 584, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1411513884862264, "compression_ratio": 1.5918367346938775, "no_caption_prob": 2.8852136892965063e-05}, {"id": 262, "seek": 110824, "start": 1108.24, "end": 1112.2, "text": " But in Elm, you're just referencing a local function, the function that rise within local", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 263, "seek": 110824, "start": 1112.2, "end": 1113.2, "text": " scope.", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 264, "seek": 110824, "start": 1113.2, "end": 1118.08, "text": " So you know, it's a function, you know, it's not no, you don't have to look it up in an", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 265, "seek": 110824, "start": 1118.08, "end": 1124.0, "text": " object, which means you don't have to check is this an object, is the object referencing", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 266, "seek": 110824, "start": 1124.0, "end": 1125.6, "text": " actually there?", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 267, "seek": 110824, "start": 1125.6, "end": 1128.72, "text": " And if that property exists, is it no, right?", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 268, "seek": 110824, "start": 1128.72, "end": 1132.88, "text": " So there are a bunch of things that the compiler just doesn't have to deal with, because it", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 269, "seek": 110824, "start": 1132.88, "end": 1135.8, "text": " can see the function in the local scope.", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 434, 445, 40582, 257, 2654, 2445, 11, 264, 2445, 300, 6272, 1951, 2654, 50562, 50562, 11923, 13, 50612, 50612, 407, 291, 458, 11, 309, 311, 257, 2445, 11, 291, 458, 11, 309, 311, 406, 572, 11, 291, 500, 380, 362, 281, 574, 309, 493, 294, 364, 50856, 50856, 2657, 11, 597, 1355, 291, 500, 380, 362, 281, 1520, 307, 341, 364, 2657, 11, 307, 264, 2657, 40582, 51152, 51152, 767, 456, 30, 51232, 51232, 400, 498, 300, 4707, 8198, 11, 307, 309, 572, 11, 558, 30, 51388, 51388, 407, 456, 366, 257, 3840, 295, 721, 300, 264, 31958, 445, 1177, 380, 362, 281, 2028, 365, 11, 570, 309, 51596, 51596, 393, 536, 264, 2445, 294, 264, 2654, 11923, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.19812511473663094, "compression_ratio": 1.8870967741935485, "no_caption_prob": 4.005937080364674e-05}, {"id": 270, "seek": 113580, "start": 1135.8, "end": 1142.1599999999999, "text": " And V8 understands that it makes it run faster than if you had to go through objects with", "tokens": [50364, 400, 691, 23, 15146, 300, 309, 1669, 309, 1190, 4663, 813, 498, 291, 632, 281, 352, 807, 6565, 365, 50682, 50682, 257, 574, 1010, 11, 337, 5197, 13, 50780, 50780, 7587, 13, 50830, 50830, 407, 472, 551, 300, 286, 600, 1612, 294, 562, 445, 3365, 264, 691, 23, 2848, 281, 445, 980, 385, 11, 437, 366, 264, 51254, 51254, 4439, 291, 352, 807, 281, 11, 411, 11, 577, 360, 291, 19719, 341, 11121, 3890, 15778, 2445, 51514, 51514, 666, 12103, 11, 550, 633, 565, 291, 360, 411, 364, 2657, 574, 1010, 11, 309, 486, 5258, 341, 1520, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18011420380835438, "compression_ratio": 1.5657370517928286, "no_caption_prob": 1.7777467292035e-05}, {"id": 271, "seek": 113580, "start": 1142.1599999999999, "end": 1144.12, "text": " a lookup, for instance.", "tokens": [50364, 400, 691, 23, 15146, 300, 309, 1669, 309, 1190, 4663, 813, 498, 291, 632, 281, 352, 807, 6565, 365, 50682, 50682, 257, 574, 1010, 11, 337, 5197, 13, 50780, 50780, 7587, 13, 50830, 50830, 407, 472, 551, 300, 286, 600, 1612, 294, 562, 445, 3365, 264, 691, 23, 2848, 281, 445, 980, 385, 11, 437, 366, 264, 51254, 51254, 4439, 291, 352, 807, 281, 11, 411, 11, 577, 360, 291, 19719, 341, 11121, 3890, 15778, 2445, 51514, 51514, 666, 12103, 11, 550, 633, 565, 291, 360, 411, 364, 2657, 574, 1010, 11, 309, 486, 5258, 341, 1520, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18011420380835438, "compression_ratio": 1.5657370517928286, "no_caption_prob": 1.7777467292035e-05}, {"id": 272, "seek": 113580, "start": 1144.12, "end": 1145.12, "text": " Exactly.", "tokens": [50364, 400, 691, 23, 15146, 300, 309, 1669, 309, 1190, 4663, 813, 498, 291, 632, 281, 352, 807, 6565, 365, 50682, 50682, 257, 574, 1010, 11, 337, 5197, 13, 50780, 50780, 7587, 13, 50830, 50830, 407, 472, 551, 300, 286, 600, 1612, 294, 562, 445, 3365, 264, 691, 23, 2848, 281, 445, 980, 385, 11, 437, 366, 264, 51254, 51254, 4439, 291, 352, 807, 281, 11, 411, 11, 577, 360, 291, 19719, 341, 11121, 3890, 15778, 2445, 51514, 51514, 666, 12103, 11, 550, 633, 565, 291, 360, 411, 364, 2657, 574, 1010, 11, 309, 486, 5258, 341, 1520, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18011420380835438, "compression_ratio": 1.5657370517928286, "no_caption_prob": 1.7777467292035e-05}, {"id": 273, "seek": 113580, "start": 1145.12, "end": 1153.6, "text": " So one thing that I've seen in when just asking the V8 engine to just tell me, what are the", "tokens": [50364, 400, 691, 23, 15146, 300, 309, 1669, 309, 1190, 4663, 813, 498, 291, 632, 281, 352, 807, 6565, 365, 50682, 50682, 257, 574, 1010, 11, 337, 5197, 13, 50780, 50780, 7587, 13, 50830, 50830, 407, 472, 551, 300, 286, 600, 1612, 294, 562, 445, 3365, 264, 691, 23, 2848, 281, 445, 980, 385, 11, 437, 366, 264, 51254, 51254, 4439, 291, 352, 807, 281, 11, 411, 11, 577, 360, 291, 19719, 341, 11121, 3890, 15778, 2445, 51514, 51514, 666, 12103, 11, 550, 633, 565, 291, 360, 411, 364, 2657, 574, 1010, 11, 309, 486, 5258, 341, 1520, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18011420380835438, "compression_ratio": 1.5657370517928286, "no_caption_prob": 1.7777467292035e-05}, {"id": 274, "seek": 113580, "start": 1153.6, "end": 1158.8, "text": " steps you go through to, like, how do you optimize this plain regular JavaScript function", "tokens": [50364, 400, 691, 23, 15146, 300, 309, 1669, 309, 1190, 4663, 813, 498, 291, 632, 281, 352, 807, 6565, 365, 50682, 50682, 257, 574, 1010, 11, 337, 5197, 13, 50780, 50780, 7587, 13, 50830, 50830, 407, 472, 551, 300, 286, 600, 1612, 294, 562, 445, 3365, 264, 691, 23, 2848, 281, 445, 980, 385, 11, 437, 366, 264, 51254, 51254, 4439, 291, 352, 807, 281, 11, 411, 11, 577, 360, 291, 19719, 341, 11121, 3890, 15778, 2445, 51514, 51514, 666, 12103, 11, 550, 633, 565, 291, 360, 411, 364, 2657, 574, 1010, 11, 309, 486, 5258, 341, 1520, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18011420380835438, "compression_ratio": 1.5657370517928286, "no_caption_prob": 1.7777467292035e-05}, {"id": 275, "seek": 113580, "start": 1158.8, "end": 1165.48, "text": " into assembly, then every time you do like an object lookup, it will produce this check,", "tokens": [50364, 400, 691, 23, 15146, 300, 309, 1669, 309, 1190, 4663, 813, 498, 291, 632, 281, 352, 807, 6565, 365, 50682, 50682, 257, 574, 1010, 11, 337, 5197, 13, 50780, 50780, 7587, 13, 50830, 50830, 407, 472, 551, 300, 286, 600, 1612, 294, 562, 445, 3365, 264, 691, 23, 2848, 281, 445, 980, 385, 11, 437, 366, 264, 51254, 51254, 4439, 291, 352, 807, 281, 11, 411, 11, 577, 360, 291, 19719, 341, 11121, 3890, 15778, 2445, 51514, 51514, 666, 12103, 11, 550, 633, 565, 291, 360, 411, 364, 2657, 574, 1010, 11, 309, 486, 5258, 341, 1520, 11, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18011420380835438, "compression_ratio": 1.5657370517928286, "no_caption_prob": 1.7777467292035e-05}, {"id": 276, "seek": 116548, "start": 1165.48, "end": 1170.24, "text": " which checks is this thing that I got from this object null.", "tokens": [50364, 597, 13834, 307, 341, 551, 300, 286, 658, 490, 341, 2657, 18184, 13, 50602, 50602, 400, 300, 486, 1009, 1051, 570, 294, 15778, 11, 291, 393, 1009, 352, 666, 257, 31511, 43, 293, 550, 909, 50910, 50910, 1507, 597, 393, 1319, 13, 51004, 51004, 400, 370, 754, 1673, 264, 445, 294, 565, 31958, 393, 312, 23551, 1629, 412, 512, 935, 300, 51256, 51256, 341, 551, 1943, 380, 18184, 11, 300, 1177, 380, 914, 309, 2644, 312, 18184, 1780, 13, 51462, 51462, 407, 309, 1009, 575, 281, 411, 16468, 356, 909, 257, 3840, 295, 13834, 13, 51638, 51638, 865, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.20684088549567659, "compression_ratio": 1.606425702811245, "no_caption_prob": 1.406391220371006e-05}, {"id": 277, "seek": 116548, "start": 1170.24, "end": 1176.4, "text": " And that will always happen because in JavaScript, you can always go into a REPL and then add", "tokens": [50364, 597, 13834, 307, 341, 551, 300, 286, 658, 490, 341, 2657, 18184, 13, 50602, 50602, 400, 300, 486, 1009, 1051, 570, 294, 15778, 11, 291, 393, 1009, 352, 666, 257, 31511, 43, 293, 550, 909, 50910, 50910, 1507, 597, 393, 1319, 13, 51004, 51004, 400, 370, 754, 1673, 264, 445, 294, 565, 31958, 393, 312, 23551, 1629, 412, 512, 935, 300, 51256, 51256, 341, 551, 1943, 380, 18184, 11, 300, 1177, 380, 914, 309, 2644, 312, 18184, 1780, 13, 51462, 51462, 407, 309, 1009, 575, 281, 411, 16468, 356, 909, 257, 3840, 295, 13834, 13, 51638, 51638, 865, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.20684088549567659, "compression_ratio": 1.606425702811245, "no_caption_prob": 1.406391220371006e-05}, {"id": 278, "seek": 116548, "start": 1176.4, "end": 1178.28, "text": " stuff which can change.", "tokens": [50364, 597, 13834, 307, 341, 551, 300, 286, 658, 490, 341, 2657, 18184, 13, 50602, 50602, 400, 300, 486, 1009, 1051, 570, 294, 15778, 11, 291, 393, 1009, 352, 666, 257, 31511, 43, 293, 550, 909, 50910, 50910, 1507, 597, 393, 1319, 13, 51004, 51004, 400, 370, 754, 1673, 264, 445, 294, 565, 31958, 393, 312, 23551, 1629, 412, 512, 935, 300, 51256, 51256, 341, 551, 1943, 380, 18184, 11, 300, 1177, 380, 914, 309, 2644, 312, 18184, 1780, 13, 51462, 51462, 407, 309, 1009, 575, 281, 411, 16468, 356, 909, 257, 3840, 295, 13834, 13, 51638, 51638, 865, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.20684088549567659, "compression_ratio": 1.606425702811245, "no_caption_prob": 1.406391220371006e-05}, {"id": 279, "seek": 116548, "start": 1178.28, "end": 1183.32, "text": " And so even though the just in time compiler can be reasonably certain at some point that", "tokens": [50364, 597, 13834, 307, 341, 551, 300, 286, 658, 490, 341, 2657, 18184, 13, 50602, 50602, 400, 300, 486, 1009, 1051, 570, 294, 15778, 11, 291, 393, 1009, 352, 666, 257, 31511, 43, 293, 550, 909, 50910, 50910, 1507, 597, 393, 1319, 13, 51004, 51004, 400, 370, 754, 1673, 264, 445, 294, 565, 31958, 393, 312, 23551, 1629, 412, 512, 935, 300, 51256, 51256, 341, 551, 1943, 380, 18184, 11, 300, 1177, 380, 914, 309, 2644, 312, 18184, 1780, 13, 51462, 51462, 407, 309, 1009, 575, 281, 411, 16468, 356, 909, 257, 3840, 295, 13834, 13, 51638, 51638, 865, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.20684088549567659, "compression_ratio": 1.606425702811245, "no_caption_prob": 1.406391220371006e-05}, {"id": 280, "seek": 116548, "start": 1183.32, "end": 1187.44, "text": " this thing isn't null, that doesn't mean it cannot be null later.", "tokens": [50364, 597, 13834, 307, 341, 551, 300, 286, 658, 490, 341, 2657, 18184, 13, 50602, 50602, 400, 300, 486, 1009, 1051, 570, 294, 15778, 11, 291, 393, 1009, 352, 666, 257, 31511, 43, 293, 550, 909, 50910, 50910, 1507, 597, 393, 1319, 13, 51004, 51004, 400, 370, 754, 1673, 264, 445, 294, 565, 31958, 393, 312, 23551, 1629, 412, 512, 935, 300, 51256, 51256, 341, 551, 1943, 380, 18184, 11, 300, 1177, 380, 914, 309, 2644, 312, 18184, 1780, 13, 51462, 51462, 407, 309, 1009, 575, 281, 411, 16468, 356, 909, 257, 3840, 295, 13834, 13, 51638, 51638, 865, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.20684088549567659, "compression_ratio": 1.606425702811245, "no_caption_prob": 1.406391220371006e-05}, {"id": 281, "seek": 116548, "start": 1187.44, "end": 1190.96, "text": " So it always has to like defensively add a bunch of checks.", "tokens": [50364, 597, 13834, 307, 341, 551, 300, 286, 658, 490, 341, 2657, 18184, 13, 50602, 50602, 400, 300, 486, 1009, 1051, 570, 294, 15778, 11, 291, 393, 1009, 352, 666, 257, 31511, 43, 293, 550, 909, 50910, 50910, 1507, 597, 393, 1319, 13, 51004, 51004, 400, 370, 754, 1673, 264, 445, 294, 565, 31958, 393, 312, 23551, 1629, 412, 512, 935, 300, 51256, 51256, 341, 551, 1943, 380, 18184, 11, 300, 1177, 380, 914, 309, 2644, 312, 18184, 1780, 13, 51462, 51462, 407, 309, 1009, 575, 281, 411, 16468, 356, 909, 257, 3840, 295, 13834, 13, 51638, 51638, 865, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.20684088549567659, "compression_ratio": 1.606425702811245, "no_caption_prob": 1.406391220371006e-05}, {"id": 282, "seek": 116548, "start": 1190.96, "end": 1191.96, "text": " Yeah.", "tokens": [50364, 597, 13834, 307, 341, 551, 300, 286, 658, 490, 341, 2657, 18184, 13, 50602, 50602, 400, 300, 486, 1009, 1051, 570, 294, 15778, 11, 291, 393, 1009, 352, 666, 257, 31511, 43, 293, 550, 909, 50910, 50910, 1507, 597, 393, 1319, 13, 51004, 51004, 400, 370, 754, 1673, 264, 445, 294, 565, 31958, 393, 312, 23551, 1629, 412, 512, 935, 300, 51256, 51256, 341, 551, 1943, 380, 18184, 11, 300, 1177, 380, 914, 309, 2644, 312, 18184, 1780, 13, 51462, 51462, 407, 309, 1009, 575, 281, 411, 16468, 356, 909, 257, 3840, 295, 13834, 13, 51638, 51638, 865, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.20684088549567659, "compression_ratio": 1.606425702811245, "no_caption_prob": 1.406391220371006e-05}, {"id": 283, "seek": 119196, "start": 1191.96, "end": 1196.32, "text": " And that's kind of annoying because we have all those guarantees and then we still have", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 284, "seek": 119196, "start": 1196.32, "end": 1202.68, "text": " to re prove it again, kind of like going through paperwork for administration.", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 285, "seek": 119196, "start": 1202.68, "end": 1209.56, "text": " You have to send a sign up form, send it over and then do the same one again for another", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 286, "seek": 119196, "start": 1209.56, "end": 1211.0, "text": " service or something.", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 287, "seek": 119196, "start": 1211.0, "end": 1212.0, "text": " Yeah.", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 288, "seek": 119196, "start": 1212.0, "end": 1213.0, "text": " Yeah.", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 289, "seek": 119196, "start": 1213.0, "end": 1214.0, "text": " It is very bureaucratic, isn't it?", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 290, "seek": 119196, "start": 1214.0, "end": 1215.0, "text": " In a way.", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 291, "seek": 119196, "start": 1215.0, "end": 1219.04, "text": " At least it's faster.", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 292, "seek": 119196, "start": 1219.04, "end": 1220.76, "text": " Yeah.", "tokens": [50364, 400, 300, 311, 733, 295, 11304, 570, 321, 362, 439, 729, 32567, 293, 550, 321, 920, 362, 50582, 50582, 281, 319, 7081, 309, 797, 11, 733, 295, 411, 516, 807, 27953, 337, 7236, 13, 50900, 50900, 509, 362, 281, 2845, 257, 1465, 493, 1254, 11, 2845, 309, 670, 293, 550, 360, 264, 912, 472, 797, 337, 1071, 51244, 51244, 2643, 420, 746, 13, 51316, 51316, 865, 13, 51366, 51366, 865, 13, 51416, 51416, 467, 307, 588, 26360, 25198, 11, 1943, 380, 309, 30, 51466, 51466, 682, 257, 636, 13, 51516, 51516, 1711, 1935, 309, 311, 4663, 13, 51718, 51718, 865, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.24424258640834262, "compression_ratio": 1.6380090497737556, "no_caption_prob": 5.0641316192923114e-05}, {"id": 293, "seek": 122076, "start": 1220.76, "end": 1223.96, "text": " So that makes me think about WebAssembly.", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 294, "seek": 122076, "start": 1223.96, "end": 1230.96, "text": " And of course, I mean, I think that WebAssembly can become maybe a silver bullet where it", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 295, "seek": 122076, "start": 1230.96, "end": 1233.78, "text": " solves all the performance issues, right?", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 296, "seek": 122076, "start": 1233.78, "end": 1234.78, "text": " In people's minds.", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 297, "seek": 122076, "start": 1234.78, "end": 1239.16, "text": " And that's not necessarily, it's not as simple as that.", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 298, "seek": 122076, "start": 1239.16, "end": 1240.16, "text": " What is WebAssembly?", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 299, "seek": 122076, "start": 1240.16, "end": 1243.8799999999999, "text": " What is this WebAssembly that you're talking about?", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 300, "seek": 122076, "start": 1243.8799999999999, "end": 1245.2, "text": " Should we define WebAssembly?", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 301, "seek": 122076, "start": 1245.2, "end": 1246.2, "text": " Yeah.", "tokens": [50364, 407, 300, 1669, 385, 519, 466, 9573, 10884, 19160, 13, 50524, 50524, 400, 295, 1164, 11, 286, 914, 11, 286, 519, 300, 9573, 10884, 19160, 393, 1813, 1310, 257, 8753, 11632, 689, 309, 50874, 50874, 39890, 439, 264, 3389, 2663, 11, 558, 30, 51015, 51015, 682, 561, 311, 9634, 13, 51065, 51065, 400, 300, 311, 406, 4725, 11, 309, 311, 406, 382, 2199, 382, 300, 13, 51284, 51284, 708, 307, 9573, 10884, 19160, 30, 51334, 51334, 708, 307, 341, 9573, 10884, 19160, 300, 291, 434, 1417, 466, 30, 51520, 51520, 6454, 321, 6964, 9573, 10884, 19160, 30, 51586, 51586, 865, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.15702509198869977, "compression_ratio": 1.6527777777777777, "no_caption_prob": 4.6836998080834746e-05}, {"id": 302, "seek": 124620, "start": 1246.2, "end": 1253.1200000000001, "text": " So it is essentially, correct me if I'm wrong, but it is something that gives you lower level", "tokens": [50364, 407, 309, 307, 4476, 11, 3006, 385, 498, 286, 478, 2085, 11, 457, 309, 307, 746, 300, 2709, 291, 3126, 1496, 50710, 50710, 1969, 2831, 813, 341, 411, 26749, 2856, 295, 15778, 300, 393, 1190, 8470, 356, 51040, 51040, 294, 264, 36069, 13, 51090, 51090, 467, 311, 746, 300, 393, 312, 17577, 8470, 356, 294, 264, 36069, 13, 51225, 51225, 467, 767, 575, 11, 309, 311, 767, 33941, 13, 51334, 51334, 407, 291, 2464, 613, 1333, 295, 4476, 40846, 3089, 9415, 11, 558, 30, 51556, 51556, 400, 291, 393, 362, 309, 382, 257, 31413, 3779, 370, 291, 393, 31413, 34952, 420, 2035, 8650, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09718912784184251, "compression_ratio": 1.735632183908046, "no_caption_prob": 5.390614387579262e-05}, {"id": 303, "seek": 124620, "start": 1253.1200000000001, "end": 1259.72, "text": " control rather than this like interpreted language of JavaScript that can run natively", "tokens": [50364, 407, 309, 307, 4476, 11, 3006, 385, 498, 286, 478, 2085, 11, 457, 309, 307, 746, 300, 2709, 291, 3126, 1496, 50710, 50710, 1969, 2831, 813, 341, 411, 26749, 2856, 295, 15778, 300, 393, 1190, 8470, 356, 51040, 51040, 294, 264, 36069, 13, 51090, 51090, 467, 311, 746, 300, 393, 312, 17577, 8470, 356, 294, 264, 36069, 13, 51225, 51225, 467, 767, 575, 11, 309, 311, 767, 33941, 13, 51334, 51334, 407, 291, 2464, 613, 1333, 295, 4476, 40846, 3089, 9415, 11, 558, 30, 51556, 51556, 400, 291, 393, 362, 309, 382, 257, 31413, 3779, 370, 291, 393, 31413, 34952, 420, 2035, 8650, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09718912784184251, "compression_ratio": 1.735632183908046, "no_caption_prob": 5.390614387579262e-05}, {"id": 304, "seek": 124620, "start": 1259.72, "end": 1260.72, "text": " in the browsers.", "tokens": [50364, 407, 309, 307, 4476, 11, 3006, 385, 498, 286, 478, 2085, 11, 457, 309, 307, 746, 300, 2709, 291, 3126, 1496, 50710, 50710, 1969, 2831, 813, 341, 411, 26749, 2856, 295, 15778, 300, 393, 1190, 8470, 356, 51040, 51040, 294, 264, 36069, 13, 51090, 51090, 467, 311, 746, 300, 393, 312, 17577, 8470, 356, 294, 264, 36069, 13, 51225, 51225, 467, 767, 575, 11, 309, 311, 767, 33941, 13, 51334, 51334, 407, 291, 2464, 613, 1333, 295, 4476, 40846, 3089, 9415, 11, 558, 30, 51556, 51556, 400, 291, 393, 362, 309, 382, 257, 31413, 3779, 370, 291, 393, 31413, 34952, 420, 2035, 8650, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09718912784184251, "compression_ratio": 1.735632183908046, "no_caption_prob": 5.390614387579262e-05}, {"id": 305, "seek": 124620, "start": 1260.72, "end": 1263.42, "text": " It's something that can be executed natively in the browsers.", "tokens": [50364, 407, 309, 307, 4476, 11, 3006, 385, 498, 286, 478, 2085, 11, 457, 309, 307, 746, 300, 2709, 291, 3126, 1496, 50710, 50710, 1969, 2831, 813, 341, 411, 26749, 2856, 295, 15778, 300, 393, 1190, 8470, 356, 51040, 51040, 294, 264, 36069, 13, 51090, 51090, 467, 311, 746, 300, 393, 312, 17577, 8470, 356, 294, 264, 36069, 13, 51225, 51225, 467, 767, 575, 11, 309, 311, 767, 33941, 13, 51334, 51334, 407, 291, 2464, 613, 1333, 295, 4476, 40846, 3089, 9415, 11, 558, 30, 51556, 51556, 400, 291, 393, 362, 309, 382, 257, 31413, 3779, 370, 291, 393, 31413, 34952, 420, 2035, 8650, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09718912784184251, "compression_ratio": 1.735632183908046, "no_caption_prob": 5.390614387579262e-05}, {"id": 306, "seek": 124620, "start": 1263.42, "end": 1265.6000000000001, "text": " It actually has, it's actually typed.", "tokens": [50364, 407, 309, 307, 4476, 11, 3006, 385, 498, 286, 478, 2085, 11, 457, 309, 307, 746, 300, 2709, 291, 3126, 1496, 50710, 50710, 1969, 2831, 813, 341, 411, 26749, 2856, 295, 15778, 300, 393, 1190, 8470, 356, 51040, 51040, 294, 264, 36069, 13, 51090, 51090, 467, 311, 746, 300, 393, 312, 17577, 8470, 356, 294, 264, 36069, 13, 51225, 51225, 467, 767, 575, 11, 309, 311, 767, 33941, 13, 51334, 51334, 407, 291, 2464, 613, 1333, 295, 4476, 40846, 3089, 9415, 11, 558, 30, 51556, 51556, 400, 291, 393, 362, 309, 382, 257, 31413, 3779, 370, 291, 393, 31413, 34952, 420, 2035, 8650, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09718912784184251, "compression_ratio": 1.735632183908046, "no_caption_prob": 5.390614387579262e-05}, {"id": 307, "seek": 124620, "start": 1265.6000000000001, "end": 1270.04, "text": " So you write these sort of essentially byte code instructions, right?", "tokens": [50364, 407, 309, 307, 4476, 11, 3006, 385, 498, 286, 478, 2085, 11, 457, 309, 307, 746, 300, 2709, 291, 3126, 1496, 50710, 50710, 1969, 2831, 813, 341, 411, 26749, 2856, 295, 15778, 300, 393, 1190, 8470, 356, 51040, 51040, 294, 264, 36069, 13, 51090, 51090, 467, 311, 746, 300, 393, 312, 17577, 8470, 356, 294, 264, 36069, 13, 51225, 51225, 467, 767, 575, 11, 309, 311, 767, 33941, 13, 51334, 51334, 407, 291, 2464, 613, 1333, 295, 4476, 40846, 3089, 9415, 11, 558, 30, 51556, 51556, 400, 291, 393, 362, 309, 382, 257, 31413, 3779, 370, 291, 393, 31413, 34952, 420, 2035, 8650, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09718912784184251, "compression_ratio": 1.735632183908046, "no_caption_prob": 5.390614387579262e-05}, {"id": 308, "seek": 124620, "start": 1270.04, "end": 1274.6000000000001, "text": " And you can have it as a compile target so you can compile Rust or whatever languages", "tokens": [50364, 407, 309, 307, 4476, 11, 3006, 385, 498, 286, 478, 2085, 11, 457, 309, 307, 746, 300, 2709, 291, 3126, 1496, 50710, 50710, 1969, 2831, 813, 341, 411, 26749, 2856, 295, 15778, 300, 393, 1190, 8470, 356, 51040, 51040, 294, 264, 36069, 13, 51090, 51090, 467, 311, 746, 300, 393, 312, 17577, 8470, 356, 294, 264, 36069, 13, 51225, 51225, 467, 767, 575, 11, 309, 311, 767, 33941, 13, 51334, 51334, 407, 291, 2464, 613, 1333, 295, 4476, 40846, 3089, 9415, 11, 558, 30, 51556, 51556, 400, 291, 393, 362, 309, 382, 257, 31413, 3779, 370, 291, 393, 31413, 34952, 420, 2035, 8650, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09718912784184251, "compression_ratio": 1.735632183908046, "no_caption_prob": 5.390614387579262e-05}, {"id": 309, "seek": 127460, "start": 1274.6, "end": 1276.36, "text": " to that compile target.", "tokens": [50364, 281, 300, 31413, 3779, 13, 50452, 50452, 400, 309, 2709, 291, 544, 2295, 1496, 1969, 670, 4675, 4592, 13, 50654, 50654, 467, 1177, 380, 808, 365, 3094, 294, 14150, 5765, 11, 721, 411, 300, 13, 50800, 50800, 583, 309, 2709, 291, 544, 45115, 1969, 670, 3389, 293, 1177, 380, 10687, 382, 709, 322, 613, 51090, 51090, 415, 374, 6006, 337, 445, 294, 565, 5028, 14455, 13, 51245, 51245, 1119, 300, 257, 3143, 12691, 30, 51364, 51364, 467, 311, 1238, 3006, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.11897464079015395, "compression_ratio": 1.5734597156398105, "no_caption_prob": 2.046208464889787e-05}, {"id": 310, "seek": 127460, "start": 1276.36, "end": 1280.3999999999999, "text": " And it gives you more low level control over memory management.", "tokens": [50364, 281, 300, 31413, 3779, 13, 50452, 50452, 400, 309, 2709, 291, 544, 2295, 1496, 1969, 670, 4675, 4592, 13, 50654, 50654, 467, 1177, 380, 808, 365, 3094, 294, 14150, 5765, 11, 721, 411, 300, 13, 50800, 50800, 583, 309, 2709, 291, 544, 45115, 1969, 670, 3389, 293, 1177, 380, 10687, 382, 709, 322, 613, 51090, 51090, 415, 374, 6006, 337, 445, 294, 565, 5028, 14455, 13, 51245, 51245, 1119, 300, 257, 3143, 12691, 30, 51364, 51364, 467, 311, 1238, 3006, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.11897464079015395, "compression_ratio": 1.5734597156398105, "no_caption_prob": 2.046208464889787e-05}, {"id": 311, "seek": 127460, "start": 1280.3999999999999, "end": 1283.32, "text": " It doesn't come with built in garbage collection, things like that.", "tokens": [50364, 281, 300, 31413, 3779, 13, 50452, 50452, 400, 309, 2709, 291, 544, 2295, 1496, 1969, 670, 4675, 4592, 13, 50654, 50654, 467, 1177, 380, 808, 365, 3094, 294, 14150, 5765, 11, 721, 411, 300, 13, 50800, 50800, 583, 309, 2709, 291, 544, 45115, 1969, 670, 3389, 293, 1177, 380, 10687, 382, 709, 322, 613, 51090, 51090, 415, 374, 6006, 337, 445, 294, 565, 5028, 14455, 13, 51245, 51245, 1119, 300, 257, 3143, 12691, 30, 51364, 51364, 467, 311, 1238, 3006, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.11897464079015395, "compression_ratio": 1.5734597156398105, "no_caption_prob": 2.046208464889787e-05}, {"id": 312, "seek": 127460, "start": 1283.32, "end": 1289.12, "text": " But it gives you more nuanced control over performance and doesn't rely as much on these", "tokens": [50364, 281, 300, 31413, 3779, 13, 50452, 50452, 400, 309, 2709, 291, 544, 2295, 1496, 1969, 670, 4675, 4592, 13, 50654, 50654, 467, 1177, 380, 808, 365, 3094, 294, 14150, 5765, 11, 721, 411, 300, 13, 50800, 50800, 583, 309, 2709, 291, 544, 45115, 1969, 670, 3389, 293, 1177, 380, 10687, 382, 709, 322, 613, 51090, 51090, 415, 374, 6006, 337, 445, 294, 565, 5028, 14455, 13, 51245, 51245, 1119, 300, 257, 3143, 12691, 30, 51364, 51364, 467, 311, 1238, 3006, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.11897464079015395, "compression_ratio": 1.5734597156398105, "no_caption_prob": 2.046208464889787e-05}, {"id": 313, "seek": 127460, "start": 1289.12, "end": 1292.2199999999998, "text": " heuristics for just in time optimizations.", "tokens": [50364, 281, 300, 31413, 3779, 13, 50452, 50452, 400, 309, 2709, 291, 544, 2295, 1496, 1969, 670, 4675, 4592, 13, 50654, 50654, 467, 1177, 380, 808, 365, 3094, 294, 14150, 5765, 11, 721, 411, 300, 13, 50800, 50800, 583, 309, 2709, 291, 544, 45115, 1969, 670, 3389, 293, 1177, 380, 10687, 382, 709, 322, 613, 51090, 51090, 415, 374, 6006, 337, 445, 294, 565, 5028, 14455, 13, 51245, 51245, 1119, 300, 257, 3143, 12691, 30, 51364, 51364, 467, 311, 1238, 3006, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.11897464079015395, "compression_ratio": 1.5734597156398105, "no_caption_prob": 2.046208464889787e-05}, {"id": 314, "seek": 127460, "start": 1292.2199999999998, "end": 1294.6, "text": " Is that a fair summary?", "tokens": [50364, 281, 300, 31413, 3779, 13, 50452, 50452, 400, 309, 2709, 291, 544, 2295, 1496, 1969, 670, 4675, 4592, 13, 50654, 50654, 467, 1177, 380, 808, 365, 3094, 294, 14150, 5765, 11, 721, 411, 300, 13, 50800, 50800, 583, 309, 2709, 291, 544, 45115, 1969, 670, 3389, 293, 1177, 380, 10687, 382, 709, 322, 613, 51090, 51090, 415, 374, 6006, 337, 445, 294, 565, 5028, 14455, 13, 51245, 51245, 1119, 300, 257, 3143, 12691, 30, 51364, 51364, 467, 311, 1238, 3006, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.11897464079015395, "compression_ratio": 1.5734597156398105, "no_caption_prob": 2.046208464889787e-05}, {"id": 315, "seek": 127460, "start": 1294.6, "end": 1297.52, "text": " It's pretty correct.", "tokens": [50364, 281, 300, 31413, 3779, 13, 50452, 50452, 400, 309, 2709, 291, 544, 2295, 1496, 1969, 670, 4675, 4592, 13, 50654, 50654, 467, 1177, 380, 808, 365, 3094, 294, 14150, 5765, 11, 721, 411, 300, 13, 50800, 50800, 583, 309, 2709, 291, 544, 45115, 1969, 670, 3389, 293, 1177, 380, 10687, 382, 709, 322, 613, 51090, 51090, 415, 374, 6006, 337, 445, 294, 565, 5028, 14455, 13, 51245, 51245, 1119, 300, 257, 3143, 12691, 30, 51364, 51364, 467, 311, 1238, 3006, 13, 51510, 51510], "temperature": 0.0, "avg_logprob": -0.11897464079015395, "compression_ratio": 1.5734597156398105, "no_caption_prob": 2.046208464889787e-05}, {"id": 316, "seek": 129752, "start": 1297.52, "end": 1307.32, "text": " So it's a very low level language in the same way that Java byte code and.NET byte code.", "tokens": [50364, 407, 309, 311, 257, 588, 2295, 1496, 2856, 294, 264, 912, 636, 300, 10745, 40846, 3089, 293, 2411, 35554, 40846, 3089, 13, 50854, 50854, 682, 1186, 11, 309, 311, 588, 2531, 281, 729, 1333, 295, 721, 11, 597, 881, 8849, 500, 380, 574, 412, 51130, 51130, 412, 439, 13, 51180, 51180, 583, 264, 955, 2649, 490, 9573, 10884, 19160, 293, 5347, 281, 746, 411, 10745, 40846, 3089, 51468, 51468, 307, 300, 456, 366, 636, 13366, 9415, 293, 456, 366, 636, 13366, 3094, 294, 721, 13, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.13459296708696344, "compression_ratio": 1.5855855855855856, "no_caption_prob": 7.888810614531394e-06}, {"id": 317, "seek": 129752, "start": 1307.32, "end": 1312.84, "text": " In fact, it's very similar to those sort of things, which most developers don't look at", "tokens": [50364, 407, 309, 311, 257, 588, 2295, 1496, 2856, 294, 264, 912, 636, 300, 10745, 40846, 3089, 293, 2411, 35554, 40846, 3089, 13, 50854, 50854, 682, 1186, 11, 309, 311, 588, 2531, 281, 729, 1333, 295, 721, 11, 597, 881, 8849, 500, 380, 574, 412, 51130, 51130, 412, 439, 13, 51180, 51180, 583, 264, 955, 2649, 490, 9573, 10884, 19160, 293, 5347, 281, 746, 411, 10745, 40846, 3089, 51468, 51468, 307, 300, 456, 366, 636, 13366, 9415, 293, 456, 366, 636, 13366, 3094, 294, 721, 13, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.13459296708696344, "compression_ratio": 1.5855855855855856, "no_caption_prob": 7.888810614531394e-06}, {"id": 318, "seek": 129752, "start": 1312.84, "end": 1313.84, "text": " at all.", "tokens": [50364, 407, 309, 311, 257, 588, 2295, 1496, 2856, 294, 264, 912, 636, 300, 10745, 40846, 3089, 293, 2411, 35554, 40846, 3089, 13, 50854, 50854, 682, 1186, 11, 309, 311, 588, 2531, 281, 729, 1333, 295, 721, 11, 597, 881, 8849, 500, 380, 574, 412, 51130, 51130, 412, 439, 13, 51180, 51180, 583, 264, 955, 2649, 490, 9573, 10884, 19160, 293, 5347, 281, 746, 411, 10745, 40846, 3089, 51468, 51468, 307, 300, 456, 366, 636, 13366, 9415, 293, 456, 366, 636, 13366, 3094, 294, 721, 13, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.13459296708696344, "compression_ratio": 1.5855855855855856, "no_caption_prob": 7.888810614531394e-06}, {"id": 319, "seek": 129752, "start": 1313.84, "end": 1319.6, "text": " But the big difference from WebAssembly and compared to something like Java byte code", "tokens": [50364, 407, 309, 311, 257, 588, 2295, 1496, 2856, 294, 264, 912, 636, 300, 10745, 40846, 3089, 293, 2411, 35554, 40846, 3089, 13, 50854, 50854, 682, 1186, 11, 309, 311, 588, 2531, 281, 729, 1333, 295, 721, 11, 597, 881, 8849, 500, 380, 574, 412, 51130, 51130, 412, 439, 13, 51180, 51180, 583, 264, 955, 2649, 490, 9573, 10884, 19160, 293, 5347, 281, 746, 411, 10745, 40846, 3089, 51468, 51468, 307, 300, 456, 366, 636, 13366, 9415, 293, 456, 366, 636, 13366, 3094, 294, 721, 13, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.13459296708696344, "compression_ratio": 1.5855855855855856, "no_caption_prob": 7.888810614531394e-06}, {"id": 320, "seek": 129752, "start": 1319.6, "end": 1326.42, "text": " is that there are way fewer instructions and there are way fewer built in things.", "tokens": [50364, 407, 309, 311, 257, 588, 2295, 1496, 2856, 294, 264, 912, 636, 300, 10745, 40846, 3089, 293, 2411, 35554, 40846, 3089, 13, 50854, 50854, 682, 1186, 11, 309, 311, 588, 2531, 281, 729, 1333, 295, 721, 11, 597, 881, 8849, 500, 380, 574, 412, 51130, 51130, 412, 439, 13, 51180, 51180, 583, 264, 955, 2649, 490, 9573, 10884, 19160, 293, 5347, 281, 746, 411, 10745, 40846, 3089, 51468, 51468, 307, 300, 456, 366, 636, 13366, 9415, 293, 456, 366, 636, 13366, 3094, 294, 721, 13, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.13459296708696344, "compression_ratio": 1.5855855855855856, "no_caption_prob": 7.888810614531394e-06}, {"id": 321, "seek": 132642, "start": 1326.42, "end": 1328.88, "text": " Like it doesn't have a garbage collector.", "tokens": [50364, 1743, 309, 1177, 380, 362, 257, 14150, 23960, 13, 50487, 50487, 663, 307, 472, 551, 309, 445, 1177, 380, 362, 13, 50589, 50589, 467, 1177, 380, 362, 13985, 420, 604, 1333, 295, 1412, 3877, 13, 50791, 50791, 1057, 291, 483, 307, 341, 472, 2603, 10957, 10225, 11, 512, 9415, 281, 574, 666, 300, 13, 51165, 51165, 400, 291, 483, 6828, 293, 291, 483, 1451, 3467, 13, 51355, 51355, 9436, 498, 291, 4090, 6828, 13, 51474, 51474, 400, 729, 1451, 3467, 366, 8858, 857, 24922, 11, 12145, 857, 24922, 11, 8858, 857, 15706, 11, 293, 12145, 857, 15706, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.14919821421305338, "compression_ratio": 1.7788018433179724, "no_caption_prob": 1.241121117345756e-05}, {"id": 322, "seek": 132642, "start": 1328.88, "end": 1330.92, "text": " That is one thing it just doesn't have.", "tokens": [50364, 1743, 309, 1177, 380, 362, 257, 14150, 23960, 13, 50487, 50487, 663, 307, 472, 551, 309, 445, 1177, 380, 362, 13, 50589, 50589, 467, 1177, 380, 362, 13985, 420, 604, 1333, 295, 1412, 3877, 13, 50791, 50791, 1057, 291, 483, 307, 341, 472, 2603, 10957, 10225, 11, 512, 9415, 281, 574, 666, 300, 13, 51165, 51165, 400, 291, 483, 6828, 293, 291, 483, 1451, 3467, 13, 51355, 51355, 9436, 498, 291, 4090, 6828, 13, 51474, 51474, 400, 729, 1451, 3467, 366, 8858, 857, 24922, 11, 12145, 857, 24922, 11, 8858, 857, 15706, 11, 293, 12145, 857, 15706, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.14919821421305338, "compression_ratio": 1.7788018433179724, "no_caption_prob": 1.241121117345756e-05}, {"id": 323, "seek": 132642, "start": 1330.92, "end": 1334.96, "text": " It doesn't have strings or any sort of data structure.", "tokens": [50364, 1743, 309, 1177, 380, 362, 257, 14150, 23960, 13, 50487, 50487, 663, 307, 472, 551, 309, 445, 1177, 380, 362, 13, 50589, 50589, 467, 1177, 380, 362, 13985, 420, 604, 1333, 295, 1412, 3877, 13, 50791, 50791, 1057, 291, 483, 307, 341, 472, 2603, 10957, 10225, 11, 512, 9415, 281, 574, 666, 300, 13, 51165, 51165, 400, 291, 483, 6828, 293, 291, 483, 1451, 3467, 13, 51355, 51355, 9436, 498, 291, 4090, 6828, 13, 51474, 51474, 400, 729, 1451, 3467, 366, 8858, 857, 24922, 11, 12145, 857, 24922, 11, 8858, 857, 15706, 11, 293, 12145, 857, 15706, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.14919821421305338, "compression_ratio": 1.7788018433179724, "no_caption_prob": 1.241121117345756e-05}, {"id": 324, "seek": 132642, "start": 1334.96, "end": 1342.44, "text": " All you get is this one huge continuous array, some instructions to look into that.", "tokens": [50364, 1743, 309, 1177, 380, 362, 257, 14150, 23960, 13, 50487, 50487, 663, 307, 472, 551, 309, 445, 1177, 380, 362, 13, 50589, 50589, 467, 1177, 380, 362, 13985, 420, 604, 1333, 295, 1412, 3877, 13, 50791, 50791, 1057, 291, 483, 307, 341, 472, 2603, 10957, 10225, 11, 512, 9415, 281, 574, 666, 300, 13, 51165, 51165, 400, 291, 483, 6828, 293, 291, 483, 1451, 3467, 13, 51355, 51355, 9436, 498, 291, 4090, 6828, 13, 51474, 51474, 400, 729, 1451, 3467, 366, 8858, 857, 24922, 11, 12145, 857, 24922, 11, 8858, 857, 15706, 11, 293, 12145, 857, 15706, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.14919821421305338, "compression_ratio": 1.7788018433179724, "no_caption_prob": 1.241121117345756e-05}, {"id": 325, "seek": 132642, "start": 1342.44, "end": 1346.24, "text": " And you get functions and you get four types.", "tokens": [50364, 1743, 309, 1177, 380, 362, 257, 14150, 23960, 13, 50487, 50487, 663, 307, 472, 551, 309, 445, 1177, 380, 362, 13, 50589, 50589, 467, 1177, 380, 362, 13985, 420, 604, 1333, 295, 1412, 3877, 13, 50791, 50791, 1057, 291, 483, 307, 341, 472, 2603, 10957, 10225, 11, 512, 9415, 281, 574, 666, 300, 13, 51165, 51165, 400, 291, 483, 6828, 293, 291, 483, 1451, 3467, 13, 51355, 51355, 9436, 498, 291, 4090, 6828, 13, 51474, 51474, 400, 729, 1451, 3467, 366, 8858, 857, 24922, 11, 12145, 857, 24922, 11, 8858, 857, 15706, 11, 293, 12145, 857, 15706, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.14919821421305338, "compression_ratio": 1.7788018433179724, "no_caption_prob": 1.241121117345756e-05}, {"id": 326, "seek": 132642, "start": 1346.24, "end": 1348.6200000000001, "text": " Five if you include functions.", "tokens": [50364, 1743, 309, 1177, 380, 362, 257, 14150, 23960, 13, 50487, 50487, 663, 307, 472, 551, 309, 445, 1177, 380, 362, 13, 50589, 50589, 467, 1177, 380, 362, 13985, 420, 604, 1333, 295, 1412, 3877, 13, 50791, 50791, 1057, 291, 483, 307, 341, 472, 2603, 10957, 10225, 11, 512, 9415, 281, 574, 666, 300, 13, 51165, 51165, 400, 291, 483, 6828, 293, 291, 483, 1451, 3467, 13, 51355, 51355, 9436, 498, 291, 4090, 6828, 13, 51474, 51474, 400, 729, 1451, 3467, 366, 8858, 857, 24922, 11, 12145, 857, 24922, 11, 8858, 857, 15706, 11, 293, 12145, 857, 15706, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.14919821421305338, "compression_ratio": 1.7788018433179724, "no_caption_prob": 1.241121117345756e-05}, {"id": 327, "seek": 132642, "start": 1348.6200000000001, "end": 1355.96, "text": " And those four types are 32 bit integer, 64 bit integer, 32 bit float, and 64 bit float.", "tokens": [50364, 1743, 309, 1177, 380, 362, 257, 14150, 23960, 13, 50487, 50487, 663, 307, 472, 551, 309, 445, 1177, 380, 362, 13, 50589, 50589, 467, 1177, 380, 362, 13985, 420, 604, 1333, 295, 1412, 3877, 13, 50791, 50791, 1057, 291, 483, 307, 341, 472, 2603, 10957, 10225, 11, 512, 9415, 281, 574, 666, 300, 13, 51165, 51165, 400, 291, 483, 6828, 293, 291, 483, 1451, 3467, 13, 51355, 51355, 9436, 498, 291, 4090, 6828, 13, 51474, 51474, 400, 729, 1451, 3467, 366, 8858, 857, 24922, 11, 12145, 857, 24922, 11, 8858, 857, 15706, 11, 293, 12145, 857, 15706, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.14919821421305338, "compression_ratio": 1.7788018433179724, "no_caption_prob": 1.241121117345756e-05}, {"id": 328, "seek": 135596, "start": 1355.96, "end": 1359.76, "text": " And that's really all you have to work with.", "tokens": [50364, 400, 300, 311, 534, 439, 291, 362, 281, 589, 365, 13, 50554, 50554, 35523, 264, 935, 300, 561, 519, 300, 9573, 10884, 19160, 486, 808, 294, 293, 5039, 439, 527, 50714, 50714, 3389, 2740, 11, 300, 311, 406, 534, 2074, 13, 50894, 50894, 1743, 498, 291, 362, 257, 31958, 300, 637, 1208, 484, 588, 3612, 281, 19719, 15778, 293, 291, 51250, 51250, 362, 257, 31958, 300, 715, 4680, 666, 588, 2042, 394, 9573, 10884, 19160, 11, 291, 393, 1391, 2066, 466, 51603, 51603, 264, 912, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1463077670925266, "compression_ratio": 1.726027397260274, "no_caption_prob": 1.9525437892298214e-05}, {"id": 329, "seek": 135596, "start": 1359.76, "end": 1362.96, "text": " Regarding the point that people think that WebAssembly will come in and solve all our", "tokens": [50364, 400, 300, 311, 534, 439, 291, 362, 281, 589, 365, 13, 50554, 50554, 35523, 264, 935, 300, 561, 519, 300, 9573, 10884, 19160, 486, 808, 294, 293, 5039, 439, 527, 50714, 50714, 3389, 2740, 11, 300, 311, 406, 534, 2074, 13, 50894, 50894, 1743, 498, 291, 362, 257, 31958, 300, 637, 1208, 484, 588, 3612, 281, 19719, 15778, 293, 291, 51250, 51250, 362, 257, 31958, 300, 715, 4680, 666, 588, 2042, 394, 9573, 10884, 19160, 11, 291, 393, 1391, 2066, 466, 51603, 51603, 264, 912, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1463077670925266, "compression_ratio": 1.726027397260274, "no_caption_prob": 1.9525437892298214e-05}, {"id": 330, "seek": 135596, "start": 1362.96, "end": 1366.56, "text": " performance problems, that's not really true.", "tokens": [50364, 400, 300, 311, 534, 439, 291, 362, 281, 589, 365, 13, 50554, 50554, 35523, 264, 935, 300, 561, 519, 300, 9573, 10884, 19160, 486, 808, 294, 293, 5039, 439, 527, 50714, 50714, 3389, 2740, 11, 300, 311, 406, 534, 2074, 13, 50894, 50894, 1743, 498, 291, 362, 257, 31958, 300, 637, 1208, 484, 588, 3612, 281, 19719, 15778, 293, 291, 51250, 51250, 362, 257, 31958, 300, 715, 4680, 666, 588, 2042, 394, 9573, 10884, 19160, 11, 291, 393, 1391, 2066, 466, 51603, 51603, 264, 912, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1463077670925266, "compression_ratio": 1.726027397260274, "no_caption_prob": 1.9525437892298214e-05}, {"id": 331, "seek": 135596, "start": 1366.56, "end": 1373.68, "text": " Like if you have a compiler that spits out very easily to optimize JavaScript and you", "tokens": [50364, 400, 300, 311, 534, 439, 291, 362, 281, 589, 365, 13, 50554, 50554, 35523, 264, 935, 300, 561, 519, 300, 9573, 10884, 19160, 486, 808, 294, 293, 5039, 439, 527, 50714, 50714, 3389, 2740, 11, 300, 311, 406, 534, 2074, 13, 50894, 50894, 1743, 498, 291, 362, 257, 31958, 300, 637, 1208, 484, 588, 3612, 281, 19719, 15778, 293, 291, 51250, 51250, 362, 257, 31958, 300, 715, 4680, 666, 588, 2042, 394, 9573, 10884, 19160, 11, 291, 393, 1391, 2066, 466, 51603, 51603, 264, 912, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1463077670925266, "compression_ratio": 1.726027397260274, "no_caption_prob": 1.9525437892298214e-05}, {"id": 332, "seek": 135596, "start": 1373.68, "end": 1380.74, "text": " have a compiler that compiles into very performant WebAssembly, you can probably expect about", "tokens": [50364, 400, 300, 311, 534, 439, 291, 362, 281, 589, 365, 13, 50554, 50554, 35523, 264, 935, 300, 561, 519, 300, 9573, 10884, 19160, 486, 808, 294, 293, 5039, 439, 527, 50714, 50714, 3389, 2740, 11, 300, 311, 406, 534, 2074, 13, 50894, 50894, 1743, 498, 291, 362, 257, 31958, 300, 637, 1208, 484, 588, 3612, 281, 19719, 15778, 293, 291, 51250, 51250, 362, 257, 31958, 300, 715, 4680, 666, 588, 2042, 394, 9573, 10884, 19160, 11, 291, 393, 1391, 2066, 466, 51603, 51603, 264, 912, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1463077670925266, "compression_ratio": 1.726027397260274, "no_caption_prob": 1.9525437892298214e-05}, {"id": 333, "seek": 135596, "start": 1380.74, "end": 1382.28, "text": " the same performance.", "tokens": [50364, 400, 300, 311, 534, 439, 291, 362, 281, 589, 365, 13, 50554, 50554, 35523, 264, 935, 300, 561, 519, 300, 9573, 10884, 19160, 486, 808, 294, 293, 5039, 439, 527, 50714, 50714, 3389, 2740, 11, 300, 311, 406, 534, 2074, 13, 50894, 50894, 1743, 498, 291, 362, 257, 31958, 300, 637, 1208, 484, 588, 3612, 281, 19719, 15778, 293, 291, 51250, 51250, 362, 257, 31958, 300, 715, 4680, 666, 588, 2042, 394, 9573, 10884, 19160, 11, 291, 393, 1391, 2066, 466, 51603, 51603, 264, 912, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.1463077670925266, "compression_ratio": 1.726027397260274, "no_caption_prob": 1.9525437892298214e-05}, {"id": 334, "seek": 138228, "start": 1382.28, "end": 1387.28, "text": " However, the thing about WebAssembly is that it doesn't, since it's not JavaScript and", "tokens": [50364, 2908, 11, 264, 551, 466, 9573, 10884, 19160, 307, 300, 309, 1177, 380, 11, 1670, 309, 311, 406, 15778, 293, 50614, 50614, 1670, 291, 500, 380, 362, 281, 360, 257, 688, 295, 3219, 1507, 281, 483, 665, 3389, 11, 9573, 10884, 19160, 11, 50924, 50924, 411, 456, 307, 572, 2041, 1902, 3288, 13, 51003, 51003, 440, 31958, 1177, 380, 362, 281, 2041, 577, 360, 286, 31413, 341, 294, 264, 881, 16252, 636, 13, 51256, 51256, 467, 2935, 445, 11, 1392, 11, 613, 40846, 14211, 393, 312, 36548, 3838, 666, 341, 13, 51494, 51494, 400, 370, 309, 311, 709, 4663, 281, 31413, 293, 309, 1177, 380, 362, 281, 2041, 577, 341, 820, 312, 36548, 11, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1070586463152352, "compression_ratio": 1.712686567164179, "no_caption_prob": 6.438795026042499e-06}, {"id": 335, "seek": 138228, "start": 1387.28, "end": 1393.48, "text": " since you don't have to do a lot of crazy stuff to get good performance, WebAssembly,", "tokens": [50364, 2908, 11, 264, 551, 466, 9573, 10884, 19160, 307, 300, 309, 1177, 380, 11, 1670, 309, 311, 406, 15778, 293, 50614, 50614, 1670, 291, 500, 380, 362, 281, 360, 257, 688, 295, 3219, 1507, 281, 483, 665, 3389, 11, 9573, 10884, 19160, 11, 50924, 50924, 411, 456, 307, 572, 2041, 1902, 3288, 13, 51003, 51003, 440, 31958, 1177, 380, 362, 281, 2041, 577, 360, 286, 31413, 341, 294, 264, 881, 16252, 636, 13, 51256, 51256, 467, 2935, 445, 11, 1392, 11, 613, 40846, 14211, 393, 312, 36548, 3838, 666, 341, 13, 51494, 51494, 400, 370, 309, 311, 709, 4663, 281, 31413, 293, 309, 1177, 380, 362, 281, 2041, 577, 341, 820, 312, 36548, 11, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1070586463152352, "compression_ratio": 1.712686567164179, "no_caption_prob": 6.438795026042499e-06}, {"id": 336, "seek": 138228, "start": 1393.48, "end": 1395.06, "text": " like there is no guesswork involved.", "tokens": [50364, 2908, 11, 264, 551, 466, 9573, 10884, 19160, 307, 300, 309, 1177, 380, 11, 1670, 309, 311, 406, 15778, 293, 50614, 50614, 1670, 291, 500, 380, 362, 281, 360, 257, 688, 295, 3219, 1507, 281, 483, 665, 3389, 11, 9573, 10884, 19160, 11, 50924, 50924, 411, 456, 307, 572, 2041, 1902, 3288, 13, 51003, 51003, 440, 31958, 1177, 380, 362, 281, 2041, 577, 360, 286, 31413, 341, 294, 264, 881, 16252, 636, 13, 51256, 51256, 467, 2935, 445, 11, 1392, 11, 613, 40846, 14211, 393, 312, 36548, 3838, 666, 341, 13, 51494, 51494, 400, 370, 309, 311, 709, 4663, 281, 31413, 293, 309, 1177, 380, 362, 281, 2041, 577, 341, 820, 312, 36548, 11, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1070586463152352, "compression_ratio": 1.712686567164179, "no_caption_prob": 6.438795026042499e-06}, {"id": 337, "seek": 138228, "start": 1395.06, "end": 1400.12, "text": " The compiler doesn't have to guess how do I compile this in the most optimal way.", "tokens": [50364, 2908, 11, 264, 551, 466, 9573, 10884, 19160, 307, 300, 309, 1177, 380, 11, 1670, 309, 311, 406, 15778, 293, 50614, 50614, 1670, 291, 500, 380, 362, 281, 360, 257, 688, 295, 3219, 1507, 281, 483, 665, 3389, 11, 9573, 10884, 19160, 11, 50924, 50924, 411, 456, 307, 572, 2041, 1902, 3288, 13, 51003, 51003, 440, 31958, 1177, 380, 362, 281, 2041, 577, 360, 286, 31413, 341, 294, 264, 881, 16252, 636, 13, 51256, 51256, 467, 2935, 445, 11, 1392, 11, 613, 40846, 14211, 393, 312, 36548, 3838, 666, 341, 13, 51494, 51494, 400, 370, 309, 311, 709, 4663, 281, 31413, 293, 309, 1177, 380, 362, 281, 2041, 577, 341, 820, 312, 36548, 11, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1070586463152352, "compression_ratio": 1.712686567164179, "no_caption_prob": 6.438795026042499e-06}, {"id": 338, "seek": 138228, "start": 1400.12, "end": 1404.8799999999999, "text": " It simply just, okay, these byte codes can be compiled directly into this.", "tokens": [50364, 2908, 11, 264, 551, 466, 9573, 10884, 19160, 307, 300, 309, 1177, 380, 11, 1670, 309, 311, 406, 15778, 293, 50614, 50614, 1670, 291, 500, 380, 362, 281, 360, 257, 688, 295, 3219, 1507, 281, 483, 665, 3389, 11, 9573, 10884, 19160, 11, 50924, 50924, 411, 456, 307, 572, 2041, 1902, 3288, 13, 51003, 51003, 440, 31958, 1177, 380, 362, 281, 2041, 577, 360, 286, 31413, 341, 294, 264, 881, 16252, 636, 13, 51256, 51256, 467, 2935, 445, 11, 1392, 11, 613, 40846, 14211, 393, 312, 36548, 3838, 666, 341, 13, 51494, 51494, 400, 370, 309, 311, 709, 4663, 281, 31413, 293, 309, 1177, 380, 362, 281, 2041, 577, 341, 820, 312, 36548, 11, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1070586463152352, "compression_ratio": 1.712686567164179, "no_caption_prob": 6.438795026042499e-06}, {"id": 339, "seek": 138228, "start": 1404.8799999999999, "end": 1410.84, "text": " And so it's much faster to compile and it doesn't have to guess how this should be compiled,", "tokens": [50364, 2908, 11, 264, 551, 466, 9573, 10884, 19160, 307, 300, 309, 1177, 380, 11, 1670, 309, 311, 406, 15778, 293, 50614, 50614, 1670, 291, 500, 380, 362, 281, 360, 257, 688, 295, 3219, 1507, 281, 483, 665, 3389, 11, 9573, 10884, 19160, 11, 50924, 50924, 411, 456, 307, 572, 2041, 1902, 3288, 13, 51003, 51003, 440, 31958, 1177, 380, 362, 281, 2041, 577, 360, 286, 31413, 341, 294, 264, 881, 16252, 636, 13, 51256, 51256, 467, 2935, 445, 11, 1392, 11, 613, 40846, 14211, 393, 312, 36548, 3838, 666, 341, 13, 51494, 51494, 400, 370, 309, 311, 709, 4663, 281, 31413, 293, 309, 1177, 380, 362, 281, 2041, 577, 341, 820, 312, 36548, 11, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1070586463152352, "compression_ratio": 1.712686567164179, "no_caption_prob": 6.438795026042499e-06}, {"id": 340, "seek": 141084, "start": 1410.84, "end": 1415.24, "text": " which means it doesn't get a lot of stuff wrong.", "tokens": [50364, 597, 1355, 309, 1177, 380, 483, 257, 688, 295, 1507, 2085, 13, 50584, 50584, 400, 264, 1874, 295, 300, 307, 300, 291, 393, 2066, 281, 257, 709, 2946, 4314, 437, 264, 3389, 50901, 50901, 295, 36548, 9573, 10884, 19160, 486, 312, 5347, 281, 15778, 13, 51074, 51074, 1436, 294, 15778, 11, 1203, 5946, 322, 437, 2314, 412, 34474, 13, 51320, 51320, 407, 498, 291, 362, 257, 588, 2199, 1461, 11, 439, 309, 775, 307, 300, 309, 2516, 364, 10225, 295, 257, 4714, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09643202049787654, "compression_ratio": 1.5502183406113537, "no_caption_prob": 3.7265847367962124e-06}, {"id": 341, "seek": 141084, "start": 1415.24, "end": 1421.58, "text": " And the result of that is that you can expect to a much higher degree what the performance", "tokens": [50364, 597, 1355, 309, 1177, 380, 483, 257, 688, 295, 1507, 2085, 13, 50584, 50584, 400, 264, 1874, 295, 300, 307, 300, 291, 393, 2066, 281, 257, 709, 2946, 4314, 437, 264, 3389, 50901, 50901, 295, 36548, 9573, 10884, 19160, 486, 312, 5347, 281, 15778, 13, 51074, 51074, 1436, 294, 15778, 11, 1203, 5946, 322, 437, 2314, 412, 34474, 13, 51320, 51320, 407, 498, 291, 362, 257, 588, 2199, 1461, 11, 439, 309, 775, 307, 300, 309, 2516, 364, 10225, 295, 257, 4714, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09643202049787654, "compression_ratio": 1.5502183406113537, "no_caption_prob": 3.7265847367962124e-06}, {"id": 342, "seek": 141084, "start": 1421.58, "end": 1425.04, "text": " of compiled WebAssembly will be compared to JavaScript.", "tokens": [50364, 597, 1355, 309, 1177, 380, 483, 257, 688, 295, 1507, 2085, 13, 50584, 50584, 400, 264, 1874, 295, 300, 307, 300, 291, 393, 2066, 281, 257, 709, 2946, 4314, 437, 264, 3389, 50901, 50901, 295, 36548, 9573, 10884, 19160, 486, 312, 5347, 281, 15778, 13, 51074, 51074, 1436, 294, 15778, 11, 1203, 5946, 322, 437, 2314, 412, 34474, 13, 51320, 51320, 407, 498, 291, 362, 257, 588, 2199, 1461, 11, 439, 309, 775, 307, 300, 309, 2516, 364, 10225, 295, 257, 4714, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09643202049787654, "compression_ratio": 1.5502183406113537, "no_caption_prob": 3.7265847367962124e-06}, {"id": 343, "seek": 141084, "start": 1425.04, "end": 1429.9599999999998, "text": " Because in JavaScript, everything depends on what happens at runtime.", "tokens": [50364, 597, 1355, 309, 1177, 380, 483, 257, 688, 295, 1507, 2085, 13, 50584, 50584, 400, 264, 1874, 295, 300, 307, 300, 291, 393, 2066, 281, 257, 709, 2946, 4314, 437, 264, 3389, 50901, 50901, 295, 36548, 9573, 10884, 19160, 486, 312, 5347, 281, 15778, 13, 51074, 51074, 1436, 294, 15778, 11, 1203, 5946, 322, 437, 2314, 412, 34474, 13, 51320, 51320, 407, 498, 291, 362, 257, 588, 2199, 1461, 11, 439, 309, 775, 307, 300, 309, 2516, 364, 10225, 295, 257, 4714, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09643202049787654, "compression_ratio": 1.5502183406113537, "no_caption_prob": 3.7265847367962124e-06}, {"id": 344, "seek": 141084, "start": 1429.9599999999998, "end": 1437.24, "text": " So if you have a very simple program, all it does is that it takes an array of a thousand", "tokens": [50364, 597, 1355, 309, 1177, 380, 483, 257, 688, 295, 1507, 2085, 13, 50584, 50584, 400, 264, 1874, 295, 300, 307, 300, 291, 393, 2066, 281, 257, 709, 2946, 4314, 437, 264, 3389, 50901, 50901, 295, 36548, 9573, 10884, 19160, 486, 312, 5347, 281, 15778, 13, 51074, 51074, 1436, 294, 15778, 11, 1203, 5946, 322, 437, 2314, 412, 34474, 13, 51320, 51320, 407, 498, 291, 362, 257, 588, 2199, 1461, 11, 439, 309, 775, 307, 300, 309, 2516, 364, 10225, 295, 257, 4714, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09643202049787654, "compression_ratio": 1.5502183406113537, "no_caption_prob": 3.7265847367962124e-06}, {"id": 345, "seek": 143724, "start": 1437.24, "end": 1442.16, "text": " elements and wants to call the plus operation on them.", "tokens": [50364, 4959, 293, 2738, 281, 818, 264, 1804, 6916, 322, 552, 13, 50610, 50610, 467, 311, 257, 588, 2199, 551, 281, 2464, 294, 15778, 13, 50782, 50782, 467, 311, 7226, 2199, 281, 2464, 294, 9573, 10884, 19160, 13, 50898, 50898, 682, 9573, 10884, 19160, 11, 498, 300, 10225, 8306, 41674, 420, 498, 309, 8306, 13985, 11, 309, 486, 312, 1238, 51308, 51308, 709, 264, 912, 3389, 498, 291, 4445, 309, 281, 1406, 1293, 13, 51488, 51488, 509, 486, 483, 264, 912, 3389, 633, 565, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1059999791058627, "compression_ratio": 1.680952380952381, "no_caption_prob": 9.972391126211733e-06}, {"id": 346, "seek": 143724, "start": 1442.16, "end": 1445.6, "text": " It's a very simple thing to write in JavaScript.", "tokens": [50364, 4959, 293, 2738, 281, 818, 264, 1804, 6916, 322, 552, 13, 50610, 50610, 467, 311, 257, 588, 2199, 551, 281, 2464, 294, 15778, 13, 50782, 50782, 467, 311, 7226, 2199, 281, 2464, 294, 9573, 10884, 19160, 13, 50898, 50898, 682, 9573, 10884, 19160, 11, 498, 300, 10225, 8306, 41674, 420, 498, 309, 8306, 13985, 11, 309, 486, 312, 1238, 51308, 51308, 709, 264, 912, 3389, 498, 291, 4445, 309, 281, 1406, 1293, 13, 51488, 51488, 509, 486, 483, 264, 912, 3389, 633, 565, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1059999791058627, "compression_ratio": 1.680952380952381, "no_caption_prob": 9.972391126211733e-06}, {"id": 347, "seek": 143724, "start": 1445.6, "end": 1447.92, "text": " It's relatively simple to write in WebAssembly.", "tokens": [50364, 4959, 293, 2738, 281, 818, 264, 1804, 6916, 322, 552, 13, 50610, 50610, 467, 311, 257, 588, 2199, 551, 281, 2464, 294, 15778, 13, 50782, 50782, 467, 311, 7226, 2199, 281, 2464, 294, 9573, 10884, 19160, 13, 50898, 50898, 682, 9573, 10884, 19160, 11, 498, 300, 10225, 8306, 41674, 420, 498, 309, 8306, 13985, 11, 309, 486, 312, 1238, 51308, 51308, 709, 264, 912, 3389, 498, 291, 4445, 309, 281, 1406, 1293, 13, 51488, 51488, 509, 486, 483, 264, 912, 3389, 633, 565, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1059999791058627, "compression_ratio": 1.680952380952381, "no_caption_prob": 9.972391126211733e-06}, {"id": 348, "seek": 143724, "start": 1447.92, "end": 1456.1200000000001, "text": " In WebAssembly, if that array contains integers or if it contains strings, it will be pretty", "tokens": [50364, 4959, 293, 2738, 281, 818, 264, 1804, 6916, 322, 552, 13, 50610, 50610, 467, 311, 257, 588, 2199, 551, 281, 2464, 294, 15778, 13, 50782, 50782, 467, 311, 7226, 2199, 281, 2464, 294, 9573, 10884, 19160, 13, 50898, 50898, 682, 9573, 10884, 19160, 11, 498, 300, 10225, 8306, 41674, 420, 498, 309, 8306, 13985, 11, 309, 486, 312, 1238, 51308, 51308, 709, 264, 912, 3389, 498, 291, 4445, 309, 281, 1406, 1293, 13, 51488, 51488, 509, 486, 483, 264, 912, 3389, 633, 565, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1059999791058627, "compression_ratio": 1.680952380952381, "no_caption_prob": 9.972391126211733e-06}, {"id": 349, "seek": 143724, "start": 1456.1200000000001, "end": 1459.72, "text": " much the same performance if you implement it to support both.", "tokens": [50364, 4959, 293, 2738, 281, 818, 264, 1804, 6916, 322, 552, 13, 50610, 50610, 467, 311, 257, 588, 2199, 551, 281, 2464, 294, 15778, 13, 50782, 50782, 467, 311, 7226, 2199, 281, 2464, 294, 9573, 10884, 19160, 13, 50898, 50898, 682, 9573, 10884, 19160, 11, 498, 300, 10225, 8306, 41674, 420, 498, 309, 8306, 13985, 11, 309, 486, 312, 1238, 51308, 51308, 709, 264, 912, 3389, 498, 291, 4445, 309, 281, 1406, 1293, 13, 51488, 51488, 509, 486, 483, 264, 912, 3389, 633, 565, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1059999791058627, "compression_ratio": 1.680952380952381, "no_caption_prob": 9.972391126211733e-06}, {"id": 350, "seek": 143724, "start": 1459.72, "end": 1462.24, "text": " You will get the same performance every time.", "tokens": [50364, 4959, 293, 2738, 281, 818, 264, 1804, 6916, 322, 552, 13, 50610, 50610, 467, 311, 257, 588, 2199, 551, 281, 2464, 294, 15778, 13, 50782, 50782, 467, 311, 7226, 2199, 281, 2464, 294, 9573, 10884, 19160, 13, 50898, 50898, 682, 9573, 10884, 19160, 11, 498, 300, 10225, 8306, 41674, 420, 498, 309, 8306, 13985, 11, 309, 486, 312, 1238, 51308, 51308, 709, 264, 912, 3389, 498, 291, 4445, 309, 281, 1406, 1293, 13, 51488, 51488, 509, 486, 483, 264, 912, 3389, 633, 565, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1059999791058627, "compression_ratio": 1.680952380952381, "no_caption_prob": 9.972391126211733e-06}, {"id": 351, "seek": 146224, "start": 1462.24, "end": 1468.56, "text": " In JavaScript, if the just in time compiler only sees arrays of integers, you will get", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 352, "seek": 146224, "start": 1468.56, "end": 1469.76, "text": " very good performance.", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 353, "seek": 146224, "start": 1469.76, "end": 1474.68, "text": " But if it sees sometimes an array of integers and sometimes an array of strings, then you", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 354, "seek": 146224, "start": 1474.68, "end": 1478.24, "text": " will get worse performance than if it only sees integers.", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 355, "seek": 146224, "start": 1478.24, "end": 1480.58, "text": " It can't specialize the code as well.", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 356, "seek": 146224, "start": 1480.58, "end": 1485.04, "text": " So in WebAssembly, you can write code where I expect it to have this performance profile", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 357, "seek": 146224, "start": 1485.04, "end": 1487.24, "text": " and it will pretty much always have that.", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 358, "seek": 146224, "start": 1487.24, "end": 1492.2, "text": " Whereas in JavaScript, it all depends on what the just in time compiler sees when the program", "tokens": [50364, 682, 15778, 11, 498, 264, 445, 294, 565, 31958, 787, 8194, 41011, 295, 41674, 11, 291, 486, 483, 50680, 50680, 588, 665, 3389, 13, 50740, 50740, 583, 498, 309, 8194, 2171, 364, 10225, 295, 41674, 293, 2171, 364, 10225, 295, 13985, 11, 550, 291, 50986, 50986, 486, 483, 5324, 3389, 813, 498, 309, 787, 8194, 41674, 13, 51164, 51164, 467, 393, 380, 37938, 264, 3089, 382, 731, 13, 51281, 51281, 407, 294, 9573, 10884, 19160, 11, 291, 393, 2464, 3089, 689, 286, 2066, 309, 281, 362, 341, 3389, 7964, 51504, 51504, 293, 309, 486, 1238, 709, 1009, 362, 300, 13, 51614, 51614, 13813, 294, 15778, 11, 309, 439, 5946, 322, 437, 264, 445, 294, 565, 31958, 8194, 562, 264, 1461, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1011536967369818, "compression_ratio": 1.911764705882353, "no_caption_prob": 1.9524741219356656e-05}, {"id": 359, "seek": 149220, "start": 1492.2, "end": 1493.2, "text": " is running.", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 360, "seek": 149220, "start": 1493.2, "end": 1494.2, "text": " Yeah.", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 361, "seek": 149220, "start": 1494.2, "end": 1498.0, "text": " And you also remove all those checks that we mentioned like, is this indeed an integer?", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 362, "seek": 149220, "start": 1498.0, "end": 1500.16, "text": " Is this indeed a string?", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 363, "seek": 149220, "start": 1500.16, "end": 1504.56, "text": " Those won't have to be done in WebAssembly, but they're done under the hood in JavaScript", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 364, "seek": 149220, "start": 1504.56, "end": 1505.76, "text": " all the time.", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 365, "seek": 149220, "start": 1505.76, "end": 1506.76, "text": " That's true.", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 366, "seek": 149220, "start": 1506.76, "end": 1512.64, "text": " But so there was this blog post and I don't remember the name of it.", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 367, "seek": 149220, "start": 1512.64, "end": 1516.48, "text": " I can try to find out later and maybe we can add it to show notes.", "tokens": [50364, 307, 2614, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 291, 611, 4159, 439, 729, 13834, 300, 321, 2835, 411, 11, 307, 341, 6451, 364, 24922, 30, 50654, 50654, 1119, 341, 6451, 257, 6798, 30, 50762, 50762, 3950, 1582, 380, 362, 281, 312, 1096, 294, 9573, 10884, 19160, 11, 457, 436, 434, 1096, 833, 264, 13376, 294, 15778, 50982, 50982, 439, 264, 565, 13, 51042, 51042, 663, 311, 2074, 13, 51092, 51092, 583, 370, 456, 390, 341, 6968, 2183, 293, 286, 500, 380, 1604, 264, 1315, 295, 309, 13, 51386, 51386, 286, 393, 853, 281, 915, 484, 1780, 293, 1310, 321, 393, 909, 309, 281, 855, 5570, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.13447307688849314, "compression_ratio": 1.569672131147541, "no_caption_prob": 0.00022690709738526493}, {"id": 368, "seek": 151648, "start": 1516.48, "end": 1523.1200000000001, "text": " But there was this blog post where somebody wrote, I think it was the Firefox team, which", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 369, "seek": 151648, "start": 1523.1200000000001, "end": 1527.04, "text": " rewrote PDF reader, I think.", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 370, "seek": 151648, "start": 1527.04, "end": 1532.3600000000001, "text": " They rewrote it in WebAssembly and said, look, it's a hundred times faster or something because", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 371, "seek": 151648, "start": 1532.3600000000001, "end": 1534.76, "text": " the previous version was in JavaScript.", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 372, "seek": 151648, "start": 1534.76, "end": 1535.76, "text": " Well, that's promising.", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 373, "seek": 151648, "start": 1535.76, "end": 1536.76, "text": " Yeah.", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 374, "seek": 151648, "start": 1536.76, "end": 1538.76, "text": " A PDF viewer it was.", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 375, "seek": 151648, "start": 1538.76, "end": 1539.76, "text": " Yeah.", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 376, "seek": 151648, "start": 1539.76, "end": 1541.8, "text": " So it was the built in PDF viewer in Firefox.", "tokens": [50364, 583, 456, 390, 341, 6968, 2183, 689, 2618, 4114, 11, 286, 519, 309, 390, 264, 46613, 1469, 11, 597, 50696, 50696, 319, 7449, 1370, 17752, 15149, 11, 286, 519, 13, 50892, 50892, 814, 319, 7449, 1370, 309, 294, 9573, 10884, 19160, 293, 848, 11, 574, 11, 309, 311, 257, 3262, 1413, 4663, 420, 746, 570, 51158, 51158, 264, 3894, 3037, 390, 294, 15778, 13, 51278, 51278, 1042, 11, 300, 311, 20257, 13, 51328, 51328, 865, 13, 51378, 51378, 316, 17752, 16767, 309, 390, 13, 51478, 51478, 865, 13, 51528, 51528, 407, 309, 390, 264, 3094, 294, 17752, 16767, 294, 46613, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.2083719707670666, "compression_ratio": 1.59375, "no_caption_prob": 3.4266446164110675e-05}, {"id": 377, "seek": 154180, "start": 1541.8, "end": 1547.3999999999999, "text": " They rewrote to WebAssembly and it was 50, 100 times faster, something along those lines.", "tokens": [50364, 814, 319, 7449, 1370, 281, 9573, 10884, 19160, 293, 309, 390, 2625, 11, 2319, 1413, 4663, 11, 746, 2051, 729, 3876, 13, 50644, 50644, 400, 550, 456, 390, 257, 1524, 1010, 6968, 2183, 281, 300, 689, 1580, 445, 3105, 264, 15778, 51042, 51042, 3037, 293, 436, 658, 466, 264, 912, 3389, 13, 51303, 51303, 583, 264, 551, 307, 11, 370, 498, 291, 31413, 281, 9573, 10884, 19160, 11, 309, 307, 709, 3571, 337, 291, 281, 1884, 9573, 10884, 19160, 11, 51666, 51666, 597, 486, 976, 291, 264, 1151, 3389, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1373736503276419, "compression_ratio": 1.6200873362445414, "no_caption_prob": 1.5206205716822296e-05}, {"id": 378, "seek": 154180, "start": 1547.3999999999999, "end": 1555.36, "text": " And then there was a followup blog post to that where someone just changed the JavaScript", "tokens": [50364, 814, 319, 7449, 1370, 281, 9573, 10884, 19160, 293, 309, 390, 2625, 11, 2319, 1413, 4663, 11, 746, 2051, 729, 3876, 13, 50644, 50644, 400, 550, 456, 390, 257, 1524, 1010, 6968, 2183, 281, 300, 689, 1580, 445, 3105, 264, 15778, 51042, 51042, 3037, 293, 436, 658, 466, 264, 912, 3389, 13, 51303, 51303, 583, 264, 551, 307, 11, 370, 498, 291, 31413, 281, 9573, 10884, 19160, 11, 309, 307, 709, 3571, 337, 291, 281, 1884, 9573, 10884, 19160, 11, 51666, 51666, 597, 486, 976, 291, 264, 1151, 3389, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1373736503276419, "compression_ratio": 1.6200873362445414, "no_caption_prob": 1.5206205716822296e-05}, {"id": 379, "seek": 154180, "start": 1555.36, "end": 1560.58, "text": " version and they got about the same performance.", "tokens": [50364, 814, 319, 7449, 1370, 281, 9573, 10884, 19160, 293, 309, 390, 2625, 11, 2319, 1413, 4663, 11, 746, 2051, 729, 3876, 13, 50644, 50644, 400, 550, 456, 390, 257, 1524, 1010, 6968, 2183, 281, 300, 689, 1580, 445, 3105, 264, 15778, 51042, 51042, 3037, 293, 436, 658, 466, 264, 912, 3389, 13, 51303, 51303, 583, 264, 551, 307, 11, 370, 498, 291, 31413, 281, 9573, 10884, 19160, 11, 309, 307, 709, 3571, 337, 291, 281, 1884, 9573, 10884, 19160, 11, 51666, 51666, 597, 486, 976, 291, 264, 1151, 3389, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1373736503276419, "compression_ratio": 1.6200873362445414, "no_caption_prob": 1.5206205716822296e-05}, {"id": 380, "seek": 154180, "start": 1560.58, "end": 1567.84, "text": " But the thing is, so if you compile to WebAssembly, it is much easier for you to create WebAssembly,", "tokens": [50364, 814, 319, 7449, 1370, 281, 9573, 10884, 19160, 293, 309, 390, 2625, 11, 2319, 1413, 4663, 11, 746, 2051, 729, 3876, 13, 50644, 50644, 400, 550, 456, 390, 257, 1524, 1010, 6968, 2183, 281, 300, 689, 1580, 445, 3105, 264, 15778, 51042, 51042, 3037, 293, 436, 658, 466, 264, 912, 3389, 13, 51303, 51303, 583, 264, 551, 307, 11, 370, 498, 291, 31413, 281, 9573, 10884, 19160, 11, 309, 307, 709, 3571, 337, 291, 281, 1884, 9573, 10884, 19160, 11, 51666, 51666, 597, 486, 976, 291, 264, 1151, 3389, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1373736503276419, "compression_ratio": 1.6200873362445414, "no_caption_prob": 1.5206205716822296e-05}, {"id": 381, "seek": 154180, "start": 1567.84, "end": 1570.72, "text": " which will give you the best performance.", "tokens": [50364, 814, 319, 7449, 1370, 281, 9573, 10884, 19160, 293, 309, 390, 2625, 11, 2319, 1413, 4663, 11, 746, 2051, 729, 3876, 13, 50644, 50644, 400, 550, 456, 390, 257, 1524, 1010, 6968, 2183, 281, 300, 689, 1580, 445, 3105, 264, 15778, 51042, 51042, 3037, 293, 436, 658, 466, 264, 912, 3389, 13, 51303, 51303, 583, 264, 551, 307, 11, 370, 498, 291, 31413, 281, 9573, 10884, 19160, 11, 309, 307, 709, 3571, 337, 291, 281, 1884, 9573, 10884, 19160, 11, 51666, 51666, 597, 486, 976, 291, 264, 1151, 3389, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.1373736503276419, "compression_ratio": 1.6200873362445414, "no_caption_prob": 1.5206205716822296e-05}, {"id": 382, "seek": 157072, "start": 1570.72, "end": 1574.24, "text": " Whereas in JavaScript, you have to not only know JavaScript very well, but you have to", "tokens": [50364, 13813, 294, 15778, 11, 291, 362, 281, 406, 787, 458, 15778, 588, 731, 11, 457, 291, 362, 281, 50540, 50540, 458, 577, 264, 819, 15778, 12982, 31413, 16252, 3089, 13, 50808, 50808, 400, 370, 300, 307, 11, 309, 311, 709, 6081, 281, 1884, 16252, 15778, 300, 715, 4680, 293, 19719, 51078, 51078, 382, 731, 813, 9573, 10884, 19160, 294, 5261, 11, 286, 2041, 13, 51318, 51318, 407, 472, 551, 300, 307, 1238, 12414, 365, 715, 4883, 281, 15778, 293, 9650, 665, 3389, 51586, 51586, 307, 300, 291, 643, 281, 6794, 309, 281, 3866, 4445, 763, 295, 12982, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1023103022107891, "compression_ratio": 1.7578125, "no_caption_prob": 7.889081643952522e-06}, {"id": 383, "seek": 157072, "start": 1574.24, "end": 1579.6000000000001, "text": " know how the different JavaScript engines compile optimal code.", "tokens": [50364, 13813, 294, 15778, 11, 291, 362, 281, 406, 787, 458, 15778, 588, 731, 11, 457, 291, 362, 281, 50540, 50540, 458, 577, 264, 819, 15778, 12982, 31413, 16252, 3089, 13, 50808, 50808, 400, 370, 300, 307, 11, 309, 311, 709, 6081, 281, 1884, 16252, 15778, 300, 715, 4680, 293, 19719, 51078, 51078, 382, 731, 813, 9573, 10884, 19160, 294, 5261, 11, 286, 2041, 13, 51318, 51318, 407, 472, 551, 300, 307, 1238, 12414, 365, 715, 4883, 281, 15778, 293, 9650, 665, 3389, 51586, 51586, 307, 300, 291, 643, 281, 6794, 309, 281, 3866, 4445, 763, 295, 12982, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1023103022107891, "compression_ratio": 1.7578125, "no_caption_prob": 7.889081643952522e-06}, {"id": 384, "seek": 157072, "start": 1579.6000000000001, "end": 1585.0, "text": " And so that is, it's much harder to create optimal JavaScript that compiles and optimize", "tokens": [50364, 13813, 294, 15778, 11, 291, 362, 281, 406, 787, 458, 15778, 588, 731, 11, 457, 291, 362, 281, 50540, 50540, 458, 577, 264, 819, 15778, 12982, 31413, 16252, 3089, 13, 50808, 50808, 400, 370, 300, 307, 11, 309, 311, 709, 6081, 281, 1884, 16252, 15778, 300, 715, 4680, 293, 19719, 51078, 51078, 382, 731, 813, 9573, 10884, 19160, 294, 5261, 11, 286, 2041, 13, 51318, 51318, 407, 472, 551, 300, 307, 1238, 12414, 365, 715, 4883, 281, 15778, 293, 9650, 665, 3389, 51586, 51586, 307, 300, 291, 643, 281, 6794, 309, 281, 3866, 4445, 763, 295, 12982, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1023103022107891, "compression_ratio": 1.7578125, "no_caption_prob": 7.889081643952522e-06}, {"id": 385, "seek": 157072, "start": 1585.0, "end": 1589.8, "text": " as well than WebAssembly in theory, I guess.", "tokens": [50364, 13813, 294, 15778, 11, 291, 362, 281, 406, 787, 458, 15778, 588, 731, 11, 457, 291, 362, 281, 50540, 50540, 458, 577, 264, 819, 15778, 12982, 31413, 16252, 3089, 13, 50808, 50808, 400, 370, 300, 307, 11, 309, 311, 709, 6081, 281, 1884, 16252, 15778, 300, 715, 4680, 293, 19719, 51078, 51078, 382, 731, 813, 9573, 10884, 19160, 294, 5261, 11, 286, 2041, 13, 51318, 51318, 407, 472, 551, 300, 307, 1238, 12414, 365, 715, 4883, 281, 15778, 293, 9650, 665, 3389, 51586, 51586, 307, 300, 291, 643, 281, 6794, 309, 281, 3866, 4445, 763, 295, 12982, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1023103022107891, "compression_ratio": 1.7578125, "no_caption_prob": 7.889081643952522e-06}, {"id": 386, "seek": 157072, "start": 1589.8, "end": 1595.16, "text": " So one thing that is pretty tricky with compiling to JavaScript and expecting good performance", "tokens": [50364, 13813, 294, 15778, 11, 291, 362, 281, 406, 787, 458, 15778, 588, 731, 11, 457, 291, 362, 281, 50540, 50540, 458, 577, 264, 819, 15778, 12982, 31413, 16252, 3089, 13, 50808, 50808, 400, 370, 300, 307, 11, 309, 311, 709, 6081, 281, 1884, 16252, 15778, 300, 715, 4680, 293, 19719, 51078, 51078, 382, 731, 813, 9573, 10884, 19160, 294, 5261, 11, 286, 2041, 13, 51318, 51318, 407, 472, 551, 300, 307, 1238, 12414, 365, 715, 4883, 281, 15778, 293, 9650, 665, 3389, 51586, 51586, 307, 300, 291, 643, 281, 6794, 309, 281, 3866, 4445, 763, 295, 12982, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1023103022107891, "compression_ratio": 1.7578125, "no_caption_prob": 7.889081643952522e-06}, {"id": 387, "seek": 157072, "start": 1595.16, "end": 1600.3600000000001, "text": " is that you need to compare it to multiple implementations of engines.", "tokens": [50364, 13813, 294, 15778, 11, 291, 362, 281, 406, 787, 458, 15778, 588, 731, 11, 457, 291, 362, 281, 50540, 50540, 458, 577, 264, 819, 15778, 12982, 31413, 16252, 3089, 13, 50808, 50808, 400, 370, 300, 307, 11, 309, 311, 709, 6081, 281, 1884, 16252, 15778, 300, 715, 4680, 293, 19719, 51078, 51078, 382, 731, 813, 9573, 10884, 19160, 294, 5261, 11, 286, 2041, 13, 51318, 51318, 407, 472, 551, 300, 307, 1238, 12414, 365, 715, 4883, 281, 15778, 293, 9650, 665, 3389, 51586, 51586, 307, 300, 291, 643, 281, 6794, 309, 281, 3866, 4445, 763, 295, 12982, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1023103022107891, "compression_ratio": 1.7578125, "no_caption_prob": 7.889081643952522e-06}, {"id": 388, "seek": 160036, "start": 1600.36, "end": 1607.04, "text": " So you need to run benchmarks on Chrome, on Firefox, on Safari, and they have very different", "tokens": [50364, 407, 291, 643, 281, 1190, 43751, 322, 15327, 11, 322, 46613, 11, 322, 43820, 11, 293, 436, 362, 588, 819, 50698, 50698, 12982, 293, 4412, 362, 588, 819, 3542, 322, 43751, 13, 50909, 50909, 407, 498, 291, 1319, 512, 3089, 11, 2171, 291, 486, 362, 1101, 3389, 322, 15327, 293, 51151, 51151, 5324, 3389, 322, 43820, 11, 337, 5197, 13, 51363, 51363, 6068, 300, 611, 312, 264, 1389, 365, 9573, 10884, 19160, 30, 51506, 51506, 6068, 1184, 11185, 362, 641, 1065, 11420, 295, 9573, 10884, 19160, 30, 51716, 51716, 1042, 2086, 11, 436, 486, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.11717741417162346, "compression_ratio": 1.759493670886076, "no_caption_prob": 1.922241790452972e-05}, {"id": 389, "seek": 160036, "start": 1607.04, "end": 1611.26, "text": " engines and therefore have very different results on benchmarks.", "tokens": [50364, 407, 291, 643, 281, 1190, 43751, 322, 15327, 11, 322, 46613, 11, 322, 43820, 11, 293, 436, 362, 588, 819, 50698, 50698, 12982, 293, 4412, 362, 588, 819, 3542, 322, 43751, 13, 50909, 50909, 407, 498, 291, 1319, 512, 3089, 11, 2171, 291, 486, 362, 1101, 3389, 322, 15327, 293, 51151, 51151, 5324, 3389, 322, 43820, 11, 337, 5197, 13, 51363, 51363, 6068, 300, 611, 312, 264, 1389, 365, 9573, 10884, 19160, 30, 51506, 51506, 6068, 1184, 11185, 362, 641, 1065, 11420, 295, 9573, 10884, 19160, 30, 51716, 51716, 1042, 2086, 11, 436, 486, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.11717741417162346, "compression_ratio": 1.759493670886076, "no_caption_prob": 1.922241790452972e-05}, {"id": 390, "seek": 160036, "start": 1611.26, "end": 1616.1, "text": " So if you change some code, sometimes you will have better performance on Chrome and", "tokens": [50364, 407, 291, 643, 281, 1190, 43751, 322, 15327, 11, 322, 46613, 11, 322, 43820, 11, 293, 436, 362, 588, 819, 50698, 50698, 12982, 293, 4412, 362, 588, 819, 3542, 322, 43751, 13, 50909, 50909, 407, 498, 291, 1319, 512, 3089, 11, 2171, 291, 486, 362, 1101, 3389, 322, 15327, 293, 51151, 51151, 5324, 3389, 322, 43820, 11, 337, 5197, 13, 51363, 51363, 6068, 300, 611, 312, 264, 1389, 365, 9573, 10884, 19160, 30, 51506, 51506, 6068, 1184, 11185, 362, 641, 1065, 11420, 295, 9573, 10884, 19160, 30, 51716, 51716, 1042, 2086, 11, 436, 486, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.11717741417162346, "compression_ratio": 1.759493670886076, "no_caption_prob": 1.922241790452972e-05}, {"id": 391, "seek": 160036, "start": 1616.1, "end": 1620.34, "text": " worse performance on Safari, for instance.", "tokens": [50364, 407, 291, 643, 281, 1190, 43751, 322, 15327, 11, 322, 46613, 11, 322, 43820, 11, 293, 436, 362, 588, 819, 50698, 50698, 12982, 293, 4412, 362, 588, 819, 3542, 322, 43751, 13, 50909, 50909, 407, 498, 291, 1319, 512, 3089, 11, 2171, 291, 486, 362, 1101, 3389, 322, 15327, 293, 51151, 51151, 5324, 3389, 322, 43820, 11, 337, 5197, 13, 51363, 51363, 6068, 300, 611, 312, 264, 1389, 365, 9573, 10884, 19160, 30, 51506, 51506, 6068, 1184, 11185, 362, 641, 1065, 11420, 295, 9573, 10884, 19160, 30, 51716, 51716, 1042, 2086, 11, 436, 486, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.11717741417162346, "compression_ratio": 1.759493670886076, "no_caption_prob": 1.922241790452972e-05}, {"id": 392, "seek": 160036, "start": 1620.34, "end": 1623.1999999999998, "text": " Would that also be the case with WebAssembly?", "tokens": [50364, 407, 291, 643, 281, 1190, 43751, 322, 15327, 11, 322, 46613, 11, 322, 43820, 11, 293, 436, 362, 588, 819, 50698, 50698, 12982, 293, 4412, 362, 588, 819, 3542, 322, 43751, 13, 50909, 50909, 407, 498, 291, 1319, 512, 3089, 11, 2171, 291, 486, 362, 1101, 3389, 322, 15327, 293, 51151, 51151, 5324, 3389, 322, 43820, 11, 337, 5197, 13, 51363, 51363, 6068, 300, 611, 312, 264, 1389, 365, 9573, 10884, 19160, 30, 51506, 51506, 6068, 1184, 11185, 362, 641, 1065, 11420, 295, 9573, 10884, 19160, 30, 51716, 51716, 1042, 2086, 11, 436, 486, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.11717741417162346, "compression_ratio": 1.759493670886076, "no_caption_prob": 1.922241790452972e-05}, {"id": 393, "seek": 160036, "start": 1623.1999999999998, "end": 1627.3999999999999, "text": " Would each browser have their own implementation of WebAssembly?", "tokens": [50364, 407, 291, 643, 281, 1190, 43751, 322, 15327, 11, 322, 46613, 11, 322, 43820, 11, 293, 436, 362, 588, 819, 50698, 50698, 12982, 293, 4412, 362, 588, 819, 3542, 322, 43751, 13, 50909, 50909, 407, 498, 291, 1319, 512, 3089, 11, 2171, 291, 486, 362, 1101, 3389, 322, 15327, 293, 51151, 51151, 5324, 3389, 322, 43820, 11, 337, 5197, 13, 51363, 51363, 6068, 300, 611, 312, 264, 1389, 365, 9573, 10884, 19160, 30, 51506, 51506, 6068, 1184, 11185, 362, 641, 1065, 11420, 295, 9573, 10884, 19160, 30, 51716, 51716, 1042, 2086, 11, 436, 486, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.11717741417162346, "compression_ratio": 1.759493670886076, "no_caption_prob": 1.922241790452972e-05}, {"id": 394, "seek": 160036, "start": 1627.3999999999999, "end": 1629.7199999999998, "text": " Well yes, they will.", "tokens": [50364, 407, 291, 643, 281, 1190, 43751, 322, 15327, 11, 322, 46613, 11, 322, 43820, 11, 293, 436, 362, 588, 819, 50698, 50698, 12982, 293, 4412, 362, 588, 819, 3542, 322, 43751, 13, 50909, 50909, 407, 498, 291, 1319, 512, 3089, 11, 2171, 291, 486, 362, 1101, 3389, 322, 15327, 293, 51151, 51151, 5324, 3389, 322, 43820, 11, 337, 5197, 13, 51363, 51363, 6068, 300, 611, 312, 264, 1389, 365, 9573, 10884, 19160, 30, 51506, 51506, 6068, 1184, 11185, 362, 641, 1065, 11420, 295, 9573, 10884, 19160, 30, 51716, 51716, 1042, 2086, 11, 436, 486, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.11717741417162346, "compression_ratio": 1.759493670886076, "no_caption_prob": 1.922241790452972e-05}, {"id": 395, "seek": 162972, "start": 1629.72, "end": 1634.72, "text": " But at the same time, there are only so many ways of compiling a WebAssembly program because", "tokens": [50364, 583, 412, 264, 912, 565, 11, 456, 366, 787, 370, 867, 2098, 295, 715, 4883, 257, 9573, 10884, 19160, 1461, 570, 50614, 50614, 456, 366, 588, 1326, 40846, 14211, 293, 456, 366, 588, 1326, 1412, 9227, 13, 50798, 50798, 400, 4476, 11, 456, 3212, 380, 867, 2098, 300, 257, 2167, 40846, 3089, 10951, 393, 312, 36548, 13, 51130, 51130, 400, 370, 291, 366, 3700, 11, 370, 498, 291, 31413, 9573, 10884, 19160, 257, 2685, 636, 11, 291, 366, 3700, 281, 483, 264, 51442, 51442, 1151, 1944, 3389, 337, 300, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.12446511921129728, "compression_ratio": 1.8101851851851851, "no_caption_prob": 1.8923619791166857e-05}, {"id": 396, "seek": 162972, "start": 1634.72, "end": 1638.4, "text": " there are very few byte codes and there are very few data structures.", "tokens": [50364, 583, 412, 264, 912, 565, 11, 456, 366, 787, 370, 867, 2098, 295, 715, 4883, 257, 9573, 10884, 19160, 1461, 570, 50614, 50614, 456, 366, 588, 1326, 40846, 14211, 293, 456, 366, 588, 1326, 1412, 9227, 13, 50798, 50798, 400, 4476, 11, 456, 3212, 380, 867, 2098, 300, 257, 2167, 40846, 3089, 10951, 393, 312, 36548, 13, 51130, 51130, 400, 370, 291, 366, 3700, 11, 370, 498, 291, 31413, 9573, 10884, 19160, 257, 2685, 636, 11, 291, 366, 3700, 281, 483, 264, 51442, 51442, 1151, 1944, 3389, 337, 300, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.12446511921129728, "compression_ratio": 1.8101851851851851, "no_caption_prob": 1.8923619791166857e-05}, {"id": 397, "seek": 162972, "start": 1638.4, "end": 1645.04, "text": " And essentially, there aren't many ways that a single byte code instruction can be compiled.", "tokens": [50364, 583, 412, 264, 912, 565, 11, 456, 366, 787, 370, 867, 2098, 295, 715, 4883, 257, 9573, 10884, 19160, 1461, 570, 50614, 50614, 456, 366, 588, 1326, 40846, 14211, 293, 456, 366, 588, 1326, 1412, 9227, 13, 50798, 50798, 400, 4476, 11, 456, 3212, 380, 867, 2098, 300, 257, 2167, 40846, 3089, 10951, 393, 312, 36548, 13, 51130, 51130, 400, 370, 291, 366, 3700, 11, 370, 498, 291, 31413, 9573, 10884, 19160, 257, 2685, 636, 11, 291, 366, 3700, 281, 483, 264, 51442, 51442, 1151, 1944, 3389, 337, 300, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.12446511921129728, "compression_ratio": 1.8101851851851851, "no_caption_prob": 1.8923619791166857e-05}, {"id": 398, "seek": 162972, "start": 1645.04, "end": 1651.28, "text": " And so you are likely, so if you compile WebAssembly a specific way, you are likely to get the", "tokens": [50364, 583, 412, 264, 912, 565, 11, 456, 366, 787, 370, 867, 2098, 295, 715, 4883, 257, 9573, 10884, 19160, 1461, 570, 50614, 50614, 456, 366, 588, 1326, 40846, 14211, 293, 456, 366, 588, 1326, 1412, 9227, 13, 50798, 50798, 400, 4476, 11, 456, 3212, 380, 867, 2098, 300, 257, 2167, 40846, 3089, 10951, 393, 312, 36548, 13, 51130, 51130, 400, 370, 291, 366, 3700, 11, 370, 498, 291, 31413, 9573, 10884, 19160, 257, 2685, 636, 11, 291, 366, 3700, 281, 483, 264, 51442, 51442, 1151, 1944, 3389, 337, 300, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.12446511921129728, "compression_ratio": 1.8101851851851851, "no_caption_prob": 1.8923619791166857e-05}, {"id": 399, "seek": 162972, "start": 1651.28, "end": 1655.16, "text": " best possible performance for that code.", "tokens": [50364, 583, 412, 264, 912, 565, 11, 456, 366, 787, 370, 867, 2098, 295, 715, 4883, 257, 9573, 10884, 19160, 1461, 570, 50614, 50614, 456, 366, 588, 1326, 40846, 14211, 293, 456, 366, 588, 1326, 1412, 9227, 13, 50798, 50798, 400, 4476, 11, 456, 3212, 380, 867, 2098, 300, 257, 2167, 40846, 3089, 10951, 393, 312, 36548, 13, 51130, 51130, 400, 370, 291, 366, 3700, 11, 370, 498, 291, 31413, 9573, 10884, 19160, 257, 2685, 636, 11, 291, 366, 3700, 281, 483, 264, 51442, 51442, 1151, 1944, 3389, 337, 300, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.12446511921129728, "compression_ratio": 1.8101851851851851, "no_caption_prob": 1.8923619791166857e-05}, {"id": 400, "seek": 165516, "start": 1655.16, "end": 1661.4, "text": " And of course, the Firefox WebAssembly compiler could be a worse compiler than the Chrome", "tokens": [50364, 400, 295, 1164, 11, 264, 46613, 9573, 10884, 19160, 31958, 727, 312, 257, 5324, 31958, 813, 264, 15327, 50676, 50676, 472, 11, 457, 412, 264, 588, 1935, 11, 291, 434, 406, 24140, 322, 577, 665, 264, 31958, 307, 412, 17939, 577, 51046, 51046, 309, 820, 19719, 264, 3089, 13, 51142, 51142, 286, 478, 17939, 300, 486, 312, 2074, 337, 264, 2863, 11, 457, 1310, 406, 1780, 13, 51378, 51378, 1171, 5197, 11, 286, 478, 17939, 264, 691, 23, 420, 767, 264, 12982, 337, 264, 819, 15778, 12982, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.14307680337325387, "compression_ratio": 1.6347826086956523, "no_caption_prob": 2.046186273219064e-05}, {"id": 401, "seek": 165516, "start": 1661.4, "end": 1668.8000000000002, "text": " one, but at the very least, you're not relying on how good the compiler is at guessing how", "tokens": [50364, 400, 295, 1164, 11, 264, 46613, 9573, 10884, 19160, 31958, 727, 312, 257, 5324, 31958, 813, 264, 15327, 50676, 50676, 472, 11, 457, 412, 264, 588, 1935, 11, 291, 434, 406, 24140, 322, 577, 665, 264, 31958, 307, 412, 17939, 577, 51046, 51046, 309, 820, 19719, 264, 3089, 13, 51142, 51142, 286, 478, 17939, 300, 486, 312, 2074, 337, 264, 2863, 11, 457, 1310, 406, 1780, 13, 51378, 51378, 1171, 5197, 11, 286, 478, 17939, 264, 691, 23, 420, 767, 264, 12982, 337, 264, 819, 15778, 12982, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.14307680337325387, "compression_ratio": 1.6347826086956523, "no_caption_prob": 2.046186273219064e-05}, {"id": 402, "seek": 165516, "start": 1668.8000000000002, "end": 1670.72, "text": " it should optimize the code.", "tokens": [50364, 400, 295, 1164, 11, 264, 46613, 9573, 10884, 19160, 31958, 727, 312, 257, 5324, 31958, 813, 264, 15327, 50676, 50676, 472, 11, 457, 412, 264, 588, 1935, 11, 291, 434, 406, 24140, 322, 577, 665, 264, 31958, 307, 412, 17939, 577, 51046, 51046, 309, 820, 19719, 264, 3089, 13, 51142, 51142, 286, 478, 17939, 300, 486, 312, 2074, 337, 264, 2863, 11, 457, 1310, 406, 1780, 13, 51378, 51378, 1171, 5197, 11, 286, 478, 17939, 264, 691, 23, 420, 767, 264, 12982, 337, 264, 819, 15778, 12982, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.14307680337325387, "compression_ratio": 1.6347826086956523, "no_caption_prob": 2.046186273219064e-05}, {"id": 403, "seek": 165516, "start": 1670.72, "end": 1675.44, "text": " I'm guessing that will be true for the beginning, but maybe not later.", "tokens": [50364, 400, 295, 1164, 11, 264, 46613, 9573, 10884, 19160, 31958, 727, 312, 257, 5324, 31958, 813, 264, 15327, 50676, 50676, 472, 11, 457, 412, 264, 588, 1935, 11, 291, 434, 406, 24140, 322, 577, 665, 264, 31958, 307, 412, 17939, 577, 51046, 51046, 309, 820, 19719, 264, 3089, 13, 51142, 51142, 286, 478, 17939, 300, 486, 312, 2074, 337, 264, 2863, 11, 457, 1310, 406, 1780, 13, 51378, 51378, 1171, 5197, 11, 286, 478, 17939, 264, 691, 23, 420, 767, 264, 12982, 337, 264, 819, 15778, 12982, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.14307680337325387, "compression_ratio": 1.6347826086956523, "no_caption_prob": 2.046186273219064e-05}, {"id": 404, "seek": 165516, "start": 1675.44, "end": 1682.28, "text": " For instance, I'm guessing the V8 or actually the engines for the different JavaScript engines,", "tokens": [50364, 400, 295, 1164, 11, 264, 46613, 9573, 10884, 19160, 31958, 727, 312, 257, 5324, 31958, 813, 264, 15327, 50676, 50676, 472, 11, 457, 412, 264, 588, 1935, 11, 291, 434, 406, 24140, 322, 577, 665, 264, 31958, 307, 412, 17939, 577, 51046, 51046, 309, 820, 19719, 264, 3089, 13, 51142, 51142, 286, 478, 17939, 300, 486, 312, 2074, 337, 264, 2863, 11, 457, 1310, 406, 1780, 13, 51378, 51378, 1171, 5197, 11, 286, 478, 17939, 264, 691, 23, 420, 767, 264, 12982, 337, 264, 819, 15778, 12982, 11, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.14307680337325387, "compression_ratio": 1.6347826086956523, "no_caption_prob": 2.046186273219064e-05}, {"id": 405, "seek": 168228, "start": 1682.28, "end": 1687.6399999999999, "text": " they were not trying to be smart at the beginning, but then they noticed, oh, we can try to be", "tokens": [50364, 436, 645, 406, 1382, 281, 312, 4069, 412, 264, 2863, 11, 457, 550, 436, 5694, 11, 1954, 11, 321, 393, 853, 281, 312, 50632, 50632, 4069, 281, 3470, 3389, 13, 50700, 50700, 400, 550, 436, 445, 6429, 292, 10444, 670, 10444, 293, 1027, 309, 588, 3997, 293, 29466, 48314, 13, 51092, 51092, 400, 286, 478, 17939, 1310, 300, 727, 312, 2074, 337, 9573, 10884, 19160, 382, 731, 11, 1310, 406, 281, 264, 51256, 51256, 912, 8396, 13, 51310, 51310, 407, 286, 914, 11, 300, 311, 1009, 1944, 11, 558, 30, 51468, 51468, 509, 1009, 1190, 264, 3148, 300, 43820, 10860, 1071, 9573, 10884, 19160, 19813, 31958, 11, 597, 775, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11606852776181381, "compression_ratio": 1.6840148698884758, "no_caption_prob": 2.546426185290329e-05}, {"id": 406, "seek": 168228, "start": 1687.6399999999999, "end": 1689.0, "text": " smart to improve performance.", "tokens": [50364, 436, 645, 406, 1382, 281, 312, 4069, 412, 264, 2863, 11, 457, 550, 436, 5694, 11, 1954, 11, 321, 393, 853, 281, 312, 50632, 50632, 4069, 281, 3470, 3389, 13, 50700, 50700, 400, 550, 436, 445, 6429, 292, 10444, 670, 10444, 293, 1027, 309, 588, 3997, 293, 29466, 48314, 13, 51092, 51092, 400, 286, 478, 17939, 1310, 300, 727, 312, 2074, 337, 9573, 10884, 19160, 382, 731, 11, 1310, 406, 281, 264, 51256, 51256, 912, 8396, 13, 51310, 51310, 407, 286, 914, 11, 300, 311, 1009, 1944, 11, 558, 30, 51468, 51468, 509, 1009, 1190, 264, 3148, 300, 43820, 10860, 1071, 9573, 10884, 19160, 19813, 31958, 11, 597, 775, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11606852776181381, "compression_ratio": 1.6840148698884758, "no_caption_prob": 2.546426185290329e-05}, {"id": 407, "seek": 168228, "start": 1689.0, "end": 1696.84, "text": " And then they just piled improvement over improvement and made it very complex and unintuitive.", "tokens": [50364, 436, 645, 406, 1382, 281, 312, 4069, 412, 264, 2863, 11, 457, 550, 436, 5694, 11, 1954, 11, 321, 393, 853, 281, 312, 50632, 50632, 4069, 281, 3470, 3389, 13, 50700, 50700, 400, 550, 436, 445, 6429, 292, 10444, 670, 10444, 293, 1027, 309, 588, 3997, 293, 29466, 48314, 13, 51092, 51092, 400, 286, 478, 17939, 1310, 300, 727, 312, 2074, 337, 9573, 10884, 19160, 382, 731, 11, 1310, 406, 281, 264, 51256, 51256, 912, 8396, 13, 51310, 51310, 407, 286, 914, 11, 300, 311, 1009, 1944, 11, 558, 30, 51468, 51468, 509, 1009, 1190, 264, 3148, 300, 43820, 10860, 1071, 9573, 10884, 19160, 19813, 31958, 11, 597, 775, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11606852776181381, "compression_ratio": 1.6840148698884758, "no_caption_prob": 2.546426185290329e-05}, {"id": 408, "seek": 168228, "start": 1696.84, "end": 1700.12, "text": " And I'm guessing maybe that could be true for WebAssembly as well, maybe not to the", "tokens": [50364, 436, 645, 406, 1382, 281, 312, 4069, 412, 264, 2863, 11, 457, 550, 436, 5694, 11, 1954, 11, 321, 393, 853, 281, 312, 50632, 50632, 4069, 281, 3470, 3389, 13, 50700, 50700, 400, 550, 436, 445, 6429, 292, 10444, 670, 10444, 293, 1027, 309, 588, 3997, 293, 29466, 48314, 13, 51092, 51092, 400, 286, 478, 17939, 1310, 300, 727, 312, 2074, 337, 9573, 10884, 19160, 382, 731, 11, 1310, 406, 281, 264, 51256, 51256, 912, 8396, 13, 51310, 51310, 407, 286, 914, 11, 300, 311, 1009, 1944, 11, 558, 30, 51468, 51468, 509, 1009, 1190, 264, 3148, 300, 43820, 10860, 1071, 9573, 10884, 19160, 19813, 31958, 11, 597, 775, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11606852776181381, "compression_ratio": 1.6840148698884758, "no_caption_prob": 2.546426185290329e-05}, {"id": 409, "seek": 168228, "start": 1700.12, "end": 1701.2, "text": " same extent.", "tokens": [50364, 436, 645, 406, 1382, 281, 312, 4069, 412, 264, 2863, 11, 457, 550, 436, 5694, 11, 1954, 11, 321, 393, 853, 281, 312, 50632, 50632, 4069, 281, 3470, 3389, 13, 50700, 50700, 400, 550, 436, 445, 6429, 292, 10444, 670, 10444, 293, 1027, 309, 588, 3997, 293, 29466, 48314, 13, 51092, 51092, 400, 286, 478, 17939, 1310, 300, 727, 312, 2074, 337, 9573, 10884, 19160, 382, 731, 11, 1310, 406, 281, 264, 51256, 51256, 912, 8396, 13, 51310, 51310, 407, 286, 914, 11, 300, 311, 1009, 1944, 11, 558, 30, 51468, 51468, 509, 1009, 1190, 264, 3148, 300, 43820, 10860, 1071, 9573, 10884, 19160, 19813, 31958, 11, 597, 775, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11606852776181381, "compression_ratio": 1.6840148698884758, "no_caption_prob": 2.546426185290329e-05}, {"id": 410, "seek": 168228, "start": 1701.2, "end": 1704.36, "text": " So I mean, that's always possible, right?", "tokens": [50364, 436, 645, 406, 1382, 281, 312, 4069, 412, 264, 2863, 11, 457, 550, 436, 5694, 11, 1954, 11, 321, 393, 853, 281, 312, 50632, 50632, 4069, 281, 3470, 3389, 13, 50700, 50700, 400, 550, 436, 445, 6429, 292, 10444, 670, 10444, 293, 1027, 309, 588, 3997, 293, 29466, 48314, 13, 51092, 51092, 400, 286, 478, 17939, 1310, 300, 727, 312, 2074, 337, 9573, 10884, 19160, 382, 731, 11, 1310, 406, 281, 264, 51256, 51256, 912, 8396, 13, 51310, 51310, 407, 286, 914, 11, 300, 311, 1009, 1944, 11, 558, 30, 51468, 51468, 509, 1009, 1190, 264, 3148, 300, 43820, 10860, 1071, 9573, 10884, 19160, 19813, 31958, 11, 597, 775, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11606852776181381, "compression_ratio": 1.6840148698884758, "no_caption_prob": 2.546426185290329e-05}, {"id": 411, "seek": 168228, "start": 1704.36, "end": 1711.8799999999999, "text": " You always run the risk that Safari adds another WebAssembly specialized compiler, which does", "tokens": [50364, 436, 645, 406, 1382, 281, 312, 4069, 412, 264, 2863, 11, 457, 550, 436, 5694, 11, 1954, 11, 321, 393, 853, 281, 312, 50632, 50632, 4069, 281, 3470, 3389, 13, 50700, 50700, 400, 550, 436, 445, 6429, 292, 10444, 670, 10444, 293, 1027, 309, 588, 3997, 293, 29466, 48314, 13, 51092, 51092, 400, 286, 478, 17939, 1310, 300, 727, 312, 2074, 337, 9573, 10884, 19160, 382, 731, 11, 1310, 406, 281, 264, 51256, 51256, 912, 8396, 13, 51310, 51310, 407, 286, 914, 11, 300, 311, 1009, 1944, 11, 558, 30, 51468, 51468, 509, 1009, 1190, 264, 3148, 300, 43820, 10860, 1071, 9573, 10884, 19160, 19813, 31958, 11, 597, 775, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11606852776181381, "compression_ratio": 1.6840148698884758, "no_caption_prob": 2.546426185290329e-05}, {"id": 412, "seek": 171188, "start": 1711.88, "end": 1715.2800000000002, "text": " runtime profiling to improve code.", "tokens": [50364, 34474, 1740, 4883, 281, 3470, 3089, 13, 50534, 50534, 663, 393, 295, 1164, 1051, 13, 50618, 50618, 583, 472, 551, 300, 575, 2011, 257, 688, 294, 452, 3389, 589, 307, 300, 485, 50945, 50945, 407, 562, 286, 390, 18114, 264, 10225, 1412, 3877, 337, 2699, 76, 11, 472, 551, 300, 6100, 51234, 51234, 385, 390, 300, 11, 1392, 11, 286, 390, 516, 281, 4445, 10225, 13, 24223, 13, 51554, 51554, 400, 294, 452, 1575, 11, 264, 2699, 76, 10225, 11, 337, 729, 567, 500, 380, 458, 11, 307, 257, 4230, 3877, 300, 498, 291, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12100178854806083, "compression_ratio": 1.6575342465753424, "no_caption_prob": 6.643303549935808e-06}, {"id": 413, "seek": 171188, "start": 1715.2800000000002, "end": 1716.96, "text": " That can of course happen.", "tokens": [50364, 34474, 1740, 4883, 281, 3470, 3089, 13, 50534, 50534, 663, 393, 295, 1164, 1051, 13, 50618, 50618, 583, 472, 551, 300, 575, 2011, 257, 688, 294, 452, 3389, 589, 307, 300, 485, 50945, 50945, 407, 562, 286, 390, 18114, 264, 10225, 1412, 3877, 337, 2699, 76, 11, 472, 551, 300, 6100, 51234, 51234, 385, 390, 300, 11, 1392, 11, 286, 390, 516, 281, 4445, 10225, 13, 24223, 13, 51554, 51554, 400, 294, 452, 1575, 11, 264, 2699, 76, 10225, 11, 337, 729, 567, 500, 380, 458, 11, 307, 257, 4230, 3877, 300, 498, 291, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12100178854806083, "compression_ratio": 1.6575342465753424, "no_caption_prob": 6.643303549935808e-06}, {"id": 414, "seek": 171188, "start": 1716.96, "end": 1723.5, "text": " But one thing that has happened a lot in my performance work is that...", "tokens": [50364, 34474, 1740, 4883, 281, 3470, 3089, 13, 50534, 50534, 663, 393, 295, 1164, 1051, 13, 50618, 50618, 583, 472, 551, 300, 575, 2011, 257, 688, 294, 452, 3389, 589, 307, 300, 485, 50945, 50945, 407, 562, 286, 390, 18114, 264, 10225, 1412, 3877, 337, 2699, 76, 11, 472, 551, 300, 6100, 51234, 51234, 385, 390, 300, 11, 1392, 11, 286, 390, 516, 281, 4445, 10225, 13, 24223, 13, 51554, 51554, 400, 294, 452, 1575, 11, 264, 2699, 76, 10225, 11, 337, 729, 567, 500, 380, 458, 11, 307, 257, 4230, 3877, 300, 498, 291, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12100178854806083, "compression_ratio": 1.6575342465753424, "no_caption_prob": 6.643303549935808e-06}, {"id": 415, "seek": 171188, "start": 1723.5, "end": 1729.2800000000002, "text": " So when I was implementing the array data structure for Elm, one thing that surprised", "tokens": [50364, 34474, 1740, 4883, 281, 3470, 3089, 13, 50534, 50534, 663, 393, 295, 1164, 1051, 13, 50618, 50618, 583, 472, 551, 300, 575, 2011, 257, 688, 294, 452, 3389, 589, 307, 300, 485, 50945, 50945, 407, 562, 286, 390, 18114, 264, 10225, 1412, 3877, 337, 2699, 76, 11, 472, 551, 300, 6100, 51234, 51234, 385, 390, 300, 11, 1392, 11, 286, 390, 516, 281, 4445, 10225, 13, 24223, 13, 51554, 51554, 400, 294, 452, 1575, 11, 264, 2699, 76, 10225, 11, 337, 729, 567, 500, 380, 458, 11, 307, 257, 4230, 3877, 300, 498, 291, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12100178854806083, "compression_ratio": 1.6575342465753424, "no_caption_prob": 6.643303549935808e-06}, {"id": 416, "seek": 171188, "start": 1729.2800000000002, "end": 1735.68, "text": " me was that, okay, I was going to implement array.map.", "tokens": [50364, 34474, 1740, 4883, 281, 3470, 3089, 13, 50534, 50534, 663, 393, 295, 1164, 1051, 13, 50618, 50618, 583, 472, 551, 300, 575, 2011, 257, 688, 294, 452, 3389, 589, 307, 300, 485, 50945, 50945, 407, 562, 286, 390, 18114, 264, 10225, 1412, 3877, 337, 2699, 76, 11, 472, 551, 300, 6100, 51234, 51234, 385, 390, 300, 11, 1392, 11, 286, 390, 516, 281, 4445, 10225, 13, 24223, 13, 51554, 51554, 400, 294, 452, 1575, 11, 264, 2699, 76, 10225, 11, 337, 729, 567, 500, 380, 458, 11, 307, 257, 4230, 3877, 300, 498, 291, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12100178854806083, "compression_ratio": 1.6575342465753424, "no_caption_prob": 6.643303549935808e-06}, {"id": 417, "seek": 171188, "start": 1735.68, "end": 1741.48, "text": " And in my mind, the Elm array, for those who don't know, is a tree structure that if you", "tokens": [50364, 34474, 1740, 4883, 281, 3470, 3089, 13, 50534, 50534, 663, 393, 295, 1164, 1051, 13, 50618, 50618, 583, 472, 551, 300, 575, 2011, 257, 688, 294, 452, 3389, 589, 307, 300, 485, 50945, 50945, 407, 562, 286, 390, 18114, 264, 10225, 1412, 3877, 337, 2699, 76, 11, 472, 551, 300, 6100, 51234, 51234, 385, 390, 300, 11, 1392, 11, 286, 390, 516, 281, 4445, 10225, 13, 24223, 13, 51554, 51554, 400, 294, 452, 1575, 11, 264, 2699, 76, 10225, 11, 337, 729, 567, 500, 380, 458, 11, 307, 257, 4230, 3877, 300, 498, 291, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12100178854806083, "compression_ratio": 1.6575342465753424, "no_caption_prob": 6.643303549935808e-06}, {"id": 418, "seek": 174148, "start": 1741.48, "end": 1745.78, "text": " have 32 elements or less, it's just a normal JavaScript array.", "tokens": [50364, 362, 8858, 4959, 420, 1570, 11, 309, 311, 445, 257, 2710, 15778, 10225, 13, 50579, 50579, 759, 291, 362, 544, 813, 8858, 4959, 11, 309, 486, 1813, 257, 4230, 689, 1184, 1496, 295, 264, 4230, 50834, 50834, 575, 8858, 4959, 13, 50922, 50922, 400, 370, 309, 486, 1852, 485, 51056, 51056, 407, 498, 291, 362, 4060, 4959, 11, 550, 264, 2699, 76, 10225, 486, 312, 472, 10225, 365, 732, 4959, 13, 51370, 51370, 3950, 4959, 935, 281, 41011, 689, 264, 700, 10225, 8306, 264, 700, 8858, 4959, 293, 264, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.10024315823790847, "compression_ratio": 1.82, "no_caption_prob": 1.0129845577466767e-05}, {"id": 419, "seek": 174148, "start": 1745.78, "end": 1750.88, "text": " If you have more than 32 elements, it will become a tree where each level of the tree", "tokens": [50364, 362, 8858, 4959, 420, 1570, 11, 309, 311, 445, 257, 2710, 15778, 10225, 13, 50579, 50579, 759, 291, 362, 544, 813, 8858, 4959, 11, 309, 486, 1813, 257, 4230, 689, 1184, 1496, 295, 264, 4230, 50834, 50834, 575, 8858, 4959, 13, 50922, 50922, 400, 370, 309, 486, 1852, 485, 51056, 51056, 407, 498, 291, 362, 4060, 4959, 11, 550, 264, 2699, 76, 10225, 486, 312, 472, 10225, 365, 732, 4959, 13, 51370, 51370, 3950, 4959, 935, 281, 41011, 689, 264, 700, 10225, 8306, 264, 700, 8858, 4959, 293, 264, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.10024315823790847, "compression_ratio": 1.82, "no_caption_prob": 1.0129845577466767e-05}, {"id": 420, "seek": 174148, "start": 1750.88, "end": 1752.64, "text": " has 32 elements.", "tokens": [50364, 362, 8858, 4959, 420, 1570, 11, 309, 311, 445, 257, 2710, 15778, 10225, 13, 50579, 50579, 759, 291, 362, 544, 813, 8858, 4959, 11, 309, 486, 1813, 257, 4230, 689, 1184, 1496, 295, 264, 4230, 50834, 50834, 575, 8858, 4959, 13, 50922, 50922, 400, 370, 309, 486, 1852, 485, 51056, 51056, 407, 498, 291, 362, 4060, 4959, 11, 550, 264, 2699, 76, 10225, 486, 312, 472, 10225, 365, 732, 4959, 13, 51370, 51370, 3950, 4959, 935, 281, 41011, 689, 264, 700, 10225, 8306, 264, 700, 8858, 4959, 293, 264, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.10024315823790847, "compression_ratio": 1.82, "no_caption_prob": 1.0129845577466767e-05}, {"id": 421, "seek": 174148, "start": 1752.64, "end": 1755.32, "text": " And so it will grow...", "tokens": [50364, 362, 8858, 4959, 420, 1570, 11, 309, 311, 445, 257, 2710, 15778, 10225, 13, 50579, 50579, 759, 291, 362, 544, 813, 8858, 4959, 11, 309, 486, 1813, 257, 4230, 689, 1184, 1496, 295, 264, 4230, 50834, 50834, 575, 8858, 4959, 13, 50922, 50922, 400, 370, 309, 486, 1852, 485, 51056, 51056, 407, 498, 291, 362, 4060, 4959, 11, 550, 264, 2699, 76, 10225, 486, 312, 472, 10225, 365, 732, 4959, 13, 51370, 51370, 3950, 4959, 935, 281, 41011, 689, 264, 700, 10225, 8306, 264, 700, 8858, 4959, 293, 264, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.10024315823790847, "compression_ratio": 1.82, "no_caption_prob": 1.0129845577466767e-05}, {"id": 422, "seek": 174148, "start": 1755.32, "end": 1761.6, "text": " So if you have 60 elements, then the Elm array will be one array with two elements.", "tokens": [50364, 362, 8858, 4959, 420, 1570, 11, 309, 311, 445, 257, 2710, 15778, 10225, 13, 50579, 50579, 759, 291, 362, 544, 813, 8858, 4959, 11, 309, 486, 1813, 257, 4230, 689, 1184, 1496, 295, 264, 4230, 50834, 50834, 575, 8858, 4959, 13, 50922, 50922, 400, 370, 309, 486, 1852, 485, 51056, 51056, 407, 498, 291, 362, 4060, 4959, 11, 550, 264, 2699, 76, 10225, 486, 312, 472, 10225, 365, 732, 4959, 13, 51370, 51370, 3950, 4959, 935, 281, 41011, 689, 264, 700, 10225, 8306, 264, 700, 8858, 4959, 293, 264, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.10024315823790847, "compression_ratio": 1.82, "no_caption_prob": 1.0129845577466767e-05}, {"id": 423, "seek": 174148, "start": 1761.6, "end": 1767.92, "text": " Those elements point to arrays where the first array contains the first 32 elements and the", "tokens": [50364, 362, 8858, 4959, 420, 1570, 11, 309, 311, 445, 257, 2710, 15778, 10225, 13, 50579, 50579, 759, 291, 362, 544, 813, 8858, 4959, 11, 309, 486, 1813, 257, 4230, 689, 1184, 1496, 295, 264, 4230, 50834, 50834, 575, 8858, 4959, 13, 50922, 50922, 400, 370, 309, 486, 1852, 485, 51056, 51056, 407, 498, 291, 362, 4060, 4959, 11, 550, 264, 2699, 76, 10225, 486, 312, 472, 10225, 365, 732, 4959, 13, 51370, 51370, 3950, 4959, 935, 281, 41011, 689, 264, 700, 10225, 8306, 264, 700, 8858, 4959, 293, 264, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.10024315823790847, "compression_ratio": 1.82, "no_caption_prob": 1.0129845577466767e-05}, {"id": 424, "seek": 176792, "start": 1767.92, "end": 1772.3200000000002, "text": " second array contains the next 28.", "tokens": [50364, 1150, 10225, 8306, 264, 958, 7562, 13, 50584, 50584, 400, 382, 291, 909, 544, 4959, 11, 264, 4230, 13156, 13, 50728, 50728, 663, 390, 1391, 406, 264, 1151, 12691, 295, 577, 364, 2699, 76, 10225, 1985, 13, 50912, 50912, 583, 264, 1021, 551, 337, 341, 1729, 1657, 307, 281, 458, 300, 364, 10225, 14689, 295, 51206, 51206, 3866, 15778, 41011, 833, 264, 13376, 13, 51342, 51342, 407, 562, 286, 390, 18114, 10225, 13, 24223, 11, 264, 3303, 551, 337, 385, 281, 360, 390, 281, 4445, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.06726642672935229, "compression_ratio": 1.6233183856502242, "no_caption_prob": 3.1874849355517654e-06}, {"id": 425, "seek": 176792, "start": 1772.3200000000002, "end": 1775.2, "text": " And as you add more elements, the tree grows.", "tokens": [50364, 1150, 10225, 8306, 264, 958, 7562, 13, 50584, 50584, 400, 382, 291, 909, 544, 4959, 11, 264, 4230, 13156, 13, 50728, 50728, 663, 390, 1391, 406, 264, 1151, 12691, 295, 577, 364, 2699, 76, 10225, 1985, 13, 50912, 50912, 583, 264, 1021, 551, 337, 341, 1729, 1657, 307, 281, 458, 300, 364, 10225, 14689, 295, 51206, 51206, 3866, 15778, 41011, 833, 264, 13376, 13, 51342, 51342, 407, 562, 286, 390, 18114, 10225, 13, 24223, 11, 264, 3303, 551, 337, 385, 281, 360, 390, 281, 4445, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.06726642672935229, "compression_ratio": 1.6233183856502242, "no_caption_prob": 3.1874849355517654e-06}, {"id": 426, "seek": 176792, "start": 1775.2, "end": 1778.88, "text": " That was probably not the best summary of how an Elm array works.", "tokens": [50364, 1150, 10225, 8306, 264, 958, 7562, 13, 50584, 50584, 400, 382, 291, 909, 544, 4959, 11, 264, 4230, 13156, 13, 50728, 50728, 663, 390, 1391, 406, 264, 1151, 12691, 295, 577, 364, 2699, 76, 10225, 1985, 13, 50912, 50912, 583, 264, 1021, 551, 337, 341, 1729, 1657, 307, 281, 458, 300, 364, 10225, 14689, 295, 51206, 51206, 3866, 15778, 41011, 833, 264, 13376, 13, 51342, 51342, 407, 562, 286, 390, 18114, 10225, 13, 24223, 11, 264, 3303, 551, 337, 385, 281, 360, 390, 281, 4445, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.06726642672935229, "compression_ratio": 1.6233183856502242, "no_caption_prob": 3.1874849355517654e-06}, {"id": 427, "seek": 176792, "start": 1778.88, "end": 1784.76, "text": " But the important thing for this particular story is to know that an array consists of", "tokens": [50364, 1150, 10225, 8306, 264, 958, 7562, 13, 50584, 50584, 400, 382, 291, 909, 544, 4959, 11, 264, 4230, 13156, 13, 50728, 50728, 663, 390, 1391, 406, 264, 1151, 12691, 295, 577, 364, 2699, 76, 10225, 1985, 13, 50912, 50912, 583, 264, 1021, 551, 337, 341, 1729, 1657, 307, 281, 458, 300, 364, 10225, 14689, 295, 51206, 51206, 3866, 15778, 41011, 833, 264, 13376, 13, 51342, 51342, 407, 562, 286, 390, 18114, 10225, 13, 24223, 11, 264, 3303, 551, 337, 385, 281, 360, 390, 281, 4445, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.06726642672935229, "compression_ratio": 1.6233183856502242, "no_caption_prob": 3.1874849355517654e-06}, {"id": 428, "seek": 176792, "start": 1784.76, "end": 1787.48, "text": " multiple JavaScript arrays under the hood.", "tokens": [50364, 1150, 10225, 8306, 264, 958, 7562, 13, 50584, 50584, 400, 382, 291, 909, 544, 4959, 11, 264, 4230, 13156, 13, 50728, 50728, 663, 390, 1391, 406, 264, 1151, 12691, 295, 577, 364, 2699, 76, 10225, 1985, 13, 50912, 50912, 583, 264, 1021, 551, 337, 341, 1729, 1657, 307, 281, 458, 300, 364, 10225, 14689, 295, 51206, 51206, 3866, 15778, 41011, 833, 264, 13376, 13, 51342, 51342, 407, 562, 286, 390, 18114, 10225, 13, 24223, 11, 264, 3303, 551, 337, 385, 281, 360, 390, 281, 4445, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.06726642672935229, "compression_ratio": 1.6233183856502242, "no_caption_prob": 3.1874849355517654e-06}, {"id": 429, "seek": 176792, "start": 1787.48, "end": 1794.28, "text": " So when I was implementing array.map, the natural thing for me to do was to implement", "tokens": [50364, 1150, 10225, 8306, 264, 958, 7562, 13, 50584, 50584, 400, 382, 291, 909, 544, 4959, 11, 264, 4230, 13156, 13, 50728, 50728, 663, 390, 1391, 406, 264, 1151, 12691, 295, 577, 364, 2699, 76, 10225, 1985, 13, 50912, 50912, 583, 264, 1021, 551, 337, 341, 1729, 1657, 307, 281, 458, 300, 364, 10225, 14689, 295, 51206, 51206, 3866, 15778, 41011, 833, 264, 13376, 13, 51342, 51342, 407, 562, 286, 390, 18114, 10225, 13, 24223, 11, 264, 3303, 551, 337, 385, 281, 360, 390, 281, 4445, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.06726642672935229, "compression_ratio": 1.6233183856502242, "no_caption_prob": 3.1874849355517654e-06}, {"id": 430, "seek": 179428, "start": 1794.28, "end": 1802.2, "text": " that in terms of the built in JavaScript array.map instead of writing a for loop and kind of", "tokens": [50364, 300, 294, 2115, 295, 264, 3094, 294, 15778, 10225, 13, 24223, 2602, 295, 3579, 257, 337, 6367, 293, 733, 295, 50760, 50760, 411, 319, 332, 43704, 278, 10225, 13, 24223, 2059, 13, 51046, 51046, 583, 309, 3574, 484, 300, 1228, 264, 3094, 294, 10225, 13, 24223, 337, 15778, 41011, 390, 588, 2370, 51450, 51450, 294, 15327, 13, 51516, 51516, 583, 5347, 281, 257, 337, 6367, 884, 10225, 13, 79, 1498, 11, 309, 390, 14009, 294, 46613, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10657372886751905, "compression_ratio": 1.6853932584269662, "no_caption_prob": 4.356808858574368e-06}, {"id": 431, "seek": 179428, "start": 1802.2, "end": 1807.92, "text": " like reimplementing array.map myself.", "tokens": [50364, 300, 294, 2115, 295, 264, 3094, 294, 15778, 10225, 13, 24223, 2602, 295, 3579, 257, 337, 6367, 293, 733, 295, 50760, 50760, 411, 319, 332, 43704, 278, 10225, 13, 24223, 2059, 13, 51046, 51046, 583, 309, 3574, 484, 300, 1228, 264, 3094, 294, 10225, 13, 24223, 337, 15778, 41011, 390, 588, 2370, 51450, 51450, 294, 15327, 13, 51516, 51516, 583, 5347, 281, 257, 337, 6367, 884, 10225, 13, 79, 1498, 11, 309, 390, 14009, 294, 46613, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10657372886751905, "compression_ratio": 1.6853932584269662, "no_caption_prob": 4.356808858574368e-06}, {"id": 432, "seek": 179428, "start": 1807.92, "end": 1816.0, "text": " But it turned out that using the built in array.map for JavaScript arrays was very fast", "tokens": [50364, 300, 294, 2115, 295, 264, 3094, 294, 15778, 10225, 13, 24223, 2602, 295, 3579, 257, 337, 6367, 293, 733, 295, 50760, 50760, 411, 319, 332, 43704, 278, 10225, 13, 24223, 2059, 13, 51046, 51046, 583, 309, 3574, 484, 300, 1228, 264, 3094, 294, 10225, 13, 24223, 337, 15778, 41011, 390, 588, 2370, 51450, 51450, 294, 15327, 13, 51516, 51516, 583, 5347, 281, 257, 337, 6367, 884, 10225, 13, 79, 1498, 11, 309, 390, 14009, 294, 46613, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10657372886751905, "compression_ratio": 1.6853932584269662, "no_caption_prob": 4.356808858574368e-06}, {"id": 433, "seek": 179428, "start": 1816.0, "end": 1817.32, "text": " in Chrome.", "tokens": [50364, 300, 294, 2115, 295, 264, 3094, 294, 15778, 10225, 13, 24223, 2602, 295, 3579, 257, 337, 6367, 293, 733, 295, 50760, 50760, 411, 319, 332, 43704, 278, 10225, 13, 24223, 2059, 13, 51046, 51046, 583, 309, 3574, 484, 300, 1228, 264, 3094, 294, 10225, 13, 24223, 337, 15778, 41011, 390, 588, 2370, 51450, 51450, 294, 15327, 13, 51516, 51516, 583, 5347, 281, 257, 337, 6367, 884, 10225, 13, 79, 1498, 11, 309, 390, 14009, 294, 46613, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10657372886751905, "compression_ratio": 1.6853932584269662, "no_caption_prob": 4.356808858574368e-06}, {"id": 434, "seek": 179428, "start": 1817.32, "end": 1823.56, "text": " But compared to a for loop doing array.push, it was slower in Firefox.", "tokens": [50364, 300, 294, 2115, 295, 264, 3094, 294, 15778, 10225, 13, 24223, 2602, 295, 3579, 257, 337, 6367, 293, 733, 295, 50760, 50760, 411, 319, 332, 43704, 278, 10225, 13, 24223, 2059, 13, 51046, 51046, 583, 309, 3574, 484, 300, 1228, 264, 3094, 294, 10225, 13, 24223, 337, 15778, 41011, 390, 588, 2370, 51450, 51450, 294, 15327, 13, 51516, 51516, 583, 5347, 281, 257, 337, 6367, 884, 10225, 13, 79, 1498, 11, 309, 390, 14009, 294, 46613, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.10657372886751905, "compression_ratio": 1.6853932584269662, "no_caption_prob": 4.356808858574368e-06}, {"id": 435, "seek": 182356, "start": 1823.56, "end": 1829.3999999999999, "text": " In Firefox, writing the actual loop was way faster than using array.map.", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 436, "seek": 182356, "start": 1829.3999999999999, "end": 1833.0, "text": " And in WebAssembly, you wouldn't have such a difference.", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 437, "seek": 182356, "start": 1833.0, "end": 1838.2, "text": " If you were going to implement the array.map, you would do it pretty much the only way you", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 438, "seek": 182356, "start": 1838.2, "end": 1840.0, "text": " can in WebAssembly.", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 439, "seek": 182356, "start": 1840.0, "end": 1843.9199999999998, "text": " And even though the performance can be worse in one browser compared to another, there", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 440, "seek": 182356, "start": 1843.9199999999998, "end": 1845.3999999999999, "text": " wouldn't be...", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 441, "seek": 182356, "start": 1845.3999999999999, "end": 1847.32, "text": " You wouldn't do it...", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 442, "seek": 182356, "start": 1847.32, "end": 1852.56, "text": " You wouldn't get better performance by doing it in a less obvious way, I guess.", "tokens": [50364, 682, 46613, 11, 3579, 264, 3539, 6367, 390, 636, 4663, 813, 1228, 10225, 13, 24223, 13, 50656, 50656, 400, 294, 9573, 10884, 19160, 11, 291, 2759, 380, 362, 1270, 257, 2649, 13, 50836, 50836, 759, 291, 645, 516, 281, 4445, 264, 10225, 13, 24223, 11, 291, 576, 360, 309, 1238, 709, 264, 787, 636, 291, 51096, 51096, 393, 294, 9573, 10884, 19160, 13, 51186, 51186, 400, 754, 1673, 264, 3389, 393, 312, 5324, 294, 472, 11185, 5347, 281, 1071, 11, 456, 51382, 51382, 2759, 380, 312, 485, 51456, 51456, 509, 2759, 380, 360, 309, 485, 51552, 51552, 509, 2759, 380, 483, 1101, 3389, 538, 884, 309, 294, 257, 1570, 6322, 636, 11, 286, 2041, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08876491194011785, "compression_ratio": 1.7480314960629921, "no_caption_prob": 6.540307367686182e-06}, {"id": 443, "seek": 185256, "start": 1852.56, "end": 1855.8799999999999, "text": " There aren't that many ways of doing the same thing.", "tokens": [50364, 821, 3212, 380, 300, 867, 2098, 295, 884, 264, 912, 551, 13, 50530, 50530, 400, 370, 291, 393, 445, 1207, 322, 264, 881, 6322, 551, 611, 885, 264, 14573, 551, 13, 50859, 50859, 407, 437, 630, 291, 917, 493, 884, 365, 264, 10225, 13, 24223, 30, 50964, 50964, 1012, 630, 291, 652, 300, 3922, 30, 51170, 51170, 1042, 11, 534, 11, 1670, 2699, 76, 307, 3442, 281, 312, 1143, 485, 51408, 51408, 759, 286, 645, 884, 341, 293, 286, 787, 19779, 466, 15327, 11, 550, 286, 576, 360, 2035, 307, 14573, 51618, 51618, 337, 15327, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16405576705932617, "compression_ratio": 1.5851528384279476, "no_caption_prob": 8.397845704166684e-06}, {"id": 444, "seek": 185256, "start": 1855.8799999999999, "end": 1862.46, "text": " And so you can just count on the most obvious thing also being the fastest thing.", "tokens": [50364, 821, 3212, 380, 300, 867, 2098, 295, 884, 264, 912, 551, 13, 50530, 50530, 400, 370, 291, 393, 445, 1207, 322, 264, 881, 6322, 551, 611, 885, 264, 14573, 551, 13, 50859, 50859, 407, 437, 630, 291, 917, 493, 884, 365, 264, 10225, 13, 24223, 30, 50964, 50964, 1012, 630, 291, 652, 300, 3922, 30, 51170, 51170, 1042, 11, 534, 11, 1670, 2699, 76, 307, 3442, 281, 312, 1143, 485, 51408, 51408, 759, 286, 645, 884, 341, 293, 286, 787, 19779, 466, 15327, 11, 550, 286, 576, 360, 2035, 307, 14573, 51618, 51618, 337, 15327, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16405576705932617, "compression_ratio": 1.5851528384279476, "no_caption_prob": 8.397845704166684e-06}, {"id": 445, "seek": 185256, "start": 1862.46, "end": 1864.56, "text": " So what did you end up doing with the array.map?", "tokens": [50364, 821, 3212, 380, 300, 867, 2098, 295, 884, 264, 912, 551, 13, 50530, 50530, 400, 370, 291, 393, 445, 1207, 322, 264, 881, 6322, 551, 611, 885, 264, 14573, 551, 13, 50859, 50859, 407, 437, 630, 291, 917, 493, 884, 365, 264, 10225, 13, 24223, 30, 50964, 50964, 1012, 630, 291, 652, 300, 3922, 30, 51170, 51170, 1042, 11, 534, 11, 1670, 2699, 76, 307, 3442, 281, 312, 1143, 485, 51408, 51408, 759, 286, 645, 884, 341, 293, 286, 787, 19779, 466, 15327, 11, 550, 286, 576, 360, 2035, 307, 14573, 51618, 51618, 337, 15327, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16405576705932617, "compression_ratio": 1.5851528384279476, "no_caption_prob": 8.397845704166684e-06}, {"id": 446, "seek": 185256, "start": 1864.56, "end": 1868.6799999999998, "text": " How did you make that choice?", "tokens": [50364, 821, 3212, 380, 300, 867, 2098, 295, 884, 264, 912, 551, 13, 50530, 50530, 400, 370, 291, 393, 445, 1207, 322, 264, 881, 6322, 551, 611, 885, 264, 14573, 551, 13, 50859, 50859, 407, 437, 630, 291, 917, 493, 884, 365, 264, 10225, 13, 24223, 30, 50964, 50964, 1012, 630, 291, 652, 300, 3922, 30, 51170, 51170, 1042, 11, 534, 11, 1670, 2699, 76, 307, 3442, 281, 312, 1143, 485, 51408, 51408, 759, 286, 645, 884, 341, 293, 286, 787, 19779, 466, 15327, 11, 550, 286, 576, 360, 2035, 307, 14573, 51618, 51618, 337, 15327, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16405576705932617, "compression_ratio": 1.5851528384279476, "no_caption_prob": 8.397845704166684e-06}, {"id": 447, "seek": 185256, "start": 1868.6799999999998, "end": 1873.44, "text": " Well, really, since Elm is supposed to be used...", "tokens": [50364, 821, 3212, 380, 300, 867, 2098, 295, 884, 264, 912, 551, 13, 50530, 50530, 400, 370, 291, 393, 445, 1207, 322, 264, 881, 6322, 551, 611, 885, 264, 14573, 551, 13, 50859, 50859, 407, 437, 630, 291, 917, 493, 884, 365, 264, 10225, 13, 24223, 30, 50964, 50964, 1012, 630, 291, 652, 300, 3922, 30, 51170, 51170, 1042, 11, 534, 11, 1670, 2699, 76, 307, 3442, 281, 312, 1143, 485, 51408, 51408, 759, 286, 645, 884, 341, 293, 286, 787, 19779, 466, 15327, 11, 550, 286, 576, 360, 2035, 307, 14573, 51618, 51618, 337, 15327, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16405576705932617, "compression_ratio": 1.5851528384279476, "no_caption_prob": 8.397845704166684e-06}, {"id": 448, "seek": 185256, "start": 1873.44, "end": 1877.6399999999999, "text": " If I were doing this and I only cared about Chrome, then I would do whatever is fastest", "tokens": [50364, 821, 3212, 380, 300, 867, 2098, 295, 884, 264, 912, 551, 13, 50530, 50530, 400, 370, 291, 393, 445, 1207, 322, 264, 881, 6322, 551, 611, 885, 264, 14573, 551, 13, 50859, 50859, 407, 437, 630, 291, 917, 493, 884, 365, 264, 10225, 13, 24223, 30, 50964, 50964, 1012, 630, 291, 652, 300, 3922, 30, 51170, 51170, 1042, 11, 534, 11, 1670, 2699, 76, 307, 3442, 281, 312, 1143, 485, 51408, 51408, 759, 286, 645, 884, 341, 293, 286, 787, 19779, 466, 15327, 11, 550, 286, 576, 360, 2035, 307, 14573, 51618, 51618, 337, 15327, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16405576705932617, "compression_ratio": 1.5851528384279476, "no_caption_prob": 8.397845704166684e-06}, {"id": 449, "seek": 185256, "start": 1877.6399999999999, "end": 1878.84, "text": " for Chrome.", "tokens": [50364, 821, 3212, 380, 300, 867, 2098, 295, 884, 264, 912, 551, 13, 50530, 50530, 400, 370, 291, 393, 445, 1207, 322, 264, 881, 6322, 551, 611, 885, 264, 14573, 551, 13, 50859, 50859, 407, 437, 630, 291, 917, 493, 884, 365, 264, 10225, 13, 24223, 30, 50964, 50964, 1012, 630, 291, 652, 300, 3922, 30, 51170, 51170, 1042, 11, 534, 11, 1670, 2699, 76, 307, 3442, 281, 312, 1143, 485, 51408, 51408, 759, 286, 645, 884, 341, 293, 286, 787, 19779, 466, 15327, 11, 550, 286, 576, 360, 2035, 307, 14573, 51618, 51618, 337, 15327, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16405576705932617, "compression_ratio": 1.5851528384279476, "no_caption_prob": 8.397845704166684e-06}, {"id": 450, "seek": 187884, "start": 1878.84, "end": 1885.24, "text": " But because Elm can be used in a lot of scenarios, I had to do it the way which overall gave", "tokens": [50364, 583, 570, 2699, 76, 393, 312, 1143, 294, 257, 688, 295, 15077, 11, 286, 632, 281, 360, 309, 264, 636, 597, 4787, 2729, 50684, 50684, 264, 1151, 551, 13, 50772, 50772, 400, 498, 286, 1604, 8944, 11, 264, 3389, 2649, 337, 46613, 390, 370, 955, 300, 286, 4590, 51100, 51100, 493, 14846, 3319, 437, 390, 14573, 337, 46613, 570, 264, 2649, 294, 15327, 2067, 380, 300, 51356, 51356, 955, 13, 51406, 51406, 407, 291, 733, 295, 362, 281, 915, 472, 3827, 300, 1985, 1151, 562, 439, 36069, 366, 4888, 13, 51700, 51700, 865, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.11080639702933175, "compression_ratio": 1.5742971887550201, "no_caption_prob": 1.0289229066984262e-05}, {"id": 451, "seek": 187884, "start": 1885.24, "end": 1887.0, "text": " the best thing.", "tokens": [50364, 583, 570, 2699, 76, 393, 312, 1143, 294, 257, 688, 295, 15077, 11, 286, 632, 281, 360, 309, 264, 636, 597, 4787, 2729, 50684, 50684, 264, 1151, 551, 13, 50772, 50772, 400, 498, 286, 1604, 8944, 11, 264, 3389, 2649, 337, 46613, 390, 370, 955, 300, 286, 4590, 51100, 51100, 493, 14846, 3319, 437, 390, 14573, 337, 46613, 570, 264, 2649, 294, 15327, 2067, 380, 300, 51356, 51356, 955, 13, 51406, 51406, 407, 291, 733, 295, 362, 281, 915, 472, 3827, 300, 1985, 1151, 562, 439, 36069, 366, 4888, 13, 51700, 51700, 865, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.11080639702933175, "compression_ratio": 1.5742971887550201, "no_caption_prob": 1.0289229066984262e-05}, {"id": 452, "seek": 187884, "start": 1887.0, "end": 1893.56, "text": " And if I remember correctly, the performance difference for Firefox was so big that I ended", "tokens": [50364, 583, 570, 2699, 76, 393, 312, 1143, 294, 257, 688, 295, 15077, 11, 286, 632, 281, 360, 309, 264, 636, 597, 4787, 2729, 50684, 50684, 264, 1151, 551, 13, 50772, 50772, 400, 498, 286, 1604, 8944, 11, 264, 3389, 2649, 337, 46613, 390, 370, 955, 300, 286, 4590, 51100, 51100, 493, 14846, 3319, 437, 390, 14573, 337, 46613, 570, 264, 2649, 294, 15327, 2067, 380, 300, 51356, 51356, 955, 13, 51406, 51406, 407, 291, 733, 295, 362, 281, 915, 472, 3827, 300, 1985, 1151, 562, 439, 36069, 366, 4888, 13, 51700, 51700, 865, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.11080639702933175, "compression_ratio": 1.5742971887550201, "no_caption_prob": 1.0289229066984262e-05}, {"id": 453, "seek": 187884, "start": 1893.56, "end": 1898.6799999999998, "text": " up prioritizing what was fastest for Firefox because the difference in Chrome wasn't that", "tokens": [50364, 583, 570, 2699, 76, 393, 312, 1143, 294, 257, 688, 295, 15077, 11, 286, 632, 281, 360, 309, 264, 636, 597, 4787, 2729, 50684, 50684, 264, 1151, 551, 13, 50772, 50772, 400, 498, 286, 1604, 8944, 11, 264, 3389, 2649, 337, 46613, 390, 370, 955, 300, 286, 4590, 51100, 51100, 493, 14846, 3319, 437, 390, 14573, 337, 46613, 570, 264, 2649, 294, 15327, 2067, 380, 300, 51356, 51356, 955, 13, 51406, 51406, 407, 291, 733, 295, 362, 281, 915, 472, 3827, 300, 1985, 1151, 562, 439, 36069, 366, 4888, 13, 51700, 51700, 865, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.11080639702933175, "compression_ratio": 1.5742971887550201, "no_caption_prob": 1.0289229066984262e-05}, {"id": 454, "seek": 187884, "start": 1898.6799999999998, "end": 1899.6799999999998, "text": " big.", "tokens": [50364, 583, 570, 2699, 76, 393, 312, 1143, 294, 257, 688, 295, 15077, 11, 286, 632, 281, 360, 309, 264, 636, 597, 4787, 2729, 50684, 50684, 264, 1151, 551, 13, 50772, 50772, 400, 498, 286, 1604, 8944, 11, 264, 3389, 2649, 337, 46613, 390, 370, 955, 300, 286, 4590, 51100, 51100, 493, 14846, 3319, 437, 390, 14573, 337, 46613, 570, 264, 2649, 294, 15327, 2067, 380, 300, 51356, 51356, 955, 13, 51406, 51406, 407, 291, 733, 295, 362, 281, 915, 472, 3827, 300, 1985, 1151, 562, 439, 36069, 366, 4888, 13, 51700, 51700, 865, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.11080639702933175, "compression_ratio": 1.5742971887550201, "no_caption_prob": 1.0289229066984262e-05}, {"id": 455, "seek": 187884, "start": 1899.6799999999998, "end": 1905.56, "text": " So you kind of have to find one solution that works best when all browsers are considered.", "tokens": [50364, 583, 570, 2699, 76, 393, 312, 1143, 294, 257, 688, 295, 15077, 11, 286, 632, 281, 360, 309, 264, 636, 597, 4787, 2729, 50684, 50684, 264, 1151, 551, 13, 50772, 50772, 400, 498, 286, 1604, 8944, 11, 264, 3389, 2649, 337, 46613, 390, 370, 955, 300, 286, 4590, 51100, 51100, 493, 14846, 3319, 437, 390, 14573, 337, 46613, 570, 264, 2649, 294, 15327, 2067, 380, 300, 51356, 51356, 955, 13, 51406, 51406, 407, 291, 733, 295, 362, 281, 915, 472, 3827, 300, 1985, 1151, 562, 439, 36069, 366, 4888, 13, 51700, 51700, 865, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.11080639702933175, "compression_ratio": 1.5742971887550201, "no_caption_prob": 1.0289229066984262e-05}, {"id": 456, "seek": 187884, "start": 1905.56, "end": 1906.56, "text": " Yeah.", "tokens": [50364, 583, 570, 2699, 76, 393, 312, 1143, 294, 257, 688, 295, 15077, 11, 286, 632, 281, 360, 309, 264, 636, 597, 4787, 2729, 50684, 50684, 264, 1151, 551, 13, 50772, 50772, 400, 498, 286, 1604, 8944, 11, 264, 3389, 2649, 337, 46613, 390, 370, 955, 300, 286, 4590, 51100, 51100, 493, 14846, 3319, 437, 390, 14573, 337, 46613, 570, 264, 2649, 294, 15327, 2067, 380, 300, 51356, 51356, 955, 13, 51406, 51406, 407, 291, 733, 295, 362, 281, 915, 472, 3827, 300, 1985, 1151, 562, 439, 36069, 366, 4888, 13, 51700, 51700, 865, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.11080639702933175, "compression_ratio": 1.5742971887550201, "no_caption_prob": 1.0289229066984262e-05}, {"id": 457, "seek": 190656, "start": 1906.56, "end": 1914.3999999999999, "text": " So are you secretly hoping for Chrome to just win the competition used by everyone?", "tokens": [50364, 407, 366, 291, 22611, 7159, 337, 15327, 281, 445, 1942, 264, 6211, 1143, 538, 1518, 30, 50756, 50756, 883, 11, 286, 519, 341, 307, 257, 4036, 25866, 490, 3389, 11, 457, 286, 519, 294, 264, 11185, 1901, 51138, 51138, 321, 434, 588, 731, 7584, 365, 6211, 13, 51342, 51342, 407, 286, 519, 264, 2190, 485, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2259840884451139, "compression_ratio": 1.4457831325301205, "no_caption_prob": 6.300833047134802e-05}, {"id": 458, "seek": 190656, "start": 1914.3999999999999, "end": 1922.04, "text": " No, I think this is a slight departure from performance, but I think in the browser space", "tokens": [50364, 407, 366, 291, 22611, 7159, 337, 15327, 281, 445, 1942, 264, 6211, 1143, 538, 1518, 30, 50756, 50756, 883, 11, 286, 519, 341, 307, 257, 4036, 25866, 490, 3389, 11, 457, 286, 519, 294, 264, 11185, 1901, 51138, 51138, 321, 434, 588, 731, 7584, 365, 6211, 13, 51342, 51342, 407, 286, 519, 264, 2190, 485, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2259840884451139, "compression_ratio": 1.4457831325301205, "no_caption_prob": 6.300833047134802e-05}, {"id": 459, "seek": 190656, "start": 1922.04, "end": 1926.12, "text": " we're very well served with competition.", "tokens": [50364, 407, 366, 291, 22611, 7159, 337, 15327, 281, 445, 1942, 264, 6211, 1143, 538, 1518, 30, 50756, 50756, 883, 11, 286, 519, 341, 307, 257, 4036, 25866, 490, 3389, 11, 457, 286, 519, 294, 264, 11185, 1901, 51138, 51138, 321, 434, 588, 731, 7584, 365, 6211, 13, 51342, 51342, 407, 286, 519, 264, 2190, 485, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2259840884451139, "compression_ratio": 1.4457831325301205, "no_caption_prob": 6.300833047134802e-05}, {"id": 460, "seek": 190656, "start": 1926.12, "end": 1930.6799999999998, "text": " So I think the current...", "tokens": [50364, 407, 366, 291, 22611, 7159, 337, 15327, 281, 445, 1942, 264, 6211, 1143, 538, 1518, 30, 50756, 50756, 883, 11, 286, 519, 341, 307, 257, 4036, 25866, 490, 3389, 11, 457, 286, 519, 294, 264, 11185, 1901, 51138, 51138, 321, 434, 588, 731, 7584, 365, 6211, 13, 51342, 51342, 407, 286, 519, 264, 2190, 485, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.2259840884451139, "compression_ratio": 1.4457831325301205, "no_caption_prob": 6.300833047134802e-05}, {"id": 461, "seek": 193068, "start": 1930.68, "end": 1938.28, "text": " I was sad to see Microsoft just adopt Chrome as their web browser, essentially, even though", "tokens": [50364, 286, 390, 4227, 281, 536, 8116, 445, 6878, 15327, 382, 641, 3670, 11185, 11, 4476, 11, 754, 1673, 50744, 50744, 286, 362, 572, 9557, 6640, 3030, 8116, 13, 50954, 50954, 286, 519, 309, 311, 665, 365, 512, 6211, 294, 264, 11185, 1901, 13, 51160, 51160, 2720, 1164, 11, 490, 257, 3389, 4585, 11, 309, 576, 312, 1481, 498, 1203, 2732, 264, 51376, 51376, 912, 636, 13, 51426, 51426, 467, 576, 652, 452, 993, 257, 688, 3571, 13, 51592, 51592, 583, 286, 519, 337, 881, 561, 11, 309, 576, 312, 1101, 365, 6211, 294, 264, 11185, 1901, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.13191818010689008, "compression_ratio": 1.7037037037037037, "no_caption_prob": 5.389969373936765e-05}, {"id": 462, "seek": 193068, "start": 1938.28, "end": 1942.48, "text": " I have no fond feelings towards Microsoft.", "tokens": [50364, 286, 390, 4227, 281, 536, 8116, 445, 6878, 15327, 382, 641, 3670, 11185, 11, 4476, 11, 754, 1673, 50744, 50744, 286, 362, 572, 9557, 6640, 3030, 8116, 13, 50954, 50954, 286, 519, 309, 311, 665, 365, 512, 6211, 294, 264, 11185, 1901, 13, 51160, 51160, 2720, 1164, 11, 490, 257, 3389, 4585, 11, 309, 576, 312, 1481, 498, 1203, 2732, 264, 51376, 51376, 912, 636, 13, 51426, 51426, 467, 576, 652, 452, 993, 257, 688, 3571, 13, 51592, 51592, 583, 286, 519, 337, 881, 561, 11, 309, 576, 312, 1101, 365, 6211, 294, 264, 11185, 1901, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.13191818010689008, "compression_ratio": 1.7037037037037037, "no_caption_prob": 5.389969373936765e-05}, {"id": 463, "seek": 193068, "start": 1942.48, "end": 1946.6000000000001, "text": " I think it's good with some competition in the browser space.", "tokens": [50364, 286, 390, 4227, 281, 536, 8116, 445, 6878, 15327, 382, 641, 3670, 11185, 11, 4476, 11, 754, 1673, 50744, 50744, 286, 362, 572, 9557, 6640, 3030, 8116, 13, 50954, 50954, 286, 519, 309, 311, 665, 365, 512, 6211, 294, 264, 11185, 1901, 13, 51160, 51160, 2720, 1164, 11, 490, 257, 3389, 4585, 11, 309, 576, 312, 1481, 498, 1203, 2732, 264, 51376, 51376, 912, 636, 13, 51426, 51426, 467, 576, 652, 452, 993, 257, 688, 3571, 13, 51592, 51592, 583, 286, 519, 337, 881, 561, 11, 309, 576, 312, 1101, 365, 6211, 294, 264, 11185, 1901, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.13191818010689008, "compression_ratio": 1.7037037037037037, "no_caption_prob": 5.389969373936765e-05}, {"id": 464, "seek": 193068, "start": 1946.6000000000001, "end": 1950.92, "text": " Of course, from a performance perspective, it would be nice if everything worked the", "tokens": [50364, 286, 390, 4227, 281, 536, 8116, 445, 6878, 15327, 382, 641, 3670, 11185, 11, 4476, 11, 754, 1673, 50744, 50744, 286, 362, 572, 9557, 6640, 3030, 8116, 13, 50954, 50954, 286, 519, 309, 311, 665, 365, 512, 6211, 294, 264, 11185, 1901, 13, 51160, 51160, 2720, 1164, 11, 490, 257, 3389, 4585, 11, 309, 576, 312, 1481, 498, 1203, 2732, 264, 51376, 51376, 912, 636, 13, 51426, 51426, 467, 576, 652, 452, 993, 257, 688, 3571, 13, 51592, 51592, 583, 286, 519, 337, 881, 561, 11, 309, 576, 312, 1101, 365, 6211, 294, 264, 11185, 1901, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.13191818010689008, "compression_ratio": 1.7037037037037037, "no_caption_prob": 5.389969373936765e-05}, {"id": 465, "seek": 193068, "start": 1950.92, "end": 1951.92, "text": " same way.", "tokens": [50364, 286, 390, 4227, 281, 536, 8116, 445, 6878, 15327, 382, 641, 3670, 11185, 11, 4476, 11, 754, 1673, 50744, 50744, 286, 362, 572, 9557, 6640, 3030, 8116, 13, 50954, 50954, 286, 519, 309, 311, 665, 365, 512, 6211, 294, 264, 11185, 1901, 13, 51160, 51160, 2720, 1164, 11, 490, 257, 3389, 4585, 11, 309, 576, 312, 1481, 498, 1203, 2732, 264, 51376, 51376, 912, 636, 13, 51426, 51426, 467, 576, 652, 452, 993, 257, 688, 3571, 13, 51592, 51592, 583, 286, 519, 337, 881, 561, 11, 309, 576, 312, 1101, 365, 6211, 294, 264, 11185, 1901, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.13191818010689008, "compression_ratio": 1.7037037037037037, "no_caption_prob": 5.389969373936765e-05}, {"id": 466, "seek": 193068, "start": 1951.92, "end": 1955.24, "text": " It would make my life a lot easier.", "tokens": [50364, 286, 390, 4227, 281, 536, 8116, 445, 6878, 15327, 382, 641, 3670, 11185, 11, 4476, 11, 754, 1673, 50744, 50744, 286, 362, 572, 9557, 6640, 3030, 8116, 13, 50954, 50954, 286, 519, 309, 311, 665, 365, 512, 6211, 294, 264, 11185, 1901, 13, 51160, 51160, 2720, 1164, 11, 490, 257, 3389, 4585, 11, 309, 576, 312, 1481, 498, 1203, 2732, 264, 51376, 51376, 912, 636, 13, 51426, 51426, 467, 576, 652, 452, 993, 257, 688, 3571, 13, 51592, 51592, 583, 286, 519, 337, 881, 561, 11, 309, 576, 312, 1101, 365, 6211, 294, 264, 11185, 1901, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.13191818010689008, "compression_ratio": 1.7037037037037037, "no_caption_prob": 5.389969373936765e-05}, {"id": 467, "seek": 193068, "start": 1955.24, "end": 1960.1200000000001, "text": " But I think for most people, it would be better with competition in the browser space.", "tokens": [50364, 286, 390, 4227, 281, 536, 8116, 445, 6878, 15327, 382, 641, 3670, 11185, 11, 4476, 11, 754, 1673, 50744, 50744, 286, 362, 572, 9557, 6640, 3030, 8116, 13, 50954, 50954, 286, 519, 309, 311, 665, 365, 512, 6211, 294, 264, 11185, 1901, 13, 51160, 51160, 2720, 1164, 11, 490, 257, 3389, 4585, 11, 309, 576, 312, 1481, 498, 1203, 2732, 264, 51376, 51376, 912, 636, 13, 51426, 51426, 467, 576, 652, 452, 993, 257, 688, 3571, 13, 51592, 51592, 583, 286, 519, 337, 881, 561, 11, 309, 576, 312, 1101, 365, 6211, 294, 264, 11185, 1901, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.13191818010689008, "compression_ratio": 1.7037037037037037, "no_caption_prob": 5.389969373936765e-05}, {"id": 468, "seek": 196012, "start": 1960.12, "end": 1961.12, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 407, 309, 2544, 411, 309, 1487, 760, 281, 1969, 11, 411, 9573, 10884, 19160, 2709, 291, 544, 1969, 670, 50742, 50742, 3389, 13, 50792, 50792, 823, 11, 498, 291, 362, 544, 1969, 670, 3389, 11, 300, 1355, 309, 311, 406, 516, 281, 360, 364, 19618, 51084, 51084, 300, 291, 994, 380, 1322, 666, 309, 11, 597, 691, 23, 420, 2035, 17733, 32498, 4119, 311, 659, 715, 388, 433, 366, 51422, 51422, 516, 281, 360, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.10295746125370624, "compression_ratio": 1.5625, "no_caption_prob": 9.66530842561042e-06}, {"id": 469, "seek": 196012, "start": 1961.12, "end": 1967.6799999999998, "text": " So it seems like it comes down to control, like WebAssembly gives you more control over", "tokens": [50364, 865, 13, 50414, 50414, 407, 309, 2544, 411, 309, 1487, 760, 281, 1969, 11, 411, 9573, 10884, 19160, 2709, 291, 544, 1969, 670, 50742, 50742, 3389, 13, 50792, 50792, 823, 11, 498, 291, 362, 544, 1969, 670, 3389, 11, 300, 1355, 309, 311, 406, 516, 281, 360, 364, 19618, 51084, 51084, 300, 291, 994, 380, 1322, 666, 309, 11, 597, 691, 23, 420, 2035, 17733, 32498, 4119, 311, 659, 715, 388, 433, 366, 51422, 51422, 516, 281, 360, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.10295746125370624, "compression_ratio": 1.5625, "no_caption_prob": 9.66530842561042e-06}, {"id": 470, "seek": 196012, "start": 1967.6799999999998, "end": 1968.6799999999998, "text": " performance.", "tokens": [50364, 865, 13, 50414, 50414, 407, 309, 2544, 411, 309, 1487, 760, 281, 1969, 11, 411, 9573, 10884, 19160, 2709, 291, 544, 1969, 670, 50742, 50742, 3389, 13, 50792, 50792, 823, 11, 498, 291, 362, 544, 1969, 670, 3389, 11, 300, 1355, 309, 311, 406, 516, 281, 360, 364, 19618, 51084, 51084, 300, 291, 994, 380, 1322, 666, 309, 11, 597, 691, 23, 420, 2035, 17733, 32498, 4119, 311, 659, 715, 388, 433, 366, 51422, 51422, 516, 281, 360, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.10295746125370624, "compression_ratio": 1.5625, "no_caption_prob": 9.66530842561042e-06}, {"id": 471, "seek": 196012, "start": 1968.6799999999998, "end": 1974.52, "text": " Now, if you have more control over performance, that means it's not going to do an optimization", "tokens": [50364, 865, 13, 50414, 50414, 407, 309, 2544, 411, 309, 1487, 760, 281, 1969, 11, 411, 9573, 10884, 19160, 2709, 291, 544, 1969, 670, 50742, 50742, 3389, 13, 50792, 50792, 823, 11, 498, 291, 362, 544, 1969, 670, 3389, 11, 300, 1355, 309, 311, 406, 516, 281, 360, 364, 19618, 51084, 51084, 300, 291, 994, 380, 1322, 666, 309, 11, 597, 691, 23, 420, 2035, 17733, 32498, 4119, 311, 659, 715, 388, 433, 366, 51422, 51422, 516, 281, 360, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.10295746125370624, "compression_ratio": 1.5625, "no_caption_prob": 9.66530842561042e-06}, {"id": 472, "seek": 196012, "start": 1974.52, "end": 1981.28, "text": " that you didn't build into it, which V8 or whatever SpiderMonkey's pre compilers are", "tokens": [50364, 865, 13, 50414, 50414, 407, 309, 2544, 411, 309, 1487, 760, 281, 1969, 11, 411, 9573, 10884, 19160, 2709, 291, 544, 1969, 670, 50742, 50742, 3389, 13, 50792, 50792, 823, 11, 498, 291, 362, 544, 1969, 670, 3389, 11, 300, 1355, 309, 311, 406, 516, 281, 360, 364, 19618, 51084, 51084, 300, 291, 994, 380, 1322, 666, 309, 11, 597, 691, 23, 420, 2035, 17733, 32498, 4119, 311, 659, 715, 388, 433, 366, 51422, 51422, 516, 281, 360, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.10295746125370624, "compression_ratio": 1.5625, "no_caption_prob": 9.66530842561042e-06}, {"id": 473, "seek": 196012, "start": 1981.28, "end": 1982.28, "text": " going to do.", "tokens": [50364, 865, 13, 50414, 50414, 407, 309, 2544, 411, 309, 1487, 760, 281, 1969, 11, 411, 9573, 10884, 19160, 2709, 291, 544, 1969, 670, 50742, 50742, 3389, 13, 50792, 50792, 823, 11, 498, 291, 362, 544, 1969, 670, 3389, 11, 300, 1355, 309, 311, 406, 516, 281, 360, 364, 19618, 51084, 51084, 300, 291, 994, 380, 1322, 666, 309, 11, 597, 691, 23, 420, 2035, 17733, 32498, 4119, 311, 659, 715, 388, 433, 366, 51422, 51422, 516, 281, 360, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.10295746125370624, "compression_ratio": 1.5625, "no_caption_prob": 9.66530842561042e-06}, {"id": 474, "seek": 198228, "start": 1982.28, "end": 1991.68, "text": " And to bring this back to Rock, one of the reasons why Rock can perform a lot of mutations,", "tokens": [50364, 400, 281, 1565, 341, 646, 281, 6922, 11, 472, 295, 264, 4112, 983, 6922, 393, 2042, 257, 688, 295, 29243, 11, 50834, 50834, 597, 366, 3273, 281, 360, 294, 3124, 1553, 7027, 34382, 11, 307, 570, 436, 362, 1577, 1969, 51206, 51206, 295, 577, 264, 3089, 715, 4680, 13, 51314, 51314, 407, 294, 15778, 11, 291, 362, 257, 14150, 23960, 13, 51500, 51500, 883, 1871, 437, 291, 360, 11, 291, 366, 516, 281, 1884, 257, 2856, 597, 322, 512, 1496, 307, 14150, 51730, 51730, 11087, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.07588992648654513, "compression_ratio": 1.5919282511210762, "no_caption_prob": 1.8056776752928272e-05}, {"id": 475, "seek": 198228, "start": 1991.68, "end": 1999.12, "text": " which are safe to do in practice without losing purity, is because they have full control", "tokens": [50364, 400, 281, 1565, 341, 646, 281, 6922, 11, 472, 295, 264, 4112, 983, 6922, 393, 2042, 257, 688, 295, 29243, 11, 50834, 50834, 597, 366, 3273, 281, 360, 294, 3124, 1553, 7027, 34382, 11, 307, 570, 436, 362, 1577, 1969, 51206, 51206, 295, 577, 264, 3089, 715, 4680, 13, 51314, 51314, 407, 294, 15778, 11, 291, 362, 257, 14150, 23960, 13, 51500, 51500, 883, 1871, 437, 291, 360, 11, 291, 366, 516, 281, 1884, 257, 2856, 597, 322, 512, 1496, 307, 14150, 51730, 51730, 11087, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.07588992648654513, "compression_ratio": 1.5919282511210762, "no_caption_prob": 1.8056776752928272e-05}, {"id": 476, "seek": 198228, "start": 1999.12, "end": 2001.28, "text": " of how the code compiles.", "tokens": [50364, 400, 281, 1565, 341, 646, 281, 6922, 11, 472, 295, 264, 4112, 983, 6922, 393, 2042, 257, 688, 295, 29243, 11, 50834, 50834, 597, 366, 3273, 281, 360, 294, 3124, 1553, 7027, 34382, 11, 307, 570, 436, 362, 1577, 1969, 51206, 51206, 295, 577, 264, 3089, 715, 4680, 13, 51314, 51314, 407, 294, 15778, 11, 291, 362, 257, 14150, 23960, 13, 51500, 51500, 883, 1871, 437, 291, 360, 11, 291, 366, 516, 281, 1884, 257, 2856, 597, 322, 512, 1496, 307, 14150, 51730, 51730, 11087, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.07588992648654513, "compression_ratio": 1.5919282511210762, "no_caption_prob": 1.8056776752928272e-05}, {"id": 477, "seek": 198228, "start": 2001.28, "end": 2005.0, "text": " So in JavaScript, you have a garbage collector.", "tokens": [50364, 400, 281, 1565, 341, 646, 281, 6922, 11, 472, 295, 264, 4112, 983, 6922, 393, 2042, 257, 688, 295, 29243, 11, 50834, 50834, 597, 366, 3273, 281, 360, 294, 3124, 1553, 7027, 34382, 11, 307, 570, 436, 362, 1577, 1969, 51206, 51206, 295, 577, 264, 3089, 715, 4680, 13, 51314, 51314, 407, 294, 15778, 11, 291, 362, 257, 14150, 23960, 13, 51500, 51500, 883, 1871, 437, 291, 360, 11, 291, 366, 516, 281, 1884, 257, 2856, 597, 322, 512, 1496, 307, 14150, 51730, 51730, 11087, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.07588992648654513, "compression_ratio": 1.5919282511210762, "no_caption_prob": 1.8056776752928272e-05}, {"id": 478, "seek": 198228, "start": 2005.0, "end": 2009.6, "text": " No matter what you do, you are going to create a language which on some level is garbage", "tokens": [50364, 400, 281, 1565, 341, 646, 281, 6922, 11, 472, 295, 264, 4112, 983, 6922, 393, 2042, 257, 688, 295, 29243, 11, 50834, 50834, 597, 366, 3273, 281, 360, 294, 3124, 1553, 7027, 34382, 11, 307, 570, 436, 362, 1577, 1969, 51206, 51206, 295, 577, 264, 3089, 715, 4680, 13, 51314, 51314, 407, 294, 15778, 11, 291, 362, 257, 14150, 23960, 13, 51500, 51500, 883, 1871, 437, 291, 360, 11, 291, 366, 516, 281, 1884, 257, 2856, 597, 322, 512, 1496, 307, 14150, 51730, 51730, 11087, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.07588992648654513, "compression_ratio": 1.5919282511210762, "no_caption_prob": 1.8056776752928272e-05}, {"id": 479, "seek": 198228, "start": 2009.6, "end": 2010.6, "text": " collected.", "tokens": [50364, 400, 281, 1565, 341, 646, 281, 6922, 11, 472, 295, 264, 4112, 983, 6922, 393, 2042, 257, 688, 295, 29243, 11, 50834, 50834, 597, 366, 3273, 281, 360, 294, 3124, 1553, 7027, 34382, 11, 307, 570, 436, 362, 1577, 1969, 51206, 51206, 295, 577, 264, 3089, 715, 4680, 13, 51314, 51314, 407, 294, 15778, 11, 291, 362, 257, 14150, 23960, 13, 51500, 51500, 883, 1871, 437, 291, 360, 11, 291, 366, 516, 281, 1884, 257, 2856, 597, 322, 512, 1496, 307, 14150, 51730, 51730, 11087, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.07588992648654513, "compression_ratio": 1.5919282511210762, "no_caption_prob": 1.8056776752928272e-05}, {"id": 480, "seek": 201060, "start": 2010.6, "end": 2016.04, "text": " So when you're compiling to WebAssembly or regular assembly, you don't have a garbage", "tokens": [50364, 407, 562, 291, 434, 715, 4883, 281, 9573, 10884, 19160, 420, 3890, 12103, 11, 291, 500, 380, 362, 257, 14150, 50636, 50636, 23960, 11, 597, 2709, 291, 264, 5645, 281, 4445, 4675, 4592, 577, 291, 528, 281, 13, 50836, 50836, 682, 6922, 11, 472, 295, 264, 721, 436, 600, 1096, 307, 300, 436, 764, 257, 6408, 13251, 1333, 295, 51088, 51088, 14150, 5765, 13, 51154, 51154, 400, 1339, 300, 11, 490, 257, 44629, 4585, 11, 307, 294, 2674, 5324, 813, 257, 25262, 14150, 51414, 51414, 23960, 11, 437, 309, 2709, 552, 307, 300, 436, 458, 562, 436, 362, 364, 2657, 11, 436, 458, 2293, 51675, 51675, 577, 867, 307, 1237, 412, 300, 2657, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.13855289200604973, "compression_ratio": 1.7714285714285714, "no_caption_prob": 2.9308446755749173e-05}, {"id": 481, "seek": 201060, "start": 2016.04, "end": 2020.04, "text": " collector, which gives you the freedom to implement memory management how you want to.", "tokens": [50364, 407, 562, 291, 434, 715, 4883, 281, 9573, 10884, 19160, 420, 3890, 12103, 11, 291, 500, 380, 362, 257, 14150, 50636, 50636, 23960, 11, 597, 2709, 291, 264, 5645, 281, 4445, 4675, 4592, 577, 291, 528, 281, 13, 50836, 50836, 682, 6922, 11, 472, 295, 264, 721, 436, 600, 1096, 307, 300, 436, 764, 257, 6408, 13251, 1333, 295, 51088, 51088, 14150, 5765, 13, 51154, 51154, 400, 1339, 300, 11, 490, 257, 44629, 4585, 11, 307, 294, 2674, 5324, 813, 257, 25262, 14150, 51414, 51414, 23960, 11, 437, 309, 2709, 552, 307, 300, 436, 458, 562, 436, 362, 364, 2657, 11, 436, 458, 2293, 51675, 51675, 577, 867, 307, 1237, 412, 300, 2657, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.13855289200604973, "compression_ratio": 1.7714285714285714, "no_caption_prob": 2.9308446755749173e-05}, {"id": 482, "seek": 201060, "start": 2020.04, "end": 2025.08, "text": " In Rock, one of the things they've done is that they use a reference counting sort of", "tokens": [50364, 407, 562, 291, 434, 715, 4883, 281, 9573, 10884, 19160, 420, 3890, 12103, 11, 291, 500, 380, 362, 257, 14150, 50636, 50636, 23960, 11, 597, 2709, 291, 264, 5645, 281, 4445, 4675, 4592, 577, 291, 528, 281, 13, 50836, 50836, 682, 6922, 11, 472, 295, 264, 721, 436, 600, 1096, 307, 300, 436, 764, 257, 6408, 13251, 1333, 295, 51088, 51088, 14150, 5765, 13, 51154, 51154, 400, 1339, 300, 11, 490, 257, 44629, 4585, 11, 307, 294, 2674, 5324, 813, 257, 25262, 14150, 51414, 51414, 23960, 11, 437, 309, 2709, 552, 307, 300, 436, 458, 562, 436, 362, 364, 2657, 11, 436, 458, 2293, 51675, 51675, 577, 867, 307, 1237, 412, 300, 2657, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.13855289200604973, "compression_ratio": 1.7714285714285714, "no_caption_prob": 2.9308446755749173e-05}, {"id": 483, "seek": 201060, "start": 2025.08, "end": 2026.3999999999999, "text": " garbage collection.", "tokens": [50364, 407, 562, 291, 434, 715, 4883, 281, 9573, 10884, 19160, 420, 3890, 12103, 11, 291, 500, 380, 362, 257, 14150, 50636, 50636, 23960, 11, 597, 2709, 291, 264, 5645, 281, 4445, 4675, 4592, 577, 291, 528, 281, 13, 50836, 50836, 682, 6922, 11, 472, 295, 264, 721, 436, 600, 1096, 307, 300, 436, 764, 257, 6408, 13251, 1333, 295, 51088, 51088, 14150, 5765, 13, 51154, 51154, 400, 1339, 300, 11, 490, 257, 44629, 4585, 11, 307, 294, 2674, 5324, 813, 257, 25262, 14150, 51414, 51414, 23960, 11, 437, 309, 2709, 552, 307, 300, 436, 458, 562, 436, 362, 364, 2657, 11, 436, 458, 2293, 51675, 51675, 577, 867, 307, 1237, 412, 300, 2657, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.13855289200604973, "compression_ratio": 1.7714285714285714, "no_caption_prob": 2.9308446755749173e-05}, {"id": 484, "seek": 201060, "start": 2026.3999999999999, "end": 2031.6, "text": " And while that, from a throughput perspective, is in general worse than a tracing garbage", "tokens": [50364, 407, 562, 291, 434, 715, 4883, 281, 9573, 10884, 19160, 420, 3890, 12103, 11, 291, 500, 380, 362, 257, 14150, 50636, 50636, 23960, 11, 597, 2709, 291, 264, 5645, 281, 4445, 4675, 4592, 577, 291, 528, 281, 13, 50836, 50836, 682, 6922, 11, 472, 295, 264, 721, 436, 600, 1096, 307, 300, 436, 764, 257, 6408, 13251, 1333, 295, 51088, 51088, 14150, 5765, 13, 51154, 51154, 400, 1339, 300, 11, 490, 257, 44629, 4585, 11, 307, 294, 2674, 5324, 813, 257, 25262, 14150, 51414, 51414, 23960, 11, 437, 309, 2709, 552, 307, 300, 436, 458, 562, 436, 362, 364, 2657, 11, 436, 458, 2293, 51675, 51675, 577, 867, 307, 1237, 412, 300, 2657, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.13855289200604973, "compression_ratio": 1.7714285714285714, "no_caption_prob": 2.9308446755749173e-05}, {"id": 485, "seek": 201060, "start": 2031.6, "end": 2036.82, "text": " collector, what it gives them is that they know when they have an object, they know exactly", "tokens": [50364, 407, 562, 291, 434, 715, 4883, 281, 9573, 10884, 19160, 420, 3890, 12103, 11, 291, 500, 380, 362, 257, 14150, 50636, 50636, 23960, 11, 597, 2709, 291, 264, 5645, 281, 4445, 4675, 4592, 577, 291, 528, 281, 13, 50836, 50836, 682, 6922, 11, 472, 295, 264, 721, 436, 600, 1096, 307, 300, 436, 764, 257, 6408, 13251, 1333, 295, 51088, 51088, 14150, 5765, 13, 51154, 51154, 400, 1339, 300, 11, 490, 257, 44629, 4585, 11, 307, 294, 2674, 5324, 813, 257, 25262, 14150, 51414, 51414, 23960, 11, 437, 309, 2709, 552, 307, 300, 436, 458, 562, 436, 362, 364, 2657, 11, 436, 458, 2293, 51675, 51675, 577, 867, 307, 1237, 412, 300, 2657, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.13855289200604973, "compression_ratio": 1.7714285714285714, "no_caption_prob": 2.9308446755749173e-05}, {"id": 486, "seek": 201060, "start": 2036.82, "end": 2039.8, "text": " how many is looking at that object.", "tokens": [50364, 407, 562, 291, 434, 715, 4883, 281, 9573, 10884, 19160, 420, 3890, 12103, 11, 291, 500, 380, 362, 257, 14150, 50636, 50636, 23960, 11, 597, 2709, 291, 264, 5645, 281, 4445, 4675, 4592, 577, 291, 528, 281, 13, 50836, 50836, 682, 6922, 11, 472, 295, 264, 721, 436, 600, 1096, 307, 300, 436, 764, 257, 6408, 13251, 1333, 295, 51088, 51088, 14150, 5765, 13, 51154, 51154, 400, 1339, 300, 11, 490, 257, 44629, 4585, 11, 307, 294, 2674, 5324, 813, 257, 25262, 14150, 51414, 51414, 23960, 11, 437, 309, 2709, 552, 307, 300, 436, 458, 562, 436, 362, 364, 2657, 11, 436, 458, 2293, 51675, 51675, 577, 867, 307, 1237, 412, 300, 2657, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.13855289200604973, "compression_ratio": 1.7714285714285714, "no_caption_prob": 2.9308446755749173e-05}, {"id": 487, "seek": 203980, "start": 2039.8, "end": 2045.28, "text": " And if the person who wants to change the object is also the only person who can observe", "tokens": [50364, 400, 498, 264, 954, 567, 2738, 281, 1319, 264, 2657, 307, 611, 264, 787, 954, 567, 393, 11441, 50638, 50638, 264, 2657, 11, 884, 257, 27960, 307, 6239, 2489, 13, 50828, 50828, 400, 370, 538, 1228, 6408, 13251, 11, 436, 393, 767, 483, 341, 3389, 19618, 11, 51052, 51052, 597, 307, 2252, 281, 483, 365, 264, 14150, 11087, 2856, 13, 51240, 51240, 400, 370, 300, 1496, 295, 1969, 11, 264, 1154, 365, 309, 307, 300, 291, 362, 281, 4445, 1203, 51464, 51464, 1803, 13, 51516, 51516, 583, 264, 14119, 307, 300, 291, 393, 360, 257, 688, 295, 721, 291, 2759, 380, 5646, 312, 1075, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0942568134617161, "compression_ratio": 1.7761194029850746, "no_caption_prob": 1.7230930097866803e-05}, {"id": 488, "seek": 203980, "start": 2045.28, "end": 2049.08, "text": " the object, doing a mutation is perfectly fine.", "tokens": [50364, 400, 498, 264, 954, 567, 2738, 281, 1319, 264, 2657, 307, 611, 264, 787, 954, 567, 393, 11441, 50638, 50638, 264, 2657, 11, 884, 257, 27960, 307, 6239, 2489, 13, 50828, 50828, 400, 370, 538, 1228, 6408, 13251, 11, 436, 393, 767, 483, 341, 3389, 19618, 11, 51052, 51052, 597, 307, 2252, 281, 483, 365, 264, 14150, 11087, 2856, 13, 51240, 51240, 400, 370, 300, 1496, 295, 1969, 11, 264, 1154, 365, 309, 307, 300, 291, 362, 281, 4445, 1203, 51464, 51464, 1803, 13, 51516, 51516, 583, 264, 14119, 307, 300, 291, 393, 360, 257, 688, 295, 721, 291, 2759, 380, 5646, 312, 1075, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0942568134617161, "compression_ratio": 1.7761194029850746, "no_caption_prob": 1.7230930097866803e-05}, {"id": 489, "seek": 203980, "start": 2049.08, "end": 2053.56, "text": " And so by using reference counting, they can actually get this performance optimization,", "tokens": [50364, 400, 498, 264, 954, 567, 2738, 281, 1319, 264, 2657, 307, 611, 264, 787, 954, 567, 393, 11441, 50638, 50638, 264, 2657, 11, 884, 257, 27960, 307, 6239, 2489, 13, 50828, 50828, 400, 370, 538, 1228, 6408, 13251, 11, 436, 393, 767, 483, 341, 3389, 19618, 11, 51052, 51052, 597, 307, 2252, 281, 483, 365, 264, 14150, 11087, 2856, 13, 51240, 51240, 400, 370, 300, 1496, 295, 1969, 11, 264, 1154, 365, 309, 307, 300, 291, 362, 281, 4445, 1203, 51464, 51464, 1803, 13, 51516, 51516, 583, 264, 14119, 307, 300, 291, 393, 360, 257, 688, 295, 721, 291, 2759, 380, 5646, 312, 1075, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0942568134617161, "compression_ratio": 1.7761194029850746, "no_caption_prob": 1.7230930097866803e-05}, {"id": 490, "seek": 203980, "start": 2053.56, "end": 2057.32, "text": " which is difficult to get with the garbage collected language.", "tokens": [50364, 400, 498, 264, 954, 567, 2738, 281, 1319, 264, 2657, 307, 611, 264, 787, 954, 567, 393, 11441, 50638, 50638, 264, 2657, 11, 884, 257, 27960, 307, 6239, 2489, 13, 50828, 50828, 400, 370, 538, 1228, 6408, 13251, 11, 436, 393, 767, 483, 341, 3389, 19618, 11, 51052, 51052, 597, 307, 2252, 281, 483, 365, 264, 14150, 11087, 2856, 13, 51240, 51240, 400, 370, 300, 1496, 295, 1969, 11, 264, 1154, 365, 309, 307, 300, 291, 362, 281, 4445, 1203, 51464, 51464, 1803, 13, 51516, 51516, 583, 264, 14119, 307, 300, 291, 393, 360, 257, 688, 295, 721, 291, 2759, 380, 5646, 312, 1075, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0942568134617161, "compression_ratio": 1.7761194029850746, "no_caption_prob": 1.7230930097866803e-05}, {"id": 491, "seek": 203980, "start": 2057.32, "end": 2061.8, "text": " And so that level of control, the problem with it is that you have to implement everything", "tokens": [50364, 400, 498, 264, 954, 567, 2738, 281, 1319, 264, 2657, 307, 611, 264, 787, 954, 567, 393, 11441, 50638, 50638, 264, 2657, 11, 884, 257, 27960, 307, 6239, 2489, 13, 50828, 50828, 400, 370, 538, 1228, 6408, 13251, 11, 436, 393, 767, 483, 341, 3389, 19618, 11, 51052, 51052, 597, 307, 2252, 281, 483, 365, 264, 14150, 11087, 2856, 13, 51240, 51240, 400, 370, 300, 1496, 295, 1969, 11, 264, 1154, 365, 309, 307, 300, 291, 362, 281, 4445, 1203, 51464, 51464, 1803, 13, 51516, 51516, 583, 264, 14119, 307, 300, 291, 393, 360, 257, 688, 295, 721, 291, 2759, 380, 5646, 312, 1075, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0942568134617161, "compression_ratio": 1.7761194029850746, "no_caption_prob": 1.7230930097866803e-05}, {"id": 492, "seek": 203980, "start": 2061.8, "end": 2062.84, "text": " yourself.", "tokens": [50364, 400, 498, 264, 954, 567, 2738, 281, 1319, 264, 2657, 307, 611, 264, 787, 954, 567, 393, 11441, 50638, 50638, 264, 2657, 11, 884, 257, 27960, 307, 6239, 2489, 13, 50828, 50828, 400, 370, 538, 1228, 6408, 13251, 11, 436, 393, 767, 483, 341, 3389, 19618, 11, 51052, 51052, 597, 307, 2252, 281, 483, 365, 264, 14150, 11087, 2856, 13, 51240, 51240, 400, 370, 300, 1496, 295, 1969, 11, 264, 1154, 365, 309, 307, 300, 291, 362, 281, 4445, 1203, 51464, 51464, 1803, 13, 51516, 51516, 583, 264, 14119, 307, 300, 291, 393, 360, 257, 688, 295, 721, 291, 2759, 380, 5646, 312, 1075, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0942568134617161, "compression_ratio": 1.7761194029850746, "no_caption_prob": 1.7230930097866803e-05}, {"id": 493, "seek": 203980, "start": 2062.84, "end": 2068.8, "text": " But the upside is that you can do a lot of things you wouldn't normally be able to do.", "tokens": [50364, 400, 498, 264, 954, 567, 2738, 281, 1319, 264, 2657, 307, 611, 264, 787, 954, 567, 393, 11441, 50638, 50638, 264, 2657, 11, 884, 257, 27960, 307, 6239, 2489, 13, 50828, 50828, 400, 370, 538, 1228, 6408, 13251, 11, 436, 393, 767, 483, 341, 3389, 19618, 11, 51052, 51052, 597, 307, 2252, 281, 483, 365, 264, 14150, 11087, 2856, 13, 51240, 51240, 400, 370, 300, 1496, 295, 1969, 11, 264, 1154, 365, 309, 307, 300, 291, 362, 281, 4445, 1203, 51464, 51464, 1803, 13, 51516, 51516, 583, 264, 14119, 307, 300, 291, 393, 360, 257, 688, 295, 721, 291, 2759, 380, 5646, 312, 1075, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0942568134617161, "compression_ratio": 1.7761194029850746, "no_caption_prob": 1.7230930097866803e-05}, {"id": 494, "seek": 206880, "start": 2068.8, "end": 2078.0, "text": " So whatever the future holds for Elm, Brian Carroll has done some really cool experiments", "tokens": [50364, 407, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 10765, 48456, 575, 1096, 512, 534, 1627, 12050, 50824, 50824, 46219, 3381, 9573, 10884, 19160, 5598, 337, 2699, 76, 11, 597, 309, 311, 1333, 295, 364, 2440, 19475, 13, 51195, 51195, 492, 500, 380, 458, 498, 300, 576, 1562, 312, 4265, 1919, 420, 498, 309, 311, 445, 257, 8177, 295, 3410, 11, 51386, 51386, 457, 2139, 636, 11, 309, 311, 588, 1880, 589, 13, 51492, 51492, 583, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 286, 733, 295, 2441, 437, 11, 286, 914, 11, 294, 1729, 11, 264, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12353112437937519, "compression_ratio": 1.6455696202531647, "no_caption_prob": 0.00010069985728478059}, {"id": 495, "seek": 206880, "start": 2078.0, "end": 2085.42, "text": " prototyping WebAssembly output for Elm, which it's sort of an early prototype.", "tokens": [50364, 407, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 10765, 48456, 575, 1096, 512, 534, 1627, 12050, 50824, 50824, 46219, 3381, 9573, 10884, 19160, 5598, 337, 2699, 76, 11, 597, 309, 311, 1333, 295, 364, 2440, 19475, 13, 51195, 51195, 492, 500, 380, 458, 498, 300, 576, 1562, 312, 4265, 1919, 420, 498, 309, 311, 445, 257, 8177, 295, 3410, 11, 51386, 51386, 457, 2139, 636, 11, 309, 311, 588, 1880, 589, 13, 51492, 51492, 583, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 286, 733, 295, 2441, 437, 11, 286, 914, 11, 294, 1729, 11, 264, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12353112437937519, "compression_ratio": 1.6455696202531647, "no_caption_prob": 0.00010069985728478059}, {"id": 496, "seek": 206880, "start": 2085.42, "end": 2089.2400000000002, "text": " We don't know if that would ever be production ready or if it's just a proof of concept,", "tokens": [50364, 407, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 10765, 48456, 575, 1096, 512, 534, 1627, 12050, 50824, 50824, 46219, 3381, 9573, 10884, 19160, 5598, 337, 2699, 76, 11, 597, 309, 311, 1333, 295, 364, 2440, 19475, 13, 51195, 51195, 492, 500, 380, 458, 498, 300, 576, 1562, 312, 4265, 1919, 420, 498, 309, 311, 445, 257, 8177, 295, 3410, 11, 51386, 51386, 457, 2139, 636, 11, 309, 311, 588, 1880, 589, 13, 51492, 51492, 583, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 286, 733, 295, 2441, 437, 11, 286, 914, 11, 294, 1729, 11, 264, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12353112437937519, "compression_ratio": 1.6455696202531647, "no_caption_prob": 0.00010069985728478059}, {"id": 497, "seek": 206880, "start": 2089.2400000000002, "end": 2091.36, "text": " but either way, it's very interesting work.", "tokens": [50364, 407, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 10765, 48456, 575, 1096, 512, 534, 1627, 12050, 50824, 50824, 46219, 3381, 9573, 10884, 19160, 5598, 337, 2699, 76, 11, 597, 309, 311, 1333, 295, 364, 2440, 19475, 13, 51195, 51195, 492, 500, 380, 458, 498, 300, 576, 1562, 312, 4265, 1919, 420, 498, 309, 311, 445, 257, 8177, 295, 3410, 11, 51386, 51386, 457, 2139, 636, 11, 309, 311, 588, 1880, 589, 13, 51492, 51492, 583, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 286, 733, 295, 2441, 437, 11, 286, 914, 11, 294, 1729, 11, 264, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12353112437937519, "compression_ratio": 1.6455696202531647, "no_caption_prob": 0.00010069985728478059}, {"id": 498, "seek": 206880, "start": 2091.36, "end": 2096.8, "text": " But whatever the future holds for Elm, I kind of wonder what, I mean, in particular, the", "tokens": [50364, 407, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 10765, 48456, 575, 1096, 512, 534, 1627, 12050, 50824, 50824, 46219, 3381, 9573, 10884, 19160, 5598, 337, 2699, 76, 11, 597, 309, 311, 1333, 295, 364, 2440, 19475, 13, 51195, 51195, 492, 500, 380, 458, 498, 300, 576, 1562, 312, 4265, 1919, 420, 498, 309, 311, 445, 257, 8177, 295, 3410, 11, 51386, 51386, 457, 2139, 636, 11, 309, 311, 588, 1880, 589, 13, 51492, 51492, 583, 2035, 264, 2027, 9190, 337, 2699, 76, 11, 286, 733, 295, 2441, 437, 11, 286, 914, 11, 294, 1729, 11, 264, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12353112437937519, "compression_ratio": 1.6455696202531647, "no_caption_prob": 0.00010069985728478059}, {"id": 499, "seek": 209680, "start": 2096.8, "end": 2102.2000000000003, "text": " two of you, Robin and Jeroen, you've been digging into performance a lot.", "tokens": [50364, 732, 295, 291, 11, 16533, 293, 508, 2032, 268, 11, 291, 600, 668, 17343, 666, 3389, 257, 688, 13, 50634, 50634, 508, 2032, 268, 575, 668, 884, 300, 382, 257, 5418, 1716, 12881, 13, 50820, 50820, 400, 286, 2441, 11, 366, 321, 29699, 264, 3753, 337, 3389, 1507, 294, 2699, 76, 30, 51086, 51086, 1610, 307, 456, 257, 688, 544, 300, 321, 362, 1411, 30, 51230, 51230, 1436, 472, 295, 264, 534, 1880, 3166, 295, 264, 2699, 76, 1657, 281, 385, 307, 294, 264, 2440, 1708, 11, 51505, 51505, 456, 390, 257, 6968, 2183, 11, 286, 519, 11, 15763, 3389, 1296, 613, 819, 1868, 51727, 51727, 917, 29834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11484332633229484, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.198297028779052e-05}, {"id": 500, "seek": 209680, "start": 2102.2000000000003, "end": 2105.92, "text": " Jeroen has been doing that as a passion project lately.", "tokens": [50364, 732, 295, 291, 11, 16533, 293, 508, 2032, 268, 11, 291, 600, 668, 17343, 666, 3389, 257, 688, 13, 50634, 50634, 508, 2032, 268, 575, 668, 884, 300, 382, 257, 5418, 1716, 12881, 13, 50820, 50820, 400, 286, 2441, 11, 366, 321, 29699, 264, 3753, 337, 3389, 1507, 294, 2699, 76, 30, 51086, 51086, 1610, 307, 456, 257, 688, 544, 300, 321, 362, 1411, 30, 51230, 51230, 1436, 472, 295, 264, 534, 1880, 3166, 295, 264, 2699, 76, 1657, 281, 385, 307, 294, 264, 2440, 1708, 11, 51505, 51505, 456, 390, 257, 6968, 2183, 11, 286, 519, 11, 15763, 3389, 1296, 613, 819, 1868, 51727, 51727, 917, 29834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11484332633229484, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.198297028779052e-05}, {"id": 501, "seek": 209680, "start": 2105.92, "end": 2111.2400000000002, "text": " And I wonder, are we scratching the surface for performance stuff in Elm?", "tokens": [50364, 732, 295, 291, 11, 16533, 293, 508, 2032, 268, 11, 291, 600, 668, 17343, 666, 3389, 257, 688, 13, 50634, 50634, 508, 2032, 268, 575, 668, 884, 300, 382, 257, 5418, 1716, 12881, 13, 50820, 50820, 400, 286, 2441, 11, 366, 321, 29699, 264, 3753, 337, 3389, 1507, 294, 2699, 76, 30, 51086, 51086, 1610, 307, 456, 257, 688, 544, 300, 321, 362, 1411, 30, 51230, 51230, 1436, 472, 295, 264, 534, 1880, 3166, 295, 264, 2699, 76, 1657, 281, 385, 307, 294, 264, 2440, 1708, 11, 51505, 51505, 456, 390, 257, 6968, 2183, 11, 286, 519, 11, 15763, 3389, 1296, 613, 819, 1868, 51727, 51727, 917, 29834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11484332633229484, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.198297028779052e-05}, {"id": 502, "seek": 209680, "start": 2111.2400000000002, "end": 2114.1200000000003, "text": " Or is there a lot more that we have left?", "tokens": [50364, 732, 295, 291, 11, 16533, 293, 508, 2032, 268, 11, 291, 600, 668, 17343, 666, 3389, 257, 688, 13, 50634, 50634, 508, 2032, 268, 575, 668, 884, 300, 382, 257, 5418, 1716, 12881, 13, 50820, 50820, 400, 286, 2441, 11, 366, 321, 29699, 264, 3753, 337, 3389, 1507, 294, 2699, 76, 30, 51086, 51086, 1610, 307, 456, 257, 688, 544, 300, 321, 362, 1411, 30, 51230, 51230, 1436, 472, 295, 264, 534, 1880, 3166, 295, 264, 2699, 76, 1657, 281, 385, 307, 294, 264, 2440, 1708, 11, 51505, 51505, 456, 390, 257, 6968, 2183, 11, 286, 519, 11, 15763, 3389, 1296, 613, 819, 1868, 51727, 51727, 917, 29834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11484332633229484, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.198297028779052e-05}, {"id": 503, "seek": 209680, "start": 2114.1200000000003, "end": 2119.6200000000003, "text": " Because one of the really interesting parts of the Elm story to me is in the early days,", "tokens": [50364, 732, 295, 291, 11, 16533, 293, 508, 2032, 268, 11, 291, 600, 668, 17343, 666, 3389, 257, 688, 13, 50634, 50634, 508, 2032, 268, 575, 668, 884, 300, 382, 257, 5418, 1716, 12881, 13, 50820, 50820, 400, 286, 2441, 11, 366, 321, 29699, 264, 3753, 337, 3389, 1507, 294, 2699, 76, 30, 51086, 51086, 1610, 307, 456, 257, 688, 544, 300, 321, 362, 1411, 30, 51230, 51230, 1436, 472, 295, 264, 534, 1880, 3166, 295, 264, 2699, 76, 1657, 281, 385, 307, 294, 264, 2440, 1708, 11, 51505, 51505, 456, 390, 257, 6968, 2183, 11, 286, 519, 11, 15763, 3389, 1296, 613, 819, 1868, 51727, 51727, 917, 29834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11484332633229484, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.198297028779052e-05}, {"id": 504, "seek": 209680, "start": 2119.6200000000003, "end": 2124.0600000000004, "text": " there was a blog post, I think, comparing performance between these different front", "tokens": [50364, 732, 295, 291, 11, 16533, 293, 508, 2032, 268, 11, 291, 600, 668, 17343, 666, 3389, 257, 688, 13, 50634, 50634, 508, 2032, 268, 575, 668, 884, 300, 382, 257, 5418, 1716, 12881, 13, 50820, 50820, 400, 286, 2441, 11, 366, 321, 29699, 264, 3753, 337, 3389, 1507, 294, 2699, 76, 30, 51086, 51086, 1610, 307, 456, 257, 688, 544, 300, 321, 362, 1411, 30, 51230, 51230, 1436, 472, 295, 264, 534, 1880, 3166, 295, 264, 2699, 76, 1657, 281, 385, 307, 294, 264, 2440, 1708, 11, 51505, 51505, 456, 390, 257, 6968, 2183, 11, 286, 519, 11, 15763, 3389, 1296, 613, 819, 1868, 51727, 51727, 917, 29834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11484332633229484, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.198297028779052e-05}, {"id": 505, "seek": 209680, "start": 2124.0600000000004, "end": 2125.52, "text": " end frameworks.", "tokens": [50364, 732, 295, 291, 11, 16533, 293, 508, 2032, 268, 11, 291, 600, 668, 17343, 666, 3389, 257, 688, 13, 50634, 50634, 508, 2032, 268, 575, 668, 884, 300, 382, 257, 5418, 1716, 12881, 13, 50820, 50820, 400, 286, 2441, 11, 366, 321, 29699, 264, 3753, 337, 3389, 1507, 294, 2699, 76, 30, 51086, 51086, 1610, 307, 456, 257, 688, 544, 300, 321, 362, 1411, 30, 51230, 51230, 1436, 472, 295, 264, 534, 1880, 3166, 295, 264, 2699, 76, 1657, 281, 385, 307, 294, 264, 2440, 1708, 11, 51505, 51505, 456, 390, 257, 6968, 2183, 11, 286, 519, 11, 15763, 3389, 1296, 613, 819, 1868, 51727, 51727, 917, 29834, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.11484332633229484, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.198297028779052e-05}, {"id": 506, "seek": 212552, "start": 2125.52, "end": 2128.72, "text": " And Elm was one of the top performers, right?", "tokens": [50364, 400, 2699, 76, 390, 472, 295, 264, 1192, 30768, 11, 558, 30, 50524, 50524, 400, 300, 311, 588, 1880, 562, 291, 362, 341, 588, 1090, 1496, 2856, 11, 293, 291, 362, 50780, 50780, 613, 721, 300, 11, 291, 458, 11, 286, 914, 11, 498, 309, 311, 428, 4414, 295, 5817, 11, 721, 411, 3397, 325, 2310, 51043, 51043, 366, 534, 4670, 294, 2115, 295, 12245, 264, 15605, 3677, 295, 264, 10754, 885, 1075, 51268, 51268, 281, 3612, 13508, 437, 428, 3089, 307, 884, 13, 51387, 51387, 400, 309, 2544, 411, 309, 576, 312, 257, 12578, 337, 3389, 11, 457, 550, 5800, 291, 434, 1242, 51630, 51630, 1101, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10591820067009039, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.4970614756748546e-05}, {"id": 507, "seek": 212552, "start": 2128.72, "end": 2133.84, "text": " And that's very interesting when you have this very high level language, and you have", "tokens": [50364, 400, 2699, 76, 390, 472, 295, 264, 1192, 30768, 11, 558, 30, 50524, 50524, 400, 300, 311, 588, 1880, 562, 291, 362, 341, 588, 1090, 1496, 2856, 11, 293, 291, 362, 50780, 50780, 613, 721, 300, 11, 291, 458, 11, 286, 914, 11, 498, 309, 311, 428, 4414, 295, 5817, 11, 721, 411, 3397, 325, 2310, 51043, 51043, 366, 534, 4670, 294, 2115, 295, 12245, 264, 15605, 3677, 295, 264, 10754, 885, 1075, 51268, 51268, 281, 3612, 13508, 437, 428, 3089, 307, 884, 13, 51387, 51387, 400, 309, 2544, 411, 309, 576, 312, 257, 12578, 337, 3389, 11, 457, 550, 5800, 291, 434, 1242, 51630, 51630, 1101, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10591820067009039, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.4970614756748546e-05}, {"id": 508, "seek": 212552, "start": 2133.84, "end": 2139.1, "text": " these things that, you know, I mean, if it's your cup of tea, things like immutability", "tokens": [50364, 400, 2699, 76, 390, 472, 295, 264, 1192, 30768, 11, 558, 30, 50524, 50524, 400, 300, 311, 588, 1880, 562, 291, 362, 341, 588, 1090, 1496, 2856, 11, 293, 291, 362, 50780, 50780, 613, 721, 300, 11, 291, 458, 11, 286, 914, 11, 498, 309, 311, 428, 4414, 295, 5817, 11, 721, 411, 3397, 325, 2310, 51043, 51043, 366, 534, 4670, 294, 2115, 295, 12245, 264, 15605, 3677, 295, 264, 10754, 885, 1075, 51268, 51268, 281, 3612, 13508, 437, 428, 3089, 307, 884, 13, 51387, 51387, 400, 309, 2544, 411, 309, 576, 312, 257, 12578, 337, 3389, 11, 457, 550, 5800, 291, 434, 1242, 51630, 51630, 1101, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10591820067009039, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.4970614756748546e-05}, {"id": 509, "seek": 212552, "start": 2139.1, "end": 2143.6, "text": " are really exciting in terms of reducing the cognitive load of the developer being able", "tokens": [50364, 400, 2699, 76, 390, 472, 295, 264, 1192, 30768, 11, 558, 30, 50524, 50524, 400, 300, 311, 588, 1880, 562, 291, 362, 341, 588, 1090, 1496, 2856, 11, 293, 291, 362, 50780, 50780, 613, 721, 300, 11, 291, 458, 11, 286, 914, 11, 498, 309, 311, 428, 4414, 295, 5817, 11, 721, 411, 3397, 325, 2310, 51043, 51043, 366, 534, 4670, 294, 2115, 295, 12245, 264, 15605, 3677, 295, 264, 10754, 885, 1075, 51268, 51268, 281, 3612, 13508, 437, 428, 3089, 307, 884, 13, 51387, 51387, 400, 309, 2544, 411, 309, 576, 312, 257, 12578, 337, 3389, 11, 457, 550, 5800, 291, 434, 1242, 51630, 51630, 1101, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10591820067009039, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.4970614756748546e-05}, {"id": 510, "seek": 212552, "start": 2143.6, "end": 2145.98, "text": " to easily trace what your code is doing.", "tokens": [50364, 400, 2699, 76, 390, 472, 295, 264, 1192, 30768, 11, 558, 30, 50524, 50524, 400, 300, 311, 588, 1880, 562, 291, 362, 341, 588, 1090, 1496, 2856, 11, 293, 291, 362, 50780, 50780, 613, 721, 300, 11, 291, 458, 11, 286, 914, 11, 498, 309, 311, 428, 4414, 295, 5817, 11, 721, 411, 3397, 325, 2310, 51043, 51043, 366, 534, 4670, 294, 2115, 295, 12245, 264, 15605, 3677, 295, 264, 10754, 885, 1075, 51268, 51268, 281, 3612, 13508, 437, 428, 3089, 307, 884, 13, 51387, 51387, 400, 309, 2544, 411, 309, 576, 312, 257, 12578, 337, 3389, 11, 457, 550, 5800, 291, 434, 1242, 51630, 51630, 1101, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10591820067009039, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.4970614756748546e-05}, {"id": 511, "seek": 212552, "start": 2145.98, "end": 2150.84, "text": " And it seems like it would be a burden for performance, but then suddenly you're getting", "tokens": [50364, 400, 2699, 76, 390, 472, 295, 264, 1192, 30768, 11, 558, 30, 50524, 50524, 400, 300, 311, 588, 1880, 562, 291, 362, 341, 588, 1090, 1496, 2856, 11, 293, 291, 362, 50780, 50780, 613, 721, 300, 11, 291, 458, 11, 286, 914, 11, 498, 309, 311, 428, 4414, 295, 5817, 11, 721, 411, 3397, 325, 2310, 51043, 51043, 366, 534, 4670, 294, 2115, 295, 12245, 264, 15605, 3677, 295, 264, 10754, 885, 1075, 51268, 51268, 281, 3612, 13508, 437, 428, 3089, 307, 884, 13, 51387, 51387, 400, 309, 2544, 411, 309, 576, 312, 257, 12578, 337, 3389, 11, 457, 550, 5800, 291, 434, 1242, 51630, 51630, 1101, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10591820067009039, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.4970614756748546e-05}, {"id": 512, "seek": 212552, "start": 2150.84, "end": 2151.84, "text": " better performance.", "tokens": [50364, 400, 2699, 76, 390, 472, 295, 264, 1192, 30768, 11, 558, 30, 50524, 50524, 400, 300, 311, 588, 1880, 562, 291, 362, 341, 588, 1090, 1496, 2856, 11, 293, 291, 362, 50780, 50780, 613, 721, 300, 11, 291, 458, 11, 286, 914, 11, 498, 309, 311, 428, 4414, 295, 5817, 11, 721, 411, 3397, 325, 2310, 51043, 51043, 366, 534, 4670, 294, 2115, 295, 12245, 264, 15605, 3677, 295, 264, 10754, 885, 1075, 51268, 51268, 281, 3612, 13508, 437, 428, 3089, 307, 884, 13, 51387, 51387, 400, 309, 2544, 411, 309, 576, 312, 257, 12578, 337, 3389, 11, 457, 550, 5800, 291, 434, 1242, 51630, 51630, 1101, 3389, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10591820067009039, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.4970614756748546e-05}, {"id": 513, "seek": 215184, "start": 2151.84, "end": 2157.32, "text": " And that's one of the really fascinating things to me is how can you take these characteristics", "tokens": [50364, 400, 300, 311, 472, 295, 264, 534, 10343, 721, 281, 385, 307, 577, 393, 291, 747, 613, 10891, 50638, 50638, 295, 264, 2699, 76, 2856, 293, 13982, 552, 281, 767, 312, 2286, 295, 264, 2844, 365, 3389, 30, 50888, 50888, 407, 689, 360, 291, 1074, 519, 321, 366, 365, 3389, 5028, 14455, 294, 2699, 76, 30, 51144, 51144, 1436, 286, 478, 2577, 439, 613, 411, 6968, 12300, 300, 291, 434, 3579, 11, 16533, 11, 293, 286, 478, 2577, 51368, 51368, 508, 2032, 268, 311, 7897, 466, 411, 702, 40661, 322, 5794, 365, 613, 2416, 9668, 13797, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.08416440963745117, "compression_ratio": 1.655430711610487, "no_caption_prob": 5.6491240684408695e-05}, {"id": 514, "seek": 215184, "start": 2157.32, "end": 2162.32, "text": " of the Elm language and leverage them to actually be ahead of the pack with performance?", "tokens": [50364, 400, 300, 311, 472, 295, 264, 534, 10343, 721, 281, 385, 307, 577, 393, 291, 747, 613, 10891, 50638, 50638, 295, 264, 2699, 76, 2856, 293, 13982, 552, 281, 767, 312, 2286, 295, 264, 2844, 365, 3389, 30, 50888, 50888, 407, 689, 360, 291, 1074, 519, 321, 366, 365, 3389, 5028, 14455, 294, 2699, 76, 30, 51144, 51144, 1436, 286, 478, 2577, 439, 613, 411, 6968, 12300, 300, 291, 434, 3579, 11, 16533, 11, 293, 286, 478, 2577, 51368, 51368, 508, 2032, 268, 311, 7897, 466, 411, 702, 40661, 322, 5794, 365, 613, 2416, 9668, 13797, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.08416440963745117, "compression_ratio": 1.655430711610487, "no_caption_prob": 5.6491240684408695e-05}, {"id": 515, "seek": 215184, "start": 2162.32, "end": 2167.44, "text": " So where do you guys think we are with performance optimizations in Elm?", "tokens": [50364, 400, 300, 311, 472, 295, 264, 534, 10343, 721, 281, 385, 307, 577, 393, 291, 747, 613, 10891, 50638, 50638, 295, 264, 2699, 76, 2856, 293, 13982, 552, 281, 767, 312, 2286, 295, 264, 2844, 365, 3389, 30, 50888, 50888, 407, 689, 360, 291, 1074, 519, 321, 366, 365, 3389, 5028, 14455, 294, 2699, 76, 30, 51144, 51144, 1436, 286, 478, 2577, 439, 613, 411, 6968, 12300, 300, 291, 434, 3579, 11, 16533, 11, 293, 286, 478, 2577, 51368, 51368, 508, 2032, 268, 311, 7897, 466, 411, 702, 40661, 322, 5794, 365, 613, 2416, 9668, 13797, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.08416440963745117, "compression_ratio": 1.655430711610487, "no_caption_prob": 5.6491240684408695e-05}, {"id": 516, "seek": 215184, "start": 2167.44, "end": 2171.92, "text": " Because I'm seeing all these like blog posts that you're writing, Robin, and I'm seeing", "tokens": [50364, 400, 300, 311, 472, 295, 264, 534, 10343, 721, 281, 385, 307, 577, 393, 291, 747, 613, 10891, 50638, 50638, 295, 264, 2699, 76, 2856, 293, 13982, 552, 281, 767, 312, 2286, 295, 264, 2844, 365, 3389, 30, 50888, 50888, 407, 689, 360, 291, 1074, 519, 321, 366, 365, 3389, 5028, 14455, 294, 2699, 76, 30, 51144, 51144, 1436, 286, 478, 2577, 439, 613, 411, 6968, 12300, 300, 291, 434, 3579, 11, 16533, 11, 293, 286, 478, 2577, 51368, 51368, 508, 2032, 268, 311, 7897, 466, 411, 702, 40661, 322, 5794, 365, 613, 2416, 9668, 13797, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.08416440963745117, "compression_ratio": 1.655430711610487, "no_caption_prob": 5.6491240684408695e-05}, {"id": 517, "seek": 215184, "start": 2171.92, "end": 2179.7200000000003, "text": " Jeroen's messages about like his screenshots on Twitter with these large percentage improvements", "tokens": [50364, 400, 300, 311, 472, 295, 264, 534, 10343, 721, 281, 385, 307, 577, 393, 291, 747, 613, 10891, 50638, 50638, 295, 264, 2699, 76, 2856, 293, 13982, 552, 281, 767, 312, 2286, 295, 264, 2844, 365, 3389, 30, 50888, 50888, 407, 689, 360, 291, 1074, 519, 321, 366, 365, 3389, 5028, 14455, 294, 2699, 76, 30, 51144, 51144, 1436, 286, 478, 2577, 439, 613, 411, 6968, 12300, 300, 291, 434, 3579, 11, 16533, 11, 293, 286, 478, 2577, 51368, 51368, 508, 2032, 268, 311, 7897, 466, 411, 702, 40661, 322, 5794, 365, 613, 2416, 9668, 13797, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.08416440963745117, "compression_ratio": 1.655430711610487, "no_caption_prob": 5.6491240684408695e-05}, {"id": 518, "seek": 217972, "start": 2179.72, "end": 2182.2, "text": " on certain benchmarks.", "tokens": [50364, 322, 1629, 43751, 13, 50488, 50488, 407, 366, 729, 721, 516, 281, 1066, 2737, 337, 257, 1339, 30, 50692, 50692, 1610, 366, 321, 9906, 264, 4948, 295, 577, 709, 321, 393, 19719, 2699, 76, 311, 3389, 30, 50962, 50962, 1037, 2286, 508, 2032, 268, 13, 51036, 51036, 865, 11, 321, 2825, 466, 341, 294, 4551, 293, 16533, 848, 11, 321, 1391, 630, 264, 1858, 1507, 13, 51407, 51407, 407, 437, 286, 478, 884, 11, 411, 286, 478, 2577, 257, 2445, 293, 286, 536, 257, 636, 281, 3470, 309, 3389, 51694, 51694, 10829, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.14130450769798042, "compression_ratio": 1.5042735042735043, "no_caption_prob": 1.59350638568867e-05}, {"id": 519, "seek": 217972, "start": 2182.2, "end": 2186.2799999999997, "text": " So are those things going to keep happening for a while?", "tokens": [50364, 322, 1629, 43751, 13, 50488, 50488, 407, 366, 729, 721, 516, 281, 1066, 2737, 337, 257, 1339, 30, 50692, 50692, 1610, 366, 321, 9906, 264, 4948, 295, 577, 709, 321, 393, 19719, 2699, 76, 311, 3389, 30, 50962, 50962, 1037, 2286, 508, 2032, 268, 13, 51036, 51036, 865, 11, 321, 2825, 466, 341, 294, 4551, 293, 16533, 848, 11, 321, 1391, 630, 264, 1858, 1507, 13, 51407, 51407, 407, 437, 286, 478, 884, 11, 411, 286, 478, 2577, 257, 2445, 293, 286, 536, 257, 636, 281, 3470, 309, 3389, 51694, 51694, 10829, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.14130450769798042, "compression_ratio": 1.5042735042735043, "no_caption_prob": 1.59350638568867e-05}, {"id": 520, "seek": 217972, "start": 2186.2799999999997, "end": 2191.68, "text": " Or are we reaching the limit of how much we can optimize Elm's performance?", "tokens": [50364, 322, 1629, 43751, 13, 50488, 50488, 407, 366, 729, 721, 516, 281, 1066, 2737, 337, 257, 1339, 30, 50692, 50692, 1610, 366, 321, 9906, 264, 4948, 295, 577, 709, 321, 393, 19719, 2699, 76, 311, 3389, 30, 50962, 50962, 1037, 2286, 508, 2032, 268, 13, 51036, 51036, 865, 11, 321, 2825, 466, 341, 294, 4551, 293, 16533, 848, 11, 321, 1391, 630, 264, 1858, 1507, 13, 51407, 51407, 407, 437, 286, 478, 884, 11, 411, 286, 478, 2577, 257, 2445, 293, 286, 536, 257, 636, 281, 3470, 309, 3389, 51694, 51694, 10829, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.14130450769798042, "compression_ratio": 1.5042735042735043, "no_caption_prob": 1.59350638568867e-05}, {"id": 521, "seek": 217972, "start": 2191.68, "end": 2193.16, "text": " Go ahead Jeroen.", "tokens": [50364, 322, 1629, 43751, 13, 50488, 50488, 407, 366, 729, 721, 516, 281, 1066, 2737, 337, 257, 1339, 30, 50692, 50692, 1610, 366, 321, 9906, 264, 4948, 295, 577, 709, 321, 393, 19719, 2699, 76, 311, 3389, 30, 50962, 50962, 1037, 2286, 508, 2032, 268, 13, 51036, 51036, 865, 11, 321, 2825, 466, 341, 294, 4551, 293, 16533, 848, 11, 321, 1391, 630, 264, 1858, 1507, 13, 51407, 51407, 407, 437, 286, 478, 884, 11, 411, 286, 478, 2577, 257, 2445, 293, 286, 536, 257, 636, 281, 3470, 309, 3389, 51694, 51694, 10829, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.14130450769798042, "compression_ratio": 1.5042735042735043, "no_caption_prob": 1.59350638568867e-05}, {"id": 522, "seek": 217972, "start": 2193.16, "end": 2200.58, "text": " Yeah, we talked about this in private and Robin said, we probably did the easy stuff.", "tokens": [50364, 322, 1629, 43751, 13, 50488, 50488, 407, 366, 729, 721, 516, 281, 1066, 2737, 337, 257, 1339, 30, 50692, 50692, 1610, 366, 321, 9906, 264, 4948, 295, 577, 709, 321, 393, 19719, 2699, 76, 311, 3389, 30, 50962, 50962, 1037, 2286, 508, 2032, 268, 13, 51036, 51036, 865, 11, 321, 2825, 466, 341, 294, 4551, 293, 16533, 848, 11, 321, 1391, 630, 264, 1858, 1507, 13, 51407, 51407, 407, 437, 286, 478, 884, 11, 411, 286, 478, 2577, 257, 2445, 293, 286, 536, 257, 636, 281, 3470, 309, 3389, 51694, 51694, 10829, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.14130450769798042, "compression_ratio": 1.5042735042735043, "no_caption_prob": 1.59350638568867e-05}, {"id": 523, "seek": 217972, "start": 2200.58, "end": 2206.3199999999997, "text": " So what I'm doing, like I'm seeing a function and I see a way to improve it performance", "tokens": [50364, 322, 1629, 43751, 13, 50488, 50488, 407, 366, 729, 721, 516, 281, 1066, 2737, 337, 257, 1339, 30, 50692, 50692, 1610, 366, 321, 9906, 264, 4948, 295, 577, 709, 321, 393, 19719, 2699, 76, 311, 3389, 30, 50962, 50962, 1037, 2286, 508, 2032, 268, 13, 51036, 51036, 865, 11, 321, 2825, 466, 341, 294, 4551, 293, 16533, 848, 11, 321, 1391, 630, 264, 1858, 1507, 13, 51407, 51407, 407, 437, 286, 478, 884, 11, 411, 286, 478, 2577, 257, 2445, 293, 286, 536, 257, 636, 281, 3470, 309, 3389, 51694, 51694, 10829, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.14130450769798042, "compression_ratio": 1.5042735042735043, "no_caption_prob": 1.59350638568867e-05}, {"id": 524, "seek": 217972, "start": 2206.3199999999997, "end": 2207.3199999999997, "text": " wise.", "tokens": [50364, 322, 1629, 43751, 13, 50488, 50488, 407, 366, 729, 721, 516, 281, 1066, 2737, 337, 257, 1339, 30, 50692, 50692, 1610, 366, 321, 9906, 264, 4948, 295, 577, 709, 321, 393, 19719, 2699, 76, 311, 3389, 30, 50962, 50962, 1037, 2286, 508, 2032, 268, 13, 51036, 51036, 865, 11, 321, 2825, 466, 341, 294, 4551, 293, 16533, 848, 11, 321, 1391, 630, 264, 1858, 1507, 13, 51407, 51407, 407, 437, 286, 478, 884, 11, 411, 286, 478, 2577, 257, 2445, 293, 286, 536, 257, 636, 281, 3470, 309, 3389, 51694, 51694, 10829, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.14130450769798042, "compression_ratio": 1.5042735042735043, "no_caption_prob": 1.59350638568867e-05}, {"id": 525, "seek": 220732, "start": 2207.32, "end": 2215.1600000000003, "text": " It's mostly just about removing unnecessary work or duplicate work, which happens a lot", "tokens": [50364, 467, 311, 5240, 445, 466, 12720, 19350, 589, 420, 23976, 589, 11, 597, 2314, 257, 688, 50756, 50756, 544, 2049, 813, 5176, 13, 50856, 50856, 1743, 498, 291, 6367, 670, 257, 1329, 732, 1413, 11, 550, 309, 311, 14009, 813, 6367, 278, 670, 309, 1564, 13, 51223, 51223, 407, 286, 1116, 536, 309, 257, 688, 294, 257, 1326, 6828, 293, 300, 311, 445, 544, 466, 577, 291, 2464, 729, 51486, 51486, 6828, 13, 51536, 51536, 407, 309, 311, 1858, 281, 19719, 729, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10213859601952564, "compression_ratio": 1.5748792270531402, "no_caption_prob": 3.704994742292911e-05}, {"id": 526, "seek": 220732, "start": 2215.1600000000003, "end": 2217.1600000000003, "text": " more often than expected.", "tokens": [50364, 467, 311, 5240, 445, 466, 12720, 19350, 589, 420, 23976, 589, 11, 597, 2314, 257, 688, 50756, 50756, 544, 2049, 813, 5176, 13, 50856, 50856, 1743, 498, 291, 6367, 670, 257, 1329, 732, 1413, 11, 550, 309, 311, 14009, 813, 6367, 278, 670, 309, 1564, 13, 51223, 51223, 407, 286, 1116, 536, 309, 257, 688, 294, 257, 1326, 6828, 293, 300, 311, 445, 544, 466, 577, 291, 2464, 729, 51486, 51486, 6828, 13, 51536, 51536, 407, 309, 311, 1858, 281, 19719, 729, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10213859601952564, "compression_ratio": 1.5748792270531402, "no_caption_prob": 3.704994742292911e-05}, {"id": 527, "seek": 220732, "start": 2217.1600000000003, "end": 2224.5, "text": " Like if you loop over a list two times, then it's slower than looping over it once.", "tokens": [50364, 467, 311, 5240, 445, 466, 12720, 19350, 589, 420, 23976, 589, 11, 597, 2314, 257, 688, 50756, 50756, 544, 2049, 813, 5176, 13, 50856, 50856, 1743, 498, 291, 6367, 670, 257, 1329, 732, 1413, 11, 550, 309, 311, 14009, 813, 6367, 278, 670, 309, 1564, 13, 51223, 51223, 407, 286, 1116, 536, 309, 257, 688, 294, 257, 1326, 6828, 293, 300, 311, 445, 544, 466, 577, 291, 2464, 729, 51486, 51486, 6828, 13, 51536, 51536, 407, 309, 311, 1858, 281, 19719, 729, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10213859601952564, "compression_ratio": 1.5748792270531402, "no_caption_prob": 3.704994742292911e-05}, {"id": 528, "seek": 220732, "start": 2224.5, "end": 2229.76, "text": " So I'd see it a lot in a few functions and that's just more about how you write those", "tokens": [50364, 467, 311, 5240, 445, 466, 12720, 19350, 589, 420, 23976, 589, 11, 597, 2314, 257, 688, 50756, 50756, 544, 2049, 813, 5176, 13, 50856, 50856, 1743, 498, 291, 6367, 670, 257, 1329, 732, 1413, 11, 550, 309, 311, 14009, 813, 6367, 278, 670, 309, 1564, 13, 51223, 51223, 407, 286, 1116, 536, 309, 257, 688, 294, 257, 1326, 6828, 293, 300, 311, 445, 544, 466, 577, 291, 2464, 729, 51486, 51486, 6828, 13, 51536, 51536, 407, 309, 311, 1858, 281, 19719, 729, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10213859601952564, "compression_ratio": 1.5748792270531402, "no_caption_prob": 3.704994742292911e-05}, {"id": 529, "seek": 220732, "start": 2229.76, "end": 2230.76, "text": " functions.", "tokens": [50364, 467, 311, 5240, 445, 466, 12720, 19350, 589, 420, 23976, 589, 11, 597, 2314, 257, 688, 50756, 50756, 544, 2049, 813, 5176, 13, 50856, 50856, 1743, 498, 291, 6367, 670, 257, 1329, 732, 1413, 11, 550, 309, 311, 14009, 813, 6367, 278, 670, 309, 1564, 13, 51223, 51223, 407, 286, 1116, 536, 309, 257, 688, 294, 257, 1326, 6828, 293, 300, 311, 445, 544, 466, 577, 291, 2464, 729, 51486, 51486, 6828, 13, 51536, 51536, 407, 309, 311, 1858, 281, 19719, 729, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10213859601952564, "compression_ratio": 1.5748792270531402, "no_caption_prob": 3.704994742292911e-05}, {"id": 530, "seek": 220732, "start": 2230.76, "end": 2232.96, "text": " So it's easy to optimize those.", "tokens": [50364, 467, 311, 5240, 445, 466, 12720, 19350, 589, 420, 23976, 589, 11, 597, 2314, 257, 688, 50756, 50756, 544, 2049, 813, 5176, 13, 50856, 50856, 1743, 498, 291, 6367, 670, 257, 1329, 732, 1413, 11, 550, 309, 311, 14009, 813, 6367, 278, 670, 309, 1564, 13, 51223, 51223, 407, 286, 1116, 536, 309, 257, 688, 294, 257, 1326, 6828, 293, 300, 311, 445, 544, 466, 577, 291, 2464, 729, 51486, 51486, 6828, 13, 51536, 51536, 407, 309, 311, 1858, 281, 19719, 729, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10213859601952564, "compression_ratio": 1.5748792270531402, "no_caption_prob": 3.704994742292911e-05}, {"id": 531, "seek": 223296, "start": 2232.96, "end": 2241.44, "text": " On a more optimizer level, so a compiler or Elm optimize level two or any other tool to", "tokens": [50364, 1282, 257, 544, 5028, 6545, 1496, 11, 370, 257, 31958, 420, 2699, 76, 19719, 1496, 732, 420, 604, 661, 2290, 281, 50788, 50788, 652, 439, 729, 9688, 2962, 406, 4818, 11, 300, 576, 312, 257, 688, 544, 589, 13, 51094, 51094, 407, 291, 727, 2464, 309, 364, 5028, 6545, 300, 1619, 11, 731, 11, 510, 321, 366, 16799, 3289, 6367, 278, 670, 51424, 51424, 264, 1329, 732, 1413, 293, 321, 727, 22183, 729, 666, 472, 420, 2464, 1228, 257, 1339, 6367, 420, 746, 51766, 51766, 411, 300, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13210090346958325, "compression_ratio": 1.662037037037037, "no_caption_prob": 3.3735828765202314e-05}, {"id": 532, "seek": 223296, "start": 2241.44, "end": 2247.56, "text": " make all those manual changes not necessary, that would be a lot more work.", "tokens": [50364, 1282, 257, 544, 5028, 6545, 1496, 11, 370, 257, 31958, 420, 2699, 76, 19719, 1496, 732, 420, 604, 661, 2290, 281, 50788, 50788, 652, 439, 729, 9688, 2962, 406, 4818, 11, 300, 576, 312, 257, 688, 544, 589, 13, 51094, 51094, 407, 291, 727, 2464, 309, 364, 5028, 6545, 300, 1619, 11, 731, 11, 510, 321, 366, 16799, 3289, 6367, 278, 670, 51424, 51424, 264, 1329, 732, 1413, 293, 321, 727, 22183, 729, 666, 472, 420, 2464, 1228, 257, 1339, 6367, 420, 746, 51766, 51766, 411, 300, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13210090346958325, "compression_ratio": 1.662037037037037, "no_caption_prob": 3.3735828765202314e-05}, {"id": 533, "seek": 223296, "start": 2247.56, "end": 2254.16, "text": " So you could write it an optimizer that says, well, here we are unnecessarily looping over", "tokens": [50364, 1282, 257, 544, 5028, 6545, 1496, 11, 370, 257, 31958, 420, 2699, 76, 19719, 1496, 732, 420, 604, 661, 2290, 281, 50788, 50788, 652, 439, 729, 9688, 2962, 406, 4818, 11, 300, 576, 312, 257, 688, 544, 589, 13, 51094, 51094, 407, 291, 727, 2464, 309, 364, 5028, 6545, 300, 1619, 11, 731, 11, 510, 321, 366, 16799, 3289, 6367, 278, 670, 51424, 51424, 264, 1329, 732, 1413, 293, 321, 727, 22183, 729, 666, 472, 420, 2464, 1228, 257, 1339, 6367, 420, 746, 51766, 51766, 411, 300, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13210090346958325, "compression_ratio": 1.662037037037037, "no_caption_prob": 3.3735828765202314e-05}, {"id": 534, "seek": 223296, "start": 2254.16, "end": 2261.0, "text": " the list two times and we could merge those into one or write using a while loop or something", "tokens": [50364, 1282, 257, 544, 5028, 6545, 1496, 11, 370, 257, 31958, 420, 2699, 76, 19719, 1496, 732, 420, 604, 661, 2290, 281, 50788, 50788, 652, 439, 729, 9688, 2962, 406, 4818, 11, 300, 576, 312, 257, 688, 544, 589, 13, 51094, 51094, 407, 291, 727, 2464, 309, 364, 5028, 6545, 300, 1619, 11, 731, 11, 510, 321, 366, 16799, 3289, 6367, 278, 670, 51424, 51424, 264, 1329, 732, 1413, 293, 321, 727, 22183, 729, 666, 472, 420, 2464, 1228, 257, 1339, 6367, 420, 746, 51766, 51766, 411, 300, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13210090346958325, "compression_ratio": 1.662037037037037, "no_caption_prob": 3.3735828765202314e-05}, {"id": 535, "seek": 223296, "start": 2261.0, "end": 2262.0, "text": " like that.", "tokens": [50364, 1282, 257, 544, 5028, 6545, 1496, 11, 370, 257, 31958, 420, 2699, 76, 19719, 1496, 732, 420, 604, 661, 2290, 281, 50788, 50788, 652, 439, 729, 9688, 2962, 406, 4818, 11, 300, 576, 312, 257, 688, 544, 589, 13, 51094, 51094, 407, 291, 727, 2464, 309, 364, 5028, 6545, 300, 1619, 11, 731, 11, 510, 321, 366, 16799, 3289, 6367, 278, 670, 51424, 51424, 264, 1329, 732, 1413, 293, 321, 727, 22183, 729, 666, 472, 420, 2464, 1228, 257, 1339, 6367, 420, 746, 51766, 51766, 411, 300, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13210090346958325, "compression_ratio": 1.662037037037037, "no_caption_prob": 3.3735828765202314e-05}, {"id": 536, "seek": 226200, "start": 2262.0, "end": 2263.64, "text": " But that's a lot more work.", "tokens": [50364, 583, 300, 311, 257, 688, 544, 589, 13, 50446, 50446, 509, 643, 512, 3601, 300, 291, 815, 420, 815, 406, 362, 466, 437, 633, 2445, 775, 13, 50844, 50844, 407, 1338, 11, 309, 311, 544, 3997, 293, 456, 311, 611, 257, 24438, 2744, 300, 321, 643, 281, 1127, 466, 294, 51118, 51118, 2699, 76, 11, 597, 307, 257, 4923, 766, 13, 51262, 51262, 407, 490, 452, 935, 295, 1910, 295, 437, 286, 600, 1612, 11, 286, 478, 920, 11175, 721, 300, 841, 1238, 51574, 51574, 1858, 13, 51630, 51630, 407, 1338, 11, 286, 500, 380, 458, 437, 311, 8877, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.12586340537438026, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.7777461835066788e-05}, {"id": 537, "seek": 226200, "start": 2263.64, "end": 2271.6, "text": " You need some knowledge that you may or may not have about what every function does.", "tokens": [50364, 583, 300, 311, 257, 688, 544, 589, 13, 50446, 50446, 509, 643, 512, 3601, 300, 291, 815, 420, 815, 406, 362, 466, 437, 633, 2445, 775, 13, 50844, 50844, 407, 1338, 11, 309, 311, 544, 3997, 293, 456, 311, 611, 257, 24438, 2744, 300, 321, 643, 281, 1127, 466, 294, 51118, 51118, 2699, 76, 11, 597, 307, 257, 4923, 766, 13, 51262, 51262, 407, 490, 452, 935, 295, 1910, 295, 437, 286, 600, 1612, 11, 286, 478, 920, 11175, 721, 300, 841, 1238, 51574, 51574, 1858, 13, 51630, 51630, 407, 1338, 11, 286, 500, 380, 458, 437, 311, 8877, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.12586340537438026, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.7777461835066788e-05}, {"id": 538, "seek": 226200, "start": 2271.6, "end": 2277.08, "text": " So yeah, it's more complex and there's also a bundle size that we need to care about in", "tokens": [50364, 583, 300, 311, 257, 688, 544, 589, 13, 50446, 50446, 509, 643, 512, 3601, 300, 291, 815, 420, 815, 406, 362, 466, 437, 633, 2445, 775, 13, 50844, 50844, 407, 1338, 11, 309, 311, 544, 3997, 293, 456, 311, 611, 257, 24438, 2744, 300, 321, 643, 281, 1127, 466, 294, 51118, 51118, 2699, 76, 11, 597, 307, 257, 4923, 766, 13, 51262, 51262, 407, 490, 452, 935, 295, 1910, 295, 437, 286, 600, 1612, 11, 286, 478, 920, 11175, 721, 300, 841, 1238, 51574, 51574, 1858, 13, 51630, 51630, 407, 1338, 11, 286, 500, 380, 458, 437, 311, 8877, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.12586340537438026, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.7777461835066788e-05}, {"id": 539, "seek": 226200, "start": 2277.08, "end": 2279.96, "text": " Elm, which is a trade off.", "tokens": [50364, 583, 300, 311, 257, 688, 544, 589, 13, 50446, 50446, 509, 643, 512, 3601, 300, 291, 815, 420, 815, 406, 362, 466, 437, 633, 2445, 775, 13, 50844, 50844, 407, 1338, 11, 309, 311, 544, 3997, 293, 456, 311, 611, 257, 24438, 2744, 300, 321, 643, 281, 1127, 466, 294, 51118, 51118, 2699, 76, 11, 597, 307, 257, 4923, 766, 13, 51262, 51262, 407, 490, 452, 935, 295, 1910, 295, 437, 286, 600, 1612, 11, 286, 478, 920, 11175, 721, 300, 841, 1238, 51574, 51574, 1858, 13, 51630, 51630, 407, 1338, 11, 286, 500, 380, 458, 437, 311, 8877, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.12586340537438026, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.7777461835066788e-05}, {"id": 540, "seek": 226200, "start": 2279.96, "end": 2286.2, "text": " So from my point of view of what I've seen, I'm still touching things that feel pretty", "tokens": [50364, 583, 300, 311, 257, 688, 544, 589, 13, 50446, 50446, 509, 643, 512, 3601, 300, 291, 815, 420, 815, 406, 362, 466, 437, 633, 2445, 775, 13, 50844, 50844, 407, 1338, 11, 309, 311, 544, 3997, 293, 456, 311, 611, 257, 24438, 2744, 300, 321, 643, 281, 1127, 466, 294, 51118, 51118, 2699, 76, 11, 597, 307, 257, 4923, 766, 13, 51262, 51262, 407, 490, 452, 935, 295, 1910, 295, 437, 286, 600, 1612, 11, 286, 478, 920, 11175, 721, 300, 841, 1238, 51574, 51574, 1858, 13, 51630, 51630, 407, 1338, 11, 286, 500, 380, 458, 437, 311, 8877, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.12586340537438026, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.7777461835066788e-05}, {"id": 541, "seek": 226200, "start": 2286.2, "end": 2287.32, "text": " easy.", "tokens": [50364, 583, 300, 311, 257, 688, 544, 589, 13, 50446, 50446, 509, 643, 512, 3601, 300, 291, 815, 420, 815, 406, 362, 466, 437, 633, 2445, 775, 13, 50844, 50844, 407, 1338, 11, 309, 311, 544, 3997, 293, 456, 311, 611, 257, 24438, 2744, 300, 321, 643, 281, 1127, 466, 294, 51118, 51118, 2699, 76, 11, 597, 307, 257, 4923, 766, 13, 51262, 51262, 407, 490, 452, 935, 295, 1910, 295, 437, 286, 600, 1612, 11, 286, 478, 920, 11175, 721, 300, 841, 1238, 51574, 51574, 1858, 13, 51630, 51630, 407, 1338, 11, 286, 500, 380, 458, 437, 311, 8877, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.12586340537438026, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.7777461835066788e-05}, {"id": 542, "seek": 226200, "start": 2287.32, "end": 2290.52, "text": " So yeah, I don't know what's remaining.", "tokens": [50364, 583, 300, 311, 257, 688, 544, 589, 13, 50446, 50446, 509, 643, 512, 3601, 300, 291, 815, 420, 815, 406, 362, 466, 437, 633, 2445, 775, 13, 50844, 50844, 407, 1338, 11, 309, 311, 544, 3997, 293, 456, 311, 611, 257, 24438, 2744, 300, 321, 643, 281, 1127, 466, 294, 51118, 51118, 2699, 76, 11, 597, 307, 257, 4923, 766, 13, 51262, 51262, 407, 490, 452, 935, 295, 1910, 295, 437, 286, 600, 1612, 11, 286, 478, 920, 11175, 721, 300, 841, 1238, 51574, 51574, 1858, 13, 51630, 51630, 407, 1338, 11, 286, 500, 380, 458, 437, 311, 8877, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.12586340537438026, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.7777461835066788e-05}, {"id": 543, "seek": 229052, "start": 2290.52, "end": 2298.48, "text": " But I'm starting to see other areas of explorations and then the scientific papers become a bit", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 544, "seek": 229052, "start": 2298.48, "end": 2299.48, "text": " complex.", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 545, "seek": 229052, "start": 2299.48, "end": 2300.7599999999998, "text": " Let's put it that way.", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 546, "seek": 229052, "start": 2300.7599999999998, "end": 2301.7599999999998, "text": " Yeah.", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 547, "seek": 229052, "start": 2301.7599999999998, "end": 2304.6, "text": " That's when the postdocs start doing the optimizations.", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 548, "seek": 229052, "start": 2304.6, "end": 2305.6, "text": " Yeah.", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 549, "seek": 229052, "start": 2305.6, "end": 2311.84, "text": " And also since we're using a pure function language, I don't know if it's the most researched", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 550, "seek": 229052, "start": 2311.84, "end": 2312.84, "text": " thing.", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 551, "seek": 229052, "start": 2312.84, "end": 2319.84, "text": " I'm sure a lot more people have researched how to improve the performance of C code than", "tokens": [50364, 583, 286, 478, 2891, 281, 536, 661, 3179, 295, 24765, 763, 293, 550, 264, 8134, 10577, 1813, 257, 857, 50762, 50762, 3997, 13, 50812, 50812, 961, 311, 829, 309, 300, 636, 13, 50876, 50876, 865, 13, 50926, 50926, 663, 311, 562, 264, 2183, 39966, 82, 722, 884, 264, 5028, 14455, 13, 51068, 51068, 865, 13, 51118, 51118, 400, 611, 1670, 321, 434, 1228, 257, 6075, 2445, 2856, 11, 286, 500, 380, 458, 498, 309, 311, 264, 881, 37098, 51430, 51430, 551, 13, 51480, 51480, 286, 478, 988, 257, 688, 544, 561, 362, 37098, 577, 281, 3470, 264, 3389, 295, 383, 3089, 813, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1707380402762935, "compression_ratio": 1.5778688524590163, "no_caption_prob": 1.321161471423693e-05}, {"id": 552, "seek": 231984, "start": 2319.84, "end": 2324.52, "text": " Haskell code or Elm code for that matter.", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 553, "seek": 231984, "start": 2324.52, "end": 2325.52, "text": " So yeah.", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 554, "seek": 231984, "start": 2325.52, "end": 2328.08, "text": " I think there are two very interesting...", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 555, "seek": 231984, "start": 2328.08, "end": 2335.6800000000003, "text": " I think I'll go as far as to say that we have a lot of knowledge and a lot of ideas about", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 556, "seek": 231984, "start": 2335.6800000000003, "end": 2340.48, "text": " how we can make Elm code compile faster.", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 557, "seek": 231984, "start": 2340.48, "end": 2343.36, "text": " And there are certainly...", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 558, "seek": 231984, "start": 2343.36, "end": 2345.48, "text": " Compile to faster output.", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 559, "seek": 231984, "start": 2345.48, "end": 2346.48, "text": " Yes.", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 560, "seek": 231984, "start": 2346.48, "end": 2347.48, "text": " Right.", "tokens": [50364, 8646, 43723, 3089, 420, 2699, 76, 3089, 337, 300, 1871, 13, 50598, 50598, 407, 1338, 13, 50648, 50648, 286, 519, 456, 366, 732, 588, 1880, 485, 50776, 50776, 286, 519, 286, 603, 352, 382, 1400, 382, 281, 584, 300, 321, 362, 257, 688, 295, 3601, 293, 257, 688, 295, 3487, 466, 51156, 51156, 577, 321, 393, 652, 2699, 76, 3089, 31413, 4663, 13, 51396, 51396, 400, 456, 366, 3297, 485, 51540, 51540, 6620, 794, 281, 4663, 5598, 13, 51646, 51646, 1079, 13, 51696, 51696, 1779, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.20032884809705948, "compression_ratio": 1.5737704918032787, "no_caption_prob": 2.014476922340691e-05}, {"id": 561, "seek": 234748, "start": 2347.48, "end": 2350.08, "text": " Because it compiles pretty darn fast.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 562, "seek": 234748, "start": 2350.08, "end": 2353.56, "text": " I mean, any more improvements are welcome.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 563, "seek": 234748, "start": 2353.56, "end": 2354.56, "text": " Yeah.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 564, "seek": 234748, "start": 2354.56, "end": 2355.56, "text": " Thank you for that.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 565, "seek": 234748, "start": 2355.56, "end": 2356.56, "text": " Yeah.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 566, "seek": 234748, "start": 2356.56, "end": 2363.36, "text": " So I think there are several people who knows a lot of easy wins, I guess we can say.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 567, "seek": 234748, "start": 2363.36, "end": 2368.96, "text": " Elm optimized level two does this thing where it's able to compile a lot of stuff into direct", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 568, "seek": 234748, "start": 2368.96, "end": 2372.92, "text": " function calls instead of going through carrying helpers.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 569, "seek": 234748, "start": 2372.92, "end": 2374.3, "text": " That happens today.", "tokens": [50364, 1436, 309, 715, 4680, 1238, 29063, 2370, 13, 50494, 50494, 286, 914, 11, 604, 544, 13797, 366, 2928, 13, 50668, 50668, 865, 13, 50718, 50718, 1044, 291, 337, 300, 13, 50768, 50768, 865, 13, 50818, 50818, 407, 286, 519, 456, 366, 2940, 561, 567, 3255, 257, 688, 295, 1858, 10641, 11, 286, 2041, 321, 393, 584, 13, 51158, 51158, 2699, 76, 26941, 1496, 732, 775, 341, 551, 689, 309, 311, 1075, 281, 31413, 257, 688, 295, 1507, 666, 2047, 51438, 51438, 2445, 5498, 2602, 295, 516, 807, 9792, 854, 433, 13, 51636, 51636, 663, 2314, 965, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.18560046960811805, "compression_ratio": 1.5352697095435686, "no_caption_prob": 1.0952660886687227e-05}, {"id": 570, "seek": 237430, "start": 2374.3, "end": 2380.52, "text": " And from the benchmarks I've seen, that can easily increase performance by up to 20% in", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 571, "seek": 237430, "start": 2380.52, "end": 2381.52, "text": " some cases.", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 572, "seek": 237430, "start": 2381.52, "end": 2384.44, "text": " Of the overall program.", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 573, "seek": 237430, "start": 2384.44, "end": 2385.44, "text": " Yeah.", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 574, "seek": 237430, "start": 2385.44, "end": 2390.84, "text": " And then there are things that I've written about in the series of blog posts that I wrote", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 575, "seek": 237430, "start": 2390.84, "end": 2398.48, "text": " before Christmas where updating a record can be made up to eight times faster in some cases.", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 576, "seek": 237430, "start": 2398.48, "end": 2399.48, "text": " Yeah.", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 577, "seek": 237430, "start": 2399.48, "end": 2400.48, "text": " Which is huge.", "tokens": [50364, 400, 490, 264, 43751, 286, 600, 1612, 11, 300, 393, 3612, 3488, 3389, 538, 493, 281, 945, 4, 294, 50675, 50675, 512, 3331, 13, 50725, 50725, 2720, 264, 4787, 1461, 13, 50871, 50871, 865, 13, 50921, 50921, 400, 550, 456, 366, 721, 300, 286, 600, 3720, 466, 294, 264, 2638, 295, 6968, 12300, 300, 286, 4114, 51191, 51191, 949, 5272, 689, 25113, 257, 2136, 393, 312, 1027, 493, 281, 3180, 1413, 4663, 294, 512, 3331, 13, 51573, 51573, 865, 13, 51623, 51623, 3013, 307, 2603, 13, 51673, 51673], "temperature": 0.0, "avg_logprob": -0.17504644393920898, "compression_ratio": 1.5391705069124424, "no_caption_prob": 1.2028863238811027e-05}, {"id": 578, "seek": 240048, "start": 2400.48, "end": 2405.08, "text": " Especially for applications that are continually looping over and up.", "tokens": [50364, 8545, 337, 5821, 300, 366, 22277, 6367, 278, 670, 293, 493, 13, 50594, 50594, 286, 914, 11, 411, 2813, 11, 337, 1365, 11, 498, 291, 434, 322, 633, 3920, 25113, 1216, 1785, 293, 7724, 13, 50902, 50902, 865, 13, 50952, 50952, 865, 13, 51002, 51002, 407, 294, 300, 636, 11, 321, 366, 29699, 264, 3753, 11, 286, 519, 11, 294, 437, 321, 393, 909, 13, 51252, 51252, 492, 458, 300, 456, 366, 257, 688, 295, 2813, 300, 393, 312, 3612, 3869, 281, 652, 2699, 76, 3089, 1190, 4663, 13, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.170271606855495, "compression_ratio": 1.5454545454545454, "no_caption_prob": 2.3185844838735647e-05}, {"id": 579, "seek": 240048, "start": 2405.08, "end": 2411.2400000000002, "text": " I mean, like games, for example, if you're on every frame updating game state and records.", "tokens": [50364, 8545, 337, 5821, 300, 366, 22277, 6367, 278, 670, 293, 493, 13, 50594, 50594, 286, 914, 11, 411, 2813, 11, 337, 1365, 11, 498, 291, 434, 322, 633, 3920, 25113, 1216, 1785, 293, 7724, 13, 50902, 50902, 865, 13, 50952, 50952, 865, 13, 51002, 51002, 407, 294, 300, 636, 11, 321, 366, 29699, 264, 3753, 11, 286, 519, 11, 294, 437, 321, 393, 909, 13, 51252, 51252, 492, 458, 300, 456, 366, 257, 688, 295, 2813, 300, 393, 312, 3612, 3869, 281, 652, 2699, 76, 3089, 1190, 4663, 13, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.170271606855495, "compression_ratio": 1.5454545454545454, "no_caption_prob": 2.3185844838735647e-05}, {"id": 580, "seek": 240048, "start": 2411.2400000000002, "end": 2412.2400000000002, "text": " Yeah.", "tokens": [50364, 8545, 337, 5821, 300, 366, 22277, 6367, 278, 670, 293, 493, 13, 50594, 50594, 286, 914, 11, 411, 2813, 11, 337, 1365, 11, 498, 291, 434, 322, 633, 3920, 25113, 1216, 1785, 293, 7724, 13, 50902, 50902, 865, 13, 50952, 50952, 865, 13, 51002, 51002, 407, 294, 300, 636, 11, 321, 366, 29699, 264, 3753, 11, 286, 519, 11, 294, 437, 321, 393, 909, 13, 51252, 51252, 492, 458, 300, 456, 366, 257, 688, 295, 2813, 300, 393, 312, 3612, 3869, 281, 652, 2699, 76, 3089, 1190, 4663, 13, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.170271606855495, "compression_ratio": 1.5454545454545454, "no_caption_prob": 2.3185844838735647e-05}, {"id": 581, "seek": 240048, "start": 2412.2400000000002, "end": 2413.2400000000002, "text": " Yeah.", "tokens": [50364, 8545, 337, 5821, 300, 366, 22277, 6367, 278, 670, 293, 493, 13, 50594, 50594, 286, 914, 11, 411, 2813, 11, 337, 1365, 11, 498, 291, 434, 322, 633, 3920, 25113, 1216, 1785, 293, 7724, 13, 50902, 50902, 865, 13, 50952, 50952, 865, 13, 51002, 51002, 407, 294, 300, 636, 11, 321, 366, 29699, 264, 3753, 11, 286, 519, 11, 294, 437, 321, 393, 909, 13, 51252, 51252, 492, 458, 300, 456, 366, 257, 688, 295, 2813, 300, 393, 312, 3612, 3869, 281, 652, 2699, 76, 3089, 1190, 4663, 13, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.170271606855495, "compression_ratio": 1.5454545454545454, "no_caption_prob": 2.3185844838735647e-05}, {"id": 582, "seek": 240048, "start": 2413.2400000000002, "end": 2418.2400000000002, "text": " So in that way, we are scratching the surface, I think, in what we can add.", "tokens": [50364, 8545, 337, 5821, 300, 366, 22277, 6367, 278, 670, 293, 493, 13, 50594, 50594, 286, 914, 11, 411, 2813, 11, 337, 1365, 11, 498, 291, 434, 322, 633, 3920, 25113, 1216, 1785, 293, 7724, 13, 50902, 50902, 865, 13, 50952, 50952, 865, 13, 51002, 51002, 407, 294, 300, 636, 11, 321, 366, 29699, 264, 3753, 11, 286, 519, 11, 294, 437, 321, 393, 909, 13, 51252, 51252, 492, 458, 300, 456, 366, 257, 688, 295, 2813, 300, 393, 312, 3612, 3869, 281, 652, 2699, 76, 3089, 1190, 4663, 13, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.170271606855495, "compression_ratio": 1.5454545454545454, "no_caption_prob": 2.3185844838735647e-05}, {"id": 583, "seek": 240048, "start": 2418.2400000000002, "end": 2425.0, "text": " We know that there are a lot of games that can be easily added to make Elm code run faster.", "tokens": [50364, 8545, 337, 5821, 300, 366, 22277, 6367, 278, 670, 293, 493, 13, 50594, 50594, 286, 914, 11, 411, 2813, 11, 337, 1365, 11, 498, 291, 434, 322, 633, 3920, 25113, 1216, 1785, 293, 7724, 13, 50902, 50902, 865, 13, 50952, 50952, 865, 13, 51002, 51002, 407, 294, 300, 636, 11, 321, 366, 29699, 264, 3753, 11, 286, 519, 11, 294, 437, 321, 393, 909, 13, 51252, 51252, 492, 458, 300, 456, 366, 257, 688, 295, 2813, 300, 393, 312, 3612, 3869, 281, 652, 2699, 76, 3089, 1190, 4663, 13, 51590, 51590], "temperature": 0.0, "avg_logprob": -0.170271606855495, "compression_ratio": 1.5454545454545454, "no_caption_prob": 2.3185844838735647e-05}, {"id": 584, "seek": 242500, "start": 2425.0, "end": 2430.8, "text": " I know of several ways that the way that Elm is compiled in JavaScript could be changed", "tokens": [50364, 286, 458, 295, 2940, 2098, 300, 264, 636, 300, 2699, 76, 307, 36548, 294, 15778, 727, 312, 3105, 50654, 50654, 294, 1668, 281, 3488, 264, 34474, 3389, 295, 2699, 76, 3089, 13, 50824, 50824, 2908, 11, 257, 688, 295, 729, 5028, 14455, 576, 3488, 264, 15778, 24438, 2744, 13, 51192, 51192, 4803, 538, 257, 688, 13, 51352, 51352, 407, 456, 366, 257, 688, 13, 51434, 51434, 407, 472, 295, 264, 721, 300, 652, 485, 51492, 51492, 821, 366, 732, 721, 300, 733, 295, 652, 3389, 589, 588, 2252, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.14742832799111644, "compression_ratio": 1.7222222222222223, "no_caption_prob": 4.356658337201225e-06}, {"id": 585, "seek": 242500, "start": 2430.8, "end": 2434.2, "text": " in order to increase the runtime performance of Elm code.", "tokens": [50364, 286, 458, 295, 2940, 2098, 300, 264, 636, 300, 2699, 76, 307, 36548, 294, 15778, 727, 312, 3105, 50654, 50654, 294, 1668, 281, 3488, 264, 34474, 3389, 295, 2699, 76, 3089, 13, 50824, 50824, 2908, 11, 257, 688, 295, 729, 5028, 14455, 576, 3488, 264, 15778, 24438, 2744, 13, 51192, 51192, 4803, 538, 257, 688, 13, 51352, 51352, 407, 456, 366, 257, 688, 13, 51434, 51434, 407, 472, 295, 264, 721, 300, 652, 485, 51492, 51492, 821, 366, 732, 721, 300, 733, 295, 652, 3389, 589, 588, 2252, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.14742832799111644, "compression_ratio": 1.7222222222222223, "no_caption_prob": 4.356658337201225e-06}, {"id": 586, "seek": 242500, "start": 2434.2, "end": 2441.56, "text": " However, a lot of those optimizations would increase the JavaScript bundle size.", "tokens": [50364, 286, 458, 295, 2940, 2098, 300, 264, 636, 300, 2699, 76, 307, 36548, 294, 15778, 727, 312, 3105, 50654, 50654, 294, 1668, 281, 3488, 264, 34474, 3389, 295, 2699, 76, 3089, 13, 50824, 50824, 2908, 11, 257, 688, 295, 729, 5028, 14455, 576, 3488, 264, 15778, 24438, 2744, 13, 51192, 51192, 4803, 538, 257, 688, 13, 51352, 51352, 407, 456, 366, 257, 688, 13, 51434, 51434, 407, 472, 295, 264, 721, 300, 652, 485, 51492, 51492, 821, 366, 732, 721, 300, 733, 295, 652, 3389, 589, 588, 2252, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.14742832799111644, "compression_ratio": 1.7222222222222223, "no_caption_prob": 4.356658337201225e-06}, {"id": 587, "seek": 242500, "start": 2441.56, "end": 2444.76, "text": " Sometimes by a lot.", "tokens": [50364, 286, 458, 295, 2940, 2098, 300, 264, 636, 300, 2699, 76, 307, 36548, 294, 15778, 727, 312, 3105, 50654, 50654, 294, 1668, 281, 3488, 264, 34474, 3389, 295, 2699, 76, 3089, 13, 50824, 50824, 2908, 11, 257, 688, 295, 729, 5028, 14455, 576, 3488, 264, 15778, 24438, 2744, 13, 51192, 51192, 4803, 538, 257, 688, 13, 51352, 51352, 407, 456, 366, 257, 688, 13, 51434, 51434, 407, 472, 295, 264, 721, 300, 652, 485, 51492, 51492, 821, 366, 732, 721, 300, 733, 295, 652, 3389, 589, 588, 2252, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.14742832799111644, "compression_ratio": 1.7222222222222223, "no_caption_prob": 4.356658337201225e-06}, {"id": 588, "seek": 242500, "start": 2444.76, "end": 2446.4, "text": " So there are a lot.", "tokens": [50364, 286, 458, 295, 2940, 2098, 300, 264, 636, 300, 2699, 76, 307, 36548, 294, 15778, 727, 312, 3105, 50654, 50654, 294, 1668, 281, 3488, 264, 34474, 3389, 295, 2699, 76, 3089, 13, 50824, 50824, 2908, 11, 257, 688, 295, 729, 5028, 14455, 576, 3488, 264, 15778, 24438, 2744, 13, 51192, 51192, 4803, 538, 257, 688, 13, 51352, 51352, 407, 456, 366, 257, 688, 13, 51434, 51434, 407, 472, 295, 264, 721, 300, 652, 485, 51492, 51492, 821, 366, 732, 721, 300, 733, 295, 652, 3389, 589, 588, 2252, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.14742832799111644, "compression_ratio": 1.7222222222222223, "no_caption_prob": 4.356658337201225e-06}, {"id": 589, "seek": 242500, "start": 2446.4, "end": 2447.56, "text": " So one of the things that make...", "tokens": [50364, 286, 458, 295, 2940, 2098, 300, 264, 636, 300, 2699, 76, 307, 36548, 294, 15778, 727, 312, 3105, 50654, 50654, 294, 1668, 281, 3488, 264, 34474, 3389, 295, 2699, 76, 3089, 13, 50824, 50824, 2908, 11, 257, 688, 295, 729, 5028, 14455, 576, 3488, 264, 15778, 24438, 2744, 13, 51192, 51192, 4803, 538, 257, 688, 13, 51352, 51352, 407, 456, 366, 257, 688, 13, 51434, 51434, 407, 472, 295, 264, 721, 300, 652, 485, 51492, 51492, 821, 366, 732, 721, 300, 733, 295, 652, 3389, 589, 588, 2252, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.14742832799111644, "compression_ratio": 1.7222222222222223, "no_caption_prob": 4.356658337201225e-06}, {"id": 590, "seek": 242500, "start": 2447.56, "end": 2451.16, "text": " There are two things that kind of make performance work very difficult.", "tokens": [50364, 286, 458, 295, 2940, 2098, 300, 264, 636, 300, 2699, 76, 307, 36548, 294, 15778, 727, 312, 3105, 50654, 50654, 294, 1668, 281, 3488, 264, 34474, 3389, 295, 2699, 76, 3089, 13, 50824, 50824, 2908, 11, 257, 688, 295, 729, 5028, 14455, 576, 3488, 264, 15778, 24438, 2744, 13, 51192, 51192, 4803, 538, 257, 688, 13, 51352, 51352, 407, 456, 366, 257, 688, 13, 51434, 51434, 407, 472, 295, 264, 721, 300, 652, 485, 51492, 51492, 821, 366, 732, 721, 300, 733, 295, 652, 3389, 589, 588, 2252, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.14742832799111644, "compression_ratio": 1.7222222222222223, "no_caption_prob": 4.356658337201225e-06}, {"id": 591, "seek": 245116, "start": 2451.16, "end": 2458.3199999999997, "text": " One of them is how much of a code size increase are we willing to accept in order to get optimal", "tokens": [50364, 1485, 295, 552, 307, 577, 709, 295, 257, 3089, 2744, 3488, 366, 321, 4950, 281, 3241, 294, 1668, 281, 483, 16252, 50722, 50722, 3389, 30, 50788, 50788, 400, 300, 307, 406, 516, 281, 312, 364, 1858, 551, 281, 1867, 570, 300, 311, 1009, 516, 281, 1319, 51000, 51000, 5413, 322, 437, 291, 360, 13, 51074, 51074, 1743, 498, 291, 434, 3579, 257, 2167, 3028, 3861, 11, 550, 382, 938, 382, 264, 4342, 264, 4195, 3467, 51520, 51520, 322, 702, 10186, 20116, 294, 257, 25150, 9060, 11, 3389, 1943, 380, 257, 3136, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.11472504337628682, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.093508661957458e-06}, {"id": 592, "seek": 245116, "start": 2458.3199999999997, "end": 2459.64, "text": " performance?", "tokens": [50364, 1485, 295, 552, 307, 577, 709, 295, 257, 3089, 2744, 3488, 366, 321, 4950, 281, 3241, 294, 1668, 281, 483, 16252, 50722, 50722, 3389, 30, 50788, 50788, 400, 300, 307, 406, 516, 281, 312, 364, 1858, 551, 281, 1867, 570, 300, 311, 1009, 516, 281, 1319, 51000, 51000, 5413, 322, 437, 291, 360, 13, 51074, 51074, 1743, 498, 291, 434, 3579, 257, 2167, 3028, 3861, 11, 550, 382, 938, 382, 264, 4342, 264, 4195, 3467, 51520, 51520, 322, 702, 10186, 20116, 294, 257, 25150, 9060, 11, 3389, 1943, 380, 257, 3136, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.11472504337628682, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.093508661957458e-06}, {"id": 593, "seek": 245116, "start": 2459.64, "end": 2463.8799999999997, "text": " And that is not going to be an easy thing to answer because that's always going to change", "tokens": [50364, 1485, 295, 552, 307, 577, 709, 295, 257, 3089, 2744, 3488, 366, 321, 4950, 281, 3241, 294, 1668, 281, 483, 16252, 50722, 50722, 3389, 30, 50788, 50788, 400, 300, 307, 406, 516, 281, 312, 364, 1858, 551, 281, 1867, 570, 300, 311, 1009, 516, 281, 1319, 51000, 51000, 5413, 322, 437, 291, 360, 13, 51074, 51074, 1743, 498, 291, 434, 3579, 257, 2167, 3028, 3861, 11, 550, 382, 938, 382, 264, 4342, 264, 4195, 3467, 51520, 51520, 322, 702, 10186, 20116, 294, 257, 25150, 9060, 11, 3389, 1943, 380, 257, 3136, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.11472504337628682, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.093508661957458e-06}, {"id": 594, "seek": 245116, "start": 2463.8799999999997, "end": 2465.3599999999997, "text": " depending on what you do.", "tokens": [50364, 1485, 295, 552, 307, 577, 709, 295, 257, 3089, 2744, 3488, 366, 321, 4950, 281, 3241, 294, 1668, 281, 483, 16252, 50722, 50722, 3389, 30, 50788, 50788, 400, 300, 307, 406, 516, 281, 312, 364, 1858, 551, 281, 1867, 570, 300, 311, 1009, 516, 281, 1319, 51000, 51000, 5413, 322, 437, 291, 360, 13, 51074, 51074, 1743, 498, 291, 434, 3579, 257, 2167, 3028, 3861, 11, 550, 382, 938, 382, 264, 4342, 264, 4195, 3467, 51520, 51520, 322, 702, 10186, 20116, 294, 257, 25150, 9060, 11, 3389, 1943, 380, 257, 3136, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.11472504337628682, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.093508661957458e-06}, {"id": 595, "seek": 245116, "start": 2465.3599999999997, "end": 2474.2799999999997, "text": " Like if you're writing a single page application, then as long as the characters the user types", "tokens": [50364, 1485, 295, 552, 307, 577, 709, 295, 257, 3089, 2744, 3488, 366, 321, 4950, 281, 3241, 294, 1668, 281, 483, 16252, 50722, 50722, 3389, 30, 50788, 50788, 400, 300, 307, 406, 516, 281, 312, 364, 1858, 551, 281, 1867, 570, 300, 311, 1009, 516, 281, 1319, 51000, 51000, 5413, 322, 437, 291, 360, 13, 51074, 51074, 1743, 498, 291, 434, 3579, 257, 2167, 3028, 3861, 11, 550, 382, 938, 382, 264, 4342, 264, 4195, 3467, 51520, 51520, 322, 702, 10186, 20116, 294, 257, 25150, 9060, 11, 3389, 1943, 380, 257, 3136, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.11472504337628682, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.093508661957458e-06}, {"id": 596, "seek": 245116, "start": 2474.2799999999997, "end": 2478.72, "text": " on his keyboard arrives in a timely manner, performance isn't a concern.", "tokens": [50364, 1485, 295, 552, 307, 577, 709, 295, 257, 3089, 2744, 3488, 366, 321, 4950, 281, 3241, 294, 1668, 281, 483, 16252, 50722, 50722, 3389, 30, 50788, 50788, 400, 300, 307, 406, 516, 281, 312, 364, 1858, 551, 281, 1867, 570, 300, 311, 1009, 516, 281, 1319, 51000, 51000, 5413, 322, 437, 291, 360, 13, 51074, 51074, 1743, 498, 291, 434, 3579, 257, 2167, 3028, 3861, 11, 550, 382, 938, 382, 264, 4342, 264, 4195, 3467, 51520, 51520, 322, 702, 10186, 20116, 294, 257, 25150, 9060, 11, 3389, 1943, 380, 257, 3136, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.11472504337628682, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.093508661957458e-06}, {"id": 597, "seek": 247872, "start": 2478.72, "end": 2482.48, "text": " And so asset size is probably the most important thing.", "tokens": [50364, 400, 370, 11999, 2744, 307, 1391, 264, 881, 1021, 551, 13, 50552, 50552, 583, 337, 561, 3579, 2813, 293, 10649, 12982, 293, 11, 291, 458, 11, 9573, 19440, 1507, 11, 436, 576, 1391, 50930, 50930, 3241, 1238, 955, 3089, 2744, 3488, 294, 1668, 281, 483, 881, 16252, 3389, 13, 51243, 51243, 400, 370, 300, 307, 257, 1168, 597, 307, 588, 2252, 281, 2028, 365, 562, 884, 3389, 5028, 14455, 13, 51554, 51554, 1779, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.12502618936391977, "compression_ratio": 1.5339366515837105, "no_caption_prob": 3.7265483570081415e-06}, {"id": 598, "seek": 247872, "start": 2482.48, "end": 2490.04, "text": " But for people writing games and physics engines and, you know, WebGL stuff, they would probably", "tokens": [50364, 400, 370, 11999, 2744, 307, 1391, 264, 881, 1021, 551, 13, 50552, 50552, 583, 337, 561, 3579, 2813, 293, 10649, 12982, 293, 11, 291, 458, 11, 9573, 19440, 1507, 11, 436, 576, 1391, 50930, 50930, 3241, 1238, 955, 3089, 2744, 3488, 294, 1668, 281, 483, 881, 16252, 3389, 13, 51243, 51243, 400, 370, 300, 307, 257, 1168, 597, 307, 588, 2252, 281, 2028, 365, 562, 884, 3389, 5028, 14455, 13, 51554, 51554, 1779, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.12502618936391977, "compression_ratio": 1.5339366515837105, "no_caption_prob": 3.7265483570081415e-06}, {"id": 599, "seek": 247872, "start": 2490.04, "end": 2496.2999999999997, "text": " accept pretty big code size increase in order to get most optimal performance.", "tokens": [50364, 400, 370, 11999, 2744, 307, 1391, 264, 881, 1021, 551, 13, 50552, 50552, 583, 337, 561, 3579, 2813, 293, 10649, 12982, 293, 11, 291, 458, 11, 9573, 19440, 1507, 11, 436, 576, 1391, 50930, 50930, 3241, 1238, 955, 3089, 2744, 3488, 294, 1668, 281, 483, 881, 16252, 3389, 13, 51243, 51243, 400, 370, 300, 307, 257, 1168, 597, 307, 588, 2252, 281, 2028, 365, 562, 884, 3389, 5028, 14455, 13, 51554, 51554, 1779, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.12502618936391977, "compression_ratio": 1.5339366515837105, "no_caption_prob": 3.7265483570081415e-06}, {"id": 600, "seek": 247872, "start": 2496.2999999999997, "end": 2502.52, "text": " And so that is a question which is very difficult to deal with when doing performance optimizations.", "tokens": [50364, 400, 370, 11999, 2744, 307, 1391, 264, 881, 1021, 551, 13, 50552, 50552, 583, 337, 561, 3579, 2813, 293, 10649, 12982, 293, 11, 291, 458, 11, 9573, 19440, 1507, 11, 436, 576, 1391, 50930, 50930, 3241, 1238, 955, 3089, 2744, 3488, 294, 1668, 281, 483, 881, 16252, 3389, 13, 51243, 51243, 400, 370, 300, 307, 257, 1168, 597, 307, 588, 2252, 281, 2028, 365, 562, 884, 3389, 5028, 14455, 13, 51554, 51554, 1779, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.12502618936391977, "compression_ratio": 1.5339366515837105, "no_caption_prob": 3.7265483570081415e-06}, {"id": 601, "seek": 247872, "start": 2502.52, "end": 2503.52, "text": " Right.", "tokens": [50364, 400, 370, 11999, 2744, 307, 1391, 264, 881, 1021, 551, 13, 50552, 50552, 583, 337, 561, 3579, 2813, 293, 10649, 12982, 293, 11, 291, 458, 11, 9573, 19440, 1507, 11, 436, 576, 1391, 50930, 50930, 3241, 1238, 955, 3089, 2744, 3488, 294, 1668, 281, 483, 881, 16252, 3389, 13, 51243, 51243, 400, 370, 300, 307, 257, 1168, 597, 307, 588, 2252, 281, 2028, 365, 562, 884, 3389, 5028, 14455, 13, 51554, 51554, 1779, 13, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.12502618936391977, "compression_ratio": 1.5339366515837105, "no_caption_prob": 3.7265483570081415e-06}, {"id": 602, "seek": 250352, "start": 2503.52, "end": 2510.84, "text": " And the same for tooling like Elm Review and Elm Pages both do pretty heavy lifting in", "tokens": [50364, 400, 264, 912, 337, 46593, 411, 2699, 76, 19954, 293, 2699, 76, 430, 1660, 1293, 360, 1238, 4676, 15798, 294, 50730, 50730, 257, 38640, 13, 25530, 2823, 294, 428, 5622, 1622, 420, 428, 1322, 1823, 13, 50976, 50976, 400, 498, 436, 393, 362, 955, 3389, 16823, 11, 2035, 11, 976, 309, 2625, 4, 4833, 24438, 2744, 13, 51316, 51316, 1171, 257, 12855, 40, 724, 11, 300, 311, 364, 1858, 1942, 13, 51468, 51468, 1171, 746, 300, 311, 2614, 294, 428, 11185, 11, 300, 311, 1391, 406, 264, 558, 4923, 766, 13, 51746, 51746, 7587, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14657569654060132, "compression_ratio": 1.4878048780487805, "no_caption_prob": 2.6272591640008613e-05}, {"id": 603, "seek": 250352, "start": 2510.84, "end": 2515.7599999999998, "text": " a Node.js environment in your command line or your build step.", "tokens": [50364, 400, 264, 912, 337, 46593, 411, 2699, 76, 19954, 293, 2699, 76, 430, 1660, 1293, 360, 1238, 4676, 15798, 294, 50730, 50730, 257, 38640, 13, 25530, 2823, 294, 428, 5622, 1622, 420, 428, 1322, 1823, 13, 50976, 50976, 400, 498, 436, 393, 362, 955, 3389, 16823, 11, 2035, 11, 976, 309, 2625, 4, 4833, 24438, 2744, 13, 51316, 51316, 1171, 257, 12855, 40, 724, 11, 300, 311, 364, 1858, 1942, 13, 51468, 51468, 1171, 746, 300, 311, 2614, 294, 428, 11185, 11, 300, 311, 1391, 406, 264, 558, 4923, 766, 13, 51746, 51746, 7587, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14657569654060132, "compression_ratio": 1.4878048780487805, "no_caption_prob": 2.6272591640008613e-05}, {"id": 604, "seek": 250352, "start": 2515.7599999999998, "end": 2522.56, "text": " And if they can have big performance gains, whatever, give it 50% larger bundle size.", "tokens": [50364, 400, 264, 912, 337, 46593, 411, 2699, 76, 19954, 293, 2699, 76, 430, 1660, 1293, 360, 1238, 4676, 15798, 294, 50730, 50730, 257, 38640, 13, 25530, 2823, 294, 428, 5622, 1622, 420, 428, 1322, 1823, 13, 50976, 50976, 400, 498, 436, 393, 362, 955, 3389, 16823, 11, 2035, 11, 976, 309, 2625, 4, 4833, 24438, 2744, 13, 51316, 51316, 1171, 257, 12855, 40, 724, 11, 300, 311, 364, 1858, 1942, 13, 51468, 51468, 1171, 746, 300, 311, 2614, 294, 428, 11185, 11, 300, 311, 1391, 406, 264, 558, 4923, 766, 13, 51746, 51746, 7587, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14657569654060132, "compression_ratio": 1.4878048780487805, "no_caption_prob": 2.6272591640008613e-05}, {"id": 605, "seek": 250352, "start": 2522.56, "end": 2525.6, "text": " For a CLI app, that's an easy win.", "tokens": [50364, 400, 264, 912, 337, 46593, 411, 2699, 76, 19954, 293, 2699, 76, 430, 1660, 1293, 360, 1238, 4676, 15798, 294, 50730, 50730, 257, 38640, 13, 25530, 2823, 294, 428, 5622, 1622, 420, 428, 1322, 1823, 13, 50976, 50976, 400, 498, 436, 393, 362, 955, 3389, 16823, 11, 2035, 11, 976, 309, 2625, 4, 4833, 24438, 2744, 13, 51316, 51316, 1171, 257, 12855, 40, 724, 11, 300, 311, 364, 1858, 1942, 13, 51468, 51468, 1171, 746, 300, 311, 2614, 294, 428, 11185, 11, 300, 311, 1391, 406, 264, 558, 4923, 766, 13, 51746, 51746, 7587, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14657569654060132, "compression_ratio": 1.4878048780487805, "no_caption_prob": 2.6272591640008613e-05}, {"id": 606, "seek": 250352, "start": 2525.6, "end": 2531.16, "text": " For something that's running in your browser, that's probably not the right trade off.", "tokens": [50364, 400, 264, 912, 337, 46593, 411, 2699, 76, 19954, 293, 2699, 76, 430, 1660, 1293, 360, 1238, 4676, 15798, 294, 50730, 50730, 257, 38640, 13, 25530, 2823, 294, 428, 5622, 1622, 420, 428, 1322, 1823, 13, 50976, 50976, 400, 498, 436, 393, 362, 955, 3389, 16823, 11, 2035, 11, 976, 309, 2625, 4, 4833, 24438, 2744, 13, 51316, 51316, 1171, 257, 12855, 40, 724, 11, 300, 311, 364, 1858, 1942, 13, 51468, 51468, 1171, 746, 300, 311, 2614, 294, 428, 11185, 11, 300, 311, 1391, 406, 264, 558, 4923, 766, 13, 51746, 51746, 7587, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14657569654060132, "compression_ratio": 1.4878048780487805, "no_caption_prob": 2.6272591640008613e-05}, {"id": 607, "seek": 250352, "start": 2531.16, "end": 2532.16, "text": " Exactly.", "tokens": [50364, 400, 264, 912, 337, 46593, 411, 2699, 76, 19954, 293, 2699, 76, 430, 1660, 1293, 360, 1238, 4676, 15798, 294, 50730, 50730, 257, 38640, 13, 25530, 2823, 294, 428, 5622, 1622, 420, 428, 1322, 1823, 13, 50976, 50976, 400, 498, 436, 393, 362, 955, 3389, 16823, 11, 2035, 11, 976, 309, 2625, 4, 4833, 24438, 2744, 13, 51316, 51316, 1171, 257, 12855, 40, 724, 11, 300, 311, 364, 1858, 1942, 13, 51468, 51468, 1171, 746, 300, 311, 2614, 294, 428, 11185, 11, 300, 311, 1391, 406, 264, 558, 4923, 766, 13, 51746, 51746, 7587, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14657569654060132, "compression_ratio": 1.4878048780487805, "no_caption_prob": 2.6272591640008613e-05}, {"id": 608, "seek": 253216, "start": 2532.16, "end": 2538.92, "text": " And then, of course, another thing is the guesswork involved by the JavaScript just", "tokens": [50364, 400, 550, 11, 295, 1164, 11, 1071, 551, 307, 264, 2041, 1902, 3288, 538, 264, 15778, 445, 50702, 50702, 294, 565, 31958, 13, 50752, 50752, 407, 456, 366, 1629, 721, 321, 727, 360, 11, 597, 11, 411, 294, 881, 8650, 11, 307, 264, 636, 281, 3488, 51012, 51012, 3389, 411, 2445, 294, 31079, 13, 51214, 51214, 663, 576, 909, 881, 3700, 576, 3488, 264, 3089, 2744, 295, 264, 5598, 13, 51518, 51518, 583, 264, 551, 307, 300, 264, 15778, 445, 294, 565, 31958, 1217, 575, 294, 31079, 15172, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13468975149175172, "compression_ratio": 1.7345132743362832, "no_caption_prob": 5.771724772785092e-06}, {"id": 609, "seek": 253216, "start": 2538.92, "end": 2539.92, "text": " in time compiler.", "tokens": [50364, 400, 550, 11, 295, 1164, 11, 1071, 551, 307, 264, 2041, 1902, 3288, 538, 264, 15778, 445, 50702, 50702, 294, 565, 31958, 13, 50752, 50752, 407, 456, 366, 1629, 721, 321, 727, 360, 11, 597, 11, 411, 294, 881, 8650, 11, 307, 264, 636, 281, 3488, 51012, 51012, 3389, 411, 2445, 294, 31079, 13, 51214, 51214, 663, 576, 909, 881, 3700, 576, 3488, 264, 3089, 2744, 295, 264, 5598, 13, 51518, 51518, 583, 264, 551, 307, 300, 264, 15778, 445, 294, 565, 31958, 1217, 575, 294, 31079, 15172, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13468975149175172, "compression_ratio": 1.7345132743362832, "no_caption_prob": 5.771724772785092e-06}, {"id": 610, "seek": 253216, "start": 2539.92, "end": 2545.12, "text": " So there are certain things we could do, which, like in most languages, is the way to increase", "tokens": [50364, 400, 550, 11, 295, 1164, 11, 1071, 551, 307, 264, 2041, 1902, 3288, 538, 264, 15778, 445, 50702, 50702, 294, 565, 31958, 13, 50752, 50752, 407, 456, 366, 1629, 721, 321, 727, 360, 11, 597, 11, 411, 294, 881, 8650, 11, 307, 264, 636, 281, 3488, 51012, 51012, 3389, 411, 2445, 294, 31079, 13, 51214, 51214, 663, 576, 909, 881, 3700, 576, 3488, 264, 3089, 2744, 295, 264, 5598, 13, 51518, 51518, 583, 264, 551, 307, 300, 264, 15778, 445, 294, 565, 31958, 1217, 575, 294, 31079, 15172, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13468975149175172, "compression_ratio": 1.7345132743362832, "no_caption_prob": 5.771724772785092e-06}, {"id": 611, "seek": 253216, "start": 2545.12, "end": 2549.16, "text": " performance like function inlining.", "tokens": [50364, 400, 550, 11, 295, 1164, 11, 1071, 551, 307, 264, 2041, 1902, 3288, 538, 264, 15778, 445, 50702, 50702, 294, 565, 31958, 13, 50752, 50752, 407, 456, 366, 1629, 721, 321, 727, 360, 11, 597, 11, 411, 294, 881, 8650, 11, 307, 264, 636, 281, 3488, 51012, 51012, 3389, 411, 2445, 294, 31079, 13, 51214, 51214, 663, 576, 909, 881, 3700, 576, 3488, 264, 3089, 2744, 295, 264, 5598, 13, 51518, 51518, 583, 264, 551, 307, 300, 264, 15778, 445, 294, 565, 31958, 1217, 575, 294, 31079, 15172, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13468975149175172, "compression_ratio": 1.7345132743362832, "no_caption_prob": 5.771724772785092e-06}, {"id": 612, "seek": 253216, "start": 2549.16, "end": 2555.24, "text": " That would add most likely would increase the code size of the output.", "tokens": [50364, 400, 550, 11, 295, 1164, 11, 1071, 551, 307, 264, 2041, 1902, 3288, 538, 264, 15778, 445, 50702, 50702, 294, 565, 31958, 13, 50752, 50752, 407, 456, 366, 1629, 721, 321, 727, 360, 11, 597, 11, 411, 294, 881, 8650, 11, 307, 264, 636, 281, 3488, 51012, 51012, 3389, 411, 2445, 294, 31079, 13, 51214, 51214, 663, 576, 909, 881, 3700, 576, 3488, 264, 3089, 2744, 295, 264, 5598, 13, 51518, 51518, 583, 264, 551, 307, 300, 264, 15778, 445, 294, 565, 31958, 1217, 575, 294, 31079, 15172, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13468975149175172, "compression_ratio": 1.7345132743362832, "no_caption_prob": 5.771724772785092e-06}, {"id": 613, "seek": 253216, "start": 2555.24, "end": 2561.56, "text": " But the thing is that the JavaScript just in time compiler already has inlining enabled.", "tokens": [50364, 400, 550, 11, 295, 1164, 11, 1071, 551, 307, 264, 2041, 1902, 3288, 538, 264, 15778, 445, 50702, 50702, 294, 565, 31958, 13, 50752, 50752, 407, 456, 366, 1629, 721, 321, 727, 360, 11, 597, 11, 411, 294, 881, 8650, 11, 307, 264, 636, 281, 3488, 51012, 51012, 3389, 411, 2445, 294, 31079, 13, 51214, 51214, 663, 576, 909, 881, 3700, 576, 3488, 264, 3089, 2744, 295, 264, 5598, 13, 51518, 51518, 583, 264, 551, 307, 300, 264, 15778, 445, 294, 565, 31958, 1217, 575, 294, 31079, 15172, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13468975149175172, "compression_ratio": 1.7345132743362832, "no_caption_prob": 5.771724772785092e-06}, {"id": 614, "seek": 256156, "start": 2561.56, "end": 2568.4, "text": " So we could go through the hassle of creating a function inlining pass, but it wouldn't", "tokens": [50364, 407, 321, 727, 352, 807, 264, 39526, 295, 4084, 257, 2445, 294, 31079, 1320, 11, 457, 309, 2759, 380, 50706, 50706, 4725, 976, 505, 1101, 3389, 570, 264, 15778, 2848, 1062, 1217, 360, 729, 50967, 50967, 1900, 721, 13, 51052, 51052, 400, 370, 300, 311, 472, 1859, 689, 9573, 10884, 19160, 576, 312, 364, 3571, 551, 281, 589, 365, 13, 51372, 51372, 467, 2759, 380, 312, 3571, 570, 291, 1116, 362, 281, 4445, 257, 688, 295, 1507, 1803, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.1022397466452725, "compression_ratio": 1.5238095238095237, "no_caption_prob": 4.356813406047877e-06}, {"id": 615, "seek": 256156, "start": 2568.4, "end": 2573.62, "text": " necessarily give us better performance because the JavaScript engine might already do those", "tokens": [50364, 407, 321, 727, 352, 807, 264, 39526, 295, 4084, 257, 2445, 294, 31079, 1320, 11, 457, 309, 2759, 380, 50706, 50706, 4725, 976, 505, 1101, 3389, 570, 264, 15778, 2848, 1062, 1217, 360, 729, 50967, 50967, 1900, 721, 13, 51052, 51052, 400, 370, 300, 311, 472, 1859, 689, 9573, 10884, 19160, 576, 312, 364, 3571, 551, 281, 589, 365, 13, 51372, 51372, 467, 2759, 380, 312, 3571, 570, 291, 1116, 362, 281, 4445, 257, 688, 295, 1507, 1803, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.1022397466452725, "compression_ratio": 1.5238095238095237, "no_caption_prob": 4.356813406047877e-06}, {"id": 616, "seek": 256156, "start": 2573.62, "end": 2575.32, "text": " exact things.", "tokens": [50364, 407, 321, 727, 352, 807, 264, 39526, 295, 4084, 257, 2445, 294, 31079, 1320, 11, 457, 309, 2759, 380, 50706, 50706, 4725, 976, 505, 1101, 3389, 570, 264, 15778, 2848, 1062, 1217, 360, 729, 50967, 50967, 1900, 721, 13, 51052, 51052, 400, 370, 300, 311, 472, 1859, 689, 9573, 10884, 19160, 576, 312, 364, 3571, 551, 281, 589, 365, 13, 51372, 51372, 467, 2759, 380, 312, 3571, 570, 291, 1116, 362, 281, 4445, 257, 688, 295, 1507, 1803, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.1022397466452725, "compression_ratio": 1.5238095238095237, "no_caption_prob": 4.356813406047877e-06}, {"id": 617, "seek": 256156, "start": 2575.32, "end": 2581.72, "text": " And so that's one area where WebAssembly would be an easier thing to work with.", "tokens": [50364, 407, 321, 727, 352, 807, 264, 39526, 295, 4084, 257, 2445, 294, 31079, 1320, 11, 457, 309, 2759, 380, 50706, 50706, 4725, 976, 505, 1101, 3389, 570, 264, 15778, 2848, 1062, 1217, 360, 729, 50967, 50967, 1900, 721, 13, 51052, 51052, 400, 370, 300, 311, 472, 1859, 689, 9573, 10884, 19160, 576, 312, 364, 3571, 551, 281, 589, 365, 13, 51372, 51372, 467, 2759, 380, 312, 3571, 570, 291, 1116, 362, 281, 4445, 257, 688, 295, 1507, 1803, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.1022397466452725, "compression_ratio": 1.5238095238095237, "no_caption_prob": 4.356813406047877e-06}, {"id": 618, "seek": 256156, "start": 2581.72, "end": 2585.52, "text": " It wouldn't be easier because you'd have to implement a lot of stuff yourself.", "tokens": [50364, 407, 321, 727, 352, 807, 264, 39526, 295, 4084, 257, 2445, 294, 31079, 1320, 11, 457, 309, 2759, 380, 50706, 50706, 4725, 976, 505, 1101, 3389, 570, 264, 15778, 2848, 1062, 1217, 360, 729, 50967, 50967, 1900, 721, 13, 51052, 51052, 400, 370, 300, 311, 472, 1859, 689, 9573, 10884, 19160, 576, 312, 364, 3571, 551, 281, 589, 365, 13, 51372, 51372, 467, 2759, 380, 312, 3571, 570, 291, 1116, 362, 281, 4445, 257, 688, 295, 1507, 1803, 13, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.1022397466452725, "compression_ratio": 1.5238095238095237, "no_caption_prob": 4.356813406047877e-06}, {"id": 619, "seek": 258552, "start": 2585.52, "end": 2592.44, "text": " But you would, to a much larger degree, understand if something was worth looking into because", "tokens": [50364, 583, 291, 576, 11, 281, 257, 709, 4833, 4314, 11, 1223, 498, 746, 390, 3163, 1237, 666, 570, 50710, 50710, 309, 311, 257, 544, 27737, 3779, 13, 50824, 50824, 865, 13, 50874, 50874, 407, 11, 411, 11, 257, 688, 295, 264, 565, 300, 286, 600, 4418, 1237, 666, 3389, 575, 2935, 668, 11, 51184, 51184, 370, 294, 5261, 11, 341, 820, 976, 1101, 3389, 13, 51374, 51374, 583, 294, 3539, 507, 11, 300, 815, 406, 312, 264, 1389, 13, 51574, 51574, 400, 370, 456, 366, 257, 3840, 295, 12050, 597, 286, 600, 1096, 597, 3263, 10585, 420, 3263, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11828706778732001, "compression_ratio": 1.6055776892430278, "no_caption_prob": 4.0059654565993696e-05}, {"id": 620, "seek": 258552, "start": 2592.44, "end": 2594.72, "text": " it's a more predictable target.", "tokens": [50364, 583, 291, 576, 11, 281, 257, 709, 4833, 4314, 11, 1223, 498, 746, 390, 3163, 1237, 666, 570, 50710, 50710, 309, 311, 257, 544, 27737, 3779, 13, 50824, 50824, 865, 13, 50874, 50874, 407, 11, 411, 11, 257, 688, 295, 264, 565, 300, 286, 600, 4418, 1237, 666, 3389, 575, 2935, 668, 11, 51184, 51184, 370, 294, 5261, 11, 341, 820, 976, 1101, 3389, 13, 51374, 51374, 583, 294, 3539, 507, 11, 300, 815, 406, 312, 264, 1389, 13, 51574, 51574, 400, 370, 456, 366, 257, 3840, 295, 12050, 597, 286, 600, 1096, 597, 3263, 10585, 420, 3263, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11828706778732001, "compression_ratio": 1.6055776892430278, "no_caption_prob": 4.0059654565993696e-05}, {"id": 621, "seek": 258552, "start": 2594.72, "end": 2595.72, "text": " Yeah.", "tokens": [50364, 583, 291, 576, 11, 281, 257, 709, 4833, 4314, 11, 1223, 498, 746, 390, 3163, 1237, 666, 570, 50710, 50710, 309, 311, 257, 544, 27737, 3779, 13, 50824, 50824, 865, 13, 50874, 50874, 407, 11, 411, 11, 257, 688, 295, 264, 565, 300, 286, 600, 4418, 1237, 666, 3389, 575, 2935, 668, 11, 51184, 51184, 370, 294, 5261, 11, 341, 820, 976, 1101, 3389, 13, 51374, 51374, 583, 294, 3539, 507, 11, 300, 815, 406, 312, 264, 1389, 13, 51574, 51574, 400, 370, 456, 366, 257, 3840, 295, 12050, 597, 286, 600, 1096, 597, 3263, 10585, 420, 3263, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11828706778732001, "compression_ratio": 1.6055776892430278, "no_caption_prob": 4.0059654565993696e-05}, {"id": 622, "seek": 258552, "start": 2595.72, "end": 2601.92, "text": " So, like, a lot of the time that I've spent looking into performance has simply been,", "tokens": [50364, 583, 291, 576, 11, 281, 257, 709, 4833, 4314, 11, 1223, 498, 746, 390, 3163, 1237, 666, 570, 50710, 50710, 309, 311, 257, 544, 27737, 3779, 13, 50824, 50824, 865, 13, 50874, 50874, 407, 11, 411, 11, 257, 688, 295, 264, 565, 300, 286, 600, 4418, 1237, 666, 3389, 575, 2935, 668, 11, 51184, 51184, 370, 294, 5261, 11, 341, 820, 976, 1101, 3389, 13, 51374, 51374, 583, 294, 3539, 507, 11, 300, 815, 406, 312, 264, 1389, 13, 51574, 51574, 400, 370, 456, 366, 257, 3840, 295, 12050, 597, 286, 600, 1096, 597, 3263, 10585, 420, 3263, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11828706778732001, "compression_ratio": 1.6055776892430278, "no_caption_prob": 4.0059654565993696e-05}, {"id": 623, "seek": 258552, "start": 2601.92, "end": 2605.72, "text": " so in theory, this should give better performance.", "tokens": [50364, 583, 291, 576, 11, 281, 257, 709, 4833, 4314, 11, 1223, 498, 746, 390, 3163, 1237, 666, 570, 50710, 50710, 309, 311, 257, 544, 27737, 3779, 13, 50824, 50824, 865, 13, 50874, 50874, 407, 11, 411, 11, 257, 688, 295, 264, 565, 300, 286, 600, 4418, 1237, 666, 3389, 575, 2935, 668, 11, 51184, 51184, 370, 294, 5261, 11, 341, 820, 976, 1101, 3389, 13, 51374, 51374, 583, 294, 3539, 507, 11, 300, 815, 406, 312, 264, 1389, 13, 51574, 51574, 400, 370, 456, 366, 257, 3840, 295, 12050, 597, 286, 600, 1096, 597, 3263, 10585, 420, 3263, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11828706778732001, "compression_ratio": 1.6055776892430278, "no_caption_prob": 4.0059654565993696e-05}, {"id": 624, "seek": 258552, "start": 2605.72, "end": 2609.72, "text": " But in actuality, that may not be the case.", "tokens": [50364, 583, 291, 576, 11, 281, 257, 709, 4833, 4314, 11, 1223, 498, 746, 390, 3163, 1237, 666, 570, 50710, 50710, 309, 311, 257, 544, 27737, 3779, 13, 50824, 50824, 865, 13, 50874, 50874, 407, 11, 411, 11, 257, 688, 295, 264, 565, 300, 286, 600, 4418, 1237, 666, 3389, 575, 2935, 668, 11, 51184, 51184, 370, 294, 5261, 11, 341, 820, 976, 1101, 3389, 13, 51374, 51374, 583, 294, 3539, 507, 11, 300, 815, 406, 312, 264, 1389, 13, 51574, 51574, 400, 370, 456, 366, 257, 3840, 295, 12050, 597, 286, 600, 1096, 597, 3263, 10585, 420, 3263, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11828706778732001, "compression_ratio": 1.6055776892430278, "no_caption_prob": 4.0059654565993696e-05}, {"id": 625, "seek": 258552, "start": 2609.72, "end": 2614.44, "text": " And so there are a bunch of experiments which I've done which sounds reasonable or sounds", "tokens": [50364, 583, 291, 576, 11, 281, 257, 709, 4833, 4314, 11, 1223, 498, 746, 390, 3163, 1237, 666, 570, 50710, 50710, 309, 311, 257, 544, 27737, 3779, 13, 50824, 50824, 865, 13, 50874, 50874, 407, 11, 411, 11, 257, 688, 295, 264, 565, 300, 286, 600, 4418, 1237, 666, 3389, 575, 2935, 668, 11, 51184, 51184, 370, 294, 5261, 11, 341, 820, 976, 1101, 3389, 13, 51374, 51374, 583, 294, 3539, 507, 11, 300, 815, 406, 312, 264, 1389, 13, 51574, 51574, 400, 370, 456, 366, 257, 3840, 295, 12050, 597, 286, 600, 1096, 597, 3263, 10585, 420, 3263, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.11828706778732001, "compression_ratio": 1.6055776892430278, "no_caption_prob": 4.0059654565993696e-05}, {"id": 626, "seek": 261444, "start": 2614.44, "end": 2616.58, "text": " completely unreasonable.", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 627, "seek": 261444, "start": 2616.58, "end": 2621.2400000000002, "text": " And I've been surprised by the result on more than one occasion.", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 628, "seek": 261444, "start": 2621.2400000000002, "end": 2626.44, "text": " So regarding bundle size, do you have a sense, Robin, because for anyone who doesn't know,", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 629, "seek": 261444, "start": 2626.44, "end": 2628.36, "text": " you've been working on Stabble.", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 630, "seek": 261444, "start": 2628.36, "end": 2632.34, "text": " It's a, what's it called, a stack language?", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 631, "seek": 261444, "start": 2632.34, "end": 2636.94, "text": " It's a stack based programming language, or stack oriented.", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 632, "seek": 261444, "start": 2636.94, "end": 2637.94, "text": " Stack oriented.", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 633, "seek": 261444, "start": 2637.94, "end": 2643.38, "text": " And it's really interesting, like, I know that one of the things that you wanted to", "tokens": [50364, 2584, 41730, 13, 50471, 50471, 400, 286, 600, 668, 6100, 538, 264, 1874, 322, 544, 813, 472, 9674, 13, 50704, 50704, 407, 8595, 24438, 2744, 11, 360, 291, 362, 257, 2020, 11, 16533, 11, 570, 337, 2878, 567, 1177, 380, 458, 11, 50964, 50964, 291, 600, 668, 1364, 322, 745, 455, 638, 13, 51060, 51060, 467, 311, 257, 11, 437, 311, 309, 1219, 11, 257, 8630, 2856, 30, 51259, 51259, 467, 311, 257, 8630, 2361, 9410, 2856, 11, 420, 8630, 21841, 13, 51489, 51489, 37649, 21841, 13, 51539, 51539, 400, 309, 311, 534, 1880, 11, 411, 11, 286, 458, 300, 472, 295, 264, 721, 300, 291, 1415, 281, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.2269524165562221, "compression_ratio": 1.625, "no_caption_prob": 5.475659418152645e-05}, {"id": 634, "seek": 264338, "start": 2643.38, "end": 2647.7200000000003, "text": " experiment with for that project was just outputting something to WebAssembly.", "tokens": [50364, 5120, 365, 337, 300, 1716, 390, 445, 5598, 783, 746, 281, 9573, 10884, 19160, 13, 50581, 50581, 400, 370, 300, 311, 437, 309, 775, 13, 50667, 50667, 400, 370, 291, 362, 257, 21743, 295, 512, 295, 613, 957, 1002, 5821, 295, 9573, 10884, 19160, 13, 51025, 51025, 400, 577, 775, 309, 11, 577, 307, 309, 337, 24438, 2744, 30, 51217, 51217, 2014, 9573, 10884, 19160, 5598, 11, 307, 264, 24438, 2744, 4833, 11, 4356, 11, 727, 352, 2139, 636, 30, 51552, 51552, 407, 309, 311, 2252, 281, 458, 13, 51665, 51665, 467, 5946, 322, 264, 2856, 291, 528, 281, 31413, 281, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15445207199960384, "compression_ratio": 1.6455696202531647, "no_caption_prob": 4.469043415156193e-05}, {"id": 635, "seek": 264338, "start": 2647.7200000000003, "end": 2649.44, "text": " And so that's what it does.", "tokens": [50364, 5120, 365, 337, 300, 1716, 390, 445, 5598, 783, 746, 281, 9573, 10884, 19160, 13, 50581, 50581, 400, 370, 300, 311, 437, 309, 775, 13, 50667, 50667, 400, 370, 291, 362, 257, 21743, 295, 512, 295, 613, 957, 1002, 5821, 295, 9573, 10884, 19160, 13, 51025, 51025, 400, 577, 775, 309, 11, 577, 307, 309, 337, 24438, 2744, 30, 51217, 51217, 2014, 9573, 10884, 19160, 5598, 11, 307, 264, 24438, 2744, 4833, 11, 4356, 11, 727, 352, 2139, 636, 30, 51552, 51552, 407, 309, 311, 2252, 281, 458, 13, 51665, 51665, 467, 5946, 322, 264, 2856, 291, 528, 281, 31413, 281, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15445207199960384, "compression_ratio": 1.6455696202531647, "no_caption_prob": 4.469043415156193e-05}, {"id": 636, "seek": 264338, "start": 2649.44, "end": 2656.6, "text": " And so you have a grasp of some of these real world applications of WebAssembly.", "tokens": [50364, 5120, 365, 337, 300, 1716, 390, 445, 5598, 783, 746, 281, 9573, 10884, 19160, 13, 50581, 50581, 400, 370, 300, 311, 437, 309, 775, 13, 50667, 50667, 400, 370, 291, 362, 257, 21743, 295, 512, 295, 613, 957, 1002, 5821, 295, 9573, 10884, 19160, 13, 51025, 51025, 400, 577, 775, 309, 11, 577, 307, 309, 337, 24438, 2744, 30, 51217, 51217, 2014, 9573, 10884, 19160, 5598, 11, 307, 264, 24438, 2744, 4833, 11, 4356, 11, 727, 352, 2139, 636, 30, 51552, 51552, 407, 309, 311, 2252, 281, 458, 13, 51665, 51665, 467, 5946, 322, 264, 2856, 291, 528, 281, 31413, 281, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15445207199960384, "compression_ratio": 1.6455696202531647, "no_caption_prob": 4.469043415156193e-05}, {"id": 637, "seek": 264338, "start": 2656.6, "end": 2660.44, "text": " And how does it, how is it for bundle size?", "tokens": [50364, 5120, 365, 337, 300, 1716, 390, 445, 5598, 783, 746, 281, 9573, 10884, 19160, 13, 50581, 50581, 400, 370, 300, 311, 437, 309, 775, 13, 50667, 50667, 400, 370, 291, 362, 257, 21743, 295, 512, 295, 613, 957, 1002, 5821, 295, 9573, 10884, 19160, 13, 51025, 51025, 400, 577, 775, 309, 11, 577, 307, 309, 337, 24438, 2744, 30, 51217, 51217, 2014, 9573, 10884, 19160, 5598, 11, 307, 264, 24438, 2744, 4833, 11, 4356, 11, 727, 352, 2139, 636, 30, 51552, 51552, 407, 309, 311, 2252, 281, 458, 13, 51665, 51665, 467, 5946, 322, 264, 2856, 291, 528, 281, 31413, 281, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15445207199960384, "compression_ratio": 1.6455696202531647, "no_caption_prob": 4.469043415156193e-05}, {"id": 638, "seek": 264338, "start": 2660.44, "end": 2667.1400000000003, "text": " Are WebAssembly output, is the bundle size larger, smaller, could go either way?", "tokens": [50364, 5120, 365, 337, 300, 1716, 390, 445, 5598, 783, 746, 281, 9573, 10884, 19160, 13, 50581, 50581, 400, 370, 300, 311, 437, 309, 775, 13, 50667, 50667, 400, 370, 291, 362, 257, 21743, 295, 512, 295, 613, 957, 1002, 5821, 295, 9573, 10884, 19160, 13, 51025, 51025, 400, 577, 775, 309, 11, 577, 307, 309, 337, 24438, 2744, 30, 51217, 51217, 2014, 9573, 10884, 19160, 5598, 11, 307, 264, 24438, 2744, 4833, 11, 4356, 11, 727, 352, 2139, 636, 30, 51552, 51552, 407, 309, 311, 2252, 281, 458, 13, 51665, 51665, 467, 5946, 322, 264, 2856, 291, 528, 281, 31413, 281, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15445207199960384, "compression_ratio": 1.6455696202531647, "no_caption_prob": 4.469043415156193e-05}, {"id": 639, "seek": 264338, "start": 2667.1400000000003, "end": 2669.4, "text": " So it's difficult to know.", "tokens": [50364, 5120, 365, 337, 300, 1716, 390, 445, 5598, 783, 746, 281, 9573, 10884, 19160, 13, 50581, 50581, 400, 370, 300, 311, 437, 309, 775, 13, 50667, 50667, 400, 370, 291, 362, 257, 21743, 295, 512, 295, 613, 957, 1002, 5821, 295, 9573, 10884, 19160, 13, 51025, 51025, 400, 577, 775, 309, 11, 577, 307, 309, 337, 24438, 2744, 30, 51217, 51217, 2014, 9573, 10884, 19160, 5598, 11, 307, 264, 24438, 2744, 4833, 11, 4356, 11, 727, 352, 2139, 636, 30, 51552, 51552, 407, 309, 311, 2252, 281, 458, 13, 51665, 51665, 467, 5946, 322, 264, 2856, 291, 528, 281, 31413, 281, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15445207199960384, "compression_ratio": 1.6455696202531647, "no_caption_prob": 4.469043415156193e-05}, {"id": 640, "seek": 264338, "start": 2669.4, "end": 2672.38, "text": " It depends on the language you want to compile to.", "tokens": [50364, 5120, 365, 337, 300, 1716, 390, 445, 5598, 783, 746, 281, 9573, 10884, 19160, 13, 50581, 50581, 400, 370, 300, 311, 437, 309, 775, 13, 50667, 50667, 400, 370, 291, 362, 257, 21743, 295, 512, 295, 613, 957, 1002, 5821, 295, 9573, 10884, 19160, 13, 51025, 51025, 400, 577, 775, 309, 11, 577, 307, 309, 337, 24438, 2744, 30, 51217, 51217, 2014, 9573, 10884, 19160, 5598, 11, 307, 264, 24438, 2744, 4833, 11, 4356, 11, 727, 352, 2139, 636, 30, 51552, 51552, 407, 309, 311, 2252, 281, 458, 13, 51665, 51665, 467, 5946, 322, 264, 2856, 291, 528, 281, 31413, 281, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15445207199960384, "compression_ratio": 1.6455696202531647, "no_caption_prob": 4.469043415156193e-05}, {"id": 641, "seek": 267238, "start": 2672.38, "end": 2677.52, "text": " But I believe Brian Carroll posted some numbers on this.", "tokens": [50364, 583, 286, 1697, 10765, 48456, 9437, 512, 3547, 322, 341, 13, 50621, 50621, 1436, 294, 5261, 11, 9573, 10884, 19160, 40846, 22332, 10951, 2516, 7263, 445, 257, 40846, 13, 51051, 51051, 407, 884, 1804, 472, 732, 307, 4356, 813, 3579, 472, 1804, 732, 294, 15778, 13, 51447, 51447, 1436, 309, 311, 36548, 588, 19621, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1691831168481859, "compression_ratio": 1.4213483146067416, "no_caption_prob": 1.384547067573294e-05}, {"id": 642, "seek": 267238, "start": 2677.52, "end": 2686.12, "text": " Because in theory, WebAssembly bytecode instruction takes potentially just a byte.", "tokens": [50364, 583, 286, 1697, 10765, 48456, 9437, 512, 3547, 322, 341, 13, 50621, 50621, 1436, 294, 5261, 11, 9573, 10884, 19160, 40846, 22332, 10951, 2516, 7263, 445, 257, 40846, 13, 51051, 51051, 407, 884, 1804, 472, 732, 307, 4356, 813, 3579, 472, 1804, 732, 294, 15778, 13, 51447, 51447, 1436, 309, 311, 36548, 588, 19621, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1691831168481859, "compression_ratio": 1.4213483146067416, "no_caption_prob": 1.384547067573294e-05}, {"id": 643, "seek": 267238, "start": 2686.12, "end": 2694.04, "text": " So doing plus one two is smaller than writing one plus two in JavaScript.", "tokens": [50364, 583, 286, 1697, 10765, 48456, 9437, 512, 3547, 322, 341, 13, 50621, 50621, 1436, 294, 5261, 11, 9573, 10884, 19160, 40846, 22332, 10951, 2516, 7263, 445, 257, 40846, 13, 51051, 51051, 407, 884, 1804, 472, 732, 307, 4356, 813, 3579, 472, 1804, 732, 294, 15778, 13, 51447, 51447, 1436, 309, 311, 36548, 588, 19621, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1691831168481859, "compression_ratio": 1.4213483146067416, "no_caption_prob": 1.384547067573294e-05}, {"id": 644, "seek": 267238, "start": 2694.04, "end": 2696.94, "text": " Because it's compiled very efficiently.", "tokens": [50364, 583, 286, 1697, 10765, 48456, 9437, 512, 3547, 322, 341, 13, 50621, 50621, 1436, 294, 5261, 11, 9573, 10884, 19160, 40846, 22332, 10951, 2516, 7263, 445, 257, 40846, 13, 51051, 51051, 407, 884, 1804, 472, 732, 307, 4356, 813, 3579, 472, 1804, 732, 294, 15778, 13, 51447, 51447, 1436, 309, 311, 36548, 588, 19621, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1691831168481859, "compression_ratio": 1.4213483146067416, "no_caption_prob": 1.384547067573294e-05}, {"id": 645, "seek": 269694, "start": 2696.94, "end": 2703.16, "text": " On the other hand, you have to reimplement garbage collection, strings, carrying in the", "tokens": [50364, 1282, 264, 661, 1011, 11, 291, 362, 281, 33433, 43704, 14150, 5765, 11, 13985, 11, 9792, 294, 264, 50675, 50675, 1389, 295, 2699, 76, 13, 50725, 50725, 407, 309, 311, 406, 4725, 257, 1850, 1942, 13, 50931, 50931, 583, 286, 1697, 10765, 48456, 575, 9437, 3547, 322, 341, 15053, 294, 264, 1791, 13, 51167, 51167, 400, 286, 1697, 365, 264, 14150, 5765, 293, 365, 11, 14920, 356, 406, 365, 439, 264, 4361, 45298, 51495, 51495, 295, 2699, 76, 294, 1081, 13, 51545, 51545, 583, 286, 519, 309, 632, 8177, 295, 3410, 14150, 23960, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.16428252628871373, "compression_ratio": 1.6491228070175439, "no_caption_prob": 7.483735680580139e-05}, {"id": 646, "seek": 269694, "start": 2703.16, "end": 2704.16, "text": " case of Elm.", "tokens": [50364, 1282, 264, 661, 1011, 11, 291, 362, 281, 33433, 43704, 14150, 5765, 11, 13985, 11, 9792, 294, 264, 50675, 50675, 1389, 295, 2699, 76, 13, 50725, 50725, 407, 309, 311, 406, 4725, 257, 1850, 1942, 13, 50931, 50931, 583, 286, 1697, 10765, 48456, 575, 9437, 3547, 322, 341, 15053, 294, 264, 1791, 13, 51167, 51167, 400, 286, 1697, 365, 264, 14150, 5765, 293, 365, 11, 14920, 356, 406, 365, 439, 264, 4361, 45298, 51495, 51495, 295, 2699, 76, 294, 1081, 13, 51545, 51545, 583, 286, 519, 309, 632, 8177, 295, 3410, 14150, 23960, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.16428252628871373, "compression_ratio": 1.6491228070175439, "no_caption_prob": 7.483735680580139e-05}, {"id": 647, "seek": 269694, "start": 2704.16, "end": 2708.28, "text": " So it's not necessarily a clear win.", "tokens": [50364, 1282, 264, 661, 1011, 11, 291, 362, 281, 33433, 43704, 14150, 5765, 11, 13985, 11, 9792, 294, 264, 50675, 50675, 1389, 295, 2699, 76, 13, 50725, 50725, 407, 309, 311, 406, 4725, 257, 1850, 1942, 13, 50931, 50931, 583, 286, 1697, 10765, 48456, 575, 9437, 3547, 322, 341, 15053, 294, 264, 1791, 13, 51167, 51167, 400, 286, 1697, 365, 264, 14150, 5765, 293, 365, 11, 14920, 356, 406, 365, 439, 264, 4361, 45298, 51495, 51495, 295, 2699, 76, 294, 1081, 13, 51545, 51545, 583, 286, 519, 309, 632, 8177, 295, 3410, 14150, 23960, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.16428252628871373, "compression_ratio": 1.6491228070175439, "no_caption_prob": 7.483735680580139e-05}, {"id": 648, "seek": 269694, "start": 2708.28, "end": 2713.0, "text": " But I believe Brian Carroll has posted numbers on this sometime in the past.", "tokens": [50364, 1282, 264, 661, 1011, 11, 291, 362, 281, 33433, 43704, 14150, 5765, 11, 13985, 11, 9792, 294, 264, 50675, 50675, 1389, 295, 2699, 76, 13, 50725, 50725, 407, 309, 311, 406, 4725, 257, 1850, 1942, 13, 50931, 50931, 583, 286, 1697, 10765, 48456, 575, 9437, 3547, 322, 341, 15053, 294, 264, 1791, 13, 51167, 51167, 400, 286, 1697, 365, 264, 14150, 5765, 293, 365, 11, 14920, 356, 406, 365, 439, 264, 4361, 45298, 51495, 51495, 295, 2699, 76, 294, 1081, 13, 51545, 51545, 583, 286, 519, 309, 632, 8177, 295, 3410, 14150, 23960, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.16428252628871373, "compression_ratio": 1.6491228070175439, "no_caption_prob": 7.483735680580139e-05}, {"id": 649, "seek": 269694, "start": 2713.0, "end": 2719.56, "text": " And I believe with the garbage collection and with, admittedly not with all the semantics", "tokens": [50364, 1282, 264, 661, 1011, 11, 291, 362, 281, 33433, 43704, 14150, 5765, 11, 13985, 11, 9792, 294, 264, 50675, 50675, 1389, 295, 2699, 76, 13, 50725, 50725, 407, 309, 311, 406, 4725, 257, 1850, 1942, 13, 50931, 50931, 583, 286, 1697, 10765, 48456, 575, 9437, 3547, 322, 341, 15053, 294, 264, 1791, 13, 51167, 51167, 400, 286, 1697, 365, 264, 14150, 5765, 293, 365, 11, 14920, 356, 406, 365, 439, 264, 4361, 45298, 51495, 51495, 295, 2699, 76, 294, 1081, 13, 51545, 51545, 583, 286, 519, 309, 632, 8177, 295, 3410, 14150, 23960, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.16428252628871373, "compression_ratio": 1.6491228070175439, "no_caption_prob": 7.483735680580139e-05}, {"id": 650, "seek": 269694, "start": 2719.56, "end": 2720.56, "text": " of Elm in place.", "tokens": [50364, 1282, 264, 661, 1011, 11, 291, 362, 281, 33433, 43704, 14150, 5765, 11, 13985, 11, 9792, 294, 264, 50675, 50675, 1389, 295, 2699, 76, 13, 50725, 50725, 407, 309, 311, 406, 4725, 257, 1850, 1942, 13, 50931, 50931, 583, 286, 1697, 10765, 48456, 575, 9437, 3547, 322, 341, 15053, 294, 264, 1791, 13, 51167, 51167, 400, 286, 1697, 365, 264, 14150, 5765, 293, 365, 11, 14920, 356, 406, 365, 439, 264, 4361, 45298, 51495, 51495, 295, 2699, 76, 294, 1081, 13, 51545, 51545, 583, 286, 519, 309, 632, 8177, 295, 3410, 14150, 23960, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.16428252628871373, "compression_ratio": 1.6491228070175439, "no_caption_prob": 7.483735680580139e-05}, {"id": 651, "seek": 269694, "start": 2720.56, "end": 2724.0, "text": " But I think it had proof of concept garbage collector.", "tokens": [50364, 1282, 264, 661, 1011, 11, 291, 362, 281, 33433, 43704, 14150, 5765, 11, 13985, 11, 9792, 294, 264, 50675, 50675, 1389, 295, 2699, 76, 13, 50725, 50725, 407, 309, 311, 406, 4725, 257, 1850, 1942, 13, 50931, 50931, 583, 286, 1697, 10765, 48456, 575, 9437, 3547, 322, 341, 15053, 294, 264, 1791, 13, 51167, 51167, 400, 286, 1697, 365, 264, 14150, 5765, 293, 365, 11, 14920, 356, 406, 365, 439, 264, 4361, 45298, 51495, 51495, 295, 2699, 76, 294, 1081, 13, 51545, 51545, 583, 286, 519, 309, 632, 8177, 295, 3410, 14150, 23960, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.16428252628871373, "compression_ratio": 1.6491228070175439, "no_caption_prob": 7.483735680580139e-05}, {"id": 652, "seek": 272400, "start": 2724.0, "end": 2731.8, "text": " And I think a Hello World app or like the counter, the button counter example in Elm.", "tokens": [50364, 400, 286, 519, 257, 2425, 3937, 724, 420, 411, 264, 5682, 11, 264, 2960, 5682, 1365, 294, 2699, 76, 13, 50754, 50754, 286, 519, 300, 36548, 281, 11, 286, 478, 1940, 341, 490, 4675, 370, 286, 727, 312, 588, 2085, 13, 50986, 50986, 583, 286, 1697, 309, 390, 746, 294, 264, 1668, 295, 2272, 11, 3705, 5128, 996, 43673, 949, 460, 57, 9139, 13, 51264, 51264, 876, 11, 949, 460, 57, 9139, 13, 51368, 51368, 865, 13, 51418, 51418, 407, 11, 293, 295, 1164, 11, 264, 4833, 3861, 3643, 11, 264, 544, 294, 2294, 295, 9573, 10884, 19160, 51754, 51754, 11420, 3643, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2515347739246404, "compression_ratio": 1.528688524590164, "no_caption_prob": 4.539122892310843e-05}, {"id": 653, "seek": 272400, "start": 2731.8, "end": 2736.44, "text": " I think that compiled to, I'm taking this from memory so I could be very wrong.", "tokens": [50364, 400, 286, 519, 257, 2425, 3937, 724, 420, 411, 264, 5682, 11, 264, 2960, 5682, 1365, 294, 2699, 76, 13, 50754, 50754, 286, 519, 300, 36548, 281, 11, 286, 478, 1940, 341, 490, 4675, 370, 286, 727, 312, 588, 2085, 13, 50986, 50986, 583, 286, 1697, 309, 390, 746, 294, 264, 1668, 295, 2272, 11, 3705, 5128, 996, 43673, 949, 460, 57, 9139, 13, 51264, 51264, 876, 11, 949, 460, 57, 9139, 13, 51368, 51368, 865, 13, 51418, 51418, 407, 11, 293, 295, 1164, 11, 264, 4833, 3861, 3643, 11, 264, 544, 294, 2294, 295, 9573, 10884, 19160, 51754, 51754, 11420, 3643, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2515347739246404, "compression_ratio": 1.528688524590164, "no_caption_prob": 4.539122892310843e-05}, {"id": 654, "seek": 272400, "start": 2736.44, "end": 2742.0, "text": " But I believe it was something in the order of 12, 13 kilobytes before GZIP.", "tokens": [50364, 400, 286, 519, 257, 2425, 3937, 724, 420, 411, 264, 5682, 11, 264, 2960, 5682, 1365, 294, 2699, 76, 13, 50754, 50754, 286, 519, 300, 36548, 281, 11, 286, 478, 1940, 341, 490, 4675, 370, 286, 727, 312, 588, 2085, 13, 50986, 50986, 583, 286, 1697, 309, 390, 746, 294, 264, 1668, 295, 2272, 11, 3705, 5128, 996, 43673, 949, 460, 57, 9139, 13, 51264, 51264, 876, 11, 949, 460, 57, 9139, 13, 51368, 51368, 865, 13, 51418, 51418, 407, 11, 293, 295, 1164, 11, 264, 4833, 3861, 3643, 11, 264, 544, 294, 2294, 295, 9573, 10884, 19160, 51754, 51754, 11420, 3643, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2515347739246404, "compression_ratio": 1.528688524590164, "no_caption_prob": 4.539122892310843e-05}, {"id": 655, "seek": 272400, "start": 2742.0, "end": 2744.08, "text": " Oh, before GZIP.", "tokens": [50364, 400, 286, 519, 257, 2425, 3937, 724, 420, 411, 264, 5682, 11, 264, 2960, 5682, 1365, 294, 2699, 76, 13, 50754, 50754, 286, 519, 300, 36548, 281, 11, 286, 478, 1940, 341, 490, 4675, 370, 286, 727, 312, 588, 2085, 13, 50986, 50986, 583, 286, 1697, 309, 390, 746, 294, 264, 1668, 295, 2272, 11, 3705, 5128, 996, 43673, 949, 460, 57, 9139, 13, 51264, 51264, 876, 11, 949, 460, 57, 9139, 13, 51368, 51368, 865, 13, 51418, 51418, 407, 11, 293, 295, 1164, 11, 264, 4833, 3861, 3643, 11, 264, 544, 294, 2294, 295, 9573, 10884, 19160, 51754, 51754, 11420, 3643, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2515347739246404, "compression_ratio": 1.528688524590164, "no_caption_prob": 4.539122892310843e-05}, {"id": 656, "seek": 272400, "start": 2744.08, "end": 2745.08, "text": " Yeah.", "tokens": [50364, 400, 286, 519, 257, 2425, 3937, 724, 420, 411, 264, 5682, 11, 264, 2960, 5682, 1365, 294, 2699, 76, 13, 50754, 50754, 286, 519, 300, 36548, 281, 11, 286, 478, 1940, 341, 490, 4675, 370, 286, 727, 312, 588, 2085, 13, 50986, 50986, 583, 286, 1697, 309, 390, 746, 294, 264, 1668, 295, 2272, 11, 3705, 5128, 996, 43673, 949, 460, 57, 9139, 13, 51264, 51264, 876, 11, 949, 460, 57, 9139, 13, 51368, 51368, 865, 13, 51418, 51418, 407, 11, 293, 295, 1164, 11, 264, 4833, 3861, 3643, 11, 264, 544, 294, 2294, 295, 9573, 10884, 19160, 51754, 51754, 11420, 3643, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2515347739246404, "compression_ratio": 1.528688524590164, "no_caption_prob": 4.539122892310843e-05}, {"id": 657, "seek": 272400, "start": 2745.08, "end": 2751.8, "text": " So, and of course, the larger application becomes, the more in favor of WebAssembly", "tokens": [50364, 400, 286, 519, 257, 2425, 3937, 724, 420, 411, 264, 5682, 11, 264, 2960, 5682, 1365, 294, 2699, 76, 13, 50754, 50754, 286, 519, 300, 36548, 281, 11, 286, 478, 1940, 341, 490, 4675, 370, 286, 727, 312, 588, 2085, 13, 50986, 50986, 583, 286, 1697, 309, 390, 746, 294, 264, 1668, 295, 2272, 11, 3705, 5128, 996, 43673, 949, 460, 57, 9139, 13, 51264, 51264, 876, 11, 949, 460, 57, 9139, 13, 51368, 51368, 865, 13, 51418, 51418, 407, 11, 293, 295, 1164, 11, 264, 4833, 3861, 3643, 11, 264, 544, 294, 2294, 295, 9573, 10884, 19160, 51754, 51754, 11420, 3643, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2515347739246404, "compression_ratio": 1.528688524590164, "no_caption_prob": 4.539122892310843e-05}, {"id": 658, "seek": 272400, "start": 2751.8, "end": 2753.4, "text": " implementation becomes.", "tokens": [50364, 400, 286, 519, 257, 2425, 3937, 724, 420, 411, 264, 5682, 11, 264, 2960, 5682, 1365, 294, 2699, 76, 13, 50754, 50754, 286, 519, 300, 36548, 281, 11, 286, 478, 1940, 341, 490, 4675, 370, 286, 727, 312, 588, 2085, 13, 50986, 50986, 583, 286, 1697, 309, 390, 746, 294, 264, 1668, 295, 2272, 11, 3705, 5128, 996, 43673, 949, 460, 57, 9139, 13, 51264, 51264, 876, 11, 949, 460, 57, 9139, 13, 51368, 51368, 865, 13, 51418, 51418, 407, 11, 293, 295, 1164, 11, 264, 4833, 3861, 3643, 11, 264, 544, 294, 2294, 295, 9573, 10884, 19160, 51754, 51754, 11420, 3643, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2515347739246404, "compression_ratio": 1.528688524590164, "no_caption_prob": 4.539122892310843e-05}, {"id": 659, "seek": 275340, "start": 2753.4, "end": 2760.96, "text": " So I believe, and also with my experiments with Stavel, I believe that asset size would", "tokens": [50364, 407, 286, 1697, 11, 293, 611, 365, 452, 12050, 365, 16959, 779, 11, 286, 1697, 300, 11999, 2744, 576, 50742, 50742, 312, 264, 472, 1850, 1942, 490, 9573, 10884, 19160, 13, 50892, 50892, 865, 13, 50942, 50942, 286, 994, 380, 458, 309, 390, 11, 300, 264, 9415, 645, 370, 36398, 13, 51245, 51245, 407, 9573, 10884, 19160, 575, 732, 25879, 13, 51370, 51370, 821, 311, 257, 2487, 7877, 11, 597, 307, 4140, 337, 411, 11, 309, 311, 4140, 337, 11, 291, 393, 1011, 21561, 309, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2079710218641493, "compression_ratio": 1.5343137254901962, "no_caption_prob": 3.071563332923688e-05}, {"id": 660, "seek": 275340, "start": 2760.96, "end": 2763.96, "text": " be the one clear win from WebAssembly.", "tokens": [50364, 407, 286, 1697, 11, 293, 611, 365, 452, 12050, 365, 16959, 779, 11, 286, 1697, 300, 11999, 2744, 576, 50742, 50742, 312, 264, 472, 1850, 1942, 490, 9573, 10884, 19160, 13, 50892, 50892, 865, 13, 50942, 50942, 286, 994, 380, 458, 309, 390, 11, 300, 264, 9415, 645, 370, 36398, 13, 51245, 51245, 407, 9573, 10884, 19160, 575, 732, 25879, 13, 51370, 51370, 821, 311, 257, 2487, 7877, 11, 597, 307, 4140, 337, 411, 11, 309, 311, 4140, 337, 11, 291, 393, 1011, 21561, 309, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2079710218641493, "compression_ratio": 1.5343137254901962, "no_caption_prob": 3.071563332923688e-05}, {"id": 661, "seek": 275340, "start": 2763.96, "end": 2764.96, "text": " Yeah.", "tokens": [50364, 407, 286, 1697, 11, 293, 611, 365, 452, 12050, 365, 16959, 779, 11, 286, 1697, 300, 11999, 2744, 576, 50742, 50742, 312, 264, 472, 1850, 1942, 490, 9573, 10884, 19160, 13, 50892, 50892, 865, 13, 50942, 50942, 286, 994, 380, 458, 309, 390, 11, 300, 264, 9415, 645, 370, 36398, 13, 51245, 51245, 407, 9573, 10884, 19160, 575, 732, 25879, 13, 51370, 51370, 821, 311, 257, 2487, 7877, 11, 597, 307, 4140, 337, 411, 11, 309, 311, 4140, 337, 11, 291, 393, 1011, 21561, 309, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2079710218641493, "compression_ratio": 1.5343137254901962, "no_caption_prob": 3.071563332923688e-05}, {"id": 662, "seek": 275340, "start": 2764.96, "end": 2771.02, "text": " I didn't know it was, that the instructions were so condensed.", "tokens": [50364, 407, 286, 1697, 11, 293, 611, 365, 452, 12050, 365, 16959, 779, 11, 286, 1697, 300, 11999, 2744, 576, 50742, 50742, 312, 264, 472, 1850, 1942, 490, 9573, 10884, 19160, 13, 50892, 50892, 865, 13, 50942, 50942, 286, 994, 380, 458, 309, 390, 11, 300, 264, 9415, 645, 370, 36398, 13, 51245, 51245, 407, 9573, 10884, 19160, 575, 732, 25879, 13, 51370, 51370, 821, 311, 257, 2487, 7877, 11, 597, 307, 4140, 337, 411, 11, 309, 311, 4140, 337, 11, 291, 393, 1011, 21561, 309, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2079710218641493, "compression_ratio": 1.5343137254901962, "no_caption_prob": 3.071563332923688e-05}, {"id": 663, "seek": 275340, "start": 2771.02, "end": 2773.52, "text": " So WebAssembly has two formats.", "tokens": [50364, 407, 286, 1697, 11, 293, 611, 365, 452, 12050, 365, 16959, 779, 11, 286, 1697, 300, 11999, 2744, 576, 50742, 50742, 312, 264, 472, 1850, 1942, 490, 9573, 10884, 19160, 13, 50892, 50892, 865, 13, 50942, 50942, 286, 994, 380, 458, 309, 390, 11, 300, 264, 9415, 645, 370, 36398, 13, 51245, 51245, 407, 9573, 10884, 19160, 575, 732, 25879, 13, 51370, 51370, 821, 311, 257, 2487, 7877, 11, 597, 307, 4140, 337, 411, 11, 309, 311, 4140, 337, 11, 291, 393, 1011, 21561, 309, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2079710218641493, "compression_ratio": 1.5343137254901962, "no_caption_prob": 3.071563332923688e-05}, {"id": 664, "seek": 275340, "start": 2773.52, "end": 2780.76, "text": " There's a text format, which is meant for like, it's meant for, you can handwrite it,", "tokens": [50364, 407, 286, 1697, 11, 293, 611, 365, 452, 12050, 365, 16959, 779, 11, 286, 1697, 300, 11999, 2744, 576, 50742, 50742, 312, 264, 472, 1850, 1942, 490, 9573, 10884, 19160, 13, 50892, 50892, 865, 13, 50942, 50942, 286, 994, 380, 458, 309, 390, 11, 300, 264, 9415, 645, 370, 36398, 13, 51245, 51245, 407, 9573, 10884, 19160, 575, 732, 25879, 13, 51370, 51370, 821, 311, 257, 2487, 7877, 11, 597, 307, 4140, 337, 411, 11, 309, 311, 4140, 337, 11, 291, 393, 1011, 21561, 309, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2079710218641493, "compression_ratio": 1.5343137254901962, "no_caption_prob": 3.071563332923688e-05}, {"id": 665, "seek": 278076, "start": 2780.76, "end": 2786.5200000000004, "text": " but usually it's for viewing, debugging, sanity checking, that sort of stuff.", "tokens": [50364, 457, 2673, 309, 311, 337, 17480, 11, 45592, 11, 47892, 8568, 11, 300, 1333, 295, 1507, 13, 50652, 50652, 583, 264, 3539, 9573, 10884, 19160, 7877, 307, 17434, 293, 309, 307, 588, 18011, 13, 50878, 50878, 1743, 472, 295, 264, 721, 309, 775, 307, 300, 439, 24922, 2733, 1124, 366, 2058, 12340, 1228, 7006, 51320, 51320, 20004, 43430, 13, 51395, 51395, 407, 754, 1673, 291, 366, 13460, 257, 8858, 857, 24922, 11, 498, 264, 560, 20411, 307, 264, 1230, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.15471039048160415, "compression_ratio": 1.5416666666666667, "no_caption_prob": 1.2218431038490962e-05}, {"id": 666, "seek": 278076, "start": 2786.5200000000004, "end": 2791.0400000000004, "text": " But the actual WebAssembly format is binary and it is very dense.", "tokens": [50364, 457, 2673, 309, 311, 337, 17480, 11, 45592, 11, 47892, 8568, 11, 300, 1333, 295, 1507, 13, 50652, 50652, 583, 264, 3539, 9573, 10884, 19160, 7877, 307, 17434, 293, 309, 307, 588, 18011, 13, 50878, 50878, 1743, 472, 295, 264, 721, 309, 775, 307, 300, 439, 24922, 2733, 1124, 366, 2058, 12340, 1228, 7006, 51320, 51320, 20004, 43430, 13, 51395, 51395, 407, 754, 1673, 291, 366, 13460, 257, 8858, 857, 24922, 11, 498, 264, 560, 20411, 307, 264, 1230, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.15471039048160415, "compression_ratio": 1.5416666666666667, "no_caption_prob": 1.2218431038490962e-05}, {"id": 667, "seek": 278076, "start": 2791.0400000000004, "end": 2799.88, "text": " Like one of the things it does is that all integer literals are encoded using variable", "tokens": [50364, 457, 2673, 309, 311, 337, 17480, 11, 45592, 11, 47892, 8568, 11, 300, 1333, 295, 1507, 13, 50652, 50652, 583, 264, 3539, 9573, 10884, 19160, 7877, 307, 17434, 293, 309, 307, 588, 18011, 13, 50878, 50878, 1743, 472, 295, 264, 721, 309, 775, 307, 300, 439, 24922, 2733, 1124, 366, 2058, 12340, 1228, 7006, 51320, 51320, 20004, 43430, 13, 51395, 51395, 407, 754, 1673, 291, 366, 13460, 257, 8858, 857, 24922, 11, 498, 264, 560, 20411, 307, 264, 1230, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.15471039048160415, "compression_ratio": 1.5416666666666667, "no_caption_prob": 1.2218431038490962e-05}, {"id": 668, "seek": 278076, "start": 2799.88, "end": 2801.38, "text": " sized encoding.", "tokens": [50364, 457, 2673, 309, 311, 337, 17480, 11, 45592, 11, 47892, 8568, 11, 300, 1333, 295, 1507, 13, 50652, 50652, 583, 264, 3539, 9573, 10884, 19160, 7877, 307, 17434, 293, 309, 307, 588, 18011, 13, 50878, 50878, 1743, 472, 295, 264, 721, 309, 775, 307, 300, 439, 24922, 2733, 1124, 366, 2058, 12340, 1228, 7006, 51320, 51320, 20004, 43430, 13, 51395, 51395, 407, 754, 1673, 291, 366, 13460, 257, 8858, 857, 24922, 11, 498, 264, 560, 20411, 307, 264, 1230, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.15471039048160415, "compression_ratio": 1.5416666666666667, "no_caption_prob": 1.2218431038490962e-05}, {"id": 669, "seek": 278076, "start": 2801.38, "end": 2807.92, "text": " So even though you are representing a 32 bit integer, if the int literal is the number", "tokens": [50364, 457, 2673, 309, 311, 337, 17480, 11, 45592, 11, 47892, 8568, 11, 300, 1333, 295, 1507, 13, 50652, 50652, 583, 264, 3539, 9573, 10884, 19160, 7877, 307, 17434, 293, 309, 307, 588, 18011, 13, 50878, 50878, 1743, 472, 295, 264, 721, 309, 775, 307, 300, 439, 24922, 2733, 1124, 366, 2058, 12340, 1228, 7006, 51320, 51320, 20004, 43430, 13, 51395, 51395, 407, 754, 1673, 291, 366, 13460, 257, 8858, 857, 24922, 11, 498, 264, 560, 20411, 307, 264, 1230, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.15471039048160415, "compression_ratio": 1.5416666666666667, "no_caption_prob": 1.2218431038490962e-05}, {"id": 670, "seek": 280792, "start": 2807.92, "end": 2811.92, "text": " 10, it only takes up eight bits in the WebAssembly output.", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 671, "seek": 280792, "start": 2811.92, "end": 2816.44, "text": " So it's a very, very dense and optimized for size format.", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 672, "seek": 280792, "start": 2816.44, "end": 2817.44, "text": " That's huge.", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 673, "seek": 280792, "start": 2817.44, "end": 2821.48, "text": " I mean, the tiny bundle size potential is huge.", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 674, "seek": 280792, "start": 2821.48, "end": 2832.14, "text": " Well, or tiny, I don't know, but it's, that could be just as interesting as any performance", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 675, "seek": 280792, "start": 2832.14, "end": 2833.14, "text": " gains there.", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 676, "seek": 280792, "start": 2833.14, "end": 2835.08, "text": " So that's, that is super interesting.", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 677, "seek": 280792, "start": 2835.08, "end": 2836.88, "text": " Yeah, it's super interesting.", "tokens": [50364, 1266, 11, 309, 787, 2516, 493, 3180, 9239, 294, 264, 9573, 10884, 19160, 5598, 13, 50564, 50564, 407, 309, 311, 257, 588, 11, 588, 18011, 293, 26941, 337, 2744, 7877, 13, 50790, 50790, 663, 311, 2603, 13, 50840, 50840, 286, 914, 11, 264, 5870, 24438, 2744, 3995, 307, 2603, 13, 51042, 51042, 1042, 11, 420, 5870, 11, 286, 500, 380, 458, 11, 457, 309, 311, 11, 300, 727, 312, 445, 382, 1880, 382, 604, 3389, 51575, 51575, 16823, 456, 13, 51625, 51625, 407, 300, 311, 11, 300, 307, 1687, 1880, 13, 51722, 51722, 865, 11, 309, 311, 1687, 1880, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16744215671832746, "compression_ratio": 1.5981735159817352, "no_caption_prob": 5.143732778378762e-05}, {"id": 678, "seek": 283688, "start": 2836.88, "end": 2841.0, "text": " But of course, like Brian Carroll has been working on this for years and I don't think", "tokens": [50364, 583, 295, 1164, 11, 411, 10765, 48456, 575, 668, 1364, 322, 341, 337, 924, 293, 286, 500, 380, 519, 50570, 50570, 307, 1998, 281, 411, 257, 4265, 1919, 31958, 11, 597, 733, 295, 1709, 281, 855, 300, 11, 291, 458, 11, 50892, 50892, 9573, 10884, 19160, 575, 257, 688, 295, 3995, 5311, 11, 457, 1364, 365, 309, 307, 588, 2252, 13, 51210, 51210, 1042, 406, 2252, 11, 457, 588, 565, 19867, 13, 51334, 51334, 400, 286, 519, 365, 264, 2190, 1785, 295, 264, 31958, 11, 291, 576, 362, 281, 360, 257, 688, 295, 589, 51560, 51560, 281, 483, 4992, 1998, 281, 437, 10765, 48456, 575, 658, 2614, 965, 13, 51768, 51768, 7021, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16343794928656685, "compression_ratio": 1.709090909090909, "no_caption_prob": 1.863075522123836e-05}, {"id": 679, "seek": 283688, "start": 2841.0, "end": 2847.44, "text": " is close to like a production ready compiler, which kind of goes to show that, you know,", "tokens": [50364, 583, 295, 1164, 11, 411, 10765, 48456, 575, 668, 1364, 322, 341, 337, 924, 293, 286, 500, 380, 519, 50570, 50570, 307, 1998, 281, 411, 257, 4265, 1919, 31958, 11, 597, 733, 295, 1709, 281, 855, 300, 11, 291, 458, 11, 50892, 50892, 9573, 10884, 19160, 575, 257, 688, 295, 3995, 5311, 11, 457, 1364, 365, 309, 307, 588, 2252, 13, 51210, 51210, 1042, 406, 2252, 11, 457, 588, 565, 19867, 13, 51334, 51334, 400, 286, 519, 365, 264, 2190, 1785, 295, 264, 31958, 11, 291, 576, 362, 281, 360, 257, 688, 295, 589, 51560, 51560, 281, 483, 4992, 1998, 281, 437, 10765, 48456, 575, 658, 2614, 965, 13, 51768, 51768, 7021, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16343794928656685, "compression_ratio": 1.709090909090909, "no_caption_prob": 1.863075522123836e-05}, {"id": 680, "seek": 283688, "start": 2847.44, "end": 2853.8, "text": " WebAssembly has a lot of potential benefits, but working with it is very difficult.", "tokens": [50364, 583, 295, 1164, 11, 411, 10765, 48456, 575, 668, 1364, 322, 341, 337, 924, 293, 286, 500, 380, 519, 50570, 50570, 307, 1998, 281, 411, 257, 4265, 1919, 31958, 11, 597, 733, 295, 1709, 281, 855, 300, 11, 291, 458, 11, 50892, 50892, 9573, 10884, 19160, 575, 257, 688, 295, 3995, 5311, 11, 457, 1364, 365, 309, 307, 588, 2252, 13, 51210, 51210, 1042, 406, 2252, 11, 457, 588, 565, 19867, 13, 51334, 51334, 400, 286, 519, 365, 264, 2190, 1785, 295, 264, 31958, 11, 291, 576, 362, 281, 360, 257, 688, 295, 589, 51560, 51560, 281, 483, 4992, 1998, 281, 437, 10765, 48456, 575, 658, 2614, 965, 13, 51768, 51768, 7021, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16343794928656685, "compression_ratio": 1.709090909090909, "no_caption_prob": 1.863075522123836e-05}, {"id": 681, "seek": 283688, "start": 2853.8, "end": 2856.28, "text": " Well not difficult, but very time consuming.", "tokens": [50364, 583, 295, 1164, 11, 411, 10765, 48456, 575, 668, 1364, 322, 341, 337, 924, 293, 286, 500, 380, 519, 50570, 50570, 307, 1998, 281, 411, 257, 4265, 1919, 31958, 11, 597, 733, 295, 1709, 281, 855, 300, 11, 291, 458, 11, 50892, 50892, 9573, 10884, 19160, 575, 257, 688, 295, 3995, 5311, 11, 457, 1364, 365, 309, 307, 588, 2252, 13, 51210, 51210, 1042, 406, 2252, 11, 457, 588, 565, 19867, 13, 51334, 51334, 400, 286, 519, 365, 264, 2190, 1785, 295, 264, 31958, 11, 291, 576, 362, 281, 360, 257, 688, 295, 589, 51560, 51560, 281, 483, 4992, 1998, 281, 437, 10765, 48456, 575, 658, 2614, 965, 13, 51768, 51768, 7021, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16343794928656685, "compression_ratio": 1.709090909090909, "no_caption_prob": 1.863075522123836e-05}, {"id": 682, "seek": 283688, "start": 2856.28, "end": 2860.8, "text": " And I think with the current state of the compiler, you would have to do a lot of work", "tokens": [50364, 583, 295, 1164, 11, 411, 10765, 48456, 575, 668, 1364, 322, 341, 337, 924, 293, 286, 500, 380, 519, 50570, 50570, 307, 1998, 281, 411, 257, 4265, 1919, 31958, 11, 597, 733, 295, 1709, 281, 855, 300, 11, 291, 458, 11, 50892, 50892, 9573, 10884, 19160, 575, 257, 688, 295, 3995, 5311, 11, 457, 1364, 365, 309, 307, 588, 2252, 13, 51210, 51210, 1042, 406, 2252, 11, 457, 588, 565, 19867, 13, 51334, 51334, 400, 286, 519, 365, 264, 2190, 1785, 295, 264, 31958, 11, 291, 576, 362, 281, 360, 257, 688, 295, 589, 51560, 51560, 281, 483, 4992, 1998, 281, 437, 10765, 48456, 575, 658, 2614, 965, 13, 51768, 51768, 7021, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16343794928656685, "compression_ratio": 1.709090909090909, "no_caption_prob": 1.863075522123836e-05}, {"id": 683, "seek": 283688, "start": 2860.8, "end": 2864.96, "text": " to get anywhere close to what Brian Carroll has got running today.", "tokens": [50364, 583, 295, 1164, 11, 411, 10765, 48456, 575, 668, 1364, 322, 341, 337, 924, 293, 286, 500, 380, 519, 50570, 50570, 307, 1998, 281, 411, 257, 4265, 1919, 31958, 11, 597, 733, 295, 1709, 281, 855, 300, 11, 291, 458, 11, 50892, 50892, 9573, 10884, 19160, 575, 257, 688, 295, 3995, 5311, 11, 457, 1364, 365, 309, 307, 588, 2252, 13, 51210, 51210, 1042, 406, 2252, 11, 457, 588, 565, 19867, 13, 51334, 51334, 400, 286, 519, 365, 264, 2190, 1785, 295, 264, 31958, 11, 291, 576, 362, 281, 360, 257, 688, 295, 589, 51560, 51560, 281, 483, 4992, 1998, 281, 437, 10765, 48456, 575, 658, 2614, 965, 13, 51768, 51768, 7021, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16343794928656685, "compression_ratio": 1.709090909090909, "no_caption_prob": 1.863075522123836e-05}, {"id": 684, "seek": 283688, "start": 2864.96, "end": 2865.96, "text": " Absolutely.", "tokens": [50364, 583, 295, 1164, 11, 411, 10765, 48456, 575, 668, 1364, 322, 341, 337, 924, 293, 286, 500, 380, 519, 50570, 50570, 307, 1998, 281, 411, 257, 4265, 1919, 31958, 11, 597, 733, 295, 1709, 281, 855, 300, 11, 291, 458, 11, 50892, 50892, 9573, 10884, 19160, 575, 257, 688, 295, 3995, 5311, 11, 457, 1364, 365, 309, 307, 588, 2252, 13, 51210, 51210, 1042, 406, 2252, 11, 457, 588, 565, 19867, 13, 51334, 51334, 400, 286, 519, 365, 264, 2190, 1785, 295, 264, 31958, 11, 291, 576, 362, 281, 360, 257, 688, 295, 589, 51560, 51560, 281, 483, 4992, 1998, 281, 437, 10765, 48456, 575, 658, 2614, 965, 13, 51768, 51768, 7021, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16343794928656685, "compression_ratio": 1.709090909090909, "no_caption_prob": 1.863075522123836e-05}, {"id": 685, "seek": 286596, "start": 2865.96, "end": 2870.8, "text": " And one thing that's easy to do, not easy, one thing that's important to keep in mind", "tokens": [50364, 400, 472, 551, 300, 311, 1858, 281, 360, 11, 406, 1858, 11, 472, 551, 300, 311, 1021, 281, 1066, 294, 1575, 50606, 50606, 307, 300, 264, 2699, 76, 31958, 307, 406, 364, 40425, 31958, 13, 50804, 50804, 2754, 1673, 309, 2010, 13834, 428, 3089, 11, 309, 1177, 380, 767, 18340, 300, 1589, 281, 264, 3089, 51103, 51103, 5125, 3233, 13, 51175, 51175, 407, 456, 366, 257, 2952, 295, 721, 291, 576, 362, 281, 3470, 420, 1209, 8700, 11, 286, 2041, 307, 257, 1101, 51476, 51476, 1349, 13, 51526, 51526, 1743, 456, 11, 291, 576, 362, 281, 909, 257, 2952, 295, 1209, 8758, 281, 264, 2699, 76, 31958, 294, 1668, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1214065720549727, "compression_ratio": 1.7933884297520661, "no_caption_prob": 1.0952418961096555e-05}, {"id": 686, "seek": 286596, "start": 2870.8, "end": 2874.76, "text": " is that the Elm compiler is not an optimizing compiler.", "tokens": [50364, 400, 472, 551, 300, 311, 1858, 281, 360, 11, 406, 1858, 11, 472, 551, 300, 311, 1021, 281, 1066, 294, 1575, 50606, 50606, 307, 300, 264, 2699, 76, 31958, 307, 406, 364, 40425, 31958, 13, 50804, 50804, 2754, 1673, 309, 2010, 13834, 428, 3089, 11, 309, 1177, 380, 767, 18340, 300, 1589, 281, 264, 3089, 51103, 51103, 5125, 3233, 13, 51175, 51175, 407, 456, 366, 257, 2952, 295, 721, 291, 576, 362, 281, 3470, 420, 1209, 8700, 11, 286, 2041, 307, 257, 1101, 51476, 51476, 1349, 13, 51526, 51526, 1743, 456, 11, 291, 576, 362, 281, 909, 257, 2952, 295, 1209, 8758, 281, 264, 2699, 76, 31958, 294, 1668, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1214065720549727, "compression_ratio": 1.7933884297520661, "no_caption_prob": 1.0952418961096555e-05}, {"id": 687, "seek": 286596, "start": 2874.76, "end": 2880.7400000000002, "text": " Even though it type checks your code, it doesn't actually retain that information to the code", "tokens": [50364, 400, 472, 551, 300, 311, 1858, 281, 360, 11, 406, 1858, 11, 472, 551, 300, 311, 1021, 281, 1066, 294, 1575, 50606, 50606, 307, 300, 264, 2699, 76, 31958, 307, 406, 364, 40425, 31958, 13, 50804, 50804, 2754, 1673, 309, 2010, 13834, 428, 3089, 11, 309, 1177, 380, 767, 18340, 300, 1589, 281, 264, 3089, 51103, 51103, 5125, 3233, 13, 51175, 51175, 407, 456, 366, 257, 2952, 295, 721, 291, 576, 362, 281, 3470, 420, 1209, 8700, 11, 286, 2041, 307, 257, 1101, 51476, 51476, 1349, 13, 51526, 51526, 1743, 456, 11, 291, 576, 362, 281, 909, 257, 2952, 295, 1209, 8758, 281, 264, 2699, 76, 31958, 294, 1668, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1214065720549727, "compression_ratio": 1.7933884297520661, "no_caption_prob": 1.0952418961096555e-05}, {"id": 688, "seek": 286596, "start": 2880.7400000000002, "end": 2882.18, "text": " generation stage.", "tokens": [50364, 400, 472, 551, 300, 311, 1858, 281, 360, 11, 406, 1858, 11, 472, 551, 300, 311, 1021, 281, 1066, 294, 1575, 50606, 50606, 307, 300, 264, 2699, 76, 31958, 307, 406, 364, 40425, 31958, 13, 50804, 50804, 2754, 1673, 309, 2010, 13834, 428, 3089, 11, 309, 1177, 380, 767, 18340, 300, 1589, 281, 264, 3089, 51103, 51103, 5125, 3233, 13, 51175, 51175, 407, 456, 366, 257, 2952, 295, 721, 291, 576, 362, 281, 3470, 420, 1209, 8700, 11, 286, 2041, 307, 257, 1101, 51476, 51476, 1349, 13, 51526, 51526, 1743, 456, 11, 291, 576, 362, 281, 909, 257, 2952, 295, 1209, 8758, 281, 264, 2699, 76, 31958, 294, 1668, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1214065720549727, "compression_ratio": 1.7933884297520661, "no_caption_prob": 1.0952418961096555e-05}, {"id": 689, "seek": 286596, "start": 2882.18, "end": 2888.2, "text": " So there are a ton of things you would have to improve or complicate, I guess is a better", "tokens": [50364, 400, 472, 551, 300, 311, 1858, 281, 360, 11, 406, 1858, 11, 472, 551, 300, 311, 1021, 281, 1066, 294, 1575, 50606, 50606, 307, 300, 264, 2699, 76, 31958, 307, 406, 364, 40425, 31958, 13, 50804, 50804, 2754, 1673, 309, 2010, 13834, 428, 3089, 11, 309, 1177, 380, 767, 18340, 300, 1589, 281, 264, 3089, 51103, 51103, 5125, 3233, 13, 51175, 51175, 407, 456, 366, 257, 2952, 295, 721, 291, 576, 362, 281, 3470, 420, 1209, 8700, 11, 286, 2041, 307, 257, 1101, 51476, 51476, 1349, 13, 51526, 51526, 1743, 456, 11, 291, 576, 362, 281, 909, 257, 2952, 295, 1209, 8758, 281, 264, 2699, 76, 31958, 294, 1668, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1214065720549727, "compression_ratio": 1.7933884297520661, "no_caption_prob": 1.0952418961096555e-05}, {"id": 690, "seek": 286596, "start": 2888.2, "end": 2889.2, "text": " word.", "tokens": [50364, 400, 472, 551, 300, 311, 1858, 281, 360, 11, 406, 1858, 11, 472, 551, 300, 311, 1021, 281, 1066, 294, 1575, 50606, 50606, 307, 300, 264, 2699, 76, 31958, 307, 406, 364, 40425, 31958, 13, 50804, 50804, 2754, 1673, 309, 2010, 13834, 428, 3089, 11, 309, 1177, 380, 767, 18340, 300, 1589, 281, 264, 3089, 51103, 51103, 5125, 3233, 13, 51175, 51175, 407, 456, 366, 257, 2952, 295, 721, 291, 576, 362, 281, 3470, 420, 1209, 8700, 11, 286, 2041, 307, 257, 1101, 51476, 51476, 1349, 13, 51526, 51526, 1743, 456, 11, 291, 576, 362, 281, 909, 257, 2952, 295, 1209, 8758, 281, 264, 2699, 76, 31958, 294, 1668, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1214065720549727, "compression_ratio": 1.7933884297520661, "no_caption_prob": 1.0952418961096555e-05}, {"id": 691, "seek": 286596, "start": 2889.2, "end": 2892.96, "text": " Like there, you would have to add a ton of complication to the Elm compiler in order", "tokens": [50364, 400, 472, 551, 300, 311, 1858, 281, 360, 11, 406, 1858, 11, 472, 551, 300, 311, 1021, 281, 1066, 294, 1575, 50606, 50606, 307, 300, 264, 2699, 76, 31958, 307, 406, 364, 40425, 31958, 13, 50804, 50804, 2754, 1673, 309, 2010, 13834, 428, 3089, 11, 309, 1177, 380, 767, 18340, 300, 1589, 281, 264, 3089, 51103, 51103, 5125, 3233, 13, 51175, 51175, 407, 456, 366, 257, 2952, 295, 721, 291, 576, 362, 281, 3470, 420, 1209, 8700, 11, 286, 2041, 307, 257, 1101, 51476, 51476, 1349, 13, 51526, 51526, 1743, 456, 11, 291, 576, 362, 281, 909, 257, 2952, 295, 1209, 8758, 281, 264, 2699, 76, 31958, 294, 1668, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1214065720549727, "compression_ratio": 1.7933884297520661, "no_caption_prob": 1.0952418961096555e-05}, {"id": 692, "seek": 289296, "start": 2892.96, "end": 2899.64, "text": " to be able to output WebAssembly, and that is very likely to come at a cost to compiler", "tokens": [50364, 281, 312, 1075, 281, 5598, 9573, 10884, 19160, 11, 293, 300, 307, 588, 3700, 281, 808, 412, 257, 2063, 281, 31958, 50698, 50698, 3073, 13, 50748, 50748, 1079, 11, 597, 22613, 575, 1822, 372, 2456, 356, 26941, 11, 286, 519, 11611, 538, 445, 12245, 264, 2372, 51118, 51118, 295, 4675, 300, 311, 4678, 926, 293, 300, 576, 312, 4497, 4675, 300, 291, 434, 8437, 926, 13, 51400, 51400, 407, 1338, 11, 309, 576, 362, 257, 2063, 337, 3389, 13, 51504, 51504, 407, 1338, 11, 309, 311, 406, 411, 9573, 10884, 19160, 307, 1880, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15502295202138472, "compression_ratio": 1.6277056277056277, "no_caption_prob": 8.939442523114849e-06}, {"id": 693, "seek": 289296, "start": 2899.64, "end": 2900.64, "text": " speed.", "tokens": [50364, 281, 312, 1075, 281, 5598, 9573, 10884, 19160, 11, 293, 300, 307, 588, 3700, 281, 808, 412, 257, 2063, 281, 31958, 50698, 50698, 3073, 13, 50748, 50748, 1079, 11, 597, 22613, 575, 1822, 372, 2456, 356, 26941, 11, 286, 519, 11611, 538, 445, 12245, 264, 2372, 51118, 51118, 295, 4675, 300, 311, 4678, 926, 293, 300, 576, 312, 4497, 4675, 300, 291, 434, 8437, 926, 13, 51400, 51400, 407, 1338, 11, 309, 576, 362, 257, 2063, 337, 3389, 13, 51504, 51504, 407, 1338, 11, 309, 311, 406, 411, 9573, 10884, 19160, 307, 1880, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15502295202138472, "compression_ratio": 1.6277056277056277, "no_caption_prob": 8.939442523114849e-06}, {"id": 694, "seek": 289296, "start": 2900.64, "end": 2908.04, "text": " Yes, which Evan has painstakingly optimized, I think largely by just reducing the amount", "tokens": [50364, 281, 312, 1075, 281, 5598, 9573, 10884, 19160, 11, 293, 300, 307, 588, 3700, 281, 808, 412, 257, 2063, 281, 31958, 50698, 50698, 3073, 13, 50748, 50748, 1079, 11, 597, 22613, 575, 1822, 372, 2456, 356, 26941, 11, 286, 519, 11611, 538, 445, 12245, 264, 2372, 51118, 51118, 295, 4675, 300, 311, 4678, 926, 293, 300, 576, 312, 4497, 4675, 300, 291, 434, 8437, 926, 13, 51400, 51400, 407, 1338, 11, 309, 576, 362, 257, 2063, 337, 3389, 13, 51504, 51504, 407, 1338, 11, 309, 311, 406, 411, 9573, 10884, 19160, 307, 1880, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15502295202138472, "compression_ratio": 1.6277056277056277, "no_caption_prob": 8.939442523114849e-06}, {"id": 695, "seek": 289296, "start": 2908.04, "end": 2913.68, "text": " of memory that's passed around and that would be additional memory that you're passing around.", "tokens": [50364, 281, 312, 1075, 281, 5598, 9573, 10884, 19160, 11, 293, 300, 307, 588, 3700, 281, 808, 412, 257, 2063, 281, 31958, 50698, 50698, 3073, 13, 50748, 50748, 1079, 11, 597, 22613, 575, 1822, 372, 2456, 356, 26941, 11, 286, 519, 11611, 538, 445, 12245, 264, 2372, 51118, 51118, 295, 4675, 300, 311, 4678, 926, 293, 300, 576, 312, 4497, 4675, 300, 291, 434, 8437, 926, 13, 51400, 51400, 407, 1338, 11, 309, 576, 362, 257, 2063, 337, 3389, 13, 51504, 51504, 407, 1338, 11, 309, 311, 406, 411, 9573, 10884, 19160, 307, 1880, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15502295202138472, "compression_ratio": 1.6277056277056277, "no_caption_prob": 8.939442523114849e-06}, {"id": 696, "seek": 289296, "start": 2913.68, "end": 2915.76, "text": " So yeah, it would have a cost for performance.", "tokens": [50364, 281, 312, 1075, 281, 5598, 9573, 10884, 19160, 11, 293, 300, 307, 588, 3700, 281, 808, 412, 257, 2063, 281, 31958, 50698, 50698, 3073, 13, 50748, 50748, 1079, 11, 597, 22613, 575, 1822, 372, 2456, 356, 26941, 11, 286, 519, 11611, 538, 445, 12245, 264, 2372, 51118, 51118, 295, 4675, 300, 311, 4678, 926, 293, 300, 576, 312, 4497, 4675, 300, 291, 434, 8437, 926, 13, 51400, 51400, 407, 1338, 11, 309, 576, 362, 257, 2063, 337, 3389, 13, 51504, 51504, 407, 1338, 11, 309, 311, 406, 411, 9573, 10884, 19160, 307, 1880, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15502295202138472, "compression_ratio": 1.6277056277056277, "no_caption_prob": 8.939442523114849e-06}, {"id": 697, "seek": 289296, "start": 2915.76, "end": 2920.84, "text": " So yeah, it's not like WebAssembly is interesting.", "tokens": [50364, 281, 312, 1075, 281, 5598, 9573, 10884, 19160, 11, 293, 300, 307, 588, 3700, 281, 808, 412, 257, 2063, 281, 31958, 50698, 50698, 3073, 13, 50748, 50748, 1079, 11, 597, 22613, 575, 1822, 372, 2456, 356, 26941, 11, 286, 519, 11611, 538, 445, 12245, 264, 2372, 51118, 51118, 295, 4675, 300, 311, 4678, 926, 293, 300, 576, 312, 4497, 4675, 300, 291, 434, 8437, 926, 13, 51400, 51400, 407, 1338, 11, 309, 576, 362, 257, 2063, 337, 3389, 13, 51504, 51504, 407, 1338, 11, 309, 311, 406, 411, 9573, 10884, 19160, 307, 1880, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.15502295202138472, "compression_ratio": 1.6277056277056277, "no_caption_prob": 8.939442523114849e-06}, {"id": 698, "seek": 292084, "start": 2920.84, "end": 2926.1600000000003, "text": " It is super interesting, but it's also, it's not easy.", "tokens": [50364, 467, 307, 1687, 1880, 11, 457, 309, 311, 611, 11, 309, 311, 406, 1858, 13, 50630, 50630, 400, 295, 1164, 11, 264, 15778, 575, 257, 688, 295, 36090, 11, 457, 309, 575, 257, 1002, 1508, 14150, 23960, 50965, 50965, 3094, 294, 293, 309, 307, 1238, 665, 412, 40425, 1090, 1496, 3089, 13, 51170, 51170, 407, 291, 2759, 380, 4725, 483, 1101, 3389, 13, 51336, 51336, 509, 486, 483, 257, 688, 295, 26566, 294, 15778, 728, 404, 13, 51499, 51499, 509, 576, 1391, 483, 4356, 11999, 11602, 11, 457, 281, 483, 456, 576, 312, 257, 2603, 2372, 295, 51808, 51808, 589, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11279889061337425, "compression_ratio": 1.656, "no_caption_prob": 3.5910041333409026e-05}, {"id": 699, "seek": 292084, "start": 2926.1600000000003, "end": 2932.86, "text": " And of course, the JavaScript has a lot of faults, but it has a world class garbage collector", "tokens": [50364, 467, 307, 1687, 1880, 11, 457, 309, 311, 611, 11, 309, 311, 406, 1858, 13, 50630, 50630, 400, 295, 1164, 11, 264, 15778, 575, 257, 688, 295, 36090, 11, 457, 309, 575, 257, 1002, 1508, 14150, 23960, 50965, 50965, 3094, 294, 293, 309, 307, 1238, 665, 412, 40425, 1090, 1496, 3089, 13, 51170, 51170, 407, 291, 2759, 380, 4725, 483, 1101, 3389, 13, 51336, 51336, 509, 486, 483, 257, 688, 295, 26566, 294, 15778, 728, 404, 13, 51499, 51499, 509, 576, 1391, 483, 4356, 11999, 11602, 11, 457, 281, 483, 456, 576, 312, 257, 2603, 2372, 295, 51808, 51808, 589, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11279889061337425, "compression_ratio": 1.656, "no_caption_prob": 3.5910041333409026e-05}, {"id": 700, "seek": 292084, "start": 2932.86, "end": 2936.96, "text": " built in and it is pretty good at optimizing high level code.", "tokens": [50364, 467, 307, 1687, 1880, 11, 457, 309, 311, 611, 11, 309, 311, 406, 1858, 13, 50630, 50630, 400, 295, 1164, 11, 264, 15778, 575, 257, 688, 295, 36090, 11, 457, 309, 575, 257, 1002, 1508, 14150, 23960, 50965, 50965, 3094, 294, 293, 309, 307, 1238, 665, 412, 40425, 1090, 1496, 3089, 13, 51170, 51170, 407, 291, 2759, 380, 4725, 483, 1101, 3389, 13, 51336, 51336, 509, 486, 483, 257, 688, 295, 26566, 294, 15778, 728, 404, 13, 51499, 51499, 509, 576, 1391, 483, 4356, 11999, 11602, 11, 457, 281, 483, 456, 576, 312, 257, 2603, 2372, 295, 51808, 51808, 589, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11279889061337425, "compression_ratio": 1.656, "no_caption_prob": 3.5910041333409026e-05}, {"id": 701, "seek": 292084, "start": 2936.96, "end": 2940.28, "text": " So you wouldn't necessarily get better performance.", "tokens": [50364, 467, 307, 1687, 1880, 11, 457, 309, 311, 611, 11, 309, 311, 406, 1858, 13, 50630, 50630, 400, 295, 1164, 11, 264, 15778, 575, 257, 688, 295, 36090, 11, 457, 309, 575, 257, 1002, 1508, 14150, 23960, 50965, 50965, 3094, 294, 293, 309, 307, 1238, 665, 412, 40425, 1090, 1496, 3089, 13, 51170, 51170, 407, 291, 2759, 380, 4725, 483, 1101, 3389, 13, 51336, 51336, 509, 486, 483, 257, 688, 295, 26566, 294, 15778, 728, 404, 13, 51499, 51499, 509, 576, 1391, 483, 4356, 11999, 11602, 11, 457, 281, 483, 456, 576, 312, 257, 2603, 2372, 295, 51808, 51808, 589, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11279889061337425, "compression_ratio": 1.656, "no_caption_prob": 3.5910041333409026e-05}, {"id": 702, "seek": 292084, "start": 2940.28, "end": 2943.54, "text": " You will get a lot of complications in JavaScript interop.", "tokens": [50364, 467, 307, 1687, 1880, 11, 457, 309, 311, 611, 11, 309, 311, 406, 1858, 13, 50630, 50630, 400, 295, 1164, 11, 264, 15778, 575, 257, 688, 295, 36090, 11, 457, 309, 575, 257, 1002, 1508, 14150, 23960, 50965, 50965, 3094, 294, 293, 309, 307, 1238, 665, 412, 40425, 1090, 1496, 3089, 13, 51170, 51170, 407, 291, 2759, 380, 4725, 483, 1101, 3389, 13, 51336, 51336, 509, 486, 483, 257, 688, 295, 26566, 294, 15778, 728, 404, 13, 51499, 51499, 509, 576, 1391, 483, 4356, 11999, 11602, 11, 457, 281, 483, 456, 576, 312, 257, 2603, 2372, 295, 51808, 51808, 589, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11279889061337425, "compression_ratio": 1.656, "no_caption_prob": 3.5910041333409026e-05}, {"id": 703, "seek": 292084, "start": 2943.54, "end": 2949.7200000000003, "text": " You would probably get smaller asset sizes, but to get there would be a huge amount of", "tokens": [50364, 467, 307, 1687, 1880, 11, 457, 309, 311, 611, 11, 309, 311, 406, 1858, 13, 50630, 50630, 400, 295, 1164, 11, 264, 15778, 575, 257, 688, 295, 36090, 11, 457, 309, 575, 257, 1002, 1508, 14150, 23960, 50965, 50965, 3094, 294, 293, 309, 307, 1238, 665, 412, 40425, 1090, 1496, 3089, 13, 51170, 51170, 407, 291, 2759, 380, 4725, 483, 1101, 3389, 13, 51336, 51336, 509, 486, 483, 257, 688, 295, 26566, 294, 15778, 728, 404, 13, 51499, 51499, 509, 576, 1391, 483, 4356, 11999, 11602, 11, 457, 281, 483, 456, 576, 312, 257, 2603, 2372, 295, 51808, 51808, 589, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11279889061337425, "compression_ratio": 1.656, "no_caption_prob": 3.5910041333409026e-05}, {"id": 704, "seek": 292084, "start": 2949.7200000000003, "end": 2950.7200000000003, "text": " work.", "tokens": [50364, 467, 307, 1687, 1880, 11, 457, 309, 311, 611, 11, 309, 311, 406, 1858, 13, 50630, 50630, 400, 295, 1164, 11, 264, 15778, 575, 257, 688, 295, 36090, 11, 457, 309, 575, 257, 1002, 1508, 14150, 23960, 50965, 50965, 3094, 294, 293, 309, 307, 1238, 665, 412, 40425, 1090, 1496, 3089, 13, 51170, 51170, 407, 291, 2759, 380, 4725, 483, 1101, 3389, 13, 51336, 51336, 509, 486, 483, 257, 688, 295, 26566, 294, 15778, 728, 404, 13, 51499, 51499, 509, 576, 1391, 483, 4356, 11999, 11602, 11, 457, 281, 483, 456, 576, 312, 257, 2603, 2372, 295, 51808, 51808, 589, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11279889061337425, "compression_ratio": 1.656, "no_caption_prob": 3.5910041333409026e-05}, {"id": 705, "seek": 295072, "start": 2950.72, "end": 2956.3599999999997, "text": " But it's not a clear improvement over what we have today.", "tokens": [50364, 583, 309, 311, 406, 257, 1850, 10444, 670, 437, 321, 362, 965, 13, 50646, 50646, 865, 13, 50696, 50696, 1042, 11, 472, 295, 264, 721, 300, 575, 1009, 24597, 385, 307, 411, 562, 291, 393, 362, 257, 24709, 300, 51046, 51046, 291, 445, 4748, 3105, 264, 636, 291, 434, 1364, 293, 309, 575, 2603, 16602, 13, 51316, 51316, 1743, 337, 1365, 11, 286, 1009, 1352, 309, 534, 1880, 577, 291, 747, 2699, 970, 347, 293, 341, 3670, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17660395304361978, "compression_ratio": 1.5023041474654377, "no_caption_prob": 0.0001608868333278224}, {"id": 706, "seek": 295072, "start": 2956.3599999999997, "end": 2957.3599999999997, "text": " Yeah.", "tokens": [50364, 583, 309, 311, 406, 257, 1850, 10444, 670, 437, 321, 362, 965, 13, 50646, 50646, 865, 13, 50696, 50696, 1042, 11, 472, 295, 264, 721, 300, 575, 1009, 24597, 385, 307, 411, 562, 291, 393, 362, 257, 24709, 300, 51046, 51046, 291, 445, 4748, 3105, 264, 636, 291, 434, 1364, 293, 309, 575, 2603, 16602, 13, 51316, 51316, 1743, 337, 1365, 11, 286, 1009, 1352, 309, 534, 1880, 577, 291, 747, 2699, 970, 347, 293, 341, 3670, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17660395304361978, "compression_ratio": 1.5023041474654377, "no_caption_prob": 0.0001608868333278224}, {"id": 707, "seek": 295072, "start": 2957.3599999999997, "end": 2964.3599999999997, "text": " Well, one of the things that has always fascinated me is like when you can have a paradigm that", "tokens": [50364, 583, 309, 311, 406, 257, 1850, 10444, 670, 437, 321, 362, 965, 13, 50646, 50646, 865, 13, 50696, 50696, 1042, 11, 472, 295, 264, 721, 300, 575, 1009, 24597, 385, 307, 411, 562, 291, 393, 362, 257, 24709, 300, 51046, 51046, 291, 445, 4748, 3105, 264, 636, 291, 434, 1364, 293, 309, 575, 2603, 16602, 13, 51316, 51316, 1743, 337, 1365, 11, 286, 1009, 1352, 309, 534, 1880, 577, 291, 747, 2699, 970, 347, 293, 341, 3670, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17660395304361978, "compression_ratio": 1.5023041474654377, "no_caption_prob": 0.0001608868333278224}, {"id": 708, "seek": 295072, "start": 2964.3599999999997, "end": 2969.7599999999998, "text": " you just slightly changed the way you're working and it has huge implications.", "tokens": [50364, 583, 309, 311, 406, 257, 1850, 10444, 670, 437, 321, 362, 965, 13, 50646, 50646, 865, 13, 50696, 50696, 1042, 11, 472, 295, 264, 721, 300, 575, 1009, 24597, 385, 307, 411, 562, 291, 393, 362, 257, 24709, 300, 51046, 51046, 291, 445, 4748, 3105, 264, 636, 291, 434, 1364, 293, 309, 575, 2603, 16602, 13, 51316, 51316, 1743, 337, 1365, 11, 286, 1009, 1352, 309, 534, 1880, 577, 291, 747, 2699, 970, 347, 293, 341, 3670, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17660395304361978, "compression_ratio": 1.5023041474654377, "no_caption_prob": 0.0001608868333278224}, {"id": 709, "seek": 295072, "start": 2969.7599999999998, "end": 2977.16, "text": " Like for example, I always found it really interesting how you take Elixir and this web", "tokens": [50364, 583, 309, 311, 406, 257, 1850, 10444, 670, 437, 321, 362, 965, 13, 50646, 50646, 865, 13, 50696, 50696, 1042, 11, 472, 295, 264, 721, 300, 575, 1009, 24597, 385, 307, 411, 562, 291, 393, 362, 257, 24709, 300, 51046, 51046, 291, 445, 4748, 3105, 264, 636, 291, 434, 1364, 293, 309, 575, 2603, 16602, 13, 51316, 51316, 1743, 337, 1365, 11, 286, 1009, 1352, 309, 534, 1880, 577, 291, 747, 2699, 970, 347, 293, 341, 3670, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17660395304361978, "compression_ratio": 1.5023041474654377, "no_caption_prob": 0.0001608868333278224}, {"id": 710, "seek": 297716, "start": 2977.16, "end": 2983.44, "text": " framework Phoenix and simply by having this one property of immutability, which actually", "tokens": [50364, 8388, 18383, 293, 2935, 538, 1419, 341, 472, 4707, 295, 3397, 325, 2310, 11, 597, 767, 50678, 50678, 309, 3417, 6457, 2531, 281, 3579, 746, 411, 19907, 13, 50860, 50860, 509, 393, 754, 12970, 471, 9102, 293, 833, 264, 13376, 309, 311, 1228, 3397, 32148, 1412, 11, 457, 309, 393, 51196, 51196, 841, 588, 4963, 337, 2618, 567, 311, 1143, 281, 3579, 19907, 13, 51346, 51346, 583, 291, 747, 19907, 322, 48526, 293, 2699, 970, 347, 18383, 293, 5800, 291, 393, 483, 341, 4651, 5308, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.12245645415916871, "compression_ratio": 1.6218487394957983, "no_caption_prob": 2.7534713808563538e-05}, {"id": 711, "seek": 297716, "start": 2983.44, "end": 2987.08, "text": " it feels fairly similar to writing something like Ruby.", "tokens": [50364, 8388, 18383, 293, 2935, 538, 1419, 341, 472, 4707, 295, 3397, 325, 2310, 11, 597, 767, 50678, 50678, 309, 3417, 6457, 2531, 281, 3579, 746, 411, 19907, 13, 50860, 50860, 509, 393, 754, 12970, 471, 9102, 293, 833, 264, 13376, 309, 311, 1228, 3397, 32148, 1412, 11, 457, 309, 393, 51196, 51196, 841, 588, 4963, 337, 2618, 567, 311, 1143, 281, 3579, 19907, 13, 51346, 51346, 583, 291, 747, 19907, 322, 48526, 293, 2699, 970, 347, 18383, 293, 5800, 291, 393, 483, 341, 4651, 5308, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.12245645415916871, "compression_ratio": 1.6218487394957983, "no_caption_prob": 2.7534713808563538e-05}, {"id": 712, "seek": 297716, "start": 2987.08, "end": 2993.7999999999997, "text": " You can even rebind variables and under the hood it's using immutable data, but it can", "tokens": [50364, 8388, 18383, 293, 2935, 538, 1419, 341, 472, 4707, 295, 3397, 325, 2310, 11, 597, 767, 50678, 50678, 309, 3417, 6457, 2531, 281, 3579, 746, 411, 19907, 13, 50860, 50860, 509, 393, 754, 12970, 471, 9102, 293, 833, 264, 13376, 309, 311, 1228, 3397, 32148, 1412, 11, 457, 309, 393, 51196, 51196, 841, 588, 4963, 337, 2618, 567, 311, 1143, 281, 3579, 19907, 13, 51346, 51346, 583, 291, 747, 19907, 322, 48526, 293, 2699, 970, 347, 18383, 293, 5800, 291, 393, 483, 341, 4651, 5308, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.12245645415916871, "compression_ratio": 1.6218487394957983, "no_caption_prob": 2.7534713808563538e-05}, {"id": 713, "seek": 297716, "start": 2993.7999999999997, "end": 2996.7999999999997, "text": " feel very familiar for somebody who's used to writing Ruby.", "tokens": [50364, 8388, 18383, 293, 2935, 538, 1419, 341, 472, 4707, 295, 3397, 325, 2310, 11, 597, 767, 50678, 50678, 309, 3417, 6457, 2531, 281, 3579, 746, 411, 19907, 13, 50860, 50860, 509, 393, 754, 12970, 471, 9102, 293, 833, 264, 13376, 309, 311, 1228, 3397, 32148, 1412, 11, 457, 309, 393, 51196, 51196, 841, 588, 4963, 337, 2618, 567, 311, 1143, 281, 3579, 19907, 13, 51346, 51346, 583, 291, 747, 19907, 322, 48526, 293, 2699, 970, 347, 18383, 293, 5800, 291, 393, 483, 341, 4651, 5308, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.12245645415916871, "compression_ratio": 1.6218487394957983, "no_caption_prob": 2.7534713808563538e-05}, {"id": 714, "seek": 297716, "start": 2996.7999999999997, "end": 3003.3599999999997, "text": " But you take Ruby on Rails and Elixir Phoenix and suddenly you can get this incredible request", "tokens": [50364, 8388, 18383, 293, 2935, 538, 1419, 341, 472, 4707, 295, 3397, 325, 2310, 11, 597, 767, 50678, 50678, 309, 3417, 6457, 2531, 281, 3579, 746, 411, 19907, 13, 50860, 50860, 509, 393, 754, 12970, 471, 9102, 293, 833, 264, 13376, 309, 311, 1228, 3397, 32148, 1412, 11, 457, 309, 393, 51196, 51196, 841, 588, 4963, 337, 2618, 567, 311, 1143, 281, 3579, 19907, 13, 51346, 51346, 583, 291, 747, 19907, 322, 48526, 293, 2699, 970, 347, 18383, 293, 5800, 291, 393, 483, 341, 4651, 5308, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.12245645415916871, "compression_ratio": 1.6218487394957983, "no_caption_prob": 2.7534713808563538e-05}, {"id": 715, "seek": 300336, "start": 3003.36, "end": 3009.8, "text": " throughput because the optimizations they can perform under the hood largely with trivial", "tokens": [50364, 44629, 570, 264, 5028, 14455, 436, 393, 2042, 833, 264, 13376, 11611, 365, 26703, 50686, 50686, 8952, 2144, 13, 50802, 50802, 509, 362, 341, 3397, 325, 2310, 300, 291, 393, 10687, 322, 293, 5800, 341, 588, 7595, 1154, 51072, 51072, 295, 8952, 2144, 11, 597, 7029, 257, 688, 295, 589, 11, 3009, 538, 264, 3861, 10754, 51438, 51438, 281, 3067, 577, 281, 11750, 2073, 4675, 13, 51630, 51630, 3950, 2740, 5800, 439, 445, 352, 1314, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1287777304649353, "compression_ratio": 1.6123348017621146, "no_caption_prob": 1.4285101315181237e-05}, {"id": 716, "seek": 300336, "start": 3009.8, "end": 3012.1200000000003, "text": " parallelization.", "tokens": [50364, 44629, 570, 264, 5028, 14455, 436, 393, 2042, 833, 264, 13376, 11611, 365, 26703, 50686, 50686, 8952, 2144, 13, 50802, 50802, 509, 362, 341, 3397, 325, 2310, 300, 291, 393, 10687, 322, 293, 5800, 341, 588, 7595, 1154, 51072, 51072, 295, 8952, 2144, 11, 597, 7029, 257, 688, 295, 589, 11, 3009, 538, 264, 3861, 10754, 51438, 51438, 281, 3067, 577, 281, 11750, 2073, 4675, 13, 51630, 51630, 3950, 2740, 5800, 439, 445, 352, 1314, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1287777304649353, "compression_ratio": 1.6123348017621146, "no_caption_prob": 1.4285101315181237e-05}, {"id": 717, "seek": 300336, "start": 3012.1200000000003, "end": 3017.52, "text": " You have this immutability that you can rely on and suddenly this very challenging problem", "tokens": [50364, 44629, 570, 264, 5028, 14455, 436, 393, 2042, 833, 264, 13376, 11611, 365, 26703, 50686, 50686, 8952, 2144, 13, 50802, 50802, 509, 362, 341, 3397, 325, 2310, 300, 291, 393, 10687, 322, 293, 5800, 341, 588, 7595, 1154, 51072, 51072, 295, 8952, 2144, 11, 597, 7029, 257, 688, 295, 589, 11, 3009, 538, 264, 3861, 10754, 51438, 51438, 281, 3067, 577, 281, 11750, 2073, 4675, 13, 51630, 51630, 3950, 2740, 5800, 439, 445, 352, 1314, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1287777304649353, "compression_ratio": 1.6123348017621146, "no_caption_prob": 1.4285101315181237e-05}, {"id": 718, "seek": 300336, "start": 3017.52, "end": 3024.84, "text": " of parallelization, which requires a lot of work, including by the application developer", "tokens": [50364, 44629, 570, 264, 5028, 14455, 436, 393, 2042, 833, 264, 13376, 11611, 365, 26703, 50686, 50686, 8952, 2144, 13, 50802, 50802, 509, 362, 341, 3397, 325, 2310, 300, 291, 393, 10687, 322, 293, 5800, 341, 588, 7595, 1154, 51072, 51072, 295, 8952, 2144, 11, 597, 7029, 257, 688, 295, 589, 11, 3009, 538, 264, 3861, 10754, 51438, 51438, 281, 3067, 577, 281, 11750, 2073, 4675, 13, 51630, 51630, 3950, 2740, 5800, 439, 445, 352, 1314, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1287777304649353, "compression_ratio": 1.6123348017621146, "no_caption_prob": 1.4285101315181237e-05}, {"id": 719, "seek": 300336, "start": 3024.84, "end": 3028.6800000000003, "text": " to manage how to safely share memory.", "tokens": [50364, 44629, 570, 264, 5028, 14455, 436, 393, 2042, 833, 264, 13376, 11611, 365, 26703, 50686, 50686, 8952, 2144, 13, 50802, 50802, 509, 362, 341, 3397, 325, 2310, 300, 291, 393, 10687, 322, 293, 5800, 341, 588, 7595, 1154, 51072, 51072, 295, 8952, 2144, 11, 597, 7029, 257, 688, 295, 589, 11, 3009, 538, 264, 3861, 10754, 51438, 51438, 281, 3067, 577, 281, 11750, 2073, 4675, 13, 51630, 51630, 3950, 2740, 5800, 439, 445, 352, 1314, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1287777304649353, "compression_ratio": 1.6123348017621146, "no_caption_prob": 1.4285101315181237e-05}, {"id": 720, "seek": 300336, "start": 3028.6800000000003, "end": 3031.2400000000002, "text": " Those problems suddenly all just go away.", "tokens": [50364, 44629, 570, 264, 5028, 14455, 436, 393, 2042, 833, 264, 13376, 11611, 365, 26703, 50686, 50686, 8952, 2144, 13, 50802, 50802, 509, 362, 341, 3397, 325, 2310, 300, 291, 393, 10687, 322, 293, 5800, 341, 588, 7595, 1154, 51072, 51072, 295, 8952, 2144, 11, 597, 7029, 257, 688, 295, 589, 11, 3009, 538, 264, 3861, 10754, 51438, 51438, 281, 3067, 577, 281, 11750, 2073, 4675, 13, 51630, 51630, 3950, 2740, 5800, 439, 445, 352, 1314, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1287777304649353, "compression_ratio": 1.6123348017621146, "no_caption_prob": 1.4285101315181237e-05}, {"id": 721, "seek": 303124, "start": 3031.24, "end": 3035.04, "text": " And I think that there's similar potential in Elm.", "tokens": [50364, 400, 286, 519, 300, 456, 311, 2531, 3995, 294, 2699, 76, 13, 50554, 50554, 639, 307, 955, 3036, 11, 938, 1433, 11, 567, 3255, 437, 486, 1051, 13, 50824, 50824, 583, 562, 286, 574, 412, 264, 955, 3036, 295, 13892, 295, 9410, 8650, 11, 1203, 3643, 51130, 51130, 257, 1168, 295, 8952, 2144, 2831, 813, 47909, 3389, 13, 51364, 51364, 407, 411, 13199, 82, 3212, 380, 1242, 604, 4663, 13, 51568, 51568, 1171, 1732, 11, 1266, 924, 436, 2378, 380, 5768, 604, 4663, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16095796498385342, "compression_ratio": 1.4915254237288136, "no_caption_prob": 1.1300620826659724e-05}, {"id": 722, "seek": 303124, "start": 3035.04, "end": 3040.4399999999996, "text": " This is big picture, long term, who knows what will happen.", "tokens": [50364, 400, 286, 519, 300, 456, 311, 2531, 3995, 294, 2699, 76, 13, 50554, 50554, 639, 307, 955, 3036, 11, 938, 1433, 11, 567, 3255, 437, 486, 1051, 13, 50824, 50824, 583, 562, 286, 574, 412, 264, 955, 3036, 295, 13892, 295, 9410, 8650, 11, 1203, 3643, 51130, 51130, 257, 1168, 295, 8952, 2144, 2831, 813, 47909, 3389, 13, 51364, 51364, 407, 411, 13199, 82, 3212, 380, 1242, 604, 4663, 13, 51568, 51568, 1171, 1732, 11, 1266, 924, 436, 2378, 380, 5768, 604, 4663, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16095796498385342, "compression_ratio": 1.4915254237288136, "no_caption_prob": 1.1300620826659724e-05}, {"id": 723, "seek": 303124, "start": 3040.4399999999996, "end": 3046.56, "text": " But when I look at the big picture of trends of programming languages, everything becomes", "tokens": [50364, 400, 286, 519, 300, 456, 311, 2531, 3995, 294, 2699, 76, 13, 50554, 50554, 639, 307, 955, 3036, 11, 938, 1433, 11, 567, 3255, 437, 486, 1051, 13, 50824, 50824, 583, 562, 286, 574, 412, 264, 955, 3036, 295, 13892, 295, 9410, 8650, 11, 1203, 3643, 51130, 51130, 257, 1168, 295, 8952, 2144, 2831, 813, 47909, 3389, 13, 51364, 51364, 407, 411, 13199, 82, 3212, 380, 1242, 604, 4663, 13, 51568, 51568, 1171, 1732, 11, 1266, 924, 436, 2378, 380, 5768, 604, 4663, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16095796498385342, "compression_ratio": 1.4915254237288136, "no_caption_prob": 1.1300620826659724e-05}, {"id": 724, "seek": 303124, "start": 3046.56, "end": 3051.24, "text": " a question of parallelization rather than brute performance.", "tokens": [50364, 400, 286, 519, 300, 456, 311, 2531, 3995, 294, 2699, 76, 13, 50554, 50554, 639, 307, 955, 3036, 11, 938, 1433, 11, 567, 3255, 437, 486, 1051, 13, 50824, 50824, 583, 562, 286, 574, 412, 264, 955, 3036, 295, 13892, 295, 9410, 8650, 11, 1203, 3643, 51130, 51130, 257, 1168, 295, 8952, 2144, 2831, 813, 47909, 3389, 13, 51364, 51364, 407, 411, 13199, 82, 3212, 380, 1242, 604, 4663, 13, 51568, 51568, 1171, 1732, 11, 1266, 924, 436, 2378, 380, 5768, 604, 4663, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16095796498385342, "compression_ratio": 1.4915254237288136, "no_caption_prob": 1.1300620826659724e-05}, {"id": 725, "seek": 303124, "start": 3051.24, "end": 3055.3199999999997, "text": " So like CPUs aren't getting any faster.", "tokens": [50364, 400, 286, 519, 300, 456, 311, 2531, 3995, 294, 2699, 76, 13, 50554, 50554, 639, 307, 955, 3036, 11, 938, 1433, 11, 567, 3255, 437, 486, 1051, 13, 50824, 50824, 583, 562, 286, 574, 412, 264, 955, 3036, 295, 13892, 295, 9410, 8650, 11, 1203, 3643, 51130, 51130, 257, 1168, 295, 8952, 2144, 2831, 813, 47909, 3389, 13, 51364, 51364, 407, 411, 13199, 82, 3212, 380, 1242, 604, 4663, 13, 51568, 51568, 1171, 1732, 11, 1266, 924, 436, 2378, 380, 5768, 604, 4663, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16095796498385342, "compression_ratio": 1.4915254237288136, "no_caption_prob": 1.1300620826659724e-05}, {"id": 726, "seek": 303124, "start": 3055.3199999999997, "end": 3059.68, "text": " For five, 10 years they haven't gotten any faster.", "tokens": [50364, 400, 286, 519, 300, 456, 311, 2531, 3995, 294, 2699, 76, 13, 50554, 50554, 639, 307, 955, 3036, 11, 938, 1433, 11, 567, 3255, 437, 486, 1051, 13, 50824, 50824, 583, 562, 286, 574, 412, 264, 955, 3036, 295, 13892, 295, 9410, 8650, 11, 1203, 3643, 51130, 51130, 257, 1168, 295, 8952, 2144, 2831, 813, 47909, 3389, 13, 51364, 51364, 407, 411, 13199, 82, 3212, 380, 1242, 604, 4663, 13, 51568, 51568, 1171, 1732, 11, 1266, 924, 436, 2378, 380, 5768, 604, 4663, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16095796498385342, "compression_ratio": 1.4915254237288136, "no_caption_prob": 1.1300620826659724e-05}, {"id": 727, "seek": 305968, "start": 3059.68, "end": 3064.9199999999996, "text": " The clock speed is not improving because it would start to get to the temperature of the", "tokens": [50364, 440, 7830, 3073, 307, 406, 11470, 570, 309, 576, 722, 281, 483, 281, 264, 4292, 295, 264, 50626, 50626, 3753, 295, 264, 3295, 445, 264, 636, 300, 264, 10649, 295, 5662, 7830, 3073, 1985, 13, 50904, 50904, 583, 437, 291, 393, 360, 538, 1242, 544, 1145, 46976, 322, 257, 11409, 307, 291, 393, 362, 544, 8952, 9007, 11, 51252, 51252, 457, 291, 393, 380, 360, 309, 412, 257, 4663, 7830, 3073, 13, 51392, 51392, 663, 311, 445, 257, 4948, 300, 321, 2045, 257, 938, 565, 2057, 293, 300, 311, 406, 516, 281, 1319, 13, 51588, 51588, 1664, 380, 436, 445, 3470, 10649, 30, 51734, 51734, 2704, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1650328421377921, "compression_ratio": 1.74, "no_caption_prob": 9.516044883639552e-06}, {"id": 728, "seek": 305968, "start": 3064.9199999999996, "end": 3070.48, "text": " surface of the sun just the way that the physics of increasing clock speed works.", "tokens": [50364, 440, 7830, 3073, 307, 406, 11470, 570, 309, 576, 722, 281, 483, 281, 264, 4292, 295, 264, 50626, 50626, 3753, 295, 264, 3295, 445, 264, 636, 300, 264, 10649, 295, 5662, 7830, 3073, 1985, 13, 50904, 50904, 583, 437, 291, 393, 360, 538, 1242, 544, 1145, 46976, 322, 257, 11409, 307, 291, 393, 362, 544, 8952, 9007, 11, 51252, 51252, 457, 291, 393, 380, 360, 309, 412, 257, 4663, 7830, 3073, 13, 51392, 51392, 663, 311, 445, 257, 4948, 300, 321, 2045, 257, 938, 565, 2057, 293, 300, 311, 406, 516, 281, 1319, 13, 51588, 51588, 1664, 380, 436, 445, 3470, 10649, 30, 51734, 51734, 2704, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1650328421377921, "compression_ratio": 1.74, "no_caption_prob": 9.516044883639552e-06}, {"id": 729, "seek": 305968, "start": 3070.48, "end": 3077.44, "text": " But what you can do by getting more transistors on a chip is you can have more parallel processing,", "tokens": [50364, 440, 7830, 3073, 307, 406, 11470, 570, 309, 576, 722, 281, 483, 281, 264, 4292, 295, 264, 50626, 50626, 3753, 295, 264, 3295, 445, 264, 636, 300, 264, 10649, 295, 5662, 7830, 3073, 1985, 13, 50904, 50904, 583, 437, 291, 393, 360, 538, 1242, 544, 1145, 46976, 322, 257, 11409, 307, 291, 393, 362, 544, 8952, 9007, 11, 51252, 51252, 457, 291, 393, 380, 360, 309, 412, 257, 4663, 7830, 3073, 13, 51392, 51392, 663, 311, 445, 257, 4948, 300, 321, 2045, 257, 938, 565, 2057, 293, 300, 311, 406, 516, 281, 1319, 13, 51588, 51588, 1664, 380, 436, 445, 3470, 10649, 30, 51734, 51734, 2704, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1650328421377921, "compression_ratio": 1.74, "no_caption_prob": 9.516044883639552e-06}, {"id": 730, "seek": 305968, "start": 3077.44, "end": 3080.24, "text": " but you can't do it at a faster clock speed.", "tokens": [50364, 440, 7830, 3073, 307, 406, 11470, 570, 309, 576, 722, 281, 483, 281, 264, 4292, 295, 264, 50626, 50626, 3753, 295, 264, 3295, 445, 264, 636, 300, 264, 10649, 295, 5662, 7830, 3073, 1985, 13, 50904, 50904, 583, 437, 291, 393, 360, 538, 1242, 544, 1145, 46976, 322, 257, 11409, 307, 291, 393, 362, 544, 8952, 9007, 11, 51252, 51252, 457, 291, 393, 380, 360, 309, 412, 257, 4663, 7830, 3073, 13, 51392, 51392, 663, 311, 445, 257, 4948, 300, 321, 2045, 257, 938, 565, 2057, 293, 300, 311, 406, 516, 281, 1319, 13, 51588, 51588, 1664, 380, 436, 445, 3470, 10649, 30, 51734, 51734, 2704, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1650328421377921, "compression_ratio": 1.74, "no_caption_prob": 9.516044883639552e-06}, {"id": 731, "seek": 305968, "start": 3080.24, "end": 3084.16, "text": " That's just a limit that we hit a long time ago and that's not going to change.", "tokens": [50364, 440, 7830, 3073, 307, 406, 11470, 570, 309, 576, 722, 281, 483, 281, 264, 4292, 295, 264, 50626, 50626, 3753, 295, 264, 3295, 445, 264, 636, 300, 264, 10649, 295, 5662, 7830, 3073, 1985, 13, 50904, 50904, 583, 437, 291, 393, 360, 538, 1242, 544, 1145, 46976, 322, 257, 11409, 307, 291, 393, 362, 544, 8952, 9007, 11, 51252, 51252, 457, 291, 393, 380, 360, 309, 412, 257, 4663, 7830, 3073, 13, 51392, 51392, 663, 311, 445, 257, 4948, 300, 321, 2045, 257, 938, 565, 2057, 293, 300, 311, 406, 516, 281, 1319, 13, 51588, 51588, 1664, 380, 436, 445, 3470, 10649, 30, 51734, 51734, 2704, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1650328421377921, "compression_ratio": 1.74, "no_caption_prob": 9.516044883639552e-06}, {"id": 732, "seek": 305968, "start": 3084.16, "end": 3087.08, "text": " Can't they just improve physics?", "tokens": [50364, 440, 7830, 3073, 307, 406, 11470, 570, 309, 576, 722, 281, 483, 281, 264, 4292, 295, 264, 50626, 50626, 3753, 295, 264, 3295, 445, 264, 636, 300, 264, 10649, 295, 5662, 7830, 3073, 1985, 13, 50904, 50904, 583, 437, 291, 393, 360, 538, 1242, 544, 1145, 46976, 322, 257, 11409, 307, 291, 393, 362, 544, 8952, 9007, 11, 51252, 51252, 457, 291, 393, 380, 360, 309, 412, 257, 4663, 7830, 3073, 13, 51392, 51392, 663, 311, 445, 257, 4948, 300, 321, 2045, 257, 938, 565, 2057, 293, 300, 311, 406, 516, 281, 1319, 13, 51588, 51588, 1664, 380, 436, 445, 3470, 10649, 30, 51734, 51734, 2704, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1650328421377921, "compression_ratio": 1.74, "no_caption_prob": 9.516044883639552e-06}, {"id": 733, "seek": 305968, "start": 3087.08, "end": 3088.08, "text": " Maybe.", "tokens": [50364, 440, 7830, 3073, 307, 406, 11470, 570, 309, 576, 722, 281, 483, 281, 264, 4292, 295, 264, 50626, 50626, 3753, 295, 264, 3295, 445, 264, 636, 300, 264, 10649, 295, 5662, 7830, 3073, 1985, 13, 50904, 50904, 583, 437, 291, 393, 360, 538, 1242, 544, 1145, 46976, 322, 257, 11409, 307, 291, 393, 362, 544, 8952, 9007, 11, 51252, 51252, 457, 291, 393, 380, 360, 309, 412, 257, 4663, 7830, 3073, 13, 51392, 51392, 663, 311, 445, 257, 4948, 300, 321, 2045, 257, 938, 565, 2057, 293, 300, 311, 406, 516, 281, 1319, 13, 51588, 51588, 1664, 380, 436, 445, 3470, 10649, 30, 51734, 51734, 2704, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1650328421377921, "compression_ratio": 1.74, "no_caption_prob": 9.516044883639552e-06}, {"id": 734, "seek": 308808, "start": 3088.08, "end": 3091.3199999999997, "text": " Maybe quantum computers.", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 735, "seek": 308808, "start": 3091.3199999999997, "end": 3096.96, "text": " So when we're on the topic of Elixir, Joe Armstrong, who is one of the creators of the", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 736, "seek": 308808, "start": 3096.96, "end": 3103.2799999999997, "text": " Erlang programming language, which Elixir compiles down to, said that like so Erlang", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 737, "seek": 308808, "start": 3103.2799999999997, "end": 3108.64, "text": " has this notion of easy parallel writing, parallel programs is very easy.", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 738, "seek": 308808, "start": 3108.64, "end": 3109.64, "text": " Part of that is immutability.", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 739, "seek": 308808, "start": 3109.64, "end": 3113.0, "text": " Part of that is isolated actor processes.", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 740, "seek": 308808, "start": 3113.0, "end": 3114.48, "text": " It's a super interesting language.", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 741, "seek": 308808, "start": 3114.48, "end": 3116.48, "text": " So if you haven't checked it out, do.", "tokens": [50364, 2704, 13018, 10807, 13, 50526, 50526, 407, 562, 321, 434, 322, 264, 4829, 295, 2699, 970, 347, 11, 6807, 36100, 11, 567, 307, 472, 295, 264, 16039, 295, 264, 50808, 50808, 3300, 25241, 9410, 2856, 11, 597, 2699, 970, 347, 715, 4680, 760, 281, 11, 848, 300, 411, 370, 3300, 25241, 51124, 51124, 575, 341, 10710, 295, 1858, 8952, 3579, 11, 8952, 4268, 307, 588, 1858, 13, 51392, 51392, 4100, 295, 300, 307, 3397, 325, 2310, 13, 51442, 51442, 4100, 295, 300, 307, 14621, 8747, 7555, 13, 51610, 51610, 467, 311, 257, 1687, 1880, 2856, 13, 51684, 51684, 407, 498, 291, 2378, 380, 10033, 309, 484, 11, 360, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.2093880071049243, "compression_ratio": 1.6338582677165354, "no_caption_prob": 4.264339804649353e-05}, {"id": 742, "seek": 311648, "start": 3116.48, "end": 3122.88, "text": " But he worked on a project where they had an Erlang program and then they swapped out", "tokens": [50364, 583, 415, 2732, 322, 257, 1716, 689, 436, 632, 364, 3300, 25241, 1461, 293, 550, 436, 50011, 484, 50684, 50684, 264, 8837, 490, 411, 257, 1451, 4965, 13199, 281, 257, 12145, 4965, 13199, 13, 50971, 50971, 400, 550, 264, 912, 1900, 912, 1461, 445, 5872, 11, 286, 1697, 309, 390, 12790, 1413, 4663, 420, 746, 13, 51370, 51370, 400, 264, 1674, 6598, 848, 11, 731, 11, 321, 658, 12145, 24826, 13, 51594, 51594, 34170, 380, 309, 1190, 754, 4663, 30, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14981183551606678, "compression_ratio": 1.5336538461538463, "no_caption_prob": 1.184221855510259e-05}, {"id": 743, "seek": 311648, "start": 3122.88, "end": 3128.62, "text": " the hardware from like a four core CPU to a 64 core CPU.", "tokens": [50364, 583, 415, 2732, 322, 257, 1716, 689, 436, 632, 364, 3300, 25241, 1461, 293, 550, 436, 50011, 484, 50684, 50684, 264, 8837, 490, 411, 257, 1451, 4965, 13199, 281, 257, 12145, 4965, 13199, 13, 50971, 50971, 400, 550, 264, 912, 1900, 912, 1461, 445, 5872, 11, 286, 1697, 309, 390, 12790, 1413, 4663, 420, 746, 13, 51370, 51370, 400, 264, 1674, 6598, 848, 11, 731, 11, 321, 658, 12145, 24826, 13, 51594, 51594, 34170, 380, 309, 1190, 754, 4663, 30, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14981183551606678, "compression_ratio": 1.5336538461538463, "no_caption_prob": 1.184221855510259e-05}, {"id": 744, "seek": 311648, "start": 3128.62, "end": 3136.6, "text": " And then the same exact same program just ran, I believe it was 34 times faster or something.", "tokens": [50364, 583, 415, 2732, 322, 257, 1716, 689, 436, 632, 364, 3300, 25241, 1461, 293, 550, 436, 50011, 484, 50684, 50684, 264, 8837, 490, 411, 257, 1451, 4965, 13199, 281, 257, 12145, 4965, 13199, 13, 50971, 50971, 400, 550, 264, 912, 1900, 912, 1461, 445, 5872, 11, 286, 1697, 309, 390, 12790, 1413, 4663, 420, 746, 13, 51370, 51370, 400, 264, 1674, 6598, 848, 11, 731, 11, 321, 658, 12145, 24826, 13, 51594, 51594, 34170, 380, 309, 1190, 754, 4663, 30, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14981183551606678, "compression_ratio": 1.5336538461538463, "no_caption_prob": 1.184221855510259e-05}, {"id": 745, "seek": 311648, "start": 3136.6, "end": 3141.08, "text": " And the product manager said, well, we got 64 cores.", "tokens": [50364, 583, 415, 2732, 322, 257, 1716, 689, 436, 632, 364, 3300, 25241, 1461, 293, 550, 436, 50011, 484, 50684, 50684, 264, 8837, 490, 411, 257, 1451, 4965, 13199, 281, 257, 12145, 4965, 13199, 13, 50971, 50971, 400, 550, 264, 912, 1900, 912, 1461, 445, 5872, 11, 286, 1697, 309, 390, 12790, 1413, 4663, 420, 746, 13, 51370, 51370, 400, 264, 1674, 6598, 848, 11, 731, 11, 321, 658, 12145, 24826, 13, 51594, 51594, 34170, 380, 309, 1190, 754, 4663, 30, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14981183551606678, "compression_ratio": 1.5336538461538463, "no_caption_prob": 1.184221855510259e-05}, {"id": 746, "seek": 311648, "start": 3141.08, "end": 3143.88, "text": " Shouldn't it run even faster?", "tokens": [50364, 583, 415, 2732, 322, 257, 1716, 689, 436, 632, 364, 3300, 25241, 1461, 293, 550, 436, 50011, 484, 50684, 50684, 264, 8837, 490, 411, 257, 1451, 4965, 13199, 281, 257, 12145, 4965, 13199, 13, 50971, 50971, 400, 550, 264, 912, 1900, 912, 1461, 445, 5872, 11, 286, 1697, 309, 390, 12790, 1413, 4663, 420, 746, 13, 51370, 51370, 400, 264, 1674, 6598, 848, 11, 731, 11, 321, 658, 12145, 24826, 13, 51594, 51594, 34170, 380, 309, 1190, 754, 4663, 30, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14981183551606678, "compression_ratio": 1.5336538461538463, "no_caption_prob": 1.184221855510259e-05}, {"id": 747, "seek": 314388, "start": 3143.88, "end": 3149.6800000000003, "text": " And his response was, well, if you were to take a C++ program and just swap out the CPU,", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 748, "seek": 314388, "start": 3149.6800000000003, "end": 3154.94, "text": " it would be zero times faster.", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 749, "seek": 314388, "start": 3154.94, "end": 3155.94, "text": " So it's yeah.", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 750, "seek": 314388, "start": 3155.94, "end": 3156.94, "text": " Wait, yeah.", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 751, "seek": 314388, "start": 3156.94, "end": 3161.84, "text": " Zero times faster or one time faster?", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 752, "seek": 314388, "start": 3161.84, "end": 3162.84, "text": " I don't know math.", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 753, "seek": 314388, "start": 3162.84, "end": 3167.92, "text": " It would be one extra speed and a 0% performance increase.", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 754, "seek": 314388, "start": 3167.92, "end": 3169.92, "text": " All right.", "tokens": [50364, 400, 702, 4134, 390, 11, 731, 11, 498, 291, 645, 281, 747, 257, 383, 25472, 1461, 293, 445, 18135, 484, 264, 13199, 11, 50654, 50654, 309, 576, 312, 4018, 1413, 4663, 13, 50917, 50917, 407, 309, 311, 1338, 13, 50967, 50967, 3802, 11, 1338, 13, 51017, 51017, 17182, 1413, 4663, 420, 472, 565, 4663, 30, 51262, 51262, 286, 500, 380, 458, 5221, 13, 51312, 51312, 467, 576, 312, 472, 2857, 3073, 293, 257, 1958, 4, 3389, 3488, 13, 51566, 51566, 1057, 558, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2870867060518813, "compression_ratio": 1.431578947368421, "no_caption_prob": 1.952547609107569e-05}, {"id": 755, "seek": 316992, "start": 3169.92, "end": 3176.6, "text": " I mean, you could say it just crashes and then it's just zero times faster.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 756, "seek": 316992, "start": 3176.6, "end": 3179.52, "text": " That's also likely, I would say.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 757, "seek": 316992, "start": 3179.52, "end": 3180.52, "text": " Yeah.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 758, "seek": 316992, "start": 3180.52, "end": 3181.52, "text": " Yeah.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 759, "seek": 316992, "start": 3181.52, "end": 3182.52, "text": " Yeah.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 760, "seek": 316992, "start": 3182.52, "end": 3183.52, "text": " This is to me.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 761, "seek": 316992, "start": 3183.52, "end": 3188.96, "text": " I mean, Yaron and I had this sort of episode in the new year where we talked about what's", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 762, "seek": 316992, "start": 3188.96, "end": 3190.52, "text": " working for Elm.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 763, "seek": 316992, "start": 3190.52, "end": 3195.08, "text": " And that was like one of the points that came up was, hey, we've got this language with", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 764, "seek": 316992, "start": 3195.08, "end": 3196.82, "text": " some really unique characteristics.", "tokens": [50364, 286, 914, 11, 291, 727, 584, 309, 445, 28642, 293, 550, 309, 311, 445, 4018, 1413, 4663, 13, 50698, 50698, 663, 311, 611, 3700, 11, 286, 576, 584, 13, 50844, 50844, 865, 13, 50894, 50894, 865, 13, 50944, 50944, 865, 13, 50994, 50994, 639, 307, 281, 385, 13, 51044, 51044, 286, 914, 11, 398, 6372, 293, 286, 632, 341, 1333, 295, 3500, 294, 264, 777, 1064, 689, 321, 2825, 466, 437, 311, 51316, 51316, 1364, 337, 2699, 76, 13, 51394, 51394, 400, 300, 390, 411, 472, 295, 264, 2793, 300, 1361, 493, 390, 11, 4177, 11, 321, 600, 658, 341, 2856, 365, 51622, 51622, 512, 534, 3845, 10891, 13, 51709, 51709], "temperature": 0.0, "avg_logprob": -0.17297120220893253, "compression_ratio": 1.5696202531645569, "no_caption_prob": 3.2698018912924454e-05}, {"id": 765, "seek": 319682, "start": 3196.82, "end": 3202.32, "text": " And how can we, instead of saying, oh, performance is really hard with immutability, how can", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 766, "seek": 319682, "start": 3202.32, "end": 3206.88, "text": " we say, well, but these things become easier and these things we have more opportunities.", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 767, "seek": 319682, "start": 3206.88, "end": 3209.0, "text": " I think parallelization is one of them.", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 768, "seek": 319682, "start": 3209.0, "end": 3213.7200000000003, "text": " And I don't know, looking 10 years down the road, are web apps going to be leveraging", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 769, "seek": 319682, "start": 3213.7200000000003, "end": 3214.8, "text": " parallelization more?", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 770, "seek": 319682, "start": 3214.8, "end": 3215.8, "text": " I don't know.", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 771, "seek": 319682, "start": 3215.8, "end": 3216.8, "text": " Maybe.", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 772, "seek": 319682, "start": 3216.8, "end": 3221.96, "text": " And I believe WebAssembly has primitives for delegating things in a parallel way.", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 773, "seek": 319682, "start": 3221.96, "end": 3224.1800000000003, "text": " So if I'm not mistaken.", "tokens": [50364, 400, 577, 393, 321, 11, 2602, 295, 1566, 11, 1954, 11, 3389, 307, 534, 1152, 365, 3397, 325, 2310, 11, 577, 393, 50639, 50639, 321, 584, 11, 731, 11, 457, 613, 721, 1813, 3571, 293, 613, 721, 321, 362, 544, 4786, 13, 50867, 50867, 286, 519, 8952, 2144, 307, 472, 295, 552, 13, 50973, 50973, 400, 286, 500, 380, 458, 11, 1237, 1266, 924, 760, 264, 3060, 11, 366, 3670, 7733, 516, 281, 312, 32666, 51209, 51209, 8952, 2144, 544, 30, 51263, 51263, 286, 500, 380, 458, 13, 51313, 51313, 2704, 13, 51363, 51363, 400, 286, 1697, 9573, 10884, 19160, 575, 2886, 38970, 337, 15824, 990, 721, 294, 257, 8952, 636, 13, 51621, 51621, 407, 498, 286, 478, 406, 21333, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.12454219818115235, "compression_ratio": 1.643884892086331, "no_caption_prob": 7.843302591936663e-05}, {"id": 774, "seek": 322418, "start": 3224.18, "end": 3229.48, "text": " So that could be an interesting space, long term, big picture.", "tokens": [50364, 407, 300, 727, 312, 364, 1880, 1901, 11, 938, 1433, 11, 955, 3036, 13, 50629, 50629, 400, 286, 519, 498, 291, 498, 291, 286, 2870, 498, 309, 307, 294, 1958, 13, 3405, 11, 309, 727, 312, 1958, 13, 6494, 13, 51013, 51013, 583, 286, 1697, 498, 291, 574, 666, 2699, 76, 4965, 293, 574, 412, 264, 1399, 5288, 17940, 11, 550, 291, 486, 51365, 51365, 483, 281, 300, 13, 51415, 51415, 821, 486, 312, 257, 2871, 456, 294, 264, 14333, 300, 14942, 281, 294, 264, 2027, 11, 321, 1062, 362, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.24556860010674658, "compression_ratio": 1.5714285714285714, "no_caption_prob": 1.1300535334157757e-05}, {"id": 775, "seek": 322418, "start": 3229.48, "end": 3237.16, "text": " And I think if you if you I forget if it is in 0.19, it could be 0.18.", "tokens": [50364, 407, 300, 727, 312, 364, 1880, 1901, 11, 938, 1433, 11, 955, 3036, 13, 50629, 50629, 400, 286, 519, 498, 291, 498, 291, 286, 2870, 498, 309, 307, 294, 1958, 13, 3405, 11, 309, 727, 312, 1958, 13, 6494, 13, 51013, 51013, 583, 286, 1697, 498, 291, 574, 666, 2699, 76, 4965, 293, 574, 412, 264, 1399, 5288, 17940, 11, 550, 291, 486, 51365, 51365, 483, 281, 300, 13, 51415, 51415, 821, 486, 312, 257, 2871, 456, 294, 264, 14333, 300, 14942, 281, 294, 264, 2027, 11, 321, 1062, 362, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.24556860010674658, "compression_ratio": 1.5714285714285714, "no_caption_prob": 1.1300535334157757e-05}, {"id": 776, "seek": 322418, "start": 3237.16, "end": 3244.2, "text": " But I believe if you look into Elm core and look at the process namespace, then you will", "tokens": [50364, 407, 300, 727, 312, 364, 1880, 1901, 11, 938, 1433, 11, 955, 3036, 13, 50629, 50629, 400, 286, 519, 498, 291, 498, 291, 286, 2870, 498, 309, 307, 294, 1958, 13, 3405, 11, 309, 727, 312, 1958, 13, 6494, 13, 51013, 51013, 583, 286, 1697, 498, 291, 574, 666, 2699, 76, 4965, 293, 574, 412, 264, 1399, 5288, 17940, 11, 550, 291, 486, 51365, 51365, 483, 281, 300, 13, 51415, 51415, 821, 486, 312, 257, 2871, 456, 294, 264, 14333, 300, 14942, 281, 294, 264, 2027, 11, 321, 1062, 362, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.24556860010674658, "compression_ratio": 1.5714285714285714, "no_caption_prob": 1.1300535334157757e-05}, {"id": 777, "seek": 322418, "start": 3244.2, "end": 3245.2, "text": " get to that.", "tokens": [50364, 407, 300, 727, 312, 364, 1880, 1901, 11, 938, 1433, 11, 955, 3036, 13, 50629, 50629, 400, 286, 519, 498, 291, 498, 291, 286, 2870, 498, 309, 307, 294, 1958, 13, 3405, 11, 309, 727, 312, 1958, 13, 6494, 13, 51013, 51013, 583, 286, 1697, 498, 291, 574, 666, 2699, 76, 4965, 293, 574, 412, 264, 1399, 5288, 17940, 11, 550, 291, 486, 51365, 51365, 483, 281, 300, 13, 51415, 51415, 821, 486, 312, 257, 2871, 456, 294, 264, 14333, 300, 14942, 281, 294, 264, 2027, 11, 321, 1062, 362, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.24556860010674658, "compression_ratio": 1.5714285714285714, "no_caption_prob": 1.1300535334157757e-05}, {"id": 778, "seek": 322418, "start": 3245.2, "end": 3252.04, "text": " There will be a comment there in the documentation that refers to in the future, we might have", "tokens": [50364, 407, 300, 727, 312, 364, 1880, 1901, 11, 938, 1433, 11, 955, 3036, 13, 50629, 50629, 400, 286, 519, 498, 291, 498, 291, 286, 2870, 498, 309, 307, 294, 1958, 13, 3405, 11, 309, 727, 312, 1958, 13, 6494, 13, 51013, 51013, 583, 286, 1697, 498, 291, 574, 666, 2699, 76, 4965, 293, 574, 412, 264, 1399, 5288, 17940, 11, 550, 291, 486, 51365, 51365, 483, 281, 300, 13, 51415, 51415, 821, 486, 312, 257, 2871, 456, 294, 264, 14333, 300, 14942, 281, 294, 264, 2027, 11, 321, 1062, 362, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.24556860010674658, "compression_ratio": 1.5714285714285714, "no_caption_prob": 1.1300535334157757e-05}, {"id": 779, "seek": 325204, "start": 3252.04, "end": 3257.4, "text": " multiple actors or multiple mailboxes or something along those lines, which is a clear reference", "tokens": [50364, 3866, 10037, 420, 3866, 43602, 279, 420, 746, 2051, 729, 3876, 11, 597, 307, 257, 1850, 6408, 50632, 50632, 281, 3300, 25241, 10037, 13, 50748, 50748, 400, 370, 341, 4171, 575, 767, 668, 1194, 466, 538, 22613, 1670, 3866, 924, 13, 51290, 51290, 407, 1338, 11, 300, 1062, 312, 411, 472, 4171, 321, 5119, 666, 13, 51476, 51476, 400, 295, 1164, 11, 562, 445, 281, 833, 1889, 264, 935, 754, 544, 11, 472, 295, 264, 955, 721, 562, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15335248156291684, "compression_ratio": 1.5933014354066986, "no_caption_prob": 7.483310764655471e-05}, {"id": 780, "seek": 325204, "start": 3257.4, "end": 3259.72, "text": " to Erlang actors.", "tokens": [50364, 3866, 10037, 420, 3866, 43602, 279, 420, 746, 2051, 729, 3876, 11, 597, 307, 257, 1850, 6408, 50632, 50632, 281, 3300, 25241, 10037, 13, 50748, 50748, 400, 370, 341, 4171, 575, 767, 668, 1194, 466, 538, 22613, 1670, 3866, 924, 13, 51290, 51290, 407, 1338, 11, 300, 1062, 312, 411, 472, 4171, 321, 5119, 666, 13, 51476, 51476, 400, 295, 1164, 11, 562, 445, 281, 833, 1889, 264, 935, 754, 544, 11, 472, 295, 264, 955, 721, 562, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15335248156291684, "compression_ratio": 1.5933014354066986, "no_caption_prob": 7.483310764655471e-05}, {"id": 781, "seek": 325204, "start": 3259.72, "end": 3270.56, "text": " And so this aspect has actually been thought about by Evan since multiple years.", "tokens": [50364, 3866, 10037, 420, 3866, 43602, 279, 420, 746, 2051, 729, 3876, 11, 597, 307, 257, 1850, 6408, 50632, 50632, 281, 3300, 25241, 10037, 13, 50748, 50748, 400, 370, 341, 4171, 575, 767, 668, 1194, 466, 538, 22613, 1670, 3866, 924, 13, 51290, 51290, 407, 1338, 11, 300, 1062, 312, 411, 472, 4171, 321, 5119, 666, 13, 51476, 51476, 400, 295, 1164, 11, 562, 445, 281, 833, 1889, 264, 935, 754, 544, 11, 472, 295, 264, 955, 721, 562, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15335248156291684, "compression_ratio": 1.5933014354066986, "no_caption_prob": 7.483310764655471e-05}, {"id": 782, "seek": 325204, "start": 3270.56, "end": 3274.2799999999997, "text": " So yeah, that might be like one aspect we tap into.", "tokens": [50364, 3866, 10037, 420, 3866, 43602, 279, 420, 746, 2051, 729, 3876, 11, 597, 307, 257, 1850, 6408, 50632, 50632, 281, 3300, 25241, 10037, 13, 50748, 50748, 400, 370, 341, 4171, 575, 767, 668, 1194, 466, 538, 22613, 1670, 3866, 924, 13, 51290, 51290, 407, 1338, 11, 300, 1062, 312, 411, 472, 4171, 321, 5119, 666, 13, 51476, 51476, 400, 295, 1164, 11, 562, 445, 281, 833, 1889, 264, 935, 754, 544, 11, 472, 295, 264, 955, 721, 562, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15335248156291684, "compression_ratio": 1.5933014354066986, "no_caption_prob": 7.483310764655471e-05}, {"id": 783, "seek": 325204, "start": 3274.2799999999997, "end": 3279.96, "text": " And of course, when just to underline the point even more, one of the big things when", "tokens": [50364, 3866, 10037, 420, 3866, 43602, 279, 420, 746, 2051, 729, 3876, 11, 597, 307, 257, 1850, 6408, 50632, 50632, 281, 3300, 25241, 10037, 13, 50748, 50748, 400, 370, 341, 4171, 575, 767, 668, 1194, 466, 538, 22613, 1670, 3866, 924, 13, 51290, 51290, 407, 1338, 11, 300, 1062, 312, 411, 472, 4171, 321, 5119, 666, 13, 51476, 51476, 400, 295, 1164, 11, 562, 445, 281, 833, 1889, 264, 935, 754, 544, 11, 472, 295, 264, 955, 721, 562, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15335248156291684, "compression_ratio": 1.5933014354066986, "no_caption_prob": 7.483310764655471e-05}, {"id": 784, "seek": 327996, "start": 3279.96, "end": 3285.2400000000002, "text": " Clojure came out, Clojure was like the first functional program that I it wasn't the first", "tokens": [50364, 31901, 73, 540, 1361, 484, 11, 31901, 73, 540, 390, 411, 264, 700, 11745, 1461, 300, 286, 309, 2067, 380, 264, 700, 50628, 50628, 11745, 1461, 300, 286, 3264, 13, 50690, 50690, 467, 390, 264, 700, 3397, 32148, 538, 7576, 2856, 13, 50890, 50890, 400, 472, 295, 264, 955, 20045, 281, 31901, 73, 540, 390, 300, 570, 295, 3397, 325, 2310, 11, 23702, 10457, 307, 5800, 51189, 51189, 1687, 1858, 13, 51268, 51268, 400, 370, 754, 1673, 291, 362, 281, 1689, 264, 3218, 295, 3397, 32148, 3089, 11, 5127, 23702, 10457, 281, 1461, 51520, 51520, 307, 370, 3571, 300, 294, 257, 688, 295, 3331, 11, 291, 767, 483, 544, 3006, 293, 1101, 10205, 4268, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1437316061067982, "compression_ratio": 1.858267716535433, "no_caption_prob": 2.212475737906061e-05}, {"id": 785, "seek": 327996, "start": 3285.2400000000002, "end": 3286.48, "text": " functional program that I learned.", "tokens": [50364, 31901, 73, 540, 1361, 484, 11, 31901, 73, 540, 390, 411, 264, 700, 11745, 1461, 300, 286, 309, 2067, 380, 264, 700, 50628, 50628, 11745, 1461, 300, 286, 3264, 13, 50690, 50690, 467, 390, 264, 700, 3397, 32148, 538, 7576, 2856, 13, 50890, 50890, 400, 472, 295, 264, 955, 20045, 281, 31901, 73, 540, 390, 300, 570, 295, 3397, 325, 2310, 11, 23702, 10457, 307, 5800, 51189, 51189, 1687, 1858, 13, 51268, 51268, 400, 370, 754, 1673, 291, 362, 281, 1689, 264, 3218, 295, 3397, 32148, 3089, 11, 5127, 23702, 10457, 281, 1461, 51520, 51520, 307, 370, 3571, 300, 294, 257, 688, 295, 3331, 11, 291, 767, 483, 544, 3006, 293, 1101, 10205, 4268, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1437316061067982, "compression_ratio": 1.858267716535433, "no_caption_prob": 2.212475737906061e-05}, {"id": 786, "seek": 327996, "start": 3286.48, "end": 3290.48, "text": " It was the first immutable by default language.", "tokens": [50364, 31901, 73, 540, 1361, 484, 11, 31901, 73, 540, 390, 411, 264, 700, 11745, 1461, 300, 286, 309, 2067, 380, 264, 700, 50628, 50628, 11745, 1461, 300, 286, 3264, 13, 50690, 50690, 467, 390, 264, 700, 3397, 32148, 538, 7576, 2856, 13, 50890, 50890, 400, 472, 295, 264, 955, 20045, 281, 31901, 73, 540, 390, 300, 570, 295, 3397, 325, 2310, 11, 23702, 10457, 307, 5800, 51189, 51189, 1687, 1858, 13, 51268, 51268, 400, 370, 754, 1673, 291, 362, 281, 1689, 264, 3218, 295, 3397, 32148, 3089, 11, 5127, 23702, 10457, 281, 1461, 51520, 51520, 307, 370, 3571, 300, 294, 257, 688, 295, 3331, 11, 291, 767, 483, 544, 3006, 293, 1101, 10205, 4268, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1437316061067982, "compression_ratio": 1.858267716535433, "no_caption_prob": 2.212475737906061e-05}, {"id": 787, "seek": 327996, "start": 3290.48, "end": 3296.46, "text": " And one of the big draws to Clojure was that because of immutability, concurrency is suddenly", "tokens": [50364, 31901, 73, 540, 1361, 484, 11, 31901, 73, 540, 390, 411, 264, 700, 11745, 1461, 300, 286, 309, 2067, 380, 264, 700, 50628, 50628, 11745, 1461, 300, 286, 3264, 13, 50690, 50690, 467, 390, 264, 700, 3397, 32148, 538, 7576, 2856, 13, 50890, 50890, 400, 472, 295, 264, 955, 20045, 281, 31901, 73, 540, 390, 300, 570, 295, 3397, 325, 2310, 11, 23702, 10457, 307, 5800, 51189, 51189, 1687, 1858, 13, 51268, 51268, 400, 370, 754, 1673, 291, 362, 281, 1689, 264, 3218, 295, 3397, 32148, 3089, 11, 5127, 23702, 10457, 281, 1461, 51520, 51520, 307, 370, 3571, 300, 294, 257, 688, 295, 3331, 11, 291, 767, 483, 544, 3006, 293, 1101, 10205, 4268, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1437316061067982, "compression_ratio": 1.858267716535433, "no_caption_prob": 2.212475737906061e-05}, {"id": 788, "seek": 327996, "start": 3296.46, "end": 3298.04, "text": " super easy.", "tokens": [50364, 31901, 73, 540, 1361, 484, 11, 31901, 73, 540, 390, 411, 264, 700, 11745, 1461, 300, 286, 309, 2067, 380, 264, 700, 50628, 50628, 11745, 1461, 300, 286, 3264, 13, 50690, 50690, 467, 390, 264, 700, 3397, 32148, 538, 7576, 2856, 13, 50890, 50890, 400, 472, 295, 264, 955, 20045, 281, 31901, 73, 540, 390, 300, 570, 295, 3397, 325, 2310, 11, 23702, 10457, 307, 5800, 51189, 51189, 1687, 1858, 13, 51268, 51268, 400, 370, 754, 1673, 291, 362, 281, 1689, 264, 3218, 295, 3397, 32148, 3089, 11, 5127, 23702, 10457, 281, 1461, 51520, 51520, 307, 370, 3571, 300, 294, 257, 688, 295, 3331, 11, 291, 767, 483, 544, 3006, 293, 1101, 10205, 4268, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1437316061067982, "compression_ratio": 1.858267716535433, "no_caption_prob": 2.212475737906061e-05}, {"id": 789, "seek": 327996, "start": 3298.04, "end": 3303.08, "text": " And so even though you have to pay the price of immutable code, adding concurrency to program", "tokens": [50364, 31901, 73, 540, 1361, 484, 11, 31901, 73, 540, 390, 411, 264, 700, 11745, 1461, 300, 286, 309, 2067, 380, 264, 700, 50628, 50628, 11745, 1461, 300, 286, 3264, 13, 50690, 50690, 467, 390, 264, 700, 3397, 32148, 538, 7576, 2856, 13, 50890, 50890, 400, 472, 295, 264, 955, 20045, 281, 31901, 73, 540, 390, 300, 570, 295, 3397, 325, 2310, 11, 23702, 10457, 307, 5800, 51189, 51189, 1687, 1858, 13, 51268, 51268, 400, 370, 754, 1673, 291, 362, 281, 1689, 264, 3218, 295, 3397, 32148, 3089, 11, 5127, 23702, 10457, 281, 1461, 51520, 51520, 307, 370, 3571, 300, 294, 257, 688, 295, 3331, 11, 291, 767, 483, 544, 3006, 293, 1101, 10205, 4268, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1437316061067982, "compression_ratio": 1.858267716535433, "no_caption_prob": 2.212475737906061e-05}, {"id": 790, "seek": 327996, "start": 3303.08, "end": 3309.36, "text": " is so easier that in a lot of cases, you actually get more correct and better performing programs.", "tokens": [50364, 31901, 73, 540, 1361, 484, 11, 31901, 73, 540, 390, 411, 264, 700, 11745, 1461, 300, 286, 309, 2067, 380, 264, 700, 50628, 50628, 11745, 1461, 300, 286, 3264, 13, 50690, 50690, 467, 390, 264, 700, 3397, 32148, 538, 7576, 2856, 13, 50890, 50890, 400, 472, 295, 264, 955, 20045, 281, 31901, 73, 540, 390, 300, 570, 295, 3397, 325, 2310, 11, 23702, 10457, 307, 5800, 51189, 51189, 1687, 1858, 13, 51268, 51268, 400, 370, 754, 1673, 291, 362, 281, 1689, 264, 3218, 295, 3397, 32148, 3089, 11, 5127, 23702, 10457, 281, 1461, 51520, 51520, 307, 370, 3571, 300, 294, 257, 688, 295, 3331, 11, 291, 767, 483, 544, 3006, 293, 1101, 10205, 4268, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1437316061067982, "compression_ratio": 1.858267716535433, "no_caption_prob": 2.212475737906061e-05}, {"id": 791, "seek": 330936, "start": 3309.36, "end": 3310.36, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 400, 322, 264, 3670, 11, 294, 257, 3670, 11185, 11, 428, 3089, 307, 2167, 47493, 13, 50572, 50572, 407, 498, 291, 366, 884, 589, 322, 264, 2135, 7207, 11, 597, 498, 291, 445, 1269, 493, 364, 8186, 13, 25530, 293, 50954, 50954, 3677, 300, 293, 360, 512, 589, 11, 300, 307, 300, 307, 17776, 264, 2135, 7207, 11, 3009, 498, 257, 4195, 51285, 51285, 9898, 281, 11369, 420, 9898, 281, 2052, 257, 2960, 11, 293, 456, 311, 364, 9603, 490, 257, 3094, 294, 2960, 51518, 51518, 4478, 322, 264, 3028, 300, 311, 15470, 11, 264, 15529, 7207, 2203, 264, 2650, 281, 1190, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09025697450380067, "compression_ratio": 1.7479338842975207, "no_caption_prob": 3.480682789813727e-05}, {"id": 792, "seek": 330936, "start": 3310.36, "end": 3313.52, "text": " And on the web, in a web browser, your code is single threaded.", "tokens": [50364, 1779, 13, 50414, 50414, 400, 322, 264, 3670, 11, 294, 257, 3670, 11185, 11, 428, 3089, 307, 2167, 47493, 13, 50572, 50572, 407, 498, 291, 366, 884, 589, 322, 264, 2135, 7207, 11, 597, 498, 291, 445, 1269, 493, 364, 8186, 13, 25530, 293, 50954, 50954, 3677, 300, 293, 360, 512, 589, 11, 300, 307, 300, 307, 17776, 264, 2135, 7207, 11, 3009, 498, 257, 4195, 51285, 51285, 9898, 281, 11369, 420, 9898, 281, 2052, 257, 2960, 11, 293, 456, 311, 364, 9603, 490, 257, 3094, 294, 2960, 51518, 51518, 4478, 322, 264, 3028, 300, 311, 15470, 11, 264, 15529, 7207, 2203, 264, 2650, 281, 1190, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09025697450380067, "compression_ratio": 1.7479338842975207, "no_caption_prob": 3.480682789813727e-05}, {"id": 793, "seek": 330936, "start": 3313.52, "end": 3321.1600000000003, "text": " So if you are doing work on the main thread, which if you just open up an index.js and", "tokens": [50364, 1779, 13, 50414, 50414, 400, 322, 264, 3670, 11, 294, 257, 3670, 11185, 11, 428, 3089, 307, 2167, 47493, 13, 50572, 50572, 407, 498, 291, 366, 884, 589, 322, 264, 2135, 7207, 11, 597, 498, 291, 445, 1269, 493, 364, 8186, 13, 25530, 293, 50954, 50954, 3677, 300, 293, 360, 512, 589, 11, 300, 307, 300, 307, 17776, 264, 2135, 7207, 11, 3009, 498, 257, 4195, 51285, 51285, 9898, 281, 11369, 420, 9898, 281, 2052, 257, 2960, 11, 293, 456, 311, 364, 9603, 490, 257, 3094, 294, 2960, 51518, 51518, 4478, 322, 264, 3028, 300, 311, 15470, 11, 264, 15529, 7207, 2203, 264, 2650, 281, 1190, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09025697450380067, "compression_ratio": 1.7479338842975207, "no_caption_prob": 3.480682789813727e-05}, {"id": 794, "seek": 330936, "start": 3321.1600000000003, "end": 3327.78, "text": " load that and do some work, that is that is blocking the main thread, including if a user", "tokens": [50364, 1779, 13, 50414, 50414, 400, 322, 264, 3670, 11, 294, 257, 3670, 11185, 11, 428, 3089, 307, 2167, 47493, 13, 50572, 50572, 407, 498, 291, 366, 884, 589, 322, 264, 2135, 7207, 11, 597, 498, 291, 445, 1269, 493, 364, 8186, 13, 25530, 293, 50954, 50954, 3677, 300, 293, 360, 512, 589, 11, 300, 307, 300, 307, 17776, 264, 2135, 7207, 11, 3009, 498, 257, 4195, 51285, 51285, 9898, 281, 11369, 420, 9898, 281, 2052, 257, 2960, 11, 293, 456, 311, 364, 9603, 490, 257, 3094, 294, 2960, 51518, 51518, 4478, 322, 264, 3028, 300, 311, 15470, 11, 264, 15529, 7207, 2203, 264, 2650, 281, 1190, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09025697450380067, "compression_ratio": 1.7479338842975207, "no_caption_prob": 3.480682789813727e-05}, {"id": 795, "seek": 330936, "start": 3327.78, "end": 3332.44, "text": " tries to scroll or tries to click a button, and there's an animation from a built in button", "tokens": [50364, 1779, 13, 50414, 50414, 400, 322, 264, 3670, 11, 294, 257, 3670, 11185, 11, 428, 3089, 307, 2167, 47493, 13, 50572, 50572, 407, 498, 291, 366, 884, 589, 322, 264, 2135, 7207, 11, 597, 498, 291, 445, 1269, 493, 364, 8186, 13, 25530, 293, 50954, 50954, 3677, 300, 293, 360, 512, 589, 11, 300, 307, 300, 307, 17776, 264, 2135, 7207, 11, 3009, 498, 257, 4195, 51285, 51285, 9898, 281, 11369, 420, 9898, 281, 2052, 257, 2960, 11, 293, 456, 311, 364, 9603, 490, 257, 3094, 294, 2960, 51518, 51518, 4478, 322, 264, 3028, 300, 311, 15470, 11, 264, 15529, 7207, 2203, 264, 2650, 281, 1190, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09025697450380067, "compression_ratio": 1.7479338842975207, "no_caption_prob": 3.480682789813727e-05}, {"id": 796, "seek": 330936, "start": 3332.44, "end": 3338.1600000000003, "text": " element on the page that's blocked, the render thread needs the opportunity to run.", "tokens": [50364, 1779, 13, 50414, 50414, 400, 322, 264, 3670, 11, 294, 257, 3670, 11185, 11, 428, 3089, 307, 2167, 47493, 13, 50572, 50572, 407, 498, 291, 366, 884, 589, 322, 264, 2135, 7207, 11, 597, 498, 291, 445, 1269, 493, 364, 8186, 13, 25530, 293, 50954, 50954, 3677, 300, 293, 360, 512, 589, 11, 300, 307, 300, 307, 17776, 264, 2135, 7207, 11, 3009, 498, 257, 4195, 51285, 51285, 9898, 281, 11369, 420, 9898, 281, 2052, 257, 2960, 11, 293, 456, 311, 364, 9603, 490, 257, 3094, 294, 2960, 51518, 51518, 4478, 322, 264, 3028, 300, 311, 15470, 11, 264, 15529, 7207, 2203, 264, 2650, 281, 1190, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09025697450380067, "compression_ratio": 1.7479338842975207, "no_caption_prob": 3.480682789813727e-05}, {"id": 797, "seek": 333816, "start": 3338.16, "end": 3340.3199999999997, "text": " And you're running on that same thread.", "tokens": [50364, 400, 291, 434, 2614, 322, 300, 912, 7207, 13, 50472, 50472, 407, 291, 393, 291, 393, 764, 11346, 19314, 281, 360, 589, 11, 291, 360, 643, 281, 2845, 2845, 4675, 646, 50878, 50878, 293, 5220, 13, 50984, 50984, 583, 341, 307, 1071, 3995, 1901, 300, 727, 312, 588, 1880, 337, 2699, 76, 570, 341, 1333, 51216, 51216, 295, 2699, 76, 9482, 307, 257, 588, 3303, 3318, 337, 10205, 264, 2135, 589, 766, 295, 264, 2135, 51528, 51528, 7207, 11, 293, 550, 7750, 7897, 646, 281, 980, 264, 2135, 7207, 281, 5623, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.058275615175565086, "compression_ratio": 1.722466960352423, "no_caption_prob": 1.863109901023563e-05}, {"id": 798, "seek": 333816, "start": 3340.3199999999997, "end": 3348.44, "text": " So you can you can use worker threads to do work, you do need to send send memory back", "tokens": [50364, 400, 291, 434, 2614, 322, 300, 912, 7207, 13, 50472, 50472, 407, 291, 393, 291, 393, 764, 11346, 19314, 281, 360, 589, 11, 291, 360, 643, 281, 2845, 2845, 4675, 646, 50878, 50878, 293, 5220, 13, 50984, 50984, 583, 341, 307, 1071, 3995, 1901, 300, 727, 312, 588, 1880, 337, 2699, 76, 570, 341, 1333, 51216, 51216, 295, 2699, 76, 9482, 307, 257, 588, 3303, 3318, 337, 10205, 264, 2135, 589, 766, 295, 264, 2135, 51528, 51528, 7207, 11, 293, 550, 7750, 7897, 646, 281, 980, 264, 2135, 7207, 281, 5623, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.058275615175565086, "compression_ratio": 1.722466960352423, "no_caption_prob": 1.863109901023563e-05}, {"id": 799, "seek": 333816, "start": 3348.44, "end": 3350.56, "text": " and forth.", "tokens": [50364, 400, 291, 434, 2614, 322, 300, 912, 7207, 13, 50472, 50472, 407, 291, 393, 291, 393, 764, 11346, 19314, 281, 360, 589, 11, 291, 360, 643, 281, 2845, 2845, 4675, 646, 50878, 50878, 293, 5220, 13, 50984, 50984, 583, 341, 307, 1071, 3995, 1901, 300, 727, 312, 588, 1880, 337, 2699, 76, 570, 341, 1333, 51216, 51216, 295, 2699, 76, 9482, 307, 257, 588, 3303, 3318, 337, 10205, 264, 2135, 589, 766, 295, 264, 2135, 51528, 51528, 7207, 11, 293, 550, 7750, 7897, 646, 281, 980, 264, 2135, 7207, 281, 5623, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.058275615175565086, "compression_ratio": 1.722466960352423, "no_caption_prob": 1.863109901023563e-05}, {"id": 800, "seek": 333816, "start": 3350.56, "end": 3355.2, "text": " But this is another potential space that could be very interesting for Elm because this sort", "tokens": [50364, 400, 291, 434, 2614, 322, 300, 912, 7207, 13, 50472, 50472, 407, 291, 393, 291, 393, 764, 11346, 19314, 281, 360, 589, 11, 291, 360, 643, 281, 2845, 2845, 4675, 646, 50878, 50878, 293, 5220, 13, 50984, 50984, 583, 341, 307, 1071, 3995, 1901, 300, 727, 312, 588, 1880, 337, 2699, 76, 570, 341, 1333, 51216, 51216, 295, 2699, 76, 9482, 307, 257, 588, 3303, 3318, 337, 10205, 264, 2135, 589, 766, 295, 264, 2135, 51528, 51528, 7207, 11, 293, 550, 7750, 7897, 646, 281, 980, 264, 2135, 7207, 281, 5623, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.058275615175565086, "compression_ratio": 1.722466960352423, "no_caption_prob": 1.863109901023563e-05}, {"id": 801, "seek": 333816, "start": 3355.2, "end": 3361.44, "text": " of Elm architecture is a very natural fit for performing the main work off of the main", "tokens": [50364, 400, 291, 434, 2614, 322, 300, 912, 7207, 13, 50472, 50472, 407, 291, 393, 291, 393, 764, 11346, 19314, 281, 360, 589, 11, 291, 360, 643, 281, 2845, 2845, 4675, 646, 50878, 50878, 293, 5220, 13, 50984, 50984, 583, 341, 307, 1071, 3995, 1901, 300, 727, 312, 588, 1880, 337, 2699, 76, 570, 341, 1333, 51216, 51216, 295, 2699, 76, 9482, 307, 257, 588, 3303, 3318, 337, 10205, 264, 2135, 589, 766, 295, 264, 2135, 51528, 51528, 7207, 11, 293, 550, 7750, 7897, 646, 281, 980, 264, 2135, 7207, 281, 5623, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.058275615175565086, "compression_ratio": 1.722466960352423, "no_caption_prob": 1.863109901023563e-05}, {"id": 802, "seek": 333816, "start": 3361.44, "end": 3366.68, "text": " thread, and then sending messages back to tell the main thread to update.", "tokens": [50364, 400, 291, 434, 2614, 322, 300, 912, 7207, 13, 50472, 50472, 407, 291, 393, 291, 393, 764, 11346, 19314, 281, 360, 589, 11, 291, 360, 643, 281, 2845, 2845, 4675, 646, 50878, 50878, 293, 5220, 13, 50984, 50984, 583, 341, 307, 1071, 3995, 1901, 300, 727, 312, 588, 1880, 337, 2699, 76, 570, 341, 1333, 51216, 51216, 295, 2699, 76, 9482, 307, 257, 588, 3303, 3318, 337, 10205, 264, 2135, 589, 766, 295, 264, 2135, 51528, 51528, 7207, 11, 293, 550, 7750, 7897, 646, 281, 980, 264, 2135, 7207, 281, 5623, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.058275615175565086, "compression_ratio": 1.722466960352423, "no_caption_prob": 1.863109901023563e-05}, {"id": 803, "seek": 336668, "start": 3366.68, "end": 3368.6, "text": " Who knows if anything like that will ever happen.", "tokens": [50364, 2102, 3255, 498, 1340, 411, 300, 486, 1562, 1051, 13, 50460, 50460, 583, 613, 366, 613, 366, 264, 721, 300, 11, 797, 11, 309, 311, 411, 2699, 76, 307, 257, 31958, 11, 293, 437, 393, 50772, 50772, 321, 360, 652, 1940, 5002, 295, 300, 13, 50902, 50902, 400, 370, 286, 490, 341, 1379, 3761, 11, 286, 534, 360, 483, 264, 2020, 300, 2035, 264, 2027, 51200, 51200, 9190, 11, 456, 311, 544, 2650, 13, 51366, 51366, 400, 321, 645, 406, 1096, 8867, 766, 264, 2295, 8345, 6773, 754, 457, 456, 366, 567, 3255, 11, 1310, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.1902811840327099, "compression_ratio": 1.6317991631799162, "no_caption_prob": 9.168848919216543e-05}, {"id": 804, "seek": 336668, "start": 3368.6, "end": 3374.8399999999997, "text": " But these are these are the things that, again, it's like Elm is a compiler, and what can", "tokens": [50364, 2102, 3255, 498, 1340, 411, 300, 486, 1562, 1051, 13, 50460, 50460, 583, 613, 366, 613, 366, 264, 721, 300, 11, 797, 11, 309, 311, 411, 2699, 76, 307, 257, 31958, 11, 293, 437, 393, 50772, 50772, 321, 360, 652, 1940, 5002, 295, 300, 13, 50902, 50902, 400, 370, 286, 490, 341, 1379, 3761, 11, 286, 534, 360, 483, 264, 2020, 300, 2035, 264, 2027, 51200, 51200, 9190, 11, 456, 311, 544, 2650, 13, 51366, 51366, 400, 321, 645, 406, 1096, 8867, 766, 264, 2295, 8345, 6773, 754, 457, 456, 366, 567, 3255, 11, 1310, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.1902811840327099, "compression_ratio": 1.6317991631799162, "no_caption_prob": 9.168848919216543e-05}, {"id": 805, "seek": 336668, "start": 3374.8399999999997, "end": 3377.44, "text": " we do make taking advantage of that.", "tokens": [50364, 2102, 3255, 498, 1340, 411, 300, 486, 1562, 1051, 13, 50460, 50460, 583, 613, 366, 613, 366, 264, 721, 300, 11, 797, 11, 309, 311, 411, 2699, 76, 307, 257, 31958, 11, 293, 437, 393, 50772, 50772, 321, 360, 652, 1940, 5002, 295, 300, 13, 50902, 50902, 400, 370, 286, 490, 341, 1379, 3761, 11, 286, 534, 360, 483, 264, 2020, 300, 2035, 264, 2027, 51200, 51200, 9190, 11, 456, 311, 544, 2650, 13, 51366, 51366, 400, 321, 645, 406, 1096, 8867, 766, 264, 2295, 8345, 6773, 754, 457, 456, 366, 567, 3255, 11, 1310, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.1902811840327099, "compression_ratio": 1.6317991631799162, "no_caption_prob": 9.168848919216543e-05}, {"id": 806, "seek": 336668, "start": 3377.44, "end": 3383.3999999999996, "text": " And so I from this whole conversation, I really do get the sense that whatever the future", "tokens": [50364, 2102, 3255, 498, 1340, 411, 300, 486, 1562, 1051, 13, 50460, 50460, 583, 613, 366, 613, 366, 264, 721, 300, 11, 797, 11, 309, 311, 411, 2699, 76, 307, 257, 31958, 11, 293, 437, 393, 50772, 50772, 321, 360, 652, 1940, 5002, 295, 300, 13, 50902, 50902, 400, 370, 286, 490, 341, 1379, 3761, 11, 286, 534, 360, 483, 264, 2020, 300, 2035, 264, 2027, 51200, 51200, 9190, 11, 456, 311, 544, 2650, 13, 51366, 51366, 400, 321, 645, 406, 1096, 8867, 766, 264, 2295, 8345, 6773, 754, 457, 456, 366, 567, 3255, 11, 1310, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.1902811840327099, "compression_ratio": 1.6317991631799162, "no_caption_prob": 9.168848919216543e-05}, {"id": 807, "seek": 336668, "start": 3383.3999999999996, "end": 3386.72, "text": " holds, there's more opportunity.", "tokens": [50364, 2102, 3255, 498, 1340, 411, 300, 486, 1562, 1051, 13, 50460, 50460, 583, 613, 366, 613, 366, 264, 721, 300, 11, 797, 11, 309, 311, 411, 2699, 76, 307, 257, 31958, 11, 293, 437, 393, 50772, 50772, 321, 360, 652, 1940, 5002, 295, 300, 13, 50902, 50902, 400, 370, 286, 490, 341, 1379, 3761, 11, 286, 534, 360, 483, 264, 2020, 300, 2035, 264, 2027, 51200, 51200, 9190, 11, 456, 311, 544, 2650, 13, 51366, 51366, 400, 321, 645, 406, 1096, 8867, 766, 264, 2295, 8345, 6773, 754, 457, 456, 366, 567, 3255, 11, 1310, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.1902811840327099, "compression_ratio": 1.6317991631799162, "no_caption_prob": 9.168848919216543e-05}, {"id": 808, "seek": 336668, "start": 3386.72, "end": 3392.16, "text": " And we were not done picking off the low hanging fruit even but there are who knows, maybe", "tokens": [50364, 2102, 3255, 498, 1340, 411, 300, 486, 1562, 1051, 13, 50460, 50460, 583, 613, 366, 613, 366, 264, 721, 300, 11, 797, 11, 309, 311, 411, 2699, 76, 307, 257, 31958, 11, 293, 437, 393, 50772, 50772, 321, 360, 652, 1940, 5002, 295, 300, 13, 50902, 50902, 400, 370, 286, 490, 341, 1379, 3761, 11, 286, 534, 360, 483, 264, 2020, 300, 2035, 264, 2027, 51200, 51200, 9190, 11, 456, 311, 544, 2650, 13, 51366, 51366, 400, 321, 645, 406, 1096, 8867, 766, 264, 2295, 8345, 6773, 754, 457, 456, 366, 567, 3255, 11, 1310, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.1902811840327099, "compression_ratio": 1.6317991631799162, "no_caption_prob": 9.168848919216543e-05}, {"id": 809, "seek": 339216, "start": 3392.16, "end": 3397.22, "text": " there's some big thing in the future that could could even blow those out of the water.", "tokens": [50364, 456, 311, 512, 955, 551, 294, 264, 2027, 300, 727, 727, 754, 6327, 729, 484, 295, 264, 1281, 13, 50617, 50617, 407, 309, 311, 309, 603, 312, 1880, 281, 536, 437, 2314, 13, 50750, 50750, 7587, 13, 50800, 50800, 400, 456, 366, 3866, 3331, 295, 341, 611, 13, 50916, 50916, 1743, 321, 2825, 257, 707, 857, 466, 2699, 970, 347, 13, 51072, 51072, 286, 2835, 31901, 73, 540, 11, 558, 11, 411, 3397, 325, 2310, 538, 7576, 17077, 23702, 10457, 11, 420, 1858, 23702, 10457, 13, 51442, 51442, 821, 307, 456, 307, 611, 411, 370, 472, 1880, 551, 307, 15778, 2564, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1992311657599683, "compression_ratio": 1.588235294117647, "no_caption_prob": 1.5206055650196504e-05}, {"id": 810, "seek": 339216, "start": 3397.22, "end": 3399.8799999999997, "text": " So it's it'll be interesting to see what happens.", "tokens": [50364, 456, 311, 512, 955, 551, 294, 264, 2027, 300, 727, 727, 754, 6327, 729, 484, 295, 264, 1281, 13, 50617, 50617, 407, 309, 311, 309, 603, 312, 1880, 281, 536, 437, 2314, 13, 50750, 50750, 7587, 13, 50800, 50800, 400, 456, 366, 3866, 3331, 295, 341, 611, 13, 50916, 50916, 1743, 321, 2825, 257, 707, 857, 466, 2699, 970, 347, 13, 51072, 51072, 286, 2835, 31901, 73, 540, 11, 558, 11, 411, 3397, 325, 2310, 538, 7576, 17077, 23702, 10457, 11, 420, 1858, 23702, 10457, 13, 51442, 51442, 821, 307, 456, 307, 611, 411, 370, 472, 1880, 551, 307, 15778, 2564, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1992311657599683, "compression_ratio": 1.588235294117647, "no_caption_prob": 1.5206055650196504e-05}, {"id": 811, "seek": 339216, "start": 3399.8799999999997, "end": 3400.8799999999997, "text": " Exactly.", "tokens": [50364, 456, 311, 512, 955, 551, 294, 264, 2027, 300, 727, 727, 754, 6327, 729, 484, 295, 264, 1281, 13, 50617, 50617, 407, 309, 311, 309, 603, 312, 1880, 281, 536, 437, 2314, 13, 50750, 50750, 7587, 13, 50800, 50800, 400, 456, 366, 3866, 3331, 295, 341, 611, 13, 50916, 50916, 1743, 321, 2825, 257, 707, 857, 466, 2699, 970, 347, 13, 51072, 51072, 286, 2835, 31901, 73, 540, 11, 558, 11, 411, 3397, 325, 2310, 538, 7576, 17077, 23702, 10457, 11, 420, 1858, 23702, 10457, 13, 51442, 51442, 821, 307, 456, 307, 611, 411, 370, 472, 1880, 551, 307, 15778, 2564, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1992311657599683, "compression_ratio": 1.588235294117647, "no_caption_prob": 1.5206055650196504e-05}, {"id": 812, "seek": 339216, "start": 3400.8799999999997, "end": 3403.2, "text": " And there are multiple cases of this also.", "tokens": [50364, 456, 311, 512, 955, 551, 294, 264, 2027, 300, 727, 727, 754, 6327, 729, 484, 295, 264, 1281, 13, 50617, 50617, 407, 309, 311, 309, 603, 312, 1880, 281, 536, 437, 2314, 13, 50750, 50750, 7587, 13, 50800, 50800, 400, 456, 366, 3866, 3331, 295, 341, 611, 13, 50916, 50916, 1743, 321, 2825, 257, 707, 857, 466, 2699, 970, 347, 13, 51072, 51072, 286, 2835, 31901, 73, 540, 11, 558, 11, 411, 3397, 325, 2310, 538, 7576, 17077, 23702, 10457, 11, 420, 1858, 23702, 10457, 13, 51442, 51442, 821, 307, 456, 307, 611, 411, 370, 472, 1880, 551, 307, 15778, 2564, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1992311657599683, "compression_ratio": 1.588235294117647, "no_caption_prob": 1.5206055650196504e-05}, {"id": 813, "seek": 339216, "start": 3403.2, "end": 3406.3199999999997, "text": " Like we talked a little bit about Elixir.", "tokens": [50364, 456, 311, 512, 955, 551, 294, 264, 2027, 300, 727, 727, 754, 6327, 729, 484, 295, 264, 1281, 13, 50617, 50617, 407, 309, 311, 309, 603, 312, 1880, 281, 536, 437, 2314, 13, 50750, 50750, 7587, 13, 50800, 50800, 400, 456, 366, 3866, 3331, 295, 341, 611, 13, 50916, 50916, 1743, 321, 2825, 257, 707, 857, 466, 2699, 970, 347, 13, 51072, 51072, 286, 2835, 31901, 73, 540, 11, 558, 11, 411, 3397, 325, 2310, 538, 7576, 17077, 23702, 10457, 11, 420, 1858, 23702, 10457, 13, 51442, 51442, 821, 307, 456, 307, 611, 411, 370, 472, 1880, 551, 307, 15778, 2564, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1992311657599683, "compression_ratio": 1.588235294117647, "no_caption_prob": 1.5206055650196504e-05}, {"id": 814, "seek": 339216, "start": 3406.3199999999997, "end": 3413.72, "text": " I mentioned Clojure, right, like immutability by default enables concurrency, or easy concurrency.", "tokens": [50364, 456, 311, 512, 955, 551, 294, 264, 2027, 300, 727, 727, 754, 6327, 729, 484, 295, 264, 1281, 13, 50617, 50617, 407, 309, 311, 309, 603, 312, 1880, 281, 536, 437, 2314, 13, 50750, 50750, 7587, 13, 50800, 50800, 400, 456, 366, 3866, 3331, 295, 341, 611, 13, 50916, 50916, 1743, 321, 2825, 257, 707, 857, 466, 2699, 970, 347, 13, 51072, 51072, 286, 2835, 31901, 73, 540, 11, 558, 11, 411, 3397, 325, 2310, 538, 7576, 17077, 23702, 10457, 11, 420, 1858, 23702, 10457, 13, 51442, 51442, 821, 307, 456, 307, 611, 411, 370, 472, 1880, 551, 307, 15778, 2564, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1992311657599683, "compression_ratio": 1.588235294117647, "no_caption_prob": 1.5206055650196504e-05}, {"id": 815, "seek": 339216, "start": 3413.72, "end": 3419.7599999999998, "text": " There is there is also like so one interesting thing is JavaScript itself.", "tokens": [50364, 456, 311, 512, 955, 551, 294, 264, 2027, 300, 727, 727, 754, 6327, 729, 484, 295, 264, 1281, 13, 50617, 50617, 407, 309, 311, 309, 603, 312, 1880, 281, 536, 437, 2314, 13, 50750, 50750, 7587, 13, 50800, 50800, 400, 456, 366, 3866, 3331, 295, 341, 611, 13, 50916, 50916, 1743, 321, 2825, 257, 707, 857, 466, 2699, 970, 347, 13, 51072, 51072, 286, 2835, 31901, 73, 540, 11, 558, 11, 411, 3397, 325, 2310, 538, 7576, 17077, 23702, 10457, 11, 420, 1858, 23702, 10457, 13, 51442, 51442, 821, 307, 456, 307, 611, 411, 370, 472, 1880, 551, 307, 15778, 2564, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1992311657599683, "compression_ratio": 1.588235294117647, "no_caption_prob": 1.5206055650196504e-05}, {"id": 816, "seek": 341976, "start": 3419.76, "end": 3426.6800000000003, "text": " One of the reasons node.js took off was because it has this event loop built in.", "tokens": [50364, 1485, 295, 264, 4112, 9984, 13, 25530, 1890, 766, 390, 570, 309, 575, 341, 2280, 6367, 3094, 294, 13, 50710, 50710, 400, 370, 754, 1673, 291, 393, 380, 2042, 24903, 379, 5124, 721, 11, 570, 291, 486, 3461, 264, 51070, 51070, 7207, 11, 264, 9984, 34474, 420, 264, 15778, 34474, 1669, 309, 588, 1858, 281, 360, 281, 360, 2280, 51480, 51480, 2361, 9410, 13, 51542, 51542, 400, 498, 291, 2464, 15909, 300, 11, 291, 458, 11, 818, 257, 8149, 11, 293, 550, 436, 445, 1699, 337, 264, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1396032270494398, "compression_ratio": 1.5756302521008403, "no_caption_prob": 4.157254807068966e-06}, {"id": 817, "seek": 341976, "start": 3426.6800000000003, "end": 3433.88, "text": " And so even though you can't perform computationally expensive things, because you will block the", "tokens": [50364, 1485, 295, 264, 4112, 9984, 13, 25530, 1890, 766, 390, 570, 309, 575, 341, 2280, 6367, 3094, 294, 13, 50710, 50710, 400, 370, 754, 1673, 291, 393, 380, 2042, 24903, 379, 5124, 721, 11, 570, 291, 486, 3461, 264, 51070, 51070, 7207, 11, 264, 9984, 34474, 420, 264, 15778, 34474, 1669, 309, 588, 1858, 281, 360, 281, 360, 2280, 51480, 51480, 2361, 9410, 13, 51542, 51542, 400, 498, 291, 2464, 15909, 300, 11, 291, 458, 11, 818, 257, 8149, 11, 293, 550, 436, 445, 1699, 337, 264, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1396032270494398, "compression_ratio": 1.5756302521008403, "no_caption_prob": 4.157254807068966e-06}, {"id": 818, "seek": 341976, "start": 3433.88, "end": 3442.0800000000004, "text": " thread, the node runtime or the JavaScript runtime makes it very easy to do to do event", "tokens": [50364, 1485, 295, 264, 4112, 9984, 13, 25530, 1890, 766, 390, 570, 309, 575, 341, 2280, 6367, 3094, 294, 13, 50710, 50710, 400, 370, 754, 1673, 291, 393, 380, 2042, 24903, 379, 5124, 721, 11, 570, 291, 486, 3461, 264, 51070, 51070, 7207, 11, 264, 9984, 34474, 420, 264, 15778, 34474, 1669, 309, 588, 1858, 281, 360, 281, 360, 2280, 51480, 51480, 2361, 9410, 13, 51542, 51542, 400, 498, 291, 2464, 15909, 300, 11, 291, 458, 11, 818, 257, 8149, 11, 293, 550, 436, 445, 1699, 337, 264, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1396032270494398, "compression_ratio": 1.5756302521008403, "no_caption_prob": 4.157254807068966e-06}, {"id": 819, "seek": 341976, "start": 3442.0800000000004, "end": 3443.32, "text": " based programming.", "tokens": [50364, 1485, 295, 264, 4112, 9984, 13, 25530, 1890, 766, 390, 570, 309, 575, 341, 2280, 6367, 3094, 294, 13, 50710, 50710, 400, 370, 754, 1673, 291, 393, 380, 2042, 24903, 379, 5124, 721, 11, 570, 291, 486, 3461, 264, 51070, 51070, 7207, 11, 264, 9984, 34474, 420, 264, 15778, 34474, 1669, 309, 588, 1858, 281, 360, 281, 360, 2280, 51480, 51480, 2361, 9410, 13, 51542, 51542, 400, 498, 291, 2464, 15909, 300, 11, 291, 458, 11, 818, 257, 8149, 11, 293, 550, 436, 445, 1699, 337, 264, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1396032270494398, "compression_ratio": 1.5756302521008403, "no_caption_prob": 4.157254807068966e-06}, {"id": 820, "seek": 341976, "start": 3443.32, "end": 3448.0, "text": " And if you write servers that, you know, call a database, and then they just wait for the", "tokens": [50364, 1485, 295, 264, 4112, 9984, 13, 25530, 1890, 766, 390, 570, 309, 575, 341, 2280, 6367, 3094, 294, 13, 50710, 50710, 400, 370, 754, 1673, 291, 393, 380, 2042, 24903, 379, 5124, 721, 11, 570, 291, 486, 3461, 264, 51070, 51070, 7207, 11, 264, 9984, 34474, 420, 264, 15778, 34474, 1669, 309, 588, 1858, 281, 360, 281, 360, 2280, 51480, 51480, 2361, 9410, 13, 51542, 51542, 400, 498, 291, 2464, 15909, 300, 11, 291, 458, 11, 818, 257, 8149, 11, 293, 550, 436, 445, 1699, 337, 264, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1396032270494398, "compression_ratio": 1.5756302521008403, "no_caption_prob": 4.157254807068966e-06}, {"id": 821, "seek": 344800, "start": 3448.0, "end": 3455.68, "text": " results, node was really, really good at utilizing the one thread it has, which languages like", "tokens": [50364, 3542, 11, 9984, 390, 534, 11, 534, 665, 412, 26775, 264, 472, 7207, 309, 575, 11, 597, 8650, 411, 50748, 50748, 10745, 293, 5893, 7129, 11, 597, 307, 17088, 19314, 11, 2067, 380, 300, 665, 412, 50998, 50998, 912, 365, 19907, 11, 19907, 311, 632, 257, 688, 295, 2663, 365, 17776, 3991, 11, 1954, 11, 39839, 7705, 13, 51280, 51280, 865, 13, 51330, 51330, 407, 534, 11, 264, 1778, 983, 9984, 1890, 766, 390, 570, 294, 3124, 11, 291, 6453, 281, 483, 15909, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.2196057418297077, "compression_ratio": 1.543778801843318, "no_caption_prob": 3.535357245709747e-05}, {"id": 822, "seek": 344800, "start": 3455.68, "end": 3460.68, "text": " Java and dotnet, which is spawn threads, wasn't that good at", "tokens": [50364, 3542, 11, 9984, 390, 534, 11, 534, 665, 412, 26775, 264, 472, 7207, 309, 575, 11, 597, 8650, 411, 50748, 50748, 10745, 293, 5893, 7129, 11, 597, 307, 17088, 19314, 11, 2067, 380, 300, 665, 412, 50998, 50998, 912, 365, 19907, 11, 19907, 311, 632, 257, 688, 295, 2663, 365, 17776, 3991, 11, 1954, 11, 39839, 7705, 13, 51280, 51280, 865, 13, 51330, 51330, 407, 534, 11, 264, 1778, 983, 9984, 1890, 766, 390, 570, 294, 3124, 11, 291, 6453, 281, 483, 15909, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.2196057418297077, "compression_ratio": 1.543778801843318, "no_caption_prob": 3.535357245709747e-05}, {"id": 823, "seek": 344800, "start": 3460.68, "end": 3466.32, "text": " same with Ruby, Ruby's had a lot of issues with blocking file, oh, IO operations.", "tokens": [50364, 3542, 11, 9984, 390, 534, 11, 534, 665, 412, 26775, 264, 472, 7207, 309, 575, 11, 597, 8650, 411, 50748, 50748, 10745, 293, 5893, 7129, 11, 597, 307, 17088, 19314, 11, 2067, 380, 300, 665, 412, 50998, 50998, 912, 365, 19907, 11, 19907, 311, 632, 257, 688, 295, 2663, 365, 17776, 3991, 11, 1954, 11, 39839, 7705, 13, 51280, 51280, 865, 13, 51330, 51330, 407, 534, 11, 264, 1778, 983, 9984, 1890, 766, 390, 570, 294, 3124, 11, 291, 6453, 281, 483, 15909, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.2196057418297077, "compression_ratio": 1.543778801843318, "no_caption_prob": 3.535357245709747e-05}, {"id": 824, "seek": 344800, "start": 3466.32, "end": 3467.32, "text": " Yeah.", "tokens": [50364, 3542, 11, 9984, 390, 534, 11, 534, 665, 412, 26775, 264, 472, 7207, 309, 575, 11, 597, 8650, 411, 50748, 50748, 10745, 293, 5893, 7129, 11, 597, 307, 17088, 19314, 11, 2067, 380, 300, 665, 412, 50998, 50998, 912, 365, 19907, 11, 19907, 311, 632, 257, 688, 295, 2663, 365, 17776, 3991, 11, 1954, 11, 39839, 7705, 13, 51280, 51280, 865, 13, 51330, 51330, 407, 534, 11, 264, 1778, 983, 9984, 1890, 766, 390, 570, 294, 3124, 11, 291, 6453, 281, 483, 15909, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.2196057418297077, "compression_ratio": 1.543778801843318, "no_caption_prob": 3.535357245709747e-05}, {"id": 825, "seek": 344800, "start": 3467.32, "end": 3473.4, "text": " So really, the reason why node took off was because in practice, you managed to get servers", "tokens": [50364, 3542, 11, 9984, 390, 534, 11, 534, 665, 412, 26775, 264, 472, 7207, 309, 575, 11, 597, 8650, 411, 50748, 50748, 10745, 293, 5893, 7129, 11, 597, 307, 17088, 19314, 11, 2067, 380, 300, 665, 412, 50998, 50998, 912, 365, 19907, 11, 19907, 311, 632, 257, 688, 295, 2663, 365, 17776, 3991, 11, 1954, 11, 39839, 7705, 13, 51280, 51280, 865, 13, 51330, 51330, 407, 534, 11, 264, 1778, 983, 9984, 1890, 766, 390, 570, 294, 3124, 11, 291, 6453, 281, 483, 15909, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.2196057418297077, "compression_ratio": 1.543778801843318, "no_caption_prob": 3.535357245709747e-05}, {"id": 826, "seek": 347340, "start": 3473.4, "end": 3479.2000000000003, "text": " which could handle more load without like without careful engineering, right, just by", "tokens": [50364, 597, 727, 4813, 544, 3677, 1553, 411, 1553, 5026, 7043, 11, 558, 11, 445, 538, 50654, 50654, 7576, 11, 291, 727, 4813, 9131, 295, 12475, 11, 382, 938, 382, 729, 12475, 4999, 380, 884, 1340, 50920, 50920, 5124, 13, 50970, 50970, 400, 300, 311, 411, 15778, 575, 257, 688, 295, 27108, 11, 457, 754, 15778, 570, 295, 264, 15705, 51172, 51172, 309, 575, 11, 390, 1075, 281, 484, 26765, 29052, 4445, 763, 294, 264, 7154, 1901, 11, 597, 307, 17031, 983, 309, 51552, 51552, 1890, 766, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.16187757974142555, "compression_ratio": 1.625, "no_caption_prob": 1.8630666090757586e-05}, {"id": 827, "seek": 347340, "start": 3479.2000000000003, "end": 3484.52, "text": " default, you could handle tons of requests, as long as those requests weren't doing anything", "tokens": [50364, 597, 727, 4813, 544, 3677, 1553, 411, 1553, 5026, 7043, 11, 558, 11, 445, 538, 50654, 50654, 7576, 11, 291, 727, 4813, 9131, 295, 12475, 11, 382, 938, 382, 729, 12475, 4999, 380, 884, 1340, 50920, 50920, 5124, 13, 50970, 50970, 400, 300, 311, 411, 15778, 575, 257, 688, 295, 27108, 11, 457, 754, 15778, 570, 295, 264, 15705, 51172, 51172, 309, 575, 11, 390, 1075, 281, 484, 26765, 29052, 4445, 763, 294, 264, 7154, 1901, 11, 597, 307, 17031, 983, 309, 51552, 51552, 1890, 766, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.16187757974142555, "compression_ratio": 1.625, "no_caption_prob": 1.8630666090757586e-05}, {"id": 828, "seek": 347340, "start": 3484.52, "end": 3485.52, "text": " expensive.", "tokens": [50364, 597, 727, 4813, 544, 3677, 1553, 411, 1553, 5026, 7043, 11, 558, 11, 445, 538, 50654, 50654, 7576, 11, 291, 727, 4813, 9131, 295, 12475, 11, 382, 938, 382, 729, 12475, 4999, 380, 884, 1340, 50920, 50920, 5124, 13, 50970, 50970, 400, 300, 311, 411, 15778, 575, 257, 688, 295, 27108, 11, 457, 754, 15778, 570, 295, 264, 15705, 51172, 51172, 309, 575, 11, 390, 1075, 281, 484, 26765, 29052, 4445, 763, 294, 264, 7154, 1901, 11, 597, 307, 17031, 983, 309, 51552, 51552, 1890, 766, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.16187757974142555, "compression_ratio": 1.625, "no_caption_prob": 1.8630666090757586e-05}, {"id": 829, "seek": 347340, "start": 3485.52, "end": 3489.56, "text": " And that's like JavaScript has a lot of flaws, but even JavaScript because of the limitations", "tokens": [50364, 597, 727, 4813, 544, 3677, 1553, 411, 1553, 5026, 7043, 11, 558, 11, 445, 538, 50654, 50654, 7576, 11, 291, 727, 4813, 9131, 295, 12475, 11, 382, 938, 382, 729, 12475, 4999, 380, 884, 1340, 50920, 50920, 5124, 13, 50970, 50970, 400, 300, 311, 411, 15778, 575, 257, 688, 295, 27108, 11, 457, 754, 15778, 570, 295, 264, 15705, 51172, 51172, 309, 575, 11, 390, 1075, 281, 484, 26765, 29052, 4445, 763, 294, 264, 7154, 1901, 11, 597, 307, 17031, 983, 309, 51552, 51552, 1890, 766, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.16187757974142555, "compression_ratio": 1.625, "no_caption_prob": 1.8630666090757586e-05}, {"id": 830, "seek": 347340, "start": 3489.56, "end": 3497.1600000000003, "text": " it has, was able to outperform naive implementations in the server space, which is partly why it", "tokens": [50364, 597, 727, 4813, 544, 3677, 1553, 411, 1553, 5026, 7043, 11, 558, 11, 445, 538, 50654, 50654, 7576, 11, 291, 727, 4813, 9131, 295, 12475, 11, 382, 938, 382, 729, 12475, 4999, 380, 884, 1340, 50920, 50920, 5124, 13, 50970, 50970, 400, 300, 311, 411, 15778, 575, 257, 688, 295, 27108, 11, 457, 754, 15778, 570, 295, 264, 15705, 51172, 51172, 309, 575, 11, 390, 1075, 281, 484, 26765, 29052, 4445, 763, 294, 264, 7154, 1901, 11, 597, 307, 17031, 983, 309, 51552, 51552, 1890, 766, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.16187757974142555, "compression_ratio": 1.625, "no_caption_prob": 1.8630666090757586e-05}, {"id": 831, "seek": 347340, "start": 3497.1600000000003, "end": 3498.1600000000003, "text": " took off.", "tokens": [50364, 597, 727, 4813, 544, 3677, 1553, 411, 1553, 5026, 7043, 11, 558, 11, 445, 538, 50654, 50654, 7576, 11, 291, 727, 4813, 9131, 295, 12475, 11, 382, 938, 382, 729, 12475, 4999, 380, 884, 1340, 50920, 50920, 5124, 13, 50970, 50970, 400, 300, 311, 411, 15778, 575, 257, 688, 295, 27108, 11, 457, 754, 15778, 570, 295, 264, 15705, 51172, 51172, 309, 575, 11, 390, 1075, 281, 484, 26765, 29052, 4445, 763, 294, 264, 7154, 1901, 11, 597, 307, 17031, 983, 309, 51552, 51552, 1890, 766, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.16187757974142555, "compression_ratio": 1.625, "no_caption_prob": 1.8630666090757586e-05}, {"id": 832, "seek": 349816, "start": 3498.16, "end": 3507.12, "text": " So today, there are better alternatives, but back in 2009, or whatever it was, it was,", "tokens": [50364, 407, 965, 11, 456, 366, 1101, 20478, 11, 457, 646, 294, 11453, 11, 420, 2035, 309, 390, 11, 309, 390, 11, 50812, 50812, 309, 390, 588, 1880, 577, 291, 727, 4813, 257, 688, 295, 12475, 322, 257, 2167, 9984, 13, 25530, 7154, 51104, 51104, 5347, 281, 29052, 10745, 1461, 11, 558, 11, 597, 307, 767, 286, 1697, 983, 9116, 2722, 5111, 51432, 51432, 15778, 382, 264, 3779, 2856, 13, 51555, 51555, 467, 2067, 380, 7993, 702, 8446, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1967059809987138, "compression_ratio": 1.4776785714285714, "no_caption_prob": 7.966005068738014e-05}, {"id": 833, "seek": 349816, "start": 3507.12, "end": 3512.96, "text": " it was very interesting how you could handle a lot of requests on a single node.js server", "tokens": [50364, 407, 965, 11, 456, 366, 1101, 20478, 11, 457, 646, 294, 11453, 11, 420, 2035, 309, 390, 11, 309, 390, 11, 50812, 50812, 309, 390, 588, 1880, 577, 291, 727, 4813, 257, 688, 295, 12475, 322, 257, 2167, 9984, 13, 25530, 7154, 51104, 51104, 5347, 281, 29052, 10745, 1461, 11, 558, 11, 597, 307, 767, 286, 1697, 983, 9116, 2722, 5111, 51432, 51432, 15778, 382, 264, 3779, 2856, 13, 51555, 51555, 467, 2067, 380, 7993, 702, 8446, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1967059809987138, "compression_ratio": 1.4776785714285714, "no_caption_prob": 7.966005068738014e-05}, {"id": 834, "seek": 349816, "start": 3512.96, "end": 3519.52, "text": " compared to naive Java program, right, which is actually I believe why Ryan doll chose", "tokens": [50364, 407, 965, 11, 456, 366, 1101, 20478, 11, 457, 646, 294, 11453, 11, 420, 2035, 309, 390, 11, 309, 390, 11, 50812, 50812, 309, 390, 588, 1880, 577, 291, 727, 4813, 257, 688, 295, 12475, 322, 257, 2167, 9984, 13, 25530, 7154, 51104, 51104, 5347, 281, 29052, 10745, 1461, 11, 558, 11, 597, 307, 767, 286, 1697, 983, 9116, 2722, 5111, 51432, 51432, 15778, 382, 264, 3779, 2856, 13, 51555, 51555, 467, 2067, 380, 7993, 702, 8446, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1967059809987138, "compression_ratio": 1.4776785714285714, "no_caption_prob": 7.966005068738014e-05}, {"id": 835, "seek": 349816, "start": 3519.52, "end": 3521.98, "text": " JavaScript as the target language.", "tokens": [50364, 407, 965, 11, 456, 366, 1101, 20478, 11, 457, 646, 294, 11453, 11, 420, 2035, 309, 390, 11, 309, 390, 11, 50812, 50812, 309, 390, 588, 1880, 577, 291, 727, 4813, 257, 688, 295, 12475, 322, 257, 2167, 9984, 13, 25530, 7154, 51104, 51104, 5347, 281, 29052, 10745, 1461, 11, 558, 11, 597, 307, 767, 286, 1697, 983, 9116, 2722, 5111, 51432, 51432, 15778, 382, 264, 3779, 2856, 13, 51555, 51555, 467, 2067, 380, 7993, 702, 8446, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1967059809987138, "compression_ratio": 1.4776785714285714, "no_caption_prob": 7.966005068738014e-05}, {"id": 836, "seek": 349816, "start": 3521.98, "end": 3523.3199999999997, "text": " It wasn't originally his intent.", "tokens": [50364, 407, 965, 11, 456, 366, 1101, 20478, 11, 457, 646, 294, 11453, 11, 420, 2035, 309, 390, 11, 309, 390, 11, 50812, 50812, 309, 390, 588, 1880, 577, 291, 727, 4813, 257, 688, 295, 12475, 322, 257, 2167, 9984, 13, 25530, 7154, 51104, 51104, 5347, 281, 29052, 10745, 1461, 11, 558, 11, 597, 307, 767, 286, 1697, 983, 9116, 2722, 5111, 51432, 51432, 15778, 382, 264, 3779, 2856, 13, 51555, 51555, 467, 2067, 380, 7993, 702, 8446, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1967059809987138, "compression_ratio": 1.4776785714285714, "no_caption_prob": 7.966005068738014e-05}, {"id": 837, "seek": 352332, "start": 3523.32, "end": 3529.04, "text": " I can't remember maybe it was go or something else that he had in mind, but that event driven", "tokens": [50364, 286, 393, 380, 1604, 1310, 309, 390, 352, 420, 746, 1646, 300, 415, 632, 294, 1575, 11, 457, 300, 2280, 9555, 50650, 50650, 9482, 390, 445, 1270, 257, 665, 3318, 337, 337, 15778, 300, 415, 1437, 365, 300, 13, 50886, 50886, 865, 11, 286, 1128, 767, 7320, 1968, 309, 390, 644, 295, 15778, 420, 445, 644, 295, 51148, 51148, 264, 4445, 763, 295, 15778, 11, 300, 309, 390, 5567, 281, 257, 2167, 7207, 13, 51330, 51330, 286, 914, 11, 286, 519, 300, 311, 264, 4361, 45298, 295, 15778, 1936, 300, 604, 1340, 291, 360, 6676, 322, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14518657684326172, "compression_ratio": 1.7428571428571429, "no_caption_prob": 5.064218566985801e-05}, {"id": 838, "seek": 352332, "start": 3529.04, "end": 3533.76, "text": " architecture was just such a good fit for for JavaScript that he went with that.", "tokens": [50364, 286, 393, 380, 1604, 1310, 309, 390, 352, 420, 746, 1646, 300, 415, 632, 294, 1575, 11, 457, 300, 2280, 9555, 50650, 50650, 9482, 390, 445, 1270, 257, 665, 3318, 337, 337, 15778, 300, 415, 1437, 365, 300, 13, 50886, 50886, 865, 11, 286, 1128, 767, 7320, 1968, 309, 390, 644, 295, 15778, 420, 445, 644, 295, 51148, 51148, 264, 4445, 763, 295, 15778, 11, 300, 309, 390, 5567, 281, 257, 2167, 7207, 13, 51330, 51330, 286, 914, 11, 286, 519, 300, 311, 264, 4361, 45298, 295, 15778, 1936, 300, 604, 1340, 291, 360, 6676, 322, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14518657684326172, "compression_ratio": 1.7428571428571429, "no_caption_prob": 5.064218566985801e-05}, {"id": 839, "seek": 352332, "start": 3533.76, "end": 3539.0, "text": " Yeah, I never actually understood whether it was part of JavaScript or just part of", "tokens": [50364, 286, 393, 380, 1604, 1310, 309, 390, 352, 420, 746, 1646, 300, 415, 632, 294, 1575, 11, 457, 300, 2280, 9555, 50650, 50650, 9482, 390, 445, 1270, 257, 665, 3318, 337, 337, 15778, 300, 415, 1437, 365, 300, 13, 50886, 50886, 865, 11, 286, 1128, 767, 7320, 1968, 309, 390, 644, 295, 15778, 420, 445, 644, 295, 51148, 51148, 264, 4445, 763, 295, 15778, 11, 300, 309, 390, 5567, 281, 257, 2167, 7207, 13, 51330, 51330, 286, 914, 11, 286, 519, 300, 311, 264, 4361, 45298, 295, 15778, 1936, 300, 604, 1340, 291, 360, 6676, 322, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14518657684326172, "compression_ratio": 1.7428571428571429, "no_caption_prob": 5.064218566985801e-05}, {"id": 840, "seek": 352332, "start": 3539.0, "end": 3542.6400000000003, "text": " the implementations of JavaScript, that it was limited to a single thread.", "tokens": [50364, 286, 393, 380, 1604, 1310, 309, 390, 352, 420, 746, 1646, 300, 415, 632, 294, 1575, 11, 457, 300, 2280, 9555, 50650, 50650, 9482, 390, 445, 1270, 257, 665, 3318, 337, 337, 15778, 300, 415, 1437, 365, 300, 13, 50886, 50886, 865, 11, 286, 1128, 767, 7320, 1968, 309, 390, 644, 295, 15778, 420, 445, 644, 295, 51148, 51148, 264, 4445, 763, 295, 15778, 11, 300, 309, 390, 5567, 281, 257, 2167, 7207, 13, 51330, 51330, 286, 914, 11, 286, 519, 300, 311, 264, 4361, 45298, 295, 15778, 1936, 300, 604, 1340, 291, 360, 6676, 322, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14518657684326172, "compression_ratio": 1.7428571428571429, "no_caption_prob": 5.064218566985801e-05}, {"id": 841, "seek": 352332, "start": 3542.6400000000003, "end": 3550.7200000000003, "text": " I mean, I think that's the semantics of JavaScript basically that any anything you do runs on", "tokens": [50364, 286, 393, 380, 1604, 1310, 309, 390, 352, 420, 746, 1646, 300, 415, 632, 294, 1575, 11, 457, 300, 2280, 9555, 50650, 50650, 9482, 390, 445, 1270, 257, 665, 3318, 337, 337, 15778, 300, 415, 1437, 365, 300, 13, 50886, 50886, 865, 11, 286, 1128, 767, 7320, 1968, 309, 390, 644, 295, 15778, 420, 445, 644, 295, 51148, 51148, 264, 4445, 763, 295, 15778, 11, 300, 309, 390, 5567, 281, 257, 2167, 7207, 13, 51330, 51330, 286, 914, 11, 286, 519, 300, 311, 264, 4361, 45298, 295, 15778, 1936, 300, 604, 1340, 291, 360, 6676, 322, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14518657684326172, "compression_ratio": 1.7428571428571429, "no_caption_prob": 5.064218566985801e-05}, {"id": 842, "seek": 355072, "start": 3550.72, "end": 3557.64, "text": " a single thread, but then there's this concept of being able to have a queue up callbacks,", "tokens": [50364, 257, 2167, 7207, 11, 457, 550, 456, 311, 341, 3410, 295, 885, 1075, 281, 362, 257, 18639, 493, 818, 17758, 11, 50710, 50710, 264, 818, 3207, 18639, 293, 1507, 13, 50784, 50784, 1743, 286, 519, 264, 3410, 295, 411, 257, 818, 3207, 18639, 293, 1203, 307, 19453, 666, 264, 4361, 45298, 51037, 51037, 295, 15778, 13, 51087, 51087, 400, 550, 264, 28454, 295, 264, 721, 300, 393, 312, 1096, 294, 257, 2107, 17776, 636, 366, 2685, 51349, 51349, 281, 264, 9984, 34474, 420, 281, 264, 3670, 34474, 11, 411, 992, 565, 346, 11, 337, 1365, 11, 992, 565, 346, 51630, 51630, 307, 406, 644, 295, 15778, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.13376806448171805, "compression_ratio": 1.8220338983050848, "no_caption_prob": 1.8924736650660634e-05}, {"id": 843, "seek": 355072, "start": 3557.64, "end": 3559.12, "text": " the callback queue and stuff.", "tokens": [50364, 257, 2167, 7207, 11, 457, 550, 456, 311, 341, 3410, 295, 885, 1075, 281, 362, 257, 18639, 493, 818, 17758, 11, 50710, 50710, 264, 818, 3207, 18639, 293, 1507, 13, 50784, 50784, 1743, 286, 519, 264, 3410, 295, 411, 257, 818, 3207, 18639, 293, 1203, 307, 19453, 666, 264, 4361, 45298, 51037, 51037, 295, 15778, 13, 51087, 51087, 400, 550, 264, 28454, 295, 264, 721, 300, 393, 312, 1096, 294, 257, 2107, 17776, 636, 366, 2685, 51349, 51349, 281, 264, 9984, 34474, 420, 281, 264, 3670, 34474, 11, 411, 992, 565, 346, 11, 337, 1365, 11, 992, 565, 346, 51630, 51630, 307, 406, 644, 295, 15778, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.13376806448171805, "compression_ratio": 1.8220338983050848, "no_caption_prob": 1.8924736650660634e-05}, {"id": 844, "seek": 355072, "start": 3559.12, "end": 3564.18, "text": " Like I think the concept of like a callback queue and everything is baked into the semantics", "tokens": [50364, 257, 2167, 7207, 11, 457, 550, 456, 311, 341, 3410, 295, 885, 1075, 281, 362, 257, 18639, 493, 818, 17758, 11, 50710, 50710, 264, 818, 3207, 18639, 293, 1507, 13, 50784, 50784, 1743, 286, 519, 264, 3410, 295, 411, 257, 818, 3207, 18639, 293, 1203, 307, 19453, 666, 264, 4361, 45298, 51037, 51037, 295, 15778, 13, 51087, 51087, 400, 550, 264, 28454, 295, 264, 721, 300, 393, 312, 1096, 294, 257, 2107, 17776, 636, 366, 2685, 51349, 51349, 281, 264, 9984, 34474, 420, 281, 264, 3670, 34474, 11, 411, 992, 565, 346, 11, 337, 1365, 11, 992, 565, 346, 51630, 51630, 307, 406, 644, 295, 15778, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.13376806448171805, "compression_ratio": 1.8220338983050848, "no_caption_prob": 1.8924736650660634e-05}, {"id": 845, "seek": 355072, "start": 3564.18, "end": 3565.18, "text": " of JavaScript.", "tokens": [50364, 257, 2167, 7207, 11, 457, 550, 456, 311, 341, 3410, 295, 885, 1075, 281, 362, 257, 18639, 493, 818, 17758, 11, 50710, 50710, 264, 818, 3207, 18639, 293, 1507, 13, 50784, 50784, 1743, 286, 519, 264, 3410, 295, 411, 257, 818, 3207, 18639, 293, 1203, 307, 19453, 666, 264, 4361, 45298, 51037, 51037, 295, 15778, 13, 51087, 51087, 400, 550, 264, 28454, 295, 264, 721, 300, 393, 312, 1096, 294, 257, 2107, 17776, 636, 366, 2685, 51349, 51349, 281, 264, 9984, 34474, 420, 281, 264, 3670, 34474, 11, 411, 992, 565, 346, 11, 337, 1365, 11, 992, 565, 346, 51630, 51630, 307, 406, 644, 295, 15778, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.13376806448171805, "compression_ratio": 1.8220338983050848, "no_caption_prob": 1.8924736650660634e-05}, {"id": 846, "seek": 355072, "start": 3565.18, "end": 3570.4199999999996, "text": " And then the specifics of the things that can be done in a non blocking way are specific", "tokens": [50364, 257, 2167, 7207, 11, 457, 550, 456, 311, 341, 3410, 295, 885, 1075, 281, 362, 257, 18639, 493, 818, 17758, 11, 50710, 50710, 264, 818, 3207, 18639, 293, 1507, 13, 50784, 50784, 1743, 286, 519, 264, 3410, 295, 411, 257, 818, 3207, 18639, 293, 1203, 307, 19453, 666, 264, 4361, 45298, 51037, 51037, 295, 15778, 13, 51087, 51087, 400, 550, 264, 28454, 295, 264, 721, 300, 393, 312, 1096, 294, 257, 2107, 17776, 636, 366, 2685, 51349, 51349, 281, 264, 9984, 34474, 420, 281, 264, 3670, 34474, 11, 411, 992, 565, 346, 11, 337, 1365, 11, 992, 565, 346, 51630, 51630, 307, 406, 644, 295, 15778, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.13376806448171805, "compression_ratio": 1.8220338983050848, "no_caption_prob": 1.8924736650660634e-05}, {"id": 847, "seek": 355072, "start": 3570.4199999999996, "end": 3576.04, "text": " to the node runtime or to the web runtime, like set timeout, for example, set timeout", "tokens": [50364, 257, 2167, 7207, 11, 457, 550, 456, 311, 341, 3410, 295, 885, 1075, 281, 362, 257, 18639, 493, 818, 17758, 11, 50710, 50710, 264, 818, 3207, 18639, 293, 1507, 13, 50784, 50784, 1743, 286, 519, 264, 3410, 295, 411, 257, 818, 3207, 18639, 293, 1203, 307, 19453, 666, 264, 4361, 45298, 51037, 51037, 295, 15778, 13, 51087, 51087, 400, 550, 264, 28454, 295, 264, 721, 300, 393, 312, 1096, 294, 257, 2107, 17776, 636, 366, 2685, 51349, 51349, 281, 264, 9984, 34474, 420, 281, 264, 3670, 34474, 11, 411, 992, 565, 346, 11, 337, 1365, 11, 992, 565, 346, 51630, 51630, 307, 406, 644, 295, 15778, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.13376806448171805, "compression_ratio": 1.8220338983050848, "no_caption_prob": 1.8924736650660634e-05}, {"id": 848, "seek": 355072, "start": 3576.04, "end": 3578.16, "text": " is not part of JavaScript.", "tokens": [50364, 257, 2167, 7207, 11, 457, 550, 456, 311, 341, 3410, 295, 885, 1075, 281, 362, 257, 18639, 493, 818, 17758, 11, 50710, 50710, 264, 818, 3207, 18639, 293, 1507, 13, 50784, 50784, 1743, 286, 519, 264, 3410, 295, 411, 257, 818, 3207, 18639, 293, 1203, 307, 19453, 666, 264, 4361, 45298, 51037, 51037, 295, 15778, 13, 51087, 51087, 400, 550, 264, 28454, 295, 264, 721, 300, 393, 312, 1096, 294, 257, 2107, 17776, 636, 366, 2685, 51349, 51349, 281, 264, 9984, 34474, 420, 281, 264, 3670, 34474, 11, 411, 992, 565, 346, 11, 337, 1365, 11, 992, 565, 346, 51630, 51630, 307, 406, 644, 295, 15778, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.13376806448171805, "compression_ratio": 1.8220338983050848, "no_caption_prob": 1.8924736650660634e-05}, {"id": 849, "seek": 357816, "start": 3578.16, "end": 3582.2799999999997, "text": " Set timeout is part of a runtime like the browser runtime or the nodejs runtime.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 850, "seek": 357816, "start": 3582.2799999999997, "end": 3584.48, "text": " It doesn't exist independent of that.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 851, "seek": 357816, "start": 3584.48, "end": 3588.56, "text": " But it uses the same mechanisms that you mentioned before that are built in.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 852, "seek": 357816, "start": 3588.56, "end": 3589.56, "text": " Yes.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 853, "seek": 357816, "start": 3589.56, "end": 3591.52, "text": " Part of the spec, I guess.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 854, "seek": 357816, "start": 3591.52, "end": 3592.52, "text": " Yeah, exactly.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 855, "seek": 357816, "start": 3592.52, "end": 3595.2, "text": " Those same semantics of a callback queue.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 856, "seek": 357816, "start": 3595.2, "end": 3596.2, "text": " Yeah.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 857, "seek": 357816, "start": 3596.2, "end": 3603.2, "text": " So yeah, so having languages which have limits, those limits can enable certain features that", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 858, "seek": 357816, "start": 3603.2, "end": 3606.24, "text": " can be very well suited to certain kinds of programs.", "tokens": [50364, 8928, 565, 346, 307, 644, 295, 257, 34474, 411, 264, 11185, 34474, 420, 264, 9984, 25530, 34474, 13, 50570, 50570, 467, 1177, 380, 2514, 6695, 295, 300, 13, 50680, 50680, 583, 309, 4960, 264, 912, 15902, 300, 291, 2835, 949, 300, 366, 3094, 294, 13, 50884, 50884, 1079, 13, 50934, 50934, 4100, 295, 264, 1608, 11, 286, 2041, 13, 51032, 51032, 865, 11, 2293, 13, 51082, 51082, 3950, 912, 4361, 45298, 295, 257, 818, 3207, 18639, 13, 51216, 51216, 865, 13, 51266, 51266, 407, 1338, 11, 370, 1419, 8650, 597, 362, 10406, 11, 729, 10406, 393, 9528, 1629, 4122, 300, 51616, 51616, 393, 312, 588, 731, 24736, 281, 1629, 3685, 295, 4268, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.20467733725523338, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.777816032699775e-05}, {"id": 859, "seek": 360624, "start": 3606.24, "end": 3610.7999999999997, "text": " And Elm definitely, if there's one thing that Elm has a lot of, it's limits.", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 860, "seek": 360624, "start": 3610.7999999999997, "end": 3611.7999999999997, "text": " Right.", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 861, "seek": 360624, "start": 3611.7999999999997, "end": 3612.7999999999997, "text": " Exactly.", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 862, "seek": 360624, "start": 3612.7999999999997, "end": 3616.8799999999997, "text": " And those exact limits can be utilized to some pretty interesting results.", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 863, "seek": 360624, "start": 3616.8799999999997, "end": 3620.4799999999996, "text": " HTML lazy, which we talked about earlier is one example of that.", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 864, "seek": 360624, "start": 3620.4799999999996, "end": 3626.3599999999997, "text": " Doing the similar kind of optimization in React takes a lot more planning.", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 865, "seek": 360624, "start": 3626.3599999999997, "end": 3631.8799999999997, "text": " I guess like you need to know that you do not perform mutation in this component or", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 866, "seek": 360624, "start": 3631.8799999999997, "end": 3635.4799999999996, "text": " it will be slow or it will produce buggy behavior.", "tokens": [50364, 400, 2699, 76, 2138, 11, 498, 456, 311, 472, 551, 300, 2699, 76, 575, 257, 688, 295, 11, 309, 311, 10406, 13, 50592, 50592, 1779, 13, 50642, 50642, 7587, 13, 50692, 50692, 400, 729, 1900, 10406, 393, 312, 28158, 281, 512, 1238, 1880, 3542, 13, 50896, 50896, 17995, 14847, 11, 597, 321, 2825, 466, 3071, 307, 472, 1365, 295, 300, 13, 51076, 51076, 18496, 264, 2531, 733, 295, 19618, 294, 30644, 2516, 257, 688, 544, 5038, 13, 51370, 51370, 286, 2041, 411, 291, 643, 281, 458, 300, 291, 360, 406, 2042, 27960, 294, 341, 6542, 420, 51646, 51646, 309, 486, 312, 2964, 420, 309, 486, 5258, 7426, 1480, 5223, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1802793302034077, "compression_ratio": 1.5785714285714285, "no_caption_prob": 9.223282177117653e-06}, {"id": 867, "seek": 363548, "start": 3635.48, "end": 3640.64, "text": " Whereas now it's very likely that you can just tap into that optimization.", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 868, "seek": 363548, "start": 3640.64, "end": 3643.12, "text": " I wouldn't say it is limited.", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 869, "seek": 363548, "start": 3643.12, "end": 3649.08, "text": " I would say it has limitations and those enable you to have no limits.", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 870, "seek": 363548, "start": 3649.08, "end": 3650.8, "text": " Oh, that's great.", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 871, "seek": 363548, "start": 3650.8, "end": 3652.4, "text": " Hey, that's another t shirt.", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 872, "seek": 363548, "start": 3652.4, "end": 3654.56, "text": " Love it.", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 873, "seek": 363548, "start": 3654.56, "end": 3660.72, "text": " So Robin, when you're sitting down to write Elm application code, I mean, I'm sure performance", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 874, "seek": 363548, "start": 3660.72, "end": 3665.08, "text": " is this thing that you can't help but think about no matter what you do.", "tokens": [50364, 13813, 586, 309, 311, 588, 3700, 300, 291, 393, 445, 5119, 666, 300, 19618, 13, 50622, 50622, 286, 2759, 380, 584, 309, 307, 5567, 13, 50746, 50746, 286, 576, 584, 309, 575, 15705, 293, 729, 9528, 291, 281, 362, 572, 10406, 13, 51044, 51044, 876, 11, 300, 311, 869, 13, 51130, 51130, 1911, 11, 300, 311, 1071, 256, 8336, 13, 51210, 51210, 5956, 309, 13, 51318, 51318, 407, 16533, 11, 562, 291, 434, 3798, 760, 281, 2464, 2699, 76, 3861, 3089, 11, 286, 914, 11, 286, 478, 988, 3389, 51626, 51626, 307, 341, 551, 300, 291, 393, 380, 854, 457, 519, 466, 572, 1871, 437, 291, 360, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1788891042981829, "compression_ratio": 1.6153846153846154, "no_caption_prob": 9.223354936693795e-06}, {"id": 875, "seek": 366508, "start": 3665.08, "end": 3671.52, "text": " But are you typically just focused on writing the application code or do you run into places", "tokens": [50364, 583, 366, 291, 5850, 445, 5178, 322, 3579, 264, 3861, 3089, 420, 360, 291, 1190, 666, 3190, 50686, 50686, 689, 382, 364, 2699, 76, 3861, 10754, 11, 291, 915, 300, 291, 643, 281, 534, 519, 466, 3389, 50939, 50939, 293, 10864, 3389, 30, 50989, 50989, 4402, 300, 1051, 588, 2049, 30, 51058, 51058, 509, 366, 3006, 294, 300, 562, 286, 2464, 2699, 76, 3089, 11, 309, 311, 588, 2252, 337, 385, 281, 406, 519, 466, 51325, 51325, 341, 307, 1422, 5747, 10650, 490, 257, 3389, 4585, 13, 51468, 51468, 20652, 11, 300, 311, 746, 286, 600, 1813, 1101, 281, 11200, 382, 286, 600, 7709, 4906, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11335973739624024, "compression_ratio": 1.6897810218978102, "no_caption_prob": 1.7777902030502446e-05}, {"id": 876, "seek": 366508, "start": 3671.52, "end": 3676.58, "text": " where as an Elm application developer, you find that you need to really think about performance", "tokens": [50364, 583, 366, 291, 5850, 445, 5178, 322, 3579, 264, 3861, 3089, 420, 360, 291, 1190, 666, 3190, 50686, 50686, 689, 382, 364, 2699, 76, 3861, 10754, 11, 291, 915, 300, 291, 643, 281, 534, 519, 466, 3389, 50939, 50939, 293, 10864, 3389, 30, 50989, 50989, 4402, 300, 1051, 588, 2049, 30, 51058, 51058, 509, 366, 3006, 294, 300, 562, 286, 2464, 2699, 76, 3089, 11, 309, 311, 588, 2252, 337, 385, 281, 406, 519, 466, 51325, 51325, 341, 307, 1422, 5747, 10650, 490, 257, 3389, 4585, 13, 51468, 51468, 20652, 11, 300, 311, 746, 286, 600, 1813, 1101, 281, 11200, 382, 286, 600, 7709, 4906, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11335973739624024, "compression_ratio": 1.6897810218978102, "no_caption_prob": 1.7777902030502446e-05}, {"id": 877, "seek": 366508, "start": 3676.58, "end": 3677.58, "text": " and tune performance?", "tokens": [50364, 583, 366, 291, 5850, 445, 5178, 322, 3579, 264, 3861, 3089, 420, 360, 291, 1190, 666, 3190, 50686, 50686, 689, 382, 364, 2699, 76, 3861, 10754, 11, 291, 915, 300, 291, 643, 281, 534, 519, 466, 3389, 50939, 50939, 293, 10864, 3389, 30, 50989, 50989, 4402, 300, 1051, 588, 2049, 30, 51058, 51058, 509, 366, 3006, 294, 300, 562, 286, 2464, 2699, 76, 3089, 11, 309, 311, 588, 2252, 337, 385, 281, 406, 519, 466, 51325, 51325, 341, 307, 1422, 5747, 10650, 490, 257, 3389, 4585, 13, 51468, 51468, 20652, 11, 300, 311, 746, 286, 600, 1813, 1101, 281, 11200, 382, 286, 600, 7709, 4906, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11335973739624024, "compression_ratio": 1.6897810218978102, "no_caption_prob": 1.7777902030502446e-05}, {"id": 878, "seek": 366508, "start": 3677.58, "end": 3678.96, "text": " Does that happen very often?", "tokens": [50364, 583, 366, 291, 5850, 445, 5178, 322, 3579, 264, 3861, 3089, 420, 360, 291, 1190, 666, 3190, 50686, 50686, 689, 382, 364, 2699, 76, 3861, 10754, 11, 291, 915, 300, 291, 643, 281, 534, 519, 466, 3389, 50939, 50939, 293, 10864, 3389, 30, 50989, 50989, 4402, 300, 1051, 588, 2049, 30, 51058, 51058, 509, 366, 3006, 294, 300, 562, 286, 2464, 2699, 76, 3089, 11, 309, 311, 588, 2252, 337, 385, 281, 406, 519, 466, 51325, 51325, 341, 307, 1422, 5747, 10650, 490, 257, 3389, 4585, 13, 51468, 51468, 20652, 11, 300, 311, 746, 286, 600, 1813, 1101, 281, 11200, 382, 286, 600, 7709, 4906, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11335973739624024, "compression_ratio": 1.6897810218978102, "no_caption_prob": 1.7777902030502446e-05}, {"id": 879, "seek": 366508, "start": 3678.96, "end": 3684.2999999999997, "text": " You are correct in that when I write Elm code, it's very difficult for me to not think about", "tokens": [50364, 583, 366, 291, 5850, 445, 5178, 322, 3579, 264, 3861, 3089, 420, 360, 291, 1190, 666, 3190, 50686, 50686, 689, 382, 364, 2699, 76, 3861, 10754, 11, 291, 915, 300, 291, 643, 281, 534, 519, 466, 3389, 50939, 50939, 293, 10864, 3389, 30, 50989, 50989, 4402, 300, 1051, 588, 2049, 30, 51058, 51058, 509, 366, 3006, 294, 300, 562, 286, 2464, 2699, 76, 3089, 11, 309, 311, 588, 2252, 337, 385, 281, 406, 519, 466, 51325, 51325, 341, 307, 1422, 5747, 10650, 490, 257, 3389, 4585, 13, 51468, 51468, 20652, 11, 300, 311, 746, 286, 600, 1813, 1101, 281, 11200, 382, 286, 600, 7709, 4906, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11335973739624024, "compression_ratio": 1.6897810218978102, "no_caption_prob": 1.7777902030502446e-05}, {"id": 880, "seek": 366508, "start": 3684.2999999999997, "end": 3687.16, "text": " this is suboptimal from a performance perspective.", "tokens": [50364, 583, 366, 291, 5850, 445, 5178, 322, 3579, 264, 3861, 3089, 420, 360, 291, 1190, 666, 3190, 50686, 50686, 689, 382, 364, 2699, 76, 3861, 10754, 11, 291, 915, 300, 291, 643, 281, 534, 519, 466, 3389, 50939, 50939, 293, 10864, 3389, 30, 50989, 50989, 4402, 300, 1051, 588, 2049, 30, 51058, 51058, 509, 366, 3006, 294, 300, 562, 286, 2464, 2699, 76, 3089, 11, 309, 311, 588, 2252, 337, 385, 281, 406, 519, 466, 51325, 51325, 341, 307, 1422, 5747, 10650, 490, 257, 3389, 4585, 13, 51468, 51468, 20652, 11, 300, 311, 746, 286, 600, 1813, 1101, 281, 11200, 382, 286, 600, 7709, 4906, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11335973739624024, "compression_ratio": 1.6897810218978102, "no_caption_prob": 1.7777902030502446e-05}, {"id": 881, "seek": 366508, "start": 3687.16, "end": 3693.66, "text": " Fortunately, that's something I've become better to ignore as I've grown older.", "tokens": [50364, 583, 366, 291, 5850, 445, 5178, 322, 3579, 264, 3861, 3089, 420, 360, 291, 1190, 666, 3190, 50686, 50686, 689, 382, 364, 2699, 76, 3861, 10754, 11, 291, 915, 300, 291, 643, 281, 534, 519, 466, 3389, 50939, 50939, 293, 10864, 3389, 30, 50989, 50989, 4402, 300, 1051, 588, 2049, 30, 51058, 51058, 509, 366, 3006, 294, 300, 562, 286, 2464, 2699, 76, 3089, 11, 309, 311, 588, 2252, 337, 385, 281, 406, 519, 466, 51325, 51325, 341, 307, 1422, 5747, 10650, 490, 257, 3389, 4585, 13, 51468, 51468, 20652, 11, 300, 311, 746, 286, 600, 1813, 1101, 281, 11200, 382, 286, 600, 7709, 4906, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11335973739624024, "compression_ratio": 1.6897810218978102, "no_caption_prob": 1.7777902030502446e-05}, {"id": 882, "seek": 369366, "start": 3693.66, "end": 3699.92, "text": " So I would say that today I don't focus too much on performance normally.", "tokens": [50364, 407, 286, 576, 584, 300, 965, 286, 500, 380, 1879, 886, 709, 322, 3389, 5646, 13, 50677, 50677, 823, 286, 747, 309, 411, 498, 321, 362, 257, 3389, 1154, 11, 300, 311, 562, 286, 478, 1219, 294, 13, 51111, 51111, 407, 411, 264, 4112, 2699, 76, 24387, 13797, 366, 257, 1874, 295, 300, 13, 51299, 51299, 639, 3861, 307, 8953, 1480, 13, 51396, 51396, 509, 458, 2699, 76, 588, 731, 13, 51475, 51475, 1012, 393, 291, 3470, 264, 2590, 30, 51565, 51565, 400, 321, 9689, 309, 538, 1228, 17995, 14847, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.16093008141768606, "compression_ratio": 1.4761904761904763, "no_caption_prob": 1.4738240679434966e-05}, {"id": 883, "seek": 369366, "start": 3699.92, "end": 3708.6, "text": " Now I take it like if we have a performance problem, that's when I'm called in.", "tokens": [50364, 407, 286, 576, 584, 300, 965, 286, 500, 380, 1879, 886, 709, 322, 3389, 5646, 13, 50677, 50677, 823, 286, 747, 309, 411, 498, 321, 362, 257, 3389, 1154, 11, 300, 311, 562, 286, 478, 1219, 294, 13, 51111, 51111, 407, 411, 264, 4112, 2699, 76, 24387, 13797, 366, 257, 1874, 295, 300, 13, 51299, 51299, 639, 3861, 307, 8953, 1480, 13, 51396, 51396, 509, 458, 2699, 76, 588, 731, 13, 51475, 51475, 1012, 393, 291, 3470, 264, 2590, 30, 51565, 51565, 400, 321, 9689, 309, 538, 1228, 17995, 14847, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.16093008141768606, "compression_ratio": 1.4761904761904763, "no_caption_prob": 1.4738240679434966e-05}, {"id": 884, "seek": 369366, "start": 3708.6, "end": 3712.3599999999997, "text": " So like the reasons Elm CSS improvements are a result of that.", "tokens": [50364, 407, 286, 576, 584, 300, 965, 286, 500, 380, 1879, 886, 709, 322, 3389, 5646, 13, 50677, 50677, 823, 286, 747, 309, 411, 498, 321, 362, 257, 3389, 1154, 11, 300, 311, 562, 286, 478, 1219, 294, 13, 51111, 51111, 407, 411, 264, 4112, 2699, 76, 24387, 13797, 366, 257, 1874, 295, 300, 13, 51299, 51299, 639, 3861, 307, 8953, 1480, 13, 51396, 51396, 509, 458, 2699, 76, 588, 731, 13, 51475, 51475, 1012, 393, 291, 3470, 264, 2590, 30, 51565, 51565, 400, 321, 9689, 309, 538, 1228, 17995, 14847, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.16093008141768606, "compression_ratio": 1.4761904761904763, "no_caption_prob": 1.4738240679434966e-05}, {"id": 885, "seek": 369366, "start": 3712.3599999999997, "end": 3714.2999999999997, "text": " This application is laggy.", "tokens": [50364, 407, 286, 576, 584, 300, 965, 286, 500, 380, 1879, 886, 709, 322, 3389, 5646, 13, 50677, 50677, 823, 286, 747, 309, 411, 498, 321, 362, 257, 3389, 1154, 11, 300, 311, 562, 286, 478, 1219, 294, 13, 51111, 51111, 407, 411, 264, 4112, 2699, 76, 24387, 13797, 366, 257, 1874, 295, 300, 13, 51299, 51299, 639, 3861, 307, 8953, 1480, 13, 51396, 51396, 509, 458, 2699, 76, 588, 731, 13, 51475, 51475, 1012, 393, 291, 3470, 264, 2590, 30, 51565, 51565, 400, 321, 9689, 309, 538, 1228, 17995, 14847, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.16093008141768606, "compression_ratio": 1.4761904761904763, "no_caption_prob": 1.4738240679434966e-05}, {"id": 886, "seek": 369366, "start": 3714.2999999999997, "end": 3715.8799999999997, "text": " You know Elm very well.", "tokens": [50364, 407, 286, 576, 584, 300, 965, 286, 500, 380, 1879, 886, 709, 322, 3389, 5646, 13, 50677, 50677, 823, 286, 747, 309, 411, 498, 321, 362, 257, 3389, 1154, 11, 300, 311, 562, 286, 478, 1219, 294, 13, 51111, 51111, 407, 411, 264, 4112, 2699, 76, 24387, 13797, 366, 257, 1874, 295, 300, 13, 51299, 51299, 639, 3861, 307, 8953, 1480, 13, 51396, 51396, 509, 458, 2699, 76, 588, 731, 13, 51475, 51475, 1012, 393, 291, 3470, 264, 2590, 30, 51565, 51565, 400, 321, 9689, 309, 538, 1228, 17995, 14847, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.16093008141768606, "compression_ratio": 1.4761904761904763, "no_caption_prob": 1.4738240679434966e-05}, {"id": 887, "seek": 369366, "start": 3715.8799999999997, "end": 3717.68, "text": " How can you improve the situation?", "tokens": [50364, 407, 286, 576, 584, 300, 965, 286, 500, 380, 1879, 886, 709, 322, 3389, 5646, 13, 50677, 50677, 823, 286, 747, 309, 411, 498, 321, 362, 257, 3389, 1154, 11, 300, 311, 562, 286, 478, 1219, 294, 13, 51111, 51111, 407, 411, 264, 4112, 2699, 76, 24387, 13797, 366, 257, 1874, 295, 300, 13, 51299, 51299, 639, 3861, 307, 8953, 1480, 13, 51396, 51396, 509, 458, 2699, 76, 588, 731, 13, 51475, 51475, 1012, 393, 291, 3470, 264, 2590, 30, 51565, 51565, 400, 321, 9689, 309, 538, 1228, 17995, 14847, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.16093008141768606, "compression_ratio": 1.4761904761904763, "no_caption_prob": 1.4738240679434966e-05}, {"id": 888, "seek": 369366, "start": 3717.68, "end": 3720.7999999999997, "text": " And we improved it by using HTML lazy.", "tokens": [50364, 407, 286, 576, 584, 300, 965, 286, 500, 380, 1879, 886, 709, 322, 3389, 5646, 13, 50677, 50677, 823, 286, 747, 309, 411, 498, 321, 362, 257, 3389, 1154, 11, 300, 311, 562, 286, 478, 1219, 294, 13, 51111, 51111, 407, 411, 264, 4112, 2699, 76, 24387, 13797, 366, 257, 1874, 295, 300, 13, 51299, 51299, 639, 3861, 307, 8953, 1480, 13, 51396, 51396, 509, 458, 2699, 76, 588, 731, 13, 51475, 51475, 1012, 393, 291, 3470, 264, 2590, 30, 51565, 51565, 400, 321, 9689, 309, 538, 1228, 17995, 14847, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.16093008141768606, "compression_ratio": 1.4761904761904763, "no_caption_prob": 1.4738240679434966e-05}, {"id": 889, "seek": 372080, "start": 3720.8, "end": 3726.2400000000002, "text": " And then I got home and thought about how could we have avoided that optimization in", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 890, "seek": 372080, "start": 3726.2400000000002, "end": 3727.2400000000002, "text": " the first place?", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 891, "seek": 372080, "start": 3727.2400000000002, "end": 3731.76, "text": " Like could we have changed the framework to not have needed HTML lazy in that case?", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 892, "seek": 372080, "start": 3731.76, "end": 3733.42, "text": " So that's how it works now.", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 893, "seek": 372080, "start": 3733.42, "end": 3737.6800000000003, "text": " But one thing that I have learned is that there are certain things which do improve", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 894, "seek": 372080, "start": 3737.6800000000003, "end": 3744.42, "text": " performance but which also at least I think improve readability of the code.", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 895, "seek": 372080, "start": 3744.42, "end": 3746.8, "text": " There are many cases where that is opposite.", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 896, "seek": 372080, "start": 3746.8, "end": 3750.32, "text": " Like improving performance worsens code.", "tokens": [50364, 400, 550, 286, 658, 1280, 293, 1194, 466, 577, 727, 321, 362, 24890, 300, 19618, 294, 50636, 50636, 264, 700, 1081, 30, 50686, 50686, 1743, 727, 321, 362, 3105, 264, 8388, 281, 406, 362, 2978, 17995, 14847, 294, 300, 1389, 30, 50912, 50912, 407, 300, 311, 577, 309, 1985, 586, 13, 50995, 50995, 583, 472, 551, 300, 286, 362, 3264, 307, 300, 456, 366, 1629, 721, 597, 360, 3470, 51208, 51208, 3389, 457, 597, 611, 412, 1935, 286, 519, 3470, 1401, 2310, 295, 264, 3089, 13, 51545, 51545, 821, 366, 867, 3331, 689, 300, 307, 6182, 13, 51664, 51664, 1743, 11470, 3389, 47567, 694, 3089, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15505719618363814, "compression_ratio": 1.7293233082706767, "no_caption_prob": 2.947944494735566e-06}, {"id": 897, "seek": 375032, "start": 3750.32, "end": 3756.44, "text": " But I've found several things that improves performance and increases readability.", "tokens": [50364, 583, 286, 600, 1352, 2940, 721, 300, 24771, 3389, 293, 8637, 1401, 2310, 13, 50670, 50670, 400, 2673, 341, 11626, 1412, 9227, 13, 50927, 50927, 4534, 2049, 291, 393, 5521, 257, 5102, 11, 4325, 300, 341, 576, 312, 544, 7148, 293, 544, 51292, 51292, 49857, 538, 1228, 264, 3006, 1412, 3877, 13, 51452, 51452, 400, 534, 294, 2699, 76, 321, 362, 341, 32094, 11, 1455, 1944, 4368, 6243, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12789617825860847, "compression_ratio": 1.5627906976744186, "no_caption_prob": 1.1125329365313519e-05}, {"id": 898, "seek": 375032, "start": 3756.44, "end": 3761.5800000000004, "text": " And usually this involves data structures.", "tokens": [50364, 583, 286, 600, 1352, 2940, 721, 300, 24771, 3389, 293, 8637, 1401, 2310, 13, 50670, 50670, 400, 2673, 341, 11626, 1412, 9227, 13, 50927, 50927, 4534, 2049, 291, 393, 5521, 257, 5102, 11, 4325, 300, 341, 576, 312, 544, 7148, 293, 544, 51292, 51292, 49857, 538, 1228, 264, 3006, 1412, 3877, 13, 51452, 51452, 400, 534, 294, 2699, 76, 321, 362, 341, 32094, 11, 1455, 1944, 4368, 6243, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12789617825860847, "compression_ratio": 1.5627906976744186, "no_caption_prob": 1.1125329365313519e-05}, {"id": 899, "seek": 375032, "start": 3761.5800000000004, "end": 3768.88, "text": " Most often you can recognize a pattern, realize that this would be more efficient and more", "tokens": [50364, 583, 286, 600, 1352, 2940, 721, 300, 24771, 3389, 293, 8637, 1401, 2310, 13, 50670, 50670, 400, 2673, 341, 11626, 1412, 9227, 13, 50927, 50927, 4534, 2049, 291, 393, 5521, 257, 5102, 11, 4325, 300, 341, 576, 312, 544, 7148, 293, 544, 51292, 51292, 49857, 538, 1228, 264, 3006, 1412, 3877, 13, 51452, 51452, 400, 534, 294, 2699, 76, 321, 362, 341, 32094, 11, 1455, 1944, 4368, 6243, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12789617825860847, "compression_ratio": 1.5627906976744186, "no_caption_prob": 1.1125329365313519e-05}, {"id": 900, "seek": 375032, "start": 3768.88, "end": 3772.0800000000004, "text": " readable by using the correct data structure.", "tokens": [50364, 583, 286, 600, 1352, 2940, 721, 300, 24771, 3389, 293, 8637, 1401, 2310, 13, 50670, 50670, 400, 2673, 341, 11626, 1412, 9227, 13, 50927, 50927, 4534, 2049, 291, 393, 5521, 257, 5102, 11, 4325, 300, 341, 576, 312, 544, 7148, 293, 544, 51292, 51292, 49857, 538, 1228, 264, 3006, 1412, 3877, 13, 51452, 51452, 400, 534, 294, 2699, 76, 321, 362, 341, 32094, 11, 1455, 1944, 4368, 6243, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12789617825860847, "compression_ratio": 1.5627906976744186, "no_caption_prob": 1.1125329365313519e-05}, {"id": 901, "seek": 375032, "start": 3772.0800000000004, "end": 3777.44, "text": " And really in Elm we have this mantra, making possible states impossible.", "tokens": [50364, 583, 286, 600, 1352, 2940, 721, 300, 24771, 3389, 293, 8637, 1401, 2310, 13, 50670, 50670, 400, 2673, 341, 11626, 1412, 9227, 13, 50927, 50927, 4534, 2049, 291, 393, 5521, 257, 5102, 11, 4325, 300, 341, 576, 312, 544, 7148, 293, 544, 51292, 51292, 49857, 538, 1228, 264, 3006, 1412, 3877, 13, 51452, 51452, 400, 534, 294, 2699, 76, 321, 362, 341, 32094, 11, 1455, 1944, 4368, 6243, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12789617825860847, "compression_ratio": 1.5627906976744186, "no_caption_prob": 1.1125329365313519e-05}, {"id": 902, "seek": 377744, "start": 3777.44, "end": 3783.16, "text": " And in a lot of cases making impossible states impossible also improves performance.", "tokens": [50364, 400, 294, 257, 688, 295, 3331, 1455, 6243, 4368, 6243, 611, 24771, 3389, 13, 50650, 50650, 1436, 456, 311, 1570, 6713, 13175, 293, 309, 311, 3571, 281, 483, 2293, 437, 291, 528, 365, 4514, 50938, 50938, 32567, 457, 611, 3389, 32567, 13, 51086, 51086, 18649, 13834, 382, 731, 13, 51208, 51208, 407, 472, 2199, 551, 300, 286, 611, 764, 294, 661, 9410, 8650, 411, 10745, 293, 30123, 5045, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16185779041714138, "compression_ratio": 1.5942028985507246, "no_caption_prob": 1.0783141988213174e-05}, {"id": 903, "seek": 377744, "start": 3783.16, "end": 3788.92, "text": " Because there's less error handling and it's easier to get exactly what you want with safety", "tokens": [50364, 400, 294, 257, 688, 295, 3331, 1455, 6243, 4368, 6243, 611, 24771, 3389, 13, 50650, 50650, 1436, 456, 311, 1570, 6713, 13175, 293, 309, 311, 3571, 281, 483, 2293, 437, 291, 528, 365, 4514, 50938, 50938, 32567, 457, 611, 3389, 32567, 13, 51086, 51086, 18649, 13834, 382, 731, 13, 51208, 51208, 407, 472, 2199, 551, 300, 286, 611, 764, 294, 661, 9410, 8650, 411, 10745, 293, 30123, 5045, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16185779041714138, "compression_ratio": 1.5942028985507246, "no_caption_prob": 1.0783141988213174e-05}, {"id": 904, "seek": 377744, "start": 3788.92, "end": 3791.88, "text": " guarantees but also performance guarantees.", "tokens": [50364, 400, 294, 257, 688, 295, 3331, 1455, 6243, 4368, 6243, 611, 24771, 3389, 13, 50650, 50650, 1436, 456, 311, 1570, 6713, 13175, 293, 309, 311, 3571, 281, 483, 2293, 437, 291, 528, 365, 4514, 50938, 50938, 32567, 457, 611, 3389, 32567, 13, 51086, 51086, 18649, 13834, 382, 731, 13, 51208, 51208, 407, 472, 2199, 551, 300, 286, 611, 764, 294, 661, 9410, 8650, 411, 10745, 293, 30123, 5045, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16185779041714138, "compression_ratio": 1.5942028985507246, "no_caption_prob": 1.0783141988213174e-05}, {"id": 905, "seek": 377744, "start": 3791.88, "end": 3794.32, "text": " Less checks as well.", "tokens": [50364, 400, 294, 257, 688, 295, 3331, 1455, 6243, 4368, 6243, 611, 24771, 3389, 13, 50650, 50650, 1436, 456, 311, 1570, 6713, 13175, 293, 309, 311, 3571, 281, 483, 2293, 437, 291, 528, 365, 4514, 50938, 50938, 32567, 457, 611, 3389, 32567, 13, 51086, 51086, 18649, 13834, 382, 731, 13, 51208, 51208, 407, 472, 2199, 551, 300, 286, 611, 764, 294, 661, 9410, 8650, 411, 10745, 293, 30123, 5045, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16185779041714138, "compression_ratio": 1.5942028985507246, "no_caption_prob": 1.0783141988213174e-05}, {"id": 906, "seek": 377744, "start": 3794.32, "end": 3802.64, "text": " So one simple thing that I also use in other programming languages like Java and Kotlin", "tokens": [50364, 400, 294, 257, 688, 295, 3331, 1455, 6243, 4368, 6243, 611, 24771, 3389, 13, 50650, 50650, 1436, 456, 311, 1570, 6713, 13175, 293, 309, 311, 3571, 281, 483, 2293, 437, 291, 528, 365, 4514, 50938, 50938, 32567, 457, 611, 3389, 32567, 13, 51086, 51086, 18649, 13834, 382, 731, 13, 51208, 51208, 407, 472, 2199, 551, 300, 286, 611, 764, 294, 661, 9410, 8650, 411, 10745, 293, 30123, 5045, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16185779041714138, "compression_ratio": 1.5942028985507246, "no_caption_prob": 1.0783141988213174e-05}, {"id": 907, "seek": 380264, "start": 3802.64, "end": 3814.64, "text": " is whenever I see list.find or something similar to do like a give me the item with this key.", "tokens": [50364, 307, 5699, 286, 536, 1329, 13, 35072, 420, 746, 2531, 281, 360, 411, 257, 976, 385, 264, 3174, 365, 341, 2141, 13, 50964, 50964, 1407, 385, 300, 311, 411, 341, 820, 312, 257, 25890, 13, 51096, 51096, 1743, 983, 1943, 380, 341, 257, 25890, 30, 51240, 51240, 1743, 2171, 1228, 257, 25890, 576, 312, 5324, 4787, 457, 294, 867, 3331, 309, 445, 22832, 51578, 51578, 4180, 1166, 574, 1010, 13, 51628, 51628, 509, 362, 257, 25890, 337, 341, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.2306966666715691, "compression_ratio": 1.6256410256410256, "no_caption_prob": 6.107909575803205e-05}, {"id": 908, "seek": 380264, "start": 3814.64, "end": 3817.2799999999997, "text": " To me that's like this should be a dictionary.", "tokens": [50364, 307, 5699, 286, 536, 1329, 13, 35072, 420, 746, 2531, 281, 360, 411, 257, 976, 385, 264, 3174, 365, 341, 2141, 13, 50964, 50964, 1407, 385, 300, 311, 411, 341, 820, 312, 257, 25890, 13, 51096, 51096, 1743, 983, 1943, 380, 341, 257, 25890, 30, 51240, 51240, 1743, 2171, 1228, 257, 25890, 576, 312, 5324, 4787, 457, 294, 867, 3331, 309, 445, 22832, 51578, 51578, 4180, 1166, 574, 1010, 13, 51628, 51628, 509, 362, 257, 25890, 337, 341, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.2306966666715691, "compression_ratio": 1.6256410256410256, "no_caption_prob": 6.107909575803205e-05}, {"id": 909, "seek": 380264, "start": 3817.2799999999997, "end": 3820.16, "text": " Like why isn't this a dictionary?", "tokens": [50364, 307, 5699, 286, 536, 1329, 13, 35072, 420, 746, 2531, 281, 360, 411, 257, 976, 385, 264, 3174, 365, 341, 2141, 13, 50964, 50964, 1407, 385, 300, 311, 411, 341, 820, 312, 257, 25890, 13, 51096, 51096, 1743, 983, 1943, 380, 341, 257, 25890, 30, 51240, 51240, 1743, 2171, 1228, 257, 25890, 576, 312, 5324, 4787, 457, 294, 867, 3331, 309, 445, 22832, 51578, 51578, 4180, 1166, 574, 1010, 13, 51628, 51628, 509, 362, 257, 25890, 337, 341, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.2306966666715691, "compression_ratio": 1.6256410256410256, "no_caption_prob": 6.107909575803205e-05}, {"id": 910, "seek": 380264, "start": 3820.16, "end": 3826.92, "text": " Like sometimes using a dictionary would be worse overall but in many cases it just screams", "tokens": [50364, 307, 5699, 286, 536, 1329, 13, 35072, 420, 746, 2531, 281, 360, 411, 257, 976, 385, 264, 3174, 365, 341, 2141, 13, 50964, 50964, 1407, 385, 300, 311, 411, 341, 820, 312, 257, 25890, 13, 51096, 51096, 1743, 983, 1943, 380, 341, 257, 25890, 30, 51240, 51240, 1743, 2171, 1228, 257, 25890, 576, 312, 5324, 4787, 457, 294, 867, 3331, 309, 445, 22832, 51578, 51578, 4180, 1166, 574, 1010, 13, 51628, 51628, 509, 362, 257, 25890, 337, 341, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.2306966666715691, "compression_ratio": 1.6256410256410256, "no_caption_prob": 6.107909575803205e-05}, {"id": 911, "seek": 380264, "start": 3826.92, "end": 3827.92, "text": " associative lookup.", "tokens": [50364, 307, 5699, 286, 536, 1329, 13, 35072, 420, 746, 2531, 281, 360, 411, 257, 976, 385, 264, 3174, 365, 341, 2141, 13, 50964, 50964, 1407, 385, 300, 311, 411, 341, 820, 312, 257, 25890, 13, 51096, 51096, 1743, 983, 1943, 380, 341, 257, 25890, 30, 51240, 51240, 1743, 2171, 1228, 257, 25890, 576, 312, 5324, 4787, 457, 294, 867, 3331, 309, 445, 22832, 51578, 51578, 4180, 1166, 574, 1010, 13, 51628, 51628, 509, 362, 257, 25890, 337, 341, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.2306966666715691, "compression_ratio": 1.6256410256410256, "no_caption_prob": 6.107909575803205e-05}, {"id": 912, "seek": 380264, "start": 3827.92, "end": 3830.72, "text": " You have a dictionary for this.", "tokens": [50364, 307, 5699, 286, 536, 1329, 13, 35072, 420, 746, 2531, 281, 360, 411, 257, 976, 385, 264, 3174, 365, 341, 2141, 13, 50964, 50964, 1407, 385, 300, 311, 411, 341, 820, 312, 257, 25890, 13, 51096, 51096, 1743, 983, 1943, 380, 341, 257, 25890, 30, 51240, 51240, 1743, 2171, 1228, 257, 25890, 576, 312, 5324, 4787, 457, 294, 867, 3331, 309, 445, 22832, 51578, 51578, 4180, 1166, 574, 1010, 13, 51628, 51628, 509, 362, 257, 25890, 337, 341, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.2306966666715691, "compression_ratio": 1.6256410256410256, "no_caption_prob": 6.107909575803205e-05}, {"id": 913, "seek": 383072, "start": 3830.72, "end": 3839.6, "text": " Yeah, usually I see list.map and list.head and I'm thinking I should reach out for find.", "tokens": [50364, 865, 11, 2673, 286, 536, 1329, 13, 24223, 293, 1329, 13, 1934, 293, 286, 478, 1953, 286, 820, 2524, 484, 337, 915, 13, 50808, 50808, 400, 550, 1310, 286, 820, 2524, 484, 337, 12569, 82, 13, 50962, 50962, 583, 294, 264, 1389, 300, 291, 2835, 1329, 13, 24223, 11, 1329, 13, 1934, 11, 300, 311, 257, 2176, 764, 295, 445, 1228, 51306, 51306, 257, 819, 1412, 3877, 597, 2709, 291, 1293, 3389, 293, 309, 24771, 264, 8446, 13, 51558, 51558, 708, 630, 291, 11, 437, 366, 291, 1382, 281, 360, 30, 51710, 51710, 407, 300, 311, 611, 257, 7363, 1389, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.17945220583961125, "compression_ratio": 1.6536796536796536, "no_caption_prob": 4.331659511080943e-05}, {"id": 914, "seek": 383072, "start": 3839.6, "end": 3842.68, "text": " And then maybe I should reach out for dicts.", "tokens": [50364, 865, 11, 2673, 286, 536, 1329, 13, 24223, 293, 1329, 13, 1934, 293, 286, 478, 1953, 286, 820, 2524, 484, 337, 915, 13, 50808, 50808, 400, 550, 1310, 286, 820, 2524, 484, 337, 12569, 82, 13, 50962, 50962, 583, 294, 264, 1389, 300, 291, 2835, 1329, 13, 24223, 11, 1329, 13, 1934, 11, 300, 311, 257, 2176, 764, 295, 445, 1228, 51306, 51306, 257, 819, 1412, 3877, 597, 2709, 291, 1293, 3389, 293, 309, 24771, 264, 8446, 13, 51558, 51558, 708, 630, 291, 11, 437, 366, 291, 1382, 281, 360, 30, 51710, 51710, 407, 300, 311, 611, 257, 7363, 1389, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.17945220583961125, "compression_ratio": 1.6536796536796536, "no_caption_prob": 4.331659511080943e-05}, {"id": 915, "seek": 383072, "start": 3842.68, "end": 3849.56, "text": " But in the case that you mentioned list.map, list.head, that's a perfect use of just using", "tokens": [50364, 865, 11, 2673, 286, 536, 1329, 13, 24223, 293, 1329, 13, 1934, 293, 286, 478, 1953, 286, 820, 2524, 484, 337, 915, 13, 50808, 50808, 400, 550, 1310, 286, 820, 2524, 484, 337, 12569, 82, 13, 50962, 50962, 583, 294, 264, 1389, 300, 291, 2835, 1329, 13, 24223, 11, 1329, 13, 1934, 11, 300, 311, 257, 2176, 764, 295, 445, 1228, 51306, 51306, 257, 819, 1412, 3877, 597, 2709, 291, 1293, 3389, 293, 309, 24771, 264, 8446, 13, 51558, 51558, 708, 630, 291, 11, 437, 366, 291, 1382, 281, 360, 30, 51710, 51710, 407, 300, 311, 611, 257, 7363, 1389, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.17945220583961125, "compression_ratio": 1.6536796536796536, "no_caption_prob": 4.331659511080943e-05}, {"id": 916, "seek": 383072, "start": 3849.56, "end": 3854.6, "text": " a different data structure which gives you both performance and it improves the intent.", "tokens": [50364, 865, 11, 2673, 286, 536, 1329, 13, 24223, 293, 1329, 13, 1934, 293, 286, 478, 1953, 286, 820, 2524, 484, 337, 915, 13, 50808, 50808, 400, 550, 1310, 286, 820, 2524, 484, 337, 12569, 82, 13, 50962, 50962, 583, 294, 264, 1389, 300, 291, 2835, 1329, 13, 24223, 11, 1329, 13, 1934, 11, 300, 311, 257, 2176, 764, 295, 445, 1228, 51306, 51306, 257, 819, 1412, 3877, 597, 2709, 291, 1293, 3389, 293, 309, 24771, 264, 8446, 13, 51558, 51558, 708, 630, 291, 11, 437, 366, 291, 1382, 281, 360, 30, 51710, 51710, 407, 300, 311, 611, 257, 7363, 1389, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.17945220583961125, "compression_ratio": 1.6536796536796536, "no_caption_prob": 4.331659511080943e-05}, {"id": 917, "seek": 383072, "start": 3854.6, "end": 3857.64, "text": " What did you, what are you trying to do?", "tokens": [50364, 865, 11, 2673, 286, 536, 1329, 13, 24223, 293, 1329, 13, 1934, 293, 286, 478, 1953, 286, 820, 2524, 484, 337, 915, 13, 50808, 50808, 400, 550, 1310, 286, 820, 2524, 484, 337, 12569, 82, 13, 50962, 50962, 583, 294, 264, 1389, 300, 291, 2835, 1329, 13, 24223, 11, 1329, 13, 1934, 11, 300, 311, 257, 2176, 764, 295, 445, 1228, 51306, 51306, 257, 819, 1412, 3877, 597, 2709, 291, 1293, 3389, 293, 309, 24771, 264, 8446, 13, 51558, 51558, 708, 630, 291, 11, 437, 366, 291, 1382, 281, 360, 30, 51710, 51710, 407, 300, 311, 611, 257, 7363, 1389, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.17945220583961125, "compression_ratio": 1.6536796536796536, "no_caption_prob": 4.331659511080943e-05}, {"id": 918, "seek": 383072, "start": 3857.64, "end": 3859.9199999999996, "text": " So that's also a valid case.", "tokens": [50364, 865, 11, 2673, 286, 536, 1329, 13, 24223, 293, 1329, 13, 1934, 293, 286, 478, 1953, 286, 820, 2524, 484, 337, 915, 13, 50808, 50808, 400, 550, 1310, 286, 820, 2524, 484, 337, 12569, 82, 13, 50962, 50962, 583, 294, 264, 1389, 300, 291, 2835, 1329, 13, 24223, 11, 1329, 13, 1934, 11, 300, 311, 257, 2176, 764, 295, 445, 1228, 51306, 51306, 257, 819, 1412, 3877, 597, 2709, 291, 1293, 3389, 293, 309, 24771, 264, 8446, 13, 51558, 51558, 708, 630, 291, 11, 437, 366, 291, 1382, 281, 360, 30, 51710, 51710, 407, 300, 311, 611, 257, 7363, 1389, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.17945220583961125, "compression_ratio": 1.6536796536796536, "no_caption_prob": 4.331659511080943e-05}, {"id": 919, "seek": 385992, "start": 3859.92, "end": 3865.4, "text": " Using dictionaries or using sets instead of like manually or through some other means", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 920, "seek": 385992, "start": 3865.4, "end": 3870.5, "text": " deduplicating your code usually also improves performance and makes it very clear what the", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 921, "seek": 385992, "start": 3870.5, "end": 3871.86, "text": " intent is.", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 922, "seek": 385992, "start": 3871.86, "end": 3876.64, "text": " And then using sippers or nonempty lists, same thing.", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 923, "seek": 385992, "start": 3876.64, "end": 3882.08, "text": " But retrieving the head of a nonempty list lets you avoid a case of which has performance", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 924, "seek": 385992, "start": 3882.08, "end": 3883.34, "text": " implications.", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 925, "seek": 385992, "start": 3883.34, "end": 3888.2400000000002, "text": " Now granted in many cases the performance improvement we're talking about is small and", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 926, "seek": 385992, "start": 3888.2400000000002, "end": 3889.2400000000002, "text": " insignificant.", "tokens": [50364, 11142, 22352, 4889, 420, 1228, 6352, 2602, 295, 411, 16945, 420, 807, 512, 661, 1355, 50638, 50638, 4172, 84, 4770, 990, 428, 3089, 2673, 611, 24771, 3389, 293, 1669, 309, 588, 1850, 437, 264, 50893, 50893, 8446, 307, 13, 50961, 50961, 400, 550, 1228, 1511, 15226, 420, 2107, 4543, 88, 14511, 11, 912, 551, 13, 51200, 51200, 583, 19817, 798, 264, 1378, 295, 257, 2107, 4543, 88, 1329, 6653, 291, 5042, 257, 1389, 295, 597, 575, 3389, 51472, 51472, 16602, 13, 51535, 51535, 823, 12344, 294, 867, 3331, 264, 3389, 10444, 321, 434, 1417, 466, 307, 1359, 293, 51780, 51780, 43685, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.17223448123572008, "compression_ratio": 1.6996197718631179, "no_caption_prob": 9.818072612688411e-06}, {"id": 927, "seek": 388924, "start": 3889.24, "end": 3894.8199999999997, "text": " But the true benefit is clearer code.", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 928, "seek": 388924, "start": 3894.8199999999997, "end": 3897.64, "text": " It's nice to realize that you can actually have both.", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 929, "seek": 388924, "start": 3897.64, "end": 3898.64, "text": " Right.", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 930, "seek": 388924, "start": 3898.64, "end": 3902.9399999999996, "text": " And you have to really consider the cost if you're doing performance optimization that", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 931, "seek": 388924, "start": 3902.9399999999996, "end": 3905.64, "text": " makes the code harder to reason about.", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 932, "seek": 388924, "start": 3905.64, "end": 3909.0, "text": " Also what's to prevent someone in the future from looking at that code and saying, oh,", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 933, "seek": 388924, "start": 3909.0, "end": 3913.18, "text": " this is kind of ugly and then tweaking it and then breaking the performance up.", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 934, "seek": 388924, "start": 3913.18, "end": 3918.3399999999997, "text": " But if it's the most elegant way to express it, it's a lasting improvement that's good", "tokens": [50364, 583, 264, 2074, 5121, 307, 26131, 3089, 13, 50643, 50643, 467, 311, 1481, 281, 4325, 300, 291, 393, 767, 362, 1293, 13, 50784, 50784, 1779, 13, 50834, 50834, 400, 291, 362, 281, 534, 1949, 264, 2063, 498, 291, 434, 884, 3389, 19618, 300, 51049, 51049, 1669, 264, 3089, 6081, 281, 1778, 466, 13, 51184, 51184, 2743, 437, 311, 281, 4871, 1580, 294, 264, 2027, 490, 1237, 412, 300, 3089, 293, 1566, 11, 1954, 11, 51352, 51352, 341, 307, 733, 295, 12246, 293, 550, 6986, 2456, 309, 293, 550, 7697, 264, 3389, 493, 13, 51561, 51561, 583, 498, 309, 311, 264, 881, 21117, 636, 281, 5109, 309, 11, 309, 311, 257, 20714, 10444, 300, 311, 665, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12786704952977285, "compression_ratio": 1.6950354609929077, "no_caption_prob": 1.2218908523209393e-05}, {"id": 935, "seek": 391834, "start": 3918.34, "end": 3921.6400000000003, "text": " for your code base.", "tokens": [50364, 337, 428, 3089, 3096, 13, 50529, 50529, 663, 311, 611, 733, 295, 411, 437, 14515, 385, 281, 3470, 3389, 295, 2699, 76, 24387, 13, 50767, 50767, 1436, 689, 286, 589, 11, 257, 688, 295, 264, 561, 567, 2464, 2699, 76, 3089, 366, 1364, 322, 641, 700, 51027, 51027, 2699, 76, 3861, 13, 51091, 51091, 814, 3264, 2699, 76, 570, 436, 645, 13144, 412, 691, 420, 294, 512, 661, 646, 1716, 13, 51415, 51415, 400, 550, 321, 2924, 552, 2699, 76, 294, 257, 786, 420, 732, 293, 550, 321, 3507, 552, 484, 666, 264, 2452, 12975, 51662, 51662, 295, 364, 2699, 76, 3861, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16390684609101197, "compression_ratio": 1.6443514644351465, "no_caption_prob": 1.473749398428481e-05}, {"id": 936, "seek": 391834, "start": 3921.6400000000003, "end": 3926.4, "text": " That's also kind of like what motivated me to improve performance of Elm CSS.", "tokens": [50364, 337, 428, 3089, 3096, 13, 50529, 50529, 663, 311, 611, 733, 295, 411, 437, 14515, 385, 281, 3470, 3389, 295, 2699, 76, 24387, 13, 50767, 50767, 1436, 689, 286, 589, 11, 257, 688, 295, 264, 561, 567, 2464, 2699, 76, 3089, 366, 1364, 322, 641, 700, 51027, 51027, 2699, 76, 3861, 13, 51091, 51091, 814, 3264, 2699, 76, 570, 436, 645, 13144, 412, 691, 420, 294, 512, 661, 646, 1716, 13, 51415, 51415, 400, 550, 321, 2924, 552, 2699, 76, 294, 257, 786, 420, 732, 293, 550, 321, 3507, 552, 484, 666, 264, 2452, 12975, 51662, 51662, 295, 364, 2699, 76, 3861, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16390684609101197, "compression_ratio": 1.6443514644351465, "no_caption_prob": 1.473749398428481e-05}, {"id": 937, "seek": 391834, "start": 3926.4, "end": 3931.6000000000004, "text": " Because where I work, a lot of the people who write Elm code are working on their first", "tokens": [50364, 337, 428, 3089, 3096, 13, 50529, 50529, 663, 311, 611, 733, 295, 411, 437, 14515, 385, 281, 3470, 3389, 295, 2699, 76, 24387, 13, 50767, 50767, 1436, 689, 286, 589, 11, 257, 688, 295, 264, 561, 567, 2464, 2699, 76, 3089, 366, 1364, 322, 641, 700, 51027, 51027, 2699, 76, 3861, 13, 51091, 51091, 814, 3264, 2699, 76, 570, 436, 645, 13144, 412, 691, 420, 294, 512, 661, 646, 1716, 13, 51415, 51415, 400, 550, 321, 2924, 552, 2699, 76, 294, 257, 786, 420, 732, 293, 550, 321, 3507, 552, 484, 666, 264, 2452, 12975, 51662, 51662, 295, 364, 2699, 76, 3861, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16390684609101197, "compression_ratio": 1.6443514644351465, "no_caption_prob": 1.473749398428481e-05}, {"id": 938, "seek": 391834, "start": 3931.6000000000004, "end": 3932.88, "text": " Elm application.", "tokens": [50364, 337, 428, 3089, 3096, 13, 50529, 50529, 663, 311, 611, 733, 295, 411, 437, 14515, 385, 281, 3470, 3389, 295, 2699, 76, 24387, 13, 50767, 50767, 1436, 689, 286, 589, 11, 257, 688, 295, 264, 561, 567, 2464, 2699, 76, 3089, 366, 1364, 322, 641, 700, 51027, 51027, 2699, 76, 3861, 13, 51091, 51091, 814, 3264, 2699, 76, 570, 436, 645, 13144, 412, 691, 420, 294, 512, 661, 646, 1716, 13, 51415, 51415, 400, 550, 321, 2924, 552, 2699, 76, 294, 257, 786, 420, 732, 293, 550, 321, 3507, 552, 484, 666, 264, 2452, 12975, 51662, 51662, 295, 364, 2699, 76, 3861, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16390684609101197, "compression_ratio": 1.6443514644351465, "no_caption_prob": 1.473749398428481e-05}, {"id": 939, "seek": 391834, "start": 3932.88, "end": 3939.36, "text": " They learned Elm because they were hired at V or in some other back project.", "tokens": [50364, 337, 428, 3089, 3096, 13, 50529, 50529, 663, 311, 611, 733, 295, 411, 437, 14515, 385, 281, 3470, 3389, 295, 2699, 76, 24387, 13, 50767, 50767, 1436, 689, 286, 589, 11, 257, 688, 295, 264, 561, 567, 2464, 2699, 76, 3089, 366, 1364, 322, 641, 700, 51027, 51027, 2699, 76, 3861, 13, 51091, 51091, 814, 3264, 2699, 76, 570, 436, 645, 13144, 412, 691, 420, 294, 512, 661, 646, 1716, 13, 51415, 51415, 400, 550, 321, 2924, 552, 2699, 76, 294, 257, 786, 420, 732, 293, 550, 321, 3507, 552, 484, 666, 264, 2452, 12975, 51662, 51662, 295, 364, 2699, 76, 3861, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16390684609101197, "compression_ratio": 1.6443514644351465, "no_caption_prob": 1.473749398428481e-05}, {"id": 940, "seek": 391834, "start": 3939.36, "end": 3944.3, "text": " And then we teach them Elm in a day or two and then we throw them out into the deep waters", "tokens": [50364, 337, 428, 3089, 3096, 13, 50529, 50529, 663, 311, 611, 733, 295, 411, 437, 14515, 385, 281, 3470, 3389, 295, 2699, 76, 24387, 13, 50767, 50767, 1436, 689, 286, 589, 11, 257, 688, 295, 264, 561, 567, 2464, 2699, 76, 3089, 366, 1364, 322, 641, 700, 51027, 51027, 2699, 76, 3861, 13, 51091, 51091, 814, 3264, 2699, 76, 570, 436, 645, 13144, 412, 691, 420, 294, 512, 661, 646, 1716, 13, 51415, 51415, 400, 550, 321, 2924, 552, 2699, 76, 294, 257, 786, 420, 732, 293, 550, 321, 3507, 552, 484, 666, 264, 2452, 12975, 51662, 51662, 295, 364, 2699, 76, 3861, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16390684609101197, "compression_ratio": 1.6443514644351465, "no_caption_prob": 1.473749398428481e-05}, {"id": 941, "seek": 391834, "start": 3944.3, "end": 3946.38, "text": " of an Elm application.", "tokens": [50364, 337, 428, 3089, 3096, 13, 50529, 50529, 663, 311, 611, 733, 295, 411, 437, 14515, 385, 281, 3470, 3389, 295, 2699, 76, 24387, 13, 50767, 50767, 1436, 689, 286, 589, 11, 257, 688, 295, 264, 561, 567, 2464, 2699, 76, 3089, 366, 1364, 322, 641, 700, 51027, 51027, 2699, 76, 3861, 13, 51091, 51091, 814, 3264, 2699, 76, 570, 436, 645, 13144, 412, 691, 420, 294, 512, 661, 646, 1716, 13, 51415, 51415, 400, 550, 321, 2924, 552, 2699, 76, 294, 257, 786, 420, 732, 293, 550, 321, 3507, 552, 484, 666, 264, 2452, 12975, 51662, 51662, 295, 364, 2699, 76, 3861, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16390684609101197, "compression_ratio": 1.6443514644351465, "no_caption_prob": 1.473749398428481e-05}, {"id": 942, "seek": 394638, "start": 3946.38, "end": 3948.52, "text": " Now figure it out.", "tokens": [50364, 823, 2573, 309, 484, 13, 50471, 50471, 7587, 13, 50521, 50521, 400, 370, 456, 3212, 380, 867, 561, 300, 286, 589, 365, 322, 257, 786, 281, 786, 5143, 567, 575, 924, 295, 50812, 50812, 2699, 76, 1752, 13, 50880, 50880, 400, 370, 9650, 552, 281, 406, 2082, 493, 3089, 300, 11626, 17995, 14847, 307, 733, 295, 257, 5985, 13, 51407, 51407, 407, 406, 1419, 17995, 14847, 11, 411, 498, 321, 994, 380, 643, 17995, 14847, 11, 309, 307, 1570, 3700, 300, 3389, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12386640282564385, "compression_ratio": 1.5048076923076923, "no_caption_prob": 9.078763469005935e-06}, {"id": 943, "seek": 394638, "start": 3948.52, "end": 3949.52, "text": " Exactly.", "tokens": [50364, 823, 2573, 309, 484, 13, 50471, 50471, 7587, 13, 50521, 50521, 400, 370, 456, 3212, 380, 867, 561, 300, 286, 589, 365, 322, 257, 786, 281, 786, 5143, 567, 575, 924, 295, 50812, 50812, 2699, 76, 1752, 13, 50880, 50880, 400, 370, 9650, 552, 281, 406, 2082, 493, 3089, 300, 11626, 17995, 14847, 307, 733, 295, 257, 5985, 13, 51407, 51407, 407, 406, 1419, 17995, 14847, 11, 411, 498, 321, 994, 380, 643, 17995, 14847, 11, 309, 307, 1570, 3700, 300, 3389, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12386640282564385, "compression_ratio": 1.5048076923076923, "no_caption_prob": 9.078763469005935e-06}, {"id": 944, "seek": 394638, "start": 3949.52, "end": 3955.34, "text": " And so there aren't many people that I work with on a day to day basis who has years of", "tokens": [50364, 823, 2573, 309, 484, 13, 50471, 50471, 7587, 13, 50521, 50521, 400, 370, 456, 3212, 380, 867, 561, 300, 286, 589, 365, 322, 257, 786, 281, 786, 5143, 567, 575, 924, 295, 50812, 50812, 2699, 76, 1752, 13, 50880, 50880, 400, 370, 9650, 552, 281, 406, 2082, 493, 3089, 300, 11626, 17995, 14847, 307, 733, 295, 257, 5985, 13, 51407, 51407, 407, 406, 1419, 17995, 14847, 11, 411, 498, 321, 994, 380, 643, 17995, 14847, 11, 309, 307, 1570, 3700, 300, 3389, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12386640282564385, "compression_ratio": 1.5048076923076923, "no_caption_prob": 9.078763469005935e-06}, {"id": 945, "seek": 394638, "start": 3955.34, "end": 3956.7000000000003, "text": " Elm experience.", "tokens": [50364, 823, 2573, 309, 484, 13, 50471, 50471, 7587, 13, 50521, 50521, 400, 370, 456, 3212, 380, 867, 561, 300, 286, 589, 365, 322, 257, 786, 281, 786, 5143, 567, 575, 924, 295, 50812, 50812, 2699, 76, 1752, 13, 50880, 50880, 400, 370, 9650, 552, 281, 406, 2082, 493, 3089, 300, 11626, 17995, 14847, 307, 733, 295, 257, 5985, 13, 51407, 51407, 407, 406, 1419, 17995, 14847, 11, 411, 498, 321, 994, 380, 643, 17995, 14847, 11, 309, 307, 1570, 3700, 300, 3389, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12386640282564385, "compression_ratio": 1.5048076923076923, "no_caption_prob": 9.078763469005935e-06}, {"id": 946, "seek": 394638, "start": 3956.7000000000003, "end": 3967.2400000000002, "text": " And so expecting them to not mess up code that involves HTML lazy is kind of a stretch.", "tokens": [50364, 823, 2573, 309, 484, 13, 50471, 50471, 7587, 13, 50521, 50521, 400, 370, 456, 3212, 380, 867, 561, 300, 286, 589, 365, 322, 257, 786, 281, 786, 5143, 567, 575, 924, 295, 50812, 50812, 2699, 76, 1752, 13, 50880, 50880, 400, 370, 9650, 552, 281, 406, 2082, 493, 3089, 300, 11626, 17995, 14847, 307, 733, 295, 257, 5985, 13, 51407, 51407, 407, 406, 1419, 17995, 14847, 11, 411, 498, 321, 994, 380, 643, 17995, 14847, 11, 309, 307, 1570, 3700, 300, 3389, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12386640282564385, "compression_ratio": 1.5048076923076923, "no_caption_prob": 9.078763469005935e-06}, {"id": 947, "seek": 394638, "start": 3967.2400000000002, "end": 3973.38, "text": " So not having HTML lazy, like if we didn't need HTML lazy, it is less likely that performance", "tokens": [50364, 823, 2573, 309, 484, 13, 50471, 50471, 7587, 13, 50521, 50521, 400, 370, 456, 3212, 380, 867, 561, 300, 286, 589, 365, 322, 257, 786, 281, 786, 5143, 567, 575, 924, 295, 50812, 50812, 2699, 76, 1752, 13, 50880, 50880, 400, 370, 9650, 552, 281, 406, 2082, 493, 3089, 300, 11626, 17995, 14847, 307, 733, 295, 257, 5985, 13, 51407, 51407, 407, 406, 1419, 17995, 14847, 11, 411, 498, 321, 994, 380, 643, 17995, 14847, 11, 309, 307, 1570, 3700, 300, 3389, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12386640282564385, "compression_ratio": 1.5048076923076923, "no_caption_prob": 9.078763469005935e-06}, {"id": 948, "seek": 397338, "start": 3973.38, "end": 3977.08, "text": " will degrade at some point.", "tokens": [50364, 486, 368, 8692, 412, 512, 935, 13, 50549, 50549, 16533, 11, 577, 360, 291, 352, 466, 5006, 428, 958, 2650, 30, 50768, 50768, 1119, 309, 411, 291, 645, 733, 295, 16141, 365, 341, 2699, 76, 24387, 1389, 11, 29699, 428, 1065, 309, 339, 51048, 51048, 689, 291, 434, 4840, 1280, 490, 589, 293, 291, 434, 411, 11, 16478, 11, 393, 321, 5042, 884, 364, 17995, 14847, 51412, 51412, 456, 30, 51462, 51462, 1119, 300, 2673, 689, 291, 915, 428, 958, 4786, 337, 13797, 30, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1349944526498968, "compression_ratio": 1.53125, "no_caption_prob": 2.6684481781558134e-05}, {"id": 949, "seek": 397338, "start": 3977.08, "end": 3981.46, "text": " Robin, how do you go about finding your next opportunity?", "tokens": [50364, 486, 368, 8692, 412, 512, 935, 13, 50549, 50549, 16533, 11, 577, 360, 291, 352, 466, 5006, 428, 958, 2650, 30, 50768, 50768, 1119, 309, 411, 291, 645, 733, 295, 16141, 365, 341, 2699, 76, 24387, 1389, 11, 29699, 428, 1065, 309, 339, 51048, 51048, 689, 291, 434, 4840, 1280, 490, 589, 293, 291, 434, 411, 11, 16478, 11, 393, 321, 5042, 884, 364, 17995, 14847, 51412, 51412, 456, 30, 51462, 51462, 1119, 300, 2673, 689, 291, 915, 428, 958, 4786, 337, 13797, 30, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1349944526498968, "compression_ratio": 1.53125, "no_caption_prob": 2.6684481781558134e-05}, {"id": 950, "seek": 397338, "start": 3981.46, "end": 3987.06, "text": " Is it like you were kind of describing with this Elm CSS case, scratching your own itch", "tokens": [50364, 486, 368, 8692, 412, 512, 935, 13, 50549, 50549, 16533, 11, 577, 360, 291, 352, 466, 5006, 428, 958, 2650, 30, 50768, 50768, 1119, 309, 411, 291, 645, 733, 295, 16141, 365, 341, 2699, 76, 24387, 1389, 11, 29699, 428, 1065, 309, 339, 51048, 51048, 689, 291, 434, 4840, 1280, 490, 589, 293, 291, 434, 411, 11, 16478, 11, 393, 321, 5042, 884, 364, 17995, 14847, 51412, 51412, 456, 30, 51462, 51462, 1119, 300, 2673, 689, 291, 915, 428, 958, 4786, 337, 13797, 30, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1349944526498968, "compression_ratio": 1.53125, "no_caption_prob": 2.6684481781558134e-05}, {"id": 951, "seek": 397338, "start": 3987.06, "end": 3994.34, "text": " where you're driving home from work and you're like, hmm, can we avoid doing an HTML lazy", "tokens": [50364, 486, 368, 8692, 412, 512, 935, 13, 50549, 50549, 16533, 11, 577, 360, 291, 352, 466, 5006, 428, 958, 2650, 30, 50768, 50768, 1119, 309, 411, 291, 645, 733, 295, 16141, 365, 341, 2699, 76, 24387, 1389, 11, 29699, 428, 1065, 309, 339, 51048, 51048, 689, 291, 434, 4840, 1280, 490, 589, 293, 291, 434, 411, 11, 16478, 11, 393, 321, 5042, 884, 364, 17995, 14847, 51412, 51412, 456, 30, 51462, 51462, 1119, 300, 2673, 689, 291, 915, 428, 958, 4786, 337, 13797, 30, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1349944526498968, "compression_ratio": 1.53125, "no_caption_prob": 2.6684481781558134e-05}, {"id": 952, "seek": 397338, "start": 3994.34, "end": 3995.34, "text": " there?", "tokens": [50364, 486, 368, 8692, 412, 512, 935, 13, 50549, 50549, 16533, 11, 577, 360, 291, 352, 466, 5006, 428, 958, 2650, 30, 50768, 50768, 1119, 309, 411, 291, 645, 733, 295, 16141, 365, 341, 2699, 76, 24387, 1389, 11, 29699, 428, 1065, 309, 339, 51048, 51048, 689, 291, 434, 4840, 1280, 490, 589, 293, 291, 434, 411, 11, 16478, 11, 393, 321, 5042, 884, 364, 17995, 14847, 51412, 51412, 456, 30, 51462, 51462, 1119, 300, 2673, 689, 291, 915, 428, 958, 4786, 337, 13797, 30, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1349944526498968, "compression_ratio": 1.53125, "no_caption_prob": 2.6684481781558134e-05}, {"id": 953, "seek": 397338, "start": 3995.34, "end": 4001.86, "text": " Is that usually where you find your next opportunities for improvements?", "tokens": [50364, 486, 368, 8692, 412, 512, 935, 13, 50549, 50549, 16533, 11, 577, 360, 291, 352, 466, 5006, 428, 958, 2650, 30, 50768, 50768, 1119, 309, 411, 291, 645, 733, 295, 16141, 365, 341, 2699, 76, 24387, 1389, 11, 29699, 428, 1065, 309, 339, 51048, 51048, 689, 291, 434, 4840, 1280, 490, 589, 293, 291, 434, 411, 11, 16478, 11, 393, 321, 5042, 884, 364, 17995, 14847, 51412, 51412, 456, 30, 51462, 51462, 1119, 300, 2673, 689, 291, 915, 428, 958, 4786, 337, 13797, 30, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.1349944526498968, "compression_ratio": 1.53125, "no_caption_prob": 2.6684481781558134e-05}, {"id": 954, "seek": 400186, "start": 4001.86, "end": 4007.1, "text": " I would love to say yes, because that's the way it should be.", "tokens": [50364, 286, 576, 959, 281, 584, 2086, 11, 570, 300, 311, 264, 636, 309, 820, 312, 13, 50626, 50626, 583, 300, 307, 787, 746, 286, 5334, 1564, 286, 3574, 8858, 13, 50978, 50978, 4546, 300, 11, 286, 390, 1391, 689, 508, 2032, 268, 307, 586, 13, 51200, 51200, 1743, 415, 575, 6941, 300, 3389, 589, 307, 534, 1019, 13, 51460, 51460, 400, 370, 415, 3719, 1237, 412, 11, 731, 11, 1310, 286, 393, 652, 341, 4663, 13, 51722, 51722, 400, 1954, 11, 286, 727, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1492102254520763, "compression_ratio": 1.4807692307692308, "no_caption_prob": 3.882248347508721e-05}, {"id": 955, "seek": 400186, "start": 4007.1, "end": 4014.1400000000003, "text": " But that is only something I realized once I turned 32.", "tokens": [50364, 286, 576, 959, 281, 584, 2086, 11, 570, 300, 311, 264, 636, 309, 820, 312, 13, 50626, 50626, 583, 300, 307, 787, 746, 286, 5334, 1564, 286, 3574, 8858, 13, 50978, 50978, 4546, 300, 11, 286, 390, 1391, 689, 508, 2032, 268, 307, 586, 13, 51200, 51200, 1743, 415, 575, 6941, 300, 3389, 589, 307, 534, 1019, 13, 51460, 51460, 400, 370, 415, 3719, 1237, 412, 11, 731, 11, 1310, 286, 393, 652, 341, 4663, 13, 51722, 51722, 400, 1954, 11, 286, 727, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1492102254520763, "compression_ratio": 1.4807692307692308, "no_caption_prob": 3.882248347508721e-05}, {"id": 956, "seek": 400186, "start": 4014.1400000000003, "end": 4018.58, "text": " Before that, I was probably where Jeroen is now.", "tokens": [50364, 286, 576, 959, 281, 584, 2086, 11, 570, 300, 311, 264, 636, 309, 820, 312, 13, 50626, 50626, 583, 300, 307, 787, 746, 286, 5334, 1564, 286, 3574, 8858, 13, 50978, 50978, 4546, 300, 11, 286, 390, 1391, 689, 508, 2032, 268, 307, 586, 13, 51200, 51200, 1743, 415, 575, 6941, 300, 3389, 589, 307, 534, 1019, 13, 51460, 51460, 400, 370, 415, 3719, 1237, 412, 11, 731, 11, 1310, 286, 393, 652, 341, 4663, 13, 51722, 51722, 400, 1954, 11, 286, 727, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1492102254520763, "compression_ratio": 1.4807692307692308, "no_caption_prob": 3.882248347508721e-05}, {"id": 957, "seek": 400186, "start": 4018.58, "end": 4023.78, "text": " Like he has discovered that performance work is really fun.", "tokens": [50364, 286, 576, 959, 281, 584, 2086, 11, 570, 300, 311, 264, 636, 309, 820, 312, 13, 50626, 50626, 583, 300, 307, 787, 746, 286, 5334, 1564, 286, 3574, 8858, 13, 50978, 50978, 4546, 300, 11, 286, 390, 1391, 689, 508, 2032, 268, 307, 586, 13, 51200, 51200, 1743, 415, 575, 6941, 300, 3389, 589, 307, 534, 1019, 13, 51460, 51460, 400, 370, 415, 3719, 1237, 412, 11, 731, 11, 1310, 286, 393, 652, 341, 4663, 13, 51722, 51722, 400, 1954, 11, 286, 727, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1492102254520763, "compression_ratio": 1.4807692307692308, "no_caption_prob": 3.882248347508721e-05}, {"id": 958, "seek": 400186, "start": 4023.78, "end": 4029.02, "text": " And so he starts looking at, well, maybe I can make this faster.", "tokens": [50364, 286, 576, 959, 281, 584, 2086, 11, 570, 300, 311, 264, 636, 309, 820, 312, 13, 50626, 50626, 583, 300, 307, 787, 746, 286, 5334, 1564, 286, 3574, 8858, 13, 50978, 50978, 4546, 300, 11, 286, 390, 1391, 689, 508, 2032, 268, 307, 586, 13, 51200, 51200, 1743, 415, 575, 6941, 300, 3389, 589, 307, 534, 1019, 13, 51460, 51460, 400, 370, 415, 3719, 1237, 412, 11, 731, 11, 1310, 286, 393, 652, 341, 4663, 13, 51722, 51722, 400, 1954, 11, 286, 727, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1492102254520763, "compression_ratio": 1.4807692307692308, "no_caption_prob": 3.882248347508721e-05}, {"id": 959, "seek": 400186, "start": 4029.02, "end": 4030.1, "text": " And oh, I could.", "tokens": [50364, 286, 576, 959, 281, 584, 2086, 11, 570, 300, 311, 264, 636, 309, 820, 312, 13, 50626, 50626, 583, 300, 307, 787, 746, 286, 5334, 1564, 286, 3574, 8858, 13, 50978, 50978, 4546, 300, 11, 286, 390, 1391, 689, 508, 2032, 268, 307, 586, 13, 51200, 51200, 1743, 415, 575, 6941, 300, 3389, 589, 307, 534, 1019, 13, 51460, 51460, 400, 370, 415, 3719, 1237, 412, 11, 731, 11, 1310, 286, 393, 652, 341, 4663, 13, 51722, 51722, 400, 1954, 11, 286, 727, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1492102254520763, "compression_ratio": 1.4807692307692308, "no_caption_prob": 3.882248347508721e-05}, {"id": 960, "seek": 403010, "start": 4030.1, "end": 4032.06, "text": " Maybe I should make this faster.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 961, "seek": 403010, "start": 4032.06, "end": 4038.42, "text": " And there's nothing there's not necessarily anything wrong with that.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 962, "seek": 403010, "start": 4038.42, "end": 4041.22, "text": " I don't mean to single you out.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 963, "seek": 403010, "start": 4041.22, "end": 4044.46, "text": " No, I turned 32 in like three months.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 964, "seek": 403010, "start": 4044.46, "end": 4045.46, "text": " Excellent.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 965, "seek": 403010, "start": 4045.46, "end": 4046.46, "text": " Excellent.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 966, "seek": 403010, "start": 4046.46, "end": 4049.54, "text": " Looking forward to it.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 967, "seek": 403010, "start": 4049.54, "end": 4052.06, "text": " Prepare for wisdom.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 968, "seek": 403010, "start": 4052.06, "end": 4053.8399999999997, "text": " But really, I did the same thing.", "tokens": [50364, 2704, 286, 820, 652, 341, 4663, 13, 50462, 50462, 400, 456, 311, 1825, 456, 311, 406, 4725, 1340, 2085, 365, 300, 13, 50780, 50780, 286, 500, 380, 914, 281, 2167, 291, 484, 13, 50920, 50920, 883, 11, 286, 3574, 8858, 294, 411, 1045, 2493, 13, 51082, 51082, 16723, 13, 51132, 51132, 16723, 13, 51182, 51182, 11053, 2128, 281, 309, 13, 51336, 51336, 29689, 337, 10712, 13, 51462, 51462, 583, 534, 11, 286, 630, 264, 912, 551, 13, 51551, 51551], "temperature": 0.0, "avg_logprob": -0.2842781161084587, "compression_ratio": 1.4648648648648648, "no_caption_prob": 2.5070410629268736e-05}, {"id": 969, "seek": 405384, "start": 4053.84, "end": 4060.58, "text": " So the way I got into performance work was that I re implemented Elm arrays for zero", "tokens": [50364, 407, 264, 636, 286, 658, 666, 3389, 589, 390, 300, 286, 319, 12270, 2699, 76, 41011, 337, 4018, 50701, 50701, 2443, 11, 286, 519, 13, 50841, 50841, 400, 264, 2135, 1778, 337, 300, 390, 570, 2699, 76, 41011, 645, 7426, 1480, 13, 51109, 51109, 814, 645, 3720, 294, 15778, 7696, 13, 51359, 51359, 400, 550, 456, 390, 411, 257, 588, 5862, 4583, 295, 2699, 76, 3089, 281, 19219, 309, 281, 2699, 76, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20039236390745485, "compression_ratio": 1.4631578947368422, "no_caption_prob": 4.264222297933884e-05}, {"id": 970, "seek": 405384, "start": 4060.58, "end": 4063.38, "text": " 18, I think.", "tokens": [50364, 407, 264, 636, 286, 658, 666, 3389, 589, 390, 300, 286, 319, 12270, 2699, 76, 41011, 337, 4018, 50701, 50701, 2443, 11, 286, 519, 13, 50841, 50841, 400, 264, 2135, 1778, 337, 300, 390, 570, 2699, 76, 41011, 645, 7426, 1480, 13, 51109, 51109, 814, 645, 3720, 294, 15778, 7696, 13, 51359, 51359, 400, 550, 456, 390, 411, 257, 588, 5862, 4583, 295, 2699, 76, 3089, 281, 19219, 309, 281, 2699, 76, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20039236390745485, "compression_ratio": 1.4631578947368422, "no_caption_prob": 4.264222297933884e-05}, {"id": 971, "seek": 405384, "start": 4063.38, "end": 4068.7400000000002, "text": " And the main reason for that was because Elm arrays were buggy.", "tokens": [50364, 407, 264, 636, 286, 658, 666, 3389, 589, 390, 300, 286, 319, 12270, 2699, 76, 41011, 337, 4018, 50701, 50701, 2443, 11, 286, 519, 13, 50841, 50841, 400, 264, 2135, 1778, 337, 300, 390, 570, 2699, 76, 41011, 645, 7426, 1480, 13, 51109, 51109, 814, 645, 3720, 294, 15778, 7696, 13, 51359, 51359, 400, 550, 456, 390, 411, 257, 588, 5862, 4583, 295, 2699, 76, 3089, 281, 19219, 309, 281, 2699, 76, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20039236390745485, "compression_ratio": 1.4631578947368422, "no_caption_prob": 4.264222297933884e-05}, {"id": 972, "seek": 405384, "start": 4068.7400000000002, "end": 4073.7400000000002, "text": " They were written in JavaScript entirely.", "tokens": [50364, 407, 264, 636, 286, 658, 666, 3389, 589, 390, 300, 286, 319, 12270, 2699, 76, 41011, 337, 4018, 50701, 50701, 2443, 11, 286, 519, 13, 50841, 50841, 400, 264, 2135, 1778, 337, 300, 390, 570, 2699, 76, 41011, 645, 7426, 1480, 13, 51109, 51109, 814, 645, 3720, 294, 15778, 7696, 13, 51359, 51359, 400, 550, 456, 390, 411, 257, 588, 5862, 4583, 295, 2699, 76, 3089, 281, 19219, 309, 281, 2699, 76, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20039236390745485, "compression_ratio": 1.4631578947368422, "no_caption_prob": 4.264222297933884e-05}, {"id": 973, "seek": 405384, "start": 4073.7400000000002, "end": 4077.76, "text": " And then there was like a very thin layer of Elm code to expose it to Elm.", "tokens": [50364, 407, 264, 636, 286, 658, 666, 3389, 589, 390, 300, 286, 319, 12270, 2699, 76, 41011, 337, 4018, 50701, 50701, 2443, 11, 286, 519, 13, 50841, 50841, 400, 264, 2135, 1778, 337, 300, 390, 570, 2699, 76, 41011, 645, 7426, 1480, 13, 51109, 51109, 814, 645, 3720, 294, 15778, 7696, 13, 51359, 51359, 400, 550, 456, 390, 411, 257, 588, 5862, 4583, 295, 2699, 76, 3089, 281, 19219, 309, 281, 2699, 76, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.20039236390745485, "compression_ratio": 1.4631578947368422, "no_caption_prob": 4.264222297933884e-05}, {"id": 974, "seek": 407776, "start": 4077.76, "end": 4085.98, "text": " And it had like it did have in certain cases, mutability, like if visible mutability, it", "tokens": [50364, 400, 309, 632, 411, 309, 630, 362, 294, 1629, 3331, 11, 5839, 2310, 11, 411, 498, 8974, 5839, 2310, 11, 309, 50775, 50775, 727, 3082, 34474, 22847, 13, 50899, 50899, 467, 2067, 380, 665, 13, 50949, 50949, 467, 2067, 380, 1238, 13, 51061, 51061, 407, 264, 2135, 1778, 390, 281, 28132, 309, 294, 382, 709, 2699, 76, 3089, 382, 1944, 281, 652, 309, 15856, 13, 51467, 51467], "temperature": 0.0, "avg_logprob": -0.15337794759999152, "compression_ratio": 1.50625, "no_caption_prob": 2.3550694095320068e-05}, {"id": 975, "seek": 407776, "start": 4085.98, "end": 4088.46, "text": " could cause runtime exceptions.", "tokens": [50364, 400, 309, 632, 411, 309, 630, 362, 294, 1629, 3331, 11, 5839, 2310, 11, 411, 498, 8974, 5839, 2310, 11, 309, 50775, 50775, 727, 3082, 34474, 22847, 13, 50899, 50899, 467, 2067, 380, 665, 13, 50949, 50949, 467, 2067, 380, 1238, 13, 51061, 51061, 407, 264, 2135, 1778, 390, 281, 28132, 309, 294, 382, 709, 2699, 76, 3089, 382, 1944, 281, 652, 309, 15856, 13, 51467, 51467], "temperature": 0.0, "avg_logprob": -0.15337794759999152, "compression_ratio": 1.50625, "no_caption_prob": 2.3550694095320068e-05}, {"id": 976, "seek": 407776, "start": 4088.46, "end": 4089.46, "text": " It wasn't good.", "tokens": [50364, 400, 309, 632, 411, 309, 630, 362, 294, 1629, 3331, 11, 5839, 2310, 11, 411, 498, 8974, 5839, 2310, 11, 309, 50775, 50775, 727, 3082, 34474, 22847, 13, 50899, 50899, 467, 2067, 380, 665, 13, 50949, 50949, 467, 2067, 380, 1238, 13, 51061, 51061, 407, 264, 2135, 1778, 390, 281, 28132, 309, 294, 382, 709, 2699, 76, 3089, 382, 1944, 281, 652, 309, 15856, 13, 51467, 51467], "temperature": 0.0, "avg_logprob": -0.15337794759999152, "compression_ratio": 1.50625, "no_caption_prob": 2.3550694095320068e-05}, {"id": 977, "seek": 407776, "start": 4089.46, "end": 4091.7000000000003, "text": " It wasn't pretty.", "tokens": [50364, 400, 309, 632, 411, 309, 630, 362, 294, 1629, 3331, 11, 5839, 2310, 11, 411, 498, 8974, 5839, 2310, 11, 309, 50775, 50775, 727, 3082, 34474, 22847, 13, 50899, 50899, 467, 2067, 380, 665, 13, 50949, 50949, 467, 2067, 380, 1238, 13, 51061, 51061, 407, 264, 2135, 1778, 390, 281, 28132, 309, 294, 382, 709, 2699, 76, 3089, 382, 1944, 281, 652, 309, 15856, 13, 51467, 51467], "temperature": 0.0, "avg_logprob": -0.15337794759999152, "compression_ratio": 1.50625, "no_caption_prob": 2.3550694095320068e-05}, {"id": 978, "seek": 407776, "start": 4091.7000000000003, "end": 4099.820000000001, "text": " So the main reason was to rewrite it in as much Elm code as possible to make it safer.", "tokens": [50364, 400, 309, 632, 411, 309, 630, 362, 294, 1629, 3331, 11, 5839, 2310, 11, 411, 498, 8974, 5839, 2310, 11, 309, 50775, 50775, 727, 3082, 34474, 22847, 13, 50899, 50899, 467, 2067, 380, 665, 13, 50949, 50949, 467, 2067, 380, 1238, 13, 51061, 51061, 407, 264, 2135, 1778, 390, 281, 28132, 309, 294, 382, 709, 2699, 76, 3089, 382, 1944, 281, 652, 309, 15856, 13, 51467, 51467], "temperature": 0.0, "avg_logprob": -0.15337794759999152, "compression_ratio": 1.50625, "no_caption_prob": 2.3550694095320068e-05}, {"id": 979, "seek": 409982, "start": 4099.82, "end": 4108.0199999999995, "text": " But for it to be acceptable, it had to have at least the same ballpark of performance", "tokens": [50364, 583, 337, 309, 281, 312, 15513, 11, 309, 632, 281, 362, 412, 1935, 264, 912, 2594, 31239, 295, 3389, 50774, 50774, 281, 437, 390, 1217, 456, 13, 50868, 50868, 400, 370, 300, 311, 577, 286, 658, 666, 3389, 589, 13, 50974, 50974, 286, 390, 1382, 281, 652, 364, 2699, 76, 10225, 14419, 11, 597, 994, 380, 808, 412, 264, 2063, 295, 257, 2603, 3389, 51342, 51342, 11514, 13, 51408, 51408, 400, 411, 1419, 257, 18927, 293, 2577, 729, 3547, 352, 493, 562, 291, 652, 2962, 3062, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.12096330854627821, "compression_ratio": 1.5822222222222222, "no_caption_prob": 1.3419107744994108e-05}, {"id": 980, "seek": 409982, "start": 4108.0199999999995, "end": 4109.9, "text": " to what was already there.", "tokens": [50364, 583, 337, 309, 281, 312, 15513, 11, 309, 632, 281, 362, 412, 1935, 264, 912, 2594, 31239, 295, 3389, 50774, 50774, 281, 437, 390, 1217, 456, 13, 50868, 50868, 400, 370, 300, 311, 577, 286, 658, 666, 3389, 589, 13, 50974, 50974, 286, 390, 1382, 281, 652, 364, 2699, 76, 10225, 14419, 11, 597, 994, 380, 808, 412, 264, 2063, 295, 257, 2603, 3389, 51342, 51342, 11514, 13, 51408, 51408, 400, 411, 1419, 257, 18927, 293, 2577, 729, 3547, 352, 493, 562, 291, 652, 2962, 3062, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.12096330854627821, "compression_ratio": 1.5822222222222222, "no_caption_prob": 1.3419107744994108e-05}, {"id": 981, "seek": 409982, "start": 4109.9, "end": 4112.0199999999995, "text": " And so that's how I got into performance work.", "tokens": [50364, 583, 337, 309, 281, 312, 15513, 11, 309, 632, 281, 362, 412, 1935, 264, 912, 2594, 31239, 295, 3389, 50774, 50774, 281, 437, 390, 1217, 456, 13, 50868, 50868, 400, 370, 300, 311, 577, 286, 658, 666, 3389, 589, 13, 50974, 50974, 286, 390, 1382, 281, 652, 364, 2699, 76, 10225, 14419, 11, 597, 994, 380, 808, 412, 264, 2063, 295, 257, 2603, 3389, 51342, 51342, 11514, 13, 51408, 51408, 400, 411, 1419, 257, 18927, 293, 2577, 729, 3547, 352, 493, 562, 291, 652, 2962, 3062, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.12096330854627821, "compression_ratio": 1.5822222222222222, "no_caption_prob": 1.3419107744994108e-05}, {"id": 982, "seek": 409982, "start": 4112.0199999999995, "end": 4119.38, "text": " I was trying to make an Elm array replacement, which didn't come at the cost of a huge performance", "tokens": [50364, 583, 337, 309, 281, 312, 15513, 11, 309, 632, 281, 362, 412, 1935, 264, 912, 2594, 31239, 295, 3389, 50774, 50774, 281, 437, 390, 1217, 456, 13, 50868, 50868, 400, 370, 300, 311, 577, 286, 658, 666, 3389, 589, 13, 50974, 50974, 286, 390, 1382, 281, 652, 364, 2699, 76, 10225, 14419, 11, 597, 994, 380, 808, 412, 264, 2063, 295, 257, 2603, 3389, 51342, 51342, 11514, 13, 51408, 51408, 400, 411, 1419, 257, 18927, 293, 2577, 729, 3547, 352, 493, 562, 291, 652, 2962, 3062, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.12096330854627821, "compression_ratio": 1.5822222222222222, "no_caption_prob": 1.3419107744994108e-05}, {"id": 983, "seek": 409982, "start": 4119.38, "end": 4120.7, "text": " decrease.", "tokens": [50364, 583, 337, 309, 281, 312, 15513, 11, 309, 632, 281, 362, 412, 1935, 264, 912, 2594, 31239, 295, 3389, 50774, 50774, 281, 437, 390, 1217, 456, 13, 50868, 50868, 400, 370, 300, 311, 577, 286, 658, 666, 3389, 589, 13, 50974, 50974, 286, 390, 1382, 281, 652, 364, 2699, 76, 10225, 14419, 11, 597, 994, 380, 808, 412, 264, 2063, 295, 257, 2603, 3389, 51342, 51342, 11514, 13, 51408, 51408, 400, 411, 1419, 257, 18927, 293, 2577, 729, 3547, 352, 493, 562, 291, 652, 2962, 3062, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.12096330854627821, "compression_ratio": 1.5822222222222222, "no_caption_prob": 1.3419107744994108e-05}, {"id": 984, "seek": 409982, "start": 4120.7, "end": 4126.259999999999, "text": " And like having a benchmark and seeing those numbers go up when you make changes became", "tokens": [50364, 583, 337, 309, 281, 312, 15513, 11, 309, 632, 281, 362, 412, 1935, 264, 912, 2594, 31239, 295, 3389, 50774, 50774, 281, 437, 390, 1217, 456, 13, 50868, 50868, 400, 370, 300, 311, 577, 286, 658, 666, 3389, 589, 13, 50974, 50974, 286, 390, 1382, 281, 652, 364, 2699, 76, 10225, 14419, 11, 597, 994, 380, 808, 412, 264, 2063, 295, 257, 2603, 3389, 51342, 51342, 11514, 13, 51408, 51408, 400, 411, 1419, 257, 18927, 293, 2577, 729, 3547, 352, 493, 562, 291, 652, 2962, 3062, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.12096330854627821, "compression_ratio": 1.5822222222222222, "no_caption_prob": 1.3419107744994108e-05}, {"id": 985, "seek": 412626, "start": 4126.26, "end": 4132.1, "text": " addictive and then I just started looking around like the Elm core library seeing what", "tokens": [50364, 36486, 293, 550, 286, 445, 1409, 1237, 926, 411, 264, 2699, 76, 4965, 6405, 2577, 437, 50656, 50656, 1646, 393, 286, 652, 4663, 13, 50781, 50781, 583, 534, 264, 3880, 3389, 11, 264, 881, 1021, 3389, 13797, 366, 264, 51024, 51024, 2306, 291, 3449, 307, 257, 1154, 13, 51151, 51151, 1436, 286, 5334, 300, 286, 600, 4418, 257, 688, 295, 565, 19442, 721, 597, 3212, 380, 364, 2734, 293, 51498, 51498, 597, 3212, 380, 4725, 3700, 281, 312, 364, 2734, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.16851176093606388, "compression_ratio": 1.6222222222222222, "no_caption_prob": 8.939497092796955e-06}, {"id": 986, "seek": 412626, "start": 4132.1, "end": 4134.6, "text": " else can I make faster.", "tokens": [50364, 36486, 293, 550, 286, 445, 1409, 1237, 926, 411, 264, 2699, 76, 4965, 6405, 2577, 437, 50656, 50656, 1646, 393, 286, 652, 4663, 13, 50781, 50781, 583, 534, 264, 3880, 3389, 11, 264, 881, 1021, 3389, 13797, 366, 264, 51024, 51024, 2306, 291, 3449, 307, 257, 1154, 13, 51151, 51151, 1436, 286, 5334, 300, 286, 600, 4418, 257, 688, 295, 565, 19442, 721, 597, 3212, 380, 364, 2734, 293, 51498, 51498, 597, 3212, 380, 4725, 3700, 281, 312, 364, 2734, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.16851176093606388, "compression_ratio": 1.6222222222222222, "no_caption_prob": 8.939497092796955e-06}, {"id": 987, "seek": 412626, "start": 4134.6, "end": 4139.46, "text": " But really the biggest performance, the most important performance improvements are the", "tokens": [50364, 36486, 293, 550, 286, 445, 1409, 1237, 926, 411, 264, 2699, 76, 4965, 6405, 2577, 437, 50656, 50656, 1646, 393, 286, 652, 4663, 13, 50781, 50781, 583, 534, 264, 3880, 3389, 11, 264, 881, 1021, 3389, 13797, 366, 264, 51024, 51024, 2306, 291, 3449, 307, 257, 1154, 13, 51151, 51151, 1436, 286, 5334, 300, 286, 600, 4418, 257, 688, 295, 565, 19442, 721, 597, 3212, 380, 364, 2734, 293, 51498, 51498, 597, 3212, 380, 4725, 3700, 281, 312, 364, 2734, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.16851176093606388, "compression_ratio": 1.6222222222222222, "no_caption_prob": 8.939497092796955e-06}, {"id": 988, "seek": 412626, "start": 4139.46, "end": 4142.0, "text": " ones you notice is a problem.", "tokens": [50364, 36486, 293, 550, 286, 445, 1409, 1237, 926, 411, 264, 2699, 76, 4965, 6405, 2577, 437, 50656, 50656, 1646, 393, 286, 652, 4663, 13, 50781, 50781, 583, 534, 264, 3880, 3389, 11, 264, 881, 1021, 3389, 13797, 366, 264, 51024, 51024, 2306, 291, 3449, 307, 257, 1154, 13, 51151, 51151, 1436, 286, 5334, 300, 286, 600, 4418, 257, 688, 295, 565, 19442, 721, 597, 3212, 380, 364, 2734, 293, 51498, 51498, 597, 3212, 380, 4725, 3700, 281, 312, 364, 2734, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.16851176093606388, "compression_ratio": 1.6222222222222222, "no_caption_prob": 8.939497092796955e-06}, {"id": 989, "seek": 412626, "start": 4142.0, "end": 4148.9400000000005, "text": " Because I realized that I've spent a lot of time fixing things which aren't an issue and", "tokens": [50364, 36486, 293, 550, 286, 445, 1409, 1237, 926, 411, 264, 2699, 76, 4965, 6405, 2577, 437, 50656, 50656, 1646, 393, 286, 652, 4663, 13, 50781, 50781, 583, 534, 264, 3880, 3389, 11, 264, 881, 1021, 3389, 13797, 366, 264, 51024, 51024, 2306, 291, 3449, 307, 257, 1154, 13, 51151, 51151, 1436, 286, 5334, 300, 286, 600, 4418, 257, 688, 295, 565, 19442, 721, 597, 3212, 380, 364, 2734, 293, 51498, 51498, 597, 3212, 380, 4725, 3700, 281, 312, 364, 2734, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.16851176093606388, "compression_ratio": 1.6222222222222222, "no_caption_prob": 8.939497092796955e-06}, {"id": 990, "seek": 412626, "start": 4148.9400000000005, "end": 4151.5, "text": " which aren't necessarily likely to be an issue.", "tokens": [50364, 36486, 293, 550, 286, 445, 1409, 1237, 926, 411, 264, 2699, 76, 4965, 6405, 2577, 437, 50656, 50656, 1646, 393, 286, 652, 4663, 13, 50781, 50781, 583, 534, 264, 3880, 3389, 11, 264, 881, 1021, 3389, 13797, 366, 264, 51024, 51024, 2306, 291, 3449, 307, 257, 1154, 13, 51151, 51151, 1436, 286, 5334, 300, 286, 600, 4418, 257, 688, 295, 565, 19442, 721, 597, 3212, 380, 364, 2734, 293, 51498, 51498, 597, 3212, 380, 4725, 3700, 281, 312, 364, 2734, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.16851176093606388, "compression_ratio": 1.6222222222222222, "no_caption_prob": 8.939497092796955e-06}, {"id": 991, "seek": 415150, "start": 4151.5, "end": 4163.62, "text": " Wait, are you saying that string.pad improving the performance of that function is not big?", "tokens": [50364, 3802, 11, 366, 291, 1566, 300, 6798, 13, 13647, 11470, 264, 3389, 295, 300, 2445, 307, 406, 955, 30, 50970, 50970, 286, 478, 445, 1566, 5969, 291, 362, 257, 3389, 1154, 11, 19442, 257, 3389, 1154, 1943, 380, 51270, 51270, 4725, 516, 281, 1565, 2158, 281, 1580, 13, 51475, 51475, 663, 311, 406, 281, 584, 300, 1455, 746, 4663, 445, 337, 264, 9717, 295, 1455, 309, 4663, 1582, 380, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1463789221358626, "compression_ratio": 1.6772486772486772, "no_caption_prob": 5.648847945849411e-05}, {"id": 992, "seek": 415150, "start": 4163.62, "end": 4169.62, "text": " I'm just saying unless you have a performance problem, fixing a performance problem isn't", "tokens": [50364, 3802, 11, 366, 291, 1566, 300, 6798, 13, 13647, 11470, 264, 3389, 295, 300, 2445, 307, 406, 955, 30, 50970, 50970, 286, 478, 445, 1566, 5969, 291, 362, 257, 3389, 1154, 11, 19442, 257, 3389, 1154, 1943, 380, 51270, 51270, 4725, 516, 281, 1565, 2158, 281, 1580, 13, 51475, 51475, 663, 311, 406, 281, 584, 300, 1455, 746, 4663, 445, 337, 264, 9717, 295, 1455, 309, 4663, 1582, 380, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1463789221358626, "compression_ratio": 1.6772486772486772, "no_caption_prob": 5.648847945849411e-05}, {"id": 993, "seek": 415150, "start": 4169.62, "end": 4173.72, "text": " necessarily going to bring value to someone.", "tokens": [50364, 3802, 11, 366, 291, 1566, 300, 6798, 13, 13647, 11470, 264, 3389, 295, 300, 2445, 307, 406, 955, 30, 50970, 50970, 286, 478, 445, 1566, 5969, 291, 362, 257, 3389, 1154, 11, 19442, 257, 3389, 1154, 1943, 380, 51270, 51270, 4725, 516, 281, 1565, 2158, 281, 1580, 13, 51475, 51475, 663, 311, 406, 281, 584, 300, 1455, 746, 4663, 445, 337, 264, 9717, 295, 1455, 309, 4663, 1582, 380, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1463789221358626, "compression_ratio": 1.6772486772486772, "no_caption_prob": 5.648847945849411e-05}, {"id": 994, "seek": 415150, "start": 4173.72, "end": 4179.86, "text": " That's not to say that making something faster just for the sake of making it faster won't", "tokens": [50364, 3802, 11, 366, 291, 1566, 300, 6798, 13, 13647, 11470, 264, 3389, 295, 300, 2445, 307, 406, 955, 30, 50970, 50970, 286, 478, 445, 1566, 5969, 291, 362, 257, 3389, 1154, 11, 19442, 257, 3389, 1154, 1943, 380, 51270, 51270, 4725, 516, 281, 1565, 2158, 281, 1580, 13, 51475, 51475, 663, 311, 406, 281, 584, 300, 1455, 746, 4663, 445, 337, 264, 9717, 295, 1455, 309, 4663, 1582, 380, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.1463789221358626, "compression_ratio": 1.6772486772486772, "no_caption_prob": 5.648847945849411e-05}, {"id": 995, "seek": 417986, "start": 4179.86, "end": 4185.099999999999, "text": " be very useful somewhere down the line.", "tokens": [50364, 312, 588, 4420, 4079, 760, 264, 1622, 13, 50626, 50626, 400, 498, 291, 2103, 5028, 14455, 11, 2318, 5028, 14455, 597, 1177, 380, 652, 3089, 574, 50918, 50918, 5324, 293, 307, 6081, 281, 21743, 11, 550, 456, 311, 572, 6491, 294, 309, 13, 51116, 51116, 583, 498, 291, 528, 281, 312, 7696, 1629, 300, 264, 589, 291, 360, 575, 3620, 11, 550, 22915, 51386, 51386, 291, 820, 445, 808, 670, 746, 689, 291, 519, 341, 820, 312, 4663, 293, 550, 3191, 51628, 51628, 300, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08916303013147933, "compression_ratio": 1.6380090497737556, "no_caption_prob": 3.42662533512339e-05}, {"id": 996, "seek": 417986, "start": 4185.099999999999, "end": 4190.94, "text": " And if you enjoy optimizations, especially optimizations which doesn't make code look", "tokens": [50364, 312, 588, 4420, 4079, 760, 264, 1622, 13, 50626, 50626, 400, 498, 291, 2103, 5028, 14455, 11, 2318, 5028, 14455, 597, 1177, 380, 652, 3089, 574, 50918, 50918, 5324, 293, 307, 6081, 281, 21743, 11, 550, 456, 311, 572, 6491, 294, 309, 13, 51116, 51116, 583, 498, 291, 528, 281, 312, 7696, 1629, 300, 264, 589, 291, 360, 575, 3620, 11, 550, 22915, 51386, 51386, 291, 820, 445, 808, 670, 746, 689, 291, 519, 341, 820, 312, 4663, 293, 550, 3191, 51628, 51628, 300, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08916303013147933, "compression_ratio": 1.6380090497737556, "no_caption_prob": 3.42662533512339e-05}, {"id": 997, "seek": 417986, "start": 4190.94, "end": 4194.9, "text": " worse and is harder to grasp, then there's no harm in it.", "tokens": [50364, 312, 588, 4420, 4079, 760, 264, 1622, 13, 50626, 50626, 400, 498, 291, 2103, 5028, 14455, 11, 2318, 5028, 14455, 597, 1177, 380, 652, 3089, 574, 50918, 50918, 5324, 293, 307, 6081, 281, 21743, 11, 550, 456, 311, 572, 6491, 294, 309, 13, 51116, 51116, 583, 498, 291, 528, 281, 312, 7696, 1629, 300, 264, 589, 291, 360, 575, 3620, 11, 550, 22915, 51386, 51386, 291, 820, 445, 808, 670, 746, 689, 291, 519, 341, 820, 312, 4663, 293, 550, 3191, 51628, 51628, 300, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08916303013147933, "compression_ratio": 1.6380090497737556, "no_caption_prob": 3.42662533512339e-05}, {"id": 998, "seek": 417986, "start": 4194.9, "end": 4200.299999999999, "text": " But if you want to be entirely certain that the work you do has meaning, then ideally", "tokens": [50364, 312, 588, 4420, 4079, 760, 264, 1622, 13, 50626, 50626, 400, 498, 291, 2103, 5028, 14455, 11, 2318, 5028, 14455, 597, 1177, 380, 652, 3089, 574, 50918, 50918, 5324, 293, 307, 6081, 281, 21743, 11, 550, 456, 311, 572, 6491, 294, 309, 13, 51116, 51116, 583, 498, 291, 528, 281, 312, 7696, 1629, 300, 264, 589, 291, 360, 575, 3620, 11, 550, 22915, 51386, 51386, 291, 820, 445, 808, 670, 746, 689, 291, 519, 341, 820, 312, 4663, 293, 550, 3191, 51628, 51628, 300, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08916303013147933, "compression_ratio": 1.6380090497737556, "no_caption_prob": 3.42662533512339e-05}, {"id": 999, "seek": 417986, "start": 4200.299999999999, "end": 4205.139999999999, "text": " you should just come over something where you think this should be faster and then fix", "tokens": [50364, 312, 588, 4420, 4079, 760, 264, 1622, 13, 50626, 50626, 400, 498, 291, 2103, 5028, 14455, 11, 2318, 5028, 14455, 597, 1177, 380, 652, 3089, 574, 50918, 50918, 5324, 293, 307, 6081, 281, 21743, 11, 550, 456, 311, 572, 6491, 294, 309, 13, 51116, 51116, 583, 498, 291, 528, 281, 312, 7696, 1629, 300, 264, 589, 291, 360, 575, 3620, 11, 550, 22915, 51386, 51386, 291, 820, 445, 808, 670, 746, 689, 291, 519, 341, 820, 312, 4663, 293, 550, 3191, 51628, 51628, 300, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08916303013147933, "compression_ratio": 1.6380090497737556, "no_caption_prob": 3.42662533512339e-05}, {"id": 1000, "seek": 417986, "start": 4205.139999999999, "end": 4206.179999999999, "text": " that.", "tokens": [50364, 312, 588, 4420, 4079, 760, 264, 1622, 13, 50626, 50626, 400, 498, 291, 2103, 5028, 14455, 11, 2318, 5028, 14455, 597, 1177, 380, 652, 3089, 574, 50918, 50918, 5324, 293, 307, 6081, 281, 21743, 11, 550, 456, 311, 572, 6491, 294, 309, 13, 51116, 51116, 583, 498, 291, 528, 281, 312, 7696, 1629, 300, 264, 589, 291, 360, 575, 3620, 11, 550, 22915, 51386, 51386, 291, 820, 445, 808, 670, 746, 689, 291, 519, 341, 820, 312, 4663, 293, 550, 3191, 51628, 51628, 300, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.08916303013147933, "compression_ratio": 1.6380090497737556, "no_caption_prob": 3.42662533512339e-05}, {"id": 1001, "seek": 420618, "start": 4206.18, "end": 4213.900000000001, "text": " And I might add, fix that in a scientific way.", "tokens": [50364, 400, 286, 1062, 909, 11, 3191, 300, 294, 257, 8134, 636, 13, 50750, 50750, 1468, 380, 445, 519, 300, 11, 1954, 11, 498, 286, 7406, 341, 1329, 2489, 365, 12569, 13, 847, 11, 550, 309, 486, 312, 709, 51037, 51037, 4663, 13, 51094, 51094, 400, 1339, 309, 311, 1391, 4663, 586, 11, 360, 15383, 293, 312, 1629, 300, 291, 366, 294, 1186, 1455, 51439, 51439, 746, 1101, 13, 51489, 51489, 400, 294, 364, 21451, 636, 13, 51598, 51598, 1079, 11, 2086, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.23633391358131586, "compression_ratio": 1.47, "no_caption_prob": 5.920194962527603e-05}, {"id": 1002, "seek": 420618, "start": 4213.900000000001, "end": 4219.64, "text": " Don't just think that, oh, if I replace this list fine with dict.get, then it will be much", "tokens": [50364, 400, 286, 1062, 909, 11, 3191, 300, 294, 257, 8134, 636, 13, 50750, 50750, 1468, 380, 445, 519, 300, 11, 1954, 11, 498, 286, 7406, 341, 1329, 2489, 365, 12569, 13, 847, 11, 550, 309, 486, 312, 709, 51037, 51037, 4663, 13, 51094, 51094, 400, 1339, 309, 311, 1391, 4663, 586, 11, 360, 15383, 293, 312, 1629, 300, 291, 366, 294, 1186, 1455, 51439, 51439, 746, 1101, 13, 51489, 51489, 400, 294, 364, 21451, 636, 13, 51598, 51598, 1079, 11, 2086, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.23633391358131586, "compression_ratio": 1.47, "no_caption_prob": 5.920194962527603e-05}, {"id": 1003, "seek": 420618, "start": 4219.64, "end": 4220.780000000001, "text": " faster.", "tokens": [50364, 400, 286, 1062, 909, 11, 3191, 300, 294, 257, 8134, 636, 13, 50750, 50750, 1468, 380, 445, 519, 300, 11, 1954, 11, 498, 286, 7406, 341, 1329, 2489, 365, 12569, 13, 847, 11, 550, 309, 486, 312, 709, 51037, 51037, 4663, 13, 51094, 51094, 400, 1339, 309, 311, 1391, 4663, 586, 11, 360, 15383, 293, 312, 1629, 300, 291, 366, 294, 1186, 1455, 51439, 51439, 746, 1101, 13, 51489, 51489, 400, 294, 364, 21451, 636, 13, 51598, 51598, 1079, 11, 2086, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.23633391358131586, "compression_ratio": 1.47, "no_caption_prob": 5.920194962527603e-05}, {"id": 1004, "seek": 420618, "start": 4220.780000000001, "end": 4227.68, "text": " And while it's probably faster now, do measurements and be certain that you are in fact making", "tokens": [50364, 400, 286, 1062, 909, 11, 3191, 300, 294, 257, 8134, 636, 13, 50750, 50750, 1468, 380, 445, 519, 300, 11, 1954, 11, 498, 286, 7406, 341, 1329, 2489, 365, 12569, 13, 847, 11, 550, 309, 486, 312, 709, 51037, 51037, 4663, 13, 51094, 51094, 400, 1339, 309, 311, 1391, 4663, 586, 11, 360, 15383, 293, 312, 1629, 300, 291, 366, 294, 1186, 1455, 51439, 51439, 746, 1101, 13, 51489, 51489, 400, 294, 364, 21451, 636, 13, 51598, 51598, 1079, 11, 2086, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.23633391358131586, "compression_ratio": 1.47, "no_caption_prob": 5.920194962527603e-05}, {"id": 1005, "seek": 420618, "start": 4227.68, "end": 4228.68, "text": " something better.", "tokens": [50364, 400, 286, 1062, 909, 11, 3191, 300, 294, 257, 8134, 636, 13, 50750, 50750, 1468, 380, 445, 519, 300, 11, 1954, 11, 498, 286, 7406, 341, 1329, 2489, 365, 12569, 13, 847, 11, 550, 309, 486, 312, 709, 51037, 51037, 4663, 13, 51094, 51094, 400, 1339, 309, 311, 1391, 4663, 586, 11, 360, 15383, 293, 312, 1629, 300, 291, 366, 294, 1186, 1455, 51439, 51439, 746, 1101, 13, 51489, 51489, 400, 294, 364, 21451, 636, 13, 51598, 51598, 1079, 11, 2086, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.23633391358131586, "compression_ratio": 1.47, "no_caption_prob": 5.920194962527603e-05}, {"id": 1006, "seek": 420618, "start": 4228.68, "end": 4230.860000000001, "text": " And in an inevitable way.", "tokens": [50364, 400, 286, 1062, 909, 11, 3191, 300, 294, 257, 8134, 636, 13, 50750, 50750, 1468, 380, 445, 519, 300, 11, 1954, 11, 498, 286, 7406, 341, 1329, 2489, 365, 12569, 13, 847, 11, 550, 309, 486, 312, 709, 51037, 51037, 4663, 13, 51094, 51094, 400, 1339, 309, 311, 1391, 4663, 586, 11, 360, 15383, 293, 312, 1629, 300, 291, 366, 294, 1186, 1455, 51439, 51439, 746, 1101, 13, 51489, 51489, 400, 294, 364, 21451, 636, 13, 51598, 51598, 1079, 11, 2086, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.23633391358131586, "compression_ratio": 1.47, "no_caption_prob": 5.920194962527603e-05}, {"id": 1007, "seek": 420618, "start": 4230.860000000001, "end": 4232.38, "text": " Yes, yes.", "tokens": [50364, 400, 286, 1062, 909, 11, 3191, 300, 294, 257, 8134, 636, 13, 50750, 50750, 1468, 380, 445, 519, 300, 11, 1954, 11, 498, 286, 7406, 341, 1329, 2489, 365, 12569, 13, 847, 11, 550, 309, 486, 312, 709, 51037, 51037, 4663, 13, 51094, 51094, 400, 1339, 309, 311, 1391, 4663, 586, 11, 360, 15383, 293, 312, 1629, 300, 291, 366, 294, 1186, 1455, 51439, 51439, 746, 1101, 13, 51489, 51489, 400, 294, 364, 21451, 636, 13, 51598, 51598, 1079, 11, 2086, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.23633391358131586, "compression_ratio": 1.47, "no_caption_prob": 5.920194962527603e-05}, {"id": 1008, "seek": 423238, "start": 4232.38, "end": 4239.26, "text": " So like a thousand times improvement is cool on paper, but if it in practice doesn't change", "tokens": [50364, 407, 411, 257, 4714, 1413, 10444, 307, 1627, 322, 3035, 11, 457, 498, 309, 294, 3124, 1177, 380, 1319, 50708, 50708, 1340, 11, 550, 406, 1566, 300, 291, 820, 1590, 884, 437, 291, 434, 884, 11, 291, 434, 884, 51024, 51024, 3476, 1507, 13, 51074, 51074, 286, 478, 4362, 1364, 322, 746, 300, 286, 519, 575, 5022, 382, 731, 382, 11470, 3389, 13, 51471, 51471, 407, 286, 478, 588, 2055, 466, 300, 13, 51560, 51560, 1033, 11, 665, 11, 665, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.22270931917078354, "compression_ratio": 1.5837320574162679, "no_caption_prob": 4.1327944927616045e-05}, {"id": 1009, "seek": 423238, "start": 4239.26, "end": 4245.58, "text": " anything, then not saying that you should stop doing what you're doing, you're doing", "tokens": [50364, 407, 411, 257, 4714, 1413, 10444, 307, 1627, 322, 3035, 11, 457, 498, 309, 294, 3124, 1177, 380, 1319, 50708, 50708, 1340, 11, 550, 406, 1566, 300, 291, 820, 1590, 884, 437, 291, 434, 884, 11, 291, 434, 884, 51024, 51024, 3476, 1507, 13, 51074, 51074, 286, 478, 4362, 1364, 322, 746, 300, 286, 519, 575, 5022, 382, 731, 382, 11470, 3389, 13, 51471, 51471, 407, 286, 478, 588, 2055, 466, 300, 13, 51560, 51560, 1033, 11, 665, 11, 665, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.22270931917078354, "compression_ratio": 1.5837320574162679, "no_caption_prob": 4.1327944927616045e-05}, {"id": 1010, "seek": 423238, "start": 4245.58, "end": 4246.58, "text": " awesome stuff.", "tokens": [50364, 407, 411, 257, 4714, 1413, 10444, 307, 1627, 322, 3035, 11, 457, 498, 309, 294, 3124, 1177, 380, 1319, 50708, 50708, 1340, 11, 550, 406, 1566, 300, 291, 820, 1590, 884, 437, 291, 434, 884, 11, 291, 434, 884, 51024, 51024, 3476, 1507, 13, 51074, 51074, 286, 478, 4362, 1364, 322, 746, 300, 286, 519, 575, 5022, 382, 731, 382, 11470, 3389, 13, 51471, 51471, 407, 286, 478, 588, 2055, 466, 300, 13, 51560, 51560, 1033, 11, 665, 11, 665, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.22270931917078354, "compression_ratio": 1.5837320574162679, "no_caption_prob": 4.1327944927616045e-05}, {"id": 1011, "seek": 423238, "start": 4246.58, "end": 4254.52, "text": " I'm currently working on something that I think has users as well as improving performance.", "tokens": [50364, 407, 411, 257, 4714, 1413, 10444, 307, 1627, 322, 3035, 11, 457, 498, 309, 294, 3124, 1177, 380, 1319, 50708, 50708, 1340, 11, 550, 406, 1566, 300, 291, 820, 1590, 884, 437, 291, 434, 884, 11, 291, 434, 884, 51024, 51024, 3476, 1507, 13, 51074, 51074, 286, 478, 4362, 1364, 322, 746, 300, 286, 519, 575, 5022, 382, 731, 382, 11470, 3389, 13, 51471, 51471, 407, 286, 478, 588, 2055, 466, 300, 13, 51560, 51560, 1033, 11, 665, 11, 665, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.22270931917078354, "compression_ratio": 1.5837320574162679, "no_caption_prob": 4.1327944927616045e-05}, {"id": 1012, "seek": 423238, "start": 4254.52, "end": 4256.3, "text": " So I'm very happy about that.", "tokens": [50364, 407, 411, 257, 4714, 1413, 10444, 307, 1627, 322, 3035, 11, 457, 498, 309, 294, 3124, 1177, 380, 1319, 50708, 50708, 1340, 11, 550, 406, 1566, 300, 291, 820, 1590, 884, 437, 291, 434, 884, 11, 291, 434, 884, 51024, 51024, 3476, 1507, 13, 51074, 51074, 286, 478, 4362, 1364, 322, 746, 300, 286, 519, 575, 5022, 382, 731, 382, 11470, 3389, 13, 51471, 51471, 407, 286, 478, 588, 2055, 466, 300, 13, 51560, 51560, 1033, 11, 665, 11, 665, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.22270931917078354, "compression_ratio": 1.5837320574162679, "no_caption_prob": 4.1327944927616045e-05}, {"id": 1013, "seek": 423238, "start": 4256.3, "end": 4257.3, "text": " Okay, good, good.", "tokens": [50364, 407, 411, 257, 4714, 1413, 10444, 307, 1627, 322, 3035, 11, 457, 498, 309, 294, 3124, 1177, 380, 1319, 50708, 50708, 1340, 11, 550, 406, 1566, 300, 291, 820, 1590, 884, 437, 291, 434, 884, 11, 291, 434, 884, 51024, 51024, 3476, 1507, 13, 51074, 51074, 286, 478, 4362, 1364, 322, 746, 300, 286, 519, 575, 5022, 382, 731, 382, 11470, 3389, 13, 51471, 51471, 407, 286, 478, 588, 2055, 466, 300, 13, 51560, 51560, 1033, 11, 665, 11, 665, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.22270931917078354, "compression_ratio": 1.5837320574162679, "no_caption_prob": 4.1327944927616045e-05}, {"id": 1014, "seek": 425730, "start": 4257.3, "end": 4263.46, "text": " But yeah, I remember that in some places I thought like list that appends is faster than", "tokens": [50364, 583, 1338, 11, 286, 1604, 300, 294, 512, 3190, 286, 1194, 411, 1329, 300, 724, 2581, 307, 4663, 813, 50672, 50672, 1804, 1804, 293, 286, 1409, 1228, 309, 5315, 13, 50880, 50880, 400, 550, 286, 5872, 257, 18927, 445, 281, 445, 322, 1329, 724, 521, 5717, 1804, 1804, 13, 51136, 51136, 865, 11, 572, 2649, 13, 51212, 51212, 407, 286, 630, 257, 688, 295, 2962, 300, 645, 19350, 293, 300, 994, 380, 1401, 709, 1101, 13, 51522, 51522, 407, 1338, 11, 18927, 309, 13, 51629, 51629, 400, 6284, 729, 721, 500, 380, 1036, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.19965981463996732, "compression_ratio": 1.6533333333333333, "no_caption_prob": 8.887284639058635e-05}, {"id": 1015, "seek": 425730, "start": 4263.46, "end": 4267.62, "text": " plus plus and I started using it everywhere.", "tokens": [50364, 583, 1338, 11, 286, 1604, 300, 294, 512, 3190, 286, 1194, 411, 1329, 300, 724, 2581, 307, 4663, 813, 50672, 50672, 1804, 1804, 293, 286, 1409, 1228, 309, 5315, 13, 50880, 50880, 400, 550, 286, 5872, 257, 18927, 445, 281, 445, 322, 1329, 724, 521, 5717, 1804, 1804, 13, 51136, 51136, 865, 11, 572, 2649, 13, 51212, 51212, 407, 286, 630, 257, 688, 295, 2962, 300, 645, 19350, 293, 300, 994, 380, 1401, 709, 1101, 13, 51522, 51522, 407, 1338, 11, 18927, 309, 13, 51629, 51629, 400, 6284, 729, 721, 500, 380, 1036, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.19965981463996732, "compression_ratio": 1.6533333333333333, "no_caption_prob": 8.887284639058635e-05}, {"id": 1016, "seek": 425730, "start": 4267.62, "end": 4272.74, "text": " And then I ran a benchmark just to just on list append versus plus plus.", "tokens": [50364, 583, 1338, 11, 286, 1604, 300, 294, 512, 3190, 286, 1194, 411, 1329, 300, 724, 2581, 307, 4663, 813, 50672, 50672, 1804, 1804, 293, 286, 1409, 1228, 309, 5315, 13, 50880, 50880, 400, 550, 286, 5872, 257, 18927, 445, 281, 445, 322, 1329, 724, 521, 5717, 1804, 1804, 13, 51136, 51136, 865, 11, 572, 2649, 13, 51212, 51212, 407, 286, 630, 257, 688, 295, 2962, 300, 645, 19350, 293, 300, 994, 380, 1401, 709, 1101, 13, 51522, 51522, 407, 1338, 11, 18927, 309, 13, 51629, 51629, 400, 6284, 729, 721, 500, 380, 1036, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.19965981463996732, "compression_ratio": 1.6533333333333333, "no_caption_prob": 8.887284639058635e-05}, {"id": 1017, "seek": 425730, "start": 4272.74, "end": 4274.26, "text": " Yeah, no difference.", "tokens": [50364, 583, 1338, 11, 286, 1604, 300, 294, 512, 3190, 286, 1194, 411, 1329, 300, 724, 2581, 307, 4663, 813, 50672, 50672, 1804, 1804, 293, 286, 1409, 1228, 309, 5315, 13, 50880, 50880, 400, 550, 286, 5872, 257, 18927, 445, 281, 445, 322, 1329, 724, 521, 5717, 1804, 1804, 13, 51136, 51136, 865, 11, 572, 2649, 13, 51212, 51212, 407, 286, 630, 257, 688, 295, 2962, 300, 645, 19350, 293, 300, 994, 380, 1401, 709, 1101, 13, 51522, 51522, 407, 1338, 11, 18927, 309, 13, 51629, 51629, 400, 6284, 729, 721, 500, 380, 1036, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.19965981463996732, "compression_ratio": 1.6533333333333333, "no_caption_prob": 8.887284639058635e-05}, {"id": 1018, "seek": 425730, "start": 4274.26, "end": 4280.46, "text": " So I did a lot of changes that were unnecessary and that didn't read much better.", "tokens": [50364, 583, 1338, 11, 286, 1604, 300, 294, 512, 3190, 286, 1194, 411, 1329, 300, 724, 2581, 307, 4663, 813, 50672, 50672, 1804, 1804, 293, 286, 1409, 1228, 309, 5315, 13, 50880, 50880, 400, 550, 286, 5872, 257, 18927, 445, 281, 445, 322, 1329, 724, 521, 5717, 1804, 1804, 13, 51136, 51136, 865, 11, 572, 2649, 13, 51212, 51212, 407, 286, 630, 257, 688, 295, 2962, 300, 645, 19350, 293, 300, 994, 380, 1401, 709, 1101, 13, 51522, 51522, 407, 1338, 11, 18927, 309, 13, 51629, 51629, 400, 6284, 729, 721, 500, 380, 1036, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.19965981463996732, "compression_ratio": 1.6533333333333333, "no_caption_prob": 8.887284639058635e-05}, {"id": 1019, "seek": 425730, "start": 4280.46, "end": 4282.6, "text": " So yeah, benchmark it.", "tokens": [50364, 583, 1338, 11, 286, 1604, 300, 294, 512, 3190, 286, 1194, 411, 1329, 300, 724, 2581, 307, 4663, 813, 50672, 50672, 1804, 1804, 293, 286, 1409, 1228, 309, 5315, 13, 50880, 50880, 400, 550, 286, 5872, 257, 18927, 445, 281, 445, 322, 1329, 724, 521, 5717, 1804, 1804, 13, 51136, 51136, 865, 11, 572, 2649, 13, 51212, 51212, 407, 286, 630, 257, 688, 295, 2962, 300, 645, 19350, 293, 300, 994, 380, 1401, 709, 1101, 13, 51522, 51522, 407, 1338, 11, 18927, 309, 13, 51629, 51629, 400, 6284, 729, 721, 500, 380, 1036, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.19965981463996732, "compression_ratio": 1.6533333333333333, "no_caption_prob": 8.887284639058635e-05}, {"id": 1020, "seek": 425730, "start": 4282.6, "end": 4284.78, "text": " And ultimately those things don't last.", "tokens": [50364, 583, 1338, 11, 286, 1604, 300, 294, 512, 3190, 286, 1194, 411, 1329, 300, 724, 2581, 307, 4663, 813, 50672, 50672, 1804, 1804, 293, 286, 1409, 1228, 309, 5315, 13, 50880, 50880, 400, 550, 286, 5872, 257, 18927, 445, 281, 445, 322, 1329, 724, 521, 5717, 1804, 1804, 13, 51136, 51136, 865, 11, 572, 2649, 13, 51212, 51212, 407, 286, 630, 257, 688, 295, 2962, 300, 645, 19350, 293, 300, 994, 380, 1401, 709, 1101, 13, 51522, 51522, 407, 1338, 11, 18927, 309, 13, 51629, 51629, 400, 6284, 729, 721, 500, 380, 1036, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.19965981463996732, "compression_ratio": 1.6533333333333333, "no_caption_prob": 8.887284639058635e-05}, {"id": 1021, "seek": 428478, "start": 4284.78, "end": 4289.74, "text": " You know, I mean, like, again, like somebody could refactor it because some something looks", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1022, "seek": 428478, "start": 4289.74, "end": 4295.9, "text": " ugly or it's a hack or if some if some code is using list dot append and it's a little", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1023, "seek": 428478, "start": 4295.9, "end": 4299.219999999999, "text": " bit awkward and they're like, why doesn't this use plus plus and change it?", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1024, "seek": 428478, "start": 4299.219999999999, "end": 4301.0599999999995, "text": " They're probably going to change it.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1025, "seek": 428478, "start": 4301.0599999999995, "end": 4305.179999999999, "text": " Maybe maybe it changes which one's faster than the other.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1026, "seek": 428478, "start": 4305.179999999999, "end": 4310.099999999999, "text": " So there's always a cost to to making code uglier, right?", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1027, "seek": 428478, "start": 4310.099999999999, "end": 4312.4, "text": " It's like a make it work.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1028, "seek": 428478, "start": 4312.4, "end": 4313.4, "text": " Make it right.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1029, "seek": 428478, "start": 4313.4, "end": 4314.4, "text": " Make it fast.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 411, 11, 797, 11, 411, 2618, 727, 1895, 15104, 309, 570, 512, 746, 1542, 50612, 50612, 12246, 420, 309, 311, 257, 10339, 420, 498, 512, 498, 512, 3089, 307, 1228, 1329, 5893, 34116, 293, 309, 311, 257, 707, 50920, 50920, 857, 11411, 293, 436, 434, 411, 11, 983, 1177, 380, 341, 764, 1804, 1804, 293, 1319, 309, 30, 51086, 51086, 814, 434, 1391, 516, 281, 1319, 309, 13, 51178, 51178, 2704, 1310, 309, 2962, 597, 472, 311, 4663, 813, 264, 661, 13, 51384, 51384, 407, 456, 311, 1009, 257, 2063, 281, 281, 1455, 3089, 10743, 2753, 11, 558, 30, 51630, 51630, 467, 311, 411, 257, 652, 309, 589, 13, 51745, 51745, 4387, 309, 558, 13, 51795, 51795, 4387, 309, 2370, 13, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.14132298768021678, "compression_ratio": 1.7633587786259541, "no_caption_prob": 5.649368904414587e-05}, {"id": 1030, "seek": 431440, "start": 4314.4, "end": 4317.62, "text": " But that should be the last resort if you if you need to.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1031, "seek": 431440, "start": 4317.62, "end": 4319.74, "text": " And if you benchmark it and see there's a problem.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1032, "seek": 431440, "start": 4319.74, "end": 4320.74, "text": " Yeah.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1033, "seek": 431440, "start": 4320.74, "end": 4325.9, "text": " So don't do this at home, kids.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1034, "seek": 431440, "start": 4325.9, "end": 4332.299999999999, "text": " Only do it at work.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1035, "seek": 431440, "start": 4332.299999999999, "end": 4337.099999999999, "text": " So yeah, performance work is is a hobby.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1036, "seek": 431440, "start": 4337.099999999999, "end": 4339.94, "text": " It doesn't always bear fruits sometimes to do.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1037, "seek": 431440, "start": 4339.94, "end": 4340.94, "text": " And that's great.", "tokens": [50364, 583, 300, 820, 312, 264, 1036, 19606, 498, 291, 498, 291, 643, 281, 13, 50525, 50525, 400, 498, 291, 18927, 309, 293, 536, 456, 311, 257, 1154, 13, 50631, 50631, 865, 13, 50681, 50681, 407, 500, 380, 360, 341, 412, 1280, 11, 2301, 13, 50939, 50939, 5686, 360, 309, 412, 589, 13, 51259, 51259, 407, 1338, 11, 3389, 589, 307, 307, 257, 18240, 13, 51499, 51499, 467, 1177, 380, 1009, 6155, 12148, 2171, 281, 360, 13, 51641, 51641, 400, 300, 311, 869, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.22470430396069055, "compression_ratio": 1.4702702702702704, "no_caption_prob": 4.61081690446008e-05}, {"id": 1038, "seek": 434094, "start": 4340.94, "end": 4345.0599999999995, "text": " So it's it's as long as you're not hurting anyone.", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1039, "seek": 434094, "start": 4345.0599999999995, "end": 4346.0599999999995, "text": " Yeah.", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1040, "seek": 434094, "start": 4346.0599999999995, "end": 4351.259999999999, "text": " Well, we do know that we've gotten a lot of amazing performance improvements from your", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1041, "seek": 434094, "start": 4351.259999999999, "end": 4352.259999999999, "text": " work, Robin.", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1042, "seek": 434094, "start": 4352.259999999999, "end": 4354.099999999999, "text": " So thank you for your work.", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1043, "seek": 434094, "start": 4354.099999999999, "end": 4356.78, "text": " Thank you for being on to talk about this with us.", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1044, "seek": 434094, "start": 4356.78, "end": 4358.62, "text": " And yeah, thanks so much for coming back on.", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1045, "seek": 434094, "start": 4358.62, "end": 4359.799999999999, "text": " Oh, my pleasure.", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1046, "seek": 434094, "start": 4359.799999999999, "end": 4364.98, "text": " If anybody wants to to find out more, where should they where should they follow you?", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1047, "seek": 434094, "start": 4364.98, "end": 4367.179999999999, "text": " Where can they go to read more?", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1048, "seek": 434094, "start": 4367.179999999999, "end": 4368.94, "text": " Any any resources to leave people with?", "tokens": [50364, 407, 309, 311, 309, 311, 382, 938, 382, 291, 434, 406, 17744, 2878, 13, 50570, 50570, 865, 13, 50620, 50620, 1042, 11, 321, 360, 458, 300, 321, 600, 5768, 257, 688, 295, 2243, 3389, 13797, 490, 428, 50880, 50880, 589, 11, 16533, 13, 50930, 50930, 407, 1309, 291, 337, 428, 589, 13, 51022, 51022, 1044, 291, 337, 885, 322, 281, 751, 466, 341, 365, 505, 13, 51156, 51156, 400, 1338, 11, 3231, 370, 709, 337, 1348, 646, 322, 13, 51248, 51248, 876, 11, 452, 6834, 13, 51307, 51307, 759, 4472, 2738, 281, 281, 915, 484, 544, 11, 689, 820, 436, 689, 820, 436, 1524, 291, 30, 51566, 51566, 2305, 393, 436, 352, 281, 1401, 544, 30, 51676, 51676, 2639, 604, 3593, 281, 1856, 561, 365, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15041709313025842, "compression_ratio": 1.6308243727598566, "no_caption_prob": 5.3902000217931345e-05}, {"id": 1049, "seek": 436894, "start": 4368.94, "end": 4375.94, "text": " I think perhaps the I think the best way is to follow me on Twitter.", "tokens": [50364, 286, 519, 4317, 264, 286, 519, 264, 1151, 636, 307, 281, 1524, 385, 322, 5794, 13, 50714, 50714, 663, 311, 412, 5424, 389, 328, 1494, 13, 50838, 50838, 865, 11, 321, 603, 3270, 257, 2113, 294, 264, 855, 5570, 337, 561, 281, 360, 300, 13, 51048, 51048, 1436, 2171, 286, 360, 562, 286, 360, 562, 286, 360, 1507, 300, 311, 4077, 281, 589, 420, 42355, 51368, 51368, 281, 589, 11, 550, 286, 2183, 322, 264, 19184, 6968, 13, 51534, 51534, 400, 562, 286, 360, 1507, 300, 311, 17491, 452, 1065, 22265, 11, 286, 360, 309, 322, 452, 1065, 1905, 17, 2696, 13, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.20259855378348873, "compression_ratio": 1.6425339366515836, "no_caption_prob": 7.253553485497832e-05}, {"id": 1050, "seek": 436894, "start": 4375.94, "end": 4378.419999999999, "text": " That's at Rob Higgin.", "tokens": [50364, 286, 519, 4317, 264, 286, 519, 264, 1151, 636, 307, 281, 1524, 385, 322, 5794, 13, 50714, 50714, 663, 311, 412, 5424, 389, 328, 1494, 13, 50838, 50838, 865, 11, 321, 603, 3270, 257, 2113, 294, 264, 855, 5570, 337, 561, 281, 360, 300, 13, 51048, 51048, 1436, 2171, 286, 360, 562, 286, 360, 562, 286, 360, 1507, 300, 311, 4077, 281, 589, 420, 42355, 51368, 51368, 281, 589, 11, 550, 286, 2183, 322, 264, 19184, 6968, 13, 51534, 51534, 400, 562, 286, 360, 1507, 300, 311, 17491, 452, 1065, 22265, 11, 286, 360, 309, 322, 452, 1065, 1905, 17, 2696, 13, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.20259855378348873, "compression_ratio": 1.6425339366515836, "no_caption_prob": 7.253553485497832e-05}, {"id": 1051, "seek": 436894, "start": 4378.419999999999, "end": 4382.62, "text": " Yeah, we'll drop a link in the show notes for people to do that.", "tokens": [50364, 286, 519, 4317, 264, 286, 519, 264, 1151, 636, 307, 281, 1524, 385, 322, 5794, 13, 50714, 50714, 663, 311, 412, 5424, 389, 328, 1494, 13, 50838, 50838, 865, 11, 321, 603, 3270, 257, 2113, 294, 264, 855, 5570, 337, 561, 281, 360, 300, 13, 51048, 51048, 1436, 2171, 286, 360, 562, 286, 360, 562, 286, 360, 1507, 300, 311, 4077, 281, 589, 420, 42355, 51368, 51368, 281, 589, 11, 550, 286, 2183, 322, 264, 19184, 6968, 13, 51534, 51534, 400, 562, 286, 360, 1507, 300, 311, 17491, 452, 1065, 22265, 11, 286, 360, 309, 322, 452, 1065, 1905, 17, 2696, 13, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.20259855378348873, "compression_ratio": 1.6425339366515836, "no_caption_prob": 7.253553485497832e-05}, {"id": 1052, "seek": 436894, "start": 4382.62, "end": 4389.0199999999995, "text": " Because sometimes I do when I do when I do stuff that's related to work or relatable", "tokens": [50364, 286, 519, 4317, 264, 286, 519, 264, 1151, 636, 307, 281, 1524, 385, 322, 5794, 13, 50714, 50714, 663, 311, 412, 5424, 389, 328, 1494, 13, 50838, 50838, 865, 11, 321, 603, 3270, 257, 2113, 294, 264, 855, 5570, 337, 561, 281, 360, 300, 13, 51048, 51048, 1436, 2171, 286, 360, 562, 286, 360, 562, 286, 360, 1507, 300, 311, 4077, 281, 589, 420, 42355, 51368, 51368, 281, 589, 11, 550, 286, 2183, 322, 264, 19184, 6968, 13, 51534, 51534, 400, 562, 286, 360, 1507, 300, 311, 17491, 452, 1065, 22265, 11, 286, 360, 309, 322, 452, 1065, 1905, 17, 2696, 13, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.20259855378348873, "compression_ratio": 1.6425339366515836, "no_caption_prob": 7.253553485497832e-05}, {"id": 1053, "seek": 436894, "start": 4389.0199999999995, "end": 4392.339999999999, "text": " to work, then I post on the Beck blog.", "tokens": [50364, 286, 519, 4317, 264, 286, 519, 264, 1151, 636, 307, 281, 1524, 385, 322, 5794, 13, 50714, 50714, 663, 311, 412, 5424, 389, 328, 1494, 13, 50838, 50838, 865, 11, 321, 603, 3270, 257, 2113, 294, 264, 855, 5570, 337, 561, 281, 360, 300, 13, 51048, 51048, 1436, 2171, 286, 360, 562, 286, 360, 562, 286, 360, 1507, 300, 311, 4077, 281, 589, 420, 42355, 51368, 51368, 281, 589, 11, 550, 286, 2183, 322, 264, 19184, 6968, 13, 51534, 51534, 400, 562, 286, 360, 1507, 300, 311, 17491, 452, 1065, 22265, 11, 286, 360, 309, 322, 452, 1065, 1905, 17, 2696, 13, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.20259855378348873, "compression_ratio": 1.6425339366515836, "no_caption_prob": 7.253553485497832e-05}, {"id": 1054, "seek": 436894, "start": 4392.339999999999, "end": 4398.16, "text": " And when I do stuff that's purely my own invention, I do it on my own dev2 account.", "tokens": [50364, 286, 519, 4317, 264, 286, 519, 264, 1151, 636, 307, 281, 1524, 385, 322, 5794, 13, 50714, 50714, 663, 311, 412, 5424, 389, 328, 1494, 13, 50838, 50838, 865, 11, 321, 603, 3270, 257, 2113, 294, 264, 855, 5570, 337, 561, 281, 360, 300, 13, 51048, 51048, 1436, 2171, 286, 360, 562, 286, 360, 562, 286, 360, 1507, 300, 311, 4077, 281, 589, 420, 42355, 51368, 51368, 281, 589, 11, 550, 286, 2183, 322, 264, 19184, 6968, 13, 51534, 51534, 400, 562, 286, 360, 1507, 300, 311, 17491, 452, 1065, 22265, 11, 286, 360, 309, 322, 452, 1065, 1905, 17, 2696, 13, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.20259855378348873, "compression_ratio": 1.6425339366515836, "no_caption_prob": 7.253553485497832e-05}, {"id": 1055, "seek": 439816, "start": 4398.16, "end": 4399.7, "text": " In either case, it ends up on Twitter.", "tokens": [50364, 682, 2139, 1389, 11, 309, 5314, 493, 322, 5794, 13, 50441, 50441, 407, 300, 311, 1391, 264, 1151, 636, 281, 13, 50549, 50549, 10246, 13, 50599, 50599, 1057, 558, 13, 50649, 50649, 2561, 797, 11, 16533, 13, 50699, 50699, 508, 2032, 268, 11, 1826, 958, 565, 13, 50775, 50775, 9088, 958, 565, 13, 50795], "temperature": 0.0, "avg_logprob": -0.18597393376486643, "compression_ratio": 1.2868852459016393, "no_caption_prob": 4.197435555397533e-05}, {"id": 1056, "seek": 439816, "start": 4399.7, "end": 4401.86, "text": " So that's probably the best way to.", "tokens": [50364, 682, 2139, 1389, 11, 309, 5314, 493, 322, 5794, 13, 50441, 50441, 407, 300, 311, 1391, 264, 1151, 636, 281, 13, 50549, 50549, 10246, 13, 50599, 50599, 1057, 558, 13, 50649, 50649, 2561, 797, 11, 16533, 13, 50699, 50699, 508, 2032, 268, 11, 1826, 958, 565, 13, 50775, 50775, 9088, 958, 565, 13, 50795], "temperature": 0.0, "avg_logprob": -0.18597393376486643, "compression_ratio": 1.2868852459016393, "no_caption_prob": 4.197435555397533e-05}, {"id": 1057, "seek": 439816, "start": 4401.86, "end": 4402.86, "text": " Perfect.", "tokens": [50364, 682, 2139, 1389, 11, 309, 5314, 493, 322, 5794, 13, 50441, 50441, 407, 300, 311, 1391, 264, 1151, 636, 281, 13, 50549, 50549, 10246, 13, 50599, 50599, 1057, 558, 13, 50649, 50649, 2561, 797, 11, 16533, 13, 50699, 50699, 508, 2032, 268, 11, 1826, 958, 565, 13, 50775, 50775, 9088, 958, 565, 13, 50795], "temperature": 0.0, "avg_logprob": -0.18597393376486643, "compression_ratio": 1.2868852459016393, "no_caption_prob": 4.197435555397533e-05}, {"id": 1058, "seek": 439816, "start": 4402.86, "end": 4403.86, "text": " All right.", "tokens": [50364, 682, 2139, 1389, 11, 309, 5314, 493, 322, 5794, 13, 50441, 50441, 407, 300, 311, 1391, 264, 1151, 636, 281, 13, 50549, 50549, 10246, 13, 50599, 50599, 1057, 558, 13, 50649, 50649, 2561, 797, 11, 16533, 13, 50699, 50699, 508, 2032, 268, 11, 1826, 958, 565, 13, 50775, 50775, 9088, 958, 565, 13, 50795], "temperature": 0.0, "avg_logprob": -0.18597393376486643, "compression_ratio": 1.2868852459016393, "no_caption_prob": 4.197435555397533e-05}, {"id": 1059, "seek": 439816, "start": 4403.86, "end": 4404.86, "text": " Thanks again, Robin.", "tokens": [50364, 682, 2139, 1389, 11, 309, 5314, 493, 322, 5794, 13, 50441, 50441, 407, 300, 311, 1391, 264, 1151, 636, 281, 13, 50549, 50549, 10246, 13, 50599, 50599, 1057, 558, 13, 50649, 50649, 2561, 797, 11, 16533, 13, 50699, 50699, 508, 2032, 268, 11, 1826, 958, 565, 13, 50775, 50775, 9088, 958, 565, 13, 50795], "temperature": 0.0, "avg_logprob": -0.18597393376486643, "compression_ratio": 1.2868852459016393, "no_caption_prob": 4.197435555397533e-05}, {"id": 1060, "seek": 439816, "start": 4404.86, "end": 4406.38, "text": " Jeroen, until next time.", "tokens": [50364, 682, 2139, 1389, 11, 309, 5314, 493, 322, 5794, 13, 50441, 50441, 407, 300, 311, 1391, 264, 1151, 636, 281, 13, 50549, 50549, 10246, 13, 50599, 50599, 1057, 558, 13, 50649, 50649, 2561, 797, 11, 16533, 13, 50699, 50699, 508, 2032, 268, 11, 1826, 958, 565, 13, 50775, 50775, 9088, 958, 565, 13, 50795], "temperature": 0.0, "avg_logprob": -0.18597393376486643, "compression_ratio": 1.2868852459016393, "no_caption_prob": 4.197435555397533e-05}, {"id": 1061, "seek": 440638, "start": 4406.38, "end": 4428.62, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 51476], "temperature": 0.0, "avg_logprob": -0.7312778064182827, "compression_ratio": 0.6666666666666666, "no_caption_prob": 9.44469211390242e-05}], "language": "en"}