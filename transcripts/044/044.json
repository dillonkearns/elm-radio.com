{"text": " Hello, Jeroen. Hello, Dylan. And today we've got Andrei Kuzmin joining us to finally talk about some 3D stuff in Elm. So, Jeroen, this is our newbie episode. Andrei, thank you so much for joining us. Thank you, folks. It's really nice to be able to talk about this. Yeah, it's great having you. I've seen so many conference talks where you show awesome 3D demos and everything, but I see so many Elm conference talks and things make sense. It's like, oh, types, okay, types can help with this, types can help with that. This can be type safe. And then 3D stuff, and it's just all over my head. So now we've got you here to ask you all our newbie questions. And hopefully, other people who don't understand 3D will come along the ride and understand it as a result of our newbie questions. Yeah, thank you. I'm really glad to be able to explain all the things. I'll do my best in this. Yeah, no, I mean, you've got all this great knowledge. And I think that a lot of things are, you know, there's the curse of knowledge where you know these things, and it's easy to take for granted. Actually, like going through some of the Elm WebGL documentation, I had this moment where sometimes the questions that people ask me, you know, about like a package I maintain, they're like, what is this? What is a page module in Elm pages? What is, you know, and, and I have to be reminded like, oh, yeah, that's not obvious. And it's so hard to know what questions people are going to have when you've thought so much about something and built this thing. And I had that same feeling reading the WebGL documentation is talking about like meshes and shaders. And I'm like, I need someone to explain it to me like I'm five. So here we are. So maybe let's start with this. If you want to do 3D in Elm, you usually use the Elm dash explorations slash WebGL package, right? What is WebGL's part in all this? Why do we use it? And why is it needed? That's a good question. So the reason why this package is brought into Elm exploration is because there is some native platform, JavaScript that implements the integration with the WebGL. And there is also a part of WebGL that is implemented in the Elm compiler itself. It's like it's really tightly coupled with the types that compiler generates. Right. So, so WebGL is like a language, like a DSL for expressing 3D things. And Elm has like GLSL as a syntax you can do. And it creates, it actually knows the type information about the GLSL snippets. Are the things I just said accurate? That's correct. Yes. So it does type inference for the shaders that are written in GLSL. That is a language that looks similar to, I guess, C. Yeah. Okay. So GLSL is the language and WebGL is the runtime. WebGL is like a set of APIs, I would say. Okay. To do like 3D graphics or any graphics that are accelerated by the GPU. Okay. And those are natively supported by every browser out there? Yes, pretty much. They are like WebGL one that like the first specification that we are relying on is I think you can safely assume it runs in the majority of devices like even mobile phones like Android or iOS. So okay, let's break down every single term. And Jeroen and I are experts at not knowing what these terms are. So we're... I'm so good at that. We're really good at that. What is a shader? Well, a shader is like a block of code with a main function. And there are two types of shaders in the implementation. One is called the vertex shader and another one is called fragment shader. And these are the definitions of like the code that runs on GPU. So they are being compiled and executed on the GPU. And then all the data that you pass just goes through them. And as the result, you get some visual things on the screen. I guess it's like a very... Like maybe it's an oversimplification. What is the... Like if I think of shading, I think of like maybe like coloring something in with a crayon or something. Like what's the metaphor of shading? Like what does that mean a shader? I don't think... I don't know an answer to this question. But what is it at a high level? Like what... Like if you were to describe what a shader is doing at a high level, not with code, what's its purpose? To describe what? I think for the purpose of like explaining how things work in the WebGL, I think it makes sense to maybe talk about fragment shaders, vertex shaders and fragment shaders separately. So if I was to explain what the vertex shader is, it's a shader that runs for every vertex and it produces an output of it is where this vertex can be found on the screen. Is a vertex the triangle or the point? It's triangles? So, well, depending on the geometry, if the geometry is triangles, then the vertex is a corner, like a point on that triangle, a corner point. It can also be aligned. So then it's like a point, like an end of a line segment. Okay. So it's defining how you draw the points, but it's not defining what those points are? The input to it is attributes. And attributes is in elements like a record with user defined fields. It's an information that you can attach to it. So it's like, it's very generic. You can say, oh, you can attach coordinates to it, or you can attach color or texture coordinates. So any information you find useful, it can be attached to it. And then this vertex shader is going to transform that into coordinates on the screen plus some output data, which is called a variance. Okay. So would a shader be almost similar to like CSS rules that could define, you know, a color or like a background image to put over something or a transformation to like move something? Yeah. If you think of the composition of two shaders, then maybe you can think of it in this way. So if let's say if the input to the vertex shader is like a mesh that is basically, well, if you talk in terms of triangles, like a triangle or geometry, it's a bunch of triangles and each point of this triangle has user defined information like color coordinates. Then this goes through the vertex shader and it becomes, for each of them, you know where it is on the screen plus any other information that is then interpolated. When another shader picks it up, it takes, it operates on fragments, but you can think of them as pixels on the screen. So it basically, it fills those triangles and what it gets as an input is interpolated values. So if you have a triangle that has like red, green and blue attached to its vertices, then if you use that in the fragment shader and the fragment shader determines the output color of each pixel, each fragment, then you might just like interpolate it. So if you return this output, this varying from the vertex shader, then the triangle is going to be filled with like interpolated color depending on how close that each point is to either of the corners. So okay, so there's this GLSL that you can put inside of the body of Elm code with these little notation square brackets, GLSL pipe, and then you actually input GLSL code. And then Elm infers type information about that, right? So like what's the mapping between the GLSL, what is it taking from the GLSL and between that and the Elm type? So you define, when you do a GLSL snippet in Elm, it gives you a shader type, right? And then what does it map the GLSL types to the Elm types with? So usually at the top of the shader, you would have some global definitions of attributes, uniforms, variances for the shader, for the vertex shader. That would mean that it builds up a shader that has all the attributes are put together into a record type. All uniforms are grouped in the record type and all the variances are grouped in the record type. Like I forgot to mention what the uniforms are. The uniforms are some global constants. So they're not part of the mesh, they are part of the rendering. So like camera position. Yep. Camera. Okay, cool. So that's basically like an input that you can use to, that allows you to, through Elm, change the camera position. You can like make that vary now and you've basically created a binding between Elm and the WebGL interface where you can move the camera position, for example. It's all passed in the declarative way, but if you use like animation frame subscription and you pass a different camera position, then you'll have like a moving camera. That's very cool. So you're right. So it's this declarative thing where you have your uniforms, which are these like global values in WebGL and you declare them in your GLSL snippet and then you pass in types, which are Elm is going to check that the types match between the uniforms you've declared in your GLSL and the ones you use in your Elm WebGL code. And then you can change those values and the camera moves or the color can change or the rotation can change. And this type safety is not just for uniforms. So basically you have two shaders, their type signatures have to align and also you have mesh that is defined by its vertices, like attributes, attributes type attached to every vertices and those attributes will have to match with the input to the vertex shader. The uniforms have to match between the vertex shader and the fragment shader and the uniforms that you pass, like the uniforms that you pass. And also the variants coming from vertex shader into fragment shader, those values that are interpolated, they also have to match. So Elm verifies that all the types align together and it really helps to avoid some problems that you might otherwise encounter when doing it in a raw JavaScript. Or just the C language that is GLSL. Or you still have to GLSL if you want to use the raw Elm WebGL. Is that part of GLSL, does that give you some of that type safety in itself but then Elm gives you the bindings to the uniforms that it passes in? Or you're saying if you use a JavaScript library... If you were to do it yourself in JavaScript, then you would be getting runtime exceptions that you'll have to... So you'll have to run your code in order to see them. Does it give it to you as soon as you start the GLSL and then it says, oh, the types are a mismatch? Does it compile the GLSL at runtime? There is a bunch of operations you need to do in order to get it working. There is a pretty big boilerplate, I guess. You have to compile the shaders that may fail. Then you have to link the two shaders into a program. So you need to take Vertex Shader and Fragment Shader, link it to a program. That may fail. And then when you perform drawing operations, you have to correctly set all the buffers and pass it to the program and run it. So that may fail. And the uniforms may not line up from being passed in from JavaScript and being run in GLSL. And when things go wrong, it's a runtime exception. And usually you see just a white screen with some console errors. I think I'm starting to get a picture of why people get very passionate, it seems, about doing 3D stuff in Elm. Because it sounds like Elm has really... It's so interesting to me because I feel like I have my finger on the pulse of Elm stuff a fair amount, except this stuff is such a blind spot for me. But I see people getting really passionate about it. And this must be one of the reasons. I know some people who even used some raw WebGL before trying out Elm and they say, wow, this is so much easier because of all these guarantees. How are the compiler errors? When you mess up either the GLSL or when you mess up the linking, are the compiler errors good? Helpful? You mean coming out from the raw WebGL or the Elm ones? I mean when you... When you're using WebGL in Elm. Yeah, when you use WebGL in Elm. Yeah, I think they are. It will be basically like, I want this type, but you pass this type. Kind of error. So I'm curious to know, and I'm wondering whether this is a good way to start a conversation because when you need to do something in 3D, how do you think? What do you start with? Do you start with writing a bunch of vertexes and attributes or what is your process? Right. Like maybe we need to define what that something is because it may depend on that. Like, so can you think of an example? Let's say you want to draw a cube or a triangle. So well, then the first thing I would think of is like, I need to define a mesh for the cube. So I need to visualize it in 3D and I need to write down coordinates for all the triangles that form the cube. Yeah. So the mesh is just the, I want to say the physical representation of the 3D object, just like the box, like where are the coordinates of every point? That is a mesh, right? In the simple form, yes. But like what you say coordinate is, it's an attribute. It's a record where you may have coordinates and you may have something else, whatever you want to attach to it. All right. And a mesh is a list of, how do you say, triplet, like a tuple of three. Right. Yeah. Triplet. So it's a list of those. And each of the components of that triplet is this record type that you define yourself. Okay. Which often contains the position or the original position and then some additional information if needed. And color. Yeah. Right. Yeah. I see that in this like simple cube example, there's like right front top, left front top, left back top, et cetera, et cetera, for all the three dimensional points that you would map out for a cube. And then it's creating a face that is stretching from each of those with these three point vectors. Yeah. Like when constructing a cube, I think you can be like more clever. Maybe you define one, maybe define a square. And then if you know like how to transform that, how to do like a rotation, maybe then you can define all the sides of the cube. I think there is in one of the examples, I think there was this kind of implementation. Yeah, I can confirm. Or you just write it down, like all the coordinates. Wow. There are so many different skills in this world. Like there's the geometry and these mathematical transformations and the textures, the 3D stuff. That's really interesting. So if we talk about textures, that is another thing in WebGL. So let's say if you want to have a textured cube, then you might want to assign texture coordinates to each of the face, which means basically where this vertex can be found on a texture, on an image. And then you can use this information in the fragment shader that determines the output color and you can pass the texture as a uniform and then you can do a lookup using this coordinate. You can find where that pixel is and take its color and return it. Then you get like a textured rendering of a cube. Okay. And that's how we apply a texture on a face or... Okay. So you have your mesh for your cube. What else? What happens next? So then you need to think of the scene. You need to set up a scene. So you probably think of, do you need to move the cube around? Do you want to have... Where do you position the camera? Where the camera is looking at? And in the role of WebGL API, that would be all matrices that define this. So you may want to have like a transformation matrix that you want to apply to your cube. If you define a cube in its own local coordinate system, like I don't know, based on zero, right? Then you might want to move it around or if you have many cubes and you may have, you may position them in 3D. That is defined by matrix that transforms from local into world coordinate system. Is there any convention with like the Y axis going downwards as it grows positive or does it grow up as it grows positive? There's like, usually I think I would use that up. Okay. Yeah. So the intuitive thing. X to the right and Y from the camera. I think this is what I would use. But I think you're not really, you're not restricted because you can do all these transformations for the matrices. Like you can flip the axis, you can do whatever you want. Right. And you could create some mapping of real world units. Like I've heard Ian McKenzie talk about trying to use real world units to model things. Yeah, certainly. So this is the first matrix, let's say the matrix that moves around objects in the world, like positions them, rotates them. You can compose, you can combine all this transformation in one matrix basically by like first rotating and then moving. I feel like I'm missing something. So you have your mesh, you say that it's at position 0, 0, 0, and then you first set a camera. Is that it? No, like first you may want to move object around. If you want it to be positioned at 0, 0, 0 and just render it, then you don't need that. Then all you need is like a camera transformation. So that is like there is another package that you have to use, which is exploration linear algebra and that provides all the useful functions to define like... To like manipulate matrices basically, right? Yeah, and create some like various matrices that you might need, like a projection, like a perspective projection matrix. So what is a perspective matrix? So there are two types of projection matrices that exist in linear algebra. One is the matrix that like it takes your 3D thing and it projects it onto like a plane. Yes, that's a definition of projection and what perspective projection does is it makes it so that like parallel lines intersect. If you prolong them, then they would intersect. So you get this kind of realistic view and orthographic projection keeps the parallel lines parallel. Okay, so it's so that you can imitate seeing from an eye. Is that it? All right. So like a lens or different kind of lens? Like would you imitate like a fish eye lens versus a telephoto lens type of thing with those transformations or is that different? I think like one of the inputs is an angle of view as far as I remember. So you might want to like you might be able to do this, but I'm not really sure about the lens transformations whether you can achieve them using the existing functionality. Okay so we were talking about meshes and just to reiterate like a mesh is just part of a shader. So when you define your GLSL snippet in ELM, you're defining a mapping, you're defining your mesh which are the points, the vertices. You're defining your uniforms which are essentially the parameters that you're binding between ELM and GLSL that you can pass in things that vary like camera position. You're defining them, you're saying I want to have those uniforms, I want those attributes, but you're passing them in from ELM, right? Right, like it seems like it's almost like your model, right, for your GLSL. So attributes is mesh and then uniforms is just like an ELM record and then you also get two shaders and then you put it all together into what is called an entity in the ELM WebGL API. Then you have a list of those that you pass into the top level function that creates a canvas element and like a DOM element so that becomes HTML. And so like this whole GLSL thing is the purpose of it is to like it's a language that is compiling down to highly performant stuff that's running on the GPU of your machine and so these like uniforms are I mean it's compiling down to like very fast GPU instructions essentially, right? And so ELM is able to just sort of vary these few pieces but then it just runs very fast GPU instructions from that, right? Yes, there are numerous performance optimizations in this pipeline. So first of all, all the meshes are cached so whenever this like a WebGL to HTML function, whenever it receives a new mesh is like in one of the entities, it would upload it into a GPU memory and cache it. So when you call the same function, you pass the same mesh, it doesn't have to reupload the data to GPU. How does it detect whether it's the same? Is it by reference or does it do an equality check? That's a good question. So I think in the past what used to be is the JavaScript object is being tagged with an ID but I think what we switched it recently to is using weak map in JavaScript if you know about this. And the overall cache kind of or like a representation of what is cached, what's not is a part of the virtual DOM node that is created for that canvas, for the WebGL canvas element. And this node, it stores things like uploaded, like references to uploaded textures, like all the buffers for attributes but the uniforms are not. So the uniforms are changing from like you can set some different uniforms. That's the whole purpose of them to be able to move around and the uniforms is usually not that much data when compared to like a mesh that defines a very complex 3D object. Yes, so that's why you try to have the uniforms change but not the meshes, right? If you change your mesh 60 times a second, then you will have to upload it onto GPU every time and that would make it slow. So yes, this is like it's a really cool performance optimization but it's also it can be thought of as a limitation like if you want to be changing the mesh instead of moving it around. So you need to think of how you can achieve what you want by not changing the mesh but by I don't know having multiple meshes and like positioning them in the way you want. Then like varying your uniforms for example, right? That would be because that's just running the same mesh that it's computed and it knows the ways it varies based on those uniforms. But then at the same time, you don't want to have too many of them. Like you don't want to have too many entities. Because each entity internally results in a draw call and a draw call is like this final execution of all the things together and it's on overhead. So any call to GPU has some sort of latency, some overhead. Like even internally what we do is we try to keep the calls or what like the settings or even like uniforms we try to keep what the previous ones were that were set on the WebGL context. And if a new operation comes, we see whether it's the same as it was set. Basically some sort of diffusing but like a very simple one. And we do not do it if it is the same to reduce the number of calls to WebGL. You prefer to do an equality check before checking whether you need to run before rendering. So let's go back to having small uniforms and meshes that don't change. Let's imagine I want to draw a hand and I have one mesh per finger and one mesh for the entire hand and I want to move the fingers. Do I have a uniform that defines like the rotation of the finger or do I have like one mesh for the entire hand? That's an interesting question. I haven't done this but I can think of how it's possible to do it. I think what you sort of need is you need to define a skeleton of some sort. And if you think that the origin position is of the hand, then I guess you can do like the next like bone or something you can specify it in the coordinate system of the hand. And then you can have some sort of tree built up that has like relative positions in it. And then if you move the hand, then everything else will move with it. But then what you need to do internally, you would need to flatten out all the transformations because in the end you're rendering a list of things, right? So every bone will have to be an element in that list. So you would need to compose its transformation with the positional transformation of the hand itself. Which you would do using matrices? Yeah. Okay. Yeah. That's the raw WebGL approach because in the end you pass like a matrix 4 and in the end you use this like matrix multiplication on the GPU. But there are other ways to model things like using a library called Elm Geometry from Ian McKenzie which is a completely different way of thinking of transformations. There are types like frame 3D and that type gives you the possibility to transform between two coordinate systems. Interesting. But at the end of the day GPUs only understand matrices, right? Like that's basically\u2026 Yeah. So the way down when you want to render you would have to convert frame 3D into matrix 4. Right. Right. To speak the language of the GPU. Yeah. Okay. So if we're\u2026 Okay. So we've got our like our shader for our cube and we've got our faces defined which is our cube mesh, right? Our mesh is all of the faces of this cube. And then we create an entity from that mesh which defines the faces of the cube and the shader which\u2026 Two shaders. Two shaders. Okay. So what are those two shaders? So the vertex shader and the fragment shader. The vertex shader would work, would be called for each of the vertices and it will be passed attributes like that are that we attached to all the points that define those triangles from the mesh and the output is where things can be found on the screen in the clip space coordinates. So it's like from minus one to one on all axis. So it's not like pixels coordinate. And then the fragment shader runs and it runs for all the pixels within each triangle and it returns a color which is RGBA and it's defined as also like from zero to one for each component. So R from zero to one, B from zero to one. So the fragment shader runs for every pixel that would be seen on the screen? Okay. I mean it's not computing anything that wouldn't be seen on the screen because it's behind the camera or something. Yeah, so what like there are things. Yeah. So if a thing is outside of the visible area, I think there are different ways like you can get rid of back facing triangles if you, okay, that's a, let me think a bit more. I'll explain this. When you define the projection matrix, you need to pass two values, which is the nearest clipping plane and the furthest clipping plane. Everything that falls out of this will not be visible. If something is too close to the eye, then you don't show it. Is that it? Okay. And what you can do in order to get things invisible is the output is like, so the output from the vertex shader as X, Y and Z, the Z coordinate, it doesn't affect into where the pixel is positioned because our screen is 2D, but it's still, you can still set like a value that is less than minus one or more than one. And that will mean that it's not going to be rendered, this vertex. And I think this is what the projection matrix would do. It will like map coordinates to being outside of the so called clip space, this visible part of coordinates that are returned. Like the range of coordinates that are considered visible when for the output of the vertex shader. And then another way of making things invisible is you can rely on the winding of the vertices. You can rely on what? So you have like counterclockwise or clockwise coordinate, like positions of the vertices. And then if you create an entity with settings, you can make it so that it only renders like front facing or back facing triangles. Is that in order to not have to compute too many things? Is that just a performance optimization? Like you want to draw a house, but you don't want to draw all the walls behind it. So it's just a facet. Same for the cube, I guess you don't want to render the inside of the cube. You only want to render the outside if it's like sealed. You can't look inside. So I think this is kind of starting to click for me. So like, okay, so we're creating an entity using WebGL.entity and we give it a vertex shader, which we've talked about. We give it a fragment shader, which is telling it how to color the faces of the cube. And if that's just a shader, so it takes a uniform, we could have the uniform could allow us to control the color. It could allow us to vary the color and bind that from Elm. So if we wanted to, we could just say, depending on the face, give it a fixed color, or we could give it a gradient color if we wanted to create that mapping. And then we give it a mesh. Yes, you can do coloring from uniforms too, or you can have them coming from the mesh and pass as varying from the vertex shader into the fragment shader. You have all the options. I'm guessing the fragment shader is mostly used for lighting. So you tell us where the sun is and then it makes some pixels lighter or darker based on their position. Is that it? Yes, you can use it for this too. Like if for lighting, you would need to have a normal to the surface. So a normal, it really depends on whether your object is smooth or not. Let's say our cube is not smooth. For that, I think you can even calculate the normal in the fragment shader, but you can also have it attached to each of the vertices when you're defining the cube. What is a normal? It's like a unit vector from the surface, like going to the outside from the surface. Okay, so it's like... Pointing where the surface is facing. Okay, yeah. And then you have another, like you have a direction of the light or like this kind of thing. If you have directional light, like the simplest possible is like the simple flat shading where you have the direction of the light. And then when you're trying to determine what the color of the pixel should be, you can check how these two vectors align. Like if they are facing each other exactly, then I guess it will be highlighted. But if they are facing in the opposite direction, sorry, if they are facing in the same direction, then it's going to be in the dark. Yeah, because you're pointing, the light is shining on the backside of the cube or of that face. Then it means it won't be shown. Okay. Okay, so this is cool. So like the the variances, so this is like the sort of third piece of a shader. It can have a varying which is an output from the shader. Yeah, so a vertex shader has a variance as an output. The fragment shader has them as an input. Right, right. So for example, if you have an output of the color given which face of the cube we're on, then that varying output from the vertex shader would be, that color would be an input to the fragment shader and then it would just take that color and possibly transform it, but basically paint that color. Yes, basically. It doesn't take it exactly right because you set it onto three vertices of a triangle. Right, remember the vertex shader is working with only the corner points, whilst the fragment shader is filling the whole triangle. So what you get there is an interpolation, an interpolated result based on how close you are to each of the vertices. So like if it's very close, if it's at the vertex itself, then it's going to be the color that is specified for that vertex. If it's somewhere in the center and you have specified different colors for all of the three vertices, then it's going to be like an average of colors. Can you determine how that interpolation is made? Can you use different interpolation functions or is it always the same? It's the same and I can't tell how it works. I think it's like linear. And I'm guessing if you want to be more precise in how the values change from one vertex to another, then you need to multiply the number of triangles, right? So if you have, so let's say your cube is really smooth, so let's say your cube has a very uniform color, then you draw two triangles for one face. But if you want it to be a lot smoother, then you can cut it up into more triangles and have the colors change slightly more. Yeah, if you want to achieve some weird coloring that is not a simple linear interpolation, then you can have, I guess, more segments to curve your own gradient. Not sure how that would work. Maybe you'd rather have a texture and then you map it to all the four vertices of each side. Yeah, or if it's not a cube, but it's more bumpy, then you need to make a lot of triangles for each bump. And then the lighting can have different effects on each triangle separate from another. Whereas if you have only two triangles for an entire face, then what you can do with it becomes very simple. Too simple, maybe? For smooth surfaces, it's like you wouldn't set the normals the same way as you would do for the cube. For the smooth surface, the normal would be pointing from... It's sort of like as an average of all the normals of all the triangles that start with this point. Let me think of how to say it better. If you have a point on such a bump, you might have multiple triangles around this point and they will all have their normals as the strict normals pointing from this triangle. But what you want to attach to that vertex is not either of them, but something in between to have a smooth normal. And then those normals can be passed as varyings and then the normals themselves are going to be interpolated. So what you will be getting in the fragment shader is a normal that is smooth. Because if you use normals for a cube, flat shading, then you will see the rendering, the output will be looking very low poly. All the edges will be very visible because the normals are going to be jumping from one triangle to another. It's not going to be smooth. So the lighting is not going to be smooth because of that. But it really depends on what you are trying to achieve, what kind of look. Yeah, not a cube at this point. So let's say I want to draw the normals or to have the normals be sent in the varyings from the vertex shader to the fragment shader. How do I go about finding GLSL documentation on how to do that? Because I need to write the shader, right? That is not Elm code. So where do I find documentation? How do I get started to do that? I learned about this by looking at some examples. So there are general examples of how to use WebGL and all the GLSL code is the same there. You can look it up there or you can even find some examples in Elm that are pretty simple. Yeah, with this normal thing, I think it's slightly more complex than just rendering a cube. If you want to get into lighting, then it gets more complicated. Maybe at this point, you want to think of like, do you really want to invest a lot into learning 3D graphics in WebGL? Or maybe you'd rather switch to some of the existing packages like Elm 3D scene that would do it for you. You can set up a scene with lights and you'll get nice physically based rendering out of that. So GLSL is a special syntax in Elm, but can you construct it programmatically? Can you create one from a string or something? It's like statically compiled. Okay, so you can't have a package that creates... So you can't have an Elm package that creates a GLSL function programmatically based on user defined inputs? No, there used to be unsafe API, but you know that in this case, you have a string and you pass that string into runtime and you interpret that. So you would lose all the guarantees. So at some point this was removed and this thing is what is currently being explored of how to have a way to nicely compose shaders or to be able to share some bits of code, like a function that you can use in your shader that does something useful. So I think that is currently being explored. So is the main use case for the Elm WebGL stuff games? I mean, games are the obvious one. I know Ian McKenzie is very passionate about CAD type stuff like modeling physical objects. What are the types of use cases people would use this for? It's very broad, I think. Like games, yes, or maybe even data visualization or anything that would require 3D visualization. You can think of an advert or like a product page where you have something physical, like I don't know, you're selling phone and you have like a 3D model on the page that lets your users rotate it and look at it in 3D. I think Ian even mentioned a spinner, you can have like a Nijax spinner rendered in it. Why not? Yeah, I think is the kite project also in WebGL that Erkal Selman created? I think it might be. No, that is using SVG. That's SVG, okay. But Erkal has been doing some really cool visualizations using Elm 3D scene. Data visualizations? No, more like creative coding kind of thing. Because with functional API, you get all the function, composition, all the things you can produce generative art. You can do random generators and yeah, very cool. So what are some of the cool projects that people should take a look at to get inspiration and look at some examples? So one thing I would share is there is a very nice overview of almost all the 3D graphics projects built in Elm. Luca, I hope I pronounced his second name correctly, Luca Mognini put together. It has all the games and art and all the crazy things built in Elm. I think that is a really cool overview of just seeing what's possible. There are more libraries. There are other projects that are more like libraries. So for example, Roman Potasov, his GitHub is just gook. He implemented a WebGL playground. He implemented a WebGL playground that is very similar to the package that Evan implemented, but it uses WebGL under the hood. A lot of things can be put together using that package and it's very simple. Another thing that I would recommend to check is Ian's Elm 3D scene and all the examples there because it's a high level API. You don't need to deal with shaders. You can put together 3D things using his libraries. Wow, cool. If you'd recommend someone to start with 3D in Elm, you would recommend checking out Elm 3D scene or would you recommend them to use Elm WebGL to start with? I think you can start with Elm 3D scene. I think it has a friendlier API, but it really depends on whether learning the basics also has its advantages because you're more flexible in what you can do. But if you have a use case that maps to what's possible in Elm 3D scene, then that's going to be an easier path. Another project that I wanted to highlight is a project from Tomas Latal. I think he just recently made it public. It's Elm CSG. CSG stands for constructive solid geometry. What this package allows you is you can construct 3D objects using primitive 3D objects and Boolean operations between them. It's very early stages. It's work in progress, but there are some really cool examples. You can make a chess piece with it using some cylinders. It's easier to create 3D shapes using this method than writing down or constructing coordinates yourself. If you have a cylinder, a sphere, a cube, then you can subtract them or group them and then produce another shape using those operations. Because you don't have those shapes in WebGL, everything is a triangle. There are no shapes in WebGL. There are shapes in Ian's package. There is a project that I created that lets you load OBJ files. You can draw things in Blender using 3D graphics software, like 3D design software, and then output an OBJ file and then load it into Elm. That opens a lot of other possibilities for creativity. You can prepare your game assets and then load them into Elm. Using ports, decoders, and stuff like that? It comes with this package, what is it called, an Elm HTTP plugin or this decoder. You can plug into Elm HTTP and it would load and pass it to you as a triangular mesh, which is a type that is supported in Elm 3D scene. You get it straight into the format that it expects and then you can render things using Ian's Elm 3D scene. I have plenty of examples like falling ducks, for example. That's awesome. Yeah, Luca's Medium blog post is really cool with all these demos. People should definitely check that out to get a sense of what people are doing with this stuff. I remember when Elm Japan was announced, which is a little sad to talk about since it got cancelled for obvious reasons. Don't say it. I know. I know. But I remember the website was so cool. I wonder if it's just this little floating Tokyo city and cityscape with cranes moving around and you can see it floating in the air. I think you could change it from night to day or something like that. I love these delightful little visualizations for conference websites and stuff. It really makes things fun. I wonder if that was created with Blender or with raw WebGL or what? As far as I understand, I think it's not really using WebGL for this. I think it's using SVGs. But what you can actually do is you can render 3D things using SVG. You can basically do all the projections and all the coordinate transformations yourself in this case. There are packages that you can use in order to do this sort of thing. I think the main problem with this is that you will have to deal with the Z index yourself, with the Z buffer yourself. You have to render one thing after another thing in order if it's closer to the camera or intersections would not be possible easily. Wow. Yeah, it does say it's created with SVG. That's really fascinating because it sure looks like a nice 3D model there. Interesting. So all these matrices that do the coordinate transformation, you can multiply the coordinates by these matrices to transform them yourself and then render the final output, the final result using SVG. It might be slower in some cases, but if it's a simple illustration like this, a simple drawing like this, then it\u2026 When you use Elm Explorations WebGL, it renders using a canvas, right? An HTML canvas. Okay. Yeah. So WebGL to HTML is the function that puts this DOM node that is a canvas, that ends up being a canvas element. And you can even pass attributes to it. Yeah, regular HTML attributes. Yeah, like a width and height style. What's the best place for people to ask questions if they're getting started with this stuff? Is the game jam\u2026 I know there's a pretty active game jam channel in the Elm Slack. Is that a good place for people to ask? Yeah, the game dev. Oh, there's game dev too and then there's the game jams, right? Yes. No, I think it's the only channel. We used to run game jams. This is where we announced them, but the channel is called game dev. And then on top of that, there is the WebGL channel. That might be more appropriate if you're not into games, but some people ask questions in both and it's totally fine. Awesome. Yeah, there's this whole hidden community that's been off my radar, but it looks like a lot of fun. No Dylan, don't start running games. You have tools to make. Actually games are how I got into WebGL in the first place. We were working on a game and that was slow and we tried to render it with WebGL. That was using WebGL in 2D. You can do 2D, it's not restricting you. And then I thought, maybe it would be cool to do something in 3D too. And I created the Rubik's cube game. And then after that, okay, well, where can I go from this? Maybe I can do a physically simulated dice. And things got complicated. You can layer so many things into it. Physics is a whole other level. Creating things in 3D is one thing, but having bodies interact with real world physics. It seems like a lot of game development is done using Unity and these sort of game engines that do abstract away a lot of the details, I imagine. But yeah, physics. It was quite the ride getting it to work. I didn't start from scratch. I looked at the Canon JS, but that is a library in JavaScript that is very object oriented. Oh, so it didn't help. It did help a lot. It's very clear how it's written. So I was able to read and understand the code. But a lot of algorithms, they are very imperative and converting them into a purely functional style was quite a challenge. Just out of curiosity, because apparently Elm is able to send things to the GPU. Can you send computations to be done on the GPU in Elm? Or is it just WebGL? No, the current WebGL is only letting you render things. And I think arguably the way Elm APIs are done, if there was a thing that would let you run some simulations or computations on the GPU, I think it would probably have a very different API from the graphics oriented API. Right. James Carlson gave a talk a while back about using Futhark to do GPU computations from Elm. I think it was using ports. Yeah, it's an interesting space. I mean, a lot of things are changing right now. So I think WebGPU is being rolled out in browsers, but not in all of them. WebGPU? Yeah, WebGPU is a lower level API, the new API for interacting with GPU and that has broader range of use cases. It makes things possible that were not possible before. But the current Elm API is based on WebGL 1. And it's using the current pipeline has some limitations. For example, what you cannot do is you cannot do multipass rendering, which is render this thing on a texture and then take that texture and then use it in the subsequent rendering. And this technique is used a lot to achieve things like shadow maps, which is a way to render shadows, which is like a really clever way to do them. So you render the scene from the light's point of view. So then you will see what's highlighted, what's in shadows. And then you render it from the camera point of view, but you use that as a map to figure out what is in the shadows, what is highlighted. Or things like HDR or things like, well, there are a lot of use cases that would require this. And you're saying that this two pass system is not possible with WebGL? With the current API of WebGL, you only do one pass. Sorry, of WebGL or Elm WebGL? Elm WebGL. Okay. And we are still exploring possible ways of how to achieve multipass rendering. There are some ideas. I think Ian has some ideas. I did like a rough prototype of this. And so I'd like to prove that this is possible, but the API of that is not good. The most problematic thing about this is you have to allocate all these memories for these intermediate buffers in order to store the intermediate renders. And the API is declarative in a way. You only have one way to pass things in. You don't have a way to say when to remove something from the... When to clear the allocation. So you don't know whether you rendered this onto a texture. You don't know how long are you going to need this texture. Is it the result of this rendering? So if it's some intermediate result that is still 60 frames per second, or it's like a texture map, you render it once and then you're going to keep it forever and use in all the subsequent renderings. It's really hard to tell. There are multiple use cases and coming up with an API to support all of that is very challenging. Well, I feel like I've got a lot better grasp of 3D stuff in Elm. So there's so much more to learn, but I feel like I've finally started to wrap my head around some of the basics. So this was great. So what should people take a look at if they want to dive in more? We've got the Elm Explorations WebGL package that we've been talking about. The docs are very thorough. So first read the docs. Then check the examples. So there are examples in this package, like on GitHub of this package. I think some of them have been even published on the Elm blank website. So you can see them there. So yeah, play with those. And then at some point you might need to learn a bit more underlining things. And there's a learning WebGL and there is a GitHub repo of I think, Nacho Martin. He tried to follow these lessons and do things in Elm. So you can see his intermediate results of completing these lessons in Elm. But if you don't want to, then Elm 3D scene, it has its own API and it also has a very good documentation. It even has screenshots of what you see if you use this setting. And you've got your Elm WebGL playground repo. This is what I used in order to play with the API and see how to do things. Because the very first thing, if you want to do 2D thing, then how can you render a sprite on the screen? That's a very basic thing. Just like a 2D rectangle with an image on it. I have an example like this. Yeah, and you've got lots of games. You've given many conference talks about this stuff. So if people want to see more advanced stuff, less fundamentals and intro to the basics of WebGL, they should definitely check out your conference talks. We'll link to some of those as well. Or just talk to me directly. Even better. That's great. Yeah. On Soundscapes, on Elm Slack or on Twitter. I'm really glad we got to sit you down and ask all of our dumbest questions. So thank you for being patient with us and walking us through fundamentals. And I hope some other 3D newbies found it useful as well. Yeah, thank you. Thank you very much for inviting me. Very good to be useful. It was a pleasure. Yeah. Thanks so much, Andrey. And Jeroen, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dylan.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 2, "seek": 0, "start": 2.0, "end": 9.94, "text": " And today we've got Andrei Kuzmin joining us to finally talk about some 3D stuff in", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 3, "seek": 0, "start": 9.94, "end": 10.94, "text": " Elm.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 4, "seek": 0, "start": 10.94, "end": 13.56, "text": " So, Jeroen, this is our newbie episode.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 5, "seek": 0, "start": 13.56, "end": 15.68, "text": " Andrei, thank you so much for joining us.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 6, "seek": 0, "start": 15.68, "end": 17.0, "text": " Thank you, folks.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 7, "seek": 0, "start": 17.0, "end": 20.6, "text": " It's really nice to be able to talk about this.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 8, "seek": 0, "start": 20.6, "end": 23.0, "text": " Yeah, it's great having you.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 9, "seek": 0, "start": 23.0, "end": 28.92, "text": " I've seen so many conference talks where you show awesome 3D demos and everything,", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 965, 321, 600, 658, 400, 10271, 591, 3334, 2367, 5549, 505, 281, 2721, 751, 466, 512, 805, 35, 1507, 294, 50861, 50861, 2699, 76, 13, 50911, 50911, 407, 11, 508, 2032, 268, 11, 341, 307, 527, 777, 7392, 3500, 13, 51042, 51042, 400, 10271, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 51148, 51148, 1044, 291, 11, 4024, 13, 51214, 51214, 467, 311, 534, 1481, 281, 312, 1075, 281, 751, 466, 341, 13, 51394, 51394, 865, 11, 309, 311, 869, 1419, 291, 13, 51514, 51514, 286, 600, 1612, 370, 867, 7586, 6686, 689, 291, 855, 3476, 805, 35, 33788, 293, 1203, 11, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.24659489803626888, "compression_ratio": 1.5643153526970954, "no_caption_prob": 0.33932992815971375}, {"id": 10, "seek": 2892, "start": 28.92, "end": 34.68, "text": " but I see so many Elm conference talks and things make sense.", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 11, "seek": 2892, "start": 34.68, "end": 38.68, "text": " It's like, oh, types, okay, types can help with this, types can help with that.", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 12, "seek": 2892, "start": 38.68, "end": 40.480000000000004, "text": " This can be type safe.", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 13, "seek": 2892, "start": 40.480000000000004, "end": 43.72, "text": " And then 3D stuff, and it's just all over my head.", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 14, "seek": 2892, "start": 43.72, "end": 47.760000000000005, "text": " So now we've got you here to ask you all our newbie questions.", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 15, "seek": 2892, "start": 47.760000000000005, "end": 52.46, "text": " And hopefully, other people who don't understand 3D will come along the ride and understand", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 16, "seek": 2892, "start": 52.46, "end": 54.84, "text": " it as a result of our newbie questions.", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 17, "seek": 2892, "start": 54.84, "end": 55.84, "text": " Yeah, thank you.", "tokens": [50364, 457, 286, 536, 370, 867, 2699, 76, 7586, 6686, 293, 721, 652, 2020, 13, 50652, 50652, 467, 311, 411, 11, 1954, 11, 3467, 11, 1392, 11, 3467, 393, 854, 365, 341, 11, 3467, 393, 854, 365, 300, 13, 50852, 50852, 639, 393, 312, 2010, 3273, 13, 50942, 50942, 400, 550, 805, 35, 1507, 11, 293, 309, 311, 445, 439, 670, 452, 1378, 13, 51104, 51104, 407, 586, 321, 600, 658, 291, 510, 281, 1029, 291, 439, 527, 777, 7392, 1651, 13, 51306, 51306, 400, 4696, 11, 661, 561, 567, 500, 380, 1223, 805, 35, 486, 808, 2051, 264, 5077, 293, 1223, 51541, 51541, 309, 382, 257, 1874, 295, 527, 777, 7392, 1651, 13, 51660, 51660, 865, 11, 1309, 291, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13158158333070816, "compression_ratio": 1.6944444444444444, "no_caption_prob": 0.0004873625875916332}, {"id": 18, "seek": 5584, "start": 55.84, "end": 59.040000000000006, "text": " I'm really glad to be able to explain all the things.", "tokens": [50364, 286, 478, 534, 5404, 281, 312, 1075, 281, 2903, 439, 264, 721, 13, 50524, 50524, 286, 603, 360, 452, 1151, 294, 341, 13, 50618, 50618, 865, 11, 572, 11, 286, 914, 11, 291, 600, 658, 439, 341, 869, 3601, 13, 50800, 50800, 400, 286, 519, 300, 257, 688, 295, 721, 366, 11, 291, 458, 11, 456, 311, 264, 17139, 295, 3601, 689, 51062, 51062, 291, 458, 613, 721, 11, 293, 309, 311, 1858, 281, 747, 337, 12344, 13, 51218, 51218, 5135, 11, 411, 516, 807, 512, 295, 264, 2699, 76, 9573, 19440, 14333, 11, 286, 632, 341, 1623, 689, 51552, 51552, 2171, 264, 1651, 300, 561, 1029, 385, 11, 291, 458, 11, 466, 411, 257, 7372, 286, 6909, 11, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1279077374838232, "compression_ratio": 1.6777777777777778, "no_caption_prob": 7.966028351802379e-05}, {"id": 19, "seek": 5584, "start": 59.040000000000006, "end": 60.92, "text": " I'll do my best in this.", "tokens": [50364, 286, 478, 534, 5404, 281, 312, 1075, 281, 2903, 439, 264, 721, 13, 50524, 50524, 286, 603, 360, 452, 1151, 294, 341, 13, 50618, 50618, 865, 11, 572, 11, 286, 914, 11, 291, 600, 658, 439, 341, 869, 3601, 13, 50800, 50800, 400, 286, 519, 300, 257, 688, 295, 721, 366, 11, 291, 458, 11, 456, 311, 264, 17139, 295, 3601, 689, 51062, 51062, 291, 458, 613, 721, 11, 293, 309, 311, 1858, 281, 747, 337, 12344, 13, 51218, 51218, 5135, 11, 411, 516, 807, 512, 295, 264, 2699, 76, 9573, 19440, 14333, 11, 286, 632, 341, 1623, 689, 51552, 51552, 2171, 264, 1651, 300, 561, 1029, 385, 11, 291, 458, 11, 466, 411, 257, 7372, 286, 6909, 11, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1279077374838232, "compression_ratio": 1.6777777777777778, "no_caption_prob": 7.966028351802379e-05}, {"id": 20, "seek": 5584, "start": 60.92, "end": 64.56, "text": " Yeah, no, I mean, you've got all this great knowledge.", "tokens": [50364, 286, 478, 534, 5404, 281, 312, 1075, 281, 2903, 439, 264, 721, 13, 50524, 50524, 286, 603, 360, 452, 1151, 294, 341, 13, 50618, 50618, 865, 11, 572, 11, 286, 914, 11, 291, 600, 658, 439, 341, 869, 3601, 13, 50800, 50800, 400, 286, 519, 300, 257, 688, 295, 721, 366, 11, 291, 458, 11, 456, 311, 264, 17139, 295, 3601, 689, 51062, 51062, 291, 458, 613, 721, 11, 293, 309, 311, 1858, 281, 747, 337, 12344, 13, 51218, 51218, 5135, 11, 411, 516, 807, 512, 295, 264, 2699, 76, 9573, 19440, 14333, 11, 286, 632, 341, 1623, 689, 51552, 51552, 2171, 264, 1651, 300, 561, 1029, 385, 11, 291, 458, 11, 466, 411, 257, 7372, 286, 6909, 11, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1279077374838232, "compression_ratio": 1.6777777777777778, "no_caption_prob": 7.966028351802379e-05}, {"id": 21, "seek": 5584, "start": 64.56, "end": 69.80000000000001, "text": " And I think that a lot of things are, you know, there's the curse of knowledge where", "tokens": [50364, 286, 478, 534, 5404, 281, 312, 1075, 281, 2903, 439, 264, 721, 13, 50524, 50524, 286, 603, 360, 452, 1151, 294, 341, 13, 50618, 50618, 865, 11, 572, 11, 286, 914, 11, 291, 600, 658, 439, 341, 869, 3601, 13, 50800, 50800, 400, 286, 519, 300, 257, 688, 295, 721, 366, 11, 291, 458, 11, 456, 311, 264, 17139, 295, 3601, 689, 51062, 51062, 291, 458, 613, 721, 11, 293, 309, 311, 1858, 281, 747, 337, 12344, 13, 51218, 51218, 5135, 11, 411, 516, 807, 512, 295, 264, 2699, 76, 9573, 19440, 14333, 11, 286, 632, 341, 1623, 689, 51552, 51552, 2171, 264, 1651, 300, 561, 1029, 385, 11, 291, 458, 11, 466, 411, 257, 7372, 286, 6909, 11, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1279077374838232, "compression_ratio": 1.6777777777777778, "no_caption_prob": 7.966028351802379e-05}, {"id": 22, "seek": 5584, "start": 69.80000000000001, "end": 72.92, "text": " you know these things, and it's easy to take for granted.", "tokens": [50364, 286, 478, 534, 5404, 281, 312, 1075, 281, 2903, 439, 264, 721, 13, 50524, 50524, 286, 603, 360, 452, 1151, 294, 341, 13, 50618, 50618, 865, 11, 572, 11, 286, 914, 11, 291, 600, 658, 439, 341, 869, 3601, 13, 50800, 50800, 400, 286, 519, 300, 257, 688, 295, 721, 366, 11, 291, 458, 11, 456, 311, 264, 17139, 295, 3601, 689, 51062, 51062, 291, 458, 613, 721, 11, 293, 309, 311, 1858, 281, 747, 337, 12344, 13, 51218, 51218, 5135, 11, 411, 516, 807, 512, 295, 264, 2699, 76, 9573, 19440, 14333, 11, 286, 632, 341, 1623, 689, 51552, 51552, 2171, 264, 1651, 300, 561, 1029, 385, 11, 291, 458, 11, 466, 411, 257, 7372, 286, 6909, 11, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1279077374838232, "compression_ratio": 1.6777777777777778, "no_caption_prob": 7.966028351802379e-05}, {"id": 23, "seek": 5584, "start": 72.92, "end": 79.60000000000001, "text": " Actually, like going through some of the Elm WebGL documentation, I had this moment where", "tokens": [50364, 286, 478, 534, 5404, 281, 312, 1075, 281, 2903, 439, 264, 721, 13, 50524, 50524, 286, 603, 360, 452, 1151, 294, 341, 13, 50618, 50618, 865, 11, 572, 11, 286, 914, 11, 291, 600, 658, 439, 341, 869, 3601, 13, 50800, 50800, 400, 286, 519, 300, 257, 688, 295, 721, 366, 11, 291, 458, 11, 456, 311, 264, 17139, 295, 3601, 689, 51062, 51062, 291, 458, 613, 721, 11, 293, 309, 311, 1858, 281, 747, 337, 12344, 13, 51218, 51218, 5135, 11, 411, 516, 807, 512, 295, 264, 2699, 76, 9573, 19440, 14333, 11, 286, 632, 341, 1623, 689, 51552, 51552, 2171, 264, 1651, 300, 561, 1029, 385, 11, 291, 458, 11, 466, 411, 257, 7372, 286, 6909, 11, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1279077374838232, "compression_ratio": 1.6777777777777778, "no_caption_prob": 7.966028351802379e-05}, {"id": 24, "seek": 5584, "start": 79.60000000000001, "end": 84.16, "text": " sometimes the questions that people ask me, you know, about like a package I maintain,", "tokens": [50364, 286, 478, 534, 5404, 281, 312, 1075, 281, 2903, 439, 264, 721, 13, 50524, 50524, 286, 603, 360, 452, 1151, 294, 341, 13, 50618, 50618, 865, 11, 572, 11, 286, 914, 11, 291, 600, 658, 439, 341, 869, 3601, 13, 50800, 50800, 400, 286, 519, 300, 257, 688, 295, 721, 366, 11, 291, 458, 11, 456, 311, 264, 17139, 295, 3601, 689, 51062, 51062, 291, 458, 613, 721, 11, 293, 309, 311, 1858, 281, 747, 337, 12344, 13, 51218, 51218, 5135, 11, 411, 516, 807, 512, 295, 264, 2699, 76, 9573, 19440, 14333, 11, 286, 632, 341, 1623, 689, 51552, 51552, 2171, 264, 1651, 300, 561, 1029, 385, 11, 291, 458, 11, 466, 411, 257, 7372, 286, 6909, 11, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1279077374838232, "compression_ratio": 1.6777777777777778, "no_caption_prob": 7.966028351802379e-05}, {"id": 25, "seek": 8416, "start": 84.16, "end": 85.72, "text": " they're like, what is this?", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 26, "seek": 8416, "start": 85.72, "end": 87.52, "text": " What is a page module in Elm pages?", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 27, "seek": 8416, "start": 87.52, "end": 93.64, "text": " What is, you know, and, and I have to be reminded like, oh, yeah, that's not obvious.", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 28, "seek": 8416, "start": 93.64, "end": 98.64, "text": " And it's so hard to know what questions people are going to have when you've thought so much", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 29, "seek": 8416, "start": 98.64, "end": 101.0, "text": " about something and built this thing.", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 30, "seek": 8416, "start": 101.0, "end": 105.08, "text": " And I had that same feeling reading the WebGL documentation is talking about like meshes", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 31, "seek": 8416, "start": 105.08, "end": 106.08, "text": " and shaders.", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 32, "seek": 8416, "start": 106.08, "end": 109.47999999999999, "text": " And I'm like, I need someone to explain it to me like I'm five.", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 33, "seek": 8416, "start": 109.47999999999999, "end": 112.4, "text": " So here we are.", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 34, "seek": 8416, "start": 112.4, "end": 113.96, "text": " So maybe let's start with this.", "tokens": [50364, 436, 434, 411, 11, 437, 307, 341, 30, 50442, 50442, 708, 307, 257, 3028, 10088, 294, 2699, 76, 7183, 30, 50532, 50532, 708, 307, 11, 291, 458, 11, 293, 11, 293, 286, 362, 281, 312, 15920, 411, 11, 1954, 11, 1338, 11, 300, 311, 406, 6322, 13, 50838, 50838, 400, 309, 311, 370, 1152, 281, 458, 437, 1651, 561, 366, 516, 281, 362, 562, 291, 600, 1194, 370, 709, 51088, 51088, 466, 746, 293, 3094, 341, 551, 13, 51206, 51206, 400, 286, 632, 300, 912, 2633, 3760, 264, 9573, 19440, 14333, 307, 1417, 466, 411, 3813, 8076, 51410, 51410, 293, 5744, 433, 13, 51460, 51460, 400, 286, 478, 411, 11, 286, 643, 1580, 281, 2903, 309, 281, 385, 411, 286, 478, 1732, 13, 51630, 51630, 407, 510, 321, 366, 13, 51776, 51776, 407, 1310, 718, 311, 722, 365, 341, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.10005072752634685, "compression_ratio": 1.7152777777777777, "no_caption_prob": 2.0143654182902537e-05}, {"id": 35, "seek": 11396, "start": 113.96, "end": 120.88, "text": " If you want to do 3D in Elm, you usually use the Elm dash explorations slash WebGL package,", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 36, "seek": 11396, "start": 120.88, "end": 121.88, "text": " right?", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 37, "seek": 11396, "start": 121.88, "end": 125.24, "text": " What is WebGL's part in all this?", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 38, "seek": 11396, "start": 125.24, "end": 126.24, "text": " Why do we use it?", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 39, "seek": 11396, "start": 126.24, "end": 127.24, "text": " And why is it needed?", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 40, "seek": 11396, "start": 127.24, "end": 129.07999999999998, "text": " That's a good question.", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 41, "seek": 11396, "start": 129.07999999999998, "end": 134.84, "text": " So the reason why this package is brought into Elm exploration is because there is some", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 42, "seek": 11396, "start": 134.84, "end": 141.04, "text": " native platform, JavaScript that implements the integration with the WebGL.", "tokens": [50364, 759, 291, 528, 281, 360, 805, 35, 294, 2699, 76, 11, 291, 2673, 764, 264, 2699, 76, 8240, 24765, 763, 17330, 9573, 19440, 7372, 11, 50710, 50710, 558, 30, 50760, 50760, 708, 307, 9573, 19440, 311, 644, 294, 439, 341, 30, 50928, 50928, 1545, 360, 321, 764, 309, 30, 50978, 50978, 400, 983, 307, 309, 2978, 30, 51028, 51028, 663, 311, 257, 665, 1168, 13, 51120, 51120, 407, 264, 1778, 983, 341, 7372, 307, 3038, 666, 2699, 76, 16197, 307, 570, 456, 307, 512, 51408, 51408, 8470, 3663, 11, 15778, 300, 704, 17988, 264, 10980, 365, 264, 9573, 19440, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1380861630806556, "compression_ratio": 1.5584415584415585, "no_caption_prob": 1.3844800378137734e-05}, {"id": 43, "seek": 14104, "start": 141.04, "end": 148.12, "text": " And there is also a part of WebGL that is implemented in the Elm compiler itself.", "tokens": [50364, 400, 456, 307, 611, 257, 644, 295, 9573, 19440, 300, 307, 12270, 294, 264, 2699, 76, 31958, 2564, 13, 50718, 50718, 467, 311, 411, 309, 311, 534, 21952, 29482, 365, 264, 3467, 300, 31958, 23815, 13, 50990, 50990, 1779, 13, 51040, 51040, 407, 11, 370, 9573, 19440, 307, 411, 257, 2856, 11, 411, 257, 15816, 43, 337, 22171, 805, 35, 721, 13, 51452, 51452, 400, 2699, 76, 575, 411, 16225, 47012, 382, 257, 28431, 291, 393, 360, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17855790766274057, "compression_ratio": 1.4461538461538461, "no_caption_prob": 1.7777769244275987e-05}, {"id": 44, "seek": 14104, "start": 148.12, "end": 153.56, "text": " It's like it's really tightly coupled with the types that compiler generates.", "tokens": [50364, 400, 456, 307, 611, 257, 644, 295, 9573, 19440, 300, 307, 12270, 294, 264, 2699, 76, 31958, 2564, 13, 50718, 50718, 467, 311, 411, 309, 311, 534, 21952, 29482, 365, 264, 3467, 300, 31958, 23815, 13, 50990, 50990, 1779, 13, 51040, 51040, 407, 11, 370, 9573, 19440, 307, 411, 257, 2856, 11, 411, 257, 15816, 43, 337, 22171, 805, 35, 721, 13, 51452, 51452, 400, 2699, 76, 575, 411, 16225, 47012, 382, 257, 28431, 291, 393, 360, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17855790766274057, "compression_ratio": 1.4461538461538461, "no_caption_prob": 1.7777769244275987e-05}, {"id": 45, "seek": 14104, "start": 153.56, "end": 154.56, "text": " Right.", "tokens": [50364, 400, 456, 307, 611, 257, 644, 295, 9573, 19440, 300, 307, 12270, 294, 264, 2699, 76, 31958, 2564, 13, 50718, 50718, 467, 311, 411, 309, 311, 534, 21952, 29482, 365, 264, 3467, 300, 31958, 23815, 13, 50990, 50990, 1779, 13, 51040, 51040, 407, 11, 370, 9573, 19440, 307, 411, 257, 2856, 11, 411, 257, 15816, 43, 337, 22171, 805, 35, 721, 13, 51452, 51452, 400, 2699, 76, 575, 411, 16225, 47012, 382, 257, 28431, 291, 393, 360, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17855790766274057, "compression_ratio": 1.4461538461538461, "no_caption_prob": 1.7777769244275987e-05}, {"id": 46, "seek": 14104, "start": 154.56, "end": 162.79999999999998, "text": " So, so WebGL is like a language, like a DSL for expressing 3D things.", "tokens": [50364, 400, 456, 307, 611, 257, 644, 295, 9573, 19440, 300, 307, 12270, 294, 264, 2699, 76, 31958, 2564, 13, 50718, 50718, 467, 311, 411, 309, 311, 534, 21952, 29482, 365, 264, 3467, 300, 31958, 23815, 13, 50990, 50990, 1779, 13, 51040, 51040, 407, 11, 370, 9573, 19440, 307, 411, 257, 2856, 11, 411, 257, 15816, 43, 337, 22171, 805, 35, 721, 13, 51452, 51452, 400, 2699, 76, 575, 411, 16225, 47012, 382, 257, 28431, 291, 393, 360, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17855790766274057, "compression_ratio": 1.4461538461538461, "no_caption_prob": 1.7777769244275987e-05}, {"id": 47, "seek": 14104, "start": 162.79999999999998, "end": 167.76, "text": " And Elm has like GLSL as a syntax you can do.", "tokens": [50364, 400, 456, 307, 611, 257, 644, 295, 9573, 19440, 300, 307, 12270, 294, 264, 2699, 76, 31958, 2564, 13, 50718, 50718, 467, 311, 411, 309, 311, 534, 21952, 29482, 365, 264, 3467, 300, 31958, 23815, 13, 50990, 50990, 1779, 13, 51040, 51040, 407, 11, 370, 9573, 19440, 307, 411, 257, 2856, 11, 411, 257, 15816, 43, 337, 22171, 805, 35, 721, 13, 51452, 51452, 400, 2699, 76, 575, 411, 16225, 47012, 382, 257, 28431, 291, 393, 360, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17855790766274057, "compression_ratio": 1.4461538461538461, "no_caption_prob": 1.7777769244275987e-05}, {"id": 48, "seek": 16776, "start": 167.76, "end": 173.56, "text": " And it creates, it actually knows the type information about the GLSL snippets.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 49, "seek": 16776, "start": 173.56, "end": 176.2, "text": " Are the things I just said accurate?", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 50, "seek": 16776, "start": 176.2, "end": 177.2, "text": " That's correct.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 51, "seek": 16776, "start": 177.2, "end": 178.2, "text": " Yes.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 52, "seek": 16776, "start": 178.2, "end": 184.56, "text": " So it does type inference for the shaders that are written in GLSL.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 53, "seek": 16776, "start": 184.56, "end": 188.88, "text": " That is a language that looks similar to, I guess, C.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 54, "seek": 16776, "start": 188.88, "end": 189.88, "text": " Yeah.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 55, "seek": 16776, "start": 189.88, "end": 190.88, "text": " Okay.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 56, "seek": 16776, "start": 190.88, "end": 195.95999999999998, "text": " So GLSL is the language and WebGL is the runtime.", "tokens": [50364, 400, 309, 7829, 11, 309, 767, 3255, 264, 2010, 1589, 466, 264, 16225, 47012, 35623, 1385, 13, 50654, 50654, 2014, 264, 721, 286, 445, 848, 8559, 30, 50786, 50786, 663, 311, 3006, 13, 50836, 50836, 1079, 13, 50886, 50886, 407, 309, 775, 2010, 38253, 337, 264, 5744, 433, 300, 366, 3720, 294, 16225, 47012, 13, 51204, 51204, 663, 307, 257, 2856, 300, 1542, 2531, 281, 11, 286, 2041, 11, 383, 13, 51420, 51420, 865, 13, 51470, 51470, 1033, 13, 51520, 51520, 407, 16225, 47012, 307, 264, 2856, 293, 9573, 19440, 307, 264, 34474, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1968631939012177, "compression_ratio": 1.5, "no_caption_prob": 2.8408036087057553e-05}, {"id": 57, "seek": 19596, "start": 195.96, "end": 199.68, "text": " WebGL is like a set of APIs, I would say.", "tokens": [50364, 9573, 19440, 307, 411, 257, 992, 295, 21445, 11, 286, 576, 584, 13, 50550, 50550, 1033, 13, 50600, 50600, 1407, 360, 411, 805, 35, 11837, 420, 604, 11837, 300, 366, 29763, 538, 264, 18407, 13, 51004, 51004, 1033, 13, 51054, 51054, 400, 729, 366, 8470, 356, 8104, 538, 633, 11185, 484, 456, 30, 51244, 51244, 1079, 11, 1238, 709, 13, 51294, 51294, 814, 366, 411, 9573, 19440, 472, 300, 411, 264, 700, 31256, 300, 321, 366, 24140, 322, 307, 286, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.2705702781677246, "compression_ratio": 1.45, "no_caption_prob": 0.00011059804819524288}, {"id": 58, "seek": 19596, "start": 199.68, "end": 200.68, "text": " Okay.", "tokens": [50364, 9573, 19440, 307, 411, 257, 992, 295, 21445, 11, 286, 576, 584, 13, 50550, 50550, 1033, 13, 50600, 50600, 1407, 360, 411, 805, 35, 11837, 420, 604, 11837, 300, 366, 29763, 538, 264, 18407, 13, 51004, 51004, 1033, 13, 51054, 51054, 400, 729, 366, 8470, 356, 8104, 538, 633, 11185, 484, 456, 30, 51244, 51244, 1079, 11, 1238, 709, 13, 51294, 51294, 814, 366, 411, 9573, 19440, 472, 300, 411, 264, 700, 31256, 300, 321, 366, 24140, 322, 307, 286, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.2705702781677246, "compression_ratio": 1.45, "no_caption_prob": 0.00011059804819524288}, {"id": 59, "seek": 19596, "start": 200.68, "end": 208.76000000000002, "text": " To do like 3D graphics or any graphics that are accelerated by the GPU.", "tokens": [50364, 9573, 19440, 307, 411, 257, 992, 295, 21445, 11, 286, 576, 584, 13, 50550, 50550, 1033, 13, 50600, 50600, 1407, 360, 411, 805, 35, 11837, 420, 604, 11837, 300, 366, 29763, 538, 264, 18407, 13, 51004, 51004, 1033, 13, 51054, 51054, 400, 729, 366, 8470, 356, 8104, 538, 633, 11185, 484, 456, 30, 51244, 51244, 1079, 11, 1238, 709, 13, 51294, 51294, 814, 366, 411, 9573, 19440, 472, 300, 411, 264, 700, 31256, 300, 321, 366, 24140, 322, 307, 286, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.2705702781677246, "compression_ratio": 1.45, "no_caption_prob": 0.00011059804819524288}, {"id": 60, "seek": 19596, "start": 208.76000000000002, "end": 209.76000000000002, "text": " Okay.", "tokens": [50364, 9573, 19440, 307, 411, 257, 992, 295, 21445, 11, 286, 576, 584, 13, 50550, 50550, 1033, 13, 50600, 50600, 1407, 360, 411, 805, 35, 11837, 420, 604, 11837, 300, 366, 29763, 538, 264, 18407, 13, 51004, 51004, 1033, 13, 51054, 51054, 400, 729, 366, 8470, 356, 8104, 538, 633, 11185, 484, 456, 30, 51244, 51244, 1079, 11, 1238, 709, 13, 51294, 51294, 814, 366, 411, 9573, 19440, 472, 300, 411, 264, 700, 31256, 300, 321, 366, 24140, 322, 307, 286, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.2705702781677246, "compression_ratio": 1.45, "no_caption_prob": 0.00011059804819524288}, {"id": 61, "seek": 19596, "start": 209.76000000000002, "end": 213.56, "text": " And those are natively supported by every browser out there?", "tokens": [50364, 9573, 19440, 307, 411, 257, 992, 295, 21445, 11, 286, 576, 584, 13, 50550, 50550, 1033, 13, 50600, 50600, 1407, 360, 411, 805, 35, 11837, 420, 604, 11837, 300, 366, 29763, 538, 264, 18407, 13, 51004, 51004, 1033, 13, 51054, 51054, 400, 729, 366, 8470, 356, 8104, 538, 633, 11185, 484, 456, 30, 51244, 51244, 1079, 11, 1238, 709, 13, 51294, 51294, 814, 366, 411, 9573, 19440, 472, 300, 411, 264, 700, 31256, 300, 321, 366, 24140, 322, 307, 286, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.2705702781677246, "compression_ratio": 1.45, "no_caption_prob": 0.00011059804819524288}, {"id": 62, "seek": 19596, "start": 213.56, "end": 214.56, "text": " Yes, pretty much.", "tokens": [50364, 9573, 19440, 307, 411, 257, 992, 295, 21445, 11, 286, 576, 584, 13, 50550, 50550, 1033, 13, 50600, 50600, 1407, 360, 411, 805, 35, 11837, 420, 604, 11837, 300, 366, 29763, 538, 264, 18407, 13, 51004, 51004, 1033, 13, 51054, 51054, 400, 729, 366, 8470, 356, 8104, 538, 633, 11185, 484, 456, 30, 51244, 51244, 1079, 11, 1238, 709, 13, 51294, 51294, 814, 366, 411, 9573, 19440, 472, 300, 411, 264, 700, 31256, 300, 321, 366, 24140, 322, 307, 286, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.2705702781677246, "compression_ratio": 1.45, "no_caption_prob": 0.00011059804819524288}, {"id": 63, "seek": 19596, "start": 214.56, "end": 221.56, "text": " They are like WebGL one that like the first specification that we are relying on is I", "tokens": [50364, 9573, 19440, 307, 411, 257, 992, 295, 21445, 11, 286, 576, 584, 13, 50550, 50550, 1033, 13, 50600, 50600, 1407, 360, 411, 805, 35, 11837, 420, 604, 11837, 300, 366, 29763, 538, 264, 18407, 13, 51004, 51004, 1033, 13, 51054, 51054, 400, 729, 366, 8470, 356, 8104, 538, 633, 11185, 484, 456, 30, 51244, 51244, 1079, 11, 1238, 709, 13, 51294, 51294, 814, 366, 411, 9573, 19440, 472, 300, 411, 264, 700, 31256, 300, 321, 366, 24140, 322, 307, 286, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.2705702781677246, "compression_ratio": 1.45, "no_caption_prob": 0.00011059804819524288}, {"id": 64, "seek": 22156, "start": 221.56, "end": 228.56, "text": " think you can safely assume it runs in the majority of devices like even mobile phones", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 65, "seek": 22156, "start": 228.56, "end": 230.76, "text": " like Android or iOS.", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 66, "seek": 22156, "start": 230.76, "end": 234.56, "text": " So okay, let's break down every single term.", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 67, "seek": 22156, "start": 234.56, "end": 239.98000000000002, "text": " And Jeroen and I are experts at not knowing what these terms are.", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 68, "seek": 22156, "start": 239.98000000000002, "end": 240.98000000000002, "text": " So we're...", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 69, "seek": 22156, "start": 240.98000000000002, "end": 241.98000000000002, "text": " I'm so good at that.", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 70, "seek": 22156, "start": 241.98000000000002, "end": 243.04, "text": " We're really good at that.", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 71, "seek": 22156, "start": 243.04, "end": 244.04, "text": " What is a shader?", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 72, "seek": 22156, "start": 244.04, "end": 248.4, "text": " Well, a shader is like a block of code with a main function.", "tokens": [50364, 519, 291, 393, 11750, 6552, 309, 6676, 294, 264, 6286, 295, 5759, 411, 754, 6013, 10216, 50714, 50714, 411, 8853, 420, 17430, 13, 50824, 50824, 407, 1392, 11, 718, 311, 1821, 760, 633, 2167, 1433, 13, 51014, 51014, 400, 508, 2032, 268, 293, 286, 366, 8572, 412, 406, 5276, 437, 613, 2115, 366, 13, 51285, 51285, 407, 321, 434, 485, 51335, 51335, 286, 478, 370, 665, 412, 300, 13, 51385, 51385, 492, 434, 534, 665, 412, 300, 13, 51438, 51438, 708, 307, 257, 5744, 260, 30, 51488, 51488, 1042, 11, 257, 5744, 260, 307, 411, 257, 3461, 295, 3089, 365, 257, 2135, 2445, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14900036211367007, "compression_ratio": 1.5521739130434782, "no_caption_prob": 9.167352254735306e-05}, {"id": 73, "seek": 24840, "start": 248.4, "end": 252.36, "text": " And there are two types of shaders in the implementation.", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 74, "seek": 24840, "start": 252.36, "end": 256.64, "text": " One is called the vertex shader and another one is called fragment shader.", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 75, "seek": 24840, "start": 256.64, "end": 262.06, "text": " And these are the definitions of like the code that runs on GPU.", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 76, "seek": 24840, "start": 262.06, "end": 265.64, "text": " So they are being compiled and executed on the GPU.", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 77, "seek": 24840, "start": 265.64, "end": 269.48, "text": " And then all the data that you pass just goes through them.", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 78, "seek": 24840, "start": 269.48, "end": 274.04, "text": " And as the result, you get some visual things on the screen.", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 79, "seek": 24840, "start": 274.04, "end": 275.88, "text": " I guess it's like a very...", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 80, "seek": 24840, "start": 275.88, "end": 278.36, "text": " Like maybe it's an oversimplification.", "tokens": [50364, 400, 456, 366, 732, 3467, 295, 5744, 433, 294, 264, 11420, 13, 50562, 50562, 1485, 307, 1219, 264, 28162, 5744, 260, 293, 1071, 472, 307, 1219, 26424, 5744, 260, 13, 50776, 50776, 400, 613, 366, 264, 21988, 295, 411, 264, 3089, 300, 6676, 322, 18407, 13, 51047, 51047, 407, 436, 366, 885, 36548, 293, 17577, 322, 264, 18407, 13, 51226, 51226, 400, 550, 439, 264, 1412, 300, 291, 1320, 445, 1709, 807, 552, 13, 51418, 51418, 400, 382, 264, 1874, 11, 291, 483, 512, 5056, 721, 322, 264, 2568, 13, 51646, 51646, 286, 2041, 309, 311, 411, 257, 588, 485, 51738, 51738, 1743, 1310, 309, 311, 364, 15488, 332, 564, 3774, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1844557893687281, "compression_ratio": 1.7272727272727273, "no_caption_prob": 1.280494689126499e-05}, {"id": 81, "seek": 27836, "start": 278.36, "end": 279.36, "text": " What is the...", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 82, "seek": 27836, "start": 279.36, "end": 284.56, "text": " Like if I think of shading, I think of like maybe like coloring something in with a crayon", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 83, "seek": 27836, "start": 284.56, "end": 285.84000000000003, "text": " or something.", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 84, "seek": 27836, "start": 285.84000000000003, "end": 287.92, "text": " Like what's the metaphor of shading?", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 85, "seek": 27836, "start": 287.92, "end": 289.52000000000004, "text": " Like what does that mean a shader?", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 86, "seek": 27836, "start": 289.52000000000004, "end": 290.52000000000004, "text": " I don't think...", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 87, "seek": 27836, "start": 290.52000000000004, "end": 293.76, "text": " I don't know an answer to this question.", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 88, "seek": 27836, "start": 293.76, "end": 295.52000000000004, "text": " But what is it at a high level?", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 89, "seek": 27836, "start": 295.52000000000004, "end": 296.52000000000004, "text": " Like what...", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 90, "seek": 27836, "start": 296.52000000000004, "end": 301.68, "text": " Like if you were to describe what a shader is doing at a high level, not with code, what's", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 91, "seek": 27836, "start": 301.68, "end": 302.68, "text": " its purpose?", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 92, "seek": 27836, "start": 302.68, "end": 304.0, "text": " To describe what?", "tokens": [50364, 708, 307, 264, 485, 50414, 50414, 1743, 498, 286, 519, 295, 30556, 11, 286, 519, 295, 411, 1310, 411, 23198, 746, 294, 365, 257, 33073, 266, 50674, 50674, 420, 746, 13, 50738, 50738, 1743, 437, 311, 264, 19157, 295, 30556, 30, 50842, 50842, 1743, 437, 775, 300, 914, 257, 5744, 260, 30, 50922, 50922, 286, 500, 380, 519, 485, 50972, 50972, 286, 500, 380, 458, 364, 1867, 281, 341, 1168, 13, 51134, 51134, 583, 437, 307, 309, 412, 257, 1090, 1496, 30, 51222, 51222, 1743, 437, 485, 51272, 51272, 1743, 498, 291, 645, 281, 6786, 437, 257, 5744, 260, 307, 884, 412, 257, 1090, 1496, 11, 406, 365, 3089, 11, 437, 311, 51530, 51530, 1080, 4334, 30, 51580, 51580, 1407, 6786, 437, 30, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.14459599472406343, "compression_ratio": 1.8823529411764706, "no_caption_prob": 2.0784496882697567e-05}, {"id": 93, "seek": 30400, "start": 304.0, "end": 310.52, "text": " I think for the purpose of like explaining how things work in the WebGL, I think it makes", "tokens": [50364, 286, 519, 337, 264, 4334, 295, 411, 13468, 577, 721, 589, 294, 264, 9573, 19440, 11, 286, 519, 309, 1669, 50690, 50690, 2020, 281, 1310, 751, 466, 26424, 5744, 433, 11, 28162, 5744, 433, 293, 26424, 5744, 433, 14759, 13, 51004, 51004, 407, 498, 286, 390, 281, 2903, 437, 264, 28162, 5744, 260, 307, 11, 309, 311, 257, 5744, 260, 300, 6676, 337, 633, 28162, 51416, 51416, 293, 309, 14725, 364, 5598, 295, 309, 307, 689, 341, 28162, 393, 312, 1352, 322, 264, 2568, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12413451376925694, "compression_ratio": 1.680952380952381, "no_caption_prob": 2.046187364612706e-05}, {"id": 94, "seek": 30400, "start": 310.52, "end": 316.8, "text": " sense to maybe talk about fragment shaders, vertex shaders and fragment shaders separately.", "tokens": [50364, 286, 519, 337, 264, 4334, 295, 411, 13468, 577, 721, 589, 294, 264, 9573, 19440, 11, 286, 519, 309, 1669, 50690, 50690, 2020, 281, 1310, 751, 466, 26424, 5744, 433, 11, 28162, 5744, 433, 293, 26424, 5744, 433, 14759, 13, 51004, 51004, 407, 498, 286, 390, 281, 2903, 437, 264, 28162, 5744, 260, 307, 11, 309, 311, 257, 5744, 260, 300, 6676, 337, 633, 28162, 51416, 51416, 293, 309, 14725, 364, 5598, 295, 309, 307, 689, 341, 28162, 393, 312, 1352, 322, 264, 2568, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12413451376925694, "compression_ratio": 1.680952380952381, "no_caption_prob": 2.046187364612706e-05}, {"id": 95, "seek": 30400, "start": 316.8, "end": 325.04, "text": " So if I was to explain what the vertex shader is, it's a shader that runs for every vertex", "tokens": [50364, 286, 519, 337, 264, 4334, 295, 411, 13468, 577, 721, 589, 294, 264, 9573, 19440, 11, 286, 519, 309, 1669, 50690, 50690, 2020, 281, 1310, 751, 466, 26424, 5744, 433, 11, 28162, 5744, 433, 293, 26424, 5744, 433, 14759, 13, 51004, 51004, 407, 498, 286, 390, 281, 2903, 437, 264, 28162, 5744, 260, 307, 11, 309, 311, 257, 5744, 260, 300, 6676, 337, 633, 28162, 51416, 51416, 293, 309, 14725, 364, 5598, 295, 309, 307, 689, 341, 28162, 393, 312, 1352, 322, 264, 2568, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12413451376925694, "compression_ratio": 1.680952380952381, "no_caption_prob": 2.046187364612706e-05}, {"id": 96, "seek": 30400, "start": 325.04, "end": 331.2, "text": " and it produces an output of it is where this vertex can be found on the screen.", "tokens": [50364, 286, 519, 337, 264, 4334, 295, 411, 13468, 577, 721, 589, 294, 264, 9573, 19440, 11, 286, 519, 309, 1669, 50690, 50690, 2020, 281, 1310, 751, 466, 26424, 5744, 433, 11, 28162, 5744, 433, 293, 26424, 5744, 433, 14759, 13, 51004, 51004, 407, 498, 286, 390, 281, 2903, 437, 264, 28162, 5744, 260, 307, 11, 309, 311, 257, 5744, 260, 300, 6676, 337, 633, 28162, 51416, 51416, 293, 309, 14725, 364, 5598, 295, 309, 307, 689, 341, 28162, 393, 312, 1352, 322, 264, 2568, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12413451376925694, "compression_ratio": 1.680952380952381, "no_caption_prob": 2.046187364612706e-05}, {"id": 97, "seek": 33120, "start": 331.2, "end": 334.28, "text": " Is a vertex the triangle or the point?", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 98, "seek": 33120, "start": 334.28, "end": 335.28, "text": " It's triangles?", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 99, "seek": 33120, "start": 335.28, "end": 340.24, "text": " So, well, depending on the geometry, if the geometry is triangles, then the vertex is", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 100, "seek": 33120, "start": 340.24, "end": 345.88, "text": " a corner, like a point on that triangle, a corner point.", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 101, "seek": 33120, "start": 345.88, "end": 347.15999999999997, "text": " It can also be aligned.", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 102, "seek": 33120, "start": 347.15999999999997, "end": 353.68, "text": " So then it's like a point, like an end of a line segment.", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 103, "seek": 33120, "start": 353.68, "end": 354.68, "text": " Okay.", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 104, "seek": 33120, "start": 354.68, "end": 360.4, "text": " So it's defining how you draw the points, but it's not defining what those points are?", "tokens": [50364, 1119, 257, 28162, 264, 13369, 420, 264, 935, 30, 50518, 50518, 467, 311, 29896, 30, 50568, 50568, 407, 11, 731, 11, 5413, 322, 264, 18426, 11, 498, 264, 18426, 307, 29896, 11, 550, 264, 28162, 307, 50816, 50816, 257, 4538, 11, 411, 257, 935, 322, 300, 13369, 11, 257, 4538, 935, 13, 51098, 51098, 467, 393, 611, 312, 17962, 13, 51162, 51162, 407, 550, 309, 311, 411, 257, 935, 11, 411, 364, 917, 295, 257, 1622, 9469, 13, 51488, 51488, 1033, 13, 51538, 51538, 407, 309, 311, 17827, 577, 291, 2642, 264, 2793, 11, 457, 309, 311, 406, 17827, 437, 729, 2793, 366, 30, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.2219302389356825, "compression_ratio": 1.8415841584158417, "no_caption_prob": 9.818237231229432e-06}, {"id": 105, "seek": 36040, "start": 360.4, "end": 363.03999999999996, "text": " The input to it is attributes.", "tokens": [50364, 440, 4846, 281, 309, 307, 17212, 13, 50496, 50496, 400, 17212, 307, 294, 4959, 411, 257, 2136, 365, 4195, 7642, 7909, 13, 50800, 50800, 467, 311, 364, 1589, 300, 291, 393, 5085, 281, 309, 13, 50924, 50924, 407, 309, 311, 411, 11, 309, 311, 588, 19577, 13, 50992, 50992, 509, 393, 584, 11, 1954, 11, 291, 393, 5085, 21056, 281, 309, 11, 420, 291, 393, 5085, 2017, 420, 8091, 51356, 51356, 21056, 13, 51406, 51406, 407, 604, 1589, 291, 915, 4420, 11, 309, 393, 312, 8570, 281, 309, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.17912887245096187, "compression_ratio": 1.7577319587628866, "no_caption_prob": 3.9436145016225055e-05}, {"id": 106, "seek": 36040, "start": 363.03999999999996, "end": 369.12, "text": " And attributes is in elements like a record with user defined fields.", "tokens": [50364, 440, 4846, 281, 309, 307, 17212, 13, 50496, 50496, 400, 17212, 307, 294, 4959, 411, 257, 2136, 365, 4195, 7642, 7909, 13, 50800, 50800, 467, 311, 364, 1589, 300, 291, 393, 5085, 281, 309, 13, 50924, 50924, 407, 309, 311, 411, 11, 309, 311, 588, 19577, 13, 50992, 50992, 509, 393, 584, 11, 1954, 11, 291, 393, 5085, 21056, 281, 309, 11, 420, 291, 393, 5085, 2017, 420, 8091, 51356, 51356, 21056, 13, 51406, 51406, 407, 604, 1589, 291, 915, 4420, 11, 309, 393, 312, 8570, 281, 309, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.17912887245096187, "compression_ratio": 1.7577319587628866, "no_caption_prob": 3.9436145016225055e-05}, {"id": 107, "seek": 36040, "start": 369.12, "end": 371.59999999999997, "text": " It's an information that you can attach to it.", "tokens": [50364, 440, 4846, 281, 309, 307, 17212, 13, 50496, 50496, 400, 17212, 307, 294, 4959, 411, 257, 2136, 365, 4195, 7642, 7909, 13, 50800, 50800, 467, 311, 364, 1589, 300, 291, 393, 5085, 281, 309, 13, 50924, 50924, 407, 309, 311, 411, 11, 309, 311, 588, 19577, 13, 50992, 50992, 509, 393, 584, 11, 1954, 11, 291, 393, 5085, 21056, 281, 309, 11, 420, 291, 393, 5085, 2017, 420, 8091, 51356, 51356, 21056, 13, 51406, 51406, 407, 604, 1589, 291, 915, 4420, 11, 309, 393, 312, 8570, 281, 309, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.17912887245096187, "compression_ratio": 1.7577319587628866, "no_caption_prob": 3.9436145016225055e-05}, {"id": 108, "seek": 36040, "start": 371.59999999999997, "end": 372.96, "text": " So it's like, it's very generic.", "tokens": [50364, 440, 4846, 281, 309, 307, 17212, 13, 50496, 50496, 400, 17212, 307, 294, 4959, 411, 257, 2136, 365, 4195, 7642, 7909, 13, 50800, 50800, 467, 311, 364, 1589, 300, 291, 393, 5085, 281, 309, 13, 50924, 50924, 407, 309, 311, 411, 11, 309, 311, 588, 19577, 13, 50992, 50992, 509, 393, 584, 11, 1954, 11, 291, 393, 5085, 21056, 281, 309, 11, 420, 291, 393, 5085, 2017, 420, 8091, 51356, 51356, 21056, 13, 51406, 51406, 407, 604, 1589, 291, 915, 4420, 11, 309, 393, 312, 8570, 281, 309, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.17912887245096187, "compression_ratio": 1.7577319587628866, "no_caption_prob": 3.9436145016225055e-05}, {"id": 109, "seek": 36040, "start": 372.96, "end": 380.23999999999995, "text": " You can say, oh, you can attach coordinates to it, or you can attach color or texture", "tokens": [50364, 440, 4846, 281, 309, 307, 17212, 13, 50496, 50496, 400, 17212, 307, 294, 4959, 411, 257, 2136, 365, 4195, 7642, 7909, 13, 50800, 50800, 467, 311, 364, 1589, 300, 291, 393, 5085, 281, 309, 13, 50924, 50924, 407, 309, 311, 411, 11, 309, 311, 588, 19577, 13, 50992, 50992, 509, 393, 584, 11, 1954, 11, 291, 393, 5085, 21056, 281, 309, 11, 420, 291, 393, 5085, 2017, 420, 8091, 51356, 51356, 21056, 13, 51406, 51406, 407, 604, 1589, 291, 915, 4420, 11, 309, 393, 312, 8570, 281, 309, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.17912887245096187, "compression_ratio": 1.7577319587628866, "no_caption_prob": 3.9436145016225055e-05}, {"id": 110, "seek": 36040, "start": 380.23999999999995, "end": 381.23999999999995, "text": " coordinates.", "tokens": [50364, 440, 4846, 281, 309, 307, 17212, 13, 50496, 50496, 400, 17212, 307, 294, 4959, 411, 257, 2136, 365, 4195, 7642, 7909, 13, 50800, 50800, 467, 311, 364, 1589, 300, 291, 393, 5085, 281, 309, 13, 50924, 50924, 407, 309, 311, 411, 11, 309, 311, 588, 19577, 13, 50992, 50992, 509, 393, 584, 11, 1954, 11, 291, 393, 5085, 21056, 281, 309, 11, 420, 291, 393, 5085, 2017, 420, 8091, 51356, 51356, 21056, 13, 51406, 51406, 407, 604, 1589, 291, 915, 4420, 11, 309, 393, 312, 8570, 281, 309, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.17912887245096187, "compression_ratio": 1.7577319587628866, "no_caption_prob": 3.9436145016225055e-05}, {"id": 111, "seek": 36040, "start": 381.23999999999995, "end": 386.67999999999995, "text": " So any information you find useful, it can be attached to it.", "tokens": [50364, 440, 4846, 281, 309, 307, 17212, 13, 50496, 50496, 400, 17212, 307, 294, 4959, 411, 257, 2136, 365, 4195, 7642, 7909, 13, 50800, 50800, 467, 311, 364, 1589, 300, 291, 393, 5085, 281, 309, 13, 50924, 50924, 407, 309, 311, 411, 11, 309, 311, 588, 19577, 13, 50992, 50992, 509, 393, 584, 11, 1954, 11, 291, 393, 5085, 21056, 281, 309, 11, 420, 291, 393, 5085, 2017, 420, 8091, 51356, 51356, 21056, 13, 51406, 51406, 407, 604, 1589, 291, 915, 4420, 11, 309, 393, 312, 8570, 281, 309, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.17912887245096187, "compression_ratio": 1.7577319587628866, "no_caption_prob": 3.9436145016225055e-05}, {"id": 112, "seek": 38668, "start": 386.68, "end": 395.8, "text": " And then this vertex shader is going to transform that into coordinates on the screen plus some", "tokens": [50364, 400, 550, 341, 28162, 5744, 260, 307, 516, 281, 4088, 300, 666, 21056, 322, 264, 2568, 1804, 512, 50820, 50820, 5598, 1412, 11, 597, 307, 1219, 257, 21977, 13, 50966, 50966, 1033, 13, 51016, 51016, 407, 576, 257, 5744, 260, 312, 1920, 2531, 281, 411, 24387, 4474, 300, 727, 6964, 11, 291, 458, 11, 257, 2017, 51452, 51452], "temperature": 0.0, "avg_logprob": -0.16940088272094728, "compression_ratio": 1.3952095808383234, "no_caption_prob": 2.0460403902688995e-05}, {"id": 113, "seek": 38668, "start": 395.8, "end": 398.72, "text": " output data, which is called a variance.", "tokens": [50364, 400, 550, 341, 28162, 5744, 260, 307, 516, 281, 4088, 300, 666, 21056, 322, 264, 2568, 1804, 512, 50820, 50820, 5598, 1412, 11, 597, 307, 1219, 257, 21977, 13, 50966, 50966, 1033, 13, 51016, 51016, 407, 576, 257, 5744, 260, 312, 1920, 2531, 281, 411, 24387, 4474, 300, 727, 6964, 11, 291, 458, 11, 257, 2017, 51452, 51452], "temperature": 0.0, "avg_logprob": -0.16940088272094728, "compression_ratio": 1.3952095808383234, "no_caption_prob": 2.0460403902688995e-05}, {"id": 114, "seek": 38668, "start": 398.72, "end": 399.72, "text": " Okay.", "tokens": [50364, 400, 550, 341, 28162, 5744, 260, 307, 516, 281, 4088, 300, 666, 21056, 322, 264, 2568, 1804, 512, 50820, 50820, 5598, 1412, 11, 597, 307, 1219, 257, 21977, 13, 50966, 50966, 1033, 13, 51016, 51016, 407, 576, 257, 5744, 260, 312, 1920, 2531, 281, 411, 24387, 4474, 300, 727, 6964, 11, 291, 458, 11, 257, 2017, 51452, 51452], "temperature": 0.0, "avg_logprob": -0.16940088272094728, "compression_ratio": 1.3952095808383234, "no_caption_prob": 2.0460403902688995e-05}, {"id": 115, "seek": 38668, "start": 399.72, "end": 408.44, "text": " So would a shader be almost similar to like CSS rules that could define, you know, a color", "tokens": [50364, 400, 550, 341, 28162, 5744, 260, 307, 516, 281, 4088, 300, 666, 21056, 322, 264, 2568, 1804, 512, 50820, 50820, 5598, 1412, 11, 597, 307, 1219, 257, 21977, 13, 50966, 50966, 1033, 13, 51016, 51016, 407, 576, 257, 5744, 260, 312, 1920, 2531, 281, 411, 24387, 4474, 300, 727, 6964, 11, 291, 458, 11, 257, 2017, 51452, 51452], "temperature": 0.0, "avg_logprob": -0.16940088272094728, "compression_ratio": 1.3952095808383234, "no_caption_prob": 2.0460403902688995e-05}, {"id": 116, "seek": 40844, "start": 408.44, "end": 416.88, "text": " or like a background image to put over something or a transformation to like move something?", "tokens": [50364, 420, 411, 257, 3678, 3256, 281, 829, 670, 746, 420, 257, 9887, 281, 411, 1286, 746, 30, 50786, 50786, 865, 13, 50886, 50886, 759, 291, 519, 295, 264, 12686, 295, 732, 5744, 433, 11, 550, 1310, 291, 393, 519, 295, 309, 294, 341, 636, 13, 51162, 51162, 407, 498, 718, 311, 584, 498, 264, 4846, 281, 264, 28162, 5744, 260, 307, 411, 257, 17407, 300, 307, 1936, 11, 731, 11, 51552, 51552, 498, 291, 751, 294, 2115, 295, 29896, 11, 411, 257, 13369, 420, 18426, 11, 309, 311, 257, 3840, 295, 29896, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.15196868777275085, "compression_ratio": 1.6972477064220184, "no_caption_prob": 2.7532056265044957e-05}, {"id": 117, "seek": 40844, "start": 416.88, "end": 418.88, "text": " Yeah.", "tokens": [50364, 420, 411, 257, 3678, 3256, 281, 829, 670, 746, 420, 257, 9887, 281, 411, 1286, 746, 30, 50786, 50786, 865, 13, 50886, 50886, 759, 291, 519, 295, 264, 12686, 295, 732, 5744, 433, 11, 550, 1310, 291, 393, 519, 295, 309, 294, 341, 636, 13, 51162, 51162, 407, 498, 718, 311, 584, 498, 264, 4846, 281, 264, 28162, 5744, 260, 307, 411, 257, 17407, 300, 307, 1936, 11, 731, 11, 51552, 51552, 498, 291, 751, 294, 2115, 295, 29896, 11, 411, 257, 13369, 420, 18426, 11, 309, 311, 257, 3840, 295, 29896, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.15196868777275085, "compression_ratio": 1.6972477064220184, "no_caption_prob": 2.7532056265044957e-05}, {"id": 118, "seek": 40844, "start": 418.88, "end": 424.4, "text": " If you think of the composition of two shaders, then maybe you can think of it in this way.", "tokens": [50364, 420, 411, 257, 3678, 3256, 281, 829, 670, 746, 420, 257, 9887, 281, 411, 1286, 746, 30, 50786, 50786, 865, 13, 50886, 50886, 759, 291, 519, 295, 264, 12686, 295, 732, 5744, 433, 11, 550, 1310, 291, 393, 519, 295, 309, 294, 341, 636, 13, 51162, 51162, 407, 498, 718, 311, 584, 498, 264, 4846, 281, 264, 28162, 5744, 260, 307, 411, 257, 17407, 300, 307, 1936, 11, 731, 11, 51552, 51552, 498, 291, 751, 294, 2115, 295, 29896, 11, 411, 257, 13369, 420, 18426, 11, 309, 311, 257, 3840, 295, 29896, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.15196868777275085, "compression_ratio": 1.6972477064220184, "no_caption_prob": 2.7532056265044957e-05}, {"id": 119, "seek": 40844, "start": 424.4, "end": 432.2, "text": " So if let's say if the input to the vertex shader is like a mesh that is basically, well,", "tokens": [50364, 420, 411, 257, 3678, 3256, 281, 829, 670, 746, 420, 257, 9887, 281, 411, 1286, 746, 30, 50786, 50786, 865, 13, 50886, 50886, 759, 291, 519, 295, 264, 12686, 295, 732, 5744, 433, 11, 550, 1310, 291, 393, 519, 295, 309, 294, 341, 636, 13, 51162, 51162, 407, 498, 718, 311, 584, 498, 264, 4846, 281, 264, 28162, 5744, 260, 307, 411, 257, 17407, 300, 307, 1936, 11, 731, 11, 51552, 51552, 498, 291, 751, 294, 2115, 295, 29896, 11, 411, 257, 13369, 420, 18426, 11, 309, 311, 257, 3840, 295, 29896, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.15196868777275085, "compression_ratio": 1.6972477064220184, "no_caption_prob": 2.7532056265044957e-05}, {"id": 120, "seek": 40844, "start": 432.2, "end": 438.02, "text": " if you talk in terms of triangles, like a triangle or geometry, it's a bunch of triangles", "tokens": [50364, 420, 411, 257, 3678, 3256, 281, 829, 670, 746, 420, 257, 9887, 281, 411, 1286, 746, 30, 50786, 50786, 865, 13, 50886, 50886, 759, 291, 519, 295, 264, 12686, 295, 732, 5744, 433, 11, 550, 1310, 291, 393, 519, 295, 309, 294, 341, 636, 13, 51162, 51162, 407, 498, 718, 311, 584, 498, 264, 4846, 281, 264, 28162, 5744, 260, 307, 411, 257, 17407, 300, 307, 1936, 11, 731, 11, 51552, 51552, 498, 291, 751, 294, 2115, 295, 29896, 11, 411, 257, 13369, 420, 18426, 11, 309, 311, 257, 3840, 295, 29896, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.15196868777275085, "compression_ratio": 1.6972477064220184, "no_caption_prob": 2.7532056265044957e-05}, {"id": 121, "seek": 43802, "start": 438.02, "end": 444.64, "text": " and each point of this triangle has user defined information like color coordinates.", "tokens": [50364, 293, 1184, 935, 295, 341, 13369, 575, 4195, 7642, 1589, 411, 2017, 21056, 13, 50695, 50695, 1396, 341, 1709, 807, 264, 28162, 5744, 260, 293, 309, 3643, 11, 337, 1184, 295, 552, 11, 291, 458, 689, 50987, 50987, 309, 307, 322, 264, 2568, 1804, 604, 661, 1589, 300, 307, 550, 44902, 770, 13, 51252, 51252, 1133, 1071, 5744, 260, 16137, 309, 493, 11, 309, 2516, 11, 309, 22577, 322, 29197, 11, 457, 291, 393, 519, 51564, 51564, 295, 552, 382, 18668, 322, 264, 2568, 13, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.12181406342581416, "compression_ratio": 1.6727272727272726, "no_caption_prob": 1.834091017371975e-05}, {"id": 122, "seek": 43802, "start": 444.64, "end": 450.47999999999996, "text": " Then this goes through the vertex shader and it becomes, for each of them, you know where", "tokens": [50364, 293, 1184, 935, 295, 341, 13369, 575, 4195, 7642, 1589, 411, 2017, 21056, 13, 50695, 50695, 1396, 341, 1709, 807, 264, 28162, 5744, 260, 293, 309, 3643, 11, 337, 1184, 295, 552, 11, 291, 458, 689, 50987, 50987, 309, 307, 322, 264, 2568, 1804, 604, 661, 1589, 300, 307, 550, 44902, 770, 13, 51252, 51252, 1133, 1071, 5744, 260, 16137, 309, 493, 11, 309, 2516, 11, 309, 22577, 322, 29197, 11, 457, 291, 393, 519, 51564, 51564, 295, 552, 382, 18668, 322, 264, 2568, 13, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.12181406342581416, "compression_ratio": 1.6727272727272726, "no_caption_prob": 1.834091017371975e-05}, {"id": 123, "seek": 43802, "start": 450.47999999999996, "end": 455.78, "text": " it is on the screen plus any other information that is then interpolated.", "tokens": [50364, 293, 1184, 935, 295, 341, 13369, 575, 4195, 7642, 1589, 411, 2017, 21056, 13, 50695, 50695, 1396, 341, 1709, 807, 264, 28162, 5744, 260, 293, 309, 3643, 11, 337, 1184, 295, 552, 11, 291, 458, 689, 50987, 50987, 309, 307, 322, 264, 2568, 1804, 604, 661, 1589, 300, 307, 550, 44902, 770, 13, 51252, 51252, 1133, 1071, 5744, 260, 16137, 309, 493, 11, 309, 2516, 11, 309, 22577, 322, 29197, 11, 457, 291, 393, 519, 51564, 51564, 295, 552, 382, 18668, 322, 264, 2568, 13, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.12181406342581416, "compression_ratio": 1.6727272727272726, "no_caption_prob": 1.834091017371975e-05}, {"id": 124, "seek": 43802, "start": 455.78, "end": 462.02, "text": " When another shader picks it up, it takes, it operates on fragments, but you can think", "tokens": [50364, 293, 1184, 935, 295, 341, 13369, 575, 4195, 7642, 1589, 411, 2017, 21056, 13, 50695, 50695, 1396, 341, 1709, 807, 264, 28162, 5744, 260, 293, 309, 3643, 11, 337, 1184, 295, 552, 11, 291, 458, 689, 50987, 50987, 309, 307, 322, 264, 2568, 1804, 604, 661, 1589, 300, 307, 550, 44902, 770, 13, 51252, 51252, 1133, 1071, 5744, 260, 16137, 309, 493, 11, 309, 2516, 11, 309, 22577, 322, 29197, 11, 457, 291, 393, 519, 51564, 51564, 295, 552, 382, 18668, 322, 264, 2568, 13, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.12181406342581416, "compression_ratio": 1.6727272727272726, "no_caption_prob": 1.834091017371975e-05}, {"id": 125, "seek": 43802, "start": 462.02, "end": 463.84, "text": " of them as pixels on the screen.", "tokens": [50364, 293, 1184, 935, 295, 341, 13369, 575, 4195, 7642, 1589, 411, 2017, 21056, 13, 50695, 50695, 1396, 341, 1709, 807, 264, 28162, 5744, 260, 293, 309, 3643, 11, 337, 1184, 295, 552, 11, 291, 458, 689, 50987, 50987, 309, 307, 322, 264, 2568, 1804, 604, 661, 1589, 300, 307, 550, 44902, 770, 13, 51252, 51252, 1133, 1071, 5744, 260, 16137, 309, 493, 11, 309, 2516, 11, 309, 22577, 322, 29197, 11, 457, 291, 393, 519, 51564, 51564, 295, 552, 382, 18668, 322, 264, 2568, 13, 51655, 51655], "temperature": 0.0, "avg_logprob": -0.12181406342581416, "compression_ratio": 1.6727272727272726, "no_caption_prob": 1.834091017371975e-05}, {"id": 126, "seek": 46384, "start": 463.84, "end": 471.96, "text": " So it basically, it fills those triangles and what it gets as an input is interpolated", "tokens": [50364, 407, 309, 1936, 11, 309, 22498, 729, 29896, 293, 437, 309, 2170, 382, 364, 4846, 307, 44902, 770, 50770, 50770, 4190, 13, 50820, 50820, 407, 498, 291, 362, 257, 13369, 300, 575, 411, 2182, 11, 3092, 293, 3344, 8570, 281, 1080, 32053, 11, 550, 51304, 51304, 498, 291, 764, 300, 294, 264, 26424, 5744, 260, 293, 264, 26424, 5744, 260, 24799, 264, 5598, 51484, 51484, 2017, 295, 1184, 19261, 11, 1184, 26424, 11, 550, 291, 1062, 445, 411, 44902, 473, 309, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11838731100392896, "compression_ratio": 1.7263681592039801, "no_caption_prob": 7.766026101307943e-06}, {"id": 127, "seek": 46384, "start": 471.96, "end": 472.96, "text": " values.", "tokens": [50364, 407, 309, 1936, 11, 309, 22498, 729, 29896, 293, 437, 309, 2170, 382, 364, 4846, 307, 44902, 770, 50770, 50770, 4190, 13, 50820, 50820, 407, 498, 291, 362, 257, 13369, 300, 575, 411, 2182, 11, 3092, 293, 3344, 8570, 281, 1080, 32053, 11, 550, 51304, 51304, 498, 291, 764, 300, 294, 264, 26424, 5744, 260, 293, 264, 26424, 5744, 260, 24799, 264, 5598, 51484, 51484, 2017, 295, 1184, 19261, 11, 1184, 26424, 11, 550, 291, 1062, 445, 411, 44902, 473, 309, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11838731100392896, "compression_ratio": 1.7263681592039801, "no_caption_prob": 7.766026101307943e-06}, {"id": 128, "seek": 46384, "start": 472.96, "end": 482.64, "text": " So if you have a triangle that has like red, green and blue attached to its vertices, then", "tokens": [50364, 407, 309, 1936, 11, 309, 22498, 729, 29896, 293, 437, 309, 2170, 382, 364, 4846, 307, 44902, 770, 50770, 50770, 4190, 13, 50820, 50820, 407, 498, 291, 362, 257, 13369, 300, 575, 411, 2182, 11, 3092, 293, 3344, 8570, 281, 1080, 32053, 11, 550, 51304, 51304, 498, 291, 764, 300, 294, 264, 26424, 5744, 260, 293, 264, 26424, 5744, 260, 24799, 264, 5598, 51484, 51484, 2017, 295, 1184, 19261, 11, 1184, 26424, 11, 550, 291, 1062, 445, 411, 44902, 473, 309, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11838731100392896, "compression_ratio": 1.7263681592039801, "no_caption_prob": 7.766026101307943e-06}, {"id": 129, "seek": 46384, "start": 482.64, "end": 486.23999999999995, "text": " if you use that in the fragment shader and the fragment shader determines the output", "tokens": [50364, 407, 309, 1936, 11, 309, 22498, 729, 29896, 293, 437, 309, 2170, 382, 364, 4846, 307, 44902, 770, 50770, 50770, 4190, 13, 50820, 50820, 407, 498, 291, 362, 257, 13369, 300, 575, 411, 2182, 11, 3092, 293, 3344, 8570, 281, 1080, 32053, 11, 550, 51304, 51304, 498, 291, 764, 300, 294, 264, 26424, 5744, 260, 293, 264, 26424, 5744, 260, 24799, 264, 5598, 51484, 51484, 2017, 295, 1184, 19261, 11, 1184, 26424, 11, 550, 291, 1062, 445, 411, 44902, 473, 309, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11838731100392896, "compression_ratio": 1.7263681592039801, "no_caption_prob": 7.766026101307943e-06}, {"id": 130, "seek": 46384, "start": 486.23999999999995, "end": 491.28, "text": " color of each pixel, each fragment, then you might just like interpolate it.", "tokens": [50364, 407, 309, 1936, 11, 309, 22498, 729, 29896, 293, 437, 309, 2170, 382, 364, 4846, 307, 44902, 770, 50770, 50770, 4190, 13, 50820, 50820, 407, 498, 291, 362, 257, 13369, 300, 575, 411, 2182, 11, 3092, 293, 3344, 8570, 281, 1080, 32053, 11, 550, 51304, 51304, 498, 291, 764, 300, 294, 264, 26424, 5744, 260, 293, 264, 26424, 5744, 260, 24799, 264, 5598, 51484, 51484, 2017, 295, 1184, 19261, 11, 1184, 26424, 11, 550, 291, 1062, 445, 411, 44902, 473, 309, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11838731100392896, "compression_ratio": 1.7263681592039801, "no_caption_prob": 7.766026101307943e-06}, {"id": 131, "seek": 49128, "start": 491.28, "end": 499.03999999999996, "text": " So if you return this output, this varying from the vertex shader, then the triangle", "tokens": [50364, 407, 498, 291, 2736, 341, 5598, 11, 341, 22984, 490, 264, 28162, 5744, 260, 11, 550, 264, 13369, 50752, 50752, 307, 516, 281, 312, 6412, 365, 411, 44902, 770, 2017, 5413, 322, 577, 1998, 300, 1184, 935, 51094, 51094, 307, 281, 2139, 295, 264, 12413, 13, 51314, 51314, 407, 1392, 11, 370, 456, 311, 341, 16225, 47012, 300, 291, 393, 829, 1854, 295, 264, 1772, 295, 2699, 76, 3089, 365, 613, 51725, 51725], "temperature": 0.0, "avg_logprob": -0.1403797149658203, "compression_ratio": 1.5129533678756477, "no_caption_prob": 1.6699510524631478e-05}, {"id": 132, "seek": 49128, "start": 499.03999999999996, "end": 505.88, "text": " is going to be filled with like interpolated color depending on how close that each point", "tokens": [50364, 407, 498, 291, 2736, 341, 5598, 11, 341, 22984, 490, 264, 28162, 5744, 260, 11, 550, 264, 13369, 50752, 50752, 307, 516, 281, 312, 6412, 365, 411, 44902, 770, 2017, 5413, 322, 577, 1998, 300, 1184, 935, 51094, 51094, 307, 281, 2139, 295, 264, 12413, 13, 51314, 51314, 407, 1392, 11, 370, 456, 311, 341, 16225, 47012, 300, 291, 393, 829, 1854, 295, 264, 1772, 295, 2699, 76, 3089, 365, 613, 51725, 51725], "temperature": 0.0, "avg_logprob": -0.1403797149658203, "compression_ratio": 1.5129533678756477, "no_caption_prob": 1.6699510524631478e-05}, {"id": 133, "seek": 49128, "start": 505.88, "end": 510.28, "text": " is to either of the corners.", "tokens": [50364, 407, 498, 291, 2736, 341, 5598, 11, 341, 22984, 490, 264, 28162, 5744, 260, 11, 550, 264, 13369, 50752, 50752, 307, 516, 281, 312, 6412, 365, 411, 44902, 770, 2017, 5413, 322, 577, 1998, 300, 1184, 935, 51094, 51094, 307, 281, 2139, 295, 264, 12413, 13, 51314, 51314, 407, 1392, 11, 370, 456, 311, 341, 16225, 47012, 300, 291, 393, 829, 1854, 295, 264, 1772, 295, 2699, 76, 3089, 365, 613, 51725, 51725], "temperature": 0.0, "avg_logprob": -0.1403797149658203, "compression_ratio": 1.5129533678756477, "no_caption_prob": 1.6699510524631478e-05}, {"id": 134, "seek": 49128, "start": 510.28, "end": 518.5, "text": " So okay, so there's this GLSL that you can put inside of the body of Elm code with these", "tokens": [50364, 407, 498, 291, 2736, 341, 5598, 11, 341, 22984, 490, 264, 28162, 5744, 260, 11, 550, 264, 13369, 50752, 50752, 307, 516, 281, 312, 6412, 365, 411, 44902, 770, 2017, 5413, 322, 577, 1998, 300, 1184, 935, 51094, 51094, 307, 281, 2139, 295, 264, 12413, 13, 51314, 51314, 407, 1392, 11, 370, 456, 311, 341, 16225, 47012, 300, 291, 393, 829, 1854, 295, 264, 1772, 295, 2699, 76, 3089, 365, 613, 51725, 51725], "temperature": 0.0, "avg_logprob": -0.1403797149658203, "compression_ratio": 1.5129533678756477, "no_caption_prob": 1.6699510524631478e-05}, {"id": 135, "seek": 51850, "start": 518.5, "end": 525.54, "text": " little notation square brackets, GLSL pipe, and then you actually input GLSL code.", "tokens": [50364, 707, 24657, 3732, 26179, 11, 16225, 47012, 11240, 11, 293, 550, 291, 767, 4846, 16225, 47012, 3089, 13, 50716, 50716, 400, 550, 2699, 76, 1536, 433, 2010, 1589, 466, 300, 11, 558, 30, 50891, 50891, 407, 411, 437, 311, 264, 18350, 1296, 264, 16225, 47012, 11, 437, 307, 309, 1940, 490, 264, 16225, 47012, 293, 1296, 51299, 51299, 300, 293, 264, 2699, 76, 2010, 30, 51399, 51399, 407, 291, 6964, 11, 562, 291, 360, 257, 16225, 47012, 35623, 302, 294, 2699, 76, 11, 309, 2709, 291, 257, 5744, 260, 2010, 11, 558, 30, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11512682609951373, "compression_ratio": 1.6262135922330097, "no_caption_prob": 1.805798638088163e-05}, {"id": 136, "seek": 51850, "start": 525.54, "end": 529.04, "text": " And then Elm infers type information about that, right?", "tokens": [50364, 707, 24657, 3732, 26179, 11, 16225, 47012, 11240, 11, 293, 550, 291, 767, 4846, 16225, 47012, 3089, 13, 50716, 50716, 400, 550, 2699, 76, 1536, 433, 2010, 1589, 466, 300, 11, 558, 30, 50891, 50891, 407, 411, 437, 311, 264, 18350, 1296, 264, 16225, 47012, 11, 437, 307, 309, 1940, 490, 264, 16225, 47012, 293, 1296, 51299, 51299, 300, 293, 264, 2699, 76, 2010, 30, 51399, 51399, 407, 291, 6964, 11, 562, 291, 360, 257, 16225, 47012, 35623, 302, 294, 2699, 76, 11, 309, 2709, 291, 257, 5744, 260, 2010, 11, 558, 30, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11512682609951373, "compression_ratio": 1.6262135922330097, "no_caption_prob": 1.805798638088163e-05}, {"id": 137, "seek": 51850, "start": 529.04, "end": 537.2, "text": " So like what's the mapping between the GLSL, what is it taking from the GLSL and between", "tokens": [50364, 707, 24657, 3732, 26179, 11, 16225, 47012, 11240, 11, 293, 550, 291, 767, 4846, 16225, 47012, 3089, 13, 50716, 50716, 400, 550, 2699, 76, 1536, 433, 2010, 1589, 466, 300, 11, 558, 30, 50891, 50891, 407, 411, 437, 311, 264, 18350, 1296, 264, 16225, 47012, 11, 437, 307, 309, 1940, 490, 264, 16225, 47012, 293, 1296, 51299, 51299, 300, 293, 264, 2699, 76, 2010, 30, 51399, 51399, 407, 291, 6964, 11, 562, 291, 360, 257, 16225, 47012, 35623, 302, 294, 2699, 76, 11, 309, 2709, 291, 257, 5744, 260, 2010, 11, 558, 30, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11512682609951373, "compression_ratio": 1.6262135922330097, "no_caption_prob": 1.805798638088163e-05}, {"id": 138, "seek": 51850, "start": 537.2, "end": 539.2, "text": " that and the Elm type?", "tokens": [50364, 707, 24657, 3732, 26179, 11, 16225, 47012, 11240, 11, 293, 550, 291, 767, 4846, 16225, 47012, 3089, 13, 50716, 50716, 400, 550, 2699, 76, 1536, 433, 2010, 1589, 466, 300, 11, 558, 30, 50891, 50891, 407, 411, 437, 311, 264, 18350, 1296, 264, 16225, 47012, 11, 437, 307, 309, 1940, 490, 264, 16225, 47012, 293, 1296, 51299, 51299, 300, 293, 264, 2699, 76, 2010, 30, 51399, 51399, 407, 291, 6964, 11, 562, 291, 360, 257, 16225, 47012, 35623, 302, 294, 2699, 76, 11, 309, 2709, 291, 257, 5744, 260, 2010, 11, 558, 30, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11512682609951373, "compression_ratio": 1.6262135922330097, "no_caption_prob": 1.805798638088163e-05}, {"id": 139, "seek": 51850, "start": 539.2, "end": 546.3, "text": " So you define, when you do a GLSL snippet in Elm, it gives you a shader type, right?", "tokens": [50364, 707, 24657, 3732, 26179, 11, 16225, 47012, 11240, 11, 293, 550, 291, 767, 4846, 16225, 47012, 3089, 13, 50716, 50716, 400, 550, 2699, 76, 1536, 433, 2010, 1589, 466, 300, 11, 558, 30, 50891, 50891, 407, 411, 437, 311, 264, 18350, 1296, 264, 16225, 47012, 11, 437, 307, 309, 1940, 490, 264, 16225, 47012, 293, 1296, 51299, 51299, 300, 293, 264, 2699, 76, 2010, 30, 51399, 51399, 407, 291, 6964, 11, 562, 291, 360, 257, 16225, 47012, 35623, 302, 294, 2699, 76, 11, 309, 2709, 291, 257, 5744, 260, 2010, 11, 558, 30, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11512682609951373, "compression_ratio": 1.6262135922330097, "no_caption_prob": 1.805798638088163e-05}, {"id": 140, "seek": 54630, "start": 546.3, "end": 551.68, "text": " And then what does it map the GLSL types to the Elm types with?", "tokens": [50364, 400, 550, 437, 775, 309, 4471, 264, 16225, 47012, 3467, 281, 264, 2699, 76, 3467, 365, 30, 50633, 50633, 407, 2673, 412, 264, 1192, 295, 264, 5744, 260, 11, 291, 576, 362, 512, 4338, 21988, 295, 17212, 11, 50911, 50911, 37235, 11, 1374, 21518, 337, 264, 5744, 260, 11, 337, 264, 28162, 5744, 260, 13, 51191, 51191, 663, 576, 914, 300, 309, 15182, 493, 257, 5744, 260, 300, 575, 439, 264, 17212, 366, 829, 1214, 51449, 51449, 666, 257, 2136, 2010, 13, 51593, 51593, 1057, 37235, 366, 41877, 294, 264, 2136, 2010, 293, 439, 264, 1374, 21518, 366, 41877, 294, 264, 2136, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.16859588982923976, "compression_ratio": 1.8114035087719298, "no_caption_prob": 2.0145052985753864e-05}, {"id": 141, "seek": 54630, "start": 551.68, "end": 557.24, "text": " So usually at the top of the shader, you would have some global definitions of attributes,", "tokens": [50364, 400, 550, 437, 775, 309, 4471, 264, 16225, 47012, 3467, 281, 264, 2699, 76, 3467, 365, 30, 50633, 50633, 407, 2673, 412, 264, 1192, 295, 264, 5744, 260, 11, 291, 576, 362, 512, 4338, 21988, 295, 17212, 11, 50911, 50911, 37235, 11, 1374, 21518, 337, 264, 5744, 260, 11, 337, 264, 28162, 5744, 260, 13, 51191, 51191, 663, 576, 914, 300, 309, 15182, 493, 257, 5744, 260, 300, 575, 439, 264, 17212, 366, 829, 1214, 51449, 51449, 666, 257, 2136, 2010, 13, 51593, 51593, 1057, 37235, 366, 41877, 294, 264, 2136, 2010, 293, 439, 264, 1374, 21518, 366, 41877, 294, 264, 2136, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.16859588982923976, "compression_ratio": 1.8114035087719298, "no_caption_prob": 2.0145052985753864e-05}, {"id": 142, "seek": 54630, "start": 557.24, "end": 562.8399999999999, "text": " uniforms, variances for the shader, for the vertex shader.", "tokens": [50364, 400, 550, 437, 775, 309, 4471, 264, 16225, 47012, 3467, 281, 264, 2699, 76, 3467, 365, 30, 50633, 50633, 407, 2673, 412, 264, 1192, 295, 264, 5744, 260, 11, 291, 576, 362, 512, 4338, 21988, 295, 17212, 11, 50911, 50911, 37235, 11, 1374, 21518, 337, 264, 5744, 260, 11, 337, 264, 28162, 5744, 260, 13, 51191, 51191, 663, 576, 914, 300, 309, 15182, 493, 257, 5744, 260, 300, 575, 439, 264, 17212, 366, 829, 1214, 51449, 51449, 666, 257, 2136, 2010, 13, 51593, 51593, 1057, 37235, 366, 41877, 294, 264, 2136, 2010, 293, 439, 264, 1374, 21518, 366, 41877, 294, 264, 2136, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.16859588982923976, "compression_ratio": 1.8114035087719298, "no_caption_prob": 2.0145052985753864e-05}, {"id": 143, "seek": 54630, "start": 562.8399999999999, "end": 568.0, "text": " That would mean that it builds up a shader that has all the attributes are put together", "tokens": [50364, 400, 550, 437, 775, 309, 4471, 264, 16225, 47012, 3467, 281, 264, 2699, 76, 3467, 365, 30, 50633, 50633, 407, 2673, 412, 264, 1192, 295, 264, 5744, 260, 11, 291, 576, 362, 512, 4338, 21988, 295, 17212, 11, 50911, 50911, 37235, 11, 1374, 21518, 337, 264, 5744, 260, 11, 337, 264, 28162, 5744, 260, 13, 51191, 51191, 663, 576, 914, 300, 309, 15182, 493, 257, 5744, 260, 300, 575, 439, 264, 17212, 366, 829, 1214, 51449, 51449, 666, 257, 2136, 2010, 13, 51593, 51593, 1057, 37235, 366, 41877, 294, 264, 2136, 2010, 293, 439, 264, 1374, 21518, 366, 41877, 294, 264, 2136, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.16859588982923976, "compression_ratio": 1.8114035087719298, "no_caption_prob": 2.0145052985753864e-05}, {"id": 144, "seek": 54630, "start": 568.0, "end": 570.88, "text": " into a record type.", "tokens": [50364, 400, 550, 437, 775, 309, 4471, 264, 16225, 47012, 3467, 281, 264, 2699, 76, 3467, 365, 30, 50633, 50633, 407, 2673, 412, 264, 1192, 295, 264, 5744, 260, 11, 291, 576, 362, 512, 4338, 21988, 295, 17212, 11, 50911, 50911, 37235, 11, 1374, 21518, 337, 264, 5744, 260, 11, 337, 264, 28162, 5744, 260, 13, 51191, 51191, 663, 576, 914, 300, 309, 15182, 493, 257, 5744, 260, 300, 575, 439, 264, 17212, 366, 829, 1214, 51449, 51449, 666, 257, 2136, 2010, 13, 51593, 51593, 1057, 37235, 366, 41877, 294, 264, 2136, 2010, 293, 439, 264, 1374, 21518, 366, 41877, 294, 264, 2136, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.16859588982923976, "compression_ratio": 1.8114035087719298, "no_caption_prob": 2.0145052985753864e-05}, {"id": 145, "seek": 54630, "start": 570.88, "end": 575.56, "text": " All uniforms are grouped in the record type and all the variances are grouped in the record", "tokens": [50364, 400, 550, 437, 775, 309, 4471, 264, 16225, 47012, 3467, 281, 264, 2699, 76, 3467, 365, 30, 50633, 50633, 407, 2673, 412, 264, 1192, 295, 264, 5744, 260, 11, 291, 576, 362, 512, 4338, 21988, 295, 17212, 11, 50911, 50911, 37235, 11, 1374, 21518, 337, 264, 5744, 260, 11, 337, 264, 28162, 5744, 260, 13, 51191, 51191, 663, 576, 914, 300, 309, 15182, 493, 257, 5744, 260, 300, 575, 439, 264, 17212, 366, 829, 1214, 51449, 51449, 666, 257, 2136, 2010, 13, 51593, 51593, 1057, 37235, 366, 41877, 294, 264, 2136, 2010, 293, 439, 264, 1374, 21518, 366, 41877, 294, 264, 2136, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.16859588982923976, "compression_ratio": 1.8114035087719298, "no_caption_prob": 2.0145052985753864e-05}, {"id": 146, "seek": 57556, "start": 575.56, "end": 576.56, "text": " type.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 147, "seek": 57556, "start": 576.56, "end": 578.5999999999999, "text": " Like I forgot to mention what the uniforms are.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 148, "seek": 57556, "start": 578.5999999999999, "end": 582.3599999999999, "text": " The uniforms are some global constants.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 149, "seek": 57556, "start": 582.3599999999999, "end": 586.4799999999999, "text": " So they're not part of the mesh, they are part of the rendering.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 150, "seek": 57556, "start": 586.4799999999999, "end": 588.04, "text": " So like camera position.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 151, "seek": 57556, "start": 588.04, "end": 589.04, "text": " Yep.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 152, "seek": 57556, "start": 589.04, "end": 590.04, "text": " Camera.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 153, "seek": 57556, "start": 590.04, "end": 591.04, "text": " Okay, cool.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 154, "seek": 57556, "start": 591.04, "end": 600.4, "text": " So that's basically like an input that you can use to, that allows you to, through Elm,", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 155, "seek": 57556, "start": 600.4, "end": 602.0, "text": " change the camera position.", "tokens": [50364, 2010, 13, 50414, 50414, 1743, 286, 5298, 281, 2152, 437, 264, 37235, 366, 13, 50516, 50516, 440, 37235, 366, 512, 4338, 35870, 13, 50704, 50704, 407, 436, 434, 406, 644, 295, 264, 17407, 11, 436, 366, 644, 295, 264, 22407, 13, 50910, 50910, 407, 411, 2799, 2535, 13, 50988, 50988, 7010, 13, 51038, 51038, 23734, 13, 51088, 51088, 1033, 11, 1627, 13, 51138, 51138, 407, 300, 311, 1936, 411, 364, 4846, 300, 291, 393, 764, 281, 11, 300, 4045, 291, 281, 11, 807, 2699, 76, 11, 51606, 51606, 1319, 264, 2799, 2535, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.17404304583048083, "compression_ratio": 1.6446700507614214, "no_caption_prob": 0.0001355012209387496}, {"id": 156, "seek": 60200, "start": 602.0, "end": 608.0, "text": " You can like make that vary now and you've basically created a binding between Elm and", "tokens": [50364, 509, 393, 411, 652, 300, 10559, 586, 293, 291, 600, 1936, 2942, 257, 17359, 1296, 2699, 76, 293, 50664, 50664, 264, 9573, 19440, 9226, 689, 291, 393, 1286, 264, 2799, 2535, 11, 337, 1365, 13, 50972, 50972, 467, 311, 439, 4678, 294, 264, 16694, 1166, 636, 11, 457, 498, 291, 764, 411, 9603, 3920, 17231, 51280, 51280, 293, 291, 1320, 257, 819, 2799, 2535, 11, 550, 291, 603, 362, 411, 257, 2684, 2799, 13, 51692, 51692, 663, 311, 588, 1627, 13, 51742, 51742, 407, 291, 434, 558, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14683629118877908, "compression_ratio": 1.5689655172413792, "no_caption_prob": 3.822622602456249e-05}, {"id": 157, "seek": 60200, "start": 608.0, "end": 614.16, "text": " the WebGL interface where you can move the camera position, for example.", "tokens": [50364, 509, 393, 411, 652, 300, 10559, 586, 293, 291, 600, 1936, 2942, 257, 17359, 1296, 2699, 76, 293, 50664, 50664, 264, 9573, 19440, 9226, 689, 291, 393, 1286, 264, 2799, 2535, 11, 337, 1365, 13, 50972, 50972, 467, 311, 439, 4678, 294, 264, 16694, 1166, 636, 11, 457, 498, 291, 764, 411, 9603, 3920, 17231, 51280, 51280, 293, 291, 1320, 257, 819, 2799, 2535, 11, 550, 291, 603, 362, 411, 257, 2684, 2799, 13, 51692, 51692, 663, 311, 588, 1627, 13, 51742, 51742, 407, 291, 434, 558, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14683629118877908, "compression_ratio": 1.5689655172413792, "no_caption_prob": 3.822622602456249e-05}, {"id": 158, "seek": 60200, "start": 614.16, "end": 620.32, "text": " It's all passed in the declarative way, but if you use like animation frame subscription", "tokens": [50364, 509, 393, 411, 652, 300, 10559, 586, 293, 291, 600, 1936, 2942, 257, 17359, 1296, 2699, 76, 293, 50664, 50664, 264, 9573, 19440, 9226, 689, 291, 393, 1286, 264, 2799, 2535, 11, 337, 1365, 13, 50972, 50972, 467, 311, 439, 4678, 294, 264, 16694, 1166, 636, 11, 457, 498, 291, 764, 411, 9603, 3920, 17231, 51280, 51280, 293, 291, 1320, 257, 819, 2799, 2535, 11, 550, 291, 603, 362, 411, 257, 2684, 2799, 13, 51692, 51692, 663, 311, 588, 1627, 13, 51742, 51742, 407, 291, 434, 558, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14683629118877908, "compression_ratio": 1.5689655172413792, "no_caption_prob": 3.822622602456249e-05}, {"id": 159, "seek": 60200, "start": 620.32, "end": 628.56, "text": " and you pass a different camera position, then you'll have like a moving camera.", "tokens": [50364, 509, 393, 411, 652, 300, 10559, 586, 293, 291, 600, 1936, 2942, 257, 17359, 1296, 2699, 76, 293, 50664, 50664, 264, 9573, 19440, 9226, 689, 291, 393, 1286, 264, 2799, 2535, 11, 337, 1365, 13, 50972, 50972, 467, 311, 439, 4678, 294, 264, 16694, 1166, 636, 11, 457, 498, 291, 764, 411, 9603, 3920, 17231, 51280, 51280, 293, 291, 1320, 257, 819, 2799, 2535, 11, 550, 291, 603, 362, 411, 257, 2684, 2799, 13, 51692, 51692, 663, 311, 588, 1627, 13, 51742, 51742, 407, 291, 434, 558, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14683629118877908, "compression_ratio": 1.5689655172413792, "no_caption_prob": 3.822622602456249e-05}, {"id": 160, "seek": 60200, "start": 628.56, "end": 629.56, "text": " That's very cool.", "tokens": [50364, 509, 393, 411, 652, 300, 10559, 586, 293, 291, 600, 1936, 2942, 257, 17359, 1296, 2699, 76, 293, 50664, 50664, 264, 9573, 19440, 9226, 689, 291, 393, 1286, 264, 2799, 2535, 11, 337, 1365, 13, 50972, 50972, 467, 311, 439, 4678, 294, 264, 16694, 1166, 636, 11, 457, 498, 291, 764, 411, 9603, 3920, 17231, 51280, 51280, 293, 291, 1320, 257, 819, 2799, 2535, 11, 550, 291, 603, 362, 411, 257, 2684, 2799, 13, 51692, 51692, 663, 311, 588, 1627, 13, 51742, 51742, 407, 291, 434, 558, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14683629118877908, "compression_ratio": 1.5689655172413792, "no_caption_prob": 3.822622602456249e-05}, {"id": 161, "seek": 60200, "start": 629.56, "end": 630.56, "text": " So you're right.", "tokens": [50364, 509, 393, 411, 652, 300, 10559, 586, 293, 291, 600, 1936, 2942, 257, 17359, 1296, 2699, 76, 293, 50664, 50664, 264, 9573, 19440, 9226, 689, 291, 393, 1286, 264, 2799, 2535, 11, 337, 1365, 13, 50972, 50972, 467, 311, 439, 4678, 294, 264, 16694, 1166, 636, 11, 457, 498, 291, 764, 411, 9603, 3920, 17231, 51280, 51280, 293, 291, 1320, 257, 819, 2799, 2535, 11, 550, 291, 603, 362, 411, 257, 2684, 2799, 13, 51692, 51692, 663, 311, 588, 1627, 13, 51742, 51742, 407, 291, 434, 558, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14683629118877908, "compression_ratio": 1.5689655172413792, "no_caption_prob": 3.822622602456249e-05}, {"id": 162, "seek": 63056, "start": 630.56, "end": 636.4399999999999, "text": " So it's this declarative thing where you have your uniforms, which are these like global", "tokens": [50364, 407, 309, 311, 341, 16694, 1166, 551, 689, 291, 362, 428, 37235, 11, 597, 366, 613, 411, 4338, 50658, 50658, 4190, 294, 9573, 19440, 293, 291, 19710, 552, 294, 428, 16225, 47012, 35623, 302, 293, 550, 291, 1320, 294, 3467, 11, 597, 51086, 51086, 366, 2699, 76, 307, 516, 281, 1520, 300, 264, 3467, 2995, 1296, 264, 37235, 291, 600, 15489, 294, 428, 51336, 51336, 16225, 47012, 293, 264, 2306, 291, 764, 294, 428, 2699, 76, 9573, 19440, 3089, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.1327402705237979, "compression_ratio": 1.7311827956989247, "no_caption_prob": 1.184277243737597e-05}, {"id": 163, "seek": 63056, "start": 636.4399999999999, "end": 645.0, "text": " values in WebGL and you declare them in your GLSL snippet and then you pass in types, which", "tokens": [50364, 407, 309, 311, 341, 16694, 1166, 551, 689, 291, 362, 428, 37235, 11, 597, 366, 613, 411, 4338, 50658, 50658, 4190, 294, 9573, 19440, 293, 291, 19710, 552, 294, 428, 16225, 47012, 35623, 302, 293, 550, 291, 1320, 294, 3467, 11, 597, 51086, 51086, 366, 2699, 76, 307, 516, 281, 1520, 300, 264, 3467, 2995, 1296, 264, 37235, 291, 600, 15489, 294, 428, 51336, 51336, 16225, 47012, 293, 264, 2306, 291, 764, 294, 428, 2699, 76, 9573, 19440, 3089, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.1327402705237979, "compression_ratio": 1.7311827956989247, "no_caption_prob": 1.184277243737597e-05}, {"id": 164, "seek": 63056, "start": 645.0, "end": 650.0, "text": " are Elm is going to check that the types match between the uniforms you've declared in your", "tokens": [50364, 407, 309, 311, 341, 16694, 1166, 551, 689, 291, 362, 428, 37235, 11, 597, 366, 613, 411, 4338, 50658, 50658, 4190, 294, 9573, 19440, 293, 291, 19710, 552, 294, 428, 16225, 47012, 35623, 302, 293, 550, 291, 1320, 294, 3467, 11, 597, 51086, 51086, 366, 2699, 76, 307, 516, 281, 1520, 300, 264, 3467, 2995, 1296, 264, 37235, 291, 600, 15489, 294, 428, 51336, 51336, 16225, 47012, 293, 264, 2306, 291, 764, 294, 428, 2699, 76, 9573, 19440, 3089, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.1327402705237979, "compression_ratio": 1.7311827956989247, "no_caption_prob": 1.184277243737597e-05}, {"id": 165, "seek": 63056, "start": 650.0, "end": 655.1999999999999, "text": " GLSL and the ones you use in your Elm WebGL code.", "tokens": [50364, 407, 309, 311, 341, 16694, 1166, 551, 689, 291, 362, 428, 37235, 11, 597, 366, 613, 411, 4338, 50658, 50658, 4190, 294, 9573, 19440, 293, 291, 19710, 552, 294, 428, 16225, 47012, 35623, 302, 293, 550, 291, 1320, 294, 3467, 11, 597, 51086, 51086, 366, 2699, 76, 307, 516, 281, 1520, 300, 264, 3467, 2995, 1296, 264, 37235, 291, 600, 15489, 294, 428, 51336, 51336, 16225, 47012, 293, 264, 2306, 291, 764, 294, 428, 2699, 76, 9573, 19440, 3089, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.1327402705237979, "compression_ratio": 1.7311827956989247, "no_caption_prob": 1.184277243737597e-05}, {"id": 166, "seek": 65520, "start": 655.2, "end": 662.6400000000001, "text": " And then you can change those values and the camera moves or the color can change or the", "tokens": [50364, 400, 550, 291, 393, 1319, 729, 4190, 293, 264, 2799, 6067, 420, 264, 2017, 393, 1319, 420, 264, 50736, 50736, 12447, 393, 1319, 13, 50814, 50814, 400, 341, 2010, 4514, 307, 406, 445, 337, 37235, 13, 50954, 50954, 407, 1936, 291, 362, 732, 5744, 433, 11, 641, 2010, 32322, 362, 281, 7975, 293, 611, 291, 362, 51260, 51260, 17407, 300, 307, 7642, 538, 1080, 32053, 11, 411, 17212, 11, 17212, 2010, 8570, 281, 633, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1772941809434157, "compression_ratio": 1.7128205128205127, "no_caption_prob": 3.882601231453009e-05}, {"id": 167, "seek": 65520, "start": 662.6400000000001, "end": 664.2, "text": " rotation can change.", "tokens": [50364, 400, 550, 291, 393, 1319, 729, 4190, 293, 264, 2799, 6067, 420, 264, 2017, 393, 1319, 420, 264, 50736, 50736, 12447, 393, 1319, 13, 50814, 50814, 400, 341, 2010, 4514, 307, 406, 445, 337, 37235, 13, 50954, 50954, 407, 1936, 291, 362, 732, 5744, 433, 11, 641, 2010, 32322, 362, 281, 7975, 293, 611, 291, 362, 51260, 51260, 17407, 300, 307, 7642, 538, 1080, 32053, 11, 411, 17212, 11, 17212, 2010, 8570, 281, 633, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1772941809434157, "compression_ratio": 1.7128205128205127, "no_caption_prob": 3.882601231453009e-05}, {"id": 168, "seek": 65520, "start": 664.2, "end": 667.0, "text": " And this type safety is not just for uniforms.", "tokens": [50364, 400, 550, 291, 393, 1319, 729, 4190, 293, 264, 2799, 6067, 420, 264, 2017, 393, 1319, 420, 264, 50736, 50736, 12447, 393, 1319, 13, 50814, 50814, 400, 341, 2010, 4514, 307, 406, 445, 337, 37235, 13, 50954, 50954, 407, 1936, 291, 362, 732, 5744, 433, 11, 641, 2010, 32322, 362, 281, 7975, 293, 611, 291, 362, 51260, 51260, 17407, 300, 307, 7642, 538, 1080, 32053, 11, 411, 17212, 11, 17212, 2010, 8570, 281, 633, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1772941809434157, "compression_ratio": 1.7128205128205127, "no_caption_prob": 3.882601231453009e-05}, {"id": 169, "seek": 65520, "start": 667.0, "end": 673.12, "text": " So basically you have two shaders, their type signatures have to align and also you have", "tokens": [50364, 400, 550, 291, 393, 1319, 729, 4190, 293, 264, 2799, 6067, 420, 264, 2017, 393, 1319, 420, 264, 50736, 50736, 12447, 393, 1319, 13, 50814, 50814, 400, 341, 2010, 4514, 307, 406, 445, 337, 37235, 13, 50954, 50954, 407, 1936, 291, 362, 732, 5744, 433, 11, 641, 2010, 32322, 362, 281, 7975, 293, 611, 291, 362, 51260, 51260, 17407, 300, 307, 7642, 538, 1080, 32053, 11, 411, 17212, 11, 17212, 2010, 8570, 281, 633, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1772941809434157, "compression_ratio": 1.7128205128205127, "no_caption_prob": 3.882601231453009e-05}, {"id": 170, "seek": 65520, "start": 673.12, "end": 679.32, "text": " mesh that is defined by its vertices, like attributes, attributes type attached to every", "tokens": [50364, 400, 550, 291, 393, 1319, 729, 4190, 293, 264, 2799, 6067, 420, 264, 2017, 393, 1319, 420, 264, 50736, 50736, 12447, 393, 1319, 13, 50814, 50814, 400, 341, 2010, 4514, 307, 406, 445, 337, 37235, 13, 50954, 50954, 407, 1936, 291, 362, 732, 5744, 433, 11, 641, 2010, 32322, 362, 281, 7975, 293, 611, 291, 362, 51260, 51260, 17407, 300, 307, 7642, 538, 1080, 32053, 11, 411, 17212, 11, 17212, 2010, 8570, 281, 633, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.1772941809434157, "compression_ratio": 1.7128205128205127, "no_caption_prob": 3.882601231453009e-05}, {"id": 171, "seek": 67932, "start": 679.32, "end": 685.72, "text": " vertices and those attributes will have to match with the input to the vertex shader.", "tokens": [50364, 32053, 293, 729, 17212, 486, 362, 281, 2995, 365, 264, 4846, 281, 264, 28162, 5744, 260, 13, 50684, 50684, 440, 37235, 362, 281, 2995, 1296, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 293, 264, 37235, 50964, 50964, 300, 291, 1320, 11, 411, 264, 37235, 300, 291, 1320, 13, 51174, 51174, 400, 611, 264, 21669, 1348, 490, 28162, 5744, 260, 666, 26424, 5744, 260, 11, 729, 4190, 300, 366, 51456, 51456, 44902, 770, 11, 436, 611, 362, 281, 2995, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1259942335240981, "compression_ratio": 2.0112359550561796, "no_caption_prob": 0.00010549040598561987}, {"id": 172, "seek": 67932, "start": 685.72, "end": 691.32, "text": " The uniforms have to match between the vertex shader and the fragment shader and the uniforms", "tokens": [50364, 32053, 293, 729, 17212, 486, 362, 281, 2995, 365, 264, 4846, 281, 264, 28162, 5744, 260, 13, 50684, 50684, 440, 37235, 362, 281, 2995, 1296, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 293, 264, 37235, 50964, 50964, 300, 291, 1320, 11, 411, 264, 37235, 300, 291, 1320, 13, 51174, 51174, 400, 611, 264, 21669, 1348, 490, 28162, 5744, 260, 666, 26424, 5744, 260, 11, 729, 4190, 300, 366, 51456, 51456, 44902, 770, 11, 436, 611, 362, 281, 2995, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1259942335240981, "compression_ratio": 2.0112359550561796, "no_caption_prob": 0.00010549040598561987}, {"id": 173, "seek": 67932, "start": 691.32, "end": 695.5200000000001, "text": " that you pass, like the uniforms that you pass.", "tokens": [50364, 32053, 293, 729, 17212, 486, 362, 281, 2995, 365, 264, 4846, 281, 264, 28162, 5744, 260, 13, 50684, 50684, 440, 37235, 362, 281, 2995, 1296, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 293, 264, 37235, 50964, 50964, 300, 291, 1320, 11, 411, 264, 37235, 300, 291, 1320, 13, 51174, 51174, 400, 611, 264, 21669, 1348, 490, 28162, 5744, 260, 666, 26424, 5744, 260, 11, 729, 4190, 300, 366, 51456, 51456, 44902, 770, 11, 436, 611, 362, 281, 2995, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1259942335240981, "compression_ratio": 2.0112359550561796, "no_caption_prob": 0.00010549040598561987}, {"id": 174, "seek": 67932, "start": 695.5200000000001, "end": 701.1600000000001, "text": " And also the variants coming from vertex shader into fragment shader, those values that are", "tokens": [50364, 32053, 293, 729, 17212, 486, 362, 281, 2995, 365, 264, 4846, 281, 264, 28162, 5744, 260, 13, 50684, 50684, 440, 37235, 362, 281, 2995, 1296, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 293, 264, 37235, 50964, 50964, 300, 291, 1320, 11, 411, 264, 37235, 300, 291, 1320, 13, 51174, 51174, 400, 611, 264, 21669, 1348, 490, 28162, 5744, 260, 666, 26424, 5744, 260, 11, 729, 4190, 300, 366, 51456, 51456, 44902, 770, 11, 436, 611, 362, 281, 2995, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1259942335240981, "compression_ratio": 2.0112359550561796, "no_caption_prob": 0.00010549040598561987}, {"id": 175, "seek": 67932, "start": 701.1600000000001, "end": 703.5200000000001, "text": " interpolated, they also have to match.", "tokens": [50364, 32053, 293, 729, 17212, 486, 362, 281, 2995, 365, 264, 4846, 281, 264, 28162, 5744, 260, 13, 50684, 50684, 440, 37235, 362, 281, 2995, 1296, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 293, 264, 37235, 50964, 50964, 300, 291, 1320, 11, 411, 264, 37235, 300, 291, 1320, 13, 51174, 51174, 400, 611, 264, 21669, 1348, 490, 28162, 5744, 260, 666, 26424, 5744, 260, 11, 729, 4190, 300, 366, 51456, 51456, 44902, 770, 11, 436, 611, 362, 281, 2995, 13, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.1259942335240981, "compression_ratio": 2.0112359550561796, "no_caption_prob": 0.00010549040598561987}, {"id": 176, "seek": 70352, "start": 703.52, "end": 710.3199999999999, "text": " So Elm verifies that all the types align together and it really helps to avoid some problems", "tokens": [50364, 407, 2699, 76, 1306, 11221, 300, 439, 264, 3467, 7975, 1214, 293, 309, 534, 3665, 281, 5042, 512, 2740, 50704, 50704, 300, 291, 1062, 5911, 8593, 562, 884, 309, 294, 257, 8936, 15778, 13, 50998, 50998, 1610, 445, 264, 383, 2856, 300, 307, 16225, 47012, 13, 51188, 51188, 1610, 291, 920, 362, 281, 16225, 47012, 498, 291, 528, 281, 764, 264, 8936, 2699, 76, 9573, 19440, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.17488338577915247, "compression_ratio": 1.445054945054945, "no_caption_prob": 0.00010223007848253474}, {"id": 177, "seek": 70352, "start": 710.3199999999999, "end": 716.1999999999999, "text": " that you might otherwise encounter when doing it in a raw JavaScript.", "tokens": [50364, 407, 2699, 76, 1306, 11221, 300, 439, 264, 3467, 7975, 1214, 293, 309, 534, 3665, 281, 5042, 512, 2740, 50704, 50704, 300, 291, 1062, 5911, 8593, 562, 884, 309, 294, 257, 8936, 15778, 13, 50998, 50998, 1610, 445, 264, 383, 2856, 300, 307, 16225, 47012, 13, 51188, 51188, 1610, 291, 920, 362, 281, 16225, 47012, 498, 291, 528, 281, 764, 264, 8936, 2699, 76, 9573, 19440, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.17488338577915247, "compression_ratio": 1.445054945054945, "no_caption_prob": 0.00010223007848253474}, {"id": 178, "seek": 70352, "start": 716.1999999999999, "end": 720.0, "text": " Or just the C language that is GLSL.", "tokens": [50364, 407, 2699, 76, 1306, 11221, 300, 439, 264, 3467, 7975, 1214, 293, 309, 534, 3665, 281, 5042, 512, 2740, 50704, 50704, 300, 291, 1062, 5911, 8593, 562, 884, 309, 294, 257, 8936, 15778, 13, 50998, 50998, 1610, 445, 264, 383, 2856, 300, 307, 16225, 47012, 13, 51188, 51188, 1610, 291, 920, 362, 281, 16225, 47012, 498, 291, 528, 281, 764, 264, 8936, 2699, 76, 9573, 19440, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.17488338577915247, "compression_ratio": 1.445054945054945, "no_caption_prob": 0.00010223007848253474}, {"id": 179, "seek": 70352, "start": 720.0, "end": 727.8199999999999, "text": " Or you still have to GLSL if you want to use the raw Elm WebGL.", "tokens": [50364, 407, 2699, 76, 1306, 11221, 300, 439, 264, 3467, 7975, 1214, 293, 309, 534, 3665, 281, 5042, 512, 2740, 50704, 50704, 300, 291, 1062, 5911, 8593, 562, 884, 309, 294, 257, 8936, 15778, 13, 50998, 50998, 1610, 445, 264, 383, 2856, 300, 307, 16225, 47012, 13, 51188, 51188, 1610, 291, 920, 362, 281, 16225, 47012, 498, 291, 528, 281, 764, 264, 8936, 2699, 76, 9573, 19440, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.17488338577915247, "compression_ratio": 1.445054945054945, "no_caption_prob": 0.00010223007848253474}, {"id": 180, "seek": 72782, "start": 727.82, "end": 736.12, "text": " Is that part of GLSL, does that give you some of that type safety in itself but then Elm", "tokens": [50364, 1119, 300, 644, 295, 16225, 47012, 11, 775, 300, 976, 291, 512, 295, 300, 2010, 4514, 294, 2564, 457, 550, 2699, 76, 50779, 50779, 2709, 291, 264, 14786, 1109, 281, 264, 37235, 300, 309, 11335, 294, 30, 50967, 50967, 1610, 291, 434, 1566, 498, 291, 764, 257, 15778, 6405, 485, 51171, 51171, 759, 291, 645, 281, 360, 309, 1803, 294, 15778, 11, 550, 291, 576, 312, 1242, 34474, 22847, 51481, 51481, 300, 291, 603, 362, 281, 485, 51531, 51531, 407, 291, 603, 362, 281, 1190, 428, 3089, 294, 1668, 281, 536, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.1668357062585575, "compression_ratio": 1.6515837104072397, "no_caption_prob": 0.00011231595271965489}, {"id": 181, "seek": 72782, "start": 736.12, "end": 739.88, "text": " gives you the bindings to the uniforms that it passes in?", "tokens": [50364, 1119, 300, 644, 295, 16225, 47012, 11, 775, 300, 976, 291, 512, 295, 300, 2010, 4514, 294, 2564, 457, 550, 2699, 76, 50779, 50779, 2709, 291, 264, 14786, 1109, 281, 264, 37235, 300, 309, 11335, 294, 30, 50967, 50967, 1610, 291, 434, 1566, 498, 291, 764, 257, 15778, 6405, 485, 51171, 51171, 759, 291, 645, 281, 360, 309, 1803, 294, 15778, 11, 550, 291, 576, 312, 1242, 34474, 22847, 51481, 51481, 300, 291, 603, 362, 281, 485, 51531, 51531, 407, 291, 603, 362, 281, 1190, 428, 3089, 294, 1668, 281, 536, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.1668357062585575, "compression_ratio": 1.6515837104072397, "no_caption_prob": 0.00011231595271965489}, {"id": 182, "seek": 72782, "start": 739.88, "end": 743.96, "text": " Or you're saying if you use a JavaScript library...", "tokens": [50364, 1119, 300, 644, 295, 16225, 47012, 11, 775, 300, 976, 291, 512, 295, 300, 2010, 4514, 294, 2564, 457, 550, 2699, 76, 50779, 50779, 2709, 291, 264, 14786, 1109, 281, 264, 37235, 300, 309, 11335, 294, 30, 50967, 50967, 1610, 291, 434, 1566, 498, 291, 764, 257, 15778, 6405, 485, 51171, 51171, 759, 291, 645, 281, 360, 309, 1803, 294, 15778, 11, 550, 291, 576, 312, 1242, 34474, 22847, 51481, 51481, 300, 291, 603, 362, 281, 485, 51531, 51531, 407, 291, 603, 362, 281, 1190, 428, 3089, 294, 1668, 281, 536, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.1668357062585575, "compression_ratio": 1.6515837104072397, "no_caption_prob": 0.00011231595271965489}, {"id": 183, "seek": 72782, "start": 743.96, "end": 750.1600000000001, "text": " If you were to do it yourself in JavaScript, then you would be getting runtime exceptions", "tokens": [50364, 1119, 300, 644, 295, 16225, 47012, 11, 775, 300, 976, 291, 512, 295, 300, 2010, 4514, 294, 2564, 457, 550, 2699, 76, 50779, 50779, 2709, 291, 264, 14786, 1109, 281, 264, 37235, 300, 309, 11335, 294, 30, 50967, 50967, 1610, 291, 434, 1566, 498, 291, 764, 257, 15778, 6405, 485, 51171, 51171, 759, 291, 645, 281, 360, 309, 1803, 294, 15778, 11, 550, 291, 576, 312, 1242, 34474, 22847, 51481, 51481, 300, 291, 603, 362, 281, 485, 51531, 51531, 407, 291, 603, 362, 281, 1190, 428, 3089, 294, 1668, 281, 536, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.1668357062585575, "compression_ratio": 1.6515837104072397, "no_caption_prob": 0.00011231595271965489}, {"id": 184, "seek": 72782, "start": 750.1600000000001, "end": 751.1600000000001, "text": " that you'll have to...", "tokens": [50364, 1119, 300, 644, 295, 16225, 47012, 11, 775, 300, 976, 291, 512, 295, 300, 2010, 4514, 294, 2564, 457, 550, 2699, 76, 50779, 50779, 2709, 291, 264, 14786, 1109, 281, 264, 37235, 300, 309, 11335, 294, 30, 50967, 50967, 1610, 291, 434, 1566, 498, 291, 764, 257, 15778, 6405, 485, 51171, 51171, 759, 291, 645, 281, 360, 309, 1803, 294, 15778, 11, 550, 291, 576, 312, 1242, 34474, 22847, 51481, 51481, 300, 291, 603, 362, 281, 485, 51531, 51531, 407, 291, 603, 362, 281, 1190, 428, 3089, 294, 1668, 281, 536, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.1668357062585575, "compression_ratio": 1.6515837104072397, "no_caption_prob": 0.00011231595271965489}, {"id": 185, "seek": 72782, "start": 751.1600000000001, "end": 754.24, "text": " So you'll have to run your code in order to see them.", "tokens": [50364, 1119, 300, 644, 295, 16225, 47012, 11, 775, 300, 976, 291, 512, 295, 300, 2010, 4514, 294, 2564, 457, 550, 2699, 76, 50779, 50779, 2709, 291, 264, 14786, 1109, 281, 264, 37235, 300, 309, 11335, 294, 30, 50967, 50967, 1610, 291, 434, 1566, 498, 291, 764, 257, 15778, 6405, 485, 51171, 51171, 759, 291, 645, 281, 360, 309, 1803, 294, 15778, 11, 550, 291, 576, 312, 1242, 34474, 22847, 51481, 51481, 300, 291, 603, 362, 281, 485, 51531, 51531, 407, 291, 603, 362, 281, 1190, 428, 3089, 294, 1668, 281, 536, 552, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.1668357062585575, "compression_ratio": 1.6515837104072397, "no_caption_prob": 0.00011231595271965489}, {"id": 186, "seek": 75424, "start": 754.24, "end": 760.2, "text": " Does it give it to you as soon as you start the GLSL and then it says, oh, the types are", "tokens": [50364, 4402, 309, 976, 309, 281, 291, 382, 2321, 382, 291, 722, 264, 16225, 47012, 293, 550, 309, 1619, 11, 1954, 11, 264, 3467, 366, 50662, 50662, 257, 23220, 852, 30, 50749, 50749, 4402, 309, 31413, 264, 16225, 47012, 412, 34474, 30, 50932, 50932, 821, 307, 257, 3840, 295, 7705, 291, 643, 281, 360, 294, 1668, 281, 483, 309, 1364, 13, 51122, 51122, 821, 307, 257, 1238, 955, 39228, 37008, 11, 286, 2041, 13, 51322, 51322, 509, 362, 281, 31413, 264, 5744, 433, 300, 815, 3061, 13, 51580, 51580, 1396, 291, 362, 281, 2113, 264, 732, 5744, 433, 666, 257, 1461, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14493646167573473, "compression_ratio": 1.6330275229357798, "no_caption_prob": 5.223966945777647e-05}, {"id": 187, "seek": 75424, "start": 760.2, "end": 761.94, "text": " a mismatch?", "tokens": [50364, 4402, 309, 976, 309, 281, 291, 382, 2321, 382, 291, 722, 264, 16225, 47012, 293, 550, 309, 1619, 11, 1954, 11, 264, 3467, 366, 50662, 50662, 257, 23220, 852, 30, 50749, 50749, 4402, 309, 31413, 264, 16225, 47012, 412, 34474, 30, 50932, 50932, 821, 307, 257, 3840, 295, 7705, 291, 643, 281, 360, 294, 1668, 281, 483, 309, 1364, 13, 51122, 51122, 821, 307, 257, 1238, 955, 39228, 37008, 11, 286, 2041, 13, 51322, 51322, 509, 362, 281, 31413, 264, 5744, 433, 300, 815, 3061, 13, 51580, 51580, 1396, 291, 362, 281, 2113, 264, 732, 5744, 433, 666, 257, 1461, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14493646167573473, "compression_ratio": 1.6330275229357798, "no_caption_prob": 5.223966945777647e-05}, {"id": 188, "seek": 75424, "start": 761.94, "end": 765.6, "text": " Does it compile the GLSL at runtime?", "tokens": [50364, 4402, 309, 976, 309, 281, 291, 382, 2321, 382, 291, 722, 264, 16225, 47012, 293, 550, 309, 1619, 11, 1954, 11, 264, 3467, 366, 50662, 50662, 257, 23220, 852, 30, 50749, 50749, 4402, 309, 31413, 264, 16225, 47012, 412, 34474, 30, 50932, 50932, 821, 307, 257, 3840, 295, 7705, 291, 643, 281, 360, 294, 1668, 281, 483, 309, 1364, 13, 51122, 51122, 821, 307, 257, 1238, 955, 39228, 37008, 11, 286, 2041, 13, 51322, 51322, 509, 362, 281, 31413, 264, 5744, 433, 300, 815, 3061, 13, 51580, 51580, 1396, 291, 362, 281, 2113, 264, 732, 5744, 433, 666, 257, 1461, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14493646167573473, "compression_ratio": 1.6330275229357798, "no_caption_prob": 5.223966945777647e-05}, {"id": 189, "seek": 75424, "start": 765.6, "end": 769.4, "text": " There is a bunch of operations you need to do in order to get it working.", "tokens": [50364, 4402, 309, 976, 309, 281, 291, 382, 2321, 382, 291, 722, 264, 16225, 47012, 293, 550, 309, 1619, 11, 1954, 11, 264, 3467, 366, 50662, 50662, 257, 23220, 852, 30, 50749, 50749, 4402, 309, 31413, 264, 16225, 47012, 412, 34474, 30, 50932, 50932, 821, 307, 257, 3840, 295, 7705, 291, 643, 281, 360, 294, 1668, 281, 483, 309, 1364, 13, 51122, 51122, 821, 307, 257, 1238, 955, 39228, 37008, 11, 286, 2041, 13, 51322, 51322, 509, 362, 281, 31413, 264, 5744, 433, 300, 815, 3061, 13, 51580, 51580, 1396, 291, 362, 281, 2113, 264, 732, 5744, 433, 666, 257, 1461, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14493646167573473, "compression_ratio": 1.6330275229357798, "no_caption_prob": 5.223966945777647e-05}, {"id": 190, "seek": 75424, "start": 769.4, "end": 773.4, "text": " There is a pretty big boilerplate, I guess.", "tokens": [50364, 4402, 309, 976, 309, 281, 291, 382, 2321, 382, 291, 722, 264, 16225, 47012, 293, 550, 309, 1619, 11, 1954, 11, 264, 3467, 366, 50662, 50662, 257, 23220, 852, 30, 50749, 50749, 4402, 309, 31413, 264, 16225, 47012, 412, 34474, 30, 50932, 50932, 821, 307, 257, 3840, 295, 7705, 291, 643, 281, 360, 294, 1668, 281, 483, 309, 1364, 13, 51122, 51122, 821, 307, 257, 1238, 955, 39228, 37008, 11, 286, 2041, 13, 51322, 51322, 509, 362, 281, 31413, 264, 5744, 433, 300, 815, 3061, 13, 51580, 51580, 1396, 291, 362, 281, 2113, 264, 732, 5744, 433, 666, 257, 1461, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14493646167573473, "compression_ratio": 1.6330275229357798, "no_caption_prob": 5.223966945777647e-05}, {"id": 191, "seek": 75424, "start": 773.4, "end": 778.5600000000001, "text": " You have to compile the shaders that may fail.", "tokens": [50364, 4402, 309, 976, 309, 281, 291, 382, 2321, 382, 291, 722, 264, 16225, 47012, 293, 550, 309, 1619, 11, 1954, 11, 264, 3467, 366, 50662, 50662, 257, 23220, 852, 30, 50749, 50749, 4402, 309, 31413, 264, 16225, 47012, 412, 34474, 30, 50932, 50932, 821, 307, 257, 3840, 295, 7705, 291, 643, 281, 360, 294, 1668, 281, 483, 309, 1364, 13, 51122, 51122, 821, 307, 257, 1238, 955, 39228, 37008, 11, 286, 2041, 13, 51322, 51322, 509, 362, 281, 31413, 264, 5744, 433, 300, 815, 3061, 13, 51580, 51580, 1396, 291, 362, 281, 2113, 264, 732, 5744, 433, 666, 257, 1461, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14493646167573473, "compression_ratio": 1.6330275229357798, "no_caption_prob": 5.223966945777647e-05}, {"id": 192, "seek": 75424, "start": 778.5600000000001, "end": 782.4, "text": " Then you have to link the two shaders into a program.", "tokens": [50364, 4402, 309, 976, 309, 281, 291, 382, 2321, 382, 291, 722, 264, 16225, 47012, 293, 550, 309, 1619, 11, 1954, 11, 264, 3467, 366, 50662, 50662, 257, 23220, 852, 30, 50749, 50749, 4402, 309, 31413, 264, 16225, 47012, 412, 34474, 30, 50932, 50932, 821, 307, 257, 3840, 295, 7705, 291, 643, 281, 360, 294, 1668, 281, 483, 309, 1364, 13, 51122, 51122, 821, 307, 257, 1238, 955, 39228, 37008, 11, 286, 2041, 13, 51322, 51322, 509, 362, 281, 31413, 264, 5744, 433, 300, 815, 3061, 13, 51580, 51580, 1396, 291, 362, 281, 2113, 264, 732, 5744, 433, 666, 257, 1461, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.14493646167573473, "compression_ratio": 1.6330275229357798, "no_caption_prob": 5.223966945777647e-05}, {"id": 193, "seek": 78240, "start": 782.4, "end": 786.4, "text": " So you need to take Vertex Shader and Fragment Shader, link it to a program.", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 194, "seek": 78240, "start": 786.4, "end": 788.0799999999999, "text": " That may fail.", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 195, "seek": 78240, "start": 788.0799999999999, "end": 793.3199999999999, "text": " And then when you perform drawing operations, you have to correctly set all the buffers", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 196, "seek": 78240, "start": 793.3199999999999, "end": 796.8199999999999, "text": " and pass it to the program and run it.", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 197, "seek": 78240, "start": 796.8199999999999, "end": 798.1999999999999, "text": " So that may fail.", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 198, "seek": 78240, "start": 798.1999999999999, "end": 803.48, "text": " And the uniforms may not line up from being passed in from JavaScript and being run in", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 199, "seek": 78240, "start": 803.48, "end": 804.48, "text": " GLSL.", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 200, "seek": 78240, "start": 804.48, "end": 808.64, "text": " And when things go wrong, it's a runtime exception.", "tokens": [50364, 407, 291, 643, 281, 747, 21044, 3121, 1160, 8312, 293, 479, 3731, 518, 1160, 8312, 11, 2113, 309, 281, 257, 1461, 13, 50564, 50564, 663, 815, 3061, 13, 50648, 50648, 400, 550, 562, 291, 2042, 6316, 7705, 11, 291, 362, 281, 8944, 992, 439, 264, 9204, 433, 50910, 50910, 293, 1320, 309, 281, 264, 1461, 293, 1190, 309, 13, 51085, 51085, 407, 300, 815, 3061, 13, 51154, 51154, 400, 264, 37235, 815, 406, 1622, 493, 490, 885, 4678, 294, 490, 15778, 293, 885, 1190, 294, 51418, 51418, 16225, 47012, 13, 51468, 51468, 400, 562, 721, 352, 2085, 11, 309, 311, 257, 34474, 11183, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.1708471686751754, "compression_ratio": 1.6493506493506493, "no_caption_prob": 1.544549741083756e-05}, {"id": 201, "seek": 80864, "start": 808.64, "end": 816.64, "text": " And usually you see just a white screen with some console errors.", "tokens": [50364, 400, 2673, 291, 536, 445, 257, 2418, 2568, 365, 512, 11076, 13603, 13, 50764, 50764, 286, 519, 286, 478, 2891, 281, 483, 257, 3036, 295, 983, 561, 483, 588, 11410, 11, 309, 2544, 11, 466, 51066, 51066, 884, 805, 35, 1507, 294, 2699, 76, 13, 51180, 51180, 1436, 309, 3263, 411, 2699, 76, 575, 534, 485, 51368, 51368, 467, 311, 370, 1880, 281, 385, 570, 286, 841, 411, 286, 362, 452, 5984, 322, 264, 17709, 295, 2699, 76, 1507, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.214484570974327, "compression_ratio": 1.497560975609756, "no_caption_prob": 0.00010717187979025766}, {"id": 202, "seek": 80864, "start": 816.64, "end": 822.68, "text": " I think I'm starting to get a picture of why people get very passionate, it seems, about", "tokens": [50364, 400, 2673, 291, 536, 445, 257, 2418, 2568, 365, 512, 11076, 13603, 13, 50764, 50764, 286, 519, 286, 478, 2891, 281, 483, 257, 3036, 295, 983, 561, 483, 588, 11410, 11, 309, 2544, 11, 466, 51066, 51066, 884, 805, 35, 1507, 294, 2699, 76, 13, 51180, 51180, 1436, 309, 3263, 411, 2699, 76, 575, 534, 485, 51368, 51368, 467, 311, 370, 1880, 281, 385, 570, 286, 841, 411, 286, 362, 452, 5984, 322, 264, 17709, 295, 2699, 76, 1507, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.214484570974327, "compression_ratio": 1.497560975609756, "no_caption_prob": 0.00010717187979025766}, {"id": 203, "seek": 80864, "start": 822.68, "end": 824.96, "text": " doing 3D stuff in Elm.", "tokens": [50364, 400, 2673, 291, 536, 445, 257, 2418, 2568, 365, 512, 11076, 13603, 13, 50764, 50764, 286, 519, 286, 478, 2891, 281, 483, 257, 3036, 295, 983, 561, 483, 588, 11410, 11, 309, 2544, 11, 466, 51066, 51066, 884, 805, 35, 1507, 294, 2699, 76, 13, 51180, 51180, 1436, 309, 3263, 411, 2699, 76, 575, 534, 485, 51368, 51368, 467, 311, 370, 1880, 281, 385, 570, 286, 841, 411, 286, 362, 452, 5984, 322, 264, 17709, 295, 2699, 76, 1507, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.214484570974327, "compression_ratio": 1.497560975609756, "no_caption_prob": 0.00010717187979025766}, {"id": 204, "seek": 80864, "start": 824.96, "end": 828.72, "text": " Because it sounds like Elm has really...", "tokens": [50364, 400, 2673, 291, 536, 445, 257, 2418, 2568, 365, 512, 11076, 13603, 13, 50764, 50764, 286, 519, 286, 478, 2891, 281, 483, 257, 3036, 295, 983, 561, 483, 588, 11410, 11, 309, 2544, 11, 466, 51066, 51066, 884, 805, 35, 1507, 294, 2699, 76, 13, 51180, 51180, 1436, 309, 3263, 411, 2699, 76, 575, 534, 485, 51368, 51368, 467, 311, 370, 1880, 281, 385, 570, 286, 841, 411, 286, 362, 452, 5984, 322, 264, 17709, 295, 2699, 76, 1507, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.214484570974327, "compression_ratio": 1.497560975609756, "no_caption_prob": 0.00010717187979025766}, {"id": 205, "seek": 80864, "start": 828.72, "end": 833.64, "text": " It's so interesting to me because I feel like I have my finger on the pulse of Elm stuff", "tokens": [50364, 400, 2673, 291, 536, 445, 257, 2418, 2568, 365, 512, 11076, 13603, 13, 50764, 50764, 286, 519, 286, 478, 2891, 281, 483, 257, 3036, 295, 983, 561, 483, 588, 11410, 11, 309, 2544, 11, 466, 51066, 51066, 884, 805, 35, 1507, 294, 2699, 76, 13, 51180, 51180, 1436, 309, 3263, 411, 2699, 76, 575, 534, 485, 51368, 51368, 467, 311, 370, 1880, 281, 385, 570, 286, 841, 411, 286, 362, 452, 5984, 322, 264, 17709, 295, 2699, 76, 1507, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.214484570974327, "compression_ratio": 1.497560975609756, "no_caption_prob": 0.00010717187979025766}, {"id": 206, "seek": 83364, "start": 833.64, "end": 839.72, "text": " a fair amount, except this stuff is such a blind spot for me.", "tokens": [50364, 257, 3143, 2372, 11, 3993, 341, 1507, 307, 1270, 257, 6865, 4008, 337, 385, 13, 50668, 50668, 583, 286, 536, 561, 1242, 534, 11410, 466, 309, 13, 50750, 50750, 400, 341, 1633, 312, 472, 295, 264, 4112, 13, 50846, 50846, 286, 458, 512, 561, 567, 754, 1143, 512, 8936, 9573, 19440, 949, 1382, 484, 2699, 76, 293, 436, 584, 11, 51170, 51170, 6076, 11, 341, 307, 370, 709, 3571, 570, 295, 439, 613, 32567, 13, 51452, 51452, 1012, 366, 264, 31958, 13603, 30, 51551, 51551, 1133, 291, 2082, 493, 2139, 264, 16225, 47012, 420, 562, 291, 2082, 493, 264, 25775, 11, 366, 264, 31958, 13603, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1874583533050817, "compression_ratio": 1.6274509803921569, "no_caption_prob": 4.8320907808374614e-05}, {"id": 207, "seek": 83364, "start": 839.72, "end": 841.36, "text": " But I see people getting really passionate about it.", "tokens": [50364, 257, 3143, 2372, 11, 3993, 341, 1507, 307, 1270, 257, 6865, 4008, 337, 385, 13, 50668, 50668, 583, 286, 536, 561, 1242, 534, 11410, 466, 309, 13, 50750, 50750, 400, 341, 1633, 312, 472, 295, 264, 4112, 13, 50846, 50846, 286, 458, 512, 561, 567, 754, 1143, 512, 8936, 9573, 19440, 949, 1382, 484, 2699, 76, 293, 436, 584, 11, 51170, 51170, 6076, 11, 341, 307, 370, 709, 3571, 570, 295, 439, 613, 32567, 13, 51452, 51452, 1012, 366, 264, 31958, 13603, 30, 51551, 51551, 1133, 291, 2082, 493, 2139, 264, 16225, 47012, 420, 562, 291, 2082, 493, 264, 25775, 11, 366, 264, 31958, 13603, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1874583533050817, "compression_ratio": 1.6274509803921569, "no_caption_prob": 4.8320907808374614e-05}, {"id": 208, "seek": 83364, "start": 841.36, "end": 843.28, "text": " And this must be one of the reasons.", "tokens": [50364, 257, 3143, 2372, 11, 3993, 341, 1507, 307, 1270, 257, 6865, 4008, 337, 385, 13, 50668, 50668, 583, 286, 536, 561, 1242, 534, 11410, 466, 309, 13, 50750, 50750, 400, 341, 1633, 312, 472, 295, 264, 4112, 13, 50846, 50846, 286, 458, 512, 561, 567, 754, 1143, 512, 8936, 9573, 19440, 949, 1382, 484, 2699, 76, 293, 436, 584, 11, 51170, 51170, 6076, 11, 341, 307, 370, 709, 3571, 570, 295, 439, 613, 32567, 13, 51452, 51452, 1012, 366, 264, 31958, 13603, 30, 51551, 51551, 1133, 291, 2082, 493, 2139, 264, 16225, 47012, 420, 562, 291, 2082, 493, 264, 25775, 11, 366, 264, 31958, 13603, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1874583533050817, "compression_ratio": 1.6274509803921569, "no_caption_prob": 4.8320907808374614e-05}, {"id": 209, "seek": 83364, "start": 843.28, "end": 849.76, "text": " I know some people who even used some raw WebGL before trying out Elm and they say,", "tokens": [50364, 257, 3143, 2372, 11, 3993, 341, 1507, 307, 1270, 257, 6865, 4008, 337, 385, 13, 50668, 50668, 583, 286, 536, 561, 1242, 534, 11410, 466, 309, 13, 50750, 50750, 400, 341, 1633, 312, 472, 295, 264, 4112, 13, 50846, 50846, 286, 458, 512, 561, 567, 754, 1143, 512, 8936, 9573, 19440, 949, 1382, 484, 2699, 76, 293, 436, 584, 11, 51170, 51170, 6076, 11, 341, 307, 370, 709, 3571, 570, 295, 439, 613, 32567, 13, 51452, 51452, 1012, 366, 264, 31958, 13603, 30, 51551, 51551, 1133, 291, 2082, 493, 2139, 264, 16225, 47012, 420, 562, 291, 2082, 493, 264, 25775, 11, 366, 264, 31958, 13603, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1874583533050817, "compression_ratio": 1.6274509803921569, "no_caption_prob": 4.8320907808374614e-05}, {"id": 210, "seek": 83364, "start": 849.76, "end": 855.4, "text": " wow, this is so much easier because of all these guarantees.", "tokens": [50364, 257, 3143, 2372, 11, 3993, 341, 1507, 307, 1270, 257, 6865, 4008, 337, 385, 13, 50668, 50668, 583, 286, 536, 561, 1242, 534, 11410, 466, 309, 13, 50750, 50750, 400, 341, 1633, 312, 472, 295, 264, 4112, 13, 50846, 50846, 286, 458, 512, 561, 567, 754, 1143, 512, 8936, 9573, 19440, 949, 1382, 484, 2699, 76, 293, 436, 584, 11, 51170, 51170, 6076, 11, 341, 307, 370, 709, 3571, 570, 295, 439, 613, 32567, 13, 51452, 51452, 1012, 366, 264, 31958, 13603, 30, 51551, 51551, 1133, 291, 2082, 493, 2139, 264, 16225, 47012, 420, 562, 291, 2082, 493, 264, 25775, 11, 366, 264, 31958, 13603, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1874583533050817, "compression_ratio": 1.6274509803921569, "no_caption_prob": 4.8320907808374614e-05}, {"id": 211, "seek": 83364, "start": 855.4, "end": 857.38, "text": " How are the compiler errors?", "tokens": [50364, 257, 3143, 2372, 11, 3993, 341, 1507, 307, 1270, 257, 6865, 4008, 337, 385, 13, 50668, 50668, 583, 286, 536, 561, 1242, 534, 11410, 466, 309, 13, 50750, 50750, 400, 341, 1633, 312, 472, 295, 264, 4112, 13, 50846, 50846, 286, 458, 512, 561, 567, 754, 1143, 512, 8936, 9573, 19440, 949, 1382, 484, 2699, 76, 293, 436, 584, 11, 51170, 51170, 6076, 11, 341, 307, 370, 709, 3571, 570, 295, 439, 613, 32567, 13, 51452, 51452, 1012, 366, 264, 31958, 13603, 30, 51551, 51551, 1133, 291, 2082, 493, 2139, 264, 16225, 47012, 420, 562, 291, 2082, 493, 264, 25775, 11, 366, 264, 31958, 13603, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1874583533050817, "compression_ratio": 1.6274509803921569, "no_caption_prob": 4.8320907808374614e-05}, {"id": 212, "seek": 83364, "start": 857.38, "end": 863.48, "text": " When you mess up either the GLSL or when you mess up the linking, are the compiler errors", "tokens": [50364, 257, 3143, 2372, 11, 3993, 341, 1507, 307, 1270, 257, 6865, 4008, 337, 385, 13, 50668, 50668, 583, 286, 536, 561, 1242, 534, 11410, 466, 309, 13, 50750, 50750, 400, 341, 1633, 312, 472, 295, 264, 4112, 13, 50846, 50846, 286, 458, 512, 561, 567, 754, 1143, 512, 8936, 9573, 19440, 949, 1382, 484, 2699, 76, 293, 436, 584, 11, 51170, 51170, 6076, 11, 341, 307, 370, 709, 3571, 570, 295, 439, 613, 32567, 13, 51452, 51452, 1012, 366, 264, 31958, 13603, 30, 51551, 51551, 1133, 291, 2082, 493, 2139, 264, 16225, 47012, 420, 562, 291, 2082, 493, 264, 25775, 11, 366, 264, 31958, 13603, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1874583533050817, "compression_ratio": 1.6274509803921569, "no_caption_prob": 4.8320907808374614e-05}, {"id": 213, "seek": 86348, "start": 863.48, "end": 864.48, "text": " good?", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 214, "seek": 86348, "start": 864.48, "end": 865.48, "text": " Helpful?", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 215, "seek": 86348, "start": 865.48, "end": 871.32, "text": " You mean coming out from the raw WebGL or the Elm ones?", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 216, "seek": 86348, "start": 871.32, "end": 873.72, "text": " I mean when you...", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 217, "seek": 86348, "start": 873.72, "end": 875.6, "text": " When you're using WebGL in Elm.", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 218, "seek": 86348, "start": 875.6, "end": 877.32, "text": " Yeah, when you use WebGL in Elm.", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 219, "seek": 86348, "start": 877.32, "end": 879.0, "text": " Yeah, I think they are.", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 220, "seek": 86348, "start": 879.0, "end": 884.24, "text": " It will be basically like, I want this type, but you pass this type.", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 221, "seek": 86348, "start": 884.24, "end": 886.04, "text": " Kind of error.", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 222, "seek": 86348, "start": 886.04, "end": 892.16, "text": " So I'm curious to know, and I'm wondering whether this is a good way to start a conversation", "tokens": [50364, 665, 30, 50414, 50414, 10773, 906, 30, 50464, 50464, 509, 914, 1348, 484, 490, 264, 8936, 9573, 19440, 420, 264, 2699, 76, 2306, 30, 50756, 50756, 286, 914, 562, 291, 485, 50876, 50876, 1133, 291, 434, 1228, 9573, 19440, 294, 2699, 76, 13, 50970, 50970, 865, 11, 562, 291, 764, 9573, 19440, 294, 2699, 76, 13, 51056, 51056, 865, 11, 286, 519, 436, 366, 13, 51140, 51140, 467, 486, 312, 1936, 411, 11, 286, 528, 341, 2010, 11, 457, 291, 1320, 341, 2010, 13, 51402, 51402, 9242, 295, 6713, 13, 51492, 51492, 407, 286, 478, 6369, 281, 458, 11, 293, 286, 478, 6359, 1968, 341, 307, 257, 665, 636, 281, 722, 257, 3761, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.25042383894961107, "compression_ratio": 1.5707964601769913, "no_caption_prob": 0.00015114636335056275}, {"id": 223, "seek": 89216, "start": 892.16, "end": 896.56, "text": " because when you need to do something in 3D, how do you think?", "tokens": [50364, 570, 562, 291, 643, 281, 360, 746, 294, 805, 35, 11, 577, 360, 291, 519, 30, 50584, 50584, 708, 360, 291, 722, 365, 30, 50634, 50634, 1144, 291, 722, 365, 3579, 257, 3840, 295, 28162, 279, 293, 17212, 420, 437, 307, 428, 1399, 30, 51042, 51042, 1779, 13, 51092, 51092, 1743, 1310, 321, 643, 281, 6964, 437, 300, 746, 307, 570, 309, 815, 5672, 322, 300, 13, 51386, 51386, 1743, 11, 370, 393, 291, 519, 295, 364, 1365, 30, 51590, 51590, 961, 311, 584, 291, 528, 281, 2642, 257, 13728, 420, 257, 13369, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.23730680893878547, "compression_ratio": 1.6384976525821595, "no_caption_prob": 0.00013550740550272167}, {"id": 224, "seek": 89216, "start": 896.56, "end": 897.56, "text": " What do you start with?", "tokens": [50364, 570, 562, 291, 643, 281, 360, 746, 294, 805, 35, 11, 577, 360, 291, 519, 30, 50584, 50584, 708, 360, 291, 722, 365, 30, 50634, 50634, 1144, 291, 722, 365, 3579, 257, 3840, 295, 28162, 279, 293, 17212, 420, 437, 307, 428, 1399, 30, 51042, 51042, 1779, 13, 51092, 51092, 1743, 1310, 321, 643, 281, 6964, 437, 300, 746, 307, 570, 309, 815, 5672, 322, 300, 13, 51386, 51386, 1743, 11, 370, 393, 291, 519, 295, 364, 1365, 30, 51590, 51590, 961, 311, 584, 291, 528, 281, 2642, 257, 13728, 420, 257, 13369, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.23730680893878547, "compression_ratio": 1.6384976525821595, "no_caption_prob": 0.00013550740550272167}, {"id": 225, "seek": 89216, "start": 897.56, "end": 905.7199999999999, "text": " Do you start with writing a bunch of vertexes and attributes or what is your process?", "tokens": [50364, 570, 562, 291, 643, 281, 360, 746, 294, 805, 35, 11, 577, 360, 291, 519, 30, 50584, 50584, 708, 360, 291, 722, 365, 30, 50634, 50634, 1144, 291, 722, 365, 3579, 257, 3840, 295, 28162, 279, 293, 17212, 420, 437, 307, 428, 1399, 30, 51042, 51042, 1779, 13, 51092, 51092, 1743, 1310, 321, 643, 281, 6964, 437, 300, 746, 307, 570, 309, 815, 5672, 322, 300, 13, 51386, 51386, 1743, 11, 370, 393, 291, 519, 295, 364, 1365, 30, 51590, 51590, 961, 311, 584, 291, 528, 281, 2642, 257, 13728, 420, 257, 13369, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.23730680893878547, "compression_ratio": 1.6384976525821595, "no_caption_prob": 0.00013550740550272167}, {"id": 226, "seek": 89216, "start": 905.7199999999999, "end": 906.7199999999999, "text": " Right.", "tokens": [50364, 570, 562, 291, 643, 281, 360, 746, 294, 805, 35, 11, 577, 360, 291, 519, 30, 50584, 50584, 708, 360, 291, 722, 365, 30, 50634, 50634, 1144, 291, 722, 365, 3579, 257, 3840, 295, 28162, 279, 293, 17212, 420, 437, 307, 428, 1399, 30, 51042, 51042, 1779, 13, 51092, 51092, 1743, 1310, 321, 643, 281, 6964, 437, 300, 746, 307, 570, 309, 815, 5672, 322, 300, 13, 51386, 51386, 1743, 11, 370, 393, 291, 519, 295, 364, 1365, 30, 51590, 51590, 961, 311, 584, 291, 528, 281, 2642, 257, 13728, 420, 257, 13369, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.23730680893878547, "compression_ratio": 1.6384976525821595, "no_caption_prob": 0.00013550740550272167}, {"id": 227, "seek": 89216, "start": 906.7199999999999, "end": 912.6, "text": " Like maybe we need to define what that something is because it may depend on that.", "tokens": [50364, 570, 562, 291, 643, 281, 360, 746, 294, 805, 35, 11, 577, 360, 291, 519, 30, 50584, 50584, 708, 360, 291, 722, 365, 30, 50634, 50634, 1144, 291, 722, 365, 3579, 257, 3840, 295, 28162, 279, 293, 17212, 420, 437, 307, 428, 1399, 30, 51042, 51042, 1779, 13, 51092, 51092, 1743, 1310, 321, 643, 281, 6964, 437, 300, 746, 307, 570, 309, 815, 5672, 322, 300, 13, 51386, 51386, 1743, 11, 370, 393, 291, 519, 295, 364, 1365, 30, 51590, 51590, 961, 311, 584, 291, 528, 281, 2642, 257, 13728, 420, 257, 13369, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.23730680893878547, "compression_ratio": 1.6384976525821595, "no_caption_prob": 0.00013550740550272167}, {"id": 228, "seek": 89216, "start": 912.6, "end": 916.68, "text": " Like, so can you think of an example?", "tokens": [50364, 570, 562, 291, 643, 281, 360, 746, 294, 805, 35, 11, 577, 360, 291, 519, 30, 50584, 50584, 708, 360, 291, 722, 365, 30, 50634, 50634, 1144, 291, 722, 365, 3579, 257, 3840, 295, 28162, 279, 293, 17212, 420, 437, 307, 428, 1399, 30, 51042, 51042, 1779, 13, 51092, 51092, 1743, 1310, 321, 643, 281, 6964, 437, 300, 746, 307, 570, 309, 815, 5672, 322, 300, 13, 51386, 51386, 1743, 11, 370, 393, 291, 519, 295, 364, 1365, 30, 51590, 51590, 961, 311, 584, 291, 528, 281, 2642, 257, 13728, 420, 257, 13369, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.23730680893878547, "compression_ratio": 1.6384976525821595, "no_caption_prob": 0.00013550740550272167}, {"id": 229, "seek": 89216, "start": 916.68, "end": 920.1999999999999, "text": " Let's say you want to draw a cube or a triangle.", "tokens": [50364, 570, 562, 291, 643, 281, 360, 746, 294, 805, 35, 11, 577, 360, 291, 519, 30, 50584, 50584, 708, 360, 291, 722, 365, 30, 50634, 50634, 1144, 291, 722, 365, 3579, 257, 3840, 295, 28162, 279, 293, 17212, 420, 437, 307, 428, 1399, 30, 51042, 51042, 1779, 13, 51092, 51092, 1743, 1310, 321, 643, 281, 6964, 437, 300, 746, 307, 570, 309, 815, 5672, 322, 300, 13, 51386, 51386, 1743, 11, 370, 393, 291, 519, 295, 364, 1365, 30, 51590, 51590, 961, 311, 584, 291, 528, 281, 2642, 257, 13728, 420, 257, 13369, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.23730680893878547, "compression_ratio": 1.6384976525821595, "no_caption_prob": 0.00013550740550272167}, {"id": 230, "seek": 92020, "start": 920.2, "end": 926.44, "text": " So well, then the first thing I would think of is like, I need to define a mesh for the", "tokens": [50364, 407, 731, 11, 550, 264, 700, 551, 286, 576, 519, 295, 307, 411, 11, 286, 643, 281, 6964, 257, 17407, 337, 264, 50676, 50676, 13728, 13, 50726, 50726, 407, 286, 643, 281, 23273, 309, 294, 805, 35, 293, 286, 643, 281, 2464, 760, 21056, 337, 439, 264, 29896, 51054, 51054, 300, 1254, 264, 13728, 13, 51156, 51156, 865, 13, 51206, 51206, 407, 264, 17407, 307, 445, 264, 11, 286, 528, 281, 584, 264, 4001, 10290, 295, 264, 805, 35, 2657, 11, 51584, 51584, 445, 411, 264, 2424, 11, 411, 689, 366, 264, 21056, 295, 633, 935, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14471428937251024, "compression_ratio": 1.6869158878504673, "no_caption_prob": 4.198035458102822e-05}, {"id": 231, "seek": 92020, "start": 926.44, "end": 927.44, "text": " cube.", "tokens": [50364, 407, 731, 11, 550, 264, 700, 551, 286, 576, 519, 295, 307, 411, 11, 286, 643, 281, 6964, 257, 17407, 337, 264, 50676, 50676, 13728, 13, 50726, 50726, 407, 286, 643, 281, 23273, 309, 294, 805, 35, 293, 286, 643, 281, 2464, 760, 21056, 337, 439, 264, 29896, 51054, 51054, 300, 1254, 264, 13728, 13, 51156, 51156, 865, 13, 51206, 51206, 407, 264, 17407, 307, 445, 264, 11, 286, 528, 281, 584, 264, 4001, 10290, 295, 264, 805, 35, 2657, 11, 51584, 51584, 445, 411, 264, 2424, 11, 411, 689, 366, 264, 21056, 295, 633, 935, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14471428937251024, "compression_ratio": 1.6869158878504673, "no_caption_prob": 4.198035458102822e-05}, {"id": 232, "seek": 92020, "start": 927.44, "end": 934.0, "text": " So I need to visualize it in 3D and I need to write down coordinates for all the triangles", "tokens": [50364, 407, 731, 11, 550, 264, 700, 551, 286, 576, 519, 295, 307, 411, 11, 286, 643, 281, 6964, 257, 17407, 337, 264, 50676, 50676, 13728, 13, 50726, 50726, 407, 286, 643, 281, 23273, 309, 294, 805, 35, 293, 286, 643, 281, 2464, 760, 21056, 337, 439, 264, 29896, 51054, 51054, 300, 1254, 264, 13728, 13, 51156, 51156, 865, 13, 51206, 51206, 407, 264, 17407, 307, 445, 264, 11, 286, 528, 281, 584, 264, 4001, 10290, 295, 264, 805, 35, 2657, 11, 51584, 51584, 445, 411, 264, 2424, 11, 411, 689, 366, 264, 21056, 295, 633, 935, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14471428937251024, "compression_ratio": 1.6869158878504673, "no_caption_prob": 4.198035458102822e-05}, {"id": 233, "seek": 92020, "start": 934.0, "end": 936.0400000000001, "text": " that form the cube.", "tokens": [50364, 407, 731, 11, 550, 264, 700, 551, 286, 576, 519, 295, 307, 411, 11, 286, 643, 281, 6964, 257, 17407, 337, 264, 50676, 50676, 13728, 13, 50726, 50726, 407, 286, 643, 281, 23273, 309, 294, 805, 35, 293, 286, 643, 281, 2464, 760, 21056, 337, 439, 264, 29896, 51054, 51054, 300, 1254, 264, 13728, 13, 51156, 51156, 865, 13, 51206, 51206, 407, 264, 17407, 307, 445, 264, 11, 286, 528, 281, 584, 264, 4001, 10290, 295, 264, 805, 35, 2657, 11, 51584, 51584, 445, 411, 264, 2424, 11, 411, 689, 366, 264, 21056, 295, 633, 935, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14471428937251024, "compression_ratio": 1.6869158878504673, "no_caption_prob": 4.198035458102822e-05}, {"id": 234, "seek": 92020, "start": 936.0400000000001, "end": 937.0400000000001, "text": " Yeah.", "tokens": [50364, 407, 731, 11, 550, 264, 700, 551, 286, 576, 519, 295, 307, 411, 11, 286, 643, 281, 6964, 257, 17407, 337, 264, 50676, 50676, 13728, 13, 50726, 50726, 407, 286, 643, 281, 23273, 309, 294, 805, 35, 293, 286, 643, 281, 2464, 760, 21056, 337, 439, 264, 29896, 51054, 51054, 300, 1254, 264, 13728, 13, 51156, 51156, 865, 13, 51206, 51206, 407, 264, 17407, 307, 445, 264, 11, 286, 528, 281, 584, 264, 4001, 10290, 295, 264, 805, 35, 2657, 11, 51584, 51584, 445, 411, 264, 2424, 11, 411, 689, 366, 264, 21056, 295, 633, 935, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14471428937251024, "compression_ratio": 1.6869158878504673, "no_caption_prob": 4.198035458102822e-05}, {"id": 235, "seek": 92020, "start": 937.0400000000001, "end": 944.6, "text": " So the mesh is just the, I want to say the physical representation of the 3D object,", "tokens": [50364, 407, 731, 11, 550, 264, 700, 551, 286, 576, 519, 295, 307, 411, 11, 286, 643, 281, 6964, 257, 17407, 337, 264, 50676, 50676, 13728, 13, 50726, 50726, 407, 286, 643, 281, 23273, 309, 294, 805, 35, 293, 286, 643, 281, 2464, 760, 21056, 337, 439, 264, 29896, 51054, 51054, 300, 1254, 264, 13728, 13, 51156, 51156, 865, 13, 51206, 51206, 407, 264, 17407, 307, 445, 264, 11, 286, 528, 281, 584, 264, 4001, 10290, 295, 264, 805, 35, 2657, 11, 51584, 51584, 445, 411, 264, 2424, 11, 411, 689, 366, 264, 21056, 295, 633, 935, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14471428937251024, "compression_ratio": 1.6869158878504673, "no_caption_prob": 4.198035458102822e-05}, {"id": 236, "seek": 92020, "start": 944.6, "end": 949.2, "text": " just like the box, like where are the coordinates of every point?", "tokens": [50364, 407, 731, 11, 550, 264, 700, 551, 286, 576, 519, 295, 307, 411, 11, 286, 643, 281, 6964, 257, 17407, 337, 264, 50676, 50676, 13728, 13, 50726, 50726, 407, 286, 643, 281, 23273, 309, 294, 805, 35, 293, 286, 643, 281, 2464, 760, 21056, 337, 439, 264, 29896, 51054, 51054, 300, 1254, 264, 13728, 13, 51156, 51156, 865, 13, 51206, 51206, 407, 264, 17407, 307, 445, 264, 11, 286, 528, 281, 584, 264, 4001, 10290, 295, 264, 805, 35, 2657, 11, 51584, 51584, 445, 411, 264, 2424, 11, 411, 689, 366, 264, 21056, 295, 633, 935, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14471428937251024, "compression_ratio": 1.6869158878504673, "no_caption_prob": 4.198035458102822e-05}, {"id": 237, "seek": 94920, "start": 949.2, "end": 950.44, "text": " That is a mesh, right?", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 238, "seek": 94920, "start": 950.44, "end": 951.74, "text": " In the simple form, yes.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 239, "seek": 94920, "start": 951.74, "end": 954.9200000000001, "text": " But like what you say coordinate is, it's an attribute.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 240, "seek": 94920, "start": 954.9200000000001, "end": 959.4000000000001, "text": " It's a record where you may have coordinates and you may have something else, whatever", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 241, "seek": 94920, "start": 959.4000000000001, "end": 961.6400000000001, "text": " you want to attach to it.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 242, "seek": 94920, "start": 961.6400000000001, "end": 962.6400000000001, "text": " All right.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 243, "seek": 94920, "start": 962.6400000000001, "end": 968.48, "text": " And a mesh is a list of, how do you say, triplet, like a tuple of three.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 244, "seek": 94920, "start": 968.48, "end": 969.48, "text": " Right.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 245, "seek": 94920, "start": 969.48, "end": 970.48, "text": " Yeah.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 246, "seek": 94920, "start": 970.48, "end": 971.48, "text": " Triplet.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 247, "seek": 94920, "start": 971.48, "end": 972.6800000000001, "text": " So it's a list of those.", "tokens": [50364, 663, 307, 257, 17407, 11, 558, 30, 50426, 50426, 682, 264, 2199, 1254, 11, 2086, 13, 50491, 50491, 583, 411, 437, 291, 584, 15670, 307, 11, 309, 311, 364, 19667, 13, 50650, 50650, 467, 311, 257, 2136, 689, 291, 815, 362, 21056, 293, 291, 815, 362, 746, 1646, 11, 2035, 50874, 50874, 291, 528, 281, 5085, 281, 309, 13, 50986, 50986, 1057, 558, 13, 51036, 51036, 400, 257, 17407, 307, 257, 1329, 295, 11, 577, 360, 291, 584, 11, 1376, 14657, 11, 411, 257, 2604, 781, 295, 1045, 13, 51328, 51328, 1779, 13, 51378, 51378, 865, 13, 51428, 51428, 10931, 14657, 13, 51478, 51478, 407, 309, 311, 257, 1329, 295, 729, 13, 51538, 51538], "temperature": 0.0, "avg_logprob": -0.20368574405538625, "compression_ratio": 1.6445497630331753, "no_caption_prob": 4.832309787161648e-05}, {"id": 248, "seek": 97268, "start": 972.68, "end": 980.92, "text": " And each of the components of that triplet is this record type that you define yourself.", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 249, "seek": 97268, "start": 980.92, "end": 981.92, "text": " Okay.", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 250, "seek": 97268, "start": 981.92, "end": 989.4, "text": " Which often contains the position or the original position and then some additional information", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 251, "seek": 97268, "start": 989.4, "end": 990.4, "text": " if needed.", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 252, "seek": 97268, "start": 990.4, "end": 991.4, "text": " And color.", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 253, "seek": 97268, "start": 991.4, "end": 992.4, "text": " Yeah.", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 254, "seek": 97268, "start": 992.4, "end": 993.4, "text": " Right.", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 255, "seek": 97268, "start": 993.4, "end": 994.4, "text": " Yeah.", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 256, "seek": 97268, "start": 994.4, "end": 998.56, "text": " I see that in this like simple cube example, there's like right front top, left front", "tokens": [50364, 400, 1184, 295, 264, 6677, 295, 300, 1376, 14657, 307, 341, 2136, 2010, 300, 291, 6964, 1803, 13, 50776, 50776, 1033, 13, 50826, 50826, 3013, 2049, 8306, 264, 2535, 420, 264, 3380, 2535, 293, 550, 512, 4497, 1589, 51200, 51200, 498, 2978, 13, 51250, 51250, 400, 2017, 13, 51300, 51300, 865, 13, 51350, 51350, 1779, 13, 51400, 51400, 865, 13, 51450, 51450, 286, 536, 300, 294, 341, 411, 2199, 13728, 1365, 11, 456, 311, 411, 558, 1868, 1192, 11, 1411, 1868, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.1569282195147346, "compression_ratio": 1.585, "no_caption_prob": 2.6273966795997694e-05}, {"id": 257, "seek": 99856, "start": 998.56, "end": 1004.3599999999999, "text": " top, left back top, et cetera, et cetera, for all the three dimensional points that", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 258, "seek": 99856, "start": 1004.3599999999999, "end": 1006.0799999999999, "text": " you would map out for a cube.", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 259, "seek": 99856, "start": 1006.0799999999999, "end": 1012.0799999999999, "text": " And then it's creating a face that is stretching from each of those with these three point", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 260, "seek": 99856, "start": 1012.0799999999999, "end": 1013.0799999999999, "text": " vectors.", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 261, "seek": 99856, "start": 1013.0799999999999, "end": 1014.0799999999999, "text": " Yeah.", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 262, "seek": 99856, "start": 1014.0799999999999, "end": 1018.4799999999999, "text": " Like when constructing a cube, I think you can be like more clever.", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 263, "seek": 99856, "start": 1018.4799999999999, "end": 1022.3199999999999, "text": " Maybe you define one, maybe define a square.", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 264, "seek": 99856, "start": 1022.3199999999999, "end": 1027.2, "text": " And then if you know like how to transform that, how to do like a rotation, maybe then", "tokens": [50364, 1192, 11, 1411, 646, 1192, 11, 1030, 11458, 11, 1030, 11458, 11, 337, 439, 264, 1045, 18795, 2793, 300, 50654, 50654, 291, 576, 4471, 484, 337, 257, 13728, 13, 50740, 50740, 400, 550, 309, 311, 4084, 257, 1851, 300, 307, 19632, 490, 1184, 295, 729, 365, 613, 1045, 935, 51040, 51040, 18875, 13, 51090, 51090, 865, 13, 51140, 51140, 1743, 562, 39969, 257, 13728, 11, 286, 519, 291, 393, 312, 411, 544, 13494, 13, 51360, 51360, 2704, 291, 6964, 472, 11, 1310, 6964, 257, 3732, 13, 51552, 51552, 400, 550, 498, 291, 458, 411, 577, 281, 4088, 300, 11, 577, 281, 360, 411, 257, 12447, 11, 1310, 550, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.12829157284327916, "compression_ratio": 1.7242798353909465, "no_caption_prob": 4.0059494494926184e-05}, {"id": 265, "seek": 102720, "start": 1027.2, "end": 1029.1200000000001, "text": " you can define all the sides of the cube.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 266, "seek": 102720, "start": 1029.1200000000001, "end": 1034.16, "text": " I think there is in one of the examples, I think there was this kind of implementation.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 267, "seek": 102720, "start": 1034.16, "end": 1036.52, "text": " Yeah, I can confirm.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 268, "seek": 102720, "start": 1036.52, "end": 1040.44, "text": " Or you just write it down, like all the coordinates.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 269, "seek": 102720, "start": 1040.44, "end": 1041.44, "text": " Wow.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 270, "seek": 102720, "start": 1041.44, "end": 1044.8, "text": " There are so many different skills in this world.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 271, "seek": 102720, "start": 1044.8, "end": 1053.96, "text": " Like there's the geometry and these mathematical transformations and the textures, the 3D stuff.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 272, "seek": 102720, "start": 1053.96, "end": 1055.64, "text": " That's really interesting.", "tokens": [50364, 291, 393, 6964, 439, 264, 4881, 295, 264, 13728, 13, 50460, 50460, 286, 519, 456, 307, 294, 472, 295, 264, 5110, 11, 286, 519, 456, 390, 341, 733, 295, 11420, 13, 50712, 50712, 865, 11, 286, 393, 9064, 13, 50830, 50830, 1610, 291, 445, 2464, 309, 760, 11, 411, 439, 264, 21056, 13, 51026, 51026, 3153, 13, 51076, 51076, 821, 366, 370, 867, 819, 3942, 294, 341, 1002, 13, 51244, 51244, 1743, 456, 311, 264, 18426, 293, 613, 18894, 34852, 293, 264, 24501, 11, 264, 805, 35, 1507, 13, 51702, 51702, 663, 311, 534, 1880, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20142593383789062, "compression_ratio": 1.598326359832636, "no_caption_prob": 6.204049714142457e-05}, {"id": 273, "seek": 105564, "start": 1055.64, "end": 1062.48, "text": " So if we talk about textures, that is another thing in WebGL.", "tokens": [50364, 407, 498, 321, 751, 466, 24501, 11, 300, 307, 1071, 551, 294, 9573, 19440, 13, 50706, 50706, 407, 718, 311, 584, 498, 291, 528, 281, 362, 257, 48656, 13728, 11, 550, 291, 1062, 528, 281, 6269, 8091, 51090, 51090, 21056, 281, 1184, 295, 264, 1851, 11, 597, 1355, 1936, 689, 341, 28162, 393, 312, 1352, 322, 51460, 51460, 257, 8091, 11, 322, 364, 3256, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.12938684657000113, "compression_ratio": 1.5232558139534884, "no_caption_prob": 1.4966893104428891e-05}, {"id": 274, "seek": 105564, "start": 1062.48, "end": 1070.16, "text": " So let's say if you want to have a textured cube, then you might want to assign texture", "tokens": [50364, 407, 498, 321, 751, 466, 24501, 11, 300, 307, 1071, 551, 294, 9573, 19440, 13, 50706, 50706, 407, 718, 311, 584, 498, 291, 528, 281, 362, 257, 48656, 13728, 11, 550, 291, 1062, 528, 281, 6269, 8091, 51090, 51090, 21056, 281, 1184, 295, 264, 1851, 11, 597, 1355, 1936, 689, 341, 28162, 393, 312, 1352, 322, 51460, 51460, 257, 8091, 11, 322, 364, 3256, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.12938684657000113, "compression_ratio": 1.5232558139534884, "no_caption_prob": 1.4966893104428891e-05}, {"id": 275, "seek": 105564, "start": 1070.16, "end": 1077.5600000000002, "text": " coordinates to each of the face, which means basically where this vertex can be found on", "tokens": [50364, 407, 498, 321, 751, 466, 24501, 11, 300, 307, 1071, 551, 294, 9573, 19440, 13, 50706, 50706, 407, 718, 311, 584, 498, 291, 528, 281, 362, 257, 48656, 13728, 11, 550, 291, 1062, 528, 281, 6269, 8091, 51090, 51090, 21056, 281, 1184, 295, 264, 1851, 11, 597, 1355, 1936, 689, 341, 28162, 393, 312, 1352, 322, 51460, 51460, 257, 8091, 11, 322, 364, 3256, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.12938684657000113, "compression_ratio": 1.5232558139534884, "no_caption_prob": 1.4966893104428891e-05}, {"id": 276, "seek": 105564, "start": 1077.5600000000002, "end": 1079.76, "text": " a texture, on an image.", "tokens": [50364, 407, 498, 321, 751, 466, 24501, 11, 300, 307, 1071, 551, 294, 9573, 19440, 13, 50706, 50706, 407, 718, 311, 584, 498, 291, 528, 281, 362, 257, 48656, 13728, 11, 550, 291, 1062, 528, 281, 6269, 8091, 51090, 51090, 21056, 281, 1184, 295, 264, 1851, 11, 597, 1355, 1936, 689, 341, 28162, 393, 312, 1352, 322, 51460, 51460, 257, 8091, 11, 322, 364, 3256, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.12938684657000113, "compression_ratio": 1.5232558139534884, "no_caption_prob": 1.4966893104428891e-05}, {"id": 277, "seek": 107976, "start": 1079.76, "end": 1085.72, "text": " And then you can use this information in the fragment shader that determines the output", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 278, "seek": 107976, "start": 1085.72, "end": 1092.2, "text": " color and you can pass the texture as a uniform and then you can do a lookup using this coordinate.", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 279, "seek": 107976, "start": 1092.2, "end": 1097.36, "text": " You can find where that pixel is and take its color and return it.", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 280, "seek": 107976, "start": 1097.36, "end": 1100.64, "text": " Then you get like a textured rendering of a cube.", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 281, "seek": 107976, "start": 1100.64, "end": 1101.64, "text": " Okay.", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 282, "seek": 107976, "start": 1101.64, "end": 1105.0, "text": " And that's how we apply a texture on a face or...", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 283, "seek": 107976, "start": 1105.0, "end": 1106.18, "text": " Okay.", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 284, "seek": 107976, "start": 1106.18, "end": 1109.58, "text": " So you have your mesh for your cube.", "tokens": [50364, 400, 550, 291, 393, 764, 341, 1589, 294, 264, 26424, 5744, 260, 300, 24799, 264, 5598, 50662, 50662, 2017, 293, 291, 393, 1320, 264, 8091, 382, 257, 9452, 293, 550, 291, 393, 360, 257, 574, 1010, 1228, 341, 15670, 13, 50986, 50986, 509, 393, 915, 689, 300, 19261, 307, 293, 747, 1080, 2017, 293, 2736, 309, 13, 51244, 51244, 1396, 291, 483, 411, 257, 48656, 22407, 295, 257, 13728, 13, 51408, 51408, 1033, 13, 51458, 51458, 400, 300, 311, 577, 321, 3079, 257, 8091, 322, 257, 1851, 420, 485, 51626, 51626, 1033, 13, 51685, 51685, 407, 291, 362, 428, 17407, 337, 428, 13728, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.2075420485602485, "compression_ratio": 1.7370689655172413, "no_caption_prob": 6.012625453877263e-05}, {"id": 285, "seek": 110958, "start": 1109.58, "end": 1110.6399999999999, "text": " What else?", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 286, "seek": 110958, "start": 1110.6399999999999, "end": 1111.76, "text": " What happens next?", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 287, "seek": 110958, "start": 1111.76, "end": 1113.3999999999999, "text": " So then you need to think of the scene.", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 288, "seek": 110958, "start": 1113.3999999999999, "end": 1114.8799999999999, "text": " You need to set up a scene.", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 289, "seek": 110958, "start": 1114.8799999999999, "end": 1118.84, "text": " So you probably think of, do you need to move the cube around?", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 290, "seek": 110958, "start": 1118.84, "end": 1120.84, "text": " Do you want to have...", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 291, "seek": 110958, "start": 1120.84, "end": 1122.36, "text": " Where do you position the camera?", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 292, "seek": 110958, "start": 1122.36, "end": 1125.0, "text": " Where the camera is looking at?", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 293, "seek": 110958, "start": 1125.0, "end": 1130.82, "text": " And in the role of WebGL API, that would be all matrices that define this.", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 294, "seek": 110958, "start": 1130.82, "end": 1137.28, "text": " So you may want to have like a transformation matrix that you want to apply to your cube.", "tokens": [50364, 708, 1646, 30, 50417, 50417, 708, 2314, 958, 30, 50473, 50473, 407, 550, 291, 643, 281, 519, 295, 264, 4145, 13, 50555, 50555, 509, 643, 281, 992, 493, 257, 4145, 13, 50629, 50629, 407, 291, 1391, 519, 295, 11, 360, 291, 643, 281, 1286, 264, 13728, 926, 30, 50827, 50827, 1144, 291, 528, 281, 362, 485, 50927, 50927, 2305, 360, 291, 2535, 264, 2799, 30, 51003, 51003, 2305, 264, 2799, 307, 1237, 412, 30, 51135, 51135, 400, 294, 264, 3090, 295, 9573, 19440, 9362, 11, 300, 576, 312, 439, 32284, 300, 6964, 341, 13, 51426, 51426, 407, 291, 815, 528, 281, 362, 411, 257, 9887, 8141, 300, 291, 528, 281, 3079, 281, 428, 13728, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1515318766361525, "compression_ratio": 1.7542372881355932, "no_caption_prob": 0.0001054704625857994}, {"id": 295, "seek": 113728, "start": 1137.28, "end": 1143.28, "text": " If you define a cube in its own local coordinate system, like I don't know, based on zero,", "tokens": [50364, 759, 291, 6964, 257, 13728, 294, 1080, 1065, 2654, 15670, 1185, 11, 411, 286, 500, 380, 458, 11, 2361, 322, 4018, 11, 50664, 50664, 558, 30, 50714, 50714, 1396, 291, 1062, 528, 281, 1286, 309, 926, 420, 498, 291, 362, 867, 25415, 293, 291, 815, 362, 11, 291, 50958, 50958, 815, 2535, 552, 294, 805, 35, 13, 51154, 51154, 663, 307, 7642, 538, 8141, 300, 35592, 490, 2654, 666, 1002, 15670, 1185, 13, 51511, 51511, 1119, 456, 604, 10286, 365, 411, 264, 398, 10298, 516, 39880, 382, 309, 13156, 3353, 420, 775, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.23588675260543823, "compression_ratio": 1.6144067796610169, "no_caption_prob": 2.1781928808195516e-05}, {"id": 296, "seek": 113728, "start": 1143.28, "end": 1144.28, "text": " right?", "tokens": [50364, 759, 291, 6964, 257, 13728, 294, 1080, 1065, 2654, 15670, 1185, 11, 411, 286, 500, 380, 458, 11, 2361, 322, 4018, 11, 50664, 50664, 558, 30, 50714, 50714, 1396, 291, 1062, 528, 281, 1286, 309, 926, 420, 498, 291, 362, 867, 25415, 293, 291, 815, 362, 11, 291, 50958, 50958, 815, 2535, 552, 294, 805, 35, 13, 51154, 51154, 663, 307, 7642, 538, 8141, 300, 35592, 490, 2654, 666, 1002, 15670, 1185, 13, 51511, 51511, 1119, 456, 604, 10286, 365, 411, 264, 398, 10298, 516, 39880, 382, 309, 13156, 3353, 420, 775, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.23588675260543823, "compression_ratio": 1.6144067796610169, "no_caption_prob": 2.1781928808195516e-05}, {"id": 297, "seek": 113728, "start": 1144.28, "end": 1149.16, "text": " Then you might want to move it around or if you have many cubes and you may have, you", "tokens": [50364, 759, 291, 6964, 257, 13728, 294, 1080, 1065, 2654, 15670, 1185, 11, 411, 286, 500, 380, 458, 11, 2361, 322, 4018, 11, 50664, 50664, 558, 30, 50714, 50714, 1396, 291, 1062, 528, 281, 1286, 309, 926, 420, 498, 291, 362, 867, 25415, 293, 291, 815, 362, 11, 291, 50958, 50958, 815, 2535, 552, 294, 805, 35, 13, 51154, 51154, 663, 307, 7642, 538, 8141, 300, 35592, 490, 2654, 666, 1002, 15670, 1185, 13, 51511, 51511, 1119, 456, 604, 10286, 365, 411, 264, 398, 10298, 516, 39880, 382, 309, 13156, 3353, 420, 775, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.23588675260543823, "compression_ratio": 1.6144067796610169, "no_caption_prob": 2.1781928808195516e-05}, {"id": 298, "seek": 113728, "start": 1149.16, "end": 1153.08, "text": " may position them in 3D.", "tokens": [50364, 759, 291, 6964, 257, 13728, 294, 1080, 1065, 2654, 15670, 1185, 11, 411, 286, 500, 380, 458, 11, 2361, 322, 4018, 11, 50664, 50664, 558, 30, 50714, 50714, 1396, 291, 1062, 528, 281, 1286, 309, 926, 420, 498, 291, 362, 867, 25415, 293, 291, 815, 362, 11, 291, 50958, 50958, 815, 2535, 552, 294, 805, 35, 13, 51154, 51154, 663, 307, 7642, 538, 8141, 300, 35592, 490, 2654, 666, 1002, 15670, 1185, 13, 51511, 51511, 1119, 456, 604, 10286, 365, 411, 264, 398, 10298, 516, 39880, 382, 309, 13156, 3353, 420, 775, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.23588675260543823, "compression_ratio": 1.6144067796610169, "no_caption_prob": 2.1781928808195516e-05}, {"id": 299, "seek": 113728, "start": 1153.08, "end": 1160.22, "text": " That is defined by matrix that transforms from local into world coordinate system.", "tokens": [50364, 759, 291, 6964, 257, 13728, 294, 1080, 1065, 2654, 15670, 1185, 11, 411, 286, 500, 380, 458, 11, 2361, 322, 4018, 11, 50664, 50664, 558, 30, 50714, 50714, 1396, 291, 1062, 528, 281, 1286, 309, 926, 420, 498, 291, 362, 867, 25415, 293, 291, 815, 362, 11, 291, 50958, 50958, 815, 2535, 552, 294, 805, 35, 13, 51154, 51154, 663, 307, 7642, 538, 8141, 300, 35592, 490, 2654, 666, 1002, 15670, 1185, 13, 51511, 51511, 1119, 456, 604, 10286, 365, 411, 264, 398, 10298, 516, 39880, 382, 309, 13156, 3353, 420, 775, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.23588675260543823, "compression_ratio": 1.6144067796610169, "no_caption_prob": 2.1781928808195516e-05}, {"id": 300, "seek": 113728, "start": 1160.22, "end": 1166.92, "text": " Is there any convention with like the Y axis going downwards as it grows positive or does", "tokens": [50364, 759, 291, 6964, 257, 13728, 294, 1080, 1065, 2654, 15670, 1185, 11, 411, 286, 500, 380, 458, 11, 2361, 322, 4018, 11, 50664, 50664, 558, 30, 50714, 50714, 1396, 291, 1062, 528, 281, 1286, 309, 926, 420, 498, 291, 362, 867, 25415, 293, 291, 815, 362, 11, 291, 50958, 50958, 815, 2535, 552, 294, 805, 35, 13, 51154, 51154, 663, 307, 7642, 538, 8141, 300, 35592, 490, 2654, 666, 1002, 15670, 1185, 13, 51511, 51511, 1119, 456, 604, 10286, 365, 411, 264, 398, 10298, 516, 39880, 382, 309, 13156, 3353, 420, 775, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.23588675260543823, "compression_ratio": 1.6144067796610169, "no_caption_prob": 2.1781928808195516e-05}, {"id": 301, "seek": 116692, "start": 1166.92, "end": 1170.04, "text": " it grow up as it grows positive?", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 302, "seek": 116692, "start": 1170.04, "end": 1176.68, "text": " There's like, usually I think I would use that up.", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 303, "seek": 116692, "start": 1176.68, "end": 1177.68, "text": " Okay.", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 304, "seek": 116692, "start": 1177.68, "end": 1178.68, "text": " Yeah.", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 305, "seek": 116692, "start": 1178.68, "end": 1179.68, "text": " So the intuitive thing.", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 306, "seek": 116692, "start": 1179.68, "end": 1183.3600000000001, "text": " X to the right and Y from the camera.", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 307, "seek": 116692, "start": 1183.3600000000001, "end": 1186.48, "text": " I think this is what I would use.", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 308, "seek": 116692, "start": 1186.48, "end": 1192.52, "text": " But I think you're not really, you're not restricted because you can do all these transformations", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 309, "seek": 116692, "start": 1192.52, "end": 1194.2, "text": " for the matrices.", "tokens": [50364, 309, 1852, 493, 382, 309, 13156, 3353, 30, 50520, 50520, 821, 311, 411, 11, 2673, 286, 519, 286, 576, 764, 300, 493, 13, 50852, 50852, 1033, 13, 50902, 50902, 865, 13, 50952, 50952, 407, 264, 21769, 551, 13, 51002, 51002, 1783, 281, 264, 558, 293, 398, 490, 264, 2799, 13, 51186, 51186, 286, 519, 341, 307, 437, 286, 576, 764, 13, 51342, 51342, 583, 286, 519, 291, 434, 406, 534, 11, 291, 434, 406, 20608, 570, 291, 393, 360, 439, 613, 34852, 51644, 51644, 337, 264, 32284, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.24060141521951425, "compression_ratio": 1.566326530612245, "no_caption_prob": 4.5395438064588234e-05}, {"id": 310, "seek": 119420, "start": 1194.2, "end": 1198.72, "text": " Like you can flip the axis, you can do whatever you want.", "tokens": [50364, 1743, 291, 393, 7929, 264, 10298, 11, 291, 393, 360, 2035, 291, 528, 13, 50590, 50590, 1779, 13, 50640, 50640, 400, 291, 727, 1884, 512, 18350, 295, 957, 1002, 6815, 13, 50826, 50826, 1743, 286, 600, 2198, 19595, 21765, 32203, 751, 466, 1382, 281, 764, 957, 1002, 6815, 281, 2316, 721, 13, 51094, 51094, 865, 11, 3297, 13, 51230, 51230, 407, 341, 307, 264, 700, 8141, 11, 718, 311, 584, 264, 8141, 300, 6067, 926, 6565, 294, 264, 1002, 11, 51562, 51562, 411, 8432, 552, 11, 42133, 552, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.21906335892215853, "compression_ratio": 1.551111111111111, "no_caption_prob": 4.9854086682898924e-05}, {"id": 311, "seek": 119420, "start": 1198.72, "end": 1199.72, "text": " Right.", "tokens": [50364, 1743, 291, 393, 7929, 264, 10298, 11, 291, 393, 360, 2035, 291, 528, 13, 50590, 50590, 1779, 13, 50640, 50640, 400, 291, 727, 1884, 512, 18350, 295, 957, 1002, 6815, 13, 50826, 50826, 1743, 286, 600, 2198, 19595, 21765, 32203, 751, 466, 1382, 281, 764, 957, 1002, 6815, 281, 2316, 721, 13, 51094, 51094, 865, 11, 3297, 13, 51230, 51230, 407, 341, 307, 264, 700, 8141, 11, 718, 311, 584, 264, 8141, 300, 6067, 926, 6565, 294, 264, 1002, 11, 51562, 51562, 411, 8432, 552, 11, 42133, 552, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.21906335892215853, "compression_ratio": 1.551111111111111, "no_caption_prob": 4.9854086682898924e-05}, {"id": 312, "seek": 119420, "start": 1199.72, "end": 1203.44, "text": " And you could create some mapping of real world units.", "tokens": [50364, 1743, 291, 393, 7929, 264, 10298, 11, 291, 393, 360, 2035, 291, 528, 13, 50590, 50590, 1779, 13, 50640, 50640, 400, 291, 727, 1884, 512, 18350, 295, 957, 1002, 6815, 13, 50826, 50826, 1743, 286, 600, 2198, 19595, 21765, 32203, 751, 466, 1382, 281, 764, 957, 1002, 6815, 281, 2316, 721, 13, 51094, 51094, 865, 11, 3297, 13, 51230, 51230, 407, 341, 307, 264, 700, 8141, 11, 718, 311, 584, 264, 8141, 300, 6067, 926, 6565, 294, 264, 1002, 11, 51562, 51562, 411, 8432, 552, 11, 42133, 552, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.21906335892215853, "compression_ratio": 1.551111111111111, "no_caption_prob": 4.9854086682898924e-05}, {"id": 313, "seek": 119420, "start": 1203.44, "end": 1208.8, "text": " Like I've heard Ian McKenzie talk about trying to use real world units to model things.", "tokens": [50364, 1743, 291, 393, 7929, 264, 10298, 11, 291, 393, 360, 2035, 291, 528, 13, 50590, 50590, 1779, 13, 50640, 50640, 400, 291, 727, 1884, 512, 18350, 295, 957, 1002, 6815, 13, 50826, 50826, 1743, 286, 600, 2198, 19595, 21765, 32203, 751, 466, 1382, 281, 764, 957, 1002, 6815, 281, 2316, 721, 13, 51094, 51094, 865, 11, 3297, 13, 51230, 51230, 407, 341, 307, 264, 700, 8141, 11, 718, 311, 584, 264, 8141, 300, 6067, 926, 6565, 294, 264, 1002, 11, 51562, 51562, 411, 8432, 552, 11, 42133, 552, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.21906335892215853, "compression_ratio": 1.551111111111111, "no_caption_prob": 4.9854086682898924e-05}, {"id": 314, "seek": 119420, "start": 1208.8, "end": 1211.52, "text": " Yeah, certainly.", "tokens": [50364, 1743, 291, 393, 7929, 264, 10298, 11, 291, 393, 360, 2035, 291, 528, 13, 50590, 50590, 1779, 13, 50640, 50640, 400, 291, 727, 1884, 512, 18350, 295, 957, 1002, 6815, 13, 50826, 50826, 1743, 286, 600, 2198, 19595, 21765, 32203, 751, 466, 1382, 281, 764, 957, 1002, 6815, 281, 2316, 721, 13, 51094, 51094, 865, 11, 3297, 13, 51230, 51230, 407, 341, 307, 264, 700, 8141, 11, 718, 311, 584, 264, 8141, 300, 6067, 926, 6565, 294, 264, 1002, 11, 51562, 51562, 411, 8432, 552, 11, 42133, 552, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.21906335892215853, "compression_ratio": 1.551111111111111, "no_caption_prob": 4.9854086682898924e-05}, {"id": 315, "seek": 119420, "start": 1211.52, "end": 1218.16, "text": " So this is the first matrix, let's say the matrix that moves around objects in the world,", "tokens": [50364, 1743, 291, 393, 7929, 264, 10298, 11, 291, 393, 360, 2035, 291, 528, 13, 50590, 50590, 1779, 13, 50640, 50640, 400, 291, 727, 1884, 512, 18350, 295, 957, 1002, 6815, 13, 50826, 50826, 1743, 286, 600, 2198, 19595, 21765, 32203, 751, 466, 1382, 281, 764, 957, 1002, 6815, 281, 2316, 721, 13, 51094, 51094, 865, 11, 3297, 13, 51230, 51230, 407, 341, 307, 264, 700, 8141, 11, 718, 311, 584, 264, 8141, 300, 6067, 926, 6565, 294, 264, 1002, 11, 51562, 51562, 411, 8432, 552, 11, 42133, 552, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.21906335892215853, "compression_ratio": 1.551111111111111, "no_caption_prob": 4.9854086682898924e-05}, {"id": 316, "seek": 119420, "start": 1218.16, "end": 1220.32, "text": " like positions them, rotates them.", "tokens": [50364, 1743, 291, 393, 7929, 264, 10298, 11, 291, 393, 360, 2035, 291, 528, 13, 50590, 50590, 1779, 13, 50640, 50640, 400, 291, 727, 1884, 512, 18350, 295, 957, 1002, 6815, 13, 50826, 50826, 1743, 286, 600, 2198, 19595, 21765, 32203, 751, 466, 1382, 281, 764, 957, 1002, 6815, 281, 2316, 721, 13, 51094, 51094, 865, 11, 3297, 13, 51230, 51230, 407, 341, 307, 264, 700, 8141, 11, 718, 311, 584, 264, 8141, 300, 6067, 926, 6565, 294, 264, 1002, 11, 51562, 51562, 411, 8432, 552, 11, 42133, 552, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.21906335892215853, "compression_ratio": 1.551111111111111, "no_caption_prob": 4.9854086682898924e-05}, {"id": 317, "seek": 122032, "start": 1220.32, "end": 1225.9199999999998, "text": " You can compose, you can combine all this transformation in one matrix basically by", "tokens": [50364, 509, 393, 35925, 11, 291, 393, 10432, 439, 341, 9887, 294, 472, 8141, 1936, 538, 50644, 50644, 411, 700, 19627, 293, 550, 2684, 13, 50802, 50802, 286, 841, 411, 286, 478, 5361, 746, 13, 50880, 50880, 407, 291, 362, 428, 17407, 11, 291, 584, 300, 309, 311, 412, 2535, 1958, 11, 1958, 11, 1958, 11, 293, 550, 291, 700, 992, 257, 51290, 51290, 2799, 13, 51348, 51348, 1119, 300, 309, 30, 51398, 51398, 883, 11, 411, 700, 291, 815, 528, 281, 1286, 2657, 926, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.22861373558473053, "compression_ratio": 1.5808080808080809, "no_caption_prob": 7.140673551475629e-05}, {"id": 318, "seek": 122032, "start": 1225.9199999999998, "end": 1229.08, "text": " like first rotating and then moving.", "tokens": [50364, 509, 393, 35925, 11, 291, 393, 10432, 439, 341, 9887, 294, 472, 8141, 1936, 538, 50644, 50644, 411, 700, 19627, 293, 550, 2684, 13, 50802, 50802, 286, 841, 411, 286, 478, 5361, 746, 13, 50880, 50880, 407, 291, 362, 428, 17407, 11, 291, 584, 300, 309, 311, 412, 2535, 1958, 11, 1958, 11, 1958, 11, 293, 550, 291, 700, 992, 257, 51290, 51290, 2799, 13, 51348, 51348, 1119, 300, 309, 30, 51398, 51398, 883, 11, 411, 700, 291, 815, 528, 281, 1286, 2657, 926, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.22861373558473053, "compression_ratio": 1.5808080808080809, "no_caption_prob": 7.140673551475629e-05}, {"id": 319, "seek": 122032, "start": 1229.08, "end": 1230.6399999999999, "text": " I feel like I'm missing something.", "tokens": [50364, 509, 393, 35925, 11, 291, 393, 10432, 439, 341, 9887, 294, 472, 8141, 1936, 538, 50644, 50644, 411, 700, 19627, 293, 550, 2684, 13, 50802, 50802, 286, 841, 411, 286, 478, 5361, 746, 13, 50880, 50880, 407, 291, 362, 428, 17407, 11, 291, 584, 300, 309, 311, 412, 2535, 1958, 11, 1958, 11, 1958, 11, 293, 550, 291, 700, 992, 257, 51290, 51290, 2799, 13, 51348, 51348, 1119, 300, 309, 30, 51398, 51398, 883, 11, 411, 700, 291, 815, 528, 281, 1286, 2657, 926, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.22861373558473053, "compression_ratio": 1.5808080808080809, "no_caption_prob": 7.140673551475629e-05}, {"id": 320, "seek": 122032, "start": 1230.6399999999999, "end": 1238.84, "text": " So you have your mesh, you say that it's at position 0, 0, 0, and then you first set a", "tokens": [50364, 509, 393, 35925, 11, 291, 393, 10432, 439, 341, 9887, 294, 472, 8141, 1936, 538, 50644, 50644, 411, 700, 19627, 293, 550, 2684, 13, 50802, 50802, 286, 841, 411, 286, 478, 5361, 746, 13, 50880, 50880, 407, 291, 362, 428, 17407, 11, 291, 584, 300, 309, 311, 412, 2535, 1958, 11, 1958, 11, 1958, 11, 293, 550, 291, 700, 992, 257, 51290, 51290, 2799, 13, 51348, 51348, 1119, 300, 309, 30, 51398, 51398, 883, 11, 411, 700, 291, 815, 528, 281, 1286, 2657, 926, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.22861373558473053, "compression_ratio": 1.5808080808080809, "no_caption_prob": 7.140673551475629e-05}, {"id": 321, "seek": 122032, "start": 1238.84, "end": 1240.0, "text": " camera.", "tokens": [50364, 509, 393, 35925, 11, 291, 393, 10432, 439, 341, 9887, 294, 472, 8141, 1936, 538, 50644, 50644, 411, 700, 19627, 293, 550, 2684, 13, 50802, 50802, 286, 841, 411, 286, 478, 5361, 746, 13, 50880, 50880, 407, 291, 362, 428, 17407, 11, 291, 584, 300, 309, 311, 412, 2535, 1958, 11, 1958, 11, 1958, 11, 293, 550, 291, 700, 992, 257, 51290, 51290, 2799, 13, 51348, 51348, 1119, 300, 309, 30, 51398, 51398, 883, 11, 411, 700, 291, 815, 528, 281, 1286, 2657, 926, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.22861373558473053, "compression_ratio": 1.5808080808080809, "no_caption_prob": 7.140673551475629e-05}, {"id": 322, "seek": 122032, "start": 1240.0, "end": 1241.0, "text": " Is that it?", "tokens": [50364, 509, 393, 35925, 11, 291, 393, 10432, 439, 341, 9887, 294, 472, 8141, 1936, 538, 50644, 50644, 411, 700, 19627, 293, 550, 2684, 13, 50802, 50802, 286, 841, 411, 286, 478, 5361, 746, 13, 50880, 50880, 407, 291, 362, 428, 17407, 11, 291, 584, 300, 309, 311, 412, 2535, 1958, 11, 1958, 11, 1958, 11, 293, 550, 291, 700, 992, 257, 51290, 51290, 2799, 13, 51348, 51348, 1119, 300, 309, 30, 51398, 51398, 883, 11, 411, 700, 291, 815, 528, 281, 1286, 2657, 926, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.22861373558473053, "compression_ratio": 1.5808080808080809, "no_caption_prob": 7.140673551475629e-05}, {"id": 323, "seek": 122032, "start": 1241.0, "end": 1246.4399999999998, "text": " No, like first you may want to move object around.", "tokens": [50364, 509, 393, 35925, 11, 291, 393, 10432, 439, 341, 9887, 294, 472, 8141, 1936, 538, 50644, 50644, 411, 700, 19627, 293, 550, 2684, 13, 50802, 50802, 286, 841, 411, 286, 478, 5361, 746, 13, 50880, 50880, 407, 291, 362, 428, 17407, 11, 291, 584, 300, 309, 311, 412, 2535, 1958, 11, 1958, 11, 1958, 11, 293, 550, 291, 700, 992, 257, 51290, 51290, 2799, 13, 51348, 51348, 1119, 300, 309, 30, 51398, 51398, 883, 11, 411, 700, 291, 815, 528, 281, 1286, 2657, 926, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.22861373558473053, "compression_ratio": 1.5808080808080809, "no_caption_prob": 7.140673551475629e-05}, {"id": 324, "seek": 124644, "start": 1246.44, "end": 1252.72, "text": " If you want it to be positioned at 0, 0, 0 and just render it, then you don't need that.", "tokens": [50364, 759, 291, 528, 309, 281, 312, 24889, 412, 1958, 11, 1958, 11, 1958, 293, 445, 15529, 309, 11, 550, 291, 500, 380, 643, 300, 13, 50678, 50678, 1396, 439, 291, 643, 307, 411, 257, 2799, 9887, 13, 50876, 50876, 407, 300, 307, 411, 456, 307, 1071, 7372, 300, 291, 362, 281, 764, 11, 597, 307, 16197, 8213, 51286, 51286, 21989, 293, 300, 6417, 439, 264, 4420, 6828, 281, 6964, 411, 485, 51654, 51654, 1407, 411, 20459, 32284, 1936, 11, 558, 30, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2151375041288488, "compression_ratio": 1.5825688073394495, "no_caption_prob": 2.468148886691779e-05}, {"id": 325, "seek": 124644, "start": 1252.72, "end": 1256.68, "text": " Then all you need is like a camera transformation.", "tokens": [50364, 759, 291, 528, 309, 281, 312, 24889, 412, 1958, 11, 1958, 11, 1958, 293, 445, 15529, 309, 11, 550, 291, 500, 380, 643, 300, 13, 50678, 50678, 1396, 439, 291, 643, 307, 411, 257, 2799, 9887, 13, 50876, 50876, 407, 300, 307, 411, 456, 307, 1071, 7372, 300, 291, 362, 281, 764, 11, 597, 307, 16197, 8213, 51286, 51286, 21989, 293, 300, 6417, 439, 264, 4420, 6828, 281, 6964, 411, 485, 51654, 51654, 1407, 411, 20459, 32284, 1936, 11, 558, 30, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2151375041288488, "compression_ratio": 1.5825688073394495, "no_caption_prob": 2.468148886691779e-05}, {"id": 326, "seek": 124644, "start": 1256.68, "end": 1264.88, "text": " So that is like there is another package that you have to use, which is exploration linear", "tokens": [50364, 759, 291, 528, 309, 281, 312, 24889, 412, 1958, 11, 1958, 11, 1958, 293, 445, 15529, 309, 11, 550, 291, 500, 380, 643, 300, 13, 50678, 50678, 1396, 439, 291, 643, 307, 411, 257, 2799, 9887, 13, 50876, 50876, 407, 300, 307, 411, 456, 307, 1071, 7372, 300, 291, 362, 281, 764, 11, 597, 307, 16197, 8213, 51286, 51286, 21989, 293, 300, 6417, 439, 264, 4420, 6828, 281, 6964, 411, 485, 51654, 51654, 1407, 411, 20459, 32284, 1936, 11, 558, 30, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2151375041288488, "compression_ratio": 1.5825688073394495, "no_caption_prob": 2.468148886691779e-05}, {"id": 327, "seek": 124644, "start": 1264.88, "end": 1272.24, "text": " algebra and that provides all the useful functions to define like...", "tokens": [50364, 759, 291, 528, 309, 281, 312, 24889, 412, 1958, 11, 1958, 11, 1958, 293, 445, 15529, 309, 11, 550, 291, 500, 380, 643, 300, 13, 50678, 50678, 1396, 439, 291, 643, 307, 411, 257, 2799, 9887, 13, 50876, 50876, 407, 300, 307, 411, 456, 307, 1071, 7372, 300, 291, 362, 281, 764, 11, 597, 307, 16197, 8213, 51286, 51286, 21989, 293, 300, 6417, 439, 264, 4420, 6828, 281, 6964, 411, 485, 51654, 51654, 1407, 411, 20459, 32284, 1936, 11, 558, 30, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2151375041288488, "compression_ratio": 1.5825688073394495, "no_caption_prob": 2.468148886691779e-05}, {"id": 328, "seek": 124644, "start": 1272.24, "end": 1275.48, "text": " To like manipulate matrices basically, right?", "tokens": [50364, 759, 291, 528, 309, 281, 312, 24889, 412, 1958, 11, 1958, 11, 1958, 293, 445, 15529, 309, 11, 550, 291, 500, 380, 643, 300, 13, 50678, 50678, 1396, 439, 291, 643, 307, 411, 257, 2799, 9887, 13, 50876, 50876, 407, 300, 307, 411, 456, 307, 1071, 7372, 300, 291, 362, 281, 764, 11, 597, 307, 16197, 8213, 51286, 51286, 21989, 293, 300, 6417, 439, 264, 4420, 6828, 281, 6964, 411, 485, 51654, 51654, 1407, 411, 20459, 32284, 1936, 11, 558, 30, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.2151375041288488, "compression_ratio": 1.5825688073394495, "no_caption_prob": 2.468148886691779e-05}, {"id": 329, "seek": 127548, "start": 1275.48, "end": 1283.64, "text": " Yeah, and create some like various matrices that you might need, like a projection, like", "tokens": [50364, 865, 11, 293, 1884, 512, 411, 3683, 32284, 300, 291, 1062, 643, 11, 411, 257, 22743, 11, 411, 50772, 50772, 257, 4585, 22743, 8141, 13, 50890, 50890, 407, 437, 307, 257, 4585, 8141, 30, 51024, 51024, 407, 456, 366, 732, 3467, 295, 22743, 32284, 300, 2514, 294, 8213, 21989, 13, 51332, 51332, 1485, 307, 264, 8141, 300, 411, 309, 2516, 428, 805, 35, 551, 293, 309, 4455, 309, 3911, 411, 257, 5720, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.18469384428742644, "compression_ratio": 1.7243243243243243, "no_caption_prob": 0.0002199163136538118}, {"id": 330, "seek": 127548, "start": 1283.64, "end": 1286.0, "text": " a perspective projection matrix.", "tokens": [50364, 865, 11, 293, 1884, 512, 411, 3683, 32284, 300, 291, 1062, 643, 11, 411, 257, 22743, 11, 411, 50772, 50772, 257, 4585, 22743, 8141, 13, 50890, 50890, 407, 437, 307, 257, 4585, 8141, 30, 51024, 51024, 407, 456, 366, 732, 3467, 295, 22743, 32284, 300, 2514, 294, 8213, 21989, 13, 51332, 51332, 1485, 307, 264, 8141, 300, 411, 309, 2516, 428, 805, 35, 551, 293, 309, 4455, 309, 3911, 411, 257, 5720, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.18469384428742644, "compression_ratio": 1.7243243243243243, "no_caption_prob": 0.0002199163136538118}, {"id": 331, "seek": 127548, "start": 1286.0, "end": 1288.68, "text": " So what is a perspective matrix?", "tokens": [50364, 865, 11, 293, 1884, 512, 411, 3683, 32284, 300, 291, 1062, 643, 11, 411, 257, 22743, 11, 411, 50772, 50772, 257, 4585, 22743, 8141, 13, 50890, 50890, 407, 437, 307, 257, 4585, 8141, 30, 51024, 51024, 407, 456, 366, 732, 3467, 295, 22743, 32284, 300, 2514, 294, 8213, 21989, 13, 51332, 51332, 1485, 307, 264, 8141, 300, 411, 309, 2516, 428, 805, 35, 551, 293, 309, 4455, 309, 3911, 411, 257, 5720, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.18469384428742644, "compression_ratio": 1.7243243243243243, "no_caption_prob": 0.0002199163136538118}, {"id": 332, "seek": 127548, "start": 1288.68, "end": 1294.84, "text": " So there are two types of projection matrices that exist in linear algebra.", "tokens": [50364, 865, 11, 293, 1884, 512, 411, 3683, 32284, 300, 291, 1062, 643, 11, 411, 257, 22743, 11, 411, 50772, 50772, 257, 4585, 22743, 8141, 13, 50890, 50890, 407, 437, 307, 257, 4585, 8141, 30, 51024, 51024, 407, 456, 366, 732, 3467, 295, 22743, 32284, 300, 2514, 294, 8213, 21989, 13, 51332, 51332, 1485, 307, 264, 8141, 300, 411, 309, 2516, 428, 805, 35, 551, 293, 309, 4455, 309, 3911, 411, 257, 5720, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.18469384428742644, "compression_ratio": 1.7243243243243243, "no_caption_prob": 0.0002199163136538118}, {"id": 333, "seek": 127548, "start": 1294.84, "end": 1301.64, "text": " One is the matrix that like it takes your 3D thing and it projects it onto like a plane.", "tokens": [50364, 865, 11, 293, 1884, 512, 411, 3683, 32284, 300, 291, 1062, 643, 11, 411, 257, 22743, 11, 411, 50772, 50772, 257, 4585, 22743, 8141, 13, 50890, 50890, 407, 437, 307, 257, 4585, 8141, 30, 51024, 51024, 407, 456, 366, 732, 3467, 295, 22743, 32284, 300, 2514, 294, 8213, 21989, 13, 51332, 51332, 1485, 307, 264, 8141, 300, 411, 309, 2516, 428, 805, 35, 551, 293, 309, 4455, 309, 3911, 411, 257, 5720, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.18469384428742644, "compression_ratio": 1.7243243243243243, "no_caption_prob": 0.0002199163136538118}, {"id": 334, "seek": 130164, "start": 1301.64, "end": 1308.88, "text": " Yes, that's a definition of projection and what perspective projection does is it makes", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 335, "seek": 130164, "start": 1308.88, "end": 1312.3200000000002, "text": " it so that like parallel lines intersect.", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 336, "seek": 130164, "start": 1312.3200000000002, "end": 1316.2, "text": " If you prolong them, then they would intersect.", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 337, "seek": 130164, "start": 1316.2, "end": 1322.48, "text": " So you get this kind of realistic view and orthographic projection keeps the parallel", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 338, "seek": 130164, "start": 1322.48, "end": 1323.48, "text": " lines parallel.", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 339, "seek": 130164, "start": 1323.48, "end": 1328.92, "text": " Okay, so it's so that you can imitate seeing from an eye.", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 340, "seek": 130164, "start": 1328.92, "end": 1329.92, "text": " Is that it?", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 341, "seek": 130164, "start": 1329.92, "end": 1330.92, "text": " All right.", "tokens": [50364, 1079, 11, 300, 311, 257, 7123, 295, 22743, 293, 437, 4585, 22743, 775, 307, 309, 1669, 50726, 50726, 309, 370, 300, 411, 8952, 3876, 27815, 13, 50898, 50898, 759, 291, 27224, 552, 11, 550, 436, 576, 27815, 13, 51092, 51092, 407, 291, 483, 341, 733, 295, 12465, 1910, 293, 19052, 12295, 22743, 5965, 264, 8952, 51406, 51406, 3876, 8952, 13, 51456, 51456, 1033, 11, 370, 309, 311, 370, 300, 291, 393, 35556, 2577, 490, 364, 3313, 13, 51728, 51728, 1119, 300, 309, 30, 51778, 51778, 1057, 558, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.17149510590926462, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.3211549230618402e-05}, {"id": 342, "seek": 133092, "start": 1330.92, "end": 1332.1200000000001, "text": " So like a lens or different kind of lens?", "tokens": [50364, 407, 411, 257, 6765, 420, 819, 733, 295, 6765, 30, 50424, 50424, 1743, 576, 291, 35556, 411, 257, 3506, 3313, 6765, 5717, 257, 4304, 950, 6738, 6765, 2010, 295, 551, 365, 50684, 50684, 729, 34852, 420, 307, 300, 819, 30, 50812, 50812, 286, 519, 411, 472, 295, 264, 15743, 307, 364, 5802, 295, 1910, 382, 1400, 382, 286, 1604, 13, 51315, 51315, 407, 291, 1062, 528, 281, 411, 291, 1062, 312, 1075, 281, 360, 341, 11, 457, 286, 478, 406, 534, 988, 466, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.23455521156047954, "compression_ratio": 1.6225490196078431, "no_caption_prob": 2.1111347450641915e-05}, {"id": 343, "seek": 133092, "start": 1332.1200000000001, "end": 1337.3200000000002, "text": " Like would you imitate like a fish eye lens versus a telephoto lens type of thing with", "tokens": [50364, 407, 411, 257, 6765, 420, 819, 733, 295, 6765, 30, 50424, 50424, 1743, 576, 291, 35556, 411, 257, 3506, 3313, 6765, 5717, 257, 4304, 950, 6738, 6765, 2010, 295, 551, 365, 50684, 50684, 729, 34852, 420, 307, 300, 819, 30, 50812, 50812, 286, 519, 411, 472, 295, 264, 15743, 307, 364, 5802, 295, 1910, 382, 1400, 382, 286, 1604, 13, 51315, 51315, 407, 291, 1062, 528, 281, 411, 291, 1062, 312, 1075, 281, 360, 341, 11, 457, 286, 478, 406, 534, 988, 466, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.23455521156047954, "compression_ratio": 1.6225490196078431, "no_caption_prob": 2.1111347450641915e-05}, {"id": 344, "seek": 133092, "start": 1337.3200000000002, "end": 1339.88, "text": " those transformations or is that different?", "tokens": [50364, 407, 411, 257, 6765, 420, 819, 733, 295, 6765, 30, 50424, 50424, 1743, 576, 291, 35556, 411, 257, 3506, 3313, 6765, 5717, 257, 4304, 950, 6738, 6765, 2010, 295, 551, 365, 50684, 50684, 729, 34852, 420, 307, 300, 819, 30, 50812, 50812, 286, 519, 411, 472, 295, 264, 15743, 307, 364, 5802, 295, 1910, 382, 1400, 382, 286, 1604, 13, 51315, 51315, 407, 291, 1062, 528, 281, 411, 291, 1062, 312, 1075, 281, 360, 341, 11, 457, 286, 478, 406, 534, 988, 466, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.23455521156047954, "compression_ratio": 1.6225490196078431, "no_caption_prob": 2.1111347450641915e-05}, {"id": 345, "seek": 133092, "start": 1339.88, "end": 1349.94, "text": " I think like one of the inputs is an angle of view as far as I remember.", "tokens": [50364, 407, 411, 257, 6765, 420, 819, 733, 295, 6765, 30, 50424, 50424, 1743, 576, 291, 35556, 411, 257, 3506, 3313, 6765, 5717, 257, 4304, 950, 6738, 6765, 2010, 295, 551, 365, 50684, 50684, 729, 34852, 420, 307, 300, 819, 30, 50812, 50812, 286, 519, 411, 472, 295, 264, 15743, 307, 364, 5802, 295, 1910, 382, 1400, 382, 286, 1604, 13, 51315, 51315, 407, 291, 1062, 528, 281, 411, 291, 1062, 312, 1075, 281, 360, 341, 11, 457, 286, 478, 406, 534, 988, 466, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.23455521156047954, "compression_ratio": 1.6225490196078431, "no_caption_prob": 2.1111347450641915e-05}, {"id": 346, "seek": 133092, "start": 1349.94, "end": 1354.6000000000001, "text": " So you might want to like you might be able to do this, but I'm not really sure about", "tokens": [50364, 407, 411, 257, 6765, 420, 819, 733, 295, 6765, 30, 50424, 50424, 1743, 576, 291, 35556, 411, 257, 3506, 3313, 6765, 5717, 257, 4304, 950, 6738, 6765, 2010, 295, 551, 365, 50684, 50684, 729, 34852, 420, 307, 300, 819, 30, 50812, 50812, 286, 519, 411, 472, 295, 264, 15743, 307, 364, 5802, 295, 1910, 382, 1400, 382, 286, 1604, 13, 51315, 51315, 407, 291, 1062, 528, 281, 411, 291, 1062, 312, 1075, 281, 360, 341, 11, 457, 286, 478, 406, 534, 988, 466, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.23455521156047954, "compression_ratio": 1.6225490196078431, "no_caption_prob": 2.1111347450641915e-05}, {"id": 347, "seek": 135460, "start": 1354.6, "end": 1361.52, "text": " the lens transformations whether you can achieve them using the existing functionality.", "tokens": [50364, 264, 6765, 34852, 1968, 291, 393, 4584, 552, 1228, 264, 6741, 14980, 13, 50710, 50710, 1033, 370, 321, 645, 1417, 466, 3813, 8076, 293, 445, 281, 33528, 411, 257, 17407, 307, 445, 644, 295, 257, 51066, 51066, 5744, 260, 13, 51120, 51120, 407, 562, 291, 6964, 428, 16225, 47012, 35623, 302, 294, 14426, 44, 11, 291, 434, 17827, 257, 18350, 11, 291, 434, 17827, 51544, 51544, 428, 17407, 597, 366, 264, 2793, 11, 264, 32053, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.18387714624404908, "compression_ratio": 1.5665024630541873, "no_caption_prob": 8.479943062411621e-05}, {"id": 348, "seek": 135460, "start": 1361.52, "end": 1368.6399999999999, "text": " Okay so we were talking about meshes and just to reiterate like a mesh is just part of a", "tokens": [50364, 264, 6765, 34852, 1968, 291, 393, 4584, 552, 1228, 264, 6741, 14980, 13, 50710, 50710, 1033, 370, 321, 645, 1417, 466, 3813, 8076, 293, 445, 281, 33528, 411, 257, 17407, 307, 445, 644, 295, 257, 51066, 51066, 5744, 260, 13, 51120, 51120, 407, 562, 291, 6964, 428, 16225, 47012, 35623, 302, 294, 14426, 44, 11, 291, 434, 17827, 257, 18350, 11, 291, 434, 17827, 51544, 51544, 428, 17407, 597, 366, 264, 2793, 11, 264, 32053, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.18387714624404908, "compression_ratio": 1.5665024630541873, "no_caption_prob": 8.479943062411621e-05}, {"id": 349, "seek": 135460, "start": 1368.6399999999999, "end": 1369.7199999999998, "text": " shader.", "tokens": [50364, 264, 6765, 34852, 1968, 291, 393, 4584, 552, 1228, 264, 6741, 14980, 13, 50710, 50710, 1033, 370, 321, 645, 1417, 466, 3813, 8076, 293, 445, 281, 33528, 411, 257, 17407, 307, 445, 644, 295, 257, 51066, 51066, 5744, 260, 13, 51120, 51120, 407, 562, 291, 6964, 428, 16225, 47012, 35623, 302, 294, 14426, 44, 11, 291, 434, 17827, 257, 18350, 11, 291, 434, 17827, 51544, 51544, 428, 17407, 597, 366, 264, 2793, 11, 264, 32053, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.18387714624404908, "compression_ratio": 1.5665024630541873, "no_caption_prob": 8.479943062411621e-05}, {"id": 350, "seek": 135460, "start": 1369.7199999999998, "end": 1378.1999999999998, "text": " So when you define your GLSL snippet in ELM, you're defining a mapping, you're defining", "tokens": [50364, 264, 6765, 34852, 1968, 291, 393, 4584, 552, 1228, 264, 6741, 14980, 13, 50710, 50710, 1033, 370, 321, 645, 1417, 466, 3813, 8076, 293, 445, 281, 33528, 411, 257, 17407, 307, 445, 644, 295, 257, 51066, 51066, 5744, 260, 13, 51120, 51120, 407, 562, 291, 6964, 428, 16225, 47012, 35623, 302, 294, 14426, 44, 11, 291, 434, 17827, 257, 18350, 11, 291, 434, 17827, 51544, 51544, 428, 17407, 597, 366, 264, 2793, 11, 264, 32053, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.18387714624404908, "compression_ratio": 1.5665024630541873, "no_caption_prob": 8.479943062411621e-05}, {"id": 351, "seek": 135460, "start": 1378.1999999999998, "end": 1382.08, "text": " your mesh which are the points, the vertices.", "tokens": [50364, 264, 6765, 34852, 1968, 291, 393, 4584, 552, 1228, 264, 6741, 14980, 13, 50710, 50710, 1033, 370, 321, 645, 1417, 466, 3813, 8076, 293, 445, 281, 33528, 411, 257, 17407, 307, 445, 644, 295, 257, 51066, 51066, 5744, 260, 13, 51120, 51120, 407, 562, 291, 6964, 428, 16225, 47012, 35623, 302, 294, 14426, 44, 11, 291, 434, 17827, 257, 18350, 11, 291, 434, 17827, 51544, 51544, 428, 17407, 597, 366, 264, 2793, 11, 264, 32053, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.18387714624404908, "compression_ratio": 1.5665024630541873, "no_caption_prob": 8.479943062411621e-05}, {"id": 352, "seek": 138208, "start": 1382.08, "end": 1388.12, "text": " You're defining your uniforms which are essentially the parameters that you're binding between", "tokens": [50364, 509, 434, 17827, 428, 37235, 597, 366, 4476, 264, 9834, 300, 291, 434, 17359, 1296, 50666, 50666, 14426, 44, 293, 16225, 47012, 300, 291, 393, 1320, 294, 721, 300, 10559, 411, 2799, 2535, 13, 50942, 50942, 509, 434, 17827, 552, 11, 291, 434, 1566, 286, 528, 281, 362, 729, 37235, 11, 286, 528, 729, 17212, 11, 51290, 51290, 457, 291, 434, 8437, 552, 294, 490, 14426, 44, 11, 558, 30, 51404, 51404, 1779, 11, 411, 309, 2544, 411, 309, 311, 1920, 411, 428, 2316, 11, 558, 11, 337, 428, 16225, 47012, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.142958402633667, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.4970602023822721e-05}, {"id": 353, "seek": 138208, "start": 1388.12, "end": 1393.6399999999999, "text": " ELM and GLSL that you can pass in things that vary like camera position.", "tokens": [50364, 509, 434, 17827, 428, 37235, 597, 366, 4476, 264, 9834, 300, 291, 434, 17359, 1296, 50666, 50666, 14426, 44, 293, 16225, 47012, 300, 291, 393, 1320, 294, 721, 300, 10559, 411, 2799, 2535, 13, 50942, 50942, 509, 434, 17827, 552, 11, 291, 434, 1566, 286, 528, 281, 362, 729, 37235, 11, 286, 528, 729, 17212, 11, 51290, 51290, 457, 291, 434, 8437, 552, 294, 490, 14426, 44, 11, 558, 30, 51404, 51404, 1779, 11, 411, 309, 2544, 411, 309, 311, 1920, 411, 428, 2316, 11, 558, 11, 337, 428, 16225, 47012, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.142958402633667, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.4970602023822721e-05}, {"id": 354, "seek": 138208, "start": 1393.6399999999999, "end": 1400.6, "text": " You're defining them, you're saying I want to have those uniforms, I want those attributes,", "tokens": [50364, 509, 434, 17827, 428, 37235, 597, 366, 4476, 264, 9834, 300, 291, 434, 17359, 1296, 50666, 50666, 14426, 44, 293, 16225, 47012, 300, 291, 393, 1320, 294, 721, 300, 10559, 411, 2799, 2535, 13, 50942, 50942, 509, 434, 17827, 552, 11, 291, 434, 1566, 286, 528, 281, 362, 729, 37235, 11, 286, 528, 729, 17212, 11, 51290, 51290, 457, 291, 434, 8437, 552, 294, 490, 14426, 44, 11, 558, 30, 51404, 51404, 1779, 11, 411, 309, 2544, 411, 309, 311, 1920, 411, 428, 2316, 11, 558, 11, 337, 428, 16225, 47012, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.142958402633667, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.4970602023822721e-05}, {"id": 355, "seek": 138208, "start": 1400.6, "end": 1402.8799999999999, "text": " but you're passing them in from ELM, right?", "tokens": [50364, 509, 434, 17827, 428, 37235, 597, 366, 4476, 264, 9834, 300, 291, 434, 17359, 1296, 50666, 50666, 14426, 44, 293, 16225, 47012, 300, 291, 393, 1320, 294, 721, 300, 10559, 411, 2799, 2535, 13, 50942, 50942, 509, 434, 17827, 552, 11, 291, 434, 1566, 286, 528, 281, 362, 729, 37235, 11, 286, 528, 729, 17212, 11, 51290, 51290, 457, 291, 434, 8437, 552, 294, 490, 14426, 44, 11, 558, 30, 51404, 51404, 1779, 11, 411, 309, 2544, 411, 309, 311, 1920, 411, 428, 2316, 11, 558, 11, 337, 428, 16225, 47012, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.142958402633667, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.4970602023822721e-05}, {"id": 356, "seek": 138208, "start": 1402.8799999999999, "end": 1408.08, "text": " Right, like it seems like it's almost like your model, right, for your GLSL.", "tokens": [50364, 509, 434, 17827, 428, 37235, 597, 366, 4476, 264, 9834, 300, 291, 434, 17359, 1296, 50666, 50666, 14426, 44, 293, 16225, 47012, 300, 291, 393, 1320, 294, 721, 300, 10559, 411, 2799, 2535, 13, 50942, 50942, 509, 434, 17827, 552, 11, 291, 434, 1566, 286, 528, 281, 362, 729, 37235, 11, 286, 528, 729, 17212, 11, 51290, 51290, 457, 291, 434, 8437, 552, 294, 490, 14426, 44, 11, 558, 30, 51404, 51404, 1779, 11, 411, 309, 2544, 411, 309, 311, 1920, 411, 428, 2316, 11, 558, 11, 337, 428, 16225, 47012, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.142958402633667, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.4970602023822721e-05}, {"id": 357, "seek": 140808, "start": 1408.08, "end": 1417.6799999999998, "text": " So attributes is mesh and then uniforms is just like an ELM record and then you also", "tokens": [50364, 407, 17212, 307, 17407, 293, 550, 37235, 307, 445, 411, 364, 14426, 44, 2136, 293, 550, 291, 611, 50844, 50844, 483, 732, 5744, 433, 293, 550, 291, 829, 309, 439, 1214, 666, 437, 307, 1219, 364, 13977, 294, 264, 14426, 44, 9573, 51268, 51268, 19440, 9362, 13, 51318, 51318, 1396, 291, 362, 257, 1329, 295, 729, 300, 291, 1320, 666, 264, 1192, 1496, 2445, 300, 7829, 257, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19335993914537028, "compression_ratio": 1.5280898876404494, "no_caption_prob": 5.473539567901753e-05}, {"id": 358, "seek": 140808, "start": 1417.6799999999998, "end": 1426.1599999999999, "text": " get two shaders and then you put it all together into what is called an entity in the ELM Web", "tokens": [50364, 407, 17212, 307, 17407, 293, 550, 37235, 307, 445, 411, 364, 14426, 44, 2136, 293, 550, 291, 611, 50844, 50844, 483, 732, 5744, 433, 293, 550, 291, 829, 309, 439, 1214, 666, 437, 307, 1219, 364, 13977, 294, 264, 14426, 44, 9573, 51268, 51268, 19440, 9362, 13, 51318, 51318, 1396, 291, 362, 257, 1329, 295, 729, 300, 291, 1320, 666, 264, 1192, 1496, 2445, 300, 7829, 257, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19335993914537028, "compression_ratio": 1.5280898876404494, "no_caption_prob": 5.473539567901753e-05}, {"id": 359, "seek": 140808, "start": 1426.1599999999999, "end": 1427.1599999999999, "text": "GL API.", "tokens": [50364, 407, 17212, 307, 17407, 293, 550, 37235, 307, 445, 411, 364, 14426, 44, 2136, 293, 550, 291, 611, 50844, 50844, 483, 732, 5744, 433, 293, 550, 291, 829, 309, 439, 1214, 666, 437, 307, 1219, 364, 13977, 294, 264, 14426, 44, 9573, 51268, 51268, 19440, 9362, 13, 51318, 51318, 1396, 291, 362, 257, 1329, 295, 729, 300, 291, 1320, 666, 264, 1192, 1496, 2445, 300, 7829, 257, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19335993914537028, "compression_ratio": 1.5280898876404494, "no_caption_prob": 5.473539567901753e-05}, {"id": 360, "seek": 140808, "start": 1427.1599999999999, "end": 1436.28, "text": " Then you have a list of those that you pass into the top level function that creates a", "tokens": [50364, 407, 17212, 307, 17407, 293, 550, 37235, 307, 445, 411, 364, 14426, 44, 2136, 293, 550, 291, 611, 50844, 50844, 483, 732, 5744, 433, 293, 550, 291, 829, 309, 439, 1214, 666, 437, 307, 1219, 364, 13977, 294, 264, 14426, 44, 9573, 51268, 51268, 19440, 9362, 13, 51318, 51318, 1396, 291, 362, 257, 1329, 295, 729, 300, 291, 1320, 666, 264, 1192, 1496, 2445, 300, 7829, 257, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19335993914537028, "compression_ratio": 1.5280898876404494, "no_caption_prob": 5.473539567901753e-05}, {"id": 361, "seek": 143628, "start": 1436.28, "end": 1443.0, "text": " canvas element and like a DOM element so that becomes HTML.", "tokens": [50364, 16267, 4478, 293, 411, 257, 35727, 4478, 370, 300, 3643, 17995, 13, 50700, 50700, 400, 370, 411, 341, 1379, 16225, 47012, 551, 307, 264, 4334, 295, 309, 307, 281, 411, 309, 311, 257, 2856, 300, 307, 715, 4883, 51222, 51222, 760, 281, 5405, 2042, 394, 1507, 300, 311, 2614, 322, 264, 18407, 295, 428, 3479, 293, 370, 613, 411, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.15368072570316374, "compression_ratio": 1.4425287356321839, "no_caption_prob": 0.00011586127220652997}, {"id": 362, "seek": 143628, "start": 1443.0, "end": 1453.44, "text": " And so like this whole GLSL thing is the purpose of it is to like it's a language that is compiling", "tokens": [50364, 16267, 4478, 293, 411, 257, 35727, 4478, 370, 300, 3643, 17995, 13, 50700, 50700, 400, 370, 411, 341, 1379, 16225, 47012, 551, 307, 264, 4334, 295, 309, 307, 281, 411, 309, 311, 257, 2856, 300, 307, 715, 4883, 51222, 51222, 760, 281, 5405, 2042, 394, 1507, 300, 311, 2614, 322, 264, 18407, 295, 428, 3479, 293, 370, 613, 411, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.15368072570316374, "compression_ratio": 1.4425287356321839, "no_caption_prob": 0.00011586127220652997}, {"id": 363, "seek": 143628, "start": 1453.44, "end": 1460.08, "text": " down to highly performant stuff that's running on the GPU of your machine and so these like", "tokens": [50364, 16267, 4478, 293, 411, 257, 35727, 4478, 370, 300, 3643, 17995, 13, 50700, 50700, 400, 370, 411, 341, 1379, 16225, 47012, 551, 307, 264, 4334, 295, 309, 307, 281, 411, 309, 311, 257, 2856, 300, 307, 715, 4883, 51222, 51222, 760, 281, 5405, 2042, 394, 1507, 300, 311, 2614, 322, 264, 18407, 295, 428, 3479, 293, 370, 613, 411, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.15368072570316374, "compression_ratio": 1.4425287356321839, "no_caption_prob": 0.00011586127220652997}, {"id": 364, "seek": 146008, "start": 1460.08, "end": 1468.3999999999999, "text": " uniforms are I mean it's compiling down to like very fast GPU instructions essentially,", "tokens": [50364, 37235, 366, 286, 914, 309, 311, 715, 4883, 760, 281, 411, 588, 2370, 18407, 9415, 4476, 11, 50780, 50780, 558, 30, 50830, 50830, 400, 370, 14426, 44, 307, 1075, 281, 445, 1333, 295, 10559, 613, 1326, 3755, 457, 550, 309, 445, 6676, 588, 2370, 51152, 51152, 18407, 9415, 490, 300, 11, 558, 30, 51280, 51280, 1079, 11, 456, 366, 12546, 3389, 5028, 14455, 294, 341, 15517, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17168443975314288, "compression_ratio": 1.4973821989528795, "no_caption_prob": 3.763334098039195e-05}, {"id": 365, "seek": 146008, "start": 1468.3999999999999, "end": 1469.3999999999999, "text": " right?", "tokens": [50364, 37235, 366, 286, 914, 309, 311, 715, 4883, 760, 281, 411, 588, 2370, 18407, 9415, 4476, 11, 50780, 50780, 558, 30, 50830, 50830, 400, 370, 14426, 44, 307, 1075, 281, 445, 1333, 295, 10559, 613, 1326, 3755, 457, 550, 309, 445, 6676, 588, 2370, 51152, 51152, 18407, 9415, 490, 300, 11, 558, 30, 51280, 51280, 1079, 11, 456, 366, 12546, 3389, 5028, 14455, 294, 341, 15517, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17168443975314288, "compression_ratio": 1.4973821989528795, "no_caption_prob": 3.763334098039195e-05}, {"id": 366, "seek": 146008, "start": 1469.3999999999999, "end": 1475.84, "text": " And so ELM is able to just sort of vary these few pieces but then it just runs very fast", "tokens": [50364, 37235, 366, 286, 914, 309, 311, 715, 4883, 760, 281, 411, 588, 2370, 18407, 9415, 4476, 11, 50780, 50780, 558, 30, 50830, 50830, 400, 370, 14426, 44, 307, 1075, 281, 445, 1333, 295, 10559, 613, 1326, 3755, 457, 550, 309, 445, 6676, 588, 2370, 51152, 51152, 18407, 9415, 490, 300, 11, 558, 30, 51280, 51280, 1079, 11, 456, 366, 12546, 3389, 5028, 14455, 294, 341, 15517, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17168443975314288, "compression_ratio": 1.4973821989528795, "no_caption_prob": 3.763334098039195e-05}, {"id": 367, "seek": 146008, "start": 1475.84, "end": 1478.3999999999999, "text": " GPU instructions from that, right?", "tokens": [50364, 37235, 366, 286, 914, 309, 311, 715, 4883, 760, 281, 411, 588, 2370, 18407, 9415, 4476, 11, 50780, 50780, 558, 30, 50830, 50830, 400, 370, 14426, 44, 307, 1075, 281, 445, 1333, 295, 10559, 613, 1326, 3755, 457, 550, 309, 445, 6676, 588, 2370, 51152, 51152, 18407, 9415, 490, 300, 11, 558, 30, 51280, 51280, 1079, 11, 456, 366, 12546, 3389, 5028, 14455, 294, 341, 15517, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17168443975314288, "compression_ratio": 1.4973821989528795, "no_caption_prob": 3.763334098039195e-05}, {"id": 368, "seek": 146008, "start": 1478.3999999999999, "end": 1484.32, "text": " Yes, there are numerous performance optimizations in this pipeline.", "tokens": [50364, 37235, 366, 286, 914, 309, 311, 715, 4883, 760, 281, 411, 588, 2370, 18407, 9415, 4476, 11, 50780, 50780, 558, 30, 50830, 50830, 400, 370, 14426, 44, 307, 1075, 281, 445, 1333, 295, 10559, 613, 1326, 3755, 457, 550, 309, 445, 6676, 588, 2370, 51152, 51152, 18407, 9415, 490, 300, 11, 558, 30, 51280, 51280, 1079, 11, 456, 366, 12546, 3389, 5028, 14455, 294, 341, 15517, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.17168443975314288, "compression_ratio": 1.4973821989528795, "no_caption_prob": 3.763334098039195e-05}, {"id": 369, "seek": 148432, "start": 1484.32, "end": 1493.1599999999999, "text": " So first of all, all the meshes are cached so whenever this like a WebGL to HTML function,", "tokens": [50364, 407, 700, 295, 439, 11, 439, 264, 3813, 8076, 366, 269, 15095, 370, 5699, 341, 411, 257, 9573, 19440, 281, 17995, 2445, 11, 50806, 50806, 5699, 309, 20717, 257, 777, 17407, 307, 411, 294, 472, 295, 264, 16667, 11, 309, 576, 6580, 309, 666, 51236, 51236, 257, 18407, 4675, 293, 19459, 309, 13, 51360, 51360, 407, 562, 291, 818, 264, 912, 2445, 11, 291, 1320, 264, 912, 17407, 11, 309, 1177, 380, 362, 281, 319, 84, 21132, 345, 51666, 51666, 264, 1412, 281, 18407, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1616018595320455, "compression_ratio": 1.5897435897435896, "no_caption_prob": 0.00011055817594751716}, {"id": 370, "seek": 148432, "start": 1493.1599999999999, "end": 1501.76, "text": " whenever it receives a new mesh is like in one of the entities, it would upload it into", "tokens": [50364, 407, 700, 295, 439, 11, 439, 264, 3813, 8076, 366, 269, 15095, 370, 5699, 341, 411, 257, 9573, 19440, 281, 17995, 2445, 11, 50806, 50806, 5699, 309, 20717, 257, 777, 17407, 307, 411, 294, 472, 295, 264, 16667, 11, 309, 576, 6580, 309, 666, 51236, 51236, 257, 18407, 4675, 293, 19459, 309, 13, 51360, 51360, 407, 562, 291, 818, 264, 912, 2445, 11, 291, 1320, 264, 912, 17407, 11, 309, 1177, 380, 362, 281, 319, 84, 21132, 345, 51666, 51666, 264, 1412, 281, 18407, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1616018595320455, "compression_ratio": 1.5897435897435896, "no_caption_prob": 0.00011055817594751716}, {"id": 371, "seek": 148432, "start": 1501.76, "end": 1504.24, "text": " a GPU memory and cache it.", "tokens": [50364, 407, 700, 295, 439, 11, 439, 264, 3813, 8076, 366, 269, 15095, 370, 5699, 341, 411, 257, 9573, 19440, 281, 17995, 2445, 11, 50806, 50806, 5699, 309, 20717, 257, 777, 17407, 307, 411, 294, 472, 295, 264, 16667, 11, 309, 576, 6580, 309, 666, 51236, 51236, 257, 18407, 4675, 293, 19459, 309, 13, 51360, 51360, 407, 562, 291, 818, 264, 912, 2445, 11, 291, 1320, 264, 912, 17407, 11, 309, 1177, 380, 362, 281, 319, 84, 21132, 345, 51666, 51666, 264, 1412, 281, 18407, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1616018595320455, "compression_ratio": 1.5897435897435896, "no_caption_prob": 0.00011055817594751716}, {"id": 372, "seek": 148432, "start": 1504.24, "end": 1510.36, "text": " So when you call the same function, you pass the same mesh, it doesn't have to reupload", "tokens": [50364, 407, 700, 295, 439, 11, 439, 264, 3813, 8076, 366, 269, 15095, 370, 5699, 341, 411, 257, 9573, 19440, 281, 17995, 2445, 11, 50806, 50806, 5699, 309, 20717, 257, 777, 17407, 307, 411, 294, 472, 295, 264, 16667, 11, 309, 576, 6580, 309, 666, 51236, 51236, 257, 18407, 4675, 293, 19459, 309, 13, 51360, 51360, 407, 562, 291, 818, 264, 912, 2445, 11, 291, 1320, 264, 912, 17407, 11, 309, 1177, 380, 362, 281, 319, 84, 21132, 345, 51666, 51666, 264, 1412, 281, 18407, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1616018595320455, "compression_ratio": 1.5897435897435896, "no_caption_prob": 0.00011055817594751716}, {"id": 373, "seek": 148432, "start": 1510.36, "end": 1513.12, "text": " the data to GPU.", "tokens": [50364, 407, 700, 295, 439, 11, 439, 264, 3813, 8076, 366, 269, 15095, 370, 5699, 341, 411, 257, 9573, 19440, 281, 17995, 2445, 11, 50806, 50806, 5699, 309, 20717, 257, 777, 17407, 307, 411, 294, 472, 295, 264, 16667, 11, 309, 576, 6580, 309, 666, 51236, 51236, 257, 18407, 4675, 293, 19459, 309, 13, 51360, 51360, 407, 562, 291, 818, 264, 912, 2445, 11, 291, 1320, 264, 912, 17407, 11, 309, 1177, 380, 362, 281, 319, 84, 21132, 345, 51666, 51666, 264, 1412, 281, 18407, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.1616018595320455, "compression_ratio": 1.5897435897435896, "no_caption_prob": 0.00011055817594751716}, {"id": 374, "seek": 151312, "start": 1513.12, "end": 1515.12, "text": " How does it detect whether it's the same?", "tokens": [50364, 1012, 775, 309, 5531, 1968, 309, 311, 264, 912, 30, 50464, 50464, 1119, 309, 538, 6408, 420, 775, 309, 360, 364, 14949, 1520, 30, 50708, 50708, 663, 311, 257, 665, 1168, 13, 50768, 50768, 407, 286, 519, 294, 264, 1791, 437, 1143, 281, 312, 307, 264, 15778, 2657, 307, 885, 40239, 365, 51038, 51038, 364, 7348, 457, 286, 519, 437, 321, 16858, 309, 3938, 281, 307, 1228, 5336, 4471, 294, 15778, 498, 291, 51446, 51446, 458, 466, 341, 13, 51512, 51512], "temperature": 0.0, "avg_logprob": -0.16497563741293297, "compression_ratio": 1.5247524752475248, "no_caption_prob": 5.063811477157287e-05}, {"id": 375, "seek": 151312, "start": 1515.12, "end": 1520.0, "text": " Is it by reference or does it do an equality check?", "tokens": [50364, 1012, 775, 309, 5531, 1968, 309, 311, 264, 912, 30, 50464, 50464, 1119, 309, 538, 6408, 420, 775, 309, 360, 364, 14949, 1520, 30, 50708, 50708, 663, 311, 257, 665, 1168, 13, 50768, 50768, 407, 286, 519, 294, 264, 1791, 437, 1143, 281, 312, 307, 264, 15778, 2657, 307, 885, 40239, 365, 51038, 51038, 364, 7348, 457, 286, 519, 437, 321, 16858, 309, 3938, 281, 307, 1228, 5336, 4471, 294, 15778, 498, 291, 51446, 51446, 458, 466, 341, 13, 51512, 51512], "temperature": 0.0, "avg_logprob": -0.16497563741293297, "compression_ratio": 1.5247524752475248, "no_caption_prob": 5.063811477157287e-05}, {"id": 376, "seek": 151312, "start": 1520.0, "end": 1521.1999999999998, "text": " That's a good question.", "tokens": [50364, 1012, 775, 309, 5531, 1968, 309, 311, 264, 912, 30, 50464, 50464, 1119, 309, 538, 6408, 420, 775, 309, 360, 364, 14949, 1520, 30, 50708, 50708, 663, 311, 257, 665, 1168, 13, 50768, 50768, 407, 286, 519, 294, 264, 1791, 437, 1143, 281, 312, 307, 264, 15778, 2657, 307, 885, 40239, 365, 51038, 51038, 364, 7348, 457, 286, 519, 437, 321, 16858, 309, 3938, 281, 307, 1228, 5336, 4471, 294, 15778, 498, 291, 51446, 51446, 458, 466, 341, 13, 51512, 51512], "temperature": 0.0, "avg_logprob": -0.16497563741293297, "compression_ratio": 1.5247524752475248, "no_caption_prob": 5.063811477157287e-05}, {"id": 377, "seek": 151312, "start": 1521.1999999999998, "end": 1526.6, "text": " So I think in the past what used to be is the JavaScript object is being tagged with", "tokens": [50364, 1012, 775, 309, 5531, 1968, 309, 311, 264, 912, 30, 50464, 50464, 1119, 309, 538, 6408, 420, 775, 309, 360, 364, 14949, 1520, 30, 50708, 50708, 663, 311, 257, 665, 1168, 13, 50768, 50768, 407, 286, 519, 294, 264, 1791, 437, 1143, 281, 312, 307, 264, 15778, 2657, 307, 885, 40239, 365, 51038, 51038, 364, 7348, 457, 286, 519, 437, 321, 16858, 309, 3938, 281, 307, 1228, 5336, 4471, 294, 15778, 498, 291, 51446, 51446, 458, 466, 341, 13, 51512, 51512], "temperature": 0.0, "avg_logprob": -0.16497563741293297, "compression_ratio": 1.5247524752475248, "no_caption_prob": 5.063811477157287e-05}, {"id": 378, "seek": 151312, "start": 1526.6, "end": 1534.76, "text": " an ID but I think what we switched it recently to is using weak map in JavaScript if you", "tokens": [50364, 1012, 775, 309, 5531, 1968, 309, 311, 264, 912, 30, 50464, 50464, 1119, 309, 538, 6408, 420, 775, 309, 360, 364, 14949, 1520, 30, 50708, 50708, 663, 311, 257, 665, 1168, 13, 50768, 50768, 407, 286, 519, 294, 264, 1791, 437, 1143, 281, 312, 307, 264, 15778, 2657, 307, 885, 40239, 365, 51038, 51038, 364, 7348, 457, 286, 519, 437, 321, 16858, 309, 3938, 281, 307, 1228, 5336, 4471, 294, 15778, 498, 291, 51446, 51446, 458, 466, 341, 13, 51512, 51512], "temperature": 0.0, "avg_logprob": -0.16497563741293297, "compression_ratio": 1.5247524752475248, "no_caption_prob": 5.063811477157287e-05}, {"id": 379, "seek": 151312, "start": 1534.76, "end": 1536.08, "text": " know about this.", "tokens": [50364, 1012, 775, 309, 5531, 1968, 309, 311, 264, 912, 30, 50464, 50464, 1119, 309, 538, 6408, 420, 775, 309, 360, 364, 14949, 1520, 30, 50708, 50708, 663, 311, 257, 665, 1168, 13, 50768, 50768, 407, 286, 519, 294, 264, 1791, 437, 1143, 281, 312, 307, 264, 15778, 2657, 307, 885, 40239, 365, 51038, 51038, 364, 7348, 457, 286, 519, 437, 321, 16858, 309, 3938, 281, 307, 1228, 5336, 4471, 294, 15778, 498, 291, 51446, 51446, 458, 466, 341, 13, 51512, 51512], "temperature": 0.0, "avg_logprob": -0.16497563741293297, "compression_ratio": 1.5247524752475248, "no_caption_prob": 5.063811477157287e-05}, {"id": 380, "seek": 153608, "start": 1536.08, "end": 1544.0, "text": " And the overall cache kind of or like a representation of what is cached, what's not is a part of", "tokens": [50364, 400, 264, 4787, 19459, 733, 295, 420, 411, 257, 10290, 295, 437, 307, 269, 15095, 11, 437, 311, 406, 307, 257, 644, 295, 50760, 50760, 264, 6374, 35727, 9984, 300, 307, 2942, 337, 300, 16267, 11, 337, 264, 9573, 19440, 16267, 4478, 13, 51122, 51122, 400, 341, 9984, 11, 309, 9512, 721, 411, 17135, 11, 411, 15400, 281, 17135, 24501, 11, 411, 51404, 51404, 439, 264, 9204, 433, 337, 17212, 457, 264, 37235, 366, 406, 13, 51585, 51585, 407, 264, 37235, 366, 4473, 490, 411, 291, 393, 992, 512, 819, 37235, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.15994082887967428, "compression_ratio": 1.7191489361702128, "no_caption_prob": 4.830783655052073e-05}, {"id": 381, "seek": 153608, "start": 1544.0, "end": 1551.24, "text": " the virtual DOM node that is created for that canvas, for the WebGL canvas element.", "tokens": [50364, 400, 264, 4787, 19459, 733, 295, 420, 411, 257, 10290, 295, 437, 307, 269, 15095, 11, 437, 311, 406, 307, 257, 644, 295, 50760, 50760, 264, 6374, 35727, 9984, 300, 307, 2942, 337, 300, 16267, 11, 337, 264, 9573, 19440, 16267, 4478, 13, 51122, 51122, 400, 341, 9984, 11, 309, 9512, 721, 411, 17135, 11, 411, 15400, 281, 17135, 24501, 11, 411, 51404, 51404, 439, 264, 9204, 433, 337, 17212, 457, 264, 37235, 366, 406, 13, 51585, 51585, 407, 264, 37235, 366, 4473, 490, 411, 291, 393, 992, 512, 819, 37235, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.15994082887967428, "compression_ratio": 1.7191489361702128, "no_caption_prob": 4.830783655052073e-05}, {"id": 382, "seek": 153608, "start": 1551.24, "end": 1556.8799999999999, "text": " And this node, it stores things like uploaded, like references to uploaded textures, like", "tokens": [50364, 400, 264, 4787, 19459, 733, 295, 420, 411, 257, 10290, 295, 437, 307, 269, 15095, 11, 437, 311, 406, 307, 257, 644, 295, 50760, 50760, 264, 6374, 35727, 9984, 300, 307, 2942, 337, 300, 16267, 11, 337, 264, 9573, 19440, 16267, 4478, 13, 51122, 51122, 400, 341, 9984, 11, 309, 9512, 721, 411, 17135, 11, 411, 15400, 281, 17135, 24501, 11, 411, 51404, 51404, 439, 264, 9204, 433, 337, 17212, 457, 264, 37235, 366, 406, 13, 51585, 51585, 407, 264, 37235, 366, 4473, 490, 411, 291, 393, 992, 512, 819, 37235, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.15994082887967428, "compression_ratio": 1.7191489361702128, "no_caption_prob": 4.830783655052073e-05}, {"id": 383, "seek": 153608, "start": 1556.8799999999999, "end": 1560.5, "text": " all the buffers for attributes but the uniforms are not.", "tokens": [50364, 400, 264, 4787, 19459, 733, 295, 420, 411, 257, 10290, 295, 437, 307, 269, 15095, 11, 437, 311, 406, 307, 257, 644, 295, 50760, 50760, 264, 6374, 35727, 9984, 300, 307, 2942, 337, 300, 16267, 11, 337, 264, 9573, 19440, 16267, 4478, 13, 51122, 51122, 400, 341, 9984, 11, 309, 9512, 721, 411, 17135, 11, 411, 15400, 281, 17135, 24501, 11, 411, 51404, 51404, 439, 264, 9204, 433, 337, 17212, 457, 264, 37235, 366, 406, 13, 51585, 51585, 407, 264, 37235, 366, 4473, 490, 411, 291, 393, 992, 512, 819, 37235, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.15994082887967428, "compression_ratio": 1.7191489361702128, "no_caption_prob": 4.830783655052073e-05}, {"id": 384, "seek": 153608, "start": 1560.5, "end": 1565.72, "text": " So the uniforms are changing from like you can set some different uniforms.", "tokens": [50364, 400, 264, 4787, 19459, 733, 295, 420, 411, 257, 10290, 295, 437, 307, 269, 15095, 11, 437, 311, 406, 307, 257, 644, 295, 50760, 50760, 264, 6374, 35727, 9984, 300, 307, 2942, 337, 300, 16267, 11, 337, 264, 9573, 19440, 16267, 4478, 13, 51122, 51122, 400, 341, 9984, 11, 309, 9512, 721, 411, 17135, 11, 411, 15400, 281, 17135, 24501, 11, 411, 51404, 51404, 439, 264, 9204, 433, 337, 17212, 457, 264, 37235, 366, 406, 13, 51585, 51585, 407, 264, 37235, 366, 4473, 490, 411, 291, 393, 992, 512, 819, 37235, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.15994082887967428, "compression_ratio": 1.7191489361702128, "no_caption_prob": 4.830783655052073e-05}, {"id": 385, "seek": 156572, "start": 1565.72, "end": 1571.2, "text": " That's the whole purpose of them to be able to move around and the uniforms is usually", "tokens": [50364, 663, 311, 264, 1379, 4334, 295, 552, 281, 312, 1075, 281, 1286, 926, 293, 264, 37235, 307, 2673, 50638, 50638, 406, 300, 709, 1412, 562, 5347, 281, 411, 257, 17407, 300, 23122, 257, 588, 3997, 805, 35, 2657, 13, 51054, 51054, 1079, 11, 370, 300, 311, 983, 291, 853, 281, 362, 264, 37235, 1319, 457, 406, 264, 3813, 8076, 11, 558, 30, 51374, 51374, 759, 291, 1319, 428, 17407, 4060, 1413, 257, 1150, 11, 550, 291, 486, 362, 281, 6580, 309, 3911, 18407, 633, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.20175537196072665, "compression_ratio": 1.5401785714285714, "no_caption_prob": 0.00016313338710460812}, {"id": 386, "seek": 156572, "start": 1571.2, "end": 1579.52, "text": " not that much data when compared to like a mesh that defines a very complex 3D object.", "tokens": [50364, 663, 311, 264, 1379, 4334, 295, 552, 281, 312, 1075, 281, 1286, 926, 293, 264, 37235, 307, 2673, 50638, 50638, 406, 300, 709, 1412, 562, 5347, 281, 411, 257, 17407, 300, 23122, 257, 588, 3997, 805, 35, 2657, 13, 51054, 51054, 1079, 11, 370, 300, 311, 983, 291, 853, 281, 362, 264, 37235, 1319, 457, 406, 264, 3813, 8076, 11, 558, 30, 51374, 51374, 759, 291, 1319, 428, 17407, 4060, 1413, 257, 1150, 11, 550, 291, 486, 362, 281, 6580, 309, 3911, 18407, 633, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.20175537196072665, "compression_ratio": 1.5401785714285714, "no_caption_prob": 0.00016313338710460812}, {"id": 387, "seek": 156572, "start": 1579.52, "end": 1585.92, "text": " Yes, so that's why you try to have the uniforms change but not the meshes, right?", "tokens": [50364, 663, 311, 264, 1379, 4334, 295, 552, 281, 312, 1075, 281, 1286, 926, 293, 264, 37235, 307, 2673, 50638, 50638, 406, 300, 709, 1412, 562, 5347, 281, 411, 257, 17407, 300, 23122, 257, 588, 3997, 805, 35, 2657, 13, 51054, 51054, 1079, 11, 370, 300, 311, 983, 291, 853, 281, 362, 264, 37235, 1319, 457, 406, 264, 3813, 8076, 11, 558, 30, 51374, 51374, 759, 291, 1319, 428, 17407, 4060, 1413, 257, 1150, 11, 550, 291, 486, 362, 281, 6580, 309, 3911, 18407, 633, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.20175537196072665, "compression_ratio": 1.5401785714285714, "no_caption_prob": 0.00016313338710460812}, {"id": 388, "seek": 156572, "start": 1585.92, "end": 1595.28, "text": " If you change your mesh 60 times a second, then you will have to upload it onto GPU every", "tokens": [50364, 663, 311, 264, 1379, 4334, 295, 552, 281, 312, 1075, 281, 1286, 926, 293, 264, 37235, 307, 2673, 50638, 50638, 406, 300, 709, 1412, 562, 5347, 281, 411, 257, 17407, 300, 23122, 257, 588, 3997, 805, 35, 2657, 13, 51054, 51054, 1079, 11, 370, 300, 311, 983, 291, 853, 281, 362, 264, 37235, 1319, 457, 406, 264, 3813, 8076, 11, 558, 30, 51374, 51374, 759, 291, 1319, 428, 17407, 4060, 1413, 257, 1150, 11, 550, 291, 486, 362, 281, 6580, 309, 3911, 18407, 633, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.20175537196072665, "compression_ratio": 1.5401785714285714, "no_caption_prob": 0.00016313338710460812}, {"id": 389, "seek": 159528, "start": 1595.28, "end": 1597.84, "text": " time and that would make it slow.", "tokens": [50364, 565, 293, 300, 576, 652, 309, 2964, 13, 50492, 50492, 407, 2086, 11, 341, 307, 411, 309, 311, 257, 534, 1627, 3389, 19618, 457, 309, 311, 611, 309, 393, 312, 1194, 50808, 50808, 295, 382, 257, 27432, 411, 498, 291, 528, 281, 312, 4473, 264, 17407, 2602, 295, 2684, 309, 926, 13, 51168, 51168, 407, 291, 643, 281, 519, 295, 577, 291, 393, 4584, 437, 291, 528, 538, 406, 4473, 264, 17407, 457, 51416, 51416, 538, 286, 500, 380, 458, 1419, 3866, 3813, 8076, 293, 411, 26381, 552, 294, 264, 636, 291, 528, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.15608606533128389, "compression_ratio": 1.719298245614035, "no_caption_prob": 0.00013131153536960483}, {"id": 390, "seek": 159528, "start": 1597.84, "end": 1604.16, "text": " So yes, this is like it's a really cool performance optimization but it's also it can be thought", "tokens": [50364, 565, 293, 300, 576, 652, 309, 2964, 13, 50492, 50492, 407, 2086, 11, 341, 307, 411, 309, 311, 257, 534, 1627, 3389, 19618, 457, 309, 311, 611, 309, 393, 312, 1194, 50808, 50808, 295, 382, 257, 27432, 411, 498, 291, 528, 281, 312, 4473, 264, 17407, 2602, 295, 2684, 309, 926, 13, 51168, 51168, 407, 291, 643, 281, 519, 295, 577, 291, 393, 4584, 437, 291, 528, 538, 406, 4473, 264, 17407, 457, 51416, 51416, 538, 286, 500, 380, 458, 1419, 3866, 3813, 8076, 293, 411, 26381, 552, 294, 264, 636, 291, 528, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.15608606533128389, "compression_ratio": 1.719298245614035, "no_caption_prob": 0.00013131153536960483}, {"id": 391, "seek": 159528, "start": 1604.16, "end": 1611.36, "text": " of as a limitation like if you want to be changing the mesh instead of moving it around.", "tokens": [50364, 565, 293, 300, 576, 652, 309, 2964, 13, 50492, 50492, 407, 2086, 11, 341, 307, 411, 309, 311, 257, 534, 1627, 3389, 19618, 457, 309, 311, 611, 309, 393, 312, 1194, 50808, 50808, 295, 382, 257, 27432, 411, 498, 291, 528, 281, 312, 4473, 264, 17407, 2602, 295, 2684, 309, 926, 13, 51168, 51168, 407, 291, 643, 281, 519, 295, 577, 291, 393, 4584, 437, 291, 528, 538, 406, 4473, 264, 17407, 457, 51416, 51416, 538, 286, 500, 380, 458, 1419, 3866, 3813, 8076, 293, 411, 26381, 552, 294, 264, 636, 291, 528, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.15608606533128389, "compression_ratio": 1.719298245614035, "no_caption_prob": 0.00013131153536960483}, {"id": 392, "seek": 159528, "start": 1611.36, "end": 1616.32, "text": " So you need to think of how you can achieve what you want by not changing the mesh but", "tokens": [50364, 565, 293, 300, 576, 652, 309, 2964, 13, 50492, 50492, 407, 2086, 11, 341, 307, 411, 309, 311, 257, 534, 1627, 3389, 19618, 457, 309, 311, 611, 309, 393, 312, 1194, 50808, 50808, 295, 382, 257, 27432, 411, 498, 291, 528, 281, 312, 4473, 264, 17407, 2602, 295, 2684, 309, 926, 13, 51168, 51168, 407, 291, 643, 281, 519, 295, 577, 291, 393, 4584, 437, 291, 528, 538, 406, 4473, 264, 17407, 457, 51416, 51416, 538, 286, 500, 380, 458, 1419, 3866, 3813, 8076, 293, 411, 26381, 552, 294, 264, 636, 291, 528, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.15608606533128389, "compression_ratio": 1.719298245614035, "no_caption_prob": 0.00013131153536960483}, {"id": 393, "seek": 159528, "start": 1616.32, "end": 1623.44, "text": " by I don't know having multiple meshes and like positioning them in the way you want.", "tokens": [50364, 565, 293, 300, 576, 652, 309, 2964, 13, 50492, 50492, 407, 2086, 11, 341, 307, 411, 309, 311, 257, 534, 1627, 3389, 19618, 457, 309, 311, 611, 309, 393, 312, 1194, 50808, 50808, 295, 382, 257, 27432, 411, 498, 291, 528, 281, 312, 4473, 264, 17407, 2602, 295, 2684, 309, 926, 13, 51168, 51168, 407, 291, 643, 281, 519, 295, 577, 291, 393, 4584, 437, 291, 528, 538, 406, 4473, 264, 17407, 457, 51416, 51416, 538, 286, 500, 380, 458, 1419, 3866, 3813, 8076, 293, 411, 26381, 552, 294, 264, 636, 291, 528, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.15608606533128389, "compression_ratio": 1.719298245614035, "no_caption_prob": 0.00013131153536960483}, {"id": 394, "seek": 162344, "start": 1623.44, "end": 1626.44, "text": " Then like varying your uniforms for example, right?", "tokens": [50364, 1396, 411, 22984, 428, 37235, 337, 1365, 11, 558, 30, 50514, 50514, 663, 576, 312, 570, 300, 311, 445, 2614, 264, 912, 17407, 300, 309, 311, 40610, 293, 309, 3255, 50824, 50824, 264, 2098, 309, 21716, 2361, 322, 729, 37235, 13, 51126, 51126, 583, 550, 412, 264, 912, 565, 11, 291, 500, 380, 528, 281, 362, 886, 867, 295, 552, 13, 51404, 51404, 1743, 291, 500, 380, 528, 281, 362, 886, 867, 16667, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.1676463102683043, "compression_ratio": 1.6195652173913044, "no_caption_prob": 2.5463648853474297e-05}, {"id": 395, "seek": 162344, "start": 1626.44, "end": 1632.64, "text": " That would be because that's just running the same mesh that it's computed and it knows", "tokens": [50364, 1396, 411, 22984, 428, 37235, 337, 1365, 11, 558, 30, 50514, 50514, 663, 576, 312, 570, 300, 311, 445, 2614, 264, 912, 17407, 300, 309, 311, 40610, 293, 309, 3255, 50824, 50824, 264, 2098, 309, 21716, 2361, 322, 729, 37235, 13, 51126, 51126, 583, 550, 412, 264, 912, 565, 11, 291, 500, 380, 528, 281, 362, 886, 867, 295, 552, 13, 51404, 51404, 1743, 291, 500, 380, 528, 281, 362, 886, 867, 16667, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.1676463102683043, "compression_ratio": 1.6195652173913044, "no_caption_prob": 2.5463648853474297e-05}, {"id": 396, "seek": 162344, "start": 1632.64, "end": 1638.68, "text": " the ways it varies based on those uniforms.", "tokens": [50364, 1396, 411, 22984, 428, 37235, 337, 1365, 11, 558, 30, 50514, 50514, 663, 576, 312, 570, 300, 311, 445, 2614, 264, 912, 17407, 300, 309, 311, 40610, 293, 309, 3255, 50824, 50824, 264, 2098, 309, 21716, 2361, 322, 729, 37235, 13, 51126, 51126, 583, 550, 412, 264, 912, 565, 11, 291, 500, 380, 528, 281, 362, 886, 867, 295, 552, 13, 51404, 51404, 1743, 291, 500, 380, 528, 281, 362, 886, 867, 16667, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.1676463102683043, "compression_ratio": 1.6195652173913044, "no_caption_prob": 2.5463648853474297e-05}, {"id": 397, "seek": 162344, "start": 1638.68, "end": 1644.24, "text": " But then at the same time, you don't want to have too many of them.", "tokens": [50364, 1396, 411, 22984, 428, 37235, 337, 1365, 11, 558, 30, 50514, 50514, 663, 576, 312, 570, 300, 311, 445, 2614, 264, 912, 17407, 300, 309, 311, 40610, 293, 309, 3255, 50824, 50824, 264, 2098, 309, 21716, 2361, 322, 729, 37235, 13, 51126, 51126, 583, 550, 412, 264, 912, 565, 11, 291, 500, 380, 528, 281, 362, 886, 867, 295, 552, 13, 51404, 51404, 1743, 291, 500, 380, 528, 281, 362, 886, 867, 16667, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.1676463102683043, "compression_ratio": 1.6195652173913044, "no_caption_prob": 2.5463648853474297e-05}, {"id": 398, "seek": 162344, "start": 1644.24, "end": 1648.96, "text": " Like you don't want to have too many entities.", "tokens": [50364, 1396, 411, 22984, 428, 37235, 337, 1365, 11, 558, 30, 50514, 50514, 663, 576, 312, 570, 300, 311, 445, 2614, 264, 912, 17407, 300, 309, 311, 40610, 293, 309, 3255, 50824, 50824, 264, 2098, 309, 21716, 2361, 322, 729, 37235, 13, 51126, 51126, 583, 550, 412, 264, 912, 565, 11, 291, 500, 380, 528, 281, 362, 886, 867, 295, 552, 13, 51404, 51404, 1743, 291, 500, 380, 528, 281, 362, 886, 867, 16667, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.1676463102683043, "compression_ratio": 1.6195652173913044, "no_caption_prob": 2.5463648853474297e-05}, {"id": 399, "seek": 164896, "start": 1648.96, "end": 1655.4, "text": " Because each entity internally results in a draw call and a draw call is like this final", "tokens": [50364, 1436, 1184, 13977, 19501, 3542, 294, 257, 2642, 818, 293, 257, 2642, 818, 307, 411, 341, 2572, 50686, 50686, 15058, 295, 439, 264, 721, 1214, 293, 309, 311, 322, 19922, 13, 50950, 50950, 407, 604, 818, 281, 18407, 575, 512, 1333, 295, 27043, 11, 512, 19922, 13, 51336, 51336], "temperature": 0.0, "avg_logprob": -0.1137854071224437, "compression_ratio": 1.4577464788732395, "no_caption_prob": 0.0001122666581068188}, {"id": 400, "seek": 164896, "start": 1655.4, "end": 1660.68, "text": " execution of all the things together and it's on overhead.", "tokens": [50364, 1436, 1184, 13977, 19501, 3542, 294, 257, 2642, 818, 293, 257, 2642, 818, 307, 411, 341, 2572, 50686, 50686, 15058, 295, 439, 264, 721, 1214, 293, 309, 311, 322, 19922, 13, 50950, 50950, 407, 604, 818, 281, 18407, 575, 512, 1333, 295, 27043, 11, 512, 19922, 13, 51336, 51336], "temperature": 0.0, "avg_logprob": -0.1137854071224437, "compression_ratio": 1.4577464788732395, "no_caption_prob": 0.0001122666581068188}, {"id": 401, "seek": 164896, "start": 1660.68, "end": 1668.4, "text": " So any call to GPU has some sort of latency, some overhead.", "tokens": [50364, 1436, 1184, 13977, 19501, 3542, 294, 257, 2642, 818, 293, 257, 2642, 818, 307, 411, 341, 2572, 50686, 50686, 15058, 295, 439, 264, 721, 1214, 293, 309, 311, 322, 19922, 13, 50950, 50950, 407, 604, 818, 281, 18407, 575, 512, 1333, 295, 27043, 11, 512, 19922, 13, 51336, 51336], "temperature": 0.0, "avg_logprob": -0.1137854071224437, "compression_ratio": 1.4577464788732395, "no_caption_prob": 0.0001122666581068188}, {"id": 402, "seek": 166840, "start": 1668.4, "end": 1678.92, "text": " Like even internally what we do is we try to keep the calls or what like the settings", "tokens": [50364, 1743, 754, 19501, 437, 321, 360, 307, 321, 853, 281, 1066, 264, 5498, 420, 437, 411, 264, 6257, 50890, 50890, 420, 754, 411, 37235, 321, 853, 281, 1066, 437, 264, 3894, 2306, 645, 300, 645, 992, 322, 264, 51190, 51190, 9573, 19440, 4319, 13, 51272, 51272, 400, 498, 257, 777, 6916, 1487, 11, 321, 536, 1968, 309, 311, 264, 912, 382, 309, 390, 992, 13, 51554, 51554, 8537, 512, 1333, 295, 7593, 7981, 457, 411, 257, 588, 2199, 472, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.19222625096638998, "compression_ratio": 1.6294416243654823, "no_caption_prob": 0.00016857226728461683}, {"id": 403, "seek": 166840, "start": 1678.92, "end": 1684.92, "text": " or even like uniforms we try to keep what the previous ones were that were set on the", "tokens": [50364, 1743, 754, 19501, 437, 321, 360, 307, 321, 853, 281, 1066, 264, 5498, 420, 437, 411, 264, 6257, 50890, 50890, 420, 754, 411, 37235, 321, 853, 281, 1066, 437, 264, 3894, 2306, 645, 300, 645, 992, 322, 264, 51190, 51190, 9573, 19440, 4319, 13, 51272, 51272, 400, 498, 257, 777, 6916, 1487, 11, 321, 536, 1968, 309, 311, 264, 912, 382, 309, 390, 992, 13, 51554, 51554, 8537, 512, 1333, 295, 7593, 7981, 457, 411, 257, 588, 2199, 472, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.19222625096638998, "compression_ratio": 1.6294416243654823, "no_caption_prob": 0.00016857226728461683}, {"id": 404, "seek": 166840, "start": 1684.92, "end": 1686.5600000000002, "text": " WebGL context.", "tokens": [50364, 1743, 754, 19501, 437, 321, 360, 307, 321, 853, 281, 1066, 264, 5498, 420, 437, 411, 264, 6257, 50890, 50890, 420, 754, 411, 37235, 321, 853, 281, 1066, 437, 264, 3894, 2306, 645, 300, 645, 992, 322, 264, 51190, 51190, 9573, 19440, 4319, 13, 51272, 51272, 400, 498, 257, 777, 6916, 1487, 11, 321, 536, 1968, 309, 311, 264, 912, 382, 309, 390, 992, 13, 51554, 51554, 8537, 512, 1333, 295, 7593, 7981, 457, 411, 257, 588, 2199, 472, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.19222625096638998, "compression_ratio": 1.6294416243654823, "no_caption_prob": 0.00016857226728461683}, {"id": 405, "seek": 166840, "start": 1686.5600000000002, "end": 1692.2, "text": " And if a new operation comes, we see whether it's the same as it was set.", "tokens": [50364, 1743, 754, 19501, 437, 321, 360, 307, 321, 853, 281, 1066, 264, 5498, 420, 437, 411, 264, 6257, 50890, 50890, 420, 754, 411, 37235, 321, 853, 281, 1066, 437, 264, 3894, 2306, 645, 300, 645, 992, 322, 264, 51190, 51190, 9573, 19440, 4319, 13, 51272, 51272, 400, 498, 257, 777, 6916, 1487, 11, 321, 536, 1968, 309, 311, 264, 912, 382, 309, 390, 992, 13, 51554, 51554, 8537, 512, 1333, 295, 7593, 7981, 457, 411, 257, 588, 2199, 472, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.19222625096638998, "compression_ratio": 1.6294416243654823, "no_caption_prob": 0.00016857226728461683}, {"id": 406, "seek": 166840, "start": 1692.2, "end": 1695.48, "text": " Basically some sort of diffusing but like a very simple one.", "tokens": [50364, 1743, 754, 19501, 437, 321, 360, 307, 321, 853, 281, 1066, 264, 5498, 420, 437, 411, 264, 6257, 50890, 50890, 420, 754, 411, 37235, 321, 853, 281, 1066, 437, 264, 3894, 2306, 645, 300, 645, 992, 322, 264, 51190, 51190, 9573, 19440, 4319, 13, 51272, 51272, 400, 498, 257, 777, 6916, 1487, 11, 321, 536, 1968, 309, 311, 264, 912, 382, 309, 390, 992, 13, 51554, 51554, 8537, 512, 1333, 295, 7593, 7981, 457, 411, 257, 588, 2199, 472, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.19222625096638998, "compression_ratio": 1.6294416243654823, "no_caption_prob": 0.00016857226728461683}, {"id": 407, "seek": 169548, "start": 1695.48, "end": 1702.52, "text": " And we do not do it if it is the same to reduce the number of calls to WebGL.", "tokens": [50364, 400, 321, 360, 406, 360, 309, 498, 309, 307, 264, 912, 281, 5407, 264, 1230, 295, 5498, 281, 9573, 19440, 13, 50716, 50716, 509, 4382, 281, 360, 364, 14949, 1520, 949, 8568, 1968, 291, 643, 281, 1190, 949, 22407, 13, 51186, 51186, 407, 718, 311, 352, 646, 281, 1419, 1359, 37235, 293, 3813, 8076, 300, 500, 380, 1319, 13, 51446, 51446, 961, 311, 3811, 286, 528, 281, 2642, 257, 1011, 293, 286, 362, 472, 17407, 680, 5984, 293, 472, 17407, 337, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13374660716337317, "compression_ratio": 1.5450236966824644, "no_caption_prob": 0.00013123778626322746}, {"id": 408, "seek": 169548, "start": 1702.52, "end": 1711.92, "text": " You prefer to do an equality check before checking whether you need to run before rendering.", "tokens": [50364, 400, 321, 360, 406, 360, 309, 498, 309, 307, 264, 912, 281, 5407, 264, 1230, 295, 5498, 281, 9573, 19440, 13, 50716, 50716, 509, 4382, 281, 360, 364, 14949, 1520, 949, 8568, 1968, 291, 643, 281, 1190, 949, 22407, 13, 51186, 51186, 407, 718, 311, 352, 646, 281, 1419, 1359, 37235, 293, 3813, 8076, 300, 500, 380, 1319, 13, 51446, 51446, 961, 311, 3811, 286, 528, 281, 2642, 257, 1011, 293, 286, 362, 472, 17407, 680, 5984, 293, 472, 17407, 337, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13374660716337317, "compression_ratio": 1.5450236966824644, "no_caption_prob": 0.00013123778626322746}, {"id": 409, "seek": 169548, "start": 1711.92, "end": 1717.1200000000001, "text": " So let's go back to having small uniforms and meshes that don't change.", "tokens": [50364, 400, 321, 360, 406, 360, 309, 498, 309, 307, 264, 912, 281, 5407, 264, 1230, 295, 5498, 281, 9573, 19440, 13, 50716, 50716, 509, 4382, 281, 360, 364, 14949, 1520, 949, 8568, 1968, 291, 643, 281, 1190, 949, 22407, 13, 51186, 51186, 407, 718, 311, 352, 646, 281, 1419, 1359, 37235, 293, 3813, 8076, 300, 500, 380, 1319, 13, 51446, 51446, 961, 311, 3811, 286, 528, 281, 2642, 257, 1011, 293, 286, 362, 472, 17407, 680, 5984, 293, 472, 17407, 337, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13374660716337317, "compression_ratio": 1.5450236966824644, "no_caption_prob": 0.00013123778626322746}, {"id": 410, "seek": 169548, "start": 1717.1200000000001, "end": 1722.64, "text": " Let's imagine I want to draw a hand and I have one mesh per finger and one mesh for", "tokens": [50364, 400, 321, 360, 406, 360, 309, 498, 309, 307, 264, 912, 281, 5407, 264, 1230, 295, 5498, 281, 9573, 19440, 13, 50716, 50716, 509, 4382, 281, 360, 364, 14949, 1520, 949, 8568, 1968, 291, 643, 281, 1190, 949, 22407, 13, 51186, 51186, 407, 718, 311, 352, 646, 281, 1419, 1359, 37235, 293, 3813, 8076, 300, 500, 380, 1319, 13, 51446, 51446, 961, 311, 3811, 286, 528, 281, 2642, 257, 1011, 293, 286, 362, 472, 17407, 680, 5984, 293, 472, 17407, 337, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13374660716337317, "compression_ratio": 1.5450236966824644, "no_caption_prob": 0.00013123778626322746}, {"id": 411, "seek": 172264, "start": 1722.64, "end": 1726.44, "text": " the entire hand and I want to move the fingers.", "tokens": [50364, 264, 2302, 1011, 293, 286, 528, 281, 1286, 264, 7350, 13, 50554, 50554, 1144, 286, 362, 257, 9452, 300, 23122, 411, 264, 12447, 295, 264, 5984, 420, 360, 286, 362, 411, 472, 50982, 50982, 17407, 337, 264, 2302, 1011, 30, 51208, 51208, 663, 311, 364, 1880, 1168, 13, 51282, 51282, 286, 2378, 380, 1096, 341, 457, 286, 393, 519, 295, 577, 309, 311, 1944, 281, 360, 309, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16545960638258192, "compression_ratio": 1.579268292682927, "no_caption_prob": 8.219243318308145e-05}, {"id": 412, "seek": 172264, "start": 1726.44, "end": 1735.0, "text": " Do I have a uniform that defines like the rotation of the finger or do I have like one", "tokens": [50364, 264, 2302, 1011, 293, 286, 528, 281, 1286, 264, 7350, 13, 50554, 50554, 1144, 286, 362, 257, 9452, 300, 23122, 411, 264, 12447, 295, 264, 5984, 420, 360, 286, 362, 411, 472, 50982, 50982, 17407, 337, 264, 2302, 1011, 30, 51208, 51208, 663, 311, 364, 1880, 1168, 13, 51282, 51282, 286, 2378, 380, 1096, 341, 457, 286, 393, 519, 295, 577, 309, 311, 1944, 281, 360, 309, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16545960638258192, "compression_ratio": 1.579268292682927, "no_caption_prob": 8.219243318308145e-05}, {"id": 413, "seek": 172264, "start": 1735.0, "end": 1739.5200000000002, "text": " mesh for the entire hand?", "tokens": [50364, 264, 2302, 1011, 293, 286, 528, 281, 1286, 264, 7350, 13, 50554, 50554, 1144, 286, 362, 257, 9452, 300, 23122, 411, 264, 12447, 295, 264, 5984, 420, 360, 286, 362, 411, 472, 50982, 50982, 17407, 337, 264, 2302, 1011, 30, 51208, 51208, 663, 311, 364, 1880, 1168, 13, 51282, 51282, 286, 2378, 380, 1096, 341, 457, 286, 393, 519, 295, 577, 309, 311, 1944, 281, 360, 309, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16545960638258192, "compression_ratio": 1.579268292682927, "no_caption_prob": 8.219243318308145e-05}, {"id": 414, "seek": 172264, "start": 1739.5200000000002, "end": 1741.0, "text": " That's an interesting question.", "tokens": [50364, 264, 2302, 1011, 293, 286, 528, 281, 1286, 264, 7350, 13, 50554, 50554, 1144, 286, 362, 257, 9452, 300, 23122, 411, 264, 12447, 295, 264, 5984, 420, 360, 286, 362, 411, 472, 50982, 50982, 17407, 337, 264, 2302, 1011, 30, 51208, 51208, 663, 311, 364, 1880, 1168, 13, 51282, 51282, 286, 2378, 380, 1096, 341, 457, 286, 393, 519, 295, 577, 309, 311, 1944, 281, 360, 309, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16545960638258192, "compression_ratio": 1.579268292682927, "no_caption_prob": 8.219243318308145e-05}, {"id": 415, "seek": 172264, "start": 1741.0, "end": 1746.88, "text": " I haven't done this but I can think of how it's possible to do it.", "tokens": [50364, 264, 2302, 1011, 293, 286, 528, 281, 1286, 264, 7350, 13, 50554, 50554, 1144, 286, 362, 257, 9452, 300, 23122, 411, 264, 12447, 295, 264, 5984, 420, 360, 286, 362, 411, 472, 50982, 50982, 17407, 337, 264, 2302, 1011, 30, 51208, 51208, 663, 311, 364, 1880, 1168, 13, 51282, 51282, 286, 2378, 380, 1096, 341, 457, 286, 393, 519, 295, 577, 309, 311, 1944, 281, 360, 309, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.16545960638258192, "compression_ratio": 1.579268292682927, "no_caption_prob": 8.219243318308145e-05}, {"id": 416, "seek": 174688, "start": 1746.88, "end": 1755.92, "text": " I think what you sort of need is you need to define a skeleton of some sort.", "tokens": [50364, 286, 519, 437, 291, 1333, 295, 643, 307, 291, 643, 281, 6964, 257, 25204, 295, 512, 1333, 13, 50816, 50816, 400, 498, 291, 519, 300, 264, 4957, 2535, 307, 295, 264, 1011, 11, 550, 286, 2041, 291, 393, 360, 411, 51190, 51190, 264, 958, 411, 9026, 420, 746, 291, 393, 16500, 309, 294, 264, 15670, 1185, 295, 264, 1011, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.2066720426082611, "compression_ratio": 1.6258064516129032, "no_caption_prob": 3.589214975363575e-05}, {"id": 417, "seek": 174688, "start": 1755.92, "end": 1763.4, "text": " And if you think that the origin position is of the hand, then I guess you can do like", "tokens": [50364, 286, 519, 437, 291, 1333, 295, 643, 307, 291, 643, 281, 6964, 257, 25204, 295, 512, 1333, 13, 50816, 50816, 400, 498, 291, 519, 300, 264, 4957, 2535, 307, 295, 264, 1011, 11, 550, 286, 2041, 291, 393, 360, 411, 51190, 51190, 264, 958, 411, 9026, 420, 746, 291, 393, 16500, 309, 294, 264, 15670, 1185, 295, 264, 1011, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.2066720426082611, "compression_ratio": 1.6258064516129032, "no_caption_prob": 3.589214975363575e-05}, {"id": 418, "seek": 174688, "start": 1763.4, "end": 1769.0400000000002, "text": " the next like bone or something you can specify it in the coordinate system of the hand.", "tokens": [50364, 286, 519, 437, 291, 1333, 295, 643, 307, 291, 643, 281, 6964, 257, 25204, 295, 512, 1333, 13, 50816, 50816, 400, 498, 291, 519, 300, 264, 4957, 2535, 307, 295, 264, 1011, 11, 550, 286, 2041, 291, 393, 360, 411, 51190, 51190, 264, 958, 411, 9026, 420, 746, 291, 393, 16500, 309, 294, 264, 15670, 1185, 295, 264, 1011, 13, 51472, 51472], "temperature": 0.0, "avg_logprob": -0.2066720426082611, "compression_ratio": 1.6258064516129032, "no_caption_prob": 3.589214975363575e-05}, {"id": 419, "seek": 176904, "start": 1769.04, "end": 1777.56, "text": " And then you can have some sort of tree built up that has like relative positions in it.", "tokens": [50364, 400, 550, 291, 393, 362, 512, 1333, 295, 4230, 3094, 493, 300, 575, 411, 4972, 8432, 294, 309, 13, 50790, 50790, 400, 550, 498, 291, 1286, 264, 1011, 11, 550, 1203, 1646, 486, 1286, 365, 309, 13, 51096, 51096, 583, 550, 437, 291, 643, 281, 360, 19501, 11, 291, 576, 643, 281, 24183, 484, 439, 264, 34852, 51360, 51360, 570, 294, 264, 917, 291, 434, 22407, 257, 1329, 295, 721, 11, 558, 30, 51531, 51531, 407, 633, 9026, 486, 362, 281, 312, 364, 4478, 294, 300, 1329, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.11234457596488621, "compression_ratio": 1.6517857142857142, "no_caption_prob": 0.00011765217641368508}, {"id": 420, "seek": 176904, "start": 1777.56, "end": 1783.68, "text": " And then if you move the hand, then everything else will move with it.", "tokens": [50364, 400, 550, 291, 393, 362, 512, 1333, 295, 4230, 3094, 493, 300, 575, 411, 4972, 8432, 294, 309, 13, 50790, 50790, 400, 550, 498, 291, 1286, 264, 1011, 11, 550, 1203, 1646, 486, 1286, 365, 309, 13, 51096, 51096, 583, 550, 437, 291, 643, 281, 360, 19501, 11, 291, 576, 643, 281, 24183, 484, 439, 264, 34852, 51360, 51360, 570, 294, 264, 917, 291, 434, 22407, 257, 1329, 295, 721, 11, 558, 30, 51531, 51531, 407, 633, 9026, 486, 362, 281, 312, 364, 4478, 294, 300, 1329, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.11234457596488621, "compression_ratio": 1.6517857142857142, "no_caption_prob": 0.00011765217641368508}, {"id": 421, "seek": 176904, "start": 1783.68, "end": 1788.96, "text": " But then what you need to do internally, you would need to flatten out all the transformations", "tokens": [50364, 400, 550, 291, 393, 362, 512, 1333, 295, 4230, 3094, 493, 300, 575, 411, 4972, 8432, 294, 309, 13, 50790, 50790, 400, 550, 498, 291, 1286, 264, 1011, 11, 550, 1203, 1646, 486, 1286, 365, 309, 13, 51096, 51096, 583, 550, 437, 291, 643, 281, 360, 19501, 11, 291, 576, 643, 281, 24183, 484, 439, 264, 34852, 51360, 51360, 570, 294, 264, 917, 291, 434, 22407, 257, 1329, 295, 721, 11, 558, 30, 51531, 51531, 407, 633, 9026, 486, 362, 281, 312, 364, 4478, 294, 300, 1329, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.11234457596488621, "compression_ratio": 1.6517857142857142, "no_caption_prob": 0.00011765217641368508}, {"id": 422, "seek": 176904, "start": 1788.96, "end": 1792.3799999999999, "text": " because in the end you're rendering a list of things, right?", "tokens": [50364, 400, 550, 291, 393, 362, 512, 1333, 295, 4230, 3094, 493, 300, 575, 411, 4972, 8432, 294, 309, 13, 50790, 50790, 400, 550, 498, 291, 1286, 264, 1011, 11, 550, 1203, 1646, 486, 1286, 365, 309, 13, 51096, 51096, 583, 550, 437, 291, 643, 281, 360, 19501, 11, 291, 576, 643, 281, 24183, 484, 439, 264, 34852, 51360, 51360, 570, 294, 264, 917, 291, 434, 22407, 257, 1329, 295, 721, 11, 558, 30, 51531, 51531, 407, 633, 9026, 486, 362, 281, 312, 364, 4478, 294, 300, 1329, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.11234457596488621, "compression_ratio": 1.6517857142857142, "no_caption_prob": 0.00011765217641368508}, {"id": 423, "seek": 176904, "start": 1792.3799999999999, "end": 1795.72, "text": " So every bone will have to be an element in that list.", "tokens": [50364, 400, 550, 291, 393, 362, 512, 1333, 295, 4230, 3094, 493, 300, 575, 411, 4972, 8432, 294, 309, 13, 50790, 50790, 400, 550, 498, 291, 1286, 264, 1011, 11, 550, 1203, 1646, 486, 1286, 365, 309, 13, 51096, 51096, 583, 550, 437, 291, 643, 281, 360, 19501, 11, 291, 576, 643, 281, 24183, 484, 439, 264, 34852, 51360, 51360, 570, 294, 264, 917, 291, 434, 22407, 257, 1329, 295, 721, 11, 558, 30, 51531, 51531, 407, 633, 9026, 486, 362, 281, 312, 364, 4478, 294, 300, 1329, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.11234457596488621, "compression_ratio": 1.6517857142857142, "no_caption_prob": 0.00011765217641368508}, {"id": 424, "seek": 179572, "start": 1795.72, "end": 1801.76, "text": " So you would need to compose its transformation with the positional transformation of the", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 425, "seek": 179572, "start": 1801.76, "end": 1803.1200000000001, "text": " hand itself.", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 426, "seek": 179572, "start": 1803.1200000000001, "end": 1805.32, "text": " Which you would do using matrices?", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 427, "seek": 179572, "start": 1805.32, "end": 1806.32, "text": " Yeah.", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 428, "seek": 179572, "start": 1806.32, "end": 1807.32, "text": " Okay.", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 429, "seek": 179572, "start": 1807.32, "end": 1808.32, "text": " Yeah.", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 430, "seek": 179572, "start": 1808.32, "end": 1814.48, "text": " That's the raw WebGL approach because in the end you pass like a matrix 4 and in the end", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 431, "seek": 179572, "start": 1814.48, "end": 1819.84, "text": " you use this like matrix multiplication on the GPU.", "tokens": [50364, 407, 291, 576, 643, 281, 35925, 1080, 9887, 365, 264, 2535, 304, 9887, 295, 264, 50666, 50666, 1011, 2564, 13, 50734, 50734, 3013, 291, 576, 360, 1228, 32284, 30, 50844, 50844, 865, 13, 50894, 50894, 1033, 13, 50944, 50944, 865, 13, 50994, 50994, 663, 311, 264, 8936, 9573, 19440, 3109, 570, 294, 264, 917, 291, 1320, 411, 257, 8141, 1017, 293, 294, 264, 917, 51302, 51302, 291, 764, 341, 411, 8141, 27290, 322, 264, 18407, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.233063006401062, "compression_ratio": 1.608695652173913, "no_caption_prob": 5.828286521136761e-05}, {"id": 432, "seek": 181984, "start": 1819.84, "end": 1825.9199999999998, "text": " But there are other ways to model things like using a library called Elm Geometry from Ian", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 433, "seek": 181984, "start": 1825.9199999999998, "end": 1831.1999999999998, "text": " McKenzie which is a completely different way of thinking of transformations.", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 434, "seek": 181984, "start": 1831.1999999999998, "end": 1837.32, "text": " There are types like frame 3D and that type gives you the possibility to transform between", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 435, "seek": 181984, "start": 1837.32, "end": 1839.08, "text": " two coordinate systems.", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 436, "seek": 181984, "start": 1839.08, "end": 1840.08, "text": " Interesting.", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 437, "seek": 181984, "start": 1840.08, "end": 1844.74, "text": " But at the end of the day GPUs only understand matrices, right?", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 438, "seek": 181984, "start": 1844.74, "end": 1846.08, "text": " Like that's basically\u2026", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 439, "seek": 181984, "start": 1846.08, "end": 1847.08, "text": " Yeah.", "tokens": [50364, 583, 456, 366, 661, 2098, 281, 2316, 721, 411, 1228, 257, 6405, 1219, 2699, 76, 2876, 34730, 490, 19595, 50668, 50668, 21765, 32203, 597, 307, 257, 2584, 819, 636, 295, 1953, 295, 34852, 13, 50932, 50932, 821, 366, 3467, 411, 3920, 805, 35, 293, 300, 2010, 2709, 291, 264, 7959, 281, 4088, 1296, 51238, 51238, 732, 15670, 3652, 13, 51326, 51326, 14711, 13, 51376, 51376, 583, 412, 264, 917, 295, 264, 786, 18407, 82, 787, 1223, 32284, 11, 558, 30, 51609, 51609, 1743, 300, 311, 1936, 1260, 51676, 51676, 865, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.21542906510202509, "compression_ratio": 1.453183520599251, "no_caption_prob": 0.00011227029608562589}, {"id": 440, "seek": 184708, "start": 1847.08, "end": 1854.8, "text": " So the way down when you want to render you would have to convert frame 3D into matrix", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 441, "seek": 184708, "start": 1854.8, "end": 1855.8, "text": " 4.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 442, "seek": 184708, "start": 1855.8, "end": 1856.8, "text": " Right.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 443, "seek": 184708, "start": 1856.8, "end": 1857.8, "text": " Right.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 444, "seek": 184708, "start": 1857.8, "end": 1858.8, "text": " To speak the language of the GPU.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 445, "seek": 184708, "start": 1858.8, "end": 1859.8, "text": " Yeah.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 446, "seek": 184708, "start": 1859.8, "end": 1860.8, "text": " Okay.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 447, "seek": 184708, "start": 1860.8, "end": 1861.8, "text": " So if we're\u2026", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 448, "seek": 184708, "start": 1861.8, "end": 1862.8, "text": " Okay.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 449, "seek": 184708, "start": 1862.8, "end": 1869.8, "text": " So we've got our like our shader for our cube and we've got our faces defined which is our", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 450, "seek": 184708, "start": 1869.8, "end": 1871.4399999999998, "text": " cube mesh, right?", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 451, "seek": 184708, "start": 1871.4399999999998, "end": 1874.8799999999999, "text": " Our mesh is all of the faces of this cube.", "tokens": [50364, 407, 264, 636, 760, 562, 291, 528, 281, 15529, 291, 576, 362, 281, 7620, 3920, 805, 35, 666, 8141, 50750, 50750, 1017, 13, 50800, 50800, 1779, 13, 50850, 50850, 1779, 13, 50900, 50900, 1407, 1710, 264, 2856, 295, 264, 18407, 13, 50950, 50950, 865, 13, 51000, 51000, 1033, 13, 51050, 51050, 407, 498, 321, 434, 1260, 51100, 51100, 1033, 13, 51150, 51150, 407, 321, 600, 658, 527, 411, 527, 5744, 260, 337, 527, 13728, 293, 321, 600, 658, 527, 8475, 7642, 597, 307, 527, 51500, 51500, 13728, 17407, 11, 558, 30, 51582, 51582, 2621, 17407, 307, 439, 295, 264, 8475, 295, 341, 13728, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.16910261578030056, "compression_ratio": 1.5384615384615385, "no_caption_prob": 7.842342893127352e-05}, {"id": 452, "seek": 187488, "start": 1874.88, "end": 1880.48, "text": " And then we create an entity from that mesh which defines the faces of the cube and the", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 453, "seek": 187488, "start": 1880.48, "end": 1881.68, "text": " shader which\u2026", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 454, "seek": 187488, "start": 1881.68, "end": 1882.68, "text": " Two shaders.", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 455, "seek": 187488, "start": 1882.68, "end": 1883.68, "text": " Two shaders.", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 456, "seek": 187488, "start": 1883.68, "end": 1884.68, "text": " Okay.", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 457, "seek": 187488, "start": 1884.68, "end": 1886.2800000000002, "text": " So what are those two shaders?", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 458, "seek": 187488, "start": 1886.2800000000002, "end": 1889.8400000000001, "text": " So the vertex shader and the fragment shader.", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 459, "seek": 187488, "start": 1889.8400000000001, "end": 1895.7600000000002, "text": " The vertex shader would work, would be called for each of the vertices and it will be passed", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 460, "seek": 187488, "start": 1895.7600000000002, "end": 1901.8400000000001, "text": " attributes like that are that we attached to all the points that define those triangles", "tokens": [50364, 400, 550, 321, 1884, 364, 13977, 490, 300, 17407, 597, 23122, 264, 8475, 295, 264, 13728, 293, 264, 50644, 50644, 5744, 260, 597, 1260, 50704, 50704, 4453, 5744, 433, 13, 50754, 50754, 4453, 5744, 433, 13, 50804, 50804, 1033, 13, 50854, 50854, 407, 437, 366, 729, 732, 5744, 433, 30, 50934, 50934, 407, 264, 28162, 5744, 260, 293, 264, 26424, 5744, 260, 13, 51112, 51112, 440, 28162, 5744, 260, 576, 589, 11, 576, 312, 1219, 337, 1184, 295, 264, 32053, 293, 309, 486, 312, 4678, 51408, 51408, 17212, 411, 300, 366, 300, 321, 8570, 281, 439, 264, 2793, 300, 6964, 729, 29896, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.13648413712123655, "compression_ratio": 1.7300884955752212, "no_caption_prob": 3.6476638342719525e-05}, {"id": 461, "seek": 190184, "start": 1901.84, "end": 1910.3999999999999, "text": " from the mesh and the output is where things can be found on the screen in the clip space", "tokens": [50364, 490, 264, 17407, 293, 264, 5598, 307, 689, 721, 393, 312, 1352, 322, 264, 2568, 294, 264, 7353, 1901, 50792, 50792, 21056, 13, 50842, 50842, 407, 309, 311, 411, 490, 3175, 472, 281, 472, 322, 439, 10298, 13, 51048, 51048, 407, 309, 311, 406, 411, 18668, 15670, 13, 51190, 51190, 400, 550, 264, 26424, 5744, 260, 6676, 293, 309, 6676, 337, 439, 264, 18668, 1951, 1184, 13369, 293, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09848495986726549, "compression_ratio": 1.6331360946745561, "no_caption_prob": 5.1413309847703204e-05}, {"id": 462, "seek": 190184, "start": 1910.3999999999999, "end": 1911.3999999999999, "text": " coordinates.", "tokens": [50364, 490, 264, 17407, 293, 264, 5598, 307, 689, 721, 393, 312, 1352, 322, 264, 2568, 294, 264, 7353, 1901, 50792, 50792, 21056, 13, 50842, 50842, 407, 309, 311, 411, 490, 3175, 472, 281, 472, 322, 439, 10298, 13, 51048, 51048, 407, 309, 311, 406, 411, 18668, 15670, 13, 51190, 51190, 400, 550, 264, 26424, 5744, 260, 6676, 293, 309, 6676, 337, 439, 264, 18668, 1951, 1184, 13369, 293, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09848495986726549, "compression_ratio": 1.6331360946745561, "no_caption_prob": 5.1413309847703204e-05}, {"id": 463, "seek": 190184, "start": 1911.3999999999999, "end": 1915.52, "text": " So it's like from minus one to one on all axis.", "tokens": [50364, 490, 264, 17407, 293, 264, 5598, 307, 689, 721, 393, 312, 1352, 322, 264, 2568, 294, 264, 7353, 1901, 50792, 50792, 21056, 13, 50842, 50842, 407, 309, 311, 411, 490, 3175, 472, 281, 472, 322, 439, 10298, 13, 51048, 51048, 407, 309, 311, 406, 411, 18668, 15670, 13, 51190, 51190, 400, 550, 264, 26424, 5744, 260, 6676, 293, 309, 6676, 337, 439, 264, 18668, 1951, 1184, 13369, 293, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09848495986726549, "compression_ratio": 1.6331360946745561, "no_caption_prob": 5.1413309847703204e-05}, {"id": 464, "seek": 190184, "start": 1915.52, "end": 1918.36, "text": " So it's not like pixels coordinate.", "tokens": [50364, 490, 264, 17407, 293, 264, 5598, 307, 689, 721, 393, 312, 1352, 322, 264, 2568, 294, 264, 7353, 1901, 50792, 50792, 21056, 13, 50842, 50842, 407, 309, 311, 411, 490, 3175, 472, 281, 472, 322, 439, 10298, 13, 51048, 51048, 407, 309, 311, 406, 411, 18668, 15670, 13, 51190, 51190, 400, 550, 264, 26424, 5744, 260, 6676, 293, 309, 6676, 337, 439, 264, 18668, 1951, 1184, 13369, 293, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09848495986726549, "compression_ratio": 1.6331360946745561, "no_caption_prob": 5.1413309847703204e-05}, {"id": 465, "seek": 190184, "start": 1918.36, "end": 1926.04, "text": " And then the fragment shader runs and it runs for all the pixels within each triangle and", "tokens": [50364, 490, 264, 17407, 293, 264, 5598, 307, 689, 721, 393, 312, 1352, 322, 264, 2568, 294, 264, 7353, 1901, 50792, 50792, 21056, 13, 50842, 50842, 407, 309, 311, 411, 490, 3175, 472, 281, 472, 322, 439, 10298, 13, 51048, 51048, 407, 309, 311, 406, 411, 18668, 15670, 13, 51190, 51190, 400, 550, 264, 26424, 5744, 260, 6676, 293, 309, 6676, 337, 439, 264, 18668, 1951, 1184, 13369, 293, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09848495986726549, "compression_ratio": 1.6331360946745561, "no_caption_prob": 5.1413309847703204e-05}, {"id": 466, "seek": 192604, "start": 1926.04, "end": 1934.12, "text": " it returns a color which is RGBA and it's defined as also like from zero to one for", "tokens": [50364, 309, 11247, 257, 2017, 597, 307, 31231, 32, 293, 309, 311, 7642, 382, 611, 411, 490, 4018, 281, 472, 337, 50768, 50768, 1184, 6542, 13, 50822, 50822, 407, 497, 490, 4018, 281, 472, 11, 363, 490, 4018, 281, 472, 13, 51012, 51012, 407, 264, 26424, 5744, 260, 6676, 337, 633, 19261, 300, 576, 312, 1612, 322, 264, 2568, 30, 51336, 51336, 1033, 13, 51386, 51386, 286, 914, 309, 311, 406, 15866, 1340, 300, 2759, 380, 312, 1612, 322, 264, 2568, 570, 309, 311, 2261, 51682, 51682, 264, 2799, 420, 746, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18899499993575247, "compression_ratio": 1.693069306930693, "no_caption_prob": 9.312557085650042e-05}, {"id": 467, "seek": 192604, "start": 1934.12, "end": 1935.2, "text": " each component.", "tokens": [50364, 309, 11247, 257, 2017, 597, 307, 31231, 32, 293, 309, 311, 7642, 382, 611, 411, 490, 4018, 281, 472, 337, 50768, 50768, 1184, 6542, 13, 50822, 50822, 407, 497, 490, 4018, 281, 472, 11, 363, 490, 4018, 281, 472, 13, 51012, 51012, 407, 264, 26424, 5744, 260, 6676, 337, 633, 19261, 300, 576, 312, 1612, 322, 264, 2568, 30, 51336, 51336, 1033, 13, 51386, 51386, 286, 914, 309, 311, 406, 15866, 1340, 300, 2759, 380, 312, 1612, 322, 264, 2568, 570, 309, 311, 2261, 51682, 51682, 264, 2799, 420, 746, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18899499993575247, "compression_ratio": 1.693069306930693, "no_caption_prob": 9.312557085650042e-05}, {"id": 468, "seek": 192604, "start": 1935.2, "end": 1939.0, "text": " So R from zero to one, B from zero to one.", "tokens": [50364, 309, 11247, 257, 2017, 597, 307, 31231, 32, 293, 309, 311, 7642, 382, 611, 411, 490, 4018, 281, 472, 337, 50768, 50768, 1184, 6542, 13, 50822, 50822, 407, 497, 490, 4018, 281, 472, 11, 363, 490, 4018, 281, 472, 13, 51012, 51012, 407, 264, 26424, 5744, 260, 6676, 337, 633, 19261, 300, 576, 312, 1612, 322, 264, 2568, 30, 51336, 51336, 1033, 13, 51386, 51386, 286, 914, 309, 311, 406, 15866, 1340, 300, 2759, 380, 312, 1612, 322, 264, 2568, 570, 309, 311, 2261, 51682, 51682, 264, 2799, 420, 746, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18899499993575247, "compression_ratio": 1.693069306930693, "no_caption_prob": 9.312557085650042e-05}, {"id": 469, "seek": 192604, "start": 1939.0, "end": 1945.48, "text": " So the fragment shader runs for every pixel that would be seen on the screen?", "tokens": [50364, 309, 11247, 257, 2017, 597, 307, 31231, 32, 293, 309, 311, 7642, 382, 611, 411, 490, 4018, 281, 472, 337, 50768, 50768, 1184, 6542, 13, 50822, 50822, 407, 497, 490, 4018, 281, 472, 11, 363, 490, 4018, 281, 472, 13, 51012, 51012, 407, 264, 26424, 5744, 260, 6676, 337, 633, 19261, 300, 576, 312, 1612, 322, 264, 2568, 30, 51336, 51336, 1033, 13, 51386, 51386, 286, 914, 309, 311, 406, 15866, 1340, 300, 2759, 380, 312, 1612, 322, 264, 2568, 570, 309, 311, 2261, 51682, 51682, 264, 2799, 420, 746, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18899499993575247, "compression_ratio": 1.693069306930693, "no_caption_prob": 9.312557085650042e-05}, {"id": 470, "seek": 192604, "start": 1945.48, "end": 1946.48, "text": " Okay.", "tokens": [50364, 309, 11247, 257, 2017, 597, 307, 31231, 32, 293, 309, 311, 7642, 382, 611, 411, 490, 4018, 281, 472, 337, 50768, 50768, 1184, 6542, 13, 50822, 50822, 407, 497, 490, 4018, 281, 472, 11, 363, 490, 4018, 281, 472, 13, 51012, 51012, 407, 264, 26424, 5744, 260, 6676, 337, 633, 19261, 300, 576, 312, 1612, 322, 264, 2568, 30, 51336, 51336, 1033, 13, 51386, 51386, 286, 914, 309, 311, 406, 15866, 1340, 300, 2759, 380, 312, 1612, 322, 264, 2568, 570, 309, 311, 2261, 51682, 51682, 264, 2799, 420, 746, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18899499993575247, "compression_ratio": 1.693069306930693, "no_caption_prob": 9.312557085650042e-05}, {"id": 471, "seek": 192604, "start": 1946.48, "end": 1952.3999999999999, "text": " I mean it's not computing anything that wouldn't be seen on the screen because it's behind", "tokens": [50364, 309, 11247, 257, 2017, 597, 307, 31231, 32, 293, 309, 311, 7642, 382, 611, 411, 490, 4018, 281, 472, 337, 50768, 50768, 1184, 6542, 13, 50822, 50822, 407, 497, 490, 4018, 281, 472, 11, 363, 490, 4018, 281, 472, 13, 51012, 51012, 407, 264, 26424, 5744, 260, 6676, 337, 633, 19261, 300, 576, 312, 1612, 322, 264, 2568, 30, 51336, 51336, 1033, 13, 51386, 51386, 286, 914, 309, 311, 406, 15866, 1340, 300, 2759, 380, 312, 1612, 322, 264, 2568, 570, 309, 311, 2261, 51682, 51682, 264, 2799, 420, 746, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18899499993575247, "compression_ratio": 1.693069306930693, "no_caption_prob": 9.312557085650042e-05}, {"id": 472, "seek": 192604, "start": 1952.3999999999999, "end": 1953.8, "text": " the camera or something.", "tokens": [50364, 309, 11247, 257, 2017, 597, 307, 31231, 32, 293, 309, 311, 7642, 382, 611, 411, 490, 4018, 281, 472, 337, 50768, 50768, 1184, 6542, 13, 50822, 50822, 407, 497, 490, 4018, 281, 472, 11, 363, 490, 4018, 281, 472, 13, 51012, 51012, 407, 264, 26424, 5744, 260, 6676, 337, 633, 19261, 300, 576, 312, 1612, 322, 264, 2568, 30, 51336, 51336, 1033, 13, 51386, 51386, 286, 914, 309, 311, 406, 15866, 1340, 300, 2759, 380, 312, 1612, 322, 264, 2568, 570, 309, 311, 2261, 51682, 51682, 264, 2799, 420, 746, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18899499993575247, "compression_ratio": 1.693069306930693, "no_caption_prob": 9.312557085650042e-05}, {"id": 473, "seek": 195380, "start": 1953.8, "end": 1956.76, "text": " Yeah, so what like there are things.", "tokens": [50364, 865, 11, 370, 437, 411, 456, 366, 721, 13, 50512, 50512, 865, 13, 50562, 50562, 407, 498, 257, 551, 307, 2380, 295, 264, 8974, 1859, 11, 286, 519, 456, 366, 819, 2098, 411, 291, 50820, 50820, 393, 483, 3973, 295, 646, 7170, 29896, 498, 291, 11, 1392, 11, 300, 311, 257, 11, 718, 385, 519, 257, 857, 544, 13, 51208, 51208, 286, 603, 2903, 341, 13, 51328, 51328, 1133, 291, 6964, 264, 22743, 8141, 11, 291, 643, 281, 1320, 732, 4190, 11, 597, 307, 264, 23831, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.2799576865302192, "compression_ratio": 1.542857142857143, "no_caption_prob": 8.217174035962671e-05}, {"id": 474, "seek": 195380, "start": 1956.76, "end": 1957.76, "text": " Yeah.", "tokens": [50364, 865, 11, 370, 437, 411, 456, 366, 721, 13, 50512, 50512, 865, 13, 50562, 50562, 407, 498, 257, 551, 307, 2380, 295, 264, 8974, 1859, 11, 286, 519, 456, 366, 819, 2098, 411, 291, 50820, 50820, 393, 483, 3973, 295, 646, 7170, 29896, 498, 291, 11, 1392, 11, 300, 311, 257, 11, 718, 385, 519, 257, 857, 544, 13, 51208, 51208, 286, 603, 2903, 341, 13, 51328, 51328, 1133, 291, 6964, 264, 22743, 8141, 11, 291, 643, 281, 1320, 732, 4190, 11, 597, 307, 264, 23831, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.2799576865302192, "compression_ratio": 1.542857142857143, "no_caption_prob": 8.217174035962671e-05}, {"id": 475, "seek": 195380, "start": 1957.76, "end": 1962.9199999999998, "text": " So if a thing is outside of the visible area, I think there are different ways like you", "tokens": [50364, 865, 11, 370, 437, 411, 456, 366, 721, 13, 50512, 50512, 865, 13, 50562, 50562, 407, 498, 257, 551, 307, 2380, 295, 264, 8974, 1859, 11, 286, 519, 456, 366, 819, 2098, 411, 291, 50820, 50820, 393, 483, 3973, 295, 646, 7170, 29896, 498, 291, 11, 1392, 11, 300, 311, 257, 11, 718, 385, 519, 257, 857, 544, 13, 51208, 51208, 286, 603, 2903, 341, 13, 51328, 51328, 1133, 291, 6964, 264, 22743, 8141, 11, 291, 643, 281, 1320, 732, 4190, 11, 597, 307, 264, 23831, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.2799576865302192, "compression_ratio": 1.542857142857143, "no_caption_prob": 8.217174035962671e-05}, {"id": 476, "seek": 195380, "start": 1962.9199999999998, "end": 1970.68, "text": " can get rid of back facing triangles if you, okay, that's a, let me think a bit more.", "tokens": [50364, 865, 11, 370, 437, 411, 456, 366, 721, 13, 50512, 50512, 865, 13, 50562, 50562, 407, 498, 257, 551, 307, 2380, 295, 264, 8974, 1859, 11, 286, 519, 456, 366, 819, 2098, 411, 291, 50820, 50820, 393, 483, 3973, 295, 646, 7170, 29896, 498, 291, 11, 1392, 11, 300, 311, 257, 11, 718, 385, 519, 257, 857, 544, 13, 51208, 51208, 286, 603, 2903, 341, 13, 51328, 51328, 1133, 291, 6964, 264, 22743, 8141, 11, 291, 643, 281, 1320, 732, 4190, 11, 597, 307, 264, 23831, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.2799576865302192, "compression_ratio": 1.542857142857143, "no_caption_prob": 8.217174035962671e-05}, {"id": 477, "seek": 195380, "start": 1970.68, "end": 1973.08, "text": " I'll explain this.", "tokens": [50364, 865, 11, 370, 437, 411, 456, 366, 721, 13, 50512, 50512, 865, 13, 50562, 50562, 407, 498, 257, 551, 307, 2380, 295, 264, 8974, 1859, 11, 286, 519, 456, 366, 819, 2098, 411, 291, 50820, 50820, 393, 483, 3973, 295, 646, 7170, 29896, 498, 291, 11, 1392, 11, 300, 311, 257, 11, 718, 385, 519, 257, 857, 544, 13, 51208, 51208, 286, 603, 2903, 341, 13, 51328, 51328, 1133, 291, 6964, 264, 22743, 8141, 11, 291, 643, 281, 1320, 732, 4190, 11, 597, 307, 264, 23831, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.2799576865302192, "compression_ratio": 1.542857142857143, "no_caption_prob": 8.217174035962671e-05}, {"id": 478, "seek": 195380, "start": 1973.08, "end": 1981.6, "text": " When you define the projection matrix, you need to pass two values, which is the nearest", "tokens": [50364, 865, 11, 370, 437, 411, 456, 366, 721, 13, 50512, 50512, 865, 13, 50562, 50562, 407, 498, 257, 551, 307, 2380, 295, 264, 8974, 1859, 11, 286, 519, 456, 366, 819, 2098, 411, 291, 50820, 50820, 393, 483, 3973, 295, 646, 7170, 29896, 498, 291, 11, 1392, 11, 300, 311, 257, 11, 718, 385, 519, 257, 857, 544, 13, 51208, 51208, 286, 603, 2903, 341, 13, 51328, 51328, 1133, 291, 6964, 264, 22743, 8141, 11, 291, 643, 281, 1320, 732, 4190, 11, 597, 307, 264, 23831, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.2799576865302192, "compression_ratio": 1.542857142857143, "no_caption_prob": 8.217174035962671e-05}, {"id": 479, "seek": 198160, "start": 1981.6, "end": 1984.9199999999998, "text": " clipping plane and the furthest clipping plane.", "tokens": [50364, 49320, 5720, 293, 264, 2687, 36356, 49320, 5720, 13, 50530, 50530, 5471, 300, 8804, 484, 295, 341, 486, 406, 312, 8974, 13, 50752, 50752, 759, 746, 307, 886, 1998, 281, 264, 3313, 11, 550, 291, 500, 380, 855, 309, 13, 50948, 50948, 1119, 300, 309, 30, 50998, 50998, 1033, 13, 51048, 51048, 400, 437, 291, 393, 360, 294, 1668, 281, 483, 721, 14603, 307, 264, 5598, 307, 411, 11, 370, 264, 5598, 51456, 51456], "temperature": 0.0, "avg_logprob": -0.19024856466996043, "compression_ratio": 1.5542857142857143, "no_caption_prob": 0.00015354120114352554}, {"id": 480, "seek": 198160, "start": 1984.9199999999998, "end": 1989.36, "text": " Everything that falls out of this will not be visible.", "tokens": [50364, 49320, 5720, 293, 264, 2687, 36356, 49320, 5720, 13, 50530, 50530, 5471, 300, 8804, 484, 295, 341, 486, 406, 312, 8974, 13, 50752, 50752, 759, 746, 307, 886, 1998, 281, 264, 3313, 11, 550, 291, 500, 380, 855, 309, 13, 50948, 50948, 1119, 300, 309, 30, 50998, 50998, 1033, 13, 51048, 51048, 400, 437, 291, 393, 360, 294, 1668, 281, 483, 721, 14603, 307, 264, 5598, 307, 411, 11, 370, 264, 5598, 51456, 51456], "temperature": 0.0, "avg_logprob": -0.19024856466996043, "compression_ratio": 1.5542857142857143, "no_caption_prob": 0.00015354120114352554}, {"id": 481, "seek": 198160, "start": 1989.36, "end": 1993.28, "text": " If something is too close to the eye, then you don't show it.", "tokens": [50364, 49320, 5720, 293, 264, 2687, 36356, 49320, 5720, 13, 50530, 50530, 5471, 300, 8804, 484, 295, 341, 486, 406, 312, 8974, 13, 50752, 50752, 759, 746, 307, 886, 1998, 281, 264, 3313, 11, 550, 291, 500, 380, 855, 309, 13, 50948, 50948, 1119, 300, 309, 30, 50998, 50998, 1033, 13, 51048, 51048, 400, 437, 291, 393, 360, 294, 1668, 281, 483, 721, 14603, 307, 264, 5598, 307, 411, 11, 370, 264, 5598, 51456, 51456], "temperature": 0.0, "avg_logprob": -0.19024856466996043, "compression_ratio": 1.5542857142857143, "no_caption_prob": 0.00015354120114352554}, {"id": 482, "seek": 198160, "start": 1993.28, "end": 1994.28, "text": " Is that it?", "tokens": [50364, 49320, 5720, 293, 264, 2687, 36356, 49320, 5720, 13, 50530, 50530, 5471, 300, 8804, 484, 295, 341, 486, 406, 312, 8974, 13, 50752, 50752, 759, 746, 307, 886, 1998, 281, 264, 3313, 11, 550, 291, 500, 380, 855, 309, 13, 50948, 50948, 1119, 300, 309, 30, 50998, 50998, 1033, 13, 51048, 51048, 400, 437, 291, 393, 360, 294, 1668, 281, 483, 721, 14603, 307, 264, 5598, 307, 411, 11, 370, 264, 5598, 51456, 51456], "temperature": 0.0, "avg_logprob": -0.19024856466996043, "compression_ratio": 1.5542857142857143, "no_caption_prob": 0.00015354120114352554}, {"id": 483, "seek": 198160, "start": 1994.28, "end": 1995.28, "text": " Okay.", "tokens": [50364, 49320, 5720, 293, 264, 2687, 36356, 49320, 5720, 13, 50530, 50530, 5471, 300, 8804, 484, 295, 341, 486, 406, 312, 8974, 13, 50752, 50752, 759, 746, 307, 886, 1998, 281, 264, 3313, 11, 550, 291, 500, 380, 855, 309, 13, 50948, 50948, 1119, 300, 309, 30, 50998, 50998, 1033, 13, 51048, 51048, 400, 437, 291, 393, 360, 294, 1668, 281, 483, 721, 14603, 307, 264, 5598, 307, 411, 11, 370, 264, 5598, 51456, 51456], "temperature": 0.0, "avg_logprob": -0.19024856466996043, "compression_ratio": 1.5542857142857143, "no_caption_prob": 0.00015354120114352554}, {"id": 484, "seek": 198160, "start": 1995.28, "end": 2003.4399999999998, "text": " And what you can do in order to get things invisible is the output is like, so the output", "tokens": [50364, 49320, 5720, 293, 264, 2687, 36356, 49320, 5720, 13, 50530, 50530, 5471, 300, 8804, 484, 295, 341, 486, 406, 312, 8974, 13, 50752, 50752, 759, 746, 307, 886, 1998, 281, 264, 3313, 11, 550, 291, 500, 380, 855, 309, 13, 50948, 50948, 1119, 300, 309, 30, 50998, 50998, 1033, 13, 51048, 51048, 400, 437, 291, 393, 360, 294, 1668, 281, 483, 721, 14603, 307, 264, 5598, 307, 411, 11, 370, 264, 5598, 51456, 51456], "temperature": 0.0, "avg_logprob": -0.19024856466996043, "compression_ratio": 1.5542857142857143, "no_caption_prob": 0.00015354120114352554}, {"id": 485, "seek": 200344, "start": 2003.44, "end": 2012.24, "text": " from the vertex shader as X, Y and Z, the Z coordinate, it doesn't affect into where", "tokens": [50364, 490, 264, 28162, 5744, 260, 382, 1783, 11, 398, 293, 1176, 11, 264, 1176, 15670, 11, 309, 1177, 380, 3345, 666, 689, 50804, 50804, 264, 19261, 307, 24889, 570, 527, 2568, 307, 568, 35, 11, 457, 309, 311, 920, 11, 291, 393, 920, 992, 411, 51048, 51048, 257, 2158, 300, 307, 1570, 813, 3175, 472, 420, 544, 813, 472, 13, 51308, 51308, 400, 300, 486, 914, 300, 309, 311, 406, 516, 281, 312, 28748, 11, 341, 28162, 13, 51576, 51576, 400, 286, 519, 341, 307, 437, 264, 22743, 8141, 576, 360, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16477862993876138, "compression_ratio": 1.550660792951542, "no_caption_prob": 9.168773249257356e-05}, {"id": 486, "seek": 200344, "start": 2012.24, "end": 2017.1200000000001, "text": " the pixel is positioned because our screen is 2D, but it's still, you can still set like", "tokens": [50364, 490, 264, 28162, 5744, 260, 382, 1783, 11, 398, 293, 1176, 11, 264, 1176, 15670, 11, 309, 1177, 380, 3345, 666, 689, 50804, 50804, 264, 19261, 307, 24889, 570, 527, 2568, 307, 568, 35, 11, 457, 309, 311, 920, 11, 291, 393, 920, 992, 411, 51048, 51048, 257, 2158, 300, 307, 1570, 813, 3175, 472, 420, 544, 813, 472, 13, 51308, 51308, 400, 300, 486, 914, 300, 309, 311, 406, 516, 281, 312, 28748, 11, 341, 28162, 13, 51576, 51576, 400, 286, 519, 341, 307, 437, 264, 22743, 8141, 576, 360, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16477862993876138, "compression_ratio": 1.550660792951542, "no_caption_prob": 9.168773249257356e-05}, {"id": 487, "seek": 200344, "start": 2017.1200000000001, "end": 2022.3200000000002, "text": " a value that is less than minus one or more than one.", "tokens": [50364, 490, 264, 28162, 5744, 260, 382, 1783, 11, 398, 293, 1176, 11, 264, 1176, 15670, 11, 309, 1177, 380, 3345, 666, 689, 50804, 50804, 264, 19261, 307, 24889, 570, 527, 2568, 307, 568, 35, 11, 457, 309, 311, 920, 11, 291, 393, 920, 992, 411, 51048, 51048, 257, 2158, 300, 307, 1570, 813, 3175, 472, 420, 544, 813, 472, 13, 51308, 51308, 400, 300, 486, 914, 300, 309, 311, 406, 516, 281, 312, 28748, 11, 341, 28162, 13, 51576, 51576, 400, 286, 519, 341, 307, 437, 264, 22743, 8141, 576, 360, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16477862993876138, "compression_ratio": 1.550660792951542, "no_caption_prob": 9.168773249257356e-05}, {"id": 488, "seek": 200344, "start": 2022.3200000000002, "end": 2027.68, "text": " And that will mean that it's not going to be rendered, this vertex.", "tokens": [50364, 490, 264, 28162, 5744, 260, 382, 1783, 11, 398, 293, 1176, 11, 264, 1176, 15670, 11, 309, 1177, 380, 3345, 666, 689, 50804, 50804, 264, 19261, 307, 24889, 570, 527, 2568, 307, 568, 35, 11, 457, 309, 311, 920, 11, 291, 393, 920, 992, 411, 51048, 51048, 257, 2158, 300, 307, 1570, 813, 3175, 472, 420, 544, 813, 472, 13, 51308, 51308, 400, 300, 486, 914, 300, 309, 311, 406, 516, 281, 312, 28748, 11, 341, 28162, 13, 51576, 51576, 400, 286, 519, 341, 307, 437, 264, 22743, 8141, 576, 360, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16477862993876138, "compression_ratio": 1.550660792951542, "no_caption_prob": 9.168773249257356e-05}, {"id": 489, "seek": 200344, "start": 2027.68, "end": 2032.76, "text": " And I think this is what the projection matrix would do.", "tokens": [50364, 490, 264, 28162, 5744, 260, 382, 1783, 11, 398, 293, 1176, 11, 264, 1176, 15670, 11, 309, 1177, 380, 3345, 666, 689, 50804, 50804, 264, 19261, 307, 24889, 570, 527, 2568, 307, 568, 35, 11, 457, 309, 311, 920, 11, 291, 393, 920, 992, 411, 51048, 51048, 257, 2158, 300, 307, 1570, 813, 3175, 472, 420, 544, 813, 472, 13, 51308, 51308, 400, 300, 486, 914, 300, 309, 311, 406, 516, 281, 312, 28748, 11, 341, 28162, 13, 51576, 51576, 400, 286, 519, 341, 307, 437, 264, 22743, 8141, 576, 360, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16477862993876138, "compression_ratio": 1.550660792951542, "no_caption_prob": 9.168773249257356e-05}, {"id": 490, "seek": 203276, "start": 2032.76, "end": 2040.22, "text": " It will like map coordinates to being outside of the so called clip space, this visible", "tokens": [50364, 467, 486, 411, 4471, 21056, 281, 885, 2380, 295, 264, 370, 1219, 7353, 1901, 11, 341, 8974, 50737, 50737, 644, 295, 21056, 300, 366, 8752, 13, 50924, 50924, 1743, 264, 3613, 295, 21056, 300, 366, 4888, 8974, 562, 337, 264, 5598, 295, 264, 28162, 51265, 51265, 5744, 260, 13, 51361, 51361, 400, 550, 1071, 636, 295, 1455, 721, 14603, 307, 291, 393, 10687, 322, 264, 29775, 295, 264, 32053, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1631725801003946, "compression_ratio": 1.6770833333333333, "no_caption_prob": 0.00013119939831085503}, {"id": 491, "seek": 203276, "start": 2040.22, "end": 2043.96, "text": " part of coordinates that are returned.", "tokens": [50364, 467, 486, 411, 4471, 21056, 281, 885, 2380, 295, 264, 370, 1219, 7353, 1901, 11, 341, 8974, 50737, 50737, 644, 295, 21056, 300, 366, 8752, 13, 50924, 50924, 1743, 264, 3613, 295, 21056, 300, 366, 4888, 8974, 562, 337, 264, 5598, 295, 264, 28162, 51265, 51265, 5744, 260, 13, 51361, 51361, 400, 550, 1071, 636, 295, 1455, 721, 14603, 307, 291, 393, 10687, 322, 264, 29775, 295, 264, 32053, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1631725801003946, "compression_ratio": 1.6770833333333333, "no_caption_prob": 0.00013119939831085503}, {"id": 492, "seek": 203276, "start": 2043.96, "end": 2050.78, "text": " Like the range of coordinates that are considered visible when for the output of the vertex", "tokens": [50364, 467, 486, 411, 4471, 21056, 281, 885, 2380, 295, 264, 370, 1219, 7353, 1901, 11, 341, 8974, 50737, 50737, 644, 295, 21056, 300, 366, 8752, 13, 50924, 50924, 1743, 264, 3613, 295, 21056, 300, 366, 4888, 8974, 562, 337, 264, 5598, 295, 264, 28162, 51265, 51265, 5744, 260, 13, 51361, 51361, 400, 550, 1071, 636, 295, 1455, 721, 14603, 307, 291, 393, 10687, 322, 264, 29775, 295, 264, 32053, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1631725801003946, "compression_ratio": 1.6770833333333333, "no_caption_prob": 0.00013119939831085503}, {"id": 493, "seek": 203276, "start": 2050.78, "end": 2052.7, "text": " shader.", "tokens": [50364, 467, 486, 411, 4471, 21056, 281, 885, 2380, 295, 264, 370, 1219, 7353, 1901, 11, 341, 8974, 50737, 50737, 644, 295, 21056, 300, 366, 8752, 13, 50924, 50924, 1743, 264, 3613, 295, 21056, 300, 366, 4888, 8974, 562, 337, 264, 5598, 295, 264, 28162, 51265, 51265, 5744, 260, 13, 51361, 51361, 400, 550, 1071, 636, 295, 1455, 721, 14603, 307, 291, 393, 10687, 322, 264, 29775, 295, 264, 32053, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1631725801003946, "compression_ratio": 1.6770833333333333, "no_caption_prob": 0.00013119939831085503}, {"id": 494, "seek": 203276, "start": 2052.7, "end": 2062.32, "text": " And then another way of making things invisible is you can rely on the winding of the vertices.", "tokens": [50364, 467, 486, 411, 4471, 21056, 281, 885, 2380, 295, 264, 370, 1219, 7353, 1901, 11, 341, 8974, 50737, 50737, 644, 295, 21056, 300, 366, 8752, 13, 50924, 50924, 1743, 264, 3613, 295, 21056, 300, 366, 4888, 8974, 562, 337, 264, 5598, 295, 264, 28162, 51265, 51265, 5744, 260, 13, 51361, 51361, 400, 550, 1071, 636, 295, 1455, 721, 14603, 307, 291, 393, 10687, 322, 264, 29775, 295, 264, 32053, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1631725801003946, "compression_ratio": 1.6770833333333333, "no_caption_prob": 0.00013119939831085503}, {"id": 495, "seek": 206232, "start": 2062.32, "end": 2063.32, "text": " You can rely on what?", "tokens": [50364, 509, 393, 10687, 322, 437, 30, 50414, 50414, 407, 291, 362, 411, 5682, 48685, 420, 35790, 15670, 11, 411, 8432, 295, 264, 32053, 13, 50722, 50722, 400, 550, 498, 291, 1884, 364, 13977, 365, 6257, 11, 291, 393, 652, 309, 370, 300, 309, 787, 6125, 433, 411, 51069, 51069, 1868, 7170, 420, 646, 7170, 29896, 13, 51210, 51210, 1119, 300, 294, 1668, 281, 406, 362, 281, 14722, 886, 867, 721, 30, 51372, 51372, 1119, 300, 445, 257, 3389, 19618, 30, 51477, 51477, 1743, 291, 528, 281, 2642, 257, 1782, 11, 457, 291, 500, 380, 528, 281, 2642, 439, 264, 7920, 2261, 309, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14584008332724882, "compression_ratio": 1.6536964980544746, "no_caption_prob": 5.0639398978091776e-05}, {"id": 496, "seek": 206232, "start": 2063.32, "end": 2069.48, "text": " So you have like counterclockwise or clockwise coordinate, like positions of the vertices.", "tokens": [50364, 509, 393, 10687, 322, 437, 30, 50414, 50414, 407, 291, 362, 411, 5682, 48685, 420, 35790, 15670, 11, 411, 8432, 295, 264, 32053, 13, 50722, 50722, 400, 550, 498, 291, 1884, 364, 13977, 365, 6257, 11, 291, 393, 652, 309, 370, 300, 309, 787, 6125, 433, 411, 51069, 51069, 1868, 7170, 420, 646, 7170, 29896, 13, 51210, 51210, 1119, 300, 294, 1668, 281, 406, 362, 281, 14722, 886, 867, 721, 30, 51372, 51372, 1119, 300, 445, 257, 3389, 19618, 30, 51477, 51477, 1743, 291, 528, 281, 2642, 257, 1782, 11, 457, 291, 500, 380, 528, 281, 2642, 439, 264, 7920, 2261, 309, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14584008332724882, "compression_ratio": 1.6536964980544746, "no_caption_prob": 5.0639398978091776e-05}, {"id": 497, "seek": 206232, "start": 2069.48, "end": 2076.42, "text": " And then if you create an entity with settings, you can make it so that it only renders like", "tokens": [50364, 509, 393, 10687, 322, 437, 30, 50414, 50414, 407, 291, 362, 411, 5682, 48685, 420, 35790, 15670, 11, 411, 8432, 295, 264, 32053, 13, 50722, 50722, 400, 550, 498, 291, 1884, 364, 13977, 365, 6257, 11, 291, 393, 652, 309, 370, 300, 309, 787, 6125, 433, 411, 51069, 51069, 1868, 7170, 420, 646, 7170, 29896, 13, 51210, 51210, 1119, 300, 294, 1668, 281, 406, 362, 281, 14722, 886, 867, 721, 30, 51372, 51372, 1119, 300, 445, 257, 3389, 19618, 30, 51477, 51477, 1743, 291, 528, 281, 2642, 257, 1782, 11, 457, 291, 500, 380, 528, 281, 2642, 439, 264, 7920, 2261, 309, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14584008332724882, "compression_ratio": 1.6536964980544746, "no_caption_prob": 5.0639398978091776e-05}, {"id": 498, "seek": 206232, "start": 2076.42, "end": 2079.2400000000002, "text": " front facing or back facing triangles.", "tokens": [50364, 509, 393, 10687, 322, 437, 30, 50414, 50414, 407, 291, 362, 411, 5682, 48685, 420, 35790, 15670, 11, 411, 8432, 295, 264, 32053, 13, 50722, 50722, 400, 550, 498, 291, 1884, 364, 13977, 365, 6257, 11, 291, 393, 652, 309, 370, 300, 309, 787, 6125, 433, 411, 51069, 51069, 1868, 7170, 420, 646, 7170, 29896, 13, 51210, 51210, 1119, 300, 294, 1668, 281, 406, 362, 281, 14722, 886, 867, 721, 30, 51372, 51372, 1119, 300, 445, 257, 3389, 19618, 30, 51477, 51477, 1743, 291, 528, 281, 2642, 257, 1782, 11, 457, 291, 500, 380, 528, 281, 2642, 439, 264, 7920, 2261, 309, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14584008332724882, "compression_ratio": 1.6536964980544746, "no_caption_prob": 5.0639398978091776e-05}, {"id": 499, "seek": 206232, "start": 2079.2400000000002, "end": 2082.48, "text": " Is that in order to not have to compute too many things?", "tokens": [50364, 509, 393, 10687, 322, 437, 30, 50414, 50414, 407, 291, 362, 411, 5682, 48685, 420, 35790, 15670, 11, 411, 8432, 295, 264, 32053, 13, 50722, 50722, 400, 550, 498, 291, 1884, 364, 13977, 365, 6257, 11, 291, 393, 652, 309, 370, 300, 309, 787, 6125, 433, 411, 51069, 51069, 1868, 7170, 420, 646, 7170, 29896, 13, 51210, 51210, 1119, 300, 294, 1668, 281, 406, 362, 281, 14722, 886, 867, 721, 30, 51372, 51372, 1119, 300, 445, 257, 3389, 19618, 30, 51477, 51477, 1743, 291, 528, 281, 2642, 257, 1782, 11, 457, 291, 500, 380, 528, 281, 2642, 439, 264, 7920, 2261, 309, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14584008332724882, "compression_ratio": 1.6536964980544746, "no_caption_prob": 5.0639398978091776e-05}, {"id": 500, "seek": 206232, "start": 2082.48, "end": 2084.5800000000004, "text": " Is that just a performance optimization?", "tokens": [50364, 509, 393, 10687, 322, 437, 30, 50414, 50414, 407, 291, 362, 411, 5682, 48685, 420, 35790, 15670, 11, 411, 8432, 295, 264, 32053, 13, 50722, 50722, 400, 550, 498, 291, 1884, 364, 13977, 365, 6257, 11, 291, 393, 652, 309, 370, 300, 309, 787, 6125, 433, 411, 51069, 51069, 1868, 7170, 420, 646, 7170, 29896, 13, 51210, 51210, 1119, 300, 294, 1668, 281, 406, 362, 281, 14722, 886, 867, 721, 30, 51372, 51372, 1119, 300, 445, 257, 3389, 19618, 30, 51477, 51477, 1743, 291, 528, 281, 2642, 257, 1782, 11, 457, 291, 500, 380, 528, 281, 2642, 439, 264, 7920, 2261, 309, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14584008332724882, "compression_ratio": 1.6536964980544746, "no_caption_prob": 5.0639398978091776e-05}, {"id": 501, "seek": 206232, "start": 2084.5800000000004, "end": 2089.7200000000003, "text": " Like you want to draw a house, but you don't want to draw all the walls behind it.", "tokens": [50364, 509, 393, 10687, 322, 437, 30, 50414, 50414, 407, 291, 362, 411, 5682, 48685, 420, 35790, 15670, 11, 411, 8432, 295, 264, 32053, 13, 50722, 50722, 400, 550, 498, 291, 1884, 364, 13977, 365, 6257, 11, 291, 393, 652, 309, 370, 300, 309, 787, 6125, 433, 411, 51069, 51069, 1868, 7170, 420, 646, 7170, 29896, 13, 51210, 51210, 1119, 300, 294, 1668, 281, 406, 362, 281, 14722, 886, 867, 721, 30, 51372, 51372, 1119, 300, 445, 257, 3389, 19618, 30, 51477, 51477, 1743, 291, 528, 281, 2642, 257, 1782, 11, 457, 291, 500, 380, 528, 281, 2642, 439, 264, 7920, 2261, 309, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14584008332724882, "compression_ratio": 1.6536964980544746, "no_caption_prob": 5.0639398978091776e-05}, {"id": 502, "seek": 208972, "start": 2089.72, "end": 2094.3999999999996, "text": " So it's just a facet.", "tokens": [50364, 407, 309, 311, 445, 257, 1915, 302, 13, 50598, 50598, 10635, 337, 264, 13728, 11, 286, 2041, 291, 500, 380, 528, 281, 15529, 264, 1854, 295, 264, 13728, 13, 50860, 50860, 509, 787, 528, 281, 15529, 264, 2380, 498, 309, 311, 411, 21514, 13, 51156, 51156, 509, 393, 380, 574, 1854, 13, 51306, 51306, 407, 286, 519, 341, 307, 733, 295, 2891, 281, 2052, 337, 385, 13, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.2606839730706013, "compression_ratio": 1.5436241610738255, "no_caption_prob": 4.539298242889345e-05}, {"id": 503, "seek": 208972, "start": 2094.3999999999996, "end": 2099.64, "text": " Same for the cube, I guess you don't want to render the inside of the cube.", "tokens": [50364, 407, 309, 311, 445, 257, 1915, 302, 13, 50598, 50598, 10635, 337, 264, 13728, 11, 286, 2041, 291, 500, 380, 528, 281, 15529, 264, 1854, 295, 264, 13728, 13, 50860, 50860, 509, 787, 528, 281, 15529, 264, 2380, 498, 309, 311, 411, 21514, 13, 51156, 51156, 509, 393, 380, 574, 1854, 13, 51306, 51306, 407, 286, 519, 341, 307, 733, 295, 2891, 281, 2052, 337, 385, 13, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.2606839730706013, "compression_ratio": 1.5436241610738255, "no_caption_prob": 4.539298242889345e-05}, {"id": 504, "seek": 208972, "start": 2099.64, "end": 2105.56, "text": " You only want to render the outside if it's like sealed.", "tokens": [50364, 407, 309, 311, 445, 257, 1915, 302, 13, 50598, 50598, 10635, 337, 264, 13728, 11, 286, 2041, 291, 500, 380, 528, 281, 15529, 264, 1854, 295, 264, 13728, 13, 50860, 50860, 509, 787, 528, 281, 15529, 264, 2380, 498, 309, 311, 411, 21514, 13, 51156, 51156, 509, 393, 380, 574, 1854, 13, 51306, 51306, 407, 286, 519, 341, 307, 733, 295, 2891, 281, 2052, 337, 385, 13, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.2606839730706013, "compression_ratio": 1.5436241610738255, "no_caption_prob": 4.539298242889345e-05}, {"id": 505, "seek": 208972, "start": 2105.56, "end": 2108.56, "text": " You can't look inside.", "tokens": [50364, 407, 309, 311, 445, 257, 1915, 302, 13, 50598, 50598, 10635, 337, 264, 13728, 11, 286, 2041, 291, 500, 380, 528, 281, 15529, 264, 1854, 295, 264, 13728, 13, 50860, 50860, 509, 787, 528, 281, 15529, 264, 2380, 498, 309, 311, 411, 21514, 13, 51156, 51156, 509, 393, 380, 574, 1854, 13, 51306, 51306, 407, 286, 519, 341, 307, 733, 295, 2891, 281, 2052, 337, 385, 13, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.2606839730706013, "compression_ratio": 1.5436241610738255, "no_caption_prob": 4.539298242889345e-05}, {"id": 506, "seek": 208972, "start": 2108.56, "end": 2112.9599999999996, "text": " So I think this is kind of starting to click for me.", "tokens": [50364, 407, 309, 311, 445, 257, 1915, 302, 13, 50598, 50598, 10635, 337, 264, 13728, 11, 286, 2041, 291, 500, 380, 528, 281, 15529, 264, 1854, 295, 264, 13728, 13, 50860, 50860, 509, 787, 528, 281, 15529, 264, 2380, 498, 309, 311, 411, 21514, 13, 51156, 51156, 509, 393, 380, 574, 1854, 13, 51306, 51306, 407, 286, 519, 341, 307, 733, 295, 2891, 281, 2052, 337, 385, 13, 51526, 51526], "temperature": 0.0, "avg_logprob": -0.2606839730706013, "compression_ratio": 1.5436241610738255, "no_caption_prob": 4.539298242889345e-05}, {"id": 507, "seek": 211296, "start": 2112.96, "end": 2120.76, "text": " So like, okay, so we're creating an entity using WebGL.entity and we give it a vertex", "tokens": [50364, 407, 411, 11, 1392, 11, 370, 321, 434, 4084, 364, 13977, 1228, 9573, 19440, 13, 317, 507, 293, 321, 976, 309, 257, 28162, 50754, 50754, 5744, 260, 11, 597, 321, 600, 2825, 466, 13, 50830, 50830, 492, 976, 309, 257, 26424, 5744, 260, 11, 597, 307, 3585, 309, 577, 281, 2017, 264, 8475, 295, 264, 13728, 13, 51072, 51072, 400, 498, 300, 311, 445, 257, 5744, 260, 11, 370, 309, 2516, 257, 9452, 11, 321, 727, 362, 264, 9452, 727, 2089, 51372, 51372, 505, 281, 1969, 264, 2017, 13, 51488, 51488, 467, 727, 2089, 505, 281, 10559, 264, 2017, 293, 14786, 300, 490, 2699, 76, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.11207822452891956, "compression_ratio": 1.6740088105726871, "no_caption_prob": 2.4682030925760046e-05}, {"id": 508, "seek": 211296, "start": 2120.76, "end": 2122.28, "text": " shader, which we've talked about.", "tokens": [50364, 407, 411, 11, 1392, 11, 370, 321, 434, 4084, 364, 13977, 1228, 9573, 19440, 13, 317, 507, 293, 321, 976, 309, 257, 28162, 50754, 50754, 5744, 260, 11, 597, 321, 600, 2825, 466, 13, 50830, 50830, 492, 976, 309, 257, 26424, 5744, 260, 11, 597, 307, 3585, 309, 577, 281, 2017, 264, 8475, 295, 264, 13728, 13, 51072, 51072, 400, 498, 300, 311, 445, 257, 5744, 260, 11, 370, 309, 2516, 257, 9452, 11, 321, 727, 362, 264, 9452, 727, 2089, 51372, 51372, 505, 281, 1969, 264, 2017, 13, 51488, 51488, 467, 727, 2089, 505, 281, 10559, 264, 2017, 293, 14786, 300, 490, 2699, 76, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.11207822452891956, "compression_ratio": 1.6740088105726871, "no_caption_prob": 2.4682030925760046e-05}, {"id": 509, "seek": 211296, "start": 2122.28, "end": 2127.12, "text": " We give it a fragment shader, which is telling it how to color the faces of the cube.", "tokens": [50364, 407, 411, 11, 1392, 11, 370, 321, 434, 4084, 364, 13977, 1228, 9573, 19440, 13, 317, 507, 293, 321, 976, 309, 257, 28162, 50754, 50754, 5744, 260, 11, 597, 321, 600, 2825, 466, 13, 50830, 50830, 492, 976, 309, 257, 26424, 5744, 260, 11, 597, 307, 3585, 309, 577, 281, 2017, 264, 8475, 295, 264, 13728, 13, 51072, 51072, 400, 498, 300, 311, 445, 257, 5744, 260, 11, 370, 309, 2516, 257, 9452, 11, 321, 727, 362, 264, 9452, 727, 2089, 51372, 51372, 505, 281, 1969, 264, 2017, 13, 51488, 51488, 467, 727, 2089, 505, 281, 10559, 264, 2017, 293, 14786, 300, 490, 2699, 76, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.11207822452891956, "compression_ratio": 1.6740088105726871, "no_caption_prob": 2.4682030925760046e-05}, {"id": 510, "seek": 211296, "start": 2127.12, "end": 2133.12, "text": " And if that's just a shader, so it takes a uniform, we could have the uniform could allow", "tokens": [50364, 407, 411, 11, 1392, 11, 370, 321, 434, 4084, 364, 13977, 1228, 9573, 19440, 13, 317, 507, 293, 321, 976, 309, 257, 28162, 50754, 50754, 5744, 260, 11, 597, 321, 600, 2825, 466, 13, 50830, 50830, 492, 976, 309, 257, 26424, 5744, 260, 11, 597, 307, 3585, 309, 577, 281, 2017, 264, 8475, 295, 264, 13728, 13, 51072, 51072, 400, 498, 300, 311, 445, 257, 5744, 260, 11, 370, 309, 2516, 257, 9452, 11, 321, 727, 362, 264, 9452, 727, 2089, 51372, 51372, 505, 281, 1969, 264, 2017, 13, 51488, 51488, 467, 727, 2089, 505, 281, 10559, 264, 2017, 293, 14786, 300, 490, 2699, 76, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.11207822452891956, "compression_ratio": 1.6740088105726871, "no_caption_prob": 2.4682030925760046e-05}, {"id": 511, "seek": 211296, "start": 2133.12, "end": 2135.44, "text": " us to control the color.", "tokens": [50364, 407, 411, 11, 1392, 11, 370, 321, 434, 4084, 364, 13977, 1228, 9573, 19440, 13, 317, 507, 293, 321, 976, 309, 257, 28162, 50754, 50754, 5744, 260, 11, 597, 321, 600, 2825, 466, 13, 50830, 50830, 492, 976, 309, 257, 26424, 5744, 260, 11, 597, 307, 3585, 309, 577, 281, 2017, 264, 8475, 295, 264, 13728, 13, 51072, 51072, 400, 498, 300, 311, 445, 257, 5744, 260, 11, 370, 309, 2516, 257, 9452, 11, 321, 727, 362, 264, 9452, 727, 2089, 51372, 51372, 505, 281, 1969, 264, 2017, 13, 51488, 51488, 467, 727, 2089, 505, 281, 10559, 264, 2017, 293, 14786, 300, 490, 2699, 76, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.11207822452891956, "compression_ratio": 1.6740088105726871, "no_caption_prob": 2.4682030925760046e-05}, {"id": 512, "seek": 211296, "start": 2135.44, "end": 2138.7400000000002, "text": " It could allow us to vary the color and bind that from Elm.", "tokens": [50364, 407, 411, 11, 1392, 11, 370, 321, 434, 4084, 364, 13977, 1228, 9573, 19440, 13, 317, 507, 293, 321, 976, 309, 257, 28162, 50754, 50754, 5744, 260, 11, 597, 321, 600, 2825, 466, 13, 50830, 50830, 492, 976, 309, 257, 26424, 5744, 260, 11, 597, 307, 3585, 309, 577, 281, 2017, 264, 8475, 295, 264, 13728, 13, 51072, 51072, 400, 498, 300, 311, 445, 257, 5744, 260, 11, 370, 309, 2516, 257, 9452, 11, 321, 727, 362, 264, 9452, 727, 2089, 51372, 51372, 505, 281, 1969, 264, 2017, 13, 51488, 51488, 467, 727, 2089, 505, 281, 10559, 264, 2017, 293, 14786, 300, 490, 2699, 76, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.11207822452891956, "compression_ratio": 1.6740088105726871, "no_caption_prob": 2.4682030925760046e-05}, {"id": 513, "seek": 213874, "start": 2138.74, "end": 2144.2, "text": " So if we wanted to, we could just say, depending on the face, give it a fixed color, or we", "tokens": [50364, 407, 498, 321, 1415, 281, 11, 321, 727, 445, 584, 11, 5413, 322, 264, 1851, 11, 976, 309, 257, 6806, 2017, 11, 420, 321, 50637, 50637, 727, 976, 309, 257, 16235, 2017, 498, 321, 1415, 281, 1884, 300, 18350, 13, 50925, 50925, 400, 550, 321, 976, 309, 257, 17407, 13, 50975, 50975, 1079, 11, 291, 393, 360, 23198, 490, 37235, 886, 11, 420, 291, 393, 362, 552, 1348, 490, 264, 17407, 51325, 51325, 293, 1320, 382, 22984, 490, 264, 28162, 5744, 260, 666, 264, 26424, 5744, 260, 13, 51569, 51569, 509, 362, 439, 264, 3956, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.1267588996887207, "compression_ratio": 1.755980861244019, "no_caption_prob": 1.696373146842234e-05}, {"id": 514, "seek": 213874, "start": 2144.2, "end": 2149.9599999999996, "text": " could give it a gradient color if we wanted to create that mapping.", "tokens": [50364, 407, 498, 321, 1415, 281, 11, 321, 727, 445, 584, 11, 5413, 322, 264, 1851, 11, 976, 309, 257, 6806, 2017, 11, 420, 321, 50637, 50637, 727, 976, 309, 257, 16235, 2017, 498, 321, 1415, 281, 1884, 300, 18350, 13, 50925, 50925, 400, 550, 321, 976, 309, 257, 17407, 13, 50975, 50975, 1079, 11, 291, 393, 360, 23198, 490, 37235, 886, 11, 420, 291, 393, 362, 552, 1348, 490, 264, 17407, 51325, 51325, 293, 1320, 382, 22984, 490, 264, 28162, 5744, 260, 666, 264, 26424, 5744, 260, 13, 51569, 51569, 509, 362, 439, 264, 3956, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.1267588996887207, "compression_ratio": 1.755980861244019, "no_caption_prob": 1.696373146842234e-05}, {"id": 515, "seek": 213874, "start": 2149.9599999999996, "end": 2150.9599999999996, "text": " And then we give it a mesh.", "tokens": [50364, 407, 498, 321, 1415, 281, 11, 321, 727, 445, 584, 11, 5413, 322, 264, 1851, 11, 976, 309, 257, 6806, 2017, 11, 420, 321, 50637, 50637, 727, 976, 309, 257, 16235, 2017, 498, 321, 1415, 281, 1884, 300, 18350, 13, 50925, 50925, 400, 550, 321, 976, 309, 257, 17407, 13, 50975, 50975, 1079, 11, 291, 393, 360, 23198, 490, 37235, 886, 11, 420, 291, 393, 362, 552, 1348, 490, 264, 17407, 51325, 51325, 293, 1320, 382, 22984, 490, 264, 28162, 5744, 260, 666, 264, 26424, 5744, 260, 13, 51569, 51569, 509, 362, 439, 264, 3956, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.1267588996887207, "compression_ratio": 1.755980861244019, "no_caption_prob": 1.696373146842234e-05}, {"id": 516, "seek": 213874, "start": 2150.9599999999996, "end": 2157.9599999999996, "text": " Yes, you can do coloring from uniforms too, or you can have them coming from the mesh", "tokens": [50364, 407, 498, 321, 1415, 281, 11, 321, 727, 445, 584, 11, 5413, 322, 264, 1851, 11, 976, 309, 257, 6806, 2017, 11, 420, 321, 50637, 50637, 727, 976, 309, 257, 16235, 2017, 498, 321, 1415, 281, 1884, 300, 18350, 13, 50925, 50925, 400, 550, 321, 976, 309, 257, 17407, 13, 50975, 50975, 1079, 11, 291, 393, 360, 23198, 490, 37235, 886, 11, 420, 291, 393, 362, 552, 1348, 490, 264, 17407, 51325, 51325, 293, 1320, 382, 22984, 490, 264, 28162, 5744, 260, 666, 264, 26424, 5744, 260, 13, 51569, 51569, 509, 362, 439, 264, 3956, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.1267588996887207, "compression_ratio": 1.755980861244019, "no_caption_prob": 1.696373146842234e-05}, {"id": 517, "seek": 213874, "start": 2157.9599999999996, "end": 2162.8399999999997, "text": " and pass as varying from the vertex shader into the fragment shader.", "tokens": [50364, 407, 498, 321, 1415, 281, 11, 321, 727, 445, 584, 11, 5413, 322, 264, 1851, 11, 976, 309, 257, 6806, 2017, 11, 420, 321, 50637, 50637, 727, 976, 309, 257, 16235, 2017, 498, 321, 1415, 281, 1884, 300, 18350, 13, 50925, 50925, 400, 550, 321, 976, 309, 257, 17407, 13, 50975, 50975, 1079, 11, 291, 393, 360, 23198, 490, 37235, 886, 11, 420, 291, 393, 362, 552, 1348, 490, 264, 17407, 51325, 51325, 293, 1320, 382, 22984, 490, 264, 28162, 5744, 260, 666, 264, 26424, 5744, 260, 13, 51569, 51569, 509, 362, 439, 264, 3956, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.1267588996887207, "compression_ratio": 1.755980861244019, "no_caption_prob": 1.696373146842234e-05}, {"id": 518, "seek": 213874, "start": 2162.8399999999997, "end": 2164.8799999999997, "text": " You have all the options.", "tokens": [50364, 407, 498, 321, 1415, 281, 11, 321, 727, 445, 584, 11, 5413, 322, 264, 1851, 11, 976, 309, 257, 6806, 2017, 11, 420, 321, 50637, 50637, 727, 976, 309, 257, 16235, 2017, 498, 321, 1415, 281, 1884, 300, 18350, 13, 50925, 50925, 400, 550, 321, 976, 309, 257, 17407, 13, 50975, 50975, 1079, 11, 291, 393, 360, 23198, 490, 37235, 886, 11, 420, 291, 393, 362, 552, 1348, 490, 264, 17407, 51325, 51325, 293, 1320, 382, 22984, 490, 264, 28162, 5744, 260, 666, 264, 26424, 5744, 260, 13, 51569, 51569, 509, 362, 439, 264, 3956, 13, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.1267588996887207, "compression_ratio": 1.755980861244019, "no_caption_prob": 1.696373146842234e-05}, {"id": 519, "seek": 216488, "start": 2164.88, "end": 2169.0, "text": " I'm guessing the fragment shader is mostly used for lighting.", "tokens": [50364, 286, 478, 17939, 264, 26424, 5744, 260, 307, 5240, 1143, 337, 9577, 13, 50570, 50570, 407, 291, 980, 505, 689, 264, 3295, 307, 293, 550, 309, 1669, 512, 18668, 11546, 420, 12741, 2361, 50992, 50992, 322, 641, 2535, 13, 51042, 51042, 1119, 300, 309, 30, 51092, 51092, 1079, 11, 291, 393, 764, 309, 337, 341, 886, 13, 51194, 51194, 1743, 498, 337, 9577, 11, 291, 576, 643, 281, 362, 257, 2710, 281, 264, 3753, 13, 51465, 51465, 407, 257, 2710, 11, 309, 534, 5946, 322, 1968, 428, 2657, 307, 5508, 420, 406, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1465868900731667, "compression_ratio": 1.5874439461883407, "no_caption_prob": 4.908244955004193e-05}, {"id": 520, "seek": 216488, "start": 2169.0, "end": 2177.44, "text": " So you tell us where the sun is and then it makes some pixels lighter or darker based", "tokens": [50364, 286, 478, 17939, 264, 26424, 5744, 260, 307, 5240, 1143, 337, 9577, 13, 50570, 50570, 407, 291, 980, 505, 689, 264, 3295, 307, 293, 550, 309, 1669, 512, 18668, 11546, 420, 12741, 2361, 50992, 50992, 322, 641, 2535, 13, 51042, 51042, 1119, 300, 309, 30, 51092, 51092, 1079, 11, 291, 393, 764, 309, 337, 341, 886, 13, 51194, 51194, 1743, 498, 337, 9577, 11, 291, 576, 643, 281, 362, 257, 2710, 281, 264, 3753, 13, 51465, 51465, 407, 257, 2710, 11, 309, 534, 5946, 322, 1968, 428, 2657, 307, 5508, 420, 406, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1465868900731667, "compression_ratio": 1.5874439461883407, "no_caption_prob": 4.908244955004193e-05}, {"id": 521, "seek": 216488, "start": 2177.44, "end": 2178.44, "text": " on their position.", "tokens": [50364, 286, 478, 17939, 264, 26424, 5744, 260, 307, 5240, 1143, 337, 9577, 13, 50570, 50570, 407, 291, 980, 505, 689, 264, 3295, 307, 293, 550, 309, 1669, 512, 18668, 11546, 420, 12741, 2361, 50992, 50992, 322, 641, 2535, 13, 51042, 51042, 1119, 300, 309, 30, 51092, 51092, 1079, 11, 291, 393, 764, 309, 337, 341, 886, 13, 51194, 51194, 1743, 498, 337, 9577, 11, 291, 576, 643, 281, 362, 257, 2710, 281, 264, 3753, 13, 51465, 51465, 407, 257, 2710, 11, 309, 534, 5946, 322, 1968, 428, 2657, 307, 5508, 420, 406, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1465868900731667, "compression_ratio": 1.5874439461883407, "no_caption_prob": 4.908244955004193e-05}, {"id": 522, "seek": 216488, "start": 2178.44, "end": 2179.44, "text": " Is that it?", "tokens": [50364, 286, 478, 17939, 264, 26424, 5744, 260, 307, 5240, 1143, 337, 9577, 13, 50570, 50570, 407, 291, 980, 505, 689, 264, 3295, 307, 293, 550, 309, 1669, 512, 18668, 11546, 420, 12741, 2361, 50992, 50992, 322, 641, 2535, 13, 51042, 51042, 1119, 300, 309, 30, 51092, 51092, 1079, 11, 291, 393, 764, 309, 337, 341, 886, 13, 51194, 51194, 1743, 498, 337, 9577, 11, 291, 576, 643, 281, 362, 257, 2710, 281, 264, 3753, 13, 51465, 51465, 407, 257, 2710, 11, 309, 534, 5946, 322, 1968, 428, 2657, 307, 5508, 420, 406, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1465868900731667, "compression_ratio": 1.5874439461883407, "no_caption_prob": 4.908244955004193e-05}, {"id": 523, "seek": 216488, "start": 2179.44, "end": 2181.48, "text": " Yes, you can use it for this too.", "tokens": [50364, 286, 478, 17939, 264, 26424, 5744, 260, 307, 5240, 1143, 337, 9577, 13, 50570, 50570, 407, 291, 980, 505, 689, 264, 3295, 307, 293, 550, 309, 1669, 512, 18668, 11546, 420, 12741, 2361, 50992, 50992, 322, 641, 2535, 13, 51042, 51042, 1119, 300, 309, 30, 51092, 51092, 1079, 11, 291, 393, 764, 309, 337, 341, 886, 13, 51194, 51194, 1743, 498, 337, 9577, 11, 291, 576, 643, 281, 362, 257, 2710, 281, 264, 3753, 13, 51465, 51465, 407, 257, 2710, 11, 309, 534, 5946, 322, 1968, 428, 2657, 307, 5508, 420, 406, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1465868900731667, "compression_ratio": 1.5874439461883407, "no_caption_prob": 4.908244955004193e-05}, {"id": 524, "seek": 216488, "start": 2181.48, "end": 2186.9, "text": " Like if for lighting, you would need to have a normal to the surface.", "tokens": [50364, 286, 478, 17939, 264, 26424, 5744, 260, 307, 5240, 1143, 337, 9577, 13, 50570, 50570, 407, 291, 980, 505, 689, 264, 3295, 307, 293, 550, 309, 1669, 512, 18668, 11546, 420, 12741, 2361, 50992, 50992, 322, 641, 2535, 13, 51042, 51042, 1119, 300, 309, 30, 51092, 51092, 1079, 11, 291, 393, 764, 309, 337, 341, 886, 13, 51194, 51194, 1743, 498, 337, 9577, 11, 291, 576, 643, 281, 362, 257, 2710, 281, 264, 3753, 13, 51465, 51465, 407, 257, 2710, 11, 309, 534, 5946, 322, 1968, 428, 2657, 307, 5508, 420, 406, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1465868900731667, "compression_ratio": 1.5874439461883407, "no_caption_prob": 4.908244955004193e-05}, {"id": 525, "seek": 216488, "start": 2186.9, "end": 2193.1600000000003, "text": " So a normal, it really depends on whether your object is smooth or not.", "tokens": [50364, 286, 478, 17939, 264, 26424, 5744, 260, 307, 5240, 1143, 337, 9577, 13, 50570, 50570, 407, 291, 980, 505, 689, 264, 3295, 307, 293, 550, 309, 1669, 512, 18668, 11546, 420, 12741, 2361, 50992, 50992, 322, 641, 2535, 13, 51042, 51042, 1119, 300, 309, 30, 51092, 51092, 1079, 11, 291, 393, 764, 309, 337, 341, 886, 13, 51194, 51194, 1743, 498, 337, 9577, 11, 291, 576, 643, 281, 362, 257, 2710, 281, 264, 3753, 13, 51465, 51465, 407, 257, 2710, 11, 309, 534, 5946, 322, 1968, 428, 2657, 307, 5508, 420, 406, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.1465868900731667, "compression_ratio": 1.5874439461883407, "no_caption_prob": 4.908244955004193e-05}, {"id": 526, "seek": 219316, "start": 2193.16, "end": 2195.44, "text": " Let's say our cube is not smooth.", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 527, "seek": 219316, "start": 2195.44, "end": 2201.16, "text": " For that, I think you can even calculate the normal in the fragment shader, but you can", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 528, "seek": 219316, "start": 2201.16, "end": 2205.8399999999997, "text": " also have it attached to each of the vertices when you're defining the cube.", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 529, "seek": 219316, "start": 2205.8399999999997, "end": 2206.8399999999997, "text": " What is a normal?", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 530, "seek": 219316, "start": 2206.8399999999997, "end": 2214.2, "text": " It's like a unit vector from the surface, like going to the outside from the surface.", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 531, "seek": 219316, "start": 2214.2, "end": 2216.7999999999997, "text": " Okay, so it's like...", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 532, "seek": 219316, "start": 2216.7999999999997, "end": 2218.7999999999997, "text": " Pointing where the surface is facing.", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 533, "seek": 219316, "start": 2218.7999999999997, "end": 2220.52, "text": " Okay, yeah.", "tokens": [50364, 961, 311, 584, 527, 13728, 307, 406, 5508, 13, 50478, 50478, 1171, 300, 11, 286, 519, 291, 393, 754, 8873, 264, 2710, 294, 264, 26424, 5744, 260, 11, 457, 291, 393, 50764, 50764, 611, 362, 309, 8570, 281, 1184, 295, 264, 32053, 562, 291, 434, 17827, 264, 13728, 13, 50998, 50998, 708, 307, 257, 2710, 30, 51048, 51048, 467, 311, 411, 257, 4985, 8062, 490, 264, 3753, 11, 411, 516, 281, 264, 2380, 490, 264, 3753, 13, 51416, 51416, 1033, 11, 370, 309, 311, 411, 485, 51546, 51546, 12387, 278, 689, 264, 3753, 307, 7170, 13, 51646, 51646, 1033, 11, 1338, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.19924332960596625, "compression_ratio": 1.6475770925110131, "no_caption_prob": 0.00017395771283190697}, {"id": 534, "seek": 222052, "start": 2220.52, "end": 2227.32, "text": " And then you have another, like you have a direction of the light or like this kind of", "tokens": [50364, 400, 550, 291, 362, 1071, 11, 411, 291, 362, 257, 3513, 295, 264, 1442, 420, 411, 341, 733, 295, 50704, 50704, 551, 13, 50754, 50754, 759, 291, 362, 42242, 1442, 11, 411, 264, 22811, 1944, 307, 411, 264, 2199, 4962, 30556, 689, 51088, 51088, 291, 362, 264, 3513, 295, 264, 1442, 13, 51188, 51188, 400, 550, 562, 291, 434, 1382, 281, 6997, 437, 264, 2017, 295, 264, 19261, 820, 312, 11, 291, 393, 51480, 51480, 1520, 577, 613, 732, 18875, 7975, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.13226941574451534, "compression_ratio": 1.8368421052631578, "no_caption_prob": 5.3905780077911913e-05}, {"id": 535, "seek": 222052, "start": 2227.32, "end": 2228.32, "text": " thing.", "tokens": [50364, 400, 550, 291, 362, 1071, 11, 411, 291, 362, 257, 3513, 295, 264, 1442, 420, 411, 341, 733, 295, 50704, 50704, 551, 13, 50754, 50754, 759, 291, 362, 42242, 1442, 11, 411, 264, 22811, 1944, 307, 411, 264, 2199, 4962, 30556, 689, 51088, 51088, 291, 362, 264, 3513, 295, 264, 1442, 13, 51188, 51188, 400, 550, 562, 291, 434, 1382, 281, 6997, 437, 264, 2017, 295, 264, 19261, 820, 312, 11, 291, 393, 51480, 51480, 1520, 577, 613, 732, 18875, 7975, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.13226941574451534, "compression_ratio": 1.8368421052631578, "no_caption_prob": 5.3905780077911913e-05}, {"id": 536, "seek": 222052, "start": 2228.32, "end": 2235.0, "text": " If you have directional light, like the simplest possible is like the simple flat shading where", "tokens": [50364, 400, 550, 291, 362, 1071, 11, 411, 291, 362, 257, 3513, 295, 264, 1442, 420, 411, 341, 733, 295, 50704, 50704, 551, 13, 50754, 50754, 759, 291, 362, 42242, 1442, 11, 411, 264, 22811, 1944, 307, 411, 264, 2199, 4962, 30556, 689, 51088, 51088, 291, 362, 264, 3513, 295, 264, 1442, 13, 51188, 51188, 400, 550, 562, 291, 434, 1382, 281, 6997, 437, 264, 2017, 295, 264, 19261, 820, 312, 11, 291, 393, 51480, 51480, 1520, 577, 613, 732, 18875, 7975, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.13226941574451534, "compression_ratio": 1.8368421052631578, "no_caption_prob": 5.3905780077911913e-05}, {"id": 537, "seek": 222052, "start": 2235.0, "end": 2237.0, "text": " you have the direction of the light.", "tokens": [50364, 400, 550, 291, 362, 1071, 11, 411, 291, 362, 257, 3513, 295, 264, 1442, 420, 411, 341, 733, 295, 50704, 50704, 551, 13, 50754, 50754, 759, 291, 362, 42242, 1442, 11, 411, 264, 22811, 1944, 307, 411, 264, 2199, 4962, 30556, 689, 51088, 51088, 291, 362, 264, 3513, 295, 264, 1442, 13, 51188, 51188, 400, 550, 562, 291, 434, 1382, 281, 6997, 437, 264, 2017, 295, 264, 19261, 820, 312, 11, 291, 393, 51480, 51480, 1520, 577, 613, 732, 18875, 7975, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.13226941574451534, "compression_ratio": 1.8368421052631578, "no_caption_prob": 5.3905780077911913e-05}, {"id": 538, "seek": 222052, "start": 2237.0, "end": 2242.84, "text": " And then when you're trying to determine what the color of the pixel should be, you can", "tokens": [50364, 400, 550, 291, 362, 1071, 11, 411, 291, 362, 257, 3513, 295, 264, 1442, 420, 411, 341, 733, 295, 50704, 50704, 551, 13, 50754, 50754, 759, 291, 362, 42242, 1442, 11, 411, 264, 22811, 1944, 307, 411, 264, 2199, 4962, 30556, 689, 51088, 51088, 291, 362, 264, 3513, 295, 264, 1442, 13, 51188, 51188, 400, 550, 562, 291, 434, 1382, 281, 6997, 437, 264, 2017, 295, 264, 19261, 820, 312, 11, 291, 393, 51480, 51480, 1520, 577, 613, 732, 18875, 7975, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.13226941574451534, "compression_ratio": 1.8368421052631578, "no_caption_prob": 5.3905780077911913e-05}, {"id": 539, "seek": 222052, "start": 2242.84, "end": 2246.0, "text": " check how these two vectors align.", "tokens": [50364, 400, 550, 291, 362, 1071, 11, 411, 291, 362, 257, 3513, 295, 264, 1442, 420, 411, 341, 733, 295, 50704, 50704, 551, 13, 50754, 50754, 759, 291, 362, 42242, 1442, 11, 411, 264, 22811, 1944, 307, 411, 264, 2199, 4962, 30556, 689, 51088, 51088, 291, 362, 264, 3513, 295, 264, 1442, 13, 51188, 51188, 400, 550, 562, 291, 434, 1382, 281, 6997, 437, 264, 2017, 295, 264, 19261, 820, 312, 11, 291, 393, 51480, 51480, 1520, 577, 613, 732, 18875, 7975, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.13226941574451534, "compression_ratio": 1.8368421052631578, "no_caption_prob": 5.3905780077911913e-05}, {"id": 540, "seek": 224600, "start": 2246.0, "end": 2251.12, "text": " Like if they are facing each other exactly, then I guess it will be highlighted.", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 541, "seek": 224600, "start": 2251.12, "end": 2257.92, "text": " But if they are facing in the opposite direction, sorry, if they are facing in the same direction,", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 542, "seek": 224600, "start": 2257.92, "end": 2260.32, "text": " then it's going to be in the dark.", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 543, "seek": 224600, "start": 2260.32, "end": 2267.12, "text": " Yeah, because you're pointing, the light is shining on the backside of the cube or of", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 544, "seek": 224600, "start": 2267.12, "end": 2268.12, "text": " that face.", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 545, "seek": 224600, "start": 2268.12, "end": 2270.44, "text": " Then it means it won't be shown.", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 546, "seek": 224600, "start": 2270.44, "end": 2271.44, "text": " Okay.", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 547, "seek": 224600, "start": 2271.44, "end": 2272.52, "text": " Okay, so this is cool.", "tokens": [50364, 1743, 498, 436, 366, 7170, 1184, 661, 2293, 11, 550, 286, 2041, 309, 486, 312, 17173, 13, 50620, 50620, 583, 498, 436, 366, 7170, 294, 264, 6182, 3513, 11, 2597, 11, 498, 436, 366, 7170, 294, 264, 912, 3513, 11, 50960, 50960, 550, 309, 311, 516, 281, 312, 294, 264, 2877, 13, 51080, 51080, 865, 11, 570, 291, 434, 12166, 11, 264, 1442, 307, 18269, 322, 264, 35370, 295, 264, 13728, 420, 295, 51420, 51420, 300, 1851, 13, 51470, 51470, 1396, 309, 1355, 309, 1582, 380, 312, 4898, 13, 51586, 51586, 1033, 13, 51636, 51636, 1033, 11, 370, 341, 307, 1627, 13, 51690, 51690], "temperature": 0.0, "avg_logprob": -0.2508222651931475, "compression_ratio": 1.7348837209302326, "no_caption_prob": 9.60898760240525e-05}, {"id": 548, "seek": 227252, "start": 2272.52, "end": 2280.0, "text": " So like the the variances, so this is like the sort of third piece of a shader.", "tokens": [50364, 407, 411, 264, 264, 1374, 21518, 11, 370, 341, 307, 411, 264, 1333, 295, 2636, 2522, 295, 257, 5744, 260, 13, 50738, 50738, 467, 393, 362, 257, 22984, 597, 307, 364, 5598, 490, 264, 5744, 260, 13, 50902, 50902, 865, 11, 370, 257, 28162, 5744, 260, 575, 257, 21977, 382, 364, 5598, 13, 51160, 51160, 440, 26424, 5744, 260, 575, 552, 382, 364, 4846, 13, 51302, 51302, 1779, 11, 558, 13, 51374, 51374, 407, 337, 1365, 11, 498, 291, 362, 364, 5598, 295, 264, 2017, 2212, 597, 1851, 295, 264, 13728, 321, 434, 322, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20928263423418758, "compression_ratio": 1.7106598984771573, "no_caption_prob": 2.546276846260298e-05}, {"id": 549, "seek": 227252, "start": 2280.0, "end": 2283.28, "text": " It can have a varying which is an output from the shader.", "tokens": [50364, 407, 411, 264, 264, 1374, 21518, 11, 370, 341, 307, 411, 264, 1333, 295, 2636, 2522, 295, 257, 5744, 260, 13, 50738, 50738, 467, 393, 362, 257, 22984, 597, 307, 364, 5598, 490, 264, 5744, 260, 13, 50902, 50902, 865, 11, 370, 257, 28162, 5744, 260, 575, 257, 21977, 382, 364, 5598, 13, 51160, 51160, 440, 26424, 5744, 260, 575, 552, 382, 364, 4846, 13, 51302, 51302, 1779, 11, 558, 13, 51374, 51374, 407, 337, 1365, 11, 498, 291, 362, 364, 5598, 295, 264, 2017, 2212, 597, 1851, 295, 264, 13728, 321, 434, 322, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20928263423418758, "compression_ratio": 1.7106598984771573, "no_caption_prob": 2.546276846260298e-05}, {"id": 550, "seek": 227252, "start": 2283.28, "end": 2288.44, "text": " Yeah, so a vertex shader has a variance as an output.", "tokens": [50364, 407, 411, 264, 264, 1374, 21518, 11, 370, 341, 307, 411, 264, 1333, 295, 2636, 2522, 295, 257, 5744, 260, 13, 50738, 50738, 467, 393, 362, 257, 22984, 597, 307, 364, 5598, 490, 264, 5744, 260, 13, 50902, 50902, 865, 11, 370, 257, 28162, 5744, 260, 575, 257, 21977, 382, 364, 5598, 13, 51160, 51160, 440, 26424, 5744, 260, 575, 552, 382, 364, 4846, 13, 51302, 51302, 1779, 11, 558, 13, 51374, 51374, 407, 337, 1365, 11, 498, 291, 362, 364, 5598, 295, 264, 2017, 2212, 597, 1851, 295, 264, 13728, 321, 434, 322, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20928263423418758, "compression_ratio": 1.7106598984771573, "no_caption_prob": 2.546276846260298e-05}, {"id": 551, "seek": 227252, "start": 2288.44, "end": 2291.28, "text": " The fragment shader has them as an input.", "tokens": [50364, 407, 411, 264, 264, 1374, 21518, 11, 370, 341, 307, 411, 264, 1333, 295, 2636, 2522, 295, 257, 5744, 260, 13, 50738, 50738, 467, 393, 362, 257, 22984, 597, 307, 364, 5598, 490, 264, 5744, 260, 13, 50902, 50902, 865, 11, 370, 257, 28162, 5744, 260, 575, 257, 21977, 382, 364, 5598, 13, 51160, 51160, 440, 26424, 5744, 260, 575, 552, 382, 364, 4846, 13, 51302, 51302, 1779, 11, 558, 13, 51374, 51374, 407, 337, 1365, 11, 498, 291, 362, 364, 5598, 295, 264, 2017, 2212, 597, 1851, 295, 264, 13728, 321, 434, 322, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20928263423418758, "compression_ratio": 1.7106598984771573, "no_caption_prob": 2.546276846260298e-05}, {"id": 552, "seek": 227252, "start": 2291.28, "end": 2292.72, "text": " Right, right.", "tokens": [50364, 407, 411, 264, 264, 1374, 21518, 11, 370, 341, 307, 411, 264, 1333, 295, 2636, 2522, 295, 257, 5744, 260, 13, 50738, 50738, 467, 393, 362, 257, 22984, 597, 307, 364, 5598, 490, 264, 5744, 260, 13, 50902, 50902, 865, 11, 370, 257, 28162, 5744, 260, 575, 257, 21977, 382, 364, 5598, 13, 51160, 51160, 440, 26424, 5744, 260, 575, 552, 382, 364, 4846, 13, 51302, 51302, 1779, 11, 558, 13, 51374, 51374, 407, 337, 1365, 11, 498, 291, 362, 364, 5598, 295, 264, 2017, 2212, 597, 1851, 295, 264, 13728, 321, 434, 322, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20928263423418758, "compression_ratio": 1.7106598984771573, "no_caption_prob": 2.546276846260298e-05}, {"id": 553, "seek": 227252, "start": 2292.72, "end": 2302.36, "text": " So for example, if you have an output of the color given which face of the cube we're on,", "tokens": [50364, 407, 411, 264, 264, 1374, 21518, 11, 370, 341, 307, 411, 264, 1333, 295, 2636, 2522, 295, 257, 5744, 260, 13, 50738, 50738, 467, 393, 362, 257, 22984, 597, 307, 364, 5598, 490, 264, 5744, 260, 13, 50902, 50902, 865, 11, 370, 257, 28162, 5744, 260, 575, 257, 21977, 382, 364, 5598, 13, 51160, 51160, 440, 26424, 5744, 260, 575, 552, 382, 364, 4846, 13, 51302, 51302, 1779, 11, 558, 13, 51374, 51374, 407, 337, 1365, 11, 498, 291, 362, 364, 5598, 295, 264, 2017, 2212, 597, 1851, 295, 264, 13728, 321, 434, 322, 11, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.20928263423418758, "compression_ratio": 1.7106598984771573, "no_caption_prob": 2.546276846260298e-05}, {"id": 554, "seek": 230236, "start": 2302.36, "end": 2310.28, "text": " then that varying output from the vertex shader would be, that color would be an input to", "tokens": [50364, 550, 300, 22984, 5598, 490, 264, 28162, 5744, 260, 576, 312, 11, 300, 2017, 576, 312, 364, 4846, 281, 50760, 50760, 264, 26424, 5744, 260, 293, 550, 309, 576, 445, 747, 300, 2017, 293, 6264, 4088, 309, 11, 50976, 50976, 457, 1936, 4225, 300, 2017, 13, 51084, 51084, 1079, 11, 1936, 13, 51208, 51208, 467, 1177, 380, 747, 309, 2293, 558, 570, 291, 992, 309, 3911, 1045, 32053, 295, 257, 13369, 13, 51540, 51540, 1779, 11, 1604, 264, 28162, 5744, 260, 307, 1364, 365, 787, 264, 4538, 2793, 11, 18534, 264, 26424, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2238052487373352, "compression_ratio": 1.7565217391304349, "no_caption_prob": 1.3845082321495283e-05}, {"id": 555, "seek": 230236, "start": 2310.28, "end": 2314.6, "text": " the fragment shader and then it would just take that color and possibly transform it,", "tokens": [50364, 550, 300, 22984, 5598, 490, 264, 28162, 5744, 260, 576, 312, 11, 300, 2017, 576, 312, 364, 4846, 281, 50760, 50760, 264, 26424, 5744, 260, 293, 550, 309, 576, 445, 747, 300, 2017, 293, 6264, 4088, 309, 11, 50976, 50976, 457, 1936, 4225, 300, 2017, 13, 51084, 51084, 1079, 11, 1936, 13, 51208, 51208, 467, 1177, 380, 747, 309, 2293, 558, 570, 291, 992, 309, 3911, 1045, 32053, 295, 257, 13369, 13, 51540, 51540, 1779, 11, 1604, 264, 28162, 5744, 260, 307, 1364, 365, 787, 264, 4538, 2793, 11, 18534, 264, 26424, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2238052487373352, "compression_ratio": 1.7565217391304349, "no_caption_prob": 1.3845082321495283e-05}, {"id": 556, "seek": 230236, "start": 2314.6, "end": 2316.76, "text": " but basically paint that color.", "tokens": [50364, 550, 300, 22984, 5598, 490, 264, 28162, 5744, 260, 576, 312, 11, 300, 2017, 576, 312, 364, 4846, 281, 50760, 50760, 264, 26424, 5744, 260, 293, 550, 309, 576, 445, 747, 300, 2017, 293, 6264, 4088, 309, 11, 50976, 50976, 457, 1936, 4225, 300, 2017, 13, 51084, 51084, 1079, 11, 1936, 13, 51208, 51208, 467, 1177, 380, 747, 309, 2293, 558, 570, 291, 992, 309, 3911, 1045, 32053, 295, 257, 13369, 13, 51540, 51540, 1779, 11, 1604, 264, 28162, 5744, 260, 307, 1364, 365, 787, 264, 4538, 2793, 11, 18534, 264, 26424, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2238052487373352, "compression_ratio": 1.7565217391304349, "no_caption_prob": 1.3845082321495283e-05}, {"id": 557, "seek": 230236, "start": 2316.76, "end": 2319.2400000000002, "text": " Yes, basically.", "tokens": [50364, 550, 300, 22984, 5598, 490, 264, 28162, 5744, 260, 576, 312, 11, 300, 2017, 576, 312, 364, 4846, 281, 50760, 50760, 264, 26424, 5744, 260, 293, 550, 309, 576, 445, 747, 300, 2017, 293, 6264, 4088, 309, 11, 50976, 50976, 457, 1936, 4225, 300, 2017, 13, 51084, 51084, 1079, 11, 1936, 13, 51208, 51208, 467, 1177, 380, 747, 309, 2293, 558, 570, 291, 992, 309, 3911, 1045, 32053, 295, 257, 13369, 13, 51540, 51540, 1779, 11, 1604, 264, 28162, 5744, 260, 307, 1364, 365, 787, 264, 4538, 2793, 11, 18534, 264, 26424, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2238052487373352, "compression_ratio": 1.7565217391304349, "no_caption_prob": 1.3845082321495283e-05}, {"id": 558, "seek": 230236, "start": 2319.2400000000002, "end": 2325.88, "text": " It doesn't take it exactly right because you set it onto three vertices of a triangle.", "tokens": [50364, 550, 300, 22984, 5598, 490, 264, 28162, 5744, 260, 576, 312, 11, 300, 2017, 576, 312, 364, 4846, 281, 50760, 50760, 264, 26424, 5744, 260, 293, 550, 309, 576, 445, 747, 300, 2017, 293, 6264, 4088, 309, 11, 50976, 50976, 457, 1936, 4225, 300, 2017, 13, 51084, 51084, 1079, 11, 1936, 13, 51208, 51208, 467, 1177, 380, 747, 309, 2293, 558, 570, 291, 992, 309, 3911, 1045, 32053, 295, 257, 13369, 13, 51540, 51540, 1779, 11, 1604, 264, 28162, 5744, 260, 307, 1364, 365, 787, 264, 4538, 2793, 11, 18534, 264, 26424, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2238052487373352, "compression_ratio": 1.7565217391304349, "no_caption_prob": 1.3845082321495283e-05}, {"id": 559, "seek": 230236, "start": 2325.88, "end": 2331.32, "text": " Right, remember the vertex shader is working with only the corner points, whilst the fragment", "tokens": [50364, 550, 300, 22984, 5598, 490, 264, 28162, 5744, 260, 576, 312, 11, 300, 2017, 576, 312, 364, 4846, 281, 50760, 50760, 264, 26424, 5744, 260, 293, 550, 309, 576, 445, 747, 300, 2017, 293, 6264, 4088, 309, 11, 50976, 50976, 457, 1936, 4225, 300, 2017, 13, 51084, 51084, 1079, 11, 1936, 13, 51208, 51208, 467, 1177, 380, 747, 309, 2293, 558, 570, 291, 992, 309, 3911, 1045, 32053, 295, 257, 13369, 13, 51540, 51540, 1779, 11, 1604, 264, 28162, 5744, 260, 307, 1364, 365, 787, 264, 4538, 2793, 11, 18534, 264, 26424, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.2238052487373352, "compression_ratio": 1.7565217391304349, "no_caption_prob": 1.3845082321495283e-05}, {"id": 560, "seek": 233132, "start": 2331.32, "end": 2336.44, "text": " shader is filling the whole triangle.", "tokens": [50364, 5744, 260, 307, 10623, 264, 1379, 13369, 13, 50620, 50620, 407, 437, 291, 483, 456, 307, 364, 44902, 399, 11, 364, 44902, 770, 1874, 2361, 322, 577, 1998, 50956, 50956, 291, 366, 281, 1184, 295, 264, 32053, 13, 51152, 51152, 407, 411, 498, 309, 311, 588, 1998, 11, 498, 309, 311, 412, 264, 28162, 2564, 11, 550, 309, 311, 516, 281, 312, 264, 2017, 51400, 51400, 300, 307, 22206, 337, 300, 28162, 13, 51494, 51494, 759, 309, 311, 4079, 294, 264, 3056, 293, 291, 362, 22206, 819, 4577, 337, 439, 295, 264, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12354613343874614, "compression_ratio": 1.7815533980582525, "no_caption_prob": 2.014100937230978e-05}, {"id": 561, "seek": 233132, "start": 2336.44, "end": 2343.1600000000003, "text": " So what you get there is an interpolation, an interpolated result based on how close", "tokens": [50364, 5744, 260, 307, 10623, 264, 1379, 13369, 13, 50620, 50620, 407, 437, 291, 483, 456, 307, 364, 44902, 399, 11, 364, 44902, 770, 1874, 2361, 322, 577, 1998, 50956, 50956, 291, 366, 281, 1184, 295, 264, 32053, 13, 51152, 51152, 407, 411, 498, 309, 311, 588, 1998, 11, 498, 309, 311, 412, 264, 28162, 2564, 11, 550, 309, 311, 516, 281, 312, 264, 2017, 51400, 51400, 300, 307, 22206, 337, 300, 28162, 13, 51494, 51494, 759, 309, 311, 4079, 294, 264, 3056, 293, 291, 362, 22206, 819, 4577, 337, 439, 295, 264, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12354613343874614, "compression_ratio": 1.7815533980582525, "no_caption_prob": 2.014100937230978e-05}, {"id": 562, "seek": 233132, "start": 2343.1600000000003, "end": 2347.0800000000004, "text": " you are to each of the vertices.", "tokens": [50364, 5744, 260, 307, 10623, 264, 1379, 13369, 13, 50620, 50620, 407, 437, 291, 483, 456, 307, 364, 44902, 399, 11, 364, 44902, 770, 1874, 2361, 322, 577, 1998, 50956, 50956, 291, 366, 281, 1184, 295, 264, 32053, 13, 51152, 51152, 407, 411, 498, 309, 311, 588, 1998, 11, 498, 309, 311, 412, 264, 28162, 2564, 11, 550, 309, 311, 516, 281, 312, 264, 2017, 51400, 51400, 300, 307, 22206, 337, 300, 28162, 13, 51494, 51494, 759, 309, 311, 4079, 294, 264, 3056, 293, 291, 362, 22206, 819, 4577, 337, 439, 295, 264, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12354613343874614, "compression_ratio": 1.7815533980582525, "no_caption_prob": 2.014100937230978e-05}, {"id": 563, "seek": 233132, "start": 2347.0800000000004, "end": 2352.04, "text": " So like if it's very close, if it's at the vertex itself, then it's going to be the color", "tokens": [50364, 5744, 260, 307, 10623, 264, 1379, 13369, 13, 50620, 50620, 407, 437, 291, 483, 456, 307, 364, 44902, 399, 11, 364, 44902, 770, 1874, 2361, 322, 577, 1998, 50956, 50956, 291, 366, 281, 1184, 295, 264, 32053, 13, 51152, 51152, 407, 411, 498, 309, 311, 588, 1998, 11, 498, 309, 311, 412, 264, 28162, 2564, 11, 550, 309, 311, 516, 281, 312, 264, 2017, 51400, 51400, 300, 307, 22206, 337, 300, 28162, 13, 51494, 51494, 759, 309, 311, 4079, 294, 264, 3056, 293, 291, 362, 22206, 819, 4577, 337, 439, 295, 264, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12354613343874614, "compression_ratio": 1.7815533980582525, "no_caption_prob": 2.014100937230978e-05}, {"id": 564, "seek": 233132, "start": 2352.04, "end": 2353.92, "text": " that is specified for that vertex.", "tokens": [50364, 5744, 260, 307, 10623, 264, 1379, 13369, 13, 50620, 50620, 407, 437, 291, 483, 456, 307, 364, 44902, 399, 11, 364, 44902, 770, 1874, 2361, 322, 577, 1998, 50956, 50956, 291, 366, 281, 1184, 295, 264, 32053, 13, 51152, 51152, 407, 411, 498, 309, 311, 588, 1998, 11, 498, 309, 311, 412, 264, 28162, 2564, 11, 550, 309, 311, 516, 281, 312, 264, 2017, 51400, 51400, 300, 307, 22206, 337, 300, 28162, 13, 51494, 51494, 759, 309, 311, 4079, 294, 264, 3056, 293, 291, 362, 22206, 819, 4577, 337, 439, 295, 264, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12354613343874614, "compression_ratio": 1.7815533980582525, "no_caption_prob": 2.014100937230978e-05}, {"id": 565, "seek": 233132, "start": 2353.92, "end": 2358.44, "text": " If it's somewhere in the center and you have specified different colors for all of the", "tokens": [50364, 5744, 260, 307, 10623, 264, 1379, 13369, 13, 50620, 50620, 407, 437, 291, 483, 456, 307, 364, 44902, 399, 11, 364, 44902, 770, 1874, 2361, 322, 577, 1998, 50956, 50956, 291, 366, 281, 1184, 295, 264, 32053, 13, 51152, 51152, 407, 411, 498, 309, 311, 588, 1998, 11, 498, 309, 311, 412, 264, 28162, 2564, 11, 550, 309, 311, 516, 281, 312, 264, 2017, 51400, 51400, 300, 307, 22206, 337, 300, 28162, 13, 51494, 51494, 759, 309, 311, 4079, 294, 264, 3056, 293, 291, 362, 22206, 819, 4577, 337, 439, 295, 264, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.12354613343874614, "compression_ratio": 1.7815533980582525, "no_caption_prob": 2.014100937230978e-05}, {"id": 566, "seek": 235844, "start": 2358.44, "end": 2363.52, "text": " three vertices, then it's going to be like an average of colors.", "tokens": [50364, 1045, 32053, 11, 550, 309, 311, 516, 281, 312, 411, 364, 4274, 295, 4577, 13, 50618, 50618, 1664, 291, 6997, 577, 300, 44902, 399, 307, 1027, 30, 50761, 50761, 1664, 291, 764, 819, 44902, 399, 6828, 420, 307, 309, 1009, 264, 912, 30, 50937, 50937, 467, 311, 264, 912, 293, 286, 393, 380, 980, 577, 309, 1985, 13, 51140, 51140, 286, 519, 309, 311, 411, 8213, 13, 51220, 51220, 400, 286, 478, 17939, 498, 291, 528, 281, 312, 544, 13600, 294, 577, 264, 4190, 1319, 490, 472, 28162, 281, 51624, 51624, 1071, 11, 550, 291, 643, 281, 12972, 264, 1230, 295, 29896, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1423469420966752, "compression_ratio": 1.6507936507936507, "no_caption_prob": 6.302115798462182e-05}, {"id": 567, "seek": 235844, "start": 2363.52, "end": 2366.38, "text": " Can you determine how that interpolation is made?", "tokens": [50364, 1045, 32053, 11, 550, 309, 311, 516, 281, 312, 411, 364, 4274, 295, 4577, 13, 50618, 50618, 1664, 291, 6997, 577, 300, 44902, 399, 307, 1027, 30, 50761, 50761, 1664, 291, 764, 819, 44902, 399, 6828, 420, 307, 309, 1009, 264, 912, 30, 50937, 50937, 467, 311, 264, 912, 293, 286, 393, 380, 980, 577, 309, 1985, 13, 51140, 51140, 286, 519, 309, 311, 411, 8213, 13, 51220, 51220, 400, 286, 478, 17939, 498, 291, 528, 281, 312, 544, 13600, 294, 577, 264, 4190, 1319, 490, 472, 28162, 281, 51624, 51624, 1071, 11, 550, 291, 643, 281, 12972, 264, 1230, 295, 29896, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1423469420966752, "compression_ratio": 1.6507936507936507, "no_caption_prob": 6.302115798462182e-05}, {"id": 568, "seek": 235844, "start": 2366.38, "end": 2369.9, "text": " Can you use different interpolation functions or is it always the same?", "tokens": [50364, 1045, 32053, 11, 550, 309, 311, 516, 281, 312, 411, 364, 4274, 295, 4577, 13, 50618, 50618, 1664, 291, 6997, 577, 300, 44902, 399, 307, 1027, 30, 50761, 50761, 1664, 291, 764, 819, 44902, 399, 6828, 420, 307, 309, 1009, 264, 912, 30, 50937, 50937, 467, 311, 264, 912, 293, 286, 393, 380, 980, 577, 309, 1985, 13, 51140, 51140, 286, 519, 309, 311, 411, 8213, 13, 51220, 51220, 400, 286, 478, 17939, 498, 291, 528, 281, 312, 544, 13600, 294, 577, 264, 4190, 1319, 490, 472, 28162, 281, 51624, 51624, 1071, 11, 550, 291, 643, 281, 12972, 264, 1230, 295, 29896, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1423469420966752, "compression_ratio": 1.6507936507936507, "no_caption_prob": 6.302115798462182e-05}, {"id": 569, "seek": 235844, "start": 2369.9, "end": 2373.96, "text": " It's the same and I can't tell how it works.", "tokens": [50364, 1045, 32053, 11, 550, 309, 311, 516, 281, 312, 411, 364, 4274, 295, 4577, 13, 50618, 50618, 1664, 291, 6997, 577, 300, 44902, 399, 307, 1027, 30, 50761, 50761, 1664, 291, 764, 819, 44902, 399, 6828, 420, 307, 309, 1009, 264, 912, 30, 50937, 50937, 467, 311, 264, 912, 293, 286, 393, 380, 980, 577, 309, 1985, 13, 51140, 51140, 286, 519, 309, 311, 411, 8213, 13, 51220, 51220, 400, 286, 478, 17939, 498, 291, 528, 281, 312, 544, 13600, 294, 577, 264, 4190, 1319, 490, 472, 28162, 281, 51624, 51624, 1071, 11, 550, 291, 643, 281, 12972, 264, 1230, 295, 29896, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1423469420966752, "compression_ratio": 1.6507936507936507, "no_caption_prob": 6.302115798462182e-05}, {"id": 570, "seek": 235844, "start": 2373.96, "end": 2375.56, "text": " I think it's like linear.", "tokens": [50364, 1045, 32053, 11, 550, 309, 311, 516, 281, 312, 411, 364, 4274, 295, 4577, 13, 50618, 50618, 1664, 291, 6997, 577, 300, 44902, 399, 307, 1027, 30, 50761, 50761, 1664, 291, 764, 819, 44902, 399, 6828, 420, 307, 309, 1009, 264, 912, 30, 50937, 50937, 467, 311, 264, 912, 293, 286, 393, 380, 980, 577, 309, 1985, 13, 51140, 51140, 286, 519, 309, 311, 411, 8213, 13, 51220, 51220, 400, 286, 478, 17939, 498, 291, 528, 281, 312, 544, 13600, 294, 577, 264, 4190, 1319, 490, 472, 28162, 281, 51624, 51624, 1071, 11, 550, 291, 643, 281, 12972, 264, 1230, 295, 29896, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1423469420966752, "compression_ratio": 1.6507936507936507, "no_caption_prob": 6.302115798462182e-05}, {"id": 571, "seek": 235844, "start": 2375.56, "end": 2383.64, "text": " And I'm guessing if you want to be more precise in how the values change from one vertex to", "tokens": [50364, 1045, 32053, 11, 550, 309, 311, 516, 281, 312, 411, 364, 4274, 295, 4577, 13, 50618, 50618, 1664, 291, 6997, 577, 300, 44902, 399, 307, 1027, 30, 50761, 50761, 1664, 291, 764, 819, 44902, 399, 6828, 420, 307, 309, 1009, 264, 912, 30, 50937, 50937, 467, 311, 264, 912, 293, 286, 393, 380, 980, 577, 309, 1985, 13, 51140, 51140, 286, 519, 309, 311, 411, 8213, 13, 51220, 51220, 400, 286, 478, 17939, 498, 291, 528, 281, 312, 544, 13600, 294, 577, 264, 4190, 1319, 490, 472, 28162, 281, 51624, 51624, 1071, 11, 550, 291, 643, 281, 12972, 264, 1230, 295, 29896, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1423469420966752, "compression_ratio": 1.6507936507936507, "no_caption_prob": 6.302115798462182e-05}, {"id": 572, "seek": 235844, "start": 2383.64, "end": 2388.0, "text": " another, then you need to multiply the number of triangles, right?", "tokens": [50364, 1045, 32053, 11, 550, 309, 311, 516, 281, 312, 411, 364, 4274, 295, 4577, 13, 50618, 50618, 1664, 291, 6997, 577, 300, 44902, 399, 307, 1027, 30, 50761, 50761, 1664, 291, 764, 819, 44902, 399, 6828, 420, 307, 309, 1009, 264, 912, 30, 50937, 50937, 467, 311, 264, 912, 293, 286, 393, 380, 980, 577, 309, 1985, 13, 51140, 51140, 286, 519, 309, 311, 411, 8213, 13, 51220, 51220, 400, 286, 478, 17939, 498, 291, 528, 281, 312, 544, 13600, 294, 577, 264, 4190, 1319, 490, 472, 28162, 281, 51624, 51624, 1071, 11, 550, 291, 643, 281, 12972, 264, 1230, 295, 29896, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1423469420966752, "compression_ratio": 1.6507936507936507, "no_caption_prob": 6.302115798462182e-05}, {"id": 573, "seek": 238800, "start": 2388.0, "end": 2396.24, "text": " So if you have, so let's say your cube is really smooth, so let's say your cube has", "tokens": [50364, 407, 498, 291, 362, 11, 370, 718, 311, 584, 428, 13728, 307, 534, 5508, 11, 370, 718, 311, 584, 428, 13728, 575, 50776, 50776, 257, 588, 9452, 2017, 11, 550, 291, 2642, 732, 29896, 337, 472, 1851, 13, 51035, 51035, 583, 498, 291, 528, 309, 281, 312, 257, 688, 28640, 11, 550, 291, 393, 1723, 309, 493, 666, 544, 29896, 293, 51324, 51324, 362, 264, 4577, 1319, 4748, 544, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.18692511481207771, "compression_ratio": 1.6646341463414633, "no_caption_prob": 0.00023033640172798187}, {"id": 574, "seek": 238800, "start": 2396.24, "end": 2401.42, "text": " a very uniform color, then you draw two triangles for one face.", "tokens": [50364, 407, 498, 291, 362, 11, 370, 718, 311, 584, 428, 13728, 307, 534, 5508, 11, 370, 718, 311, 584, 428, 13728, 575, 50776, 50776, 257, 588, 9452, 2017, 11, 550, 291, 2642, 732, 29896, 337, 472, 1851, 13, 51035, 51035, 583, 498, 291, 528, 309, 281, 312, 257, 688, 28640, 11, 550, 291, 393, 1723, 309, 493, 666, 544, 29896, 293, 51324, 51324, 362, 264, 4577, 1319, 4748, 544, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.18692511481207771, "compression_ratio": 1.6646341463414633, "no_caption_prob": 0.00023033640172798187}, {"id": 575, "seek": 238800, "start": 2401.42, "end": 2407.2, "text": " But if you want it to be a lot smoother, then you can cut it up into more triangles and", "tokens": [50364, 407, 498, 291, 362, 11, 370, 718, 311, 584, 428, 13728, 307, 534, 5508, 11, 370, 718, 311, 584, 428, 13728, 575, 50776, 50776, 257, 588, 9452, 2017, 11, 550, 291, 2642, 732, 29896, 337, 472, 1851, 13, 51035, 51035, 583, 498, 291, 528, 309, 281, 312, 257, 688, 28640, 11, 550, 291, 393, 1723, 309, 493, 666, 544, 29896, 293, 51324, 51324, 362, 264, 4577, 1319, 4748, 544, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.18692511481207771, "compression_ratio": 1.6646341463414633, "no_caption_prob": 0.00023033640172798187}, {"id": 576, "seek": 238800, "start": 2407.2, "end": 2411.52, "text": " have the colors change slightly more.", "tokens": [50364, 407, 498, 291, 362, 11, 370, 718, 311, 584, 428, 13728, 307, 534, 5508, 11, 370, 718, 311, 584, 428, 13728, 575, 50776, 50776, 257, 588, 9452, 2017, 11, 550, 291, 2642, 732, 29896, 337, 472, 1851, 13, 51035, 51035, 583, 498, 291, 528, 309, 281, 312, 257, 688, 28640, 11, 550, 291, 393, 1723, 309, 493, 666, 544, 29896, 293, 51324, 51324, 362, 264, 4577, 1319, 4748, 544, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.18692511481207771, "compression_ratio": 1.6646341463414633, "no_caption_prob": 0.00023033640172798187}, {"id": 577, "seek": 241152, "start": 2411.52, "end": 2419.7599999999998, "text": " Yeah, if you want to achieve some weird coloring that is not a simple linear interpolation,", "tokens": [50364, 865, 11, 498, 291, 528, 281, 4584, 512, 3657, 23198, 300, 307, 406, 257, 2199, 8213, 44902, 399, 11, 50776, 50776, 550, 291, 393, 362, 11, 286, 2041, 11, 544, 19904, 281, 7605, 428, 1065, 16235, 13, 51162, 51162, 1726, 988, 577, 300, 576, 589, 13, 51238, 51238, 2704, 291, 1116, 2831, 362, 257, 8091, 293, 550, 291, 4471, 309, 281, 439, 264, 1451, 32053, 295, 1184, 51558, 51558, 1252, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16228370666503905, "compression_ratio": 1.486910994764398, "no_caption_prob": 0.0006661590305157006}, {"id": 578, "seek": 241152, "start": 2419.7599999999998, "end": 2427.48, "text": " then you can have, I guess, more segments to curve your own gradient.", "tokens": [50364, 865, 11, 498, 291, 528, 281, 4584, 512, 3657, 23198, 300, 307, 406, 257, 2199, 8213, 44902, 399, 11, 50776, 50776, 550, 291, 393, 362, 11, 286, 2041, 11, 544, 19904, 281, 7605, 428, 1065, 16235, 13, 51162, 51162, 1726, 988, 577, 300, 576, 589, 13, 51238, 51238, 2704, 291, 1116, 2831, 362, 257, 8091, 293, 550, 291, 4471, 309, 281, 439, 264, 1451, 32053, 295, 1184, 51558, 51558, 1252, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16228370666503905, "compression_ratio": 1.486910994764398, "no_caption_prob": 0.0006661590305157006}, {"id": 579, "seek": 241152, "start": 2427.48, "end": 2429.0, "text": " Not sure how that would work.", "tokens": [50364, 865, 11, 498, 291, 528, 281, 4584, 512, 3657, 23198, 300, 307, 406, 257, 2199, 8213, 44902, 399, 11, 50776, 50776, 550, 291, 393, 362, 11, 286, 2041, 11, 544, 19904, 281, 7605, 428, 1065, 16235, 13, 51162, 51162, 1726, 988, 577, 300, 576, 589, 13, 51238, 51238, 2704, 291, 1116, 2831, 362, 257, 8091, 293, 550, 291, 4471, 309, 281, 439, 264, 1451, 32053, 295, 1184, 51558, 51558, 1252, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16228370666503905, "compression_ratio": 1.486910994764398, "no_caption_prob": 0.0006661590305157006}, {"id": 580, "seek": 241152, "start": 2429.0, "end": 2435.4, "text": " Maybe you'd rather have a texture and then you map it to all the four vertices of each", "tokens": [50364, 865, 11, 498, 291, 528, 281, 4584, 512, 3657, 23198, 300, 307, 406, 257, 2199, 8213, 44902, 399, 11, 50776, 50776, 550, 291, 393, 362, 11, 286, 2041, 11, 544, 19904, 281, 7605, 428, 1065, 16235, 13, 51162, 51162, 1726, 988, 577, 300, 576, 589, 13, 51238, 51238, 2704, 291, 1116, 2831, 362, 257, 8091, 293, 550, 291, 4471, 309, 281, 439, 264, 1451, 32053, 295, 1184, 51558, 51558, 1252, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16228370666503905, "compression_ratio": 1.486910994764398, "no_caption_prob": 0.0006661590305157006}, {"id": 581, "seek": 241152, "start": 2435.4, "end": 2436.4, "text": " side.", "tokens": [50364, 865, 11, 498, 291, 528, 281, 4584, 512, 3657, 23198, 300, 307, 406, 257, 2199, 8213, 44902, 399, 11, 50776, 50776, 550, 291, 393, 362, 11, 286, 2041, 11, 544, 19904, 281, 7605, 428, 1065, 16235, 13, 51162, 51162, 1726, 988, 577, 300, 576, 589, 13, 51238, 51238, 2704, 291, 1116, 2831, 362, 257, 8091, 293, 550, 291, 4471, 309, 281, 439, 264, 1451, 32053, 295, 1184, 51558, 51558, 1252, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.16228370666503905, "compression_ratio": 1.486910994764398, "no_caption_prob": 0.0006661590305157006}, {"id": 582, "seek": 243640, "start": 2436.4, "end": 2443.7200000000003, "text": " Yeah, or if it's not a cube, but it's more bumpy, then you need to make a lot of triangles", "tokens": [50364, 865, 11, 420, 498, 309, 311, 406, 257, 13728, 11, 457, 309, 311, 544, 49400, 11, 550, 291, 643, 281, 652, 257, 688, 295, 29896, 50730, 50730, 337, 1184, 9961, 13, 50818, 50818, 400, 550, 264, 9577, 393, 362, 819, 5065, 322, 1184, 13369, 4994, 490, 1071, 13, 51114, 51114, 13813, 498, 291, 362, 787, 732, 29896, 337, 364, 2302, 1851, 11, 550, 437, 291, 393, 360, 365, 51366, 51366, 309, 3643, 588, 2199, 13, 51526, 51526, 11395, 2199, 11, 1310, 30, 51578, 51578, 1171, 5508, 16130, 11, 309, 311, 411, 291, 2759, 380, 992, 264, 2026, 1124, 264, 912, 636, 382, 291, 576, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1909152490121347, "compression_ratio": 1.6385542168674698, "no_caption_prob": 0.0001006914462777786}, {"id": 583, "seek": 243640, "start": 2443.7200000000003, "end": 2445.48, "text": " for each bump.", "tokens": [50364, 865, 11, 420, 498, 309, 311, 406, 257, 13728, 11, 457, 309, 311, 544, 49400, 11, 550, 291, 643, 281, 652, 257, 688, 295, 29896, 50730, 50730, 337, 1184, 9961, 13, 50818, 50818, 400, 550, 264, 9577, 393, 362, 819, 5065, 322, 1184, 13369, 4994, 490, 1071, 13, 51114, 51114, 13813, 498, 291, 362, 787, 732, 29896, 337, 364, 2302, 1851, 11, 550, 437, 291, 393, 360, 365, 51366, 51366, 309, 3643, 588, 2199, 13, 51526, 51526, 11395, 2199, 11, 1310, 30, 51578, 51578, 1171, 5508, 16130, 11, 309, 311, 411, 291, 2759, 380, 992, 264, 2026, 1124, 264, 912, 636, 382, 291, 576, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1909152490121347, "compression_ratio": 1.6385542168674698, "no_caption_prob": 0.0001006914462777786}, {"id": 584, "seek": 243640, "start": 2445.48, "end": 2451.4, "text": " And then the lighting can have different effects on each triangle separate from another.", "tokens": [50364, 865, 11, 420, 498, 309, 311, 406, 257, 13728, 11, 457, 309, 311, 544, 49400, 11, 550, 291, 643, 281, 652, 257, 688, 295, 29896, 50730, 50730, 337, 1184, 9961, 13, 50818, 50818, 400, 550, 264, 9577, 393, 362, 819, 5065, 322, 1184, 13369, 4994, 490, 1071, 13, 51114, 51114, 13813, 498, 291, 362, 787, 732, 29896, 337, 364, 2302, 1851, 11, 550, 437, 291, 393, 360, 365, 51366, 51366, 309, 3643, 588, 2199, 13, 51526, 51526, 11395, 2199, 11, 1310, 30, 51578, 51578, 1171, 5508, 16130, 11, 309, 311, 411, 291, 2759, 380, 992, 264, 2026, 1124, 264, 912, 636, 382, 291, 576, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1909152490121347, "compression_ratio": 1.6385542168674698, "no_caption_prob": 0.0001006914462777786}, {"id": 585, "seek": 243640, "start": 2451.4, "end": 2456.44, "text": " Whereas if you have only two triangles for an entire face, then what you can do with", "tokens": [50364, 865, 11, 420, 498, 309, 311, 406, 257, 13728, 11, 457, 309, 311, 544, 49400, 11, 550, 291, 643, 281, 652, 257, 688, 295, 29896, 50730, 50730, 337, 1184, 9961, 13, 50818, 50818, 400, 550, 264, 9577, 393, 362, 819, 5065, 322, 1184, 13369, 4994, 490, 1071, 13, 51114, 51114, 13813, 498, 291, 362, 787, 732, 29896, 337, 364, 2302, 1851, 11, 550, 437, 291, 393, 360, 365, 51366, 51366, 309, 3643, 588, 2199, 13, 51526, 51526, 11395, 2199, 11, 1310, 30, 51578, 51578, 1171, 5508, 16130, 11, 309, 311, 411, 291, 2759, 380, 992, 264, 2026, 1124, 264, 912, 636, 382, 291, 576, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1909152490121347, "compression_ratio": 1.6385542168674698, "no_caption_prob": 0.0001006914462777786}, {"id": 586, "seek": 243640, "start": 2456.44, "end": 2459.64, "text": " it becomes very simple.", "tokens": [50364, 865, 11, 420, 498, 309, 311, 406, 257, 13728, 11, 457, 309, 311, 544, 49400, 11, 550, 291, 643, 281, 652, 257, 688, 295, 29896, 50730, 50730, 337, 1184, 9961, 13, 50818, 50818, 400, 550, 264, 9577, 393, 362, 819, 5065, 322, 1184, 13369, 4994, 490, 1071, 13, 51114, 51114, 13813, 498, 291, 362, 787, 732, 29896, 337, 364, 2302, 1851, 11, 550, 437, 291, 393, 360, 365, 51366, 51366, 309, 3643, 588, 2199, 13, 51526, 51526, 11395, 2199, 11, 1310, 30, 51578, 51578, 1171, 5508, 16130, 11, 309, 311, 411, 291, 2759, 380, 992, 264, 2026, 1124, 264, 912, 636, 382, 291, 576, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1909152490121347, "compression_ratio": 1.6385542168674698, "no_caption_prob": 0.0001006914462777786}, {"id": 587, "seek": 243640, "start": 2459.64, "end": 2460.6800000000003, "text": " Too simple, maybe?", "tokens": [50364, 865, 11, 420, 498, 309, 311, 406, 257, 13728, 11, 457, 309, 311, 544, 49400, 11, 550, 291, 643, 281, 652, 257, 688, 295, 29896, 50730, 50730, 337, 1184, 9961, 13, 50818, 50818, 400, 550, 264, 9577, 393, 362, 819, 5065, 322, 1184, 13369, 4994, 490, 1071, 13, 51114, 51114, 13813, 498, 291, 362, 787, 732, 29896, 337, 364, 2302, 1851, 11, 550, 437, 291, 393, 360, 365, 51366, 51366, 309, 3643, 588, 2199, 13, 51526, 51526, 11395, 2199, 11, 1310, 30, 51578, 51578, 1171, 5508, 16130, 11, 309, 311, 411, 291, 2759, 380, 992, 264, 2026, 1124, 264, 912, 636, 382, 291, 576, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1909152490121347, "compression_ratio": 1.6385542168674698, "no_caption_prob": 0.0001006914462777786}, {"id": 588, "seek": 243640, "start": 2460.6800000000003, "end": 2466.0, "text": " For smooth surfaces, it's like you wouldn't set the normals the same way as you would", "tokens": [50364, 865, 11, 420, 498, 309, 311, 406, 257, 13728, 11, 457, 309, 311, 544, 49400, 11, 550, 291, 643, 281, 652, 257, 688, 295, 29896, 50730, 50730, 337, 1184, 9961, 13, 50818, 50818, 400, 550, 264, 9577, 393, 362, 819, 5065, 322, 1184, 13369, 4994, 490, 1071, 13, 51114, 51114, 13813, 498, 291, 362, 787, 732, 29896, 337, 364, 2302, 1851, 11, 550, 437, 291, 393, 360, 365, 51366, 51366, 309, 3643, 588, 2199, 13, 51526, 51526, 11395, 2199, 11, 1310, 30, 51578, 51578, 1171, 5508, 16130, 11, 309, 311, 411, 291, 2759, 380, 992, 264, 2026, 1124, 264, 912, 636, 382, 291, 576, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.1909152490121347, "compression_ratio": 1.6385542168674698, "no_caption_prob": 0.0001006914462777786}, {"id": 589, "seek": 246600, "start": 2466.0, "end": 2467.96, "text": " do for the cube.", "tokens": [50364, 360, 337, 264, 13728, 13, 50462, 50462, 1171, 264, 5508, 3753, 11, 264, 2710, 576, 312, 12166, 490, 485, 50674, 50674, 467, 311, 1333, 295, 411, 382, 364, 4274, 295, 439, 264, 2026, 1124, 295, 439, 264, 29896, 300, 722, 365, 51048, 51048, 341, 935, 13, 51098, 51098, 961, 385, 519, 295, 577, 281, 584, 309, 1101, 13, 51368, 51368, 759, 291, 362, 257, 935, 322, 1270, 257, 9961, 11, 291, 1062, 362, 3866, 29896, 926, 341, 935, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.20311834754013433, "compression_ratio": 1.6378378378378378, "no_caption_prob": 6.706841668346897e-05}, {"id": 590, "seek": 246600, "start": 2467.96, "end": 2472.2, "text": " For the smooth surface, the normal would be pointing from...", "tokens": [50364, 360, 337, 264, 13728, 13, 50462, 50462, 1171, 264, 5508, 3753, 11, 264, 2710, 576, 312, 12166, 490, 485, 50674, 50674, 467, 311, 1333, 295, 411, 382, 364, 4274, 295, 439, 264, 2026, 1124, 295, 439, 264, 29896, 300, 722, 365, 51048, 51048, 341, 935, 13, 51098, 51098, 961, 385, 519, 295, 577, 281, 584, 309, 1101, 13, 51368, 51368, 759, 291, 362, 257, 935, 322, 1270, 257, 9961, 11, 291, 1062, 362, 3866, 29896, 926, 341, 935, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.20311834754013433, "compression_ratio": 1.6378378378378378, "no_caption_prob": 6.706841668346897e-05}, {"id": 591, "seek": 246600, "start": 2472.2, "end": 2479.68, "text": " It's sort of like as an average of all the normals of all the triangles that start with", "tokens": [50364, 360, 337, 264, 13728, 13, 50462, 50462, 1171, 264, 5508, 3753, 11, 264, 2710, 576, 312, 12166, 490, 485, 50674, 50674, 467, 311, 1333, 295, 411, 382, 364, 4274, 295, 439, 264, 2026, 1124, 295, 439, 264, 29896, 300, 722, 365, 51048, 51048, 341, 935, 13, 51098, 51098, 961, 385, 519, 295, 577, 281, 584, 309, 1101, 13, 51368, 51368, 759, 291, 362, 257, 935, 322, 1270, 257, 9961, 11, 291, 1062, 362, 3866, 29896, 926, 341, 935, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.20311834754013433, "compression_ratio": 1.6378378378378378, "no_caption_prob": 6.706841668346897e-05}, {"id": 592, "seek": 246600, "start": 2479.68, "end": 2480.68, "text": " this point.", "tokens": [50364, 360, 337, 264, 13728, 13, 50462, 50462, 1171, 264, 5508, 3753, 11, 264, 2710, 576, 312, 12166, 490, 485, 50674, 50674, 467, 311, 1333, 295, 411, 382, 364, 4274, 295, 439, 264, 2026, 1124, 295, 439, 264, 29896, 300, 722, 365, 51048, 51048, 341, 935, 13, 51098, 51098, 961, 385, 519, 295, 577, 281, 584, 309, 1101, 13, 51368, 51368, 759, 291, 362, 257, 935, 322, 1270, 257, 9961, 11, 291, 1062, 362, 3866, 29896, 926, 341, 935, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.20311834754013433, "compression_ratio": 1.6378378378378378, "no_caption_prob": 6.706841668346897e-05}, {"id": 593, "seek": 246600, "start": 2480.68, "end": 2486.08, "text": " Let me think of how to say it better.", "tokens": [50364, 360, 337, 264, 13728, 13, 50462, 50462, 1171, 264, 5508, 3753, 11, 264, 2710, 576, 312, 12166, 490, 485, 50674, 50674, 467, 311, 1333, 295, 411, 382, 364, 4274, 295, 439, 264, 2026, 1124, 295, 439, 264, 29896, 300, 722, 365, 51048, 51048, 341, 935, 13, 51098, 51098, 961, 385, 519, 295, 577, 281, 584, 309, 1101, 13, 51368, 51368, 759, 291, 362, 257, 935, 322, 1270, 257, 9961, 11, 291, 1062, 362, 3866, 29896, 926, 341, 935, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.20311834754013433, "compression_ratio": 1.6378378378378378, "no_caption_prob": 6.706841668346897e-05}, {"id": 594, "seek": 246600, "start": 2486.08, "end": 2493.08, "text": " If you have a point on such a bump, you might have multiple triangles around this point", "tokens": [50364, 360, 337, 264, 13728, 13, 50462, 50462, 1171, 264, 5508, 3753, 11, 264, 2710, 576, 312, 12166, 490, 485, 50674, 50674, 467, 311, 1333, 295, 411, 382, 364, 4274, 295, 439, 264, 2026, 1124, 295, 439, 264, 29896, 300, 722, 365, 51048, 51048, 341, 935, 13, 51098, 51098, 961, 385, 519, 295, 577, 281, 584, 309, 1101, 13, 51368, 51368, 759, 291, 362, 257, 935, 322, 1270, 257, 9961, 11, 291, 1062, 362, 3866, 29896, 926, 341, 935, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.20311834754013433, "compression_ratio": 1.6378378378378378, "no_caption_prob": 6.706841668346897e-05}, {"id": 595, "seek": 249308, "start": 2493.08, "end": 2499.44, "text": " and they will all have their normals as the strict normals pointing from this triangle.", "tokens": [50364, 293, 436, 486, 439, 362, 641, 2026, 1124, 382, 264, 10910, 2026, 1124, 12166, 490, 341, 13369, 13, 50682, 50682, 583, 437, 291, 528, 281, 5085, 281, 300, 28162, 307, 406, 2139, 295, 552, 11, 457, 746, 294, 1296, 50988, 50988, 281, 362, 257, 5508, 2710, 13, 51112, 51112, 400, 550, 729, 2026, 1124, 393, 312, 4678, 382, 22984, 82, 293, 550, 264, 2026, 1124, 2969, 366, 516, 51438, 51438, 281, 312, 44902, 770, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.13136233559137658, "compression_ratio": 1.6702127659574468, "no_caption_prob": 3.644276148406789e-05}, {"id": 596, "seek": 249308, "start": 2499.44, "end": 2505.56, "text": " But what you want to attach to that vertex is not either of them, but something in between", "tokens": [50364, 293, 436, 486, 439, 362, 641, 2026, 1124, 382, 264, 10910, 2026, 1124, 12166, 490, 341, 13369, 13, 50682, 50682, 583, 437, 291, 528, 281, 5085, 281, 300, 28162, 307, 406, 2139, 295, 552, 11, 457, 746, 294, 1296, 50988, 50988, 281, 362, 257, 5508, 2710, 13, 51112, 51112, 400, 550, 729, 2026, 1124, 393, 312, 4678, 382, 22984, 82, 293, 550, 264, 2026, 1124, 2969, 366, 516, 51438, 51438, 281, 312, 44902, 770, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.13136233559137658, "compression_ratio": 1.6702127659574468, "no_caption_prob": 3.644276148406789e-05}, {"id": 597, "seek": 249308, "start": 2505.56, "end": 2508.04, "text": " to have a smooth normal.", "tokens": [50364, 293, 436, 486, 439, 362, 641, 2026, 1124, 382, 264, 10910, 2026, 1124, 12166, 490, 341, 13369, 13, 50682, 50682, 583, 437, 291, 528, 281, 5085, 281, 300, 28162, 307, 406, 2139, 295, 552, 11, 457, 746, 294, 1296, 50988, 50988, 281, 362, 257, 5508, 2710, 13, 51112, 51112, 400, 550, 729, 2026, 1124, 393, 312, 4678, 382, 22984, 82, 293, 550, 264, 2026, 1124, 2969, 366, 516, 51438, 51438, 281, 312, 44902, 770, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.13136233559137658, "compression_ratio": 1.6702127659574468, "no_caption_prob": 3.644276148406789e-05}, {"id": 598, "seek": 249308, "start": 2508.04, "end": 2514.56, "text": " And then those normals can be passed as varyings and then the normals themselves are going", "tokens": [50364, 293, 436, 486, 439, 362, 641, 2026, 1124, 382, 264, 10910, 2026, 1124, 12166, 490, 341, 13369, 13, 50682, 50682, 583, 437, 291, 528, 281, 5085, 281, 300, 28162, 307, 406, 2139, 295, 552, 11, 457, 746, 294, 1296, 50988, 50988, 281, 362, 257, 5508, 2710, 13, 51112, 51112, 400, 550, 729, 2026, 1124, 393, 312, 4678, 382, 22984, 82, 293, 550, 264, 2026, 1124, 2969, 366, 516, 51438, 51438, 281, 312, 44902, 770, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.13136233559137658, "compression_ratio": 1.6702127659574468, "no_caption_prob": 3.644276148406789e-05}, {"id": 599, "seek": 249308, "start": 2514.56, "end": 2516.52, "text": " to be interpolated.", "tokens": [50364, 293, 436, 486, 439, 362, 641, 2026, 1124, 382, 264, 10910, 2026, 1124, 12166, 490, 341, 13369, 13, 50682, 50682, 583, 437, 291, 528, 281, 5085, 281, 300, 28162, 307, 406, 2139, 295, 552, 11, 457, 746, 294, 1296, 50988, 50988, 281, 362, 257, 5508, 2710, 13, 51112, 51112, 400, 550, 729, 2026, 1124, 393, 312, 4678, 382, 22984, 82, 293, 550, 264, 2026, 1124, 2969, 366, 516, 51438, 51438, 281, 312, 44902, 770, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.13136233559137658, "compression_ratio": 1.6702127659574468, "no_caption_prob": 3.644276148406789e-05}, {"id": 600, "seek": 251652, "start": 2516.52, "end": 2524.04, "text": " So what you will be getting in the fragment shader is a normal that is smooth.", "tokens": [50364, 407, 437, 291, 486, 312, 1242, 294, 264, 26424, 5744, 260, 307, 257, 2710, 300, 307, 5508, 13, 50740, 50740, 1436, 498, 291, 764, 2026, 1124, 337, 257, 13728, 11, 4962, 30556, 11, 550, 291, 486, 536, 264, 22407, 11, 51302, 51302, 264, 5598, 486, 312, 1237, 588, 2295, 6754, 13, 51490, 51490, 1057, 264, 8819, 486, 312, 588, 8974, 570, 264, 2026, 1124, 366, 516, 281, 312, 11233, 490, 472, 51706, 51706, 13369, 281, 1071, 13, 51756, 51756, 467, 311, 406, 516, 281, 312, 5508, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1398905764569293, "compression_ratio": 1.6862745098039216, "no_caption_prob": 7.46989026083611e-05}, {"id": 601, "seek": 251652, "start": 2524.04, "end": 2535.28, "text": " Because if you use normals for a cube, flat shading, then you will see the rendering,", "tokens": [50364, 407, 437, 291, 486, 312, 1242, 294, 264, 26424, 5744, 260, 307, 257, 2710, 300, 307, 5508, 13, 50740, 50740, 1436, 498, 291, 764, 2026, 1124, 337, 257, 13728, 11, 4962, 30556, 11, 550, 291, 486, 536, 264, 22407, 11, 51302, 51302, 264, 5598, 486, 312, 1237, 588, 2295, 6754, 13, 51490, 51490, 1057, 264, 8819, 486, 312, 588, 8974, 570, 264, 2026, 1124, 366, 516, 281, 312, 11233, 490, 472, 51706, 51706, 13369, 281, 1071, 13, 51756, 51756, 467, 311, 406, 516, 281, 312, 5508, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1398905764569293, "compression_ratio": 1.6862745098039216, "no_caption_prob": 7.46989026083611e-05}, {"id": 602, "seek": 251652, "start": 2535.28, "end": 2539.04, "text": " the output will be looking very low poly.", "tokens": [50364, 407, 437, 291, 486, 312, 1242, 294, 264, 26424, 5744, 260, 307, 257, 2710, 300, 307, 5508, 13, 50740, 50740, 1436, 498, 291, 764, 2026, 1124, 337, 257, 13728, 11, 4962, 30556, 11, 550, 291, 486, 536, 264, 22407, 11, 51302, 51302, 264, 5598, 486, 312, 1237, 588, 2295, 6754, 13, 51490, 51490, 1057, 264, 8819, 486, 312, 588, 8974, 570, 264, 2026, 1124, 366, 516, 281, 312, 11233, 490, 472, 51706, 51706, 13369, 281, 1071, 13, 51756, 51756, 467, 311, 406, 516, 281, 312, 5508, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1398905764569293, "compression_ratio": 1.6862745098039216, "no_caption_prob": 7.46989026083611e-05}, {"id": 603, "seek": 251652, "start": 2539.04, "end": 2543.36, "text": " All the edges will be very visible because the normals are going to be jumping from one", "tokens": [50364, 407, 437, 291, 486, 312, 1242, 294, 264, 26424, 5744, 260, 307, 257, 2710, 300, 307, 5508, 13, 50740, 50740, 1436, 498, 291, 764, 2026, 1124, 337, 257, 13728, 11, 4962, 30556, 11, 550, 291, 486, 536, 264, 22407, 11, 51302, 51302, 264, 5598, 486, 312, 1237, 588, 2295, 6754, 13, 51490, 51490, 1057, 264, 8819, 486, 312, 588, 8974, 570, 264, 2026, 1124, 366, 516, 281, 312, 11233, 490, 472, 51706, 51706, 13369, 281, 1071, 13, 51756, 51756, 467, 311, 406, 516, 281, 312, 5508, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1398905764569293, "compression_ratio": 1.6862745098039216, "no_caption_prob": 7.46989026083611e-05}, {"id": 604, "seek": 251652, "start": 2543.36, "end": 2544.36, "text": " triangle to another.", "tokens": [50364, 407, 437, 291, 486, 312, 1242, 294, 264, 26424, 5744, 260, 307, 257, 2710, 300, 307, 5508, 13, 50740, 50740, 1436, 498, 291, 764, 2026, 1124, 337, 257, 13728, 11, 4962, 30556, 11, 550, 291, 486, 536, 264, 22407, 11, 51302, 51302, 264, 5598, 486, 312, 1237, 588, 2295, 6754, 13, 51490, 51490, 1057, 264, 8819, 486, 312, 588, 8974, 570, 264, 2026, 1124, 366, 516, 281, 312, 11233, 490, 472, 51706, 51706, 13369, 281, 1071, 13, 51756, 51756, 467, 311, 406, 516, 281, 312, 5508, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1398905764569293, "compression_ratio": 1.6862745098039216, "no_caption_prob": 7.46989026083611e-05}, {"id": 605, "seek": 251652, "start": 2544.36, "end": 2546.08, "text": " It's not going to be smooth.", "tokens": [50364, 407, 437, 291, 486, 312, 1242, 294, 264, 26424, 5744, 260, 307, 257, 2710, 300, 307, 5508, 13, 50740, 50740, 1436, 498, 291, 764, 2026, 1124, 337, 257, 13728, 11, 4962, 30556, 11, 550, 291, 486, 536, 264, 22407, 11, 51302, 51302, 264, 5598, 486, 312, 1237, 588, 2295, 6754, 13, 51490, 51490, 1057, 264, 8819, 486, 312, 588, 8974, 570, 264, 2026, 1124, 366, 516, 281, 312, 11233, 490, 472, 51706, 51706, 13369, 281, 1071, 13, 51756, 51756, 467, 311, 406, 516, 281, 312, 5508, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1398905764569293, "compression_ratio": 1.6862745098039216, "no_caption_prob": 7.46989026083611e-05}, {"id": 606, "seek": 254608, "start": 2546.08, "end": 2549.88, "text": " So the lighting is not going to be smooth because of that.", "tokens": [50364, 407, 264, 9577, 307, 406, 516, 281, 312, 5508, 570, 295, 300, 13, 50554, 50554, 583, 309, 534, 5946, 322, 437, 291, 366, 1382, 281, 4584, 11, 437, 733, 295, 574, 13, 50746, 50746, 865, 11, 406, 257, 13728, 412, 341, 935, 13, 50954, 50954, 407, 718, 311, 584, 286, 528, 281, 2642, 264, 2026, 1124, 420, 281, 362, 264, 2026, 1124, 312, 2279, 294, 264, 22984, 82, 51246, 51246, 490, 264, 28162, 5744, 260, 281, 264, 26424, 5744, 260, 13, 51416, 51416, 1012, 360, 286, 352, 466, 5006, 16225, 47012, 14333, 322, 577, 281, 360, 300, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17542242536357805, "compression_ratio": 1.5689655172413792, "no_caption_prob": 4.5369004510575905e-05}, {"id": 607, "seek": 254608, "start": 2549.88, "end": 2553.72, "text": " But it really depends on what you are trying to achieve, what kind of look.", "tokens": [50364, 407, 264, 9577, 307, 406, 516, 281, 312, 5508, 570, 295, 300, 13, 50554, 50554, 583, 309, 534, 5946, 322, 437, 291, 366, 1382, 281, 4584, 11, 437, 733, 295, 574, 13, 50746, 50746, 865, 11, 406, 257, 13728, 412, 341, 935, 13, 50954, 50954, 407, 718, 311, 584, 286, 528, 281, 2642, 264, 2026, 1124, 420, 281, 362, 264, 2026, 1124, 312, 2279, 294, 264, 22984, 82, 51246, 51246, 490, 264, 28162, 5744, 260, 281, 264, 26424, 5744, 260, 13, 51416, 51416, 1012, 360, 286, 352, 466, 5006, 16225, 47012, 14333, 322, 577, 281, 360, 300, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17542242536357805, "compression_ratio": 1.5689655172413792, "no_caption_prob": 4.5369004510575905e-05}, {"id": 608, "seek": 254608, "start": 2553.72, "end": 2557.88, "text": " Yeah, not a cube at this point.", "tokens": [50364, 407, 264, 9577, 307, 406, 516, 281, 312, 5508, 570, 295, 300, 13, 50554, 50554, 583, 309, 534, 5946, 322, 437, 291, 366, 1382, 281, 4584, 11, 437, 733, 295, 574, 13, 50746, 50746, 865, 11, 406, 257, 13728, 412, 341, 935, 13, 50954, 50954, 407, 718, 311, 584, 286, 528, 281, 2642, 264, 2026, 1124, 420, 281, 362, 264, 2026, 1124, 312, 2279, 294, 264, 22984, 82, 51246, 51246, 490, 264, 28162, 5744, 260, 281, 264, 26424, 5744, 260, 13, 51416, 51416, 1012, 360, 286, 352, 466, 5006, 16225, 47012, 14333, 322, 577, 281, 360, 300, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17542242536357805, "compression_ratio": 1.5689655172413792, "no_caption_prob": 4.5369004510575905e-05}, {"id": 609, "seek": 254608, "start": 2557.88, "end": 2563.72, "text": " So let's say I want to draw the normals or to have the normals be sent in the varyings", "tokens": [50364, 407, 264, 9577, 307, 406, 516, 281, 312, 5508, 570, 295, 300, 13, 50554, 50554, 583, 309, 534, 5946, 322, 437, 291, 366, 1382, 281, 4584, 11, 437, 733, 295, 574, 13, 50746, 50746, 865, 11, 406, 257, 13728, 412, 341, 935, 13, 50954, 50954, 407, 718, 311, 584, 286, 528, 281, 2642, 264, 2026, 1124, 420, 281, 362, 264, 2026, 1124, 312, 2279, 294, 264, 22984, 82, 51246, 51246, 490, 264, 28162, 5744, 260, 281, 264, 26424, 5744, 260, 13, 51416, 51416, 1012, 360, 286, 352, 466, 5006, 16225, 47012, 14333, 322, 577, 281, 360, 300, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17542242536357805, "compression_ratio": 1.5689655172413792, "no_caption_prob": 4.5369004510575905e-05}, {"id": 610, "seek": 254608, "start": 2563.72, "end": 2567.12, "text": " from the vertex shader to the fragment shader.", "tokens": [50364, 407, 264, 9577, 307, 406, 516, 281, 312, 5508, 570, 295, 300, 13, 50554, 50554, 583, 309, 534, 5946, 322, 437, 291, 366, 1382, 281, 4584, 11, 437, 733, 295, 574, 13, 50746, 50746, 865, 11, 406, 257, 13728, 412, 341, 935, 13, 50954, 50954, 407, 718, 311, 584, 286, 528, 281, 2642, 264, 2026, 1124, 420, 281, 362, 264, 2026, 1124, 312, 2279, 294, 264, 22984, 82, 51246, 51246, 490, 264, 28162, 5744, 260, 281, 264, 26424, 5744, 260, 13, 51416, 51416, 1012, 360, 286, 352, 466, 5006, 16225, 47012, 14333, 322, 577, 281, 360, 300, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17542242536357805, "compression_ratio": 1.5689655172413792, "no_caption_prob": 4.5369004510575905e-05}, {"id": 611, "seek": 254608, "start": 2567.12, "end": 2572.64, "text": " How do I go about finding GLSL documentation on how to do that?", "tokens": [50364, 407, 264, 9577, 307, 406, 516, 281, 312, 5508, 570, 295, 300, 13, 50554, 50554, 583, 309, 534, 5946, 322, 437, 291, 366, 1382, 281, 4584, 11, 437, 733, 295, 574, 13, 50746, 50746, 865, 11, 406, 257, 13728, 412, 341, 935, 13, 50954, 50954, 407, 718, 311, 584, 286, 528, 281, 2642, 264, 2026, 1124, 420, 281, 362, 264, 2026, 1124, 312, 2279, 294, 264, 22984, 82, 51246, 51246, 490, 264, 28162, 5744, 260, 281, 264, 26424, 5744, 260, 13, 51416, 51416, 1012, 360, 286, 352, 466, 5006, 16225, 47012, 14333, 322, 577, 281, 360, 300, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17542242536357805, "compression_ratio": 1.5689655172413792, "no_caption_prob": 4.5369004510575905e-05}, {"id": 612, "seek": 257264, "start": 2572.64, "end": 2576.52, "text": " Because I need to write the shader, right?", "tokens": [50364, 1436, 286, 643, 281, 2464, 264, 5744, 260, 11, 558, 30, 50558, 50558, 663, 307, 406, 2699, 76, 3089, 13, 50610, 50610, 407, 689, 360, 286, 915, 14333, 30, 50716, 50716, 1012, 360, 286, 483, 1409, 281, 360, 300, 30, 50840, 50840, 286, 3264, 466, 341, 538, 1237, 412, 512, 5110, 13, 51064, 51064, 407, 456, 366, 2674, 5110, 295, 577, 281, 764, 9573, 19440, 293, 439, 264, 16225, 47012, 3089, 307, 264, 912, 456, 13, 51500, 51500, 509, 393, 574, 309, 493, 456, 420, 291, 393, 754, 915, 512, 5110, 294, 2699, 76, 300, 366, 1238, 2199, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14490742359346556, "compression_ratio": 1.5991189427312775, "no_caption_prob": 5.9203892305959016e-05}, {"id": 613, "seek": 257264, "start": 2576.52, "end": 2577.56, "text": " That is not Elm code.", "tokens": [50364, 1436, 286, 643, 281, 2464, 264, 5744, 260, 11, 558, 30, 50558, 50558, 663, 307, 406, 2699, 76, 3089, 13, 50610, 50610, 407, 689, 360, 286, 915, 14333, 30, 50716, 50716, 1012, 360, 286, 483, 1409, 281, 360, 300, 30, 50840, 50840, 286, 3264, 466, 341, 538, 1237, 412, 512, 5110, 13, 51064, 51064, 407, 456, 366, 2674, 5110, 295, 577, 281, 764, 9573, 19440, 293, 439, 264, 16225, 47012, 3089, 307, 264, 912, 456, 13, 51500, 51500, 509, 393, 574, 309, 493, 456, 420, 291, 393, 754, 915, 512, 5110, 294, 2699, 76, 300, 366, 1238, 2199, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14490742359346556, "compression_ratio": 1.5991189427312775, "no_caption_prob": 5.9203892305959016e-05}, {"id": 614, "seek": 257264, "start": 2577.56, "end": 2579.68, "text": " So where do I find documentation?", "tokens": [50364, 1436, 286, 643, 281, 2464, 264, 5744, 260, 11, 558, 30, 50558, 50558, 663, 307, 406, 2699, 76, 3089, 13, 50610, 50610, 407, 689, 360, 286, 915, 14333, 30, 50716, 50716, 1012, 360, 286, 483, 1409, 281, 360, 300, 30, 50840, 50840, 286, 3264, 466, 341, 538, 1237, 412, 512, 5110, 13, 51064, 51064, 407, 456, 366, 2674, 5110, 295, 577, 281, 764, 9573, 19440, 293, 439, 264, 16225, 47012, 3089, 307, 264, 912, 456, 13, 51500, 51500, 509, 393, 574, 309, 493, 456, 420, 291, 393, 754, 915, 512, 5110, 294, 2699, 76, 300, 366, 1238, 2199, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14490742359346556, "compression_ratio": 1.5991189427312775, "no_caption_prob": 5.9203892305959016e-05}, {"id": 615, "seek": 257264, "start": 2579.68, "end": 2582.16, "text": " How do I get started to do that?", "tokens": [50364, 1436, 286, 643, 281, 2464, 264, 5744, 260, 11, 558, 30, 50558, 50558, 663, 307, 406, 2699, 76, 3089, 13, 50610, 50610, 407, 689, 360, 286, 915, 14333, 30, 50716, 50716, 1012, 360, 286, 483, 1409, 281, 360, 300, 30, 50840, 50840, 286, 3264, 466, 341, 538, 1237, 412, 512, 5110, 13, 51064, 51064, 407, 456, 366, 2674, 5110, 295, 577, 281, 764, 9573, 19440, 293, 439, 264, 16225, 47012, 3089, 307, 264, 912, 456, 13, 51500, 51500, 509, 393, 574, 309, 493, 456, 420, 291, 393, 754, 915, 512, 5110, 294, 2699, 76, 300, 366, 1238, 2199, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14490742359346556, "compression_ratio": 1.5991189427312775, "no_caption_prob": 5.9203892305959016e-05}, {"id": 616, "seek": 257264, "start": 2582.16, "end": 2586.64, "text": " I learned about this by looking at some examples.", "tokens": [50364, 1436, 286, 643, 281, 2464, 264, 5744, 260, 11, 558, 30, 50558, 50558, 663, 307, 406, 2699, 76, 3089, 13, 50610, 50610, 407, 689, 360, 286, 915, 14333, 30, 50716, 50716, 1012, 360, 286, 483, 1409, 281, 360, 300, 30, 50840, 50840, 286, 3264, 466, 341, 538, 1237, 412, 512, 5110, 13, 51064, 51064, 407, 456, 366, 2674, 5110, 295, 577, 281, 764, 9573, 19440, 293, 439, 264, 16225, 47012, 3089, 307, 264, 912, 456, 13, 51500, 51500, 509, 393, 574, 309, 493, 456, 420, 291, 393, 754, 915, 512, 5110, 294, 2699, 76, 300, 366, 1238, 2199, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14490742359346556, "compression_ratio": 1.5991189427312775, "no_caption_prob": 5.9203892305959016e-05}, {"id": 617, "seek": 257264, "start": 2586.64, "end": 2595.3599999999997, "text": " So there are general examples of how to use WebGL and all the GLSL code is the same there.", "tokens": [50364, 1436, 286, 643, 281, 2464, 264, 5744, 260, 11, 558, 30, 50558, 50558, 663, 307, 406, 2699, 76, 3089, 13, 50610, 50610, 407, 689, 360, 286, 915, 14333, 30, 50716, 50716, 1012, 360, 286, 483, 1409, 281, 360, 300, 30, 50840, 50840, 286, 3264, 466, 341, 538, 1237, 412, 512, 5110, 13, 51064, 51064, 407, 456, 366, 2674, 5110, 295, 577, 281, 764, 9573, 19440, 293, 439, 264, 16225, 47012, 3089, 307, 264, 912, 456, 13, 51500, 51500, 509, 393, 574, 309, 493, 456, 420, 291, 393, 754, 915, 512, 5110, 294, 2699, 76, 300, 366, 1238, 2199, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14490742359346556, "compression_ratio": 1.5991189427312775, "no_caption_prob": 5.9203892305959016e-05}, {"id": 618, "seek": 257264, "start": 2595.3599999999997, "end": 2601.8399999999997, "text": " You can look it up there or you can even find some examples in Elm that are pretty simple.", "tokens": [50364, 1436, 286, 643, 281, 2464, 264, 5744, 260, 11, 558, 30, 50558, 50558, 663, 307, 406, 2699, 76, 3089, 13, 50610, 50610, 407, 689, 360, 286, 915, 14333, 30, 50716, 50716, 1012, 360, 286, 483, 1409, 281, 360, 300, 30, 50840, 50840, 286, 3264, 466, 341, 538, 1237, 412, 512, 5110, 13, 51064, 51064, 407, 456, 366, 2674, 5110, 295, 577, 281, 764, 9573, 19440, 293, 439, 264, 16225, 47012, 3089, 307, 264, 912, 456, 13, 51500, 51500, 509, 393, 574, 309, 493, 456, 420, 291, 393, 754, 915, 512, 5110, 294, 2699, 76, 300, 366, 1238, 2199, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.14490742359346556, "compression_ratio": 1.5991189427312775, "no_caption_prob": 5.9203892305959016e-05}, {"id": 619, "seek": 260184, "start": 2601.84, "end": 2609.36, "text": " Yeah, with this normal thing, I think it's slightly more complex than just rendering", "tokens": [50364, 865, 11, 365, 341, 2710, 551, 11, 286, 519, 309, 311, 4748, 544, 3997, 813, 445, 22407, 50740, 50740, 257, 13728, 13, 50822, 50822, 759, 291, 528, 281, 483, 666, 9577, 11, 550, 309, 2170, 544, 6179, 13, 51081, 51081, 2704, 412, 341, 935, 11, 291, 528, 281, 519, 295, 411, 11, 360, 291, 534, 528, 281, 1963, 257, 688, 666, 51330, 51330, 2539, 805, 35, 11837, 294, 9573, 19440, 30, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.19202696482340495, "compression_ratio": 1.5164835164835164, "no_caption_prob": 7.712379738222808e-05}, {"id": 620, "seek": 260184, "start": 2609.36, "end": 2611.0, "text": " a cube.", "tokens": [50364, 865, 11, 365, 341, 2710, 551, 11, 286, 519, 309, 311, 4748, 544, 3997, 813, 445, 22407, 50740, 50740, 257, 13728, 13, 50822, 50822, 759, 291, 528, 281, 483, 666, 9577, 11, 550, 309, 2170, 544, 6179, 13, 51081, 51081, 2704, 412, 341, 935, 11, 291, 528, 281, 519, 295, 411, 11, 360, 291, 534, 528, 281, 1963, 257, 688, 666, 51330, 51330, 2539, 805, 35, 11837, 294, 9573, 19440, 30, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.19202696482340495, "compression_ratio": 1.5164835164835164, "no_caption_prob": 7.712379738222808e-05}, {"id": 621, "seek": 260184, "start": 2611.0, "end": 2616.1800000000003, "text": " If you want to get into lighting, then it gets more complicated.", "tokens": [50364, 865, 11, 365, 341, 2710, 551, 11, 286, 519, 309, 311, 4748, 544, 3997, 813, 445, 22407, 50740, 50740, 257, 13728, 13, 50822, 50822, 759, 291, 528, 281, 483, 666, 9577, 11, 550, 309, 2170, 544, 6179, 13, 51081, 51081, 2704, 412, 341, 935, 11, 291, 528, 281, 519, 295, 411, 11, 360, 291, 534, 528, 281, 1963, 257, 688, 666, 51330, 51330, 2539, 805, 35, 11837, 294, 9573, 19440, 30, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.19202696482340495, "compression_ratio": 1.5164835164835164, "no_caption_prob": 7.712379738222808e-05}, {"id": 622, "seek": 260184, "start": 2616.1800000000003, "end": 2621.1600000000003, "text": " Maybe at this point, you want to think of like, do you really want to invest a lot into", "tokens": [50364, 865, 11, 365, 341, 2710, 551, 11, 286, 519, 309, 311, 4748, 544, 3997, 813, 445, 22407, 50740, 50740, 257, 13728, 13, 50822, 50822, 759, 291, 528, 281, 483, 666, 9577, 11, 550, 309, 2170, 544, 6179, 13, 51081, 51081, 2704, 412, 341, 935, 11, 291, 528, 281, 519, 295, 411, 11, 360, 291, 534, 528, 281, 1963, 257, 688, 666, 51330, 51330, 2539, 805, 35, 11837, 294, 9573, 19440, 30, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.19202696482340495, "compression_ratio": 1.5164835164835164, "no_caption_prob": 7.712379738222808e-05}, {"id": 623, "seek": 260184, "start": 2621.1600000000003, "end": 2624.56, "text": " learning 3D graphics in WebGL?", "tokens": [50364, 865, 11, 365, 341, 2710, 551, 11, 286, 519, 309, 311, 4748, 544, 3997, 813, 445, 22407, 50740, 50740, 257, 13728, 13, 50822, 50822, 759, 291, 528, 281, 483, 666, 9577, 11, 550, 309, 2170, 544, 6179, 13, 51081, 51081, 2704, 412, 341, 935, 11, 291, 528, 281, 519, 295, 411, 11, 360, 291, 534, 528, 281, 1963, 257, 688, 666, 51330, 51330, 2539, 805, 35, 11837, 294, 9573, 19440, 30, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.19202696482340495, "compression_ratio": 1.5164835164835164, "no_caption_prob": 7.712379738222808e-05}, {"id": 624, "seek": 262456, "start": 2624.56, "end": 2633.0, "text": " Or maybe you'd rather switch to some of the existing packages like Elm 3D scene that would", "tokens": [50364, 1610, 1310, 291, 1116, 2831, 3679, 281, 512, 295, 264, 6741, 17401, 411, 2699, 76, 805, 35, 4145, 300, 576, 50786, 50786, 360, 309, 337, 291, 13, 50886, 50886, 509, 393, 992, 493, 257, 4145, 365, 5811, 293, 291, 603, 483, 1481, 9762, 2361, 22407, 484, 295, 51170, 51170, 300, 13, 51220, 51220, 407, 16225, 47012, 307, 257, 2121, 28431, 294, 2699, 76, 11, 457, 393, 291, 7690, 309, 37648, 5030, 30, 51585, 51585, 1664, 291, 1884, 472, 490, 257, 6798, 420, 746, 30, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.17015902562574906, "compression_ratio": 1.4751131221719458, "no_caption_prob": 7.928099512355402e-05}, {"id": 625, "seek": 262456, "start": 2633.0, "end": 2635.0, "text": " do it for you.", "tokens": [50364, 1610, 1310, 291, 1116, 2831, 3679, 281, 512, 295, 264, 6741, 17401, 411, 2699, 76, 805, 35, 4145, 300, 576, 50786, 50786, 360, 309, 337, 291, 13, 50886, 50886, 509, 393, 992, 493, 257, 4145, 365, 5811, 293, 291, 603, 483, 1481, 9762, 2361, 22407, 484, 295, 51170, 51170, 300, 13, 51220, 51220, 407, 16225, 47012, 307, 257, 2121, 28431, 294, 2699, 76, 11, 457, 393, 291, 7690, 309, 37648, 5030, 30, 51585, 51585, 1664, 291, 1884, 472, 490, 257, 6798, 420, 746, 30, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.17015902562574906, "compression_ratio": 1.4751131221719458, "no_caption_prob": 7.928099512355402e-05}, {"id": 626, "seek": 262456, "start": 2635.0, "end": 2640.68, "text": " You can set up a scene with lights and you'll get nice physically based rendering out of", "tokens": [50364, 1610, 1310, 291, 1116, 2831, 3679, 281, 512, 295, 264, 6741, 17401, 411, 2699, 76, 805, 35, 4145, 300, 576, 50786, 50786, 360, 309, 337, 291, 13, 50886, 50886, 509, 393, 992, 493, 257, 4145, 365, 5811, 293, 291, 603, 483, 1481, 9762, 2361, 22407, 484, 295, 51170, 51170, 300, 13, 51220, 51220, 407, 16225, 47012, 307, 257, 2121, 28431, 294, 2699, 76, 11, 457, 393, 291, 7690, 309, 37648, 5030, 30, 51585, 51585, 1664, 291, 1884, 472, 490, 257, 6798, 420, 746, 30, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.17015902562574906, "compression_ratio": 1.4751131221719458, "no_caption_prob": 7.928099512355402e-05}, {"id": 627, "seek": 262456, "start": 2640.68, "end": 2641.68, "text": " that.", "tokens": [50364, 1610, 1310, 291, 1116, 2831, 3679, 281, 512, 295, 264, 6741, 17401, 411, 2699, 76, 805, 35, 4145, 300, 576, 50786, 50786, 360, 309, 337, 291, 13, 50886, 50886, 509, 393, 992, 493, 257, 4145, 365, 5811, 293, 291, 603, 483, 1481, 9762, 2361, 22407, 484, 295, 51170, 51170, 300, 13, 51220, 51220, 407, 16225, 47012, 307, 257, 2121, 28431, 294, 2699, 76, 11, 457, 393, 291, 7690, 309, 37648, 5030, 30, 51585, 51585, 1664, 291, 1884, 472, 490, 257, 6798, 420, 746, 30, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.17015902562574906, "compression_ratio": 1.4751131221719458, "no_caption_prob": 7.928099512355402e-05}, {"id": 628, "seek": 262456, "start": 2641.68, "end": 2648.98, "text": " So GLSL is a special syntax in Elm, but can you construct it programmatically?", "tokens": [50364, 1610, 1310, 291, 1116, 2831, 3679, 281, 512, 295, 264, 6741, 17401, 411, 2699, 76, 805, 35, 4145, 300, 576, 50786, 50786, 360, 309, 337, 291, 13, 50886, 50886, 509, 393, 992, 493, 257, 4145, 365, 5811, 293, 291, 603, 483, 1481, 9762, 2361, 22407, 484, 295, 51170, 51170, 300, 13, 51220, 51220, 407, 16225, 47012, 307, 257, 2121, 28431, 294, 2699, 76, 11, 457, 393, 291, 7690, 309, 37648, 5030, 30, 51585, 51585, 1664, 291, 1884, 472, 490, 257, 6798, 420, 746, 30, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.17015902562574906, "compression_ratio": 1.4751131221719458, "no_caption_prob": 7.928099512355402e-05}, {"id": 629, "seek": 262456, "start": 2648.98, "end": 2653.2799999999997, "text": " Can you create one from a string or something?", "tokens": [50364, 1610, 1310, 291, 1116, 2831, 3679, 281, 512, 295, 264, 6741, 17401, 411, 2699, 76, 805, 35, 4145, 300, 576, 50786, 50786, 360, 309, 337, 291, 13, 50886, 50886, 509, 393, 992, 493, 257, 4145, 365, 5811, 293, 291, 603, 483, 1481, 9762, 2361, 22407, 484, 295, 51170, 51170, 300, 13, 51220, 51220, 407, 16225, 47012, 307, 257, 2121, 28431, 294, 2699, 76, 11, 457, 393, 291, 7690, 309, 37648, 5030, 30, 51585, 51585, 1664, 291, 1884, 472, 490, 257, 6798, 420, 746, 30, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.17015902562574906, "compression_ratio": 1.4751131221719458, "no_caption_prob": 7.928099512355402e-05}, {"id": 630, "seek": 265328, "start": 2653.28, "end": 2655.5600000000004, "text": " It's like statically compiled.", "tokens": [50364, 467, 311, 411, 2219, 984, 36548, 13, 50478, 50478, 1033, 11, 370, 291, 393, 380, 362, 257, 7372, 300, 7829, 485, 50696, 50696, 407, 291, 393, 380, 362, 364, 2699, 76, 7372, 300, 7829, 257, 16225, 47012, 2445, 37648, 5030, 2361, 322, 51048, 51048, 4195, 7642, 15743, 30, 51152, 51152, 883, 11, 456, 1143, 281, 312, 35948, 9362, 11, 457, 291, 458, 300, 294, 341, 1389, 11, 291, 362, 257, 6798, 293, 291, 51588, 51588, 1320, 300, 6798, 666, 34474, 293, 291, 7302, 300, 13, 51752, 51752, 407, 291, 576, 3624, 439, 264, 32567, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.2476298784968829, "compression_ratio": 1.6387665198237886, "no_caption_prob": 3.219037898816168e-05}, {"id": 631, "seek": 265328, "start": 2655.5600000000004, "end": 2659.92, "text": " Okay, so you can't have a package that creates...", "tokens": [50364, 467, 311, 411, 2219, 984, 36548, 13, 50478, 50478, 1033, 11, 370, 291, 393, 380, 362, 257, 7372, 300, 7829, 485, 50696, 50696, 407, 291, 393, 380, 362, 364, 2699, 76, 7372, 300, 7829, 257, 16225, 47012, 2445, 37648, 5030, 2361, 322, 51048, 51048, 4195, 7642, 15743, 30, 51152, 51152, 883, 11, 456, 1143, 281, 312, 35948, 9362, 11, 457, 291, 458, 300, 294, 341, 1389, 11, 291, 362, 257, 6798, 293, 291, 51588, 51588, 1320, 300, 6798, 666, 34474, 293, 291, 7302, 300, 13, 51752, 51752, 407, 291, 576, 3624, 439, 264, 32567, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.2476298784968829, "compression_ratio": 1.6387665198237886, "no_caption_prob": 3.219037898816168e-05}, {"id": 632, "seek": 265328, "start": 2659.92, "end": 2666.96, "text": " So you can't have an Elm package that creates a GLSL function programmatically based on", "tokens": [50364, 467, 311, 411, 2219, 984, 36548, 13, 50478, 50478, 1033, 11, 370, 291, 393, 380, 362, 257, 7372, 300, 7829, 485, 50696, 50696, 407, 291, 393, 380, 362, 364, 2699, 76, 7372, 300, 7829, 257, 16225, 47012, 2445, 37648, 5030, 2361, 322, 51048, 51048, 4195, 7642, 15743, 30, 51152, 51152, 883, 11, 456, 1143, 281, 312, 35948, 9362, 11, 457, 291, 458, 300, 294, 341, 1389, 11, 291, 362, 257, 6798, 293, 291, 51588, 51588, 1320, 300, 6798, 666, 34474, 293, 291, 7302, 300, 13, 51752, 51752, 407, 291, 576, 3624, 439, 264, 32567, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.2476298784968829, "compression_ratio": 1.6387665198237886, "no_caption_prob": 3.219037898816168e-05}, {"id": 633, "seek": 265328, "start": 2666.96, "end": 2669.0400000000004, "text": " user defined inputs?", "tokens": [50364, 467, 311, 411, 2219, 984, 36548, 13, 50478, 50478, 1033, 11, 370, 291, 393, 380, 362, 257, 7372, 300, 7829, 485, 50696, 50696, 407, 291, 393, 380, 362, 364, 2699, 76, 7372, 300, 7829, 257, 16225, 47012, 2445, 37648, 5030, 2361, 322, 51048, 51048, 4195, 7642, 15743, 30, 51152, 51152, 883, 11, 456, 1143, 281, 312, 35948, 9362, 11, 457, 291, 458, 300, 294, 341, 1389, 11, 291, 362, 257, 6798, 293, 291, 51588, 51588, 1320, 300, 6798, 666, 34474, 293, 291, 7302, 300, 13, 51752, 51752, 407, 291, 576, 3624, 439, 264, 32567, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.2476298784968829, "compression_ratio": 1.6387665198237886, "no_caption_prob": 3.219037898816168e-05}, {"id": 634, "seek": 265328, "start": 2669.0400000000004, "end": 2677.76, "text": " No, there used to be unsafe API, but you know that in this case, you have a string and you", "tokens": [50364, 467, 311, 411, 2219, 984, 36548, 13, 50478, 50478, 1033, 11, 370, 291, 393, 380, 362, 257, 7372, 300, 7829, 485, 50696, 50696, 407, 291, 393, 380, 362, 364, 2699, 76, 7372, 300, 7829, 257, 16225, 47012, 2445, 37648, 5030, 2361, 322, 51048, 51048, 4195, 7642, 15743, 30, 51152, 51152, 883, 11, 456, 1143, 281, 312, 35948, 9362, 11, 457, 291, 458, 300, 294, 341, 1389, 11, 291, 362, 257, 6798, 293, 291, 51588, 51588, 1320, 300, 6798, 666, 34474, 293, 291, 7302, 300, 13, 51752, 51752, 407, 291, 576, 3624, 439, 264, 32567, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.2476298784968829, "compression_ratio": 1.6387665198237886, "no_caption_prob": 3.219037898816168e-05}, {"id": 635, "seek": 265328, "start": 2677.76, "end": 2681.0400000000004, "text": " pass that string into runtime and you interpret that.", "tokens": [50364, 467, 311, 411, 2219, 984, 36548, 13, 50478, 50478, 1033, 11, 370, 291, 393, 380, 362, 257, 7372, 300, 7829, 485, 50696, 50696, 407, 291, 393, 380, 362, 364, 2699, 76, 7372, 300, 7829, 257, 16225, 47012, 2445, 37648, 5030, 2361, 322, 51048, 51048, 4195, 7642, 15743, 30, 51152, 51152, 883, 11, 456, 1143, 281, 312, 35948, 9362, 11, 457, 291, 458, 300, 294, 341, 1389, 11, 291, 362, 257, 6798, 293, 291, 51588, 51588, 1320, 300, 6798, 666, 34474, 293, 291, 7302, 300, 13, 51752, 51752, 407, 291, 576, 3624, 439, 264, 32567, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.2476298784968829, "compression_ratio": 1.6387665198237886, "no_caption_prob": 3.219037898816168e-05}, {"id": 636, "seek": 265328, "start": 2681.0400000000004, "end": 2683.0400000000004, "text": " So you would lose all the guarantees.", "tokens": [50364, 467, 311, 411, 2219, 984, 36548, 13, 50478, 50478, 1033, 11, 370, 291, 393, 380, 362, 257, 7372, 300, 7829, 485, 50696, 50696, 407, 291, 393, 380, 362, 364, 2699, 76, 7372, 300, 7829, 257, 16225, 47012, 2445, 37648, 5030, 2361, 322, 51048, 51048, 4195, 7642, 15743, 30, 51152, 51152, 883, 11, 456, 1143, 281, 312, 35948, 9362, 11, 457, 291, 458, 300, 294, 341, 1389, 11, 291, 362, 257, 6798, 293, 291, 51588, 51588, 1320, 300, 6798, 666, 34474, 293, 291, 7302, 300, 13, 51752, 51752, 407, 291, 576, 3624, 439, 264, 32567, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.2476298784968829, "compression_ratio": 1.6387665198237886, "no_caption_prob": 3.219037898816168e-05}, {"id": 637, "seek": 268304, "start": 2683.04, "end": 2689.0, "text": " So at some point this was removed and this thing is what is currently being explored", "tokens": [50364, 407, 412, 512, 935, 341, 390, 7261, 293, 341, 551, 307, 437, 307, 4362, 885, 24016, 50662, 50662, 295, 577, 281, 362, 257, 636, 281, 9594, 35925, 5744, 433, 420, 281, 312, 1075, 281, 2073, 512, 9239, 295, 3089, 11, 51044, 51044, 411, 257, 2445, 300, 291, 393, 764, 294, 428, 5744, 260, 300, 775, 746, 4420, 13, 51298, 51298, 407, 286, 519, 300, 307, 4362, 885, 24016, 13, 51428, 51428, 407, 307, 264, 2135, 764, 1389, 337, 264, 2699, 76, 9573, 19440, 1507, 2813, 30, 51750, 51750, 286, 914, 11, 2813, 366, 264, 6322, 472, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11953617322562944, "compression_ratio": 1.6916299559471366, "no_caption_prob": 1.8341204850003123e-05}, {"id": 638, "seek": 268304, "start": 2689.0, "end": 2696.64, "text": " of how to have a way to nicely compose shaders or to be able to share some bits of code,", "tokens": [50364, 407, 412, 512, 935, 341, 390, 7261, 293, 341, 551, 307, 437, 307, 4362, 885, 24016, 50662, 50662, 295, 577, 281, 362, 257, 636, 281, 9594, 35925, 5744, 433, 420, 281, 312, 1075, 281, 2073, 512, 9239, 295, 3089, 11, 51044, 51044, 411, 257, 2445, 300, 291, 393, 764, 294, 428, 5744, 260, 300, 775, 746, 4420, 13, 51298, 51298, 407, 286, 519, 300, 307, 4362, 885, 24016, 13, 51428, 51428, 407, 307, 264, 2135, 764, 1389, 337, 264, 2699, 76, 9573, 19440, 1507, 2813, 30, 51750, 51750, 286, 914, 11, 2813, 366, 264, 6322, 472, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11953617322562944, "compression_ratio": 1.6916299559471366, "no_caption_prob": 1.8341204850003123e-05}, {"id": 639, "seek": 268304, "start": 2696.64, "end": 2701.72, "text": " like a function that you can use in your shader that does something useful.", "tokens": [50364, 407, 412, 512, 935, 341, 390, 7261, 293, 341, 551, 307, 437, 307, 4362, 885, 24016, 50662, 50662, 295, 577, 281, 362, 257, 636, 281, 9594, 35925, 5744, 433, 420, 281, 312, 1075, 281, 2073, 512, 9239, 295, 3089, 11, 51044, 51044, 411, 257, 2445, 300, 291, 393, 764, 294, 428, 5744, 260, 300, 775, 746, 4420, 13, 51298, 51298, 407, 286, 519, 300, 307, 4362, 885, 24016, 13, 51428, 51428, 407, 307, 264, 2135, 764, 1389, 337, 264, 2699, 76, 9573, 19440, 1507, 2813, 30, 51750, 51750, 286, 914, 11, 2813, 366, 264, 6322, 472, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11953617322562944, "compression_ratio": 1.6916299559471366, "no_caption_prob": 1.8341204850003123e-05}, {"id": 640, "seek": 268304, "start": 2701.72, "end": 2704.32, "text": " So I think that is currently being explored.", "tokens": [50364, 407, 412, 512, 935, 341, 390, 7261, 293, 341, 551, 307, 437, 307, 4362, 885, 24016, 50662, 50662, 295, 577, 281, 362, 257, 636, 281, 9594, 35925, 5744, 433, 420, 281, 312, 1075, 281, 2073, 512, 9239, 295, 3089, 11, 51044, 51044, 411, 257, 2445, 300, 291, 393, 764, 294, 428, 5744, 260, 300, 775, 746, 4420, 13, 51298, 51298, 407, 286, 519, 300, 307, 4362, 885, 24016, 13, 51428, 51428, 407, 307, 264, 2135, 764, 1389, 337, 264, 2699, 76, 9573, 19440, 1507, 2813, 30, 51750, 51750, 286, 914, 11, 2813, 366, 264, 6322, 472, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11953617322562944, "compression_ratio": 1.6916299559471366, "no_caption_prob": 1.8341204850003123e-05}, {"id": 641, "seek": 268304, "start": 2704.32, "end": 2710.7599999999998, "text": " So is the main use case for the Elm WebGL stuff games?", "tokens": [50364, 407, 412, 512, 935, 341, 390, 7261, 293, 341, 551, 307, 437, 307, 4362, 885, 24016, 50662, 50662, 295, 577, 281, 362, 257, 636, 281, 9594, 35925, 5744, 433, 420, 281, 312, 1075, 281, 2073, 512, 9239, 295, 3089, 11, 51044, 51044, 411, 257, 2445, 300, 291, 393, 764, 294, 428, 5744, 260, 300, 775, 746, 4420, 13, 51298, 51298, 407, 286, 519, 300, 307, 4362, 885, 24016, 13, 51428, 51428, 407, 307, 264, 2135, 764, 1389, 337, 264, 2699, 76, 9573, 19440, 1507, 2813, 30, 51750, 51750, 286, 914, 11, 2813, 366, 264, 6322, 472, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11953617322562944, "compression_ratio": 1.6916299559471366, "no_caption_prob": 1.8341204850003123e-05}, {"id": 642, "seek": 268304, "start": 2710.7599999999998, "end": 2712.96, "text": " I mean, games are the obvious one.", "tokens": [50364, 407, 412, 512, 935, 341, 390, 7261, 293, 341, 551, 307, 437, 307, 4362, 885, 24016, 50662, 50662, 295, 577, 281, 362, 257, 636, 281, 9594, 35925, 5744, 433, 420, 281, 312, 1075, 281, 2073, 512, 9239, 295, 3089, 11, 51044, 51044, 411, 257, 2445, 300, 291, 393, 764, 294, 428, 5744, 260, 300, 775, 746, 4420, 13, 51298, 51298, 407, 286, 519, 300, 307, 4362, 885, 24016, 13, 51428, 51428, 407, 307, 264, 2135, 764, 1389, 337, 264, 2699, 76, 9573, 19440, 1507, 2813, 30, 51750, 51750, 286, 914, 11, 2813, 366, 264, 6322, 472, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11953617322562944, "compression_ratio": 1.6916299559471366, "no_caption_prob": 1.8341204850003123e-05}, {"id": 643, "seek": 271296, "start": 2712.96, "end": 2721.56, "text": " I know Ian McKenzie is very passionate about CAD type stuff like modeling physical objects.", "tokens": [50364, 286, 458, 19595, 21765, 32203, 307, 588, 11410, 466, 41143, 2010, 1507, 411, 15983, 4001, 6565, 13, 50794, 50794, 708, 366, 264, 3467, 295, 764, 3331, 561, 576, 764, 341, 337, 30, 50956, 50956, 467, 311, 588, 4152, 11, 286, 519, 13, 51046, 51046, 1743, 2813, 11, 2086, 11, 420, 1310, 754, 1412, 25801, 420, 1340, 300, 576, 3651, 805, 35, 25801, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.20117856495415987, "compression_ratio": 1.3959390862944163, "no_caption_prob": 1.1297472156002186e-05}, {"id": 644, "seek": 271296, "start": 2721.56, "end": 2724.8, "text": " What are the types of use cases people would use this for?", "tokens": [50364, 286, 458, 19595, 21765, 32203, 307, 588, 11410, 466, 41143, 2010, 1507, 411, 15983, 4001, 6565, 13, 50794, 50794, 708, 366, 264, 3467, 295, 764, 3331, 561, 576, 764, 341, 337, 30, 50956, 50956, 467, 311, 588, 4152, 11, 286, 519, 13, 51046, 51046, 1743, 2813, 11, 2086, 11, 420, 1310, 754, 1412, 25801, 420, 1340, 300, 576, 3651, 805, 35, 25801, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.20117856495415987, "compression_ratio": 1.3959390862944163, "no_caption_prob": 1.1297472156002186e-05}, {"id": 645, "seek": 271296, "start": 2724.8, "end": 2726.6, "text": " It's very broad, I think.", "tokens": [50364, 286, 458, 19595, 21765, 32203, 307, 588, 11410, 466, 41143, 2010, 1507, 411, 15983, 4001, 6565, 13, 50794, 50794, 708, 366, 264, 3467, 295, 764, 3331, 561, 576, 764, 341, 337, 30, 50956, 50956, 467, 311, 588, 4152, 11, 286, 519, 13, 51046, 51046, 1743, 2813, 11, 2086, 11, 420, 1310, 754, 1412, 25801, 420, 1340, 300, 576, 3651, 805, 35, 25801, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.20117856495415987, "compression_ratio": 1.3959390862944163, "no_caption_prob": 1.1297472156002186e-05}, {"id": 646, "seek": 271296, "start": 2726.6, "end": 2736.84, "text": " Like games, yes, or maybe even data visualization or anything that would require 3D visualization.", "tokens": [50364, 286, 458, 19595, 21765, 32203, 307, 588, 11410, 466, 41143, 2010, 1507, 411, 15983, 4001, 6565, 13, 50794, 50794, 708, 366, 264, 3467, 295, 764, 3331, 561, 576, 764, 341, 337, 30, 50956, 50956, 467, 311, 588, 4152, 11, 286, 519, 13, 51046, 51046, 1743, 2813, 11, 2086, 11, 420, 1310, 754, 1412, 25801, 420, 1340, 300, 576, 3651, 805, 35, 25801, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.20117856495415987, "compression_ratio": 1.3959390862944163, "no_caption_prob": 1.1297472156002186e-05}, {"id": 647, "seek": 273684, "start": 2736.84, "end": 2743.44, "text": " You can think of an advert or like a product page where you have something physical, like", "tokens": [50364, 509, 393, 519, 295, 364, 7756, 420, 411, 257, 1674, 3028, 689, 291, 362, 746, 4001, 11, 411, 50694, 50694, 286, 500, 380, 458, 11, 291, 434, 6511, 2593, 293, 291, 362, 411, 257, 805, 35, 2316, 322, 264, 3028, 300, 6653, 50974, 50974, 428, 5022, 13121, 309, 293, 574, 412, 309, 294, 805, 35, 13, 51226, 51226, 286, 519, 19595, 754, 2835, 257, 44849, 11, 291, 393, 362, 411, 257, 426, 1718, 2797, 44849, 28748, 294, 51530, 51530, 309, 13, 51580, 51580, 1545, 406, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.21321451399061414, "compression_ratio": 1.5594059405940595, "no_caption_prob": 7.140252273529768e-05}, {"id": 648, "seek": 273684, "start": 2743.44, "end": 2749.04, "text": " I don't know, you're selling phone and you have like a 3D model on the page that lets", "tokens": [50364, 509, 393, 519, 295, 364, 7756, 420, 411, 257, 1674, 3028, 689, 291, 362, 746, 4001, 11, 411, 50694, 50694, 286, 500, 380, 458, 11, 291, 434, 6511, 2593, 293, 291, 362, 411, 257, 805, 35, 2316, 322, 264, 3028, 300, 6653, 50974, 50974, 428, 5022, 13121, 309, 293, 574, 412, 309, 294, 805, 35, 13, 51226, 51226, 286, 519, 19595, 754, 2835, 257, 44849, 11, 291, 393, 362, 411, 257, 426, 1718, 2797, 44849, 28748, 294, 51530, 51530, 309, 13, 51580, 51580, 1545, 406, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.21321451399061414, "compression_ratio": 1.5594059405940595, "no_caption_prob": 7.140252273529768e-05}, {"id": 649, "seek": 273684, "start": 2749.04, "end": 2754.08, "text": " your users rotate it and look at it in 3D.", "tokens": [50364, 509, 393, 519, 295, 364, 7756, 420, 411, 257, 1674, 3028, 689, 291, 362, 746, 4001, 11, 411, 50694, 50694, 286, 500, 380, 458, 11, 291, 434, 6511, 2593, 293, 291, 362, 411, 257, 805, 35, 2316, 322, 264, 3028, 300, 6653, 50974, 50974, 428, 5022, 13121, 309, 293, 574, 412, 309, 294, 805, 35, 13, 51226, 51226, 286, 519, 19595, 754, 2835, 257, 44849, 11, 291, 393, 362, 411, 257, 426, 1718, 2797, 44849, 28748, 294, 51530, 51530, 309, 13, 51580, 51580, 1545, 406, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.21321451399061414, "compression_ratio": 1.5594059405940595, "no_caption_prob": 7.140252273529768e-05}, {"id": 650, "seek": 273684, "start": 2754.08, "end": 2760.1600000000003, "text": " I think Ian even mentioned a spinner, you can have like a Nijax spinner rendered in", "tokens": [50364, 509, 393, 519, 295, 364, 7756, 420, 411, 257, 1674, 3028, 689, 291, 362, 746, 4001, 11, 411, 50694, 50694, 286, 500, 380, 458, 11, 291, 434, 6511, 2593, 293, 291, 362, 411, 257, 805, 35, 2316, 322, 264, 3028, 300, 6653, 50974, 50974, 428, 5022, 13121, 309, 293, 574, 412, 309, 294, 805, 35, 13, 51226, 51226, 286, 519, 19595, 754, 2835, 257, 44849, 11, 291, 393, 362, 411, 257, 426, 1718, 2797, 44849, 28748, 294, 51530, 51530, 309, 13, 51580, 51580, 1545, 406, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.21321451399061414, "compression_ratio": 1.5594059405940595, "no_caption_prob": 7.140252273529768e-05}, {"id": 651, "seek": 273684, "start": 2760.1600000000003, "end": 2761.1600000000003, "text": " it.", "tokens": [50364, 509, 393, 519, 295, 364, 7756, 420, 411, 257, 1674, 3028, 689, 291, 362, 746, 4001, 11, 411, 50694, 50694, 286, 500, 380, 458, 11, 291, 434, 6511, 2593, 293, 291, 362, 411, 257, 805, 35, 2316, 322, 264, 3028, 300, 6653, 50974, 50974, 428, 5022, 13121, 309, 293, 574, 412, 309, 294, 805, 35, 13, 51226, 51226, 286, 519, 19595, 754, 2835, 257, 44849, 11, 291, 393, 362, 411, 257, 426, 1718, 2797, 44849, 28748, 294, 51530, 51530, 309, 13, 51580, 51580, 1545, 406, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.21321451399061414, "compression_ratio": 1.5594059405940595, "no_caption_prob": 7.140252273529768e-05}, {"id": 652, "seek": 273684, "start": 2761.1600000000003, "end": 2762.1600000000003, "text": " Why not?", "tokens": [50364, 509, 393, 519, 295, 364, 7756, 420, 411, 257, 1674, 3028, 689, 291, 362, 746, 4001, 11, 411, 50694, 50694, 286, 500, 380, 458, 11, 291, 434, 6511, 2593, 293, 291, 362, 411, 257, 805, 35, 2316, 322, 264, 3028, 300, 6653, 50974, 50974, 428, 5022, 13121, 309, 293, 574, 412, 309, 294, 805, 35, 13, 51226, 51226, 286, 519, 19595, 754, 2835, 257, 44849, 11, 291, 393, 362, 411, 257, 426, 1718, 2797, 44849, 28748, 294, 51530, 51530, 309, 13, 51580, 51580, 1545, 406, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.21321451399061414, "compression_ratio": 1.5594059405940595, "no_caption_prob": 7.140252273529768e-05}, {"id": 653, "seek": 276216, "start": 2762.16, "end": 2769.8399999999997, "text": " Yeah, I think is the kite project also in WebGL that Erkal Selman created?", "tokens": [50364, 865, 11, 286, 519, 307, 264, 38867, 1716, 611, 294, 9573, 19440, 300, 3300, 19990, 10736, 1601, 2942, 30, 50748, 50748, 286, 519, 309, 1062, 312, 13, 50816, 50816, 883, 11, 300, 307, 1228, 31910, 38, 13, 50936, 50936, 663, 311, 31910, 38, 11, 1392, 13, 51036, 51036, 583, 3300, 19990, 575, 668, 884, 512, 534, 1627, 5056, 14455, 1228, 2699, 76, 805, 35, 4145, 13, 51366, 51366, 11888, 5056, 14455, 30, 51416, 51416, 883, 11, 544, 411, 5880, 17720, 733, 295, 551, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.2516819563778964, "compression_ratio": 1.453125, "no_caption_prob": 7.140803063521162e-05}, {"id": 654, "seek": 276216, "start": 2769.8399999999997, "end": 2771.2, "text": " I think it might be.", "tokens": [50364, 865, 11, 286, 519, 307, 264, 38867, 1716, 611, 294, 9573, 19440, 300, 3300, 19990, 10736, 1601, 2942, 30, 50748, 50748, 286, 519, 309, 1062, 312, 13, 50816, 50816, 883, 11, 300, 307, 1228, 31910, 38, 13, 50936, 50936, 663, 311, 31910, 38, 11, 1392, 13, 51036, 51036, 583, 3300, 19990, 575, 668, 884, 512, 534, 1627, 5056, 14455, 1228, 2699, 76, 805, 35, 4145, 13, 51366, 51366, 11888, 5056, 14455, 30, 51416, 51416, 883, 11, 544, 411, 5880, 17720, 733, 295, 551, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.2516819563778964, "compression_ratio": 1.453125, "no_caption_prob": 7.140803063521162e-05}, {"id": 655, "seek": 276216, "start": 2771.2, "end": 2773.6, "text": " No, that is using SVG.", "tokens": [50364, 865, 11, 286, 519, 307, 264, 38867, 1716, 611, 294, 9573, 19440, 300, 3300, 19990, 10736, 1601, 2942, 30, 50748, 50748, 286, 519, 309, 1062, 312, 13, 50816, 50816, 883, 11, 300, 307, 1228, 31910, 38, 13, 50936, 50936, 663, 311, 31910, 38, 11, 1392, 13, 51036, 51036, 583, 3300, 19990, 575, 668, 884, 512, 534, 1627, 5056, 14455, 1228, 2699, 76, 805, 35, 4145, 13, 51366, 51366, 11888, 5056, 14455, 30, 51416, 51416, 883, 11, 544, 411, 5880, 17720, 733, 295, 551, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.2516819563778964, "compression_ratio": 1.453125, "no_caption_prob": 7.140803063521162e-05}, {"id": 656, "seek": 276216, "start": 2773.6, "end": 2775.6, "text": " That's SVG, okay.", "tokens": [50364, 865, 11, 286, 519, 307, 264, 38867, 1716, 611, 294, 9573, 19440, 300, 3300, 19990, 10736, 1601, 2942, 30, 50748, 50748, 286, 519, 309, 1062, 312, 13, 50816, 50816, 883, 11, 300, 307, 1228, 31910, 38, 13, 50936, 50936, 663, 311, 31910, 38, 11, 1392, 13, 51036, 51036, 583, 3300, 19990, 575, 668, 884, 512, 534, 1627, 5056, 14455, 1228, 2699, 76, 805, 35, 4145, 13, 51366, 51366, 11888, 5056, 14455, 30, 51416, 51416, 883, 11, 544, 411, 5880, 17720, 733, 295, 551, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.2516819563778964, "compression_ratio": 1.453125, "no_caption_prob": 7.140803063521162e-05}, {"id": 657, "seek": 276216, "start": 2775.6, "end": 2782.2, "text": " But Erkal has been doing some really cool visualizations using Elm 3D scene.", "tokens": [50364, 865, 11, 286, 519, 307, 264, 38867, 1716, 611, 294, 9573, 19440, 300, 3300, 19990, 10736, 1601, 2942, 30, 50748, 50748, 286, 519, 309, 1062, 312, 13, 50816, 50816, 883, 11, 300, 307, 1228, 31910, 38, 13, 50936, 50936, 663, 311, 31910, 38, 11, 1392, 13, 51036, 51036, 583, 3300, 19990, 575, 668, 884, 512, 534, 1627, 5056, 14455, 1228, 2699, 76, 805, 35, 4145, 13, 51366, 51366, 11888, 5056, 14455, 30, 51416, 51416, 883, 11, 544, 411, 5880, 17720, 733, 295, 551, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.2516819563778964, "compression_ratio": 1.453125, "no_caption_prob": 7.140803063521162e-05}, {"id": 658, "seek": 276216, "start": 2782.2, "end": 2783.2, "text": " Data visualizations?", "tokens": [50364, 865, 11, 286, 519, 307, 264, 38867, 1716, 611, 294, 9573, 19440, 300, 3300, 19990, 10736, 1601, 2942, 30, 50748, 50748, 286, 519, 309, 1062, 312, 13, 50816, 50816, 883, 11, 300, 307, 1228, 31910, 38, 13, 50936, 50936, 663, 311, 31910, 38, 11, 1392, 13, 51036, 51036, 583, 3300, 19990, 575, 668, 884, 512, 534, 1627, 5056, 14455, 1228, 2699, 76, 805, 35, 4145, 13, 51366, 51366, 11888, 5056, 14455, 30, 51416, 51416, 883, 11, 544, 411, 5880, 17720, 733, 295, 551, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.2516819563778964, "compression_ratio": 1.453125, "no_caption_prob": 7.140803063521162e-05}, {"id": 659, "seek": 276216, "start": 2783.2, "end": 2787.64, "text": " No, more like creative coding kind of thing.", "tokens": [50364, 865, 11, 286, 519, 307, 264, 38867, 1716, 611, 294, 9573, 19440, 300, 3300, 19990, 10736, 1601, 2942, 30, 50748, 50748, 286, 519, 309, 1062, 312, 13, 50816, 50816, 883, 11, 300, 307, 1228, 31910, 38, 13, 50936, 50936, 663, 311, 31910, 38, 11, 1392, 13, 51036, 51036, 583, 3300, 19990, 575, 668, 884, 512, 534, 1627, 5056, 14455, 1228, 2699, 76, 805, 35, 4145, 13, 51366, 51366, 11888, 5056, 14455, 30, 51416, 51416, 883, 11, 544, 411, 5880, 17720, 733, 295, 551, 13, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.2516819563778964, "compression_ratio": 1.453125, "no_caption_prob": 7.140803063521162e-05}, {"id": 660, "seek": 278764, "start": 2787.64, "end": 2793.56, "text": " Because with functional API, you get all the function, composition, all the things you", "tokens": [50364, 1436, 365, 11745, 9362, 11, 291, 483, 439, 264, 2445, 11, 12686, 11, 439, 264, 721, 291, 50660, 50660, 393, 5258, 1337, 1166, 1523, 13, 50818, 50818, 509, 393, 360, 4974, 38662, 293, 1338, 11, 588, 1627, 13, 51057, 51057, 407, 437, 366, 512, 295, 264, 1627, 4455, 300, 561, 820, 747, 257, 574, 412, 281, 483, 10249, 51286, 51286, 293, 574, 412, 512, 5110, 30, 51395, 51395, 407, 472, 551, 286, 576, 2073, 307, 456, 307, 257, 588, 1481, 12492, 295, 1920, 439, 264, 805, 35, 11837, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19188609330550485, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.399600584292784e-05}, {"id": 661, "seek": 278764, "start": 2793.56, "end": 2796.72, "text": " can produce generative art.", "tokens": [50364, 1436, 365, 11745, 9362, 11, 291, 483, 439, 264, 2445, 11, 12686, 11, 439, 264, 721, 291, 50660, 50660, 393, 5258, 1337, 1166, 1523, 13, 50818, 50818, 509, 393, 360, 4974, 38662, 293, 1338, 11, 588, 1627, 13, 51057, 51057, 407, 437, 366, 512, 295, 264, 1627, 4455, 300, 561, 820, 747, 257, 574, 412, 281, 483, 10249, 51286, 51286, 293, 574, 412, 512, 5110, 30, 51395, 51395, 407, 472, 551, 286, 576, 2073, 307, 456, 307, 257, 588, 1481, 12492, 295, 1920, 439, 264, 805, 35, 11837, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19188609330550485, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.399600584292784e-05}, {"id": 662, "seek": 278764, "start": 2796.72, "end": 2801.5, "text": " You can do random generators and yeah, very cool.", "tokens": [50364, 1436, 365, 11745, 9362, 11, 291, 483, 439, 264, 2445, 11, 12686, 11, 439, 264, 721, 291, 50660, 50660, 393, 5258, 1337, 1166, 1523, 13, 50818, 50818, 509, 393, 360, 4974, 38662, 293, 1338, 11, 588, 1627, 13, 51057, 51057, 407, 437, 366, 512, 295, 264, 1627, 4455, 300, 561, 820, 747, 257, 574, 412, 281, 483, 10249, 51286, 51286, 293, 574, 412, 512, 5110, 30, 51395, 51395, 407, 472, 551, 286, 576, 2073, 307, 456, 307, 257, 588, 1481, 12492, 295, 1920, 439, 264, 805, 35, 11837, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19188609330550485, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.399600584292784e-05}, {"id": 663, "seek": 278764, "start": 2801.5, "end": 2806.08, "text": " So what are some of the cool projects that people should take a look at to get inspiration", "tokens": [50364, 1436, 365, 11745, 9362, 11, 291, 483, 439, 264, 2445, 11, 12686, 11, 439, 264, 721, 291, 50660, 50660, 393, 5258, 1337, 1166, 1523, 13, 50818, 50818, 509, 393, 360, 4974, 38662, 293, 1338, 11, 588, 1627, 13, 51057, 51057, 407, 437, 366, 512, 295, 264, 1627, 4455, 300, 561, 820, 747, 257, 574, 412, 281, 483, 10249, 51286, 51286, 293, 574, 412, 512, 5110, 30, 51395, 51395, 407, 472, 551, 286, 576, 2073, 307, 456, 307, 257, 588, 1481, 12492, 295, 1920, 439, 264, 805, 35, 11837, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19188609330550485, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.399600584292784e-05}, {"id": 664, "seek": 278764, "start": 2806.08, "end": 2808.2599999999998, "text": " and look at some examples?", "tokens": [50364, 1436, 365, 11745, 9362, 11, 291, 483, 439, 264, 2445, 11, 12686, 11, 439, 264, 721, 291, 50660, 50660, 393, 5258, 1337, 1166, 1523, 13, 50818, 50818, 509, 393, 360, 4974, 38662, 293, 1338, 11, 588, 1627, 13, 51057, 51057, 407, 437, 366, 512, 295, 264, 1627, 4455, 300, 561, 820, 747, 257, 574, 412, 281, 483, 10249, 51286, 51286, 293, 574, 412, 512, 5110, 30, 51395, 51395, 407, 472, 551, 286, 576, 2073, 307, 456, 307, 257, 588, 1481, 12492, 295, 1920, 439, 264, 805, 35, 11837, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19188609330550485, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.399600584292784e-05}, {"id": 665, "seek": 278764, "start": 2808.2599999999998, "end": 2816.3599999999997, "text": " So one thing I would share is there is a very nice overview of almost all the 3D graphics", "tokens": [50364, 1436, 365, 11745, 9362, 11, 291, 483, 439, 264, 2445, 11, 12686, 11, 439, 264, 721, 291, 50660, 50660, 393, 5258, 1337, 1166, 1523, 13, 50818, 50818, 509, 393, 360, 4974, 38662, 293, 1338, 11, 588, 1627, 13, 51057, 51057, 407, 437, 366, 512, 295, 264, 1627, 4455, 300, 561, 820, 747, 257, 574, 412, 281, 483, 10249, 51286, 51286, 293, 574, 412, 512, 5110, 30, 51395, 51395, 407, 472, 551, 286, 576, 2073, 307, 456, 307, 257, 588, 1481, 12492, 295, 1920, 439, 264, 805, 35, 11837, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.19188609330550485, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.399600584292784e-05}, {"id": 666, "seek": 281636, "start": 2816.36, "end": 2818.52, "text": " projects built in Elm.", "tokens": [50364, 4455, 3094, 294, 2699, 76, 13, 50472, 50472, 42076, 11, 286, 1454, 286, 23155, 702, 1150, 1315, 8944, 11, 42076, 376, 2912, 3812, 829, 1214, 13, 50848, 50848, 467, 575, 439, 264, 2813, 293, 1523, 293, 439, 264, 3219, 721, 3094, 294, 2699, 76, 13, 51188, 51188, 286, 519, 300, 307, 257, 534, 1627, 12492, 295, 445, 2577, 437, 311, 1944, 13, 51428, 51428, 821, 366, 544, 15148, 13, 51568, 51568, 821, 366, 661, 4455, 300, 366, 544, 411, 15148, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2388491237864775, "compression_ratio": 1.6180904522613064, "no_caption_prob": 0.00011226010974496603}, {"id": 667, "seek": 281636, "start": 2818.52, "end": 2826.04, "text": " Luca, I hope I pronounced his second name correctly, Luca Mognini put together.", "tokens": [50364, 4455, 3094, 294, 2699, 76, 13, 50472, 50472, 42076, 11, 286, 1454, 286, 23155, 702, 1150, 1315, 8944, 11, 42076, 376, 2912, 3812, 829, 1214, 13, 50848, 50848, 467, 575, 439, 264, 2813, 293, 1523, 293, 439, 264, 3219, 721, 3094, 294, 2699, 76, 13, 51188, 51188, 286, 519, 300, 307, 257, 534, 1627, 12492, 295, 445, 2577, 437, 311, 1944, 13, 51428, 51428, 821, 366, 544, 15148, 13, 51568, 51568, 821, 366, 661, 4455, 300, 366, 544, 411, 15148, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2388491237864775, "compression_ratio": 1.6180904522613064, "no_caption_prob": 0.00011226010974496603}, {"id": 668, "seek": 281636, "start": 2826.04, "end": 2832.84, "text": " It has all the games and art and all the crazy things built in Elm.", "tokens": [50364, 4455, 3094, 294, 2699, 76, 13, 50472, 50472, 42076, 11, 286, 1454, 286, 23155, 702, 1150, 1315, 8944, 11, 42076, 376, 2912, 3812, 829, 1214, 13, 50848, 50848, 467, 575, 439, 264, 2813, 293, 1523, 293, 439, 264, 3219, 721, 3094, 294, 2699, 76, 13, 51188, 51188, 286, 519, 300, 307, 257, 534, 1627, 12492, 295, 445, 2577, 437, 311, 1944, 13, 51428, 51428, 821, 366, 544, 15148, 13, 51568, 51568, 821, 366, 661, 4455, 300, 366, 544, 411, 15148, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2388491237864775, "compression_ratio": 1.6180904522613064, "no_caption_prob": 0.00011226010974496603}, {"id": 669, "seek": 281636, "start": 2832.84, "end": 2837.6400000000003, "text": " I think that is a really cool overview of just seeing what's possible.", "tokens": [50364, 4455, 3094, 294, 2699, 76, 13, 50472, 50472, 42076, 11, 286, 1454, 286, 23155, 702, 1150, 1315, 8944, 11, 42076, 376, 2912, 3812, 829, 1214, 13, 50848, 50848, 467, 575, 439, 264, 2813, 293, 1523, 293, 439, 264, 3219, 721, 3094, 294, 2699, 76, 13, 51188, 51188, 286, 519, 300, 307, 257, 534, 1627, 12492, 295, 445, 2577, 437, 311, 1944, 13, 51428, 51428, 821, 366, 544, 15148, 13, 51568, 51568, 821, 366, 661, 4455, 300, 366, 544, 411, 15148, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2388491237864775, "compression_ratio": 1.6180904522613064, "no_caption_prob": 0.00011226010974496603}, {"id": 670, "seek": 281636, "start": 2837.6400000000003, "end": 2840.44, "text": " There are more libraries.", "tokens": [50364, 4455, 3094, 294, 2699, 76, 13, 50472, 50472, 42076, 11, 286, 1454, 286, 23155, 702, 1150, 1315, 8944, 11, 42076, 376, 2912, 3812, 829, 1214, 13, 50848, 50848, 467, 575, 439, 264, 2813, 293, 1523, 293, 439, 264, 3219, 721, 3094, 294, 2699, 76, 13, 51188, 51188, 286, 519, 300, 307, 257, 534, 1627, 12492, 295, 445, 2577, 437, 311, 1944, 13, 51428, 51428, 821, 366, 544, 15148, 13, 51568, 51568, 821, 366, 661, 4455, 300, 366, 544, 411, 15148, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2388491237864775, "compression_ratio": 1.6180904522613064, "no_caption_prob": 0.00011226010974496603}, {"id": 671, "seek": 281636, "start": 2840.44, "end": 2843.56, "text": " There are other projects that are more like libraries.", "tokens": [50364, 4455, 3094, 294, 2699, 76, 13, 50472, 50472, 42076, 11, 286, 1454, 286, 23155, 702, 1150, 1315, 8944, 11, 42076, 376, 2912, 3812, 829, 1214, 13, 50848, 50848, 467, 575, 439, 264, 2813, 293, 1523, 293, 439, 264, 3219, 721, 3094, 294, 2699, 76, 13, 51188, 51188, 286, 519, 300, 307, 257, 534, 1627, 12492, 295, 445, 2577, 437, 311, 1944, 13, 51428, 51428, 821, 366, 544, 15148, 13, 51568, 51568, 821, 366, 661, 4455, 300, 366, 544, 411, 15148, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.2388491237864775, "compression_ratio": 1.6180904522613064, "no_caption_prob": 0.00011226010974496603}, {"id": 672, "seek": 284356, "start": 2843.56, "end": 2849.44, "text": " So for example, Roman Potasov, his GitHub is just gook.", "tokens": [50364, 407, 337, 1365, 11, 8566, 9145, 296, 5179, 11, 702, 23331, 307, 445, 352, 453, 13, 50658, 50658, 634, 12270, 257, 9573, 19440, 24646, 13, 50912, 50912, 634, 12270, 257, 9573, 19440, 24646, 300, 307, 588, 2531, 281, 264, 7372, 300, 22613, 12270, 11, 51258, 51258, 457, 309, 4960, 9573, 19440, 833, 264, 13376, 13, 51368, 51368, 316, 688, 295, 721, 393, 312, 829, 1214, 1228, 300, 7372, 293, 309, 311, 588, 2199, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.19990049264369866, "compression_ratio": 1.6333333333333333, "no_caption_prob": 1.5933439499349333e-05}, {"id": 673, "seek": 284356, "start": 2849.44, "end": 2854.52, "text": " He implemented a WebGL playground.", "tokens": [50364, 407, 337, 1365, 11, 8566, 9145, 296, 5179, 11, 702, 23331, 307, 445, 352, 453, 13, 50658, 50658, 634, 12270, 257, 9573, 19440, 24646, 13, 50912, 50912, 634, 12270, 257, 9573, 19440, 24646, 300, 307, 588, 2531, 281, 264, 7372, 300, 22613, 12270, 11, 51258, 51258, 457, 309, 4960, 9573, 19440, 833, 264, 13376, 13, 51368, 51368, 316, 688, 295, 721, 393, 312, 829, 1214, 1228, 300, 7372, 293, 309, 311, 588, 2199, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.19990049264369866, "compression_ratio": 1.6333333333333333, "no_caption_prob": 1.5933439499349333e-05}, {"id": 674, "seek": 284356, "start": 2854.52, "end": 2861.44, "text": " He implemented a WebGL playground that is very similar to the package that Evan implemented,", "tokens": [50364, 407, 337, 1365, 11, 8566, 9145, 296, 5179, 11, 702, 23331, 307, 445, 352, 453, 13, 50658, 50658, 634, 12270, 257, 9573, 19440, 24646, 13, 50912, 50912, 634, 12270, 257, 9573, 19440, 24646, 300, 307, 588, 2531, 281, 264, 7372, 300, 22613, 12270, 11, 51258, 51258, 457, 309, 4960, 9573, 19440, 833, 264, 13376, 13, 51368, 51368, 316, 688, 295, 721, 393, 312, 829, 1214, 1228, 300, 7372, 293, 309, 311, 588, 2199, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.19990049264369866, "compression_ratio": 1.6333333333333333, "no_caption_prob": 1.5933439499349333e-05}, {"id": 675, "seek": 284356, "start": 2861.44, "end": 2863.64, "text": " but it uses WebGL under the hood.", "tokens": [50364, 407, 337, 1365, 11, 8566, 9145, 296, 5179, 11, 702, 23331, 307, 445, 352, 453, 13, 50658, 50658, 634, 12270, 257, 9573, 19440, 24646, 13, 50912, 50912, 634, 12270, 257, 9573, 19440, 24646, 300, 307, 588, 2531, 281, 264, 7372, 300, 22613, 12270, 11, 51258, 51258, 457, 309, 4960, 9573, 19440, 833, 264, 13376, 13, 51368, 51368, 316, 688, 295, 721, 393, 312, 829, 1214, 1228, 300, 7372, 293, 309, 311, 588, 2199, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.19990049264369866, "compression_ratio": 1.6333333333333333, "no_caption_prob": 1.5933439499349333e-05}, {"id": 676, "seek": 284356, "start": 2863.64, "end": 2868.56, "text": " A lot of things can be put together using that package and it's very simple.", "tokens": [50364, 407, 337, 1365, 11, 8566, 9145, 296, 5179, 11, 702, 23331, 307, 445, 352, 453, 13, 50658, 50658, 634, 12270, 257, 9573, 19440, 24646, 13, 50912, 50912, 634, 12270, 257, 9573, 19440, 24646, 300, 307, 588, 2531, 281, 264, 7372, 300, 22613, 12270, 11, 51258, 51258, 457, 309, 4960, 9573, 19440, 833, 264, 13376, 13, 51368, 51368, 316, 688, 295, 721, 393, 312, 829, 1214, 1228, 300, 7372, 293, 309, 311, 588, 2199, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.19990049264369866, "compression_ratio": 1.6333333333333333, "no_caption_prob": 1.5933439499349333e-05}, {"id": 677, "seek": 286856, "start": 2868.56, "end": 2875.08, "text": " Another thing that I would recommend to check is Ian's Elm 3D scene and all the examples", "tokens": [50364, 3996, 551, 300, 286, 576, 2748, 281, 1520, 307, 19595, 311, 2699, 76, 805, 35, 4145, 293, 439, 264, 5110, 50690, 50690, 456, 570, 309, 311, 257, 1090, 1496, 9362, 13, 50910, 50910, 509, 500, 380, 643, 281, 2028, 365, 5744, 433, 13, 51017, 51017, 509, 393, 829, 1214, 805, 35, 721, 1228, 702, 15148, 13, 51248, 51248, 3153, 11, 1627, 13, 51330, 51330, 759, 291, 1116, 2748, 1580, 281, 722, 365, 805, 35, 294, 2699, 76, 11, 291, 576, 2748, 8568, 484, 2699, 76, 51594, 51594, 805, 35, 4145, 420, 576, 291, 2748, 552, 281, 764, 2699, 76, 9573, 19440, 281, 722, 365, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1544914770563808, "compression_ratio": 1.6508620689655173, "no_caption_prob": 6.603077054023743e-05}, {"id": 678, "seek": 286856, "start": 2875.08, "end": 2879.48, "text": " there because it's a high level API.", "tokens": [50364, 3996, 551, 300, 286, 576, 2748, 281, 1520, 307, 19595, 311, 2699, 76, 805, 35, 4145, 293, 439, 264, 5110, 50690, 50690, 456, 570, 309, 311, 257, 1090, 1496, 9362, 13, 50910, 50910, 509, 500, 380, 643, 281, 2028, 365, 5744, 433, 13, 51017, 51017, 509, 393, 829, 1214, 805, 35, 721, 1228, 702, 15148, 13, 51248, 51248, 3153, 11, 1627, 13, 51330, 51330, 759, 291, 1116, 2748, 1580, 281, 722, 365, 805, 35, 294, 2699, 76, 11, 291, 576, 2748, 8568, 484, 2699, 76, 51594, 51594, 805, 35, 4145, 420, 576, 291, 2748, 552, 281, 764, 2699, 76, 9573, 19440, 281, 722, 365, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1544914770563808, "compression_ratio": 1.6508620689655173, "no_caption_prob": 6.603077054023743e-05}, {"id": 679, "seek": 286856, "start": 2879.48, "end": 2881.62, "text": " You don't need to deal with shaders.", "tokens": [50364, 3996, 551, 300, 286, 576, 2748, 281, 1520, 307, 19595, 311, 2699, 76, 805, 35, 4145, 293, 439, 264, 5110, 50690, 50690, 456, 570, 309, 311, 257, 1090, 1496, 9362, 13, 50910, 50910, 509, 500, 380, 643, 281, 2028, 365, 5744, 433, 13, 51017, 51017, 509, 393, 829, 1214, 805, 35, 721, 1228, 702, 15148, 13, 51248, 51248, 3153, 11, 1627, 13, 51330, 51330, 759, 291, 1116, 2748, 1580, 281, 722, 365, 805, 35, 294, 2699, 76, 11, 291, 576, 2748, 8568, 484, 2699, 76, 51594, 51594, 805, 35, 4145, 420, 576, 291, 2748, 552, 281, 764, 2699, 76, 9573, 19440, 281, 722, 365, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1544914770563808, "compression_ratio": 1.6508620689655173, "no_caption_prob": 6.603077054023743e-05}, {"id": 680, "seek": 286856, "start": 2881.62, "end": 2886.24, "text": " You can put together 3D things using his libraries.", "tokens": [50364, 3996, 551, 300, 286, 576, 2748, 281, 1520, 307, 19595, 311, 2699, 76, 805, 35, 4145, 293, 439, 264, 5110, 50690, 50690, 456, 570, 309, 311, 257, 1090, 1496, 9362, 13, 50910, 50910, 509, 500, 380, 643, 281, 2028, 365, 5744, 433, 13, 51017, 51017, 509, 393, 829, 1214, 805, 35, 721, 1228, 702, 15148, 13, 51248, 51248, 3153, 11, 1627, 13, 51330, 51330, 759, 291, 1116, 2748, 1580, 281, 722, 365, 805, 35, 294, 2699, 76, 11, 291, 576, 2748, 8568, 484, 2699, 76, 51594, 51594, 805, 35, 4145, 420, 576, 291, 2748, 552, 281, 764, 2699, 76, 9573, 19440, 281, 722, 365, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1544914770563808, "compression_ratio": 1.6508620689655173, "no_caption_prob": 6.603077054023743e-05}, {"id": 681, "seek": 286856, "start": 2886.24, "end": 2887.88, "text": " Wow, cool.", "tokens": [50364, 3996, 551, 300, 286, 576, 2748, 281, 1520, 307, 19595, 311, 2699, 76, 805, 35, 4145, 293, 439, 264, 5110, 50690, 50690, 456, 570, 309, 311, 257, 1090, 1496, 9362, 13, 50910, 50910, 509, 500, 380, 643, 281, 2028, 365, 5744, 433, 13, 51017, 51017, 509, 393, 829, 1214, 805, 35, 721, 1228, 702, 15148, 13, 51248, 51248, 3153, 11, 1627, 13, 51330, 51330, 759, 291, 1116, 2748, 1580, 281, 722, 365, 805, 35, 294, 2699, 76, 11, 291, 576, 2748, 8568, 484, 2699, 76, 51594, 51594, 805, 35, 4145, 420, 576, 291, 2748, 552, 281, 764, 2699, 76, 9573, 19440, 281, 722, 365, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1544914770563808, "compression_ratio": 1.6508620689655173, "no_caption_prob": 6.603077054023743e-05}, {"id": 682, "seek": 286856, "start": 2887.88, "end": 2893.16, "text": " If you'd recommend someone to start with 3D in Elm, you would recommend checking out Elm", "tokens": [50364, 3996, 551, 300, 286, 576, 2748, 281, 1520, 307, 19595, 311, 2699, 76, 805, 35, 4145, 293, 439, 264, 5110, 50690, 50690, 456, 570, 309, 311, 257, 1090, 1496, 9362, 13, 50910, 50910, 509, 500, 380, 643, 281, 2028, 365, 5744, 433, 13, 51017, 51017, 509, 393, 829, 1214, 805, 35, 721, 1228, 702, 15148, 13, 51248, 51248, 3153, 11, 1627, 13, 51330, 51330, 759, 291, 1116, 2748, 1580, 281, 722, 365, 805, 35, 294, 2699, 76, 11, 291, 576, 2748, 8568, 484, 2699, 76, 51594, 51594, 805, 35, 4145, 420, 576, 291, 2748, 552, 281, 764, 2699, 76, 9573, 19440, 281, 722, 365, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1544914770563808, "compression_ratio": 1.6508620689655173, "no_caption_prob": 6.603077054023743e-05}, {"id": 683, "seek": 286856, "start": 2893.16, "end": 2898.04, "text": " 3D scene or would you recommend them to use Elm WebGL to start with?", "tokens": [50364, 3996, 551, 300, 286, 576, 2748, 281, 1520, 307, 19595, 311, 2699, 76, 805, 35, 4145, 293, 439, 264, 5110, 50690, 50690, 456, 570, 309, 311, 257, 1090, 1496, 9362, 13, 50910, 50910, 509, 500, 380, 643, 281, 2028, 365, 5744, 433, 13, 51017, 51017, 509, 393, 829, 1214, 805, 35, 721, 1228, 702, 15148, 13, 51248, 51248, 3153, 11, 1627, 13, 51330, 51330, 759, 291, 1116, 2748, 1580, 281, 722, 365, 805, 35, 294, 2699, 76, 11, 291, 576, 2748, 8568, 484, 2699, 76, 51594, 51594, 805, 35, 4145, 420, 576, 291, 2748, 552, 281, 764, 2699, 76, 9573, 19440, 281, 722, 365, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1544914770563808, "compression_ratio": 1.6508620689655173, "no_caption_prob": 6.603077054023743e-05}, {"id": 684, "seek": 289804, "start": 2898.04, "end": 2900.72, "text": " I think you can start with Elm 3D scene.", "tokens": [50364, 286, 519, 291, 393, 722, 365, 2699, 76, 805, 35, 4145, 13, 50498, 50498, 286, 519, 309, 575, 257, 1277, 2753, 9362, 11, 457, 309, 534, 5946, 322, 1968, 2539, 264, 14688, 611, 50852, 50852, 575, 1080, 14906, 570, 291, 434, 544, 11358, 294, 437, 291, 393, 360, 13, 51124, 51124, 583, 498, 291, 362, 257, 764, 1389, 300, 11317, 281, 437, 311, 1944, 294, 2699, 76, 805, 35, 4145, 11, 550, 300, 311, 516, 51386, 51386, 281, 312, 364, 3571, 3100, 13, 51496, 51496, 3996, 1716, 300, 286, 1415, 281, 5078, 307, 257, 1716, 490, 5041, 296, 7354, 304, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10515477316720145, "compression_ratio": 1.5691056910569106, "no_caption_prob": 1.202667954203207e-05}, {"id": 685, "seek": 289804, "start": 2900.72, "end": 2907.8, "text": " I think it has a friendlier API, but it really depends on whether learning the basics also", "tokens": [50364, 286, 519, 291, 393, 722, 365, 2699, 76, 805, 35, 4145, 13, 50498, 50498, 286, 519, 309, 575, 257, 1277, 2753, 9362, 11, 457, 309, 534, 5946, 322, 1968, 2539, 264, 14688, 611, 50852, 50852, 575, 1080, 14906, 570, 291, 434, 544, 11358, 294, 437, 291, 393, 360, 13, 51124, 51124, 583, 498, 291, 362, 257, 764, 1389, 300, 11317, 281, 437, 311, 1944, 294, 2699, 76, 805, 35, 4145, 11, 550, 300, 311, 516, 51386, 51386, 281, 312, 364, 3571, 3100, 13, 51496, 51496, 3996, 1716, 300, 286, 1415, 281, 5078, 307, 257, 1716, 490, 5041, 296, 7354, 304, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10515477316720145, "compression_ratio": 1.5691056910569106, "no_caption_prob": 1.202667954203207e-05}, {"id": 686, "seek": 289804, "start": 2907.8, "end": 2913.24, "text": " has its advantages because you're more flexible in what you can do.", "tokens": [50364, 286, 519, 291, 393, 722, 365, 2699, 76, 805, 35, 4145, 13, 50498, 50498, 286, 519, 309, 575, 257, 1277, 2753, 9362, 11, 457, 309, 534, 5946, 322, 1968, 2539, 264, 14688, 611, 50852, 50852, 575, 1080, 14906, 570, 291, 434, 544, 11358, 294, 437, 291, 393, 360, 13, 51124, 51124, 583, 498, 291, 362, 257, 764, 1389, 300, 11317, 281, 437, 311, 1944, 294, 2699, 76, 805, 35, 4145, 11, 550, 300, 311, 516, 51386, 51386, 281, 312, 364, 3571, 3100, 13, 51496, 51496, 3996, 1716, 300, 286, 1415, 281, 5078, 307, 257, 1716, 490, 5041, 296, 7354, 304, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10515477316720145, "compression_ratio": 1.5691056910569106, "no_caption_prob": 1.202667954203207e-05}, {"id": 687, "seek": 289804, "start": 2913.24, "end": 2918.48, "text": " But if you have a use case that maps to what's possible in Elm 3D scene, then that's going", "tokens": [50364, 286, 519, 291, 393, 722, 365, 2699, 76, 805, 35, 4145, 13, 50498, 50498, 286, 519, 309, 575, 257, 1277, 2753, 9362, 11, 457, 309, 534, 5946, 322, 1968, 2539, 264, 14688, 611, 50852, 50852, 575, 1080, 14906, 570, 291, 434, 544, 11358, 294, 437, 291, 393, 360, 13, 51124, 51124, 583, 498, 291, 362, 257, 764, 1389, 300, 11317, 281, 437, 311, 1944, 294, 2699, 76, 805, 35, 4145, 11, 550, 300, 311, 516, 51386, 51386, 281, 312, 364, 3571, 3100, 13, 51496, 51496, 3996, 1716, 300, 286, 1415, 281, 5078, 307, 257, 1716, 490, 5041, 296, 7354, 304, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10515477316720145, "compression_ratio": 1.5691056910569106, "no_caption_prob": 1.202667954203207e-05}, {"id": 688, "seek": 289804, "start": 2918.48, "end": 2920.68, "text": " to be an easier path.", "tokens": [50364, 286, 519, 291, 393, 722, 365, 2699, 76, 805, 35, 4145, 13, 50498, 50498, 286, 519, 309, 575, 257, 1277, 2753, 9362, 11, 457, 309, 534, 5946, 322, 1968, 2539, 264, 14688, 611, 50852, 50852, 575, 1080, 14906, 570, 291, 434, 544, 11358, 294, 437, 291, 393, 360, 13, 51124, 51124, 583, 498, 291, 362, 257, 764, 1389, 300, 11317, 281, 437, 311, 1944, 294, 2699, 76, 805, 35, 4145, 11, 550, 300, 311, 516, 51386, 51386, 281, 312, 364, 3571, 3100, 13, 51496, 51496, 3996, 1716, 300, 286, 1415, 281, 5078, 307, 257, 1716, 490, 5041, 296, 7354, 304, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10515477316720145, "compression_ratio": 1.5691056910569106, "no_caption_prob": 1.202667954203207e-05}, {"id": 689, "seek": 289804, "start": 2920.68, "end": 2926.6, "text": " Another project that I wanted to highlight is a project from Tomas Latal.", "tokens": [50364, 286, 519, 291, 393, 722, 365, 2699, 76, 805, 35, 4145, 13, 50498, 50498, 286, 519, 309, 575, 257, 1277, 2753, 9362, 11, 457, 309, 534, 5946, 322, 1968, 2539, 264, 14688, 611, 50852, 50852, 575, 1080, 14906, 570, 291, 434, 544, 11358, 294, 437, 291, 393, 360, 13, 51124, 51124, 583, 498, 291, 362, 257, 764, 1389, 300, 11317, 281, 437, 311, 1944, 294, 2699, 76, 805, 35, 4145, 11, 550, 300, 311, 516, 51386, 51386, 281, 312, 364, 3571, 3100, 13, 51496, 51496, 3996, 1716, 300, 286, 1415, 281, 5078, 307, 257, 1716, 490, 5041, 296, 7354, 304, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.10515477316720145, "compression_ratio": 1.5691056910569106, "no_caption_prob": 1.202667954203207e-05}, {"id": 690, "seek": 292660, "start": 2926.6, "end": 2929.04, "text": " I think he just recently made it public.", "tokens": [50364, 286, 519, 415, 445, 3938, 1027, 309, 1908, 13, 50486, 50486, 467, 311, 2699, 76, 9460, 38, 13, 50566, 50566, 9460, 38, 7382, 337, 30223, 5100, 18426, 13, 50780, 50780, 708, 341, 7372, 4045, 291, 307, 291, 393, 7690, 805, 35, 6565, 1228, 28540, 805, 35, 6565, 293, 51118, 51118, 23351, 28499, 7705, 1296, 552, 13, 51238, 51238, 467, 311, 588, 2440, 10232, 13, 51392, 51392, 467, 311, 589, 294, 4205, 11, 457, 456, 366, 512, 534, 1627, 5110, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.24100605646769205, "compression_ratio": 1.4669811320754718, "no_caption_prob": 2.795899308694061e-05}, {"id": 691, "seek": 292660, "start": 2929.04, "end": 2930.64, "text": " It's Elm CSG.", "tokens": [50364, 286, 519, 415, 445, 3938, 1027, 309, 1908, 13, 50486, 50486, 467, 311, 2699, 76, 9460, 38, 13, 50566, 50566, 9460, 38, 7382, 337, 30223, 5100, 18426, 13, 50780, 50780, 708, 341, 7372, 4045, 291, 307, 291, 393, 7690, 805, 35, 6565, 1228, 28540, 805, 35, 6565, 293, 51118, 51118, 23351, 28499, 7705, 1296, 552, 13, 51238, 51238, 467, 311, 588, 2440, 10232, 13, 51392, 51392, 467, 311, 589, 294, 4205, 11, 457, 456, 366, 512, 534, 1627, 5110, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.24100605646769205, "compression_ratio": 1.4669811320754718, "no_caption_prob": 2.795899308694061e-05}, {"id": 692, "seek": 292660, "start": 2930.64, "end": 2934.92, "text": " CSG stands for constructive solid geometry.", "tokens": [50364, 286, 519, 415, 445, 3938, 1027, 309, 1908, 13, 50486, 50486, 467, 311, 2699, 76, 9460, 38, 13, 50566, 50566, 9460, 38, 7382, 337, 30223, 5100, 18426, 13, 50780, 50780, 708, 341, 7372, 4045, 291, 307, 291, 393, 7690, 805, 35, 6565, 1228, 28540, 805, 35, 6565, 293, 51118, 51118, 23351, 28499, 7705, 1296, 552, 13, 51238, 51238, 467, 311, 588, 2440, 10232, 13, 51392, 51392, 467, 311, 589, 294, 4205, 11, 457, 456, 366, 512, 534, 1627, 5110, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.24100605646769205, "compression_ratio": 1.4669811320754718, "no_caption_prob": 2.795899308694061e-05}, {"id": 693, "seek": 292660, "start": 2934.92, "end": 2941.68, "text": " What this package allows you is you can construct 3D objects using primitive 3D objects and", "tokens": [50364, 286, 519, 415, 445, 3938, 1027, 309, 1908, 13, 50486, 50486, 467, 311, 2699, 76, 9460, 38, 13, 50566, 50566, 9460, 38, 7382, 337, 30223, 5100, 18426, 13, 50780, 50780, 708, 341, 7372, 4045, 291, 307, 291, 393, 7690, 805, 35, 6565, 1228, 28540, 805, 35, 6565, 293, 51118, 51118, 23351, 28499, 7705, 1296, 552, 13, 51238, 51238, 467, 311, 588, 2440, 10232, 13, 51392, 51392, 467, 311, 589, 294, 4205, 11, 457, 456, 366, 512, 534, 1627, 5110, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.24100605646769205, "compression_ratio": 1.4669811320754718, "no_caption_prob": 2.795899308694061e-05}, {"id": 694, "seek": 292660, "start": 2941.68, "end": 2944.08, "text": " Boolean operations between them.", "tokens": [50364, 286, 519, 415, 445, 3938, 1027, 309, 1908, 13, 50486, 50486, 467, 311, 2699, 76, 9460, 38, 13, 50566, 50566, 9460, 38, 7382, 337, 30223, 5100, 18426, 13, 50780, 50780, 708, 341, 7372, 4045, 291, 307, 291, 393, 7690, 805, 35, 6565, 1228, 28540, 805, 35, 6565, 293, 51118, 51118, 23351, 28499, 7705, 1296, 552, 13, 51238, 51238, 467, 311, 588, 2440, 10232, 13, 51392, 51392, 467, 311, 589, 294, 4205, 11, 457, 456, 366, 512, 534, 1627, 5110, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.24100605646769205, "compression_ratio": 1.4669811320754718, "no_caption_prob": 2.795899308694061e-05}, {"id": 695, "seek": 292660, "start": 2944.08, "end": 2947.16, "text": " It's very early stages.", "tokens": [50364, 286, 519, 415, 445, 3938, 1027, 309, 1908, 13, 50486, 50486, 467, 311, 2699, 76, 9460, 38, 13, 50566, 50566, 9460, 38, 7382, 337, 30223, 5100, 18426, 13, 50780, 50780, 708, 341, 7372, 4045, 291, 307, 291, 393, 7690, 805, 35, 6565, 1228, 28540, 805, 35, 6565, 293, 51118, 51118, 23351, 28499, 7705, 1296, 552, 13, 51238, 51238, 467, 311, 588, 2440, 10232, 13, 51392, 51392, 467, 311, 589, 294, 4205, 11, 457, 456, 366, 512, 534, 1627, 5110, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.24100605646769205, "compression_ratio": 1.4669811320754718, "no_caption_prob": 2.795899308694061e-05}, {"id": 696, "seek": 292660, "start": 2947.16, "end": 2951.3199999999997, "text": " It's work in progress, but there are some really cool examples.", "tokens": [50364, 286, 519, 415, 445, 3938, 1027, 309, 1908, 13, 50486, 50486, 467, 311, 2699, 76, 9460, 38, 13, 50566, 50566, 9460, 38, 7382, 337, 30223, 5100, 18426, 13, 50780, 50780, 708, 341, 7372, 4045, 291, 307, 291, 393, 7690, 805, 35, 6565, 1228, 28540, 805, 35, 6565, 293, 51118, 51118, 23351, 28499, 7705, 1296, 552, 13, 51238, 51238, 467, 311, 588, 2440, 10232, 13, 51392, 51392, 467, 311, 589, 294, 4205, 11, 457, 456, 366, 512, 534, 1627, 5110, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.24100605646769205, "compression_ratio": 1.4669811320754718, "no_caption_prob": 2.795899308694061e-05}, {"id": 697, "seek": 295132, "start": 2951.32, "end": 2957.92, "text": " You can make a chess piece with it using some cylinders.", "tokens": [50364, 509, 393, 652, 257, 24122, 2522, 365, 309, 1228, 512, 42166, 13, 50694, 50694, 467, 311, 3571, 281, 1884, 805, 35, 10854, 1228, 341, 3170, 813, 3579, 760, 420, 39969, 21056, 51006, 51006, 1803, 13, 51116, 51116, 759, 291, 362, 257, 17884, 11, 257, 16687, 11, 257, 13728, 11, 550, 291, 393, 16390, 552, 420, 1594, 552, 293, 51528, 51528, 550, 5258, 1071, 3909, 1228, 729, 7705, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15589380264282227, "compression_ratio": 1.5544041450777202, "no_caption_prob": 3.3729858841979876e-05}, {"id": 698, "seek": 295132, "start": 2957.92, "end": 2964.1600000000003, "text": " It's easier to create 3D shapes using this method than writing down or constructing coordinates", "tokens": [50364, 509, 393, 652, 257, 24122, 2522, 365, 309, 1228, 512, 42166, 13, 50694, 50694, 467, 311, 3571, 281, 1884, 805, 35, 10854, 1228, 341, 3170, 813, 3579, 760, 420, 39969, 21056, 51006, 51006, 1803, 13, 51116, 51116, 759, 291, 362, 257, 17884, 11, 257, 16687, 11, 257, 13728, 11, 550, 291, 393, 16390, 552, 420, 1594, 552, 293, 51528, 51528, 550, 5258, 1071, 3909, 1228, 729, 7705, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15589380264282227, "compression_ratio": 1.5544041450777202, "no_caption_prob": 3.3729858841979876e-05}, {"id": 699, "seek": 295132, "start": 2964.1600000000003, "end": 2966.36, "text": " yourself.", "tokens": [50364, 509, 393, 652, 257, 24122, 2522, 365, 309, 1228, 512, 42166, 13, 50694, 50694, 467, 311, 3571, 281, 1884, 805, 35, 10854, 1228, 341, 3170, 813, 3579, 760, 420, 39969, 21056, 51006, 51006, 1803, 13, 51116, 51116, 759, 291, 362, 257, 17884, 11, 257, 16687, 11, 257, 13728, 11, 550, 291, 393, 16390, 552, 420, 1594, 552, 293, 51528, 51528, 550, 5258, 1071, 3909, 1228, 729, 7705, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15589380264282227, "compression_ratio": 1.5544041450777202, "no_caption_prob": 3.3729858841979876e-05}, {"id": 700, "seek": 295132, "start": 2966.36, "end": 2974.6000000000004, "text": " If you have a cylinder, a sphere, a cube, then you can subtract them or group them and", "tokens": [50364, 509, 393, 652, 257, 24122, 2522, 365, 309, 1228, 512, 42166, 13, 50694, 50694, 467, 311, 3571, 281, 1884, 805, 35, 10854, 1228, 341, 3170, 813, 3579, 760, 420, 39969, 21056, 51006, 51006, 1803, 13, 51116, 51116, 759, 291, 362, 257, 17884, 11, 257, 16687, 11, 257, 13728, 11, 550, 291, 393, 16390, 552, 420, 1594, 552, 293, 51528, 51528, 550, 5258, 1071, 3909, 1228, 729, 7705, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15589380264282227, "compression_ratio": 1.5544041450777202, "no_caption_prob": 3.3729858841979876e-05}, {"id": 701, "seek": 295132, "start": 2974.6000000000004, "end": 2979.32, "text": " then produce another shape using those operations.", "tokens": [50364, 509, 393, 652, 257, 24122, 2522, 365, 309, 1228, 512, 42166, 13, 50694, 50694, 467, 311, 3571, 281, 1884, 805, 35, 10854, 1228, 341, 3170, 813, 3579, 760, 420, 39969, 21056, 51006, 51006, 1803, 13, 51116, 51116, 759, 291, 362, 257, 17884, 11, 257, 16687, 11, 257, 13728, 11, 550, 291, 393, 16390, 552, 420, 1594, 552, 293, 51528, 51528, 550, 5258, 1071, 3909, 1228, 729, 7705, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15589380264282227, "compression_ratio": 1.5544041450777202, "no_caption_prob": 3.3729858841979876e-05}, {"id": 702, "seek": 297932, "start": 2979.32, "end": 2984.52, "text": " Because you don't have those shapes in WebGL, everything is a triangle.", "tokens": [50364, 1436, 291, 500, 380, 362, 729, 10854, 294, 9573, 19440, 11, 1203, 307, 257, 13369, 13, 50624, 50624, 821, 366, 572, 10854, 294, 9573, 19440, 13, 50756, 50756, 821, 366, 10854, 294, 19595, 311, 7372, 13, 50948, 50948, 821, 307, 257, 1716, 300, 286, 2942, 300, 6653, 291, 3677, 35538, 41, 7098, 13, 51216, 51216, 509, 393, 2642, 721, 294, 2177, 3216, 1228, 805, 35, 11837, 4722, 11, 411, 805, 35, 1715, 4722, 11, 293, 550, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20681509971618653, "compression_ratio": 1.5502645502645502, "no_caption_prob": 7.721204019617289e-05}, {"id": 703, "seek": 297932, "start": 2984.52, "end": 2987.1600000000003, "text": " There are no shapes in WebGL.", "tokens": [50364, 1436, 291, 500, 380, 362, 729, 10854, 294, 9573, 19440, 11, 1203, 307, 257, 13369, 13, 50624, 50624, 821, 366, 572, 10854, 294, 9573, 19440, 13, 50756, 50756, 821, 366, 10854, 294, 19595, 311, 7372, 13, 50948, 50948, 821, 307, 257, 1716, 300, 286, 2942, 300, 6653, 291, 3677, 35538, 41, 7098, 13, 51216, 51216, 509, 393, 2642, 721, 294, 2177, 3216, 1228, 805, 35, 11837, 4722, 11, 411, 805, 35, 1715, 4722, 11, 293, 550, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20681509971618653, "compression_ratio": 1.5502645502645502, "no_caption_prob": 7.721204019617289e-05}, {"id": 704, "seek": 297932, "start": 2987.1600000000003, "end": 2991.0, "text": " There are shapes in Ian's package.", "tokens": [50364, 1436, 291, 500, 380, 362, 729, 10854, 294, 9573, 19440, 11, 1203, 307, 257, 13369, 13, 50624, 50624, 821, 366, 572, 10854, 294, 9573, 19440, 13, 50756, 50756, 821, 366, 10854, 294, 19595, 311, 7372, 13, 50948, 50948, 821, 307, 257, 1716, 300, 286, 2942, 300, 6653, 291, 3677, 35538, 41, 7098, 13, 51216, 51216, 509, 393, 2642, 721, 294, 2177, 3216, 1228, 805, 35, 11837, 4722, 11, 411, 805, 35, 1715, 4722, 11, 293, 550, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20681509971618653, "compression_ratio": 1.5502645502645502, "no_caption_prob": 7.721204019617289e-05}, {"id": 705, "seek": 297932, "start": 2991.0, "end": 2996.36, "text": " There is a project that I created that lets you load OBJ files.", "tokens": [50364, 1436, 291, 500, 380, 362, 729, 10854, 294, 9573, 19440, 11, 1203, 307, 257, 13369, 13, 50624, 50624, 821, 366, 572, 10854, 294, 9573, 19440, 13, 50756, 50756, 821, 366, 10854, 294, 19595, 311, 7372, 13, 50948, 50948, 821, 307, 257, 1716, 300, 286, 2942, 300, 6653, 291, 3677, 35538, 41, 7098, 13, 51216, 51216, 509, 393, 2642, 721, 294, 2177, 3216, 1228, 805, 35, 11837, 4722, 11, 411, 805, 35, 1715, 4722, 11, 293, 550, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20681509971618653, "compression_ratio": 1.5502645502645502, "no_caption_prob": 7.721204019617289e-05}, {"id": 706, "seek": 297932, "start": 2996.36, "end": 3006.84, "text": " You can draw things in Blender using 3D graphics software, like 3D design software, and then", "tokens": [50364, 1436, 291, 500, 380, 362, 729, 10854, 294, 9573, 19440, 11, 1203, 307, 257, 13369, 13, 50624, 50624, 821, 366, 572, 10854, 294, 9573, 19440, 13, 50756, 50756, 821, 366, 10854, 294, 19595, 311, 7372, 13, 50948, 50948, 821, 307, 257, 1716, 300, 286, 2942, 300, 6653, 291, 3677, 35538, 41, 7098, 13, 51216, 51216, 509, 393, 2642, 721, 294, 2177, 3216, 1228, 805, 35, 11837, 4722, 11, 411, 805, 35, 1715, 4722, 11, 293, 550, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.20681509971618653, "compression_ratio": 1.5502645502645502, "no_caption_prob": 7.721204019617289e-05}, {"id": 707, "seek": 300684, "start": 3006.84, "end": 3011.6800000000003, "text": " output an OBJ file and then load it into Elm.", "tokens": [50364, 5598, 364, 35538, 41, 3991, 293, 550, 3677, 309, 666, 2699, 76, 13, 50606, 50606, 663, 9870, 257, 688, 295, 661, 12178, 337, 12915, 13, 50964, 50964, 509, 393, 5940, 428, 1216, 9769, 293, 550, 3677, 552, 666, 2699, 76, 13, 51212, 51212, 11142, 18160, 11, 979, 378, 433, 11, 293, 1507, 411, 300, 30, 51424, 51424], "temperature": 0.0, "avg_logprob": -0.14214198872194453, "compression_ratio": 1.3986486486486487, "no_caption_prob": 6.920730083948001e-05}, {"id": 708, "seek": 300684, "start": 3011.6800000000003, "end": 3018.84, "text": " That opens a lot of other possibilities for creativity.", "tokens": [50364, 5598, 364, 35538, 41, 3991, 293, 550, 3677, 309, 666, 2699, 76, 13, 50606, 50606, 663, 9870, 257, 688, 295, 661, 12178, 337, 12915, 13, 50964, 50964, 509, 393, 5940, 428, 1216, 9769, 293, 550, 3677, 552, 666, 2699, 76, 13, 51212, 51212, 11142, 18160, 11, 979, 378, 433, 11, 293, 1507, 411, 300, 30, 51424, 51424], "temperature": 0.0, "avg_logprob": -0.14214198872194453, "compression_ratio": 1.3986486486486487, "no_caption_prob": 6.920730083948001e-05}, {"id": 709, "seek": 300684, "start": 3018.84, "end": 3023.8, "text": " You can prepare your game assets and then load them into Elm.", "tokens": [50364, 5598, 364, 35538, 41, 3991, 293, 550, 3677, 309, 666, 2699, 76, 13, 50606, 50606, 663, 9870, 257, 688, 295, 661, 12178, 337, 12915, 13, 50964, 50964, 509, 393, 5940, 428, 1216, 9769, 293, 550, 3677, 552, 666, 2699, 76, 13, 51212, 51212, 11142, 18160, 11, 979, 378, 433, 11, 293, 1507, 411, 300, 30, 51424, 51424], "temperature": 0.0, "avg_logprob": -0.14214198872194453, "compression_ratio": 1.3986486486486487, "no_caption_prob": 6.920730083948001e-05}, {"id": 710, "seek": 300684, "start": 3023.8, "end": 3028.04, "text": " Using ports, decoders, and stuff like that?", "tokens": [50364, 5598, 364, 35538, 41, 3991, 293, 550, 3677, 309, 666, 2699, 76, 13, 50606, 50606, 663, 9870, 257, 688, 295, 661, 12178, 337, 12915, 13, 50964, 50964, 509, 393, 5940, 428, 1216, 9769, 293, 550, 3677, 552, 666, 2699, 76, 13, 51212, 51212, 11142, 18160, 11, 979, 378, 433, 11, 293, 1507, 411, 300, 30, 51424, 51424], "temperature": 0.0, "avg_logprob": -0.14214198872194453, "compression_ratio": 1.3986486486486487, "no_caption_prob": 6.920730083948001e-05}, {"id": 711, "seek": 302804, "start": 3028.04, "end": 3038.32, "text": " It comes with this package, what is it called, an Elm HTTP plugin or this decoder.", "tokens": [50364, 467, 1487, 365, 341, 7372, 11, 437, 307, 309, 1219, 11, 364, 2699, 76, 33283, 23407, 420, 341, 979, 19866, 13, 50878, 50878, 509, 393, 5452, 666, 2699, 76, 33283, 293, 309, 576, 3677, 293, 1320, 309, 281, 291, 382, 257, 38190, 17407, 11, 597, 51382, 51382, 307, 257, 2010, 300, 307, 8104, 294, 2699, 76, 805, 35, 4145, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.254655659198761, "compression_ratio": 1.422077922077922, "no_caption_prob": 6.705579289700836e-05}, {"id": 712, "seek": 302804, "start": 3038.32, "end": 3048.4, "text": " You can plug into Elm HTTP and it would load and pass it to you as a triangular mesh, which", "tokens": [50364, 467, 1487, 365, 341, 7372, 11, 437, 307, 309, 1219, 11, 364, 2699, 76, 33283, 23407, 420, 341, 979, 19866, 13, 50878, 50878, 509, 393, 5452, 666, 2699, 76, 33283, 293, 309, 576, 3677, 293, 1320, 309, 281, 291, 382, 257, 38190, 17407, 11, 597, 51382, 51382, 307, 257, 2010, 300, 307, 8104, 294, 2699, 76, 805, 35, 4145, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.254655659198761, "compression_ratio": 1.422077922077922, "no_caption_prob": 6.705579289700836e-05}, {"id": 713, "seek": 302804, "start": 3048.4, "end": 3054.2, "text": " is a type that is supported in Elm 3D scene.", "tokens": [50364, 467, 1487, 365, 341, 7372, 11, 437, 307, 309, 1219, 11, 364, 2699, 76, 33283, 23407, 420, 341, 979, 19866, 13, 50878, 50878, 509, 393, 5452, 666, 2699, 76, 33283, 293, 309, 576, 3677, 293, 1320, 309, 281, 291, 382, 257, 38190, 17407, 11, 597, 51382, 51382, 307, 257, 2010, 300, 307, 8104, 294, 2699, 76, 805, 35, 4145, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.254655659198761, "compression_ratio": 1.422077922077922, "no_caption_prob": 6.705579289700836e-05}, {"id": 714, "seek": 305420, "start": 3054.2, "end": 3059.3999999999996, "text": " You get it straight into the format that it expects and then you can render things using", "tokens": [50364, 509, 483, 309, 2997, 666, 264, 7877, 300, 309, 33280, 293, 550, 291, 393, 15529, 721, 1228, 50624, 50624, 19595, 311, 2699, 76, 805, 35, 4145, 13, 50752, 50752, 286, 362, 7140, 295, 5110, 411, 7440, 34468, 11, 337, 1365, 13, 51046, 51046, 663, 311, 3476, 13, 51096, 51096, 865, 11, 42076, 311, 38915, 6968, 2183, 307, 534, 1627, 365, 439, 613, 33788, 13, 51340, 51340, 3432, 820, 2138, 1520, 300, 484, 281, 483, 257, 2020, 295, 437, 561, 366, 884, 365, 51500, 51500, 341, 1507, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.16913145715063746, "compression_ratio": 1.5021645021645023, "no_caption_prob": 9.817982572712936e-06}, {"id": 715, "seek": 305420, "start": 3059.3999999999996, "end": 3061.96, "text": " Ian's Elm 3D scene.", "tokens": [50364, 509, 483, 309, 2997, 666, 264, 7877, 300, 309, 33280, 293, 550, 291, 393, 15529, 721, 1228, 50624, 50624, 19595, 311, 2699, 76, 805, 35, 4145, 13, 50752, 50752, 286, 362, 7140, 295, 5110, 411, 7440, 34468, 11, 337, 1365, 13, 51046, 51046, 663, 311, 3476, 13, 51096, 51096, 865, 11, 42076, 311, 38915, 6968, 2183, 307, 534, 1627, 365, 439, 613, 33788, 13, 51340, 51340, 3432, 820, 2138, 1520, 300, 484, 281, 483, 257, 2020, 295, 437, 561, 366, 884, 365, 51500, 51500, 341, 1507, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.16913145715063746, "compression_ratio": 1.5021645021645023, "no_caption_prob": 9.817982572712936e-06}, {"id": 716, "seek": 305420, "start": 3061.96, "end": 3067.8399999999997, "text": " I have plenty of examples like falling ducks, for example.", "tokens": [50364, 509, 483, 309, 2997, 666, 264, 7877, 300, 309, 33280, 293, 550, 291, 393, 15529, 721, 1228, 50624, 50624, 19595, 311, 2699, 76, 805, 35, 4145, 13, 50752, 50752, 286, 362, 7140, 295, 5110, 411, 7440, 34468, 11, 337, 1365, 13, 51046, 51046, 663, 311, 3476, 13, 51096, 51096, 865, 11, 42076, 311, 38915, 6968, 2183, 307, 534, 1627, 365, 439, 613, 33788, 13, 51340, 51340, 3432, 820, 2138, 1520, 300, 484, 281, 483, 257, 2020, 295, 437, 561, 366, 884, 365, 51500, 51500, 341, 1507, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.16913145715063746, "compression_ratio": 1.5021645021645023, "no_caption_prob": 9.817982572712936e-06}, {"id": 717, "seek": 305420, "start": 3067.8399999999997, "end": 3068.8399999999997, "text": " That's awesome.", "tokens": [50364, 509, 483, 309, 2997, 666, 264, 7877, 300, 309, 33280, 293, 550, 291, 393, 15529, 721, 1228, 50624, 50624, 19595, 311, 2699, 76, 805, 35, 4145, 13, 50752, 50752, 286, 362, 7140, 295, 5110, 411, 7440, 34468, 11, 337, 1365, 13, 51046, 51046, 663, 311, 3476, 13, 51096, 51096, 865, 11, 42076, 311, 38915, 6968, 2183, 307, 534, 1627, 365, 439, 613, 33788, 13, 51340, 51340, 3432, 820, 2138, 1520, 300, 484, 281, 483, 257, 2020, 295, 437, 561, 366, 884, 365, 51500, 51500, 341, 1507, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.16913145715063746, "compression_ratio": 1.5021645021645023, "no_caption_prob": 9.817982572712936e-06}, {"id": 718, "seek": 305420, "start": 3068.8399999999997, "end": 3073.72, "text": " Yeah, Luca's Medium blog post is really cool with all these demos.", "tokens": [50364, 509, 483, 309, 2997, 666, 264, 7877, 300, 309, 33280, 293, 550, 291, 393, 15529, 721, 1228, 50624, 50624, 19595, 311, 2699, 76, 805, 35, 4145, 13, 50752, 50752, 286, 362, 7140, 295, 5110, 411, 7440, 34468, 11, 337, 1365, 13, 51046, 51046, 663, 311, 3476, 13, 51096, 51096, 865, 11, 42076, 311, 38915, 6968, 2183, 307, 534, 1627, 365, 439, 613, 33788, 13, 51340, 51340, 3432, 820, 2138, 1520, 300, 484, 281, 483, 257, 2020, 295, 437, 561, 366, 884, 365, 51500, 51500, 341, 1507, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.16913145715063746, "compression_ratio": 1.5021645021645023, "no_caption_prob": 9.817982572712936e-06}, {"id": 719, "seek": 305420, "start": 3073.72, "end": 3076.9199999999996, "text": " People should definitely check that out to get a sense of what people are doing with", "tokens": [50364, 509, 483, 309, 2997, 666, 264, 7877, 300, 309, 33280, 293, 550, 291, 393, 15529, 721, 1228, 50624, 50624, 19595, 311, 2699, 76, 805, 35, 4145, 13, 50752, 50752, 286, 362, 7140, 295, 5110, 411, 7440, 34468, 11, 337, 1365, 13, 51046, 51046, 663, 311, 3476, 13, 51096, 51096, 865, 11, 42076, 311, 38915, 6968, 2183, 307, 534, 1627, 365, 439, 613, 33788, 13, 51340, 51340, 3432, 820, 2138, 1520, 300, 484, 281, 483, 257, 2020, 295, 437, 561, 366, 884, 365, 51500, 51500, 341, 1507, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.16913145715063746, "compression_ratio": 1.5021645021645023, "no_caption_prob": 9.817982572712936e-06}, {"id": 720, "seek": 305420, "start": 3076.9199999999996, "end": 3078.24, "text": " this stuff.", "tokens": [50364, 509, 483, 309, 2997, 666, 264, 7877, 300, 309, 33280, 293, 550, 291, 393, 15529, 721, 1228, 50624, 50624, 19595, 311, 2699, 76, 805, 35, 4145, 13, 50752, 50752, 286, 362, 7140, 295, 5110, 411, 7440, 34468, 11, 337, 1365, 13, 51046, 51046, 663, 311, 3476, 13, 51096, 51096, 865, 11, 42076, 311, 38915, 6968, 2183, 307, 534, 1627, 365, 439, 613, 33788, 13, 51340, 51340, 3432, 820, 2138, 1520, 300, 484, 281, 483, 257, 2020, 295, 437, 561, 366, 884, 365, 51500, 51500, 341, 1507, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.16913145715063746, "compression_ratio": 1.5021645021645023, "no_caption_prob": 9.817982572712936e-06}, {"id": 721, "seek": 307824, "start": 3078.24, "end": 3085.8399999999997, "text": " I remember when Elm Japan was announced, which is a little sad to talk about since it got", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 722, "seek": 307824, "start": 3085.8399999999997, "end": 3087.64, "text": " cancelled for obvious reasons.", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 723, "seek": 307824, "start": 3087.64, "end": 3088.64, "text": " Don't say it.", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 724, "seek": 307824, "start": 3088.64, "end": 3089.64, "text": " I know.", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 725, "seek": 307824, "start": 3089.64, "end": 3090.64, "text": " I know.", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 726, "seek": 307824, "start": 3090.64, "end": 3095.52, "text": " But I remember the website was so cool.", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 727, "seek": 307824, "start": 3095.52, "end": 3103.3599999999997, "text": " I wonder if it's just this little floating Tokyo city and cityscape with cranes moving", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 728, "seek": 307824, "start": 3103.3599999999997, "end": 3107.9599999999996, "text": " around and you can see it floating in the air.", "tokens": [50364, 286, 1604, 562, 2699, 76, 3367, 390, 7548, 11, 597, 307, 257, 707, 4227, 281, 751, 466, 1670, 309, 658, 50744, 50744, 25103, 337, 6322, 4112, 13, 50834, 50834, 1468, 380, 584, 309, 13, 50884, 50884, 286, 458, 13, 50934, 50934, 286, 458, 13, 50984, 50984, 583, 286, 1604, 264, 3144, 390, 370, 1627, 13, 51228, 51228, 286, 2441, 498, 309, 311, 445, 341, 707, 12607, 15147, 2307, 293, 2307, 82, 4747, 365, 941, 12779, 2684, 51620, 51620, 926, 293, 291, 393, 536, 309, 12607, 294, 264, 1988, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.20131299828970303, "compression_ratio": 1.5502392344497609, "no_caption_prob": 6.301249959506094e-05}, {"id": 729, "seek": 310796, "start": 3107.96, "end": 3111.04, "text": " I think you could change it from night to day or something like that.", "tokens": [50364, 286, 519, 291, 727, 1319, 309, 490, 1818, 281, 786, 420, 746, 411, 300, 13, 50518, 50518, 286, 959, 613, 35194, 707, 5056, 14455, 337, 7586, 12891, 293, 1507, 13, 50760, 50760, 467, 534, 1669, 721, 1019, 13, 50830, 50830, 286, 2441, 498, 300, 390, 2942, 365, 2177, 3216, 420, 365, 8936, 9573, 19440, 420, 437, 30, 51154, 51154, 1018, 1400, 382, 286, 1223, 11, 286, 519, 309, 311, 406, 534, 1228, 9573, 19440, 337, 341, 13, 51332, 51332, 286, 519, 309, 311, 1228, 31910, 33715, 13, 51432, 51432, 583, 437, 291, 393, 767, 360, 307, 291, 393, 15529, 805, 35, 721, 1228, 31910, 38, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10853135369040749, "compression_ratio": 1.6599190283400809, "no_caption_prob": 2.8855547498096712e-05}, {"id": 730, "seek": 310796, "start": 3111.04, "end": 3115.88, "text": " I love these delightful little visualizations for conference websites and stuff.", "tokens": [50364, 286, 519, 291, 727, 1319, 309, 490, 1818, 281, 786, 420, 746, 411, 300, 13, 50518, 50518, 286, 959, 613, 35194, 707, 5056, 14455, 337, 7586, 12891, 293, 1507, 13, 50760, 50760, 467, 534, 1669, 721, 1019, 13, 50830, 50830, 286, 2441, 498, 300, 390, 2942, 365, 2177, 3216, 420, 365, 8936, 9573, 19440, 420, 437, 30, 51154, 51154, 1018, 1400, 382, 286, 1223, 11, 286, 519, 309, 311, 406, 534, 1228, 9573, 19440, 337, 341, 13, 51332, 51332, 286, 519, 309, 311, 1228, 31910, 33715, 13, 51432, 51432, 583, 437, 291, 393, 767, 360, 307, 291, 393, 15529, 805, 35, 721, 1228, 31910, 38, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10853135369040749, "compression_ratio": 1.6599190283400809, "no_caption_prob": 2.8855547498096712e-05}, {"id": 731, "seek": 310796, "start": 3115.88, "end": 3117.28, "text": " It really makes things fun.", "tokens": [50364, 286, 519, 291, 727, 1319, 309, 490, 1818, 281, 786, 420, 746, 411, 300, 13, 50518, 50518, 286, 959, 613, 35194, 707, 5056, 14455, 337, 7586, 12891, 293, 1507, 13, 50760, 50760, 467, 534, 1669, 721, 1019, 13, 50830, 50830, 286, 2441, 498, 300, 390, 2942, 365, 2177, 3216, 420, 365, 8936, 9573, 19440, 420, 437, 30, 51154, 51154, 1018, 1400, 382, 286, 1223, 11, 286, 519, 309, 311, 406, 534, 1228, 9573, 19440, 337, 341, 13, 51332, 51332, 286, 519, 309, 311, 1228, 31910, 33715, 13, 51432, 51432, 583, 437, 291, 393, 767, 360, 307, 291, 393, 15529, 805, 35, 721, 1228, 31910, 38, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10853135369040749, "compression_ratio": 1.6599190283400809, "no_caption_prob": 2.8855547498096712e-05}, {"id": 732, "seek": 310796, "start": 3117.28, "end": 3123.76, "text": " I wonder if that was created with Blender or with raw WebGL or what?", "tokens": [50364, 286, 519, 291, 727, 1319, 309, 490, 1818, 281, 786, 420, 746, 411, 300, 13, 50518, 50518, 286, 959, 613, 35194, 707, 5056, 14455, 337, 7586, 12891, 293, 1507, 13, 50760, 50760, 467, 534, 1669, 721, 1019, 13, 50830, 50830, 286, 2441, 498, 300, 390, 2942, 365, 2177, 3216, 420, 365, 8936, 9573, 19440, 420, 437, 30, 51154, 51154, 1018, 1400, 382, 286, 1223, 11, 286, 519, 309, 311, 406, 534, 1228, 9573, 19440, 337, 341, 13, 51332, 51332, 286, 519, 309, 311, 1228, 31910, 33715, 13, 51432, 51432, 583, 437, 291, 393, 767, 360, 307, 291, 393, 15529, 805, 35, 721, 1228, 31910, 38, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10853135369040749, "compression_ratio": 1.6599190283400809, "no_caption_prob": 2.8855547498096712e-05}, {"id": 733, "seek": 310796, "start": 3123.76, "end": 3127.32, "text": " As far as I understand, I think it's not really using WebGL for this.", "tokens": [50364, 286, 519, 291, 727, 1319, 309, 490, 1818, 281, 786, 420, 746, 411, 300, 13, 50518, 50518, 286, 959, 613, 35194, 707, 5056, 14455, 337, 7586, 12891, 293, 1507, 13, 50760, 50760, 467, 534, 1669, 721, 1019, 13, 50830, 50830, 286, 2441, 498, 300, 390, 2942, 365, 2177, 3216, 420, 365, 8936, 9573, 19440, 420, 437, 30, 51154, 51154, 1018, 1400, 382, 286, 1223, 11, 286, 519, 309, 311, 406, 534, 1228, 9573, 19440, 337, 341, 13, 51332, 51332, 286, 519, 309, 311, 1228, 31910, 33715, 13, 51432, 51432, 583, 437, 291, 393, 767, 360, 307, 291, 393, 15529, 805, 35, 721, 1228, 31910, 38, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10853135369040749, "compression_ratio": 1.6599190283400809, "no_caption_prob": 2.8855547498096712e-05}, {"id": 734, "seek": 310796, "start": 3127.32, "end": 3129.32, "text": " I think it's using SVGs.", "tokens": [50364, 286, 519, 291, 727, 1319, 309, 490, 1818, 281, 786, 420, 746, 411, 300, 13, 50518, 50518, 286, 959, 613, 35194, 707, 5056, 14455, 337, 7586, 12891, 293, 1507, 13, 50760, 50760, 467, 534, 1669, 721, 1019, 13, 50830, 50830, 286, 2441, 498, 300, 390, 2942, 365, 2177, 3216, 420, 365, 8936, 9573, 19440, 420, 437, 30, 51154, 51154, 1018, 1400, 382, 286, 1223, 11, 286, 519, 309, 311, 406, 534, 1228, 9573, 19440, 337, 341, 13, 51332, 51332, 286, 519, 309, 311, 1228, 31910, 33715, 13, 51432, 51432, 583, 437, 291, 393, 767, 360, 307, 291, 393, 15529, 805, 35, 721, 1228, 31910, 38, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10853135369040749, "compression_ratio": 1.6599190283400809, "no_caption_prob": 2.8855547498096712e-05}, {"id": 735, "seek": 310796, "start": 3129.32, "end": 3136.28, "text": " But what you can actually do is you can render 3D things using SVG.", "tokens": [50364, 286, 519, 291, 727, 1319, 309, 490, 1818, 281, 786, 420, 746, 411, 300, 13, 50518, 50518, 286, 959, 613, 35194, 707, 5056, 14455, 337, 7586, 12891, 293, 1507, 13, 50760, 50760, 467, 534, 1669, 721, 1019, 13, 50830, 50830, 286, 2441, 498, 300, 390, 2942, 365, 2177, 3216, 420, 365, 8936, 9573, 19440, 420, 437, 30, 51154, 51154, 1018, 1400, 382, 286, 1223, 11, 286, 519, 309, 311, 406, 534, 1228, 9573, 19440, 337, 341, 13, 51332, 51332, 286, 519, 309, 311, 1228, 31910, 33715, 13, 51432, 51432, 583, 437, 291, 393, 767, 360, 307, 291, 393, 15529, 805, 35, 721, 1228, 31910, 38, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10853135369040749, "compression_ratio": 1.6599190283400809, "no_caption_prob": 2.8855547498096712e-05}, {"id": 736, "seek": 313628, "start": 3136.28, "end": 3141.0800000000004, "text": " You can basically do all the projections and all the coordinate transformations yourself", "tokens": [50364, 509, 393, 1936, 360, 439, 264, 32371, 293, 439, 264, 15670, 34852, 1803, 50604, 50604, 294, 341, 1389, 13, 50720, 50720, 821, 366, 17401, 300, 291, 393, 764, 294, 1668, 281, 360, 341, 1333, 295, 551, 13, 50930, 50930, 286, 519, 264, 2135, 1154, 365, 341, 307, 300, 291, 486, 362, 281, 2028, 365, 264, 1176, 8186, 1803, 11, 51254, 51254, 365, 264, 1176, 21762, 1803, 13, 51344, 51344, 509, 362, 281, 15529, 472, 551, 934, 1071, 551, 294, 1668, 498, 309, 311, 4966, 281, 264, 2799, 51624, 51624, 420, 47664, 576, 406, 312, 1944, 3612, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16652838074334778, "compression_ratio": 1.7791666666666666, "no_caption_prob": 2.8854636184405535e-05}, {"id": 737, "seek": 313628, "start": 3141.0800000000004, "end": 3143.4, "text": " in this case.", "tokens": [50364, 509, 393, 1936, 360, 439, 264, 32371, 293, 439, 264, 15670, 34852, 1803, 50604, 50604, 294, 341, 1389, 13, 50720, 50720, 821, 366, 17401, 300, 291, 393, 764, 294, 1668, 281, 360, 341, 1333, 295, 551, 13, 50930, 50930, 286, 519, 264, 2135, 1154, 365, 341, 307, 300, 291, 486, 362, 281, 2028, 365, 264, 1176, 8186, 1803, 11, 51254, 51254, 365, 264, 1176, 21762, 1803, 13, 51344, 51344, 509, 362, 281, 15529, 472, 551, 934, 1071, 551, 294, 1668, 498, 309, 311, 4966, 281, 264, 2799, 51624, 51624, 420, 47664, 576, 406, 312, 1944, 3612, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16652838074334778, "compression_ratio": 1.7791666666666666, "no_caption_prob": 2.8854636184405535e-05}, {"id": 738, "seek": 313628, "start": 3143.4, "end": 3147.6000000000004, "text": " There are packages that you can use in order to do this sort of thing.", "tokens": [50364, 509, 393, 1936, 360, 439, 264, 32371, 293, 439, 264, 15670, 34852, 1803, 50604, 50604, 294, 341, 1389, 13, 50720, 50720, 821, 366, 17401, 300, 291, 393, 764, 294, 1668, 281, 360, 341, 1333, 295, 551, 13, 50930, 50930, 286, 519, 264, 2135, 1154, 365, 341, 307, 300, 291, 486, 362, 281, 2028, 365, 264, 1176, 8186, 1803, 11, 51254, 51254, 365, 264, 1176, 21762, 1803, 13, 51344, 51344, 509, 362, 281, 15529, 472, 551, 934, 1071, 551, 294, 1668, 498, 309, 311, 4966, 281, 264, 2799, 51624, 51624, 420, 47664, 576, 406, 312, 1944, 3612, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16652838074334778, "compression_ratio": 1.7791666666666666, "no_caption_prob": 2.8854636184405535e-05}, {"id": 739, "seek": 313628, "start": 3147.6000000000004, "end": 3154.0800000000004, "text": " I think the main problem with this is that you will have to deal with the Z index yourself,", "tokens": [50364, 509, 393, 1936, 360, 439, 264, 32371, 293, 439, 264, 15670, 34852, 1803, 50604, 50604, 294, 341, 1389, 13, 50720, 50720, 821, 366, 17401, 300, 291, 393, 764, 294, 1668, 281, 360, 341, 1333, 295, 551, 13, 50930, 50930, 286, 519, 264, 2135, 1154, 365, 341, 307, 300, 291, 486, 362, 281, 2028, 365, 264, 1176, 8186, 1803, 11, 51254, 51254, 365, 264, 1176, 21762, 1803, 13, 51344, 51344, 509, 362, 281, 15529, 472, 551, 934, 1071, 551, 294, 1668, 498, 309, 311, 4966, 281, 264, 2799, 51624, 51624, 420, 47664, 576, 406, 312, 1944, 3612, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16652838074334778, "compression_ratio": 1.7791666666666666, "no_caption_prob": 2.8854636184405535e-05}, {"id": 740, "seek": 313628, "start": 3154.0800000000004, "end": 3155.88, "text": " with the Z buffer yourself.", "tokens": [50364, 509, 393, 1936, 360, 439, 264, 32371, 293, 439, 264, 15670, 34852, 1803, 50604, 50604, 294, 341, 1389, 13, 50720, 50720, 821, 366, 17401, 300, 291, 393, 764, 294, 1668, 281, 360, 341, 1333, 295, 551, 13, 50930, 50930, 286, 519, 264, 2135, 1154, 365, 341, 307, 300, 291, 486, 362, 281, 2028, 365, 264, 1176, 8186, 1803, 11, 51254, 51254, 365, 264, 1176, 21762, 1803, 13, 51344, 51344, 509, 362, 281, 15529, 472, 551, 934, 1071, 551, 294, 1668, 498, 309, 311, 4966, 281, 264, 2799, 51624, 51624, 420, 47664, 576, 406, 312, 1944, 3612, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16652838074334778, "compression_ratio": 1.7791666666666666, "no_caption_prob": 2.8854636184405535e-05}, {"id": 741, "seek": 313628, "start": 3155.88, "end": 3161.48, "text": " You have to render one thing after another thing in order if it's closer to the camera", "tokens": [50364, 509, 393, 1936, 360, 439, 264, 32371, 293, 439, 264, 15670, 34852, 1803, 50604, 50604, 294, 341, 1389, 13, 50720, 50720, 821, 366, 17401, 300, 291, 393, 764, 294, 1668, 281, 360, 341, 1333, 295, 551, 13, 50930, 50930, 286, 519, 264, 2135, 1154, 365, 341, 307, 300, 291, 486, 362, 281, 2028, 365, 264, 1176, 8186, 1803, 11, 51254, 51254, 365, 264, 1176, 21762, 1803, 13, 51344, 51344, 509, 362, 281, 15529, 472, 551, 934, 1071, 551, 294, 1668, 498, 309, 311, 4966, 281, 264, 2799, 51624, 51624, 420, 47664, 576, 406, 312, 1944, 3612, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16652838074334778, "compression_ratio": 1.7791666666666666, "no_caption_prob": 2.8854636184405535e-05}, {"id": 742, "seek": 313628, "start": 3161.48, "end": 3165.2400000000002, "text": " or intersections would not be possible easily.", "tokens": [50364, 509, 393, 1936, 360, 439, 264, 32371, 293, 439, 264, 15670, 34852, 1803, 50604, 50604, 294, 341, 1389, 13, 50720, 50720, 821, 366, 17401, 300, 291, 393, 764, 294, 1668, 281, 360, 341, 1333, 295, 551, 13, 50930, 50930, 286, 519, 264, 2135, 1154, 365, 341, 307, 300, 291, 486, 362, 281, 2028, 365, 264, 1176, 8186, 1803, 11, 51254, 51254, 365, 264, 1176, 21762, 1803, 13, 51344, 51344, 509, 362, 281, 15529, 472, 551, 934, 1071, 551, 294, 1668, 498, 309, 311, 4966, 281, 264, 2799, 51624, 51624, 420, 47664, 576, 406, 312, 1944, 3612, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16652838074334778, "compression_ratio": 1.7791666666666666, "no_caption_prob": 2.8854636184405535e-05}, {"id": 743, "seek": 316524, "start": 3165.24, "end": 3166.24, "text": " Wow.", "tokens": [50364, 3153, 13, 50414, 50414, 865, 11, 309, 775, 584, 309, 311, 2942, 365, 31910, 38, 13, 50554, 50554, 663, 311, 534, 10343, 570, 309, 988, 1542, 411, 257, 1481, 805, 35, 2316, 456, 13, 50808, 50808, 14711, 13, 50858, 50858, 407, 439, 613, 32284, 300, 360, 264, 15670, 9887, 11, 291, 393, 12972, 264, 21056, 51206, 51206, 538, 613, 32284, 281, 4088, 552, 1803, 293, 550, 15529, 264, 2572, 5598, 11, 264, 2572, 51476, 51476, 1874, 1228, 31910, 38, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.18792648542495, "compression_ratio": 1.6105769230769231, "no_caption_prob": 0.00023046669957693666}, {"id": 744, "seek": 316524, "start": 3166.24, "end": 3169.04, "text": " Yeah, it does say it's created with SVG.", "tokens": [50364, 3153, 13, 50414, 50414, 865, 11, 309, 775, 584, 309, 311, 2942, 365, 31910, 38, 13, 50554, 50554, 663, 311, 534, 10343, 570, 309, 988, 1542, 411, 257, 1481, 805, 35, 2316, 456, 13, 50808, 50808, 14711, 13, 50858, 50858, 407, 439, 613, 32284, 300, 360, 264, 15670, 9887, 11, 291, 393, 12972, 264, 21056, 51206, 51206, 538, 613, 32284, 281, 4088, 552, 1803, 293, 550, 15529, 264, 2572, 5598, 11, 264, 2572, 51476, 51476, 1874, 1228, 31910, 38, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.18792648542495, "compression_ratio": 1.6105769230769231, "no_caption_prob": 0.00023046669957693666}, {"id": 745, "seek": 316524, "start": 3169.04, "end": 3174.12, "text": " That's really fascinating because it sure looks like a nice 3D model there.", "tokens": [50364, 3153, 13, 50414, 50414, 865, 11, 309, 775, 584, 309, 311, 2942, 365, 31910, 38, 13, 50554, 50554, 663, 311, 534, 10343, 570, 309, 988, 1542, 411, 257, 1481, 805, 35, 2316, 456, 13, 50808, 50808, 14711, 13, 50858, 50858, 407, 439, 613, 32284, 300, 360, 264, 15670, 9887, 11, 291, 393, 12972, 264, 21056, 51206, 51206, 538, 613, 32284, 281, 4088, 552, 1803, 293, 550, 15529, 264, 2572, 5598, 11, 264, 2572, 51476, 51476, 1874, 1228, 31910, 38, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.18792648542495, "compression_ratio": 1.6105769230769231, "no_caption_prob": 0.00023046669957693666}, {"id": 746, "seek": 316524, "start": 3174.12, "end": 3175.12, "text": " Interesting.", "tokens": [50364, 3153, 13, 50414, 50414, 865, 11, 309, 775, 584, 309, 311, 2942, 365, 31910, 38, 13, 50554, 50554, 663, 311, 534, 10343, 570, 309, 988, 1542, 411, 257, 1481, 805, 35, 2316, 456, 13, 50808, 50808, 14711, 13, 50858, 50858, 407, 439, 613, 32284, 300, 360, 264, 15670, 9887, 11, 291, 393, 12972, 264, 21056, 51206, 51206, 538, 613, 32284, 281, 4088, 552, 1803, 293, 550, 15529, 264, 2572, 5598, 11, 264, 2572, 51476, 51476, 1874, 1228, 31910, 38, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.18792648542495, "compression_ratio": 1.6105769230769231, "no_caption_prob": 0.00023046669957693666}, {"id": 747, "seek": 316524, "start": 3175.12, "end": 3182.08, "text": " So all these matrices that do the coordinate transformation, you can multiply the coordinates", "tokens": [50364, 3153, 13, 50414, 50414, 865, 11, 309, 775, 584, 309, 311, 2942, 365, 31910, 38, 13, 50554, 50554, 663, 311, 534, 10343, 570, 309, 988, 1542, 411, 257, 1481, 805, 35, 2316, 456, 13, 50808, 50808, 14711, 13, 50858, 50858, 407, 439, 613, 32284, 300, 360, 264, 15670, 9887, 11, 291, 393, 12972, 264, 21056, 51206, 51206, 538, 613, 32284, 281, 4088, 552, 1803, 293, 550, 15529, 264, 2572, 5598, 11, 264, 2572, 51476, 51476, 1874, 1228, 31910, 38, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.18792648542495, "compression_ratio": 1.6105769230769231, "no_caption_prob": 0.00023046669957693666}, {"id": 748, "seek": 316524, "start": 3182.08, "end": 3187.4799999999996, "text": " by these matrices to transform them yourself and then render the final output, the final", "tokens": [50364, 3153, 13, 50414, 50414, 865, 11, 309, 775, 584, 309, 311, 2942, 365, 31910, 38, 13, 50554, 50554, 663, 311, 534, 10343, 570, 309, 988, 1542, 411, 257, 1481, 805, 35, 2316, 456, 13, 50808, 50808, 14711, 13, 50858, 50858, 407, 439, 613, 32284, 300, 360, 264, 15670, 9887, 11, 291, 393, 12972, 264, 21056, 51206, 51206, 538, 613, 32284, 281, 4088, 552, 1803, 293, 550, 15529, 264, 2572, 5598, 11, 264, 2572, 51476, 51476, 1874, 1228, 31910, 38, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.18792648542495, "compression_ratio": 1.6105769230769231, "no_caption_prob": 0.00023046669957693666}, {"id": 749, "seek": 316524, "start": 3187.4799999999996, "end": 3191.12, "text": " result using SVG.", "tokens": [50364, 3153, 13, 50414, 50414, 865, 11, 309, 775, 584, 309, 311, 2942, 365, 31910, 38, 13, 50554, 50554, 663, 311, 534, 10343, 570, 309, 988, 1542, 411, 257, 1481, 805, 35, 2316, 456, 13, 50808, 50808, 14711, 13, 50858, 50858, 407, 439, 613, 32284, 300, 360, 264, 15670, 9887, 11, 291, 393, 12972, 264, 21056, 51206, 51206, 538, 613, 32284, 281, 4088, 552, 1803, 293, 550, 15529, 264, 2572, 5598, 11, 264, 2572, 51476, 51476, 1874, 1228, 31910, 38, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.18792648542495, "compression_ratio": 1.6105769230769231, "no_caption_prob": 0.00023046669957693666}, {"id": 750, "seek": 319112, "start": 3191.12, "end": 3197.7999999999997, "text": " It might be slower in some cases, but if it's a simple illustration like this, a simple", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 751, "seek": 319112, "start": 3197.7999999999997, "end": 3200.48, "text": " drawing like this, then it\u2026", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 752, "seek": 319112, "start": 3200.48, "end": 3205.08, "text": " When you use Elm Explorations WebGL, it renders using a canvas, right?", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 753, "seek": 319112, "start": 3205.08, "end": 3206.08, "text": " An HTML canvas.", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 754, "seek": 319112, "start": 3206.08, "end": 3207.08, "text": " Okay.", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 755, "seek": 319112, "start": 3207.08, "end": 3208.08, "text": " Yeah.", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 756, "seek": 319112, "start": 3208.08, "end": 3214.16, "text": " So WebGL to HTML is the function that puts this DOM node that is a canvas, that ends", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 757, "seek": 319112, "start": 3214.16, "end": 3216.2799999999997, "text": " up being a canvas element.", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 758, "seek": 319112, "start": 3216.2799999999997, "end": 3220.04, "text": " And you can even pass attributes to it.", "tokens": [50364, 467, 1062, 312, 14009, 294, 512, 3331, 11, 457, 498, 309, 311, 257, 2199, 22645, 411, 341, 11, 257, 2199, 50698, 50698, 6316, 411, 341, 11, 550, 309, 1260, 50832, 50832, 1133, 291, 764, 2699, 76, 12514, 284, 763, 9573, 19440, 11, 309, 6125, 433, 1228, 257, 16267, 11, 558, 30, 51062, 51062, 1107, 17995, 16267, 13, 51112, 51112, 1033, 13, 51162, 51162, 865, 13, 51212, 51212, 407, 9573, 19440, 281, 17995, 307, 264, 2445, 300, 8137, 341, 35727, 9984, 300, 307, 257, 16267, 11, 300, 5314, 51516, 51516, 493, 885, 257, 16267, 4478, 13, 51622, 51622, 400, 291, 393, 754, 1320, 17212, 281, 309, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2644548762928356, "compression_ratio": 1.5378151260504203, "no_caption_prob": 7.594281487399712e-05}, {"id": 759, "seek": 322004, "start": 3220.04, "end": 3221.96, "text": " Yeah, regular HTML attributes.", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 760, "seek": 322004, "start": 3221.96, "end": 3225.52, "text": " Yeah, like a width and height style.", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 761, "seek": 322004, "start": 3225.52, "end": 3230.6, "text": " What's the best place for people to ask questions if they're getting started with this stuff?", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 762, "seek": 322004, "start": 3230.6, "end": 3231.6, "text": " Is the game jam\u2026", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 763, "seek": 322004, "start": 3231.6, "end": 3234.88, "text": " I know there's a pretty active game jam channel in the Elm Slack.", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 764, "seek": 322004, "start": 3234.88, "end": 3236.64, "text": " Is that a good place for people to ask?", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 765, "seek": 322004, "start": 3236.64, "end": 3237.64, "text": " Yeah, the game dev.", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 766, "seek": 322004, "start": 3237.64, "end": 3241.32, "text": " Oh, there's game dev too and then there's the game jams, right?", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 767, "seek": 322004, "start": 3241.32, "end": 3242.32, "text": " Yes.", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 768, "seek": 322004, "start": 3242.32, "end": 3246.7599999999998, "text": " No, I think it's the only channel.", "tokens": [50364, 865, 11, 3890, 17995, 17212, 13, 50460, 50460, 865, 11, 411, 257, 11402, 293, 6681, 3758, 13, 50638, 50638, 708, 311, 264, 1151, 1081, 337, 561, 281, 1029, 1651, 498, 436, 434, 1242, 1409, 365, 341, 1507, 30, 50892, 50892, 1119, 264, 1216, 7872, 1260, 50942, 50942, 286, 458, 456, 311, 257, 1238, 4967, 1216, 7872, 2269, 294, 264, 2699, 76, 37211, 13, 51106, 51106, 1119, 300, 257, 665, 1081, 337, 561, 281, 1029, 30, 51194, 51194, 865, 11, 264, 1216, 1905, 13, 51244, 51244, 876, 11, 456, 311, 1216, 1905, 886, 293, 550, 456, 311, 264, 1216, 361, 4070, 11, 558, 30, 51428, 51428, 1079, 13, 51478, 51478, 883, 11, 286, 519, 309, 311, 264, 787, 2269, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.23585930490881446, "compression_ratio": 1.6451612903225807, "no_caption_prob": 0.0002958188415504992}, {"id": 769, "seek": 324676, "start": 3246.76, "end": 3250.7200000000003, "text": " We used to run game jams.", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 770, "seek": 324676, "start": 3250.7200000000003, "end": 3255.0400000000004, "text": " This is where we announced them, but the channel is called game dev.", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 771, "seek": 324676, "start": 3255.0400000000004, "end": 3260.2400000000002, "text": " And then on top of that, there is the WebGL channel.", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 772, "seek": 324676, "start": 3260.2400000000002, "end": 3266.0400000000004, "text": " That might be more appropriate if you're not into games, but some people ask questions", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 773, "seek": 324676, "start": 3266.0400000000004, "end": 3268.5200000000004, "text": " in both and it's totally fine.", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 774, "seek": 324676, "start": 3268.5200000000004, "end": 3269.5200000000004, "text": " Awesome.", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 775, "seek": 324676, "start": 3269.5200000000004, "end": 3273.84, "text": " Yeah, there's this whole hidden community that's been off my radar, but it looks like", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 776, "seek": 324676, "start": 3273.84, "end": 3276.5200000000004, "text": " a lot of fun.", "tokens": [50364, 492, 1143, 281, 1190, 1216, 361, 4070, 13, 50562, 50562, 639, 307, 689, 321, 7548, 552, 11, 457, 264, 2269, 307, 1219, 1216, 1905, 13, 50778, 50778, 400, 550, 322, 1192, 295, 300, 11, 456, 307, 264, 9573, 19440, 2269, 13, 51038, 51038, 663, 1062, 312, 544, 6854, 498, 291, 434, 406, 666, 2813, 11, 457, 512, 561, 1029, 1651, 51328, 51328, 294, 1293, 293, 309, 311, 3879, 2489, 13, 51452, 51452, 10391, 13, 51502, 51502, 865, 11, 456, 311, 341, 1379, 7633, 1768, 300, 311, 668, 766, 452, 16544, 11, 457, 309, 1542, 411, 51718, 51718, 257, 688, 295, 1019, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.16509721863944576, "compression_ratio": 1.5583333333333333, "no_caption_prob": 1.5206318494165316e-05}, {"id": 777, "seek": 327652, "start": 3276.52, "end": 3279.4, "text": " No Dylan, don't start running games.", "tokens": [50364, 883, 28160, 11, 500, 380, 722, 2614, 2813, 13, 50508, 50508, 509, 362, 3873, 281, 652, 13, 50626, 50626, 5135, 2813, 366, 577, 286, 658, 666, 9573, 19440, 294, 264, 700, 1081, 13, 50870, 50870, 492, 645, 1364, 322, 257, 1216, 293, 300, 390, 2964, 293, 321, 3031, 281, 15529, 309, 365, 9573, 19440, 13, 51122, 51122, 663, 390, 1228, 9573, 19440, 294, 568, 35, 13, 51326, 51326, 509, 393, 360, 568, 35, 11, 309, 311, 406, 1472, 37714, 291, 13, 51536, 51536, 400, 550, 286, 1194, 11, 1310, 309, 576, 312, 1627, 281, 360, 746, 294, 805, 35, 886, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.22778075081961496, "compression_ratio": 1.4956140350877194, "no_caption_prob": 9.869755012914538e-05}, {"id": 778, "seek": 327652, "start": 3279.4, "end": 3281.7599999999998, "text": " You have tools to make.", "tokens": [50364, 883, 28160, 11, 500, 380, 722, 2614, 2813, 13, 50508, 50508, 509, 362, 3873, 281, 652, 13, 50626, 50626, 5135, 2813, 366, 577, 286, 658, 666, 9573, 19440, 294, 264, 700, 1081, 13, 50870, 50870, 492, 645, 1364, 322, 257, 1216, 293, 300, 390, 2964, 293, 321, 3031, 281, 15529, 309, 365, 9573, 19440, 13, 51122, 51122, 663, 390, 1228, 9573, 19440, 294, 568, 35, 13, 51326, 51326, 509, 393, 360, 568, 35, 11, 309, 311, 406, 1472, 37714, 291, 13, 51536, 51536, 400, 550, 286, 1194, 11, 1310, 309, 576, 312, 1627, 281, 360, 746, 294, 805, 35, 886, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.22778075081961496, "compression_ratio": 1.4956140350877194, "no_caption_prob": 9.869755012914538e-05}, {"id": 779, "seek": 327652, "start": 3281.7599999999998, "end": 3286.64, "text": " Actually games are how I got into WebGL in the first place.", "tokens": [50364, 883, 28160, 11, 500, 380, 722, 2614, 2813, 13, 50508, 50508, 509, 362, 3873, 281, 652, 13, 50626, 50626, 5135, 2813, 366, 577, 286, 658, 666, 9573, 19440, 294, 264, 700, 1081, 13, 50870, 50870, 492, 645, 1364, 322, 257, 1216, 293, 300, 390, 2964, 293, 321, 3031, 281, 15529, 309, 365, 9573, 19440, 13, 51122, 51122, 663, 390, 1228, 9573, 19440, 294, 568, 35, 13, 51326, 51326, 509, 393, 360, 568, 35, 11, 309, 311, 406, 1472, 37714, 291, 13, 51536, 51536, 400, 550, 286, 1194, 11, 1310, 309, 576, 312, 1627, 281, 360, 746, 294, 805, 35, 886, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.22778075081961496, "compression_ratio": 1.4956140350877194, "no_caption_prob": 9.869755012914538e-05}, {"id": 780, "seek": 327652, "start": 3286.64, "end": 3291.68, "text": " We were working on a game and that was slow and we tried to render it with WebGL.", "tokens": [50364, 883, 28160, 11, 500, 380, 722, 2614, 2813, 13, 50508, 50508, 509, 362, 3873, 281, 652, 13, 50626, 50626, 5135, 2813, 366, 577, 286, 658, 666, 9573, 19440, 294, 264, 700, 1081, 13, 50870, 50870, 492, 645, 1364, 322, 257, 1216, 293, 300, 390, 2964, 293, 321, 3031, 281, 15529, 309, 365, 9573, 19440, 13, 51122, 51122, 663, 390, 1228, 9573, 19440, 294, 568, 35, 13, 51326, 51326, 509, 393, 360, 568, 35, 11, 309, 311, 406, 1472, 37714, 291, 13, 51536, 51536, 400, 550, 286, 1194, 11, 1310, 309, 576, 312, 1627, 281, 360, 746, 294, 805, 35, 886, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.22778075081961496, "compression_ratio": 1.4956140350877194, "no_caption_prob": 9.869755012914538e-05}, {"id": 781, "seek": 327652, "start": 3291.68, "end": 3295.7599999999998, "text": " That was using WebGL in 2D.", "tokens": [50364, 883, 28160, 11, 500, 380, 722, 2614, 2813, 13, 50508, 50508, 509, 362, 3873, 281, 652, 13, 50626, 50626, 5135, 2813, 366, 577, 286, 658, 666, 9573, 19440, 294, 264, 700, 1081, 13, 50870, 50870, 492, 645, 1364, 322, 257, 1216, 293, 300, 390, 2964, 293, 321, 3031, 281, 15529, 309, 365, 9573, 19440, 13, 51122, 51122, 663, 390, 1228, 9573, 19440, 294, 568, 35, 13, 51326, 51326, 509, 393, 360, 568, 35, 11, 309, 311, 406, 1472, 37714, 291, 13, 51536, 51536, 400, 550, 286, 1194, 11, 1310, 309, 576, 312, 1627, 281, 360, 746, 294, 805, 35, 886, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.22778075081961496, "compression_ratio": 1.4956140350877194, "no_caption_prob": 9.869755012914538e-05}, {"id": 782, "seek": 327652, "start": 3295.7599999999998, "end": 3299.96, "text": " You can do 2D, it's not restricting you.", "tokens": [50364, 883, 28160, 11, 500, 380, 722, 2614, 2813, 13, 50508, 50508, 509, 362, 3873, 281, 652, 13, 50626, 50626, 5135, 2813, 366, 577, 286, 658, 666, 9573, 19440, 294, 264, 700, 1081, 13, 50870, 50870, 492, 645, 1364, 322, 257, 1216, 293, 300, 390, 2964, 293, 321, 3031, 281, 15529, 309, 365, 9573, 19440, 13, 51122, 51122, 663, 390, 1228, 9573, 19440, 294, 568, 35, 13, 51326, 51326, 509, 393, 360, 568, 35, 11, 309, 311, 406, 1472, 37714, 291, 13, 51536, 51536, 400, 550, 286, 1194, 11, 1310, 309, 576, 312, 1627, 281, 360, 746, 294, 805, 35, 886, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.22778075081961496, "compression_ratio": 1.4956140350877194, "no_caption_prob": 9.869755012914538e-05}, {"id": 783, "seek": 327652, "start": 3299.96, "end": 3305.8, "text": " And then I thought, maybe it would be cool to do something in 3D too.", "tokens": [50364, 883, 28160, 11, 500, 380, 722, 2614, 2813, 13, 50508, 50508, 509, 362, 3873, 281, 652, 13, 50626, 50626, 5135, 2813, 366, 577, 286, 658, 666, 9573, 19440, 294, 264, 700, 1081, 13, 50870, 50870, 492, 645, 1364, 322, 257, 1216, 293, 300, 390, 2964, 293, 321, 3031, 281, 15529, 309, 365, 9573, 19440, 13, 51122, 51122, 663, 390, 1228, 9573, 19440, 294, 568, 35, 13, 51326, 51326, 509, 393, 360, 568, 35, 11, 309, 311, 406, 1472, 37714, 291, 13, 51536, 51536, 400, 550, 286, 1194, 11, 1310, 309, 576, 312, 1627, 281, 360, 746, 294, 805, 35, 886, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.22778075081961496, "compression_ratio": 1.4956140350877194, "no_caption_prob": 9.869755012914538e-05}, {"id": 784, "seek": 330580, "start": 3305.8, "end": 3309.32, "text": " And I created the Rubik's cube game.", "tokens": [50364, 400, 286, 2942, 264, 10518, 1035, 311, 13728, 1216, 13, 50540, 50540, 400, 550, 934, 300, 11, 1392, 11, 731, 11, 689, 393, 286, 352, 490, 341, 30, 50814, 50814, 2704, 286, 393, 360, 257, 9762, 41713, 10313, 13, 51044, 51044, 400, 721, 658, 6179, 13, 51244, 51244, 509, 393, 4583, 370, 867, 721, 666, 309, 13, 51440, 51440, 38355, 307, 257, 1379, 661, 1496, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.3836331503731864, "compression_ratio": 1.4023668639053255, "no_caption_prob": 6.302395195234567e-05}, {"id": 785, "seek": 330580, "start": 3309.32, "end": 3314.8, "text": " And then after that, okay, well, where can I go from this?", "tokens": [50364, 400, 286, 2942, 264, 10518, 1035, 311, 13728, 1216, 13, 50540, 50540, 400, 550, 934, 300, 11, 1392, 11, 731, 11, 689, 393, 286, 352, 490, 341, 30, 50814, 50814, 2704, 286, 393, 360, 257, 9762, 41713, 10313, 13, 51044, 51044, 400, 721, 658, 6179, 13, 51244, 51244, 509, 393, 4583, 370, 867, 721, 666, 309, 13, 51440, 51440, 38355, 307, 257, 1379, 661, 1496, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.3836331503731864, "compression_ratio": 1.4023668639053255, "no_caption_prob": 6.302395195234567e-05}, {"id": 786, "seek": 330580, "start": 3314.8, "end": 3319.4, "text": " Maybe I can do a physically simulated dice.", "tokens": [50364, 400, 286, 2942, 264, 10518, 1035, 311, 13728, 1216, 13, 50540, 50540, 400, 550, 934, 300, 11, 1392, 11, 731, 11, 689, 393, 286, 352, 490, 341, 30, 50814, 50814, 2704, 286, 393, 360, 257, 9762, 41713, 10313, 13, 51044, 51044, 400, 721, 658, 6179, 13, 51244, 51244, 509, 393, 4583, 370, 867, 721, 666, 309, 13, 51440, 51440, 38355, 307, 257, 1379, 661, 1496, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.3836331503731864, "compression_ratio": 1.4023668639053255, "no_caption_prob": 6.302395195234567e-05}, {"id": 787, "seek": 330580, "start": 3319.4, "end": 3323.4, "text": " And things got complicated.", "tokens": [50364, 400, 286, 2942, 264, 10518, 1035, 311, 13728, 1216, 13, 50540, 50540, 400, 550, 934, 300, 11, 1392, 11, 731, 11, 689, 393, 286, 352, 490, 341, 30, 50814, 50814, 2704, 286, 393, 360, 257, 9762, 41713, 10313, 13, 51044, 51044, 400, 721, 658, 6179, 13, 51244, 51244, 509, 393, 4583, 370, 867, 721, 666, 309, 13, 51440, 51440, 38355, 307, 257, 1379, 661, 1496, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.3836331503731864, "compression_ratio": 1.4023668639053255, "no_caption_prob": 6.302395195234567e-05}, {"id": 788, "seek": 330580, "start": 3323.4, "end": 3327.32, "text": " You can layer so many things into it.", "tokens": [50364, 400, 286, 2942, 264, 10518, 1035, 311, 13728, 1216, 13, 50540, 50540, 400, 550, 934, 300, 11, 1392, 11, 731, 11, 689, 393, 286, 352, 490, 341, 30, 50814, 50814, 2704, 286, 393, 360, 257, 9762, 41713, 10313, 13, 51044, 51044, 400, 721, 658, 6179, 13, 51244, 51244, 509, 393, 4583, 370, 867, 721, 666, 309, 13, 51440, 51440, 38355, 307, 257, 1379, 661, 1496, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.3836331503731864, "compression_ratio": 1.4023668639053255, "no_caption_prob": 6.302395195234567e-05}, {"id": 789, "seek": 330580, "start": 3327.32, "end": 3330.52, "text": " Physics is a whole other level.", "tokens": [50364, 400, 286, 2942, 264, 10518, 1035, 311, 13728, 1216, 13, 50540, 50540, 400, 550, 934, 300, 11, 1392, 11, 731, 11, 689, 393, 286, 352, 490, 341, 30, 50814, 50814, 2704, 286, 393, 360, 257, 9762, 41713, 10313, 13, 51044, 51044, 400, 721, 658, 6179, 13, 51244, 51244, 509, 393, 4583, 370, 867, 721, 666, 309, 13, 51440, 51440, 38355, 307, 257, 1379, 661, 1496, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.3836331503731864, "compression_ratio": 1.4023668639053255, "no_caption_prob": 6.302395195234567e-05}, {"id": 790, "seek": 333052, "start": 3330.52, "end": 3337.48, "text": " Creating things in 3D is one thing, but having bodies interact with real world physics.", "tokens": [50364, 40002, 721, 294, 805, 35, 307, 472, 551, 11, 457, 1419, 7510, 4648, 365, 957, 1002, 10649, 13, 50712, 50712, 467, 2544, 411, 257, 688, 295, 1216, 3250, 307, 1096, 1228, 27913, 293, 613, 1333, 295, 1216, 12982, 50982, 50982, 300, 360, 12649, 1314, 257, 688, 295, 264, 4365, 11, 286, 3811, 13, 51148, 51148, 583, 1338, 11, 10649, 13, 51250, 51250, 467, 390, 1596, 264, 5077, 1242, 309, 281, 589, 13, 51548, 51548, 286, 994, 380, 722, 490, 8459, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.2513087328742532, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.647388075478375e-05}, {"id": 791, "seek": 333052, "start": 3337.48, "end": 3342.88, "text": " It seems like a lot of game development is done using Unity and these sort of game engines", "tokens": [50364, 40002, 721, 294, 805, 35, 307, 472, 551, 11, 457, 1419, 7510, 4648, 365, 957, 1002, 10649, 13, 50712, 50712, 467, 2544, 411, 257, 688, 295, 1216, 3250, 307, 1096, 1228, 27913, 293, 613, 1333, 295, 1216, 12982, 50982, 50982, 300, 360, 12649, 1314, 257, 688, 295, 264, 4365, 11, 286, 3811, 13, 51148, 51148, 583, 1338, 11, 10649, 13, 51250, 51250, 467, 390, 1596, 264, 5077, 1242, 309, 281, 589, 13, 51548, 51548, 286, 994, 380, 722, 490, 8459, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.2513087328742532, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.647388075478375e-05}, {"id": 792, "seek": 333052, "start": 3342.88, "end": 3346.2, "text": " that do abstract away a lot of the details, I imagine.", "tokens": [50364, 40002, 721, 294, 805, 35, 307, 472, 551, 11, 457, 1419, 7510, 4648, 365, 957, 1002, 10649, 13, 50712, 50712, 467, 2544, 411, 257, 688, 295, 1216, 3250, 307, 1096, 1228, 27913, 293, 613, 1333, 295, 1216, 12982, 50982, 50982, 300, 360, 12649, 1314, 257, 688, 295, 264, 4365, 11, 286, 3811, 13, 51148, 51148, 583, 1338, 11, 10649, 13, 51250, 51250, 467, 390, 1596, 264, 5077, 1242, 309, 281, 589, 13, 51548, 51548, 286, 994, 380, 722, 490, 8459, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.2513087328742532, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.647388075478375e-05}, {"id": 793, "seek": 333052, "start": 3346.2, "end": 3348.24, "text": " But yeah, physics.", "tokens": [50364, 40002, 721, 294, 805, 35, 307, 472, 551, 11, 457, 1419, 7510, 4648, 365, 957, 1002, 10649, 13, 50712, 50712, 467, 2544, 411, 257, 688, 295, 1216, 3250, 307, 1096, 1228, 27913, 293, 613, 1333, 295, 1216, 12982, 50982, 50982, 300, 360, 12649, 1314, 257, 688, 295, 264, 4365, 11, 286, 3811, 13, 51148, 51148, 583, 1338, 11, 10649, 13, 51250, 51250, 467, 390, 1596, 264, 5077, 1242, 309, 281, 589, 13, 51548, 51548, 286, 994, 380, 722, 490, 8459, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.2513087328742532, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.647388075478375e-05}, {"id": 794, "seek": 333052, "start": 3348.24, "end": 3354.2, "text": " It was quite the ride getting it to work.", "tokens": [50364, 40002, 721, 294, 805, 35, 307, 472, 551, 11, 457, 1419, 7510, 4648, 365, 957, 1002, 10649, 13, 50712, 50712, 467, 2544, 411, 257, 688, 295, 1216, 3250, 307, 1096, 1228, 27913, 293, 613, 1333, 295, 1216, 12982, 50982, 50982, 300, 360, 12649, 1314, 257, 688, 295, 264, 4365, 11, 286, 3811, 13, 51148, 51148, 583, 1338, 11, 10649, 13, 51250, 51250, 467, 390, 1596, 264, 5077, 1242, 309, 281, 589, 13, 51548, 51548, 286, 994, 380, 722, 490, 8459, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.2513087328742532, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.647388075478375e-05}, {"id": 795, "seek": 333052, "start": 3354.2, "end": 3356.28, "text": " I didn't start from scratch.", "tokens": [50364, 40002, 721, 294, 805, 35, 307, 472, 551, 11, 457, 1419, 7510, 4648, 365, 957, 1002, 10649, 13, 50712, 50712, 467, 2544, 411, 257, 688, 295, 1216, 3250, 307, 1096, 1228, 27913, 293, 613, 1333, 295, 1216, 12982, 50982, 50982, 300, 360, 12649, 1314, 257, 688, 295, 264, 4365, 11, 286, 3811, 13, 51148, 51148, 583, 1338, 11, 10649, 13, 51250, 51250, 467, 390, 1596, 264, 5077, 1242, 309, 281, 589, 13, 51548, 51548, 286, 994, 380, 722, 490, 8459, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.2513087328742532, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.647388075478375e-05}, {"id": 796, "seek": 335628, "start": 3356.28, "end": 3363.96, "text": " I looked at the Canon JS, but that is a library in JavaScript that is very object oriented.", "tokens": [50364, 286, 2956, 412, 264, 27666, 33063, 11, 457, 300, 307, 257, 6405, 294, 15778, 300, 307, 588, 2657, 21841, 13, 50748, 50748, 876, 11, 370, 309, 994, 380, 854, 13, 50926, 50926, 467, 630, 854, 257, 688, 13, 51148, 51148, 467, 311, 588, 1850, 577, 309, 311, 3720, 13, 51248, 51248, 407, 286, 390, 1075, 281, 1401, 293, 1223, 264, 3089, 13, 51426, 51426], "temperature": 0.0, "avg_logprob": -0.2683571324203954, "compression_ratio": 1.4078947368421053, "no_caption_prob": 2.247085649287328e-05}, {"id": 797, "seek": 335628, "start": 3363.96, "end": 3367.52, "text": " Oh, so it didn't help.", "tokens": [50364, 286, 2956, 412, 264, 27666, 33063, 11, 457, 300, 307, 257, 6405, 294, 15778, 300, 307, 588, 2657, 21841, 13, 50748, 50748, 876, 11, 370, 309, 994, 380, 854, 13, 50926, 50926, 467, 630, 854, 257, 688, 13, 51148, 51148, 467, 311, 588, 1850, 577, 309, 311, 3720, 13, 51248, 51248, 407, 286, 390, 1075, 281, 1401, 293, 1223, 264, 3089, 13, 51426, 51426], "temperature": 0.0, "avg_logprob": -0.2683571324203954, "compression_ratio": 1.4078947368421053, "no_caption_prob": 2.247085649287328e-05}, {"id": 798, "seek": 335628, "start": 3367.52, "end": 3371.96, "text": " It did help a lot.", "tokens": [50364, 286, 2956, 412, 264, 27666, 33063, 11, 457, 300, 307, 257, 6405, 294, 15778, 300, 307, 588, 2657, 21841, 13, 50748, 50748, 876, 11, 370, 309, 994, 380, 854, 13, 50926, 50926, 467, 630, 854, 257, 688, 13, 51148, 51148, 467, 311, 588, 1850, 577, 309, 311, 3720, 13, 51248, 51248, 407, 286, 390, 1075, 281, 1401, 293, 1223, 264, 3089, 13, 51426, 51426], "temperature": 0.0, "avg_logprob": -0.2683571324203954, "compression_ratio": 1.4078947368421053, "no_caption_prob": 2.247085649287328e-05}, {"id": 799, "seek": 335628, "start": 3371.96, "end": 3373.96, "text": " It's very clear how it's written.", "tokens": [50364, 286, 2956, 412, 264, 27666, 33063, 11, 457, 300, 307, 257, 6405, 294, 15778, 300, 307, 588, 2657, 21841, 13, 50748, 50748, 876, 11, 370, 309, 994, 380, 854, 13, 50926, 50926, 467, 630, 854, 257, 688, 13, 51148, 51148, 467, 311, 588, 1850, 577, 309, 311, 3720, 13, 51248, 51248, 407, 286, 390, 1075, 281, 1401, 293, 1223, 264, 3089, 13, 51426, 51426], "temperature": 0.0, "avg_logprob": -0.2683571324203954, "compression_ratio": 1.4078947368421053, "no_caption_prob": 2.247085649287328e-05}, {"id": 800, "seek": 335628, "start": 3373.96, "end": 3377.52, "text": " So I was able to read and understand the code.", "tokens": [50364, 286, 2956, 412, 264, 27666, 33063, 11, 457, 300, 307, 257, 6405, 294, 15778, 300, 307, 588, 2657, 21841, 13, 50748, 50748, 876, 11, 370, 309, 994, 380, 854, 13, 50926, 50926, 467, 630, 854, 257, 688, 13, 51148, 51148, 467, 311, 588, 1850, 577, 309, 311, 3720, 13, 51248, 51248, 407, 286, 390, 1075, 281, 1401, 293, 1223, 264, 3089, 13, 51426, 51426], "temperature": 0.0, "avg_logprob": -0.2683571324203954, "compression_ratio": 1.4078947368421053, "no_caption_prob": 2.247085649287328e-05}, {"id": 801, "seek": 337752, "start": 3377.52, "end": 3386.28, "text": " But a lot of algorithms, they are very imperative and converting them into a purely functional", "tokens": [50364, 583, 257, 688, 295, 14642, 11, 436, 366, 588, 32490, 293, 29942, 552, 666, 257, 17491, 11745, 50802, 50802, 3758, 390, 1596, 257, 3430, 13, 50956, 50956, 1449, 484, 295, 18769, 11, 570, 7970, 2699, 76, 307, 1075, 281, 2845, 721, 281, 264, 18407, 13, 51254, 51254, 1664, 291, 2845, 2807, 763, 281, 312, 1096, 322, 264, 18407, 294, 2699, 76, 30, 51528, 51528, 1610, 307, 309, 445, 9573, 19440, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.20384024302164713, "compression_ratio": 1.4191919191919191, "no_caption_prob": 9.026849875226617e-05}, {"id": 802, "seek": 337752, "start": 3386.28, "end": 3389.36, "text": " style was quite a challenge.", "tokens": [50364, 583, 257, 688, 295, 14642, 11, 436, 366, 588, 32490, 293, 29942, 552, 666, 257, 17491, 11745, 50802, 50802, 3758, 390, 1596, 257, 3430, 13, 50956, 50956, 1449, 484, 295, 18769, 11, 570, 7970, 2699, 76, 307, 1075, 281, 2845, 721, 281, 264, 18407, 13, 51254, 51254, 1664, 291, 2845, 2807, 763, 281, 312, 1096, 322, 264, 18407, 294, 2699, 76, 30, 51528, 51528, 1610, 307, 309, 445, 9573, 19440, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.20384024302164713, "compression_ratio": 1.4191919191919191, "no_caption_prob": 9.026849875226617e-05}, {"id": 803, "seek": 337752, "start": 3389.36, "end": 3395.32, "text": " Just out of curiosity, because apparently Elm is able to send things to the GPU.", "tokens": [50364, 583, 257, 688, 295, 14642, 11, 436, 366, 588, 32490, 293, 29942, 552, 666, 257, 17491, 11745, 50802, 50802, 3758, 390, 1596, 257, 3430, 13, 50956, 50956, 1449, 484, 295, 18769, 11, 570, 7970, 2699, 76, 307, 1075, 281, 2845, 721, 281, 264, 18407, 13, 51254, 51254, 1664, 291, 2845, 2807, 763, 281, 312, 1096, 322, 264, 18407, 294, 2699, 76, 30, 51528, 51528, 1610, 307, 309, 445, 9573, 19440, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.20384024302164713, "compression_ratio": 1.4191919191919191, "no_caption_prob": 9.026849875226617e-05}, {"id": 804, "seek": 337752, "start": 3395.32, "end": 3400.8, "text": " Can you send computations to be done on the GPU in Elm?", "tokens": [50364, 583, 257, 688, 295, 14642, 11, 436, 366, 588, 32490, 293, 29942, 552, 666, 257, 17491, 11745, 50802, 50802, 3758, 390, 1596, 257, 3430, 13, 50956, 50956, 1449, 484, 295, 18769, 11, 570, 7970, 2699, 76, 307, 1075, 281, 2845, 721, 281, 264, 18407, 13, 51254, 51254, 1664, 291, 2845, 2807, 763, 281, 312, 1096, 322, 264, 18407, 294, 2699, 76, 30, 51528, 51528, 1610, 307, 309, 445, 9573, 19440, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.20384024302164713, "compression_ratio": 1.4191919191919191, "no_caption_prob": 9.026849875226617e-05}, {"id": 805, "seek": 337752, "start": 3400.8, "end": 3402.84, "text": " Or is it just WebGL?", "tokens": [50364, 583, 257, 688, 295, 14642, 11, 436, 366, 588, 32490, 293, 29942, 552, 666, 257, 17491, 11745, 50802, 50802, 3758, 390, 1596, 257, 3430, 13, 50956, 50956, 1449, 484, 295, 18769, 11, 570, 7970, 2699, 76, 307, 1075, 281, 2845, 721, 281, 264, 18407, 13, 51254, 51254, 1664, 291, 2845, 2807, 763, 281, 312, 1096, 322, 264, 18407, 294, 2699, 76, 30, 51528, 51528, 1610, 307, 309, 445, 9573, 19440, 30, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.20384024302164713, "compression_ratio": 1.4191919191919191, "no_caption_prob": 9.026849875226617e-05}, {"id": 806, "seek": 340284, "start": 3402.84, "end": 3409.32, "text": " No, the current WebGL is only letting you render things.", "tokens": [50364, 883, 11, 264, 2190, 9573, 19440, 307, 787, 8295, 291, 15529, 721, 13, 50688, 50688, 400, 286, 519, 26771, 264, 636, 2699, 76, 21445, 366, 1096, 11, 498, 456, 390, 257, 551, 300, 576, 718, 51044, 51044, 291, 1190, 512, 35138, 420, 2807, 763, 322, 264, 18407, 11, 286, 519, 309, 576, 1391, 362, 257, 51296, 51296, 588, 819, 9362, 490, 264, 11837, 21841, 9362, 13, 51510, 51510, 1779, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.19397849005621834, "compression_ratio": 1.4791666666666667, "no_caption_prob": 5.561146099353209e-05}, {"id": 807, "seek": 340284, "start": 3409.32, "end": 3416.44, "text": " And I think arguably the way Elm APIs are done, if there was a thing that would let", "tokens": [50364, 883, 11, 264, 2190, 9573, 19440, 307, 787, 8295, 291, 15529, 721, 13, 50688, 50688, 400, 286, 519, 26771, 264, 636, 2699, 76, 21445, 366, 1096, 11, 498, 456, 390, 257, 551, 300, 576, 718, 51044, 51044, 291, 1190, 512, 35138, 420, 2807, 763, 322, 264, 18407, 11, 286, 519, 309, 576, 1391, 362, 257, 51296, 51296, 588, 819, 9362, 490, 264, 11837, 21841, 9362, 13, 51510, 51510, 1779, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.19397849005621834, "compression_ratio": 1.4791666666666667, "no_caption_prob": 5.561146099353209e-05}, {"id": 808, "seek": 340284, "start": 3416.44, "end": 3421.48, "text": " you run some simulations or computations on the GPU, I think it would probably have a", "tokens": [50364, 883, 11, 264, 2190, 9573, 19440, 307, 787, 8295, 291, 15529, 721, 13, 50688, 50688, 400, 286, 519, 26771, 264, 636, 2699, 76, 21445, 366, 1096, 11, 498, 456, 390, 257, 551, 300, 576, 718, 51044, 51044, 291, 1190, 512, 35138, 420, 2807, 763, 322, 264, 18407, 11, 286, 519, 309, 576, 1391, 362, 257, 51296, 51296, 588, 819, 9362, 490, 264, 11837, 21841, 9362, 13, 51510, 51510, 1779, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.19397849005621834, "compression_ratio": 1.4791666666666667, "no_caption_prob": 5.561146099353209e-05}, {"id": 809, "seek": 340284, "start": 3421.48, "end": 3425.76, "text": " very different API from the graphics oriented API.", "tokens": [50364, 883, 11, 264, 2190, 9573, 19440, 307, 787, 8295, 291, 15529, 721, 13, 50688, 50688, 400, 286, 519, 26771, 264, 636, 2699, 76, 21445, 366, 1096, 11, 498, 456, 390, 257, 551, 300, 576, 718, 51044, 51044, 291, 1190, 512, 35138, 420, 2807, 763, 322, 264, 18407, 11, 286, 519, 309, 576, 1391, 362, 257, 51296, 51296, 588, 819, 9362, 490, 264, 11837, 21841, 9362, 13, 51510, 51510, 1779, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.19397849005621834, "compression_ratio": 1.4791666666666667, "no_caption_prob": 5.561146099353209e-05}, {"id": 810, "seek": 340284, "start": 3425.76, "end": 3426.76, "text": " Right.", "tokens": [50364, 883, 11, 264, 2190, 9573, 19440, 307, 787, 8295, 291, 15529, 721, 13, 50688, 50688, 400, 286, 519, 26771, 264, 636, 2699, 76, 21445, 366, 1096, 11, 498, 456, 390, 257, 551, 300, 576, 718, 51044, 51044, 291, 1190, 512, 35138, 420, 2807, 763, 322, 264, 18407, 11, 286, 519, 309, 576, 1391, 362, 257, 51296, 51296, 588, 819, 9362, 490, 264, 11837, 21841, 9362, 13, 51510, 51510, 1779, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.19397849005621834, "compression_ratio": 1.4791666666666667, "no_caption_prob": 5.561146099353209e-05}, {"id": 811, "seek": 342676, "start": 3426.76, "end": 3435.0400000000004, "text": " James Carlson gave a talk a while back about using Futhark to do GPU computations from", "tokens": [50364, 5678, 14256, 3015, 2729, 257, 751, 257, 1339, 646, 466, 1228, 479, 2910, 809, 281, 360, 18407, 2807, 763, 490, 50778, 50778, 2699, 76, 13, 50828, 50828, 286, 519, 309, 390, 1228, 18160, 13, 50948, 50948, 865, 11, 309, 311, 364, 1880, 1901, 13, 51066, 51066, 286, 914, 11, 257, 688, 295, 721, 366, 4473, 558, 586, 13, 51206, 51206, 407, 286, 519, 9573, 38, 8115, 307, 885, 14306, 484, 294, 36069, 11, 457, 406, 294, 439, 295, 552, 13, 51586, 51586, 9573, 38, 8115, 30, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.21084136962890626, "compression_ratio": 1.4438775510204083, "no_caption_prob": 5.143041562405415e-05}, {"id": 812, "seek": 342676, "start": 3435.0400000000004, "end": 3436.0400000000004, "text": " Elm.", "tokens": [50364, 5678, 14256, 3015, 2729, 257, 751, 257, 1339, 646, 466, 1228, 479, 2910, 809, 281, 360, 18407, 2807, 763, 490, 50778, 50778, 2699, 76, 13, 50828, 50828, 286, 519, 309, 390, 1228, 18160, 13, 50948, 50948, 865, 11, 309, 311, 364, 1880, 1901, 13, 51066, 51066, 286, 914, 11, 257, 688, 295, 721, 366, 4473, 558, 586, 13, 51206, 51206, 407, 286, 519, 9573, 38, 8115, 307, 885, 14306, 484, 294, 36069, 11, 457, 406, 294, 439, 295, 552, 13, 51586, 51586, 9573, 38, 8115, 30, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.21084136962890626, "compression_ratio": 1.4438775510204083, "no_caption_prob": 5.143041562405415e-05}, {"id": 813, "seek": 342676, "start": 3436.0400000000004, "end": 3438.44, "text": " I think it was using ports.", "tokens": [50364, 5678, 14256, 3015, 2729, 257, 751, 257, 1339, 646, 466, 1228, 479, 2910, 809, 281, 360, 18407, 2807, 763, 490, 50778, 50778, 2699, 76, 13, 50828, 50828, 286, 519, 309, 390, 1228, 18160, 13, 50948, 50948, 865, 11, 309, 311, 364, 1880, 1901, 13, 51066, 51066, 286, 914, 11, 257, 688, 295, 721, 366, 4473, 558, 586, 13, 51206, 51206, 407, 286, 519, 9573, 38, 8115, 307, 885, 14306, 484, 294, 36069, 11, 457, 406, 294, 439, 295, 552, 13, 51586, 51586, 9573, 38, 8115, 30, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.21084136962890626, "compression_ratio": 1.4438775510204083, "no_caption_prob": 5.143041562405415e-05}, {"id": 814, "seek": 342676, "start": 3438.44, "end": 3440.8, "text": " Yeah, it's an interesting space.", "tokens": [50364, 5678, 14256, 3015, 2729, 257, 751, 257, 1339, 646, 466, 1228, 479, 2910, 809, 281, 360, 18407, 2807, 763, 490, 50778, 50778, 2699, 76, 13, 50828, 50828, 286, 519, 309, 390, 1228, 18160, 13, 50948, 50948, 865, 11, 309, 311, 364, 1880, 1901, 13, 51066, 51066, 286, 914, 11, 257, 688, 295, 721, 366, 4473, 558, 586, 13, 51206, 51206, 407, 286, 519, 9573, 38, 8115, 307, 885, 14306, 484, 294, 36069, 11, 457, 406, 294, 439, 295, 552, 13, 51586, 51586, 9573, 38, 8115, 30, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.21084136962890626, "compression_ratio": 1.4438775510204083, "no_caption_prob": 5.143041562405415e-05}, {"id": 815, "seek": 342676, "start": 3440.8, "end": 3443.6000000000004, "text": " I mean, a lot of things are changing right now.", "tokens": [50364, 5678, 14256, 3015, 2729, 257, 751, 257, 1339, 646, 466, 1228, 479, 2910, 809, 281, 360, 18407, 2807, 763, 490, 50778, 50778, 2699, 76, 13, 50828, 50828, 286, 519, 309, 390, 1228, 18160, 13, 50948, 50948, 865, 11, 309, 311, 364, 1880, 1901, 13, 51066, 51066, 286, 914, 11, 257, 688, 295, 721, 366, 4473, 558, 586, 13, 51206, 51206, 407, 286, 519, 9573, 38, 8115, 307, 885, 14306, 484, 294, 36069, 11, 457, 406, 294, 439, 295, 552, 13, 51586, 51586, 9573, 38, 8115, 30, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.21084136962890626, "compression_ratio": 1.4438775510204083, "no_caption_prob": 5.143041562405415e-05}, {"id": 816, "seek": 342676, "start": 3443.6000000000004, "end": 3451.2000000000003, "text": " So I think WebGPU is being rolled out in browsers, but not in all of them.", "tokens": [50364, 5678, 14256, 3015, 2729, 257, 751, 257, 1339, 646, 466, 1228, 479, 2910, 809, 281, 360, 18407, 2807, 763, 490, 50778, 50778, 2699, 76, 13, 50828, 50828, 286, 519, 309, 390, 1228, 18160, 13, 50948, 50948, 865, 11, 309, 311, 364, 1880, 1901, 13, 51066, 51066, 286, 914, 11, 257, 688, 295, 721, 366, 4473, 558, 586, 13, 51206, 51206, 407, 286, 519, 9573, 38, 8115, 307, 885, 14306, 484, 294, 36069, 11, 457, 406, 294, 439, 295, 552, 13, 51586, 51586, 9573, 38, 8115, 30, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.21084136962890626, "compression_ratio": 1.4438775510204083, "no_caption_prob": 5.143041562405415e-05}, {"id": 817, "seek": 342676, "start": 3451.2000000000003, "end": 3452.2000000000003, "text": " WebGPU?", "tokens": [50364, 5678, 14256, 3015, 2729, 257, 751, 257, 1339, 646, 466, 1228, 479, 2910, 809, 281, 360, 18407, 2807, 763, 490, 50778, 50778, 2699, 76, 13, 50828, 50828, 286, 519, 309, 390, 1228, 18160, 13, 50948, 50948, 865, 11, 309, 311, 364, 1880, 1901, 13, 51066, 51066, 286, 914, 11, 257, 688, 295, 721, 366, 4473, 558, 586, 13, 51206, 51206, 407, 286, 519, 9573, 38, 8115, 307, 885, 14306, 484, 294, 36069, 11, 457, 406, 294, 439, 295, 552, 13, 51586, 51586, 9573, 38, 8115, 30, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.21084136962890626, "compression_ratio": 1.4438775510204083, "no_caption_prob": 5.143041562405415e-05}, {"id": 818, "seek": 345220, "start": 3452.2, "end": 3461.52, "text": " Yeah, WebGPU is a lower level API, the new API for interacting with GPU and that has", "tokens": [50364, 865, 11, 9573, 38, 8115, 307, 257, 3126, 1496, 9362, 11, 264, 777, 9362, 337, 18017, 365, 18407, 293, 300, 575, 50830, 50830, 13227, 3613, 295, 764, 3331, 13, 50938, 50938, 467, 1669, 721, 1944, 300, 645, 406, 1944, 949, 13, 51156, 51156, 583, 264, 2190, 2699, 76, 9362, 307, 2361, 322, 9573, 19440, 502, 13, 51430, 51430], "temperature": 0.0, "avg_logprob": -0.23876436551411948, "compression_ratio": 1.3481012658227849, "no_caption_prob": 9.906318882713094e-05}, {"id": 819, "seek": 345220, "start": 3461.52, "end": 3463.68, "text": " broader range of use cases.", "tokens": [50364, 865, 11, 9573, 38, 8115, 307, 257, 3126, 1496, 9362, 11, 264, 777, 9362, 337, 18017, 365, 18407, 293, 300, 575, 50830, 50830, 13227, 3613, 295, 764, 3331, 13, 50938, 50938, 467, 1669, 721, 1944, 300, 645, 406, 1944, 949, 13, 51156, 51156, 583, 264, 2190, 2699, 76, 9362, 307, 2361, 322, 9573, 19440, 502, 13, 51430, 51430], "temperature": 0.0, "avg_logprob": -0.23876436551411948, "compression_ratio": 1.3481012658227849, "no_caption_prob": 9.906318882713094e-05}, {"id": 820, "seek": 345220, "start": 3463.68, "end": 3468.04, "text": " It makes things possible that were not possible before.", "tokens": [50364, 865, 11, 9573, 38, 8115, 307, 257, 3126, 1496, 9362, 11, 264, 777, 9362, 337, 18017, 365, 18407, 293, 300, 575, 50830, 50830, 13227, 3613, 295, 764, 3331, 13, 50938, 50938, 467, 1669, 721, 1944, 300, 645, 406, 1944, 949, 13, 51156, 51156, 583, 264, 2190, 2699, 76, 9362, 307, 2361, 322, 9573, 19440, 502, 13, 51430, 51430], "temperature": 0.0, "avg_logprob": -0.23876436551411948, "compression_ratio": 1.3481012658227849, "no_caption_prob": 9.906318882713094e-05}, {"id": 821, "seek": 345220, "start": 3468.04, "end": 3473.52, "text": " But the current Elm API is based on WebGL 1.", "tokens": [50364, 865, 11, 9573, 38, 8115, 307, 257, 3126, 1496, 9362, 11, 264, 777, 9362, 337, 18017, 365, 18407, 293, 300, 575, 50830, 50830, 13227, 3613, 295, 764, 3331, 13, 50938, 50938, 467, 1669, 721, 1944, 300, 645, 406, 1944, 949, 13, 51156, 51156, 583, 264, 2190, 2699, 76, 9362, 307, 2361, 322, 9573, 19440, 502, 13, 51430, 51430], "temperature": 0.0, "avg_logprob": -0.23876436551411948, "compression_ratio": 1.3481012658227849, "no_caption_prob": 9.906318882713094e-05}, {"id": 822, "seek": 347352, "start": 3473.52, "end": 3482.16, "text": " And it's using the current pipeline has some limitations.", "tokens": [50364, 400, 309, 311, 1228, 264, 2190, 15517, 575, 512, 15705, 13, 50796, 50796, 1171, 1365, 11, 437, 291, 2644, 360, 307, 291, 2644, 360, 3311, 640, 22407, 11, 597, 307, 15529, 341, 51217, 51217, 551, 322, 257, 8091, 293, 550, 747, 300, 8091, 293, 550, 764, 309, 294, 264, 19962, 22407, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.15065532071249826, "compression_ratio": 1.5620915032679739, "no_caption_prob": 3.88059088436421e-05}, {"id": 823, "seek": 347352, "start": 3482.16, "end": 3490.58, "text": " For example, what you cannot do is you cannot do multipass rendering, which is render this", "tokens": [50364, 400, 309, 311, 1228, 264, 2190, 15517, 575, 512, 15705, 13, 50796, 50796, 1171, 1365, 11, 437, 291, 2644, 360, 307, 291, 2644, 360, 3311, 640, 22407, 11, 597, 307, 15529, 341, 51217, 51217, 551, 322, 257, 8091, 293, 550, 747, 300, 8091, 293, 550, 764, 309, 294, 264, 19962, 22407, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.15065532071249826, "compression_ratio": 1.5620915032679739, "no_caption_prob": 3.88059088436421e-05}, {"id": 824, "seek": 347352, "start": 3490.58, "end": 3498.48, "text": " thing on a texture and then take that texture and then use it in the subsequent rendering.", "tokens": [50364, 400, 309, 311, 1228, 264, 2190, 15517, 575, 512, 15705, 13, 50796, 50796, 1171, 1365, 11, 437, 291, 2644, 360, 307, 291, 2644, 360, 3311, 640, 22407, 11, 597, 307, 15529, 341, 51217, 51217, 551, 322, 257, 8091, 293, 550, 747, 300, 8091, 293, 550, 764, 309, 294, 264, 19962, 22407, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.15065532071249826, "compression_ratio": 1.5620915032679739, "no_caption_prob": 3.88059088436421e-05}, {"id": 825, "seek": 349848, "start": 3498.48, "end": 3506.76, "text": " And this technique is used a lot to achieve things like shadow maps, which is a way to", "tokens": [50364, 400, 341, 6532, 307, 1143, 257, 688, 281, 4584, 721, 411, 8576, 11317, 11, 597, 307, 257, 636, 281, 50778, 50778, 15529, 14740, 11, 597, 307, 411, 257, 534, 13494, 636, 281, 360, 552, 13, 51020, 51020, 407, 291, 15529, 264, 4145, 490, 264, 1442, 311, 935, 295, 1910, 13, 51304, 51304, 407, 550, 291, 486, 536, 437, 311, 17173, 11, 437, 311, 294, 14740, 13, 51536, 51536, 400, 550, 291, 15529, 309, 490, 264, 2799, 935, 295, 1910, 11, 457, 291, 764, 300, 382, 257, 4471, 281, 2573, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.10596861890567247, "compression_ratio": 1.77, "no_caption_prob": 9.904197213472798e-05}, {"id": 826, "seek": 349848, "start": 3506.76, "end": 3511.6, "text": " render shadows, which is like a really clever way to do them.", "tokens": [50364, 400, 341, 6532, 307, 1143, 257, 688, 281, 4584, 721, 411, 8576, 11317, 11, 597, 307, 257, 636, 281, 50778, 50778, 15529, 14740, 11, 597, 307, 411, 257, 534, 13494, 636, 281, 360, 552, 13, 51020, 51020, 407, 291, 15529, 264, 4145, 490, 264, 1442, 311, 935, 295, 1910, 13, 51304, 51304, 407, 550, 291, 486, 536, 437, 311, 17173, 11, 437, 311, 294, 14740, 13, 51536, 51536, 400, 550, 291, 15529, 309, 490, 264, 2799, 935, 295, 1910, 11, 457, 291, 764, 300, 382, 257, 4471, 281, 2573, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.10596861890567247, "compression_ratio": 1.77, "no_caption_prob": 9.904197213472798e-05}, {"id": 827, "seek": 349848, "start": 3511.6, "end": 3517.28, "text": " So you render the scene from the light's point of view.", "tokens": [50364, 400, 341, 6532, 307, 1143, 257, 688, 281, 4584, 721, 411, 8576, 11317, 11, 597, 307, 257, 636, 281, 50778, 50778, 15529, 14740, 11, 597, 307, 411, 257, 534, 13494, 636, 281, 360, 552, 13, 51020, 51020, 407, 291, 15529, 264, 4145, 490, 264, 1442, 311, 935, 295, 1910, 13, 51304, 51304, 407, 550, 291, 486, 536, 437, 311, 17173, 11, 437, 311, 294, 14740, 13, 51536, 51536, 400, 550, 291, 15529, 309, 490, 264, 2799, 935, 295, 1910, 11, 457, 291, 764, 300, 382, 257, 4471, 281, 2573, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.10596861890567247, "compression_ratio": 1.77, "no_caption_prob": 9.904197213472798e-05}, {"id": 828, "seek": 349848, "start": 3517.28, "end": 3521.92, "text": " So then you will see what's highlighted, what's in shadows.", "tokens": [50364, 400, 341, 6532, 307, 1143, 257, 688, 281, 4584, 721, 411, 8576, 11317, 11, 597, 307, 257, 636, 281, 50778, 50778, 15529, 14740, 11, 597, 307, 411, 257, 534, 13494, 636, 281, 360, 552, 13, 51020, 51020, 407, 291, 15529, 264, 4145, 490, 264, 1442, 311, 935, 295, 1910, 13, 51304, 51304, 407, 550, 291, 486, 536, 437, 311, 17173, 11, 437, 311, 294, 14740, 13, 51536, 51536, 400, 550, 291, 15529, 309, 490, 264, 2799, 935, 295, 1910, 11, 457, 291, 764, 300, 382, 257, 4471, 281, 2573, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.10596861890567247, "compression_ratio": 1.77, "no_caption_prob": 9.904197213472798e-05}, {"id": 829, "seek": 349848, "start": 3521.92, "end": 3526.36, "text": " And then you render it from the camera point of view, but you use that as a map to figure", "tokens": [50364, 400, 341, 6532, 307, 1143, 257, 688, 281, 4584, 721, 411, 8576, 11317, 11, 597, 307, 257, 636, 281, 50778, 50778, 15529, 14740, 11, 597, 307, 411, 257, 534, 13494, 636, 281, 360, 552, 13, 51020, 51020, 407, 291, 15529, 264, 4145, 490, 264, 1442, 311, 935, 295, 1910, 13, 51304, 51304, 407, 550, 291, 486, 536, 437, 311, 17173, 11, 437, 311, 294, 14740, 13, 51536, 51536, 400, 550, 291, 15529, 309, 490, 264, 2799, 935, 295, 1910, 11, 457, 291, 764, 300, 382, 257, 4471, 281, 2573, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.10596861890567247, "compression_ratio": 1.77, "no_caption_prob": 9.904197213472798e-05}, {"id": 830, "seek": 352636, "start": 3526.36, "end": 3530.6400000000003, "text": " out what is in the shadows, what is highlighted.", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 831, "seek": 352636, "start": 3530.6400000000003, "end": 3537.92, "text": " Or things like HDR or things like, well, there are a lot of use cases that would require", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 832, "seek": 352636, "start": 3537.92, "end": 3538.92, "text": " this.", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 833, "seek": 352636, "start": 3538.92, "end": 3543.7200000000003, "text": " And you're saying that this two pass system is not possible with WebGL?", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 834, "seek": 352636, "start": 3543.7200000000003, "end": 3547.32, "text": " With the current API of WebGL, you only do one pass.", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 835, "seek": 352636, "start": 3547.32, "end": 3550.4, "text": " Sorry, of WebGL or Elm WebGL?", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 836, "seek": 352636, "start": 3550.4, "end": 3551.4, "text": " Elm WebGL.", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 837, "seek": 352636, "start": 3551.4, "end": 3552.4, "text": " Okay.", "tokens": [50364, 484, 437, 307, 294, 264, 14740, 11, 437, 307, 17173, 13, 50578, 50578, 1610, 721, 411, 29650, 420, 721, 411, 11, 731, 11, 456, 366, 257, 688, 295, 764, 3331, 300, 576, 3651, 50942, 50942, 341, 13, 50992, 50992, 400, 291, 434, 1566, 300, 341, 732, 1320, 1185, 307, 406, 1944, 365, 9573, 19440, 30, 51232, 51232, 2022, 264, 2190, 9362, 295, 9573, 19440, 11, 291, 787, 360, 472, 1320, 13, 51412, 51412, 4919, 11, 295, 9573, 19440, 420, 2699, 76, 9573, 19440, 30, 51566, 51566, 2699, 76, 9573, 19440, 13, 51616, 51616, 1033, 13, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.2218007945051097, "compression_ratio": 1.5365853658536586, "no_caption_prob": 0.00015115691348910332}, {"id": 838, "seek": 355240, "start": 3552.4, "end": 3560.32, "text": " And we are still exploring possible ways of how to achieve multipass rendering.", "tokens": [50364, 400, 321, 366, 920, 12736, 1944, 2098, 295, 577, 281, 4584, 3311, 640, 22407, 13, 50760, 50760, 821, 366, 512, 3487, 13, 50810, 50810, 286, 519, 19595, 575, 512, 3487, 13, 50898, 50898, 286, 630, 411, 257, 5903, 19475, 295, 341, 13, 51096, 51096, 400, 370, 286, 1116, 411, 281, 7081, 300, 341, 307, 1944, 11, 457, 264, 9362, 295, 300, 307, 406, 665, 13, 51564, 51564, 440, 881, 19011, 551, 466, 341, 307, 291, 362, 281, 35713, 439, 613, 8495, 337, 613, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18321379299821525, "compression_ratio": 1.599056603773585, "no_caption_prob": 3.218506753910333e-05}, {"id": 839, "seek": 355240, "start": 3560.32, "end": 3561.32, "text": " There are some ideas.", "tokens": [50364, 400, 321, 366, 920, 12736, 1944, 2098, 295, 577, 281, 4584, 3311, 640, 22407, 13, 50760, 50760, 821, 366, 512, 3487, 13, 50810, 50810, 286, 519, 19595, 575, 512, 3487, 13, 50898, 50898, 286, 630, 411, 257, 5903, 19475, 295, 341, 13, 51096, 51096, 400, 370, 286, 1116, 411, 281, 7081, 300, 341, 307, 1944, 11, 457, 264, 9362, 295, 300, 307, 406, 665, 13, 51564, 51564, 440, 881, 19011, 551, 466, 341, 307, 291, 362, 281, 35713, 439, 613, 8495, 337, 613, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18321379299821525, "compression_ratio": 1.599056603773585, "no_caption_prob": 3.218506753910333e-05}, {"id": 840, "seek": 355240, "start": 3561.32, "end": 3563.08, "text": " I think Ian has some ideas.", "tokens": [50364, 400, 321, 366, 920, 12736, 1944, 2098, 295, 577, 281, 4584, 3311, 640, 22407, 13, 50760, 50760, 821, 366, 512, 3487, 13, 50810, 50810, 286, 519, 19595, 575, 512, 3487, 13, 50898, 50898, 286, 630, 411, 257, 5903, 19475, 295, 341, 13, 51096, 51096, 400, 370, 286, 1116, 411, 281, 7081, 300, 341, 307, 1944, 11, 457, 264, 9362, 295, 300, 307, 406, 665, 13, 51564, 51564, 440, 881, 19011, 551, 466, 341, 307, 291, 362, 281, 35713, 439, 613, 8495, 337, 613, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18321379299821525, "compression_ratio": 1.599056603773585, "no_caption_prob": 3.218506753910333e-05}, {"id": 841, "seek": 355240, "start": 3563.08, "end": 3567.04, "text": " I did like a rough prototype of this.", "tokens": [50364, 400, 321, 366, 920, 12736, 1944, 2098, 295, 577, 281, 4584, 3311, 640, 22407, 13, 50760, 50760, 821, 366, 512, 3487, 13, 50810, 50810, 286, 519, 19595, 575, 512, 3487, 13, 50898, 50898, 286, 630, 411, 257, 5903, 19475, 295, 341, 13, 51096, 51096, 400, 370, 286, 1116, 411, 281, 7081, 300, 341, 307, 1944, 11, 457, 264, 9362, 295, 300, 307, 406, 665, 13, 51564, 51564, 440, 881, 19011, 551, 466, 341, 307, 291, 362, 281, 35713, 439, 613, 8495, 337, 613, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18321379299821525, "compression_ratio": 1.599056603773585, "no_caption_prob": 3.218506753910333e-05}, {"id": 842, "seek": 355240, "start": 3567.04, "end": 3576.4, "text": " And so I'd like to prove that this is possible, but the API of that is not good.", "tokens": [50364, 400, 321, 366, 920, 12736, 1944, 2098, 295, 577, 281, 4584, 3311, 640, 22407, 13, 50760, 50760, 821, 366, 512, 3487, 13, 50810, 50810, 286, 519, 19595, 575, 512, 3487, 13, 50898, 50898, 286, 630, 411, 257, 5903, 19475, 295, 341, 13, 51096, 51096, 400, 370, 286, 1116, 411, 281, 7081, 300, 341, 307, 1944, 11, 457, 264, 9362, 295, 300, 307, 406, 665, 13, 51564, 51564, 440, 881, 19011, 551, 466, 341, 307, 291, 362, 281, 35713, 439, 613, 8495, 337, 613, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18321379299821525, "compression_ratio": 1.599056603773585, "no_caption_prob": 3.218506753910333e-05}, {"id": 843, "seek": 355240, "start": 3576.4, "end": 3581.12, "text": " The most problematic thing about this is you have to allocate all these memories for these", "tokens": [50364, 400, 321, 366, 920, 12736, 1944, 2098, 295, 577, 281, 4584, 3311, 640, 22407, 13, 50760, 50760, 821, 366, 512, 3487, 13, 50810, 50810, 286, 519, 19595, 575, 512, 3487, 13, 50898, 50898, 286, 630, 411, 257, 5903, 19475, 295, 341, 13, 51096, 51096, 400, 370, 286, 1116, 411, 281, 7081, 300, 341, 307, 1944, 11, 457, 264, 9362, 295, 300, 307, 406, 665, 13, 51564, 51564, 440, 881, 19011, 551, 466, 341, 307, 291, 362, 281, 35713, 439, 613, 8495, 337, 613, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18321379299821525, "compression_ratio": 1.599056603773585, "no_caption_prob": 3.218506753910333e-05}, {"id": 844, "seek": 358112, "start": 3581.12, "end": 3586.48, "text": " intermediate buffers in order to store the intermediate renders.", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 845, "seek": 358112, "start": 3586.48, "end": 3589.6, "text": " And the API is declarative in a way.", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 846, "seek": 358112, "start": 3589.6, "end": 3591.88, "text": " You only have one way to pass things in.", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 847, "seek": 358112, "start": 3591.88, "end": 3596.96, "text": " You don't have a way to say when to remove something from the...", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 848, "seek": 358112, "start": 3596.96, "end": 3598.7999999999997, "text": " When to clear the allocation.", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 849, "seek": 358112, "start": 3598.7999999999997, "end": 3604.68, "text": " So you don't know whether you rendered this onto a texture.", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 850, "seek": 358112, "start": 3604.68, "end": 3607.66, "text": " You don't know how long are you going to need this texture.", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 851, "seek": 358112, "start": 3607.66, "end": 3610.74, "text": " Is it the result of this rendering?", "tokens": [50364, 19376, 9204, 433, 294, 1668, 281, 3531, 264, 19376, 6125, 433, 13, 50632, 50632, 400, 264, 9362, 307, 16694, 1166, 294, 257, 636, 13, 50788, 50788, 509, 787, 362, 472, 636, 281, 1320, 721, 294, 13, 50902, 50902, 509, 500, 380, 362, 257, 636, 281, 584, 562, 281, 4159, 746, 490, 264, 485, 51156, 51156, 1133, 281, 1850, 264, 27599, 13, 51248, 51248, 407, 291, 500, 380, 458, 1968, 291, 28748, 341, 3911, 257, 8091, 13, 51542, 51542, 509, 500, 380, 458, 577, 938, 366, 291, 516, 281, 643, 341, 8091, 13, 51691, 51691, 1119, 309, 264, 1874, 295, 341, 22407, 30, 51845, 51845], "temperature": 0.0, "avg_logprob": -0.1524926671441996, "compression_ratio": 1.7466666666666666, "no_caption_prob": 4.608441304299049e-05}, {"id": 852, "seek": 361074, "start": 3610.74, "end": 3618.72, "text": " So if it's some intermediate result that is still 60 frames per second, or it's like a", "tokens": [50364, 407, 498, 309, 311, 512, 19376, 1874, 300, 307, 920, 4060, 12083, 680, 1150, 11, 420, 309, 311, 411, 257, 50763, 50763, 8091, 4471, 11, 291, 15529, 309, 1564, 293, 550, 291, 434, 516, 281, 1066, 309, 5680, 293, 764, 294, 439, 264, 51143, 51143, 19962, 15529, 1109, 13, 51248, 51248, 467, 311, 534, 1152, 281, 980, 13, 51298, 51298, 821, 366, 3866, 764, 3331, 293, 1348, 493, 365, 364, 9362, 281, 1406, 439, 295, 300, 307, 588, 51595, 51595, 7595, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.17831451948298965, "compression_ratio": 1.5162790697674418, "no_caption_prob": 1.0187987982135382e-06}, {"id": 853, "seek": 361074, "start": 3618.72, "end": 3626.3199999999997, "text": " texture map, you render it once and then you're going to keep it forever and use in all the", "tokens": [50364, 407, 498, 309, 311, 512, 19376, 1874, 300, 307, 920, 4060, 12083, 680, 1150, 11, 420, 309, 311, 411, 257, 50763, 50763, 8091, 4471, 11, 291, 15529, 309, 1564, 293, 550, 291, 434, 516, 281, 1066, 309, 5680, 293, 764, 294, 439, 264, 51143, 51143, 19962, 15529, 1109, 13, 51248, 51248, 467, 311, 534, 1152, 281, 980, 13, 51298, 51298, 821, 366, 3866, 764, 3331, 293, 1348, 493, 365, 364, 9362, 281, 1406, 439, 295, 300, 307, 588, 51595, 51595, 7595, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.17831451948298965, "compression_ratio": 1.5162790697674418, "no_caption_prob": 1.0187987982135382e-06}, {"id": 854, "seek": 361074, "start": 3626.3199999999997, "end": 3628.4199999999996, "text": " subsequent renderings.", "tokens": [50364, 407, 498, 309, 311, 512, 19376, 1874, 300, 307, 920, 4060, 12083, 680, 1150, 11, 420, 309, 311, 411, 257, 50763, 50763, 8091, 4471, 11, 291, 15529, 309, 1564, 293, 550, 291, 434, 516, 281, 1066, 309, 5680, 293, 764, 294, 439, 264, 51143, 51143, 19962, 15529, 1109, 13, 51248, 51248, 467, 311, 534, 1152, 281, 980, 13, 51298, 51298, 821, 366, 3866, 764, 3331, 293, 1348, 493, 365, 364, 9362, 281, 1406, 439, 295, 300, 307, 588, 51595, 51595, 7595, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.17831451948298965, "compression_ratio": 1.5162790697674418, "no_caption_prob": 1.0187987982135382e-06}, {"id": 855, "seek": 361074, "start": 3628.4199999999996, "end": 3629.4199999999996, "text": " It's really hard to tell.", "tokens": [50364, 407, 498, 309, 311, 512, 19376, 1874, 300, 307, 920, 4060, 12083, 680, 1150, 11, 420, 309, 311, 411, 257, 50763, 50763, 8091, 4471, 11, 291, 15529, 309, 1564, 293, 550, 291, 434, 516, 281, 1066, 309, 5680, 293, 764, 294, 439, 264, 51143, 51143, 19962, 15529, 1109, 13, 51248, 51248, 467, 311, 534, 1152, 281, 980, 13, 51298, 51298, 821, 366, 3866, 764, 3331, 293, 1348, 493, 365, 364, 9362, 281, 1406, 439, 295, 300, 307, 588, 51595, 51595, 7595, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.17831451948298965, "compression_ratio": 1.5162790697674418, "no_caption_prob": 1.0187987982135382e-06}, {"id": 856, "seek": 361074, "start": 3629.4199999999996, "end": 3635.3599999999997, "text": " There are multiple use cases and coming up with an API to support all of that is very", "tokens": [50364, 407, 498, 309, 311, 512, 19376, 1874, 300, 307, 920, 4060, 12083, 680, 1150, 11, 420, 309, 311, 411, 257, 50763, 50763, 8091, 4471, 11, 291, 15529, 309, 1564, 293, 550, 291, 434, 516, 281, 1066, 309, 5680, 293, 764, 294, 439, 264, 51143, 51143, 19962, 15529, 1109, 13, 51248, 51248, 467, 311, 534, 1152, 281, 980, 13, 51298, 51298, 821, 366, 3866, 764, 3331, 293, 1348, 493, 365, 364, 9362, 281, 1406, 439, 295, 300, 307, 588, 51595, 51595, 7595, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.17831451948298965, "compression_ratio": 1.5162790697674418, "no_caption_prob": 1.0187987982135382e-06}, {"id": 857, "seek": 361074, "start": 3635.3599999999997, "end": 3636.3599999999997, "text": " challenging.", "tokens": [50364, 407, 498, 309, 311, 512, 19376, 1874, 300, 307, 920, 4060, 12083, 680, 1150, 11, 420, 309, 311, 411, 257, 50763, 50763, 8091, 4471, 11, 291, 15529, 309, 1564, 293, 550, 291, 434, 516, 281, 1066, 309, 5680, 293, 764, 294, 439, 264, 51143, 51143, 19962, 15529, 1109, 13, 51248, 51248, 467, 311, 534, 1152, 281, 980, 13, 51298, 51298, 821, 366, 3866, 764, 3331, 293, 1348, 493, 365, 364, 9362, 281, 1406, 439, 295, 300, 307, 588, 51595, 51595, 7595, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.17831451948298965, "compression_ratio": 1.5162790697674418, "no_caption_prob": 1.0187987982135382e-06}, {"id": 858, "seek": 363636, "start": 3636.36, "end": 3642.28, "text": " Well, I feel like I've got a lot better grasp of 3D stuff in Elm.", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 859, "seek": 363636, "start": 3642.28, "end": 3648.04, "text": " So there's so much more to learn, but I feel like I've finally started to wrap my head", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 860, "seek": 363636, "start": 3648.04, "end": 3649.46, "text": " around some of the basics.", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 861, "seek": 363636, "start": 3649.46, "end": 3651.7200000000003, "text": " So this was great.", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 862, "seek": 363636, "start": 3651.7200000000003, "end": 3657.08, "text": " So what should people take a look at if they want to dive in more?", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 863, "seek": 363636, "start": 3657.08, "end": 3660.0, "text": " We've got the Elm Explorations WebGL package that we've been talking about.", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 864, "seek": 363636, "start": 3660.0, "end": 3662.4, "text": " The docs are very thorough.", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 865, "seek": 363636, "start": 3662.4, "end": 3665.04, "text": " So first read the docs.", "tokens": [50364, 1042, 11, 286, 841, 411, 286, 600, 658, 257, 688, 1101, 21743, 295, 805, 35, 1507, 294, 2699, 76, 13, 50660, 50660, 407, 456, 311, 370, 709, 544, 281, 1466, 11, 457, 286, 841, 411, 286, 600, 2721, 1409, 281, 7019, 452, 1378, 50948, 50948, 926, 512, 295, 264, 14688, 13, 51019, 51019, 407, 341, 390, 869, 13, 51132, 51132, 407, 437, 820, 561, 747, 257, 574, 412, 498, 436, 528, 281, 9192, 294, 544, 30, 51400, 51400, 492, 600, 658, 264, 2699, 76, 12514, 284, 763, 9573, 19440, 7372, 300, 321, 600, 668, 1417, 466, 13, 51546, 51546, 440, 45623, 366, 588, 12934, 13, 51666, 51666, 407, 700, 1401, 264, 45623, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.15708274515266094, "compression_ratio": 1.5533596837944663, "no_caption_prob": 5.1438975788187236e-05}, {"id": 866, "seek": 366504, "start": 3665.04, "end": 3669.44, "text": " Then check the examples.", "tokens": [50364, 1396, 1520, 264, 5110, 13, 50584, 50584, 407, 456, 366, 5110, 294, 341, 7372, 11, 411, 322, 23331, 295, 341, 7372, 13, 50856, 50856, 286, 519, 512, 295, 552, 362, 668, 754, 6572, 322, 264, 2699, 76, 8247, 3144, 13, 51122, 51122, 407, 291, 393, 536, 552, 456, 13, 51206, 51206, 407, 1338, 11, 862, 365, 729, 13, 51264, 51264, 400, 550, 412, 512, 935, 291, 1062, 643, 281, 1466, 257, 857, 544, 833, 31079, 721, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2125711558777609, "compression_ratio": 1.544041450777202, "no_caption_prob": 6.601976929232478e-05}, {"id": 867, "seek": 366504, "start": 3669.44, "end": 3674.88, "text": " So there are examples in this package, like on GitHub of this package.", "tokens": [50364, 1396, 1520, 264, 5110, 13, 50584, 50584, 407, 456, 366, 5110, 294, 341, 7372, 11, 411, 322, 23331, 295, 341, 7372, 13, 50856, 50856, 286, 519, 512, 295, 552, 362, 668, 754, 6572, 322, 264, 2699, 76, 8247, 3144, 13, 51122, 51122, 407, 291, 393, 536, 552, 456, 13, 51206, 51206, 407, 1338, 11, 862, 365, 729, 13, 51264, 51264, 400, 550, 412, 512, 935, 291, 1062, 643, 281, 1466, 257, 857, 544, 833, 31079, 721, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2125711558777609, "compression_ratio": 1.544041450777202, "no_caption_prob": 6.601976929232478e-05}, {"id": 868, "seek": 366504, "start": 3674.88, "end": 3680.2, "text": " I think some of them have been even published on the Elm blank website.", "tokens": [50364, 1396, 1520, 264, 5110, 13, 50584, 50584, 407, 456, 366, 5110, 294, 341, 7372, 11, 411, 322, 23331, 295, 341, 7372, 13, 50856, 50856, 286, 519, 512, 295, 552, 362, 668, 754, 6572, 322, 264, 2699, 76, 8247, 3144, 13, 51122, 51122, 407, 291, 393, 536, 552, 456, 13, 51206, 51206, 407, 1338, 11, 862, 365, 729, 13, 51264, 51264, 400, 550, 412, 512, 935, 291, 1062, 643, 281, 1466, 257, 857, 544, 833, 31079, 721, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2125711558777609, "compression_ratio": 1.544041450777202, "no_caption_prob": 6.601976929232478e-05}, {"id": 869, "seek": 366504, "start": 3680.2, "end": 3681.88, "text": " So you can see them there.", "tokens": [50364, 1396, 1520, 264, 5110, 13, 50584, 50584, 407, 456, 366, 5110, 294, 341, 7372, 11, 411, 322, 23331, 295, 341, 7372, 13, 50856, 50856, 286, 519, 512, 295, 552, 362, 668, 754, 6572, 322, 264, 2699, 76, 8247, 3144, 13, 51122, 51122, 407, 291, 393, 536, 552, 456, 13, 51206, 51206, 407, 1338, 11, 862, 365, 729, 13, 51264, 51264, 400, 550, 412, 512, 935, 291, 1062, 643, 281, 1466, 257, 857, 544, 833, 31079, 721, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2125711558777609, "compression_ratio": 1.544041450777202, "no_caption_prob": 6.601976929232478e-05}, {"id": 870, "seek": 366504, "start": 3681.88, "end": 3683.04, "text": " So yeah, play with those.", "tokens": [50364, 1396, 1520, 264, 5110, 13, 50584, 50584, 407, 456, 366, 5110, 294, 341, 7372, 11, 411, 322, 23331, 295, 341, 7372, 13, 50856, 50856, 286, 519, 512, 295, 552, 362, 668, 754, 6572, 322, 264, 2699, 76, 8247, 3144, 13, 51122, 51122, 407, 291, 393, 536, 552, 456, 13, 51206, 51206, 407, 1338, 11, 862, 365, 729, 13, 51264, 51264, 400, 550, 412, 512, 935, 291, 1062, 643, 281, 1466, 257, 857, 544, 833, 31079, 721, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2125711558777609, "compression_ratio": 1.544041450777202, "no_caption_prob": 6.601976929232478e-05}, {"id": 871, "seek": 366504, "start": 3683.04, "end": 3692.4, "text": " And then at some point you might need to learn a bit more underlining things.", "tokens": [50364, 1396, 1520, 264, 5110, 13, 50584, 50584, 407, 456, 366, 5110, 294, 341, 7372, 11, 411, 322, 23331, 295, 341, 7372, 13, 50856, 50856, 286, 519, 512, 295, 552, 362, 668, 754, 6572, 322, 264, 2699, 76, 8247, 3144, 13, 51122, 51122, 407, 291, 393, 536, 552, 456, 13, 51206, 51206, 407, 1338, 11, 862, 365, 729, 13, 51264, 51264, 400, 550, 412, 512, 935, 291, 1062, 643, 281, 1466, 257, 857, 544, 833, 31079, 721, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.2125711558777609, "compression_ratio": 1.544041450777202, "no_caption_prob": 6.601976929232478e-05}, {"id": 872, "seek": 369240, "start": 3692.4, "end": 3700.36, "text": " And there's a learning WebGL and there is a GitHub repo of I think, Nacho Martin.", "tokens": [50364, 400, 456, 311, 257, 2539, 9573, 19440, 293, 456, 307, 257, 23331, 49040, 295, 286, 519, 11, 11815, 78, 9184, 13, 50762, 50762, 634, 3031, 281, 1524, 613, 8820, 293, 360, 721, 294, 2699, 76, 13, 51212, 51212, 407, 291, 393, 536, 702, 19376, 3542, 295, 19472, 613, 8820, 294, 2699, 76, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.22442849477132162, "compression_ratio": 1.4133333333333333, "no_caption_prob": 4.2638286686269566e-05}, {"id": 873, "seek": 369240, "start": 3700.36, "end": 3709.36, "text": " He tried to follow these lessons and do things in Elm.", "tokens": [50364, 400, 456, 311, 257, 2539, 9573, 19440, 293, 456, 307, 257, 23331, 49040, 295, 286, 519, 11, 11815, 78, 9184, 13, 50762, 50762, 634, 3031, 281, 1524, 613, 8820, 293, 360, 721, 294, 2699, 76, 13, 51212, 51212, 407, 291, 393, 536, 702, 19376, 3542, 295, 19472, 613, 8820, 294, 2699, 76, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.22442849477132162, "compression_ratio": 1.4133333333333333, "no_caption_prob": 4.2638286686269566e-05}, {"id": 874, "seek": 369240, "start": 3709.36, "end": 3717.56, "text": " So you can see his intermediate results of completing these lessons in Elm.", "tokens": [50364, 400, 456, 311, 257, 2539, 9573, 19440, 293, 456, 307, 257, 23331, 49040, 295, 286, 519, 11, 11815, 78, 9184, 13, 50762, 50762, 634, 3031, 281, 1524, 613, 8820, 293, 360, 721, 294, 2699, 76, 13, 51212, 51212, 407, 291, 393, 536, 702, 19376, 3542, 295, 19472, 613, 8820, 294, 2699, 76, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.22442849477132162, "compression_ratio": 1.4133333333333333, "no_caption_prob": 4.2638286686269566e-05}, {"id": 875, "seek": 371756, "start": 3717.56, "end": 3725.2799999999997, "text": " But if you don't want to, then Elm 3D scene, it has its own API and it also has a very", "tokens": [50364, 583, 498, 291, 500, 380, 528, 281, 11, 550, 2699, 76, 805, 35, 4145, 11, 309, 575, 1080, 1065, 9362, 293, 309, 611, 575, 257, 588, 50750, 50750, 665, 14333, 13, 50800, 50800, 467, 754, 575, 40661, 295, 437, 291, 536, 498, 291, 764, 341, 3287, 13, 51128, 51128, 400, 291, 600, 658, 428, 2699, 76, 9573, 19440, 24646, 49040, 13, 51274, 51274, 639, 307, 437, 286, 1143, 294, 1668, 281, 862, 365, 264, 9362, 293, 536, 577, 281, 360, 721, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.24901858041452807, "compression_ratio": 1.462686567164179, "no_caption_prob": 6.50188303552568e-05}, {"id": 876, "seek": 371756, "start": 3725.2799999999997, "end": 3726.2799999999997, "text": " good documentation.", "tokens": [50364, 583, 498, 291, 500, 380, 528, 281, 11, 550, 2699, 76, 805, 35, 4145, 11, 309, 575, 1080, 1065, 9362, 293, 309, 611, 575, 257, 588, 50750, 50750, 665, 14333, 13, 50800, 50800, 467, 754, 575, 40661, 295, 437, 291, 536, 498, 291, 764, 341, 3287, 13, 51128, 51128, 400, 291, 600, 658, 428, 2699, 76, 9573, 19440, 24646, 49040, 13, 51274, 51274, 639, 307, 437, 286, 1143, 294, 1668, 281, 862, 365, 264, 9362, 293, 536, 577, 281, 360, 721, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.24901858041452807, "compression_ratio": 1.462686567164179, "no_caption_prob": 6.50188303552568e-05}, {"id": 877, "seek": 371756, "start": 3726.2799999999997, "end": 3732.84, "text": " It even has screenshots of what you see if you use this setting.", "tokens": [50364, 583, 498, 291, 500, 380, 528, 281, 11, 550, 2699, 76, 805, 35, 4145, 11, 309, 575, 1080, 1065, 9362, 293, 309, 611, 575, 257, 588, 50750, 50750, 665, 14333, 13, 50800, 50800, 467, 754, 575, 40661, 295, 437, 291, 536, 498, 291, 764, 341, 3287, 13, 51128, 51128, 400, 291, 600, 658, 428, 2699, 76, 9573, 19440, 24646, 49040, 13, 51274, 51274, 639, 307, 437, 286, 1143, 294, 1668, 281, 862, 365, 264, 9362, 293, 536, 577, 281, 360, 721, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.24901858041452807, "compression_ratio": 1.462686567164179, "no_caption_prob": 6.50188303552568e-05}, {"id": 878, "seek": 371756, "start": 3732.84, "end": 3735.7599999999998, "text": " And you've got your Elm WebGL playground repo.", "tokens": [50364, 583, 498, 291, 500, 380, 528, 281, 11, 550, 2699, 76, 805, 35, 4145, 11, 309, 575, 1080, 1065, 9362, 293, 309, 611, 575, 257, 588, 50750, 50750, 665, 14333, 13, 50800, 50800, 467, 754, 575, 40661, 295, 437, 291, 536, 498, 291, 764, 341, 3287, 13, 51128, 51128, 400, 291, 600, 658, 428, 2699, 76, 9573, 19440, 24646, 49040, 13, 51274, 51274, 639, 307, 437, 286, 1143, 294, 1668, 281, 862, 365, 264, 9362, 293, 536, 577, 281, 360, 721, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.24901858041452807, "compression_ratio": 1.462686567164179, "no_caption_prob": 6.50188303552568e-05}, {"id": 879, "seek": 371756, "start": 3735.7599999999998, "end": 3741.36, "text": " This is what I used in order to play with the API and see how to do things.", "tokens": [50364, 583, 498, 291, 500, 380, 528, 281, 11, 550, 2699, 76, 805, 35, 4145, 11, 309, 575, 1080, 1065, 9362, 293, 309, 611, 575, 257, 588, 50750, 50750, 665, 14333, 13, 50800, 50800, 467, 754, 575, 40661, 295, 437, 291, 536, 498, 291, 764, 341, 3287, 13, 51128, 51128, 400, 291, 600, 658, 428, 2699, 76, 9573, 19440, 24646, 49040, 13, 51274, 51274, 639, 307, 437, 286, 1143, 294, 1668, 281, 862, 365, 264, 9362, 293, 536, 577, 281, 360, 721, 13, 51554, 51554], "temperature": 0.0, "avg_logprob": -0.24901858041452807, "compression_ratio": 1.462686567164179, "no_caption_prob": 6.50188303552568e-05}, {"id": 880, "seek": 374136, "start": 3741.36, "end": 3747.52, "text": " Because the very first thing, if you want to do 2D thing, then how can you render a", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 881, "seek": 374136, "start": 3747.52, "end": 3748.6400000000003, "text": " sprite on the screen?", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 882, "seek": 374136, "start": 3748.6400000000003, "end": 3751.1200000000003, "text": " That's a very basic thing.", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 883, "seek": 374136, "start": 3751.1200000000003, "end": 3755.7200000000003, "text": " Just like a 2D rectangle with an image on it.", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 884, "seek": 374136, "start": 3755.7200000000003, "end": 3757.36, "text": " I have an example like this.", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 885, "seek": 374136, "start": 3757.36, "end": 3760.88, "text": " Yeah, and you've got lots of games.", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 886, "seek": 374136, "start": 3760.88, "end": 3763.2400000000002, "text": " You've given many conference talks about this stuff.", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 887, "seek": 374136, "start": 3763.2400000000002, "end": 3770.48, "text": " So if people want to see more advanced stuff, less fundamentals and intro to the basics", "tokens": [50364, 1436, 264, 588, 700, 551, 11, 498, 291, 528, 281, 360, 568, 35, 551, 11, 550, 577, 393, 291, 15529, 257, 50672, 50672, 43848, 322, 264, 2568, 30, 50728, 50728, 663, 311, 257, 588, 3875, 551, 13, 50852, 50852, 1449, 411, 257, 568, 35, 21930, 365, 364, 3256, 322, 309, 13, 51082, 51082, 286, 362, 364, 1365, 411, 341, 13, 51164, 51164, 865, 11, 293, 291, 600, 658, 3195, 295, 2813, 13, 51340, 51340, 509, 600, 2212, 867, 7586, 6686, 466, 341, 1507, 13, 51458, 51458, 407, 498, 561, 528, 281, 536, 544, 7339, 1507, 11, 1570, 29505, 293, 12897, 281, 264, 14688, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18418009036055236, "compression_ratio": 1.5802469135802468, "no_caption_prob": 0.00016340451838914305}, {"id": 888, "seek": 377048, "start": 3770.48, "end": 3773.48, "text": " of WebGL, they should definitely check out your conference talks.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 889, "seek": 377048, "start": 3773.48, "end": 3774.92, "text": " We'll link to some of those as well.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 890, "seek": 377048, "start": 3774.92, "end": 3778.84, "text": " Or just talk to me directly.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 891, "seek": 377048, "start": 3778.84, "end": 3779.84, "text": " Even better.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 892, "seek": 377048, "start": 3779.84, "end": 3780.84, "text": " That's great.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 893, "seek": 377048, "start": 3780.84, "end": 3781.84, "text": " Yeah.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 894, "seek": 377048, "start": 3781.84, "end": 3785.6, "text": " On Soundscapes, on Elm Slack or on Twitter.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 895, "seek": 377048, "start": 3785.6, "end": 3791.2400000000002, "text": " I'm really glad we got to sit you down and ask all of our dumbest questions.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 896, "seek": 377048, "start": 3791.2400000000002, "end": 3796.36, "text": " So thank you for being patient with us and walking us through fundamentals.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 897, "seek": 377048, "start": 3796.36, "end": 3799.8, "text": " And I hope some other 3D newbies found it useful as well.", "tokens": [50364, 295, 9573, 19440, 11, 436, 820, 2138, 1520, 484, 428, 7586, 6686, 13, 50514, 50514, 492, 603, 2113, 281, 512, 295, 729, 382, 731, 13, 50586, 50586, 1610, 445, 751, 281, 385, 3838, 13, 50782, 50782, 2754, 1101, 13, 50832, 50832, 663, 311, 869, 13, 50882, 50882, 865, 13, 50932, 50932, 1282, 14576, 496, 5190, 11, 322, 2699, 76, 37211, 420, 322, 5794, 13, 51120, 51120, 286, 478, 534, 5404, 321, 658, 281, 1394, 291, 760, 293, 1029, 439, 295, 527, 10316, 377, 1651, 13, 51402, 51402, 407, 1309, 291, 337, 885, 4537, 365, 505, 293, 4494, 505, 807, 29505, 13, 51658, 51658, 400, 286, 1454, 512, 661, 805, 35, 777, 23177, 1352, 309, 4420, 382, 731, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.16575123833828284, "compression_ratio": 1.4964285714285714, "no_caption_prob": 8.218552829930559e-05}, {"id": 898, "seek": 379980, "start": 3799.8, "end": 3801.84, "text": " Yeah, thank you.", "tokens": [50364, 865, 11, 1309, 291, 13, 50466, 50466, 1044, 291, 588, 709, 337, 18202, 385, 13, 50606, 50606, 4372, 665, 281, 312, 4420, 13, 50656, 50656, 467, 390, 257, 6834, 13, 50706, 50706, 865, 13, 50756, 50756, 2561, 370, 709, 11, 400, 7950, 13, 50806, 50806, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 50924, 50924, 9088, 958, 565, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2780918847946894, "compression_ratio": 1.34375, "no_caption_prob": 0.0003916532441508025}, {"id": 899, "seek": 379980, "start": 3801.84, "end": 3804.6400000000003, "text": " Thank you very much for inviting me.", "tokens": [50364, 865, 11, 1309, 291, 13, 50466, 50466, 1044, 291, 588, 709, 337, 18202, 385, 13, 50606, 50606, 4372, 665, 281, 312, 4420, 13, 50656, 50656, 467, 390, 257, 6834, 13, 50706, 50706, 865, 13, 50756, 50756, 2561, 370, 709, 11, 400, 7950, 13, 50806, 50806, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 50924, 50924, 9088, 958, 565, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2780918847946894, "compression_ratio": 1.34375, "no_caption_prob": 0.0003916532441508025}, {"id": 900, "seek": 379980, "start": 3804.6400000000003, "end": 3805.6400000000003, "text": " Very good to be useful.", "tokens": [50364, 865, 11, 1309, 291, 13, 50466, 50466, 1044, 291, 588, 709, 337, 18202, 385, 13, 50606, 50606, 4372, 665, 281, 312, 4420, 13, 50656, 50656, 467, 390, 257, 6834, 13, 50706, 50706, 865, 13, 50756, 50756, 2561, 370, 709, 11, 400, 7950, 13, 50806, 50806, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 50924, 50924, 9088, 958, 565, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2780918847946894, "compression_ratio": 1.34375, "no_caption_prob": 0.0003916532441508025}, {"id": 901, "seek": 379980, "start": 3805.6400000000003, "end": 3806.6400000000003, "text": " It was a pleasure.", "tokens": [50364, 865, 11, 1309, 291, 13, 50466, 50466, 1044, 291, 588, 709, 337, 18202, 385, 13, 50606, 50606, 4372, 665, 281, 312, 4420, 13, 50656, 50656, 467, 390, 257, 6834, 13, 50706, 50706, 865, 13, 50756, 50756, 2561, 370, 709, 11, 400, 7950, 13, 50806, 50806, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 50924, 50924, 9088, 958, 565, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2780918847946894, "compression_ratio": 1.34375, "no_caption_prob": 0.0003916532441508025}, {"id": 902, "seek": 379980, "start": 3806.6400000000003, "end": 3807.6400000000003, "text": " Yeah.", "tokens": [50364, 865, 11, 1309, 291, 13, 50466, 50466, 1044, 291, 588, 709, 337, 18202, 385, 13, 50606, 50606, 4372, 665, 281, 312, 4420, 13, 50656, 50656, 467, 390, 257, 6834, 13, 50706, 50706, 865, 13, 50756, 50756, 2561, 370, 709, 11, 400, 7950, 13, 50806, 50806, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 50924, 50924, 9088, 958, 565, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2780918847946894, "compression_ratio": 1.34375, "no_caption_prob": 0.0003916532441508025}, {"id": 903, "seek": 379980, "start": 3807.6400000000003, "end": 3808.6400000000003, "text": " Thanks so much, Andrey.", "tokens": [50364, 865, 11, 1309, 291, 13, 50466, 50466, 1044, 291, 588, 709, 337, 18202, 385, 13, 50606, 50606, 4372, 665, 281, 312, 4420, 13, 50656, 50656, 467, 390, 257, 6834, 13, 50706, 50706, 865, 13, 50756, 50756, 2561, 370, 709, 11, 400, 7950, 13, 50806, 50806, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 50924, 50924, 9088, 958, 565, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2780918847946894, "compression_ratio": 1.34375, "no_caption_prob": 0.0003916532441508025}, {"id": 904, "seek": 379980, "start": 3808.6400000000003, "end": 3811.0, "text": " And Jeroen, until next time.", "tokens": [50364, 865, 11, 1309, 291, 13, 50466, 50466, 1044, 291, 588, 709, 337, 18202, 385, 13, 50606, 50606, 4372, 665, 281, 312, 4420, 13, 50656, 50656, 467, 390, 257, 6834, 13, 50706, 50706, 865, 13, 50756, 50756, 2561, 370, 709, 11, 400, 7950, 13, 50806, 50806, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 50924, 50924, 9088, 958, 565, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2780918847946894, "compression_ratio": 1.34375, "no_caption_prob": 0.0003916532441508025}, {"id": 905, "seek": 381100, "start": 3811.0, "end": 3833.56, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 51492], "temperature": 0.0, "avg_logprob": -0.5763204438345773, "compression_ratio": 0.6666666666666666, "no_caption_prob": 0.00024834845680743456}], "language": "en"}