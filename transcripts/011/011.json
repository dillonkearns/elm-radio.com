{"text": " Hello, Jeroen. Hello, Dylan. How are you doing today? I'm doing pretty well. How about you? I can't complain. I'm thinking about this concept of parsing, but not Elm parsers. Parsing versus validating. I.e. parse don't validate. I've heard that article before. Yeah, this is kind of fun. It's actually, it kind of feels like a book club a little bit. I reread this article which is sort of circulated around. It's by Alexis King, Lexi Lambda. It really encapsulates a lot of really nice ideas and expresses them very well. Yeah, yeah, definitely. So can you give a summary of what it is about? It was nice rereading this article because I sort of tried to capture a couple of quotes that I think nicely summarized the article itself. And this one really stuck out to me. The difference between validation and parsing lies almost entirely in how information is preserved. So I think that it's really keeping track of information. As you go deeper into the logic and function calls in your code, you should have more and more highly structured data. You should have more things that you've proven through the data types that you have. A perfect example is JSON, right? At the periphery of your application, maybe like through like a flag or a port, you could have some JSON data coming through. But in the core of your Elm application, you're going to get that in a structured way. I think it's important to point out what this technique or this technique tries to prevent you from doing, which pitfalls it prevents you from falling into. And that is to check things several times. Yes, exactly. What was the, I think there was like an academic article that she was referencing referring to shotgun parsing. Yeah, shotgun parsing. So the idea is that you check for something once, like, is this list empty? In one condition, you do something and the other condition you say, hey, we don't want to have an empty list in this case. And then in the condition where you said, where you notice that the list is not empty, you do some other operations. And then you have to check because of some other operation that the list is empty or not again. And if you did it with a if then else statement, then you lost that information and you have to make the check again, meaning that you have to handle the case where the list is empty. Exactly. You haven't preserved that information that you had. You had the information and then you lost it. So the type system can no longer help you with that. Yeah. So you have to handle the case again, even though you knew it already. Or keep track of it in your head and say, oh, at this stage, I know that this data has already checked for this. Or I think I know. Exactly. I'll check later if I did check that again. See also JavaScript. Come on, don't throw JavaScript under the bus. I mean, we touched on this in our in our JSON decoding episode a little bit that this is a very familiar experience. And you can certainly write JavaScript in a way where you're handling the validation step up front as sort of a single step rather than this sort of shotgun parsing approach. But I do find that it's quite common that you see this in JavaScript where you're sort of mixing processing data with validating the data. Yeah, so can you explain what shotgun parsing is? Because I don't think we did. We explained it. Yes, I think shotgun parsing is just defined as mixing processing data with validating data. So it's your intermingling those processes rather than sort of validating data upfront and parsing it in a single process. And then now that you have the data, process that data. Does that seem like a fair definition? Let's just reread the article real quick. So here's a quote. Shotgun parsing is a programming anti pattern, whereby parsing and input validating code is mixed and spread across processing code, throwing a cloud of checks at the input and hoping without any systematic justification that one or another would catch all the bad cases. Yeah, so for me, it means that you have if else statements all over the place. And then you hopefully have enough to make sure that all the cases are handled. And maybe there are maybe they're not. I was recently working with some some Ruby code. And there's like a, you know, in the controller, the Ruby controller, MVC controller, you can you can say like params, and then get whatever, you know, data that's been passed in in the in the request. And it's quite common to see Ruby code where you just sort of grab the params and maybe like you you try to remember to check in front of the code, maybe you add like you can add these like before filters and that sort of thing in in your rails controllers where you're you're asserting certain things about the data before you get it. But then you're just directly reading like params sub username or something and params dot sub dot username, you mean something like that? Well, like params square brackets, some value. So you're like grabbing a key out of hash that's just grabbing this raw data. And it seems very prone to this sort of shotgun parsing anti pattern. So another thing that I've seen, I was working with with some Ruby code recently that I found to be a nice pattern that there was this sort of validator class that you could sort of assert things about the data, and then you pass that data after you've made the assertions. So you're never directly accessing the params in your controller, you're grabbing data after you've made these validations. So you can certainly like use this pattern of thinking parse don't validate in non typed languages. But when you're working with the typed language, you can actually have your type signatures, keep you honest to make sure that your data types have the proofs in them. So you could say this has to be a non empty list. And now you can't just forget like, oh, I need to be sure to check all these invariants at the top, you've proven by the time you call that code because it requires a non empty list type. Let's talk a little bit about the term parse, because that's certainly something that stuck out to me when I when I first read this article. You know, it's a little confusing. And she does kind of get into that. And she says, let me try to convince you that this word parse is actually a good term for this concept. It might seem unrelated at first. So she's sort of saying, what is a parser? It's a function. So she's here's a quote, a parser is just a function and produces more structured output. Some values in the domain do not correspond to any value in the range. So all parsers must have some notion of failure. So I think that's an important point, right is that if you're able to fail, then we kind of talked about this in our opaque types episode that you can have a function that conditionally returns a type. And the way you do that in Elm is you can return a result or maybe type or a custom type. Yeah, right. And that represents a failure. So you have to handle the failure step. But once you check for failure, so you say, you know, case parse result, okay, error. Well in the okay case, you know, you have that data, you know, you've validated whatever you validated by the data that it's a non empty list that it's an authenticated user that it's a valid username, whatever you've validated, you can conditionally return a type and you know that the only way you can get that type is by running it through a function that will conditionally give you that type if the validation passes. So it's sort of this technique of just instead of just doing a conditional, and then losing the proof that you've done in that conditional, you return a type, if it's true, and else you return nothing or you return an error. And now you're able to keep track of that proof that you've just done. Yeah, the simplest example that I can find is when you do case of expression on a maybe. So you do case, maybe something of, and then you have two cases, just something, and then you have access to that something as if it is not a maybe, and then nothing where you don't have it. And then in that case where you have something, you just use it to what like normal value. And you have successfully branched off depending on that value, but you have remembered in that branch that the value is there. You don't start again with a maybe something. Yes, exactly. You've proven that and so now you can work with that type without having to check for it again. And yeah, I think that's a great example. And what often occurs, like to contrast that with the alternative to what you just described, you just keep passing the maybe down, even though you've sort of unwrapped it in that case statement and you've verified that it's present, if you expect it, sometimes you'll see things like, you know, maybe with default empty string. Now that may be what you want in some cases, and it's not inherently bad to use maybe.withDefault. But I think it's good to be aware that sometimes maybe.withDefault is a smell that indicates that you're basically validating rather than parsing. Yeah, and in some other way you lose information of what was in the maybe beforehand. Right. You still have access to that maybe value, but you probably won't use it anymore. Right. Like let's say that you only want to run a certain bit of logic if you have a username. If you're a logged in user and you have a username, you pass around this maybe user and then you say maybe.map username. And maybe you pass in maybe.withDefault empty string. Now you've got a string. You've got a string. What does the string represent? Well, it might represent a username or it might be an empty string. Why is the string empty? Is the string empty? Does it represent a pending username that hasn't been saved or does it represent a username that came from a user or does it represent a guest user who's not logged in and therefore you used maybe.withDefault empty string? It could possibly represent all those things. And well, that's, Alexis had the phrase in her article at one point, it's a bug waiting to happen. That phrase often pops into my mind actually as well. And I would call that a bug waiting to happen. It's a time bomb. So what would you do instead? Well, I mean, there are a lot of ways you can handle that, but you could have, for example, a custom type that keeps track of that information. And so you know if you have a username, if you have a logged in user, if you try to get the logged in user and you get nothing, check that in one spot and pass that data through, or maybe you wrap that in a custom type and you turn that into a custom type that's either a guest or a logged in user. But whatever it is, you want to preserve that information. So that's like a common thing. If you're sort of getting the lowest common denominator data type, you're getting some like built in data type like a string and you're passing it around and it could represent different things. It's a bug waiting to happen and it's probably an opportunity to use this technique of parse don't validate. Yeah, usually when you simplify a complex data structure, data to a single primitive or way simpler version of it, you're bound to lose data. And if you do need that piece of data later on, then yeah, you're going to do some assumptions which might be correct now, but which might be incorrect later. And what you would like to do to have is to have the compiler check things for you. Exactly. So if you make assumptions by yourself and do maybe with default empty string, because it will always be true in this case, because I checked it before, then it might be true now, but maybe later on, because you move code around and the code might not have the check anymore beforehand, then at some point things will change and you'll have a bug basically. Right. Yeah. One, one thing I like to think about is imagine somebody is new to your code base. If they come into the code base and they start using some code, how much do you have to tell them? How many caveats are you going to explain to them? Like, Oh, okay. So like if you're doing a code review on some code, they just wrote, how afraid are you going to be that that's going to get merged without you carefully checking that these constraints are met? Like, Oh, when you call this function, like if you call it with an empty string, then then that's a problem. So you have to make sure it's never an empty string. Like see this code over here. It checks if the string is empty. Well, that burden shouldn't be on the newcomer to the code base. That burden should be on the code that protects those conditions. And it, you know, it needs to validate its input and then preserve that in type information. And so it then becomes impossible because maybe you have like a non empty string type that you take as an input to this or whatever data type that you validate into. So one thing that I understand from this technique is that pretty much every time you want to keep the information from the checks or the parsing that you have beforehand, you kind of need to have a new or a specific custom type to your guarantees, to your assumptions. So in the case of, um, I want a non empty list of something. So yeah, you check beforehand whether your list is empty or not, you're doing a parsing. So you get a non empty list. So in the case of a non empty list that is quite generic, but in some cases you probably need a new custom type. You will have a new custom type for every step of your function calls. And I think that's probably okay. In practice, I don't think you will have so many new types. That's not something that I noticed in my code base at least. Yeah, it's not. I mean, it's so lightweight to create types in Elm and so that's definitely not a problem. I mean, another thing that Alexis talks about in the article is that you can use built in types that have the characteristics that you need. So for example, if you're saying that I can't have duplicate values in this list, then you parse it into a set and the set data structure is going to take care of that for you. And when you look at a set, you know that there are no duplicate keys. You don't have to think about that. She also talks about this technique of weakening return types and strengthening input types. Yeah, that's nice. That's a really nice sort of insight that she's captured there. Those are sort of two tools at your disposal. So we kind of talked about weakening return types with conditionally returning custom types. So if you want to check if you have a valid username, you can conditionally return a custom type that represents a valid username. And if it's not valid, then you return nothing or error or some data type that doesn't give you the username type that represents a validated username. Yeah, so it's a weakened compared to always returning a valid username. Exactly so instead of returning a username, you return a maybe user or guest or user type. Exactly exactly which JSON decoding is the same pattern you I mean, it's parsing it's it's not parsing in the sort of computer science sense of building up an AST and parsing the tokens that's already been done with JSON decoders. We discussed in our JSON episode, but it is parsing in Lexi's sense of the term in Alexis a sense of the term where you have a way for it to fail. And if it hasn't failed, then you've guaranteed certain qualities and you capture that in a data type. So yeah, that's weakening the return type. That's a very useful technique. And then on the other side, they're strengthening the input type and those those two things go hand in hand. And strengthening the input type. She gives the example of requiring a non empty list as an argument. And I find that that sort of thing strengthening the input type, it's quite nice because you want to write really confident code that doesn't think about validating all these conditions, you want to demand that your callers give you that data, and then be confident about just using it right. And when you do that, I mean, I think that that sort of gets at that shotgun parsing concept that you're not sort of blending these responsibilities of processing the data and validating the data, right? Like, you should separate those responsibilities. So if a function's job is to process data, state what data you need upfront with the types, the types should express the guarantees that you need. So that's sort of that's kind of this concept of like design by contract where you're expressing the contract, and you can work with those assumptions within that code and just confidently work without checking those assumptions. In the case of a typed language, and especially Elm, you can encode those guarantees and that contract into types. So that's strengthening the input type, be very clear about what you require as a as a constraint. And then just confidently work with those assumptions, rather than mixing the checking and the processing. Yeah, I find it kind of odd, but it actually feels very natural to people who write Elm usually because you do this with JSON decoding all the time. We took it as an example already. But let's imagine if we didn't do it, what you would probably do is you get a JSON value from an HTTP request somewhere or from flags. And then every time you need to access one field of it, you decode it for every use every field, but not all at once. And that just sounds unimaginable. Which you could do if you wanted to. Because you can do like a JSON decode dot value. And yeah, also, so you could defer decoding and just get a JSON decode value for a certain subtree of your JSON, and then parse it again at a later step. And that would be that sort of like shotgun parsing approach. But we don't like naturally people tend not to do that. I think maybe it's like a cultural thing. Maybe it's like the educational material and the examples. I think it's the education. But it also people don't like writing JSON decoders. So if you can do it once, that's fair. So a lot of people say, hey, JSON decoding in Elm is a pain. But you only do it once. And because it's a pain, yeah, that's why you only do it once. And that's why you get those guarantees right on the edges of your application. And you don't have to do shotgun parsing or shotgun thing. Shotgun parsing, yeah. Yeah. Yeah. Yeah, that's a great point. So it's something that is actually quite natural. Actually another reason why I think it's very natural when you write Elm is because you have to handle the error case. Exactly. Unlike even Haskell. How so? In Haskell, it's a warning if you have an inexhaustive case statement, right? But it's not an error. And Alexis talked about that even in the article. One of her examples is doing list.head in Haskell and how list.head in Haskell is somewhat broken. By default, it actually returns an element rather than a maybe element. Oh, yeah, the default, the standards head. Yeah. Exactly. So Elm is unique in how built into the language that approaches. Let's think of a few other examples because it's actually, I think it's quite widespread. And I think it's nice to sort of connect these examples that a lot of people will be familiar with this sort of concept of parse don't validate. So one that comes to mind for me is remote data. And I like the way you were framing this. What would it look like if we didn't use this parse don't validate approach with JSON decoding in Elm? Well, what would it look like if we didn't use this parse don't validate approach with remote data? And the answer is, well, you could have a loading flag and you could have some data that you check if it's loading. Remote data gives you this nice type that says you're going to need to destructure this code to see which value it is instead of just checking a Boolean to see if it's loading or if there was an error, for example. And I think another thing that the remote data example illustrates well is this concept of dealing with uncertainty at the periphery of your application. So with remote data, and I think maybe some people even use remote data and aren't familiar with this sort of technique. So you can just pass remote data down and check it. But what works the nicest is when if you say, I have these five different remote data values that I depend on, then you can say remote data dot map five. And if any of them have an error, then you want to show an error. And if some of them are loading, you want to show a loading screen instead of showing five different loading spinners like you sometimes see online. Which is reasonable also. That's right. It may be what you want in some cases. That's absolutely right. But often you want to take a set of things and maybe you even depend on these different pieces of data. So you can't do anything without this sort of aggregate piece of data, even though it comes from five different HTTP requests. And you just do remote data dot map five. And now you've got these five different remote data types that all come together at once rather than having to check all these different conditions. And so you handle that uncertainty at the very top level. And then you just have a code that's blissfully ignorant to the possible failures at the periphery. And it can just confidently use all of that data. It's got all of it. It doesn't need to check. Oh, well, if I have this and I don't have this, then handle it this way. Yeah. Yeah, this is usually what I use. Maybe map two and all the other map and functions. Same pattern. And it's something that you see quite often. Yes. I saw one example in some code I was working with recently where I did a refactoring and it turned out quite nicely. What I was seeing was exactly this validation smell rather than parsing that we were checking for a certain condition repeatedly and weren't able to use a data type to say, I need this condition. I wanted to strengthen the guarantees of the input I was getting. So the example was there was this data type representing a document type and one of the document types was unknown. And that was just in this big custom type, document type is this type or that type or that type or unknown. And so you get code like if document type dot is unknown or if document type equals equals document type dot unknown. This is annoying to check for all the other ones. Because there's special handling if it's unknown. So I think this is like maybe sort of its own sub pattern that sometimes you have data that's like mixed in and you want to be able to, again, you know, like we've been discussing, you want to keep track of what you've proven. So it's like if you've proven that you have a document type that's not unknown, now that unknown type is just one of the variants of this big document type. So to prove that it's not unknown, like there's no data type that can tell you that constraint. So one thing you could do is you could, you know, you could have like a known document type thing. But then if you can have unknown in there, then it's like you could have a custom type that says it's a known document type. But if you have a document type type in there, that could include unknown. So now you're possibly representing an impossible state. So what I did instead is I created a new top level document type that was just document type and document type was either unknown or a known document type. Yeah. And I created a separate type called known document type. And I just took all of the variants except for unknown and put it into there. And so now you can assert in certain functions that you have a known document type, in which case you don't need to check if document type is unknown, then handle it this special way. If you have known document type as the type of your function, you don't have to think about that case. Yeah, you've checked it once and you don't care about it afterwards. Yeah, exactly. And I think that this pattern comes up. Maybe you have like, like I find this is quite common that you'll have different custom type variants that have bits of data, you know, and if you know that you have these bits of data, like maybe you have like a guest user has certain bits of data and a logged in user has certain bits of data and admin user has certain bits of data. But if you want to track that, if you've checked and the only users that are allowed to see this page are admin users, if you have like a user custom type with those three different variants, admin, logged in and guest, you can't use those variants to say the view function for this page requires an admin user because it's a variant. It's not a type. So I think there's sort of like a, I don't know, maybe this is like an Elm refactoring technique to sort of take the bits of data of like admin user and then just extract out, you know, so if you have like admin user and it has either a record with bits of data or positional values in the constructor, I think that's like a nice refactoring to like pull out those bits of data, whether it's a record or positional constructor values, and then create a new custom type called admin user. And now you have type user equals admin user, admin user. It's kind of weird. But yeah, exactly. Maybe you have some sort of clever naming convention that makes it less awkward there, but that's a very common smell that I find that you lose track of which variant you have and you want to strengthen your input assumptions and you can't do that because it's locked in this variant, which you can't check for an Elm. You don't have to extract the admin data at the top level where you defined the user. You can just create a new admin user data or whatever better name you find locally at the location where you need it. So you don't need to refactor your whole application just because this one case. Right. That's a good point. But if it makes sense in other places, then yeah, by all means, please do. Right. And I think that's a very good point. And I think maybe it brings up another question, which is how do you control the creation and the sort of destructuring and reading of that data? So some data you want to protect, we discussed this in our opaque types episode. So it might be like a social security number that you want to be careful about how it's presented and make sure it's encrypted before it's sent over HTTP or whatever. But you also want to protect sort of low level data, right? Well, I guess another way to handle protecting low level data is to not make it low level, to wrap it in a type that represents the assumption. So I guess it depends on where you want that abstraction to be. For example, if you have an ID that's just an int or maybe you have like an admin user ID type or a user ID type, you can have more low level data if it's encapsulated in its own module that's protected, that you can't directly read the data from. You can only get it in the functions that are exposed by the admin user module. So there's the question of do you have access to internal data, which may be too low level to use? And then do you have access to create that data? So if you can just create an admin user, what's to stop you from taking the regular user data you have and you're like, I just want to see if this admin user page works. So I'm going to create an admin user from the current logged in user because I don't want to handle those other cases now. And so you take those bits of data and then you pass in an empty string for this one thing you need and a, you know, Beautiful. So you still want to make impossible states impossible and you still want to use this sort of gatekeeper approach of protecting how you create and consume data. Yeah. So you would basically have a parser function to create your admin. Exactly. In a way. That's right. Yeah. So how would you go about this? You have a condition that you want to check. So you want to branch off based on some condition, but there's no way to extract information that is of a different type than what you have in the other condition. You would have a name, for instance, which is a string containing the first name and the last name of type string in one condition and the other condition you would just have the first name. So in both cases, you would have a string formatted just like you want to, but they're the same types. How would you go about that? My guiding principle for cases like that is always wrap early, unwrap late. You know, we talked about that, I think, in the opaque types episode. And I'm always thinking like you want to have, I think Alexis talks about this in her article as well. You want to have the most pure representation of the data. She talks about this approach of like letting the data types drive the implementation, not having the implementation drive the data types that you define. So think about the data types up front. That's sort of like a data modeling technique and mindset is that you think about your data types and think about your ideal data types, continually sort of refine and refactor your data types to make them express your constraints better. So at the core of your application, you want to have nice data that clearly represents the semantics that clearly represents the constraints and guarantees, the things that you've proven. And as you get more and more into the core of your application, you should have more and more refined data types and assumptions. You know, so you, you should have fewer maybes, you should have, you know, fewer built in types, and you should have more custom types and more things that illustrate these guarantees. Um, more non empty lists and things like that. So that's my sort of guiding principle is, you know, wrap early. So I want to avoid this sort of shotgun parsing approach where I'm mixing validation logic with processing logic. I want to validate and parse into nice data types that prove my assumptions at the periphery as soon as I possibly can. Ideally, I don't even want it to exist as a string, because my decoder immediately turns it into this value or fails if it can't. If I expect the username to be a non empty string, or to be of a certain format, or to not include certain characters, then I want my decoder to actually do that. So I never have it as a string, it will just fail if it doesn't meet those conditions, or I'll have I'll have it parsed into my valid username type. And then sometimes it's tempting, we kind of talked about this example before that you could like, you could do maybe dot with default empty string, and then pass around this empty string that maybe it represents all these different things. That's a violation of this concept of wrap early unwrap late. So you wrap early, you have your ideal form of the data, the nicest data type. And then at the last possible second, you're forced to have a string because or you know, a JSON encode value or whatever, you've lost information and semantics, but you have to because that's what that API requires. So at the last possible second, you unwrap that data into these lossier data formats. And that all happens at the periphery of the app. Yeah, you lose information as soon as you don't need them anymore. Also, yes, exactly. So all along the way, there's not an opportunity for mistakenly using that data in a way that the guarantees aren't enforced, because your data types help you enforce the guarantees. You don't lose semantic information because the types help enforce the semantics. So yeah, I think wrap early unwrap late would be my sort of core guiding principle there. It's yeah, definitely. Yeah, it takes practice to find how to do that. But I think it's always a good idea. What I'm thinking right now is that if you have the same data in both conditions, the same primitives, and the same data that it really contains, one way that you could keep using this technique is to use phantom types. Yes. So phantom types are a way to differentiate your types, even though their contained data is the exact same. Yes, exactly. So you would have a parsing function that returns a data type with a type variable, which is a phantom type. So you would have, you could match them, you could call function that requires that the phantom type is in a certain state, is of a certain type, but you would still have the same data, you wouldn't need to create a new custom type. Yes. So both techniques are nice, yet the situation will tell which one is best. Yes, and that's actually exactly what Richard Feldman's Elm validate package does. It runs it through a series of validations, and then it has a sort of phantom type that it uses to keep track of the fact that you validated those conditions. So that's definitely a valid approach, if you will. We'll have to check that. You'll have to parse that. That sounds very weird. So you just opened the bank accounts. We're going to have to parse your information. Sorry, what? Don't validate my information, parse it. This is unprofessional. Yeah, I think phantom types definitely fit in here. It is interesting because you can unwrap the phantom types in a more permissive way, depending on how you structure it. So for example, let's say you have an ID type, and it has a phantom type with different ID types. You can just unwrap the ID. You don't have to use specific ways to unwrap it. It all requires human judgment to think about what guarantees do I want to provide, and how do these different Elm devices that I'm using help me do that? You have phantom types that you use to construct things. Another way of saying it, there are types for which you can only build a type with a certain phantom type using some functions. You can make sure that there's only one way to build a value with this exact type, with this exact value for a phantom type, and that is using this function. This function is your parser function, basically. Then you can probably destructure it using functions. This is only true if you're using an opaque type. Yes. Right. Like for the phantom thing that you use, you can expose the type of your phantom type, but not the constructor for the phantom type. So the only thing that can build values with that phantom type attached, user ID for example, can only be built in this one module because the constructor is hidden in that module. Yeah. So basically the idea is to get you across that border. So you need to enter this function. You need an ID with this type for a phantom type. And once that is done, you don't care about the underlying data or the phantom type value anymore. Right. You just want to access the value of the ID. Yes. I don't remember if I brought up this analogy in our opaque types episode or not. Sometimes I think about those wristbands that they give you. If you go to a beer garden and they give you a wristband that validates that you're of drinking age, or you go to a concert and they give you a wristband that says that you paid for your ticket. Once you're in the concert venue, people don't have to keep checking your ticket. Or once you're at the festival, you don't have to show your ID to buy a drink because that's already been parsed, if you will. Exactly. They don't have to validate it at every stand. There's absolutely no way that people will exchange their wristbands though. So it's all totally safe. That's right. Exactly. You have to think about that. You have to be thinking like a security person. In this case, I think you want to unwrap a bit later. I think the constructors are too exposed in this case. I think you're right. I think you're right about that. Another thing about phantom types versus custom types is you can potentially grab the bits of raw data and it doesn't force you to handle the bits of data. You can unwrap them. Again, it's just a matter of using your own judgment to think about what are the possible ways that these assumptions that I'm trying to provide can be bypassed. That's the question. Yeah. Basically, if you use this technique well, you notice it because one, you don't have to fake conditions or fake branches. So basically, you made impossible code paths impossible. Things that you can't test, those are impossible. And two, you have not faked any data anywhere in the code. Yes. Right. By passing in like maybe with default value. Exactly. Yes, that's a great point. That's a major red flag. If you are just in an impossible case where it's like, this should never happen, instead of throwing an exception in a language other than Elm, you do a similar thing where you just say, I'll just return this value because this will never happen. So I'll just return the string. This should never happen. Or worse, you call the function recursively so that the Elm compiler is happy. Exactly. Those are code smells. Yeah, that's the code smell. If you arrive at this should never happen, it should be in your parsing code at the periphery, the code that's doing the initial logic to make sure the input is good. And then you just immediately exit. Otherwise, you have the good data and you run your core logic. Yeah. If you do get into that will not happen case, at the very least, leave a comment. At the very, very, very least. Because otherwise, people will not be happy when they discover that this is weird. Yeah. Or use a co worker's computer to do the commit so that the get blame show somebody else's name. Yeah. Let's talk a little bit about how you would, you know, you're going through your code base and you're looking for opportunities to improve your code using this parse don't validate idea. What should you be on the lookout for? Look for those comments. Look for this should never happen code. What else should you be on the lookout for? Then you notice that a certain condition is made several times. Yeah. So if this is empty, and in that, that branch, you see, if this is empty again, which is not often the case, usually you will have that in separate functions, which is, which makes it a bit harder to tell. I sometimes see functions like is thing like this is just Yeah, it is just Yeah. So if you return a Boolean, that is usually not great that people refer to that as Boolean blindness sometimes. But sometimes, you also see that when you have a function returns like a tuple, the first one being a Boolean, and the second element being the value that you are using. So that is kind of parsing don't validate, but you're still returning a Boolean. You're not keeping track of it in a very safe way. Yeah, exactly. So that is the one that I've seen most and which is the most actionable for me. Like that is an instant red flag. And that is not very hard to tell. But it's quite rare. Right. Yeah. And then also, like, you know, this, this other case, you were mentioning where you're essentially, I think of it that you're discarding information you'd get from a case statement destructure. So like if you're saying is just Yeah, is that always a bad thing? No, maybe there's some cases where it's okay, but be on the lookout for it. Like, I would look very carefully at code that's checking is just and then doing something. And if it does is just followed by maybe with default, yeah, or using that value anyway, exactly in any way. Yeah, exactly. So if it destructures a value, and then uses that value, that's a clear smell. Yes. So one thing that I that you will see a lot when you try to do to apply this technique, I think is you have a bunch of functions, which work with a maybe string, for instance. And in one case, you know that is a string, what would you think should you then just wrap it in and just or should you duplicate the function which takes a maybe string, but then doesn't handle the nothing case, you're talking about like destructuring and then piecing it back together the way it was in a way but not piecing it back into the same value just you have a username. So you have a function which takes that user, maybe username and displays it. And in some parts of the code, you know that a username is just Yes, we still want to display it from the username. So you call that. So you're putting a just in front of it because you're calling a function that takes a maybe string and shows the username? Yeah, right. That's a good question. I definitely have seen code like that. Oh, yeah, me too. It does generally feel like a smell. I'm not going to go so far as to say that it's always a bad thing. But I would definitely look very suspiciously at that code. Yeah, yeah, I think I think you're right. If you're like, I mean, Alexis kind of says this in the article, I think that you should always be progressing towards more structured data. And you should always be proving more information. But adding it adjust is sort of reducing the amount of information you have. So that so that would be no, you're adding chaos. No. Yeah. Entropy. Yeah, I don't know. You always want to. Yeah, unlike the universe, your code should always be decreasing the entropy as it goes along. Yeah, I think so. Maybe in that case, you could look at all the call sites and check, oh, maybe they're all just like all calls to this function is just so you can simplify it. Yeah, maybe not. Maybe not. Good point. But in the case where it's just in the function you were calling with wrapping it in adjust, maybe the just case has a function that could be extracted out of that just clause. Yeah, can be shared. So you call it in the just case. But maybe you can directly call that function and expose that as well. Yeah, that sounds good. Sometimes it's a nice pattern. Like sometimes I see sort of core business logic code. I think it's sort of an example of this shotgun parsing idea that you are checking for maybe and doing maybe with default in your core logic. But that should be the responsibility of the calling code. So I think another thing is it's probably a smell if you have a lot of helper functions that deal with maybes when if you think about the responsibilities, right, if you have like a set of maybe helper functions, then of course, they're going to accept maybes because that's the responsibility. Yeah. But if it's like presenting a username showing a guest username, and you say like, show username, you know, and it takes a maybe, it's actually probably better to not take a maybe to take a username, and it presents it however it does it. And then you do maybe.with default, guest or whatever you're going to do. But the calling code can take care of that uncertainty. Otherwise you get into the I see that happen a lot where you're validating the code, where you're processing it, right? So this principle is really helpful that like, you should be just confidently asserting that you have this code. Don't hesitate and second guess yourself and say, if I have this maybe value, and then I'll handle this nothing case this way, leave that to the caller. In a lot of cases, that's better. So another smell I think that you can pay attention to is and a lot of these things, I think you want to let when the compiler is telling you something is wrong, when the compiler seems to be making you do extra work, you can go two different directions, you can go the direction of the compiler is telling me, I need to handle this case. So I'll just make it happy and use with default or passing this hard coded value here in this thing that will never happen, right? That's telling you a smell. So it's really about what do you do when the compiler is telling you, you're not handling something. That's one thing to pay attention to. Another thing to pay attention to is when you're writing tests, are you testing things that you shouldn't even be able to test? Because if you wrote your types in the right way, where you guaranteed those assumptions and you made impossible states impossible, you wouldn't even be able to write the test because it wouldn't compile. So I'd say another code smell is being able to write compiling tests that should be impossible states. Or in other words, have full coverage of function where you cannot have full coverage because they're impossible states. Yeah, exactly. Exactly. Exactly. You know, another principle I think about a lot, you know, I mentioned this earlier, if somebody new to your code base comes in, if they use something wrong, I would say the onus is on the code. It's something that should be fixed in the code, not, hey, we need to teach you how to use this properly. That's a smell. Yeah, you shouldn't have to train your teammates after the fact that they've learned Elm. Exactly. Exactly. So the training should be coming from the compiler telling them you can't do this. And then they say, hey, why can't I do this? Maybe you have to explain why the compiler isn't allowing it, but the compiler should disallow it. So I feel very uncomfortable if I have to keep track of constraints in the way I'm using something. As much as possible, and it's a, you know, you're not going to have it on day one on the first iteration built to, you know, make all the assumptions possible. And you'd probably be doing something wrong in your process if you were. These things emerge over time. But as you discover ways that it's used, bugs that are happening, you should be making impossible states more impossible as you discover them happening. That's part of the process of working with an Elm code base. Oh, yeah. So this is very simple and in a way, as I said before, quite natural technique for Elm developers and less so for people come from JavaScript or Ruby. I think we got it pretty well covered. Yeah. I hope this was useful to you, listener. Yeah. And if it's painful, you might want to try parsing, not validating. OK, well Dylan, see you next time. Been a pleasure as always. See you next time you're in.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dylan.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 2, "seek": 0, "start": 2.0, "end": 3.0, "text": " How are you doing today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 3, "seek": 0, "start": 3.0, "end": 4.0, "text": " I'm doing pretty well.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 4, "seek": 0, "start": 4.0, "end": 5.0, "text": " How about you?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 5, "seek": 0, "start": 5.0, "end": 6.0, "text": " I can't complain.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 6, "seek": 0, "start": 6.0, "end": 14.72, "text": " I'm thinking about this concept of parsing, but not Elm parsers.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 7, "seek": 0, "start": 14.72, "end": 15.72, "text": " Parsing versus validating.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 8, "seek": 0, "start": 15.72, "end": 16.72, "text": " I.e.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 9, "seek": 0, "start": 16.72, "end": 17.72, "text": " parse don't validate.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 10, "seek": 0, "start": 17.72, "end": 20.72, "text": " I've heard that article before.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 11, "seek": 0, "start": 20.72, "end": 22.240000000000002, "text": " Yeah, this is kind of fun.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 12, "seek": 0, "start": 22.240000000000002, "end": 25.400000000000002, "text": " It's actually, it kind of feels like a book club a little bit.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 13, "seek": 0, "start": 25.400000000000002, "end": 28.88, "text": " I reread this article which is sort of circulated around.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 393, 380, 11024, 13, 50664, 50664, 286, 478, 1953, 466, 341, 3410, 295, 21156, 278, 11, 457, 406, 2699, 76, 21156, 433, 13, 51100, 51100, 49691, 278, 5717, 7363, 990, 13, 51150, 51150, 286, 13, 68, 13, 51200, 51200, 48377, 500, 380, 29562, 13, 51250, 51250, 286, 600, 2198, 300, 7222, 949, 13, 51400, 51400, 865, 11, 341, 307, 733, 295, 1019, 13, 51476, 51476, 467, 311, 767, 11, 309, 733, 295, 3417, 411, 257, 1446, 6482, 257, 707, 857, 13, 51634, 51634, 286, 46453, 345, 341, 7222, 597, 307, 1333, 295, 12515, 770, 926, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.23264845966422645, "compression_ratio": 1.6518218623481782, "no_caption_prob": 0.11254950612783432}, {"id": 14, "seek": 2888, "start": 28.88, "end": 31.279999999999998, "text": " It's by Alexis King, Lexi Lambda.", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 15, "seek": 2888, "start": 31.279999999999998, "end": 35.36, "text": " It really encapsulates a lot of really nice ideas and expresses them very well.", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 16, "seek": 2888, "start": 35.36, "end": 37.36, "text": " Yeah, yeah, definitely.", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 17, "seek": 2888, "start": 37.36, "end": 40.4, "text": " So can you give a summary of what it is about?", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 18, "seek": 2888, "start": 40.4, "end": 44.980000000000004, "text": " It was nice rereading this article because I sort of tried to capture a couple of quotes", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 19, "seek": 2888, "start": 44.980000000000004, "end": 50.04, "text": " that I think nicely summarized the article itself.", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 20, "seek": 2888, "start": 50.04, "end": 53.9, "text": " And this one really stuck out to me.", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 21, "seek": 2888, "start": 53.9, "end": 58.84, "text": " The difference between validation and parsing lies almost entirely in how information is", "tokens": [50364, 467, 311, 538, 39826, 3819, 11, 24086, 72, 45691, 13, 50484, 50484, 467, 534, 38745, 26192, 257, 688, 295, 534, 1481, 3487, 293, 39204, 552, 588, 731, 13, 50688, 50688, 865, 11, 1338, 11, 2138, 13, 50788, 50788, 407, 393, 291, 976, 257, 12691, 295, 437, 309, 307, 466, 30, 50940, 50940, 467, 390, 1481, 46453, 8166, 341, 7222, 570, 286, 1333, 295, 3031, 281, 7983, 257, 1916, 295, 19963, 51169, 51169, 300, 286, 519, 9594, 14611, 1602, 264, 7222, 2564, 13, 51422, 51422, 400, 341, 472, 534, 5541, 484, 281, 385, 13, 51615, 51615, 440, 2649, 1296, 24071, 293, 21156, 278, 9134, 1920, 7696, 294, 577, 1589, 307, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.11576359672883971, "compression_ratio": 1.5901060070671378, "no_caption_prob": 5.9204405260970816e-05}, {"id": 22, "seek": 5884, "start": 58.84, "end": 60.440000000000005, "text": " preserved.", "tokens": [50364, 22242, 13, 50444, 50444, 407, 286, 519, 300, 309, 311, 534, 5145, 2837, 295, 1589, 13, 50700, 50700, 1018, 291, 352, 7731, 666, 264, 9952, 293, 2445, 5498, 294, 428, 3089, 11, 291, 820, 362, 544, 293, 51012, 51012, 544, 5405, 18519, 1412, 13, 51104, 51104, 509, 820, 362, 544, 721, 300, 291, 600, 12785, 807, 264, 1412, 3467, 300, 291, 362, 13, 51330, 51330, 316, 2176, 1365, 307, 31828, 11, 558, 30, 51498, 51498, 1711, 264, 26807, 88, 295, 428, 3861, 11, 1310, 411, 807, 411, 257, 7166, 420, 257, 2436, 11, 291, 727, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10241569172252309, "compression_ratio": 1.6229508196721312, "no_caption_prob": 0.00010888698307098821}, {"id": 23, "seek": 5884, "start": 60.440000000000005, "end": 65.56, "text": " So I think that it's really keeping track of information.", "tokens": [50364, 22242, 13, 50444, 50444, 407, 286, 519, 300, 309, 311, 534, 5145, 2837, 295, 1589, 13, 50700, 50700, 1018, 291, 352, 7731, 666, 264, 9952, 293, 2445, 5498, 294, 428, 3089, 11, 291, 820, 362, 544, 293, 51012, 51012, 544, 5405, 18519, 1412, 13, 51104, 51104, 509, 820, 362, 544, 721, 300, 291, 600, 12785, 807, 264, 1412, 3467, 300, 291, 362, 13, 51330, 51330, 316, 2176, 1365, 307, 31828, 11, 558, 30, 51498, 51498, 1711, 264, 26807, 88, 295, 428, 3861, 11, 1310, 411, 807, 411, 257, 7166, 420, 257, 2436, 11, 291, 727, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10241569172252309, "compression_ratio": 1.6229508196721312, "no_caption_prob": 0.00010888698307098821}, {"id": 24, "seek": 5884, "start": 65.56, "end": 71.80000000000001, "text": " As you go deeper into the logic and function calls in your code, you should have more and", "tokens": [50364, 22242, 13, 50444, 50444, 407, 286, 519, 300, 309, 311, 534, 5145, 2837, 295, 1589, 13, 50700, 50700, 1018, 291, 352, 7731, 666, 264, 9952, 293, 2445, 5498, 294, 428, 3089, 11, 291, 820, 362, 544, 293, 51012, 51012, 544, 5405, 18519, 1412, 13, 51104, 51104, 509, 820, 362, 544, 721, 300, 291, 600, 12785, 807, 264, 1412, 3467, 300, 291, 362, 13, 51330, 51330, 316, 2176, 1365, 307, 31828, 11, 558, 30, 51498, 51498, 1711, 264, 26807, 88, 295, 428, 3861, 11, 1310, 411, 807, 411, 257, 7166, 420, 257, 2436, 11, 291, 727, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10241569172252309, "compression_ratio": 1.6229508196721312, "no_caption_prob": 0.00010888698307098821}, {"id": 25, "seek": 5884, "start": 71.80000000000001, "end": 73.64, "text": " more highly structured data.", "tokens": [50364, 22242, 13, 50444, 50444, 407, 286, 519, 300, 309, 311, 534, 5145, 2837, 295, 1589, 13, 50700, 50700, 1018, 291, 352, 7731, 666, 264, 9952, 293, 2445, 5498, 294, 428, 3089, 11, 291, 820, 362, 544, 293, 51012, 51012, 544, 5405, 18519, 1412, 13, 51104, 51104, 509, 820, 362, 544, 721, 300, 291, 600, 12785, 807, 264, 1412, 3467, 300, 291, 362, 13, 51330, 51330, 316, 2176, 1365, 307, 31828, 11, 558, 30, 51498, 51498, 1711, 264, 26807, 88, 295, 428, 3861, 11, 1310, 411, 807, 411, 257, 7166, 420, 257, 2436, 11, 291, 727, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10241569172252309, "compression_ratio": 1.6229508196721312, "no_caption_prob": 0.00010888698307098821}, {"id": 26, "seek": 5884, "start": 73.64, "end": 78.16, "text": " You should have more things that you've proven through the data types that you have.", "tokens": [50364, 22242, 13, 50444, 50444, 407, 286, 519, 300, 309, 311, 534, 5145, 2837, 295, 1589, 13, 50700, 50700, 1018, 291, 352, 7731, 666, 264, 9952, 293, 2445, 5498, 294, 428, 3089, 11, 291, 820, 362, 544, 293, 51012, 51012, 544, 5405, 18519, 1412, 13, 51104, 51104, 509, 820, 362, 544, 721, 300, 291, 600, 12785, 807, 264, 1412, 3467, 300, 291, 362, 13, 51330, 51330, 316, 2176, 1365, 307, 31828, 11, 558, 30, 51498, 51498, 1711, 264, 26807, 88, 295, 428, 3861, 11, 1310, 411, 807, 411, 257, 7166, 420, 257, 2436, 11, 291, 727, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10241569172252309, "compression_ratio": 1.6229508196721312, "no_caption_prob": 0.00010888698307098821}, {"id": 27, "seek": 5884, "start": 78.16, "end": 81.52000000000001, "text": " A perfect example is JSON, right?", "tokens": [50364, 22242, 13, 50444, 50444, 407, 286, 519, 300, 309, 311, 534, 5145, 2837, 295, 1589, 13, 50700, 50700, 1018, 291, 352, 7731, 666, 264, 9952, 293, 2445, 5498, 294, 428, 3089, 11, 291, 820, 362, 544, 293, 51012, 51012, 544, 5405, 18519, 1412, 13, 51104, 51104, 509, 820, 362, 544, 721, 300, 291, 600, 12785, 807, 264, 1412, 3467, 300, 291, 362, 13, 51330, 51330, 316, 2176, 1365, 307, 31828, 11, 558, 30, 51498, 51498, 1711, 264, 26807, 88, 295, 428, 3861, 11, 1310, 411, 807, 411, 257, 7166, 420, 257, 2436, 11, 291, 727, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10241569172252309, "compression_ratio": 1.6229508196721312, "no_caption_prob": 0.00010888698307098821}, {"id": 28, "seek": 5884, "start": 81.52000000000001, "end": 86.58000000000001, "text": " At the periphery of your application, maybe like through like a flag or a port, you could", "tokens": [50364, 22242, 13, 50444, 50444, 407, 286, 519, 300, 309, 311, 534, 5145, 2837, 295, 1589, 13, 50700, 50700, 1018, 291, 352, 7731, 666, 264, 9952, 293, 2445, 5498, 294, 428, 3089, 11, 291, 820, 362, 544, 293, 51012, 51012, 544, 5405, 18519, 1412, 13, 51104, 51104, 509, 820, 362, 544, 721, 300, 291, 600, 12785, 807, 264, 1412, 3467, 300, 291, 362, 13, 51330, 51330, 316, 2176, 1365, 307, 31828, 11, 558, 30, 51498, 51498, 1711, 264, 26807, 88, 295, 428, 3861, 11, 1310, 411, 807, 411, 257, 7166, 420, 257, 2436, 11, 291, 727, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.10241569172252309, "compression_ratio": 1.6229508196721312, "no_caption_prob": 0.00010888698307098821}, {"id": 29, "seek": 8658, "start": 86.58, "end": 89.6, "text": " have some JSON data coming through.", "tokens": [50364, 362, 512, 31828, 1412, 1348, 807, 13, 50515, 50515, 583, 294, 264, 4965, 295, 428, 2699, 76, 3861, 11, 291, 434, 516, 281, 483, 300, 294, 257, 18519, 636, 13, 50763, 50763, 286, 519, 309, 311, 1021, 281, 935, 484, 437, 341, 6532, 420, 341, 6532, 9898, 281, 4871, 51109, 51109, 291, 490, 884, 11, 597, 10147, 18542, 309, 22367, 291, 490, 7440, 666, 13, 51361, 51361, 400, 300, 307, 281, 1520, 721, 2940, 1413, 13, 51543, 51543, 1079, 11, 2293, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.16468696816023007, "compression_ratio": 1.5627906976744186, "no_caption_prob": 7.646443918929435e-06}, {"id": 30, "seek": 8658, "start": 89.6, "end": 94.56, "text": " But in the core of your Elm application, you're going to get that in a structured way.", "tokens": [50364, 362, 512, 31828, 1412, 1348, 807, 13, 50515, 50515, 583, 294, 264, 4965, 295, 428, 2699, 76, 3861, 11, 291, 434, 516, 281, 483, 300, 294, 257, 18519, 636, 13, 50763, 50763, 286, 519, 309, 311, 1021, 281, 935, 484, 437, 341, 6532, 420, 341, 6532, 9898, 281, 4871, 51109, 51109, 291, 490, 884, 11, 597, 10147, 18542, 309, 22367, 291, 490, 7440, 666, 13, 51361, 51361, 400, 300, 307, 281, 1520, 721, 2940, 1413, 13, 51543, 51543, 1079, 11, 2293, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.16468696816023007, "compression_ratio": 1.5627906976744186, "no_caption_prob": 7.646443918929435e-06}, {"id": 31, "seek": 8658, "start": 94.56, "end": 101.48, "text": " I think it's important to point out what this technique or this technique tries to prevent", "tokens": [50364, 362, 512, 31828, 1412, 1348, 807, 13, 50515, 50515, 583, 294, 264, 4965, 295, 428, 2699, 76, 3861, 11, 291, 434, 516, 281, 483, 300, 294, 257, 18519, 636, 13, 50763, 50763, 286, 519, 309, 311, 1021, 281, 935, 484, 437, 341, 6532, 420, 341, 6532, 9898, 281, 4871, 51109, 51109, 291, 490, 884, 11, 597, 10147, 18542, 309, 22367, 291, 490, 7440, 666, 13, 51361, 51361, 400, 300, 307, 281, 1520, 721, 2940, 1413, 13, 51543, 51543, 1079, 11, 2293, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.16468696816023007, "compression_ratio": 1.5627906976744186, "no_caption_prob": 7.646443918929435e-06}, {"id": 32, "seek": 8658, "start": 101.48, "end": 106.52, "text": " you from doing, which pitfalls it prevents you from falling into.", "tokens": [50364, 362, 512, 31828, 1412, 1348, 807, 13, 50515, 50515, 583, 294, 264, 4965, 295, 428, 2699, 76, 3861, 11, 291, 434, 516, 281, 483, 300, 294, 257, 18519, 636, 13, 50763, 50763, 286, 519, 309, 311, 1021, 281, 935, 484, 437, 341, 6532, 420, 341, 6532, 9898, 281, 4871, 51109, 51109, 291, 490, 884, 11, 597, 10147, 18542, 309, 22367, 291, 490, 7440, 666, 13, 51361, 51361, 400, 300, 307, 281, 1520, 721, 2940, 1413, 13, 51543, 51543, 1079, 11, 2293, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.16468696816023007, "compression_ratio": 1.5627906976744186, "no_caption_prob": 7.646443918929435e-06}, {"id": 33, "seek": 8658, "start": 106.52, "end": 110.16, "text": " And that is to check things several times.", "tokens": [50364, 362, 512, 31828, 1412, 1348, 807, 13, 50515, 50515, 583, 294, 264, 4965, 295, 428, 2699, 76, 3861, 11, 291, 434, 516, 281, 483, 300, 294, 257, 18519, 636, 13, 50763, 50763, 286, 519, 309, 311, 1021, 281, 935, 484, 437, 341, 6532, 420, 341, 6532, 9898, 281, 4871, 51109, 51109, 291, 490, 884, 11, 597, 10147, 18542, 309, 22367, 291, 490, 7440, 666, 13, 51361, 51361, 400, 300, 307, 281, 1520, 721, 2940, 1413, 13, 51543, 51543, 1079, 11, 2293, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.16468696816023007, "compression_ratio": 1.5627906976744186, "no_caption_prob": 7.646443918929435e-06}, {"id": 34, "seek": 8658, "start": 110.16, "end": 112.8, "text": " Yes, exactly.", "tokens": [50364, 362, 512, 31828, 1412, 1348, 807, 13, 50515, 50515, 583, 294, 264, 4965, 295, 428, 2699, 76, 3861, 11, 291, 434, 516, 281, 483, 300, 294, 257, 18519, 636, 13, 50763, 50763, 286, 519, 309, 311, 1021, 281, 935, 484, 437, 341, 6532, 420, 341, 6532, 9898, 281, 4871, 51109, 51109, 291, 490, 884, 11, 597, 10147, 18542, 309, 22367, 291, 490, 7440, 666, 13, 51361, 51361, 400, 300, 307, 281, 1520, 721, 2940, 1413, 13, 51543, 51543, 1079, 11, 2293, 13, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.16468696816023007, "compression_ratio": 1.5627906976744186, "no_caption_prob": 7.646443918929435e-06}, {"id": 35, "seek": 11280, "start": 112.8, "end": 118.6, "text": " What was the, I think there was like an academic article that she was referencing referring", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 36, "seek": 11280, "start": 118.6, "end": 120.08, "text": " to shotgun parsing.", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 37, "seek": 11280, "start": 120.08, "end": 121.6, "text": " Yeah, shotgun parsing.", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 38, "seek": 11280, "start": 121.6, "end": 127.44, "text": " So the idea is that you check for something once, like, is this list empty?", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 39, "seek": 11280, "start": 127.44, "end": 131.68, "text": " In one condition, you do something and the other condition you say, hey, we don't want", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 40, "seek": 11280, "start": 131.68, "end": 134.44, "text": " to have an empty list in this case.", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 41, "seek": 11280, "start": 134.44, "end": 138.88, "text": " And then in the condition where you said, where you notice that the list is not empty,", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 42, "seek": 11280, "start": 138.88, "end": 140.44, "text": " you do some other operations.", "tokens": [50364, 708, 390, 264, 11, 286, 519, 456, 390, 411, 364, 7778, 7222, 300, 750, 390, 40582, 13761, 50654, 50654, 281, 24734, 21156, 278, 13, 50728, 50728, 865, 11, 24734, 21156, 278, 13, 50804, 50804, 407, 264, 1558, 307, 300, 291, 1520, 337, 746, 1564, 11, 411, 11, 307, 341, 1329, 6707, 30, 51096, 51096, 682, 472, 4188, 11, 291, 360, 746, 293, 264, 661, 4188, 291, 584, 11, 4177, 11, 321, 500, 380, 528, 51308, 51308, 281, 362, 364, 6707, 1329, 294, 341, 1389, 13, 51446, 51446, 400, 550, 294, 264, 4188, 689, 291, 848, 11, 689, 291, 3449, 300, 264, 1329, 307, 406, 6707, 11, 51668, 51668, 291, 360, 512, 661, 7705, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.14566749637409793, "compression_ratio": 1.9067796610169492, "no_caption_prob": 1.4268642189563252e-05}, {"id": 43, "seek": 14044, "start": 140.44, "end": 146.54, "text": " And then you have to check because of some other operation that the list is empty or", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 44, "seek": 14044, "start": 146.54, "end": 148.28, "text": " not again.", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 45, "seek": 14044, "start": 148.28, "end": 154.38, "text": " And if you did it with a if then else statement, then you lost that information and you have", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 46, "seek": 14044, "start": 154.38, "end": 158.76, "text": " to make the check again, meaning that you have to handle the case where the list is", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 47, "seek": 14044, "start": 158.76, "end": 159.76, "text": " empty.", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 48, "seek": 14044, "start": 159.76, "end": 161.14, "text": " Exactly.", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 49, "seek": 14044, "start": 161.14, "end": 164.84, "text": " You haven't preserved that information that you had.", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 50, "seek": 14044, "start": 164.84, "end": 168.14, "text": " You had the information and then you lost it.", "tokens": [50364, 400, 550, 291, 362, 281, 1520, 570, 295, 512, 661, 6916, 300, 264, 1329, 307, 6707, 420, 50669, 50669, 406, 797, 13, 50756, 50756, 400, 498, 291, 630, 309, 365, 257, 498, 550, 1646, 5629, 11, 550, 291, 2731, 300, 1589, 293, 291, 362, 51061, 51061, 281, 652, 264, 1520, 797, 11, 3620, 300, 291, 362, 281, 4813, 264, 1389, 689, 264, 1329, 307, 51280, 51280, 6707, 13, 51330, 51330, 7587, 13, 51399, 51399, 509, 2378, 380, 22242, 300, 1589, 300, 291, 632, 13, 51584, 51584, 509, 632, 264, 1589, 293, 550, 291, 2731, 309, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.1394667148590088, "compression_ratio": 1.9545454545454546, "no_caption_prob": 7.889066182542592e-06}, {"id": 51, "seek": 16814, "start": 168.14, "end": 170.55999999999997, "text": " So the type system can no longer help you with that.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 52, "seek": 16814, "start": 170.55999999999997, "end": 171.55999999999997, "text": " Yeah.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 53, "seek": 16814, "start": 171.55999999999997, "end": 176.79999999999998, "text": " So you have to handle the case again, even though you knew it already.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 54, "seek": 16814, "start": 176.79999999999998, "end": 182.07999999999998, "text": " Or keep track of it in your head and say, oh, at this stage, I know that this data has", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 55, "seek": 16814, "start": 182.07999999999998, "end": 183.79999999999998, "text": " already checked for this.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 56, "seek": 16814, "start": 183.79999999999998, "end": 185.79999999999998, "text": " Or I think I know.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 57, "seek": 16814, "start": 185.79999999999998, "end": 186.79999999999998, "text": " Exactly.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 58, "seek": 16814, "start": 186.79999999999998, "end": 190.82, "text": " I'll check later if I did check that again.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 59, "seek": 16814, "start": 190.82, "end": 191.82, "text": " See also JavaScript.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 60, "seek": 16814, "start": 191.82, "end": 197.56, "text": " Come on, don't throw JavaScript under the bus.", "tokens": [50364, 407, 264, 2010, 1185, 393, 572, 2854, 854, 291, 365, 300, 13, 50485, 50485, 865, 13, 50535, 50535, 407, 291, 362, 281, 4813, 264, 1389, 797, 11, 754, 1673, 291, 2586, 309, 1217, 13, 50797, 50797, 1610, 1066, 2837, 295, 309, 294, 428, 1378, 293, 584, 11, 1954, 11, 412, 341, 3233, 11, 286, 458, 300, 341, 1412, 575, 51061, 51061, 1217, 10033, 337, 341, 13, 51147, 51147, 1610, 286, 519, 286, 458, 13, 51247, 51247, 7587, 13, 51297, 51297, 286, 603, 1520, 1780, 498, 286, 630, 1520, 300, 797, 13, 51498, 51498, 3008, 611, 15778, 13, 51548, 51548, 2492, 322, 11, 500, 380, 3507, 15778, 833, 264, 1255, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.2107083839282655, "compression_ratio": 1.5916666666666666, "no_caption_prob": 1.1658884432108607e-05}, {"id": 61, "seek": 19756, "start": 197.56, "end": 203.96, "text": " I mean, we touched on this in our in our JSON decoding episode a little bit that this is", "tokens": [50364, 286, 914, 11, 321, 9828, 322, 341, 294, 527, 294, 527, 31828, 979, 8616, 3500, 257, 707, 857, 300, 341, 307, 50684, 50684, 257, 588, 4963, 1752, 13, 50746, 50746, 400, 291, 393, 3297, 2464, 15778, 294, 257, 636, 689, 291, 434, 13175, 264, 24071, 51026, 51026, 1823, 493, 1868, 382, 1333, 295, 257, 2167, 1823, 2831, 813, 341, 1333, 295, 24734, 21156, 278, 3109, 13, 51413, 51413, 583, 286, 360, 915, 300, 309, 311, 1596, 2689, 300, 291, 536, 341, 294, 15778, 689, 291, 434, 1333, 51588, 51588, 295, 11983, 9007, 1412, 365, 7363, 990, 264, 1412, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.11450267532496776, "compression_ratio": 1.6929133858267718, "no_caption_prob": 2.144469544873573e-05}, {"id": 62, "seek": 19756, "start": 203.96, "end": 205.2, "text": " a very familiar experience.", "tokens": [50364, 286, 914, 11, 321, 9828, 322, 341, 294, 527, 294, 527, 31828, 979, 8616, 3500, 257, 707, 857, 300, 341, 307, 50684, 50684, 257, 588, 4963, 1752, 13, 50746, 50746, 400, 291, 393, 3297, 2464, 15778, 294, 257, 636, 689, 291, 434, 13175, 264, 24071, 51026, 51026, 1823, 493, 1868, 382, 1333, 295, 257, 2167, 1823, 2831, 813, 341, 1333, 295, 24734, 21156, 278, 3109, 13, 51413, 51413, 583, 286, 360, 915, 300, 309, 311, 1596, 2689, 300, 291, 536, 341, 294, 15778, 689, 291, 434, 1333, 51588, 51588, 295, 11983, 9007, 1412, 365, 7363, 990, 264, 1412, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.11450267532496776, "compression_ratio": 1.6929133858267718, "no_caption_prob": 2.144469544873573e-05}, {"id": 63, "seek": 19756, "start": 205.2, "end": 210.8, "text": " And you can certainly write JavaScript in a way where you're handling the validation", "tokens": [50364, 286, 914, 11, 321, 9828, 322, 341, 294, 527, 294, 527, 31828, 979, 8616, 3500, 257, 707, 857, 300, 341, 307, 50684, 50684, 257, 588, 4963, 1752, 13, 50746, 50746, 400, 291, 393, 3297, 2464, 15778, 294, 257, 636, 689, 291, 434, 13175, 264, 24071, 51026, 51026, 1823, 493, 1868, 382, 1333, 295, 257, 2167, 1823, 2831, 813, 341, 1333, 295, 24734, 21156, 278, 3109, 13, 51413, 51413, 583, 286, 360, 915, 300, 309, 311, 1596, 2689, 300, 291, 536, 341, 294, 15778, 689, 291, 434, 1333, 51588, 51588, 295, 11983, 9007, 1412, 365, 7363, 990, 264, 1412, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.11450267532496776, "compression_ratio": 1.6929133858267718, "no_caption_prob": 2.144469544873573e-05}, {"id": 64, "seek": 19756, "start": 210.8, "end": 218.54, "text": " step up front as sort of a single step rather than this sort of shotgun parsing approach.", "tokens": [50364, 286, 914, 11, 321, 9828, 322, 341, 294, 527, 294, 527, 31828, 979, 8616, 3500, 257, 707, 857, 300, 341, 307, 50684, 50684, 257, 588, 4963, 1752, 13, 50746, 50746, 400, 291, 393, 3297, 2464, 15778, 294, 257, 636, 689, 291, 434, 13175, 264, 24071, 51026, 51026, 1823, 493, 1868, 382, 1333, 295, 257, 2167, 1823, 2831, 813, 341, 1333, 295, 24734, 21156, 278, 3109, 13, 51413, 51413, 583, 286, 360, 915, 300, 309, 311, 1596, 2689, 300, 291, 536, 341, 294, 15778, 689, 291, 434, 1333, 51588, 51588, 295, 11983, 9007, 1412, 365, 7363, 990, 264, 1412, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.11450267532496776, "compression_ratio": 1.6929133858267718, "no_caption_prob": 2.144469544873573e-05}, {"id": 65, "seek": 19756, "start": 218.54, "end": 222.04, "text": " But I do find that it's quite common that you see this in JavaScript where you're sort", "tokens": [50364, 286, 914, 11, 321, 9828, 322, 341, 294, 527, 294, 527, 31828, 979, 8616, 3500, 257, 707, 857, 300, 341, 307, 50684, 50684, 257, 588, 4963, 1752, 13, 50746, 50746, 400, 291, 393, 3297, 2464, 15778, 294, 257, 636, 689, 291, 434, 13175, 264, 24071, 51026, 51026, 1823, 493, 1868, 382, 1333, 295, 257, 2167, 1823, 2831, 813, 341, 1333, 295, 24734, 21156, 278, 3109, 13, 51413, 51413, 583, 286, 360, 915, 300, 309, 311, 1596, 2689, 300, 291, 536, 341, 294, 15778, 689, 291, 434, 1333, 51588, 51588, 295, 11983, 9007, 1412, 365, 7363, 990, 264, 1412, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.11450267532496776, "compression_ratio": 1.6929133858267718, "no_caption_prob": 2.144469544873573e-05}, {"id": 66, "seek": 19756, "start": 222.04, "end": 226.6, "text": " of mixing processing data with validating the data.", "tokens": [50364, 286, 914, 11, 321, 9828, 322, 341, 294, 527, 294, 527, 31828, 979, 8616, 3500, 257, 707, 857, 300, 341, 307, 50684, 50684, 257, 588, 4963, 1752, 13, 50746, 50746, 400, 291, 393, 3297, 2464, 15778, 294, 257, 636, 689, 291, 434, 13175, 264, 24071, 51026, 51026, 1823, 493, 1868, 382, 1333, 295, 257, 2167, 1823, 2831, 813, 341, 1333, 295, 24734, 21156, 278, 3109, 13, 51413, 51413, 583, 286, 360, 915, 300, 309, 311, 1596, 2689, 300, 291, 536, 341, 294, 15778, 689, 291, 434, 1333, 51588, 51588, 295, 11983, 9007, 1412, 365, 7363, 990, 264, 1412, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.11450267532496776, "compression_ratio": 1.6929133858267718, "no_caption_prob": 2.144469544873573e-05}, {"id": 67, "seek": 22660, "start": 226.6, "end": 228.96, "text": " Yeah, so can you explain what shotgun parsing is?", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 68, "seek": 22660, "start": 228.96, "end": 230.23999999999998, "text": " Because I don't think we did.", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 69, "seek": 22660, "start": 230.23999999999998, "end": 231.23999999999998, "text": " We explained it.", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 70, "seek": 22660, "start": 231.23999999999998, "end": 238.32, "text": " Yes, I think shotgun parsing is just defined as mixing processing data with validating", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 71, "seek": 22660, "start": 238.32, "end": 239.35999999999999, "text": " data.", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 72, "seek": 22660, "start": 239.35999999999999, "end": 244.76, "text": " So it's your intermingling those processes rather than sort of validating data upfront", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 73, "seek": 22660, "start": 244.76, "end": 247.2, "text": " and parsing it in a single process.", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 74, "seek": 22660, "start": 247.2, "end": 250.72, "text": " And then now that you have the data, process that data.", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 75, "seek": 22660, "start": 250.72, "end": 253.16, "text": " Does that seem like a fair definition?", "tokens": [50364, 865, 11, 370, 393, 291, 2903, 437, 24734, 21156, 278, 307, 30, 50482, 50482, 1436, 286, 500, 380, 519, 321, 630, 13, 50546, 50546, 492, 8825, 309, 13, 50596, 50596, 1079, 11, 286, 519, 24734, 21156, 278, 307, 445, 7642, 382, 11983, 9007, 1412, 365, 7363, 990, 50950, 50950, 1412, 13, 51002, 51002, 407, 309, 311, 428, 728, 2810, 1688, 729, 7555, 2831, 813, 1333, 295, 7363, 990, 1412, 30264, 51272, 51272, 293, 21156, 278, 309, 294, 257, 2167, 1399, 13, 51394, 51394, 400, 550, 586, 300, 291, 362, 264, 1412, 11, 1399, 300, 1412, 13, 51570, 51570, 4402, 300, 1643, 411, 257, 3143, 7123, 30, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.17275156541304154, "compression_ratio": 1.7543103448275863, "no_caption_prob": 3.237522378185531e-06}, {"id": 76, "seek": 25316, "start": 253.16, "end": 256.84, "text": " Let's just reread the article real quick.", "tokens": [50364, 961, 311, 445, 46453, 345, 264, 7222, 957, 1702, 13, 50548, 50548, 407, 510, 311, 257, 6513, 13, 50598, 50598, 28845, 7414, 21156, 278, 307, 257, 9410, 6061, 5102, 11, 36998, 21156, 278, 293, 4846, 7363, 990, 3089, 50842, 50842, 307, 7467, 293, 3974, 2108, 9007, 3089, 11, 10238, 257, 4588, 295, 13834, 412, 264, 4846, 293, 51111, 51111, 7159, 1553, 604, 27249, 31591, 300, 472, 420, 1071, 576, 3745, 439, 264, 1578, 51414, 51414, 3331, 13, 51464, 51464, 865, 11, 370, 337, 385, 11, 309, 1355, 300, 291, 362, 498, 1646, 12363, 439, 670, 264, 1081, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.119751818039838, "compression_ratio": 1.644, "no_caption_prob": 9.02773390407674e-05}, {"id": 77, "seek": 25316, "start": 256.84, "end": 257.84, "text": " So here's a quote.", "tokens": [50364, 961, 311, 445, 46453, 345, 264, 7222, 957, 1702, 13, 50548, 50548, 407, 510, 311, 257, 6513, 13, 50598, 50598, 28845, 7414, 21156, 278, 307, 257, 9410, 6061, 5102, 11, 36998, 21156, 278, 293, 4846, 7363, 990, 3089, 50842, 50842, 307, 7467, 293, 3974, 2108, 9007, 3089, 11, 10238, 257, 4588, 295, 13834, 412, 264, 4846, 293, 51111, 51111, 7159, 1553, 604, 27249, 31591, 300, 472, 420, 1071, 576, 3745, 439, 264, 1578, 51414, 51414, 3331, 13, 51464, 51464, 865, 11, 370, 337, 385, 11, 309, 1355, 300, 291, 362, 498, 1646, 12363, 439, 670, 264, 1081, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.119751818039838, "compression_ratio": 1.644, "no_caption_prob": 9.02773390407674e-05}, {"id": 78, "seek": 25316, "start": 257.84, "end": 262.71999999999997, "text": " Shotgun parsing is a programming anti pattern, whereby parsing and input validating code", "tokens": [50364, 961, 311, 445, 46453, 345, 264, 7222, 957, 1702, 13, 50548, 50548, 407, 510, 311, 257, 6513, 13, 50598, 50598, 28845, 7414, 21156, 278, 307, 257, 9410, 6061, 5102, 11, 36998, 21156, 278, 293, 4846, 7363, 990, 3089, 50842, 50842, 307, 7467, 293, 3974, 2108, 9007, 3089, 11, 10238, 257, 4588, 295, 13834, 412, 264, 4846, 293, 51111, 51111, 7159, 1553, 604, 27249, 31591, 300, 472, 420, 1071, 576, 3745, 439, 264, 1578, 51414, 51414, 3331, 13, 51464, 51464, 865, 11, 370, 337, 385, 11, 309, 1355, 300, 291, 362, 498, 1646, 12363, 439, 670, 264, 1081, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.119751818039838, "compression_ratio": 1.644, "no_caption_prob": 9.02773390407674e-05}, {"id": 79, "seek": 25316, "start": 262.71999999999997, "end": 268.1, "text": " is mixed and spread across processing code, throwing a cloud of checks at the input and", "tokens": [50364, 961, 311, 445, 46453, 345, 264, 7222, 957, 1702, 13, 50548, 50548, 407, 510, 311, 257, 6513, 13, 50598, 50598, 28845, 7414, 21156, 278, 307, 257, 9410, 6061, 5102, 11, 36998, 21156, 278, 293, 4846, 7363, 990, 3089, 50842, 50842, 307, 7467, 293, 3974, 2108, 9007, 3089, 11, 10238, 257, 4588, 295, 13834, 412, 264, 4846, 293, 51111, 51111, 7159, 1553, 604, 27249, 31591, 300, 472, 420, 1071, 576, 3745, 439, 264, 1578, 51414, 51414, 3331, 13, 51464, 51464, 865, 11, 370, 337, 385, 11, 309, 1355, 300, 291, 362, 498, 1646, 12363, 439, 670, 264, 1081, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.119751818039838, "compression_ratio": 1.644, "no_caption_prob": 9.02773390407674e-05}, {"id": 80, "seek": 25316, "start": 268.1, "end": 274.15999999999997, "text": " hoping without any systematic justification that one or another would catch all the bad", "tokens": [50364, 961, 311, 445, 46453, 345, 264, 7222, 957, 1702, 13, 50548, 50548, 407, 510, 311, 257, 6513, 13, 50598, 50598, 28845, 7414, 21156, 278, 307, 257, 9410, 6061, 5102, 11, 36998, 21156, 278, 293, 4846, 7363, 990, 3089, 50842, 50842, 307, 7467, 293, 3974, 2108, 9007, 3089, 11, 10238, 257, 4588, 295, 13834, 412, 264, 4846, 293, 51111, 51111, 7159, 1553, 604, 27249, 31591, 300, 472, 420, 1071, 576, 3745, 439, 264, 1578, 51414, 51414, 3331, 13, 51464, 51464, 865, 11, 370, 337, 385, 11, 309, 1355, 300, 291, 362, 498, 1646, 12363, 439, 670, 264, 1081, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.119751818039838, "compression_ratio": 1.644, "no_caption_prob": 9.02773390407674e-05}, {"id": 81, "seek": 25316, "start": 274.15999999999997, "end": 275.15999999999997, "text": " cases.", "tokens": [50364, 961, 311, 445, 46453, 345, 264, 7222, 957, 1702, 13, 50548, 50548, 407, 510, 311, 257, 6513, 13, 50598, 50598, 28845, 7414, 21156, 278, 307, 257, 9410, 6061, 5102, 11, 36998, 21156, 278, 293, 4846, 7363, 990, 3089, 50842, 50842, 307, 7467, 293, 3974, 2108, 9007, 3089, 11, 10238, 257, 4588, 295, 13834, 412, 264, 4846, 293, 51111, 51111, 7159, 1553, 604, 27249, 31591, 300, 472, 420, 1071, 576, 3745, 439, 264, 1578, 51414, 51414, 3331, 13, 51464, 51464, 865, 11, 370, 337, 385, 11, 309, 1355, 300, 291, 362, 498, 1646, 12363, 439, 670, 264, 1081, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.119751818039838, "compression_ratio": 1.644, "no_caption_prob": 9.02773390407674e-05}, {"id": 82, "seek": 25316, "start": 275.15999999999997, "end": 281.15999999999997, "text": " Yeah, so for me, it means that you have if else statements all over the place.", "tokens": [50364, 961, 311, 445, 46453, 345, 264, 7222, 957, 1702, 13, 50548, 50548, 407, 510, 311, 257, 6513, 13, 50598, 50598, 28845, 7414, 21156, 278, 307, 257, 9410, 6061, 5102, 11, 36998, 21156, 278, 293, 4846, 7363, 990, 3089, 50842, 50842, 307, 7467, 293, 3974, 2108, 9007, 3089, 11, 10238, 257, 4588, 295, 13834, 412, 264, 4846, 293, 51111, 51111, 7159, 1553, 604, 27249, 31591, 300, 472, 420, 1071, 576, 3745, 439, 264, 1578, 51414, 51414, 3331, 13, 51464, 51464, 865, 11, 370, 337, 385, 11, 309, 1355, 300, 291, 362, 498, 1646, 12363, 439, 670, 264, 1081, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.119751818039838, "compression_ratio": 1.644, "no_caption_prob": 9.02773390407674e-05}, {"id": 83, "seek": 28116, "start": 281.16, "end": 287.76000000000005, "text": " And then you hopefully have enough to make sure that all the cases are handled.", "tokens": [50364, 400, 550, 291, 4696, 362, 1547, 281, 652, 988, 300, 439, 264, 3331, 366, 18033, 13, 50694, 50694, 400, 1310, 456, 366, 1310, 436, 434, 406, 13, 50816, 50816, 286, 390, 3938, 1364, 365, 512, 512, 19907, 3089, 13, 51020, 51020, 400, 456, 311, 411, 257, 11, 291, 458, 11, 294, 264, 10561, 11, 264, 19907, 10561, 11, 17663, 34, 10561, 11, 291, 393, 51346, 51346, 291, 393, 584, 411, 971, 4070, 11, 293, 550, 483, 2035, 11, 291, 458, 11, 1412, 300, 311, 668, 4678, 294, 294, 264, 51692, 51692, 294, 264, 5308, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15801604107172804, "compression_ratio": 1.6926605504587156, "no_caption_prob": 2.7108171707368456e-05}, {"id": 84, "seek": 28116, "start": 287.76000000000005, "end": 290.20000000000005, "text": " And maybe there are maybe they're not.", "tokens": [50364, 400, 550, 291, 4696, 362, 1547, 281, 652, 988, 300, 439, 264, 3331, 366, 18033, 13, 50694, 50694, 400, 1310, 456, 366, 1310, 436, 434, 406, 13, 50816, 50816, 286, 390, 3938, 1364, 365, 512, 512, 19907, 3089, 13, 51020, 51020, 400, 456, 311, 411, 257, 11, 291, 458, 11, 294, 264, 10561, 11, 264, 19907, 10561, 11, 17663, 34, 10561, 11, 291, 393, 51346, 51346, 291, 393, 584, 411, 971, 4070, 11, 293, 550, 483, 2035, 11, 291, 458, 11, 1412, 300, 311, 668, 4678, 294, 294, 264, 51692, 51692, 294, 264, 5308, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15801604107172804, "compression_ratio": 1.6926605504587156, "no_caption_prob": 2.7108171707368456e-05}, {"id": 85, "seek": 28116, "start": 290.20000000000005, "end": 294.28000000000003, "text": " I was recently working with some some Ruby code.", "tokens": [50364, 400, 550, 291, 4696, 362, 1547, 281, 652, 988, 300, 439, 264, 3331, 366, 18033, 13, 50694, 50694, 400, 1310, 456, 366, 1310, 436, 434, 406, 13, 50816, 50816, 286, 390, 3938, 1364, 365, 512, 512, 19907, 3089, 13, 51020, 51020, 400, 456, 311, 411, 257, 11, 291, 458, 11, 294, 264, 10561, 11, 264, 19907, 10561, 11, 17663, 34, 10561, 11, 291, 393, 51346, 51346, 291, 393, 584, 411, 971, 4070, 11, 293, 550, 483, 2035, 11, 291, 458, 11, 1412, 300, 311, 668, 4678, 294, 294, 264, 51692, 51692, 294, 264, 5308, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15801604107172804, "compression_ratio": 1.6926605504587156, "no_caption_prob": 2.7108171707368456e-05}, {"id": 86, "seek": 28116, "start": 294.28000000000003, "end": 300.8, "text": " And there's like a, you know, in the controller, the Ruby controller, MVC controller, you can", "tokens": [50364, 400, 550, 291, 4696, 362, 1547, 281, 652, 988, 300, 439, 264, 3331, 366, 18033, 13, 50694, 50694, 400, 1310, 456, 366, 1310, 436, 434, 406, 13, 50816, 50816, 286, 390, 3938, 1364, 365, 512, 512, 19907, 3089, 13, 51020, 51020, 400, 456, 311, 411, 257, 11, 291, 458, 11, 294, 264, 10561, 11, 264, 19907, 10561, 11, 17663, 34, 10561, 11, 291, 393, 51346, 51346, 291, 393, 584, 411, 971, 4070, 11, 293, 550, 483, 2035, 11, 291, 458, 11, 1412, 300, 311, 668, 4678, 294, 294, 264, 51692, 51692, 294, 264, 5308, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15801604107172804, "compression_ratio": 1.6926605504587156, "no_caption_prob": 2.7108171707368456e-05}, {"id": 87, "seek": 28116, "start": 300.8, "end": 307.72, "text": " you can say like params, and then get whatever, you know, data that's been passed in in the", "tokens": [50364, 400, 550, 291, 4696, 362, 1547, 281, 652, 988, 300, 439, 264, 3331, 366, 18033, 13, 50694, 50694, 400, 1310, 456, 366, 1310, 436, 434, 406, 13, 50816, 50816, 286, 390, 3938, 1364, 365, 512, 512, 19907, 3089, 13, 51020, 51020, 400, 456, 311, 411, 257, 11, 291, 458, 11, 294, 264, 10561, 11, 264, 19907, 10561, 11, 17663, 34, 10561, 11, 291, 393, 51346, 51346, 291, 393, 584, 411, 971, 4070, 11, 293, 550, 483, 2035, 11, 291, 458, 11, 1412, 300, 311, 668, 4678, 294, 294, 264, 51692, 51692, 294, 264, 5308, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15801604107172804, "compression_ratio": 1.6926605504587156, "no_caption_prob": 2.7108171707368456e-05}, {"id": 88, "seek": 28116, "start": 307.72, "end": 309.92, "text": " in the request.", "tokens": [50364, 400, 550, 291, 4696, 362, 1547, 281, 652, 988, 300, 439, 264, 3331, 366, 18033, 13, 50694, 50694, 400, 1310, 456, 366, 1310, 436, 434, 406, 13, 50816, 50816, 286, 390, 3938, 1364, 365, 512, 512, 19907, 3089, 13, 51020, 51020, 400, 456, 311, 411, 257, 11, 291, 458, 11, 294, 264, 10561, 11, 264, 19907, 10561, 11, 17663, 34, 10561, 11, 291, 393, 51346, 51346, 291, 393, 584, 411, 971, 4070, 11, 293, 550, 483, 2035, 11, 291, 458, 11, 1412, 300, 311, 668, 4678, 294, 294, 264, 51692, 51692, 294, 264, 5308, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15801604107172804, "compression_ratio": 1.6926605504587156, "no_caption_prob": 2.7108171707368456e-05}, {"id": 89, "seek": 30992, "start": 309.92, "end": 315.76, "text": " And it's quite common to see Ruby code where you just sort of grab the params and maybe", "tokens": [50364, 400, 309, 311, 1596, 2689, 281, 536, 19907, 3089, 689, 291, 445, 1333, 295, 4444, 264, 971, 4070, 293, 1310, 50656, 50656, 411, 291, 291, 853, 281, 1604, 281, 1520, 294, 1868, 295, 264, 3089, 11, 1310, 291, 909, 411, 291, 393, 909, 50960, 50960, 613, 411, 949, 15995, 293, 300, 1333, 295, 551, 294, 294, 428, 27649, 26903, 689, 291, 434, 51234, 51234, 291, 434, 1256, 27187, 1629, 721, 466, 264, 1412, 949, 291, 483, 309, 13, 51395, 51395, 583, 550, 291, 434, 445, 3838, 3760, 411, 971, 4070, 1422, 30351, 420, 746, 293, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.13652741788613676, "compression_ratio": 1.7735042735042734, "no_caption_prob": 2.247322117909789e-05}, {"id": 90, "seek": 30992, "start": 315.76, "end": 321.84000000000003, "text": " like you you try to remember to check in front of the code, maybe you add like you can add", "tokens": [50364, 400, 309, 311, 1596, 2689, 281, 536, 19907, 3089, 689, 291, 445, 1333, 295, 4444, 264, 971, 4070, 293, 1310, 50656, 50656, 411, 291, 291, 853, 281, 1604, 281, 1520, 294, 1868, 295, 264, 3089, 11, 1310, 291, 909, 411, 291, 393, 909, 50960, 50960, 613, 411, 949, 15995, 293, 300, 1333, 295, 551, 294, 294, 428, 27649, 26903, 689, 291, 434, 51234, 51234, 291, 434, 1256, 27187, 1629, 721, 466, 264, 1412, 949, 291, 483, 309, 13, 51395, 51395, 583, 550, 291, 434, 445, 3838, 3760, 411, 971, 4070, 1422, 30351, 420, 746, 293, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.13652741788613676, "compression_ratio": 1.7735042735042734, "no_caption_prob": 2.247322117909789e-05}, {"id": 91, "seek": 30992, "start": 321.84000000000003, "end": 327.32, "text": " these like before filters and that sort of thing in in your rails controllers where you're", "tokens": [50364, 400, 309, 311, 1596, 2689, 281, 536, 19907, 3089, 689, 291, 445, 1333, 295, 4444, 264, 971, 4070, 293, 1310, 50656, 50656, 411, 291, 291, 853, 281, 1604, 281, 1520, 294, 1868, 295, 264, 3089, 11, 1310, 291, 909, 411, 291, 393, 909, 50960, 50960, 613, 411, 949, 15995, 293, 300, 1333, 295, 551, 294, 294, 428, 27649, 26903, 689, 291, 434, 51234, 51234, 291, 434, 1256, 27187, 1629, 721, 466, 264, 1412, 949, 291, 483, 309, 13, 51395, 51395, 583, 550, 291, 434, 445, 3838, 3760, 411, 971, 4070, 1422, 30351, 420, 746, 293, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.13652741788613676, "compression_ratio": 1.7735042735042734, "no_caption_prob": 2.247322117909789e-05}, {"id": 92, "seek": 30992, "start": 327.32, "end": 330.54, "text": " you're asserting certain things about the data before you get it.", "tokens": [50364, 400, 309, 311, 1596, 2689, 281, 536, 19907, 3089, 689, 291, 445, 1333, 295, 4444, 264, 971, 4070, 293, 1310, 50656, 50656, 411, 291, 291, 853, 281, 1604, 281, 1520, 294, 1868, 295, 264, 3089, 11, 1310, 291, 909, 411, 291, 393, 909, 50960, 50960, 613, 411, 949, 15995, 293, 300, 1333, 295, 551, 294, 294, 428, 27649, 26903, 689, 291, 434, 51234, 51234, 291, 434, 1256, 27187, 1629, 721, 466, 264, 1412, 949, 291, 483, 309, 13, 51395, 51395, 583, 550, 291, 434, 445, 3838, 3760, 411, 971, 4070, 1422, 30351, 420, 746, 293, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.13652741788613676, "compression_ratio": 1.7735042735042734, "no_caption_prob": 2.247322117909789e-05}, {"id": 93, "seek": 30992, "start": 330.54, "end": 337.84000000000003, "text": " But then you're just directly reading like params sub username or something and", "tokens": [50364, 400, 309, 311, 1596, 2689, 281, 536, 19907, 3089, 689, 291, 445, 1333, 295, 4444, 264, 971, 4070, 293, 1310, 50656, 50656, 411, 291, 291, 853, 281, 1604, 281, 1520, 294, 1868, 295, 264, 3089, 11, 1310, 291, 909, 411, 291, 393, 909, 50960, 50960, 613, 411, 949, 15995, 293, 300, 1333, 295, 551, 294, 294, 428, 27649, 26903, 689, 291, 434, 51234, 51234, 291, 434, 1256, 27187, 1629, 721, 466, 264, 1412, 949, 291, 483, 309, 13, 51395, 51395, 583, 550, 291, 434, 445, 3838, 3760, 411, 971, 4070, 1422, 30351, 420, 746, 293, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.13652741788613676, "compression_ratio": 1.7735042735042734, "no_caption_prob": 2.247322117909789e-05}, {"id": 94, "seek": 33784, "start": 337.84, "end": 341.28, "text": " params dot sub dot username, you mean something like that?", "tokens": [50364, 971, 4070, 5893, 1422, 5893, 30351, 11, 291, 914, 746, 411, 300, 30, 50536, 50536, 1042, 11, 411, 971, 4070, 3732, 26179, 11, 512, 2158, 13, 50684, 50684, 407, 291, 434, 411, 23771, 257, 2141, 484, 295, 22019, 300, 311, 445, 23771, 341, 8936, 1412, 13, 50946, 50946, 400, 309, 2544, 588, 25806, 281, 341, 1333, 295, 24734, 21156, 278, 6061, 5102, 13, 51230, 51230, 407, 1071, 551, 300, 286, 600, 1612, 11, 286, 390, 1364, 365, 365, 512, 19907, 3089, 3938, 300, 286, 1352, 51472, 51472, 281, 312, 257, 1481, 5102, 300, 456, 390, 341, 1333, 295, 7363, 1639, 1508, 300, 291, 727, 1333, 295, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14245520505038176, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.696413710305933e-05}, {"id": 95, "seek": 33784, "start": 341.28, "end": 344.23999999999995, "text": " Well, like params square brackets, some value.", "tokens": [50364, 971, 4070, 5893, 1422, 5893, 30351, 11, 291, 914, 746, 411, 300, 30, 50536, 50536, 1042, 11, 411, 971, 4070, 3732, 26179, 11, 512, 2158, 13, 50684, 50684, 407, 291, 434, 411, 23771, 257, 2141, 484, 295, 22019, 300, 311, 445, 23771, 341, 8936, 1412, 13, 50946, 50946, 400, 309, 2544, 588, 25806, 281, 341, 1333, 295, 24734, 21156, 278, 6061, 5102, 13, 51230, 51230, 407, 1071, 551, 300, 286, 600, 1612, 11, 286, 390, 1364, 365, 365, 512, 19907, 3089, 3938, 300, 286, 1352, 51472, 51472, 281, 312, 257, 1481, 5102, 300, 456, 390, 341, 1333, 295, 7363, 1639, 1508, 300, 291, 727, 1333, 295, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14245520505038176, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.696413710305933e-05}, {"id": 96, "seek": 33784, "start": 344.23999999999995, "end": 349.47999999999996, "text": " So you're like grabbing a key out of hash that's just grabbing this raw data.", "tokens": [50364, 971, 4070, 5893, 1422, 5893, 30351, 11, 291, 914, 746, 411, 300, 30, 50536, 50536, 1042, 11, 411, 971, 4070, 3732, 26179, 11, 512, 2158, 13, 50684, 50684, 407, 291, 434, 411, 23771, 257, 2141, 484, 295, 22019, 300, 311, 445, 23771, 341, 8936, 1412, 13, 50946, 50946, 400, 309, 2544, 588, 25806, 281, 341, 1333, 295, 24734, 21156, 278, 6061, 5102, 13, 51230, 51230, 407, 1071, 551, 300, 286, 600, 1612, 11, 286, 390, 1364, 365, 365, 512, 19907, 3089, 3938, 300, 286, 1352, 51472, 51472, 281, 312, 257, 1481, 5102, 300, 456, 390, 341, 1333, 295, 7363, 1639, 1508, 300, 291, 727, 1333, 295, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14245520505038176, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.696413710305933e-05}, {"id": 97, "seek": 33784, "start": 349.47999999999996, "end": 355.15999999999997, "text": " And it seems very prone to this sort of shotgun parsing anti pattern.", "tokens": [50364, 971, 4070, 5893, 1422, 5893, 30351, 11, 291, 914, 746, 411, 300, 30, 50536, 50536, 1042, 11, 411, 971, 4070, 3732, 26179, 11, 512, 2158, 13, 50684, 50684, 407, 291, 434, 411, 23771, 257, 2141, 484, 295, 22019, 300, 311, 445, 23771, 341, 8936, 1412, 13, 50946, 50946, 400, 309, 2544, 588, 25806, 281, 341, 1333, 295, 24734, 21156, 278, 6061, 5102, 13, 51230, 51230, 407, 1071, 551, 300, 286, 600, 1612, 11, 286, 390, 1364, 365, 365, 512, 19907, 3089, 3938, 300, 286, 1352, 51472, 51472, 281, 312, 257, 1481, 5102, 300, 456, 390, 341, 1333, 295, 7363, 1639, 1508, 300, 291, 727, 1333, 295, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14245520505038176, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.696413710305933e-05}, {"id": 98, "seek": 33784, "start": 355.15999999999997, "end": 360.0, "text": " So another thing that I've seen, I was working with with some Ruby code recently that I found", "tokens": [50364, 971, 4070, 5893, 1422, 5893, 30351, 11, 291, 914, 746, 411, 300, 30, 50536, 50536, 1042, 11, 411, 971, 4070, 3732, 26179, 11, 512, 2158, 13, 50684, 50684, 407, 291, 434, 411, 23771, 257, 2141, 484, 295, 22019, 300, 311, 445, 23771, 341, 8936, 1412, 13, 50946, 50946, 400, 309, 2544, 588, 25806, 281, 341, 1333, 295, 24734, 21156, 278, 6061, 5102, 13, 51230, 51230, 407, 1071, 551, 300, 286, 600, 1612, 11, 286, 390, 1364, 365, 365, 512, 19907, 3089, 3938, 300, 286, 1352, 51472, 51472, 281, 312, 257, 1481, 5102, 300, 456, 390, 341, 1333, 295, 7363, 1639, 1508, 300, 291, 727, 1333, 295, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14245520505038176, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.696413710305933e-05}, {"id": 99, "seek": 33784, "start": 360.0, "end": 366.08, "text": " to be a nice pattern that there was this sort of validator class that you could sort of", "tokens": [50364, 971, 4070, 5893, 1422, 5893, 30351, 11, 291, 914, 746, 411, 300, 30, 50536, 50536, 1042, 11, 411, 971, 4070, 3732, 26179, 11, 512, 2158, 13, 50684, 50684, 407, 291, 434, 411, 23771, 257, 2141, 484, 295, 22019, 300, 311, 445, 23771, 341, 8936, 1412, 13, 50946, 50946, 400, 309, 2544, 588, 25806, 281, 341, 1333, 295, 24734, 21156, 278, 6061, 5102, 13, 51230, 51230, 407, 1071, 551, 300, 286, 600, 1612, 11, 286, 390, 1364, 365, 365, 512, 19907, 3089, 3938, 300, 286, 1352, 51472, 51472, 281, 312, 257, 1481, 5102, 300, 456, 390, 341, 1333, 295, 7363, 1639, 1508, 300, 291, 727, 1333, 295, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14245520505038176, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.696413710305933e-05}, {"id": 100, "seek": 36608, "start": 366.08, "end": 372.76, "text": " assert things about the data, and then you pass that data after you've made the assertions.", "tokens": [50364, 19810, 721, 466, 264, 1412, 11, 293, 550, 291, 1320, 300, 1412, 934, 291, 600, 1027, 264, 19810, 626, 13, 50698, 50698, 407, 291, 434, 1128, 3838, 26440, 264, 971, 4070, 294, 428, 10561, 11, 291, 434, 23771, 1412, 934, 50978, 50978, 291, 600, 1027, 613, 7363, 763, 13, 51040, 51040, 407, 291, 393, 3297, 411, 764, 341, 5102, 295, 1953, 48377, 500, 380, 29562, 294, 2107, 33941, 51322, 51322, 8650, 13, 51372, 51372, 583, 562, 291, 434, 1364, 365, 264, 33941, 2856, 11, 291, 393, 767, 362, 428, 2010, 32322, 11, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.091153879960378, "compression_ratio": 1.837837837837838, "no_caption_prob": 7.484190427931026e-05}, {"id": 101, "seek": 36608, "start": 372.76, "end": 378.36, "text": " So you're never directly accessing the params in your controller, you're grabbing data after", "tokens": [50364, 19810, 721, 466, 264, 1412, 11, 293, 550, 291, 1320, 300, 1412, 934, 291, 600, 1027, 264, 19810, 626, 13, 50698, 50698, 407, 291, 434, 1128, 3838, 26440, 264, 971, 4070, 294, 428, 10561, 11, 291, 434, 23771, 1412, 934, 50978, 50978, 291, 600, 1027, 613, 7363, 763, 13, 51040, 51040, 407, 291, 393, 3297, 411, 764, 341, 5102, 295, 1953, 48377, 500, 380, 29562, 294, 2107, 33941, 51322, 51322, 8650, 13, 51372, 51372, 583, 562, 291, 434, 1364, 365, 264, 33941, 2856, 11, 291, 393, 767, 362, 428, 2010, 32322, 11, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.091153879960378, "compression_ratio": 1.837837837837838, "no_caption_prob": 7.484190427931026e-05}, {"id": 102, "seek": 36608, "start": 378.36, "end": 379.59999999999997, "text": " you've made these validations.", "tokens": [50364, 19810, 721, 466, 264, 1412, 11, 293, 550, 291, 1320, 300, 1412, 934, 291, 600, 1027, 264, 19810, 626, 13, 50698, 50698, 407, 291, 434, 1128, 3838, 26440, 264, 971, 4070, 294, 428, 10561, 11, 291, 434, 23771, 1412, 934, 50978, 50978, 291, 600, 1027, 613, 7363, 763, 13, 51040, 51040, 407, 291, 393, 3297, 411, 764, 341, 5102, 295, 1953, 48377, 500, 380, 29562, 294, 2107, 33941, 51322, 51322, 8650, 13, 51372, 51372, 583, 562, 291, 434, 1364, 365, 264, 33941, 2856, 11, 291, 393, 767, 362, 428, 2010, 32322, 11, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.091153879960378, "compression_ratio": 1.837837837837838, "no_caption_prob": 7.484190427931026e-05}, {"id": 103, "seek": 36608, "start": 379.59999999999997, "end": 385.24, "text": " So you can certainly like use this pattern of thinking parse don't validate in non typed", "tokens": [50364, 19810, 721, 466, 264, 1412, 11, 293, 550, 291, 1320, 300, 1412, 934, 291, 600, 1027, 264, 19810, 626, 13, 50698, 50698, 407, 291, 434, 1128, 3838, 26440, 264, 971, 4070, 294, 428, 10561, 11, 291, 434, 23771, 1412, 934, 50978, 50978, 291, 600, 1027, 613, 7363, 763, 13, 51040, 51040, 407, 291, 393, 3297, 411, 764, 341, 5102, 295, 1953, 48377, 500, 380, 29562, 294, 2107, 33941, 51322, 51322, 8650, 13, 51372, 51372, 583, 562, 291, 434, 1364, 365, 264, 33941, 2856, 11, 291, 393, 767, 362, 428, 2010, 32322, 11, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.091153879960378, "compression_ratio": 1.837837837837838, "no_caption_prob": 7.484190427931026e-05}, {"id": 104, "seek": 36608, "start": 385.24, "end": 386.24, "text": " languages.", "tokens": [50364, 19810, 721, 466, 264, 1412, 11, 293, 550, 291, 1320, 300, 1412, 934, 291, 600, 1027, 264, 19810, 626, 13, 50698, 50698, 407, 291, 434, 1128, 3838, 26440, 264, 971, 4070, 294, 428, 10561, 11, 291, 434, 23771, 1412, 934, 50978, 50978, 291, 600, 1027, 613, 7363, 763, 13, 51040, 51040, 407, 291, 393, 3297, 411, 764, 341, 5102, 295, 1953, 48377, 500, 380, 29562, 294, 2107, 33941, 51322, 51322, 8650, 13, 51372, 51372, 583, 562, 291, 434, 1364, 365, 264, 33941, 2856, 11, 291, 393, 767, 362, 428, 2010, 32322, 11, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.091153879960378, "compression_ratio": 1.837837837837838, "no_caption_prob": 7.484190427931026e-05}, {"id": 105, "seek": 36608, "start": 386.24, "end": 391.59999999999997, "text": " But when you're working with the typed language, you can actually have your type signatures,", "tokens": [50364, 19810, 721, 466, 264, 1412, 11, 293, 550, 291, 1320, 300, 1412, 934, 291, 600, 1027, 264, 19810, 626, 13, 50698, 50698, 407, 291, 434, 1128, 3838, 26440, 264, 971, 4070, 294, 428, 10561, 11, 291, 434, 23771, 1412, 934, 50978, 50978, 291, 600, 1027, 613, 7363, 763, 13, 51040, 51040, 407, 291, 393, 3297, 411, 764, 341, 5102, 295, 1953, 48377, 500, 380, 29562, 294, 2107, 33941, 51322, 51322, 8650, 13, 51372, 51372, 583, 562, 291, 434, 1364, 365, 264, 33941, 2856, 11, 291, 393, 767, 362, 428, 2010, 32322, 11, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.091153879960378, "compression_ratio": 1.837837837837838, "no_caption_prob": 7.484190427931026e-05}, {"id": 106, "seek": 39160, "start": 391.6, "end": 396.32000000000005, "text": " keep you honest to make sure that your data types have the proofs in them.", "tokens": [50364, 1066, 291, 3245, 281, 652, 988, 300, 428, 1412, 3467, 362, 264, 8177, 82, 294, 552, 13, 50600, 50600, 407, 291, 727, 584, 341, 575, 281, 312, 257, 2107, 6707, 1329, 13, 50780, 50780, 400, 586, 291, 393, 380, 445, 2870, 411, 11, 1954, 11, 286, 643, 281, 312, 988, 281, 1520, 439, 613, 33270, 1719, 51046, 51046, 412, 264, 1192, 11, 291, 600, 12785, 538, 264, 565, 291, 818, 300, 3089, 570, 309, 7029, 257, 2107, 6707, 51298, 51298, 1329, 2010, 13, 51432, 51432, 961, 311, 751, 257, 707, 857, 466, 264, 1433, 48377, 11, 570, 300, 311, 3297, 746, 300, 5541, 51676, 51676, 484, 281, 385, 562, 286, 562, 286, 700, 1401, 341, 7222, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.08819394072225271, "compression_ratio": 1.6902985074626866, "no_caption_prob": 7.030888082226738e-05}, {"id": 107, "seek": 39160, "start": 396.32000000000005, "end": 399.92, "text": " So you could say this has to be a non empty list.", "tokens": [50364, 1066, 291, 3245, 281, 652, 988, 300, 428, 1412, 3467, 362, 264, 8177, 82, 294, 552, 13, 50600, 50600, 407, 291, 727, 584, 341, 575, 281, 312, 257, 2107, 6707, 1329, 13, 50780, 50780, 400, 586, 291, 393, 380, 445, 2870, 411, 11, 1954, 11, 286, 643, 281, 312, 988, 281, 1520, 439, 613, 33270, 1719, 51046, 51046, 412, 264, 1192, 11, 291, 600, 12785, 538, 264, 565, 291, 818, 300, 3089, 570, 309, 7029, 257, 2107, 6707, 51298, 51298, 1329, 2010, 13, 51432, 51432, 961, 311, 751, 257, 707, 857, 466, 264, 1433, 48377, 11, 570, 300, 311, 3297, 746, 300, 5541, 51676, 51676, 484, 281, 385, 562, 286, 562, 286, 700, 1401, 341, 7222, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.08819394072225271, "compression_ratio": 1.6902985074626866, "no_caption_prob": 7.030888082226738e-05}, {"id": 108, "seek": 39160, "start": 399.92, "end": 405.24, "text": " And now you can't just forget like, oh, I need to be sure to check all these invariants", "tokens": [50364, 1066, 291, 3245, 281, 652, 988, 300, 428, 1412, 3467, 362, 264, 8177, 82, 294, 552, 13, 50600, 50600, 407, 291, 727, 584, 341, 575, 281, 312, 257, 2107, 6707, 1329, 13, 50780, 50780, 400, 586, 291, 393, 380, 445, 2870, 411, 11, 1954, 11, 286, 643, 281, 312, 988, 281, 1520, 439, 613, 33270, 1719, 51046, 51046, 412, 264, 1192, 11, 291, 600, 12785, 538, 264, 565, 291, 818, 300, 3089, 570, 309, 7029, 257, 2107, 6707, 51298, 51298, 1329, 2010, 13, 51432, 51432, 961, 311, 751, 257, 707, 857, 466, 264, 1433, 48377, 11, 570, 300, 311, 3297, 746, 300, 5541, 51676, 51676, 484, 281, 385, 562, 286, 562, 286, 700, 1401, 341, 7222, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.08819394072225271, "compression_ratio": 1.6902985074626866, "no_caption_prob": 7.030888082226738e-05}, {"id": 109, "seek": 39160, "start": 405.24, "end": 410.28000000000003, "text": " at the top, you've proven by the time you call that code because it requires a non empty", "tokens": [50364, 1066, 291, 3245, 281, 652, 988, 300, 428, 1412, 3467, 362, 264, 8177, 82, 294, 552, 13, 50600, 50600, 407, 291, 727, 584, 341, 575, 281, 312, 257, 2107, 6707, 1329, 13, 50780, 50780, 400, 586, 291, 393, 380, 445, 2870, 411, 11, 1954, 11, 286, 643, 281, 312, 988, 281, 1520, 439, 613, 33270, 1719, 51046, 51046, 412, 264, 1192, 11, 291, 600, 12785, 538, 264, 565, 291, 818, 300, 3089, 570, 309, 7029, 257, 2107, 6707, 51298, 51298, 1329, 2010, 13, 51432, 51432, 961, 311, 751, 257, 707, 857, 466, 264, 1433, 48377, 11, 570, 300, 311, 3297, 746, 300, 5541, 51676, 51676, 484, 281, 385, 562, 286, 562, 286, 700, 1401, 341, 7222, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.08819394072225271, "compression_ratio": 1.6902985074626866, "no_caption_prob": 7.030888082226738e-05}, {"id": 110, "seek": 39160, "start": 410.28000000000003, "end": 412.96000000000004, "text": " list type.", "tokens": [50364, 1066, 291, 3245, 281, 652, 988, 300, 428, 1412, 3467, 362, 264, 8177, 82, 294, 552, 13, 50600, 50600, 407, 291, 727, 584, 341, 575, 281, 312, 257, 2107, 6707, 1329, 13, 50780, 50780, 400, 586, 291, 393, 380, 445, 2870, 411, 11, 1954, 11, 286, 643, 281, 312, 988, 281, 1520, 439, 613, 33270, 1719, 51046, 51046, 412, 264, 1192, 11, 291, 600, 12785, 538, 264, 565, 291, 818, 300, 3089, 570, 309, 7029, 257, 2107, 6707, 51298, 51298, 1329, 2010, 13, 51432, 51432, 961, 311, 751, 257, 707, 857, 466, 264, 1433, 48377, 11, 570, 300, 311, 3297, 746, 300, 5541, 51676, 51676, 484, 281, 385, 562, 286, 562, 286, 700, 1401, 341, 7222, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.08819394072225271, "compression_ratio": 1.6902985074626866, "no_caption_prob": 7.030888082226738e-05}, {"id": 111, "seek": 39160, "start": 412.96000000000004, "end": 417.84000000000003, "text": " Let's talk a little bit about the term parse, because that's certainly something that stuck", "tokens": [50364, 1066, 291, 3245, 281, 652, 988, 300, 428, 1412, 3467, 362, 264, 8177, 82, 294, 552, 13, 50600, 50600, 407, 291, 727, 584, 341, 575, 281, 312, 257, 2107, 6707, 1329, 13, 50780, 50780, 400, 586, 291, 393, 380, 445, 2870, 411, 11, 1954, 11, 286, 643, 281, 312, 988, 281, 1520, 439, 613, 33270, 1719, 51046, 51046, 412, 264, 1192, 11, 291, 600, 12785, 538, 264, 565, 291, 818, 300, 3089, 570, 309, 7029, 257, 2107, 6707, 51298, 51298, 1329, 2010, 13, 51432, 51432, 961, 311, 751, 257, 707, 857, 466, 264, 1433, 48377, 11, 570, 300, 311, 3297, 746, 300, 5541, 51676, 51676, 484, 281, 385, 562, 286, 562, 286, 700, 1401, 341, 7222, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.08819394072225271, "compression_ratio": 1.6902985074626866, "no_caption_prob": 7.030888082226738e-05}, {"id": 112, "seek": 39160, "start": 417.84000000000003, "end": 420.28000000000003, "text": " out to me when I when I first read this article.", "tokens": [50364, 1066, 291, 3245, 281, 652, 988, 300, 428, 1412, 3467, 362, 264, 8177, 82, 294, 552, 13, 50600, 50600, 407, 291, 727, 584, 341, 575, 281, 312, 257, 2107, 6707, 1329, 13, 50780, 50780, 400, 586, 291, 393, 380, 445, 2870, 411, 11, 1954, 11, 286, 643, 281, 312, 988, 281, 1520, 439, 613, 33270, 1719, 51046, 51046, 412, 264, 1192, 11, 291, 600, 12785, 538, 264, 565, 291, 818, 300, 3089, 570, 309, 7029, 257, 2107, 6707, 51298, 51298, 1329, 2010, 13, 51432, 51432, 961, 311, 751, 257, 707, 857, 466, 264, 1433, 48377, 11, 570, 300, 311, 3297, 746, 300, 5541, 51676, 51676, 484, 281, 385, 562, 286, 562, 286, 700, 1401, 341, 7222, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.08819394072225271, "compression_ratio": 1.6902985074626866, "no_caption_prob": 7.030888082226738e-05}, {"id": 113, "seek": 42028, "start": 420.28, "end": 421.44, "text": " You know, it's a little confusing.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 114, "seek": 42028, "start": 421.44, "end": 423.47999999999996, "text": " And she does kind of get into that.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 115, "seek": 42028, "start": 423.47999999999996, "end": 427.64, "text": " And she says, let me try to convince you that this word parse is actually a good term for", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 116, "seek": 42028, "start": 427.64, "end": 428.64, "text": " this concept.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 117, "seek": 42028, "start": 428.64, "end": 431.53999999999996, "text": " It might seem unrelated at first.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 118, "seek": 42028, "start": 431.53999999999996, "end": 434.23999999999995, "text": " So she's sort of saying, what is a parser?", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 119, "seek": 42028, "start": 434.23999999999995, "end": 436.03999999999996, "text": " It's a function.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 120, "seek": 42028, "start": 436.03999999999996, "end": 441.35999999999996, "text": " So she's here's a quote, a parser is just a function and produces more structured output.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 121, "seek": 42028, "start": 441.35999999999996, "end": 445.76, "text": " Some values in the domain do not correspond to any value in the range.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 122, "seek": 42028, "start": 445.76, "end": 448.28, "text": " So all parsers must have some notion of failure.", "tokens": [50364, 509, 458, 11, 309, 311, 257, 707, 13181, 13, 50422, 50422, 400, 750, 775, 733, 295, 483, 666, 300, 13, 50524, 50524, 400, 750, 1619, 11, 718, 385, 853, 281, 13447, 291, 300, 341, 1349, 48377, 307, 767, 257, 665, 1433, 337, 50732, 50732, 341, 3410, 13, 50782, 50782, 467, 1062, 1643, 38967, 412, 700, 13, 50927, 50927, 407, 750, 311, 1333, 295, 1566, 11, 437, 307, 257, 21156, 260, 30, 51062, 51062, 467, 311, 257, 2445, 13, 51152, 51152, 407, 750, 311, 510, 311, 257, 6513, 11, 257, 21156, 260, 307, 445, 257, 2445, 293, 14725, 544, 18519, 5598, 13, 51418, 51418, 2188, 4190, 294, 264, 9274, 360, 406, 6805, 281, 604, 2158, 294, 264, 3613, 13, 51638, 51638, 407, 439, 21156, 433, 1633, 362, 512, 10710, 295, 7763, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09162882345694083, "compression_ratio": 1.707142857142857, "no_caption_prob": 3.4807537304004654e-05}, {"id": 123, "seek": 44828, "start": 448.28, "end": 454.47999999999996, "text": " So I think that's an important point, right is that if you're able to fail, then we kind", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 124, "seek": 44828, "start": 454.47999999999996, "end": 459.55999999999995, "text": " of talked about this in our opaque types episode that you can have a function that conditionally", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 125, "seek": 44828, "start": 459.55999999999995, "end": 461.44, "text": " returns a type.", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 126, "seek": 44828, "start": 461.44, "end": 467.23999999999995, "text": " And the way you do that in Elm is you can return a result or maybe type or a custom", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 127, "seek": 44828, "start": 467.23999999999995, "end": 468.23999999999995, "text": " type.", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 128, "seek": 44828, "start": 468.23999999999995, "end": 469.23999999999995, "text": " Yeah, right.", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 129, "seek": 44828, "start": 469.23999999999995, "end": 470.23999999999995, "text": " And that represents a failure.", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 130, "seek": 44828, "start": 470.23999999999995, "end": 472.4, "text": " So you have to handle the failure step.", "tokens": [50364, 407, 286, 519, 300, 311, 364, 1021, 935, 11, 558, 307, 300, 498, 291, 434, 1075, 281, 3061, 11, 550, 321, 733, 50674, 50674, 295, 2825, 466, 341, 294, 527, 42687, 3467, 3500, 300, 291, 393, 362, 257, 2445, 300, 4188, 379, 50928, 50928, 11247, 257, 2010, 13, 51022, 51022, 400, 264, 636, 291, 360, 300, 294, 2699, 76, 307, 291, 393, 2736, 257, 1874, 420, 1310, 2010, 420, 257, 2375, 51312, 51312, 2010, 13, 51362, 51362, 865, 11, 558, 13, 51412, 51412, 400, 300, 8855, 257, 7763, 13, 51462, 51462, 407, 291, 362, 281, 4813, 264, 7763, 1823, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.08160235331608699, "compression_ratio": 1.644736842105263, "no_caption_prob": 1.7231253877980635e-05}, {"id": 131, "seek": 47240, "start": 472.4, "end": 479.52, "text": " But once you check for failure, so you say, you know, case parse result, okay, error.", "tokens": [50364, 583, 1564, 291, 1520, 337, 7763, 11, 370, 291, 584, 11, 291, 458, 11, 1389, 48377, 1874, 11, 1392, 11, 6713, 13, 50720, 50720, 1042, 294, 264, 1392, 1389, 11, 291, 458, 11, 291, 362, 300, 1412, 11, 291, 458, 11, 291, 600, 40693, 2035, 50956, 50956, 291, 40693, 538, 264, 1412, 300, 309, 311, 257, 2107, 6707, 1329, 300, 309, 311, 364, 9214, 3587, 4195, 51190, 51190, 300, 309, 311, 257, 7363, 30351, 11, 2035, 291, 600, 40693, 11, 291, 393, 4188, 379, 2736, 257, 51430, 51430, 2010, 293, 291, 458, 300, 264, 787, 636, 291, 393, 483, 300, 2010, 307, 538, 2614, 309, 807, 257, 2445, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.13568735122680664, "compression_ratio": 1.933920704845815, "no_caption_prob": 9.609775588614866e-05}, {"id": 132, "seek": 47240, "start": 479.52, "end": 484.23999999999995, "text": " Well in the okay case, you know, you have that data, you know, you've validated whatever", "tokens": [50364, 583, 1564, 291, 1520, 337, 7763, 11, 370, 291, 584, 11, 291, 458, 11, 1389, 48377, 1874, 11, 1392, 11, 6713, 13, 50720, 50720, 1042, 294, 264, 1392, 1389, 11, 291, 458, 11, 291, 362, 300, 1412, 11, 291, 458, 11, 291, 600, 40693, 2035, 50956, 50956, 291, 40693, 538, 264, 1412, 300, 309, 311, 257, 2107, 6707, 1329, 300, 309, 311, 364, 9214, 3587, 4195, 51190, 51190, 300, 309, 311, 257, 7363, 30351, 11, 2035, 291, 600, 40693, 11, 291, 393, 4188, 379, 2736, 257, 51430, 51430, 2010, 293, 291, 458, 300, 264, 787, 636, 291, 393, 483, 300, 2010, 307, 538, 2614, 309, 807, 257, 2445, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.13568735122680664, "compression_ratio": 1.933920704845815, "no_caption_prob": 9.609775588614866e-05}, {"id": 133, "seek": 47240, "start": 484.23999999999995, "end": 488.91999999999996, "text": " you validated by the data that it's a non empty list that it's an authenticated user", "tokens": [50364, 583, 1564, 291, 1520, 337, 7763, 11, 370, 291, 584, 11, 291, 458, 11, 1389, 48377, 1874, 11, 1392, 11, 6713, 13, 50720, 50720, 1042, 294, 264, 1392, 1389, 11, 291, 458, 11, 291, 362, 300, 1412, 11, 291, 458, 11, 291, 600, 40693, 2035, 50956, 50956, 291, 40693, 538, 264, 1412, 300, 309, 311, 257, 2107, 6707, 1329, 300, 309, 311, 364, 9214, 3587, 4195, 51190, 51190, 300, 309, 311, 257, 7363, 30351, 11, 2035, 291, 600, 40693, 11, 291, 393, 4188, 379, 2736, 257, 51430, 51430, 2010, 293, 291, 458, 300, 264, 787, 636, 291, 393, 483, 300, 2010, 307, 538, 2614, 309, 807, 257, 2445, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.13568735122680664, "compression_ratio": 1.933920704845815, "no_caption_prob": 9.609775588614866e-05}, {"id": 134, "seek": 47240, "start": 488.91999999999996, "end": 493.71999999999997, "text": " that it's a valid username, whatever you've validated, you can conditionally return a", "tokens": [50364, 583, 1564, 291, 1520, 337, 7763, 11, 370, 291, 584, 11, 291, 458, 11, 1389, 48377, 1874, 11, 1392, 11, 6713, 13, 50720, 50720, 1042, 294, 264, 1392, 1389, 11, 291, 458, 11, 291, 362, 300, 1412, 11, 291, 458, 11, 291, 600, 40693, 2035, 50956, 50956, 291, 40693, 538, 264, 1412, 300, 309, 311, 257, 2107, 6707, 1329, 300, 309, 311, 364, 9214, 3587, 4195, 51190, 51190, 300, 309, 311, 257, 7363, 30351, 11, 2035, 291, 600, 40693, 11, 291, 393, 4188, 379, 2736, 257, 51430, 51430, 2010, 293, 291, 458, 300, 264, 787, 636, 291, 393, 483, 300, 2010, 307, 538, 2614, 309, 807, 257, 2445, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.13568735122680664, "compression_ratio": 1.933920704845815, "no_caption_prob": 9.609775588614866e-05}, {"id": 135, "seek": 47240, "start": 493.71999999999997, "end": 499.23999999999995, "text": " type and you know that the only way you can get that type is by running it through a function", "tokens": [50364, 583, 1564, 291, 1520, 337, 7763, 11, 370, 291, 584, 11, 291, 458, 11, 1389, 48377, 1874, 11, 1392, 11, 6713, 13, 50720, 50720, 1042, 294, 264, 1392, 1389, 11, 291, 458, 11, 291, 362, 300, 1412, 11, 291, 458, 11, 291, 600, 40693, 2035, 50956, 50956, 291, 40693, 538, 264, 1412, 300, 309, 311, 257, 2107, 6707, 1329, 300, 309, 311, 364, 9214, 3587, 4195, 51190, 51190, 300, 309, 311, 257, 7363, 30351, 11, 2035, 291, 600, 40693, 11, 291, 393, 4188, 379, 2736, 257, 51430, 51430, 2010, 293, 291, 458, 300, 264, 787, 636, 291, 393, 483, 300, 2010, 307, 538, 2614, 309, 807, 257, 2445, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.13568735122680664, "compression_ratio": 1.933920704845815, "no_caption_prob": 9.609775588614866e-05}, {"id": 136, "seek": 49924, "start": 499.24, "end": 502.6, "text": " that will conditionally give you that type if the validation passes.", "tokens": [50364, 300, 486, 4188, 379, 976, 291, 300, 2010, 498, 264, 24071, 11335, 13, 50532, 50532, 407, 309, 311, 1333, 295, 341, 6532, 295, 445, 2602, 295, 445, 884, 257, 27708, 11, 293, 550, 7027, 50838, 50838, 264, 8177, 300, 291, 600, 1096, 294, 300, 27708, 11, 291, 2736, 257, 2010, 11, 498, 309, 311, 2074, 11, 293, 1646, 51174, 51174, 291, 2736, 1825, 420, 291, 2736, 364, 6713, 13, 51338, 51338, 400, 586, 291, 434, 1075, 281, 1066, 2837, 295, 300, 8177, 300, 291, 600, 445, 1096, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.09215484494748323, "compression_ratio": 1.829145728643216, "no_caption_prob": 1.3006996596232057e-05}, {"id": 137, "seek": 49924, "start": 502.6, "end": 508.72, "text": " So it's sort of this technique of just instead of just doing a conditional, and then losing", "tokens": [50364, 300, 486, 4188, 379, 976, 291, 300, 2010, 498, 264, 24071, 11335, 13, 50532, 50532, 407, 309, 311, 1333, 295, 341, 6532, 295, 445, 2602, 295, 445, 884, 257, 27708, 11, 293, 550, 7027, 50838, 50838, 264, 8177, 300, 291, 600, 1096, 294, 300, 27708, 11, 291, 2736, 257, 2010, 11, 498, 309, 311, 2074, 11, 293, 1646, 51174, 51174, 291, 2736, 1825, 420, 291, 2736, 364, 6713, 13, 51338, 51338, 400, 586, 291, 434, 1075, 281, 1066, 2837, 295, 300, 8177, 300, 291, 600, 445, 1096, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.09215484494748323, "compression_ratio": 1.829145728643216, "no_caption_prob": 1.3006996596232057e-05}, {"id": 138, "seek": 49924, "start": 508.72, "end": 515.44, "text": " the proof that you've done in that conditional, you return a type, if it's true, and else", "tokens": [50364, 300, 486, 4188, 379, 976, 291, 300, 2010, 498, 264, 24071, 11335, 13, 50532, 50532, 407, 309, 311, 1333, 295, 341, 6532, 295, 445, 2602, 295, 445, 884, 257, 27708, 11, 293, 550, 7027, 50838, 50838, 264, 8177, 300, 291, 600, 1096, 294, 300, 27708, 11, 291, 2736, 257, 2010, 11, 498, 309, 311, 2074, 11, 293, 1646, 51174, 51174, 291, 2736, 1825, 420, 291, 2736, 364, 6713, 13, 51338, 51338, 400, 586, 291, 434, 1075, 281, 1066, 2837, 295, 300, 8177, 300, 291, 600, 445, 1096, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.09215484494748323, "compression_ratio": 1.829145728643216, "no_caption_prob": 1.3006996596232057e-05}, {"id": 139, "seek": 49924, "start": 515.44, "end": 518.72, "text": " you return nothing or you return an error.", "tokens": [50364, 300, 486, 4188, 379, 976, 291, 300, 2010, 498, 264, 24071, 11335, 13, 50532, 50532, 407, 309, 311, 1333, 295, 341, 6532, 295, 445, 2602, 295, 445, 884, 257, 27708, 11, 293, 550, 7027, 50838, 50838, 264, 8177, 300, 291, 600, 1096, 294, 300, 27708, 11, 291, 2736, 257, 2010, 11, 498, 309, 311, 2074, 11, 293, 1646, 51174, 51174, 291, 2736, 1825, 420, 291, 2736, 364, 6713, 13, 51338, 51338, 400, 586, 291, 434, 1075, 281, 1066, 2837, 295, 300, 8177, 300, 291, 600, 445, 1096, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.09215484494748323, "compression_ratio": 1.829145728643216, "no_caption_prob": 1.3006996596232057e-05}, {"id": 140, "seek": 49924, "start": 518.72, "end": 523.08, "text": " And now you're able to keep track of that proof that you've just done.", "tokens": [50364, 300, 486, 4188, 379, 976, 291, 300, 2010, 498, 264, 24071, 11335, 13, 50532, 50532, 407, 309, 311, 1333, 295, 341, 6532, 295, 445, 2602, 295, 445, 884, 257, 27708, 11, 293, 550, 7027, 50838, 50838, 264, 8177, 300, 291, 600, 1096, 294, 300, 27708, 11, 291, 2736, 257, 2010, 11, 498, 309, 311, 2074, 11, 293, 1646, 51174, 51174, 291, 2736, 1825, 420, 291, 2736, 364, 6713, 13, 51338, 51338, 400, 586, 291, 434, 1075, 281, 1066, 2837, 295, 300, 8177, 300, 291, 600, 445, 1096, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.09215484494748323, "compression_ratio": 1.829145728643216, "no_caption_prob": 1.3006996596232057e-05}, {"id": 141, "seek": 52308, "start": 523.08, "end": 530.8000000000001, "text": " Yeah, the simplest example that I can find is when you do case of expression on a maybe.", "tokens": [50364, 865, 11, 264, 22811, 1365, 300, 286, 393, 915, 307, 562, 291, 360, 1389, 295, 6114, 322, 257, 1310, 13, 50750, 50750, 407, 291, 360, 1389, 11, 1310, 746, 295, 11, 293, 550, 291, 362, 732, 3331, 11, 445, 746, 11, 293, 550, 51228, 51228, 291, 362, 2105, 281, 300, 746, 382, 498, 309, 307, 406, 257, 1310, 11, 293, 550, 1825, 689, 291, 51520, 51520, 500, 380, 362, 309, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.15494614919026692, "compression_ratio": 1.7658227848101267, "no_caption_prob": 5.8183020883006975e-05}, {"id": 142, "seek": 52308, "start": 530.8000000000001, "end": 540.36, "text": " So you do case, maybe something of, and then you have two cases, just something, and then", "tokens": [50364, 865, 11, 264, 22811, 1365, 300, 286, 393, 915, 307, 562, 291, 360, 1389, 295, 6114, 322, 257, 1310, 13, 50750, 50750, 407, 291, 360, 1389, 11, 1310, 746, 295, 11, 293, 550, 291, 362, 732, 3331, 11, 445, 746, 11, 293, 550, 51228, 51228, 291, 362, 2105, 281, 300, 746, 382, 498, 309, 307, 406, 257, 1310, 11, 293, 550, 1825, 689, 291, 51520, 51520, 500, 380, 362, 309, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.15494614919026692, "compression_ratio": 1.7658227848101267, "no_caption_prob": 5.8183020883006975e-05}, {"id": 143, "seek": 52308, "start": 540.36, "end": 546.2, "text": " you have access to that something as if it is not a maybe, and then nothing where you", "tokens": [50364, 865, 11, 264, 22811, 1365, 300, 286, 393, 915, 307, 562, 291, 360, 1389, 295, 6114, 322, 257, 1310, 13, 50750, 50750, 407, 291, 360, 1389, 11, 1310, 746, 295, 11, 293, 550, 291, 362, 732, 3331, 11, 445, 746, 11, 293, 550, 51228, 51228, 291, 362, 2105, 281, 300, 746, 382, 498, 309, 307, 406, 257, 1310, 11, 293, 550, 1825, 689, 291, 51520, 51520, 500, 380, 362, 309, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.15494614919026692, "compression_ratio": 1.7658227848101267, "no_caption_prob": 5.8183020883006975e-05}, {"id": 144, "seek": 52308, "start": 546.2, "end": 548.12, "text": " don't have it.", "tokens": [50364, 865, 11, 264, 22811, 1365, 300, 286, 393, 915, 307, 562, 291, 360, 1389, 295, 6114, 322, 257, 1310, 13, 50750, 50750, 407, 291, 360, 1389, 11, 1310, 746, 295, 11, 293, 550, 291, 362, 732, 3331, 11, 445, 746, 11, 293, 550, 51228, 51228, 291, 362, 2105, 281, 300, 746, 382, 498, 309, 307, 406, 257, 1310, 11, 293, 550, 1825, 689, 291, 51520, 51520, 500, 380, 362, 309, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.15494614919026692, "compression_ratio": 1.7658227848101267, "no_caption_prob": 5.8183020883006975e-05}, {"id": 145, "seek": 54812, "start": 548.12, "end": 553.84, "text": " And then in that case where you have something, you just use it to what like normal value.", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 146, "seek": 54812, "start": 553.84, "end": 561.04, "text": " And you have successfully branched off depending on that value, but you have remembered in", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 147, "seek": 54812, "start": 561.04, "end": 564.12, "text": " that branch that the value is there.", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 148, "seek": 54812, "start": 564.12, "end": 566.64, "text": " You don't start again with a maybe something.", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 149, "seek": 54812, "start": 566.64, "end": 568.2, "text": " Yes, exactly.", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 150, "seek": 54812, "start": 568.2, "end": 573.88, "text": " You've proven that and so now you can work with that type without having to check for", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 151, "seek": 54812, "start": 573.88, "end": 574.88, "text": " it again.", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 152, "seek": 54812, "start": 574.88, "end": 577.08, "text": " And yeah, I think that's a great example.", "tokens": [50364, 400, 550, 294, 300, 1389, 689, 291, 362, 746, 11, 291, 445, 764, 309, 281, 437, 411, 2710, 2158, 13, 50650, 50650, 400, 291, 362, 10727, 9819, 292, 766, 5413, 322, 300, 2158, 11, 457, 291, 362, 13745, 294, 51010, 51010, 300, 9819, 300, 264, 2158, 307, 456, 13, 51164, 51164, 509, 500, 380, 722, 797, 365, 257, 1310, 746, 13, 51290, 51290, 1079, 11, 2293, 13, 51368, 51368, 509, 600, 12785, 300, 293, 370, 586, 291, 393, 589, 365, 300, 2010, 1553, 1419, 281, 1520, 337, 51652, 51652, 309, 797, 13, 51702, 51702, 400, 1338, 11, 286, 519, 300, 311, 257, 869, 1365, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.171752422227772, "compression_ratio": 1.7049180327868851, "no_caption_prob": 2.2468979295808822e-05}, {"id": 153, "seek": 57708, "start": 577.08, "end": 583.88, "text": " And what often occurs, like to contrast that with the alternative to what you just described,", "tokens": [50364, 400, 437, 2049, 11843, 11, 411, 281, 8712, 300, 365, 264, 8535, 281, 437, 291, 445, 7619, 11, 50704, 50704, 291, 445, 1066, 8437, 264, 1310, 760, 11, 754, 1673, 291, 600, 1333, 295, 14853, 424, 3320, 309, 294, 300, 50884, 50884, 1389, 5629, 293, 291, 600, 31197, 300, 309, 311, 1974, 11, 498, 291, 2066, 309, 11, 2171, 291, 603, 51158, 51158, 536, 721, 411, 11, 291, 458, 11, 1310, 365, 7576, 6707, 6798, 13, 51334, 51334, 823, 300, 815, 312, 437, 291, 528, 294, 512, 3331, 11, 293, 309, 311, 406, 27993, 1578, 281, 764, 1310, 13, 11820, 35, 5666, 5107, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13107108186792443, "compression_ratio": 1.6944444444444444, "no_caption_prob": 1.5446155885001644e-05}, {"id": 154, "seek": 57708, "start": 583.88, "end": 587.48, "text": " you just keep passing the maybe down, even though you've sort of unwrapped it in that", "tokens": [50364, 400, 437, 2049, 11843, 11, 411, 281, 8712, 300, 365, 264, 8535, 281, 437, 291, 445, 7619, 11, 50704, 50704, 291, 445, 1066, 8437, 264, 1310, 760, 11, 754, 1673, 291, 600, 1333, 295, 14853, 424, 3320, 309, 294, 300, 50884, 50884, 1389, 5629, 293, 291, 600, 31197, 300, 309, 311, 1974, 11, 498, 291, 2066, 309, 11, 2171, 291, 603, 51158, 51158, 536, 721, 411, 11, 291, 458, 11, 1310, 365, 7576, 6707, 6798, 13, 51334, 51334, 823, 300, 815, 312, 437, 291, 528, 294, 512, 3331, 11, 293, 309, 311, 406, 27993, 1578, 281, 764, 1310, 13, 11820, 35, 5666, 5107, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13107108186792443, "compression_ratio": 1.6944444444444444, "no_caption_prob": 1.5446155885001644e-05}, {"id": 155, "seek": 57708, "start": 587.48, "end": 592.96, "text": " case statement and you've verified that it's present, if you expect it, sometimes you'll", "tokens": [50364, 400, 437, 2049, 11843, 11, 411, 281, 8712, 300, 365, 264, 8535, 281, 437, 291, 445, 7619, 11, 50704, 50704, 291, 445, 1066, 8437, 264, 1310, 760, 11, 754, 1673, 291, 600, 1333, 295, 14853, 424, 3320, 309, 294, 300, 50884, 50884, 1389, 5629, 293, 291, 600, 31197, 300, 309, 311, 1974, 11, 498, 291, 2066, 309, 11, 2171, 291, 603, 51158, 51158, 536, 721, 411, 11, 291, 458, 11, 1310, 365, 7576, 6707, 6798, 13, 51334, 51334, 823, 300, 815, 312, 437, 291, 528, 294, 512, 3331, 11, 293, 309, 311, 406, 27993, 1578, 281, 764, 1310, 13, 11820, 35, 5666, 5107, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13107108186792443, "compression_ratio": 1.6944444444444444, "no_caption_prob": 1.5446155885001644e-05}, {"id": 156, "seek": 57708, "start": 592.96, "end": 596.48, "text": " see things like, you know, maybe with default empty string.", "tokens": [50364, 400, 437, 2049, 11843, 11, 411, 281, 8712, 300, 365, 264, 8535, 281, 437, 291, 445, 7619, 11, 50704, 50704, 291, 445, 1066, 8437, 264, 1310, 760, 11, 754, 1673, 291, 600, 1333, 295, 14853, 424, 3320, 309, 294, 300, 50884, 50884, 1389, 5629, 293, 291, 600, 31197, 300, 309, 311, 1974, 11, 498, 291, 2066, 309, 11, 2171, 291, 603, 51158, 51158, 536, 721, 411, 11, 291, 458, 11, 1310, 365, 7576, 6707, 6798, 13, 51334, 51334, 823, 300, 815, 312, 437, 291, 528, 294, 512, 3331, 11, 293, 309, 311, 406, 27993, 1578, 281, 764, 1310, 13, 11820, 35, 5666, 5107, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13107108186792443, "compression_ratio": 1.6944444444444444, "no_caption_prob": 1.5446155885001644e-05}, {"id": 157, "seek": 57708, "start": 596.48, "end": 603.08, "text": " Now that may be what you want in some cases, and it's not inherently bad to use maybe.withDefault.", "tokens": [50364, 400, 437, 2049, 11843, 11, 411, 281, 8712, 300, 365, 264, 8535, 281, 437, 291, 445, 7619, 11, 50704, 50704, 291, 445, 1066, 8437, 264, 1310, 760, 11, 754, 1673, 291, 600, 1333, 295, 14853, 424, 3320, 309, 294, 300, 50884, 50884, 1389, 5629, 293, 291, 600, 31197, 300, 309, 311, 1974, 11, 498, 291, 2066, 309, 11, 2171, 291, 603, 51158, 51158, 536, 721, 411, 11, 291, 458, 11, 1310, 365, 7576, 6707, 6798, 13, 51334, 51334, 823, 300, 815, 312, 437, 291, 528, 294, 512, 3331, 11, 293, 309, 311, 406, 27993, 1578, 281, 764, 1310, 13, 11820, 35, 5666, 5107, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13107108186792443, "compression_ratio": 1.6944444444444444, "no_caption_prob": 1.5446155885001644e-05}, {"id": 158, "seek": 60308, "start": 603.08, "end": 609.36, "text": " But I think it's good to be aware that sometimes maybe.withDefault is a smell that indicates", "tokens": [50364, 583, 286, 519, 309, 311, 665, 281, 312, 3650, 300, 2171, 1310, 13, 11820, 35, 5666, 5107, 307, 257, 4316, 300, 16203, 50678, 50678, 300, 291, 434, 1936, 7363, 990, 2831, 813, 21156, 278, 13, 50850, 50850, 865, 11, 293, 294, 512, 661, 636, 291, 3624, 1589, 295, 437, 390, 294, 264, 1310, 22893, 13, 51152, 51152, 1779, 13, 51202, 51202, 509, 920, 362, 2105, 281, 300, 1310, 2158, 11, 457, 291, 1391, 1582, 380, 764, 309, 3602, 13, 51478, 51478, 1779, 13, 51528, 51528, 1743, 718, 311, 584, 300, 291, 787, 528, 281, 1190, 257, 1629, 857, 295, 9952, 498, 291, 362, 257, 30351, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13008424585515801, "compression_ratio": 1.6124031007751938, "no_caption_prob": 2.5866920623229817e-05}, {"id": 159, "seek": 60308, "start": 609.36, "end": 612.8000000000001, "text": " that you're basically validating rather than parsing.", "tokens": [50364, 583, 286, 519, 309, 311, 665, 281, 312, 3650, 300, 2171, 1310, 13, 11820, 35, 5666, 5107, 307, 257, 4316, 300, 16203, 50678, 50678, 300, 291, 434, 1936, 7363, 990, 2831, 813, 21156, 278, 13, 50850, 50850, 865, 11, 293, 294, 512, 661, 636, 291, 3624, 1589, 295, 437, 390, 294, 264, 1310, 22893, 13, 51152, 51152, 1779, 13, 51202, 51202, 509, 920, 362, 2105, 281, 300, 1310, 2158, 11, 457, 291, 1391, 1582, 380, 764, 309, 3602, 13, 51478, 51478, 1779, 13, 51528, 51528, 1743, 718, 311, 584, 300, 291, 787, 528, 281, 1190, 257, 1629, 857, 295, 9952, 498, 291, 362, 257, 30351, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13008424585515801, "compression_ratio": 1.6124031007751938, "no_caption_prob": 2.5866920623229817e-05}, {"id": 160, "seek": 60308, "start": 612.8000000000001, "end": 618.84, "text": " Yeah, and in some other way you lose information of what was in the maybe beforehand.", "tokens": [50364, 583, 286, 519, 309, 311, 665, 281, 312, 3650, 300, 2171, 1310, 13, 11820, 35, 5666, 5107, 307, 257, 4316, 300, 16203, 50678, 50678, 300, 291, 434, 1936, 7363, 990, 2831, 813, 21156, 278, 13, 50850, 50850, 865, 11, 293, 294, 512, 661, 636, 291, 3624, 1589, 295, 437, 390, 294, 264, 1310, 22893, 13, 51152, 51152, 1779, 13, 51202, 51202, 509, 920, 362, 2105, 281, 300, 1310, 2158, 11, 457, 291, 1391, 1582, 380, 764, 309, 3602, 13, 51478, 51478, 1779, 13, 51528, 51528, 1743, 718, 311, 584, 300, 291, 787, 528, 281, 1190, 257, 1629, 857, 295, 9952, 498, 291, 362, 257, 30351, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13008424585515801, "compression_ratio": 1.6124031007751938, "no_caption_prob": 2.5866920623229817e-05}, {"id": 161, "seek": 60308, "start": 618.84, "end": 619.84, "text": " Right.", "tokens": [50364, 583, 286, 519, 309, 311, 665, 281, 312, 3650, 300, 2171, 1310, 13, 11820, 35, 5666, 5107, 307, 257, 4316, 300, 16203, 50678, 50678, 300, 291, 434, 1936, 7363, 990, 2831, 813, 21156, 278, 13, 50850, 50850, 865, 11, 293, 294, 512, 661, 636, 291, 3624, 1589, 295, 437, 390, 294, 264, 1310, 22893, 13, 51152, 51152, 1779, 13, 51202, 51202, 509, 920, 362, 2105, 281, 300, 1310, 2158, 11, 457, 291, 1391, 1582, 380, 764, 309, 3602, 13, 51478, 51478, 1779, 13, 51528, 51528, 1743, 718, 311, 584, 300, 291, 787, 528, 281, 1190, 257, 1629, 857, 295, 9952, 498, 291, 362, 257, 30351, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13008424585515801, "compression_ratio": 1.6124031007751938, "no_caption_prob": 2.5866920623229817e-05}, {"id": 162, "seek": 60308, "start": 619.84, "end": 625.36, "text": " You still have access to that maybe value, but you probably won't use it anymore.", "tokens": [50364, 583, 286, 519, 309, 311, 665, 281, 312, 3650, 300, 2171, 1310, 13, 11820, 35, 5666, 5107, 307, 257, 4316, 300, 16203, 50678, 50678, 300, 291, 434, 1936, 7363, 990, 2831, 813, 21156, 278, 13, 50850, 50850, 865, 11, 293, 294, 512, 661, 636, 291, 3624, 1589, 295, 437, 390, 294, 264, 1310, 22893, 13, 51152, 51152, 1779, 13, 51202, 51202, 509, 920, 362, 2105, 281, 300, 1310, 2158, 11, 457, 291, 1391, 1582, 380, 764, 309, 3602, 13, 51478, 51478, 1779, 13, 51528, 51528, 1743, 718, 311, 584, 300, 291, 787, 528, 281, 1190, 257, 1629, 857, 295, 9952, 498, 291, 362, 257, 30351, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13008424585515801, "compression_ratio": 1.6124031007751938, "no_caption_prob": 2.5866920623229817e-05}, {"id": 163, "seek": 60308, "start": 625.36, "end": 626.36, "text": " Right.", "tokens": [50364, 583, 286, 519, 309, 311, 665, 281, 312, 3650, 300, 2171, 1310, 13, 11820, 35, 5666, 5107, 307, 257, 4316, 300, 16203, 50678, 50678, 300, 291, 434, 1936, 7363, 990, 2831, 813, 21156, 278, 13, 50850, 50850, 865, 11, 293, 294, 512, 661, 636, 291, 3624, 1589, 295, 437, 390, 294, 264, 1310, 22893, 13, 51152, 51152, 1779, 13, 51202, 51202, 509, 920, 362, 2105, 281, 300, 1310, 2158, 11, 457, 291, 1391, 1582, 380, 764, 309, 3602, 13, 51478, 51478, 1779, 13, 51528, 51528, 1743, 718, 311, 584, 300, 291, 787, 528, 281, 1190, 257, 1629, 857, 295, 9952, 498, 291, 362, 257, 30351, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13008424585515801, "compression_ratio": 1.6124031007751938, "no_caption_prob": 2.5866920623229817e-05}, {"id": 164, "seek": 60308, "start": 626.36, "end": 632.08, "text": " Like let's say that you only want to run a certain bit of logic if you have a username.", "tokens": [50364, 583, 286, 519, 309, 311, 665, 281, 312, 3650, 300, 2171, 1310, 13, 11820, 35, 5666, 5107, 307, 257, 4316, 300, 16203, 50678, 50678, 300, 291, 434, 1936, 7363, 990, 2831, 813, 21156, 278, 13, 50850, 50850, 865, 11, 293, 294, 512, 661, 636, 291, 3624, 1589, 295, 437, 390, 294, 264, 1310, 22893, 13, 51152, 51152, 1779, 13, 51202, 51202, 509, 920, 362, 2105, 281, 300, 1310, 2158, 11, 457, 291, 1391, 1582, 380, 764, 309, 3602, 13, 51478, 51478, 1779, 13, 51528, 51528, 1743, 718, 311, 584, 300, 291, 787, 528, 281, 1190, 257, 1629, 857, 295, 9952, 498, 291, 362, 257, 30351, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13008424585515801, "compression_ratio": 1.6124031007751938, "no_caption_prob": 2.5866920623229817e-05}, {"id": 165, "seek": 63208, "start": 632.08, "end": 637.64, "text": " If you're a logged in user and you have a username, you pass around this maybe user", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 166, "seek": 63208, "start": 637.64, "end": 641.88, "text": " and then you say maybe.map username.", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 167, "seek": 63208, "start": 641.88, "end": 646.4000000000001, "text": " And maybe you pass in maybe.withDefault empty string.", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 168, "seek": 63208, "start": 646.4000000000001, "end": 649.32, "text": " Now you've got a string.", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 169, "seek": 63208, "start": 649.32, "end": 650.32, "text": " You've got a string.", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 170, "seek": 63208, "start": 650.32, "end": 652.0400000000001, "text": " What does the string represent?", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 171, "seek": 63208, "start": 652.0400000000001, "end": 656.32, "text": " Well, it might represent a username or it might be an empty string.", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 172, "seek": 63208, "start": 656.32, "end": 657.44, "text": " Why is the string empty?", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 173, "seek": 63208, "start": 657.44, "end": 659.24, "text": " Is the string empty?", "tokens": [50364, 759, 291, 434, 257, 27231, 294, 4195, 293, 291, 362, 257, 30351, 11, 291, 1320, 926, 341, 1310, 4195, 50642, 50642, 293, 550, 291, 584, 1310, 13, 24223, 30351, 13, 50854, 50854, 400, 1310, 291, 1320, 294, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 13, 51080, 51080, 823, 291, 600, 658, 257, 6798, 13, 51226, 51226, 509, 600, 658, 257, 6798, 13, 51276, 51276, 708, 775, 264, 6798, 2906, 30, 51362, 51362, 1042, 11, 309, 1062, 2906, 257, 30351, 420, 309, 1062, 312, 364, 6707, 6798, 13, 51576, 51576, 1545, 307, 264, 6798, 6707, 30, 51632, 51632, 1119, 264, 6798, 6707, 30, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.12204680041732074, "compression_ratio": 1.9572192513368984, "no_caption_prob": 2.247388692921959e-05}, {"id": 174, "seek": 65924, "start": 659.24, "end": 664.64, "text": " Does it represent a pending username that hasn't been saved or does it represent a username", "tokens": [50364, 4402, 309, 2906, 257, 32110, 30351, 300, 6132, 380, 668, 6624, 420, 775, 309, 2906, 257, 30351, 50634, 50634, 300, 1361, 490, 257, 4195, 420, 775, 309, 2906, 257, 8341, 4195, 567, 311, 406, 27231, 294, 293, 4412, 50976, 50976, 291, 1143, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 30, 51130, 51130, 467, 727, 6264, 2906, 439, 729, 721, 13, 51254, 51254, 400, 731, 11, 300, 311, 11, 39826, 632, 264, 9535, 294, 720, 7222, 412, 472, 935, 11, 309, 311, 257, 7426, 3806, 51622, 51622, 281, 1051, 13, 51698, 51698, 663, 9535, 2049, 16795, 666, 452, 1575, 767, 382, 731, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.15321485572886245, "compression_ratio": 1.7044534412955465, "no_caption_prob": 1.618732676433865e-05}, {"id": 175, "seek": 65924, "start": 664.64, "end": 671.48, "text": " that came from a user or does it represent a guest user who's not logged in and therefore", "tokens": [50364, 4402, 309, 2906, 257, 32110, 30351, 300, 6132, 380, 668, 6624, 420, 775, 309, 2906, 257, 30351, 50634, 50634, 300, 1361, 490, 257, 4195, 420, 775, 309, 2906, 257, 8341, 4195, 567, 311, 406, 27231, 294, 293, 4412, 50976, 50976, 291, 1143, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 30, 51130, 51130, 467, 727, 6264, 2906, 439, 729, 721, 13, 51254, 51254, 400, 731, 11, 300, 311, 11, 39826, 632, 264, 9535, 294, 720, 7222, 412, 472, 935, 11, 309, 311, 257, 7426, 3806, 51622, 51622, 281, 1051, 13, 51698, 51698, 663, 9535, 2049, 16795, 666, 452, 1575, 767, 382, 731, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.15321485572886245, "compression_ratio": 1.7044534412955465, "no_caption_prob": 1.618732676433865e-05}, {"id": 176, "seek": 65924, "start": 671.48, "end": 674.5600000000001, "text": " you used maybe.withDefault empty string?", "tokens": [50364, 4402, 309, 2906, 257, 32110, 30351, 300, 6132, 380, 668, 6624, 420, 775, 309, 2906, 257, 30351, 50634, 50634, 300, 1361, 490, 257, 4195, 420, 775, 309, 2906, 257, 8341, 4195, 567, 311, 406, 27231, 294, 293, 4412, 50976, 50976, 291, 1143, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 30, 51130, 51130, 467, 727, 6264, 2906, 439, 729, 721, 13, 51254, 51254, 400, 731, 11, 300, 311, 11, 39826, 632, 264, 9535, 294, 720, 7222, 412, 472, 935, 11, 309, 311, 257, 7426, 3806, 51622, 51622, 281, 1051, 13, 51698, 51698, 663, 9535, 2049, 16795, 666, 452, 1575, 767, 382, 731, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.15321485572886245, "compression_ratio": 1.7044534412955465, "no_caption_prob": 1.618732676433865e-05}, {"id": 177, "seek": 65924, "start": 674.5600000000001, "end": 677.04, "text": " It could possibly represent all those things.", "tokens": [50364, 4402, 309, 2906, 257, 32110, 30351, 300, 6132, 380, 668, 6624, 420, 775, 309, 2906, 257, 30351, 50634, 50634, 300, 1361, 490, 257, 4195, 420, 775, 309, 2906, 257, 8341, 4195, 567, 311, 406, 27231, 294, 293, 4412, 50976, 50976, 291, 1143, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 30, 51130, 51130, 467, 727, 6264, 2906, 439, 729, 721, 13, 51254, 51254, 400, 731, 11, 300, 311, 11, 39826, 632, 264, 9535, 294, 720, 7222, 412, 472, 935, 11, 309, 311, 257, 7426, 3806, 51622, 51622, 281, 1051, 13, 51698, 51698, 663, 9535, 2049, 16795, 666, 452, 1575, 767, 382, 731, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.15321485572886245, "compression_ratio": 1.7044534412955465, "no_caption_prob": 1.618732676433865e-05}, {"id": 178, "seek": 65924, "start": 677.04, "end": 684.4, "text": " And well, that's, Alexis had the phrase in her article at one point, it's a bug waiting", "tokens": [50364, 4402, 309, 2906, 257, 32110, 30351, 300, 6132, 380, 668, 6624, 420, 775, 309, 2906, 257, 30351, 50634, 50634, 300, 1361, 490, 257, 4195, 420, 775, 309, 2906, 257, 8341, 4195, 567, 311, 406, 27231, 294, 293, 4412, 50976, 50976, 291, 1143, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 30, 51130, 51130, 467, 727, 6264, 2906, 439, 729, 721, 13, 51254, 51254, 400, 731, 11, 300, 311, 11, 39826, 632, 264, 9535, 294, 720, 7222, 412, 472, 935, 11, 309, 311, 257, 7426, 3806, 51622, 51622, 281, 1051, 13, 51698, 51698, 663, 9535, 2049, 16795, 666, 452, 1575, 767, 382, 731, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.15321485572886245, "compression_ratio": 1.7044534412955465, "no_caption_prob": 1.618732676433865e-05}, {"id": 179, "seek": 65924, "start": 684.4, "end": 685.92, "text": " to happen.", "tokens": [50364, 4402, 309, 2906, 257, 32110, 30351, 300, 6132, 380, 668, 6624, 420, 775, 309, 2906, 257, 30351, 50634, 50634, 300, 1361, 490, 257, 4195, 420, 775, 309, 2906, 257, 8341, 4195, 567, 311, 406, 27231, 294, 293, 4412, 50976, 50976, 291, 1143, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 30, 51130, 51130, 467, 727, 6264, 2906, 439, 729, 721, 13, 51254, 51254, 400, 731, 11, 300, 311, 11, 39826, 632, 264, 9535, 294, 720, 7222, 412, 472, 935, 11, 309, 311, 257, 7426, 3806, 51622, 51622, 281, 1051, 13, 51698, 51698, 663, 9535, 2049, 16795, 666, 452, 1575, 767, 382, 731, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.15321485572886245, "compression_ratio": 1.7044534412955465, "no_caption_prob": 1.618732676433865e-05}, {"id": 180, "seek": 65924, "start": 685.92, "end": 689.16, "text": " That phrase often pops into my mind actually as well.", "tokens": [50364, 4402, 309, 2906, 257, 32110, 30351, 300, 6132, 380, 668, 6624, 420, 775, 309, 2906, 257, 30351, 50634, 50634, 300, 1361, 490, 257, 4195, 420, 775, 309, 2906, 257, 8341, 4195, 567, 311, 406, 27231, 294, 293, 4412, 50976, 50976, 291, 1143, 1310, 13, 11820, 35, 5666, 5107, 6707, 6798, 30, 51130, 51130, 467, 727, 6264, 2906, 439, 729, 721, 13, 51254, 51254, 400, 731, 11, 300, 311, 11, 39826, 632, 264, 9535, 294, 720, 7222, 412, 472, 935, 11, 309, 311, 257, 7426, 3806, 51622, 51622, 281, 1051, 13, 51698, 51698, 663, 9535, 2049, 16795, 666, 452, 1575, 767, 382, 731, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.15321485572886245, "compression_ratio": 1.7044534412955465, "no_caption_prob": 1.618732676433865e-05}, {"id": 181, "seek": 68916, "start": 689.16, "end": 691.28, "text": " And I would call that a bug waiting to happen.", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 182, "seek": 68916, "start": 691.28, "end": 692.56, "text": " It's a time bomb.", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 183, "seek": 68916, "start": 692.56, "end": 694.0799999999999, "text": " So what would you do instead?", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 184, "seek": 68916, "start": 694.0799999999999, "end": 698.0, "text": " Well, I mean, there are a lot of ways you can handle that, but you could have, for example,", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 185, "seek": 68916, "start": 698.0, "end": 701.3199999999999, "text": " a custom type that keeps track of that information.", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 186, "seek": 68916, "start": 701.3199999999999, "end": 706.8399999999999, "text": " And so you know if you have a username, if you have a logged in user, if you try to get", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 187, "seek": 68916, "start": 706.8399999999999, "end": 711.88, "text": " the logged in user and you get nothing, check that in one spot and pass that data through,", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 188, "seek": 68916, "start": 711.88, "end": 717.4, "text": " or maybe you wrap that in a custom type and you turn that into a custom type that's either", "tokens": [50364, 400, 286, 576, 818, 300, 257, 7426, 3806, 281, 1051, 13, 50470, 50470, 467, 311, 257, 565, 7851, 13, 50534, 50534, 407, 437, 576, 291, 360, 2602, 30, 50610, 50610, 1042, 11, 286, 914, 11, 456, 366, 257, 688, 295, 2098, 291, 393, 4813, 300, 11, 457, 291, 727, 362, 11, 337, 1365, 11, 50806, 50806, 257, 2375, 2010, 300, 5965, 2837, 295, 300, 1589, 13, 50972, 50972, 400, 370, 291, 458, 498, 291, 362, 257, 30351, 11, 498, 291, 362, 257, 27231, 294, 4195, 11, 498, 291, 853, 281, 483, 51248, 51248, 264, 27231, 294, 4195, 293, 291, 483, 1825, 11, 1520, 300, 294, 472, 4008, 293, 1320, 300, 1412, 807, 11, 51500, 51500, 420, 1310, 291, 7019, 300, 294, 257, 2375, 2010, 293, 291, 1261, 300, 666, 257, 2375, 2010, 300, 311, 2139, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.0979438685684753, "compression_ratio": 1.82078853046595, "no_caption_prob": 3.822843063971959e-05}, {"id": 189, "seek": 71740, "start": 717.4, "end": 719.92, "text": " a guest or a logged in user.", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 190, "seek": 71740, "start": 719.92, "end": 723.24, "text": " But whatever it is, you want to preserve that information.", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 191, "seek": 71740, "start": 723.24, "end": 726.0, "text": " So that's like a common thing.", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 192, "seek": 71740, "start": 726.0, "end": 731.12, "text": " If you're sort of getting the lowest common denominator data type, you're getting some", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 193, "seek": 71740, "start": 731.12, "end": 735.0, "text": " like built in data type like a string and you're passing it around and it could represent", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 194, "seek": 71740, "start": 735.0, "end": 736.4, "text": " different things.", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 195, "seek": 71740, "start": 736.4, "end": 740.56, "text": " It's a bug waiting to happen and it's probably an opportunity to use this technique of parse", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 196, "seek": 71740, "start": 740.56, "end": 741.56, "text": " don't validate.", "tokens": [50364, 257, 8341, 420, 257, 27231, 294, 4195, 13, 50490, 50490, 583, 2035, 309, 307, 11, 291, 528, 281, 15665, 300, 1589, 13, 50656, 50656, 407, 300, 311, 411, 257, 2689, 551, 13, 50794, 50794, 759, 291, 434, 1333, 295, 1242, 264, 12437, 2689, 20687, 1412, 2010, 11, 291, 434, 1242, 512, 51050, 51050, 411, 3094, 294, 1412, 2010, 411, 257, 6798, 293, 291, 434, 8437, 309, 926, 293, 309, 727, 2906, 51244, 51244, 819, 721, 13, 51314, 51314, 467, 311, 257, 7426, 3806, 281, 1051, 293, 309, 311, 1391, 364, 2650, 281, 764, 341, 6532, 295, 48377, 51522, 51522, 500, 380, 29562, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.09323616562602675, "compression_ratio": 1.688, "no_caption_prob": 4.092873496119864e-06}, {"id": 197, "seek": 74156, "start": 741.56, "end": 748.04, "text": " Yeah, usually when you simplify a complex data structure, data to a single primitive", "tokens": [50364, 865, 11, 2673, 562, 291, 20460, 257, 3997, 1412, 3877, 11, 1412, 281, 257, 2167, 28540, 50688, 50688, 420, 636, 18587, 3037, 295, 309, 11, 291, 434, 5472, 281, 3624, 1412, 13, 50992, 50992, 400, 498, 291, 360, 643, 300, 2522, 295, 1412, 1780, 322, 11, 550, 1338, 11, 291, 434, 516, 281, 360, 512, 17695, 51288, 51288, 597, 1062, 312, 3006, 586, 11, 457, 597, 1062, 312, 18424, 1780, 13, 51512, 51512, 400, 437, 291, 576, 411, 281, 360, 281, 362, 307, 281, 362, 264, 31958, 1520, 721, 337, 291, 13, 51786, 51786, 7587, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11277362823486328, "compression_ratio": 1.6512605042016806, "no_caption_prob": 3.120044129900634e-05}, {"id": 198, "seek": 74156, "start": 748.04, "end": 754.1199999999999, "text": " or way simpler version of it, you're bound to lose data.", "tokens": [50364, 865, 11, 2673, 562, 291, 20460, 257, 3997, 1412, 3877, 11, 1412, 281, 257, 2167, 28540, 50688, 50688, 420, 636, 18587, 3037, 295, 309, 11, 291, 434, 5472, 281, 3624, 1412, 13, 50992, 50992, 400, 498, 291, 360, 643, 300, 2522, 295, 1412, 1780, 322, 11, 550, 1338, 11, 291, 434, 516, 281, 360, 512, 17695, 51288, 51288, 597, 1062, 312, 3006, 586, 11, 457, 597, 1062, 312, 18424, 1780, 13, 51512, 51512, 400, 437, 291, 576, 411, 281, 360, 281, 362, 307, 281, 362, 264, 31958, 1520, 721, 337, 291, 13, 51786, 51786, 7587, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11277362823486328, "compression_ratio": 1.6512605042016806, "no_caption_prob": 3.120044129900634e-05}, {"id": 199, "seek": 74156, "start": 754.1199999999999, "end": 760.04, "text": " And if you do need that piece of data later on, then yeah, you're going to do some assumptions", "tokens": [50364, 865, 11, 2673, 562, 291, 20460, 257, 3997, 1412, 3877, 11, 1412, 281, 257, 2167, 28540, 50688, 50688, 420, 636, 18587, 3037, 295, 309, 11, 291, 434, 5472, 281, 3624, 1412, 13, 50992, 50992, 400, 498, 291, 360, 643, 300, 2522, 295, 1412, 1780, 322, 11, 550, 1338, 11, 291, 434, 516, 281, 360, 512, 17695, 51288, 51288, 597, 1062, 312, 3006, 586, 11, 457, 597, 1062, 312, 18424, 1780, 13, 51512, 51512, 400, 437, 291, 576, 411, 281, 360, 281, 362, 307, 281, 362, 264, 31958, 1520, 721, 337, 291, 13, 51786, 51786, 7587, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11277362823486328, "compression_ratio": 1.6512605042016806, "no_caption_prob": 3.120044129900634e-05}, {"id": 200, "seek": 74156, "start": 760.04, "end": 764.52, "text": " which might be correct now, but which might be incorrect later.", "tokens": [50364, 865, 11, 2673, 562, 291, 20460, 257, 3997, 1412, 3877, 11, 1412, 281, 257, 2167, 28540, 50688, 50688, 420, 636, 18587, 3037, 295, 309, 11, 291, 434, 5472, 281, 3624, 1412, 13, 50992, 50992, 400, 498, 291, 360, 643, 300, 2522, 295, 1412, 1780, 322, 11, 550, 1338, 11, 291, 434, 516, 281, 360, 512, 17695, 51288, 51288, 597, 1062, 312, 3006, 586, 11, 457, 597, 1062, 312, 18424, 1780, 13, 51512, 51512, 400, 437, 291, 576, 411, 281, 360, 281, 362, 307, 281, 362, 264, 31958, 1520, 721, 337, 291, 13, 51786, 51786, 7587, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11277362823486328, "compression_ratio": 1.6512605042016806, "no_caption_prob": 3.120044129900634e-05}, {"id": 201, "seek": 74156, "start": 764.52, "end": 770.0, "text": " And what you would like to do to have is to have the compiler check things for you.", "tokens": [50364, 865, 11, 2673, 562, 291, 20460, 257, 3997, 1412, 3877, 11, 1412, 281, 257, 2167, 28540, 50688, 50688, 420, 636, 18587, 3037, 295, 309, 11, 291, 434, 5472, 281, 3624, 1412, 13, 50992, 50992, 400, 498, 291, 360, 643, 300, 2522, 295, 1412, 1780, 322, 11, 550, 1338, 11, 291, 434, 516, 281, 360, 512, 17695, 51288, 51288, 597, 1062, 312, 3006, 586, 11, 457, 597, 1062, 312, 18424, 1780, 13, 51512, 51512, 400, 437, 291, 576, 411, 281, 360, 281, 362, 307, 281, 362, 264, 31958, 1520, 721, 337, 291, 13, 51786, 51786, 7587, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11277362823486328, "compression_ratio": 1.6512605042016806, "no_caption_prob": 3.120044129900634e-05}, {"id": 202, "seek": 74156, "start": 770.0, "end": 771.0, "text": " Exactly.", "tokens": [50364, 865, 11, 2673, 562, 291, 20460, 257, 3997, 1412, 3877, 11, 1412, 281, 257, 2167, 28540, 50688, 50688, 420, 636, 18587, 3037, 295, 309, 11, 291, 434, 5472, 281, 3624, 1412, 13, 50992, 50992, 400, 498, 291, 360, 643, 300, 2522, 295, 1412, 1780, 322, 11, 550, 1338, 11, 291, 434, 516, 281, 360, 512, 17695, 51288, 51288, 597, 1062, 312, 3006, 586, 11, 457, 597, 1062, 312, 18424, 1780, 13, 51512, 51512, 400, 437, 291, 576, 411, 281, 360, 281, 362, 307, 281, 362, 264, 31958, 1520, 721, 337, 291, 13, 51786, 51786, 7587, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11277362823486328, "compression_ratio": 1.6512605042016806, "no_caption_prob": 3.120044129900634e-05}, {"id": 203, "seek": 77100, "start": 771.0, "end": 776.96, "text": " So if you make assumptions by yourself and do maybe with default empty string, because", "tokens": [50364, 407, 498, 291, 652, 17695, 538, 1803, 293, 360, 1310, 365, 7576, 6707, 6798, 11, 570, 50662, 50662, 309, 486, 1009, 312, 2074, 294, 341, 1389, 11, 570, 286, 10033, 309, 949, 11, 550, 309, 1062, 312, 2074, 51000, 51000, 586, 11, 457, 1310, 1780, 322, 11, 570, 291, 1286, 3089, 926, 293, 264, 3089, 1062, 406, 362, 264, 51332, 51332, 1520, 3602, 22893, 11, 550, 412, 512, 935, 721, 486, 1319, 293, 291, 603, 362, 257, 7426, 1936, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20161646888369605, "compression_ratio": 1.6839622641509433, "no_caption_prob": 0.0001055276661645621}, {"id": 204, "seek": 77100, "start": 776.96, "end": 783.72, "text": " it will always be true in this case, because I checked it before, then it might be true", "tokens": [50364, 407, 498, 291, 652, 17695, 538, 1803, 293, 360, 1310, 365, 7576, 6707, 6798, 11, 570, 50662, 50662, 309, 486, 1009, 312, 2074, 294, 341, 1389, 11, 570, 286, 10033, 309, 949, 11, 550, 309, 1062, 312, 2074, 51000, 51000, 586, 11, 457, 1310, 1780, 322, 11, 570, 291, 1286, 3089, 926, 293, 264, 3089, 1062, 406, 362, 264, 51332, 51332, 1520, 3602, 22893, 11, 550, 412, 512, 935, 721, 486, 1319, 293, 291, 603, 362, 257, 7426, 1936, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20161646888369605, "compression_ratio": 1.6839622641509433, "no_caption_prob": 0.0001055276661645621}, {"id": 205, "seek": 77100, "start": 783.72, "end": 790.36, "text": " now, but maybe later on, because you move code around and the code might not have the", "tokens": [50364, 407, 498, 291, 652, 17695, 538, 1803, 293, 360, 1310, 365, 7576, 6707, 6798, 11, 570, 50662, 50662, 309, 486, 1009, 312, 2074, 294, 341, 1389, 11, 570, 286, 10033, 309, 949, 11, 550, 309, 1062, 312, 2074, 51000, 51000, 586, 11, 457, 1310, 1780, 322, 11, 570, 291, 1286, 3089, 926, 293, 264, 3089, 1062, 406, 362, 264, 51332, 51332, 1520, 3602, 22893, 11, 550, 412, 512, 935, 721, 486, 1319, 293, 291, 603, 362, 257, 7426, 1936, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20161646888369605, "compression_ratio": 1.6839622641509433, "no_caption_prob": 0.0001055276661645621}, {"id": 206, "seek": 77100, "start": 790.36, "end": 800.44, "text": " check anymore beforehand, then at some point things will change and you'll have a bug basically.", "tokens": [50364, 407, 498, 291, 652, 17695, 538, 1803, 293, 360, 1310, 365, 7576, 6707, 6798, 11, 570, 50662, 50662, 309, 486, 1009, 312, 2074, 294, 341, 1389, 11, 570, 286, 10033, 309, 949, 11, 550, 309, 1062, 312, 2074, 51000, 51000, 586, 11, 457, 1310, 1780, 322, 11, 570, 291, 1286, 3089, 926, 293, 264, 3089, 1062, 406, 362, 264, 51332, 51332, 1520, 3602, 22893, 11, 550, 412, 512, 935, 721, 486, 1319, 293, 291, 603, 362, 257, 7426, 1936, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.20161646888369605, "compression_ratio": 1.6839622641509433, "no_caption_prob": 0.0001055276661645621}, {"id": 207, "seek": 80044, "start": 800.44, "end": 801.44, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 208, "seek": 80044, "start": 801.44, "end": 802.44, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 209, "seek": 80044, "start": 802.44, "end": 807.7600000000001, "text": " One, one thing I like to think about is imagine somebody is new to your code base.", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 210, "seek": 80044, "start": 807.7600000000001, "end": 812.9200000000001, "text": " If they come into the code base and they start using some code, how much do you have to tell", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 211, "seek": 80044, "start": 812.9200000000001, "end": 813.9200000000001, "text": " them?", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 212, "seek": 80044, "start": 813.9200000000001, "end": 815.6800000000001, "text": " How many caveats are you going to explain to them?", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 213, "seek": 80044, "start": 815.6800000000001, "end": 817.46, "text": " Like, Oh, okay.", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 214, "seek": 80044, "start": 817.46, "end": 821.7600000000001, "text": " So like if you're doing a code review on some code, they just wrote, how afraid are you", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 215, "seek": 80044, "start": 821.7600000000001, "end": 825.36, "text": " going to be that that's going to get merged without you carefully checking that these", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 216, "seek": 80044, "start": 825.36, "end": 826.36, "text": " constraints are met?", "tokens": [50364, 1779, 13, 50414, 50414, 865, 13, 50464, 50464, 1485, 11, 472, 551, 286, 411, 281, 519, 466, 307, 3811, 2618, 307, 777, 281, 428, 3089, 3096, 13, 50730, 50730, 759, 436, 808, 666, 264, 3089, 3096, 293, 436, 722, 1228, 512, 3089, 11, 577, 709, 360, 291, 362, 281, 980, 50988, 50988, 552, 30, 51038, 51038, 1012, 867, 11730, 1720, 366, 291, 516, 281, 2903, 281, 552, 30, 51126, 51126, 1743, 11, 876, 11, 1392, 13, 51215, 51215, 407, 411, 498, 291, 434, 884, 257, 3089, 3131, 322, 512, 3089, 11, 436, 445, 4114, 11, 577, 4638, 366, 291, 51430, 51430, 516, 281, 312, 300, 300, 311, 516, 281, 483, 36427, 1553, 291, 7500, 8568, 300, 613, 51610, 51610, 18491, 366, 1131, 30, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.12448031508077786, "compression_ratio": 1.7338403041825095, "no_caption_prob": 0.00012532909750007093}, {"id": 217, "seek": 82636, "start": 826.36, "end": 830.92, "text": " Like, Oh, when you call this function, like if you call it with an empty string, then", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 218, "seek": 82636, "start": 830.92, "end": 831.92, "text": " then that's a problem.", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 219, "seek": 82636, "start": 831.92, "end": 833.92, "text": " So you have to make sure it's never an empty string.", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 220, "seek": 82636, "start": 833.92, "end": 835.52, "text": " Like see this code over here.", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 221, "seek": 82636, "start": 835.52, "end": 837.88, "text": " It checks if the string is empty.", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 222, "seek": 82636, "start": 837.88, "end": 841.5600000000001, "text": " Well, that burden shouldn't be on the newcomer to the code base.", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 223, "seek": 82636, "start": 841.5600000000001, "end": 845.0, "text": " That burden should be on the code that protects those conditions.", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 224, "seek": 82636, "start": 845.0, "end": 851.5600000000001, "text": " And it, you know, it needs to validate its input and then preserve that in type information.", "tokens": [50364, 1743, 11, 876, 11, 562, 291, 818, 341, 2445, 11, 411, 498, 291, 818, 309, 365, 364, 6707, 6798, 11, 550, 50592, 50592, 550, 300, 311, 257, 1154, 13, 50642, 50642, 407, 291, 362, 281, 652, 988, 309, 311, 1128, 364, 6707, 6798, 13, 50742, 50742, 1743, 536, 341, 3089, 670, 510, 13, 50822, 50822, 467, 13834, 498, 264, 6798, 307, 6707, 13, 50940, 50940, 1042, 11, 300, 12578, 4659, 380, 312, 322, 264, 40014, 260, 281, 264, 3089, 3096, 13, 51124, 51124, 663, 12578, 820, 312, 322, 264, 3089, 300, 22583, 729, 4487, 13, 51296, 51296, 400, 309, 11, 291, 458, 11, 309, 2203, 281, 29562, 1080, 4846, 293, 550, 15665, 300, 294, 2010, 1589, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09907104555240348, "compression_ratio": 1.713740458015267, "no_caption_prob": 4.9084719648817554e-05}, {"id": 225, "seek": 85156, "start": 851.56, "end": 856.5999999999999, "text": " And so it then becomes impossible because maybe you have like a non empty string type", "tokens": [50364, 400, 370, 309, 550, 3643, 6243, 570, 1310, 291, 362, 411, 257, 2107, 6707, 6798, 2010, 50616, 50616, 300, 291, 747, 382, 364, 4846, 281, 341, 420, 2035, 1412, 2010, 300, 291, 29562, 666, 13, 50824, 50824, 407, 472, 551, 300, 286, 1223, 490, 341, 6532, 307, 300, 1238, 709, 633, 565, 291, 528, 281, 51096, 51096, 1066, 264, 1589, 490, 264, 13834, 420, 264, 21156, 278, 300, 291, 362, 22893, 11, 291, 733, 51402, 51402, 295, 643, 281, 362, 257, 777, 420, 257, 2685, 2375, 2010, 281, 428, 32567, 11, 281, 428, 17695, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08281170238148082, "compression_ratio": 1.74, "no_caption_prob": 1.7777752873371355e-05}, {"id": 226, "seek": 85156, "start": 856.5999999999999, "end": 860.76, "text": " that you take as an input to this or whatever data type that you validate into.", "tokens": [50364, 400, 370, 309, 550, 3643, 6243, 570, 1310, 291, 362, 411, 257, 2107, 6707, 6798, 2010, 50616, 50616, 300, 291, 747, 382, 364, 4846, 281, 341, 420, 2035, 1412, 2010, 300, 291, 29562, 666, 13, 50824, 50824, 407, 472, 551, 300, 286, 1223, 490, 341, 6532, 307, 300, 1238, 709, 633, 565, 291, 528, 281, 51096, 51096, 1066, 264, 1589, 490, 264, 13834, 420, 264, 21156, 278, 300, 291, 362, 22893, 11, 291, 733, 51402, 51402, 295, 643, 281, 362, 257, 777, 420, 257, 2685, 2375, 2010, 281, 428, 32567, 11, 281, 428, 17695, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08281170238148082, "compression_ratio": 1.74, "no_caption_prob": 1.7777752873371355e-05}, {"id": 227, "seek": 85156, "start": 860.76, "end": 866.1999999999999, "text": " So one thing that I understand from this technique is that pretty much every time you want to", "tokens": [50364, 400, 370, 309, 550, 3643, 6243, 570, 1310, 291, 362, 411, 257, 2107, 6707, 6798, 2010, 50616, 50616, 300, 291, 747, 382, 364, 4846, 281, 341, 420, 2035, 1412, 2010, 300, 291, 29562, 666, 13, 50824, 50824, 407, 472, 551, 300, 286, 1223, 490, 341, 6532, 307, 300, 1238, 709, 633, 565, 291, 528, 281, 51096, 51096, 1066, 264, 1589, 490, 264, 13834, 420, 264, 21156, 278, 300, 291, 362, 22893, 11, 291, 733, 51402, 51402, 295, 643, 281, 362, 257, 777, 420, 257, 2685, 2375, 2010, 281, 428, 32567, 11, 281, 428, 17695, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08281170238148082, "compression_ratio": 1.74, "no_caption_prob": 1.7777752873371355e-05}, {"id": 228, "seek": 85156, "start": 866.1999999999999, "end": 872.3199999999999, "text": " keep the information from the checks or the parsing that you have beforehand, you kind", "tokens": [50364, 400, 370, 309, 550, 3643, 6243, 570, 1310, 291, 362, 411, 257, 2107, 6707, 6798, 2010, 50616, 50616, 300, 291, 747, 382, 364, 4846, 281, 341, 420, 2035, 1412, 2010, 300, 291, 29562, 666, 13, 50824, 50824, 407, 472, 551, 300, 286, 1223, 490, 341, 6532, 307, 300, 1238, 709, 633, 565, 291, 528, 281, 51096, 51096, 1066, 264, 1589, 490, 264, 13834, 420, 264, 21156, 278, 300, 291, 362, 22893, 11, 291, 733, 51402, 51402, 295, 643, 281, 362, 257, 777, 420, 257, 2685, 2375, 2010, 281, 428, 32567, 11, 281, 428, 17695, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08281170238148082, "compression_ratio": 1.74, "no_caption_prob": 1.7777752873371355e-05}, {"id": 229, "seek": 85156, "start": 872.3199999999999, "end": 880.68, "text": " of need to have a new or a specific custom type to your guarantees, to your assumptions.", "tokens": [50364, 400, 370, 309, 550, 3643, 6243, 570, 1310, 291, 362, 411, 257, 2107, 6707, 6798, 2010, 50616, 50616, 300, 291, 747, 382, 364, 4846, 281, 341, 420, 2035, 1412, 2010, 300, 291, 29562, 666, 13, 50824, 50824, 407, 472, 551, 300, 286, 1223, 490, 341, 6532, 307, 300, 1238, 709, 633, 565, 291, 528, 281, 51096, 51096, 1066, 264, 1589, 490, 264, 13834, 420, 264, 21156, 278, 300, 291, 362, 22893, 11, 291, 733, 51402, 51402, 295, 643, 281, 362, 257, 777, 420, 257, 2685, 2375, 2010, 281, 428, 32567, 11, 281, 428, 17695, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08281170238148082, "compression_ratio": 1.74, "no_caption_prob": 1.7777752873371355e-05}, {"id": 230, "seek": 88068, "start": 880.68, "end": 885.52, "text": " So in the case of, um, I want a non empty list of something.", "tokens": [50364, 407, 294, 264, 1389, 295, 11, 1105, 11, 286, 528, 257, 2107, 6707, 1329, 295, 746, 13, 50606, 50606, 407, 1338, 11, 291, 1520, 22893, 1968, 428, 1329, 307, 6707, 420, 406, 11, 291, 434, 884, 257, 21156, 278, 13, 50878, 50878, 407, 291, 483, 257, 2107, 6707, 1329, 13, 50996, 50996, 407, 294, 264, 1389, 295, 257, 2107, 6707, 1329, 300, 307, 1596, 19577, 11, 457, 294, 512, 3331, 291, 1391, 51244, 51244, 643, 257, 777, 2375, 2010, 13, 51349, 51349, 509, 486, 362, 257, 777, 2375, 2010, 337, 633, 1823, 295, 428, 2445, 5498, 13, 51612, 51612, 400, 286, 519, 300, 311, 1391, 1392, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.11837412000776411, "compression_ratio": 1.7918552036199096, "no_caption_prob": 7.887906576797832e-06}, {"id": 231, "seek": 88068, "start": 885.52, "end": 890.9599999999999, "text": " So yeah, you check beforehand whether your list is empty or not, you're doing a parsing.", "tokens": [50364, 407, 294, 264, 1389, 295, 11, 1105, 11, 286, 528, 257, 2107, 6707, 1329, 295, 746, 13, 50606, 50606, 407, 1338, 11, 291, 1520, 22893, 1968, 428, 1329, 307, 6707, 420, 406, 11, 291, 434, 884, 257, 21156, 278, 13, 50878, 50878, 407, 291, 483, 257, 2107, 6707, 1329, 13, 50996, 50996, 407, 294, 264, 1389, 295, 257, 2107, 6707, 1329, 300, 307, 1596, 19577, 11, 457, 294, 512, 3331, 291, 1391, 51244, 51244, 643, 257, 777, 2375, 2010, 13, 51349, 51349, 509, 486, 362, 257, 777, 2375, 2010, 337, 633, 1823, 295, 428, 2445, 5498, 13, 51612, 51612, 400, 286, 519, 300, 311, 1391, 1392, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.11837412000776411, "compression_ratio": 1.7918552036199096, "no_caption_prob": 7.887906576797832e-06}, {"id": 232, "seek": 88068, "start": 890.9599999999999, "end": 893.3199999999999, "text": " So you get a non empty list.", "tokens": [50364, 407, 294, 264, 1389, 295, 11, 1105, 11, 286, 528, 257, 2107, 6707, 1329, 295, 746, 13, 50606, 50606, 407, 1338, 11, 291, 1520, 22893, 1968, 428, 1329, 307, 6707, 420, 406, 11, 291, 434, 884, 257, 21156, 278, 13, 50878, 50878, 407, 291, 483, 257, 2107, 6707, 1329, 13, 50996, 50996, 407, 294, 264, 1389, 295, 257, 2107, 6707, 1329, 300, 307, 1596, 19577, 11, 457, 294, 512, 3331, 291, 1391, 51244, 51244, 643, 257, 777, 2375, 2010, 13, 51349, 51349, 509, 486, 362, 257, 777, 2375, 2010, 337, 633, 1823, 295, 428, 2445, 5498, 13, 51612, 51612, 400, 286, 519, 300, 311, 1391, 1392, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.11837412000776411, "compression_ratio": 1.7918552036199096, "no_caption_prob": 7.887906576797832e-06}, {"id": 233, "seek": 88068, "start": 893.3199999999999, "end": 898.28, "text": " So in the case of a non empty list that is quite generic, but in some cases you probably", "tokens": [50364, 407, 294, 264, 1389, 295, 11, 1105, 11, 286, 528, 257, 2107, 6707, 1329, 295, 746, 13, 50606, 50606, 407, 1338, 11, 291, 1520, 22893, 1968, 428, 1329, 307, 6707, 420, 406, 11, 291, 434, 884, 257, 21156, 278, 13, 50878, 50878, 407, 291, 483, 257, 2107, 6707, 1329, 13, 50996, 50996, 407, 294, 264, 1389, 295, 257, 2107, 6707, 1329, 300, 307, 1596, 19577, 11, 457, 294, 512, 3331, 291, 1391, 51244, 51244, 643, 257, 777, 2375, 2010, 13, 51349, 51349, 509, 486, 362, 257, 777, 2375, 2010, 337, 633, 1823, 295, 428, 2445, 5498, 13, 51612, 51612, 400, 286, 519, 300, 311, 1391, 1392, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.11837412000776411, "compression_ratio": 1.7918552036199096, "no_caption_prob": 7.887906576797832e-06}, {"id": 234, "seek": 88068, "start": 898.28, "end": 900.38, "text": " need a new custom type.", "tokens": [50364, 407, 294, 264, 1389, 295, 11, 1105, 11, 286, 528, 257, 2107, 6707, 1329, 295, 746, 13, 50606, 50606, 407, 1338, 11, 291, 1520, 22893, 1968, 428, 1329, 307, 6707, 420, 406, 11, 291, 434, 884, 257, 21156, 278, 13, 50878, 50878, 407, 291, 483, 257, 2107, 6707, 1329, 13, 50996, 50996, 407, 294, 264, 1389, 295, 257, 2107, 6707, 1329, 300, 307, 1596, 19577, 11, 457, 294, 512, 3331, 291, 1391, 51244, 51244, 643, 257, 777, 2375, 2010, 13, 51349, 51349, 509, 486, 362, 257, 777, 2375, 2010, 337, 633, 1823, 295, 428, 2445, 5498, 13, 51612, 51612, 400, 286, 519, 300, 311, 1391, 1392, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.11837412000776411, "compression_ratio": 1.7918552036199096, "no_caption_prob": 7.887906576797832e-06}, {"id": 235, "seek": 88068, "start": 900.38, "end": 905.64, "text": " You will have a new custom type for every step of your function calls.", "tokens": [50364, 407, 294, 264, 1389, 295, 11, 1105, 11, 286, 528, 257, 2107, 6707, 1329, 295, 746, 13, 50606, 50606, 407, 1338, 11, 291, 1520, 22893, 1968, 428, 1329, 307, 6707, 420, 406, 11, 291, 434, 884, 257, 21156, 278, 13, 50878, 50878, 407, 291, 483, 257, 2107, 6707, 1329, 13, 50996, 50996, 407, 294, 264, 1389, 295, 257, 2107, 6707, 1329, 300, 307, 1596, 19577, 11, 457, 294, 512, 3331, 291, 1391, 51244, 51244, 643, 257, 777, 2375, 2010, 13, 51349, 51349, 509, 486, 362, 257, 777, 2375, 2010, 337, 633, 1823, 295, 428, 2445, 5498, 13, 51612, 51612, 400, 286, 519, 300, 311, 1391, 1392, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.11837412000776411, "compression_ratio": 1.7918552036199096, "no_caption_prob": 7.887906576797832e-06}, {"id": 236, "seek": 88068, "start": 905.64, "end": 908.76, "text": " And I think that's probably okay.", "tokens": [50364, 407, 294, 264, 1389, 295, 11, 1105, 11, 286, 528, 257, 2107, 6707, 1329, 295, 746, 13, 50606, 50606, 407, 1338, 11, 291, 1520, 22893, 1968, 428, 1329, 307, 6707, 420, 406, 11, 291, 434, 884, 257, 21156, 278, 13, 50878, 50878, 407, 291, 483, 257, 2107, 6707, 1329, 13, 50996, 50996, 407, 294, 264, 1389, 295, 257, 2107, 6707, 1329, 300, 307, 1596, 19577, 11, 457, 294, 512, 3331, 291, 1391, 51244, 51244, 643, 257, 777, 2375, 2010, 13, 51349, 51349, 509, 486, 362, 257, 777, 2375, 2010, 337, 633, 1823, 295, 428, 2445, 5498, 13, 51612, 51612, 400, 286, 519, 300, 311, 1391, 1392, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.11837412000776411, "compression_ratio": 1.7918552036199096, "no_caption_prob": 7.887906576797832e-06}, {"id": 237, "seek": 90876, "start": 908.76, "end": 912.84, "text": " In practice, I don't think you will have so many new types.", "tokens": [50364, 682, 3124, 11, 286, 500, 380, 519, 291, 486, 362, 370, 867, 777, 3467, 13, 50568, 50568, 663, 311, 406, 746, 300, 286, 5694, 294, 452, 3089, 3096, 412, 1935, 13, 50680, 50680, 865, 11, 309, 311, 406, 13, 50730, 50730, 286, 914, 11, 309, 311, 370, 22052, 281, 1884, 3467, 294, 2699, 76, 293, 370, 300, 311, 2138, 406, 257, 1154, 13, 50994, 50994, 286, 914, 11, 1071, 551, 300, 39826, 6686, 466, 294, 264, 7222, 307, 300, 291, 393, 764, 3094, 294, 51306, 51306, 3467, 300, 362, 264, 10891, 300, 291, 643, 13, 51480, 51480, 407, 337, 1365, 11, 498, 291, 434, 1566, 300, 286, 393, 380, 362, 23976, 4190, 294, 341, 1329, 11, 550, 291, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.12824766753149813, "compression_ratio": 1.7037037037037037, "no_caption_prob": 8.664402230351698e-06}, {"id": 238, "seek": 90876, "start": 912.84, "end": 915.08, "text": " That's not something that I noticed in my code base at least.", "tokens": [50364, 682, 3124, 11, 286, 500, 380, 519, 291, 486, 362, 370, 867, 777, 3467, 13, 50568, 50568, 663, 311, 406, 746, 300, 286, 5694, 294, 452, 3089, 3096, 412, 1935, 13, 50680, 50680, 865, 11, 309, 311, 406, 13, 50730, 50730, 286, 914, 11, 309, 311, 370, 22052, 281, 1884, 3467, 294, 2699, 76, 293, 370, 300, 311, 2138, 406, 257, 1154, 13, 50994, 50994, 286, 914, 11, 1071, 551, 300, 39826, 6686, 466, 294, 264, 7222, 307, 300, 291, 393, 764, 3094, 294, 51306, 51306, 3467, 300, 362, 264, 10891, 300, 291, 643, 13, 51480, 51480, 407, 337, 1365, 11, 498, 291, 434, 1566, 300, 286, 393, 380, 362, 23976, 4190, 294, 341, 1329, 11, 550, 291, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.12824766753149813, "compression_ratio": 1.7037037037037037, "no_caption_prob": 8.664402230351698e-06}, {"id": 239, "seek": 90876, "start": 915.08, "end": 916.08, "text": " Yeah, it's not.", "tokens": [50364, 682, 3124, 11, 286, 500, 380, 519, 291, 486, 362, 370, 867, 777, 3467, 13, 50568, 50568, 663, 311, 406, 746, 300, 286, 5694, 294, 452, 3089, 3096, 412, 1935, 13, 50680, 50680, 865, 11, 309, 311, 406, 13, 50730, 50730, 286, 914, 11, 309, 311, 370, 22052, 281, 1884, 3467, 294, 2699, 76, 293, 370, 300, 311, 2138, 406, 257, 1154, 13, 50994, 50994, 286, 914, 11, 1071, 551, 300, 39826, 6686, 466, 294, 264, 7222, 307, 300, 291, 393, 764, 3094, 294, 51306, 51306, 3467, 300, 362, 264, 10891, 300, 291, 643, 13, 51480, 51480, 407, 337, 1365, 11, 498, 291, 434, 1566, 300, 286, 393, 380, 362, 23976, 4190, 294, 341, 1329, 11, 550, 291, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.12824766753149813, "compression_ratio": 1.7037037037037037, "no_caption_prob": 8.664402230351698e-06}, {"id": 240, "seek": 90876, "start": 916.08, "end": 921.36, "text": " I mean, it's so lightweight to create types in Elm and so that's definitely not a problem.", "tokens": [50364, 682, 3124, 11, 286, 500, 380, 519, 291, 486, 362, 370, 867, 777, 3467, 13, 50568, 50568, 663, 311, 406, 746, 300, 286, 5694, 294, 452, 3089, 3096, 412, 1935, 13, 50680, 50680, 865, 11, 309, 311, 406, 13, 50730, 50730, 286, 914, 11, 309, 311, 370, 22052, 281, 1884, 3467, 294, 2699, 76, 293, 370, 300, 311, 2138, 406, 257, 1154, 13, 50994, 50994, 286, 914, 11, 1071, 551, 300, 39826, 6686, 466, 294, 264, 7222, 307, 300, 291, 393, 764, 3094, 294, 51306, 51306, 3467, 300, 362, 264, 10891, 300, 291, 643, 13, 51480, 51480, 407, 337, 1365, 11, 498, 291, 434, 1566, 300, 286, 393, 380, 362, 23976, 4190, 294, 341, 1329, 11, 550, 291, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.12824766753149813, "compression_ratio": 1.7037037037037037, "no_caption_prob": 8.664402230351698e-06}, {"id": 241, "seek": 90876, "start": 921.36, "end": 927.6, "text": " I mean, another thing that Alexis talks about in the article is that you can use built in", "tokens": [50364, 682, 3124, 11, 286, 500, 380, 519, 291, 486, 362, 370, 867, 777, 3467, 13, 50568, 50568, 663, 311, 406, 746, 300, 286, 5694, 294, 452, 3089, 3096, 412, 1935, 13, 50680, 50680, 865, 11, 309, 311, 406, 13, 50730, 50730, 286, 914, 11, 309, 311, 370, 22052, 281, 1884, 3467, 294, 2699, 76, 293, 370, 300, 311, 2138, 406, 257, 1154, 13, 50994, 50994, 286, 914, 11, 1071, 551, 300, 39826, 6686, 466, 294, 264, 7222, 307, 300, 291, 393, 764, 3094, 294, 51306, 51306, 3467, 300, 362, 264, 10891, 300, 291, 643, 13, 51480, 51480, 407, 337, 1365, 11, 498, 291, 434, 1566, 300, 286, 393, 380, 362, 23976, 4190, 294, 341, 1329, 11, 550, 291, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.12824766753149813, "compression_ratio": 1.7037037037037037, "no_caption_prob": 8.664402230351698e-06}, {"id": 242, "seek": 90876, "start": 927.6, "end": 931.08, "text": " types that have the characteristics that you need.", "tokens": [50364, 682, 3124, 11, 286, 500, 380, 519, 291, 486, 362, 370, 867, 777, 3467, 13, 50568, 50568, 663, 311, 406, 746, 300, 286, 5694, 294, 452, 3089, 3096, 412, 1935, 13, 50680, 50680, 865, 11, 309, 311, 406, 13, 50730, 50730, 286, 914, 11, 309, 311, 370, 22052, 281, 1884, 3467, 294, 2699, 76, 293, 370, 300, 311, 2138, 406, 257, 1154, 13, 50994, 50994, 286, 914, 11, 1071, 551, 300, 39826, 6686, 466, 294, 264, 7222, 307, 300, 291, 393, 764, 3094, 294, 51306, 51306, 3467, 300, 362, 264, 10891, 300, 291, 643, 13, 51480, 51480, 407, 337, 1365, 11, 498, 291, 434, 1566, 300, 286, 393, 380, 362, 23976, 4190, 294, 341, 1329, 11, 550, 291, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.12824766753149813, "compression_ratio": 1.7037037037037037, "no_caption_prob": 8.664402230351698e-06}, {"id": 243, "seek": 90876, "start": 931.08, "end": 937.6, "text": " So for example, if you're saying that I can't have duplicate values in this list, then you", "tokens": [50364, 682, 3124, 11, 286, 500, 380, 519, 291, 486, 362, 370, 867, 777, 3467, 13, 50568, 50568, 663, 311, 406, 746, 300, 286, 5694, 294, 452, 3089, 3096, 412, 1935, 13, 50680, 50680, 865, 11, 309, 311, 406, 13, 50730, 50730, 286, 914, 11, 309, 311, 370, 22052, 281, 1884, 3467, 294, 2699, 76, 293, 370, 300, 311, 2138, 406, 257, 1154, 13, 50994, 50994, 286, 914, 11, 1071, 551, 300, 39826, 6686, 466, 294, 264, 7222, 307, 300, 291, 393, 764, 3094, 294, 51306, 51306, 3467, 300, 362, 264, 10891, 300, 291, 643, 13, 51480, 51480, 407, 337, 1365, 11, 498, 291, 434, 1566, 300, 286, 393, 380, 362, 23976, 4190, 294, 341, 1329, 11, 550, 291, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.12824766753149813, "compression_ratio": 1.7037037037037037, "no_caption_prob": 8.664402230351698e-06}, {"id": 244, "seek": 93760, "start": 937.6, "end": 942.5600000000001, "text": " parse it into a set and the set data structure is going to take care of that for you.", "tokens": [50364, 48377, 309, 666, 257, 992, 293, 264, 992, 1412, 3877, 307, 516, 281, 747, 1127, 295, 300, 337, 291, 13, 50612, 50612, 400, 562, 291, 574, 412, 257, 992, 11, 291, 458, 300, 456, 366, 572, 23976, 9317, 13, 50812, 50812, 509, 500, 380, 362, 281, 519, 466, 300, 13, 50978, 50978, 1240, 611, 6686, 466, 341, 6532, 295, 5336, 4559, 2736, 3467, 293, 28224, 4846, 3467, 13, 51248, 51248, 865, 11, 300, 311, 1481, 13, 51328, 51328, 663, 311, 257, 534, 1481, 1333, 295, 11269, 300, 750, 311, 11828, 456, 13, 51520, 51520, 3950, 366, 1333, 295, 732, 3873, 412, 428, 26400, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.10522152759410718, "compression_ratio": 1.6829268292682926, "no_caption_prob": 1.7231332094524987e-05}, {"id": 245, "seek": 93760, "start": 942.5600000000001, "end": 946.5600000000001, "text": " And when you look at a set, you know that there are no duplicate keys.", "tokens": [50364, 48377, 309, 666, 257, 992, 293, 264, 992, 1412, 3877, 307, 516, 281, 747, 1127, 295, 300, 337, 291, 13, 50612, 50612, 400, 562, 291, 574, 412, 257, 992, 11, 291, 458, 300, 456, 366, 572, 23976, 9317, 13, 50812, 50812, 509, 500, 380, 362, 281, 519, 466, 300, 13, 50978, 50978, 1240, 611, 6686, 466, 341, 6532, 295, 5336, 4559, 2736, 3467, 293, 28224, 4846, 3467, 13, 51248, 51248, 865, 11, 300, 311, 1481, 13, 51328, 51328, 663, 311, 257, 534, 1481, 1333, 295, 11269, 300, 750, 311, 11828, 456, 13, 51520, 51520, 3950, 366, 1333, 295, 732, 3873, 412, 428, 26400, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.10522152759410718, "compression_ratio": 1.6829268292682926, "no_caption_prob": 1.7231332094524987e-05}, {"id": 246, "seek": 93760, "start": 946.5600000000001, "end": 949.88, "text": " You don't have to think about that.", "tokens": [50364, 48377, 309, 666, 257, 992, 293, 264, 992, 1412, 3877, 307, 516, 281, 747, 1127, 295, 300, 337, 291, 13, 50612, 50612, 400, 562, 291, 574, 412, 257, 992, 11, 291, 458, 300, 456, 366, 572, 23976, 9317, 13, 50812, 50812, 509, 500, 380, 362, 281, 519, 466, 300, 13, 50978, 50978, 1240, 611, 6686, 466, 341, 6532, 295, 5336, 4559, 2736, 3467, 293, 28224, 4846, 3467, 13, 51248, 51248, 865, 11, 300, 311, 1481, 13, 51328, 51328, 663, 311, 257, 534, 1481, 1333, 295, 11269, 300, 750, 311, 11828, 456, 13, 51520, 51520, 3950, 366, 1333, 295, 732, 3873, 412, 428, 26400, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.10522152759410718, "compression_ratio": 1.6829268292682926, "no_caption_prob": 1.7231332094524987e-05}, {"id": 247, "seek": 93760, "start": 949.88, "end": 955.28, "text": " She also talks about this technique of weakening return types and strengthening input types.", "tokens": [50364, 48377, 309, 666, 257, 992, 293, 264, 992, 1412, 3877, 307, 516, 281, 747, 1127, 295, 300, 337, 291, 13, 50612, 50612, 400, 562, 291, 574, 412, 257, 992, 11, 291, 458, 300, 456, 366, 572, 23976, 9317, 13, 50812, 50812, 509, 500, 380, 362, 281, 519, 466, 300, 13, 50978, 50978, 1240, 611, 6686, 466, 341, 6532, 295, 5336, 4559, 2736, 3467, 293, 28224, 4846, 3467, 13, 51248, 51248, 865, 11, 300, 311, 1481, 13, 51328, 51328, 663, 311, 257, 534, 1481, 1333, 295, 11269, 300, 750, 311, 11828, 456, 13, 51520, 51520, 3950, 366, 1333, 295, 732, 3873, 412, 428, 26400, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.10522152759410718, "compression_ratio": 1.6829268292682926, "no_caption_prob": 1.7231332094524987e-05}, {"id": 248, "seek": 93760, "start": 955.28, "end": 956.88, "text": " Yeah, that's nice.", "tokens": [50364, 48377, 309, 666, 257, 992, 293, 264, 992, 1412, 3877, 307, 516, 281, 747, 1127, 295, 300, 337, 291, 13, 50612, 50612, 400, 562, 291, 574, 412, 257, 992, 11, 291, 458, 300, 456, 366, 572, 23976, 9317, 13, 50812, 50812, 509, 500, 380, 362, 281, 519, 466, 300, 13, 50978, 50978, 1240, 611, 6686, 466, 341, 6532, 295, 5336, 4559, 2736, 3467, 293, 28224, 4846, 3467, 13, 51248, 51248, 865, 11, 300, 311, 1481, 13, 51328, 51328, 663, 311, 257, 534, 1481, 1333, 295, 11269, 300, 750, 311, 11828, 456, 13, 51520, 51520, 3950, 366, 1333, 295, 732, 3873, 412, 428, 26400, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.10522152759410718, "compression_ratio": 1.6829268292682926, "no_caption_prob": 1.7231332094524987e-05}, {"id": 249, "seek": 93760, "start": 956.88, "end": 960.72, "text": " That's a really nice sort of insight that she's captured there.", "tokens": [50364, 48377, 309, 666, 257, 992, 293, 264, 992, 1412, 3877, 307, 516, 281, 747, 1127, 295, 300, 337, 291, 13, 50612, 50612, 400, 562, 291, 574, 412, 257, 992, 11, 291, 458, 300, 456, 366, 572, 23976, 9317, 13, 50812, 50812, 509, 500, 380, 362, 281, 519, 466, 300, 13, 50978, 50978, 1240, 611, 6686, 466, 341, 6532, 295, 5336, 4559, 2736, 3467, 293, 28224, 4846, 3467, 13, 51248, 51248, 865, 11, 300, 311, 1481, 13, 51328, 51328, 663, 311, 257, 534, 1481, 1333, 295, 11269, 300, 750, 311, 11828, 456, 13, 51520, 51520, 3950, 366, 1333, 295, 732, 3873, 412, 428, 26400, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.10522152759410718, "compression_ratio": 1.6829268292682926, "no_caption_prob": 1.7231332094524987e-05}, {"id": 250, "seek": 93760, "start": 960.72, "end": 962.78, "text": " Those are sort of two tools at your disposal.", "tokens": [50364, 48377, 309, 666, 257, 992, 293, 264, 992, 1412, 3877, 307, 516, 281, 747, 1127, 295, 300, 337, 291, 13, 50612, 50612, 400, 562, 291, 574, 412, 257, 992, 11, 291, 458, 300, 456, 366, 572, 23976, 9317, 13, 50812, 50812, 509, 500, 380, 362, 281, 519, 466, 300, 13, 50978, 50978, 1240, 611, 6686, 466, 341, 6532, 295, 5336, 4559, 2736, 3467, 293, 28224, 4846, 3467, 13, 51248, 51248, 865, 11, 300, 311, 1481, 13, 51328, 51328, 663, 311, 257, 534, 1481, 1333, 295, 11269, 300, 750, 311, 11828, 456, 13, 51520, 51520, 3950, 366, 1333, 295, 732, 3873, 412, 428, 26400, 13, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.10522152759410718, "compression_ratio": 1.6829268292682926, "no_caption_prob": 1.7231332094524987e-05}, {"id": 251, "seek": 96278, "start": 962.78, "end": 968.16, "text": " So we kind of talked about weakening return types with conditionally returning custom", "tokens": [50364, 407, 321, 733, 295, 2825, 466, 5336, 4559, 2736, 3467, 365, 4188, 379, 12678, 2375, 50633, 50633, 3467, 13, 50683, 50683, 407, 498, 291, 528, 281, 1520, 498, 291, 362, 257, 7363, 30351, 11, 291, 393, 4188, 379, 2736, 257, 2375, 50915, 50915, 2010, 300, 8855, 257, 7363, 30351, 13, 51093, 51093, 400, 498, 309, 311, 406, 7363, 11, 550, 291, 2736, 1825, 420, 6713, 420, 512, 1412, 2010, 300, 1177, 380, 976, 51373, 51373, 291, 264, 30351, 2010, 300, 8855, 257, 40693, 30351, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.12051689490843355, "compression_ratio": 1.9230769230769231, "no_caption_prob": 4.860055923927575e-06}, {"id": 252, "seek": 96278, "start": 968.16, "end": 969.16, "text": " types.", "tokens": [50364, 407, 321, 733, 295, 2825, 466, 5336, 4559, 2736, 3467, 365, 4188, 379, 12678, 2375, 50633, 50633, 3467, 13, 50683, 50683, 407, 498, 291, 528, 281, 1520, 498, 291, 362, 257, 7363, 30351, 11, 291, 393, 4188, 379, 2736, 257, 2375, 50915, 50915, 2010, 300, 8855, 257, 7363, 30351, 13, 51093, 51093, 400, 498, 309, 311, 406, 7363, 11, 550, 291, 2736, 1825, 420, 6713, 420, 512, 1412, 2010, 300, 1177, 380, 976, 51373, 51373, 291, 264, 30351, 2010, 300, 8855, 257, 40693, 30351, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.12051689490843355, "compression_ratio": 1.9230769230769231, "no_caption_prob": 4.860055923927575e-06}, {"id": 253, "seek": 96278, "start": 969.16, "end": 973.8, "text": " So if you want to check if you have a valid username, you can conditionally return a custom", "tokens": [50364, 407, 321, 733, 295, 2825, 466, 5336, 4559, 2736, 3467, 365, 4188, 379, 12678, 2375, 50633, 50633, 3467, 13, 50683, 50683, 407, 498, 291, 528, 281, 1520, 498, 291, 362, 257, 7363, 30351, 11, 291, 393, 4188, 379, 2736, 257, 2375, 50915, 50915, 2010, 300, 8855, 257, 7363, 30351, 13, 51093, 51093, 400, 498, 309, 311, 406, 7363, 11, 550, 291, 2736, 1825, 420, 6713, 420, 512, 1412, 2010, 300, 1177, 380, 976, 51373, 51373, 291, 264, 30351, 2010, 300, 8855, 257, 40693, 30351, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.12051689490843355, "compression_ratio": 1.9230769230769231, "no_caption_prob": 4.860055923927575e-06}, {"id": 254, "seek": 96278, "start": 973.8, "end": 977.36, "text": " type that represents a valid username.", "tokens": [50364, 407, 321, 733, 295, 2825, 466, 5336, 4559, 2736, 3467, 365, 4188, 379, 12678, 2375, 50633, 50633, 3467, 13, 50683, 50683, 407, 498, 291, 528, 281, 1520, 498, 291, 362, 257, 7363, 30351, 11, 291, 393, 4188, 379, 2736, 257, 2375, 50915, 50915, 2010, 300, 8855, 257, 7363, 30351, 13, 51093, 51093, 400, 498, 309, 311, 406, 7363, 11, 550, 291, 2736, 1825, 420, 6713, 420, 512, 1412, 2010, 300, 1177, 380, 976, 51373, 51373, 291, 264, 30351, 2010, 300, 8855, 257, 40693, 30351, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.12051689490843355, "compression_ratio": 1.9230769230769231, "no_caption_prob": 4.860055923927575e-06}, {"id": 255, "seek": 96278, "start": 977.36, "end": 982.9599999999999, "text": " And if it's not valid, then you return nothing or error or some data type that doesn't give", "tokens": [50364, 407, 321, 733, 295, 2825, 466, 5336, 4559, 2736, 3467, 365, 4188, 379, 12678, 2375, 50633, 50633, 3467, 13, 50683, 50683, 407, 498, 291, 528, 281, 1520, 498, 291, 362, 257, 7363, 30351, 11, 291, 393, 4188, 379, 2736, 257, 2375, 50915, 50915, 2010, 300, 8855, 257, 7363, 30351, 13, 51093, 51093, 400, 498, 309, 311, 406, 7363, 11, 550, 291, 2736, 1825, 420, 6713, 420, 512, 1412, 2010, 300, 1177, 380, 976, 51373, 51373, 291, 264, 30351, 2010, 300, 8855, 257, 40693, 30351, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.12051689490843355, "compression_ratio": 1.9230769230769231, "no_caption_prob": 4.860055923927575e-06}, {"id": 256, "seek": 96278, "start": 982.9599999999999, "end": 986.8399999999999, "text": " you the username type that represents a validated username.", "tokens": [50364, 407, 321, 733, 295, 2825, 466, 5336, 4559, 2736, 3467, 365, 4188, 379, 12678, 2375, 50633, 50633, 3467, 13, 50683, 50683, 407, 498, 291, 528, 281, 1520, 498, 291, 362, 257, 7363, 30351, 11, 291, 393, 4188, 379, 2736, 257, 2375, 50915, 50915, 2010, 300, 8855, 257, 7363, 30351, 13, 51093, 51093, 400, 498, 309, 311, 406, 7363, 11, 550, 291, 2736, 1825, 420, 6713, 420, 512, 1412, 2010, 300, 1177, 380, 976, 51373, 51373, 291, 264, 30351, 2010, 300, 8855, 257, 40693, 30351, 13, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.12051689490843355, "compression_ratio": 1.9230769230769231, "no_caption_prob": 4.860055923927575e-06}, {"id": 257, "seek": 98684, "start": 986.84, "end": 993.32, "text": " Yeah, so it's a weakened compared to always returning a valid username.", "tokens": [50364, 865, 11, 370, 309, 311, 257, 42613, 5347, 281, 1009, 12678, 257, 7363, 30351, 13, 50688, 50688, 7587, 370, 2602, 295, 12678, 257, 30351, 11, 291, 2736, 257, 1310, 4195, 420, 8341, 420, 4195, 2010, 13, 51022, 51022, 7587, 2293, 597, 31828, 979, 8616, 307, 264, 912, 5102, 291, 286, 914, 11, 309, 311, 21156, 278, 309, 311, 51352, 51352, 309, 311, 406, 21156, 278, 294, 264, 1333, 295, 3820, 3497, 2020, 295, 2390, 493, 364, 316, 6840, 293, 21156, 278, 264, 51690, 51690, 22667, 300, 311, 1217, 668, 1096, 365, 31828, 979, 378, 433, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.20301095962524415, "compression_ratio": 1.708695652173913, "no_caption_prob": 1.9523469745763578e-05}, {"id": 258, "seek": 98684, "start": 993.32, "end": 1000.0, "text": " Exactly so instead of returning a username, you return a maybe user or guest or user type.", "tokens": [50364, 865, 11, 370, 309, 311, 257, 42613, 5347, 281, 1009, 12678, 257, 7363, 30351, 13, 50688, 50688, 7587, 370, 2602, 295, 12678, 257, 30351, 11, 291, 2736, 257, 1310, 4195, 420, 8341, 420, 4195, 2010, 13, 51022, 51022, 7587, 2293, 597, 31828, 979, 8616, 307, 264, 912, 5102, 291, 286, 914, 11, 309, 311, 21156, 278, 309, 311, 51352, 51352, 309, 311, 406, 21156, 278, 294, 264, 1333, 295, 3820, 3497, 2020, 295, 2390, 493, 364, 316, 6840, 293, 21156, 278, 264, 51690, 51690, 22667, 300, 311, 1217, 668, 1096, 365, 31828, 979, 378, 433, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.20301095962524415, "compression_ratio": 1.708695652173913, "no_caption_prob": 1.9523469745763578e-05}, {"id": 259, "seek": 98684, "start": 1000.0, "end": 1006.6, "text": " Exactly exactly which JSON decoding is the same pattern you I mean, it's parsing it's", "tokens": [50364, 865, 11, 370, 309, 311, 257, 42613, 5347, 281, 1009, 12678, 257, 7363, 30351, 13, 50688, 50688, 7587, 370, 2602, 295, 12678, 257, 30351, 11, 291, 2736, 257, 1310, 4195, 420, 8341, 420, 4195, 2010, 13, 51022, 51022, 7587, 2293, 597, 31828, 979, 8616, 307, 264, 912, 5102, 291, 286, 914, 11, 309, 311, 21156, 278, 309, 311, 51352, 51352, 309, 311, 406, 21156, 278, 294, 264, 1333, 295, 3820, 3497, 2020, 295, 2390, 493, 364, 316, 6840, 293, 21156, 278, 264, 51690, 51690, 22667, 300, 311, 1217, 668, 1096, 365, 31828, 979, 378, 433, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.20301095962524415, "compression_ratio": 1.708695652173913, "no_caption_prob": 1.9523469745763578e-05}, {"id": 260, "seek": 98684, "start": 1006.6, "end": 1013.36, "text": " it's not parsing in the sort of computer science sense of building up an AST and parsing the", "tokens": [50364, 865, 11, 370, 309, 311, 257, 42613, 5347, 281, 1009, 12678, 257, 7363, 30351, 13, 50688, 50688, 7587, 370, 2602, 295, 12678, 257, 30351, 11, 291, 2736, 257, 1310, 4195, 420, 8341, 420, 4195, 2010, 13, 51022, 51022, 7587, 2293, 597, 31828, 979, 8616, 307, 264, 912, 5102, 291, 286, 914, 11, 309, 311, 21156, 278, 309, 311, 51352, 51352, 309, 311, 406, 21156, 278, 294, 264, 1333, 295, 3820, 3497, 2020, 295, 2390, 493, 364, 316, 6840, 293, 21156, 278, 264, 51690, 51690, 22667, 300, 311, 1217, 668, 1096, 365, 31828, 979, 378, 433, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.20301095962524415, "compression_ratio": 1.708695652173913, "no_caption_prob": 1.9523469745763578e-05}, {"id": 261, "seek": 98684, "start": 1013.36, "end": 1016.52, "text": " tokens that's already been done with JSON decoders.", "tokens": [50364, 865, 11, 370, 309, 311, 257, 42613, 5347, 281, 1009, 12678, 257, 7363, 30351, 13, 50688, 50688, 7587, 370, 2602, 295, 12678, 257, 30351, 11, 291, 2736, 257, 1310, 4195, 420, 8341, 420, 4195, 2010, 13, 51022, 51022, 7587, 2293, 597, 31828, 979, 8616, 307, 264, 912, 5102, 291, 286, 914, 11, 309, 311, 21156, 278, 309, 311, 51352, 51352, 309, 311, 406, 21156, 278, 294, 264, 1333, 295, 3820, 3497, 2020, 295, 2390, 493, 364, 316, 6840, 293, 21156, 278, 264, 51690, 51690, 22667, 300, 311, 1217, 668, 1096, 365, 31828, 979, 378, 433, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.20301095962524415, "compression_ratio": 1.708695652173913, "no_caption_prob": 1.9523469745763578e-05}, {"id": 262, "seek": 101652, "start": 1016.52, "end": 1022.74, "text": " We discussed in our JSON episode, but it is parsing in Lexi's sense of the term in Alexis", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 263, "seek": 101652, "start": 1022.74, "end": 1026.74, "text": " a sense of the term where you have a way for it to fail.", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 264, "seek": 101652, "start": 1026.74, "end": 1030.52, "text": " And if it hasn't failed, then you've guaranteed certain qualities and you capture that in", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 265, "seek": 101652, "start": 1030.52, "end": 1031.7, "text": " a data type.", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 266, "seek": 101652, "start": 1031.7, "end": 1034.2, "text": " So yeah, that's weakening the return type.", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 267, "seek": 101652, "start": 1034.2, "end": 1035.96, "text": " That's a very useful technique.", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 268, "seek": 101652, "start": 1035.96, "end": 1039.3799999999999, "text": " And then on the other side, they're strengthening the input type and those those two things", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 269, "seek": 101652, "start": 1039.3799999999999, "end": 1041.6, "text": " go hand in hand.", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 270, "seek": 101652, "start": 1041.6, "end": 1043.0, "text": " And strengthening the input type.", "tokens": [50364, 492, 7152, 294, 527, 31828, 3500, 11, 457, 309, 307, 21156, 278, 294, 24086, 72, 311, 2020, 295, 264, 1433, 294, 39826, 50675, 50675, 257, 2020, 295, 264, 1433, 689, 291, 362, 257, 636, 337, 309, 281, 3061, 13, 50875, 50875, 400, 498, 309, 6132, 380, 7612, 11, 550, 291, 600, 18031, 1629, 16477, 293, 291, 7983, 300, 294, 51064, 51064, 257, 1412, 2010, 13, 51123, 51123, 407, 1338, 11, 300, 311, 5336, 4559, 264, 2736, 2010, 13, 51248, 51248, 663, 311, 257, 588, 4420, 6532, 13, 51336, 51336, 400, 550, 322, 264, 661, 1252, 11, 436, 434, 28224, 264, 4846, 2010, 293, 729, 729, 732, 721, 51507, 51507, 352, 1011, 294, 1011, 13, 51618, 51618, 400, 28224, 264, 4846, 2010, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10645343386937701, "compression_ratio": 1.742537313432836, "no_caption_prob": 2.62738667515805e-05}, {"id": 271, "seek": 104300, "start": 1043.0, "end": 1047.6, "text": " She gives the example of requiring a non empty list as an argument.", "tokens": [50364, 1240, 2709, 264, 1365, 295, 24165, 257, 2107, 6707, 1329, 382, 364, 6770, 13, 50594, 50594, 400, 286, 915, 300, 300, 1333, 295, 551, 28224, 264, 4846, 2010, 11, 309, 311, 1596, 1481, 570, 291, 50786, 50786, 528, 281, 2464, 534, 6679, 3089, 300, 1177, 380, 519, 466, 7363, 990, 439, 613, 4487, 11, 51125, 51125, 291, 528, 281, 4733, 300, 428, 818, 433, 976, 291, 300, 1412, 11, 293, 550, 312, 6679, 466, 51423, 51423, 445, 1228, 309, 558, 13, 51534, 51534, 400, 562, 291, 360, 300, 11, 286, 914, 11, 286, 519, 300, 300, 1333, 295, 2170, 412, 300, 24734, 21156, 278, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.10123619326838741, "compression_ratio": 1.7658730158730158, "no_caption_prob": 9.972778570954688e-06}, {"id": 272, "seek": 104300, "start": 1047.6, "end": 1051.44, "text": " And I find that that sort of thing strengthening the input type, it's quite nice because you", "tokens": [50364, 1240, 2709, 264, 1365, 295, 24165, 257, 2107, 6707, 1329, 382, 364, 6770, 13, 50594, 50594, 400, 286, 915, 300, 300, 1333, 295, 551, 28224, 264, 4846, 2010, 11, 309, 311, 1596, 1481, 570, 291, 50786, 50786, 528, 281, 2464, 534, 6679, 3089, 300, 1177, 380, 519, 466, 7363, 990, 439, 613, 4487, 11, 51125, 51125, 291, 528, 281, 4733, 300, 428, 818, 433, 976, 291, 300, 1412, 11, 293, 550, 312, 6679, 466, 51423, 51423, 445, 1228, 309, 558, 13, 51534, 51534, 400, 562, 291, 360, 300, 11, 286, 914, 11, 286, 519, 300, 300, 1333, 295, 2170, 412, 300, 24734, 21156, 278, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.10123619326838741, "compression_ratio": 1.7658730158730158, "no_caption_prob": 9.972778570954688e-06}, {"id": 273, "seek": 104300, "start": 1051.44, "end": 1058.22, "text": " want to write really confident code that doesn't think about validating all these conditions,", "tokens": [50364, 1240, 2709, 264, 1365, 295, 24165, 257, 2107, 6707, 1329, 382, 364, 6770, 13, 50594, 50594, 400, 286, 915, 300, 300, 1333, 295, 551, 28224, 264, 4846, 2010, 11, 309, 311, 1596, 1481, 570, 291, 50786, 50786, 528, 281, 2464, 534, 6679, 3089, 300, 1177, 380, 519, 466, 7363, 990, 439, 613, 4487, 11, 51125, 51125, 291, 528, 281, 4733, 300, 428, 818, 433, 976, 291, 300, 1412, 11, 293, 550, 312, 6679, 466, 51423, 51423, 445, 1228, 309, 558, 13, 51534, 51534, 400, 562, 291, 360, 300, 11, 286, 914, 11, 286, 519, 300, 300, 1333, 295, 2170, 412, 300, 24734, 21156, 278, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.10123619326838741, "compression_ratio": 1.7658730158730158, "no_caption_prob": 9.972778570954688e-06}, {"id": 274, "seek": 104300, "start": 1058.22, "end": 1064.18, "text": " you want to demand that your callers give you that data, and then be confident about", "tokens": [50364, 1240, 2709, 264, 1365, 295, 24165, 257, 2107, 6707, 1329, 382, 364, 6770, 13, 50594, 50594, 400, 286, 915, 300, 300, 1333, 295, 551, 28224, 264, 4846, 2010, 11, 309, 311, 1596, 1481, 570, 291, 50786, 50786, 528, 281, 2464, 534, 6679, 3089, 300, 1177, 380, 519, 466, 7363, 990, 439, 613, 4487, 11, 51125, 51125, 291, 528, 281, 4733, 300, 428, 818, 433, 976, 291, 300, 1412, 11, 293, 550, 312, 6679, 466, 51423, 51423, 445, 1228, 309, 558, 13, 51534, 51534, 400, 562, 291, 360, 300, 11, 286, 914, 11, 286, 519, 300, 300, 1333, 295, 2170, 412, 300, 24734, 21156, 278, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.10123619326838741, "compression_ratio": 1.7658730158730158, "no_caption_prob": 9.972778570954688e-06}, {"id": 275, "seek": 104300, "start": 1064.18, "end": 1066.4, "text": " just using it right.", "tokens": [50364, 1240, 2709, 264, 1365, 295, 24165, 257, 2107, 6707, 1329, 382, 364, 6770, 13, 50594, 50594, 400, 286, 915, 300, 300, 1333, 295, 551, 28224, 264, 4846, 2010, 11, 309, 311, 1596, 1481, 570, 291, 50786, 50786, 528, 281, 2464, 534, 6679, 3089, 300, 1177, 380, 519, 466, 7363, 990, 439, 613, 4487, 11, 51125, 51125, 291, 528, 281, 4733, 300, 428, 818, 433, 976, 291, 300, 1412, 11, 293, 550, 312, 6679, 466, 51423, 51423, 445, 1228, 309, 558, 13, 51534, 51534, 400, 562, 291, 360, 300, 11, 286, 914, 11, 286, 519, 300, 300, 1333, 295, 2170, 412, 300, 24734, 21156, 278, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.10123619326838741, "compression_ratio": 1.7658730158730158, "no_caption_prob": 9.972778570954688e-06}, {"id": 276, "seek": 104300, "start": 1066.4, "end": 1072.2, "text": " And when you do that, I mean, I think that that sort of gets at that shotgun parsing", "tokens": [50364, 1240, 2709, 264, 1365, 295, 24165, 257, 2107, 6707, 1329, 382, 364, 6770, 13, 50594, 50594, 400, 286, 915, 300, 300, 1333, 295, 551, 28224, 264, 4846, 2010, 11, 309, 311, 1596, 1481, 570, 291, 50786, 50786, 528, 281, 2464, 534, 6679, 3089, 300, 1177, 380, 519, 466, 7363, 990, 439, 613, 4487, 11, 51125, 51125, 291, 528, 281, 4733, 300, 428, 818, 433, 976, 291, 300, 1412, 11, 293, 550, 312, 6679, 466, 51423, 51423, 445, 1228, 309, 558, 13, 51534, 51534, 400, 562, 291, 360, 300, 11, 286, 914, 11, 286, 519, 300, 300, 1333, 295, 2170, 412, 300, 24734, 21156, 278, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.10123619326838741, "compression_ratio": 1.7658730158730158, "no_caption_prob": 9.972778570954688e-06}, {"id": 277, "seek": 107220, "start": 1072.2, "end": 1077.76, "text": " concept that you're not sort of blending these responsibilities of processing the data and", "tokens": [50364, 3410, 300, 291, 434, 406, 1333, 295, 23124, 613, 16190, 295, 9007, 264, 1412, 293, 50642, 50642, 7363, 990, 264, 1412, 11, 558, 30, 50712, 50712, 1743, 11, 291, 820, 4994, 729, 16190, 13, 50863, 50863, 407, 498, 257, 2445, 311, 1691, 307, 281, 1399, 1412, 11, 1785, 437, 1412, 291, 643, 30264, 365, 264, 51168, 51168, 3467, 11, 264, 3467, 820, 5109, 264, 32567, 300, 291, 643, 13, 51325, 51325, 407, 300, 311, 1333, 295, 300, 311, 733, 295, 341, 3410, 295, 411, 1715, 538, 4364, 689, 291, 434, 22171, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.11037411940725227, "compression_ratio": 1.8070175438596492, "no_caption_prob": 1.2218974916322622e-05}, {"id": 278, "seek": 107220, "start": 1077.76, "end": 1079.16, "text": " validating the data, right?", "tokens": [50364, 3410, 300, 291, 434, 406, 1333, 295, 23124, 613, 16190, 295, 9007, 264, 1412, 293, 50642, 50642, 7363, 990, 264, 1412, 11, 558, 30, 50712, 50712, 1743, 11, 291, 820, 4994, 729, 16190, 13, 50863, 50863, 407, 498, 257, 2445, 311, 1691, 307, 281, 1399, 1412, 11, 1785, 437, 1412, 291, 643, 30264, 365, 264, 51168, 51168, 3467, 11, 264, 3467, 820, 5109, 264, 32567, 300, 291, 643, 13, 51325, 51325, 407, 300, 311, 1333, 295, 300, 311, 733, 295, 341, 3410, 295, 411, 1715, 538, 4364, 689, 291, 434, 22171, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.11037411940725227, "compression_ratio": 1.8070175438596492, "no_caption_prob": 1.2218974916322622e-05}, {"id": 279, "seek": 107220, "start": 1079.16, "end": 1082.18, "text": " Like, you should separate those responsibilities.", "tokens": [50364, 3410, 300, 291, 434, 406, 1333, 295, 23124, 613, 16190, 295, 9007, 264, 1412, 293, 50642, 50642, 7363, 990, 264, 1412, 11, 558, 30, 50712, 50712, 1743, 11, 291, 820, 4994, 729, 16190, 13, 50863, 50863, 407, 498, 257, 2445, 311, 1691, 307, 281, 1399, 1412, 11, 1785, 437, 1412, 291, 643, 30264, 365, 264, 51168, 51168, 3467, 11, 264, 3467, 820, 5109, 264, 32567, 300, 291, 643, 13, 51325, 51325, 407, 300, 311, 1333, 295, 300, 311, 733, 295, 341, 3410, 295, 411, 1715, 538, 4364, 689, 291, 434, 22171, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.11037411940725227, "compression_ratio": 1.8070175438596492, "no_caption_prob": 1.2218974916322622e-05}, {"id": 280, "seek": 107220, "start": 1082.18, "end": 1088.28, "text": " So if a function's job is to process data, state what data you need upfront with the", "tokens": [50364, 3410, 300, 291, 434, 406, 1333, 295, 23124, 613, 16190, 295, 9007, 264, 1412, 293, 50642, 50642, 7363, 990, 264, 1412, 11, 558, 30, 50712, 50712, 1743, 11, 291, 820, 4994, 729, 16190, 13, 50863, 50863, 407, 498, 257, 2445, 311, 1691, 307, 281, 1399, 1412, 11, 1785, 437, 1412, 291, 643, 30264, 365, 264, 51168, 51168, 3467, 11, 264, 3467, 820, 5109, 264, 32567, 300, 291, 643, 13, 51325, 51325, 407, 300, 311, 1333, 295, 300, 311, 733, 295, 341, 3410, 295, 411, 1715, 538, 4364, 689, 291, 434, 22171, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.11037411940725227, "compression_ratio": 1.8070175438596492, "no_caption_prob": 1.2218974916322622e-05}, {"id": 281, "seek": 107220, "start": 1088.28, "end": 1091.42, "text": " types, the types should express the guarantees that you need.", "tokens": [50364, 3410, 300, 291, 434, 406, 1333, 295, 23124, 613, 16190, 295, 9007, 264, 1412, 293, 50642, 50642, 7363, 990, 264, 1412, 11, 558, 30, 50712, 50712, 1743, 11, 291, 820, 4994, 729, 16190, 13, 50863, 50863, 407, 498, 257, 2445, 311, 1691, 307, 281, 1399, 1412, 11, 1785, 437, 1412, 291, 643, 30264, 365, 264, 51168, 51168, 3467, 11, 264, 3467, 820, 5109, 264, 32567, 300, 291, 643, 13, 51325, 51325, 407, 300, 311, 1333, 295, 300, 311, 733, 295, 341, 3410, 295, 411, 1715, 538, 4364, 689, 291, 434, 22171, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.11037411940725227, "compression_ratio": 1.8070175438596492, "no_caption_prob": 1.2218974916322622e-05}, {"id": 282, "seek": 107220, "start": 1091.42, "end": 1096.6200000000001, "text": " So that's sort of that's kind of this concept of like design by contract where you're expressing", "tokens": [50364, 3410, 300, 291, 434, 406, 1333, 295, 23124, 613, 16190, 295, 9007, 264, 1412, 293, 50642, 50642, 7363, 990, 264, 1412, 11, 558, 30, 50712, 50712, 1743, 11, 291, 820, 4994, 729, 16190, 13, 50863, 50863, 407, 498, 257, 2445, 311, 1691, 307, 281, 1399, 1412, 11, 1785, 437, 1412, 291, 643, 30264, 365, 264, 51168, 51168, 3467, 11, 264, 3467, 820, 5109, 264, 32567, 300, 291, 643, 13, 51325, 51325, 407, 300, 311, 1333, 295, 300, 311, 733, 295, 341, 3410, 295, 411, 1715, 538, 4364, 689, 291, 434, 22171, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.11037411940725227, "compression_ratio": 1.8070175438596492, "no_caption_prob": 1.2218974916322622e-05}, {"id": 283, "seek": 109662, "start": 1096.62, "end": 1102.3799999999999, "text": " the contract, and you can work with those assumptions within that code and just confidently", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 284, "seek": 109662, "start": 1102.3799999999999, "end": 1104.12, "text": " work without checking those assumptions.", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 285, "seek": 109662, "start": 1104.12, "end": 1110.08, "text": " In the case of a typed language, and especially Elm, you can encode those guarantees and", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 286, "seek": 109662, "start": 1110.08, "end": 1111.6399999999999, "text": " that contract into types.", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 287, "seek": 109662, "start": 1111.6399999999999, "end": 1116.9599999999998, "text": " So that's strengthening the input type, be very clear about what you require as a as", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 288, "seek": 109662, "start": 1116.9599999999998, "end": 1118.6, "text": " a constraint.", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 289, "seek": 109662, "start": 1118.6, "end": 1123.6, "text": " And then just confidently work with those assumptions, rather than mixing the checking", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 290, "seek": 109662, "start": 1123.6, "end": 1124.6, "text": " and the processing.", "tokens": [50364, 264, 4364, 11, 293, 291, 393, 589, 365, 729, 17695, 1951, 300, 3089, 293, 445, 41956, 50652, 50652, 589, 1553, 8568, 729, 17695, 13, 50739, 50739, 682, 264, 1389, 295, 257, 33941, 2856, 11, 293, 2318, 2699, 76, 11, 291, 393, 2058, 1429, 729, 32567, 293, 51037, 51037, 300, 4364, 666, 3467, 13, 51115, 51115, 407, 300, 311, 28224, 264, 4846, 2010, 11, 312, 588, 1850, 466, 437, 291, 3651, 382, 257, 382, 51381, 51381, 257, 25534, 13, 51463, 51463, 400, 550, 445, 41956, 589, 365, 729, 17695, 11, 2831, 813, 11983, 264, 8568, 51713, 51713, 293, 264, 9007, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.10701019030350906, "compression_ratio": 1.871900826446281, "no_caption_prob": 1.112538666347973e-05}, {"id": 291, "seek": 112460, "start": 1124.6, "end": 1132.7199999999998, "text": " Yeah, I find it kind of odd, but it actually feels very natural to people who write Elm", "tokens": [50364, 865, 11, 286, 915, 309, 733, 295, 7401, 11, 457, 309, 767, 3417, 588, 3303, 281, 561, 567, 2464, 2699, 76, 50770, 50770, 2673, 570, 291, 360, 341, 365, 31828, 979, 8616, 439, 264, 565, 13, 51024, 51024, 492, 1890, 309, 382, 364, 1365, 1217, 13, 51145, 51145, 583, 718, 311, 3811, 498, 321, 994, 380, 360, 309, 11, 437, 291, 576, 1391, 360, 307, 291, 483, 257, 31828, 2158, 51420, 51420, 490, 364, 33283, 5308, 4079, 420, 490, 23265, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13899861504049862, "compression_ratio": 1.440909090909091, "no_caption_prob": 5.376465560402721e-05}, {"id": 292, "seek": 112460, "start": 1132.7199999999998, "end": 1137.8, "text": " usually because you do this with JSON decoding all the time.", "tokens": [50364, 865, 11, 286, 915, 309, 733, 295, 7401, 11, 457, 309, 767, 3417, 588, 3303, 281, 561, 567, 2464, 2699, 76, 50770, 50770, 2673, 570, 291, 360, 341, 365, 31828, 979, 8616, 439, 264, 565, 13, 51024, 51024, 492, 1890, 309, 382, 364, 1365, 1217, 13, 51145, 51145, 583, 718, 311, 3811, 498, 321, 994, 380, 360, 309, 11, 437, 291, 576, 1391, 360, 307, 291, 483, 257, 31828, 2158, 51420, 51420, 490, 364, 33283, 5308, 4079, 420, 490, 23265, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13899861504049862, "compression_ratio": 1.440909090909091, "no_caption_prob": 5.376465560402721e-05}, {"id": 293, "seek": 112460, "start": 1137.8, "end": 1140.2199999999998, "text": " We took it as an example already.", "tokens": [50364, 865, 11, 286, 915, 309, 733, 295, 7401, 11, 457, 309, 767, 3417, 588, 3303, 281, 561, 567, 2464, 2699, 76, 50770, 50770, 2673, 570, 291, 360, 341, 365, 31828, 979, 8616, 439, 264, 565, 13, 51024, 51024, 492, 1890, 309, 382, 364, 1365, 1217, 13, 51145, 51145, 583, 718, 311, 3811, 498, 321, 994, 380, 360, 309, 11, 437, 291, 576, 1391, 360, 307, 291, 483, 257, 31828, 2158, 51420, 51420, 490, 364, 33283, 5308, 4079, 420, 490, 23265, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13899861504049862, "compression_ratio": 1.440909090909091, "no_caption_prob": 5.376465560402721e-05}, {"id": 294, "seek": 112460, "start": 1140.2199999999998, "end": 1145.7199999999998, "text": " But let's imagine if we didn't do it, what you would probably do is you get a JSON value", "tokens": [50364, 865, 11, 286, 915, 309, 733, 295, 7401, 11, 457, 309, 767, 3417, 588, 3303, 281, 561, 567, 2464, 2699, 76, 50770, 50770, 2673, 570, 291, 360, 341, 365, 31828, 979, 8616, 439, 264, 565, 13, 51024, 51024, 492, 1890, 309, 382, 364, 1365, 1217, 13, 51145, 51145, 583, 718, 311, 3811, 498, 321, 994, 380, 360, 309, 11, 437, 291, 576, 1391, 360, 307, 291, 483, 257, 31828, 2158, 51420, 51420, 490, 364, 33283, 5308, 4079, 420, 490, 23265, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13899861504049862, "compression_ratio": 1.440909090909091, "no_caption_prob": 5.376465560402721e-05}, {"id": 295, "seek": 112460, "start": 1145.7199999999998, "end": 1149.6799999999998, "text": " from an HTTP request somewhere or from flags.", "tokens": [50364, 865, 11, 286, 915, 309, 733, 295, 7401, 11, 457, 309, 767, 3417, 588, 3303, 281, 561, 567, 2464, 2699, 76, 50770, 50770, 2673, 570, 291, 360, 341, 365, 31828, 979, 8616, 439, 264, 565, 13, 51024, 51024, 492, 1890, 309, 382, 364, 1365, 1217, 13, 51145, 51145, 583, 718, 311, 3811, 498, 321, 994, 380, 360, 309, 11, 437, 291, 576, 1391, 360, 307, 291, 483, 257, 31828, 2158, 51420, 51420, 490, 364, 33283, 5308, 4079, 420, 490, 23265, 13, 51618, 51618], "temperature": 0.0, "avg_logprob": -0.13899861504049862, "compression_ratio": 1.440909090909091, "no_caption_prob": 5.376465560402721e-05}, {"id": 296, "seek": 114968, "start": 1149.68, "end": 1156.8, "text": " And then every time you need to access one field of it, you decode it for every use every", "tokens": [50364, 400, 550, 633, 565, 291, 643, 281, 2105, 472, 2519, 295, 309, 11, 291, 979, 1429, 309, 337, 633, 764, 633, 50720, 50720, 2519, 11, 457, 406, 439, 412, 1564, 13, 50871, 50871, 400, 300, 445, 3263, 517, 44976, 712, 13, 51023, 51023, 3013, 291, 727, 360, 498, 291, 1415, 281, 13, 51145, 51145, 1436, 291, 393, 360, 411, 257, 31828, 979, 1429, 5893, 2158, 13, 51375, 51375, 400, 1338, 11, 611, 11, 370, 291, 727, 25704, 979, 8616, 293, 445, 483, 257, 31828, 979, 1429, 2158, 337, 257, 1629, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1786382350515812, "compression_ratio": 1.6616161616161615, "no_caption_prob": 1.7602311572773033e-06}, {"id": 297, "seek": 114968, "start": 1156.8, "end": 1159.8200000000002, "text": " field, but not all at once.", "tokens": [50364, 400, 550, 633, 565, 291, 643, 281, 2105, 472, 2519, 295, 309, 11, 291, 979, 1429, 309, 337, 633, 764, 633, 50720, 50720, 2519, 11, 457, 406, 439, 412, 1564, 13, 50871, 50871, 400, 300, 445, 3263, 517, 44976, 712, 13, 51023, 51023, 3013, 291, 727, 360, 498, 291, 1415, 281, 13, 51145, 51145, 1436, 291, 393, 360, 411, 257, 31828, 979, 1429, 5893, 2158, 13, 51375, 51375, 400, 1338, 11, 611, 11, 370, 291, 727, 25704, 979, 8616, 293, 445, 483, 257, 31828, 979, 1429, 2158, 337, 257, 1629, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1786382350515812, "compression_ratio": 1.6616161616161615, "no_caption_prob": 1.7602311572773033e-06}, {"id": 298, "seek": 114968, "start": 1159.8200000000002, "end": 1162.8600000000001, "text": " And that just sounds unimaginable.", "tokens": [50364, 400, 550, 633, 565, 291, 643, 281, 2105, 472, 2519, 295, 309, 11, 291, 979, 1429, 309, 337, 633, 764, 633, 50720, 50720, 2519, 11, 457, 406, 439, 412, 1564, 13, 50871, 50871, 400, 300, 445, 3263, 517, 44976, 712, 13, 51023, 51023, 3013, 291, 727, 360, 498, 291, 1415, 281, 13, 51145, 51145, 1436, 291, 393, 360, 411, 257, 31828, 979, 1429, 5893, 2158, 13, 51375, 51375, 400, 1338, 11, 611, 11, 370, 291, 727, 25704, 979, 8616, 293, 445, 483, 257, 31828, 979, 1429, 2158, 337, 257, 1629, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1786382350515812, "compression_ratio": 1.6616161616161615, "no_caption_prob": 1.7602311572773033e-06}, {"id": 299, "seek": 114968, "start": 1162.8600000000001, "end": 1165.3, "text": " Which you could do if you wanted to.", "tokens": [50364, 400, 550, 633, 565, 291, 643, 281, 2105, 472, 2519, 295, 309, 11, 291, 979, 1429, 309, 337, 633, 764, 633, 50720, 50720, 2519, 11, 457, 406, 439, 412, 1564, 13, 50871, 50871, 400, 300, 445, 3263, 517, 44976, 712, 13, 51023, 51023, 3013, 291, 727, 360, 498, 291, 1415, 281, 13, 51145, 51145, 1436, 291, 393, 360, 411, 257, 31828, 979, 1429, 5893, 2158, 13, 51375, 51375, 400, 1338, 11, 611, 11, 370, 291, 727, 25704, 979, 8616, 293, 445, 483, 257, 31828, 979, 1429, 2158, 337, 257, 1629, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1786382350515812, "compression_ratio": 1.6616161616161615, "no_caption_prob": 1.7602311572773033e-06}, {"id": 300, "seek": 114968, "start": 1165.3, "end": 1169.9, "text": " Because you can do like a JSON decode dot value.", "tokens": [50364, 400, 550, 633, 565, 291, 643, 281, 2105, 472, 2519, 295, 309, 11, 291, 979, 1429, 309, 337, 633, 764, 633, 50720, 50720, 2519, 11, 457, 406, 439, 412, 1564, 13, 50871, 50871, 400, 300, 445, 3263, 517, 44976, 712, 13, 51023, 51023, 3013, 291, 727, 360, 498, 291, 1415, 281, 13, 51145, 51145, 1436, 291, 393, 360, 411, 257, 31828, 979, 1429, 5893, 2158, 13, 51375, 51375, 400, 1338, 11, 611, 11, 370, 291, 727, 25704, 979, 8616, 293, 445, 483, 257, 31828, 979, 1429, 2158, 337, 257, 1629, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1786382350515812, "compression_ratio": 1.6616161616161615, "no_caption_prob": 1.7602311572773033e-06}, {"id": 301, "seek": 114968, "start": 1169.9, "end": 1177.4, "text": " And yeah, also, so you could defer decoding and just get a JSON decode value for a certain", "tokens": [50364, 400, 550, 633, 565, 291, 643, 281, 2105, 472, 2519, 295, 309, 11, 291, 979, 1429, 309, 337, 633, 764, 633, 50720, 50720, 2519, 11, 457, 406, 439, 412, 1564, 13, 50871, 50871, 400, 300, 445, 3263, 517, 44976, 712, 13, 51023, 51023, 3013, 291, 727, 360, 498, 291, 1415, 281, 13, 51145, 51145, 1436, 291, 393, 360, 411, 257, 31828, 979, 1429, 5893, 2158, 13, 51375, 51375, 400, 1338, 11, 611, 11, 370, 291, 727, 25704, 979, 8616, 293, 445, 483, 257, 31828, 979, 1429, 2158, 337, 257, 1629, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.1786382350515812, "compression_ratio": 1.6616161616161615, "no_caption_prob": 1.7602311572773033e-06}, {"id": 302, "seek": 117740, "start": 1177.4, "end": 1183.14, "text": " subtree of your JSON, and then parse it again at a later step.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 303, "seek": 117740, "start": 1183.14, "end": 1186.38, "text": " And that would be that sort of like shotgun parsing approach.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 304, "seek": 117740, "start": 1186.38, "end": 1189.5, "text": " But we don't like naturally people tend not to do that.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 305, "seek": 117740, "start": 1189.5, "end": 1191.6200000000001, "text": " I think maybe it's like a cultural thing.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 306, "seek": 117740, "start": 1191.6200000000001, "end": 1194.5800000000002, "text": " Maybe it's like the educational material and the examples.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 307, "seek": 117740, "start": 1194.5800000000002, "end": 1197.26, "text": " I think it's the education.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 308, "seek": 117740, "start": 1197.26, "end": 1201.2, "text": " But it also people don't like writing JSON decoders.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 309, "seek": 117740, "start": 1201.2, "end": 1204.46, "text": " So if you can do it once, that's fair.", "tokens": [50364, 7257, 701, 295, 428, 31828, 11, 293, 550, 48377, 309, 797, 412, 257, 1780, 1823, 13, 50651, 50651, 400, 300, 576, 312, 300, 1333, 295, 411, 24734, 21156, 278, 3109, 13, 50813, 50813, 583, 321, 500, 380, 411, 8195, 561, 3928, 406, 281, 360, 300, 13, 50969, 50969, 286, 519, 1310, 309, 311, 411, 257, 6988, 551, 13, 51075, 51075, 2704, 309, 311, 411, 264, 10189, 2527, 293, 264, 5110, 13, 51223, 51223, 286, 519, 309, 311, 264, 3309, 13, 51357, 51357, 583, 309, 611, 561, 500, 380, 411, 3579, 31828, 979, 378, 433, 13, 51554, 51554, 407, 498, 291, 393, 360, 309, 1564, 11, 300, 311, 3143, 13, 51717, 51717], "temperature": 0.0, "avg_logprob": -0.14354160612663336, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.972845873562619e-06}, {"id": 310, "seek": 120446, "start": 1204.46, "end": 1209.3, "text": " So a lot of people say, hey, JSON decoding in Elm is a pain.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 311, "seek": 120446, "start": 1209.3, "end": 1210.6200000000001, "text": " But you only do it once.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 312, "seek": 120446, "start": 1210.6200000000001, "end": 1214.98, "text": " And because it's a pain, yeah, that's why you only do it once.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 313, "seek": 120446, "start": 1214.98, "end": 1220.94, "text": " And that's why you get those guarantees right on the edges of your application.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 314, "seek": 120446, "start": 1220.94, "end": 1225.72, "text": " And you don't have to do shotgun parsing or shotgun thing.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 315, "seek": 120446, "start": 1225.72, "end": 1226.72, "text": " Shotgun parsing, yeah.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 316, "seek": 120446, "start": 1226.72, "end": 1227.72, "text": " Yeah.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 317, "seek": 120446, "start": 1227.72, "end": 1228.72, "text": " Yeah.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 318, "seek": 120446, "start": 1228.72, "end": 1230.9, "text": " Yeah, that's a great point.", "tokens": [50364, 407, 257, 688, 295, 561, 584, 11, 4177, 11, 31828, 979, 8616, 294, 2699, 76, 307, 257, 1822, 13, 50606, 50606, 583, 291, 787, 360, 309, 1564, 13, 50672, 50672, 400, 570, 309, 311, 257, 1822, 11, 1338, 11, 300, 311, 983, 291, 787, 360, 309, 1564, 13, 50890, 50890, 400, 300, 311, 983, 291, 483, 729, 32567, 558, 322, 264, 8819, 295, 428, 3861, 13, 51188, 51188, 400, 291, 500, 380, 362, 281, 360, 24734, 21156, 278, 420, 24734, 551, 13, 51427, 51427, 28845, 7414, 21156, 278, 11, 1338, 13, 51477, 51477, 865, 13, 51527, 51527, 865, 13, 51577, 51577, 865, 11, 300, 311, 257, 869, 935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.18903107769721378, "compression_ratio": 1.7587939698492463, "no_caption_prob": 4.399812314659357e-05}, {"id": 319, "seek": 123090, "start": 1230.9, "end": 1234.8600000000001, "text": " So it's something that is actually quite natural.", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 320, "seek": 123090, "start": 1234.8600000000001, "end": 1239.94, "text": " Actually another reason why I think it's very natural when you write Elm is because you", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 321, "seek": 123090, "start": 1239.94, "end": 1242.8200000000002, "text": " have to handle the error case.", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 322, "seek": 123090, "start": 1242.8200000000002, "end": 1243.8200000000002, "text": " Exactly.", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 323, "seek": 123090, "start": 1243.8200000000002, "end": 1244.8200000000002, "text": " Unlike even Haskell.", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 324, "seek": 123090, "start": 1244.8200000000002, "end": 1245.8600000000001, "text": " How so?", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 325, "seek": 123090, "start": 1245.8600000000001, "end": 1252.02, "text": " In Haskell, it's a warning if you have an inexhaustive case statement, right?", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 326, "seek": 123090, "start": 1252.02, "end": 1254.0600000000002, "text": " But it's not an error.", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 327, "seek": 123090, "start": 1254.0600000000002, "end": 1256.68, "text": " And Alexis talked about that even in the article.", "tokens": [50364, 407, 309, 311, 746, 300, 307, 767, 1596, 3303, 13, 50562, 50562, 5135, 1071, 1778, 983, 286, 519, 309, 311, 588, 3303, 562, 291, 2464, 2699, 76, 307, 570, 291, 50816, 50816, 362, 281, 4813, 264, 6713, 1389, 13, 50960, 50960, 7587, 13, 51010, 51010, 17657, 754, 8646, 43723, 13, 51060, 51060, 1012, 370, 30, 51112, 51112, 682, 8646, 43723, 11, 309, 311, 257, 9164, 498, 291, 362, 364, 29961, 1641, 381, 488, 1389, 5629, 11, 558, 30, 51420, 51420, 583, 309, 311, 406, 364, 6713, 13, 51522, 51522, 400, 39826, 2825, 466, 300, 754, 294, 264, 7222, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.15816673723239344, "compression_ratio": 1.5589519650655022, "no_caption_prob": 3.3735715987859294e-05}, {"id": 328, "seek": 125668, "start": 1256.68, "end": 1262.78, "text": " One of her examples is doing list.head in Haskell and how list.head in Haskell is somewhat", "tokens": [50364, 1485, 295, 720, 5110, 307, 884, 1329, 13, 1934, 294, 8646, 43723, 293, 577, 1329, 13, 1934, 294, 8646, 43723, 307, 8344, 50669, 50669, 5463, 13, 50719, 50719, 3146, 7576, 11, 309, 767, 11247, 364, 4478, 2831, 813, 257, 1310, 4478, 13, 50973, 50973, 876, 11, 1338, 11, 264, 7576, 11, 264, 7787, 1378, 13, 51237, 51237, 865, 13, 51287, 51287, 7587, 13, 51351, 51351, 407, 2699, 76, 307, 3845, 294, 577, 3094, 666, 264, 2856, 300, 11587, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.19443043168768825, "compression_ratio": 1.5181347150259068, "no_caption_prob": 8.26598989078775e-06}, {"id": 329, "seek": 125668, "start": 1262.78, "end": 1263.78, "text": " broken.", "tokens": [50364, 1485, 295, 720, 5110, 307, 884, 1329, 13, 1934, 294, 8646, 43723, 293, 577, 1329, 13, 1934, 294, 8646, 43723, 307, 8344, 50669, 50669, 5463, 13, 50719, 50719, 3146, 7576, 11, 309, 767, 11247, 364, 4478, 2831, 813, 257, 1310, 4478, 13, 50973, 50973, 876, 11, 1338, 11, 264, 7576, 11, 264, 7787, 1378, 13, 51237, 51237, 865, 13, 51287, 51287, 7587, 13, 51351, 51351, 407, 2699, 76, 307, 3845, 294, 577, 3094, 666, 264, 2856, 300, 11587, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.19443043168768825, "compression_ratio": 1.5181347150259068, "no_caption_prob": 8.26598989078775e-06}, {"id": 330, "seek": 125668, "start": 1263.78, "end": 1268.8600000000001, "text": " By default, it actually returns an element rather than a maybe element.", "tokens": [50364, 1485, 295, 720, 5110, 307, 884, 1329, 13, 1934, 294, 8646, 43723, 293, 577, 1329, 13, 1934, 294, 8646, 43723, 307, 8344, 50669, 50669, 5463, 13, 50719, 50719, 3146, 7576, 11, 309, 767, 11247, 364, 4478, 2831, 813, 257, 1310, 4478, 13, 50973, 50973, 876, 11, 1338, 11, 264, 7576, 11, 264, 7787, 1378, 13, 51237, 51237, 865, 13, 51287, 51287, 7587, 13, 51351, 51351, 407, 2699, 76, 307, 3845, 294, 577, 3094, 666, 264, 2856, 300, 11587, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.19443043168768825, "compression_ratio": 1.5181347150259068, "no_caption_prob": 8.26598989078775e-06}, {"id": 331, "seek": 125668, "start": 1268.8600000000001, "end": 1274.14, "text": " Oh, yeah, the default, the standards head.", "tokens": [50364, 1485, 295, 720, 5110, 307, 884, 1329, 13, 1934, 294, 8646, 43723, 293, 577, 1329, 13, 1934, 294, 8646, 43723, 307, 8344, 50669, 50669, 5463, 13, 50719, 50719, 3146, 7576, 11, 309, 767, 11247, 364, 4478, 2831, 813, 257, 1310, 4478, 13, 50973, 50973, 876, 11, 1338, 11, 264, 7576, 11, 264, 7787, 1378, 13, 51237, 51237, 865, 13, 51287, 51287, 7587, 13, 51351, 51351, 407, 2699, 76, 307, 3845, 294, 577, 3094, 666, 264, 2856, 300, 11587, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.19443043168768825, "compression_ratio": 1.5181347150259068, "no_caption_prob": 8.26598989078775e-06}, {"id": 332, "seek": 125668, "start": 1274.14, "end": 1275.14, "text": " Yeah.", "tokens": [50364, 1485, 295, 720, 5110, 307, 884, 1329, 13, 1934, 294, 8646, 43723, 293, 577, 1329, 13, 1934, 294, 8646, 43723, 307, 8344, 50669, 50669, 5463, 13, 50719, 50719, 3146, 7576, 11, 309, 767, 11247, 364, 4478, 2831, 813, 257, 1310, 4478, 13, 50973, 50973, 876, 11, 1338, 11, 264, 7576, 11, 264, 7787, 1378, 13, 51237, 51237, 865, 13, 51287, 51287, 7587, 13, 51351, 51351, 407, 2699, 76, 307, 3845, 294, 577, 3094, 666, 264, 2856, 300, 11587, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.19443043168768825, "compression_ratio": 1.5181347150259068, "no_caption_prob": 8.26598989078775e-06}, {"id": 333, "seek": 125668, "start": 1275.14, "end": 1276.42, "text": " Exactly.", "tokens": [50364, 1485, 295, 720, 5110, 307, 884, 1329, 13, 1934, 294, 8646, 43723, 293, 577, 1329, 13, 1934, 294, 8646, 43723, 307, 8344, 50669, 50669, 5463, 13, 50719, 50719, 3146, 7576, 11, 309, 767, 11247, 364, 4478, 2831, 813, 257, 1310, 4478, 13, 50973, 50973, 876, 11, 1338, 11, 264, 7576, 11, 264, 7787, 1378, 13, 51237, 51237, 865, 13, 51287, 51287, 7587, 13, 51351, 51351, 407, 2699, 76, 307, 3845, 294, 577, 3094, 666, 264, 2856, 300, 11587, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.19443043168768825, "compression_ratio": 1.5181347150259068, "no_caption_prob": 8.26598989078775e-06}, {"id": 334, "seek": 125668, "start": 1276.42, "end": 1285.0600000000002, "text": " So Elm is unique in how built into the language that approaches.", "tokens": [50364, 1485, 295, 720, 5110, 307, 884, 1329, 13, 1934, 294, 8646, 43723, 293, 577, 1329, 13, 1934, 294, 8646, 43723, 307, 8344, 50669, 50669, 5463, 13, 50719, 50719, 3146, 7576, 11, 309, 767, 11247, 364, 4478, 2831, 813, 257, 1310, 4478, 13, 50973, 50973, 876, 11, 1338, 11, 264, 7576, 11, 264, 7787, 1378, 13, 51237, 51237, 865, 13, 51287, 51287, 7587, 13, 51351, 51351, 407, 2699, 76, 307, 3845, 294, 577, 3094, 666, 264, 2856, 300, 11587, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.19443043168768825, "compression_ratio": 1.5181347150259068, "no_caption_prob": 8.26598989078775e-06}, {"id": 335, "seek": 128506, "start": 1285.06, "end": 1290.26, "text": " Let's think of a few other examples because it's actually, I think it's quite widespread.", "tokens": [50364, 961, 311, 519, 295, 257, 1326, 661, 5110, 570, 309, 311, 767, 11, 286, 519, 309, 311, 1596, 22679, 13, 50624, 50624, 400, 286, 519, 309, 311, 1481, 281, 1333, 295, 1745, 613, 5110, 300, 257, 688, 295, 561, 486, 312, 4963, 50968, 50968, 365, 341, 1333, 295, 3410, 295, 48377, 500, 380, 29562, 13, 51182, 51182, 407, 472, 300, 1487, 281, 1575, 337, 385, 307, 8607, 1412, 13, 51390, 51390, 400, 286, 411, 264, 636, 291, 645, 28971, 341, 13, 51513, 51513, 708, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 31828, 979, 8616, 51770, 51770, 294, 2699, 76, 30, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12841142806331668, "compression_ratio": 1.6984126984126984, "no_caption_prob": 9.972774023481179e-06}, {"id": 336, "seek": 128506, "start": 1290.26, "end": 1297.1399999999999, "text": " And I think it's nice to sort of connect these examples that a lot of people will be familiar", "tokens": [50364, 961, 311, 519, 295, 257, 1326, 661, 5110, 570, 309, 311, 767, 11, 286, 519, 309, 311, 1596, 22679, 13, 50624, 50624, 400, 286, 519, 309, 311, 1481, 281, 1333, 295, 1745, 613, 5110, 300, 257, 688, 295, 561, 486, 312, 4963, 50968, 50968, 365, 341, 1333, 295, 3410, 295, 48377, 500, 380, 29562, 13, 51182, 51182, 407, 472, 300, 1487, 281, 1575, 337, 385, 307, 8607, 1412, 13, 51390, 51390, 400, 286, 411, 264, 636, 291, 645, 28971, 341, 13, 51513, 51513, 708, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 31828, 979, 8616, 51770, 51770, 294, 2699, 76, 30, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12841142806331668, "compression_ratio": 1.6984126984126984, "no_caption_prob": 9.972774023481179e-06}, {"id": 337, "seek": 128506, "start": 1297.1399999999999, "end": 1301.4199999999998, "text": " with this sort of concept of parse don't validate.", "tokens": [50364, 961, 311, 519, 295, 257, 1326, 661, 5110, 570, 309, 311, 767, 11, 286, 519, 309, 311, 1596, 22679, 13, 50624, 50624, 400, 286, 519, 309, 311, 1481, 281, 1333, 295, 1745, 613, 5110, 300, 257, 688, 295, 561, 486, 312, 4963, 50968, 50968, 365, 341, 1333, 295, 3410, 295, 48377, 500, 380, 29562, 13, 51182, 51182, 407, 472, 300, 1487, 281, 1575, 337, 385, 307, 8607, 1412, 13, 51390, 51390, 400, 286, 411, 264, 636, 291, 645, 28971, 341, 13, 51513, 51513, 708, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 31828, 979, 8616, 51770, 51770, 294, 2699, 76, 30, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12841142806331668, "compression_ratio": 1.6984126984126984, "no_caption_prob": 9.972774023481179e-06}, {"id": 338, "seek": 128506, "start": 1301.4199999999998, "end": 1305.58, "text": " So one that comes to mind for me is remote data.", "tokens": [50364, 961, 311, 519, 295, 257, 1326, 661, 5110, 570, 309, 311, 767, 11, 286, 519, 309, 311, 1596, 22679, 13, 50624, 50624, 400, 286, 519, 309, 311, 1481, 281, 1333, 295, 1745, 613, 5110, 300, 257, 688, 295, 561, 486, 312, 4963, 50968, 50968, 365, 341, 1333, 295, 3410, 295, 48377, 500, 380, 29562, 13, 51182, 51182, 407, 472, 300, 1487, 281, 1575, 337, 385, 307, 8607, 1412, 13, 51390, 51390, 400, 286, 411, 264, 636, 291, 645, 28971, 341, 13, 51513, 51513, 708, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 31828, 979, 8616, 51770, 51770, 294, 2699, 76, 30, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12841142806331668, "compression_ratio": 1.6984126984126984, "no_caption_prob": 9.972774023481179e-06}, {"id": 339, "seek": 128506, "start": 1305.58, "end": 1308.04, "text": " And I like the way you were framing this.", "tokens": [50364, 961, 311, 519, 295, 257, 1326, 661, 5110, 570, 309, 311, 767, 11, 286, 519, 309, 311, 1596, 22679, 13, 50624, 50624, 400, 286, 519, 309, 311, 1481, 281, 1333, 295, 1745, 613, 5110, 300, 257, 688, 295, 561, 486, 312, 4963, 50968, 50968, 365, 341, 1333, 295, 3410, 295, 48377, 500, 380, 29562, 13, 51182, 51182, 407, 472, 300, 1487, 281, 1575, 337, 385, 307, 8607, 1412, 13, 51390, 51390, 400, 286, 411, 264, 636, 291, 645, 28971, 341, 13, 51513, 51513, 708, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 31828, 979, 8616, 51770, 51770, 294, 2699, 76, 30, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12841142806331668, "compression_ratio": 1.6984126984126984, "no_caption_prob": 9.972774023481179e-06}, {"id": 340, "seek": 128506, "start": 1308.04, "end": 1313.1799999999998, "text": " What would it look like if we didn't use this parse don't validate approach with JSON decoding", "tokens": [50364, 961, 311, 519, 295, 257, 1326, 661, 5110, 570, 309, 311, 767, 11, 286, 519, 309, 311, 1596, 22679, 13, 50624, 50624, 400, 286, 519, 309, 311, 1481, 281, 1333, 295, 1745, 613, 5110, 300, 257, 688, 295, 561, 486, 312, 4963, 50968, 50968, 365, 341, 1333, 295, 3410, 295, 48377, 500, 380, 29562, 13, 51182, 51182, 407, 472, 300, 1487, 281, 1575, 337, 385, 307, 8607, 1412, 13, 51390, 51390, 400, 286, 411, 264, 636, 291, 645, 28971, 341, 13, 51513, 51513, 708, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 31828, 979, 8616, 51770, 51770, 294, 2699, 76, 30, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12841142806331668, "compression_ratio": 1.6984126984126984, "no_caption_prob": 9.972774023481179e-06}, {"id": 341, "seek": 128506, "start": 1313.1799999999998, "end": 1314.1799999999998, "text": " in Elm?", "tokens": [50364, 961, 311, 519, 295, 257, 1326, 661, 5110, 570, 309, 311, 767, 11, 286, 519, 309, 311, 1596, 22679, 13, 50624, 50624, 400, 286, 519, 309, 311, 1481, 281, 1333, 295, 1745, 613, 5110, 300, 257, 688, 295, 561, 486, 312, 4963, 50968, 50968, 365, 341, 1333, 295, 3410, 295, 48377, 500, 380, 29562, 13, 51182, 51182, 407, 472, 300, 1487, 281, 1575, 337, 385, 307, 8607, 1412, 13, 51390, 51390, 400, 286, 411, 264, 636, 291, 645, 28971, 341, 13, 51513, 51513, 708, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 31828, 979, 8616, 51770, 51770, 294, 2699, 76, 30, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12841142806331668, "compression_ratio": 1.6984126984126984, "no_caption_prob": 9.972774023481179e-06}, {"id": 342, "seek": 131418, "start": 1314.18, "end": 1319.9, "text": " Well, what would it look like if we didn't use this parse don't validate approach with", "tokens": [50364, 1042, 11, 437, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 50650, 50650, 8607, 1412, 30, 50718, 50718, 400, 264, 1867, 307, 11, 731, 11, 291, 727, 362, 257, 15114, 7166, 293, 291, 727, 362, 512, 1412, 51026, 51026, 300, 291, 1520, 498, 309, 311, 15114, 13, 51152, 51152, 44858, 1412, 2709, 291, 341, 1481, 2010, 300, 1619, 291, 434, 516, 281, 643, 281, 2677, 2885, 341, 51433, 51433, 3089, 281, 536, 597, 2158, 309, 307, 2602, 295, 445, 8568, 257, 23351, 28499, 281, 536, 498, 309, 311, 15114, 51684, 51684, 420, 498, 456, 390, 364, 6713, 11, 337, 1365, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.09147291267867637, "compression_ratio": 1.72, "no_caption_prob": 3.944157651858404e-05}, {"id": 343, "seek": 131418, "start": 1319.9, "end": 1321.26, "text": " remote data?", "tokens": [50364, 1042, 11, 437, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 50650, 50650, 8607, 1412, 30, 50718, 50718, 400, 264, 1867, 307, 11, 731, 11, 291, 727, 362, 257, 15114, 7166, 293, 291, 727, 362, 512, 1412, 51026, 51026, 300, 291, 1520, 498, 309, 311, 15114, 13, 51152, 51152, 44858, 1412, 2709, 291, 341, 1481, 2010, 300, 1619, 291, 434, 516, 281, 643, 281, 2677, 2885, 341, 51433, 51433, 3089, 281, 536, 597, 2158, 309, 307, 2602, 295, 445, 8568, 257, 23351, 28499, 281, 536, 498, 309, 311, 15114, 51684, 51684, 420, 498, 456, 390, 364, 6713, 11, 337, 1365, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.09147291267867637, "compression_ratio": 1.72, "no_caption_prob": 3.944157651858404e-05}, {"id": 344, "seek": 131418, "start": 1321.26, "end": 1327.42, "text": " And the answer is, well, you could have a loading flag and you could have some data", "tokens": [50364, 1042, 11, 437, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 50650, 50650, 8607, 1412, 30, 50718, 50718, 400, 264, 1867, 307, 11, 731, 11, 291, 727, 362, 257, 15114, 7166, 293, 291, 727, 362, 512, 1412, 51026, 51026, 300, 291, 1520, 498, 309, 311, 15114, 13, 51152, 51152, 44858, 1412, 2709, 291, 341, 1481, 2010, 300, 1619, 291, 434, 516, 281, 643, 281, 2677, 2885, 341, 51433, 51433, 3089, 281, 536, 597, 2158, 309, 307, 2602, 295, 445, 8568, 257, 23351, 28499, 281, 536, 498, 309, 311, 15114, 51684, 51684, 420, 498, 456, 390, 364, 6713, 11, 337, 1365, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.09147291267867637, "compression_ratio": 1.72, "no_caption_prob": 3.944157651858404e-05}, {"id": 345, "seek": 131418, "start": 1327.42, "end": 1329.94, "text": " that you check if it's loading.", "tokens": [50364, 1042, 11, 437, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 50650, 50650, 8607, 1412, 30, 50718, 50718, 400, 264, 1867, 307, 11, 731, 11, 291, 727, 362, 257, 15114, 7166, 293, 291, 727, 362, 512, 1412, 51026, 51026, 300, 291, 1520, 498, 309, 311, 15114, 13, 51152, 51152, 44858, 1412, 2709, 291, 341, 1481, 2010, 300, 1619, 291, 434, 516, 281, 643, 281, 2677, 2885, 341, 51433, 51433, 3089, 281, 536, 597, 2158, 309, 307, 2602, 295, 445, 8568, 257, 23351, 28499, 281, 536, 498, 309, 311, 15114, 51684, 51684, 420, 498, 456, 390, 364, 6713, 11, 337, 1365, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.09147291267867637, "compression_ratio": 1.72, "no_caption_prob": 3.944157651858404e-05}, {"id": 346, "seek": 131418, "start": 1329.94, "end": 1335.5600000000002, "text": " Remote data gives you this nice type that says you're going to need to destructure this", "tokens": [50364, 1042, 11, 437, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 50650, 50650, 8607, 1412, 30, 50718, 50718, 400, 264, 1867, 307, 11, 731, 11, 291, 727, 362, 257, 15114, 7166, 293, 291, 727, 362, 512, 1412, 51026, 51026, 300, 291, 1520, 498, 309, 311, 15114, 13, 51152, 51152, 44858, 1412, 2709, 291, 341, 1481, 2010, 300, 1619, 291, 434, 516, 281, 643, 281, 2677, 2885, 341, 51433, 51433, 3089, 281, 536, 597, 2158, 309, 307, 2602, 295, 445, 8568, 257, 23351, 28499, 281, 536, 498, 309, 311, 15114, 51684, 51684, 420, 498, 456, 390, 364, 6713, 11, 337, 1365, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.09147291267867637, "compression_ratio": 1.72, "no_caption_prob": 3.944157651858404e-05}, {"id": 347, "seek": 131418, "start": 1335.5600000000002, "end": 1340.5800000000002, "text": " code to see which value it is instead of just checking a Boolean to see if it's loading", "tokens": [50364, 1042, 11, 437, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 50650, 50650, 8607, 1412, 30, 50718, 50718, 400, 264, 1867, 307, 11, 731, 11, 291, 727, 362, 257, 15114, 7166, 293, 291, 727, 362, 512, 1412, 51026, 51026, 300, 291, 1520, 498, 309, 311, 15114, 13, 51152, 51152, 44858, 1412, 2709, 291, 341, 1481, 2010, 300, 1619, 291, 434, 516, 281, 643, 281, 2677, 2885, 341, 51433, 51433, 3089, 281, 536, 597, 2158, 309, 307, 2602, 295, 445, 8568, 257, 23351, 28499, 281, 536, 498, 309, 311, 15114, 51684, 51684, 420, 498, 456, 390, 364, 6713, 11, 337, 1365, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.09147291267867637, "compression_ratio": 1.72, "no_caption_prob": 3.944157651858404e-05}, {"id": 348, "seek": 131418, "start": 1340.5800000000002, "end": 1343.3200000000002, "text": " or if there was an error, for example.", "tokens": [50364, 1042, 11, 437, 576, 309, 574, 411, 498, 321, 994, 380, 764, 341, 48377, 500, 380, 29562, 3109, 365, 50650, 50650, 8607, 1412, 30, 50718, 50718, 400, 264, 1867, 307, 11, 731, 11, 291, 727, 362, 257, 15114, 7166, 293, 291, 727, 362, 512, 1412, 51026, 51026, 300, 291, 1520, 498, 309, 311, 15114, 13, 51152, 51152, 44858, 1412, 2709, 291, 341, 1481, 2010, 300, 1619, 291, 434, 516, 281, 643, 281, 2677, 2885, 341, 51433, 51433, 3089, 281, 536, 597, 2158, 309, 307, 2602, 295, 445, 8568, 257, 23351, 28499, 281, 536, 498, 309, 311, 15114, 51684, 51684, 420, 498, 456, 390, 364, 6713, 11, 337, 1365, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.09147291267867637, "compression_ratio": 1.72, "no_caption_prob": 3.944157651858404e-05}, {"id": 349, "seek": 134332, "start": 1343.32, "end": 1350.4199999999998, "text": " And I think another thing that the remote data example illustrates well is this concept", "tokens": [50364, 400, 286, 519, 1071, 551, 300, 264, 8607, 1412, 1365, 41718, 731, 307, 341, 3410, 50719, 50719, 295, 6260, 365, 15697, 412, 264, 26807, 88, 295, 428, 3861, 13, 50911, 50911, 407, 365, 8607, 1412, 11, 293, 286, 519, 1310, 512, 561, 754, 764, 8607, 1412, 293, 3212, 380, 4963, 51157, 51157, 365, 341, 1333, 295, 6532, 13, 51262, 51262, 407, 291, 393, 445, 1320, 8607, 1412, 760, 293, 1520, 309, 13, 51519, 51519, 583, 437, 1985, 264, 45516, 307, 562, 498, 291, 584, 11, 286, 362, 613, 1732, 819, 8607, 1412, 4190, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.0652598056596579, "compression_ratio": 1.7242798353909465, "no_caption_prob": 3.555961484380532e-06}, {"id": 350, "seek": 134332, "start": 1350.4199999999998, "end": 1354.26, "text": " of dealing with uncertainty at the periphery of your application.", "tokens": [50364, 400, 286, 519, 1071, 551, 300, 264, 8607, 1412, 1365, 41718, 731, 307, 341, 3410, 50719, 50719, 295, 6260, 365, 15697, 412, 264, 26807, 88, 295, 428, 3861, 13, 50911, 50911, 407, 365, 8607, 1412, 11, 293, 286, 519, 1310, 512, 561, 754, 764, 8607, 1412, 293, 3212, 380, 4963, 51157, 51157, 365, 341, 1333, 295, 6532, 13, 51262, 51262, 407, 291, 393, 445, 1320, 8607, 1412, 760, 293, 1520, 309, 13, 51519, 51519, 583, 437, 1985, 264, 45516, 307, 562, 498, 291, 584, 11, 286, 362, 613, 1732, 819, 8607, 1412, 4190, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.0652598056596579, "compression_ratio": 1.7242798353909465, "no_caption_prob": 3.555961484380532e-06}, {"id": 351, "seek": 134332, "start": 1354.26, "end": 1359.1799999999998, "text": " So with remote data, and I think maybe some people even use remote data and aren't familiar", "tokens": [50364, 400, 286, 519, 1071, 551, 300, 264, 8607, 1412, 1365, 41718, 731, 307, 341, 3410, 50719, 50719, 295, 6260, 365, 15697, 412, 264, 26807, 88, 295, 428, 3861, 13, 50911, 50911, 407, 365, 8607, 1412, 11, 293, 286, 519, 1310, 512, 561, 754, 764, 8607, 1412, 293, 3212, 380, 4963, 51157, 51157, 365, 341, 1333, 295, 6532, 13, 51262, 51262, 407, 291, 393, 445, 1320, 8607, 1412, 760, 293, 1520, 309, 13, 51519, 51519, 583, 437, 1985, 264, 45516, 307, 562, 498, 291, 584, 11, 286, 362, 613, 1732, 819, 8607, 1412, 4190, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.0652598056596579, "compression_ratio": 1.7242798353909465, "no_caption_prob": 3.555961484380532e-06}, {"id": 352, "seek": 134332, "start": 1359.1799999999998, "end": 1361.28, "text": " with this sort of technique.", "tokens": [50364, 400, 286, 519, 1071, 551, 300, 264, 8607, 1412, 1365, 41718, 731, 307, 341, 3410, 50719, 50719, 295, 6260, 365, 15697, 412, 264, 26807, 88, 295, 428, 3861, 13, 50911, 50911, 407, 365, 8607, 1412, 11, 293, 286, 519, 1310, 512, 561, 754, 764, 8607, 1412, 293, 3212, 380, 4963, 51157, 51157, 365, 341, 1333, 295, 6532, 13, 51262, 51262, 407, 291, 393, 445, 1320, 8607, 1412, 760, 293, 1520, 309, 13, 51519, 51519, 583, 437, 1985, 264, 45516, 307, 562, 498, 291, 584, 11, 286, 362, 613, 1732, 819, 8607, 1412, 4190, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.0652598056596579, "compression_ratio": 1.7242798353909465, "no_caption_prob": 3.555961484380532e-06}, {"id": 353, "seek": 134332, "start": 1361.28, "end": 1366.4199999999998, "text": " So you can just pass remote data down and check it.", "tokens": [50364, 400, 286, 519, 1071, 551, 300, 264, 8607, 1412, 1365, 41718, 731, 307, 341, 3410, 50719, 50719, 295, 6260, 365, 15697, 412, 264, 26807, 88, 295, 428, 3861, 13, 50911, 50911, 407, 365, 8607, 1412, 11, 293, 286, 519, 1310, 512, 561, 754, 764, 8607, 1412, 293, 3212, 380, 4963, 51157, 51157, 365, 341, 1333, 295, 6532, 13, 51262, 51262, 407, 291, 393, 445, 1320, 8607, 1412, 760, 293, 1520, 309, 13, 51519, 51519, 583, 437, 1985, 264, 45516, 307, 562, 498, 291, 584, 11, 286, 362, 613, 1732, 819, 8607, 1412, 4190, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.0652598056596579, "compression_ratio": 1.7242798353909465, "no_caption_prob": 3.555961484380532e-06}, {"id": 354, "seek": 134332, "start": 1366.4199999999998, "end": 1371.62, "text": " But what works the nicest is when if you say, I have these five different remote data values", "tokens": [50364, 400, 286, 519, 1071, 551, 300, 264, 8607, 1412, 1365, 41718, 731, 307, 341, 3410, 50719, 50719, 295, 6260, 365, 15697, 412, 264, 26807, 88, 295, 428, 3861, 13, 50911, 50911, 407, 365, 8607, 1412, 11, 293, 286, 519, 1310, 512, 561, 754, 764, 8607, 1412, 293, 3212, 380, 4963, 51157, 51157, 365, 341, 1333, 295, 6532, 13, 51262, 51262, 407, 291, 393, 445, 1320, 8607, 1412, 760, 293, 1520, 309, 13, 51519, 51519, 583, 437, 1985, 264, 45516, 307, 562, 498, 291, 584, 11, 286, 362, 613, 1732, 819, 8607, 1412, 4190, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.0652598056596579, "compression_ratio": 1.7242798353909465, "no_caption_prob": 3.555961484380532e-06}, {"id": 355, "seek": 137162, "start": 1371.62, "end": 1377.6599999999999, "text": " that I depend on, then you can say remote data dot map five.", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 356, "seek": 137162, "start": 1377.6599999999999, "end": 1382.2199999999998, "text": " And if any of them have an error, then you want to show an error.", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 357, "seek": 137162, "start": 1382.2199999999998, "end": 1385.1799999999998, "text": " And if some of them are loading, you want to show a loading screen instead of showing", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 358, "seek": 137162, "start": 1385.1799999999998, "end": 1391.3, "text": " five different loading spinners like you sometimes see online.", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 359, "seek": 137162, "start": 1391.3, "end": 1394.62, "text": " Which is reasonable also.", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 360, "seek": 137162, "start": 1394.62, "end": 1395.62, "text": " That's right.", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 361, "seek": 137162, "start": 1395.62, "end": 1397.2399999999998, "text": " It may be what you want in some cases.", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 362, "seek": 137162, "start": 1397.2399999999998, "end": 1398.3799999999999, "text": " That's absolutely right.", "tokens": [50364, 300, 286, 5672, 322, 11, 550, 291, 393, 584, 8607, 1412, 5893, 4471, 1732, 13, 50666, 50666, 400, 498, 604, 295, 552, 362, 364, 6713, 11, 550, 291, 528, 281, 855, 364, 6713, 13, 50894, 50894, 400, 498, 512, 295, 552, 366, 15114, 11, 291, 528, 281, 855, 257, 15114, 2568, 2602, 295, 4099, 51042, 51042, 1732, 819, 15114, 6060, 2999, 411, 291, 2171, 536, 2950, 13, 51348, 51348, 3013, 307, 10585, 611, 13, 51514, 51514, 663, 311, 558, 13, 51564, 51564, 467, 815, 312, 437, 291, 528, 294, 512, 3331, 13, 51645, 51645, 663, 311, 3122, 558, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.11922140954767615, "compression_ratio": 1.7627906976744185, "no_caption_prob": 1.2411331226758193e-05}, {"id": 363, "seek": 139838, "start": 1398.38, "end": 1405.2600000000002, "text": " But often you want to take a set of things and maybe you even depend on these different", "tokens": [50364, 583, 2049, 291, 528, 281, 747, 257, 992, 295, 721, 293, 1310, 291, 754, 5672, 322, 613, 819, 50708, 50708, 3755, 295, 1412, 13, 50758, 50758, 407, 291, 393, 380, 360, 1340, 1553, 341, 1333, 295, 26118, 2522, 295, 1412, 11, 754, 1673, 309, 50930, 50930, 1487, 490, 1732, 819, 33283, 12475, 13, 51087, 51087, 400, 291, 445, 360, 8607, 1412, 5893, 4471, 1732, 13, 51240, 51240, 400, 586, 291, 600, 658, 613, 1732, 819, 8607, 1412, 3467, 300, 439, 808, 1214, 412, 1564, 51522, 51522, 2831, 813, 1419, 281, 1520, 439, 613, 819, 4487, 13, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.07927484035491944, "compression_ratio": 1.7541666666666667, "no_caption_prob": 2.1568077954725595e-06}, {"id": 364, "seek": 139838, "start": 1405.2600000000002, "end": 1406.2600000000002, "text": " pieces of data.", "tokens": [50364, 583, 2049, 291, 528, 281, 747, 257, 992, 295, 721, 293, 1310, 291, 754, 5672, 322, 613, 819, 50708, 50708, 3755, 295, 1412, 13, 50758, 50758, 407, 291, 393, 380, 360, 1340, 1553, 341, 1333, 295, 26118, 2522, 295, 1412, 11, 754, 1673, 309, 50930, 50930, 1487, 490, 1732, 819, 33283, 12475, 13, 51087, 51087, 400, 291, 445, 360, 8607, 1412, 5893, 4471, 1732, 13, 51240, 51240, 400, 586, 291, 600, 658, 613, 1732, 819, 8607, 1412, 3467, 300, 439, 808, 1214, 412, 1564, 51522, 51522, 2831, 813, 1419, 281, 1520, 439, 613, 819, 4487, 13, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.07927484035491944, "compression_ratio": 1.7541666666666667, "no_caption_prob": 2.1568077954725595e-06}, {"id": 365, "seek": 139838, "start": 1406.2600000000002, "end": 1409.7, "text": " So you can't do anything without this sort of aggregate piece of data, even though it", "tokens": [50364, 583, 2049, 291, 528, 281, 747, 257, 992, 295, 721, 293, 1310, 291, 754, 5672, 322, 613, 819, 50708, 50708, 3755, 295, 1412, 13, 50758, 50758, 407, 291, 393, 380, 360, 1340, 1553, 341, 1333, 295, 26118, 2522, 295, 1412, 11, 754, 1673, 309, 50930, 50930, 1487, 490, 1732, 819, 33283, 12475, 13, 51087, 51087, 400, 291, 445, 360, 8607, 1412, 5893, 4471, 1732, 13, 51240, 51240, 400, 586, 291, 600, 658, 613, 1732, 819, 8607, 1412, 3467, 300, 439, 808, 1214, 412, 1564, 51522, 51522, 2831, 813, 1419, 281, 1520, 439, 613, 819, 4487, 13, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.07927484035491944, "compression_ratio": 1.7541666666666667, "no_caption_prob": 2.1568077954725595e-06}, {"id": 366, "seek": 139838, "start": 1409.7, "end": 1412.8400000000001, "text": " comes from five different HTTP requests.", "tokens": [50364, 583, 2049, 291, 528, 281, 747, 257, 992, 295, 721, 293, 1310, 291, 754, 5672, 322, 613, 819, 50708, 50708, 3755, 295, 1412, 13, 50758, 50758, 407, 291, 393, 380, 360, 1340, 1553, 341, 1333, 295, 26118, 2522, 295, 1412, 11, 754, 1673, 309, 50930, 50930, 1487, 490, 1732, 819, 33283, 12475, 13, 51087, 51087, 400, 291, 445, 360, 8607, 1412, 5893, 4471, 1732, 13, 51240, 51240, 400, 586, 291, 600, 658, 613, 1732, 819, 8607, 1412, 3467, 300, 439, 808, 1214, 412, 1564, 51522, 51522, 2831, 813, 1419, 281, 1520, 439, 613, 819, 4487, 13, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.07927484035491944, "compression_ratio": 1.7541666666666667, "no_caption_prob": 2.1568077954725595e-06}, {"id": 367, "seek": 139838, "start": 1412.8400000000001, "end": 1415.9, "text": " And you just do remote data dot map five.", "tokens": [50364, 583, 2049, 291, 528, 281, 747, 257, 992, 295, 721, 293, 1310, 291, 754, 5672, 322, 613, 819, 50708, 50708, 3755, 295, 1412, 13, 50758, 50758, 407, 291, 393, 380, 360, 1340, 1553, 341, 1333, 295, 26118, 2522, 295, 1412, 11, 754, 1673, 309, 50930, 50930, 1487, 490, 1732, 819, 33283, 12475, 13, 51087, 51087, 400, 291, 445, 360, 8607, 1412, 5893, 4471, 1732, 13, 51240, 51240, 400, 586, 291, 600, 658, 613, 1732, 819, 8607, 1412, 3467, 300, 439, 808, 1214, 412, 1564, 51522, 51522, 2831, 813, 1419, 281, 1520, 439, 613, 819, 4487, 13, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.07927484035491944, "compression_ratio": 1.7541666666666667, "no_caption_prob": 2.1568077954725595e-06}, {"id": 368, "seek": 139838, "start": 1415.9, "end": 1421.5400000000002, "text": " And now you've got these five different remote data types that all come together at once", "tokens": [50364, 583, 2049, 291, 528, 281, 747, 257, 992, 295, 721, 293, 1310, 291, 754, 5672, 322, 613, 819, 50708, 50708, 3755, 295, 1412, 13, 50758, 50758, 407, 291, 393, 380, 360, 1340, 1553, 341, 1333, 295, 26118, 2522, 295, 1412, 11, 754, 1673, 309, 50930, 50930, 1487, 490, 1732, 819, 33283, 12475, 13, 51087, 51087, 400, 291, 445, 360, 8607, 1412, 5893, 4471, 1732, 13, 51240, 51240, 400, 586, 291, 600, 658, 613, 1732, 819, 8607, 1412, 3467, 300, 439, 808, 1214, 412, 1564, 51522, 51522, 2831, 813, 1419, 281, 1520, 439, 613, 819, 4487, 13, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.07927484035491944, "compression_ratio": 1.7541666666666667, "no_caption_prob": 2.1568077954725595e-06}, {"id": 369, "seek": 139838, "start": 1421.5400000000002, "end": 1425.5600000000002, "text": " rather than having to check all these different conditions.", "tokens": [50364, 583, 2049, 291, 528, 281, 747, 257, 992, 295, 721, 293, 1310, 291, 754, 5672, 322, 613, 819, 50708, 50708, 3755, 295, 1412, 13, 50758, 50758, 407, 291, 393, 380, 360, 1340, 1553, 341, 1333, 295, 26118, 2522, 295, 1412, 11, 754, 1673, 309, 50930, 50930, 1487, 490, 1732, 819, 33283, 12475, 13, 51087, 51087, 400, 291, 445, 360, 8607, 1412, 5893, 4471, 1732, 13, 51240, 51240, 400, 586, 291, 600, 658, 613, 1732, 819, 8607, 1412, 3467, 300, 439, 808, 1214, 412, 1564, 51522, 51522, 2831, 813, 1419, 281, 1520, 439, 613, 819, 4487, 13, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.07927484035491944, "compression_ratio": 1.7541666666666667, "no_caption_prob": 2.1568077954725595e-06}, {"id": 370, "seek": 142556, "start": 1425.56, "end": 1428.8799999999999, "text": " And so you handle that uncertainty at the very top level.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 371, "seek": 142556, "start": 1428.8799999999999, "end": 1434.6799999999998, "text": " And then you just have a code that's blissfully ignorant to the possible failures at the periphery.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 372, "seek": 142556, "start": 1434.6799999999998, "end": 1437.6599999999999, "text": " And it can just confidently use all of that data.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 373, "seek": 142556, "start": 1437.6599999999999, "end": 1438.6599999999999, "text": " It's got all of it.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 374, "seek": 142556, "start": 1438.6599999999999, "end": 1439.6599999999999, "text": " It doesn't need to check.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 375, "seek": 142556, "start": 1439.6599999999999, "end": 1444.6599999999999, "text": " Oh, well, if I have this and I don't have this, then handle it this way.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 376, "seek": 142556, "start": 1444.6599999999999, "end": 1445.6599999999999, "text": " Yeah.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 377, "seek": 142556, "start": 1445.6599999999999, "end": 1447.74, "text": " Yeah, this is usually what I use.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 378, "seek": 142556, "start": 1447.74, "end": 1453.06, "text": " Maybe map two and all the other map and functions.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 379, "seek": 142556, "start": 1453.06, "end": 1454.06, "text": " Same pattern.", "tokens": [50364, 400, 370, 291, 4813, 300, 15697, 412, 264, 588, 1192, 1496, 13, 50530, 50530, 400, 550, 291, 445, 362, 257, 3089, 300, 311, 31522, 2277, 29374, 281, 264, 1944, 20774, 412, 264, 26807, 88, 13, 50820, 50820, 400, 309, 393, 445, 41956, 764, 439, 295, 300, 1412, 13, 50969, 50969, 467, 311, 658, 439, 295, 309, 13, 51019, 51019, 467, 1177, 380, 643, 281, 1520, 13, 51069, 51069, 876, 11, 731, 11, 498, 286, 362, 341, 293, 286, 500, 380, 362, 341, 11, 550, 4813, 309, 341, 636, 13, 51319, 51319, 865, 13, 51369, 51369, 865, 11, 341, 307, 2673, 437, 286, 764, 13, 51473, 51473, 2704, 4471, 732, 293, 439, 264, 661, 4471, 293, 6828, 13, 51739, 51739, 10635, 5102, 13, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.14659710535927425, "compression_ratio": 1.6450381679389312, "no_caption_prob": 7.571133551209641e-07}, {"id": 380, "seek": 145406, "start": 1454.06, "end": 1455.98, "text": " And it's something that you see quite often.", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 381, "seek": 145406, "start": 1455.98, "end": 1456.98, "text": " Yes.", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 382, "seek": 145406, "start": 1456.98, "end": 1462.7, "text": " I saw one example in some code I was working with recently where I did a refactoring and", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 383, "seek": 145406, "start": 1462.7, "end": 1464.1599999999999, "text": " it turned out quite nicely.", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 384, "seek": 145406, "start": 1464.1599999999999, "end": 1471.28, "text": " What I was seeing was exactly this validation smell rather than parsing that we were checking", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 385, "seek": 145406, "start": 1471.28, "end": 1478.94, "text": " for a certain condition repeatedly and weren't able to use a data type to say, I need this", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 386, "seek": 145406, "start": 1478.94, "end": 1479.94, "text": " condition.", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 387, "seek": 145406, "start": 1479.94, "end": 1483.06, "text": " I wanted to strengthen the guarantees of the input I was getting.", "tokens": [50364, 400, 309, 311, 746, 300, 291, 536, 1596, 2049, 13, 50460, 50460, 1079, 13, 50510, 50510, 286, 1866, 472, 1365, 294, 512, 3089, 286, 390, 1364, 365, 3938, 689, 286, 630, 257, 1895, 578, 3662, 293, 50796, 50796, 309, 3574, 484, 1596, 9594, 13, 50869, 50869, 708, 286, 390, 2577, 390, 2293, 341, 24071, 4316, 2831, 813, 21156, 278, 300, 321, 645, 8568, 51225, 51225, 337, 257, 1629, 4188, 18227, 293, 4999, 380, 1075, 281, 764, 257, 1412, 2010, 281, 584, 11, 286, 643, 341, 51608, 51608, 4188, 13, 51658, 51658, 286, 1415, 281, 17045, 264, 32567, 295, 264, 4846, 286, 390, 1242, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10199175940619574, "compression_ratio": 1.6653696498054475, "no_caption_prob": 1.1478653505037073e-05}, {"id": 388, "seek": 148306, "start": 1483.06, "end": 1488.4199999999998, "text": " So the example was there was this data type representing a document type and one of the", "tokens": [50364, 407, 264, 1365, 390, 456, 390, 341, 1412, 2010, 13460, 257, 4166, 2010, 293, 472, 295, 264, 50632, 50632, 4166, 3467, 390, 9841, 13, 50799, 50799, 400, 300, 390, 445, 294, 341, 955, 2375, 2010, 11, 4166, 2010, 307, 341, 2010, 420, 300, 2010, 420, 51120, 51120, 300, 2010, 420, 9841, 13, 51230, 51230, 400, 370, 291, 483, 3089, 411, 498, 4166, 2010, 5893, 307, 9841, 420, 498, 4166, 2010, 6915, 51543, 51543, 6915, 4166, 2010, 5893, 9841, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13569504381662392, "compression_ratio": 2.1446540880503147, "no_caption_prob": 4.6644427698083746e-07}, {"id": 389, "seek": 148306, "start": 1488.4199999999998, "end": 1491.76, "text": " document types was unknown.", "tokens": [50364, 407, 264, 1365, 390, 456, 390, 341, 1412, 2010, 13460, 257, 4166, 2010, 293, 472, 295, 264, 50632, 50632, 4166, 3467, 390, 9841, 13, 50799, 50799, 400, 300, 390, 445, 294, 341, 955, 2375, 2010, 11, 4166, 2010, 307, 341, 2010, 420, 300, 2010, 420, 51120, 51120, 300, 2010, 420, 9841, 13, 51230, 51230, 400, 370, 291, 483, 3089, 411, 498, 4166, 2010, 5893, 307, 9841, 420, 498, 4166, 2010, 6915, 51543, 51543, 6915, 4166, 2010, 5893, 9841, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13569504381662392, "compression_ratio": 2.1446540880503147, "no_caption_prob": 4.6644427698083746e-07}, {"id": 390, "seek": 148306, "start": 1491.76, "end": 1498.1799999999998, "text": " And that was just in this big custom type, document type is this type or that type or", "tokens": [50364, 407, 264, 1365, 390, 456, 390, 341, 1412, 2010, 13460, 257, 4166, 2010, 293, 472, 295, 264, 50632, 50632, 4166, 3467, 390, 9841, 13, 50799, 50799, 400, 300, 390, 445, 294, 341, 955, 2375, 2010, 11, 4166, 2010, 307, 341, 2010, 420, 300, 2010, 420, 51120, 51120, 300, 2010, 420, 9841, 13, 51230, 51230, 400, 370, 291, 483, 3089, 411, 498, 4166, 2010, 5893, 307, 9841, 420, 498, 4166, 2010, 6915, 51543, 51543, 6915, 4166, 2010, 5893, 9841, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13569504381662392, "compression_ratio": 2.1446540880503147, "no_caption_prob": 4.6644427698083746e-07}, {"id": 391, "seek": 148306, "start": 1498.1799999999998, "end": 1500.3799999999999, "text": " that type or unknown.", "tokens": [50364, 407, 264, 1365, 390, 456, 390, 341, 1412, 2010, 13460, 257, 4166, 2010, 293, 472, 295, 264, 50632, 50632, 4166, 3467, 390, 9841, 13, 50799, 50799, 400, 300, 390, 445, 294, 341, 955, 2375, 2010, 11, 4166, 2010, 307, 341, 2010, 420, 300, 2010, 420, 51120, 51120, 300, 2010, 420, 9841, 13, 51230, 51230, 400, 370, 291, 483, 3089, 411, 498, 4166, 2010, 5893, 307, 9841, 420, 498, 4166, 2010, 6915, 51543, 51543, 6915, 4166, 2010, 5893, 9841, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13569504381662392, "compression_ratio": 2.1446540880503147, "no_caption_prob": 4.6644427698083746e-07}, {"id": 392, "seek": 148306, "start": 1500.3799999999999, "end": 1506.6399999999999, "text": " And so you get code like if document type dot is unknown or if document type equals", "tokens": [50364, 407, 264, 1365, 390, 456, 390, 341, 1412, 2010, 13460, 257, 4166, 2010, 293, 472, 295, 264, 50632, 50632, 4166, 3467, 390, 9841, 13, 50799, 50799, 400, 300, 390, 445, 294, 341, 955, 2375, 2010, 11, 4166, 2010, 307, 341, 2010, 420, 300, 2010, 420, 51120, 51120, 300, 2010, 420, 9841, 13, 51230, 51230, 400, 370, 291, 483, 3089, 411, 498, 4166, 2010, 5893, 307, 9841, 420, 498, 4166, 2010, 6915, 51543, 51543, 6915, 4166, 2010, 5893, 9841, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13569504381662392, "compression_ratio": 2.1446540880503147, "no_caption_prob": 4.6644427698083746e-07}, {"id": 393, "seek": 148306, "start": 1506.6399999999999, "end": 1510.3799999999999, "text": " equals document type dot unknown.", "tokens": [50364, 407, 264, 1365, 390, 456, 390, 341, 1412, 2010, 13460, 257, 4166, 2010, 293, 472, 295, 264, 50632, 50632, 4166, 3467, 390, 9841, 13, 50799, 50799, 400, 300, 390, 445, 294, 341, 955, 2375, 2010, 11, 4166, 2010, 307, 341, 2010, 420, 300, 2010, 420, 51120, 51120, 300, 2010, 420, 9841, 13, 51230, 51230, 400, 370, 291, 483, 3089, 411, 498, 4166, 2010, 5893, 307, 9841, 420, 498, 4166, 2010, 6915, 51543, 51543, 6915, 4166, 2010, 5893, 9841, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13569504381662392, "compression_ratio": 2.1446540880503147, "no_caption_prob": 4.6644427698083746e-07}, {"id": 394, "seek": 151038, "start": 1510.38, "end": 1514.14, "text": " This is annoying to check for all the other ones.", "tokens": [50364, 639, 307, 11304, 281, 1520, 337, 439, 264, 661, 2306, 13, 50552, 50552, 1436, 456, 311, 2121, 13175, 498, 309, 311, 9841, 13, 50727, 50727, 407, 286, 519, 341, 307, 411, 1310, 1333, 295, 1080, 1065, 1422, 5102, 300, 2171, 291, 362, 1412, 50992, 50992, 300, 311, 411, 7467, 294, 293, 291, 528, 281, 312, 1075, 281, 11, 797, 11, 291, 458, 11, 411, 321, 600, 668, 10850, 11, 51276, 51276, 291, 528, 281, 1066, 2837, 295, 437, 291, 600, 12785, 13, 51456, 51456, 407, 309, 311, 411, 498, 291, 600, 12785, 300, 291, 362, 257, 4166, 2010, 300, 311, 406, 9841, 11, 586, 300, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1241125141808746, "compression_ratio": 1.7148760330578512, "no_caption_prob": 3.5559678508434445e-06}, {"id": 395, "seek": 151038, "start": 1514.14, "end": 1517.64, "text": " Because there's special handling if it's unknown.", "tokens": [50364, 639, 307, 11304, 281, 1520, 337, 439, 264, 661, 2306, 13, 50552, 50552, 1436, 456, 311, 2121, 13175, 498, 309, 311, 9841, 13, 50727, 50727, 407, 286, 519, 341, 307, 411, 1310, 1333, 295, 1080, 1065, 1422, 5102, 300, 2171, 291, 362, 1412, 50992, 50992, 300, 311, 411, 7467, 294, 293, 291, 528, 281, 312, 1075, 281, 11, 797, 11, 291, 458, 11, 411, 321, 600, 668, 10850, 11, 51276, 51276, 291, 528, 281, 1066, 2837, 295, 437, 291, 600, 12785, 13, 51456, 51456, 407, 309, 311, 411, 498, 291, 600, 12785, 300, 291, 362, 257, 4166, 2010, 300, 311, 406, 9841, 11, 586, 300, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1241125141808746, "compression_ratio": 1.7148760330578512, "no_caption_prob": 3.5559678508434445e-06}, {"id": 396, "seek": 151038, "start": 1517.64, "end": 1522.94, "text": " So I think this is like maybe sort of its own sub pattern that sometimes you have data", "tokens": [50364, 639, 307, 11304, 281, 1520, 337, 439, 264, 661, 2306, 13, 50552, 50552, 1436, 456, 311, 2121, 13175, 498, 309, 311, 9841, 13, 50727, 50727, 407, 286, 519, 341, 307, 411, 1310, 1333, 295, 1080, 1065, 1422, 5102, 300, 2171, 291, 362, 1412, 50992, 50992, 300, 311, 411, 7467, 294, 293, 291, 528, 281, 312, 1075, 281, 11, 797, 11, 291, 458, 11, 411, 321, 600, 668, 10850, 11, 51276, 51276, 291, 528, 281, 1066, 2837, 295, 437, 291, 600, 12785, 13, 51456, 51456, 407, 309, 311, 411, 498, 291, 600, 12785, 300, 291, 362, 257, 4166, 2010, 300, 311, 406, 9841, 11, 586, 300, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1241125141808746, "compression_ratio": 1.7148760330578512, "no_caption_prob": 3.5559678508434445e-06}, {"id": 397, "seek": 151038, "start": 1522.94, "end": 1528.6200000000001, "text": " that's like mixed in and you want to be able to, again, you know, like we've been discussing,", "tokens": [50364, 639, 307, 11304, 281, 1520, 337, 439, 264, 661, 2306, 13, 50552, 50552, 1436, 456, 311, 2121, 13175, 498, 309, 311, 9841, 13, 50727, 50727, 407, 286, 519, 341, 307, 411, 1310, 1333, 295, 1080, 1065, 1422, 5102, 300, 2171, 291, 362, 1412, 50992, 50992, 300, 311, 411, 7467, 294, 293, 291, 528, 281, 312, 1075, 281, 11, 797, 11, 291, 458, 11, 411, 321, 600, 668, 10850, 11, 51276, 51276, 291, 528, 281, 1066, 2837, 295, 437, 291, 600, 12785, 13, 51456, 51456, 407, 309, 311, 411, 498, 291, 600, 12785, 300, 291, 362, 257, 4166, 2010, 300, 311, 406, 9841, 11, 586, 300, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1241125141808746, "compression_ratio": 1.7148760330578512, "no_caption_prob": 3.5559678508434445e-06}, {"id": 398, "seek": 151038, "start": 1528.6200000000001, "end": 1532.22, "text": " you want to keep track of what you've proven.", "tokens": [50364, 639, 307, 11304, 281, 1520, 337, 439, 264, 661, 2306, 13, 50552, 50552, 1436, 456, 311, 2121, 13175, 498, 309, 311, 9841, 13, 50727, 50727, 407, 286, 519, 341, 307, 411, 1310, 1333, 295, 1080, 1065, 1422, 5102, 300, 2171, 291, 362, 1412, 50992, 50992, 300, 311, 411, 7467, 294, 293, 291, 528, 281, 312, 1075, 281, 11, 797, 11, 291, 458, 11, 411, 321, 600, 668, 10850, 11, 51276, 51276, 291, 528, 281, 1066, 2837, 295, 437, 291, 600, 12785, 13, 51456, 51456, 407, 309, 311, 411, 498, 291, 600, 12785, 300, 291, 362, 257, 4166, 2010, 300, 311, 406, 9841, 11, 586, 300, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1241125141808746, "compression_ratio": 1.7148760330578512, "no_caption_prob": 3.5559678508434445e-06}, {"id": 399, "seek": 151038, "start": 1532.22, "end": 1537.92, "text": " So it's like if you've proven that you have a document type that's not unknown, now that", "tokens": [50364, 639, 307, 11304, 281, 1520, 337, 439, 264, 661, 2306, 13, 50552, 50552, 1436, 456, 311, 2121, 13175, 498, 309, 311, 9841, 13, 50727, 50727, 407, 286, 519, 341, 307, 411, 1310, 1333, 295, 1080, 1065, 1422, 5102, 300, 2171, 291, 362, 1412, 50992, 50992, 300, 311, 411, 7467, 294, 293, 291, 528, 281, 312, 1075, 281, 11, 797, 11, 291, 458, 11, 411, 321, 600, 668, 10850, 11, 51276, 51276, 291, 528, 281, 1066, 2837, 295, 437, 291, 600, 12785, 13, 51456, 51456, 407, 309, 311, 411, 498, 291, 600, 12785, 300, 291, 362, 257, 4166, 2010, 300, 311, 406, 9841, 11, 586, 300, 51741, 51741], "temperature": 0.0, "avg_logprob": -0.1241125141808746, "compression_ratio": 1.7148760330578512, "no_caption_prob": 3.5559678508434445e-06}, {"id": 400, "seek": 153792, "start": 1537.92, "end": 1542.26, "text": " unknown type is just one of the variants of this big document type.", "tokens": [50364, 9841, 2010, 307, 445, 472, 295, 264, 21669, 295, 341, 955, 4166, 2010, 13, 50581, 50581, 407, 281, 7081, 300, 309, 311, 406, 9841, 11, 411, 456, 311, 572, 1412, 2010, 300, 393, 980, 291, 300, 25534, 13, 50951, 50951, 407, 472, 551, 291, 727, 360, 307, 291, 727, 11, 291, 458, 11, 291, 727, 362, 411, 257, 2570, 4166, 51271, 51271, 2010, 551, 13, 51321, 51321, 583, 550, 498, 291, 393, 362, 9841, 294, 456, 11, 550, 309, 311, 411, 291, 727, 362, 257, 2375, 2010, 51609, 51609, 300, 1619, 309, 311, 257, 2570, 4166, 2010, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07622466367833755, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.4510344954032917e-05}, {"id": 401, "seek": 153792, "start": 1542.26, "end": 1549.66, "text": " So to prove that it's not unknown, like there's no data type that can tell you that constraint.", "tokens": [50364, 9841, 2010, 307, 445, 472, 295, 264, 21669, 295, 341, 955, 4166, 2010, 13, 50581, 50581, 407, 281, 7081, 300, 309, 311, 406, 9841, 11, 411, 456, 311, 572, 1412, 2010, 300, 393, 980, 291, 300, 25534, 13, 50951, 50951, 407, 472, 551, 291, 727, 360, 307, 291, 727, 11, 291, 458, 11, 291, 727, 362, 411, 257, 2570, 4166, 51271, 51271, 2010, 551, 13, 51321, 51321, 583, 550, 498, 291, 393, 362, 9841, 294, 456, 11, 550, 309, 311, 411, 291, 727, 362, 257, 2375, 2010, 51609, 51609, 300, 1619, 309, 311, 257, 2570, 4166, 2010, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07622466367833755, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.4510344954032917e-05}, {"id": 402, "seek": 153792, "start": 1549.66, "end": 1556.0600000000002, "text": " So one thing you could do is you could, you know, you could have like a known document", "tokens": [50364, 9841, 2010, 307, 445, 472, 295, 264, 21669, 295, 341, 955, 4166, 2010, 13, 50581, 50581, 407, 281, 7081, 300, 309, 311, 406, 9841, 11, 411, 456, 311, 572, 1412, 2010, 300, 393, 980, 291, 300, 25534, 13, 50951, 50951, 407, 472, 551, 291, 727, 360, 307, 291, 727, 11, 291, 458, 11, 291, 727, 362, 411, 257, 2570, 4166, 51271, 51271, 2010, 551, 13, 51321, 51321, 583, 550, 498, 291, 393, 362, 9841, 294, 456, 11, 550, 309, 311, 411, 291, 727, 362, 257, 2375, 2010, 51609, 51609, 300, 1619, 309, 311, 257, 2570, 4166, 2010, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07622466367833755, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.4510344954032917e-05}, {"id": 403, "seek": 153792, "start": 1556.0600000000002, "end": 1557.0600000000002, "text": " type thing.", "tokens": [50364, 9841, 2010, 307, 445, 472, 295, 264, 21669, 295, 341, 955, 4166, 2010, 13, 50581, 50581, 407, 281, 7081, 300, 309, 311, 406, 9841, 11, 411, 456, 311, 572, 1412, 2010, 300, 393, 980, 291, 300, 25534, 13, 50951, 50951, 407, 472, 551, 291, 727, 360, 307, 291, 727, 11, 291, 458, 11, 291, 727, 362, 411, 257, 2570, 4166, 51271, 51271, 2010, 551, 13, 51321, 51321, 583, 550, 498, 291, 393, 362, 9841, 294, 456, 11, 550, 309, 311, 411, 291, 727, 362, 257, 2375, 2010, 51609, 51609, 300, 1619, 309, 311, 257, 2570, 4166, 2010, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07622466367833755, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.4510344954032917e-05}, {"id": 404, "seek": 153792, "start": 1557.0600000000002, "end": 1562.8200000000002, "text": " But then if you can have unknown in there, then it's like you could have a custom type", "tokens": [50364, 9841, 2010, 307, 445, 472, 295, 264, 21669, 295, 341, 955, 4166, 2010, 13, 50581, 50581, 407, 281, 7081, 300, 309, 311, 406, 9841, 11, 411, 456, 311, 572, 1412, 2010, 300, 393, 980, 291, 300, 25534, 13, 50951, 50951, 407, 472, 551, 291, 727, 360, 307, 291, 727, 11, 291, 458, 11, 291, 727, 362, 411, 257, 2570, 4166, 51271, 51271, 2010, 551, 13, 51321, 51321, 583, 550, 498, 291, 393, 362, 9841, 294, 456, 11, 550, 309, 311, 411, 291, 727, 362, 257, 2375, 2010, 51609, 51609, 300, 1619, 309, 311, 257, 2570, 4166, 2010, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07622466367833755, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.4510344954032917e-05}, {"id": 405, "seek": 153792, "start": 1562.8200000000002, "end": 1565.28, "text": " that says it's a known document type.", "tokens": [50364, 9841, 2010, 307, 445, 472, 295, 264, 21669, 295, 341, 955, 4166, 2010, 13, 50581, 50581, 407, 281, 7081, 300, 309, 311, 406, 9841, 11, 411, 456, 311, 572, 1412, 2010, 300, 393, 980, 291, 300, 25534, 13, 50951, 50951, 407, 472, 551, 291, 727, 360, 307, 291, 727, 11, 291, 458, 11, 291, 727, 362, 411, 257, 2570, 4166, 51271, 51271, 2010, 551, 13, 51321, 51321, 583, 550, 498, 291, 393, 362, 9841, 294, 456, 11, 550, 309, 311, 411, 291, 727, 362, 257, 2375, 2010, 51609, 51609, 300, 1619, 309, 311, 257, 2570, 4166, 2010, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07622466367833755, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.4510344954032917e-05}, {"id": 406, "seek": 156528, "start": 1565.28, "end": 1569.98, "text": " But if you have a document type type in there, that could include unknown.", "tokens": [50364, 583, 498, 291, 362, 257, 4166, 2010, 2010, 294, 456, 11, 300, 727, 4090, 9841, 13, 50599, 50599, 407, 586, 291, 434, 6264, 13460, 364, 6243, 1785, 13, 50767, 50767, 407, 437, 286, 630, 2602, 307, 286, 2942, 257, 777, 1192, 1496, 4166, 2010, 300, 390, 445, 4166, 51129, 51129, 2010, 293, 4166, 2010, 390, 2139, 9841, 420, 257, 2570, 4166, 2010, 13, 51423, 51423, 865, 13, 51473, 51473, 400, 286, 2942, 257, 4994, 2010, 1219, 2570, 4166, 2010, 13, 51593, 51593, 400, 286, 445, 1890, 439, 295, 264, 21669, 3993, 337, 9841, 293, 829, 309, 666, 456, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.11738926230125057, "compression_ratio": 1.8982300884955752, "no_caption_prob": 8.579218047088943e-07}, {"id": 407, "seek": 156528, "start": 1569.98, "end": 1573.34, "text": " So now you're possibly representing an impossible state.", "tokens": [50364, 583, 498, 291, 362, 257, 4166, 2010, 2010, 294, 456, 11, 300, 727, 4090, 9841, 13, 50599, 50599, 407, 586, 291, 434, 6264, 13460, 364, 6243, 1785, 13, 50767, 50767, 407, 437, 286, 630, 2602, 307, 286, 2942, 257, 777, 1192, 1496, 4166, 2010, 300, 390, 445, 4166, 51129, 51129, 2010, 293, 4166, 2010, 390, 2139, 9841, 420, 257, 2570, 4166, 2010, 13, 51423, 51423, 865, 13, 51473, 51473, 400, 286, 2942, 257, 4994, 2010, 1219, 2570, 4166, 2010, 13, 51593, 51593, 400, 286, 445, 1890, 439, 295, 264, 21669, 3993, 337, 9841, 293, 829, 309, 666, 456, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.11738926230125057, "compression_ratio": 1.8982300884955752, "no_caption_prob": 8.579218047088943e-07}, {"id": 408, "seek": 156528, "start": 1573.34, "end": 1580.58, "text": " So what I did instead is I created a new top level document type that was just document", "tokens": [50364, 583, 498, 291, 362, 257, 4166, 2010, 2010, 294, 456, 11, 300, 727, 4090, 9841, 13, 50599, 50599, 407, 586, 291, 434, 6264, 13460, 364, 6243, 1785, 13, 50767, 50767, 407, 437, 286, 630, 2602, 307, 286, 2942, 257, 777, 1192, 1496, 4166, 2010, 300, 390, 445, 4166, 51129, 51129, 2010, 293, 4166, 2010, 390, 2139, 9841, 420, 257, 2570, 4166, 2010, 13, 51423, 51423, 865, 13, 51473, 51473, 400, 286, 2942, 257, 4994, 2010, 1219, 2570, 4166, 2010, 13, 51593, 51593, 400, 286, 445, 1890, 439, 295, 264, 21669, 3993, 337, 9841, 293, 829, 309, 666, 456, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.11738926230125057, "compression_ratio": 1.8982300884955752, "no_caption_prob": 8.579218047088943e-07}, {"id": 409, "seek": 156528, "start": 1580.58, "end": 1586.46, "text": " type and document type was either unknown or a known document type.", "tokens": [50364, 583, 498, 291, 362, 257, 4166, 2010, 2010, 294, 456, 11, 300, 727, 4090, 9841, 13, 50599, 50599, 407, 586, 291, 434, 6264, 13460, 364, 6243, 1785, 13, 50767, 50767, 407, 437, 286, 630, 2602, 307, 286, 2942, 257, 777, 1192, 1496, 4166, 2010, 300, 390, 445, 4166, 51129, 51129, 2010, 293, 4166, 2010, 390, 2139, 9841, 420, 257, 2570, 4166, 2010, 13, 51423, 51423, 865, 13, 51473, 51473, 400, 286, 2942, 257, 4994, 2010, 1219, 2570, 4166, 2010, 13, 51593, 51593, 400, 286, 445, 1890, 439, 295, 264, 21669, 3993, 337, 9841, 293, 829, 309, 666, 456, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.11738926230125057, "compression_ratio": 1.8982300884955752, "no_caption_prob": 8.579218047088943e-07}, {"id": 410, "seek": 156528, "start": 1586.46, "end": 1587.46, "text": " Yeah.", "tokens": [50364, 583, 498, 291, 362, 257, 4166, 2010, 2010, 294, 456, 11, 300, 727, 4090, 9841, 13, 50599, 50599, 407, 586, 291, 434, 6264, 13460, 364, 6243, 1785, 13, 50767, 50767, 407, 437, 286, 630, 2602, 307, 286, 2942, 257, 777, 1192, 1496, 4166, 2010, 300, 390, 445, 4166, 51129, 51129, 2010, 293, 4166, 2010, 390, 2139, 9841, 420, 257, 2570, 4166, 2010, 13, 51423, 51423, 865, 13, 51473, 51473, 400, 286, 2942, 257, 4994, 2010, 1219, 2570, 4166, 2010, 13, 51593, 51593, 400, 286, 445, 1890, 439, 295, 264, 21669, 3993, 337, 9841, 293, 829, 309, 666, 456, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.11738926230125057, "compression_ratio": 1.8982300884955752, "no_caption_prob": 8.579218047088943e-07}, {"id": 411, "seek": 156528, "start": 1587.46, "end": 1589.86, "text": " And I created a separate type called known document type.", "tokens": [50364, 583, 498, 291, 362, 257, 4166, 2010, 2010, 294, 456, 11, 300, 727, 4090, 9841, 13, 50599, 50599, 407, 586, 291, 434, 6264, 13460, 364, 6243, 1785, 13, 50767, 50767, 407, 437, 286, 630, 2602, 307, 286, 2942, 257, 777, 1192, 1496, 4166, 2010, 300, 390, 445, 4166, 51129, 51129, 2010, 293, 4166, 2010, 390, 2139, 9841, 420, 257, 2570, 4166, 2010, 13, 51423, 51423, 865, 13, 51473, 51473, 400, 286, 2942, 257, 4994, 2010, 1219, 2570, 4166, 2010, 13, 51593, 51593, 400, 286, 445, 1890, 439, 295, 264, 21669, 3993, 337, 9841, 293, 829, 309, 666, 456, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.11738926230125057, "compression_ratio": 1.8982300884955752, "no_caption_prob": 8.579218047088943e-07}, {"id": 412, "seek": 156528, "start": 1589.86, "end": 1594.42, "text": " And I just took all of the variants except for unknown and put it into there.", "tokens": [50364, 583, 498, 291, 362, 257, 4166, 2010, 2010, 294, 456, 11, 300, 727, 4090, 9841, 13, 50599, 50599, 407, 586, 291, 434, 6264, 13460, 364, 6243, 1785, 13, 50767, 50767, 407, 437, 286, 630, 2602, 307, 286, 2942, 257, 777, 1192, 1496, 4166, 2010, 300, 390, 445, 4166, 51129, 51129, 2010, 293, 4166, 2010, 390, 2139, 9841, 420, 257, 2570, 4166, 2010, 13, 51423, 51423, 865, 13, 51473, 51473, 400, 286, 2942, 257, 4994, 2010, 1219, 2570, 4166, 2010, 13, 51593, 51593, 400, 286, 445, 1890, 439, 295, 264, 21669, 3993, 337, 9841, 293, 829, 309, 666, 456, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.11738926230125057, "compression_ratio": 1.8982300884955752, "no_caption_prob": 8.579218047088943e-07}, {"id": 413, "seek": 159442, "start": 1594.42, "end": 1599.46, "text": " And so now you can assert in certain functions that you have a known document type, in which", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 414, "seek": 159442, "start": 1599.46, "end": 1605.5600000000002, "text": " case you don't need to check if document type is unknown, then handle it this special way.", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 415, "seek": 159442, "start": 1605.5600000000002, "end": 1609.6200000000001, "text": " If you have known document type as the type of your function, you don't have to think", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 416, "seek": 159442, "start": 1609.6200000000001, "end": 1610.6200000000001, "text": " about that case.", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 417, "seek": 159442, "start": 1610.6200000000001, "end": 1614.5, "text": " Yeah, you've checked it once and you don't care about it afterwards.", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 418, "seek": 159442, "start": 1614.5, "end": 1615.66, "text": " Yeah, exactly.", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 419, "seek": 159442, "start": 1615.66, "end": 1619.3000000000002, "text": " And I think that this pattern comes up.", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 420, "seek": 159442, "start": 1619.3000000000002, "end": 1624.0800000000002, "text": " Maybe you have like, like I find this is quite common that you'll have different custom type", "tokens": [50364, 400, 370, 586, 291, 393, 19810, 294, 1629, 6828, 300, 291, 362, 257, 2570, 4166, 2010, 11, 294, 597, 50616, 50616, 1389, 291, 500, 380, 643, 281, 1520, 498, 4166, 2010, 307, 9841, 11, 550, 4813, 309, 341, 2121, 636, 13, 50921, 50921, 759, 291, 362, 2570, 4166, 2010, 382, 264, 2010, 295, 428, 2445, 11, 291, 500, 380, 362, 281, 519, 51124, 51124, 466, 300, 1389, 13, 51174, 51174, 865, 11, 291, 600, 10033, 309, 1564, 293, 291, 500, 380, 1127, 466, 309, 10543, 13, 51368, 51368, 865, 11, 2293, 13, 51426, 51426, 400, 286, 519, 300, 341, 5102, 1487, 493, 13, 51608, 51608, 2704, 291, 362, 411, 11, 411, 286, 915, 341, 307, 1596, 2689, 300, 291, 603, 362, 819, 2375, 2010, 51847, 51847], "temperature": 0.0, "avg_logprob": -0.13880406320095062, "compression_ratio": 1.862962962962963, "no_caption_prob": 1.2098622619305388e-06}, {"id": 421, "seek": 162408, "start": 1624.08, "end": 1630.1, "text": " variants that have bits of data, you know, and if you know that you have these bits of", "tokens": [50364, 21669, 300, 362, 9239, 295, 1412, 11, 291, 458, 11, 293, 498, 291, 458, 300, 291, 362, 613, 9239, 295, 50665, 50665, 1412, 11, 411, 1310, 291, 362, 411, 257, 8341, 4195, 575, 1629, 9239, 295, 1412, 293, 257, 27231, 294, 4195, 50953, 50953, 575, 1629, 9239, 295, 1412, 293, 24236, 4195, 575, 1629, 9239, 295, 1412, 13, 51145, 51145, 583, 498, 291, 528, 281, 2837, 300, 11, 498, 291, 600, 10033, 293, 264, 787, 5022, 300, 366, 4350, 281, 536, 51387, 51387, 341, 3028, 366, 24236, 5022, 11, 498, 291, 362, 411, 257, 4195, 2375, 2010, 365, 729, 1045, 819, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.10144137427920387, "compression_ratio": 2.099009900990099, "no_caption_prob": 6.708976434310898e-05}, {"id": 422, "seek": 162408, "start": 1630.1, "end": 1635.86, "text": " data, like maybe you have like a guest user has certain bits of data and a logged in user", "tokens": [50364, 21669, 300, 362, 9239, 295, 1412, 11, 291, 458, 11, 293, 498, 291, 458, 300, 291, 362, 613, 9239, 295, 50665, 50665, 1412, 11, 411, 1310, 291, 362, 411, 257, 8341, 4195, 575, 1629, 9239, 295, 1412, 293, 257, 27231, 294, 4195, 50953, 50953, 575, 1629, 9239, 295, 1412, 293, 24236, 4195, 575, 1629, 9239, 295, 1412, 13, 51145, 51145, 583, 498, 291, 528, 281, 2837, 300, 11, 498, 291, 600, 10033, 293, 264, 787, 5022, 300, 366, 4350, 281, 536, 51387, 51387, 341, 3028, 366, 24236, 5022, 11, 498, 291, 362, 411, 257, 4195, 2375, 2010, 365, 729, 1045, 819, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.10144137427920387, "compression_ratio": 2.099009900990099, "no_caption_prob": 6.708976434310898e-05}, {"id": 423, "seek": 162408, "start": 1635.86, "end": 1639.6999999999998, "text": " has certain bits of data and admin user has certain bits of data.", "tokens": [50364, 21669, 300, 362, 9239, 295, 1412, 11, 291, 458, 11, 293, 498, 291, 458, 300, 291, 362, 613, 9239, 295, 50665, 50665, 1412, 11, 411, 1310, 291, 362, 411, 257, 8341, 4195, 575, 1629, 9239, 295, 1412, 293, 257, 27231, 294, 4195, 50953, 50953, 575, 1629, 9239, 295, 1412, 293, 24236, 4195, 575, 1629, 9239, 295, 1412, 13, 51145, 51145, 583, 498, 291, 528, 281, 2837, 300, 11, 498, 291, 600, 10033, 293, 264, 787, 5022, 300, 366, 4350, 281, 536, 51387, 51387, 341, 3028, 366, 24236, 5022, 11, 498, 291, 362, 411, 257, 4195, 2375, 2010, 365, 729, 1045, 819, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.10144137427920387, "compression_ratio": 2.099009900990099, "no_caption_prob": 6.708976434310898e-05}, {"id": 424, "seek": 162408, "start": 1639.6999999999998, "end": 1644.54, "text": " But if you want to track that, if you've checked and the only users that are allowed to see", "tokens": [50364, 21669, 300, 362, 9239, 295, 1412, 11, 291, 458, 11, 293, 498, 291, 458, 300, 291, 362, 613, 9239, 295, 50665, 50665, 1412, 11, 411, 1310, 291, 362, 411, 257, 8341, 4195, 575, 1629, 9239, 295, 1412, 293, 257, 27231, 294, 4195, 50953, 50953, 575, 1629, 9239, 295, 1412, 293, 24236, 4195, 575, 1629, 9239, 295, 1412, 13, 51145, 51145, 583, 498, 291, 528, 281, 2837, 300, 11, 498, 291, 600, 10033, 293, 264, 787, 5022, 300, 366, 4350, 281, 536, 51387, 51387, 341, 3028, 366, 24236, 5022, 11, 498, 291, 362, 411, 257, 4195, 2375, 2010, 365, 729, 1045, 819, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.10144137427920387, "compression_ratio": 2.099009900990099, "no_caption_prob": 6.708976434310898e-05}, {"id": 425, "seek": 162408, "start": 1644.54, "end": 1650.8999999999999, "text": " this page are admin users, if you have like a user custom type with those three different", "tokens": [50364, 21669, 300, 362, 9239, 295, 1412, 11, 291, 458, 11, 293, 498, 291, 458, 300, 291, 362, 613, 9239, 295, 50665, 50665, 1412, 11, 411, 1310, 291, 362, 411, 257, 8341, 4195, 575, 1629, 9239, 295, 1412, 293, 257, 27231, 294, 4195, 50953, 50953, 575, 1629, 9239, 295, 1412, 293, 24236, 4195, 575, 1629, 9239, 295, 1412, 13, 51145, 51145, 583, 498, 291, 528, 281, 2837, 300, 11, 498, 291, 600, 10033, 293, 264, 787, 5022, 300, 366, 4350, 281, 536, 51387, 51387, 341, 3028, 366, 24236, 5022, 11, 498, 291, 362, 411, 257, 4195, 2375, 2010, 365, 729, 1045, 819, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.10144137427920387, "compression_ratio": 2.099009900990099, "no_caption_prob": 6.708976434310898e-05}, {"id": 426, "seek": 165090, "start": 1650.9, "end": 1658.5, "text": " variants, admin, logged in and guest, you can't use those variants to say the view function", "tokens": [50364, 21669, 11, 24236, 11, 27231, 294, 293, 8341, 11, 291, 393, 380, 764, 729, 21669, 281, 584, 264, 1910, 2445, 50744, 50744, 337, 341, 3028, 7029, 364, 24236, 4195, 570, 309, 311, 257, 17501, 13, 50914, 50914, 467, 311, 406, 257, 2010, 13, 51082, 51082, 407, 286, 519, 456, 311, 1333, 295, 411, 257, 11, 286, 500, 380, 458, 11, 1310, 341, 307, 411, 364, 2699, 76, 1895, 578, 3662, 51282, 51282, 6532, 281, 1333, 295, 747, 264, 9239, 295, 1412, 295, 411, 24236, 4195, 293, 550, 445, 8947, 484, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.11644345333701686, "compression_ratio": 1.5972222222222223, "no_caption_prob": 1.1300672667857725e-05}, {"id": 427, "seek": 165090, "start": 1658.5, "end": 1661.9, "text": " for this page requires an admin user because it's a variant.", "tokens": [50364, 21669, 11, 24236, 11, 27231, 294, 293, 8341, 11, 291, 393, 380, 764, 729, 21669, 281, 584, 264, 1910, 2445, 50744, 50744, 337, 341, 3028, 7029, 364, 24236, 4195, 570, 309, 311, 257, 17501, 13, 50914, 50914, 467, 311, 406, 257, 2010, 13, 51082, 51082, 407, 286, 519, 456, 311, 1333, 295, 411, 257, 11, 286, 500, 380, 458, 11, 1310, 341, 307, 411, 364, 2699, 76, 1895, 578, 3662, 51282, 51282, 6532, 281, 1333, 295, 747, 264, 9239, 295, 1412, 295, 411, 24236, 4195, 293, 550, 445, 8947, 484, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.11644345333701686, "compression_ratio": 1.5972222222222223, "no_caption_prob": 1.1300672667857725e-05}, {"id": 428, "seek": 165090, "start": 1661.9, "end": 1665.26, "text": " It's not a type.", "tokens": [50364, 21669, 11, 24236, 11, 27231, 294, 293, 8341, 11, 291, 393, 380, 764, 729, 21669, 281, 584, 264, 1910, 2445, 50744, 50744, 337, 341, 3028, 7029, 364, 24236, 4195, 570, 309, 311, 257, 17501, 13, 50914, 50914, 467, 311, 406, 257, 2010, 13, 51082, 51082, 407, 286, 519, 456, 311, 1333, 295, 411, 257, 11, 286, 500, 380, 458, 11, 1310, 341, 307, 411, 364, 2699, 76, 1895, 578, 3662, 51282, 51282, 6532, 281, 1333, 295, 747, 264, 9239, 295, 1412, 295, 411, 24236, 4195, 293, 550, 445, 8947, 484, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.11644345333701686, "compression_ratio": 1.5972222222222223, "no_caption_prob": 1.1300672667857725e-05}, {"id": 429, "seek": 165090, "start": 1665.26, "end": 1669.26, "text": " So I think there's sort of like a, I don't know, maybe this is like an Elm refactoring", "tokens": [50364, 21669, 11, 24236, 11, 27231, 294, 293, 8341, 11, 291, 393, 380, 764, 729, 21669, 281, 584, 264, 1910, 2445, 50744, 50744, 337, 341, 3028, 7029, 364, 24236, 4195, 570, 309, 311, 257, 17501, 13, 50914, 50914, 467, 311, 406, 257, 2010, 13, 51082, 51082, 407, 286, 519, 456, 311, 1333, 295, 411, 257, 11, 286, 500, 380, 458, 11, 1310, 341, 307, 411, 364, 2699, 76, 1895, 578, 3662, 51282, 51282, 6532, 281, 1333, 295, 747, 264, 9239, 295, 1412, 295, 411, 24236, 4195, 293, 550, 445, 8947, 484, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.11644345333701686, "compression_ratio": 1.5972222222222223, "no_caption_prob": 1.1300672667857725e-05}, {"id": 430, "seek": 165090, "start": 1669.26, "end": 1676.02, "text": " technique to sort of take the bits of data of like admin user and then just extract out,", "tokens": [50364, 21669, 11, 24236, 11, 27231, 294, 293, 8341, 11, 291, 393, 380, 764, 729, 21669, 281, 584, 264, 1910, 2445, 50744, 50744, 337, 341, 3028, 7029, 364, 24236, 4195, 570, 309, 311, 257, 17501, 13, 50914, 50914, 467, 311, 406, 257, 2010, 13, 51082, 51082, 407, 286, 519, 456, 311, 1333, 295, 411, 257, 11, 286, 500, 380, 458, 11, 1310, 341, 307, 411, 364, 2699, 76, 1895, 578, 3662, 51282, 51282, 6532, 281, 1333, 295, 747, 264, 9239, 295, 1412, 295, 411, 24236, 4195, 293, 550, 445, 8947, 484, 11, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.11644345333701686, "compression_ratio": 1.5972222222222223, "no_caption_prob": 1.1300672667857725e-05}, {"id": 431, "seek": 167602, "start": 1676.02, "end": 1682.42, "text": " you know, so if you have like admin user and it has either a record with bits of data or", "tokens": [50364, 291, 458, 11, 370, 498, 291, 362, 411, 24236, 4195, 293, 309, 575, 2139, 257, 2136, 365, 9239, 295, 1412, 420, 50684, 50684, 2535, 304, 4190, 294, 264, 47479, 11, 286, 519, 300, 311, 411, 257, 1481, 1895, 578, 3662, 281, 411, 2235, 51001, 51001, 484, 729, 9239, 295, 1412, 11, 1968, 309, 311, 257, 2136, 420, 2535, 304, 47479, 4190, 11, 293, 550, 51284, 51284, 1884, 257, 777, 2375, 2010, 1219, 24236, 4195, 13, 51440, 51440, 400, 586, 291, 362, 2010, 4195, 6915, 24236, 4195, 11, 24236, 4195, 13, 51752, 51752, 467, 311, 733, 295, 3657, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09087046454934512, "compression_ratio": 1.8262910798122065, "no_caption_prob": 2.840881461452227e-05}, {"id": 432, "seek": 167602, "start": 1682.42, "end": 1688.76, "text": " positional values in the constructor, I think that's like a nice refactoring to like pull", "tokens": [50364, 291, 458, 11, 370, 498, 291, 362, 411, 24236, 4195, 293, 309, 575, 2139, 257, 2136, 365, 9239, 295, 1412, 420, 50684, 50684, 2535, 304, 4190, 294, 264, 47479, 11, 286, 519, 300, 311, 411, 257, 1481, 1895, 578, 3662, 281, 411, 2235, 51001, 51001, 484, 729, 9239, 295, 1412, 11, 1968, 309, 311, 257, 2136, 420, 2535, 304, 47479, 4190, 11, 293, 550, 51284, 51284, 1884, 257, 777, 2375, 2010, 1219, 24236, 4195, 13, 51440, 51440, 400, 586, 291, 362, 2010, 4195, 6915, 24236, 4195, 11, 24236, 4195, 13, 51752, 51752, 467, 311, 733, 295, 3657, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09087046454934512, "compression_ratio": 1.8262910798122065, "no_caption_prob": 2.840881461452227e-05}, {"id": 433, "seek": 167602, "start": 1688.76, "end": 1694.42, "text": " out those bits of data, whether it's a record or positional constructor values, and then", "tokens": [50364, 291, 458, 11, 370, 498, 291, 362, 411, 24236, 4195, 293, 309, 575, 2139, 257, 2136, 365, 9239, 295, 1412, 420, 50684, 50684, 2535, 304, 4190, 294, 264, 47479, 11, 286, 519, 300, 311, 411, 257, 1481, 1895, 578, 3662, 281, 411, 2235, 51001, 51001, 484, 729, 9239, 295, 1412, 11, 1968, 309, 311, 257, 2136, 420, 2535, 304, 47479, 4190, 11, 293, 550, 51284, 51284, 1884, 257, 777, 2375, 2010, 1219, 24236, 4195, 13, 51440, 51440, 400, 586, 291, 362, 2010, 4195, 6915, 24236, 4195, 11, 24236, 4195, 13, 51752, 51752, 467, 311, 733, 295, 3657, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09087046454934512, "compression_ratio": 1.8262910798122065, "no_caption_prob": 2.840881461452227e-05}, {"id": 434, "seek": 167602, "start": 1694.42, "end": 1697.54, "text": " create a new custom type called admin user.", "tokens": [50364, 291, 458, 11, 370, 498, 291, 362, 411, 24236, 4195, 293, 309, 575, 2139, 257, 2136, 365, 9239, 295, 1412, 420, 50684, 50684, 2535, 304, 4190, 294, 264, 47479, 11, 286, 519, 300, 311, 411, 257, 1481, 1895, 578, 3662, 281, 411, 2235, 51001, 51001, 484, 729, 9239, 295, 1412, 11, 1968, 309, 311, 257, 2136, 420, 2535, 304, 47479, 4190, 11, 293, 550, 51284, 51284, 1884, 257, 777, 2375, 2010, 1219, 24236, 4195, 13, 51440, 51440, 400, 586, 291, 362, 2010, 4195, 6915, 24236, 4195, 11, 24236, 4195, 13, 51752, 51752, 467, 311, 733, 295, 3657, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09087046454934512, "compression_ratio": 1.8262910798122065, "no_caption_prob": 2.840881461452227e-05}, {"id": 435, "seek": 167602, "start": 1697.54, "end": 1703.78, "text": " And now you have type user equals admin user, admin user.", "tokens": [50364, 291, 458, 11, 370, 498, 291, 362, 411, 24236, 4195, 293, 309, 575, 2139, 257, 2136, 365, 9239, 295, 1412, 420, 50684, 50684, 2535, 304, 4190, 294, 264, 47479, 11, 286, 519, 300, 311, 411, 257, 1481, 1895, 578, 3662, 281, 411, 2235, 51001, 51001, 484, 729, 9239, 295, 1412, 11, 1968, 309, 311, 257, 2136, 420, 2535, 304, 47479, 4190, 11, 293, 550, 51284, 51284, 1884, 257, 777, 2375, 2010, 1219, 24236, 4195, 13, 51440, 51440, 400, 586, 291, 362, 2010, 4195, 6915, 24236, 4195, 11, 24236, 4195, 13, 51752, 51752, 467, 311, 733, 295, 3657, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09087046454934512, "compression_ratio": 1.8262910798122065, "no_caption_prob": 2.840881461452227e-05}, {"id": 436, "seek": 167602, "start": 1703.78, "end": 1704.78, "text": " It's kind of weird.", "tokens": [50364, 291, 458, 11, 370, 498, 291, 362, 411, 24236, 4195, 293, 309, 575, 2139, 257, 2136, 365, 9239, 295, 1412, 420, 50684, 50684, 2535, 304, 4190, 294, 264, 47479, 11, 286, 519, 300, 311, 411, 257, 1481, 1895, 578, 3662, 281, 411, 2235, 51001, 51001, 484, 729, 9239, 295, 1412, 11, 1968, 309, 311, 257, 2136, 420, 2535, 304, 47479, 4190, 11, 293, 550, 51284, 51284, 1884, 257, 777, 2375, 2010, 1219, 24236, 4195, 13, 51440, 51440, 400, 586, 291, 362, 2010, 4195, 6915, 24236, 4195, 11, 24236, 4195, 13, 51752, 51752, 467, 311, 733, 295, 3657, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09087046454934512, "compression_ratio": 1.8262910798122065, "no_caption_prob": 2.840881461452227e-05}, {"id": 437, "seek": 170478, "start": 1704.78, "end": 1708.5, "text": " But yeah, exactly.", "tokens": [50364, 583, 1338, 11, 2293, 13, 50550, 50550, 2704, 291, 362, 512, 1333, 295, 13494, 25290, 10286, 300, 1669, 309, 1570, 11411, 456, 11, 50850, 50850, 457, 300, 311, 257, 588, 2689, 4316, 300, 286, 915, 300, 291, 3624, 2837, 295, 597, 17501, 291, 362, 51126, 51126, 293, 291, 528, 281, 17045, 428, 4846, 17695, 293, 291, 393, 380, 360, 300, 570, 309, 311, 9376, 51422, 51422, 294, 341, 17501, 11, 597, 291, 393, 380, 1520, 337, 364, 2699, 76, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.13097600709824336, "compression_ratio": 1.5971563981042654, "no_caption_prob": 5.86278974878951e-06}, {"id": 438, "seek": 170478, "start": 1708.5, "end": 1714.5, "text": " Maybe you have some sort of clever naming convention that makes it less awkward there,", "tokens": [50364, 583, 1338, 11, 2293, 13, 50550, 50550, 2704, 291, 362, 512, 1333, 295, 13494, 25290, 10286, 300, 1669, 309, 1570, 11411, 456, 11, 50850, 50850, 457, 300, 311, 257, 588, 2689, 4316, 300, 286, 915, 300, 291, 3624, 2837, 295, 597, 17501, 291, 362, 51126, 51126, 293, 291, 528, 281, 17045, 428, 4846, 17695, 293, 291, 393, 380, 360, 300, 570, 309, 311, 9376, 51422, 51422, 294, 341, 17501, 11, 597, 291, 393, 380, 1520, 337, 364, 2699, 76, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.13097600709824336, "compression_ratio": 1.5971563981042654, "no_caption_prob": 5.86278974878951e-06}, {"id": 439, "seek": 170478, "start": 1714.5, "end": 1720.02, "text": " but that's a very common smell that I find that you lose track of which variant you have", "tokens": [50364, 583, 1338, 11, 2293, 13, 50550, 50550, 2704, 291, 362, 512, 1333, 295, 13494, 25290, 10286, 300, 1669, 309, 1570, 11411, 456, 11, 50850, 50850, 457, 300, 311, 257, 588, 2689, 4316, 300, 286, 915, 300, 291, 3624, 2837, 295, 597, 17501, 291, 362, 51126, 51126, 293, 291, 528, 281, 17045, 428, 4846, 17695, 293, 291, 393, 380, 360, 300, 570, 309, 311, 9376, 51422, 51422, 294, 341, 17501, 11, 597, 291, 393, 380, 1520, 337, 364, 2699, 76, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.13097600709824336, "compression_ratio": 1.5971563981042654, "no_caption_prob": 5.86278974878951e-06}, {"id": 440, "seek": 170478, "start": 1720.02, "end": 1725.94, "text": " and you want to strengthen your input assumptions and you can't do that because it's locked", "tokens": [50364, 583, 1338, 11, 2293, 13, 50550, 50550, 2704, 291, 362, 512, 1333, 295, 13494, 25290, 10286, 300, 1669, 309, 1570, 11411, 456, 11, 50850, 50850, 457, 300, 311, 257, 588, 2689, 4316, 300, 286, 915, 300, 291, 3624, 2837, 295, 597, 17501, 291, 362, 51126, 51126, 293, 291, 528, 281, 17045, 428, 4846, 17695, 293, 291, 393, 380, 360, 300, 570, 309, 311, 9376, 51422, 51422, 294, 341, 17501, 11, 597, 291, 393, 380, 1520, 337, 364, 2699, 76, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.13097600709824336, "compression_ratio": 1.5971563981042654, "no_caption_prob": 5.86278974878951e-06}, {"id": 441, "seek": 170478, "start": 1725.94, "end": 1729.74, "text": " in this variant, which you can't check for an Elm.", "tokens": [50364, 583, 1338, 11, 2293, 13, 50550, 50550, 2704, 291, 362, 512, 1333, 295, 13494, 25290, 10286, 300, 1669, 309, 1570, 11411, 456, 11, 50850, 50850, 457, 300, 311, 257, 588, 2689, 4316, 300, 286, 915, 300, 291, 3624, 2837, 295, 597, 17501, 291, 362, 51126, 51126, 293, 291, 528, 281, 17045, 428, 4846, 17695, 293, 291, 393, 380, 360, 300, 570, 309, 311, 9376, 51422, 51422, 294, 341, 17501, 11, 597, 291, 393, 380, 1520, 337, 364, 2699, 76, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.13097600709824336, "compression_ratio": 1.5971563981042654, "no_caption_prob": 5.86278974878951e-06}, {"id": 442, "seek": 172974, "start": 1729.74, "end": 1735.7, "text": " You don't have to extract the admin data at the top level where you defined the user.", "tokens": [50364, 509, 500, 380, 362, 281, 8947, 264, 24236, 1412, 412, 264, 1192, 1496, 689, 291, 7642, 264, 4195, 13, 50662, 50662, 509, 393, 445, 1884, 257, 777, 24236, 4195, 1412, 420, 2035, 1101, 1315, 291, 915, 16143, 412, 51082, 51082, 264, 4914, 689, 291, 643, 309, 13, 51222, 51222, 407, 291, 500, 380, 643, 281, 1895, 15104, 428, 1379, 3861, 445, 570, 341, 472, 1389, 13, 51464, 51464, 1779, 13, 51514, 51514, 663, 311, 257, 665, 935, 13, 51564, 51564, 583, 498, 309, 1669, 2020, 294, 661, 3190, 11, 550, 1338, 11, 538, 439, 1355, 11, 1767, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13599104094273837, "compression_ratio": 1.6329113924050633, "no_caption_prob": 3.0234687073971145e-05}, {"id": 443, "seek": 172974, "start": 1735.7, "end": 1744.1, "text": " You can just create a new admin user data or whatever better name you find locally at", "tokens": [50364, 509, 500, 380, 362, 281, 8947, 264, 24236, 1412, 412, 264, 1192, 1496, 689, 291, 7642, 264, 4195, 13, 50662, 50662, 509, 393, 445, 1884, 257, 777, 24236, 4195, 1412, 420, 2035, 1101, 1315, 291, 915, 16143, 412, 51082, 51082, 264, 4914, 689, 291, 643, 309, 13, 51222, 51222, 407, 291, 500, 380, 643, 281, 1895, 15104, 428, 1379, 3861, 445, 570, 341, 472, 1389, 13, 51464, 51464, 1779, 13, 51514, 51514, 663, 311, 257, 665, 935, 13, 51564, 51564, 583, 498, 309, 1669, 2020, 294, 661, 3190, 11, 550, 1338, 11, 538, 439, 1355, 11, 1767, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13599104094273837, "compression_ratio": 1.6329113924050633, "no_caption_prob": 3.0234687073971145e-05}, {"id": 444, "seek": 172974, "start": 1744.1, "end": 1746.9, "text": " the location where you need it.", "tokens": [50364, 509, 500, 380, 362, 281, 8947, 264, 24236, 1412, 412, 264, 1192, 1496, 689, 291, 7642, 264, 4195, 13, 50662, 50662, 509, 393, 445, 1884, 257, 777, 24236, 4195, 1412, 420, 2035, 1101, 1315, 291, 915, 16143, 412, 51082, 51082, 264, 4914, 689, 291, 643, 309, 13, 51222, 51222, 407, 291, 500, 380, 643, 281, 1895, 15104, 428, 1379, 3861, 445, 570, 341, 472, 1389, 13, 51464, 51464, 1779, 13, 51514, 51514, 663, 311, 257, 665, 935, 13, 51564, 51564, 583, 498, 309, 1669, 2020, 294, 661, 3190, 11, 550, 1338, 11, 538, 439, 1355, 11, 1767, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13599104094273837, "compression_ratio": 1.6329113924050633, "no_caption_prob": 3.0234687073971145e-05}, {"id": 445, "seek": 172974, "start": 1746.9, "end": 1751.74, "text": " So you don't need to refactor your whole application just because this one case.", "tokens": [50364, 509, 500, 380, 362, 281, 8947, 264, 24236, 1412, 412, 264, 1192, 1496, 689, 291, 7642, 264, 4195, 13, 50662, 50662, 509, 393, 445, 1884, 257, 777, 24236, 4195, 1412, 420, 2035, 1101, 1315, 291, 915, 16143, 412, 51082, 51082, 264, 4914, 689, 291, 643, 309, 13, 51222, 51222, 407, 291, 500, 380, 643, 281, 1895, 15104, 428, 1379, 3861, 445, 570, 341, 472, 1389, 13, 51464, 51464, 1779, 13, 51514, 51514, 663, 311, 257, 665, 935, 13, 51564, 51564, 583, 498, 309, 1669, 2020, 294, 661, 3190, 11, 550, 1338, 11, 538, 439, 1355, 11, 1767, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13599104094273837, "compression_ratio": 1.6329113924050633, "no_caption_prob": 3.0234687073971145e-05}, {"id": 446, "seek": 172974, "start": 1751.74, "end": 1752.74, "text": " Right.", "tokens": [50364, 509, 500, 380, 362, 281, 8947, 264, 24236, 1412, 412, 264, 1192, 1496, 689, 291, 7642, 264, 4195, 13, 50662, 50662, 509, 393, 445, 1884, 257, 777, 24236, 4195, 1412, 420, 2035, 1101, 1315, 291, 915, 16143, 412, 51082, 51082, 264, 4914, 689, 291, 643, 309, 13, 51222, 51222, 407, 291, 500, 380, 643, 281, 1895, 15104, 428, 1379, 3861, 445, 570, 341, 472, 1389, 13, 51464, 51464, 1779, 13, 51514, 51514, 663, 311, 257, 665, 935, 13, 51564, 51564, 583, 498, 309, 1669, 2020, 294, 661, 3190, 11, 550, 1338, 11, 538, 439, 1355, 11, 1767, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13599104094273837, "compression_ratio": 1.6329113924050633, "no_caption_prob": 3.0234687073971145e-05}, {"id": 447, "seek": 172974, "start": 1752.74, "end": 1753.74, "text": " That's a good point.", "tokens": [50364, 509, 500, 380, 362, 281, 8947, 264, 24236, 1412, 412, 264, 1192, 1496, 689, 291, 7642, 264, 4195, 13, 50662, 50662, 509, 393, 445, 1884, 257, 777, 24236, 4195, 1412, 420, 2035, 1101, 1315, 291, 915, 16143, 412, 51082, 51082, 264, 4914, 689, 291, 643, 309, 13, 51222, 51222, 407, 291, 500, 380, 643, 281, 1895, 15104, 428, 1379, 3861, 445, 570, 341, 472, 1389, 13, 51464, 51464, 1779, 13, 51514, 51514, 663, 311, 257, 665, 935, 13, 51564, 51564, 583, 498, 309, 1669, 2020, 294, 661, 3190, 11, 550, 1338, 11, 538, 439, 1355, 11, 1767, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13599104094273837, "compression_ratio": 1.6329113924050633, "no_caption_prob": 3.0234687073971145e-05}, {"id": 448, "seek": 172974, "start": 1753.74, "end": 1758.74, "text": " But if it makes sense in other places, then yeah, by all means, please do.", "tokens": [50364, 509, 500, 380, 362, 281, 8947, 264, 24236, 1412, 412, 264, 1192, 1496, 689, 291, 7642, 264, 4195, 13, 50662, 50662, 509, 393, 445, 1884, 257, 777, 24236, 4195, 1412, 420, 2035, 1101, 1315, 291, 915, 16143, 412, 51082, 51082, 264, 4914, 689, 291, 643, 309, 13, 51222, 51222, 407, 291, 500, 380, 643, 281, 1895, 15104, 428, 1379, 3861, 445, 570, 341, 472, 1389, 13, 51464, 51464, 1779, 13, 51514, 51514, 663, 311, 257, 665, 935, 13, 51564, 51564, 583, 498, 309, 1669, 2020, 294, 661, 3190, 11, 550, 1338, 11, 538, 439, 1355, 11, 1767, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13599104094273837, "compression_ratio": 1.6329113924050633, "no_caption_prob": 3.0234687073971145e-05}, {"id": 449, "seek": 175874, "start": 1758.74, "end": 1759.74, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 400, 286, 519, 300, 311, 257, 588, 665, 935, 13, 50518, 50518, 400, 286, 519, 1310, 309, 5607, 493, 1071, 1168, 11, 597, 307, 577, 360, 291, 1969, 264, 8016, 293, 50896, 50896, 264, 1333, 295, 2677, 1757, 1345, 293, 3760, 295, 300, 1412, 30, 51118, 51118, 407, 512, 1412, 291, 528, 281, 2371, 11, 321, 7152, 341, 294, 527, 42687, 3467, 3500, 13, 51372, 51372, 407, 309, 1062, 312, 411, 257, 2093, 3825, 1230, 300, 291, 528, 281, 312, 5026, 466, 577, 309, 311, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11879615373508905, "compression_ratio": 1.5955555555555556, "no_caption_prob": 2.2827694920124486e-05}, {"id": 450, "seek": 175874, "start": 1759.74, "end": 1761.82, "text": " And I think that's a very good point.", "tokens": [50364, 1779, 13, 50414, 50414, 400, 286, 519, 300, 311, 257, 588, 665, 935, 13, 50518, 50518, 400, 286, 519, 1310, 309, 5607, 493, 1071, 1168, 11, 597, 307, 577, 360, 291, 1969, 264, 8016, 293, 50896, 50896, 264, 1333, 295, 2677, 1757, 1345, 293, 3760, 295, 300, 1412, 30, 51118, 51118, 407, 512, 1412, 291, 528, 281, 2371, 11, 321, 7152, 341, 294, 527, 42687, 3467, 3500, 13, 51372, 51372, 407, 309, 1062, 312, 411, 257, 2093, 3825, 1230, 300, 291, 528, 281, 312, 5026, 466, 577, 309, 311, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11879615373508905, "compression_ratio": 1.5955555555555556, "no_caption_prob": 2.2827694920124486e-05}, {"id": 451, "seek": 175874, "start": 1761.82, "end": 1769.38, "text": " And I think maybe it brings up another question, which is how do you control the creation and", "tokens": [50364, 1779, 13, 50414, 50414, 400, 286, 519, 300, 311, 257, 588, 665, 935, 13, 50518, 50518, 400, 286, 519, 1310, 309, 5607, 493, 1071, 1168, 11, 597, 307, 577, 360, 291, 1969, 264, 8016, 293, 50896, 50896, 264, 1333, 295, 2677, 1757, 1345, 293, 3760, 295, 300, 1412, 30, 51118, 51118, 407, 512, 1412, 291, 528, 281, 2371, 11, 321, 7152, 341, 294, 527, 42687, 3467, 3500, 13, 51372, 51372, 407, 309, 1062, 312, 411, 257, 2093, 3825, 1230, 300, 291, 528, 281, 312, 5026, 466, 577, 309, 311, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11879615373508905, "compression_ratio": 1.5955555555555556, "no_caption_prob": 2.2827694920124486e-05}, {"id": 452, "seek": 175874, "start": 1769.38, "end": 1773.82, "text": " the sort of destructuring and reading of that data?", "tokens": [50364, 1779, 13, 50414, 50414, 400, 286, 519, 300, 311, 257, 588, 665, 935, 13, 50518, 50518, 400, 286, 519, 1310, 309, 5607, 493, 1071, 1168, 11, 597, 307, 577, 360, 291, 1969, 264, 8016, 293, 50896, 50896, 264, 1333, 295, 2677, 1757, 1345, 293, 3760, 295, 300, 1412, 30, 51118, 51118, 407, 512, 1412, 291, 528, 281, 2371, 11, 321, 7152, 341, 294, 527, 42687, 3467, 3500, 13, 51372, 51372, 407, 309, 1062, 312, 411, 257, 2093, 3825, 1230, 300, 291, 528, 281, 312, 5026, 466, 577, 309, 311, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11879615373508905, "compression_ratio": 1.5955555555555556, "no_caption_prob": 2.2827694920124486e-05}, {"id": 453, "seek": 175874, "start": 1773.82, "end": 1778.9, "text": " So some data you want to protect, we discussed this in our opaque types episode.", "tokens": [50364, 1779, 13, 50414, 50414, 400, 286, 519, 300, 311, 257, 588, 665, 935, 13, 50518, 50518, 400, 286, 519, 1310, 309, 5607, 493, 1071, 1168, 11, 597, 307, 577, 360, 291, 1969, 264, 8016, 293, 50896, 50896, 264, 1333, 295, 2677, 1757, 1345, 293, 3760, 295, 300, 1412, 30, 51118, 51118, 407, 512, 1412, 291, 528, 281, 2371, 11, 321, 7152, 341, 294, 527, 42687, 3467, 3500, 13, 51372, 51372, 407, 309, 1062, 312, 411, 257, 2093, 3825, 1230, 300, 291, 528, 281, 312, 5026, 466, 577, 309, 311, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11879615373508905, "compression_ratio": 1.5955555555555556, "no_caption_prob": 2.2827694920124486e-05}, {"id": 454, "seek": 175874, "start": 1778.9, "end": 1783.7, "text": " So it might be like a social security number that you want to be careful about how it's", "tokens": [50364, 1779, 13, 50414, 50414, 400, 286, 519, 300, 311, 257, 588, 665, 935, 13, 50518, 50518, 400, 286, 519, 1310, 309, 5607, 493, 1071, 1168, 11, 597, 307, 577, 360, 291, 1969, 264, 8016, 293, 50896, 50896, 264, 1333, 295, 2677, 1757, 1345, 293, 3760, 295, 300, 1412, 30, 51118, 51118, 407, 512, 1412, 291, 528, 281, 2371, 11, 321, 7152, 341, 294, 527, 42687, 3467, 3500, 13, 51372, 51372, 407, 309, 1062, 312, 411, 257, 2093, 3825, 1230, 300, 291, 528, 281, 312, 5026, 466, 577, 309, 311, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11879615373508905, "compression_ratio": 1.5955555555555556, "no_caption_prob": 2.2827694920124486e-05}, {"id": 455, "seek": 178370, "start": 1783.7, "end": 1788.94, "text": " presented and make sure it's encrypted before it's sent over HTTP or whatever.", "tokens": [50364, 8212, 293, 652, 988, 309, 311, 36663, 949, 309, 311, 2279, 670, 33283, 420, 2035, 13, 50626, 50626, 583, 291, 611, 528, 281, 2371, 1333, 295, 2295, 1496, 1412, 11, 558, 30, 50788, 50788, 1042, 11, 286, 2041, 1071, 636, 281, 4813, 12316, 2295, 1496, 1412, 307, 281, 406, 652, 309, 2295, 1496, 11, 51044, 51044, 281, 7019, 309, 294, 257, 2010, 300, 8855, 264, 15302, 13, 51182, 51182, 407, 286, 2041, 309, 5946, 322, 689, 291, 528, 300, 37765, 281, 312, 13, 51422, 51422, 1171, 1365, 11, 498, 291, 362, 364, 7348, 300, 311, 445, 364, 560, 420, 1310, 291, 362, 411, 364, 24236, 4195, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11000465913252397, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.7108106223749928e-05}, {"id": 456, "seek": 178370, "start": 1788.94, "end": 1792.18, "text": " But you also want to protect sort of low level data, right?", "tokens": [50364, 8212, 293, 652, 988, 309, 311, 36663, 949, 309, 311, 2279, 670, 33283, 420, 2035, 13, 50626, 50626, 583, 291, 611, 528, 281, 2371, 1333, 295, 2295, 1496, 1412, 11, 558, 30, 50788, 50788, 1042, 11, 286, 2041, 1071, 636, 281, 4813, 12316, 2295, 1496, 1412, 307, 281, 406, 652, 309, 2295, 1496, 11, 51044, 51044, 281, 7019, 309, 294, 257, 2010, 300, 8855, 264, 15302, 13, 51182, 51182, 407, 286, 2041, 309, 5946, 322, 689, 291, 528, 300, 37765, 281, 312, 13, 51422, 51422, 1171, 1365, 11, 498, 291, 362, 364, 7348, 300, 311, 445, 364, 560, 420, 1310, 291, 362, 411, 364, 24236, 4195, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11000465913252397, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.7108106223749928e-05}, {"id": 457, "seek": 178370, "start": 1792.18, "end": 1797.3, "text": " Well, I guess another way to handle protecting low level data is to not make it low level,", "tokens": [50364, 8212, 293, 652, 988, 309, 311, 36663, 949, 309, 311, 2279, 670, 33283, 420, 2035, 13, 50626, 50626, 583, 291, 611, 528, 281, 2371, 1333, 295, 2295, 1496, 1412, 11, 558, 30, 50788, 50788, 1042, 11, 286, 2041, 1071, 636, 281, 4813, 12316, 2295, 1496, 1412, 307, 281, 406, 652, 309, 2295, 1496, 11, 51044, 51044, 281, 7019, 309, 294, 257, 2010, 300, 8855, 264, 15302, 13, 51182, 51182, 407, 286, 2041, 309, 5946, 322, 689, 291, 528, 300, 37765, 281, 312, 13, 51422, 51422, 1171, 1365, 11, 498, 291, 362, 364, 7348, 300, 311, 445, 364, 560, 420, 1310, 291, 362, 411, 364, 24236, 4195, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11000465913252397, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.7108106223749928e-05}, {"id": 458, "seek": 178370, "start": 1797.3, "end": 1800.06, "text": " to wrap it in a type that represents the assumption.", "tokens": [50364, 8212, 293, 652, 988, 309, 311, 36663, 949, 309, 311, 2279, 670, 33283, 420, 2035, 13, 50626, 50626, 583, 291, 611, 528, 281, 2371, 1333, 295, 2295, 1496, 1412, 11, 558, 30, 50788, 50788, 1042, 11, 286, 2041, 1071, 636, 281, 4813, 12316, 2295, 1496, 1412, 307, 281, 406, 652, 309, 2295, 1496, 11, 51044, 51044, 281, 7019, 309, 294, 257, 2010, 300, 8855, 264, 15302, 13, 51182, 51182, 407, 286, 2041, 309, 5946, 322, 689, 291, 528, 300, 37765, 281, 312, 13, 51422, 51422, 1171, 1365, 11, 498, 291, 362, 364, 7348, 300, 311, 445, 364, 560, 420, 1310, 291, 362, 411, 364, 24236, 4195, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11000465913252397, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.7108106223749928e-05}, {"id": 459, "seek": 178370, "start": 1800.06, "end": 1804.8600000000001, "text": " So I guess it depends on where you want that abstraction to be.", "tokens": [50364, 8212, 293, 652, 988, 309, 311, 36663, 949, 309, 311, 2279, 670, 33283, 420, 2035, 13, 50626, 50626, 583, 291, 611, 528, 281, 2371, 1333, 295, 2295, 1496, 1412, 11, 558, 30, 50788, 50788, 1042, 11, 286, 2041, 1071, 636, 281, 4813, 12316, 2295, 1496, 1412, 307, 281, 406, 652, 309, 2295, 1496, 11, 51044, 51044, 281, 7019, 309, 294, 257, 2010, 300, 8855, 264, 15302, 13, 51182, 51182, 407, 286, 2041, 309, 5946, 322, 689, 291, 528, 300, 37765, 281, 312, 13, 51422, 51422, 1171, 1365, 11, 498, 291, 362, 364, 7348, 300, 311, 445, 364, 560, 420, 1310, 291, 362, 411, 364, 24236, 4195, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11000465913252397, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.7108106223749928e-05}, {"id": 460, "seek": 178370, "start": 1804.8600000000001, "end": 1810.98, "text": " For example, if you have an ID that's just an int or maybe you have like an admin user", "tokens": [50364, 8212, 293, 652, 988, 309, 311, 36663, 949, 309, 311, 2279, 670, 33283, 420, 2035, 13, 50626, 50626, 583, 291, 611, 528, 281, 2371, 1333, 295, 2295, 1496, 1412, 11, 558, 30, 50788, 50788, 1042, 11, 286, 2041, 1071, 636, 281, 4813, 12316, 2295, 1496, 1412, 307, 281, 406, 652, 309, 2295, 1496, 11, 51044, 51044, 281, 7019, 309, 294, 257, 2010, 300, 8855, 264, 15302, 13, 51182, 51182, 407, 286, 2041, 309, 5946, 322, 689, 291, 528, 300, 37765, 281, 312, 13, 51422, 51422, 1171, 1365, 11, 498, 291, 362, 364, 7348, 300, 311, 445, 364, 560, 420, 1310, 291, 362, 411, 364, 24236, 4195, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11000465913252397, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.7108106223749928e-05}, {"id": 461, "seek": 181098, "start": 1810.98, "end": 1819.02, "text": " ID type or a user ID type, you can have more low level data if it's encapsulated in its", "tokens": [50364, 7348, 2010, 420, 257, 4195, 7348, 2010, 11, 291, 393, 362, 544, 2295, 1496, 1412, 498, 309, 311, 38745, 6987, 294, 1080, 50766, 50766, 1065, 10088, 300, 311, 10594, 11, 300, 291, 393, 380, 3838, 1401, 264, 1412, 490, 13, 50970, 50970, 509, 393, 787, 483, 309, 294, 264, 6828, 300, 366, 9495, 538, 264, 24236, 4195, 10088, 13, 51194, 51194, 407, 456, 311, 264, 1168, 295, 360, 291, 362, 2105, 281, 6920, 1412, 11, 597, 815, 312, 886, 2295, 1496, 51457, 51457, 281, 764, 30, 51540, 51540, 400, 550, 360, 291, 362, 2105, 281, 1884, 300, 1412, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.06187931542257661, "compression_ratio": 1.7092511013215859, "no_caption_prob": 1.6187374058063142e-05}, {"id": 462, "seek": 181098, "start": 1819.02, "end": 1823.1, "text": " own module that's protected, that you can't directly read the data from.", "tokens": [50364, 7348, 2010, 420, 257, 4195, 7348, 2010, 11, 291, 393, 362, 544, 2295, 1496, 1412, 498, 309, 311, 38745, 6987, 294, 1080, 50766, 50766, 1065, 10088, 300, 311, 10594, 11, 300, 291, 393, 380, 3838, 1401, 264, 1412, 490, 13, 50970, 50970, 509, 393, 787, 483, 309, 294, 264, 6828, 300, 366, 9495, 538, 264, 24236, 4195, 10088, 13, 51194, 51194, 407, 456, 311, 264, 1168, 295, 360, 291, 362, 2105, 281, 6920, 1412, 11, 597, 815, 312, 886, 2295, 1496, 51457, 51457, 281, 764, 30, 51540, 51540, 400, 550, 360, 291, 362, 2105, 281, 1884, 300, 1412, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.06187931542257661, "compression_ratio": 1.7092511013215859, "no_caption_prob": 1.6187374058063142e-05}, {"id": 463, "seek": 181098, "start": 1823.1, "end": 1827.58, "text": " You can only get it in the functions that are exposed by the admin user module.", "tokens": [50364, 7348, 2010, 420, 257, 4195, 7348, 2010, 11, 291, 393, 362, 544, 2295, 1496, 1412, 498, 309, 311, 38745, 6987, 294, 1080, 50766, 50766, 1065, 10088, 300, 311, 10594, 11, 300, 291, 393, 380, 3838, 1401, 264, 1412, 490, 13, 50970, 50970, 509, 393, 787, 483, 309, 294, 264, 6828, 300, 366, 9495, 538, 264, 24236, 4195, 10088, 13, 51194, 51194, 407, 456, 311, 264, 1168, 295, 360, 291, 362, 2105, 281, 6920, 1412, 11, 597, 815, 312, 886, 2295, 1496, 51457, 51457, 281, 764, 30, 51540, 51540, 400, 550, 360, 291, 362, 2105, 281, 1884, 300, 1412, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.06187931542257661, "compression_ratio": 1.7092511013215859, "no_caption_prob": 1.6187374058063142e-05}, {"id": 464, "seek": 181098, "start": 1827.58, "end": 1832.84, "text": " So there's the question of do you have access to internal data, which may be too low level", "tokens": [50364, 7348, 2010, 420, 257, 4195, 7348, 2010, 11, 291, 393, 362, 544, 2295, 1496, 1412, 498, 309, 311, 38745, 6987, 294, 1080, 50766, 50766, 1065, 10088, 300, 311, 10594, 11, 300, 291, 393, 380, 3838, 1401, 264, 1412, 490, 13, 50970, 50970, 509, 393, 787, 483, 309, 294, 264, 6828, 300, 366, 9495, 538, 264, 24236, 4195, 10088, 13, 51194, 51194, 407, 456, 311, 264, 1168, 295, 360, 291, 362, 2105, 281, 6920, 1412, 11, 597, 815, 312, 886, 2295, 1496, 51457, 51457, 281, 764, 30, 51540, 51540, 400, 550, 360, 291, 362, 2105, 281, 1884, 300, 1412, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.06187931542257661, "compression_ratio": 1.7092511013215859, "no_caption_prob": 1.6187374058063142e-05}, {"id": 465, "seek": 181098, "start": 1832.84, "end": 1834.5, "text": " to use?", "tokens": [50364, 7348, 2010, 420, 257, 4195, 7348, 2010, 11, 291, 393, 362, 544, 2295, 1496, 1412, 498, 309, 311, 38745, 6987, 294, 1080, 50766, 50766, 1065, 10088, 300, 311, 10594, 11, 300, 291, 393, 380, 3838, 1401, 264, 1412, 490, 13, 50970, 50970, 509, 393, 787, 483, 309, 294, 264, 6828, 300, 366, 9495, 538, 264, 24236, 4195, 10088, 13, 51194, 51194, 407, 456, 311, 264, 1168, 295, 360, 291, 362, 2105, 281, 6920, 1412, 11, 597, 815, 312, 886, 2295, 1496, 51457, 51457, 281, 764, 30, 51540, 51540, 400, 550, 360, 291, 362, 2105, 281, 1884, 300, 1412, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.06187931542257661, "compression_ratio": 1.7092511013215859, "no_caption_prob": 1.6187374058063142e-05}, {"id": 466, "seek": 181098, "start": 1834.5, "end": 1837.58, "text": " And then do you have access to create that data?", "tokens": [50364, 7348, 2010, 420, 257, 4195, 7348, 2010, 11, 291, 393, 362, 544, 2295, 1496, 1412, 498, 309, 311, 38745, 6987, 294, 1080, 50766, 50766, 1065, 10088, 300, 311, 10594, 11, 300, 291, 393, 380, 3838, 1401, 264, 1412, 490, 13, 50970, 50970, 509, 393, 787, 483, 309, 294, 264, 6828, 300, 366, 9495, 538, 264, 24236, 4195, 10088, 13, 51194, 51194, 407, 456, 311, 264, 1168, 295, 360, 291, 362, 2105, 281, 6920, 1412, 11, 597, 815, 312, 886, 2295, 1496, 51457, 51457, 281, 764, 30, 51540, 51540, 400, 550, 360, 291, 362, 2105, 281, 1884, 300, 1412, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.06187931542257661, "compression_ratio": 1.7092511013215859, "no_caption_prob": 1.6187374058063142e-05}, {"id": 467, "seek": 183758, "start": 1837.58, "end": 1843.04, "text": " So if you can just create an admin user, what's to stop you from taking the regular user data", "tokens": [50364, 407, 498, 291, 393, 445, 1884, 364, 24236, 4195, 11, 437, 311, 281, 1590, 291, 490, 1940, 264, 3890, 4195, 1412, 50637, 50637, 291, 362, 293, 291, 434, 411, 11, 286, 445, 528, 281, 536, 498, 341, 24236, 4195, 3028, 1985, 13, 50866, 50866, 407, 286, 478, 516, 281, 1884, 364, 24236, 4195, 490, 264, 2190, 27231, 294, 4195, 570, 286, 500, 380, 51068, 51068, 528, 281, 4813, 729, 661, 3331, 586, 13, 51172, 51172, 400, 370, 291, 747, 729, 9239, 295, 1412, 293, 550, 291, 1320, 294, 364, 6707, 6798, 337, 341, 472, 551, 51418, 51418, 291, 643, 293, 257, 11, 291, 458, 11, 51542, 51542, 14724, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1718317048739543, "compression_ratio": 1.7355371900826446, "no_caption_prob": 1.2218866686453111e-05}, {"id": 468, "seek": 183758, "start": 1843.04, "end": 1847.62, "text": " you have and you're like, I just want to see if this admin user page works.", "tokens": [50364, 407, 498, 291, 393, 445, 1884, 364, 24236, 4195, 11, 437, 311, 281, 1590, 291, 490, 1940, 264, 3890, 4195, 1412, 50637, 50637, 291, 362, 293, 291, 434, 411, 11, 286, 445, 528, 281, 536, 498, 341, 24236, 4195, 3028, 1985, 13, 50866, 50866, 407, 286, 478, 516, 281, 1884, 364, 24236, 4195, 490, 264, 2190, 27231, 294, 4195, 570, 286, 500, 380, 51068, 51068, 528, 281, 4813, 729, 661, 3331, 586, 13, 51172, 51172, 400, 370, 291, 747, 729, 9239, 295, 1412, 293, 550, 291, 1320, 294, 364, 6707, 6798, 337, 341, 472, 551, 51418, 51418, 291, 643, 293, 257, 11, 291, 458, 11, 51542, 51542, 14724, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1718317048739543, "compression_ratio": 1.7355371900826446, "no_caption_prob": 1.2218866686453111e-05}, {"id": 469, "seek": 183758, "start": 1847.62, "end": 1851.6599999999999, "text": " So I'm going to create an admin user from the current logged in user because I don't", "tokens": [50364, 407, 498, 291, 393, 445, 1884, 364, 24236, 4195, 11, 437, 311, 281, 1590, 291, 490, 1940, 264, 3890, 4195, 1412, 50637, 50637, 291, 362, 293, 291, 434, 411, 11, 286, 445, 528, 281, 536, 498, 341, 24236, 4195, 3028, 1985, 13, 50866, 50866, 407, 286, 478, 516, 281, 1884, 364, 24236, 4195, 490, 264, 2190, 27231, 294, 4195, 570, 286, 500, 380, 51068, 51068, 528, 281, 4813, 729, 661, 3331, 586, 13, 51172, 51172, 400, 370, 291, 747, 729, 9239, 295, 1412, 293, 550, 291, 1320, 294, 364, 6707, 6798, 337, 341, 472, 551, 51418, 51418, 291, 643, 293, 257, 11, 291, 458, 11, 51542, 51542, 14724, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1718317048739543, "compression_ratio": 1.7355371900826446, "no_caption_prob": 1.2218866686453111e-05}, {"id": 470, "seek": 183758, "start": 1851.6599999999999, "end": 1853.74, "text": " want to handle those other cases now.", "tokens": [50364, 407, 498, 291, 393, 445, 1884, 364, 24236, 4195, 11, 437, 311, 281, 1590, 291, 490, 1940, 264, 3890, 4195, 1412, 50637, 50637, 291, 362, 293, 291, 434, 411, 11, 286, 445, 528, 281, 536, 498, 341, 24236, 4195, 3028, 1985, 13, 50866, 50866, 407, 286, 478, 516, 281, 1884, 364, 24236, 4195, 490, 264, 2190, 27231, 294, 4195, 570, 286, 500, 380, 51068, 51068, 528, 281, 4813, 729, 661, 3331, 586, 13, 51172, 51172, 400, 370, 291, 747, 729, 9239, 295, 1412, 293, 550, 291, 1320, 294, 364, 6707, 6798, 337, 341, 472, 551, 51418, 51418, 291, 643, 293, 257, 11, 291, 458, 11, 51542, 51542, 14724, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1718317048739543, "compression_ratio": 1.7355371900826446, "no_caption_prob": 1.2218866686453111e-05}, {"id": 471, "seek": 183758, "start": 1853.74, "end": 1858.6599999999999, "text": " And so you take those bits of data and then you pass in an empty string for this one thing", "tokens": [50364, 407, 498, 291, 393, 445, 1884, 364, 24236, 4195, 11, 437, 311, 281, 1590, 291, 490, 1940, 264, 3890, 4195, 1412, 50637, 50637, 291, 362, 293, 291, 434, 411, 11, 286, 445, 528, 281, 536, 498, 341, 24236, 4195, 3028, 1985, 13, 50866, 50866, 407, 286, 478, 516, 281, 1884, 364, 24236, 4195, 490, 264, 2190, 27231, 294, 4195, 570, 286, 500, 380, 51068, 51068, 528, 281, 4813, 729, 661, 3331, 586, 13, 51172, 51172, 400, 370, 291, 747, 729, 9239, 295, 1412, 293, 550, 291, 1320, 294, 364, 6707, 6798, 337, 341, 472, 551, 51418, 51418, 291, 643, 293, 257, 11, 291, 458, 11, 51542, 51542, 14724, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1718317048739543, "compression_ratio": 1.7355371900826446, "no_caption_prob": 1.2218866686453111e-05}, {"id": 472, "seek": 183758, "start": 1858.6599999999999, "end": 1861.1399999999999, "text": " you need and a, you know,", "tokens": [50364, 407, 498, 291, 393, 445, 1884, 364, 24236, 4195, 11, 437, 311, 281, 1590, 291, 490, 1940, 264, 3890, 4195, 1412, 50637, 50637, 291, 362, 293, 291, 434, 411, 11, 286, 445, 528, 281, 536, 498, 341, 24236, 4195, 3028, 1985, 13, 50866, 50866, 407, 286, 478, 516, 281, 1884, 364, 24236, 4195, 490, 264, 2190, 27231, 294, 4195, 570, 286, 500, 380, 51068, 51068, 528, 281, 4813, 729, 661, 3331, 586, 13, 51172, 51172, 400, 370, 291, 747, 729, 9239, 295, 1412, 293, 550, 291, 1320, 294, 364, 6707, 6798, 337, 341, 472, 551, 51418, 51418, 291, 643, 293, 257, 11, 291, 458, 11, 51542, 51542, 14724, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1718317048739543, "compression_ratio": 1.7355371900826446, "no_caption_prob": 1.2218866686453111e-05}, {"id": 473, "seek": 183758, "start": 1861.1399999999999, "end": 1862.1399999999999, "text": " Beautiful.", "tokens": [50364, 407, 498, 291, 393, 445, 1884, 364, 24236, 4195, 11, 437, 311, 281, 1590, 291, 490, 1940, 264, 3890, 4195, 1412, 50637, 50637, 291, 362, 293, 291, 434, 411, 11, 286, 445, 528, 281, 536, 498, 341, 24236, 4195, 3028, 1985, 13, 50866, 50866, 407, 286, 478, 516, 281, 1884, 364, 24236, 4195, 490, 264, 2190, 27231, 294, 4195, 570, 286, 500, 380, 51068, 51068, 528, 281, 4813, 729, 661, 3331, 586, 13, 51172, 51172, 400, 370, 291, 747, 729, 9239, 295, 1412, 293, 550, 291, 1320, 294, 364, 6707, 6798, 337, 341, 472, 551, 51418, 51418, 291, 643, 293, 257, 11, 291, 458, 11, 51542, 51542, 14724, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1718317048739543, "compression_ratio": 1.7355371900826446, "no_caption_prob": 1.2218866686453111e-05}, {"id": 474, "seek": 186214, "start": 1862.14, "end": 1869.18, "text": " So you still want to make impossible states impossible and you still want to use this", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 475, "seek": 186214, "start": 1869.18, "end": 1875.5400000000002, "text": " sort of gatekeeper approach of protecting how you create and consume data.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 476, "seek": 186214, "start": 1875.5400000000002, "end": 1876.5400000000002, "text": " Yeah.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 477, "seek": 186214, "start": 1876.5400000000002, "end": 1881.5800000000002, "text": " So you would basically have a parser function to create your admin.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 478, "seek": 186214, "start": 1881.5800000000002, "end": 1882.5800000000002, "text": " Exactly.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 479, "seek": 186214, "start": 1882.5800000000002, "end": 1883.5800000000002, "text": " In a way.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 480, "seek": 186214, "start": 1883.5800000000002, "end": 1884.5800000000002, "text": " That's right.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 481, "seek": 186214, "start": 1884.5800000000002, "end": 1885.5800000000002, "text": " Yeah.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 482, "seek": 186214, "start": 1885.5800000000002, "end": 1887.1000000000001, "text": " So how would you go about this?", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 483, "seek": 186214, "start": 1887.1000000000001, "end": 1889.8200000000002, "text": " You have a condition that you want to check.", "tokens": [50364, 407, 291, 920, 528, 281, 652, 6243, 4368, 6243, 293, 291, 920, 528, 281, 764, 341, 50716, 50716, 1333, 295, 8539, 23083, 3109, 295, 12316, 577, 291, 1884, 293, 14732, 1412, 13, 51034, 51034, 865, 13, 51084, 51084, 407, 291, 576, 1936, 362, 257, 21156, 260, 2445, 281, 1884, 428, 24236, 13, 51336, 51336, 7587, 13, 51386, 51386, 682, 257, 636, 13, 51436, 51436, 663, 311, 558, 13, 51486, 51486, 865, 13, 51536, 51536, 407, 577, 576, 291, 352, 466, 341, 30, 51612, 51612, 509, 362, 257, 4188, 300, 291, 528, 281, 1520, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.17099633508799028, "compression_ratio": 1.6587677725118484, "no_caption_prob": 9.66598599916324e-06}, {"id": 484, "seek": 188982, "start": 1889.82, "end": 1897.4199999999998, "text": " So you want to branch off based on some condition, but there's no way to extract information", "tokens": [50364, 407, 291, 528, 281, 9819, 766, 2361, 322, 512, 4188, 11, 457, 456, 311, 572, 636, 281, 8947, 1589, 50744, 50744, 300, 307, 295, 257, 819, 2010, 813, 437, 291, 362, 294, 264, 661, 4188, 13, 51092, 51092, 509, 576, 362, 257, 1315, 11, 337, 5197, 11, 597, 307, 257, 6798, 19273, 264, 700, 1315, 293, 51324, 51324, 264, 1036, 1315, 295, 2010, 6798, 294, 472, 4188, 293, 264, 661, 4188, 291, 576, 445, 362, 51590, 51590, 264, 700, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12720690334544463, "compression_ratio": 1.824742268041237, "no_caption_prob": 5.8624304983823095e-06}, {"id": 485, "seek": 188982, "start": 1897.4199999999998, "end": 1904.3799999999999, "text": " that is of a different type than what you have in the other condition.", "tokens": [50364, 407, 291, 528, 281, 9819, 766, 2361, 322, 512, 4188, 11, 457, 456, 311, 572, 636, 281, 8947, 1589, 50744, 50744, 300, 307, 295, 257, 819, 2010, 813, 437, 291, 362, 294, 264, 661, 4188, 13, 51092, 51092, 509, 576, 362, 257, 1315, 11, 337, 5197, 11, 597, 307, 257, 6798, 19273, 264, 700, 1315, 293, 51324, 51324, 264, 1036, 1315, 295, 2010, 6798, 294, 472, 4188, 293, 264, 661, 4188, 291, 576, 445, 362, 51590, 51590, 264, 700, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12720690334544463, "compression_ratio": 1.824742268041237, "no_caption_prob": 5.8624304983823095e-06}, {"id": 486, "seek": 188982, "start": 1904.3799999999999, "end": 1909.02, "text": " You would have a name, for instance, which is a string containing the first name and", "tokens": [50364, 407, 291, 528, 281, 9819, 766, 2361, 322, 512, 4188, 11, 457, 456, 311, 572, 636, 281, 8947, 1589, 50744, 50744, 300, 307, 295, 257, 819, 2010, 813, 437, 291, 362, 294, 264, 661, 4188, 13, 51092, 51092, 509, 576, 362, 257, 1315, 11, 337, 5197, 11, 597, 307, 257, 6798, 19273, 264, 700, 1315, 293, 51324, 51324, 264, 1036, 1315, 295, 2010, 6798, 294, 472, 4188, 293, 264, 661, 4188, 291, 576, 445, 362, 51590, 51590, 264, 700, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12720690334544463, "compression_ratio": 1.824742268041237, "no_caption_prob": 5.8624304983823095e-06}, {"id": 487, "seek": 188982, "start": 1909.02, "end": 1914.34, "text": " the last name of type string in one condition and the other condition you would just have", "tokens": [50364, 407, 291, 528, 281, 9819, 766, 2361, 322, 512, 4188, 11, 457, 456, 311, 572, 636, 281, 8947, 1589, 50744, 50744, 300, 307, 295, 257, 819, 2010, 813, 437, 291, 362, 294, 264, 661, 4188, 13, 51092, 51092, 509, 576, 362, 257, 1315, 11, 337, 5197, 11, 597, 307, 257, 6798, 19273, 264, 700, 1315, 293, 51324, 51324, 264, 1036, 1315, 295, 2010, 6798, 294, 472, 4188, 293, 264, 661, 4188, 291, 576, 445, 362, 51590, 51590, 264, 700, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12720690334544463, "compression_ratio": 1.824742268041237, "no_caption_prob": 5.8624304983823095e-06}, {"id": 488, "seek": 188982, "start": 1914.34, "end": 1915.9399999999998, "text": " the first name.", "tokens": [50364, 407, 291, 528, 281, 9819, 766, 2361, 322, 512, 4188, 11, 457, 456, 311, 572, 636, 281, 8947, 1589, 50744, 50744, 300, 307, 295, 257, 819, 2010, 813, 437, 291, 362, 294, 264, 661, 4188, 13, 51092, 51092, 509, 576, 362, 257, 1315, 11, 337, 5197, 11, 597, 307, 257, 6798, 19273, 264, 700, 1315, 293, 51324, 51324, 264, 1036, 1315, 295, 2010, 6798, 294, 472, 4188, 293, 264, 661, 4188, 291, 576, 445, 362, 51590, 51590, 264, 700, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.12720690334544463, "compression_ratio": 1.824742268041237, "no_caption_prob": 5.8624304983823095e-06}, {"id": 489, "seek": 191594, "start": 1915.94, "end": 1921.98, "text": " So in both cases, you would have a string formatted just like you want to, but they're", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 490, "seek": 191594, "start": 1921.98, "end": 1923.44, "text": " the same types.", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 491, "seek": 191594, "start": 1923.44, "end": 1924.8200000000002, "text": " How would you go about that?", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 492, "seek": 191594, "start": 1924.8200000000002, "end": 1930.9, "text": " My guiding principle for cases like that is always wrap early, unwrap late.", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 493, "seek": 191594, "start": 1930.9, "end": 1934.5800000000002, "text": " You know, we talked about that, I think, in the opaque types episode.", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 494, "seek": 191594, "start": 1934.5800000000002, "end": 1940.54, "text": " And I'm always thinking like you want to have, I think Alexis talks about this in her article", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 495, "seek": 191594, "start": 1940.54, "end": 1941.54, "text": " as well.", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 496, "seek": 191594, "start": 1941.54, "end": 1945.1000000000001, "text": " You want to have the most pure representation of the data.", "tokens": [50364, 407, 294, 1293, 3331, 11, 291, 576, 362, 257, 6798, 1254, 32509, 445, 411, 291, 528, 281, 11, 457, 436, 434, 50666, 50666, 264, 912, 3467, 13, 50739, 50739, 1012, 576, 291, 352, 466, 300, 30, 50808, 50808, 1222, 25061, 8665, 337, 3331, 411, 300, 307, 1009, 7019, 2440, 11, 14853, 4007, 3469, 13, 51112, 51112, 509, 458, 11, 321, 2825, 466, 300, 11, 286, 519, 11, 294, 264, 42687, 3467, 3500, 13, 51296, 51296, 400, 286, 478, 1009, 1953, 411, 291, 528, 281, 362, 11, 286, 519, 39826, 6686, 466, 341, 294, 720, 7222, 51594, 51594, 382, 731, 13, 51644, 51644, 509, 528, 281, 362, 264, 881, 6075, 10290, 295, 264, 1412, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.12529679476204564, "compression_ratio": 1.71484375, "no_caption_prob": 1.1300657206447795e-05}, {"id": 497, "seek": 194510, "start": 1945.1, "end": 1950.54, "text": " She talks about this approach of like letting the data types drive the implementation, not", "tokens": [50364, 1240, 6686, 466, 341, 3109, 295, 411, 8295, 264, 1412, 3467, 3332, 264, 11420, 11, 406, 50636, 50636, 1419, 264, 11420, 3332, 264, 1412, 3467, 300, 291, 6964, 13, 50788, 50788, 407, 519, 466, 264, 1412, 3467, 493, 1868, 13, 50954, 50954, 663, 311, 1333, 295, 411, 257, 1412, 15983, 6532, 293, 12543, 307, 300, 291, 519, 466, 428, 1412, 51298, 51298, 3467, 293, 519, 466, 428, 7157, 1412, 3467, 11, 22277, 1333, 295, 33906, 293, 1895, 15104, 428, 51598, 51598, 1412, 3467, 281, 652, 552, 5109, 428, 18491, 1101, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16632787804854543, "compression_ratio": 2.042452830188679, "no_caption_prob": 6.240883067221148e-06}, {"id": 498, "seek": 194510, "start": 1950.54, "end": 1953.58, "text": " having the implementation drive the data types that you define.", "tokens": [50364, 1240, 6686, 466, 341, 3109, 295, 411, 8295, 264, 1412, 3467, 3332, 264, 11420, 11, 406, 50636, 50636, 1419, 264, 11420, 3332, 264, 1412, 3467, 300, 291, 6964, 13, 50788, 50788, 407, 519, 466, 264, 1412, 3467, 493, 1868, 13, 50954, 50954, 663, 311, 1333, 295, 411, 257, 1412, 15983, 6532, 293, 12543, 307, 300, 291, 519, 466, 428, 1412, 51298, 51298, 3467, 293, 519, 466, 428, 7157, 1412, 3467, 11, 22277, 1333, 295, 33906, 293, 1895, 15104, 428, 51598, 51598, 1412, 3467, 281, 652, 552, 5109, 428, 18491, 1101, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16632787804854543, "compression_ratio": 2.042452830188679, "no_caption_prob": 6.240883067221148e-06}, {"id": 499, "seek": 194510, "start": 1953.58, "end": 1956.8999999999999, "text": " So think about the data types up front.", "tokens": [50364, 1240, 6686, 466, 341, 3109, 295, 411, 8295, 264, 1412, 3467, 3332, 264, 11420, 11, 406, 50636, 50636, 1419, 264, 11420, 3332, 264, 1412, 3467, 300, 291, 6964, 13, 50788, 50788, 407, 519, 466, 264, 1412, 3467, 493, 1868, 13, 50954, 50954, 663, 311, 1333, 295, 411, 257, 1412, 15983, 6532, 293, 12543, 307, 300, 291, 519, 466, 428, 1412, 51298, 51298, 3467, 293, 519, 466, 428, 7157, 1412, 3467, 11, 22277, 1333, 295, 33906, 293, 1895, 15104, 428, 51598, 51598, 1412, 3467, 281, 652, 552, 5109, 428, 18491, 1101, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16632787804854543, "compression_ratio": 2.042452830188679, "no_caption_prob": 6.240883067221148e-06}, {"id": 500, "seek": 194510, "start": 1956.8999999999999, "end": 1963.78, "text": " That's sort of like a data modeling technique and mindset is that you think about your data", "tokens": [50364, 1240, 6686, 466, 341, 3109, 295, 411, 8295, 264, 1412, 3467, 3332, 264, 11420, 11, 406, 50636, 50636, 1419, 264, 11420, 3332, 264, 1412, 3467, 300, 291, 6964, 13, 50788, 50788, 407, 519, 466, 264, 1412, 3467, 493, 1868, 13, 50954, 50954, 663, 311, 1333, 295, 411, 257, 1412, 15983, 6532, 293, 12543, 307, 300, 291, 519, 466, 428, 1412, 51298, 51298, 3467, 293, 519, 466, 428, 7157, 1412, 3467, 11, 22277, 1333, 295, 33906, 293, 1895, 15104, 428, 51598, 51598, 1412, 3467, 281, 652, 552, 5109, 428, 18491, 1101, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16632787804854543, "compression_ratio": 2.042452830188679, "no_caption_prob": 6.240883067221148e-06}, {"id": 501, "seek": 194510, "start": 1963.78, "end": 1969.78, "text": " types and think about your ideal data types, continually sort of refine and refactor your", "tokens": [50364, 1240, 6686, 466, 341, 3109, 295, 411, 8295, 264, 1412, 3467, 3332, 264, 11420, 11, 406, 50636, 50636, 1419, 264, 11420, 3332, 264, 1412, 3467, 300, 291, 6964, 13, 50788, 50788, 407, 519, 466, 264, 1412, 3467, 493, 1868, 13, 50954, 50954, 663, 311, 1333, 295, 411, 257, 1412, 15983, 6532, 293, 12543, 307, 300, 291, 519, 466, 428, 1412, 51298, 51298, 3467, 293, 519, 466, 428, 7157, 1412, 3467, 11, 22277, 1333, 295, 33906, 293, 1895, 15104, 428, 51598, 51598, 1412, 3467, 281, 652, 552, 5109, 428, 18491, 1101, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16632787804854543, "compression_ratio": 2.042452830188679, "no_caption_prob": 6.240883067221148e-06}, {"id": 502, "seek": 194510, "start": 1969.78, "end": 1973.06, "text": " data types to make them express your constraints better.", "tokens": [50364, 1240, 6686, 466, 341, 3109, 295, 411, 8295, 264, 1412, 3467, 3332, 264, 11420, 11, 406, 50636, 50636, 1419, 264, 11420, 3332, 264, 1412, 3467, 300, 291, 6964, 13, 50788, 50788, 407, 519, 466, 264, 1412, 3467, 493, 1868, 13, 50954, 50954, 663, 311, 1333, 295, 411, 257, 1412, 15983, 6532, 293, 12543, 307, 300, 291, 519, 466, 428, 1412, 51298, 51298, 3467, 293, 519, 466, 428, 7157, 1412, 3467, 11, 22277, 1333, 295, 33906, 293, 1895, 15104, 428, 51598, 51598, 1412, 3467, 281, 652, 552, 5109, 428, 18491, 1101, 13, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.16632787804854543, "compression_ratio": 2.042452830188679, "no_caption_prob": 6.240883067221148e-06}, {"id": 503, "seek": 197306, "start": 1973.06, "end": 1978.98, "text": " So at the core of your application, you want to have nice data that clearly represents", "tokens": [50364, 407, 412, 264, 4965, 295, 428, 3861, 11, 291, 528, 281, 362, 1481, 1412, 300, 4448, 8855, 50660, 50660, 264, 4361, 45298, 300, 4448, 8855, 264, 18491, 293, 32567, 11, 264, 721, 300, 50888, 50888, 291, 600, 12785, 13, 50944, 50944, 400, 382, 291, 483, 544, 293, 544, 666, 264, 4965, 295, 428, 3861, 11, 291, 820, 362, 544, 51138, 51138, 293, 544, 26201, 1412, 3467, 293, 17695, 13, 51310, 51310, 509, 458, 11, 370, 291, 11, 291, 820, 362, 13366, 815, 6446, 11, 291, 820, 362, 11, 291, 458, 11, 13366, 3094, 294, 51563, 51563, 3467, 11, 293, 291, 820, 362, 544, 2375, 3467, 293, 544, 721, 300, 23221, 613, 32567, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1235845435378898, "compression_ratio": 2.1452991452991452, "no_caption_prob": 2.026132506216527e-06}, {"id": 504, "seek": 197306, "start": 1978.98, "end": 1983.54, "text": " the semantics that clearly represents the constraints and guarantees, the things that", "tokens": [50364, 407, 412, 264, 4965, 295, 428, 3861, 11, 291, 528, 281, 362, 1481, 1412, 300, 4448, 8855, 50660, 50660, 264, 4361, 45298, 300, 4448, 8855, 264, 18491, 293, 32567, 11, 264, 721, 300, 50888, 50888, 291, 600, 12785, 13, 50944, 50944, 400, 382, 291, 483, 544, 293, 544, 666, 264, 4965, 295, 428, 3861, 11, 291, 820, 362, 544, 51138, 51138, 293, 544, 26201, 1412, 3467, 293, 17695, 13, 51310, 51310, 509, 458, 11, 370, 291, 11, 291, 820, 362, 13366, 815, 6446, 11, 291, 820, 362, 11, 291, 458, 11, 13366, 3094, 294, 51563, 51563, 3467, 11, 293, 291, 820, 362, 544, 2375, 3467, 293, 544, 721, 300, 23221, 613, 32567, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1235845435378898, "compression_ratio": 2.1452991452991452, "no_caption_prob": 2.026132506216527e-06}, {"id": 505, "seek": 197306, "start": 1983.54, "end": 1984.6599999999999, "text": " you've proven.", "tokens": [50364, 407, 412, 264, 4965, 295, 428, 3861, 11, 291, 528, 281, 362, 1481, 1412, 300, 4448, 8855, 50660, 50660, 264, 4361, 45298, 300, 4448, 8855, 264, 18491, 293, 32567, 11, 264, 721, 300, 50888, 50888, 291, 600, 12785, 13, 50944, 50944, 400, 382, 291, 483, 544, 293, 544, 666, 264, 4965, 295, 428, 3861, 11, 291, 820, 362, 544, 51138, 51138, 293, 544, 26201, 1412, 3467, 293, 17695, 13, 51310, 51310, 509, 458, 11, 370, 291, 11, 291, 820, 362, 13366, 815, 6446, 11, 291, 820, 362, 11, 291, 458, 11, 13366, 3094, 294, 51563, 51563, 3467, 11, 293, 291, 820, 362, 544, 2375, 3467, 293, 544, 721, 300, 23221, 613, 32567, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1235845435378898, "compression_ratio": 2.1452991452991452, "no_caption_prob": 2.026132506216527e-06}, {"id": 506, "seek": 197306, "start": 1984.6599999999999, "end": 1988.54, "text": " And as you get more and more into the core of your application, you should have more", "tokens": [50364, 407, 412, 264, 4965, 295, 428, 3861, 11, 291, 528, 281, 362, 1481, 1412, 300, 4448, 8855, 50660, 50660, 264, 4361, 45298, 300, 4448, 8855, 264, 18491, 293, 32567, 11, 264, 721, 300, 50888, 50888, 291, 600, 12785, 13, 50944, 50944, 400, 382, 291, 483, 544, 293, 544, 666, 264, 4965, 295, 428, 3861, 11, 291, 820, 362, 544, 51138, 51138, 293, 544, 26201, 1412, 3467, 293, 17695, 13, 51310, 51310, 509, 458, 11, 370, 291, 11, 291, 820, 362, 13366, 815, 6446, 11, 291, 820, 362, 11, 291, 458, 11, 13366, 3094, 294, 51563, 51563, 3467, 11, 293, 291, 820, 362, 544, 2375, 3467, 293, 544, 721, 300, 23221, 613, 32567, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1235845435378898, "compression_ratio": 2.1452991452991452, "no_caption_prob": 2.026132506216527e-06}, {"id": 507, "seek": 197306, "start": 1988.54, "end": 1991.98, "text": " and more refined data types and assumptions.", "tokens": [50364, 407, 412, 264, 4965, 295, 428, 3861, 11, 291, 528, 281, 362, 1481, 1412, 300, 4448, 8855, 50660, 50660, 264, 4361, 45298, 300, 4448, 8855, 264, 18491, 293, 32567, 11, 264, 721, 300, 50888, 50888, 291, 600, 12785, 13, 50944, 50944, 400, 382, 291, 483, 544, 293, 544, 666, 264, 4965, 295, 428, 3861, 11, 291, 820, 362, 544, 51138, 51138, 293, 544, 26201, 1412, 3467, 293, 17695, 13, 51310, 51310, 509, 458, 11, 370, 291, 11, 291, 820, 362, 13366, 815, 6446, 11, 291, 820, 362, 11, 291, 458, 11, 13366, 3094, 294, 51563, 51563, 3467, 11, 293, 291, 820, 362, 544, 2375, 3467, 293, 544, 721, 300, 23221, 613, 32567, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1235845435378898, "compression_ratio": 2.1452991452991452, "no_caption_prob": 2.026132506216527e-06}, {"id": 508, "seek": 197306, "start": 1991.98, "end": 1997.04, "text": " You know, so you, you should have fewer maybes, you should have, you know, fewer built in", "tokens": [50364, 407, 412, 264, 4965, 295, 428, 3861, 11, 291, 528, 281, 362, 1481, 1412, 300, 4448, 8855, 50660, 50660, 264, 4361, 45298, 300, 4448, 8855, 264, 18491, 293, 32567, 11, 264, 721, 300, 50888, 50888, 291, 600, 12785, 13, 50944, 50944, 400, 382, 291, 483, 544, 293, 544, 666, 264, 4965, 295, 428, 3861, 11, 291, 820, 362, 544, 51138, 51138, 293, 544, 26201, 1412, 3467, 293, 17695, 13, 51310, 51310, 509, 458, 11, 370, 291, 11, 291, 820, 362, 13366, 815, 6446, 11, 291, 820, 362, 11, 291, 458, 11, 13366, 3094, 294, 51563, 51563, 3467, 11, 293, 291, 820, 362, 544, 2375, 3467, 293, 544, 721, 300, 23221, 613, 32567, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1235845435378898, "compression_ratio": 2.1452991452991452, "no_caption_prob": 2.026132506216527e-06}, {"id": 509, "seek": 197306, "start": 1997.04, "end": 2002.62, "text": " types, and you should have more custom types and more things that illustrate these guarantees.", "tokens": [50364, 407, 412, 264, 4965, 295, 428, 3861, 11, 291, 528, 281, 362, 1481, 1412, 300, 4448, 8855, 50660, 50660, 264, 4361, 45298, 300, 4448, 8855, 264, 18491, 293, 32567, 11, 264, 721, 300, 50888, 50888, 291, 600, 12785, 13, 50944, 50944, 400, 382, 291, 483, 544, 293, 544, 666, 264, 4965, 295, 428, 3861, 11, 291, 820, 362, 544, 51138, 51138, 293, 544, 26201, 1412, 3467, 293, 17695, 13, 51310, 51310, 509, 458, 11, 370, 291, 11, 291, 820, 362, 13366, 815, 6446, 11, 291, 820, 362, 11, 291, 458, 11, 13366, 3094, 294, 51563, 51563, 3467, 11, 293, 291, 820, 362, 544, 2375, 3467, 293, 544, 721, 300, 23221, 613, 32567, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1235845435378898, "compression_ratio": 2.1452991452991452, "no_caption_prob": 2.026132506216527e-06}, {"id": 510, "seek": 200262, "start": 2002.62, "end": 2006.06, "text": " Um, more non empty lists and things like that.", "tokens": [50364, 3301, 11, 544, 2107, 6707, 14511, 293, 721, 411, 300, 13, 50536, 50536, 407, 300, 311, 452, 1333, 295, 25061, 8665, 307, 11, 291, 458, 11, 7019, 2440, 13, 50710, 50710, 407, 286, 528, 281, 5042, 341, 1333, 295, 24734, 21156, 278, 3109, 689, 286, 478, 11983, 24071, 9952, 51032, 51032, 365, 9007, 9952, 13, 51122, 51122, 286, 528, 281, 29562, 293, 48377, 666, 1481, 1412, 3467, 300, 7081, 452, 17695, 412, 264, 26807, 88, 51516, 51516, 382, 2321, 382, 286, 6264, 393, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09922794862227007, "compression_ratio": 1.5681818181818181, "no_caption_prob": 7.88920351624256e-06}, {"id": 511, "seek": 200262, "start": 2006.06, "end": 2009.54, "text": " So that's my sort of guiding principle is, you know, wrap early.", "tokens": [50364, 3301, 11, 544, 2107, 6707, 14511, 293, 721, 411, 300, 13, 50536, 50536, 407, 300, 311, 452, 1333, 295, 25061, 8665, 307, 11, 291, 458, 11, 7019, 2440, 13, 50710, 50710, 407, 286, 528, 281, 5042, 341, 1333, 295, 24734, 21156, 278, 3109, 689, 286, 478, 11983, 24071, 9952, 51032, 51032, 365, 9007, 9952, 13, 51122, 51122, 286, 528, 281, 29562, 293, 48377, 666, 1481, 1412, 3467, 300, 7081, 452, 17695, 412, 264, 26807, 88, 51516, 51516, 382, 2321, 382, 286, 6264, 393, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09922794862227007, "compression_ratio": 1.5681818181818181, "no_caption_prob": 7.88920351624256e-06}, {"id": 512, "seek": 200262, "start": 2009.54, "end": 2015.9799999999998, "text": " So I want to avoid this sort of shotgun parsing approach where I'm mixing validation logic", "tokens": [50364, 3301, 11, 544, 2107, 6707, 14511, 293, 721, 411, 300, 13, 50536, 50536, 407, 300, 311, 452, 1333, 295, 25061, 8665, 307, 11, 291, 458, 11, 7019, 2440, 13, 50710, 50710, 407, 286, 528, 281, 5042, 341, 1333, 295, 24734, 21156, 278, 3109, 689, 286, 478, 11983, 24071, 9952, 51032, 51032, 365, 9007, 9952, 13, 51122, 51122, 286, 528, 281, 29562, 293, 48377, 666, 1481, 1412, 3467, 300, 7081, 452, 17695, 412, 264, 26807, 88, 51516, 51516, 382, 2321, 382, 286, 6264, 393, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09922794862227007, "compression_ratio": 1.5681818181818181, "no_caption_prob": 7.88920351624256e-06}, {"id": 513, "seek": 200262, "start": 2015.9799999999998, "end": 2017.78, "text": " with processing logic.", "tokens": [50364, 3301, 11, 544, 2107, 6707, 14511, 293, 721, 411, 300, 13, 50536, 50536, 407, 300, 311, 452, 1333, 295, 25061, 8665, 307, 11, 291, 458, 11, 7019, 2440, 13, 50710, 50710, 407, 286, 528, 281, 5042, 341, 1333, 295, 24734, 21156, 278, 3109, 689, 286, 478, 11983, 24071, 9952, 51032, 51032, 365, 9007, 9952, 13, 51122, 51122, 286, 528, 281, 29562, 293, 48377, 666, 1481, 1412, 3467, 300, 7081, 452, 17695, 412, 264, 26807, 88, 51516, 51516, 382, 2321, 382, 286, 6264, 393, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09922794862227007, "compression_ratio": 1.5681818181818181, "no_caption_prob": 7.88920351624256e-06}, {"id": 514, "seek": 200262, "start": 2017.78, "end": 2025.6599999999999, "text": " I want to validate and parse into nice data types that prove my assumptions at the periphery", "tokens": [50364, 3301, 11, 544, 2107, 6707, 14511, 293, 721, 411, 300, 13, 50536, 50536, 407, 300, 311, 452, 1333, 295, 25061, 8665, 307, 11, 291, 458, 11, 7019, 2440, 13, 50710, 50710, 407, 286, 528, 281, 5042, 341, 1333, 295, 24734, 21156, 278, 3109, 689, 286, 478, 11983, 24071, 9952, 51032, 51032, 365, 9007, 9952, 13, 51122, 51122, 286, 528, 281, 29562, 293, 48377, 666, 1481, 1412, 3467, 300, 7081, 452, 17695, 412, 264, 26807, 88, 51516, 51516, 382, 2321, 382, 286, 6264, 393, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09922794862227007, "compression_ratio": 1.5681818181818181, "no_caption_prob": 7.88920351624256e-06}, {"id": 515, "seek": 200262, "start": 2025.6599999999999, "end": 2028.1399999999999, "text": " as soon as I possibly can.", "tokens": [50364, 3301, 11, 544, 2107, 6707, 14511, 293, 721, 411, 300, 13, 50536, 50536, 407, 300, 311, 452, 1333, 295, 25061, 8665, 307, 11, 291, 458, 11, 7019, 2440, 13, 50710, 50710, 407, 286, 528, 281, 5042, 341, 1333, 295, 24734, 21156, 278, 3109, 689, 286, 478, 11983, 24071, 9952, 51032, 51032, 365, 9007, 9952, 13, 51122, 51122, 286, 528, 281, 29562, 293, 48377, 666, 1481, 1412, 3467, 300, 7081, 452, 17695, 412, 264, 26807, 88, 51516, 51516, 382, 2321, 382, 286, 6264, 393, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09922794862227007, "compression_ratio": 1.5681818181818181, "no_caption_prob": 7.88920351624256e-06}, {"id": 516, "seek": 202814, "start": 2028.14, "end": 2034.14, "text": " Ideally, I don't even want it to exist as a string, because my decoder immediately turns", "tokens": [50364, 40817, 11, 286, 500, 380, 754, 528, 309, 281, 2514, 382, 257, 6798, 11, 570, 452, 979, 19866, 4258, 4523, 50664, 50664, 309, 666, 341, 2158, 420, 18199, 498, 309, 393, 380, 13, 50824, 50824, 759, 286, 2066, 264, 30351, 281, 312, 257, 2107, 6707, 6798, 11, 420, 281, 312, 295, 257, 1629, 7877, 11, 420, 281, 51194, 51194, 406, 4090, 1629, 4342, 11, 550, 286, 528, 452, 979, 19866, 281, 767, 360, 300, 13, 51456, 51456, 407, 286, 1128, 362, 309, 382, 257, 6798, 11, 309, 486, 445, 3061, 498, 309, 1177, 380, 1677, 729, 4487, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07501565241346173, "compression_ratio": 1.662280701754386, "no_caption_prob": 2.355156175326556e-05}, {"id": 517, "seek": 202814, "start": 2034.14, "end": 2037.3400000000001, "text": " it into this value or fails if it can't.", "tokens": [50364, 40817, 11, 286, 500, 380, 754, 528, 309, 281, 2514, 382, 257, 6798, 11, 570, 452, 979, 19866, 4258, 4523, 50664, 50664, 309, 666, 341, 2158, 420, 18199, 498, 309, 393, 380, 13, 50824, 50824, 759, 286, 2066, 264, 30351, 281, 312, 257, 2107, 6707, 6798, 11, 420, 281, 312, 295, 257, 1629, 7877, 11, 420, 281, 51194, 51194, 406, 4090, 1629, 4342, 11, 550, 286, 528, 452, 979, 19866, 281, 767, 360, 300, 13, 51456, 51456, 407, 286, 1128, 362, 309, 382, 257, 6798, 11, 309, 486, 445, 3061, 498, 309, 1177, 380, 1677, 729, 4487, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07501565241346173, "compression_ratio": 1.662280701754386, "no_caption_prob": 2.355156175326556e-05}, {"id": 518, "seek": 202814, "start": 2037.3400000000001, "end": 2044.74, "text": " If I expect the username to be a non empty string, or to be of a certain format, or to", "tokens": [50364, 40817, 11, 286, 500, 380, 754, 528, 309, 281, 2514, 382, 257, 6798, 11, 570, 452, 979, 19866, 4258, 4523, 50664, 50664, 309, 666, 341, 2158, 420, 18199, 498, 309, 393, 380, 13, 50824, 50824, 759, 286, 2066, 264, 30351, 281, 312, 257, 2107, 6707, 6798, 11, 420, 281, 312, 295, 257, 1629, 7877, 11, 420, 281, 51194, 51194, 406, 4090, 1629, 4342, 11, 550, 286, 528, 452, 979, 19866, 281, 767, 360, 300, 13, 51456, 51456, 407, 286, 1128, 362, 309, 382, 257, 6798, 11, 309, 486, 445, 3061, 498, 309, 1177, 380, 1677, 729, 4487, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07501565241346173, "compression_ratio": 1.662280701754386, "no_caption_prob": 2.355156175326556e-05}, {"id": 519, "seek": 202814, "start": 2044.74, "end": 2049.98, "text": " not include certain characters, then I want my decoder to actually do that.", "tokens": [50364, 40817, 11, 286, 500, 380, 754, 528, 309, 281, 2514, 382, 257, 6798, 11, 570, 452, 979, 19866, 4258, 4523, 50664, 50664, 309, 666, 341, 2158, 420, 18199, 498, 309, 393, 380, 13, 50824, 50824, 759, 286, 2066, 264, 30351, 281, 312, 257, 2107, 6707, 6798, 11, 420, 281, 312, 295, 257, 1629, 7877, 11, 420, 281, 51194, 51194, 406, 4090, 1629, 4342, 11, 550, 286, 528, 452, 979, 19866, 281, 767, 360, 300, 13, 51456, 51456, 407, 286, 1128, 362, 309, 382, 257, 6798, 11, 309, 486, 445, 3061, 498, 309, 1177, 380, 1677, 729, 4487, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07501565241346173, "compression_ratio": 1.662280701754386, "no_caption_prob": 2.355156175326556e-05}, {"id": 520, "seek": 202814, "start": 2049.98, "end": 2054.1, "text": " So I never have it as a string, it will just fail if it doesn't meet those conditions,", "tokens": [50364, 40817, 11, 286, 500, 380, 754, 528, 309, 281, 2514, 382, 257, 6798, 11, 570, 452, 979, 19866, 4258, 4523, 50664, 50664, 309, 666, 341, 2158, 420, 18199, 498, 309, 393, 380, 13, 50824, 50824, 759, 286, 2066, 264, 30351, 281, 312, 257, 2107, 6707, 6798, 11, 420, 281, 312, 295, 257, 1629, 7877, 11, 420, 281, 51194, 51194, 406, 4090, 1629, 4342, 11, 550, 286, 528, 452, 979, 19866, 281, 767, 360, 300, 13, 51456, 51456, 407, 286, 1128, 362, 309, 382, 257, 6798, 11, 309, 486, 445, 3061, 498, 309, 1177, 380, 1677, 729, 4487, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07501565241346173, "compression_ratio": 1.662280701754386, "no_caption_prob": 2.355156175326556e-05}, {"id": 521, "seek": 205410, "start": 2054.1, "end": 2058.54, "text": " or I'll have I'll have it parsed into my valid username type.", "tokens": [50364, 420, 286, 603, 362, 286, 603, 362, 309, 21156, 292, 666, 452, 7363, 30351, 2010, 13, 50586, 50586, 400, 550, 2171, 309, 311, 37900, 11, 321, 733, 295, 2825, 466, 341, 1365, 949, 300, 291, 50768, 50768, 727, 411, 11, 291, 727, 360, 1310, 5893, 365, 7576, 6707, 6798, 11, 293, 550, 1320, 926, 341, 6707, 51092, 51092, 6798, 300, 1310, 309, 8855, 439, 613, 819, 721, 13, 51246, 51246, 663, 311, 257, 22840, 295, 341, 3410, 295, 7019, 2440, 14853, 4007, 3469, 13, 51438, 51438, 407, 291, 7019, 2440, 11, 291, 362, 428, 7157, 1254, 295, 264, 1412, 11, 264, 45516, 1412, 2010, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.09105185412485665, "compression_ratio": 1.73046875, "no_caption_prob": 2.7108344511361793e-05}, {"id": 522, "seek": 205410, "start": 2058.54, "end": 2062.18, "text": " And then sometimes it's tempting, we kind of talked about this example before that you", "tokens": [50364, 420, 286, 603, 362, 286, 603, 362, 309, 21156, 292, 666, 452, 7363, 30351, 2010, 13, 50586, 50586, 400, 550, 2171, 309, 311, 37900, 11, 321, 733, 295, 2825, 466, 341, 1365, 949, 300, 291, 50768, 50768, 727, 411, 11, 291, 727, 360, 1310, 5893, 365, 7576, 6707, 6798, 11, 293, 550, 1320, 926, 341, 6707, 51092, 51092, 6798, 300, 1310, 309, 8855, 439, 613, 819, 721, 13, 51246, 51246, 663, 311, 257, 22840, 295, 341, 3410, 295, 7019, 2440, 14853, 4007, 3469, 13, 51438, 51438, 407, 291, 7019, 2440, 11, 291, 362, 428, 7157, 1254, 295, 264, 1412, 11, 264, 45516, 1412, 2010, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.09105185412485665, "compression_ratio": 1.73046875, "no_caption_prob": 2.7108344511361793e-05}, {"id": 523, "seek": 205410, "start": 2062.18, "end": 2068.66, "text": " could like, you could do maybe dot with default empty string, and then pass around this empty", "tokens": [50364, 420, 286, 603, 362, 286, 603, 362, 309, 21156, 292, 666, 452, 7363, 30351, 2010, 13, 50586, 50586, 400, 550, 2171, 309, 311, 37900, 11, 321, 733, 295, 2825, 466, 341, 1365, 949, 300, 291, 50768, 50768, 727, 411, 11, 291, 727, 360, 1310, 5893, 365, 7576, 6707, 6798, 11, 293, 550, 1320, 926, 341, 6707, 51092, 51092, 6798, 300, 1310, 309, 8855, 439, 613, 819, 721, 13, 51246, 51246, 663, 311, 257, 22840, 295, 341, 3410, 295, 7019, 2440, 14853, 4007, 3469, 13, 51438, 51438, 407, 291, 7019, 2440, 11, 291, 362, 428, 7157, 1254, 295, 264, 1412, 11, 264, 45516, 1412, 2010, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.09105185412485665, "compression_ratio": 1.73046875, "no_caption_prob": 2.7108344511361793e-05}, {"id": 524, "seek": 205410, "start": 2068.66, "end": 2071.74, "text": " string that maybe it represents all these different things.", "tokens": [50364, 420, 286, 603, 362, 286, 603, 362, 309, 21156, 292, 666, 452, 7363, 30351, 2010, 13, 50586, 50586, 400, 550, 2171, 309, 311, 37900, 11, 321, 733, 295, 2825, 466, 341, 1365, 949, 300, 291, 50768, 50768, 727, 411, 11, 291, 727, 360, 1310, 5893, 365, 7576, 6707, 6798, 11, 293, 550, 1320, 926, 341, 6707, 51092, 51092, 6798, 300, 1310, 309, 8855, 439, 613, 819, 721, 13, 51246, 51246, 663, 311, 257, 22840, 295, 341, 3410, 295, 7019, 2440, 14853, 4007, 3469, 13, 51438, 51438, 407, 291, 7019, 2440, 11, 291, 362, 428, 7157, 1254, 295, 264, 1412, 11, 264, 45516, 1412, 2010, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.09105185412485665, "compression_ratio": 1.73046875, "no_caption_prob": 2.7108344511361793e-05}, {"id": 525, "seek": 205410, "start": 2071.74, "end": 2075.58, "text": " That's a violation of this concept of wrap early unwrap late.", "tokens": [50364, 420, 286, 603, 362, 286, 603, 362, 309, 21156, 292, 666, 452, 7363, 30351, 2010, 13, 50586, 50586, 400, 550, 2171, 309, 311, 37900, 11, 321, 733, 295, 2825, 466, 341, 1365, 949, 300, 291, 50768, 50768, 727, 411, 11, 291, 727, 360, 1310, 5893, 365, 7576, 6707, 6798, 11, 293, 550, 1320, 926, 341, 6707, 51092, 51092, 6798, 300, 1310, 309, 8855, 439, 613, 819, 721, 13, 51246, 51246, 663, 311, 257, 22840, 295, 341, 3410, 295, 7019, 2440, 14853, 4007, 3469, 13, 51438, 51438, 407, 291, 7019, 2440, 11, 291, 362, 428, 7157, 1254, 295, 264, 1412, 11, 264, 45516, 1412, 2010, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.09105185412485665, "compression_ratio": 1.73046875, "no_caption_prob": 2.7108344511361793e-05}, {"id": 526, "seek": 205410, "start": 2075.58, "end": 2080.7, "text": " So you wrap early, you have your ideal form of the data, the nicest data type.", "tokens": [50364, 420, 286, 603, 362, 286, 603, 362, 309, 21156, 292, 666, 452, 7363, 30351, 2010, 13, 50586, 50586, 400, 550, 2171, 309, 311, 37900, 11, 321, 733, 295, 2825, 466, 341, 1365, 949, 300, 291, 50768, 50768, 727, 411, 11, 291, 727, 360, 1310, 5893, 365, 7576, 6707, 6798, 11, 293, 550, 1320, 926, 341, 6707, 51092, 51092, 6798, 300, 1310, 309, 8855, 439, 613, 819, 721, 13, 51246, 51246, 663, 311, 257, 22840, 295, 341, 3410, 295, 7019, 2440, 14853, 4007, 3469, 13, 51438, 51438, 407, 291, 7019, 2440, 11, 291, 362, 428, 7157, 1254, 295, 264, 1412, 11, 264, 45516, 1412, 2010, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.09105185412485665, "compression_ratio": 1.73046875, "no_caption_prob": 2.7108344511361793e-05}, {"id": 527, "seek": 208070, "start": 2080.7, "end": 2086.8999999999996, "text": " And then at the last possible second, you're forced to have a string because or you know,", "tokens": [50364, 400, 550, 412, 264, 1036, 1944, 1150, 11, 291, 434, 7579, 281, 362, 257, 6798, 570, 420, 291, 458, 11, 50674, 50674, 257, 31828, 2058, 1429, 2158, 420, 2035, 11, 291, 600, 2731, 1589, 293, 4361, 45298, 11, 457, 291, 362, 281, 50922, 50922, 570, 300, 311, 437, 300, 9362, 7029, 13, 51052, 51052, 407, 412, 264, 1036, 1944, 1150, 11, 291, 14853, 4007, 300, 1412, 666, 613, 4470, 811, 1412, 25879, 13, 51402, 51402, 400, 300, 439, 2314, 412, 264, 26807, 88, 295, 264, 724, 13, 51522, 51522, 865, 11, 291, 3624, 1589, 382, 2321, 382, 291, 500, 380, 643, 552, 3602, 13, 51718, 51718, 2743, 11, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15715946469988143, "compression_ratio": 1.7418032786885247, "no_caption_prob": 8.398018508160021e-06}, {"id": 528, "seek": 208070, "start": 2086.8999999999996, "end": 2091.8599999999997, "text": " a JSON encode value or whatever, you've lost information and semantics, but you have to", "tokens": [50364, 400, 550, 412, 264, 1036, 1944, 1150, 11, 291, 434, 7579, 281, 362, 257, 6798, 570, 420, 291, 458, 11, 50674, 50674, 257, 31828, 2058, 1429, 2158, 420, 2035, 11, 291, 600, 2731, 1589, 293, 4361, 45298, 11, 457, 291, 362, 281, 50922, 50922, 570, 300, 311, 437, 300, 9362, 7029, 13, 51052, 51052, 407, 412, 264, 1036, 1944, 1150, 11, 291, 14853, 4007, 300, 1412, 666, 613, 4470, 811, 1412, 25879, 13, 51402, 51402, 400, 300, 439, 2314, 412, 264, 26807, 88, 295, 264, 724, 13, 51522, 51522, 865, 11, 291, 3624, 1589, 382, 2321, 382, 291, 500, 380, 643, 552, 3602, 13, 51718, 51718, 2743, 11, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15715946469988143, "compression_ratio": 1.7418032786885247, "no_caption_prob": 8.398018508160021e-06}, {"id": 529, "seek": 208070, "start": 2091.8599999999997, "end": 2094.46, "text": " because that's what that API requires.", "tokens": [50364, 400, 550, 412, 264, 1036, 1944, 1150, 11, 291, 434, 7579, 281, 362, 257, 6798, 570, 420, 291, 458, 11, 50674, 50674, 257, 31828, 2058, 1429, 2158, 420, 2035, 11, 291, 600, 2731, 1589, 293, 4361, 45298, 11, 457, 291, 362, 281, 50922, 50922, 570, 300, 311, 437, 300, 9362, 7029, 13, 51052, 51052, 407, 412, 264, 1036, 1944, 1150, 11, 291, 14853, 4007, 300, 1412, 666, 613, 4470, 811, 1412, 25879, 13, 51402, 51402, 400, 300, 439, 2314, 412, 264, 26807, 88, 295, 264, 724, 13, 51522, 51522, 865, 11, 291, 3624, 1589, 382, 2321, 382, 291, 500, 380, 643, 552, 3602, 13, 51718, 51718, 2743, 11, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15715946469988143, "compression_ratio": 1.7418032786885247, "no_caption_prob": 8.398018508160021e-06}, {"id": 530, "seek": 208070, "start": 2094.46, "end": 2101.46, "text": " So at the last possible second, you unwrap that data into these lossier data formats.", "tokens": [50364, 400, 550, 412, 264, 1036, 1944, 1150, 11, 291, 434, 7579, 281, 362, 257, 6798, 570, 420, 291, 458, 11, 50674, 50674, 257, 31828, 2058, 1429, 2158, 420, 2035, 11, 291, 600, 2731, 1589, 293, 4361, 45298, 11, 457, 291, 362, 281, 50922, 50922, 570, 300, 311, 437, 300, 9362, 7029, 13, 51052, 51052, 407, 412, 264, 1036, 1944, 1150, 11, 291, 14853, 4007, 300, 1412, 666, 613, 4470, 811, 1412, 25879, 13, 51402, 51402, 400, 300, 439, 2314, 412, 264, 26807, 88, 295, 264, 724, 13, 51522, 51522, 865, 11, 291, 3624, 1589, 382, 2321, 382, 291, 500, 380, 643, 552, 3602, 13, 51718, 51718, 2743, 11, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15715946469988143, "compression_ratio": 1.7418032786885247, "no_caption_prob": 8.398018508160021e-06}, {"id": 531, "seek": 208070, "start": 2101.46, "end": 2103.8599999999997, "text": " And that all happens at the periphery of the app.", "tokens": [50364, 400, 550, 412, 264, 1036, 1944, 1150, 11, 291, 434, 7579, 281, 362, 257, 6798, 570, 420, 291, 458, 11, 50674, 50674, 257, 31828, 2058, 1429, 2158, 420, 2035, 11, 291, 600, 2731, 1589, 293, 4361, 45298, 11, 457, 291, 362, 281, 50922, 50922, 570, 300, 311, 437, 300, 9362, 7029, 13, 51052, 51052, 407, 412, 264, 1036, 1944, 1150, 11, 291, 14853, 4007, 300, 1412, 666, 613, 4470, 811, 1412, 25879, 13, 51402, 51402, 400, 300, 439, 2314, 412, 264, 26807, 88, 295, 264, 724, 13, 51522, 51522, 865, 11, 291, 3624, 1589, 382, 2321, 382, 291, 500, 380, 643, 552, 3602, 13, 51718, 51718, 2743, 11, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15715946469988143, "compression_ratio": 1.7418032786885247, "no_caption_prob": 8.398018508160021e-06}, {"id": 532, "seek": 208070, "start": 2103.8599999999997, "end": 2107.7799999999997, "text": " Yeah, you lose information as soon as you don't need them anymore.", "tokens": [50364, 400, 550, 412, 264, 1036, 1944, 1150, 11, 291, 434, 7579, 281, 362, 257, 6798, 570, 420, 291, 458, 11, 50674, 50674, 257, 31828, 2058, 1429, 2158, 420, 2035, 11, 291, 600, 2731, 1589, 293, 4361, 45298, 11, 457, 291, 362, 281, 50922, 50922, 570, 300, 311, 437, 300, 9362, 7029, 13, 51052, 51052, 407, 412, 264, 1036, 1944, 1150, 11, 291, 14853, 4007, 300, 1412, 666, 613, 4470, 811, 1412, 25879, 13, 51402, 51402, 400, 300, 439, 2314, 412, 264, 26807, 88, 295, 264, 724, 13, 51522, 51522, 865, 11, 291, 3624, 1589, 382, 2321, 382, 291, 500, 380, 643, 552, 3602, 13, 51718, 51718, 2743, 11, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15715946469988143, "compression_ratio": 1.7418032786885247, "no_caption_prob": 8.398018508160021e-06}, {"id": 533, "seek": 208070, "start": 2107.7799999999997, "end": 2108.7799999999997, "text": " Also,", "tokens": [50364, 400, 550, 412, 264, 1036, 1944, 1150, 11, 291, 434, 7579, 281, 362, 257, 6798, 570, 420, 291, 458, 11, 50674, 50674, 257, 31828, 2058, 1429, 2158, 420, 2035, 11, 291, 600, 2731, 1589, 293, 4361, 45298, 11, 457, 291, 362, 281, 50922, 50922, 570, 300, 311, 437, 300, 9362, 7029, 13, 51052, 51052, 407, 412, 264, 1036, 1944, 1150, 11, 291, 14853, 4007, 300, 1412, 666, 613, 4470, 811, 1412, 25879, 13, 51402, 51402, 400, 300, 439, 2314, 412, 264, 26807, 88, 295, 264, 724, 13, 51522, 51522, 865, 11, 291, 3624, 1589, 382, 2321, 382, 291, 500, 380, 643, 552, 3602, 13, 51718, 51718, 2743, 11, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.15715946469988143, "compression_ratio": 1.7418032786885247, "no_caption_prob": 8.398018508160021e-06}, {"id": 534, "seek": 210878, "start": 2108.78, "end": 2115.9, "text": " yes, exactly. So all along the way, there's not an opportunity for mistakenly using that", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 535, "seek": 210878, "start": 2115.9, "end": 2121.42, "text": " data in a way that the guarantees aren't enforced, because your data types help you enforce the", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 536, "seek": 210878, "start": 2121.42, "end": 2122.78, "text": " guarantees.", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 537, "seek": 210878, "start": 2122.78, "end": 2126.98, "text": " You don't lose semantic information because the types help enforce the semantics.", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 538, "seek": 210878, "start": 2126.98, "end": 2132.3, "text": " So yeah, I think wrap early unwrap late would be my sort of core guiding principle there.", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 539, "seek": 210878, "start": 2132.3, "end": 2133.3, "text": " It's yeah, definitely.", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 540, "seek": 210878, "start": 2133.3, "end": 2135.5400000000004, "text": " Yeah, it takes practice to find how to do that.", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 541, "seek": 210878, "start": 2135.5400000000004, "end": 2138.2200000000003, "text": " But I think it's always a good idea.", "tokens": [50364, 2086, 11, 2293, 13, 407, 439, 2051, 264, 636, 11, 456, 311, 406, 364, 2650, 337, 21333, 356, 1228, 300, 50720, 50720, 1412, 294, 257, 636, 300, 264, 32567, 3212, 380, 40953, 11, 570, 428, 1412, 3467, 854, 291, 24825, 264, 50996, 50996, 32567, 13, 51064, 51064, 509, 500, 380, 3624, 47982, 1589, 570, 264, 3467, 854, 24825, 264, 4361, 45298, 13, 51274, 51274, 407, 1338, 11, 286, 519, 7019, 2440, 14853, 4007, 3469, 576, 312, 452, 1333, 295, 4965, 25061, 8665, 456, 13, 51540, 51540, 467, 311, 1338, 11, 2138, 13, 51590, 51590, 865, 11, 309, 2516, 3124, 281, 915, 577, 281, 360, 300, 13, 51702, 51702, 583, 286, 519, 309, 311, 1009, 257, 665, 1558, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.12009830943873671, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.696424078545533e-05}, {"id": 542, "seek": 213822, "start": 2138.22, "end": 2143.74, "text": " What I'm thinking right now is that if you have the same data in both conditions, the", "tokens": [50364, 708, 286, 478, 1953, 558, 586, 307, 300, 498, 291, 362, 264, 912, 1412, 294, 1293, 4487, 11, 264, 50640, 50640, 912, 2886, 38970, 11, 293, 264, 912, 1412, 300, 309, 534, 8306, 11, 472, 636, 300, 291, 727, 1066, 50960, 50960, 1228, 341, 6532, 307, 281, 764, 903, 25796, 3467, 13, 51118, 51118, 1079, 13, 51168, 51168, 407, 903, 25796, 3467, 366, 257, 636, 281, 23203, 428, 3467, 11, 754, 1673, 641, 16212, 1412, 51512, 51512, 307, 264, 1900, 912, 13, 51610, 51610, 1079, 11, 2293, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15754605376202127, "compression_ratio": 1.696078431372549, "no_caption_prob": 1.863064790086355e-05}, {"id": 543, "seek": 213822, "start": 2143.74, "end": 2150.14, "text": " same primitives, and the same data that it really contains, one way that you could keep", "tokens": [50364, 708, 286, 478, 1953, 558, 586, 307, 300, 498, 291, 362, 264, 912, 1412, 294, 1293, 4487, 11, 264, 50640, 50640, 912, 2886, 38970, 11, 293, 264, 912, 1412, 300, 309, 534, 8306, 11, 472, 636, 300, 291, 727, 1066, 50960, 50960, 1228, 341, 6532, 307, 281, 764, 903, 25796, 3467, 13, 51118, 51118, 1079, 13, 51168, 51168, 407, 903, 25796, 3467, 366, 257, 636, 281, 23203, 428, 3467, 11, 754, 1673, 641, 16212, 1412, 51512, 51512, 307, 264, 1900, 912, 13, 51610, 51610, 1079, 11, 2293, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15754605376202127, "compression_ratio": 1.696078431372549, "no_caption_prob": 1.863064790086355e-05}, {"id": 544, "seek": 213822, "start": 2150.14, "end": 2153.2999999999997, "text": " using this technique is to use phantom types.", "tokens": [50364, 708, 286, 478, 1953, 558, 586, 307, 300, 498, 291, 362, 264, 912, 1412, 294, 1293, 4487, 11, 264, 50640, 50640, 912, 2886, 38970, 11, 293, 264, 912, 1412, 300, 309, 534, 8306, 11, 472, 636, 300, 291, 727, 1066, 50960, 50960, 1228, 341, 6532, 307, 281, 764, 903, 25796, 3467, 13, 51118, 51118, 1079, 13, 51168, 51168, 407, 903, 25796, 3467, 366, 257, 636, 281, 23203, 428, 3467, 11, 754, 1673, 641, 16212, 1412, 51512, 51512, 307, 264, 1900, 912, 13, 51610, 51610, 1079, 11, 2293, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15754605376202127, "compression_ratio": 1.696078431372549, "no_caption_prob": 1.863064790086355e-05}, {"id": 545, "seek": 213822, "start": 2153.2999999999997, "end": 2154.2999999999997, "text": " Yes.", "tokens": [50364, 708, 286, 478, 1953, 558, 586, 307, 300, 498, 291, 362, 264, 912, 1412, 294, 1293, 4487, 11, 264, 50640, 50640, 912, 2886, 38970, 11, 293, 264, 912, 1412, 300, 309, 534, 8306, 11, 472, 636, 300, 291, 727, 1066, 50960, 50960, 1228, 341, 6532, 307, 281, 764, 903, 25796, 3467, 13, 51118, 51118, 1079, 13, 51168, 51168, 407, 903, 25796, 3467, 366, 257, 636, 281, 23203, 428, 3467, 11, 754, 1673, 641, 16212, 1412, 51512, 51512, 307, 264, 1900, 912, 13, 51610, 51610, 1079, 11, 2293, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15754605376202127, "compression_ratio": 1.696078431372549, "no_caption_prob": 1.863064790086355e-05}, {"id": 546, "seek": 213822, "start": 2154.2999999999997, "end": 2161.18, "text": " So phantom types are a way to differentiate your types, even though their contained data", "tokens": [50364, 708, 286, 478, 1953, 558, 586, 307, 300, 498, 291, 362, 264, 912, 1412, 294, 1293, 4487, 11, 264, 50640, 50640, 912, 2886, 38970, 11, 293, 264, 912, 1412, 300, 309, 534, 8306, 11, 472, 636, 300, 291, 727, 1066, 50960, 50960, 1228, 341, 6532, 307, 281, 764, 903, 25796, 3467, 13, 51118, 51118, 1079, 13, 51168, 51168, 407, 903, 25796, 3467, 366, 257, 636, 281, 23203, 428, 3467, 11, 754, 1673, 641, 16212, 1412, 51512, 51512, 307, 264, 1900, 912, 13, 51610, 51610, 1079, 11, 2293, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15754605376202127, "compression_ratio": 1.696078431372549, "no_caption_prob": 1.863064790086355e-05}, {"id": 547, "seek": 213822, "start": 2161.18, "end": 2163.14, "text": " is the exact same.", "tokens": [50364, 708, 286, 478, 1953, 558, 586, 307, 300, 498, 291, 362, 264, 912, 1412, 294, 1293, 4487, 11, 264, 50640, 50640, 912, 2886, 38970, 11, 293, 264, 912, 1412, 300, 309, 534, 8306, 11, 472, 636, 300, 291, 727, 1066, 50960, 50960, 1228, 341, 6532, 307, 281, 764, 903, 25796, 3467, 13, 51118, 51118, 1079, 13, 51168, 51168, 407, 903, 25796, 3467, 366, 257, 636, 281, 23203, 428, 3467, 11, 754, 1673, 641, 16212, 1412, 51512, 51512, 307, 264, 1900, 912, 13, 51610, 51610, 1079, 11, 2293, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15754605376202127, "compression_ratio": 1.696078431372549, "no_caption_prob": 1.863064790086355e-05}, {"id": 548, "seek": 213822, "start": 2163.14, "end": 2164.8199999999997, "text": " Yes, exactly.", "tokens": [50364, 708, 286, 478, 1953, 558, 586, 307, 300, 498, 291, 362, 264, 912, 1412, 294, 1293, 4487, 11, 264, 50640, 50640, 912, 2886, 38970, 11, 293, 264, 912, 1412, 300, 309, 534, 8306, 11, 472, 636, 300, 291, 727, 1066, 50960, 50960, 1228, 341, 6532, 307, 281, 764, 903, 25796, 3467, 13, 51118, 51118, 1079, 13, 51168, 51168, 407, 903, 25796, 3467, 366, 257, 636, 281, 23203, 428, 3467, 11, 754, 1673, 641, 16212, 1412, 51512, 51512, 307, 264, 1900, 912, 13, 51610, 51610, 1079, 11, 2293, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15754605376202127, "compression_ratio": 1.696078431372549, "no_caption_prob": 1.863064790086355e-05}, {"id": 549, "seek": 216482, "start": 2164.82, "end": 2169.38, "text": " So you would have a parsing function that returns a data type with a type variable,", "tokens": [50364, 407, 291, 576, 362, 257, 21156, 278, 2445, 300, 11247, 257, 1412, 2010, 365, 257, 2010, 7006, 11, 50592, 50592, 597, 307, 257, 903, 25796, 2010, 13, 50690, 50690, 407, 291, 576, 362, 11, 291, 727, 2995, 552, 11, 291, 727, 818, 2445, 300, 7029, 300, 264, 51002, 51002, 903, 25796, 2010, 307, 294, 257, 1629, 1785, 11, 307, 295, 257, 1629, 2010, 11, 457, 291, 576, 920, 362, 264, 51304, 51304, 912, 1412, 11, 291, 2759, 380, 643, 281, 1884, 257, 777, 2375, 2010, 13, 51458, 51458, 1079, 13, 51508, 51508, 407, 1293, 7512, 366, 1481, 11, 1939, 264, 2590, 486, 980, 597, 472, 307, 1151, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.15759987490517752, "compression_ratio": 1.8923766816143497, "no_caption_prob": 1.2218907613714691e-05}, {"id": 550, "seek": 216482, "start": 2169.38, "end": 2171.34, "text": " which is a phantom type.", "tokens": [50364, 407, 291, 576, 362, 257, 21156, 278, 2445, 300, 11247, 257, 1412, 2010, 365, 257, 2010, 7006, 11, 50592, 50592, 597, 307, 257, 903, 25796, 2010, 13, 50690, 50690, 407, 291, 576, 362, 11, 291, 727, 2995, 552, 11, 291, 727, 818, 2445, 300, 7029, 300, 264, 51002, 51002, 903, 25796, 2010, 307, 294, 257, 1629, 1785, 11, 307, 295, 257, 1629, 2010, 11, 457, 291, 576, 920, 362, 264, 51304, 51304, 912, 1412, 11, 291, 2759, 380, 643, 281, 1884, 257, 777, 2375, 2010, 13, 51458, 51458, 1079, 13, 51508, 51508, 407, 1293, 7512, 366, 1481, 11, 1939, 264, 2590, 486, 980, 597, 472, 307, 1151, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.15759987490517752, "compression_ratio": 1.8923766816143497, "no_caption_prob": 1.2218907613714691e-05}, {"id": 551, "seek": 216482, "start": 2171.34, "end": 2177.5800000000004, "text": " So you would have, you could match them, you could call function that requires that the", "tokens": [50364, 407, 291, 576, 362, 257, 21156, 278, 2445, 300, 11247, 257, 1412, 2010, 365, 257, 2010, 7006, 11, 50592, 50592, 597, 307, 257, 903, 25796, 2010, 13, 50690, 50690, 407, 291, 576, 362, 11, 291, 727, 2995, 552, 11, 291, 727, 818, 2445, 300, 7029, 300, 264, 51002, 51002, 903, 25796, 2010, 307, 294, 257, 1629, 1785, 11, 307, 295, 257, 1629, 2010, 11, 457, 291, 576, 920, 362, 264, 51304, 51304, 912, 1412, 11, 291, 2759, 380, 643, 281, 1884, 257, 777, 2375, 2010, 13, 51458, 51458, 1079, 13, 51508, 51508, 407, 1293, 7512, 366, 1481, 11, 1939, 264, 2590, 486, 980, 597, 472, 307, 1151, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.15759987490517752, "compression_ratio": 1.8923766816143497, "no_caption_prob": 1.2218907613714691e-05}, {"id": 552, "seek": 216482, "start": 2177.5800000000004, "end": 2183.6200000000003, "text": " phantom type is in a certain state, is of a certain type, but you would still have the", "tokens": [50364, 407, 291, 576, 362, 257, 21156, 278, 2445, 300, 11247, 257, 1412, 2010, 365, 257, 2010, 7006, 11, 50592, 50592, 597, 307, 257, 903, 25796, 2010, 13, 50690, 50690, 407, 291, 576, 362, 11, 291, 727, 2995, 552, 11, 291, 727, 818, 2445, 300, 7029, 300, 264, 51002, 51002, 903, 25796, 2010, 307, 294, 257, 1629, 1785, 11, 307, 295, 257, 1629, 2010, 11, 457, 291, 576, 920, 362, 264, 51304, 51304, 912, 1412, 11, 291, 2759, 380, 643, 281, 1884, 257, 777, 2375, 2010, 13, 51458, 51458, 1079, 13, 51508, 51508, 407, 1293, 7512, 366, 1481, 11, 1939, 264, 2590, 486, 980, 597, 472, 307, 1151, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.15759987490517752, "compression_ratio": 1.8923766816143497, "no_caption_prob": 1.2218907613714691e-05}, {"id": 553, "seek": 216482, "start": 2183.6200000000003, "end": 2186.7000000000003, "text": " same data, you wouldn't need to create a new custom type.", "tokens": [50364, 407, 291, 576, 362, 257, 21156, 278, 2445, 300, 11247, 257, 1412, 2010, 365, 257, 2010, 7006, 11, 50592, 50592, 597, 307, 257, 903, 25796, 2010, 13, 50690, 50690, 407, 291, 576, 362, 11, 291, 727, 2995, 552, 11, 291, 727, 818, 2445, 300, 7029, 300, 264, 51002, 51002, 903, 25796, 2010, 307, 294, 257, 1629, 1785, 11, 307, 295, 257, 1629, 2010, 11, 457, 291, 576, 920, 362, 264, 51304, 51304, 912, 1412, 11, 291, 2759, 380, 643, 281, 1884, 257, 777, 2375, 2010, 13, 51458, 51458, 1079, 13, 51508, 51508, 407, 1293, 7512, 366, 1481, 11, 1939, 264, 2590, 486, 980, 597, 472, 307, 1151, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.15759987490517752, "compression_ratio": 1.8923766816143497, "no_caption_prob": 1.2218907613714691e-05}, {"id": 554, "seek": 216482, "start": 2186.7000000000003, "end": 2187.7000000000003, "text": " Yes.", "tokens": [50364, 407, 291, 576, 362, 257, 21156, 278, 2445, 300, 11247, 257, 1412, 2010, 365, 257, 2010, 7006, 11, 50592, 50592, 597, 307, 257, 903, 25796, 2010, 13, 50690, 50690, 407, 291, 576, 362, 11, 291, 727, 2995, 552, 11, 291, 727, 818, 2445, 300, 7029, 300, 264, 51002, 51002, 903, 25796, 2010, 307, 294, 257, 1629, 1785, 11, 307, 295, 257, 1629, 2010, 11, 457, 291, 576, 920, 362, 264, 51304, 51304, 912, 1412, 11, 291, 2759, 380, 643, 281, 1884, 257, 777, 2375, 2010, 13, 51458, 51458, 1079, 13, 51508, 51508, 407, 1293, 7512, 366, 1481, 11, 1939, 264, 2590, 486, 980, 597, 472, 307, 1151, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.15759987490517752, "compression_ratio": 1.8923766816143497, "no_caption_prob": 1.2218907613714691e-05}, {"id": 555, "seek": 216482, "start": 2187.7000000000003, "end": 2191.6200000000003, "text": " So both techniques are nice, yet the situation will tell which one is best.", "tokens": [50364, 407, 291, 576, 362, 257, 21156, 278, 2445, 300, 11247, 257, 1412, 2010, 365, 257, 2010, 7006, 11, 50592, 50592, 597, 307, 257, 903, 25796, 2010, 13, 50690, 50690, 407, 291, 576, 362, 11, 291, 727, 2995, 552, 11, 291, 727, 818, 2445, 300, 7029, 300, 264, 51002, 51002, 903, 25796, 2010, 307, 294, 257, 1629, 1785, 11, 307, 295, 257, 1629, 2010, 11, 457, 291, 576, 920, 362, 264, 51304, 51304, 912, 1412, 11, 291, 2759, 380, 643, 281, 1884, 257, 777, 2375, 2010, 13, 51458, 51458, 1079, 13, 51508, 51508, 407, 1293, 7512, 366, 1481, 11, 1939, 264, 2590, 486, 980, 597, 472, 307, 1151, 13, 51704, 51704], "temperature": 0.0, "avg_logprob": -0.15759987490517752, "compression_ratio": 1.8923766816143497, "no_caption_prob": 1.2218907613714691e-05}, {"id": 556, "seek": 219162, "start": 2191.62, "end": 2197.54, "text": " Yes, and that's actually exactly what Richard Feldman's Elm validate package does.", "tokens": [50364, 1079, 11, 293, 300, 311, 767, 2293, 437, 9809, 42677, 1601, 311, 2699, 76, 29562, 7372, 775, 13, 50660, 50660, 467, 6676, 309, 807, 257, 2638, 295, 7363, 763, 11, 293, 550, 309, 575, 257, 1333, 295, 903, 25796, 2010, 300, 50934, 50934, 309, 4960, 281, 1066, 2837, 295, 264, 1186, 300, 291, 40693, 729, 4487, 13, 51212, 51212, 407, 300, 311, 2138, 257, 7363, 3109, 11, 498, 291, 486, 13, 51536, 51536, 492, 603, 362, 281, 1520, 300, 13, 51700, 51700, 509, 603, 362, 281, 48377, 300, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.216089843421854, "compression_ratio": 1.6093023255813954, "no_caption_prob": 1.2029499885102268e-05}, {"id": 557, "seek": 219162, "start": 2197.54, "end": 2203.02, "text": " It runs it through a series of validations, and then it has a sort of phantom type that", "tokens": [50364, 1079, 11, 293, 300, 311, 767, 2293, 437, 9809, 42677, 1601, 311, 2699, 76, 29562, 7372, 775, 13, 50660, 50660, 467, 6676, 309, 807, 257, 2638, 295, 7363, 763, 11, 293, 550, 309, 575, 257, 1333, 295, 903, 25796, 2010, 300, 50934, 50934, 309, 4960, 281, 1066, 2837, 295, 264, 1186, 300, 291, 40693, 729, 4487, 13, 51212, 51212, 407, 300, 311, 2138, 257, 7363, 3109, 11, 498, 291, 486, 13, 51536, 51536, 492, 603, 362, 281, 1520, 300, 13, 51700, 51700, 509, 603, 362, 281, 48377, 300, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.216089843421854, "compression_ratio": 1.6093023255813954, "no_caption_prob": 1.2029499885102268e-05}, {"id": 558, "seek": 219162, "start": 2203.02, "end": 2208.58, "text": " it uses to keep track of the fact that you validated those conditions.", "tokens": [50364, 1079, 11, 293, 300, 311, 767, 2293, 437, 9809, 42677, 1601, 311, 2699, 76, 29562, 7372, 775, 13, 50660, 50660, 467, 6676, 309, 807, 257, 2638, 295, 7363, 763, 11, 293, 550, 309, 575, 257, 1333, 295, 903, 25796, 2010, 300, 50934, 50934, 309, 4960, 281, 1066, 2837, 295, 264, 1186, 300, 291, 40693, 729, 4487, 13, 51212, 51212, 407, 300, 311, 2138, 257, 7363, 3109, 11, 498, 291, 486, 13, 51536, 51536, 492, 603, 362, 281, 1520, 300, 13, 51700, 51700, 509, 603, 362, 281, 48377, 300, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.216089843421854, "compression_ratio": 1.6093023255813954, "no_caption_prob": 1.2029499885102268e-05}, {"id": 559, "seek": 219162, "start": 2208.58, "end": 2215.06, "text": " So that's definitely a valid approach, if you will.", "tokens": [50364, 1079, 11, 293, 300, 311, 767, 2293, 437, 9809, 42677, 1601, 311, 2699, 76, 29562, 7372, 775, 13, 50660, 50660, 467, 6676, 309, 807, 257, 2638, 295, 7363, 763, 11, 293, 550, 309, 575, 257, 1333, 295, 903, 25796, 2010, 300, 50934, 50934, 309, 4960, 281, 1066, 2837, 295, 264, 1186, 300, 291, 40693, 729, 4487, 13, 51212, 51212, 407, 300, 311, 2138, 257, 7363, 3109, 11, 498, 291, 486, 13, 51536, 51536, 492, 603, 362, 281, 1520, 300, 13, 51700, 51700, 509, 603, 362, 281, 48377, 300, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.216089843421854, "compression_ratio": 1.6093023255813954, "no_caption_prob": 1.2029499885102268e-05}, {"id": 560, "seek": 219162, "start": 2215.06, "end": 2218.3399999999997, "text": " We'll have to check that.", "tokens": [50364, 1079, 11, 293, 300, 311, 767, 2293, 437, 9809, 42677, 1601, 311, 2699, 76, 29562, 7372, 775, 13, 50660, 50660, 467, 6676, 309, 807, 257, 2638, 295, 7363, 763, 11, 293, 550, 309, 575, 257, 1333, 295, 903, 25796, 2010, 300, 50934, 50934, 309, 4960, 281, 1066, 2837, 295, 264, 1186, 300, 291, 40693, 729, 4487, 13, 51212, 51212, 407, 300, 311, 2138, 257, 7363, 3109, 11, 498, 291, 486, 13, 51536, 51536, 492, 603, 362, 281, 1520, 300, 13, 51700, 51700, 509, 603, 362, 281, 48377, 300, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.216089843421854, "compression_ratio": 1.6093023255813954, "no_caption_prob": 1.2029499885102268e-05}, {"id": 561, "seek": 219162, "start": 2218.3399999999997, "end": 2219.7, "text": " You'll have to parse that.", "tokens": [50364, 1079, 11, 293, 300, 311, 767, 2293, 437, 9809, 42677, 1601, 311, 2699, 76, 29562, 7372, 775, 13, 50660, 50660, 467, 6676, 309, 807, 257, 2638, 295, 7363, 763, 11, 293, 550, 309, 575, 257, 1333, 295, 903, 25796, 2010, 300, 50934, 50934, 309, 4960, 281, 1066, 2837, 295, 264, 1186, 300, 291, 40693, 729, 4487, 13, 51212, 51212, 407, 300, 311, 2138, 257, 7363, 3109, 11, 498, 291, 486, 13, 51536, 51536, 492, 603, 362, 281, 1520, 300, 13, 51700, 51700, 509, 603, 362, 281, 48377, 300, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.216089843421854, "compression_ratio": 1.6093023255813954, "no_caption_prob": 1.2029499885102268e-05}, {"id": 562, "seek": 221970, "start": 2219.7, "end": 2221.8999999999996, "text": " That sounds very weird.", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 563, "seek": 221970, "start": 2221.8999999999996, "end": 2225.18, "text": " So you just opened the bank accounts.", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 564, "seek": 221970, "start": 2225.18, "end": 2227.22, "text": " We're going to have to parse your information.", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 565, "seek": 221970, "start": 2227.22, "end": 2231.8199999999997, "text": " Sorry, what?", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 566, "seek": 221970, "start": 2231.8199999999997, "end": 2234.2999999999997, "text": " Don't validate my information, parse it.", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 567, "seek": 221970, "start": 2234.2999999999997, "end": 2237.02, "text": " This is unprofessional.", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 568, "seek": 221970, "start": 2237.02, "end": 2242.04, "text": " Yeah, I think phantom types definitely fit in here.", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 569, "seek": 221970, "start": 2242.04, "end": 2248.3799999999997, "text": " It is interesting because you can unwrap the phantom types in a more permissive way, depending", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 570, "seek": 221970, "start": 2248.3799999999997, "end": 2249.62, "text": " on how you structure it.", "tokens": [50364, 663, 3263, 588, 3657, 13, 50474, 50474, 407, 291, 445, 5625, 264, 3765, 9402, 13, 50638, 50638, 492, 434, 516, 281, 362, 281, 48377, 428, 1589, 13, 50740, 50740, 4919, 11, 437, 30, 50970, 50970, 1468, 380, 29562, 452, 1589, 11, 48377, 309, 13, 51094, 51094, 639, 307, 517, 29175, 44226, 13, 51230, 51230, 865, 11, 286, 519, 903, 25796, 3467, 2138, 3318, 294, 510, 13, 51481, 51481, 467, 307, 1880, 570, 291, 393, 14853, 4007, 264, 903, 25796, 3467, 294, 257, 544, 4784, 891, 488, 636, 11, 5413, 51798, 51798, 322, 577, 291, 3877, 309, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.24749865390286588, "compression_ratio": 1.5299145299145298, "no_caption_prob": 5.307189348968677e-05}, {"id": 571, "seek": 224962, "start": 2249.62, "end": 2256.5, "text": " So for example, let's say you have an ID type, and it has a phantom type with different ID", "tokens": [50364, 407, 337, 1365, 11, 718, 311, 584, 291, 362, 364, 7348, 2010, 11, 293, 309, 575, 257, 903, 25796, 2010, 365, 819, 7348, 50708, 50708, 3467, 13, 50758, 50758, 509, 393, 445, 14853, 4007, 264, 7348, 13, 50856, 50856, 509, 500, 380, 362, 281, 764, 2685, 2098, 281, 14853, 4007, 309, 13, 51069, 51069, 467, 439, 7029, 1952, 12216, 281, 519, 466, 437, 32567, 360, 286, 528, 281, 2893, 11, 293, 51324, 51324, 577, 360, 613, 819, 2699, 76, 5759, 300, 286, 478, 1228, 854, 385, 360, 300, 30, 51616, 51616, 509, 362, 903, 25796, 3467, 300, 291, 764, 281, 7690, 721, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14818979423736858, "compression_ratio": 1.6609442060085837, "no_caption_prob": 6.240539278223878e-06}, {"id": 572, "seek": 224962, "start": 2256.5, "end": 2257.5, "text": " types.", "tokens": [50364, 407, 337, 1365, 11, 718, 311, 584, 291, 362, 364, 7348, 2010, 11, 293, 309, 575, 257, 903, 25796, 2010, 365, 819, 7348, 50708, 50708, 3467, 13, 50758, 50758, 509, 393, 445, 14853, 4007, 264, 7348, 13, 50856, 50856, 509, 500, 380, 362, 281, 764, 2685, 2098, 281, 14853, 4007, 309, 13, 51069, 51069, 467, 439, 7029, 1952, 12216, 281, 519, 466, 437, 32567, 360, 286, 528, 281, 2893, 11, 293, 51324, 51324, 577, 360, 613, 819, 2699, 76, 5759, 300, 286, 478, 1228, 854, 385, 360, 300, 30, 51616, 51616, 509, 362, 903, 25796, 3467, 300, 291, 764, 281, 7690, 721, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14818979423736858, "compression_ratio": 1.6609442060085837, "no_caption_prob": 6.240539278223878e-06}, {"id": 573, "seek": 224962, "start": 2257.5, "end": 2259.46, "text": " You can just unwrap the ID.", "tokens": [50364, 407, 337, 1365, 11, 718, 311, 584, 291, 362, 364, 7348, 2010, 11, 293, 309, 575, 257, 903, 25796, 2010, 365, 819, 7348, 50708, 50708, 3467, 13, 50758, 50758, 509, 393, 445, 14853, 4007, 264, 7348, 13, 50856, 50856, 509, 500, 380, 362, 281, 764, 2685, 2098, 281, 14853, 4007, 309, 13, 51069, 51069, 467, 439, 7029, 1952, 12216, 281, 519, 466, 437, 32567, 360, 286, 528, 281, 2893, 11, 293, 51324, 51324, 577, 360, 613, 819, 2699, 76, 5759, 300, 286, 478, 1228, 854, 385, 360, 300, 30, 51616, 51616, 509, 362, 903, 25796, 3467, 300, 291, 764, 281, 7690, 721, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14818979423736858, "compression_ratio": 1.6609442060085837, "no_caption_prob": 6.240539278223878e-06}, {"id": 574, "seek": 224962, "start": 2259.46, "end": 2263.72, "text": " You don't have to use specific ways to unwrap it.", "tokens": [50364, 407, 337, 1365, 11, 718, 311, 584, 291, 362, 364, 7348, 2010, 11, 293, 309, 575, 257, 903, 25796, 2010, 365, 819, 7348, 50708, 50708, 3467, 13, 50758, 50758, 509, 393, 445, 14853, 4007, 264, 7348, 13, 50856, 50856, 509, 500, 380, 362, 281, 764, 2685, 2098, 281, 14853, 4007, 309, 13, 51069, 51069, 467, 439, 7029, 1952, 12216, 281, 519, 466, 437, 32567, 360, 286, 528, 281, 2893, 11, 293, 51324, 51324, 577, 360, 613, 819, 2699, 76, 5759, 300, 286, 478, 1228, 854, 385, 360, 300, 30, 51616, 51616, 509, 362, 903, 25796, 3467, 300, 291, 764, 281, 7690, 721, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14818979423736858, "compression_ratio": 1.6609442060085837, "no_caption_prob": 6.240539278223878e-06}, {"id": 575, "seek": 224962, "start": 2263.72, "end": 2268.8199999999997, "text": " It all requires human judgment to think about what guarantees do I want to provide, and", "tokens": [50364, 407, 337, 1365, 11, 718, 311, 584, 291, 362, 364, 7348, 2010, 11, 293, 309, 575, 257, 903, 25796, 2010, 365, 819, 7348, 50708, 50708, 3467, 13, 50758, 50758, 509, 393, 445, 14853, 4007, 264, 7348, 13, 50856, 50856, 509, 500, 380, 362, 281, 764, 2685, 2098, 281, 14853, 4007, 309, 13, 51069, 51069, 467, 439, 7029, 1952, 12216, 281, 519, 466, 437, 32567, 360, 286, 528, 281, 2893, 11, 293, 51324, 51324, 577, 360, 613, 819, 2699, 76, 5759, 300, 286, 478, 1228, 854, 385, 360, 300, 30, 51616, 51616, 509, 362, 903, 25796, 3467, 300, 291, 764, 281, 7690, 721, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14818979423736858, "compression_ratio": 1.6609442060085837, "no_caption_prob": 6.240539278223878e-06}, {"id": 576, "seek": 224962, "start": 2268.8199999999997, "end": 2274.66, "text": " how do these different Elm devices that I'm using help me do that?", "tokens": [50364, 407, 337, 1365, 11, 718, 311, 584, 291, 362, 364, 7348, 2010, 11, 293, 309, 575, 257, 903, 25796, 2010, 365, 819, 7348, 50708, 50708, 3467, 13, 50758, 50758, 509, 393, 445, 14853, 4007, 264, 7348, 13, 50856, 50856, 509, 500, 380, 362, 281, 764, 2685, 2098, 281, 14853, 4007, 309, 13, 51069, 51069, 467, 439, 7029, 1952, 12216, 281, 519, 466, 437, 32567, 360, 286, 528, 281, 2893, 11, 293, 51324, 51324, 577, 360, 613, 819, 2699, 76, 5759, 300, 286, 478, 1228, 854, 385, 360, 300, 30, 51616, 51616, 509, 362, 903, 25796, 3467, 300, 291, 764, 281, 7690, 721, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14818979423736858, "compression_ratio": 1.6609442060085837, "no_caption_prob": 6.240539278223878e-06}, {"id": 577, "seek": 224962, "start": 2274.66, "end": 2279.46, "text": " You have phantom types that you use to construct things.", "tokens": [50364, 407, 337, 1365, 11, 718, 311, 584, 291, 362, 364, 7348, 2010, 11, 293, 309, 575, 257, 903, 25796, 2010, 365, 819, 7348, 50708, 50708, 3467, 13, 50758, 50758, 509, 393, 445, 14853, 4007, 264, 7348, 13, 50856, 50856, 509, 500, 380, 362, 281, 764, 2685, 2098, 281, 14853, 4007, 309, 13, 51069, 51069, 467, 439, 7029, 1952, 12216, 281, 519, 466, 437, 32567, 360, 286, 528, 281, 2893, 11, 293, 51324, 51324, 577, 360, 613, 819, 2699, 76, 5759, 300, 286, 478, 1228, 854, 385, 360, 300, 30, 51616, 51616, 509, 362, 903, 25796, 3467, 300, 291, 764, 281, 7690, 721, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14818979423736858, "compression_ratio": 1.6609442060085837, "no_caption_prob": 6.240539278223878e-06}, {"id": 578, "seek": 227946, "start": 2279.46, "end": 2286.14, "text": " Another way of saying it, there are types for which you can only build a type with a", "tokens": [50364, 3996, 636, 295, 1566, 309, 11, 456, 366, 3467, 337, 597, 291, 393, 787, 1322, 257, 2010, 365, 257, 50698, 50698, 1629, 903, 25796, 2010, 1228, 512, 6828, 13, 50954, 50954, 509, 393, 652, 988, 300, 456, 311, 787, 472, 636, 281, 1322, 257, 2158, 365, 341, 1900, 2010, 11, 365, 51324, 51324, 341, 1900, 2158, 337, 257, 903, 25796, 2010, 11, 293, 300, 307, 1228, 341, 2445, 13, 51586, 51586, 639, 2445, 307, 428, 21156, 260, 2445, 11, 1936, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17557480755974264, "compression_ratio": 1.763157894736842, "no_caption_prob": 5.561542639043182e-05}, {"id": 579, "seek": 227946, "start": 2286.14, "end": 2291.26, "text": " certain phantom type using some functions.", "tokens": [50364, 3996, 636, 295, 1566, 309, 11, 456, 366, 3467, 337, 597, 291, 393, 787, 1322, 257, 2010, 365, 257, 50698, 50698, 1629, 903, 25796, 2010, 1228, 512, 6828, 13, 50954, 50954, 509, 393, 652, 988, 300, 456, 311, 787, 472, 636, 281, 1322, 257, 2158, 365, 341, 1900, 2010, 11, 365, 51324, 51324, 341, 1900, 2158, 337, 257, 903, 25796, 2010, 11, 293, 300, 307, 1228, 341, 2445, 13, 51586, 51586, 639, 2445, 307, 428, 21156, 260, 2445, 11, 1936, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17557480755974264, "compression_ratio": 1.763157894736842, "no_caption_prob": 5.561542639043182e-05}, {"id": 580, "seek": 227946, "start": 2291.26, "end": 2298.66, "text": " You can make sure that there's only one way to build a value with this exact type, with", "tokens": [50364, 3996, 636, 295, 1566, 309, 11, 456, 366, 3467, 337, 597, 291, 393, 787, 1322, 257, 2010, 365, 257, 50698, 50698, 1629, 903, 25796, 2010, 1228, 512, 6828, 13, 50954, 50954, 509, 393, 652, 988, 300, 456, 311, 787, 472, 636, 281, 1322, 257, 2158, 365, 341, 1900, 2010, 11, 365, 51324, 51324, 341, 1900, 2158, 337, 257, 903, 25796, 2010, 11, 293, 300, 307, 1228, 341, 2445, 13, 51586, 51586, 639, 2445, 307, 428, 21156, 260, 2445, 11, 1936, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17557480755974264, "compression_ratio": 1.763157894736842, "no_caption_prob": 5.561542639043182e-05}, {"id": 581, "seek": 227946, "start": 2298.66, "end": 2303.9, "text": " this exact value for a phantom type, and that is using this function.", "tokens": [50364, 3996, 636, 295, 1566, 309, 11, 456, 366, 3467, 337, 597, 291, 393, 787, 1322, 257, 2010, 365, 257, 50698, 50698, 1629, 903, 25796, 2010, 1228, 512, 6828, 13, 50954, 50954, 509, 393, 652, 988, 300, 456, 311, 787, 472, 636, 281, 1322, 257, 2158, 365, 341, 1900, 2010, 11, 365, 51324, 51324, 341, 1900, 2158, 337, 257, 903, 25796, 2010, 11, 293, 300, 307, 1228, 341, 2445, 13, 51586, 51586, 639, 2445, 307, 428, 21156, 260, 2445, 11, 1936, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17557480755974264, "compression_ratio": 1.763157894736842, "no_caption_prob": 5.561542639043182e-05}, {"id": 582, "seek": 227946, "start": 2303.9, "end": 2307.9, "text": " This function is your parser function, basically.", "tokens": [50364, 3996, 636, 295, 1566, 309, 11, 456, 366, 3467, 337, 597, 291, 393, 787, 1322, 257, 2010, 365, 257, 50698, 50698, 1629, 903, 25796, 2010, 1228, 512, 6828, 13, 50954, 50954, 509, 393, 652, 988, 300, 456, 311, 787, 472, 636, 281, 1322, 257, 2158, 365, 341, 1900, 2010, 11, 365, 51324, 51324, 341, 1900, 2158, 337, 257, 903, 25796, 2010, 11, 293, 300, 307, 1228, 341, 2445, 13, 51586, 51586, 639, 2445, 307, 428, 21156, 260, 2445, 11, 1936, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.17557480755974264, "compression_ratio": 1.763157894736842, "no_caption_prob": 5.561542639043182e-05}, {"id": 583, "seek": 230790, "start": 2307.9, "end": 2314.2200000000003, "text": " Then you can probably destructure it using functions.", "tokens": [50364, 1396, 291, 393, 1391, 2677, 2885, 309, 1228, 6828, 13, 50680, 50680, 639, 307, 787, 2074, 498, 291, 434, 1228, 364, 42687, 2010, 13, 50890, 50890, 1079, 13, 50940, 50940, 1779, 13, 50990, 50990, 1743, 337, 264, 903, 25796, 551, 300, 291, 764, 11, 291, 393, 19219, 264, 2010, 295, 428, 903, 25796, 2010, 11, 51286, 51286, 457, 406, 264, 47479, 337, 264, 903, 25796, 2010, 13, 51386, 51386, 407, 264, 787, 551, 300, 393, 1322, 4190, 365, 300, 903, 25796, 2010, 8570, 11, 4195, 7348, 337, 1365, 11, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.20054511613743278, "compression_ratio": 1.6682926829268292, "no_caption_prob": 3.882892997353338e-05}, {"id": 584, "seek": 230790, "start": 2314.2200000000003, "end": 2318.42, "text": " This is only true if you're using an opaque type.", "tokens": [50364, 1396, 291, 393, 1391, 2677, 2885, 309, 1228, 6828, 13, 50680, 50680, 639, 307, 787, 2074, 498, 291, 434, 1228, 364, 42687, 2010, 13, 50890, 50890, 1079, 13, 50940, 50940, 1779, 13, 50990, 50990, 1743, 337, 264, 903, 25796, 551, 300, 291, 764, 11, 291, 393, 19219, 264, 2010, 295, 428, 903, 25796, 2010, 11, 51286, 51286, 457, 406, 264, 47479, 337, 264, 903, 25796, 2010, 13, 51386, 51386, 407, 264, 787, 551, 300, 393, 1322, 4190, 365, 300, 903, 25796, 2010, 8570, 11, 4195, 7348, 337, 1365, 11, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.20054511613743278, "compression_ratio": 1.6682926829268292, "no_caption_prob": 3.882892997353338e-05}, {"id": 585, "seek": 230790, "start": 2318.42, "end": 2319.42, "text": " Yes.", "tokens": [50364, 1396, 291, 393, 1391, 2677, 2885, 309, 1228, 6828, 13, 50680, 50680, 639, 307, 787, 2074, 498, 291, 434, 1228, 364, 42687, 2010, 13, 50890, 50890, 1079, 13, 50940, 50940, 1779, 13, 50990, 50990, 1743, 337, 264, 903, 25796, 551, 300, 291, 764, 11, 291, 393, 19219, 264, 2010, 295, 428, 903, 25796, 2010, 11, 51286, 51286, 457, 406, 264, 47479, 337, 264, 903, 25796, 2010, 13, 51386, 51386, 407, 264, 787, 551, 300, 393, 1322, 4190, 365, 300, 903, 25796, 2010, 8570, 11, 4195, 7348, 337, 1365, 11, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.20054511613743278, "compression_ratio": 1.6682926829268292, "no_caption_prob": 3.882892997353338e-05}, {"id": 586, "seek": 230790, "start": 2319.42, "end": 2320.42, "text": " Right.", "tokens": [50364, 1396, 291, 393, 1391, 2677, 2885, 309, 1228, 6828, 13, 50680, 50680, 639, 307, 787, 2074, 498, 291, 434, 1228, 364, 42687, 2010, 13, 50890, 50890, 1079, 13, 50940, 50940, 1779, 13, 50990, 50990, 1743, 337, 264, 903, 25796, 551, 300, 291, 764, 11, 291, 393, 19219, 264, 2010, 295, 428, 903, 25796, 2010, 11, 51286, 51286, 457, 406, 264, 47479, 337, 264, 903, 25796, 2010, 13, 51386, 51386, 407, 264, 787, 551, 300, 393, 1322, 4190, 365, 300, 903, 25796, 2010, 8570, 11, 4195, 7348, 337, 1365, 11, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.20054511613743278, "compression_ratio": 1.6682926829268292, "no_caption_prob": 3.882892997353338e-05}, {"id": 587, "seek": 230790, "start": 2320.42, "end": 2326.34, "text": " Like for the phantom thing that you use, you can expose the type of your phantom type,", "tokens": [50364, 1396, 291, 393, 1391, 2677, 2885, 309, 1228, 6828, 13, 50680, 50680, 639, 307, 787, 2074, 498, 291, 434, 1228, 364, 42687, 2010, 13, 50890, 50890, 1079, 13, 50940, 50940, 1779, 13, 50990, 50990, 1743, 337, 264, 903, 25796, 551, 300, 291, 764, 11, 291, 393, 19219, 264, 2010, 295, 428, 903, 25796, 2010, 11, 51286, 51286, 457, 406, 264, 47479, 337, 264, 903, 25796, 2010, 13, 51386, 51386, 407, 264, 787, 551, 300, 393, 1322, 4190, 365, 300, 903, 25796, 2010, 8570, 11, 4195, 7348, 337, 1365, 11, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.20054511613743278, "compression_ratio": 1.6682926829268292, "no_caption_prob": 3.882892997353338e-05}, {"id": 588, "seek": 230790, "start": 2326.34, "end": 2328.34, "text": " but not the constructor for the phantom type.", "tokens": [50364, 1396, 291, 393, 1391, 2677, 2885, 309, 1228, 6828, 13, 50680, 50680, 639, 307, 787, 2074, 498, 291, 434, 1228, 364, 42687, 2010, 13, 50890, 50890, 1079, 13, 50940, 50940, 1779, 13, 50990, 50990, 1743, 337, 264, 903, 25796, 551, 300, 291, 764, 11, 291, 393, 19219, 264, 2010, 295, 428, 903, 25796, 2010, 11, 51286, 51286, 457, 406, 264, 47479, 337, 264, 903, 25796, 2010, 13, 51386, 51386, 407, 264, 787, 551, 300, 393, 1322, 4190, 365, 300, 903, 25796, 2010, 8570, 11, 4195, 7348, 337, 1365, 11, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.20054511613743278, "compression_ratio": 1.6682926829268292, "no_caption_prob": 3.882892997353338e-05}, {"id": 589, "seek": 230790, "start": 2328.34, "end": 2335.7000000000003, "text": " So the only thing that can build values with that phantom type attached, user ID for example,", "tokens": [50364, 1396, 291, 393, 1391, 2677, 2885, 309, 1228, 6828, 13, 50680, 50680, 639, 307, 787, 2074, 498, 291, 434, 1228, 364, 42687, 2010, 13, 50890, 50890, 1079, 13, 50940, 50940, 1779, 13, 50990, 50990, 1743, 337, 264, 903, 25796, 551, 300, 291, 764, 11, 291, 393, 19219, 264, 2010, 295, 428, 903, 25796, 2010, 11, 51286, 51286, 457, 406, 264, 47479, 337, 264, 903, 25796, 2010, 13, 51386, 51386, 407, 264, 787, 551, 300, 393, 1322, 4190, 365, 300, 903, 25796, 2010, 8570, 11, 4195, 7348, 337, 1365, 11, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.20054511613743278, "compression_ratio": 1.6682926829268292, "no_caption_prob": 3.882892997353338e-05}, {"id": 590, "seek": 233570, "start": 2335.7, "end": 2340.22, "text": " can only be built in this one module because the constructor is hidden in that module.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 591, "seek": 233570, "start": 2340.22, "end": 2341.22, "text": " Yeah.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 592, "seek": 233570, "start": 2341.22, "end": 2345.1, "text": " So basically the idea is to get you across that border.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 593, "seek": 233570, "start": 2345.1, "end": 2348.9399999999996, "text": " So you need to enter this function.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 594, "seek": 233570, "start": 2348.9399999999996, "end": 2354.2599999999998, "text": " You need an ID with this type for a phantom type.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 595, "seek": 233570, "start": 2354.2599999999998, "end": 2359.98, "text": " And once that is done, you don't care about the underlying data or the phantom type value", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 596, "seek": 233570, "start": 2359.98, "end": 2360.98, "text": " anymore.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 597, "seek": 233570, "start": 2360.98, "end": 2361.98, "text": " Right.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 598, "seek": 233570, "start": 2361.98, "end": 2364.3799999999997, "text": " You just want to access the value of the ID.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 599, "seek": 233570, "start": 2364.3799999999997, "end": 2365.3799999999997, "text": " Yes.", "tokens": [50364, 393, 787, 312, 3094, 294, 341, 472, 10088, 570, 264, 47479, 307, 7633, 294, 300, 10088, 13, 50590, 50590, 865, 13, 50640, 50640, 407, 1936, 264, 1558, 307, 281, 483, 291, 2108, 300, 7838, 13, 50834, 50834, 407, 291, 643, 281, 3242, 341, 2445, 13, 51026, 51026, 509, 643, 364, 7348, 365, 341, 2010, 337, 257, 903, 25796, 2010, 13, 51292, 51292, 400, 1564, 300, 307, 1096, 11, 291, 500, 380, 1127, 466, 264, 14217, 1412, 420, 264, 903, 25796, 2010, 2158, 51578, 51578, 3602, 13, 51628, 51628, 1779, 13, 51678, 51678, 509, 445, 528, 281, 2105, 264, 2158, 295, 264, 7348, 13, 51798, 51798, 1079, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15179857477411493, "compression_ratio": 1.6595744680851063, "no_caption_prob": 1.0783028301375452e-05}, {"id": 600, "seek": 236538, "start": 2365.38, "end": 2369.7400000000002, "text": " I don't remember if I brought up this analogy in our opaque types episode or not.", "tokens": [50364, 286, 500, 380, 1604, 498, 286, 3038, 493, 341, 21663, 294, 527, 42687, 3467, 3500, 420, 406, 13, 50582, 50582, 4803, 286, 519, 466, 729, 15043, 30014, 300, 436, 976, 291, 13, 50758, 50758, 759, 291, 352, 281, 257, 8795, 7431, 293, 436, 976, 291, 257, 15043, 4235, 300, 7363, 1024, 300, 291, 434, 295, 51058, 51058, 7583, 3205, 11, 420, 291, 352, 281, 257, 8543, 293, 436, 976, 291, 257, 15043, 4235, 300, 1619, 300, 291, 4835, 51313, 51313, 337, 428, 10550, 13, 51391, 51391, 3443, 291, 434, 294, 264, 8543, 21645, 11, 561, 500, 380, 362, 281, 1066, 8568, 428, 10550, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10487237683048954, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00011411336163291708}, {"id": 601, "seek": 236538, "start": 2369.7400000000002, "end": 2373.26, "text": " Sometimes I think about those wristbands that they give you.", "tokens": [50364, 286, 500, 380, 1604, 498, 286, 3038, 493, 341, 21663, 294, 527, 42687, 3467, 3500, 420, 406, 13, 50582, 50582, 4803, 286, 519, 466, 729, 15043, 30014, 300, 436, 976, 291, 13, 50758, 50758, 759, 291, 352, 281, 257, 8795, 7431, 293, 436, 976, 291, 257, 15043, 4235, 300, 7363, 1024, 300, 291, 434, 295, 51058, 51058, 7583, 3205, 11, 420, 291, 352, 281, 257, 8543, 293, 436, 976, 291, 257, 15043, 4235, 300, 1619, 300, 291, 4835, 51313, 51313, 337, 428, 10550, 13, 51391, 51391, 3443, 291, 434, 294, 264, 8543, 21645, 11, 561, 500, 380, 362, 281, 1066, 8568, 428, 10550, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10487237683048954, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00011411336163291708}, {"id": 602, "seek": 236538, "start": 2373.26, "end": 2379.26, "text": " If you go to a beer garden and they give you a wristband that validates that you're of", "tokens": [50364, 286, 500, 380, 1604, 498, 286, 3038, 493, 341, 21663, 294, 527, 42687, 3467, 3500, 420, 406, 13, 50582, 50582, 4803, 286, 519, 466, 729, 15043, 30014, 300, 436, 976, 291, 13, 50758, 50758, 759, 291, 352, 281, 257, 8795, 7431, 293, 436, 976, 291, 257, 15043, 4235, 300, 7363, 1024, 300, 291, 434, 295, 51058, 51058, 7583, 3205, 11, 420, 291, 352, 281, 257, 8543, 293, 436, 976, 291, 257, 15043, 4235, 300, 1619, 300, 291, 4835, 51313, 51313, 337, 428, 10550, 13, 51391, 51391, 3443, 291, 434, 294, 264, 8543, 21645, 11, 561, 500, 380, 362, 281, 1066, 8568, 428, 10550, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10487237683048954, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00011411336163291708}, {"id": 603, "seek": 236538, "start": 2379.26, "end": 2384.36, "text": " drinking age, or you go to a concert and they give you a wristband that says that you paid", "tokens": [50364, 286, 500, 380, 1604, 498, 286, 3038, 493, 341, 21663, 294, 527, 42687, 3467, 3500, 420, 406, 13, 50582, 50582, 4803, 286, 519, 466, 729, 15043, 30014, 300, 436, 976, 291, 13, 50758, 50758, 759, 291, 352, 281, 257, 8795, 7431, 293, 436, 976, 291, 257, 15043, 4235, 300, 7363, 1024, 300, 291, 434, 295, 51058, 51058, 7583, 3205, 11, 420, 291, 352, 281, 257, 8543, 293, 436, 976, 291, 257, 15043, 4235, 300, 1619, 300, 291, 4835, 51313, 51313, 337, 428, 10550, 13, 51391, 51391, 3443, 291, 434, 294, 264, 8543, 21645, 11, 561, 500, 380, 362, 281, 1066, 8568, 428, 10550, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10487237683048954, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00011411336163291708}, {"id": 604, "seek": 236538, "start": 2384.36, "end": 2385.92, "text": " for your ticket.", "tokens": [50364, 286, 500, 380, 1604, 498, 286, 3038, 493, 341, 21663, 294, 527, 42687, 3467, 3500, 420, 406, 13, 50582, 50582, 4803, 286, 519, 466, 729, 15043, 30014, 300, 436, 976, 291, 13, 50758, 50758, 759, 291, 352, 281, 257, 8795, 7431, 293, 436, 976, 291, 257, 15043, 4235, 300, 7363, 1024, 300, 291, 434, 295, 51058, 51058, 7583, 3205, 11, 420, 291, 352, 281, 257, 8543, 293, 436, 976, 291, 257, 15043, 4235, 300, 1619, 300, 291, 4835, 51313, 51313, 337, 428, 10550, 13, 51391, 51391, 3443, 291, 434, 294, 264, 8543, 21645, 11, 561, 500, 380, 362, 281, 1066, 8568, 428, 10550, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10487237683048954, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00011411336163291708}, {"id": 605, "seek": 236538, "start": 2385.92, "end": 2389.6600000000003, "text": " Once you're in the concert venue, people don't have to keep checking your ticket.", "tokens": [50364, 286, 500, 380, 1604, 498, 286, 3038, 493, 341, 21663, 294, 527, 42687, 3467, 3500, 420, 406, 13, 50582, 50582, 4803, 286, 519, 466, 729, 15043, 30014, 300, 436, 976, 291, 13, 50758, 50758, 759, 291, 352, 281, 257, 8795, 7431, 293, 436, 976, 291, 257, 15043, 4235, 300, 7363, 1024, 300, 291, 434, 295, 51058, 51058, 7583, 3205, 11, 420, 291, 352, 281, 257, 8543, 293, 436, 976, 291, 257, 15043, 4235, 300, 1619, 300, 291, 4835, 51313, 51313, 337, 428, 10550, 13, 51391, 51391, 3443, 291, 434, 294, 264, 8543, 21645, 11, 561, 500, 380, 362, 281, 1066, 8568, 428, 10550, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.10487237683048954, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00011411336163291708}, {"id": 606, "seek": 238966, "start": 2389.66, "end": 2396.22, "text": " Or once you're at the festival, you don't have to show your ID to buy a drink because", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 607, "seek": 238966, "start": 2396.22, "end": 2399.2599999999998, "text": " that's already been parsed, if you will.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 608, "seek": 238966, "start": 2399.2599999999998, "end": 2400.2599999999998, "text": " Exactly.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 609, "seek": 238966, "start": 2400.2599999999998, "end": 2402.18, "text": " They don't have to validate it at every stand.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 610, "seek": 238966, "start": 2402.18, "end": 2407.7799999999997, "text": " There's absolutely no way that people will exchange their wristbands though.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 611, "seek": 238966, "start": 2407.7799999999997, "end": 2409.74, "text": " So it's all totally safe.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 612, "seek": 238966, "start": 2409.74, "end": 2410.74, "text": " That's right.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 613, "seek": 238966, "start": 2410.74, "end": 2411.74, "text": " Exactly.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 614, "seek": 238966, "start": 2411.74, "end": 2412.74, "text": " You have to think about that.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 615, "seek": 238966, "start": 2412.74, "end": 2416.8999999999996, "text": " You have to be thinking like a security person.", "tokens": [50364, 1610, 1564, 291, 434, 412, 264, 12091, 11, 291, 500, 380, 362, 281, 855, 428, 7348, 281, 2256, 257, 2822, 570, 50692, 50692, 300, 311, 1217, 668, 21156, 292, 11, 498, 291, 486, 13, 50844, 50844, 7587, 13, 50894, 50894, 814, 500, 380, 362, 281, 29562, 309, 412, 633, 1463, 13, 50990, 50990, 821, 311, 3122, 572, 636, 300, 561, 486, 7742, 641, 15043, 30014, 1673, 13, 51270, 51270, 407, 309, 311, 439, 3879, 3273, 13, 51368, 51368, 663, 311, 558, 13, 51418, 51418, 7587, 13, 51468, 51468, 509, 362, 281, 519, 466, 300, 13, 51518, 51518, 509, 362, 281, 312, 1953, 411, 257, 3825, 954, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.1492564398963172, "compression_ratio": 1.6355932203389831, "no_caption_prob": 0.00010889175609918311}, {"id": 616, "seek": 241690, "start": 2416.9, "end": 2422.34, "text": " In this case, I think you want to unwrap a bit later.", "tokens": [50364, 682, 341, 1389, 11, 286, 519, 291, 528, 281, 14853, 4007, 257, 857, 1780, 13, 50636, 50636, 286, 519, 264, 7690, 830, 366, 886, 9495, 294, 341, 1389, 13, 50830, 50830, 286, 519, 291, 434, 558, 13, 50880, 50880, 286, 519, 291, 434, 558, 466, 300, 13, 50982, 50982, 3996, 551, 466, 903, 25796, 3467, 5717, 2375, 3467, 307, 291, 393, 7263, 4444, 264, 9239, 51322, 51322, 295, 8936, 1412, 293, 309, 1177, 380, 3464, 291, 281, 4813, 264, 9239, 295, 1412, 13, 51602, 51602, 509, 393, 14853, 4007, 552, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1464893140290913, "compression_ratio": 1.7346938775510203, "no_caption_prob": 5.6822873375494964e-06}, {"id": 617, "seek": 241690, "start": 2422.34, "end": 2426.2200000000003, "text": " I think the constructors are too exposed in this case.", "tokens": [50364, 682, 341, 1389, 11, 286, 519, 291, 528, 281, 14853, 4007, 257, 857, 1780, 13, 50636, 50636, 286, 519, 264, 7690, 830, 366, 886, 9495, 294, 341, 1389, 13, 50830, 50830, 286, 519, 291, 434, 558, 13, 50880, 50880, 286, 519, 291, 434, 558, 466, 300, 13, 50982, 50982, 3996, 551, 466, 903, 25796, 3467, 5717, 2375, 3467, 307, 291, 393, 7263, 4444, 264, 9239, 51322, 51322, 295, 8936, 1412, 293, 309, 1177, 380, 3464, 291, 281, 4813, 264, 9239, 295, 1412, 13, 51602, 51602, 509, 393, 14853, 4007, 552, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1464893140290913, "compression_ratio": 1.7346938775510203, "no_caption_prob": 5.6822873375494964e-06}, {"id": 618, "seek": 241690, "start": 2426.2200000000003, "end": 2427.2200000000003, "text": " I think you're right.", "tokens": [50364, 682, 341, 1389, 11, 286, 519, 291, 528, 281, 14853, 4007, 257, 857, 1780, 13, 50636, 50636, 286, 519, 264, 7690, 830, 366, 886, 9495, 294, 341, 1389, 13, 50830, 50830, 286, 519, 291, 434, 558, 13, 50880, 50880, 286, 519, 291, 434, 558, 466, 300, 13, 50982, 50982, 3996, 551, 466, 903, 25796, 3467, 5717, 2375, 3467, 307, 291, 393, 7263, 4444, 264, 9239, 51322, 51322, 295, 8936, 1412, 293, 309, 1177, 380, 3464, 291, 281, 4813, 264, 9239, 295, 1412, 13, 51602, 51602, 509, 393, 14853, 4007, 552, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1464893140290913, "compression_ratio": 1.7346938775510203, "no_caption_prob": 5.6822873375494964e-06}, {"id": 619, "seek": 241690, "start": 2427.2200000000003, "end": 2429.26, "text": " I think you're right about that.", "tokens": [50364, 682, 341, 1389, 11, 286, 519, 291, 528, 281, 14853, 4007, 257, 857, 1780, 13, 50636, 50636, 286, 519, 264, 7690, 830, 366, 886, 9495, 294, 341, 1389, 13, 50830, 50830, 286, 519, 291, 434, 558, 13, 50880, 50880, 286, 519, 291, 434, 558, 466, 300, 13, 50982, 50982, 3996, 551, 466, 903, 25796, 3467, 5717, 2375, 3467, 307, 291, 393, 7263, 4444, 264, 9239, 51322, 51322, 295, 8936, 1412, 293, 309, 1177, 380, 3464, 291, 281, 4813, 264, 9239, 295, 1412, 13, 51602, 51602, 509, 393, 14853, 4007, 552, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1464893140290913, "compression_ratio": 1.7346938775510203, "no_caption_prob": 5.6822873375494964e-06}, {"id": 620, "seek": 241690, "start": 2429.26, "end": 2436.06, "text": " Another thing about phantom types versus custom types is you can potentially grab the bits", "tokens": [50364, 682, 341, 1389, 11, 286, 519, 291, 528, 281, 14853, 4007, 257, 857, 1780, 13, 50636, 50636, 286, 519, 264, 7690, 830, 366, 886, 9495, 294, 341, 1389, 13, 50830, 50830, 286, 519, 291, 434, 558, 13, 50880, 50880, 286, 519, 291, 434, 558, 466, 300, 13, 50982, 50982, 3996, 551, 466, 903, 25796, 3467, 5717, 2375, 3467, 307, 291, 393, 7263, 4444, 264, 9239, 51322, 51322, 295, 8936, 1412, 293, 309, 1177, 380, 3464, 291, 281, 4813, 264, 9239, 295, 1412, 13, 51602, 51602, 509, 393, 14853, 4007, 552, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1464893140290913, "compression_ratio": 1.7346938775510203, "no_caption_prob": 5.6822873375494964e-06}, {"id": 621, "seek": 241690, "start": 2436.06, "end": 2441.6600000000003, "text": " of raw data and it doesn't force you to handle the bits of data.", "tokens": [50364, 682, 341, 1389, 11, 286, 519, 291, 528, 281, 14853, 4007, 257, 857, 1780, 13, 50636, 50636, 286, 519, 264, 7690, 830, 366, 886, 9495, 294, 341, 1389, 13, 50830, 50830, 286, 519, 291, 434, 558, 13, 50880, 50880, 286, 519, 291, 434, 558, 466, 300, 13, 50982, 50982, 3996, 551, 466, 903, 25796, 3467, 5717, 2375, 3467, 307, 291, 393, 7263, 4444, 264, 9239, 51322, 51322, 295, 8936, 1412, 293, 309, 1177, 380, 3464, 291, 281, 4813, 264, 9239, 295, 1412, 13, 51602, 51602, 509, 393, 14853, 4007, 552, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1464893140290913, "compression_ratio": 1.7346938775510203, "no_caption_prob": 5.6822873375494964e-06}, {"id": 622, "seek": 241690, "start": 2441.6600000000003, "end": 2443.98, "text": " You can unwrap them.", "tokens": [50364, 682, 341, 1389, 11, 286, 519, 291, 528, 281, 14853, 4007, 257, 857, 1780, 13, 50636, 50636, 286, 519, 264, 7690, 830, 366, 886, 9495, 294, 341, 1389, 13, 50830, 50830, 286, 519, 291, 434, 558, 13, 50880, 50880, 286, 519, 291, 434, 558, 466, 300, 13, 50982, 50982, 3996, 551, 466, 903, 25796, 3467, 5717, 2375, 3467, 307, 291, 393, 7263, 4444, 264, 9239, 51322, 51322, 295, 8936, 1412, 293, 309, 1177, 380, 3464, 291, 281, 4813, 264, 9239, 295, 1412, 13, 51602, 51602, 509, 393, 14853, 4007, 552, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1464893140290913, "compression_ratio": 1.7346938775510203, "no_caption_prob": 5.6822873375494964e-06}, {"id": 623, "seek": 244398, "start": 2443.98, "end": 2449.38, "text": " Again, it's just a matter of using your own judgment to think about what are the possible", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 624, "seek": 244398, "start": 2449.38, "end": 2455.7400000000002, "text": " ways that these assumptions that I'm trying to provide can be bypassed.", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 625, "seek": 244398, "start": 2455.7400000000002, "end": 2456.7400000000002, "text": " That's the question.", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 626, "seek": 244398, "start": 2456.7400000000002, "end": 2457.7400000000002, "text": " Yeah.", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 627, "seek": 244398, "start": 2457.7400000000002, "end": 2461.26, "text": " Basically, if you use this technique well, you notice it because one, you don't have", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 628, "seek": 244398, "start": 2461.26, "end": 2465.46, "text": " to fake conditions or fake branches.", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 629, "seek": 244398, "start": 2465.46, "end": 2469.1, "text": " So basically, you made impossible code paths impossible.", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 630, "seek": 244398, "start": 2469.1, "end": 2473.66, "text": " Things that you can't test, those are impossible.", "tokens": [50364, 3764, 11, 309, 311, 445, 257, 1871, 295, 1228, 428, 1065, 12216, 281, 519, 466, 437, 366, 264, 1944, 50634, 50634, 2098, 300, 613, 17695, 300, 286, 478, 1382, 281, 2893, 393, 312, 24996, 292, 13, 50952, 50952, 663, 311, 264, 1168, 13, 51002, 51002, 865, 13, 51052, 51052, 8537, 11, 498, 291, 764, 341, 6532, 731, 11, 291, 3449, 309, 570, 472, 11, 291, 500, 380, 362, 51228, 51228, 281, 7592, 4487, 420, 7592, 14770, 13, 51438, 51438, 407, 1936, 11, 291, 1027, 6243, 3089, 14518, 6243, 13, 51620, 51620, 9514, 300, 291, 393, 380, 1500, 11, 729, 366, 6243, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14214908851767485, "compression_ratio": 1.668, "no_caption_prob": 2.2120419089333154e-05}, {"id": 631, "seek": 247366, "start": 2473.66, "end": 2479.54, "text": " And two, you have not faked any data anywhere in the code.", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 632, "seek": 247366, "start": 2479.54, "end": 2480.54, "text": " Yes.", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 633, "seek": 247366, "start": 2480.54, "end": 2481.54, "text": " Right.", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 634, "seek": 247366, "start": 2481.54, "end": 2484.22, "text": " By passing in like maybe with default value.", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 635, "seek": 247366, "start": 2484.22, "end": 2485.22, "text": " Exactly.", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 636, "seek": 247366, "start": 2485.22, "end": 2487.2999999999997, "text": " Yes, that's a great point.", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 637, "seek": 247366, "start": 2487.2999999999997, "end": 2488.62, "text": " That's a major red flag.", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 638, "seek": 247366, "start": 2488.62, "end": 2494.66, "text": " If you are just in an impossible case where it's like, this should never happen, instead", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 639, "seek": 247366, "start": 2494.66, "end": 2499.58, "text": " of throwing an exception in a language other than Elm, you do a similar thing where you", "tokens": [50364, 400, 732, 11, 291, 362, 406, 283, 7301, 604, 1412, 4992, 294, 264, 3089, 13, 50658, 50658, 1079, 13, 50708, 50708, 1779, 13, 50758, 50758, 3146, 8437, 294, 411, 1310, 365, 7576, 2158, 13, 50892, 50892, 7587, 13, 50942, 50942, 1079, 11, 300, 311, 257, 869, 935, 13, 51046, 51046, 663, 311, 257, 2563, 2182, 7166, 13, 51112, 51112, 759, 291, 366, 445, 294, 364, 6243, 1389, 689, 309, 311, 411, 11, 341, 820, 1128, 1051, 11, 2602, 51414, 51414, 295, 10238, 364, 11183, 294, 257, 2856, 661, 813, 2699, 76, 11, 291, 360, 257, 2531, 551, 689, 291, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.17588246910317432, "compression_ratio": 1.5021276595744681, "no_caption_prob": 3.138138708891347e-06}, {"id": 640, "seek": 249958, "start": 2499.58, "end": 2504.66, "text": " just say, I'll just return this value because this will never happen.", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 641, "seek": 249958, "start": 2504.66, "end": 2507.86, "text": " So I'll just return the string.", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 642, "seek": 249958, "start": 2507.86, "end": 2508.86, "text": " This should never happen.", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 643, "seek": 249958, "start": 2508.86, "end": 2515.86, "text": " Or worse, you call the function recursively so that the Elm compiler is happy.", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 644, "seek": 249958, "start": 2515.86, "end": 2516.86, "text": " Exactly.", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 645, "seek": 249958, "start": 2516.86, "end": 2517.86, "text": " Those are code smells.", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 646, "seek": 249958, "start": 2517.86, "end": 2519.74, "text": " Yeah, that's the code smell.", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 647, "seek": 249958, "start": 2519.74, "end": 2526.9, "text": " If you arrive at this should never happen, it should be in your parsing code at the periphery,", "tokens": [50364, 445, 584, 11, 286, 603, 445, 2736, 341, 2158, 570, 341, 486, 1128, 1051, 13, 50618, 50618, 407, 286, 603, 445, 2736, 264, 6798, 13, 50778, 50778, 639, 820, 1128, 1051, 13, 50828, 50828, 1610, 5324, 11, 291, 818, 264, 2445, 20560, 3413, 370, 300, 264, 2699, 76, 31958, 307, 2055, 13, 51178, 51178, 7587, 13, 51228, 51228, 3950, 366, 3089, 10036, 13, 51278, 51278, 865, 11, 300, 311, 264, 3089, 4316, 13, 51372, 51372, 759, 291, 8881, 412, 341, 820, 1128, 1051, 11, 309, 820, 312, 294, 428, 21156, 278, 3089, 412, 264, 26807, 88, 11, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.17285962624124962, "compression_ratio": 1.7320574162679425, "no_caption_prob": 2.1112153262947686e-05}, {"id": 648, "seek": 252690, "start": 2526.9, "end": 2531.62, "text": " the code that's doing the initial logic to make sure the input is good.", "tokens": [50364, 264, 3089, 300, 311, 884, 264, 5883, 9952, 281, 652, 988, 264, 4846, 307, 665, 13, 50600, 50600, 400, 550, 291, 445, 4258, 11043, 13, 50728, 50728, 10328, 11, 291, 362, 264, 665, 1412, 293, 291, 1190, 428, 4965, 9952, 13, 50902, 50902, 865, 13, 50952, 50952, 759, 291, 360, 483, 666, 300, 486, 406, 1051, 1389, 11, 412, 264, 588, 1935, 11, 1856, 257, 2871, 13, 51306, 51306, 1711, 264, 588, 11, 588, 11, 588, 1935, 13, 51492, 51492, 1436, 5911, 11, 561, 486, 406, 312, 2055, 562, 436, 4411, 300, 341, 307, 3657, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.21256278991699218, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.6273879484506324e-05}, {"id": 649, "seek": 252690, "start": 2531.62, "end": 2534.1800000000003, "text": " And then you just immediately exit.", "tokens": [50364, 264, 3089, 300, 311, 884, 264, 5883, 9952, 281, 652, 988, 264, 4846, 307, 665, 13, 50600, 50600, 400, 550, 291, 445, 4258, 11043, 13, 50728, 50728, 10328, 11, 291, 362, 264, 665, 1412, 293, 291, 1190, 428, 4965, 9952, 13, 50902, 50902, 865, 13, 50952, 50952, 759, 291, 360, 483, 666, 300, 486, 406, 1051, 1389, 11, 412, 264, 588, 1935, 11, 1856, 257, 2871, 13, 51306, 51306, 1711, 264, 588, 11, 588, 11, 588, 1935, 13, 51492, 51492, 1436, 5911, 11, 561, 486, 406, 312, 2055, 562, 436, 4411, 300, 341, 307, 3657, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.21256278991699218, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.6273879484506324e-05}, {"id": 650, "seek": 252690, "start": 2534.1800000000003, "end": 2537.6600000000003, "text": " Otherwise, you have the good data and you run your core logic.", "tokens": [50364, 264, 3089, 300, 311, 884, 264, 5883, 9952, 281, 652, 988, 264, 4846, 307, 665, 13, 50600, 50600, 400, 550, 291, 445, 4258, 11043, 13, 50728, 50728, 10328, 11, 291, 362, 264, 665, 1412, 293, 291, 1190, 428, 4965, 9952, 13, 50902, 50902, 865, 13, 50952, 50952, 759, 291, 360, 483, 666, 300, 486, 406, 1051, 1389, 11, 412, 264, 588, 1935, 11, 1856, 257, 2871, 13, 51306, 51306, 1711, 264, 588, 11, 588, 11, 588, 1935, 13, 51492, 51492, 1436, 5911, 11, 561, 486, 406, 312, 2055, 562, 436, 4411, 300, 341, 307, 3657, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.21256278991699218, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.6273879484506324e-05}, {"id": 651, "seek": 252690, "start": 2537.6600000000003, "end": 2538.6600000000003, "text": " Yeah.", "tokens": [50364, 264, 3089, 300, 311, 884, 264, 5883, 9952, 281, 652, 988, 264, 4846, 307, 665, 13, 50600, 50600, 400, 550, 291, 445, 4258, 11043, 13, 50728, 50728, 10328, 11, 291, 362, 264, 665, 1412, 293, 291, 1190, 428, 4965, 9952, 13, 50902, 50902, 865, 13, 50952, 50952, 759, 291, 360, 483, 666, 300, 486, 406, 1051, 1389, 11, 412, 264, 588, 1935, 11, 1856, 257, 2871, 13, 51306, 51306, 1711, 264, 588, 11, 588, 11, 588, 1935, 13, 51492, 51492, 1436, 5911, 11, 561, 486, 406, 312, 2055, 562, 436, 4411, 300, 341, 307, 3657, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.21256278991699218, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.6273879484506324e-05}, {"id": 652, "seek": 252690, "start": 2538.6600000000003, "end": 2545.7400000000002, "text": " If you do get into that will not happen case, at the very least, leave a comment.", "tokens": [50364, 264, 3089, 300, 311, 884, 264, 5883, 9952, 281, 652, 988, 264, 4846, 307, 665, 13, 50600, 50600, 400, 550, 291, 445, 4258, 11043, 13, 50728, 50728, 10328, 11, 291, 362, 264, 665, 1412, 293, 291, 1190, 428, 4965, 9952, 13, 50902, 50902, 865, 13, 50952, 50952, 759, 291, 360, 483, 666, 300, 486, 406, 1051, 1389, 11, 412, 264, 588, 1935, 11, 1856, 257, 2871, 13, 51306, 51306, 1711, 264, 588, 11, 588, 11, 588, 1935, 13, 51492, 51492, 1436, 5911, 11, 561, 486, 406, 312, 2055, 562, 436, 4411, 300, 341, 307, 3657, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.21256278991699218, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.6273879484506324e-05}, {"id": 653, "seek": 252690, "start": 2545.7400000000002, "end": 2549.46, "text": " At the very, very, very least.", "tokens": [50364, 264, 3089, 300, 311, 884, 264, 5883, 9952, 281, 652, 988, 264, 4846, 307, 665, 13, 50600, 50600, 400, 550, 291, 445, 4258, 11043, 13, 50728, 50728, 10328, 11, 291, 362, 264, 665, 1412, 293, 291, 1190, 428, 4965, 9952, 13, 50902, 50902, 865, 13, 50952, 50952, 759, 291, 360, 483, 666, 300, 486, 406, 1051, 1389, 11, 412, 264, 588, 1935, 11, 1856, 257, 2871, 13, 51306, 51306, 1711, 264, 588, 11, 588, 11, 588, 1935, 13, 51492, 51492, 1436, 5911, 11, 561, 486, 406, 312, 2055, 562, 436, 4411, 300, 341, 307, 3657, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.21256278991699218, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.6273879484506324e-05}, {"id": 654, "seek": 252690, "start": 2549.46, "end": 2555.94, "text": " Because otherwise, people will not be happy when they discover that this is weird.", "tokens": [50364, 264, 3089, 300, 311, 884, 264, 5883, 9952, 281, 652, 988, 264, 4846, 307, 665, 13, 50600, 50600, 400, 550, 291, 445, 4258, 11043, 13, 50728, 50728, 10328, 11, 291, 362, 264, 665, 1412, 293, 291, 1190, 428, 4965, 9952, 13, 50902, 50902, 865, 13, 50952, 50952, 759, 291, 360, 483, 666, 300, 486, 406, 1051, 1389, 11, 412, 264, 588, 1935, 11, 1856, 257, 2871, 13, 51306, 51306, 1711, 264, 588, 11, 588, 11, 588, 1935, 13, 51492, 51492, 1436, 5911, 11, 561, 486, 406, 312, 2055, 562, 436, 4411, 300, 341, 307, 3657, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.21256278991699218, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.6273879484506324e-05}, {"id": 655, "seek": 255594, "start": 2555.94, "end": 2557.78, "text": " Yeah.", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 656, "seek": 255594, "start": 2557.78, "end": 2562.02, "text": " Or use a co worker's computer to do the commit so that the get blame show somebody else's", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 657, "seek": 255594, "start": 2562.02, "end": 2563.02, "text": " name.", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 658, "seek": 255594, "start": 2563.02, "end": 2564.02, "text": " Yeah.", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 659, "seek": 255594, "start": 2564.02, "end": 2567.86, "text": " Let's talk a little bit about how you would, you know, you're going through your code base", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 660, "seek": 255594, "start": 2567.86, "end": 2572.94, "text": " and you're looking for opportunities to improve your code using this parse don't validate", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 661, "seek": 255594, "start": 2572.94, "end": 2573.94, "text": " idea.", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 662, "seek": 255594, "start": 2573.94, "end": 2575.7000000000003, "text": " What should you be on the lookout for?", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 663, "seek": 255594, "start": 2575.7000000000003, "end": 2576.84, "text": " Look for those comments.", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 664, "seek": 255594, "start": 2576.84, "end": 2579.84, "text": " Look for this should never happen code.", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 665, "seek": 255594, "start": 2579.84, "end": 2583.26, "text": " What else should you be on the lookout for?", "tokens": [50364, 865, 13, 50456, 50456, 1610, 764, 257, 598, 11346, 311, 3820, 281, 360, 264, 5599, 370, 300, 264, 483, 10127, 855, 2618, 1646, 311, 50668, 50668, 1315, 13, 50718, 50718, 865, 13, 50768, 50768, 961, 311, 751, 257, 707, 857, 466, 577, 291, 576, 11, 291, 458, 11, 291, 434, 516, 807, 428, 3089, 3096, 50960, 50960, 293, 291, 434, 1237, 337, 4786, 281, 3470, 428, 3089, 1228, 341, 48377, 500, 380, 29562, 51214, 51214, 1558, 13, 51264, 51264, 708, 820, 291, 312, 322, 264, 41025, 337, 30, 51352, 51352, 2053, 337, 729, 3053, 13, 51409, 51409, 2053, 337, 341, 820, 1128, 1051, 3089, 13, 51559, 51559, 708, 1646, 820, 291, 312, 322, 264, 41025, 337, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.19369591957281443, "compression_ratio": 1.7894736842105263, "no_caption_prob": 4.133486800128594e-05}, {"id": 666, "seek": 258326, "start": 2583.26, "end": 2586.78, "text": " Then you notice that a certain condition is made several times.", "tokens": [50364, 1396, 291, 3449, 300, 257, 1629, 4188, 307, 1027, 2940, 1413, 13, 50540, 50540, 865, 13, 50590, 50590, 407, 498, 341, 307, 6707, 11, 293, 294, 300, 11, 300, 9819, 11, 291, 536, 11, 498, 341, 307, 6707, 797, 11, 597, 307, 50994, 50994, 406, 2049, 264, 1389, 11, 2673, 291, 486, 362, 300, 294, 4994, 6828, 11, 597, 307, 11, 597, 51212, 51212, 1669, 309, 257, 857, 6081, 281, 980, 13, 51304, 51304, 286, 2171, 536, 6828, 411, 307, 551, 411, 341, 307, 445, 865, 11, 309, 307, 445, 865, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.2219751477241516, "compression_ratio": 1.7033492822966507, "no_caption_prob": 5.7382381783099845e-05}, {"id": 667, "seek": 258326, "start": 2586.78, "end": 2587.78, "text": " Yeah.", "tokens": [50364, 1396, 291, 3449, 300, 257, 1629, 4188, 307, 1027, 2940, 1413, 13, 50540, 50540, 865, 13, 50590, 50590, 407, 498, 341, 307, 6707, 11, 293, 294, 300, 11, 300, 9819, 11, 291, 536, 11, 498, 341, 307, 6707, 797, 11, 597, 307, 50994, 50994, 406, 2049, 264, 1389, 11, 2673, 291, 486, 362, 300, 294, 4994, 6828, 11, 597, 307, 11, 597, 51212, 51212, 1669, 309, 257, 857, 6081, 281, 980, 13, 51304, 51304, 286, 2171, 536, 6828, 411, 307, 551, 411, 341, 307, 445, 865, 11, 309, 307, 445, 865, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.2219751477241516, "compression_ratio": 1.7033492822966507, "no_caption_prob": 5.7382381783099845e-05}, {"id": 668, "seek": 258326, "start": 2587.78, "end": 2595.86, "text": " So if this is empty, and in that, that branch, you see, if this is empty again, which is", "tokens": [50364, 1396, 291, 3449, 300, 257, 1629, 4188, 307, 1027, 2940, 1413, 13, 50540, 50540, 865, 13, 50590, 50590, 407, 498, 341, 307, 6707, 11, 293, 294, 300, 11, 300, 9819, 11, 291, 536, 11, 498, 341, 307, 6707, 797, 11, 597, 307, 50994, 50994, 406, 2049, 264, 1389, 11, 2673, 291, 486, 362, 300, 294, 4994, 6828, 11, 597, 307, 11, 597, 51212, 51212, 1669, 309, 257, 857, 6081, 281, 980, 13, 51304, 51304, 286, 2171, 536, 6828, 411, 307, 551, 411, 341, 307, 445, 865, 11, 309, 307, 445, 865, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.2219751477241516, "compression_ratio": 1.7033492822966507, "no_caption_prob": 5.7382381783099845e-05}, {"id": 669, "seek": 258326, "start": 2595.86, "end": 2600.2200000000003, "text": " not often the case, usually you will have that in separate functions, which is, which", "tokens": [50364, 1396, 291, 3449, 300, 257, 1629, 4188, 307, 1027, 2940, 1413, 13, 50540, 50540, 865, 13, 50590, 50590, 407, 498, 341, 307, 6707, 11, 293, 294, 300, 11, 300, 9819, 11, 291, 536, 11, 498, 341, 307, 6707, 797, 11, 597, 307, 50994, 50994, 406, 2049, 264, 1389, 11, 2673, 291, 486, 362, 300, 294, 4994, 6828, 11, 597, 307, 11, 597, 51212, 51212, 1669, 309, 257, 857, 6081, 281, 980, 13, 51304, 51304, 286, 2171, 536, 6828, 411, 307, 551, 411, 341, 307, 445, 865, 11, 309, 307, 445, 865, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.2219751477241516, "compression_ratio": 1.7033492822966507, "no_caption_prob": 5.7382381783099845e-05}, {"id": 670, "seek": 258326, "start": 2600.2200000000003, "end": 2602.0600000000004, "text": " makes it a bit harder to tell.", "tokens": [50364, 1396, 291, 3449, 300, 257, 1629, 4188, 307, 1027, 2940, 1413, 13, 50540, 50540, 865, 13, 50590, 50590, 407, 498, 341, 307, 6707, 11, 293, 294, 300, 11, 300, 9819, 11, 291, 536, 11, 498, 341, 307, 6707, 797, 11, 597, 307, 50994, 50994, 406, 2049, 264, 1389, 11, 2673, 291, 486, 362, 300, 294, 4994, 6828, 11, 597, 307, 11, 597, 51212, 51212, 1669, 309, 257, 857, 6081, 281, 980, 13, 51304, 51304, 286, 2171, 536, 6828, 411, 307, 551, 411, 341, 307, 445, 865, 11, 309, 307, 445, 865, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.2219751477241516, "compression_ratio": 1.7033492822966507, "no_caption_prob": 5.7382381783099845e-05}, {"id": 671, "seek": 258326, "start": 2602.0600000000004, "end": 2612.5400000000004, "text": " I sometimes see functions like is thing like this is just Yeah, it is just Yeah.", "tokens": [50364, 1396, 291, 3449, 300, 257, 1629, 4188, 307, 1027, 2940, 1413, 13, 50540, 50540, 865, 13, 50590, 50590, 407, 498, 341, 307, 6707, 11, 293, 294, 300, 11, 300, 9819, 11, 291, 536, 11, 498, 341, 307, 6707, 797, 11, 597, 307, 50994, 50994, 406, 2049, 264, 1389, 11, 2673, 291, 486, 362, 300, 294, 4994, 6828, 11, 597, 307, 11, 597, 51212, 51212, 1669, 309, 257, 857, 6081, 281, 980, 13, 51304, 51304, 286, 2171, 536, 6828, 411, 307, 551, 411, 341, 307, 445, 865, 11, 309, 307, 445, 865, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.2219751477241516, "compression_ratio": 1.7033492822966507, "no_caption_prob": 5.7382381783099845e-05}, {"id": 672, "seek": 261254, "start": 2612.54, "end": 2619.14, "text": " So if you return a Boolean, that is usually not great that people refer to that as Boolean", "tokens": [50364, 407, 498, 291, 2736, 257, 23351, 28499, 11, 300, 307, 2673, 406, 869, 300, 561, 2864, 281, 300, 382, 23351, 28499, 50694, 50694, 46101, 2171, 13, 50768, 50768, 583, 2171, 11, 291, 611, 536, 300, 562, 291, 362, 257, 2445, 11247, 411, 257, 2604, 781, 11, 264, 51070, 51070, 700, 472, 885, 257, 23351, 28499, 11, 293, 264, 1150, 4478, 885, 264, 2158, 300, 291, 366, 1228, 13, 51398, 51398, 407, 300, 307, 733, 295, 21156, 278, 500, 380, 29562, 11, 457, 291, 434, 920, 12678, 257, 23351, 28499, 13, 51600, 51600, 509, 434, 406, 5145, 2837, 295, 309, 294, 257, 588, 3273, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.21276052282490862, "compression_ratio": 1.7574468085106383, "no_caption_prob": 3.321342956041917e-05}, {"id": 673, "seek": 261254, "start": 2619.14, "end": 2620.62, "text": " blindness sometimes.", "tokens": [50364, 407, 498, 291, 2736, 257, 23351, 28499, 11, 300, 307, 2673, 406, 869, 300, 561, 2864, 281, 300, 382, 23351, 28499, 50694, 50694, 46101, 2171, 13, 50768, 50768, 583, 2171, 11, 291, 611, 536, 300, 562, 291, 362, 257, 2445, 11247, 411, 257, 2604, 781, 11, 264, 51070, 51070, 700, 472, 885, 257, 23351, 28499, 11, 293, 264, 1150, 4478, 885, 264, 2158, 300, 291, 366, 1228, 13, 51398, 51398, 407, 300, 307, 733, 295, 21156, 278, 500, 380, 29562, 11, 457, 291, 434, 920, 12678, 257, 23351, 28499, 13, 51600, 51600, 509, 434, 406, 5145, 2837, 295, 309, 294, 257, 588, 3273, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.21276052282490862, "compression_ratio": 1.7574468085106383, "no_caption_prob": 3.321342956041917e-05}, {"id": 674, "seek": 261254, "start": 2620.62, "end": 2626.66, "text": " But sometimes, you also see that when you have a function returns like a tuple, the", "tokens": [50364, 407, 498, 291, 2736, 257, 23351, 28499, 11, 300, 307, 2673, 406, 869, 300, 561, 2864, 281, 300, 382, 23351, 28499, 50694, 50694, 46101, 2171, 13, 50768, 50768, 583, 2171, 11, 291, 611, 536, 300, 562, 291, 362, 257, 2445, 11247, 411, 257, 2604, 781, 11, 264, 51070, 51070, 700, 472, 885, 257, 23351, 28499, 11, 293, 264, 1150, 4478, 885, 264, 2158, 300, 291, 366, 1228, 13, 51398, 51398, 407, 300, 307, 733, 295, 21156, 278, 500, 380, 29562, 11, 457, 291, 434, 920, 12678, 257, 23351, 28499, 13, 51600, 51600, 509, 434, 406, 5145, 2837, 295, 309, 294, 257, 588, 3273, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.21276052282490862, "compression_ratio": 1.7574468085106383, "no_caption_prob": 3.321342956041917e-05}, {"id": 675, "seek": 261254, "start": 2626.66, "end": 2633.22, "text": " first one being a Boolean, and the second element being the value that you are using.", "tokens": [50364, 407, 498, 291, 2736, 257, 23351, 28499, 11, 300, 307, 2673, 406, 869, 300, 561, 2864, 281, 300, 382, 23351, 28499, 50694, 50694, 46101, 2171, 13, 50768, 50768, 583, 2171, 11, 291, 611, 536, 300, 562, 291, 362, 257, 2445, 11247, 411, 257, 2604, 781, 11, 264, 51070, 51070, 700, 472, 885, 257, 23351, 28499, 11, 293, 264, 1150, 4478, 885, 264, 2158, 300, 291, 366, 1228, 13, 51398, 51398, 407, 300, 307, 733, 295, 21156, 278, 500, 380, 29562, 11, 457, 291, 434, 920, 12678, 257, 23351, 28499, 13, 51600, 51600, 509, 434, 406, 5145, 2837, 295, 309, 294, 257, 588, 3273, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.21276052282490862, "compression_ratio": 1.7574468085106383, "no_caption_prob": 3.321342956041917e-05}, {"id": 676, "seek": 261254, "start": 2633.22, "end": 2637.2599999999998, "text": " So that is kind of parsing don't validate, but you're still returning a Boolean.", "tokens": [50364, 407, 498, 291, 2736, 257, 23351, 28499, 11, 300, 307, 2673, 406, 869, 300, 561, 2864, 281, 300, 382, 23351, 28499, 50694, 50694, 46101, 2171, 13, 50768, 50768, 583, 2171, 11, 291, 611, 536, 300, 562, 291, 362, 257, 2445, 11247, 411, 257, 2604, 781, 11, 264, 51070, 51070, 700, 472, 885, 257, 23351, 28499, 11, 293, 264, 1150, 4478, 885, 264, 2158, 300, 291, 366, 1228, 13, 51398, 51398, 407, 300, 307, 733, 295, 21156, 278, 500, 380, 29562, 11, 457, 291, 434, 920, 12678, 257, 23351, 28499, 13, 51600, 51600, 509, 434, 406, 5145, 2837, 295, 309, 294, 257, 588, 3273, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.21276052282490862, "compression_ratio": 1.7574468085106383, "no_caption_prob": 3.321342956041917e-05}, {"id": 677, "seek": 261254, "start": 2637.2599999999998, "end": 2641.54, "text": " You're not keeping track of it in a very safe way.", "tokens": [50364, 407, 498, 291, 2736, 257, 23351, 28499, 11, 300, 307, 2673, 406, 869, 300, 561, 2864, 281, 300, 382, 23351, 28499, 50694, 50694, 46101, 2171, 13, 50768, 50768, 583, 2171, 11, 291, 611, 536, 300, 562, 291, 362, 257, 2445, 11247, 411, 257, 2604, 781, 11, 264, 51070, 51070, 700, 472, 885, 257, 23351, 28499, 11, 293, 264, 1150, 4478, 885, 264, 2158, 300, 291, 366, 1228, 13, 51398, 51398, 407, 300, 307, 733, 295, 21156, 278, 500, 380, 29562, 11, 457, 291, 434, 920, 12678, 257, 23351, 28499, 13, 51600, 51600, 509, 434, 406, 5145, 2837, 295, 309, 294, 257, 588, 3273, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.21276052282490862, "compression_ratio": 1.7574468085106383, "no_caption_prob": 3.321342956041917e-05}, {"id": 678, "seek": 264154, "start": 2641.54, "end": 2643.5, "text": " Yeah, exactly.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 679, "seek": 264154, "start": 2643.5, "end": 2650.18, "text": " So that is the one that I've seen most and which is the most actionable for me.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 680, "seek": 264154, "start": 2650.18, "end": 2652.5, "text": " Like that is an instant red flag.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 681, "seek": 264154, "start": 2652.5, "end": 2654.2599999999998, "text": " And that is not very hard to tell.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 682, "seek": 264154, "start": 2654.2599999999998, "end": 2656.34, "text": " But it's quite rare.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 683, "seek": 264154, "start": 2656.34, "end": 2657.34, "text": " Right.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 684, "seek": 264154, "start": 2657.34, "end": 2658.34, "text": " Yeah.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 685, "seek": 264154, "start": 2658.34, "end": 2662.46, "text": " And then also, like, you know, this, this other case, you were mentioning where you're", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 686, "seek": 264154, "start": 2662.46, "end": 2669.66, "text": " essentially, I think of it that you're discarding information you'd get from a case statement", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 687, "seek": 264154, "start": 2669.66, "end": 2671.1, "text": " destructure.", "tokens": [50364, 865, 11, 2293, 13, 50462, 50462, 407, 300, 307, 264, 472, 300, 286, 600, 1612, 881, 293, 597, 307, 264, 881, 45098, 337, 385, 13, 50796, 50796, 1743, 300, 307, 364, 9836, 2182, 7166, 13, 50912, 50912, 400, 300, 307, 406, 588, 1152, 281, 980, 13, 51000, 51000, 583, 309, 311, 1596, 5892, 13, 51104, 51104, 1779, 13, 51154, 51154, 865, 13, 51204, 51204, 400, 550, 611, 11, 411, 11, 291, 458, 11, 341, 11, 341, 661, 1389, 11, 291, 645, 18315, 689, 291, 434, 51410, 51410, 4476, 11, 286, 519, 295, 309, 300, 291, 434, 31597, 278, 1589, 291, 1116, 483, 490, 257, 1389, 5629, 51770, 51770, 2677, 2885, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19315955120584238, "compression_ratio": 1.6291666666666667, "no_caption_prob": 3.321371696074493e-05}, {"id": 688, "seek": 267110, "start": 2671.1, "end": 2676.9, "text": " So like if you're saying is just Yeah, is that always a bad thing?", "tokens": [50364, 407, 411, 498, 291, 434, 1566, 307, 445, 865, 11, 307, 300, 1009, 257, 1578, 551, 30, 50654, 50654, 883, 11, 1310, 456, 311, 512, 3331, 689, 309, 311, 1392, 11, 457, 312, 322, 264, 41025, 337, 309, 13, 50852, 50852, 1743, 11, 286, 576, 574, 588, 7500, 412, 3089, 300, 311, 8568, 307, 445, 293, 550, 884, 746, 13, 51123, 51123, 400, 498, 309, 775, 307, 445, 6263, 538, 1310, 365, 7576, 11, 1338, 11, 420, 1228, 300, 2158, 4033, 11, 51412, 51412, 2293, 294, 604, 636, 13, 51492, 51492, 865, 11, 2293, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.18691598526155107, "compression_ratio": 1.584070796460177, "no_caption_prob": 3.269863736932166e-05}, {"id": 689, "seek": 267110, "start": 2676.9, "end": 2680.86, "text": " No, maybe there's some cases where it's okay, but be on the lookout for it.", "tokens": [50364, 407, 411, 498, 291, 434, 1566, 307, 445, 865, 11, 307, 300, 1009, 257, 1578, 551, 30, 50654, 50654, 883, 11, 1310, 456, 311, 512, 3331, 689, 309, 311, 1392, 11, 457, 312, 322, 264, 41025, 337, 309, 13, 50852, 50852, 1743, 11, 286, 576, 574, 588, 7500, 412, 3089, 300, 311, 8568, 307, 445, 293, 550, 884, 746, 13, 51123, 51123, 400, 498, 309, 775, 307, 445, 6263, 538, 1310, 365, 7576, 11, 1338, 11, 420, 1228, 300, 2158, 4033, 11, 51412, 51412, 2293, 294, 604, 636, 13, 51492, 51492, 865, 11, 2293, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.18691598526155107, "compression_ratio": 1.584070796460177, "no_caption_prob": 3.269863736932166e-05}, {"id": 690, "seek": 267110, "start": 2680.86, "end": 2686.2799999999997, "text": " Like, I would look very carefully at code that's checking is just and then doing something.", "tokens": [50364, 407, 411, 498, 291, 434, 1566, 307, 445, 865, 11, 307, 300, 1009, 257, 1578, 551, 30, 50654, 50654, 883, 11, 1310, 456, 311, 512, 3331, 689, 309, 311, 1392, 11, 457, 312, 322, 264, 41025, 337, 309, 13, 50852, 50852, 1743, 11, 286, 576, 574, 588, 7500, 412, 3089, 300, 311, 8568, 307, 445, 293, 550, 884, 746, 13, 51123, 51123, 400, 498, 309, 775, 307, 445, 6263, 538, 1310, 365, 7576, 11, 1338, 11, 420, 1228, 300, 2158, 4033, 11, 51412, 51412, 2293, 294, 604, 636, 13, 51492, 51492, 865, 11, 2293, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.18691598526155107, "compression_ratio": 1.584070796460177, "no_caption_prob": 3.269863736932166e-05}, {"id": 691, "seek": 267110, "start": 2686.2799999999997, "end": 2692.06, "text": " And if it does is just followed by maybe with default, yeah, or using that value anyway,", "tokens": [50364, 407, 411, 498, 291, 434, 1566, 307, 445, 865, 11, 307, 300, 1009, 257, 1578, 551, 30, 50654, 50654, 883, 11, 1310, 456, 311, 512, 3331, 689, 309, 311, 1392, 11, 457, 312, 322, 264, 41025, 337, 309, 13, 50852, 50852, 1743, 11, 286, 576, 574, 588, 7500, 412, 3089, 300, 311, 8568, 307, 445, 293, 550, 884, 746, 13, 51123, 51123, 400, 498, 309, 775, 307, 445, 6263, 538, 1310, 365, 7576, 11, 1338, 11, 420, 1228, 300, 2158, 4033, 11, 51412, 51412, 2293, 294, 604, 636, 13, 51492, 51492, 865, 11, 2293, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.18691598526155107, "compression_ratio": 1.584070796460177, "no_caption_prob": 3.269863736932166e-05}, {"id": 692, "seek": 267110, "start": 2692.06, "end": 2693.66, "text": " exactly in any way.", "tokens": [50364, 407, 411, 498, 291, 434, 1566, 307, 445, 865, 11, 307, 300, 1009, 257, 1578, 551, 30, 50654, 50654, 883, 11, 1310, 456, 311, 512, 3331, 689, 309, 311, 1392, 11, 457, 312, 322, 264, 41025, 337, 309, 13, 50852, 50852, 1743, 11, 286, 576, 574, 588, 7500, 412, 3089, 300, 311, 8568, 307, 445, 293, 550, 884, 746, 13, 51123, 51123, 400, 498, 309, 775, 307, 445, 6263, 538, 1310, 365, 7576, 11, 1338, 11, 420, 1228, 300, 2158, 4033, 11, 51412, 51412, 2293, 294, 604, 636, 13, 51492, 51492, 865, 11, 2293, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.18691598526155107, "compression_ratio": 1.584070796460177, "no_caption_prob": 3.269863736932166e-05}, {"id": 693, "seek": 267110, "start": 2693.66, "end": 2694.66, "text": " Yeah, exactly.", "tokens": [50364, 407, 411, 498, 291, 434, 1566, 307, 445, 865, 11, 307, 300, 1009, 257, 1578, 551, 30, 50654, 50654, 883, 11, 1310, 456, 311, 512, 3331, 689, 309, 311, 1392, 11, 457, 312, 322, 264, 41025, 337, 309, 13, 50852, 50852, 1743, 11, 286, 576, 574, 588, 7500, 412, 3089, 300, 311, 8568, 307, 445, 293, 550, 884, 746, 13, 51123, 51123, 400, 498, 309, 775, 307, 445, 6263, 538, 1310, 365, 7576, 11, 1338, 11, 420, 1228, 300, 2158, 4033, 11, 51412, 51412, 2293, 294, 604, 636, 13, 51492, 51492, 865, 11, 2293, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.18691598526155107, "compression_ratio": 1.584070796460177, "no_caption_prob": 3.269863736932166e-05}, {"id": 694, "seek": 269466, "start": 2694.66, "end": 2701.22, "text": " So if it destructures a value, and then uses that value, that's a clear smell.", "tokens": [50364, 407, 498, 309, 2677, 44513, 257, 2158, 11, 293, 550, 4960, 300, 2158, 11, 300, 311, 257, 1850, 4316, 13, 50692, 50692, 1079, 13, 50742, 50742, 407, 472, 551, 300, 286, 300, 291, 486, 536, 257, 688, 562, 291, 853, 281, 360, 281, 3079, 341, 6532, 11, 51060, 51060, 286, 519, 307, 291, 362, 257, 3840, 295, 6828, 11, 597, 589, 365, 257, 1310, 6798, 11, 337, 5197, 13, 51436, 51436, 400, 294, 472, 1389, 11, 291, 458, 300, 307, 257, 6798, 11, 437, 576, 291, 519, 820, 291, 550, 445, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.16767274956954153, "compression_ratio": 1.6121495327102804, "no_caption_prob": 1.0952694537991192e-05}, {"id": 695, "seek": 269466, "start": 2701.22, "end": 2702.22, "text": " Yes.", "tokens": [50364, 407, 498, 309, 2677, 44513, 257, 2158, 11, 293, 550, 4960, 300, 2158, 11, 300, 311, 257, 1850, 4316, 13, 50692, 50692, 1079, 13, 50742, 50742, 407, 472, 551, 300, 286, 300, 291, 486, 536, 257, 688, 562, 291, 853, 281, 360, 281, 3079, 341, 6532, 11, 51060, 51060, 286, 519, 307, 291, 362, 257, 3840, 295, 6828, 11, 597, 589, 365, 257, 1310, 6798, 11, 337, 5197, 13, 51436, 51436, 400, 294, 472, 1389, 11, 291, 458, 300, 307, 257, 6798, 11, 437, 576, 291, 519, 820, 291, 550, 445, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.16767274956954153, "compression_ratio": 1.6121495327102804, "no_caption_prob": 1.0952694537991192e-05}, {"id": 696, "seek": 269466, "start": 2702.22, "end": 2708.58, "text": " So one thing that I that you will see a lot when you try to do to apply this technique,", "tokens": [50364, 407, 498, 309, 2677, 44513, 257, 2158, 11, 293, 550, 4960, 300, 2158, 11, 300, 311, 257, 1850, 4316, 13, 50692, 50692, 1079, 13, 50742, 50742, 407, 472, 551, 300, 286, 300, 291, 486, 536, 257, 688, 562, 291, 853, 281, 360, 281, 3079, 341, 6532, 11, 51060, 51060, 286, 519, 307, 291, 362, 257, 3840, 295, 6828, 11, 597, 589, 365, 257, 1310, 6798, 11, 337, 5197, 13, 51436, 51436, 400, 294, 472, 1389, 11, 291, 458, 300, 307, 257, 6798, 11, 437, 576, 291, 519, 820, 291, 550, 445, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.16767274956954153, "compression_ratio": 1.6121495327102804, "no_caption_prob": 1.0952694537991192e-05}, {"id": 697, "seek": 269466, "start": 2708.58, "end": 2716.1, "text": " I think is you have a bunch of functions, which work with a maybe string, for instance.", "tokens": [50364, 407, 498, 309, 2677, 44513, 257, 2158, 11, 293, 550, 4960, 300, 2158, 11, 300, 311, 257, 1850, 4316, 13, 50692, 50692, 1079, 13, 50742, 50742, 407, 472, 551, 300, 286, 300, 291, 486, 536, 257, 688, 562, 291, 853, 281, 360, 281, 3079, 341, 6532, 11, 51060, 51060, 286, 519, 307, 291, 362, 257, 3840, 295, 6828, 11, 597, 589, 365, 257, 1310, 6798, 11, 337, 5197, 13, 51436, 51436, 400, 294, 472, 1389, 11, 291, 458, 300, 307, 257, 6798, 11, 437, 576, 291, 519, 820, 291, 550, 445, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.16767274956954153, "compression_ratio": 1.6121495327102804, "no_caption_prob": 1.0952694537991192e-05}, {"id": 698, "seek": 269466, "start": 2716.1, "end": 2721.74, "text": " And in one case, you know that is a string, what would you think should you then just", "tokens": [50364, 407, 498, 309, 2677, 44513, 257, 2158, 11, 293, 550, 4960, 300, 2158, 11, 300, 311, 257, 1850, 4316, 13, 50692, 50692, 1079, 13, 50742, 50742, 407, 472, 551, 300, 286, 300, 291, 486, 536, 257, 688, 562, 291, 853, 281, 360, 281, 3079, 341, 6532, 11, 51060, 51060, 286, 519, 307, 291, 362, 257, 3840, 295, 6828, 11, 597, 589, 365, 257, 1310, 6798, 11, 337, 5197, 13, 51436, 51436, 400, 294, 472, 1389, 11, 291, 458, 300, 307, 257, 6798, 11, 437, 576, 291, 519, 820, 291, 550, 445, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.16767274956954153, "compression_ratio": 1.6121495327102804, "no_caption_prob": 1.0952694537991192e-05}, {"id": 699, "seek": 272174, "start": 2721.74, "end": 2725.9799999999996, "text": " wrap it in and just or should you duplicate the function which takes a maybe string, but", "tokens": [50364, 7019, 309, 294, 293, 445, 420, 820, 291, 23976, 264, 2445, 597, 2516, 257, 1310, 6798, 11, 457, 50576, 50576, 550, 1177, 380, 4813, 264, 1825, 1389, 11, 291, 434, 1417, 466, 411, 2677, 1757, 1345, 293, 550, 50860, 50860, 1730, 2175, 309, 646, 1214, 264, 636, 309, 390, 294, 257, 636, 457, 406, 1730, 2175, 309, 646, 666, 264, 912, 51136, 51136, 2158, 445, 291, 362, 257, 30351, 13, 51289, 51289, 407, 291, 362, 257, 2445, 597, 2516, 300, 4195, 11, 1310, 30351, 293, 20119, 309, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16495500440182892, "compression_ratio": 1.7630331753554502, "no_caption_prob": 9.169222903437912e-05}, {"id": 700, "seek": 272174, "start": 2725.9799999999996, "end": 2731.66, "text": " then doesn't handle the nothing case, you're talking about like destructuring and then", "tokens": [50364, 7019, 309, 294, 293, 445, 420, 820, 291, 23976, 264, 2445, 597, 2516, 257, 1310, 6798, 11, 457, 50576, 50576, 550, 1177, 380, 4813, 264, 1825, 1389, 11, 291, 434, 1417, 466, 411, 2677, 1757, 1345, 293, 550, 50860, 50860, 1730, 2175, 309, 646, 1214, 264, 636, 309, 390, 294, 257, 636, 457, 406, 1730, 2175, 309, 646, 666, 264, 912, 51136, 51136, 2158, 445, 291, 362, 257, 30351, 13, 51289, 51289, 407, 291, 362, 257, 2445, 597, 2516, 300, 4195, 11, 1310, 30351, 293, 20119, 309, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16495500440182892, "compression_ratio": 1.7630331753554502, "no_caption_prob": 9.169222903437912e-05}, {"id": 701, "seek": 272174, "start": 2731.66, "end": 2737.18, "text": " piecing it back together the way it was in a way but not piecing it back into the same", "tokens": [50364, 7019, 309, 294, 293, 445, 420, 820, 291, 23976, 264, 2445, 597, 2516, 257, 1310, 6798, 11, 457, 50576, 50576, 550, 1177, 380, 4813, 264, 1825, 1389, 11, 291, 434, 1417, 466, 411, 2677, 1757, 1345, 293, 550, 50860, 50860, 1730, 2175, 309, 646, 1214, 264, 636, 309, 390, 294, 257, 636, 457, 406, 1730, 2175, 309, 646, 666, 264, 912, 51136, 51136, 2158, 445, 291, 362, 257, 30351, 13, 51289, 51289, 407, 291, 362, 257, 2445, 597, 2516, 300, 4195, 11, 1310, 30351, 293, 20119, 309, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16495500440182892, "compression_ratio": 1.7630331753554502, "no_caption_prob": 9.169222903437912e-05}, {"id": 702, "seek": 272174, "start": 2737.18, "end": 2740.24, "text": " value just you have a username.", "tokens": [50364, 7019, 309, 294, 293, 445, 420, 820, 291, 23976, 264, 2445, 597, 2516, 257, 1310, 6798, 11, 457, 50576, 50576, 550, 1177, 380, 4813, 264, 1825, 1389, 11, 291, 434, 1417, 466, 411, 2677, 1757, 1345, 293, 550, 50860, 50860, 1730, 2175, 309, 646, 1214, 264, 636, 309, 390, 294, 257, 636, 457, 406, 1730, 2175, 309, 646, 666, 264, 912, 51136, 51136, 2158, 445, 291, 362, 257, 30351, 13, 51289, 51289, 407, 291, 362, 257, 2445, 597, 2516, 300, 4195, 11, 1310, 30351, 293, 20119, 309, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16495500440182892, "compression_ratio": 1.7630331753554502, "no_caption_prob": 9.169222903437912e-05}, {"id": 703, "seek": 272174, "start": 2740.24, "end": 2746.9399999999996, "text": " So you have a function which takes that user, maybe username and displays it.", "tokens": [50364, 7019, 309, 294, 293, 445, 420, 820, 291, 23976, 264, 2445, 597, 2516, 257, 1310, 6798, 11, 457, 50576, 50576, 550, 1177, 380, 4813, 264, 1825, 1389, 11, 291, 434, 1417, 466, 411, 2677, 1757, 1345, 293, 550, 50860, 50860, 1730, 2175, 309, 646, 1214, 264, 636, 309, 390, 294, 257, 636, 457, 406, 1730, 2175, 309, 646, 666, 264, 912, 51136, 51136, 2158, 445, 291, 362, 257, 30351, 13, 51289, 51289, 407, 291, 362, 257, 2445, 597, 2516, 300, 4195, 11, 1310, 30351, 293, 20119, 309, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.16495500440182892, "compression_ratio": 1.7630331753554502, "no_caption_prob": 9.169222903437912e-05}, {"id": 704, "seek": 274694, "start": 2746.94, "end": 2753.3, "text": " And in some parts of the code, you know that a username is just Yes, we still want to display", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 705, "seek": 274694, "start": 2753.3, "end": 2755.1, "text": " it from the username.", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 706, "seek": 274694, "start": 2755.1, "end": 2758.36, "text": " So you call that.", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 707, "seek": 274694, "start": 2758.36, "end": 2763.1, "text": " So you're putting a just in front of it because you're calling a function that takes a maybe", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 708, "seek": 274694, "start": 2763.1, "end": 2764.98, "text": " string and shows the username?", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 709, "seek": 274694, "start": 2764.98, "end": 2765.98, "text": " Yeah, right.", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 710, "seek": 274694, "start": 2765.98, "end": 2767.38, "text": " That's a good question.", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 711, "seek": 274694, "start": 2767.38, "end": 2769.5, "text": " I definitely have seen code like that.", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 712, "seek": 274694, "start": 2769.5, "end": 2771.5, "text": " Oh, yeah, me too.", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 713, "seek": 274694, "start": 2771.5, "end": 2774.18, "text": " It does generally feel like a smell.", "tokens": [50364, 400, 294, 512, 3166, 295, 264, 3089, 11, 291, 458, 300, 257, 30351, 307, 445, 1079, 11, 321, 920, 528, 281, 4674, 50682, 50682, 309, 490, 264, 30351, 13, 50772, 50772, 407, 291, 818, 300, 13, 50935, 50935, 407, 291, 434, 3372, 257, 445, 294, 1868, 295, 309, 570, 291, 434, 5141, 257, 2445, 300, 2516, 257, 1310, 51172, 51172, 6798, 293, 3110, 264, 30351, 30, 51266, 51266, 865, 11, 558, 13, 51316, 51316, 663, 311, 257, 665, 1168, 13, 51386, 51386, 286, 2138, 362, 1612, 3089, 411, 300, 13, 51492, 51492, 876, 11, 1338, 11, 385, 886, 13, 51592, 51592, 467, 775, 5101, 841, 411, 257, 4316, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.17586211820619296, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8057860870612785e-05}, {"id": 714, "seek": 277418, "start": 2774.18, "end": 2777.52, "text": " I'm not going to go so far as to say that it's always a bad thing.", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 715, "seek": 277418, "start": 2777.52, "end": 2781.46, "text": " But I would definitely look very suspiciously at that code.", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 716, "seek": 277418, "start": 2781.46, "end": 2783.66, "text": " Yeah, yeah, I think I think you're right.", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 717, "seek": 277418, "start": 2783.66, "end": 2788.8999999999996, "text": " If you're like, I mean, Alexis kind of says this in the article, I think that you should", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 718, "seek": 277418, "start": 2788.8999999999996, "end": 2792.94, "text": " always be progressing towards more structured data.", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 719, "seek": 277418, "start": 2792.94, "end": 2796.2999999999997, "text": " And you should always be proving more information.", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 720, "seek": 277418, "start": 2796.2999999999997, "end": 2800.7, "text": " But adding it adjust is sort of reducing the amount of information you have.", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 721, "seek": 277418, "start": 2800.7, "end": 2803.66, "text": " So that so that would be no, you're adding chaos.", "tokens": [50364, 286, 478, 406, 516, 281, 352, 370, 1400, 382, 281, 584, 300, 309, 311, 1009, 257, 1578, 551, 13, 50531, 50531, 583, 286, 576, 2138, 574, 588, 17931, 356, 412, 300, 3089, 13, 50728, 50728, 865, 11, 1338, 11, 286, 519, 286, 519, 291, 434, 558, 13, 50838, 50838, 759, 291, 434, 411, 11, 286, 914, 11, 39826, 733, 295, 1619, 341, 294, 264, 7222, 11, 286, 519, 300, 291, 820, 51100, 51100, 1009, 312, 36305, 3030, 544, 18519, 1412, 13, 51302, 51302, 400, 291, 820, 1009, 312, 27221, 544, 1589, 13, 51470, 51470, 583, 5127, 309, 4369, 307, 1333, 295, 12245, 264, 2372, 295, 1589, 291, 362, 13, 51690, 51690, 407, 300, 370, 300, 576, 312, 572, 11, 291, 434, 5127, 14158, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.1471133828163147, "compression_ratio": 1.7904411764705883, "no_caption_prob": 1.8448170067131286e-06}, {"id": 722, "seek": 280366, "start": 2803.66, "end": 2804.66, "text": " No.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 723, "seek": 280366, "start": 2804.66, "end": 2805.66, "text": " Yeah.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 724, "seek": 280366, "start": 2805.66, "end": 2806.66, "text": " Entropy.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 725, "seek": 280366, "start": 2806.66, "end": 2807.66, "text": " Yeah, I don't know.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 726, "seek": 280366, "start": 2807.66, "end": 2808.66, "text": " You always want to.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 727, "seek": 280366, "start": 2808.66, "end": 2812.58, "text": " Yeah, unlike the universe, your code should always be decreasing the entropy as it goes", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 728, "seek": 280366, "start": 2812.58, "end": 2813.58, "text": " along.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 729, "seek": 280366, "start": 2813.58, "end": 2816.2599999999998, "text": " Yeah, I think so.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 730, "seek": 280366, "start": 2816.2599999999998, "end": 2822.22, "text": " Maybe in that case, you could look at all the call sites and check, oh, maybe they're", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 731, "seek": 280366, "start": 2822.22, "end": 2827.8199999999997, "text": " all just like all calls to this function is just so you can simplify it.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 732, "seek": 280366, "start": 2827.8199999999997, "end": 2829.42, "text": " Yeah, maybe not.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 733, "seek": 280366, "start": 2829.42, "end": 2830.42, "text": " Maybe not.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 734, "seek": 280366, "start": 2830.42, "end": 2831.42, "text": " Good point.", "tokens": [50364, 883, 13, 50414, 50414, 865, 13, 50464, 50464, 3951, 27514, 13, 50514, 50514, 865, 11, 286, 500, 380, 458, 13, 50564, 50564, 509, 1009, 528, 281, 13, 50614, 50614, 865, 11, 8343, 264, 6445, 11, 428, 3089, 820, 1009, 312, 23223, 264, 30867, 382, 309, 1709, 50810, 50810, 2051, 13, 50860, 50860, 865, 11, 286, 519, 370, 13, 50994, 50994, 2704, 294, 300, 1389, 11, 291, 727, 574, 412, 439, 264, 818, 7533, 293, 1520, 11, 1954, 11, 1310, 436, 434, 51292, 51292, 439, 445, 411, 439, 5498, 281, 341, 2445, 307, 445, 370, 291, 393, 20460, 309, 13, 51572, 51572, 865, 11, 1310, 406, 13, 51652, 51652, 2704, 406, 13, 51702, 51702, 2205, 935, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.2035021940867106, "compression_ratio": 1.6818181818181819, "no_caption_prob": 6.502275209641084e-05}, {"id": 735, "seek": 283142, "start": 2831.42, "end": 2838.38, "text": " But in the case where it's just in the function you were calling with wrapping it in adjust,", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 736, "seek": 283142, "start": 2838.38, "end": 2842.54, "text": " maybe the just case has a function that could be extracted out of that just clause.", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 737, "seek": 283142, "start": 2842.54, "end": 2843.86, "text": " Yeah, can be shared.", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 738, "seek": 283142, "start": 2843.86, "end": 2845.58, "text": " So you call it in the just case.", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 739, "seek": 283142, "start": 2845.58, "end": 2849.7400000000002, "text": " But maybe you can directly call that function and expose that as well.", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 740, "seek": 283142, "start": 2849.7400000000002, "end": 2852.0, "text": " Yeah, that sounds good.", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 741, "seek": 283142, "start": 2852.0, "end": 2853.1800000000003, "text": " Sometimes it's a nice pattern.", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 742, "seek": 283142, "start": 2853.1800000000003, "end": 2859.02, "text": " Like sometimes I see sort of core business logic code.", "tokens": [50364, 583, 294, 264, 1389, 689, 309, 311, 445, 294, 264, 2445, 291, 645, 5141, 365, 21993, 309, 294, 4369, 11, 50712, 50712, 1310, 264, 445, 1389, 575, 257, 2445, 300, 727, 312, 34086, 484, 295, 300, 445, 25925, 13, 50920, 50920, 865, 11, 393, 312, 5507, 13, 50986, 50986, 407, 291, 818, 309, 294, 264, 445, 1389, 13, 51072, 51072, 583, 1310, 291, 393, 3838, 818, 300, 2445, 293, 19219, 300, 382, 731, 13, 51280, 51280, 865, 11, 300, 3263, 665, 13, 51393, 51393, 4803, 309, 311, 257, 1481, 5102, 13, 51452, 51452, 1743, 2171, 286, 536, 1333, 295, 4965, 1606, 9952, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.17137011775264033, "compression_ratio": 1.7639484978540771, "no_caption_prob": 2.4439852950308705e-06}, {"id": 743, "seek": 285902, "start": 2859.02, "end": 2865.94, "text": " I think it's sort of an example of this shotgun parsing idea that you are checking for maybe", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 744, "seek": 285902, "start": 2865.94, "end": 2868.94, "text": " and doing maybe with default in your core logic.", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 745, "seek": 285902, "start": 2868.94, "end": 2871.44, "text": " But that should be the responsibility of the calling code.", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 746, "seek": 285902, "start": 2871.44, "end": 2876.42, "text": " So I think another thing is it's probably a smell if you have a lot of helper functions", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 747, "seek": 285902, "start": 2876.42, "end": 2881.96, "text": " that deal with maybes when if you think about the responsibilities, right, if you have like", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 748, "seek": 285902, "start": 2881.96, "end": 2886.86, "text": " a set of maybe helper functions, then of course, they're going to accept maybes because that's", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 749, "seek": 285902, "start": 2886.86, "end": 2887.86, "text": " the responsibility.", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 750, "seek": 285902, "start": 2887.86, "end": 2888.86, "text": " Yeah.", "tokens": [50364, 286, 519, 309, 311, 1333, 295, 364, 1365, 295, 341, 24734, 21156, 278, 1558, 300, 291, 366, 8568, 337, 1310, 50710, 50710, 293, 884, 1310, 365, 7576, 294, 428, 4965, 9952, 13, 50860, 50860, 583, 300, 820, 312, 264, 6357, 295, 264, 5141, 3089, 13, 50985, 50985, 407, 286, 519, 1071, 551, 307, 309, 311, 1391, 257, 4316, 498, 291, 362, 257, 688, 295, 36133, 6828, 51234, 51234, 300, 2028, 365, 815, 6446, 562, 498, 291, 519, 466, 264, 16190, 11, 558, 11, 498, 291, 362, 411, 51511, 51511, 257, 992, 295, 1310, 36133, 6828, 11, 550, 295, 1164, 11, 436, 434, 516, 281, 3241, 815, 6446, 570, 300, 311, 51756, 51756, 264, 6357, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.09995519436471831, "compression_ratio": 1.8419117647058822, "no_caption_prob": 6.962175120861502e-06}, {"id": 751, "seek": 288886, "start": 2888.86, "end": 2894.9, "text": " But if it's like presenting a username showing a guest username, and you say like, show username,", "tokens": [50364, 583, 498, 309, 311, 411, 15578, 257, 30351, 4099, 257, 8341, 30351, 11, 293, 291, 584, 411, 11, 855, 30351, 11, 50666, 50666, 291, 458, 11, 293, 309, 2516, 257, 1310, 11, 309, 311, 767, 1391, 1101, 281, 406, 747, 257, 1310, 281, 747, 51032, 51032, 257, 30351, 11, 293, 309, 13533, 309, 4461, 309, 775, 309, 13, 51212, 51212, 400, 550, 291, 360, 1310, 13, 11820, 7576, 11, 8341, 420, 2035, 291, 434, 516, 281, 360, 13, 51423, 51423, 583, 264, 5141, 3089, 393, 747, 1127, 295, 300, 15697, 13, 51586, 51586, 10328, 291, 483, 666, 264, 286, 536, 300, 1051, 257, 688, 689, 291, 434, 7363, 990, 264, 3089, 11, 689, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16061497549725395, "compression_ratio": 1.8, "no_caption_prob": 9.080416930373758e-06}, {"id": 752, "seek": 288886, "start": 2894.9, "end": 2902.2200000000003, "text": " you know, and it takes a maybe, it's actually probably better to not take a maybe to take", "tokens": [50364, 583, 498, 309, 311, 411, 15578, 257, 30351, 4099, 257, 8341, 30351, 11, 293, 291, 584, 411, 11, 855, 30351, 11, 50666, 50666, 291, 458, 11, 293, 309, 2516, 257, 1310, 11, 309, 311, 767, 1391, 1101, 281, 406, 747, 257, 1310, 281, 747, 51032, 51032, 257, 30351, 11, 293, 309, 13533, 309, 4461, 309, 775, 309, 13, 51212, 51212, 400, 550, 291, 360, 1310, 13, 11820, 7576, 11, 8341, 420, 2035, 291, 434, 516, 281, 360, 13, 51423, 51423, 583, 264, 5141, 3089, 393, 747, 1127, 295, 300, 15697, 13, 51586, 51586, 10328, 291, 483, 666, 264, 286, 536, 300, 1051, 257, 688, 689, 291, 434, 7363, 990, 264, 3089, 11, 689, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16061497549725395, "compression_ratio": 1.8, "no_caption_prob": 9.080416930373758e-06}, {"id": 753, "seek": 288886, "start": 2902.2200000000003, "end": 2905.82, "text": " a username, and it presents it however it does it.", "tokens": [50364, 583, 498, 309, 311, 411, 15578, 257, 30351, 4099, 257, 8341, 30351, 11, 293, 291, 584, 411, 11, 855, 30351, 11, 50666, 50666, 291, 458, 11, 293, 309, 2516, 257, 1310, 11, 309, 311, 767, 1391, 1101, 281, 406, 747, 257, 1310, 281, 747, 51032, 51032, 257, 30351, 11, 293, 309, 13533, 309, 4461, 309, 775, 309, 13, 51212, 51212, 400, 550, 291, 360, 1310, 13, 11820, 7576, 11, 8341, 420, 2035, 291, 434, 516, 281, 360, 13, 51423, 51423, 583, 264, 5141, 3089, 393, 747, 1127, 295, 300, 15697, 13, 51586, 51586, 10328, 291, 483, 666, 264, 286, 536, 300, 1051, 257, 688, 689, 291, 434, 7363, 990, 264, 3089, 11, 689, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16061497549725395, "compression_ratio": 1.8, "no_caption_prob": 9.080416930373758e-06}, {"id": 754, "seek": 288886, "start": 2905.82, "end": 2910.04, "text": " And then you do maybe.with default, guest or whatever you're going to do.", "tokens": [50364, 583, 498, 309, 311, 411, 15578, 257, 30351, 4099, 257, 8341, 30351, 11, 293, 291, 584, 411, 11, 855, 30351, 11, 50666, 50666, 291, 458, 11, 293, 309, 2516, 257, 1310, 11, 309, 311, 767, 1391, 1101, 281, 406, 747, 257, 1310, 281, 747, 51032, 51032, 257, 30351, 11, 293, 309, 13533, 309, 4461, 309, 775, 309, 13, 51212, 51212, 400, 550, 291, 360, 1310, 13, 11820, 7576, 11, 8341, 420, 2035, 291, 434, 516, 281, 360, 13, 51423, 51423, 583, 264, 5141, 3089, 393, 747, 1127, 295, 300, 15697, 13, 51586, 51586, 10328, 291, 483, 666, 264, 286, 536, 300, 1051, 257, 688, 689, 291, 434, 7363, 990, 264, 3089, 11, 689, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16061497549725395, "compression_ratio": 1.8, "no_caption_prob": 9.080416930373758e-06}, {"id": 755, "seek": 288886, "start": 2910.04, "end": 2913.3, "text": " But the calling code can take care of that uncertainty.", "tokens": [50364, 583, 498, 309, 311, 411, 15578, 257, 30351, 4099, 257, 8341, 30351, 11, 293, 291, 584, 411, 11, 855, 30351, 11, 50666, 50666, 291, 458, 11, 293, 309, 2516, 257, 1310, 11, 309, 311, 767, 1391, 1101, 281, 406, 747, 257, 1310, 281, 747, 51032, 51032, 257, 30351, 11, 293, 309, 13533, 309, 4461, 309, 775, 309, 13, 51212, 51212, 400, 550, 291, 360, 1310, 13, 11820, 7576, 11, 8341, 420, 2035, 291, 434, 516, 281, 360, 13, 51423, 51423, 583, 264, 5141, 3089, 393, 747, 1127, 295, 300, 15697, 13, 51586, 51586, 10328, 291, 483, 666, 264, 286, 536, 300, 1051, 257, 688, 689, 291, 434, 7363, 990, 264, 3089, 11, 689, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16061497549725395, "compression_ratio": 1.8, "no_caption_prob": 9.080416930373758e-06}, {"id": 756, "seek": 288886, "start": 2913.3, "end": 2918.82, "text": " Otherwise you get into the I see that happen a lot where you're validating the code, where", "tokens": [50364, 583, 498, 309, 311, 411, 15578, 257, 30351, 4099, 257, 8341, 30351, 11, 293, 291, 584, 411, 11, 855, 30351, 11, 50666, 50666, 291, 458, 11, 293, 309, 2516, 257, 1310, 11, 309, 311, 767, 1391, 1101, 281, 406, 747, 257, 1310, 281, 747, 51032, 51032, 257, 30351, 11, 293, 309, 13533, 309, 4461, 309, 775, 309, 13, 51212, 51212, 400, 550, 291, 360, 1310, 13, 11820, 7576, 11, 8341, 420, 2035, 291, 434, 516, 281, 360, 13, 51423, 51423, 583, 264, 5141, 3089, 393, 747, 1127, 295, 300, 15697, 13, 51586, 51586, 10328, 291, 483, 666, 264, 286, 536, 300, 1051, 257, 688, 689, 291, 434, 7363, 990, 264, 3089, 11, 689, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16061497549725395, "compression_ratio": 1.8, "no_caption_prob": 9.080416930373758e-06}, {"id": 757, "seek": 291882, "start": 2918.82, "end": 2920.26, "text": " you're processing it, right?", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 758, "seek": 291882, "start": 2920.26, "end": 2925.5800000000004, "text": " So this principle is really helpful that like, you should be just confidently asserting that", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 759, "seek": 291882, "start": 2925.5800000000004, "end": 2927.1400000000003, "text": " you have this code.", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 760, "seek": 291882, "start": 2927.1400000000003, "end": 2931.5, "text": " Don't hesitate and second guess yourself and say, if I have this maybe value, and then", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 761, "seek": 291882, "start": 2931.5, "end": 2935.3, "text": " I'll handle this nothing case this way, leave that to the caller.", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 762, "seek": 291882, "start": 2935.3, "end": 2937.1600000000003, "text": " In a lot of cases, that's better.", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 763, "seek": 291882, "start": 2937.1600000000003, "end": 2943.2200000000003, "text": " So another smell I think that you can pay attention to is and a lot of these things,", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 764, "seek": 291882, "start": 2943.2200000000003, "end": 2947.7000000000003, "text": " I think you want to let when the compiler is telling you something is wrong, when the", "tokens": [50364, 291, 434, 9007, 309, 11, 558, 30, 50436, 50436, 407, 341, 8665, 307, 534, 4961, 300, 411, 11, 291, 820, 312, 445, 41956, 1256, 27187, 300, 50702, 50702, 291, 362, 341, 3089, 13, 50780, 50780, 1468, 380, 20842, 293, 1150, 2041, 1803, 293, 584, 11, 498, 286, 362, 341, 1310, 2158, 11, 293, 550, 50998, 50998, 286, 603, 4813, 341, 1825, 1389, 341, 636, 11, 1856, 300, 281, 264, 48324, 13, 51188, 51188, 682, 257, 688, 295, 3331, 11, 300, 311, 1101, 13, 51281, 51281, 407, 1071, 4316, 286, 519, 300, 291, 393, 1689, 3202, 281, 307, 293, 257, 688, 295, 613, 721, 11, 51584, 51584, 286, 519, 291, 528, 281, 718, 562, 264, 31958, 307, 3585, 291, 746, 307, 2085, 11, 562, 264, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12706412374973297, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.3923077606013976e-05}, {"id": 765, "seek": 294770, "start": 2947.7, "end": 2952.3799999999997, "text": " compiler seems to be making you do extra work, you can go two different directions, you can", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 766, "seek": 294770, "start": 2952.3799999999997, "end": 2958.7, "text": " go the direction of the compiler is telling me, I need to handle this case.", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 767, "seek": 294770, "start": 2958.7, "end": 2966.14, "text": " So I'll just make it happy and use with default or passing this hard coded value here in this", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 768, "seek": 294770, "start": 2966.14, "end": 2967.9399999999996, "text": " thing that will never happen, right?", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 769, "seek": 294770, "start": 2967.9399999999996, "end": 2969.2599999999998, "text": " That's telling you a smell.", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 770, "seek": 294770, "start": 2969.2599999999998, "end": 2974.2, "text": " So it's really about what do you do when the compiler is telling you, you're not handling", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 771, "seek": 294770, "start": 2974.2, "end": 2975.2, "text": " something.", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 772, "seek": 294770, "start": 2975.2, "end": 2976.8399999999997, "text": " That's one thing to pay attention to.", "tokens": [50364, 31958, 2544, 281, 312, 1455, 291, 360, 2857, 589, 11, 291, 393, 352, 732, 819, 11095, 11, 291, 393, 50598, 50598, 352, 264, 3513, 295, 264, 31958, 307, 3585, 385, 11, 286, 643, 281, 4813, 341, 1389, 13, 50914, 50914, 407, 286, 603, 445, 652, 309, 2055, 293, 764, 365, 7576, 420, 8437, 341, 1152, 34874, 2158, 510, 294, 341, 51286, 51286, 551, 300, 486, 1128, 1051, 11, 558, 30, 51376, 51376, 663, 311, 3585, 291, 257, 4316, 13, 51442, 51442, 407, 309, 311, 534, 466, 437, 360, 291, 360, 562, 264, 31958, 307, 3585, 291, 11, 291, 434, 406, 13175, 51689, 51689, 746, 13, 51739, 51739, 663, 311, 472, 551, 281, 1689, 3202, 281, 13, 51821, 51821], "temperature": 0.0, "avg_logprob": -0.10860542456309001, "compression_ratio": 1.7816091954022988, "no_caption_prob": 2.668763045221567e-05}, {"id": 773, "seek": 297684, "start": 2976.84, "end": 2980.82, "text": " Another thing to pay attention to is when you're writing tests, are you testing things", "tokens": [50364, 3996, 551, 281, 1689, 3202, 281, 307, 562, 291, 434, 3579, 6921, 11, 366, 291, 4997, 721, 50563, 50563, 300, 291, 4659, 380, 754, 312, 1075, 281, 1500, 30, 50721, 50721, 1436, 498, 291, 4114, 428, 3467, 294, 264, 558, 636, 11, 689, 291, 18031, 729, 17695, 51037, 51037, 293, 291, 1027, 6243, 4368, 6243, 11, 291, 2759, 380, 754, 312, 1075, 281, 2464, 264, 1500, 51231, 51231, 570, 309, 2759, 380, 31413, 13, 51298, 51298, 407, 286, 1116, 584, 1071, 3089, 4316, 307, 885, 1075, 281, 2464, 715, 4883, 6921, 300, 820, 312, 6243, 51705, 51705, 4368, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.07364098076681488, "compression_ratio": 1.8831168831168832, "no_caption_prob": 2.2473526769317687e-05}, {"id": 774, "seek": 297684, "start": 2980.82, "end": 2983.98, "text": " that you shouldn't even be able to test?", "tokens": [50364, 3996, 551, 281, 1689, 3202, 281, 307, 562, 291, 434, 3579, 6921, 11, 366, 291, 4997, 721, 50563, 50563, 300, 291, 4659, 380, 754, 312, 1075, 281, 1500, 30, 50721, 50721, 1436, 498, 291, 4114, 428, 3467, 294, 264, 558, 636, 11, 689, 291, 18031, 729, 17695, 51037, 51037, 293, 291, 1027, 6243, 4368, 6243, 11, 291, 2759, 380, 754, 312, 1075, 281, 2464, 264, 1500, 51231, 51231, 570, 309, 2759, 380, 31413, 13, 51298, 51298, 407, 286, 1116, 584, 1071, 3089, 4316, 307, 885, 1075, 281, 2464, 715, 4883, 6921, 300, 820, 312, 6243, 51705, 51705, 4368, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.07364098076681488, "compression_ratio": 1.8831168831168832, "no_caption_prob": 2.2473526769317687e-05}, {"id": 775, "seek": 297684, "start": 2983.98, "end": 2990.3, "text": " Because if you wrote your types in the right way, where you guaranteed those assumptions", "tokens": [50364, 3996, 551, 281, 1689, 3202, 281, 307, 562, 291, 434, 3579, 6921, 11, 366, 291, 4997, 721, 50563, 50563, 300, 291, 4659, 380, 754, 312, 1075, 281, 1500, 30, 50721, 50721, 1436, 498, 291, 4114, 428, 3467, 294, 264, 558, 636, 11, 689, 291, 18031, 729, 17695, 51037, 51037, 293, 291, 1027, 6243, 4368, 6243, 11, 291, 2759, 380, 754, 312, 1075, 281, 2464, 264, 1500, 51231, 51231, 570, 309, 2759, 380, 31413, 13, 51298, 51298, 407, 286, 1116, 584, 1071, 3089, 4316, 307, 885, 1075, 281, 2464, 715, 4883, 6921, 300, 820, 312, 6243, 51705, 51705, 4368, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.07364098076681488, "compression_ratio": 1.8831168831168832, "no_caption_prob": 2.2473526769317687e-05}, {"id": 776, "seek": 297684, "start": 2990.3, "end": 2994.1800000000003, "text": " and you made impossible states impossible, you wouldn't even be able to write the test", "tokens": [50364, 3996, 551, 281, 1689, 3202, 281, 307, 562, 291, 434, 3579, 6921, 11, 366, 291, 4997, 721, 50563, 50563, 300, 291, 4659, 380, 754, 312, 1075, 281, 1500, 30, 50721, 50721, 1436, 498, 291, 4114, 428, 3467, 294, 264, 558, 636, 11, 689, 291, 18031, 729, 17695, 51037, 51037, 293, 291, 1027, 6243, 4368, 6243, 11, 291, 2759, 380, 754, 312, 1075, 281, 2464, 264, 1500, 51231, 51231, 570, 309, 2759, 380, 31413, 13, 51298, 51298, 407, 286, 1116, 584, 1071, 3089, 4316, 307, 885, 1075, 281, 2464, 715, 4883, 6921, 300, 820, 312, 6243, 51705, 51705, 4368, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.07364098076681488, "compression_ratio": 1.8831168831168832, "no_caption_prob": 2.2473526769317687e-05}, {"id": 777, "seek": 297684, "start": 2994.1800000000003, "end": 2995.52, "text": " because it wouldn't compile.", "tokens": [50364, 3996, 551, 281, 1689, 3202, 281, 307, 562, 291, 434, 3579, 6921, 11, 366, 291, 4997, 721, 50563, 50563, 300, 291, 4659, 380, 754, 312, 1075, 281, 1500, 30, 50721, 50721, 1436, 498, 291, 4114, 428, 3467, 294, 264, 558, 636, 11, 689, 291, 18031, 729, 17695, 51037, 51037, 293, 291, 1027, 6243, 4368, 6243, 11, 291, 2759, 380, 754, 312, 1075, 281, 2464, 264, 1500, 51231, 51231, 570, 309, 2759, 380, 31413, 13, 51298, 51298, 407, 286, 1116, 584, 1071, 3089, 4316, 307, 885, 1075, 281, 2464, 715, 4883, 6921, 300, 820, 312, 6243, 51705, 51705, 4368, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.07364098076681488, "compression_ratio": 1.8831168831168832, "no_caption_prob": 2.2473526769317687e-05}, {"id": 778, "seek": 297684, "start": 2995.52, "end": 3003.6600000000003, "text": " So I'd say another code smell is being able to write compiling tests that should be impossible", "tokens": [50364, 3996, 551, 281, 1689, 3202, 281, 307, 562, 291, 434, 3579, 6921, 11, 366, 291, 4997, 721, 50563, 50563, 300, 291, 4659, 380, 754, 312, 1075, 281, 1500, 30, 50721, 50721, 1436, 498, 291, 4114, 428, 3467, 294, 264, 558, 636, 11, 689, 291, 18031, 729, 17695, 51037, 51037, 293, 291, 1027, 6243, 4368, 6243, 11, 291, 2759, 380, 754, 312, 1075, 281, 2464, 264, 1500, 51231, 51231, 570, 309, 2759, 380, 31413, 13, 51298, 51298, 407, 286, 1116, 584, 1071, 3089, 4316, 307, 885, 1075, 281, 2464, 715, 4883, 6921, 300, 820, 312, 6243, 51705, 51705, 4368, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.07364098076681488, "compression_ratio": 1.8831168831168832, "no_caption_prob": 2.2473526769317687e-05}, {"id": 779, "seek": 297684, "start": 3003.6600000000003, "end": 3004.6600000000003, "text": " states.", "tokens": [50364, 3996, 551, 281, 1689, 3202, 281, 307, 562, 291, 434, 3579, 6921, 11, 366, 291, 4997, 721, 50563, 50563, 300, 291, 4659, 380, 754, 312, 1075, 281, 1500, 30, 50721, 50721, 1436, 498, 291, 4114, 428, 3467, 294, 264, 558, 636, 11, 689, 291, 18031, 729, 17695, 51037, 51037, 293, 291, 1027, 6243, 4368, 6243, 11, 291, 2759, 380, 754, 312, 1075, 281, 2464, 264, 1500, 51231, 51231, 570, 309, 2759, 380, 31413, 13, 51298, 51298, 407, 286, 1116, 584, 1071, 3089, 4316, 307, 885, 1075, 281, 2464, 715, 4883, 6921, 300, 820, 312, 6243, 51705, 51705, 4368, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.07364098076681488, "compression_ratio": 1.8831168831168832, "no_caption_prob": 2.2473526769317687e-05}, {"id": 780, "seek": 300466, "start": 3004.66, "end": 3011.22, "text": " Or in other words, have full coverage of function where you cannot have full coverage because", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 781, "seek": 300466, "start": 3011.22, "end": 3013.18, "text": " they're impossible states.", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 782, "seek": 300466, "start": 3013.18, "end": 3015.22, "text": " Yeah, exactly.", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 783, "seek": 300466, "start": 3015.22, "end": 3016.22, "text": " Exactly.", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 784, "seek": 300466, "start": 3016.22, "end": 3017.22, "text": " Exactly.", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 785, "seek": 300466, "start": 3017.22, "end": 3021.22, "text": " You know, another principle I think about a lot, you know, I mentioned this earlier,", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 786, "seek": 300466, "start": 3021.22, "end": 3026.24, "text": " if somebody new to your code base comes in, if they use something wrong, I would say the", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 787, "seek": 300466, "start": 3026.24, "end": 3027.8399999999997, "text": " onus is on the code.", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 788, "seek": 300466, "start": 3027.8399999999997, "end": 3032.24, "text": " It's something that should be fixed in the code, not, hey, we need to teach you how to", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 789, "seek": 300466, "start": 3032.24, "end": 3033.46, "text": " use this properly.", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 790, "seek": 300466, "start": 3033.46, "end": 3034.46, "text": " That's a smell.", "tokens": [50364, 1610, 294, 661, 2283, 11, 362, 1577, 9645, 295, 2445, 689, 291, 2644, 362, 1577, 9645, 570, 50692, 50692, 436, 434, 6243, 4368, 13, 50790, 50790, 865, 11, 2293, 13, 50892, 50892, 7587, 13, 50942, 50942, 7587, 13, 50992, 50992, 509, 458, 11, 1071, 8665, 286, 519, 466, 257, 688, 11, 291, 458, 11, 286, 2835, 341, 3071, 11, 51192, 51192, 498, 2618, 777, 281, 428, 3089, 3096, 1487, 294, 11, 498, 436, 764, 746, 2085, 11, 286, 576, 584, 264, 51443, 51443, 322, 301, 307, 322, 264, 3089, 13, 51523, 51523, 467, 311, 746, 300, 820, 312, 6806, 294, 264, 3089, 11, 406, 11, 4177, 11, 321, 643, 281, 2924, 291, 577, 281, 51743, 51743, 764, 341, 6108, 13, 51804, 51804, 663, 311, 257, 4316, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.15367250224106185, "compression_ratio": 1.7216117216117217, "no_caption_prob": 2.885661342588719e-05}, {"id": 791, "seek": 303446, "start": 3034.46, "end": 3040.9, "text": " Yeah, you shouldn't have to train your teammates after the fact that they've learned Elm.", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 792, "seek": 303446, "start": 3040.9, "end": 3041.9, "text": " Exactly.", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 793, "seek": 303446, "start": 3041.9, "end": 3042.9, "text": " Exactly.", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 794, "seek": 303446, "start": 3042.9, "end": 3047.06, "text": " So the training should be coming from the compiler telling them you can't do this.", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 795, "seek": 303446, "start": 3047.06, "end": 3049.12, "text": " And then they say, hey, why can't I do this?", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 796, "seek": 303446, "start": 3049.12, "end": 3052.82, "text": " Maybe you have to explain why the compiler isn't allowing it, but the compiler should", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 797, "seek": 303446, "start": 3052.82, "end": 3053.88, "text": " disallow it.", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 798, "seek": 303446, "start": 3053.88, "end": 3059.14, "text": " So I feel very uncomfortable if I have to keep track of constraints in the way I'm using", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 799, "seek": 303446, "start": 3059.14, "end": 3060.14, "text": " something.", "tokens": [50364, 865, 11, 291, 4659, 380, 362, 281, 3847, 428, 20461, 934, 264, 1186, 300, 436, 600, 3264, 2699, 76, 13, 50686, 50686, 7587, 13, 50736, 50736, 7587, 13, 50786, 50786, 407, 264, 3097, 820, 312, 1348, 490, 264, 31958, 3585, 552, 291, 393, 380, 360, 341, 13, 50994, 50994, 400, 550, 436, 584, 11, 4177, 11, 983, 393, 380, 286, 360, 341, 30, 51097, 51097, 2704, 291, 362, 281, 2903, 983, 264, 31958, 1943, 380, 8293, 309, 11, 457, 264, 31958, 820, 51282, 51282, 717, 13253, 309, 13, 51335, 51335, 407, 286, 841, 588, 10532, 498, 286, 362, 281, 1066, 2837, 295, 18491, 294, 264, 636, 286, 478, 1228, 51598, 51598, 746, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11724059602134249, "compression_ratio": 1.7429718875502007, "no_caption_prob": 3.591211498132907e-05}, {"id": 800, "seek": 306014, "start": 3060.14, "end": 3066.3399999999997, "text": " As much as possible, and it's a, you know, you're not going to have it on day one on", "tokens": [50364, 1018, 709, 382, 1944, 11, 293, 309, 311, 257, 11, 291, 458, 11, 291, 434, 406, 516, 281, 362, 309, 322, 786, 472, 322, 50674, 50674, 264, 700, 24784, 3094, 281, 11, 291, 458, 11, 652, 439, 264, 17695, 1944, 13, 50898, 50898, 400, 291, 1116, 1391, 312, 884, 746, 2085, 294, 428, 1399, 498, 291, 645, 13, 51111, 51111, 1981, 721, 21511, 670, 565, 13, 51210, 51210, 583, 382, 291, 4411, 2098, 300, 309, 311, 1143, 11, 15120, 300, 366, 2737, 11, 291, 820, 312, 1455, 6243, 51525, 51525, 4368, 544, 6243, 382, 291, 4411, 552, 2737, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1198185392953817, "compression_ratio": 1.7478991596638656, "no_caption_prob": 3.3736003388185054e-05}, {"id": 801, "seek": 306014, "start": 3066.3399999999997, "end": 3070.8199999999997, "text": " the first iteration built to, you know, make all the assumptions possible.", "tokens": [50364, 1018, 709, 382, 1944, 11, 293, 309, 311, 257, 11, 291, 458, 11, 291, 434, 406, 516, 281, 362, 309, 322, 786, 472, 322, 50674, 50674, 264, 700, 24784, 3094, 281, 11, 291, 458, 11, 652, 439, 264, 17695, 1944, 13, 50898, 50898, 400, 291, 1116, 1391, 312, 884, 746, 2085, 294, 428, 1399, 498, 291, 645, 13, 51111, 51111, 1981, 721, 21511, 670, 565, 13, 51210, 51210, 583, 382, 291, 4411, 2098, 300, 309, 311, 1143, 11, 15120, 300, 366, 2737, 11, 291, 820, 312, 1455, 6243, 51525, 51525, 4368, 544, 6243, 382, 291, 4411, 552, 2737, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1198185392953817, "compression_ratio": 1.7478991596638656, "no_caption_prob": 3.3736003388185054e-05}, {"id": 802, "seek": 306014, "start": 3070.8199999999997, "end": 3075.08, "text": " And you'd probably be doing something wrong in your process if you were.", "tokens": [50364, 1018, 709, 382, 1944, 11, 293, 309, 311, 257, 11, 291, 458, 11, 291, 434, 406, 516, 281, 362, 309, 322, 786, 472, 322, 50674, 50674, 264, 700, 24784, 3094, 281, 11, 291, 458, 11, 652, 439, 264, 17695, 1944, 13, 50898, 50898, 400, 291, 1116, 1391, 312, 884, 746, 2085, 294, 428, 1399, 498, 291, 645, 13, 51111, 51111, 1981, 721, 21511, 670, 565, 13, 51210, 51210, 583, 382, 291, 4411, 2098, 300, 309, 311, 1143, 11, 15120, 300, 366, 2737, 11, 291, 820, 312, 1455, 6243, 51525, 51525, 4368, 544, 6243, 382, 291, 4411, 552, 2737, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1198185392953817, "compression_ratio": 1.7478991596638656, "no_caption_prob": 3.3736003388185054e-05}, {"id": 803, "seek": 306014, "start": 3075.08, "end": 3077.06, "text": " These things emerge over time.", "tokens": [50364, 1018, 709, 382, 1944, 11, 293, 309, 311, 257, 11, 291, 458, 11, 291, 434, 406, 516, 281, 362, 309, 322, 786, 472, 322, 50674, 50674, 264, 700, 24784, 3094, 281, 11, 291, 458, 11, 652, 439, 264, 17695, 1944, 13, 50898, 50898, 400, 291, 1116, 1391, 312, 884, 746, 2085, 294, 428, 1399, 498, 291, 645, 13, 51111, 51111, 1981, 721, 21511, 670, 565, 13, 51210, 51210, 583, 382, 291, 4411, 2098, 300, 309, 311, 1143, 11, 15120, 300, 366, 2737, 11, 291, 820, 312, 1455, 6243, 51525, 51525, 4368, 544, 6243, 382, 291, 4411, 552, 2737, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1198185392953817, "compression_ratio": 1.7478991596638656, "no_caption_prob": 3.3736003388185054e-05}, {"id": 804, "seek": 306014, "start": 3077.06, "end": 3083.3599999999997, "text": " But as you discover ways that it's used, bugs that are happening, you should be making impossible", "tokens": [50364, 1018, 709, 382, 1944, 11, 293, 309, 311, 257, 11, 291, 458, 11, 291, 434, 406, 516, 281, 362, 309, 322, 786, 472, 322, 50674, 50674, 264, 700, 24784, 3094, 281, 11, 291, 458, 11, 652, 439, 264, 17695, 1944, 13, 50898, 50898, 400, 291, 1116, 1391, 312, 884, 746, 2085, 294, 428, 1399, 498, 291, 645, 13, 51111, 51111, 1981, 721, 21511, 670, 565, 13, 51210, 51210, 583, 382, 291, 4411, 2098, 300, 309, 311, 1143, 11, 15120, 300, 366, 2737, 11, 291, 820, 312, 1455, 6243, 51525, 51525, 4368, 544, 6243, 382, 291, 4411, 552, 2737, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1198185392953817, "compression_ratio": 1.7478991596638656, "no_caption_prob": 3.3736003388185054e-05}, {"id": 805, "seek": 306014, "start": 3083.3599999999997, "end": 3087.14, "text": " states more impossible as you discover them happening.", "tokens": [50364, 1018, 709, 382, 1944, 11, 293, 309, 311, 257, 11, 291, 458, 11, 291, 434, 406, 516, 281, 362, 309, 322, 786, 472, 322, 50674, 50674, 264, 700, 24784, 3094, 281, 11, 291, 458, 11, 652, 439, 264, 17695, 1944, 13, 50898, 50898, 400, 291, 1116, 1391, 312, 884, 746, 2085, 294, 428, 1399, 498, 291, 645, 13, 51111, 51111, 1981, 721, 21511, 670, 565, 13, 51210, 51210, 583, 382, 291, 4411, 2098, 300, 309, 311, 1143, 11, 15120, 300, 366, 2737, 11, 291, 820, 312, 1455, 6243, 51525, 51525, 4368, 544, 6243, 382, 291, 4411, 552, 2737, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1198185392953817, "compression_ratio": 1.7478991596638656, "no_caption_prob": 3.3736003388185054e-05}, {"id": 806, "seek": 308714, "start": 3087.14, "end": 3090.46, "text": " That's part of the process of working with an Elm code base.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 807, "seek": 308714, "start": 3090.46, "end": 3092.06, "text": " Oh, yeah.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 808, "seek": 308714, "start": 3092.06, "end": 3098.8599999999997, "text": " So this is very simple and in a way, as I said before, quite natural technique for Elm", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 809, "seek": 308714, "start": 3098.8599999999997, "end": 3105.14, "text": " developers and less so for people come from JavaScript or Ruby.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 810, "seek": 308714, "start": 3105.14, "end": 3107.98, "text": " I think we got it pretty well covered.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 811, "seek": 308714, "start": 3107.98, "end": 3108.98, "text": " Yeah.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 812, "seek": 308714, "start": 3108.98, "end": 3110.9, "text": " I hope this was useful to you, listener.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 813, "seek": 308714, "start": 3110.9, "end": 3111.9, "text": " Yeah.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 814, "seek": 308714, "start": 3111.9, "end": 3115.58, "text": " And if it's painful, you might want to try parsing, not validating.", "tokens": [50364, 663, 311, 644, 295, 264, 1399, 295, 1364, 365, 364, 2699, 76, 3089, 3096, 13, 50530, 50530, 876, 11, 1338, 13, 50610, 50610, 407, 341, 307, 588, 2199, 293, 294, 257, 636, 11, 382, 286, 848, 949, 11, 1596, 3303, 6532, 337, 2699, 76, 50950, 50950, 8849, 293, 1570, 370, 337, 561, 808, 490, 15778, 420, 19907, 13, 51264, 51264, 286, 519, 321, 658, 309, 1238, 731, 5343, 13, 51406, 51406, 865, 13, 51456, 51456, 286, 1454, 341, 390, 4420, 281, 291, 11, 31569, 13, 51552, 51552, 865, 13, 51602, 51602, 400, 498, 309, 311, 11697, 11, 291, 1062, 528, 281, 853, 21156, 278, 11, 406, 7363, 990, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.2496647961371768, "compression_ratio": 1.4941176470588236, "no_caption_prob": 1.260674798686523e-05}, {"id": 815, "seek": 311558, "start": 3115.58, "end": 3121.02, "text": " OK, well Dylan, see you next time.", "tokens": [50364, 2264, 11, 731, 28160, 11, 536, 291, 958, 565, 13, 50636, 50636, 32839, 257, 6834, 382, 1009, 13, 50714, 50714, 3008, 291, 958, 565, 11, 508, 2032, 268, 13, 50752], "temperature": 0.0, "avg_logprob": -0.32729572057724, "compression_ratio": 1.1282051282051282, "no_caption_prob": 0.0002163378376280889}, {"id": 816, "seek": 311558, "start": 3121.02, "end": 3122.58, "text": " Been a pleasure as always.", "tokens": [50364, 2264, 11, 731, 28160, 11, 536, 291, 958, 565, 13, 50636, 50636, 32839, 257, 6834, 382, 1009, 13, 50714, 50714, 3008, 291, 958, 565, 11, 508, 2032, 268, 13, 50752], "temperature": 0.0, "avg_logprob": -0.32729572057724, "compression_ratio": 1.1282051282051282, "no_caption_prob": 0.0002163378376280889}, {"id": 817, "seek": 312258, "start": 3122.58, "end": 3145.86, "text": " See you next time you're in.", "tokens": [50364, 3008, 291, 958, 565, 291, 434, 294, 13, 51528], "temperature": 0.0, "avg_logprob": -0.4497305696660822, "compression_ratio": 0.875, "no_caption_prob": 8.081296255113557e-05}], "language": "en"}