{"text": " Hello, Jeroen. Hello, Dillon. How are you doing today? I'm doing pretty well. How are you? Pretty good. Pretty good. And well, on we continue with our book club. Yeah. What are we talking about this week? So this week, we're going to talk about another very special and very important talk from the Elm Street community, one made by Evan this time, so Evan Cieplicki. And it's the life of a fowl. Yeah, there really were some amazing talks that I think seeded a lot of great ideas in the Elm community early on, you know, that Richard and Evan gave as keynotes in the early years. I'm really grateful for those great resources that you've given us. Because I think they've really had an impact on the way people think in the community. Yeah, I think they shaped it. Yeah. Yeah. And I think that was pretty intentional, too. And they did a great job with that. Yeah. Richard and Evan, if you ever want to do those kind of talks again, please, please do. We would love to hear those. Well, you still get a lot of interesting talks coming out that Richard gives in various forums. It's, you know, not as much these days, but. Yeah, they're very interesting, just in different ways. Yes. Yes. So what is this talk about in a nutshell, the life of a fowl? What's the short summary? The short summary I would say is, well, Evan says it is how do I grow Elm code? Yeah. Which is a big question. Which is a big question. So what he says in the beginning of the talk is when people started using Elm a long time ago, they were asking, OK, how do I write Elm code? How do I write Elm applications? So Evan made all those utilities and functions that are now browser application and so on, which gives you a structure to create Elm applications. And after that, people ask, how do I grow Elm code? And this is what we're going to talk about now. And I feel like this talk answers that question. And now the question is more like, how do I make an SPA? It is the one that I often see in the beginners channel of Slack. Right. And to answer that question, you can go back to you can listen to episode 12 that we had about Elm SPA. That's a start. Yeah. Although there's so much more you can talk about on that subject, too. Yeah. I still feel like that question hasn't been fully answered. Right. Because there are several ways to do it. And even Ryan who writes Elm SPA is still making some changes in his designs. Yeah. Although Richard Feldman's front end masters courses are quite good at going into those details and how to structure a single page app and techniques for working with one. So that is a good resource there. But there's more to be said on that topic, for sure. So I think to me, this talk, the life of a file, the thesis is sort of this is how people tend to approach growing JavaScript into lots of tiny files. And why do they do that? Because of spooky effects at a distance and because it's very painful to refactor. So they sort of prematurely create these abstractions because it's such a pain if you don't have the right structure from the start. So you start so you don't have to refactor because refactoring is scary in JavaScript. So refactoring is not so scary in Elm and you don't have these spooky effects at a distance in Elm. So what are the implications of that for how you contrast growing JavaScript code to growing Elm code? And that's sort of Evan's central thesis, I think, is the way you grow code is more sort of holding off until you actually feel the pain of something. And then you start to expand out to different modules. You experiment with your data modeling, too. That's another thing you talked about. He talked about exploring all the different ways you can model something, which in our make impossible states impossible talk episode, we didn't really talk about that process of playing around with a lot of different ways to model something. And I think that's really good insight, too, because it's not just about impossible states. It's about exploring and trying a lot of different things. So I think he captures that in this talk, this exploration and this sort of process of waiting until you actually feel the pain instead of creating abstractions because you think you'll need them. Now, there are a lot of details to get into there, but I think that that's the core thesis as I see it. Does that resonate with you? Yeah, that resonates for me. So in JavaScript, you tend to like smaller files because you don't like spooky distance. What spooky action such as this is all of that expression. Yeah, me too. I only hear it often. That was wasn't that the reason that Einstein didn't like quantum mechanics or something that he. I think it was because he he didn't believe that God was playing with dice. Mm hmm. Yeah, that's the quotes. So maybe Einstein wouldn't have liked JavaScript. Yeah, yeah. If you try something twice, you shouldn't you should expect the same thing. Yeah, that's right. Exactly. It would have loved pure function programming. I think so. So, yeah, you don't have those spooky actions from a distance because you don't have mutations. Yes. And you don't need to cut off your lines that is a certain number of lines. Like you don't need to have all your files be smaller than 300 lines long or even your functions be smaller than some right number. Right. Yes. That's that's a really good takeaway is like, how do you know that code is hard to understand and change? It's not necessarily the line count. There are other things to look for, but it's not necessarily that. Yeah, I think in Elm review, I have a file that is almost 6000 lines of code now. Mm hmm. And it's fine. It's I do want to split it up and I can't because of some thing I can't say. Exploiter going to think. Yeah. Basically a compiler bug or limitation. And yeah, even with 6000 lines of code, I'm I'm like, this is fine. Yeah, I can live with this. Right. As soon as I can, when I'll do a break and change, then I will split it up like again. This is fine for now. Yeah, even when you think of splitting by a number of lines of code, there is absolutely no metric that says whether it's OK to cut it 300 or 1000 or 2000 or 50 lines of JavaScript developers. They they want their files to be small, but there is no yeah, no no metric to use. Like, when is it fine or what is the magic number? Like, no. Right. So I think it's really nice that in Elm we can leave that arbitrary decision or arbitrary number metric and and focus on splitting by other other metrics. Yeah, right. Yeah, I think that, you know, I often think about we want we want loose coupling and high cohesion. That's you know, that's how you want your code to be. And what happens sometimes in languages, you know, like JavaScript and Ruby, sometimes I see code being split in a way where it's actually highly coupled and not cohesive. So you have like these two different files that depend on each other in these intimate ways where they're like, you know, directly sharing data, touching the same global state or whatever, you know. So that makes them very coupled. So you can't really think about one without thinking about the other. But then they're in separate places, so you don't have any cohesion. And that's that's the opposite of what you want. You want, you know, I often think about it as like localized reasoning. That's like this, you know, sort of headline feature of like pure functional programming, you know, that you can look at one area of code and think about it. And now sometimes that area of code might be like a part of a module of a very long file and you can understand it without pulling everything else into your head. And that's fine. Sometimes you want to use modules to extract things out. And and there are reasons for that, too. So so one of the things I think about for like a module, what are the things that a module does? There are there are two things, literally only two things that a function does fundamentally. Take inputs and give output. The way I frame it, the difference between having all of your code in a single module versus splitting your code into different modules. The only difference is one, you're grouping some types and functions or top level values into a separate module. That's one thing that's different. The second thing that's different is that you can hide some of those things. Those are literally the two only things that an L module does. Now, those two things are very interesting. The organization part is obviously useful. The hiding thing is a game changer because by hiding certain pieces, you're able to have internals that other modules can't depend on and don't know about or care about. Yeah. And you you avoid coupling between your data structures and your implementations. Exactly. You cannot introduce breaking changes by changing those internals because the outside world doesn't care or know. And you can you can think about it in a more high level way. So I think that just understanding those core mechanics of a module are helpful for knowing when is it time to break out a module? Because, well, do I want to group some things together and do I want to hide some of those things? And, you know, Evan kind of talks about in this talk how there's there's something about, you know, the way that you create a module and choose what to create a module around that it's based on a type. There's something to that. Now, that's not always the case. You could have like a, you know, list helpers module, which is like, yeah, you can have certain utilities that help with strings. And now that might be a special case because you're sort of extending what you can do with a particular type in a way that you don't have access to the internals. But it's like a built in type or a type that is owned by another area of code. So you can't, you know, sort of encapsulate those internals and then have access to them in your helpers. If you could, then you might. But there's something to like, I mean, ultimately, you want to create these abstractions around domain concepts. And I think that that's the core. And you want to create types around domain concepts, too. When you say domain concept, do you mean data structures? I mean data structures and like a concept that like you would talk about to a user, for example. You know, oftentimes you want to be able to use language that, you know, you would describe some, you know. Like this is not a string. This is a username. Yeah. This is not a string. This is a user ID. Exactly. Exactly. It's a user ID. It's a, you know, whatever your fruit basket that you can put fruit into. And like how does a fruit basket work? You can only have two fruits at most at a time, you know, which is the example from Life of a File. If you haven't watched the talk and you're wondering why I'm talking about fruit baskets. I should buy stock for fruits.com. I heard they've been working well these last few days. Right. Yeah. So like that's something that you could talk to a customer about. Right. And so how do you understand like what are the rules for your fruit basket or, you know, Evan doesn't call it a fruit basket, but you know what I'm talking about. How you could talk to a user about that. You could explain those rules to the user that, oh, you can only have two things at once in your fruit basket. And so you can now have a module that's responsible for that idea and encapsulates that. And I think that that's an essential part of how you design modules. So like something that comes up often when people are getting into Elm or when they're really like growing past a certain point in their Elm code bases. They talk about having giant update functions. What are your thoughts on that, Jeroen? I would really have to look at the update function to know whether it's something that is OK or whether it's not OK. I guess it's more about how many different concepts, how many different things does the update handle? And can you delegate those tasks, those concepts to other functions or to other modules? Right, right. Yes, I really like the word delegate there. I think I like to think of the update function as a delegator. That's that's its job. You know, it's like it's like a telephone operator that's like moving the wires between connecting calls. But it's not part of those conversations. It's just routing those calls to the right place. Yeah, it could handle those calls inside the inside each pattern, or it could just call another function to do the job for him. Right, right. Ideally, if your function is really big, you probably want to call separate things into different functions, which you might put into a different modules or not. Right. And I think that it's a really good sign when you're when logic in your update function is moving out of the update function and into domain modules. So like in Life of a File Evans, you know, fruit example, he was moving that logic from the update function to just directly calling that module in the update. And that's all the updated. It called this module to add or remove an item. Yeah, I think that's a good sign. And that's something to look for if you're trying to, quote unquote, clean up your update function. Right. Because it's not that's the thing. It's not about cleaning up the code. It's about being able to think at one level of responsibility and one level of abstraction. So that like as you go down the update function, it should be operating at one level of abstraction, which is routing. That's the responsibility of the update function. And by routing, I don't mean page routing, but I mean delegating a function to the right place. This is a life of a founder, the life of an SBA. Right. Yes. So I think it might be tempting to sort of, you know, I mean, Evan talked about having like update helpers or, you know, an update module or something like that. Right. And when you do that, you might be splitting out the code into smaller pieces. But that's not the goal. The goal is to decouple the code. The goal is to make it so you can think about one area of code without loading up all of the rest of the code into your head. That's the goal. You don't want to have to think about how one thing works when you're dealing with something entirely different. Right. Yeah. I mean, sometimes I feel like it would make sense to even try being like very pedantic about the update function and saying, like, for example, you can't directly update the model in the update function. You have to do it by calling a function. Yeah, sure. I think that would be a useful experiment. I think I think that that's the right spirit. And I always try to move towards that. I've never tried pedantically just like enforcing that. That could be like an Elm review rule, actually. That would be interesting. Yeah, let's try that at some point. That would be cool. Maybe we can do a code coda on a live stream sometime and we can maintain some code and have that rule that we can never from the inception of the logic, it has to live in a separate function. Yeah. And also no unused functions and one step at a time with your... What was it called again? TCR. Test, commit, revert. Oh, it's so fun. It's so fun. Maybe maybe an episode on that sometime. It's a fun one. Yeah. So one way I would usually look at separating things into different modules is by looking at the model and seeing what is connected, what is coupled, what field is coupled to another field. Like with remote data, if you're trying to, if you have a record saying is loading, which is a Boolean and data, which is maybe something, then those two are coupled together. You can't have is loading true and you have data. That is probably not what you're expecting. So those I try to move into a separate type. Yeah. And what so that's the first step that I would take and then you will likely have some functions to work with those. And when that becomes a problem, you want to move those into a different module or so that you don't get tied to the implementation details. So you don't get coupling. You can preemptively move that one out to a different module so that you can hide the implementation details and don't and avoid getting any coupling. Yes. This is one of the the biggest things on my mind when I was rewatching this talk is this question of when is the right time to extract a module? And I think, you know, Evan's advice on that question in this talk is basically don't do it prematurely, which I completely agree that premature abstractions are a real problem and people have a tendency to do them. And I think that you need to hone that habit to to build up that sensibility. That said, once once you have a sense of what what's natural and fits into a particular module, I actually I think that it's actually a good idea in in certain cases to start with a module rather than organically feeling the pain and moving it out. Now, so like Richard talked talked about this in scaling out in make data structures. Which we haven't covered yet. We covered, yeah, we haven't covered scaling applications, but we covered we covered make data structures. And in that talk, he talks about that word count bug where the word count would get out of sync because there were different sources of truth. And when he encapsulated that as internal details so he could have a certain small area that's responsible for making sure the word count is accurate and up to date and it could cache it as it wanted to and recalculated and whatever the bugs went away. Right. Yeah. And he said, I wish I had started with that abstraction. I think that's an example where I would actually recommend starting with a module just like, okay, we've got this chapter and we know it's got a word count. And I don't want to let everybody depend on these internals of the word count. I think it's reasonable to start with that and say, I have this invariant. I want to protect this. Now, that said, if you're if you're new to this process and you don't have a lot of experience sort of organically extracting out modules. I do think it's good to sort of practice doing that. And because there are going to be times when you're going to be tempted to extract things out and it's actually okay to leave it where it is. Yeah. But once you once you develop those skills, I actually recommend in cases like that, starting with a module. I think that that's actually a good idea. Yeah, I think it would be useful to know about starting, but when you're trying to extract things to at least try to gain some usefulness about it. So when I met with my example of extracting the remote data pattern, which again, what you get is you decouple your code, which is which is a benefit, which is good and you gain guarantees, which is good. But if you just arbitrarily take a function from one file to another file, you have to think about what do I gain? So, for instance, if you have a utility function and you say, I'm going to move it to a utils module. Right. Right. And it's even though it's never used anywhere else. What do you gain? You don't gain any guarantees. You don't get remove coupling. Yes. Yeah. You don't get any bug safety around that. So there's not much point to doing that. Yes. Once you have something else that will call that function, maybe, maybe, maybe it will be useful. Maybe it will be detrimental to reuse it, as Evan showed that not everything that looks the same is the same thing. Totally agree. Yeah. No, that's well said. I think you're absolutely right that there are many cases where you're going to have utilities or little helper functions that it's going to be leading you astray if you try to abstract that into a module. And as you said, you know, what are you gaining from it? Are you protecting invariants? Are you hiding internals? Are you removing coupling? And if you're not doing any of those things, then there's no reason to extract something to a module. So I completely agree with that. I think that there are times when, you know, I want to protect this, these internals. I want to have an invariant or I want to make sure that this is used correctly. You know, I have like a Social Security number. I think I'm going to abstract this right away into a module, for example. Yeah, because as you said, with experience, you know that, oh, this is going to need to be protected. This is just going to be a string under the hood. So I need to wrap it up and protect it. Yes. So when you get some experience, we will know this will need protection. Yeah. So this will benefit from having a type and this will benefit from being split into a different module. Right. So you have the benefit there. You just know it. Exactly. Exactly. You need to be driving those decisions based on those concrete benefits. Exactly. I completely agree. So one other technique that really helps you stay honest about getting real benefits from this is test driven development. If you're writing tests for something, you know, if you say like, oh, I wish that I don't know, I've got this shopping cart and I, you know, if I add two items, then it should change the count of the shopping cart items rather than adding a duplicate entry or, you know, whatever. That's something that you probably want to test drive. You, you know, write a unit test first. And well, what are you going to test drive? Your main dot elm file, you know, your. Yeah. Like you're going to test drive a module. Actually, I often like to start with testing code that's directly in a test file. So it's just a function in the test file. And then I extract that function to a module once I've sort of gotten it up and running testing because that's the smallest step I can do to get a passing meaningful test. But that said, I think that, yeah, I mean, what are you going to test drive? Right. You're test driving a module. You could test drive little utility functions. And but even in those cases, like where do those utility functions live? You need to find a home for them that you're going to test. You're probably utils. Utils, man. Utils. You probably have like this mirrored structure between your, you know, a module and a test. There's always there's almost always a one to one mapping of those things for unit level tests, not necessarily for, you know, end to end or integration tests, not necessarily for program tests. One end to end test file per module. Yeah. That's that's I don't really want to imagine that. Integration test. Why not? Maybe. So another thing that talks about right at the beginning of the talk is in JavaScript, he says, or at least in other languages, you need to get the architecture right from the start or you're doomed. Yes. And that is something that we do not feel in the Elm community because refactoring is easy. And for bigger projects, I feel like that is true or truer than in other languages, but it's still quite a lot of work. Like if you have an architecture that is deeply rooted in the application, like you have a hundred thousand lines of code and there's one architecture that rules it all. Yeah, it will be very hard to refactor or it's not hard. It's tedious. It's long. It's going to be a work incentive. I like to think and to advise people to try it or whatever they want to. Like, hey, do you think this is a good idea? Is it is it a good idea to talk to my father, my project this way? And I usually tell them I would do it this way, but you know what? Try your try what you had in mind. And if it doesn't work out, you can just refactor it. The only thing that I would say then is you need to be very critical of how your experiments is working. I need to worry about that before it gets way too spread out. So before it gets the cornerstone of your whole application and where it would become still easy to change, but just very long and it would take you days or months of work. Right. Yes. Yes. That's a really good point. I think, you know, the other book club episodes we've been doing have been talking about these sort of more fixed qualities of code. You know, what what do you look for as code? What do you move towards? And the life of the file is more about the process and what do those tips look like and how do you get there and how does it evolve? And, you know, one of the things that I think is really important here, you know, is that as you're saying, that process requires you to be continually reflecting on what are the pain points? What are what are the problems we're moving towards? If the architecture is going in in a direction that's going to hit a brick wall, you need to be paying attention to that. And, you know, so I mean, Evan talks about avoiding premature abstractions, and I completely agree with that. I think the way I think about refactoring is that you want refactorings to be the pain you feel when you're working with code is like a gift. It's this gift that is a clear understanding of what you need to do because the pain is telling you something. Right. I mean, that's what that's what pain is in our nervous system, too. Right. If you have pain in your leg, you're like, hmm, I'd better look down at my leg because I think I need to change something like, oh, I'm stepping on a Lego. OK, I'll lift my foot up and take the Lego off. Like the pain is sending you a message of something you should do. And then it turns out it was just pain in your elbow and you need acupuncture and that was a spooky action at a distance. Spooky action at a distance. Yeah, there you go. So, well, you definitely yeah, if you've got your code base arranged a certain way, you could definitely have pain signals coming from from places besides the origin. But yeah, so those signals are are something you need to listen to. Yeah. And if you don't make design decisions and refactorings based on those signals, then what you're doing is you're actually creating a type of technical debt. People think of technical debt sometimes as like the code isn't clean enough. The code isn't refactored. That's not what technical debt means. Technical debt means that the abstractions or lack of abstractions are not serving what the code is trying to do. So it's dependent on what the code is trying to achieve. And if you anticipate what the code is going to do, then you're going to create abstractions that don't serve what the code needs to do. They're not useful abstractions. Abstractions are not inherently good. Abstractions are inherently bad, but that cost is offset by the value they provide. But if they're not providing value, then abstractions are a type of technical debt. So, yeah. And if you abstract prematurely, then you're probably not having the proper abstraction. Yes, therefore, technical debts. Exactly. You're creating a type of abstraction which is serving an imagined anticipated need, not an actual concrete need. And so you're likely to be creating the likely process is you create an abstraction because you think you're going to have this need. You think your code is going to need to be generalized in this way. You later find out your code needs to be generalized in this other subtly different way. That abstraction doesn't help at all. You have to unwind that abstraction. You have to introduce another abstraction to solve that other problem. So that's what you want to avoid. Right. So the process is that you you pay attention to the pain. But when you do have a clear signal that like, OK, I now know that we need to do this thing that our code is not well designed to do right now. That's when you do something. That's when you take action. If you don't do that, if you're not in the habit of noticing that pain, thinking about what it means and taking immediate action in a small step, then your code base ends up, like you said, getting you into trouble where you hit these walls and now you've got to do a one month refactoring. So when when you say or when Evan says don't refactor, don't abstract prematurely. Often that will mean write something twice or make this look keep this looking ugly until you know that something should be abstracted one way or another. So if you do that at some point, you will have that ugly code, that non refactored code, maybe duplicate a code. Yes. But you will. But once you find that abstraction, then you should abstract it. But you will have created technical debts because you should have abstracted. But it's just something that you have to pay somehow. So either you pay the technical debts upfront by doing the right abstraction or you do it after the fact by waiting. But it's still cheaper than doing the wrong abstraction first. Yeah. Yeah. I mean, one thing I think about is, you know, sometimes I see people like extracting functions before before it's used multiple times. But before it's used multiple times, how do you know what the function needs to look like? What how do you know what it is? How do you know what something is before it happens two or three times? So I think that, you know, sometimes I will intentionally introduce duplication so that I can step back and say, hmm, what does this want to be? What abstraction is this looking for with actual concrete examples that tell me that information? Sometimes I sometimes I feel like people people are uncomfortable because the way I refactor is either too late for them or too soon for them. Ironically, both both things happen. You know, sometimes people are uncomfortable that like, shouldn't we clean this code up? Like, well, I don't think it's a problem yet. Let's let's like let's figure out what this function should be called. I'm not really sure yet. Let's give it a nonsense name because I don't usually pick food. Yeah, I usually do something. That's my go to. Some people do applesauce. I've heard applesauce because it makes it very obvious that, you know, you need to come back and clean it up. But, you know, so sometimes I'll sort of let things sit on the back burner a little bit so I can come back to it when I have more clarity on on what abstraction is needed or what something should be called. And sometimes that makes people feel uncomfortable. Like, shouldn't we clean this up? Like, I'd like to let it sit there and feel the pain. Sometimes I think I make people feel uncomfortable because I'm like, OK, let's refactor this and commit it and push it to production. I what like but like we're working on this. I know. But like now I see a better name. Now let's ship that and change it right now. And that's how that's how I like to work, because I think that it allows you to feel the pain to help you understand better what abstractions are needed. And then it as soon as as soon as there's like a concrete thing that, you know, will serve your code well, an abstraction, moving something to a module, having a type that represents something better that, you know, like this is a step in the right direction. This is better. You should do it right away. Anytime, you know, you can do that. But you need to do it safely in a small step, you know, guided by unit tests, safe refactorings, using your ID tooling to automate the refactorings, you know, all these types of things. And that we're probably going to cover in a different episode. And I kind of, you know, this, this particular element of this process being being guided by habits, I actually just released a blog post about this, called relentless tiny habits. And so we'll link to that if you if you want to read more about like, cultivating these habits in that process, you can check that out. But I think habits are are an essential part of this and feel the pain, but then be proactive and it seems like a paradox, but I don't think it is. I have a habit of creating modules when my modules get too long. So you go by line count. Yeah. Obviously, not all habits have been created equal. So so we talked about we talked about line count isn't necessarily the metric for what makes a module difficult to understand. And what what gives you a signal that you need to extract something? What are the metrics and the signs that code is hard to understand? Well, we can't really say that line counts isn't part of that. A module that is 50 lines long is way easier to understand one that is 10,000 lines long. The length definitely makes a module hard, harder to read over easier to read. Right, right. I guess I guess the question there is, like, does splitting that now make it easier to read? And it doesn't actually so that so that's really the more interesting question, isn't it? What at what point does splitting a module make it easier to read than it was all in one big module? Yeah. It's more like how or when or for what reason? Yes. And yeah. More more about how in this talk from Evan. Mm hmm. Yeah. I usually go by coupling, as I said before, create types for things that are coupled together and extract that. Yes. Right. Yeah. I like to think about responsibilities like what it what does this code know about what does it need to understand? You know, I feel bad for it if I give code too many responsibilities, you know. You write a lot of comments saying sorry. Yeah. So sorry. It's like if you're you know, if you're at a friend's house for dinner and they're like cooking and cleaning and, you know, and you're like, come on, let me do something like at least let me chop some vegetables or like clean some dishes for you. You feel bad if they take on too many responsibilities. Yeah. Yeah, that's true. So I feel bad for the code to like it, you know, give it a break, like let it focus on its job and then let someone else do another job. Yeah, that's a good one. Yeah. I think we kind of hit on on this earlier that, you know, what what can you use a module to help you do? So good, good reasons to want a module. You know, you want you want to test a distinct thing. You want to hide an internal detail. Test a distinct thing on its own, not within an environment. Yes, that's right. That's right. Exactly. You want the banana, not the whole jungle. Right. I think that unit testing is I mean, it's a whole topic and we we went into it in depth in our own test episode. But that approach is so helpful for identifying responsibilities because it makes it a lot more clear. So I think that doing test driven development is going to make your job of identifying the right modules a lot easier. But but yeah, I think, you know, you want to hide internals. You want to, you know, guarantee certain properties of your code. Evan talked about, you know, fuzz testing, property based testing being in some ways like a sign that something belongs as a module that you're like, well, if I can identify a property that I want to check about something that this always applies or this always applies in the in this type of case. If you can write a fuzz test for it, then you can also use the module's ability to hide certain internal details to protect from the outside world. Getting becoming responsible for this task of protecting that condition. Yeah. If you can fuzz test a sub part of something, but not the whole thing, then that could be a sign that you need to split them out. Right. Yeah. If you have like a, you know, URL that you say that if I combine together these paths, I shouldn't have two slashes in a row and I should, you know, it should always end with a slash or whatever, you know, invariance you want to check about that. That might be a good sign that that belongs in a module because you want to protect those details of how you deal with that data. Yeah. So I feel like we haven't talked about one aspect from the talk is same versus similar, which is a big chunk of the talk. So Evan takes the example of checkboxes. Yep. So there's one list of checkboxes where you define settings for your user and one other list of checkboxes where you can choose fruits, potentially only a limited number of fruits. And what he shows is that even though it looks the same, like you have a list of checkboxes in both cases, you don't want to model them the same way. And because you don't want to model them the same way, you don't want to abstract them the same way because abstractions go around data structures in Elm. And a big chunk of his talk is basically a cata of how would you structure these two use cases. And it turns out you have plenty of ways to represent the data that is needed to display them. And they all give you very different benefits. Yeah. And sometimes you can't represent things one way. For instance, you can't represent dynamic things that come from the server using a record. You instead need a dictionary, for instance. He mentions that it's a good idea to try to think about all the use cases or all the possible data representations and try to figure out the ones that bring you the most benefits that are closest to your use case. And I think he does a very good cata for maybe 20 minutes, I don't know, around this. It's very educational. Yeah, that's a good point. So what are the implications for same versus similar? Like, what do you do with that knowledge? How does that change the way you approach things? That makes me, I think, just not to refactor things or abstract things before I know what they will be used for. Right. Right. Instead of saying like, oh, let me generalize this checkbox functionality. I'll have like a checkboxes module. Yeah. Or I have two dialogues here in my application. I should probably abstract that into a single dialogue and with flags and stuff. Yeah. That might be a good idea, but maybe you need to wait and see how they evolve. Maybe that will make sense. Just have a dialogue layer, dialogue module, and have the internals be different and not one module behind flags. Yeah. You have to think about all those abstraction, the cost of abstractions and what benefits they bring you. Right. And like the different ways of slicing it and defining those responsibilities or domains. Yeah. It's like Evan talks about just exploring a lot of different ways to model data, which I think is such a great lesson. Yeah, definitely. And I think that that applies to exploring how you can sort of abstract something and slice off a certain responsibility. You know, like you said, is it like, like, what is the thing here? Is it a dialogue or is it, you know, a user selection thing? Yeah. Which happens to be a dialogue, but might not be tomorrow. Right. Right. And maybe this other thing that's also a dialogue is so different that they're similar, but at the core, the way that you model the data and all these things underlying them are different or maybe they are the same. But you can like I think it's good to practice just slicing things a lot of different ways, like just write it down on paper. Like, what are all the different ways you could choose the dividing lines? You know, like this, this is one responsibility. This is one responsibility. Just write down lots of different ways. Because if you only have the first thing that comes to mind as the only choice you have, you're really limiting yourself. And I think that in this process, the best teacher is experience and experience that comes through actually experimenting and feeling the pain. And if you don't allow yourself to feel the pain of not having an abstraction, you're not going to learn those things. But if you do, sometimes you'll go to a dead end. Sometimes you won't, but you'll be paying attention to, you know, I don't have an abstraction here. OK, why is that painful? What's painful about it? And that's telling you something about the responsibility. And you need to listen to that. Think about different ways you could define those responsibilities and try it. And that's how you learn. So we talk about a lot about coupling in this episode. That is actually not very much part of my vocabulary. I don't think about coupling. What I think about is making impossible states impossible. So whenever I see a data structure where the fields can be in a state that is invalid, that's where I think about making impossible states impossible and moving them out to a new type. I never think about the word coupling, but I think essentially that is pretty much it right. Or also getting stuff in sync. Yeah. Keeping data in sync or having the variance, the relationships defined appropriately so that their states are coupled in the right way. There's a coupling of states, of data states. Yeah. If this field needs to change every time that field needs to be changed, that is probably that makes sense to have a data structure or not be represented, but just recomputed every time. That's interesting. I definitely think that the things you're talking about are a sign of coupling. I'm not sure I would go so far as to say that that's the only thing that is a sign of coupling. No, no, definitely not. But that is what I have in mind. That might just be because I'm not all that used to using the word coupling in my everyday job. It's a very abstract word. I actually do use that word a lot, but I think maybe a better word for it is just responsibility. How many responsibilities does the same thing have? It's a lot more natural to think of it in terms of responsibilities. You could have a conversation with a child and talk about, what do you think this is responsible for? What's this responsible for? And they could have a brilliant conversation with you about it. And you don't need to explain any concepts to them, which is a sign that it's a good word because you can arrive at good abstractions by thinking about this simple idea and coupling. It's like, what does that even mean? I don't even know how you say coupling in French. I don't know how to say responsibility. Interesting. So how should people get started with applying these ideas of the life of a file to their everyday coding? First of all, I feel like I always say this, but just watch the talk or read the article. Can't go wrong with that. Yeah, it's not even watch it, watch it, then rewatch it, then rewatch it again and again. Take some notes, try some of the techniques, get some inspiration. Yeah. Try to feel the pain. Just practice not abstracting too early. And when you feel the pain, when you feel problems, then refactor and move things into types, into data structures, and then into modules. And then when you have more experience, when you can tell that something will benefit being into its own module without it being premature abstraction, do that. And yeah, make impossible states impossible. If you haven't listened to that episode, go listen to that one. Yeah, there's overlap between all these ideas, which is, you know... Build data structures. Right. Organize things around data structures. And how do you choose your data structures? Well, you make impossible states impossible. You choose the ones that have the properties you want. Yeah, so all of these ideas sort of are in orbit around these core concepts. I really feel like splitting around data structures or maybe even responsibilities is just the way to do it in Elm. Yes. It's not like we've been brainwashed, although maybe. Evan is a good speaker, I think. But it's more like we tried it and it worked. And we tried it again and it just always works. It works. I mean, I don't think it's specific to Elm at all. I think it's inherent in just the idea of a module. In Elixir, there are these like struct types that you can actually define a struct for a particular module. So it's like it's almost like an object in a way that it's like this is the data type associated with this module. And it's like built into the language. OK, yeah. And so that's definitely the way people structure things in the Elixir world as well. And just like when you think about, again, the mechanics of a module, it can group certain types, values, functions, and it can hide some of them. Right. So, well, if you what if you want to hide internal details, but it's defined in another module? Well, that way of organizing doesn't work because you can't hide it, because now the things that use it don't have access to it. So, of course, this makes sense that that a module is organized around a data type because, yeah, I mean, it abstracts the details of how you consume that data type and nothing else has access to those internals. So just by that core mechanic, that's that's that's what you have to do to leverage that mechanic. So I think, yeah, I mean, I think that it's a process. And, you know, as you said, Jeroen, experiment, try out the process, practice. Try the wrong solutions. Try. Yeah, exactly. Try the wrong solutions so that you can feel the pain and then you can go and explain to your colleagues like this is not the way to go because this, that. Mm hmm. Yes, it's it's an iterative process and it requires experimentation and you're going to you're going to get it wrong. But what you want to do is you want to not get it all wrong up front. If you do everything up front, then you're going to get everything wrong up front. But if you take tiny steps as you feel the pain, I mean, if you just think about it like your time is limited. And so what do you want to spend time on? Some thing that you imagine you're going to need an abstraction for in the future or something you need an abstraction for right now. Like if you have a limited amount of time, work on the thing that you know you need now first. Don't waste your time with other stuff. So, yeah, practice, practice deferring. I know that I very deliberately practiced deferring, introducing abstractions when I was getting started with them, because I think maybe even because I had heard this advice from Evan's talk, I can't remember. I can't remember where I got this inspiration, but I remember I was I was holding off on it because I didn't want my object oriented background to guide my design decisions. And I actually was able to avoid a lot of the pitfalls that like Richard talked about in make data structures where he had to learn the hard way that, you know, creating these abstractions around or maybe he talks about this in scaling applications. But he talks about this, you know, creating abstractions where you're trying to encapsulate data and you're trying to use this object oriented approach where your message passing between all these different data types. And I actually didn't need to feel that pain because I was disciplined about deferring abstractions and letting myself feel the pain and be open to a new set of like design ideas. And that really helped. So I definitely recommend trying that out. That said, when you know that something can have a better name, when you know that something can be extracted into a nice function that groups this stuff together, then do it right away. All right. Well, I think we've wrapped the subject now. I think we I think we covered. Well, that's that's everything there is to know about designing on code. We've covered it all. This was a fun podcast. Thanks for listening. Yeah. Now, you know, impossible states, you know how to how to incrementally build files. We're done. Yeah. But I still don't know how to to make SPS. There you go. So that'll be the rest of the podcast. Talking about that. But if you do have something you'd like to hear about on the podcast, send us a question or a topic suggestion. Go to Elm dash radio dot com slash question questions. So many questions. Yeah. You can you can find the button there. Yeah. And review us on Apple podcast. We'd appreciate a review. And thank you so much for listening. And you're in. I'll talk to you next time. See you next time. Bye bye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 2.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 1, "seek": 0, "start": 2.0, "end": 4.0, "text": " Hello, Dillon.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 2, "seek": 0, "start": 4.0, "end": 6.0, "text": " How are you doing today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 3, "seek": 0, "start": 6.0, "end": 8.0, "text": " I'm doing pretty well. How are you?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 4, "seek": 0, "start": 8.0, "end": 10.0, "text": " Pretty good. Pretty good.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 5, "seek": 0, "start": 10.0, "end": 14.0, "text": " And well, on we continue with our book club.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 6, "seek": 0, "start": 14.0, "end": 16.0, "text": " Yeah.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 7, "seek": 0, "start": 16.0, "end": 18.0, "text": " What are we talking about this week?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 8, "seek": 0, "start": 18.0, "end": 24.0, "text": " So this week, we're going to talk about another very special and very important talk from the Elm Street", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50564, 50564, 1012, 366, 291, 884, 965, 30, 50664, 50664, 286, 478, 884, 1238, 731, 13, 1012, 366, 291, 30, 50764, 50764, 10693, 665, 13, 10693, 665, 13, 50864, 50864, 400, 731, 11, 322, 321, 2354, 365, 527, 1446, 6482, 13, 51064, 51064, 865, 13, 51164, 51164, 708, 366, 321, 1417, 466, 341, 1243, 30, 51264, 51264, 407, 341, 1243, 11, 321, 434, 516, 281, 751, 466, 1071, 588, 2121, 293, 588, 1021, 751, 490, 264, 2699, 76, 7638, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.3284229077790913, "compression_ratio": 1.5794871794871794, "no_caption_prob": 0.21675215661525726}, {"id": 9, "seek": 2400, "start": 24.0, "end": 30.0, "text": " community, one made by Evan this time, so Evan Cieplicki. And it's the life of a fowl.", "tokens": [50364, 1768, 11, 472, 1027, 538, 22613, 341, 565, 11, 370, 22613, 383, 414, 564, 41356, 13, 400, 309, 311, 264, 993, 295, 257, 283, 305, 75, 13, 50664, 50664, 865, 11, 456, 534, 645, 512, 2243, 6686, 300, 286, 519, 8871, 292, 257, 688, 295, 869, 3487, 294, 264, 2699, 76, 50964, 50964, 1768, 2440, 322, 11, 291, 458, 11, 300, 9809, 293, 22613, 2729, 382, 2141, 2247, 279, 294, 264, 2440, 924, 13, 51364, 51364, 286, 478, 534, 7941, 337, 729, 869, 3593, 300, 291, 600, 2212, 505, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.24712168916742852, "compression_ratio": 1.54337899543379, "no_caption_prob": 0.0008530756458640099}, {"id": 10, "seek": 2400, "start": 30.0, "end": 36.0, "text": " Yeah, there really were some amazing talks that I think seeded a lot of great ideas in the Elm", "tokens": [50364, 1768, 11, 472, 1027, 538, 22613, 341, 565, 11, 370, 22613, 383, 414, 564, 41356, 13, 400, 309, 311, 264, 993, 295, 257, 283, 305, 75, 13, 50664, 50664, 865, 11, 456, 534, 645, 512, 2243, 6686, 300, 286, 519, 8871, 292, 257, 688, 295, 869, 3487, 294, 264, 2699, 76, 50964, 50964, 1768, 2440, 322, 11, 291, 458, 11, 300, 9809, 293, 22613, 2729, 382, 2141, 2247, 279, 294, 264, 2440, 924, 13, 51364, 51364, 286, 478, 534, 7941, 337, 729, 869, 3593, 300, 291, 600, 2212, 505, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.24712168916742852, "compression_ratio": 1.54337899543379, "no_caption_prob": 0.0008530756458640099}, {"id": 11, "seek": 2400, "start": 36.0, "end": 44.0, "text": " community early on, you know, that Richard and Evan gave as keynotes in the early years.", "tokens": [50364, 1768, 11, 472, 1027, 538, 22613, 341, 565, 11, 370, 22613, 383, 414, 564, 41356, 13, 400, 309, 311, 264, 993, 295, 257, 283, 305, 75, 13, 50664, 50664, 865, 11, 456, 534, 645, 512, 2243, 6686, 300, 286, 519, 8871, 292, 257, 688, 295, 869, 3487, 294, 264, 2699, 76, 50964, 50964, 1768, 2440, 322, 11, 291, 458, 11, 300, 9809, 293, 22613, 2729, 382, 2141, 2247, 279, 294, 264, 2440, 924, 13, 51364, 51364, 286, 478, 534, 7941, 337, 729, 869, 3593, 300, 291, 600, 2212, 505, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.24712168916742852, "compression_ratio": 1.54337899543379, "no_caption_prob": 0.0008530756458640099}, {"id": 12, "seek": 2400, "start": 44.0, "end": 48.0, "text": " I'm really grateful for those great resources that you've given us.", "tokens": [50364, 1768, 11, 472, 1027, 538, 22613, 341, 565, 11, 370, 22613, 383, 414, 564, 41356, 13, 400, 309, 311, 264, 993, 295, 257, 283, 305, 75, 13, 50664, 50664, 865, 11, 456, 534, 645, 512, 2243, 6686, 300, 286, 519, 8871, 292, 257, 688, 295, 869, 3487, 294, 264, 2699, 76, 50964, 50964, 1768, 2440, 322, 11, 291, 458, 11, 300, 9809, 293, 22613, 2729, 382, 2141, 2247, 279, 294, 264, 2440, 924, 13, 51364, 51364, 286, 478, 534, 7941, 337, 729, 869, 3593, 300, 291, 600, 2212, 505, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.24712168916742852, "compression_ratio": 1.54337899543379, "no_caption_prob": 0.0008530756458640099}, {"id": 13, "seek": 4800, "start": 48.0, "end": 56.0, "text": " Because I think they've really had an impact on the way people think in the community.", "tokens": [50364, 1436, 286, 519, 436, 600, 534, 632, 364, 2712, 322, 264, 636, 561, 519, 294, 264, 1768, 13, 50764, 50764, 865, 11, 286, 519, 436, 13475, 309, 13, 50864, 50864, 865, 13, 865, 13, 400, 286, 519, 300, 390, 1238, 21935, 11, 886, 13, 400, 436, 630, 257, 869, 1691, 365, 300, 13, 51164, 51164, 865, 13, 9809, 293, 22613, 11, 498, 291, 1562, 528, 281, 360, 729, 733, 295, 6686, 797, 11, 1767, 11, 1767, 360, 13, 51564, 51564, 492, 576, 959, 281, 1568, 729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.122310303069733, "compression_ratio": 1.5961538461538463, "no_caption_prob": 0.0001940471411217004}, {"id": 14, "seek": 4800, "start": 56.0, "end": 58.0, "text": " Yeah, I think they shaped it.", "tokens": [50364, 1436, 286, 519, 436, 600, 534, 632, 364, 2712, 322, 264, 636, 561, 519, 294, 264, 1768, 13, 50764, 50764, 865, 11, 286, 519, 436, 13475, 309, 13, 50864, 50864, 865, 13, 865, 13, 400, 286, 519, 300, 390, 1238, 21935, 11, 886, 13, 400, 436, 630, 257, 869, 1691, 365, 300, 13, 51164, 51164, 865, 13, 9809, 293, 22613, 11, 498, 291, 1562, 528, 281, 360, 729, 733, 295, 6686, 797, 11, 1767, 11, 1767, 360, 13, 51564, 51564, 492, 576, 959, 281, 1568, 729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.122310303069733, "compression_ratio": 1.5961538461538463, "no_caption_prob": 0.0001940471411217004}, {"id": 15, "seek": 4800, "start": 58.0, "end": 64.0, "text": " Yeah. Yeah. And I think that was pretty intentional, too. And they did a great job with that.", "tokens": [50364, 1436, 286, 519, 436, 600, 534, 632, 364, 2712, 322, 264, 636, 561, 519, 294, 264, 1768, 13, 50764, 50764, 865, 11, 286, 519, 436, 13475, 309, 13, 50864, 50864, 865, 13, 865, 13, 400, 286, 519, 300, 390, 1238, 21935, 11, 886, 13, 400, 436, 630, 257, 869, 1691, 365, 300, 13, 51164, 51164, 865, 13, 9809, 293, 22613, 11, 498, 291, 1562, 528, 281, 360, 729, 733, 295, 6686, 797, 11, 1767, 11, 1767, 360, 13, 51564, 51564, 492, 576, 959, 281, 1568, 729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.122310303069733, "compression_ratio": 1.5961538461538463, "no_caption_prob": 0.0001940471411217004}, {"id": 16, "seek": 4800, "start": 64.0, "end": 72.0, "text": " Yeah. Richard and Evan, if you ever want to do those kind of talks again, please, please do.", "tokens": [50364, 1436, 286, 519, 436, 600, 534, 632, 364, 2712, 322, 264, 636, 561, 519, 294, 264, 1768, 13, 50764, 50764, 865, 11, 286, 519, 436, 13475, 309, 13, 50864, 50864, 865, 13, 865, 13, 400, 286, 519, 300, 390, 1238, 21935, 11, 886, 13, 400, 436, 630, 257, 869, 1691, 365, 300, 13, 51164, 51164, 865, 13, 9809, 293, 22613, 11, 498, 291, 1562, 528, 281, 360, 729, 733, 295, 6686, 797, 11, 1767, 11, 1767, 360, 13, 51564, 51564, 492, 576, 959, 281, 1568, 729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.122310303069733, "compression_ratio": 1.5961538461538463, "no_caption_prob": 0.0001940471411217004}, {"id": 17, "seek": 4800, "start": 72.0, "end": 74.0, "text": " We would love to hear those.", "tokens": [50364, 1436, 286, 519, 436, 600, 534, 632, 364, 2712, 322, 264, 636, 561, 519, 294, 264, 1768, 13, 50764, 50764, 865, 11, 286, 519, 436, 13475, 309, 13, 50864, 50864, 865, 13, 865, 13, 400, 286, 519, 300, 390, 1238, 21935, 11, 886, 13, 400, 436, 630, 257, 869, 1691, 365, 300, 13, 51164, 51164, 865, 13, 9809, 293, 22613, 11, 498, 291, 1562, 528, 281, 360, 729, 733, 295, 6686, 797, 11, 1767, 11, 1767, 360, 13, 51564, 51564, 492, 576, 959, 281, 1568, 729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.122310303069733, "compression_ratio": 1.5961538461538463, "no_caption_prob": 0.0001940471411217004}, {"id": 18, "seek": 7400, "start": 74.0, "end": 80.0, "text": " Well, you still get a lot of interesting talks coming out that Richard gives in various forums.", "tokens": [50364, 1042, 11, 291, 920, 483, 257, 688, 295, 1880, 6686, 1348, 484, 300, 9809, 2709, 294, 3683, 26998, 13, 50664, 50664, 467, 311, 11, 291, 458, 11, 406, 382, 709, 613, 1708, 11, 457, 13, 50864, 50864, 865, 11, 436, 434, 588, 1880, 11, 445, 294, 819, 2098, 13, 51064, 51064, 1079, 13, 1079, 13, 407, 437, 307, 341, 751, 466, 294, 257, 37711, 11, 264, 993, 295, 257, 283, 305, 75, 30, 708, 311, 264, 2099, 12691, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1423851610666298, "compression_ratio": 1.4773869346733668, "no_caption_prob": 7.966534758452326e-05}, {"id": 19, "seek": 7400, "start": 80.0, "end": 84.0, "text": " It's, you know, not as much these days, but.", "tokens": [50364, 1042, 11, 291, 920, 483, 257, 688, 295, 1880, 6686, 1348, 484, 300, 9809, 2709, 294, 3683, 26998, 13, 50664, 50664, 467, 311, 11, 291, 458, 11, 406, 382, 709, 613, 1708, 11, 457, 13, 50864, 50864, 865, 11, 436, 434, 588, 1880, 11, 445, 294, 819, 2098, 13, 51064, 51064, 1079, 13, 1079, 13, 407, 437, 307, 341, 751, 466, 294, 257, 37711, 11, 264, 993, 295, 257, 283, 305, 75, 30, 708, 311, 264, 2099, 12691, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1423851610666298, "compression_ratio": 1.4773869346733668, "no_caption_prob": 7.966534758452326e-05}, {"id": 20, "seek": 7400, "start": 84.0, "end": 88.0, "text": " Yeah, they're very interesting, just in different ways.", "tokens": [50364, 1042, 11, 291, 920, 483, 257, 688, 295, 1880, 6686, 1348, 484, 300, 9809, 2709, 294, 3683, 26998, 13, 50664, 50664, 467, 311, 11, 291, 458, 11, 406, 382, 709, 613, 1708, 11, 457, 13, 50864, 50864, 865, 11, 436, 434, 588, 1880, 11, 445, 294, 819, 2098, 13, 51064, 51064, 1079, 13, 1079, 13, 407, 437, 307, 341, 751, 466, 294, 257, 37711, 11, 264, 993, 295, 257, 283, 305, 75, 30, 708, 311, 264, 2099, 12691, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1423851610666298, "compression_ratio": 1.4773869346733668, "no_caption_prob": 7.966534758452326e-05}, {"id": 21, "seek": 7400, "start": 88.0, "end": 98.0, "text": " Yes. Yes. So what is this talk about in a nutshell, the life of a fowl? What's the short summary?", "tokens": [50364, 1042, 11, 291, 920, 483, 257, 688, 295, 1880, 6686, 1348, 484, 300, 9809, 2709, 294, 3683, 26998, 13, 50664, 50664, 467, 311, 11, 291, 458, 11, 406, 382, 709, 613, 1708, 11, 457, 13, 50864, 50864, 865, 11, 436, 434, 588, 1880, 11, 445, 294, 819, 2098, 13, 51064, 51064, 1079, 13, 1079, 13, 407, 437, 307, 341, 751, 466, 294, 257, 37711, 11, 264, 993, 295, 257, 283, 305, 75, 30, 708, 311, 264, 2099, 12691, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1423851610666298, "compression_ratio": 1.4773869346733668, "no_caption_prob": 7.966534758452326e-05}, {"id": 22, "seek": 9800, "start": 98.0, "end": 106.0, "text": " The short summary I would say is, well, Evan says it is how do I grow Elm code?", "tokens": [50364, 440, 2099, 12691, 286, 576, 584, 307, 11, 731, 11, 22613, 1619, 309, 307, 577, 360, 286, 1852, 2699, 76, 3089, 30, 50764, 50764, 865, 13, 3013, 307, 257, 955, 1168, 13, 50864, 50864, 3013, 307, 257, 955, 1168, 13, 407, 437, 415, 1619, 294, 264, 2863, 295, 264, 751, 307, 562, 561, 1409, 1228, 2699, 76, 257, 938, 565, 2057, 11, 51264, 51264, 436, 645, 3365, 11, 2264, 11, 577, 360, 286, 2464, 2699, 76, 3089, 30, 1012, 360, 286, 2464, 2699, 76, 5821, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.1290490574306912, "compression_ratio": 1.6145833333333333, "no_caption_prob": 0.0001583977573318407}, {"id": 23, "seek": 9800, "start": 106.0, "end": 108.0, "text": " Yeah. Which is a big question.", "tokens": [50364, 440, 2099, 12691, 286, 576, 584, 307, 11, 731, 11, 22613, 1619, 309, 307, 577, 360, 286, 1852, 2699, 76, 3089, 30, 50764, 50764, 865, 13, 3013, 307, 257, 955, 1168, 13, 50864, 50864, 3013, 307, 257, 955, 1168, 13, 407, 437, 415, 1619, 294, 264, 2863, 295, 264, 751, 307, 562, 561, 1409, 1228, 2699, 76, 257, 938, 565, 2057, 11, 51264, 51264, 436, 645, 3365, 11, 2264, 11, 577, 360, 286, 2464, 2699, 76, 3089, 30, 1012, 360, 286, 2464, 2699, 76, 5821, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.1290490574306912, "compression_ratio": 1.6145833333333333, "no_caption_prob": 0.0001583977573318407}, {"id": 24, "seek": 9800, "start": 108.0, "end": 116.0, "text": " Which is a big question. So what he says in the beginning of the talk is when people started using Elm a long time ago,", "tokens": [50364, 440, 2099, 12691, 286, 576, 584, 307, 11, 731, 11, 22613, 1619, 309, 307, 577, 360, 286, 1852, 2699, 76, 3089, 30, 50764, 50764, 865, 13, 3013, 307, 257, 955, 1168, 13, 50864, 50864, 3013, 307, 257, 955, 1168, 13, 407, 437, 415, 1619, 294, 264, 2863, 295, 264, 751, 307, 562, 561, 1409, 1228, 2699, 76, 257, 938, 565, 2057, 11, 51264, 51264, 436, 645, 3365, 11, 2264, 11, 577, 360, 286, 2464, 2699, 76, 3089, 30, 1012, 360, 286, 2464, 2699, 76, 5821, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.1290490574306912, "compression_ratio": 1.6145833333333333, "no_caption_prob": 0.0001583977573318407}, {"id": 25, "seek": 9800, "start": 116.0, "end": 120.0, "text": " they were asking, OK, how do I write Elm code? How do I write Elm applications?", "tokens": [50364, 440, 2099, 12691, 286, 576, 584, 307, 11, 731, 11, 22613, 1619, 309, 307, 577, 360, 286, 1852, 2699, 76, 3089, 30, 50764, 50764, 865, 13, 3013, 307, 257, 955, 1168, 13, 50864, 50864, 3013, 307, 257, 955, 1168, 13, 407, 437, 415, 1619, 294, 264, 2863, 295, 264, 751, 307, 562, 561, 1409, 1228, 2699, 76, 257, 938, 565, 2057, 11, 51264, 51264, 436, 645, 3365, 11, 2264, 11, 577, 360, 286, 2464, 2699, 76, 3089, 30, 1012, 360, 286, 2464, 2699, 76, 5821, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.1290490574306912, "compression_ratio": 1.6145833333333333, "no_caption_prob": 0.0001583977573318407}, {"id": 26, "seek": 12000, "start": 120.0, "end": 129.0, "text": " So Evan made all those utilities and functions that are now browser application and so on,", "tokens": [50364, 407, 22613, 1027, 439, 729, 30482, 293, 6828, 300, 366, 586, 11185, 3861, 293, 370, 322, 11, 50814, 50814, 597, 2709, 291, 257, 3877, 281, 1884, 2699, 76, 5821, 13, 400, 934, 300, 11, 561, 1029, 11, 577, 360, 286, 1852, 2699, 76, 3089, 30, 51264, 51264, 400, 341, 307, 437, 321, 434, 516, 281, 751, 466, 586, 13, 400, 286, 841, 411, 341, 751, 6338, 300, 1168, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06787912159749906, "compression_ratio": 1.5051020408163265, "no_caption_prob": 2.1110787201905623e-05}, {"id": 27, "seek": 12000, "start": 129.0, "end": 138.0, "text": " which gives you a structure to create Elm applications. And after that, people ask, how do I grow Elm code?", "tokens": [50364, 407, 22613, 1027, 439, 729, 30482, 293, 6828, 300, 366, 586, 11185, 3861, 293, 370, 322, 11, 50814, 50814, 597, 2709, 291, 257, 3877, 281, 1884, 2699, 76, 5821, 13, 400, 934, 300, 11, 561, 1029, 11, 577, 360, 286, 1852, 2699, 76, 3089, 30, 51264, 51264, 400, 341, 307, 437, 321, 434, 516, 281, 751, 466, 586, 13, 400, 286, 841, 411, 341, 751, 6338, 300, 1168, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06787912159749906, "compression_ratio": 1.5051020408163265, "no_caption_prob": 2.1110787201905623e-05}, {"id": 28, "seek": 12000, "start": 138.0, "end": 146.0, "text": " And this is what we're going to talk about now. And I feel like this talk answers that question.", "tokens": [50364, 407, 22613, 1027, 439, 729, 30482, 293, 6828, 300, 366, 586, 11185, 3861, 293, 370, 322, 11, 50814, 50814, 597, 2709, 291, 257, 3877, 281, 1884, 2699, 76, 5821, 13, 400, 934, 300, 11, 561, 1029, 11, 577, 360, 286, 1852, 2699, 76, 3089, 30, 51264, 51264, 400, 341, 307, 437, 321, 434, 516, 281, 751, 466, 586, 13, 400, 286, 841, 411, 341, 751, 6338, 300, 1168, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06787912159749906, "compression_ratio": 1.5051020408163265, "no_caption_prob": 2.1110787201905623e-05}, {"id": 29, "seek": 14600, "start": 146.0, "end": 154.0, "text": " And now the question is more like, how do I make an SPA? It is the one that I often see in the beginners channel of Slack.", "tokens": [50364, 400, 586, 264, 1168, 307, 544, 411, 11, 577, 360, 286, 652, 364, 8420, 32, 30, 467, 307, 264, 472, 300, 286, 2049, 536, 294, 264, 26992, 2269, 295, 37211, 13, 50764, 50764, 1779, 13, 400, 281, 1867, 300, 1168, 11, 291, 393, 352, 646, 281, 291, 393, 2140, 281, 3500, 2272, 300, 321, 632, 466, 2699, 76, 8420, 32, 13, 51164, 51164, 663, 311, 257, 722, 13, 865, 13, 5780, 456, 311, 370, 709, 544, 291, 393, 751, 466, 322, 300, 3983, 11, 886, 13, 51414, 51414, 865, 13, 286, 920, 841, 411, 300, 1168, 6132, 380, 668, 4498, 10103, 13, 51564, 51564, 1779, 13, 1436, 456, 366, 2940, 2098, 281, 360, 309, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11014965602329799, "compression_ratio": 1.6296296296296295, "no_caption_prob": 8.349085692316294e-05}, {"id": 30, "seek": 14600, "start": 154.0, "end": 162.0, "text": " Right. And to answer that question, you can go back to you can listen to episode 12 that we had about Elm SPA.", "tokens": [50364, 400, 586, 264, 1168, 307, 544, 411, 11, 577, 360, 286, 652, 364, 8420, 32, 30, 467, 307, 264, 472, 300, 286, 2049, 536, 294, 264, 26992, 2269, 295, 37211, 13, 50764, 50764, 1779, 13, 400, 281, 1867, 300, 1168, 11, 291, 393, 352, 646, 281, 291, 393, 2140, 281, 3500, 2272, 300, 321, 632, 466, 2699, 76, 8420, 32, 13, 51164, 51164, 663, 311, 257, 722, 13, 865, 13, 5780, 456, 311, 370, 709, 544, 291, 393, 751, 466, 322, 300, 3983, 11, 886, 13, 51414, 51414, 865, 13, 286, 920, 841, 411, 300, 1168, 6132, 380, 668, 4498, 10103, 13, 51564, 51564, 1779, 13, 1436, 456, 366, 2940, 2098, 281, 360, 309, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11014965602329799, "compression_ratio": 1.6296296296296295, "no_caption_prob": 8.349085692316294e-05}, {"id": 31, "seek": 14600, "start": 162.0, "end": 167.0, "text": " That's a start. Yeah. Although there's so much more you can talk about on that subject, too.", "tokens": [50364, 400, 586, 264, 1168, 307, 544, 411, 11, 577, 360, 286, 652, 364, 8420, 32, 30, 467, 307, 264, 472, 300, 286, 2049, 536, 294, 264, 26992, 2269, 295, 37211, 13, 50764, 50764, 1779, 13, 400, 281, 1867, 300, 1168, 11, 291, 393, 352, 646, 281, 291, 393, 2140, 281, 3500, 2272, 300, 321, 632, 466, 2699, 76, 8420, 32, 13, 51164, 51164, 663, 311, 257, 722, 13, 865, 13, 5780, 456, 311, 370, 709, 544, 291, 393, 751, 466, 322, 300, 3983, 11, 886, 13, 51414, 51414, 865, 13, 286, 920, 841, 411, 300, 1168, 6132, 380, 668, 4498, 10103, 13, 51564, 51564, 1779, 13, 1436, 456, 366, 2940, 2098, 281, 360, 309, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11014965602329799, "compression_ratio": 1.6296296296296295, "no_caption_prob": 8.349085692316294e-05}, {"id": 32, "seek": 14600, "start": 167.0, "end": 170.0, "text": " Yeah. I still feel like that question hasn't been fully answered.", "tokens": [50364, 400, 586, 264, 1168, 307, 544, 411, 11, 577, 360, 286, 652, 364, 8420, 32, 30, 467, 307, 264, 472, 300, 286, 2049, 536, 294, 264, 26992, 2269, 295, 37211, 13, 50764, 50764, 1779, 13, 400, 281, 1867, 300, 1168, 11, 291, 393, 352, 646, 281, 291, 393, 2140, 281, 3500, 2272, 300, 321, 632, 466, 2699, 76, 8420, 32, 13, 51164, 51164, 663, 311, 257, 722, 13, 865, 13, 5780, 456, 311, 370, 709, 544, 291, 393, 751, 466, 322, 300, 3983, 11, 886, 13, 51414, 51414, 865, 13, 286, 920, 841, 411, 300, 1168, 6132, 380, 668, 4498, 10103, 13, 51564, 51564, 1779, 13, 1436, 456, 366, 2940, 2098, 281, 360, 309, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11014965602329799, "compression_ratio": 1.6296296296296295, "no_caption_prob": 8.349085692316294e-05}, {"id": 33, "seek": 14600, "start": 170.0, "end": 173.0, "text": " Right. Because there are several ways to do it.", "tokens": [50364, 400, 586, 264, 1168, 307, 544, 411, 11, 577, 360, 286, 652, 364, 8420, 32, 30, 467, 307, 264, 472, 300, 286, 2049, 536, 294, 264, 26992, 2269, 295, 37211, 13, 50764, 50764, 1779, 13, 400, 281, 1867, 300, 1168, 11, 291, 393, 352, 646, 281, 291, 393, 2140, 281, 3500, 2272, 300, 321, 632, 466, 2699, 76, 8420, 32, 13, 51164, 51164, 663, 311, 257, 722, 13, 865, 13, 5780, 456, 311, 370, 709, 544, 291, 393, 751, 466, 322, 300, 3983, 11, 886, 13, 51414, 51414, 865, 13, 286, 920, 841, 411, 300, 1168, 6132, 380, 668, 4498, 10103, 13, 51564, 51564, 1779, 13, 1436, 456, 366, 2940, 2098, 281, 360, 309, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11014965602329799, "compression_ratio": 1.6296296296296295, "no_caption_prob": 8.349085692316294e-05}, {"id": 34, "seek": 17300, "start": 173.0, "end": 181.0, "text": " And even Ryan who writes Elm SPA is still making some changes in his designs.", "tokens": [50364, 400, 754, 9116, 567, 13657, 2699, 76, 8420, 32, 307, 920, 1455, 512, 2962, 294, 702, 11347, 13, 50764, 50764, 865, 13, 5780, 9809, 42677, 1601, 311, 1868, 917, 19294, 7712, 366, 1596, 665, 412, 516, 666, 729, 4365, 51164, 51164, 293, 577, 281, 3877, 257, 2167, 3028, 724, 293, 7512, 337, 1364, 365, 472, 13, 51364, 51364, 407, 300, 307, 257, 665, 7684, 456, 13, 583, 456, 311, 544, 281, 312, 848, 322, 300, 4829, 11, 337, 988, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09979233287629627, "compression_ratio": 1.5, "no_caption_prob": 6.708721775794402e-05}, {"id": 35, "seek": 17300, "start": 181.0, "end": 189.0, "text": " Yeah. Although Richard Feldman's front end masters courses are quite good at going into those details", "tokens": [50364, 400, 754, 9116, 567, 13657, 2699, 76, 8420, 32, 307, 920, 1455, 512, 2962, 294, 702, 11347, 13, 50764, 50764, 865, 13, 5780, 9809, 42677, 1601, 311, 1868, 917, 19294, 7712, 366, 1596, 665, 412, 516, 666, 729, 4365, 51164, 51164, 293, 577, 281, 3877, 257, 2167, 3028, 724, 293, 7512, 337, 1364, 365, 472, 13, 51364, 51364, 407, 300, 307, 257, 665, 7684, 456, 13, 583, 456, 311, 544, 281, 312, 848, 322, 300, 4829, 11, 337, 988, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09979233287629627, "compression_ratio": 1.5, "no_caption_prob": 6.708721775794402e-05}, {"id": 36, "seek": 17300, "start": 189.0, "end": 193.0, "text": " and how to structure a single page app and techniques for working with one.", "tokens": [50364, 400, 754, 9116, 567, 13657, 2699, 76, 8420, 32, 307, 920, 1455, 512, 2962, 294, 702, 11347, 13, 50764, 50764, 865, 13, 5780, 9809, 42677, 1601, 311, 1868, 917, 19294, 7712, 366, 1596, 665, 412, 516, 666, 729, 4365, 51164, 51164, 293, 577, 281, 3877, 257, 2167, 3028, 724, 293, 7512, 337, 1364, 365, 472, 13, 51364, 51364, 407, 300, 307, 257, 665, 7684, 456, 13, 583, 456, 311, 544, 281, 312, 848, 322, 300, 4829, 11, 337, 988, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09979233287629627, "compression_ratio": 1.5, "no_caption_prob": 6.708721775794402e-05}, {"id": 37, "seek": 17300, "start": 193.0, "end": 198.0, "text": " So that is a good resource there. But there's more to be said on that topic, for sure.", "tokens": [50364, 400, 754, 9116, 567, 13657, 2699, 76, 8420, 32, 307, 920, 1455, 512, 2962, 294, 702, 11347, 13, 50764, 50764, 865, 13, 5780, 9809, 42677, 1601, 311, 1868, 917, 19294, 7712, 366, 1596, 665, 412, 516, 666, 729, 4365, 51164, 51164, 293, 577, 281, 3877, 257, 2167, 3028, 724, 293, 7512, 337, 1364, 365, 472, 13, 51364, 51364, 407, 300, 307, 257, 665, 7684, 456, 13, 583, 456, 311, 544, 281, 312, 848, 322, 300, 4829, 11, 337, 988, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09979233287629627, "compression_ratio": 1.5, "no_caption_prob": 6.708721775794402e-05}, {"id": 38, "seek": 19800, "start": 198.0, "end": 212.0, "text": " So I think to me, this talk, the life of a file, the thesis is sort of this is how people tend to approach growing JavaScript into lots of tiny files.", "tokens": [50364, 407, 286, 519, 281, 385, 11, 341, 751, 11, 264, 993, 295, 257, 3991, 11, 264, 22288, 307, 1333, 295, 341, 307, 577, 561, 3928, 281, 3109, 4194, 15778, 666, 3195, 295, 5870, 7098, 13, 51064, 51064, 400, 983, 360, 436, 360, 300, 30, 1436, 295, 30510, 5065, 412, 257, 4560, 293, 570, 309, 311, 588, 11697, 281, 1895, 15104, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08779264596792367, "compression_ratio": 1.4659090909090908, "no_caption_prob": 0.0006662858068011701}, {"id": 39, "seek": 19800, "start": 212.0, "end": 222.0, "text": " And why do they do that? Because of spooky effects at a distance and because it's very painful to refactor.", "tokens": [50364, 407, 286, 519, 281, 385, 11, 341, 751, 11, 264, 993, 295, 257, 3991, 11, 264, 22288, 307, 1333, 295, 341, 307, 577, 561, 3928, 281, 3109, 4194, 15778, 666, 3195, 295, 5870, 7098, 13, 51064, 51064, 400, 983, 360, 436, 360, 300, 30, 1436, 295, 30510, 5065, 412, 257, 4560, 293, 570, 309, 311, 588, 11697, 281, 1895, 15104, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08779264596792367, "compression_ratio": 1.4659090909090908, "no_caption_prob": 0.0006662858068011701}, {"id": 40, "seek": 22200, "start": 222.0, "end": 231.0, "text": " So they sort of prematurely create these abstractions because it's such a pain if you don't have the right structure from the start.", "tokens": [50364, 407, 436, 1333, 295, 34877, 356, 1884, 613, 12649, 626, 570, 309, 311, 1270, 257, 1822, 498, 291, 500, 380, 362, 264, 558, 3877, 490, 264, 722, 13, 50814, 50814, 407, 291, 722, 370, 291, 500, 380, 362, 281, 1895, 15104, 570, 1895, 578, 3662, 307, 6958, 294, 15778, 13, 51064, 51064, 407, 1895, 578, 3662, 307, 406, 370, 6958, 294, 2699, 76, 293, 291, 500, 380, 362, 613, 30510, 5065, 412, 257, 4560, 294, 2699, 76, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.054788298723174304, "compression_ratio": 1.7527472527472527, "no_caption_prob": 7.253410876728594e-05}, {"id": 41, "seek": 22200, "start": 231.0, "end": 236.0, "text": " So you start so you don't have to refactor because refactoring is scary in JavaScript.", "tokens": [50364, 407, 436, 1333, 295, 34877, 356, 1884, 613, 12649, 626, 570, 309, 311, 1270, 257, 1822, 498, 291, 500, 380, 362, 264, 558, 3877, 490, 264, 722, 13, 50814, 50814, 407, 291, 722, 370, 291, 500, 380, 362, 281, 1895, 15104, 570, 1895, 578, 3662, 307, 6958, 294, 15778, 13, 51064, 51064, 407, 1895, 578, 3662, 307, 406, 370, 6958, 294, 2699, 76, 293, 291, 500, 380, 362, 613, 30510, 5065, 412, 257, 4560, 294, 2699, 76, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.054788298723174304, "compression_ratio": 1.7527472527472527, "no_caption_prob": 7.253410876728594e-05}, {"id": 42, "seek": 22200, "start": 236.0, "end": 243.0, "text": " So refactoring is not so scary in Elm and you don't have these spooky effects at a distance in Elm.", "tokens": [50364, 407, 436, 1333, 295, 34877, 356, 1884, 613, 12649, 626, 570, 309, 311, 1270, 257, 1822, 498, 291, 500, 380, 362, 264, 558, 3877, 490, 264, 722, 13, 50814, 50814, 407, 291, 722, 370, 291, 500, 380, 362, 281, 1895, 15104, 570, 1895, 578, 3662, 307, 6958, 294, 15778, 13, 51064, 51064, 407, 1895, 578, 3662, 307, 406, 370, 6958, 294, 2699, 76, 293, 291, 500, 380, 362, 613, 30510, 5065, 412, 257, 4560, 294, 2699, 76, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.054788298723174304, "compression_ratio": 1.7527472527472527, "no_caption_prob": 7.253410876728594e-05}, {"id": 43, "seek": 24300, "start": 243.0, "end": 253.0, "text": " So what are the implications of that for how you contrast growing JavaScript code to growing Elm code?", "tokens": [50364, 407, 437, 366, 264, 16602, 295, 300, 337, 577, 291, 8712, 4194, 15778, 3089, 281, 4194, 2699, 76, 3089, 30, 50864, 50864, 400, 300, 311, 1333, 295, 22613, 311, 5777, 22288, 11, 286, 519, 11, 307, 264, 636, 291, 1852, 3089, 307, 544, 1333, 295, 5061, 766, 1826, 291, 767, 841, 264, 1822, 295, 746, 13, 51414, 51414, 400, 550, 291, 722, 281, 5268, 484, 281, 819, 16679, 13, 509, 5120, 365, 428, 1412, 15983, 11, 886, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0758240571836146, "compression_ratio": 1.59009009009009, "no_caption_prob": 1.241059635503916e-05}, {"id": 44, "seek": 24300, "start": 253.0, "end": 264.0, "text": " And that's sort of Evan's central thesis, I think, is the way you grow code is more sort of holding off until you actually feel the pain of something.", "tokens": [50364, 407, 437, 366, 264, 16602, 295, 300, 337, 577, 291, 8712, 4194, 15778, 3089, 281, 4194, 2699, 76, 3089, 30, 50864, 50864, 400, 300, 311, 1333, 295, 22613, 311, 5777, 22288, 11, 286, 519, 11, 307, 264, 636, 291, 1852, 3089, 307, 544, 1333, 295, 5061, 766, 1826, 291, 767, 841, 264, 1822, 295, 746, 13, 51414, 51414, 400, 550, 291, 722, 281, 5268, 484, 281, 819, 16679, 13, 509, 5120, 365, 428, 1412, 15983, 11, 886, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0758240571836146, "compression_ratio": 1.59009009009009, "no_caption_prob": 1.241059635503916e-05}, {"id": 45, "seek": 24300, "start": 264.0, "end": 271.0, "text": " And then you start to expand out to different modules. You experiment with your data modeling, too.", "tokens": [50364, 407, 437, 366, 264, 16602, 295, 300, 337, 577, 291, 8712, 4194, 15778, 3089, 281, 4194, 2699, 76, 3089, 30, 50864, 50864, 400, 300, 311, 1333, 295, 22613, 311, 5777, 22288, 11, 286, 519, 11, 307, 264, 636, 291, 1852, 3089, 307, 544, 1333, 295, 5061, 766, 1826, 291, 767, 841, 264, 1822, 295, 746, 13, 51414, 51414, 400, 550, 291, 722, 281, 5268, 484, 281, 819, 16679, 13, 509, 5120, 365, 428, 1412, 15983, 11, 886, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0758240571836146, "compression_ratio": 1.59009009009009, "no_caption_prob": 1.241059635503916e-05}, {"id": 46, "seek": 27100, "start": 271.0, "end": 281.0, "text": " That's another thing you talked about. He talked about exploring all the different ways you can model something, which in our make impossible states impossible talk episode,", "tokens": [50364, 663, 311, 1071, 551, 291, 2825, 466, 13, 634, 2825, 466, 12736, 439, 264, 819, 2098, 291, 393, 2316, 746, 11, 597, 294, 527, 652, 6243, 4368, 6243, 751, 3500, 11, 50864, 50864, 321, 994, 380, 534, 751, 466, 300, 1399, 295, 2433, 926, 365, 257, 688, 295, 819, 2098, 281, 2316, 746, 13, 51164, 51164, 400, 286, 519, 300, 311, 534, 665, 11269, 11, 886, 11, 570, 309, 311, 406, 445, 466, 6243, 4368, 13, 51364, 51364, 467, 311, 466, 12736, 293, 1382, 257, 688, 295, 819, 721, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06718195752894625, "compression_ratio": 1.9030837004405285, "no_caption_prob": 5.064189826953225e-05}, {"id": 47, "seek": 27100, "start": 281.0, "end": 287.0, "text": " we didn't really talk about that process of playing around with a lot of different ways to model something.", "tokens": [50364, 663, 311, 1071, 551, 291, 2825, 466, 13, 634, 2825, 466, 12736, 439, 264, 819, 2098, 291, 393, 2316, 746, 11, 597, 294, 527, 652, 6243, 4368, 6243, 751, 3500, 11, 50864, 50864, 321, 994, 380, 534, 751, 466, 300, 1399, 295, 2433, 926, 365, 257, 688, 295, 819, 2098, 281, 2316, 746, 13, 51164, 51164, 400, 286, 519, 300, 311, 534, 665, 11269, 11, 886, 11, 570, 309, 311, 406, 445, 466, 6243, 4368, 13, 51364, 51364, 467, 311, 466, 12736, 293, 1382, 257, 688, 295, 819, 721, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06718195752894625, "compression_ratio": 1.9030837004405285, "no_caption_prob": 5.064189826953225e-05}, {"id": 48, "seek": 27100, "start": 287.0, "end": 291.0, "text": " And I think that's really good insight, too, because it's not just about impossible states.", "tokens": [50364, 663, 311, 1071, 551, 291, 2825, 466, 13, 634, 2825, 466, 12736, 439, 264, 819, 2098, 291, 393, 2316, 746, 11, 597, 294, 527, 652, 6243, 4368, 6243, 751, 3500, 11, 50864, 50864, 321, 994, 380, 534, 751, 466, 300, 1399, 295, 2433, 926, 365, 257, 688, 295, 819, 2098, 281, 2316, 746, 13, 51164, 51164, 400, 286, 519, 300, 311, 534, 665, 11269, 11, 886, 11, 570, 309, 311, 406, 445, 466, 6243, 4368, 13, 51364, 51364, 467, 311, 466, 12736, 293, 1382, 257, 688, 295, 819, 721, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06718195752894625, "compression_ratio": 1.9030837004405285, "no_caption_prob": 5.064189826953225e-05}, {"id": 49, "seek": 27100, "start": 291.0, "end": 295.0, "text": " It's about exploring and trying a lot of different things.", "tokens": [50364, 663, 311, 1071, 551, 291, 2825, 466, 13, 634, 2825, 466, 12736, 439, 264, 819, 2098, 291, 393, 2316, 746, 11, 597, 294, 527, 652, 6243, 4368, 6243, 751, 3500, 11, 50864, 50864, 321, 994, 380, 534, 751, 466, 300, 1399, 295, 2433, 926, 365, 257, 688, 295, 819, 2098, 281, 2316, 746, 13, 51164, 51164, 400, 286, 519, 300, 311, 534, 665, 11269, 11, 886, 11, 570, 309, 311, 406, 445, 466, 6243, 4368, 13, 51364, 51364, 467, 311, 466, 12736, 293, 1382, 257, 688, 295, 819, 721, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06718195752894625, "compression_ratio": 1.9030837004405285, "no_caption_prob": 5.064189826953225e-05}, {"id": 50, "seek": 29500, "start": 295.0, "end": 307.0, "text": " So I think he captures that in this talk, this exploration and this sort of process of waiting until you actually feel the pain instead of creating abstractions because you think you'll need them.", "tokens": [50364, 407, 286, 519, 415, 27986, 300, 294, 341, 751, 11, 341, 16197, 293, 341, 1333, 295, 1399, 295, 3806, 1826, 291, 767, 841, 264, 1822, 2602, 295, 4084, 12649, 626, 570, 291, 519, 291, 603, 643, 552, 13, 50964, 50964, 823, 11, 456, 366, 257, 688, 295, 4365, 281, 483, 666, 456, 11, 457, 286, 519, 300, 300, 311, 264, 4965, 22288, 382, 286, 536, 309, 13, 4402, 300, 34285, 365, 291, 30, 51314, 51314, 865, 11, 300, 41051, 337, 385, 13, 407, 294, 15778, 11, 291, 3928, 281, 411, 4356, 7098, 570, 291, 500, 380, 411, 30510, 4560, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05669626822838417, "compression_ratio": 1.6867924528301887, "no_caption_prob": 2.7107187634101138e-05}, {"id": 51, "seek": 29500, "start": 307.0, "end": 314.0, "text": " Now, there are a lot of details to get into there, but I think that that's the core thesis as I see it. Does that resonate with you?", "tokens": [50364, 407, 286, 519, 415, 27986, 300, 294, 341, 751, 11, 341, 16197, 293, 341, 1333, 295, 1399, 295, 3806, 1826, 291, 767, 841, 264, 1822, 2602, 295, 4084, 12649, 626, 570, 291, 519, 291, 603, 643, 552, 13, 50964, 50964, 823, 11, 456, 366, 257, 688, 295, 4365, 281, 483, 666, 456, 11, 457, 286, 519, 300, 300, 311, 264, 4965, 22288, 382, 286, 536, 309, 13, 4402, 300, 34285, 365, 291, 30, 51314, 51314, 865, 11, 300, 41051, 337, 385, 13, 407, 294, 15778, 11, 291, 3928, 281, 411, 4356, 7098, 570, 291, 500, 380, 411, 30510, 4560, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05669626822838417, "compression_ratio": 1.6867924528301887, "no_caption_prob": 2.7107187634101138e-05}, {"id": 52, "seek": 29500, "start": 314.0, "end": 322.0, "text": " Yeah, that resonates for me. So in JavaScript, you tend to like smaller files because you don't like spooky distance.", "tokens": [50364, 407, 286, 519, 415, 27986, 300, 294, 341, 751, 11, 341, 16197, 293, 341, 1333, 295, 1399, 295, 3806, 1826, 291, 767, 841, 264, 1822, 2602, 295, 4084, 12649, 626, 570, 291, 519, 291, 603, 643, 552, 13, 50964, 50964, 823, 11, 456, 366, 257, 688, 295, 4365, 281, 483, 666, 456, 11, 457, 286, 519, 300, 300, 311, 264, 4965, 22288, 382, 286, 536, 309, 13, 4402, 300, 34285, 365, 291, 30, 51314, 51314, 865, 11, 300, 41051, 337, 385, 13, 407, 294, 15778, 11, 291, 3928, 281, 411, 4356, 7098, 570, 291, 500, 380, 411, 30510, 4560, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05669626822838417, "compression_ratio": 1.6867924528301887, "no_caption_prob": 2.7107187634101138e-05}, {"id": 53, "seek": 32200, "start": 322.0, "end": 328.0, "text": " What spooky action such as this is all of that expression. Yeah, me too. I only hear it often.", "tokens": [50364, 708, 30510, 3069, 1270, 382, 341, 307, 439, 295, 300, 6114, 13, 865, 11, 385, 886, 13, 286, 787, 1568, 309, 2049, 13, 50664, 50664, 663, 390, 2067, 380, 300, 264, 1778, 300, 23486, 994, 380, 411, 13018, 12939, 420, 746, 300, 415, 13, 51064, 51064, 286, 519, 309, 390, 570, 415, 415, 994, 380, 1697, 300, 1265, 390, 2433, 365, 10313, 13, 51314, 51314, 8266, 16478, 13, 865, 11, 300, 311, 264, 19963, 13, 407, 1310, 23486, 2759, 380, 362, 4501, 15778, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15901647914539685, "compression_ratio": 1.56, "no_caption_prob": 8.348943083547056e-05}, {"id": 54, "seek": 32200, "start": 328.0, "end": 336.0, "text": " That was wasn't that the reason that Einstein didn't like quantum mechanics or something that he.", "tokens": [50364, 708, 30510, 3069, 1270, 382, 341, 307, 439, 295, 300, 6114, 13, 865, 11, 385, 886, 13, 286, 787, 1568, 309, 2049, 13, 50664, 50664, 663, 390, 2067, 380, 300, 264, 1778, 300, 23486, 994, 380, 411, 13018, 12939, 420, 746, 300, 415, 13, 51064, 51064, 286, 519, 309, 390, 570, 415, 415, 994, 380, 1697, 300, 1265, 390, 2433, 365, 10313, 13, 51314, 51314, 8266, 16478, 13, 865, 11, 300, 311, 264, 19963, 13, 407, 1310, 23486, 2759, 380, 362, 4501, 15778, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15901647914539685, "compression_ratio": 1.56, "no_caption_prob": 8.348943083547056e-05}, {"id": 55, "seek": 32200, "start": 336.0, "end": 341.0, "text": " I think it was because he he didn't believe that God was playing with dice.", "tokens": [50364, 708, 30510, 3069, 1270, 382, 341, 307, 439, 295, 300, 6114, 13, 865, 11, 385, 886, 13, 286, 787, 1568, 309, 2049, 13, 50664, 50664, 663, 390, 2067, 380, 300, 264, 1778, 300, 23486, 994, 380, 411, 13018, 12939, 420, 746, 300, 415, 13, 51064, 51064, 286, 519, 309, 390, 570, 415, 415, 994, 380, 1697, 300, 1265, 390, 2433, 365, 10313, 13, 51314, 51314, 8266, 16478, 13, 865, 11, 300, 311, 264, 19963, 13, 407, 1310, 23486, 2759, 380, 362, 4501, 15778, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15901647914539685, "compression_ratio": 1.56, "no_caption_prob": 8.348943083547056e-05}, {"id": 56, "seek": 32200, "start": 341.0, "end": 347.0, "text": " Mm hmm. Yeah, that's the quotes. So maybe Einstein wouldn't have liked JavaScript.", "tokens": [50364, 708, 30510, 3069, 1270, 382, 341, 307, 439, 295, 300, 6114, 13, 865, 11, 385, 886, 13, 286, 787, 1568, 309, 2049, 13, 50664, 50664, 663, 390, 2067, 380, 300, 264, 1778, 300, 23486, 994, 380, 411, 13018, 12939, 420, 746, 300, 415, 13, 51064, 51064, 286, 519, 309, 390, 570, 415, 415, 994, 380, 1697, 300, 1265, 390, 2433, 365, 10313, 13, 51314, 51314, 8266, 16478, 13, 865, 11, 300, 311, 264, 19963, 13, 407, 1310, 23486, 2759, 380, 362, 4501, 15778, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15901647914539685, "compression_ratio": 1.56, "no_caption_prob": 8.348943083547056e-05}, {"id": 57, "seek": 34700, "start": 347.0, "end": 354.0, "text": " Yeah, yeah. If you try something twice, you shouldn't you should expect the same thing.", "tokens": [50364, 865, 11, 1338, 13, 759, 291, 853, 746, 6091, 11, 291, 4659, 380, 291, 820, 2066, 264, 912, 551, 13, 50714, 50714, 865, 11, 300, 311, 558, 13, 7587, 13, 467, 576, 362, 4333, 6075, 2445, 9410, 13, 50914, 50914, 286, 519, 370, 13, 407, 11, 1338, 11, 291, 500, 380, 362, 729, 30510, 5909, 490, 257, 4560, 570, 291, 500, 380, 362, 29243, 13, 51214, 51214, 1079, 13, 400, 291, 500, 380, 643, 281, 1723, 766, 428, 3876, 300, 307, 257, 1629, 1230, 295, 3876, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14081851204673013, "compression_ratio": 1.6372093023255814, "no_caption_prob": 0.00019106575928162783}, {"id": 58, "seek": 34700, "start": 354.0, "end": 358.0, "text": " Yeah, that's right. Exactly. It would have loved pure function programming.", "tokens": [50364, 865, 11, 1338, 13, 759, 291, 853, 746, 6091, 11, 291, 4659, 380, 291, 820, 2066, 264, 912, 551, 13, 50714, 50714, 865, 11, 300, 311, 558, 13, 7587, 13, 467, 576, 362, 4333, 6075, 2445, 9410, 13, 50914, 50914, 286, 519, 370, 13, 407, 11, 1338, 11, 291, 500, 380, 362, 729, 30510, 5909, 490, 257, 4560, 570, 291, 500, 380, 362, 29243, 13, 51214, 51214, 1079, 13, 400, 291, 500, 380, 643, 281, 1723, 766, 428, 3876, 300, 307, 257, 1629, 1230, 295, 3876, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14081851204673013, "compression_ratio": 1.6372093023255814, "no_caption_prob": 0.00019106575928162783}, {"id": 59, "seek": 34700, "start": 358.0, "end": 364.0, "text": " I think so. So, yeah, you don't have those spooky actions from a distance because you don't have mutations.", "tokens": [50364, 865, 11, 1338, 13, 759, 291, 853, 746, 6091, 11, 291, 4659, 380, 291, 820, 2066, 264, 912, 551, 13, 50714, 50714, 865, 11, 300, 311, 558, 13, 7587, 13, 467, 576, 362, 4333, 6075, 2445, 9410, 13, 50914, 50914, 286, 519, 370, 13, 407, 11, 1338, 11, 291, 500, 380, 362, 729, 30510, 5909, 490, 257, 4560, 570, 291, 500, 380, 362, 29243, 13, 51214, 51214, 1079, 13, 400, 291, 500, 380, 643, 281, 1723, 766, 428, 3876, 300, 307, 257, 1629, 1230, 295, 3876, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14081851204673013, "compression_ratio": 1.6372093023255814, "no_caption_prob": 0.00019106575928162783}, {"id": 60, "seek": 34700, "start": 364.0, "end": 371.0, "text": " Yes. And you don't need to cut off your lines that is a certain number of lines.", "tokens": [50364, 865, 11, 1338, 13, 759, 291, 853, 746, 6091, 11, 291, 4659, 380, 291, 820, 2066, 264, 912, 551, 13, 50714, 50714, 865, 11, 300, 311, 558, 13, 7587, 13, 467, 576, 362, 4333, 6075, 2445, 9410, 13, 50914, 50914, 286, 519, 370, 13, 407, 11, 1338, 11, 291, 500, 380, 362, 729, 30510, 5909, 490, 257, 4560, 570, 291, 500, 380, 362, 29243, 13, 51214, 51214, 1079, 13, 400, 291, 500, 380, 643, 281, 1723, 766, 428, 3876, 300, 307, 257, 1629, 1230, 295, 3876, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14081851204673013, "compression_ratio": 1.6372093023255814, "no_caption_prob": 0.00019106575928162783}, {"id": 61, "seek": 37100, "start": 371.0, "end": 380.0, "text": " Like you don't need to have all your files be smaller than 300 lines long or even your functions be smaller than some right number.", "tokens": [50364, 1743, 291, 500, 380, 643, 281, 362, 439, 428, 7098, 312, 4356, 813, 6641, 3876, 938, 420, 754, 428, 6828, 312, 4356, 813, 512, 558, 1230, 13, 50814, 50814, 1779, 13, 1079, 13, 663, 311, 300, 311, 257, 534, 665, 30681, 307, 411, 11, 577, 360, 291, 458, 300, 3089, 307, 1152, 281, 1223, 293, 1319, 30, 51314, 51314, 467, 311, 406, 4725, 264, 1622, 1207, 13, 821, 366, 661, 721, 281, 574, 337, 11, 457, 309, 311, 406, 4725, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06739213300305744, "compression_ratio": 1.6267281105990783, "no_caption_prob": 7.253994408529252e-05}, {"id": 62, "seek": 37100, "start": 380.0, "end": 390.0, "text": " Right. Yes. That's that's a really good takeaway is like, how do you know that code is hard to understand and change?", "tokens": [50364, 1743, 291, 500, 380, 643, 281, 362, 439, 428, 7098, 312, 4356, 813, 6641, 3876, 938, 420, 754, 428, 6828, 312, 4356, 813, 512, 558, 1230, 13, 50814, 50814, 1779, 13, 1079, 13, 663, 311, 300, 311, 257, 534, 665, 30681, 307, 411, 11, 577, 360, 291, 458, 300, 3089, 307, 1152, 281, 1223, 293, 1319, 30, 51314, 51314, 467, 311, 406, 4725, 264, 1622, 1207, 13, 821, 366, 661, 721, 281, 574, 337, 11, 457, 309, 311, 406, 4725, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06739213300305744, "compression_ratio": 1.6267281105990783, "no_caption_prob": 7.253994408529252e-05}, {"id": 63, "seek": 37100, "start": 390.0, "end": 397.0, "text": " It's not necessarily the line count. There are other things to look for, but it's not necessarily that.", "tokens": [50364, 1743, 291, 500, 380, 643, 281, 362, 439, 428, 7098, 312, 4356, 813, 6641, 3876, 938, 420, 754, 428, 6828, 312, 4356, 813, 512, 558, 1230, 13, 50814, 50814, 1779, 13, 1079, 13, 663, 311, 300, 311, 257, 534, 665, 30681, 307, 411, 11, 577, 360, 291, 458, 300, 3089, 307, 1152, 281, 1223, 293, 1319, 30, 51314, 51314, 467, 311, 406, 4725, 264, 1622, 1207, 13, 821, 366, 661, 721, 281, 574, 337, 11, 457, 309, 311, 406, 4725, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06739213300305744, "compression_ratio": 1.6267281105990783, "no_caption_prob": 7.253994408529252e-05}, {"id": 64, "seek": 39700, "start": 397.0, "end": 403.0, "text": " Yeah, I think in Elm review, I have a file that is almost 6000 lines of code now.", "tokens": [50364, 865, 11, 286, 519, 294, 2699, 76, 3131, 11, 286, 362, 257, 3991, 300, 307, 1920, 41789, 3876, 295, 3089, 586, 13, 50664, 50664, 8266, 16478, 13, 400, 309, 311, 2489, 13, 467, 311, 286, 360, 528, 281, 7472, 309, 493, 293, 286, 393, 380, 570, 295, 512, 551, 286, 393, 380, 584, 13, 51114, 51114, 12514, 78, 1681, 516, 281, 519, 13, 865, 13, 8537, 257, 31958, 7426, 420, 27432, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.2944924454939993, "compression_ratio": 1.375, "no_caption_prob": 4.3312800698913634e-05}, {"id": 65, "seek": 39700, "start": 403.0, "end": 412.0, "text": " Mm hmm. And it's fine. It's I do want to split it up and I can't because of some thing I can't say.", "tokens": [50364, 865, 11, 286, 519, 294, 2699, 76, 3131, 11, 286, 362, 257, 3991, 300, 307, 1920, 41789, 3876, 295, 3089, 586, 13, 50664, 50664, 8266, 16478, 13, 400, 309, 311, 2489, 13, 467, 311, 286, 360, 528, 281, 7472, 309, 493, 293, 286, 393, 380, 570, 295, 512, 551, 286, 393, 380, 584, 13, 51114, 51114, 12514, 78, 1681, 516, 281, 519, 13, 865, 13, 8537, 257, 31958, 7426, 420, 27432, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.2944924454939993, "compression_ratio": 1.375, "no_caption_prob": 4.3312800698913634e-05}, {"id": 66, "seek": 39700, "start": 412.0, "end": 420.0, "text": " Exploiter going to think. Yeah. Basically a compiler bug or limitation.", "tokens": [50364, 865, 11, 286, 519, 294, 2699, 76, 3131, 11, 286, 362, 257, 3991, 300, 307, 1920, 41789, 3876, 295, 3089, 586, 13, 50664, 50664, 8266, 16478, 13, 400, 309, 311, 2489, 13, 467, 311, 286, 360, 528, 281, 7472, 309, 493, 293, 286, 393, 380, 570, 295, 512, 551, 286, 393, 380, 584, 13, 51114, 51114, 12514, 78, 1681, 516, 281, 519, 13, 865, 13, 8537, 257, 31958, 7426, 420, 27432, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.2944924454939993, "compression_ratio": 1.375, "no_caption_prob": 4.3312800698913634e-05}, {"id": 67, "seek": 42000, "start": 420.0, "end": 427.0, "text": " And yeah, even with 6000 lines of code, I'm I'm like, this is fine. Yeah, I can live with this. Right.", "tokens": [50364, 400, 1338, 11, 754, 365, 41789, 3876, 295, 3089, 11, 286, 478, 286, 478, 411, 11, 341, 307, 2489, 13, 865, 11, 286, 393, 1621, 365, 341, 13, 1779, 13, 50714, 50714, 1018, 2321, 382, 286, 393, 11, 562, 286, 603, 360, 257, 1821, 293, 1319, 11, 550, 286, 486, 7472, 309, 493, 411, 797, 13, 639, 307, 2489, 337, 586, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.16935201124711471, "compression_ratio": 1.3973509933774835, "no_caption_prob": 4.006085146102123e-05}, {"id": 68, "seek": 42000, "start": 427.0, "end": 436.0, "text": " As soon as I can, when I'll do a break and change, then I will split it up like again. This is fine for now.", "tokens": [50364, 400, 1338, 11, 754, 365, 41789, 3876, 295, 3089, 11, 286, 478, 286, 478, 411, 11, 341, 307, 2489, 13, 865, 11, 286, 393, 1621, 365, 341, 13, 1779, 13, 50714, 50714, 1018, 2321, 382, 286, 393, 11, 562, 286, 603, 360, 257, 1821, 293, 1319, 11, 550, 286, 486, 7472, 309, 493, 411, 797, 13, 639, 307, 2489, 337, 586, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.16935201124711471, "compression_ratio": 1.3973509933774835, "no_caption_prob": 4.006085146102123e-05}, {"id": 69, "seek": 43600, "start": 436.0, "end": 454.0, "text": " Yeah, even when you think of splitting by a number of lines of code, there is absolutely no metric that says whether it's OK to cut it 300 or 1000 or 2000 or 50 lines of JavaScript developers.", "tokens": [50364, 865, 11, 754, 562, 291, 519, 295, 30348, 538, 257, 1230, 295, 3876, 295, 3089, 11, 456, 307, 3122, 572, 20678, 300, 1619, 1968, 309, 311, 2264, 281, 1723, 309, 6641, 420, 9714, 420, 8132, 420, 2625, 3876, 295, 15778, 8849, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.17316913604736328, "compression_ratio": 1.3150684931506849, "no_caption_prob": 0.0001214572403114289}, {"id": 70, "seek": 45400, "start": 454.0, "end": 467.0, "text": " They they want their files to be small, but there is no yeah, no no metric to use. Like, when is it fine or what is the magic number?", "tokens": [50364, 814, 436, 528, 641, 7098, 281, 312, 1359, 11, 457, 456, 307, 572, 1338, 11, 572, 572, 20678, 281, 764, 13, 1743, 11, 562, 307, 309, 2489, 420, 437, 307, 264, 5585, 1230, 30, 51014, 51014, 1743, 11, 572, 13, 1779, 13, 407, 286, 519, 309, 311, 534, 1481, 300, 294, 2699, 76, 321, 393, 1856, 300, 23211, 3537, 420, 23211, 1230, 20678, 293, 293, 1879, 322, 30348, 538, 661, 661, 16367, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.15365458154059075, "compression_ratio": 1.5561224489795917, "no_caption_prob": 3.426351031521335e-05}, {"id": 71, "seek": 45400, "start": 467.0, "end": 481.0, "text": " Like, no. Right. So I think it's really nice that in Elm we can leave that arbitrary decision or arbitrary number metric and and focus on splitting by other other metrics.", "tokens": [50364, 814, 436, 528, 641, 7098, 281, 312, 1359, 11, 457, 456, 307, 572, 1338, 11, 572, 572, 20678, 281, 764, 13, 1743, 11, 562, 307, 309, 2489, 420, 437, 307, 264, 5585, 1230, 30, 51014, 51014, 1743, 11, 572, 13, 1779, 13, 407, 286, 519, 309, 311, 534, 1481, 300, 294, 2699, 76, 321, 393, 1856, 300, 23211, 3537, 420, 23211, 1230, 20678, 293, 293, 1879, 322, 30348, 538, 661, 661, 16367, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.15365458154059075, "compression_ratio": 1.5561224489795917, "no_caption_prob": 3.426351031521335e-05}, {"id": 72, "seek": 48100, "start": 481.0, "end": 490.0, "text": " Yeah, right. Yeah, I think that, you know, I often think about we want we want loose coupling and high cohesion.", "tokens": [50364, 865, 11, 558, 13, 865, 11, 286, 519, 300, 11, 291, 458, 11, 286, 2049, 519, 466, 321, 528, 321, 528, 9612, 37447, 293, 1090, 598, 38571, 13, 50814, 50814, 663, 311, 291, 458, 11, 300, 311, 577, 291, 528, 428, 3089, 281, 312, 13, 400, 437, 2314, 2171, 294, 8650, 11, 291, 458, 11, 411, 15778, 293, 19907, 11, 51264, 51264, 2171, 286, 536, 3089, 885, 7472, 294, 257, 636, 689, 309, 311, 767, 5405, 29482, 293, 406, 43025, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07483218697940602, "compression_ratio": 1.6407766990291262, "no_caption_prob": 2.586543996585533e-05}, {"id": 73, "seek": 48100, "start": 490.0, "end": 499.0, "text": " That's you know, that's how you want your code to be. And what happens sometimes in languages, you know, like JavaScript and Ruby,", "tokens": [50364, 865, 11, 558, 13, 865, 11, 286, 519, 300, 11, 291, 458, 11, 286, 2049, 519, 466, 321, 528, 321, 528, 9612, 37447, 293, 1090, 598, 38571, 13, 50814, 50814, 663, 311, 291, 458, 11, 300, 311, 577, 291, 528, 428, 3089, 281, 312, 13, 400, 437, 2314, 2171, 294, 8650, 11, 291, 458, 11, 411, 15778, 293, 19907, 11, 51264, 51264, 2171, 286, 536, 3089, 885, 7472, 294, 257, 636, 689, 309, 311, 767, 5405, 29482, 293, 406, 43025, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07483218697940602, "compression_ratio": 1.6407766990291262, "no_caption_prob": 2.586543996585533e-05}, {"id": 74, "seek": 48100, "start": 499.0, "end": 506.0, "text": " sometimes I see code being split in a way where it's actually highly coupled and not cohesive.", "tokens": [50364, 865, 11, 558, 13, 865, 11, 286, 519, 300, 11, 291, 458, 11, 286, 2049, 519, 466, 321, 528, 321, 528, 9612, 37447, 293, 1090, 598, 38571, 13, 50814, 50814, 663, 311, 291, 458, 11, 300, 311, 577, 291, 528, 428, 3089, 281, 312, 13, 400, 437, 2314, 2171, 294, 8650, 11, 291, 458, 11, 411, 15778, 293, 19907, 11, 51264, 51264, 2171, 286, 536, 3089, 885, 7472, 294, 257, 636, 689, 309, 311, 767, 5405, 29482, 293, 406, 43025, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07483218697940602, "compression_ratio": 1.6407766990291262, "no_caption_prob": 2.586543996585533e-05}, {"id": 75, "seek": 50600, "start": 506.0, "end": 519.0, "text": " So you have like these two different files that depend on each other in these intimate ways where they're like, you know, directly sharing data, touching the same global state or whatever, you know.", "tokens": [50364, 407, 291, 362, 411, 613, 732, 819, 7098, 300, 5672, 322, 1184, 661, 294, 613, 20215, 2098, 689, 436, 434, 411, 11, 291, 458, 11, 3838, 5414, 1412, 11, 11175, 264, 912, 4338, 1785, 420, 2035, 11, 291, 458, 13, 51014, 51014, 407, 300, 1669, 552, 588, 29482, 13, 407, 291, 393, 380, 534, 519, 466, 472, 1553, 1953, 466, 264, 661, 13, 51314, 51314, 583, 550, 436, 434, 294, 4994, 3190, 11, 370, 291, 500, 380, 362, 604, 598, 38571, 13, 400, 300, 311, 300, 311, 264, 6182, 295, 437, 291, 528, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06894310639829052, "compression_ratio": 1.7102040816326531, "no_caption_prob": 0.0002822900714818388}, {"id": 76, "seek": 50600, "start": 519.0, "end": 525.0, "text": " So that makes them very coupled. So you can't really think about one without thinking about the other.", "tokens": [50364, 407, 291, 362, 411, 613, 732, 819, 7098, 300, 5672, 322, 1184, 661, 294, 613, 20215, 2098, 689, 436, 434, 411, 11, 291, 458, 11, 3838, 5414, 1412, 11, 11175, 264, 912, 4338, 1785, 420, 2035, 11, 291, 458, 13, 51014, 51014, 407, 300, 1669, 552, 588, 29482, 13, 407, 291, 393, 380, 534, 519, 466, 472, 1553, 1953, 466, 264, 661, 13, 51314, 51314, 583, 550, 436, 434, 294, 4994, 3190, 11, 370, 291, 500, 380, 362, 604, 598, 38571, 13, 400, 300, 311, 300, 311, 264, 6182, 295, 437, 291, 528, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06894310639829052, "compression_ratio": 1.7102040816326531, "no_caption_prob": 0.0002822900714818388}, {"id": 77, "seek": 50600, "start": 525.0, "end": 531.0, "text": " But then they're in separate places, so you don't have any cohesion. And that's that's the opposite of what you want.", "tokens": [50364, 407, 291, 362, 411, 613, 732, 819, 7098, 300, 5672, 322, 1184, 661, 294, 613, 20215, 2098, 689, 436, 434, 411, 11, 291, 458, 11, 3838, 5414, 1412, 11, 11175, 264, 912, 4338, 1785, 420, 2035, 11, 291, 458, 13, 51014, 51014, 407, 300, 1669, 552, 588, 29482, 13, 407, 291, 393, 380, 534, 519, 466, 472, 1553, 1953, 466, 264, 661, 13, 51314, 51314, 583, 550, 436, 434, 294, 4994, 3190, 11, 370, 291, 500, 380, 362, 604, 598, 38571, 13, 400, 300, 311, 300, 311, 264, 6182, 295, 437, 291, 528, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06894310639829052, "compression_ratio": 1.7102040816326531, "no_caption_prob": 0.0002822900714818388}, {"id": 78, "seek": 53100, "start": 531.0, "end": 546.0, "text": " You want, you know, I often think about it as like localized reasoning. That's like this, you know, sort of headline feature of like pure functional programming, you know, that you can look at one area of code and think about it.", "tokens": [50364, 509, 528, 11, 291, 458, 11, 286, 2049, 519, 466, 309, 382, 411, 44574, 21577, 13, 663, 311, 411, 341, 11, 291, 458, 11, 1333, 295, 28380, 4111, 295, 411, 6075, 11745, 9410, 11, 291, 458, 11, 300, 291, 393, 574, 412, 472, 1859, 295, 3089, 293, 519, 466, 309, 13, 51114, 51114, 400, 586, 2171, 300, 1859, 295, 3089, 1062, 312, 411, 257, 644, 295, 257, 10088, 295, 257, 588, 938, 3991, 293, 291, 393, 1223, 309, 1553, 8407, 1203, 1646, 666, 428, 1378, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05823800298902723, "compression_ratio": 1.7345132743362832, "no_caption_prob": 0.00017948831373360008}, {"id": 79, "seek": 53100, "start": 546.0, "end": 557.0, "text": " And now sometimes that area of code might be like a part of a module of a very long file and you can understand it without pulling everything else into your head.", "tokens": [50364, 509, 528, 11, 291, 458, 11, 286, 2049, 519, 466, 309, 382, 411, 44574, 21577, 13, 663, 311, 411, 341, 11, 291, 458, 11, 1333, 295, 28380, 4111, 295, 411, 6075, 11745, 9410, 11, 291, 458, 11, 300, 291, 393, 574, 412, 472, 1859, 295, 3089, 293, 519, 466, 309, 13, 51114, 51114, 400, 586, 2171, 300, 1859, 295, 3089, 1062, 312, 411, 257, 644, 295, 257, 10088, 295, 257, 588, 938, 3991, 293, 291, 393, 1223, 309, 1553, 8407, 1203, 1646, 666, 428, 1378, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05823800298902723, "compression_ratio": 1.7345132743362832, "no_caption_prob": 0.00017948831373360008}, {"id": 80, "seek": 55700, "start": 557.0, "end": 564.0, "text": " And that's fine. Sometimes you want to use modules to extract things out. And and there are reasons for that, too.", "tokens": [50364, 400, 300, 311, 2489, 13, 4803, 291, 528, 281, 764, 16679, 281, 8947, 721, 484, 13, 400, 293, 456, 366, 4112, 337, 300, 11, 886, 13, 50714, 50714, 407, 370, 472, 295, 264, 721, 286, 519, 466, 337, 411, 257, 10088, 11, 437, 366, 264, 721, 300, 257, 10088, 775, 30, 51114, 51114, 821, 366, 456, 366, 732, 721, 11, 3736, 787, 732, 721, 300, 257, 2445, 775, 17879, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09542744868510478, "compression_ratio": 1.7231638418079096, "no_caption_prob": 8.800837349554058e-06}, {"id": 81, "seek": 55700, "start": 564.0, "end": 572.0, "text": " So so one of the things I think about for like a module, what are the things that a module does?", "tokens": [50364, 400, 300, 311, 2489, 13, 4803, 291, 528, 281, 764, 16679, 281, 8947, 721, 484, 13, 400, 293, 456, 366, 4112, 337, 300, 11, 886, 13, 50714, 50714, 407, 370, 472, 295, 264, 721, 286, 519, 466, 337, 411, 257, 10088, 11, 437, 366, 264, 721, 300, 257, 10088, 775, 30, 51114, 51114, 821, 366, 456, 366, 732, 721, 11, 3736, 787, 732, 721, 300, 257, 2445, 775, 17879, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09542744868510478, "compression_ratio": 1.7231638418079096, "no_caption_prob": 8.800837349554058e-06}, {"id": 82, "seek": 55700, "start": 572.0, "end": 579.0, "text": " There are there are two things, literally only two things that a function does fundamentally.", "tokens": [50364, 400, 300, 311, 2489, 13, 4803, 291, 528, 281, 764, 16679, 281, 8947, 721, 484, 13, 400, 293, 456, 366, 4112, 337, 300, 11, 886, 13, 50714, 50714, 407, 370, 472, 295, 264, 721, 286, 519, 466, 337, 411, 257, 10088, 11, 437, 366, 264, 721, 300, 257, 10088, 775, 30, 51114, 51114, 821, 366, 456, 366, 732, 721, 11, 3736, 787, 732, 721, 300, 257, 2445, 775, 17879, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09542744868510478, "compression_ratio": 1.7231638418079096, "no_caption_prob": 8.800837349554058e-06}, {"id": 83, "seek": 57900, "start": 579.0, "end": 591.0, "text": " Take inputs and give output. The way I frame it, the difference between having all of your code in a single module versus splitting your code into different modules.", "tokens": [50364, 3664, 15743, 293, 976, 5598, 13, 440, 636, 286, 3920, 309, 11, 264, 2649, 1296, 1419, 439, 295, 428, 3089, 294, 257, 2167, 10088, 5717, 30348, 428, 3089, 666, 819, 16679, 13, 50964, 50964, 440, 787, 2649, 307, 472, 11, 291, 434, 40149, 512, 3467, 293, 6828, 420, 1192, 1496, 4190, 666, 257, 4994, 10088, 13, 51464, 51464, 663, 311, 472, 551, 300, 311, 819, 13, 440, 1150, 551, 300, 311, 819, 307, 300, 291, 393, 6479, 512, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10254756794419399, "compression_ratio": 1.7972350230414746, "no_caption_prob": 6.302459223661572e-05}, {"id": 84, "seek": 57900, "start": 591.0, "end": 601.0, "text": " The only difference is one, you're grouping some types and functions or top level values into a separate module.", "tokens": [50364, 3664, 15743, 293, 976, 5598, 13, 440, 636, 286, 3920, 309, 11, 264, 2649, 1296, 1419, 439, 295, 428, 3089, 294, 257, 2167, 10088, 5717, 30348, 428, 3089, 666, 819, 16679, 13, 50964, 50964, 440, 787, 2649, 307, 472, 11, 291, 434, 40149, 512, 3467, 293, 6828, 420, 1192, 1496, 4190, 666, 257, 4994, 10088, 13, 51464, 51464, 663, 311, 472, 551, 300, 311, 819, 13, 440, 1150, 551, 300, 311, 819, 307, 300, 291, 393, 6479, 512, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10254756794419399, "compression_ratio": 1.7972350230414746, "no_caption_prob": 6.302459223661572e-05}, {"id": 85, "seek": 57900, "start": 601.0, "end": 607.0, "text": " That's one thing that's different. The second thing that's different is that you can hide some of those things.", "tokens": [50364, 3664, 15743, 293, 976, 5598, 13, 440, 636, 286, 3920, 309, 11, 264, 2649, 1296, 1419, 439, 295, 428, 3089, 294, 257, 2167, 10088, 5717, 30348, 428, 3089, 666, 819, 16679, 13, 50964, 50964, 440, 787, 2649, 307, 472, 11, 291, 434, 40149, 512, 3467, 293, 6828, 420, 1192, 1496, 4190, 666, 257, 4994, 10088, 13, 51464, 51464, 663, 311, 472, 551, 300, 311, 819, 13, 440, 1150, 551, 300, 311, 819, 307, 300, 291, 393, 6479, 512, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10254756794419399, "compression_ratio": 1.7972350230414746, "no_caption_prob": 6.302459223661572e-05}, {"id": 86, "seek": 60700, "start": 607.0, "end": 614.0, "text": " Those are literally the two only things that an L module does. Now, those two things are very interesting.", "tokens": [50364, 3950, 366, 3736, 264, 732, 787, 721, 300, 364, 441, 10088, 775, 13, 823, 11, 729, 732, 721, 366, 588, 1880, 13, 50714, 50714, 440, 4475, 644, 307, 2745, 4420, 13, 440, 10596, 551, 307, 257, 1216, 22822, 570, 538, 10596, 1629, 3755, 11, 51114, 51114, 291, 434, 1075, 281, 362, 2154, 1124, 300, 661, 16679, 393, 380, 5672, 322, 293, 500, 380, 458, 466, 420, 1127, 466, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05962192848937152, "compression_ratio": 1.5637254901960784, "no_caption_prob": 1.7231312085641548e-05}, {"id": 87, "seek": 60700, "start": 614.0, "end": 622.0, "text": " The organization part is obviously useful. The hiding thing is a game changer because by hiding certain pieces,", "tokens": [50364, 3950, 366, 3736, 264, 732, 787, 721, 300, 364, 441, 10088, 775, 13, 823, 11, 729, 732, 721, 366, 588, 1880, 13, 50714, 50714, 440, 4475, 644, 307, 2745, 4420, 13, 440, 10596, 551, 307, 257, 1216, 22822, 570, 538, 10596, 1629, 3755, 11, 51114, 51114, 291, 434, 1075, 281, 362, 2154, 1124, 300, 661, 16679, 393, 380, 5672, 322, 293, 500, 380, 458, 466, 420, 1127, 466, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05962192848937152, "compression_ratio": 1.5637254901960784, "no_caption_prob": 1.7231312085641548e-05}, {"id": 88, "seek": 60700, "start": 622.0, "end": 631.0, "text": " you're able to have internals that other modules can't depend on and don't know about or care about.", "tokens": [50364, 3950, 366, 3736, 264, 732, 787, 721, 300, 364, 441, 10088, 775, 13, 823, 11, 729, 732, 721, 366, 588, 1880, 13, 50714, 50714, 440, 4475, 644, 307, 2745, 4420, 13, 440, 10596, 551, 307, 257, 1216, 22822, 570, 538, 10596, 1629, 3755, 11, 51114, 51114, 291, 434, 1075, 281, 362, 2154, 1124, 300, 661, 16679, 393, 380, 5672, 322, 293, 500, 380, 458, 466, 420, 1127, 466, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05962192848937152, "compression_ratio": 1.5637254901960784, "no_caption_prob": 1.7231312085641548e-05}, {"id": 89, "seek": 63100, "start": 631.0, "end": 637.0, "text": " Yeah. And you you avoid coupling between your data structures and your implementations.", "tokens": [50364, 865, 13, 400, 291, 291, 5042, 37447, 1296, 428, 1412, 9227, 293, 428, 4445, 763, 13, 50664, 50664, 7587, 13, 509, 2644, 5366, 7697, 2962, 538, 4473, 729, 2154, 1124, 570, 264, 2380, 1002, 1177, 380, 1127, 420, 458, 13, 51114, 51114, 400, 291, 393, 291, 393, 519, 466, 309, 294, 257, 544, 1090, 1496, 636, 13, 51314, 51314, 407, 286, 519, 300, 445, 3701, 729, 4965, 12939, 295, 257, 10088, 366, 4961, 337, 5276, 562, 307, 309, 565, 281, 1821, 484, 257, 10088, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07053520438376437, "compression_ratio": 1.6341463414634145, "no_caption_prob": 7.141609239624813e-05}, {"id": 90, "seek": 63100, "start": 637.0, "end": 646.0, "text": " Exactly. You cannot introduce breaking changes by changing those internals because the outside world doesn't care or know.", "tokens": [50364, 865, 13, 400, 291, 291, 5042, 37447, 1296, 428, 1412, 9227, 293, 428, 4445, 763, 13, 50664, 50664, 7587, 13, 509, 2644, 5366, 7697, 2962, 538, 4473, 729, 2154, 1124, 570, 264, 2380, 1002, 1177, 380, 1127, 420, 458, 13, 51114, 51114, 400, 291, 393, 291, 393, 519, 466, 309, 294, 257, 544, 1090, 1496, 636, 13, 51314, 51314, 407, 286, 519, 300, 445, 3701, 729, 4965, 12939, 295, 257, 10088, 366, 4961, 337, 5276, 562, 307, 309, 565, 281, 1821, 484, 257, 10088, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07053520438376437, "compression_ratio": 1.6341463414634145, "no_caption_prob": 7.141609239624813e-05}, {"id": 91, "seek": 63100, "start": 646.0, "end": 650.0, "text": " And you can you can think about it in a more high level way.", "tokens": [50364, 865, 13, 400, 291, 291, 5042, 37447, 1296, 428, 1412, 9227, 293, 428, 4445, 763, 13, 50664, 50664, 7587, 13, 509, 2644, 5366, 7697, 2962, 538, 4473, 729, 2154, 1124, 570, 264, 2380, 1002, 1177, 380, 1127, 420, 458, 13, 51114, 51114, 400, 291, 393, 291, 393, 519, 466, 309, 294, 257, 544, 1090, 1496, 636, 13, 51314, 51314, 407, 286, 519, 300, 445, 3701, 729, 4965, 12939, 295, 257, 10088, 366, 4961, 337, 5276, 562, 307, 309, 565, 281, 1821, 484, 257, 10088, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07053520438376437, "compression_ratio": 1.6341463414634145, "no_caption_prob": 7.141609239624813e-05}, {"id": 92, "seek": 63100, "start": 650.0, "end": 660.0, "text": " So I think that just understanding those core mechanics of a module are helpful for knowing when is it time to break out a module?", "tokens": [50364, 865, 13, 400, 291, 291, 5042, 37447, 1296, 428, 1412, 9227, 293, 428, 4445, 763, 13, 50664, 50664, 7587, 13, 509, 2644, 5366, 7697, 2962, 538, 4473, 729, 2154, 1124, 570, 264, 2380, 1002, 1177, 380, 1127, 420, 458, 13, 51114, 51114, 400, 291, 393, 291, 393, 519, 466, 309, 294, 257, 544, 1090, 1496, 636, 13, 51314, 51314, 407, 286, 519, 300, 445, 3701, 729, 4965, 12939, 295, 257, 10088, 366, 4961, 337, 5276, 562, 307, 309, 565, 281, 1821, 484, 257, 10088, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07053520438376437, "compression_ratio": 1.6341463414634145, "no_caption_prob": 7.141609239624813e-05}, {"id": 93, "seek": 66000, "start": 660.0, "end": 666.0, "text": " Because, well, do I want to group some things together and do I want to hide some of those things?", "tokens": [50364, 1436, 11, 731, 11, 360, 286, 528, 281, 1594, 512, 721, 1214, 293, 360, 286, 528, 281, 6479, 512, 295, 729, 721, 30, 50664, 50664, 400, 11, 291, 458, 11, 22613, 733, 295, 6686, 466, 294, 341, 751, 577, 456, 311, 456, 311, 746, 466, 11, 291, 458, 11, 51014, 51014, 264, 636, 300, 291, 1884, 257, 10088, 293, 2826, 437, 281, 1884, 257, 10088, 926, 300, 309, 311, 2361, 322, 257, 2010, 13, 51314, 51314, 821, 311, 746, 281, 300, 13, 823, 11, 300, 311, 406, 1009, 264, 1389, 13, 509, 727, 362, 411, 257, 11, 291, 458, 11, 1329, 854, 433, 10088, 11, 597, 307, 411, 11, 1338, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07558713166610054, "compression_ratio": 1.8049792531120332, "no_caption_prob": 0.00011234342673560604}, {"id": 94, "seek": 66000, "start": 666.0, "end": 673.0, "text": " And, you know, Evan kind of talks about in this talk how there's there's something about, you know,", "tokens": [50364, 1436, 11, 731, 11, 360, 286, 528, 281, 1594, 512, 721, 1214, 293, 360, 286, 528, 281, 6479, 512, 295, 729, 721, 30, 50664, 50664, 400, 11, 291, 458, 11, 22613, 733, 295, 6686, 466, 294, 341, 751, 577, 456, 311, 456, 311, 746, 466, 11, 291, 458, 11, 51014, 51014, 264, 636, 300, 291, 1884, 257, 10088, 293, 2826, 437, 281, 1884, 257, 10088, 926, 300, 309, 311, 2361, 322, 257, 2010, 13, 51314, 51314, 821, 311, 746, 281, 300, 13, 823, 11, 300, 311, 406, 1009, 264, 1389, 13, 509, 727, 362, 411, 257, 11, 291, 458, 11, 1329, 854, 433, 10088, 11, 597, 307, 411, 11, 1338, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07558713166610054, "compression_ratio": 1.8049792531120332, "no_caption_prob": 0.00011234342673560604}, {"id": 95, "seek": 66000, "start": 673.0, "end": 679.0, "text": " the way that you create a module and choose what to create a module around that it's based on a type.", "tokens": [50364, 1436, 11, 731, 11, 360, 286, 528, 281, 1594, 512, 721, 1214, 293, 360, 286, 528, 281, 6479, 512, 295, 729, 721, 30, 50664, 50664, 400, 11, 291, 458, 11, 22613, 733, 295, 6686, 466, 294, 341, 751, 577, 456, 311, 456, 311, 746, 466, 11, 291, 458, 11, 51014, 51014, 264, 636, 300, 291, 1884, 257, 10088, 293, 2826, 437, 281, 1884, 257, 10088, 926, 300, 309, 311, 2361, 322, 257, 2010, 13, 51314, 51314, 821, 311, 746, 281, 300, 13, 823, 11, 300, 311, 406, 1009, 264, 1389, 13, 509, 727, 362, 411, 257, 11, 291, 458, 11, 1329, 854, 433, 10088, 11, 597, 307, 411, 11, 1338, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07558713166610054, "compression_ratio": 1.8049792531120332, "no_caption_prob": 0.00011234342673560604}, {"id": 96, "seek": 66000, "start": 679.0, "end": 688.0, "text": " There's something to that. Now, that's not always the case. You could have like a, you know, list helpers module, which is like, yeah,", "tokens": [50364, 1436, 11, 731, 11, 360, 286, 528, 281, 1594, 512, 721, 1214, 293, 360, 286, 528, 281, 6479, 512, 295, 729, 721, 30, 50664, 50664, 400, 11, 291, 458, 11, 22613, 733, 295, 6686, 466, 294, 341, 751, 577, 456, 311, 456, 311, 746, 466, 11, 291, 458, 11, 51014, 51014, 264, 636, 300, 291, 1884, 257, 10088, 293, 2826, 437, 281, 1884, 257, 10088, 926, 300, 309, 311, 2361, 322, 257, 2010, 13, 51314, 51314, 821, 311, 746, 281, 300, 13, 823, 11, 300, 311, 406, 1009, 264, 1389, 13, 509, 727, 362, 411, 257, 11, 291, 458, 11, 1329, 854, 433, 10088, 11, 597, 307, 411, 11, 1338, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07558713166610054, "compression_ratio": 1.8049792531120332, "no_caption_prob": 0.00011234342673560604}, {"id": 97, "seek": 68800, "start": 688.0, "end": 700.0, "text": " you can have certain utilities that help with strings. And now that might be a special case because you're sort of extending what you can do with a particular type in a way that you don't have access to the internals.", "tokens": [50364, 291, 393, 362, 1629, 30482, 300, 854, 365, 13985, 13, 400, 586, 300, 1062, 312, 257, 2121, 1389, 570, 291, 434, 1333, 295, 24360, 437, 291, 393, 360, 365, 257, 1729, 2010, 294, 257, 636, 300, 291, 500, 380, 362, 2105, 281, 264, 2154, 1124, 13, 50964, 50964, 583, 309, 311, 411, 257, 3094, 294, 2010, 420, 257, 2010, 300, 307, 11684, 538, 1071, 1859, 295, 3089, 13, 51314, 51314, 407, 291, 393, 380, 11, 291, 458, 11, 1333, 295, 38745, 5256, 729, 2154, 1124, 293, 550, 362, 2105, 281, 552, 294, 428, 854, 433, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03598400115966797, "compression_ratio": 1.7179487179487178, "no_caption_prob": 5.7385645050089806e-05}, {"id": 98, "seek": 68800, "start": 700.0, "end": 707.0, "text": " But it's like a built in type or a type that is owned by another area of code.", "tokens": [50364, 291, 393, 362, 1629, 30482, 300, 854, 365, 13985, 13, 400, 586, 300, 1062, 312, 257, 2121, 1389, 570, 291, 434, 1333, 295, 24360, 437, 291, 393, 360, 365, 257, 1729, 2010, 294, 257, 636, 300, 291, 500, 380, 362, 2105, 281, 264, 2154, 1124, 13, 50964, 50964, 583, 309, 311, 411, 257, 3094, 294, 2010, 420, 257, 2010, 300, 307, 11684, 538, 1071, 1859, 295, 3089, 13, 51314, 51314, 407, 291, 393, 380, 11, 291, 458, 11, 1333, 295, 38745, 5256, 729, 2154, 1124, 293, 550, 362, 2105, 281, 552, 294, 428, 854, 433, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03598400115966797, "compression_ratio": 1.7179487179487178, "no_caption_prob": 5.7385645050089806e-05}, {"id": 99, "seek": 68800, "start": 707.0, "end": 714.0, "text": " So you can't, you know, sort of encapsulate those internals and then have access to them in your helpers.", "tokens": [50364, 291, 393, 362, 1629, 30482, 300, 854, 365, 13985, 13, 400, 586, 300, 1062, 312, 257, 2121, 1389, 570, 291, 434, 1333, 295, 24360, 437, 291, 393, 360, 365, 257, 1729, 2010, 294, 257, 636, 300, 291, 500, 380, 362, 2105, 281, 264, 2154, 1124, 13, 50964, 50964, 583, 309, 311, 411, 257, 3094, 294, 2010, 420, 257, 2010, 300, 307, 11684, 538, 1071, 1859, 295, 3089, 13, 51314, 51314, 407, 291, 393, 380, 11, 291, 458, 11, 1333, 295, 38745, 5256, 729, 2154, 1124, 293, 550, 362, 2105, 281, 552, 294, 428, 854, 433, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03598400115966797, "compression_ratio": 1.7179487179487178, "no_caption_prob": 5.7385645050089806e-05}, {"id": 100, "seek": 71400, "start": 714.0, "end": 724.0, "text": " If you could, then you might. But there's something to like, I mean, ultimately, you want to create these abstractions around domain concepts.", "tokens": [50364, 759, 291, 727, 11, 550, 291, 1062, 13, 583, 456, 311, 746, 281, 411, 11, 286, 914, 11, 6284, 11, 291, 528, 281, 1884, 613, 12649, 626, 926, 9274, 10392, 13, 50864, 50864, 400, 286, 519, 300, 300, 311, 264, 4965, 13, 400, 291, 528, 281, 1884, 3467, 926, 9274, 10392, 11, 886, 13, 51164, 51164, 1133, 291, 584, 9274, 3410, 11, 360, 291, 914, 1412, 9227, 30, 51314, 51314, 286, 914, 1412, 9227, 293, 411, 257, 3410, 300, 411, 291, 576, 751, 466, 281, 257, 4195, 11, 337, 1365, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09034696880139803, "compression_ratio": 1.8436018957345972, "no_caption_prob": 3.3213415008503944e-05}, {"id": 101, "seek": 71400, "start": 724.0, "end": 730.0, "text": " And I think that that's the core. And you want to create types around domain concepts, too.", "tokens": [50364, 759, 291, 727, 11, 550, 291, 1062, 13, 583, 456, 311, 746, 281, 411, 11, 286, 914, 11, 6284, 11, 291, 528, 281, 1884, 613, 12649, 626, 926, 9274, 10392, 13, 50864, 50864, 400, 286, 519, 300, 300, 311, 264, 4965, 13, 400, 291, 528, 281, 1884, 3467, 926, 9274, 10392, 11, 886, 13, 51164, 51164, 1133, 291, 584, 9274, 3410, 11, 360, 291, 914, 1412, 9227, 30, 51314, 51314, 286, 914, 1412, 9227, 293, 411, 257, 3410, 300, 411, 291, 576, 751, 466, 281, 257, 4195, 11, 337, 1365, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09034696880139803, "compression_ratio": 1.8436018957345972, "no_caption_prob": 3.3213415008503944e-05}, {"id": 102, "seek": 71400, "start": 730.0, "end": 733.0, "text": " When you say domain concept, do you mean data structures?", "tokens": [50364, 759, 291, 727, 11, 550, 291, 1062, 13, 583, 456, 311, 746, 281, 411, 11, 286, 914, 11, 6284, 11, 291, 528, 281, 1884, 613, 12649, 626, 926, 9274, 10392, 13, 50864, 50864, 400, 286, 519, 300, 300, 311, 264, 4965, 13, 400, 291, 528, 281, 1884, 3467, 926, 9274, 10392, 11, 886, 13, 51164, 51164, 1133, 291, 584, 9274, 3410, 11, 360, 291, 914, 1412, 9227, 30, 51314, 51314, 286, 914, 1412, 9227, 293, 411, 257, 3410, 300, 411, 291, 576, 751, 466, 281, 257, 4195, 11, 337, 1365, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09034696880139803, "compression_ratio": 1.8436018957345972, "no_caption_prob": 3.3213415008503944e-05}, {"id": 103, "seek": 71400, "start": 733.0, "end": 740.0, "text": " I mean data structures and like a concept that like you would talk about to a user, for example.", "tokens": [50364, 759, 291, 727, 11, 550, 291, 1062, 13, 583, 456, 311, 746, 281, 411, 11, 286, 914, 11, 6284, 11, 291, 528, 281, 1884, 613, 12649, 626, 926, 9274, 10392, 13, 50864, 50864, 400, 286, 519, 300, 300, 311, 264, 4965, 13, 400, 291, 528, 281, 1884, 3467, 926, 9274, 10392, 11, 886, 13, 51164, 51164, 1133, 291, 584, 9274, 3410, 11, 360, 291, 914, 1412, 9227, 30, 51314, 51314, 286, 914, 1412, 9227, 293, 411, 257, 3410, 300, 411, 291, 576, 751, 466, 281, 257, 4195, 11, 337, 1365, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09034696880139803, "compression_ratio": 1.8436018957345972, "no_caption_prob": 3.3213415008503944e-05}, {"id": 104, "seek": 74000, "start": 740.0, "end": 749.0, "text": " You know, oftentimes you want to be able to use language that, you know, you would describe some, you know.", "tokens": [50364, 509, 458, 11, 18349, 291, 528, 281, 312, 1075, 281, 764, 2856, 300, 11, 291, 458, 11, 291, 576, 6786, 512, 11, 291, 458, 13, 50814, 50814, 1743, 341, 307, 406, 257, 6798, 13, 639, 307, 257, 30351, 13, 865, 13, 639, 307, 406, 257, 6798, 13, 639, 307, 257, 4195, 7348, 13, 51164, 51164, 7587, 13, 7587, 13, 467, 311, 257, 4195, 7348, 13, 467, 311, 257, 11, 291, 458, 11, 2035, 428, 6773, 8390, 300, 291, 393, 829, 6773, 666, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.11239082511814161, "compression_ratio": 1.7758620689655173, "no_caption_prob": 1.6701213098713197e-05}, {"id": 105, "seek": 74000, "start": 749.0, "end": 756.0, "text": " Like this is not a string. This is a username. Yeah. This is not a string. This is a user ID.", "tokens": [50364, 509, 458, 11, 18349, 291, 528, 281, 312, 1075, 281, 764, 2856, 300, 11, 291, 458, 11, 291, 576, 6786, 512, 11, 291, 458, 13, 50814, 50814, 1743, 341, 307, 406, 257, 6798, 13, 639, 307, 257, 30351, 13, 865, 13, 639, 307, 406, 257, 6798, 13, 639, 307, 257, 4195, 7348, 13, 51164, 51164, 7587, 13, 7587, 13, 467, 311, 257, 4195, 7348, 13, 467, 311, 257, 11, 291, 458, 11, 2035, 428, 6773, 8390, 300, 291, 393, 829, 6773, 666, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.11239082511814161, "compression_ratio": 1.7758620689655173, "no_caption_prob": 1.6701213098713197e-05}, {"id": 106, "seek": 74000, "start": 756.0, "end": 763.0, "text": " Exactly. Exactly. It's a user ID. It's a, you know, whatever your fruit basket that you can put fruit into.", "tokens": [50364, 509, 458, 11, 18349, 291, 528, 281, 312, 1075, 281, 764, 2856, 300, 11, 291, 458, 11, 291, 576, 6786, 512, 11, 291, 458, 13, 50814, 50814, 1743, 341, 307, 406, 257, 6798, 13, 639, 307, 257, 30351, 13, 865, 13, 639, 307, 406, 257, 6798, 13, 639, 307, 257, 4195, 7348, 13, 51164, 51164, 7587, 13, 7587, 13, 467, 311, 257, 4195, 7348, 13, 467, 311, 257, 11, 291, 458, 11, 2035, 428, 6773, 8390, 300, 291, 393, 829, 6773, 666, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.11239082511814161, "compression_ratio": 1.7758620689655173, "no_caption_prob": 1.6701213098713197e-05}, {"id": 107, "seek": 76300, "start": 763.0, "end": 772.0, "text": " And like how does a fruit basket work? You can only have two fruits at most at a time, you know, which is the example from Life of a File.", "tokens": [50364, 400, 411, 577, 775, 257, 6773, 8390, 589, 30, 509, 393, 787, 362, 732, 12148, 412, 881, 412, 257, 565, 11, 291, 458, 11, 597, 307, 264, 1365, 490, 7720, 295, 257, 26196, 13, 50814, 50814, 759, 291, 2378, 380, 6337, 264, 751, 293, 291, 434, 6359, 983, 286, 478, 1417, 466, 6773, 42853, 13, 51014, 51014, 286, 820, 2256, 4127, 337, 12148, 13, 1112, 13, 286, 2198, 436, 600, 668, 1364, 731, 613, 1036, 1326, 1708, 13, 51364, 51364, 1779, 13, 865, 13, 407, 411, 300, 311, 746, 300, 291, 727, 751, 281, 257, 5474, 466, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291375347212249, "compression_ratio": 1.5753968253968254, "no_caption_prob": 3.3212876587640494e-05}, {"id": 108, "seek": 76300, "start": 772.0, "end": 776.0, "text": " If you haven't watched the talk and you're wondering why I'm talking about fruit baskets.", "tokens": [50364, 400, 411, 577, 775, 257, 6773, 8390, 589, 30, 509, 393, 787, 362, 732, 12148, 412, 881, 412, 257, 565, 11, 291, 458, 11, 597, 307, 264, 1365, 490, 7720, 295, 257, 26196, 13, 50814, 50814, 759, 291, 2378, 380, 6337, 264, 751, 293, 291, 434, 6359, 983, 286, 478, 1417, 466, 6773, 42853, 13, 51014, 51014, 286, 820, 2256, 4127, 337, 12148, 13, 1112, 13, 286, 2198, 436, 600, 668, 1364, 731, 613, 1036, 1326, 1708, 13, 51364, 51364, 1779, 13, 865, 13, 407, 411, 300, 311, 746, 300, 291, 727, 751, 281, 257, 5474, 466, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291375347212249, "compression_ratio": 1.5753968253968254, "no_caption_prob": 3.3212876587640494e-05}, {"id": 109, "seek": 76300, "start": 776.0, "end": 783.0, "text": " I should buy stock for fruits.com. I heard they've been working well these last few days.", "tokens": [50364, 400, 411, 577, 775, 257, 6773, 8390, 589, 30, 509, 393, 787, 362, 732, 12148, 412, 881, 412, 257, 565, 11, 291, 458, 11, 597, 307, 264, 1365, 490, 7720, 295, 257, 26196, 13, 50814, 50814, 759, 291, 2378, 380, 6337, 264, 751, 293, 291, 434, 6359, 983, 286, 478, 1417, 466, 6773, 42853, 13, 51014, 51014, 286, 820, 2256, 4127, 337, 12148, 13, 1112, 13, 286, 2198, 436, 600, 668, 1364, 731, 613, 1036, 1326, 1708, 13, 51364, 51364, 1779, 13, 865, 13, 407, 411, 300, 311, 746, 300, 291, 727, 751, 281, 257, 5474, 466, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291375347212249, "compression_ratio": 1.5753968253968254, "no_caption_prob": 3.3212876587640494e-05}, {"id": 110, "seek": 76300, "start": 783.0, "end": 787.0, "text": " Right. Yeah. So like that's something that you could talk to a customer about.", "tokens": [50364, 400, 411, 577, 775, 257, 6773, 8390, 589, 30, 509, 393, 787, 362, 732, 12148, 412, 881, 412, 257, 565, 11, 291, 458, 11, 597, 307, 264, 1365, 490, 7720, 295, 257, 26196, 13, 50814, 50814, 759, 291, 2378, 380, 6337, 264, 751, 293, 291, 434, 6359, 983, 286, 478, 1417, 466, 6773, 42853, 13, 51014, 51014, 286, 820, 2256, 4127, 337, 12148, 13, 1112, 13, 286, 2198, 436, 600, 668, 1364, 731, 613, 1036, 1326, 1708, 13, 51364, 51364, 1779, 13, 865, 13, 407, 411, 300, 311, 746, 300, 291, 727, 751, 281, 257, 5474, 466, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291375347212249, "compression_ratio": 1.5753968253968254, "no_caption_prob": 3.3212876587640494e-05}, {"id": 111, "seek": 78700, "start": 787.0, "end": 796.0, "text": " Right. And so how do you understand like what are the rules for your fruit basket or, you know, Evan doesn't call it a fruit basket, but you know what I'm talking about.", "tokens": [50364, 1779, 13, 400, 370, 577, 360, 291, 1223, 411, 437, 366, 264, 4474, 337, 428, 6773, 8390, 420, 11, 291, 458, 11, 22613, 1177, 380, 818, 309, 257, 6773, 8390, 11, 457, 291, 458, 437, 286, 478, 1417, 466, 13, 50814, 50814, 1012, 291, 727, 751, 281, 257, 4195, 466, 300, 13, 509, 727, 2903, 729, 4474, 281, 264, 4195, 300, 11, 1954, 11, 291, 393, 787, 362, 732, 721, 412, 1564, 294, 428, 6773, 8390, 13, 51264, 51264, 400, 370, 291, 393, 586, 362, 257, 10088, 300, 311, 6250, 337, 300, 1558, 293, 38745, 26192, 300, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06039985020955404, "compression_ratio": 1.729957805907173, "no_caption_prob": 0.0001488299312768504}, {"id": 112, "seek": 78700, "start": 796.0, "end": 805.0, "text": " How you could talk to a user about that. You could explain those rules to the user that, oh, you can only have two things at once in your fruit basket.", "tokens": [50364, 1779, 13, 400, 370, 577, 360, 291, 1223, 411, 437, 366, 264, 4474, 337, 428, 6773, 8390, 420, 11, 291, 458, 11, 22613, 1177, 380, 818, 309, 257, 6773, 8390, 11, 457, 291, 458, 437, 286, 478, 1417, 466, 13, 50814, 50814, 1012, 291, 727, 751, 281, 257, 4195, 466, 300, 13, 509, 727, 2903, 729, 4474, 281, 264, 4195, 300, 11, 1954, 11, 291, 393, 787, 362, 732, 721, 412, 1564, 294, 428, 6773, 8390, 13, 51264, 51264, 400, 370, 291, 393, 586, 362, 257, 10088, 300, 311, 6250, 337, 300, 1558, 293, 38745, 26192, 300, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06039985020955404, "compression_ratio": 1.729957805907173, "no_caption_prob": 0.0001488299312768504}, {"id": 113, "seek": 78700, "start": 805.0, "end": 811.0, "text": " And so you can now have a module that's responsible for that idea and encapsulates that.", "tokens": [50364, 1779, 13, 400, 370, 577, 360, 291, 1223, 411, 437, 366, 264, 4474, 337, 428, 6773, 8390, 420, 11, 291, 458, 11, 22613, 1177, 380, 818, 309, 257, 6773, 8390, 11, 457, 291, 458, 437, 286, 478, 1417, 466, 13, 50814, 50814, 1012, 291, 727, 751, 281, 257, 4195, 466, 300, 13, 509, 727, 2903, 729, 4474, 281, 264, 4195, 300, 11, 1954, 11, 291, 393, 787, 362, 732, 721, 412, 1564, 294, 428, 6773, 8390, 13, 51264, 51264, 400, 370, 291, 393, 586, 362, 257, 10088, 300, 311, 6250, 337, 300, 1558, 293, 38745, 26192, 300, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06039985020955404, "compression_ratio": 1.729957805907173, "no_caption_prob": 0.0001488299312768504}, {"id": 114, "seek": 81100, "start": 811.0, "end": 826.0, "text": " And I think that that's an essential part of how you design modules. So like something that comes up often when people are getting into Elm or when they're really like growing past a certain point in their Elm code bases.", "tokens": [50364, 400, 286, 519, 300, 300, 311, 364, 7115, 644, 295, 577, 291, 1715, 16679, 13, 407, 411, 746, 300, 1487, 493, 2049, 562, 561, 366, 1242, 666, 2699, 76, 420, 562, 436, 434, 534, 411, 4194, 1791, 257, 1629, 935, 294, 641, 2699, 76, 3089, 17949, 13, 51114, 51114, 814, 751, 466, 1419, 7410, 5623, 6828, 13, 708, 366, 428, 4598, 322, 300, 11, 508, 2032, 268, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.06853416893217298, "compression_ratio": 1.4951456310679612, "no_caption_prob": 1.1842913409054745e-05}, {"id": 115, "seek": 81100, "start": 826.0, "end": 832.0, "text": " They talk about having giant update functions. What are your thoughts on that, Jeroen?", "tokens": [50364, 400, 286, 519, 300, 300, 311, 364, 7115, 644, 295, 577, 291, 1715, 16679, 13, 407, 411, 746, 300, 1487, 493, 2049, 562, 561, 366, 1242, 666, 2699, 76, 420, 562, 436, 434, 534, 411, 4194, 1791, 257, 1629, 935, 294, 641, 2699, 76, 3089, 17949, 13, 51114, 51114, 814, 751, 466, 1419, 7410, 5623, 6828, 13, 708, 366, 428, 4598, 322, 300, 11, 508, 2032, 268, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.06853416893217298, "compression_ratio": 1.4951456310679612, "no_caption_prob": 1.1842913409054745e-05}, {"id": 116, "seek": 83200, "start": 832.0, "end": 841.0, "text": " I would really have to look at the update function to know whether it's something that is OK or whether it's not OK.", "tokens": [50364, 286, 576, 534, 362, 281, 574, 412, 264, 5623, 2445, 281, 458, 1968, 309, 311, 746, 300, 307, 2264, 420, 1968, 309, 311, 406, 2264, 13, 50814, 50814, 286, 2041, 309, 311, 544, 466, 577, 867, 819, 10392, 11, 577, 867, 819, 721, 775, 264, 5623, 4813, 30, 51264, 51264, 400, 393, 291, 40999, 729, 9608, 11, 729, 10392, 281, 661, 6828, 420, 281, 661, 16679, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.060998184580198477, "compression_ratio": 1.6830601092896176, "no_caption_prob": 7.253768853843212e-05}, {"id": 117, "seek": 83200, "start": 841.0, "end": 850.0, "text": " I guess it's more about how many different concepts, how many different things does the update handle?", "tokens": [50364, 286, 576, 534, 362, 281, 574, 412, 264, 5623, 2445, 281, 458, 1968, 309, 311, 746, 300, 307, 2264, 420, 1968, 309, 311, 406, 2264, 13, 50814, 50814, 286, 2041, 309, 311, 544, 466, 577, 867, 819, 10392, 11, 577, 867, 819, 721, 775, 264, 5623, 4813, 30, 51264, 51264, 400, 393, 291, 40999, 729, 9608, 11, 729, 10392, 281, 661, 6828, 420, 281, 661, 16679, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.060998184580198477, "compression_ratio": 1.6830601092896176, "no_caption_prob": 7.253768853843212e-05}, {"id": 118, "seek": 83200, "start": 850.0, "end": 859.0, "text": " And can you delegate those tasks, those concepts to other functions or to other modules?", "tokens": [50364, 286, 576, 534, 362, 281, 574, 412, 264, 5623, 2445, 281, 458, 1968, 309, 311, 746, 300, 307, 2264, 420, 1968, 309, 311, 406, 2264, 13, 50814, 50814, 286, 2041, 309, 311, 544, 466, 577, 867, 819, 10392, 11, 577, 867, 819, 721, 775, 264, 5623, 4813, 30, 51264, 51264, 400, 393, 291, 40999, 729, 9608, 11, 729, 10392, 281, 661, 6828, 420, 281, 661, 16679, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.060998184580198477, "compression_ratio": 1.6830601092896176, "no_caption_prob": 7.253768853843212e-05}, {"id": 119, "seek": 85900, "start": 859.0, "end": 869.0, "text": " Right, right. Yes, I really like the word delegate there. I think I like to think of the update function as a delegator.", "tokens": [50364, 1779, 11, 558, 13, 1079, 11, 286, 534, 411, 264, 1349, 40999, 456, 13, 286, 519, 286, 411, 281, 519, 295, 264, 5623, 2445, 382, 257, 15824, 1639, 13, 50864, 50864, 663, 311, 300, 311, 1080, 1691, 13, 509, 458, 11, 309, 311, 411, 309, 311, 411, 257, 19800, 12973, 300, 311, 411, 2684, 264, 15537, 1296, 11015, 5498, 13, 51264, 51264, 583, 309, 311, 406, 644, 295, 729, 7315, 13, 467, 311, 445, 32722, 729, 5498, 281, 264, 558, 1081, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06718359991561534, "compression_ratio": 1.6715686274509804, "no_caption_prob": 7.141262176446617e-05}, {"id": 120, "seek": 85900, "start": 869.0, "end": 877.0, "text": " That's that's its job. You know, it's like it's like a telephone operator that's like moving the wires between connecting calls.", "tokens": [50364, 1779, 11, 558, 13, 1079, 11, 286, 534, 411, 264, 1349, 40999, 456, 13, 286, 519, 286, 411, 281, 519, 295, 264, 5623, 2445, 382, 257, 15824, 1639, 13, 50864, 50864, 663, 311, 300, 311, 1080, 1691, 13, 509, 458, 11, 309, 311, 411, 309, 311, 411, 257, 19800, 12973, 300, 311, 411, 2684, 264, 15537, 1296, 11015, 5498, 13, 51264, 51264, 583, 309, 311, 406, 644, 295, 729, 7315, 13, 467, 311, 445, 32722, 729, 5498, 281, 264, 558, 1081, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06718359991561534, "compression_ratio": 1.6715686274509804, "no_caption_prob": 7.141262176446617e-05}, {"id": 121, "seek": 85900, "start": 877.0, "end": 883.0, "text": " But it's not part of those conversations. It's just routing those calls to the right place.", "tokens": [50364, 1779, 11, 558, 13, 1079, 11, 286, 534, 411, 264, 1349, 40999, 456, 13, 286, 519, 286, 411, 281, 519, 295, 264, 5623, 2445, 382, 257, 15824, 1639, 13, 50864, 50864, 663, 311, 300, 311, 1080, 1691, 13, 509, 458, 11, 309, 311, 411, 309, 311, 411, 257, 19800, 12973, 300, 311, 411, 2684, 264, 15537, 1296, 11015, 5498, 13, 51264, 51264, 583, 309, 311, 406, 644, 295, 729, 7315, 13, 467, 311, 445, 32722, 729, 5498, 281, 264, 558, 1081, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06718359991561534, "compression_ratio": 1.6715686274509804, "no_caption_prob": 7.141262176446617e-05}, {"id": 122, "seek": 88300, "start": 883.0, "end": 893.0, "text": " Yeah, it could handle those calls inside the inside each pattern, or it could just call another function to do the job for him.", "tokens": [50364, 865, 11, 309, 727, 4813, 729, 5498, 1854, 264, 1854, 1184, 5102, 11, 420, 309, 727, 445, 818, 1071, 2445, 281, 360, 264, 1691, 337, 796, 13, 50864, 50864, 1779, 11, 558, 13, 40817, 11, 498, 428, 2445, 307, 534, 955, 11, 291, 1391, 528, 281, 818, 4994, 721, 666, 819, 6828, 11, 597, 291, 1062, 829, 666, 257, 819, 16679, 420, 406, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.15584147677702062, "compression_ratio": 1.6378378378378378, "no_caption_prob": 5.224890264798887e-05}, {"id": 123, "seek": 88300, "start": 893.0, "end": 907.0, "text": " Right, right. Ideally, if your function is really big, you probably want to call separate things into different functions, which you might put into a different modules or not.", "tokens": [50364, 865, 11, 309, 727, 4813, 729, 5498, 1854, 264, 1854, 1184, 5102, 11, 420, 309, 727, 445, 818, 1071, 2445, 281, 360, 264, 1691, 337, 796, 13, 50864, 50864, 1779, 11, 558, 13, 40817, 11, 498, 428, 2445, 307, 534, 955, 11, 291, 1391, 528, 281, 818, 4994, 721, 666, 819, 6828, 11, 597, 291, 1062, 829, 666, 257, 819, 16679, 420, 406, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.15584147677702062, "compression_ratio": 1.6378378378378378, "no_caption_prob": 5.224890264798887e-05}, {"id": 124, "seek": 90700, "start": 907.0, "end": 918.0, "text": " Right. And I think that it's a really good sign when you're when logic in your update function is moving out of the update function and into domain modules.", "tokens": [50364, 1779, 13, 400, 286, 519, 300, 309, 311, 257, 534, 665, 1465, 562, 291, 434, 562, 9952, 294, 428, 5623, 2445, 307, 2684, 484, 295, 264, 5623, 2445, 293, 666, 9274, 16679, 13, 50914, 50914, 407, 411, 294, 7720, 295, 257, 26196, 30055, 11, 291, 458, 11, 6773, 1365, 11, 415, 390, 2684, 300, 9952, 490, 264, 5623, 2445, 281, 445, 3838, 5141, 300, 10088, 294, 264, 5623, 13, 51414, 51414, 400, 300, 311, 439, 264, 10588, 13, 467, 1219, 341, 10088, 281, 909, 420, 4159, 364, 3174, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08077846034880608, "compression_ratio": 1.7268722466960353, "no_caption_prob": 8.613895624876022e-05}, {"id": 125, "seek": 90700, "start": 918.0, "end": 928.0, "text": " So like in Life of a File Evans, you know, fruit example, he was moving that logic from the update function to just directly calling that module in the update.", "tokens": [50364, 1779, 13, 400, 286, 519, 300, 309, 311, 257, 534, 665, 1465, 562, 291, 434, 562, 9952, 294, 428, 5623, 2445, 307, 2684, 484, 295, 264, 5623, 2445, 293, 666, 9274, 16679, 13, 50914, 50914, 407, 411, 294, 7720, 295, 257, 26196, 30055, 11, 291, 458, 11, 6773, 1365, 11, 415, 390, 2684, 300, 9952, 490, 264, 5623, 2445, 281, 445, 3838, 5141, 300, 10088, 294, 264, 5623, 13, 51414, 51414, 400, 300, 311, 439, 264, 10588, 13, 467, 1219, 341, 10088, 281, 909, 420, 4159, 364, 3174, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08077846034880608, "compression_ratio": 1.7268722466960353, "no_caption_prob": 8.613895624876022e-05}, {"id": 126, "seek": 90700, "start": 928.0, "end": 933.0, "text": " And that's all the updated. It called this module to add or remove an item.", "tokens": [50364, 1779, 13, 400, 286, 519, 300, 309, 311, 257, 534, 665, 1465, 562, 291, 434, 562, 9952, 294, 428, 5623, 2445, 307, 2684, 484, 295, 264, 5623, 2445, 293, 666, 9274, 16679, 13, 50914, 50914, 407, 411, 294, 7720, 295, 257, 26196, 30055, 11, 291, 458, 11, 6773, 1365, 11, 415, 390, 2684, 300, 9952, 490, 264, 5623, 2445, 281, 445, 3838, 5141, 300, 10088, 294, 264, 5623, 13, 51414, 51414, 400, 300, 311, 439, 264, 10588, 13, 467, 1219, 341, 10088, 281, 909, 420, 4159, 364, 3174, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08077846034880608, "compression_ratio": 1.7268722466960353, "no_caption_prob": 8.613895624876022e-05}, {"id": 127, "seek": 93300, "start": 933.0, "end": 940.0, "text": " Yeah, I think that's a good sign. And that's something to look for if you're trying to, quote unquote, clean up your update function.", "tokens": [50364, 865, 11, 286, 519, 300, 311, 257, 665, 1465, 13, 400, 300, 311, 746, 281, 574, 337, 498, 291, 434, 1382, 281, 11, 6513, 37557, 11, 2541, 493, 428, 5623, 2445, 13, 50714, 50714, 1779, 13, 1436, 309, 311, 406, 300, 311, 264, 551, 13, 467, 311, 406, 466, 8924, 493, 264, 3089, 13, 50914, 50914, 467, 311, 466, 885, 1075, 281, 519, 412, 472, 1496, 295, 6357, 293, 472, 1496, 295, 37765, 13, 51314, 51314, 407, 300, 411, 382, 291, 352, 760, 264, 5623, 2445, 11, 309, 820, 312, 7447, 412, 472, 1496, 295, 37765, 11, 597, 307, 32722, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05110158920288086, "compression_ratio": 1.7848101265822784, "no_caption_prob": 4.6110828407108784e-05}, {"id": 128, "seek": 93300, "start": 940.0, "end": 944.0, "text": " Right. Because it's not that's the thing. It's not about cleaning up the code.", "tokens": [50364, 865, 11, 286, 519, 300, 311, 257, 665, 1465, 13, 400, 300, 311, 746, 281, 574, 337, 498, 291, 434, 1382, 281, 11, 6513, 37557, 11, 2541, 493, 428, 5623, 2445, 13, 50714, 50714, 1779, 13, 1436, 309, 311, 406, 300, 311, 264, 551, 13, 467, 311, 406, 466, 8924, 493, 264, 3089, 13, 50914, 50914, 467, 311, 466, 885, 1075, 281, 519, 412, 472, 1496, 295, 6357, 293, 472, 1496, 295, 37765, 13, 51314, 51314, 407, 300, 411, 382, 291, 352, 760, 264, 5623, 2445, 11, 309, 820, 312, 7447, 412, 472, 1496, 295, 37765, 11, 597, 307, 32722, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05110158920288086, "compression_ratio": 1.7848101265822784, "no_caption_prob": 4.6110828407108784e-05}, {"id": 129, "seek": 93300, "start": 944.0, "end": 952.0, "text": " It's about being able to think at one level of responsibility and one level of abstraction.", "tokens": [50364, 865, 11, 286, 519, 300, 311, 257, 665, 1465, 13, 400, 300, 311, 746, 281, 574, 337, 498, 291, 434, 1382, 281, 11, 6513, 37557, 11, 2541, 493, 428, 5623, 2445, 13, 50714, 50714, 1779, 13, 1436, 309, 311, 406, 300, 311, 264, 551, 13, 467, 311, 406, 466, 8924, 493, 264, 3089, 13, 50914, 50914, 467, 311, 466, 885, 1075, 281, 519, 412, 472, 1496, 295, 6357, 293, 472, 1496, 295, 37765, 13, 51314, 51314, 407, 300, 411, 382, 291, 352, 760, 264, 5623, 2445, 11, 309, 820, 312, 7447, 412, 472, 1496, 295, 37765, 11, 597, 307, 32722, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05110158920288086, "compression_ratio": 1.7848101265822784, "no_caption_prob": 4.6110828407108784e-05}, {"id": 130, "seek": 93300, "start": 952.0, "end": 959.0, "text": " So that like as you go down the update function, it should be operating at one level of abstraction, which is routing.", "tokens": [50364, 865, 11, 286, 519, 300, 311, 257, 665, 1465, 13, 400, 300, 311, 746, 281, 574, 337, 498, 291, 434, 1382, 281, 11, 6513, 37557, 11, 2541, 493, 428, 5623, 2445, 13, 50714, 50714, 1779, 13, 1436, 309, 311, 406, 300, 311, 264, 551, 13, 467, 311, 406, 466, 8924, 493, 264, 3089, 13, 50914, 50914, 467, 311, 466, 885, 1075, 281, 519, 412, 472, 1496, 295, 6357, 293, 472, 1496, 295, 37765, 13, 51314, 51314, 407, 300, 411, 382, 291, 352, 760, 264, 5623, 2445, 11, 309, 820, 312, 7447, 412, 472, 1496, 295, 37765, 11, 597, 307, 32722, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05110158920288086, "compression_ratio": 1.7848101265822784, "no_caption_prob": 4.6110828407108784e-05}, {"id": 131, "seek": 95900, "start": 959.0, "end": 967.0, "text": " That's the responsibility of the update function. And by routing, I don't mean page routing, but I mean delegating a function to the right place.", "tokens": [50364, 663, 311, 264, 6357, 295, 264, 5623, 2445, 13, 400, 538, 32722, 11, 286, 500, 380, 914, 3028, 32722, 11, 457, 286, 914, 15824, 990, 257, 2445, 281, 264, 558, 1081, 13, 50764, 50764, 639, 307, 257, 993, 295, 257, 14917, 11, 264, 993, 295, 364, 318, 9295, 13, 50914, 50914, 1779, 13, 1079, 13, 407, 286, 519, 309, 1062, 312, 37900, 281, 1333, 295, 11, 291, 458, 11, 286, 914, 11, 22613, 2825, 466, 1419, 411, 5623, 854, 433, 420, 11, 291, 458, 11, 364, 5623, 10088, 420, 746, 411, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08261027778546835, "compression_ratio": 1.6283185840707965, "no_caption_prob": 2.3187110855360515e-05}, {"id": 132, "seek": 95900, "start": 967.0, "end": 970.0, "text": " This is a life of a founder, the life of an SBA.", "tokens": [50364, 663, 311, 264, 6357, 295, 264, 5623, 2445, 13, 400, 538, 32722, 11, 286, 500, 380, 914, 3028, 32722, 11, 457, 286, 914, 15824, 990, 257, 2445, 281, 264, 558, 1081, 13, 50764, 50764, 639, 307, 257, 993, 295, 257, 14917, 11, 264, 993, 295, 364, 318, 9295, 13, 50914, 50914, 1779, 13, 1079, 13, 407, 286, 519, 309, 1062, 312, 37900, 281, 1333, 295, 11, 291, 458, 11, 286, 914, 11, 22613, 2825, 466, 1419, 411, 5623, 854, 433, 420, 11, 291, 458, 11, 364, 5623, 10088, 420, 746, 411, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08261027778546835, "compression_ratio": 1.6283185840707965, "no_caption_prob": 2.3187110855360515e-05}, {"id": 133, "seek": 95900, "start": 970.0, "end": 984.0, "text": " Right. Yes. So I think it might be tempting to sort of, you know, I mean, Evan talked about having like update helpers or, you know, an update module or something like that.", "tokens": [50364, 663, 311, 264, 6357, 295, 264, 5623, 2445, 13, 400, 538, 32722, 11, 286, 500, 380, 914, 3028, 32722, 11, 457, 286, 914, 15824, 990, 257, 2445, 281, 264, 558, 1081, 13, 50764, 50764, 639, 307, 257, 993, 295, 257, 14917, 11, 264, 993, 295, 364, 318, 9295, 13, 50914, 50914, 1779, 13, 1079, 13, 407, 286, 519, 309, 1062, 312, 37900, 281, 1333, 295, 11, 291, 458, 11, 286, 914, 11, 22613, 2825, 466, 1419, 411, 5623, 854, 433, 420, 11, 291, 458, 11, 364, 5623, 10088, 420, 746, 411, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08261027778546835, "compression_ratio": 1.6283185840707965, "no_caption_prob": 2.3187110855360515e-05}, {"id": 134, "seek": 98400, "start": 984.0, "end": 989.0, "text": " Right. And when you do that, you might be splitting out the code into smaller pieces.", "tokens": [50364, 1779, 13, 400, 562, 291, 360, 300, 11, 291, 1062, 312, 30348, 484, 264, 3089, 666, 4356, 3755, 13, 50614, 50614, 583, 300, 311, 406, 264, 3387, 13, 440, 3387, 307, 281, 979, 263, 781, 264, 3089, 13, 50764, 50764, 440, 3387, 307, 281, 652, 309, 370, 291, 393, 519, 466, 472, 1859, 295, 3089, 1553, 15114, 493, 439, 295, 264, 1472, 295, 264, 3089, 666, 428, 1378, 13, 51164, 51164, 663, 311, 264, 3387, 13, 509, 500, 380, 528, 281, 362, 281, 519, 466, 577, 472, 551, 1985, 562, 291, 434, 6260, 365, 746, 7696, 819, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.044013294519162645, "compression_ratio": 1.7777777777777777, "no_caption_prob": 3.82279213226866e-05}, {"id": 135, "seek": 98400, "start": 989.0, "end": 992.0, "text": " But that's not the goal. The goal is to decouple the code.", "tokens": [50364, 1779, 13, 400, 562, 291, 360, 300, 11, 291, 1062, 312, 30348, 484, 264, 3089, 666, 4356, 3755, 13, 50614, 50614, 583, 300, 311, 406, 264, 3387, 13, 440, 3387, 307, 281, 979, 263, 781, 264, 3089, 13, 50764, 50764, 440, 3387, 307, 281, 652, 309, 370, 291, 393, 519, 466, 472, 1859, 295, 3089, 1553, 15114, 493, 439, 295, 264, 1472, 295, 264, 3089, 666, 428, 1378, 13, 51164, 51164, 663, 311, 264, 3387, 13, 509, 500, 380, 528, 281, 362, 281, 519, 466, 577, 472, 551, 1985, 562, 291, 434, 6260, 365, 746, 7696, 819, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.044013294519162645, "compression_ratio": 1.7777777777777777, "no_caption_prob": 3.82279213226866e-05}, {"id": 136, "seek": 98400, "start": 992.0, "end": 1000.0, "text": " The goal is to make it so you can think about one area of code without loading up all of the rest of the code into your head.", "tokens": [50364, 1779, 13, 400, 562, 291, 360, 300, 11, 291, 1062, 312, 30348, 484, 264, 3089, 666, 4356, 3755, 13, 50614, 50614, 583, 300, 311, 406, 264, 3387, 13, 440, 3387, 307, 281, 979, 263, 781, 264, 3089, 13, 50764, 50764, 440, 3387, 307, 281, 652, 309, 370, 291, 393, 519, 466, 472, 1859, 295, 3089, 1553, 15114, 493, 439, 295, 264, 1472, 295, 264, 3089, 666, 428, 1378, 13, 51164, 51164, 663, 311, 264, 3387, 13, 509, 500, 380, 528, 281, 362, 281, 519, 466, 577, 472, 551, 1985, 562, 291, 434, 6260, 365, 746, 7696, 819, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.044013294519162645, "compression_ratio": 1.7777777777777777, "no_caption_prob": 3.82279213226866e-05}, {"id": 137, "seek": 98400, "start": 1000.0, "end": 1008.0, "text": " That's the goal. You don't want to have to think about how one thing works when you're dealing with something entirely different.", "tokens": [50364, 1779, 13, 400, 562, 291, 360, 300, 11, 291, 1062, 312, 30348, 484, 264, 3089, 666, 4356, 3755, 13, 50614, 50614, 583, 300, 311, 406, 264, 3387, 13, 440, 3387, 307, 281, 979, 263, 781, 264, 3089, 13, 50764, 50764, 440, 3387, 307, 281, 652, 309, 370, 291, 393, 519, 466, 472, 1859, 295, 3089, 1553, 15114, 493, 439, 295, 264, 1472, 295, 264, 3089, 666, 428, 1378, 13, 51164, 51164, 663, 311, 264, 3387, 13, 509, 500, 380, 528, 281, 362, 281, 519, 466, 577, 472, 551, 1985, 562, 291, 434, 6260, 365, 746, 7696, 819, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.044013294519162645, "compression_ratio": 1.7777777777777777, "no_caption_prob": 3.82279213226866e-05}, {"id": 138, "seek": 100800, "start": 1008.0, "end": 1022.0, "text": " Right. Yeah. I mean, sometimes I feel like it would make sense to even try being like very pedantic about the update function and saying, like, for example, you can't directly update the model in the update function.", "tokens": [50364, 1779, 13, 865, 13, 286, 914, 11, 2171, 286, 841, 411, 309, 576, 652, 2020, 281, 754, 853, 885, 411, 588, 5670, 7128, 466, 264, 5623, 2445, 293, 1566, 11, 411, 11, 337, 1365, 11, 291, 393, 380, 3838, 5623, 264, 2316, 294, 264, 5623, 2445, 13, 51064, 51064, 509, 362, 281, 360, 309, 538, 5141, 257, 2445, 13, 865, 11, 988, 13, 51264, 51264, 286, 519, 300, 576, 312, 257, 4420, 5120, 13, 286, 519, 286, 519, 300, 300, 311, 264, 558, 3797, 13, 51564, 51564, 400, 286, 1009, 853, 281, 1286, 3030, 300, 13, 286, 600, 1128, 3031, 5670, 49505, 445, 411, 25495, 2175, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06377642069544111, "compression_ratio": 1.735632183908046, "no_caption_prob": 0.00012930299271829426}, {"id": 139, "seek": 100800, "start": 1022.0, "end": 1026.0, "text": " You have to do it by calling a function. Yeah, sure.", "tokens": [50364, 1779, 13, 865, 13, 286, 914, 11, 2171, 286, 841, 411, 309, 576, 652, 2020, 281, 754, 853, 885, 411, 588, 5670, 7128, 466, 264, 5623, 2445, 293, 1566, 11, 411, 11, 337, 1365, 11, 291, 393, 380, 3838, 5623, 264, 2316, 294, 264, 5623, 2445, 13, 51064, 51064, 509, 362, 281, 360, 309, 538, 5141, 257, 2445, 13, 865, 11, 988, 13, 51264, 51264, 286, 519, 300, 576, 312, 257, 4420, 5120, 13, 286, 519, 286, 519, 300, 300, 311, 264, 558, 3797, 13, 51564, 51564, 400, 286, 1009, 853, 281, 1286, 3030, 300, 13, 286, 600, 1128, 3031, 5670, 49505, 445, 411, 25495, 2175, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06377642069544111, "compression_ratio": 1.735632183908046, "no_caption_prob": 0.00012930299271829426}, {"id": 140, "seek": 100800, "start": 1026.0, "end": 1032.0, "text": " I think that would be a useful experiment. I think I think that that's the right spirit.", "tokens": [50364, 1779, 13, 865, 13, 286, 914, 11, 2171, 286, 841, 411, 309, 576, 652, 2020, 281, 754, 853, 885, 411, 588, 5670, 7128, 466, 264, 5623, 2445, 293, 1566, 11, 411, 11, 337, 1365, 11, 291, 393, 380, 3838, 5623, 264, 2316, 294, 264, 5623, 2445, 13, 51064, 51064, 509, 362, 281, 360, 309, 538, 5141, 257, 2445, 13, 865, 11, 988, 13, 51264, 51264, 286, 519, 300, 576, 312, 257, 4420, 5120, 13, 286, 519, 286, 519, 300, 300, 311, 264, 558, 3797, 13, 51564, 51564, 400, 286, 1009, 853, 281, 1286, 3030, 300, 13, 286, 600, 1128, 3031, 5670, 49505, 445, 411, 25495, 2175, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06377642069544111, "compression_ratio": 1.735632183908046, "no_caption_prob": 0.00012930299271829426}, {"id": 141, "seek": 100800, "start": 1032.0, "end": 1037.0, "text": " And I always try to move towards that. I've never tried pedantically just like enforcing that.", "tokens": [50364, 1779, 13, 865, 13, 286, 914, 11, 2171, 286, 841, 411, 309, 576, 652, 2020, 281, 754, 853, 885, 411, 588, 5670, 7128, 466, 264, 5623, 2445, 293, 1566, 11, 411, 11, 337, 1365, 11, 291, 393, 380, 3838, 5623, 264, 2316, 294, 264, 5623, 2445, 13, 51064, 51064, 509, 362, 281, 360, 309, 538, 5141, 257, 2445, 13, 865, 11, 988, 13, 51264, 51264, 286, 519, 300, 576, 312, 257, 4420, 5120, 13, 286, 519, 286, 519, 300, 300, 311, 264, 558, 3797, 13, 51564, 51564, 400, 286, 1009, 853, 281, 1286, 3030, 300, 13, 286, 600, 1128, 3031, 5670, 49505, 445, 411, 25495, 2175, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06377642069544111, "compression_ratio": 1.735632183908046, "no_caption_prob": 0.00012930299271829426}, {"id": 142, "seek": 103700, "start": 1037.0, "end": 1041.0, "text": " That could be like an Elm review rule, actually. That would be interesting.", "tokens": [50364, 663, 727, 312, 411, 364, 2699, 76, 3131, 4978, 11, 767, 13, 663, 576, 312, 1880, 13, 50564, 50564, 865, 11, 718, 311, 853, 300, 412, 512, 935, 13, 663, 576, 312, 1627, 13, 50714, 50714, 2704, 321, 393, 360, 257, 3089, 269, 13449, 322, 257, 1621, 4309, 15053, 293, 321, 393, 6909, 512, 3089, 293, 362, 300, 4978, 300, 321, 393, 1128, 490, 264, 49834, 295, 264, 9952, 11, 309, 575, 281, 1621, 294, 257, 4994, 2445, 13, 51364, 51364, 865, 13, 400, 611, 572, 44383, 6828, 293, 472, 1823, 412, 257, 565, 365, 428, 485, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13360620253156907, "compression_ratio": 1.6808510638297873, "no_caption_prob": 9.460919682169333e-05}, {"id": 143, "seek": 103700, "start": 1041.0, "end": 1044.0, "text": " Yeah, let's try that at some point. That would be cool.", "tokens": [50364, 663, 727, 312, 411, 364, 2699, 76, 3131, 4978, 11, 767, 13, 663, 576, 312, 1880, 13, 50564, 50564, 865, 11, 718, 311, 853, 300, 412, 512, 935, 13, 663, 576, 312, 1627, 13, 50714, 50714, 2704, 321, 393, 360, 257, 3089, 269, 13449, 322, 257, 1621, 4309, 15053, 293, 321, 393, 6909, 512, 3089, 293, 362, 300, 4978, 300, 321, 393, 1128, 490, 264, 49834, 295, 264, 9952, 11, 309, 575, 281, 1621, 294, 257, 4994, 2445, 13, 51364, 51364, 865, 13, 400, 611, 572, 44383, 6828, 293, 472, 1823, 412, 257, 565, 365, 428, 485, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13360620253156907, "compression_ratio": 1.6808510638297873, "no_caption_prob": 9.460919682169333e-05}, {"id": 144, "seek": 103700, "start": 1044.0, "end": 1057.0, "text": " Maybe we can do a code coda on a live stream sometime and we can maintain some code and have that rule that we can never from the inception of the logic, it has to live in a separate function.", "tokens": [50364, 663, 727, 312, 411, 364, 2699, 76, 3131, 4978, 11, 767, 13, 663, 576, 312, 1880, 13, 50564, 50564, 865, 11, 718, 311, 853, 300, 412, 512, 935, 13, 663, 576, 312, 1627, 13, 50714, 50714, 2704, 321, 393, 360, 257, 3089, 269, 13449, 322, 257, 1621, 4309, 15053, 293, 321, 393, 6909, 512, 3089, 293, 362, 300, 4978, 300, 321, 393, 1128, 490, 264, 49834, 295, 264, 9952, 11, 309, 575, 281, 1621, 294, 257, 4994, 2445, 13, 51364, 51364, 865, 13, 400, 611, 572, 44383, 6828, 293, 472, 1823, 412, 257, 565, 365, 428, 485, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13360620253156907, "compression_ratio": 1.6808510638297873, "no_caption_prob": 9.460919682169333e-05}, {"id": 145, "seek": 103700, "start": 1057.0, "end": 1063.0, "text": " Yeah. And also no unused functions and one step at a time with your...", "tokens": [50364, 663, 727, 312, 411, 364, 2699, 76, 3131, 4978, 11, 767, 13, 663, 576, 312, 1880, 13, 50564, 50564, 865, 11, 718, 311, 853, 300, 412, 512, 935, 13, 663, 576, 312, 1627, 13, 50714, 50714, 2704, 321, 393, 360, 257, 3089, 269, 13449, 322, 257, 1621, 4309, 15053, 293, 321, 393, 6909, 512, 3089, 293, 362, 300, 4978, 300, 321, 393, 1128, 490, 264, 49834, 295, 264, 9952, 11, 309, 575, 281, 1621, 294, 257, 4994, 2445, 13, 51364, 51364, 865, 13, 400, 611, 572, 44383, 6828, 293, 472, 1823, 412, 257, 565, 365, 428, 485, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13360620253156907, "compression_ratio": 1.6808510638297873, "no_caption_prob": 9.460919682169333e-05}, {"id": 146, "seek": 106300, "start": 1063.0, "end": 1072.0, "text": " What was it called again? TCR. Test, commit, revert. Oh, it's so fun. It's so fun. Maybe maybe an episode on that sometime. It's a fun one.", "tokens": [50364, 708, 390, 309, 1219, 797, 30, 314, 18547, 13, 9279, 11, 5599, 11, 319, 3281, 13, 876, 11, 309, 311, 370, 1019, 13, 467, 311, 370, 1019, 13, 2704, 1310, 364, 3500, 322, 300, 15053, 13, 467, 311, 257, 1019, 472, 13, 50814, 50814, 865, 13, 407, 472, 636, 286, 576, 2673, 574, 412, 29279, 721, 666, 819, 16679, 307, 538, 1237, 412, 264, 2316, 293, 2577, 437, 307, 4582, 11, 437, 307, 29482, 11, 437, 2519, 307, 29482, 281, 1071, 2519, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09991857375221691, "compression_ratio": 1.5952380952380953, "no_caption_prob": 6.921675958437845e-05}, {"id": 147, "seek": 106300, "start": 1072.0, "end": 1090.0, "text": " Yeah. So one way I would usually look at separating things into different modules is by looking at the model and seeing what is connected, what is coupled, what field is coupled to another field.", "tokens": [50364, 708, 390, 309, 1219, 797, 30, 314, 18547, 13, 9279, 11, 5599, 11, 319, 3281, 13, 876, 11, 309, 311, 370, 1019, 13, 467, 311, 370, 1019, 13, 2704, 1310, 364, 3500, 322, 300, 15053, 13, 467, 311, 257, 1019, 472, 13, 50814, 50814, 865, 13, 407, 472, 636, 286, 576, 2673, 574, 412, 29279, 721, 666, 819, 16679, 307, 538, 1237, 412, 264, 2316, 293, 2577, 437, 307, 4582, 11, 437, 307, 29482, 11, 437, 2519, 307, 29482, 281, 1071, 2519, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09991857375221691, "compression_ratio": 1.5952380952380953, "no_caption_prob": 6.921675958437845e-05}, {"id": 148, "seek": 109000, "start": 1090.0, "end": 1102.0, "text": " Like with remote data, if you're trying to, if you have a record saying is loading, which is a Boolean and data, which is maybe something, then those two are coupled together.", "tokens": [50364, 1743, 365, 8607, 1412, 11, 498, 291, 434, 1382, 281, 11, 498, 291, 362, 257, 2136, 1566, 307, 15114, 11, 597, 307, 257, 23351, 28499, 293, 1412, 11, 597, 307, 1310, 746, 11, 550, 729, 732, 366, 29482, 1214, 13, 50964, 50964, 509, 393, 380, 362, 307, 15114, 2074, 293, 291, 362, 1412, 13, 663, 307, 1391, 406, 437, 291, 434, 9650, 13, 51264, 51264, 407, 729, 286, 853, 281, 1286, 666, 257, 4994, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.12952157258987426, "compression_ratio": 1.5778894472361809, "no_caption_prob": 2.8853582989540882e-05}, {"id": 149, "seek": 109000, "start": 1102.0, "end": 1108.0, "text": " You can't have is loading true and you have data. That is probably not what you're expecting.", "tokens": [50364, 1743, 365, 8607, 1412, 11, 498, 291, 434, 1382, 281, 11, 498, 291, 362, 257, 2136, 1566, 307, 15114, 11, 597, 307, 257, 23351, 28499, 293, 1412, 11, 597, 307, 1310, 746, 11, 550, 729, 732, 366, 29482, 1214, 13, 50964, 50964, 509, 393, 380, 362, 307, 15114, 2074, 293, 291, 362, 1412, 13, 663, 307, 1391, 406, 437, 291, 434, 9650, 13, 51264, 51264, 407, 729, 286, 853, 281, 1286, 666, 257, 4994, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.12952157258987426, "compression_ratio": 1.5778894472361809, "no_caption_prob": 2.8853582989540882e-05}, {"id": 150, "seek": 109000, "start": 1108.0, "end": 1113.0, "text": " So those I try to move into a separate type.", "tokens": [50364, 1743, 365, 8607, 1412, 11, 498, 291, 434, 1382, 281, 11, 498, 291, 362, 257, 2136, 1566, 307, 15114, 11, 597, 307, 257, 23351, 28499, 293, 1412, 11, 597, 307, 1310, 746, 11, 550, 729, 732, 366, 29482, 1214, 13, 50964, 50964, 509, 393, 380, 362, 307, 15114, 2074, 293, 291, 362, 1412, 13, 663, 307, 1391, 406, 437, 291, 434, 9650, 13, 51264, 51264, 407, 729, 286, 853, 281, 1286, 666, 257, 4994, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.12952157258987426, "compression_ratio": 1.5778894472361809, "no_caption_prob": 2.8853582989540882e-05}, {"id": 151, "seek": 111300, "start": 1113.0, "end": 1123.0, "text": " Yeah. And what so that's the first step that I would take and then you will likely have some functions to work with those.", "tokens": [50364, 865, 13, 400, 437, 370, 300, 311, 264, 700, 1823, 300, 286, 576, 747, 293, 550, 291, 486, 3700, 362, 512, 6828, 281, 589, 365, 729, 13, 50864, 50864, 400, 562, 300, 3643, 257, 1154, 11, 291, 528, 281, 1286, 729, 666, 257, 819, 10088, 420, 370, 300, 291, 500, 380, 483, 9601, 281, 264, 11420, 4365, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.09609410070603894, "compression_ratio": 1.5290697674418605, "no_caption_prob": 6.204659439390525e-05}, {"id": 152, "seek": 111300, "start": 1123.0, "end": 1133.0, "text": " And when that becomes a problem, you want to move those into a different module or so that you don't get tied to the implementation details.", "tokens": [50364, 865, 13, 400, 437, 370, 300, 311, 264, 700, 1823, 300, 286, 576, 747, 293, 550, 291, 486, 3700, 362, 512, 6828, 281, 589, 365, 729, 13, 50864, 50864, 400, 562, 300, 3643, 257, 1154, 11, 291, 528, 281, 1286, 729, 666, 257, 819, 10088, 420, 370, 300, 291, 500, 380, 483, 9601, 281, 264, 11420, 4365, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.09609410070603894, "compression_ratio": 1.5290697674418605, "no_caption_prob": 6.204659439390525e-05}, {"id": 153, "seek": 113300, "start": 1133.0, "end": 1146.0, "text": " So you don't get coupling. You can preemptively move that one out to a different module so that you can hide the implementation details and don't and avoid getting any coupling.", "tokens": [50364, 407, 291, 500, 380, 483, 37447, 13, 509, 393, 659, 4543, 3413, 1286, 300, 472, 484, 281, 257, 819, 10088, 370, 300, 291, 393, 6479, 264, 11420, 4365, 293, 500, 380, 293, 5042, 1242, 604, 37447, 13, 51014, 51014, 1079, 13, 639, 307, 472, 295, 264, 264, 3880, 721, 322, 452, 1575, 562, 286, 390, 319, 15219, 278, 341, 751, 307, 341, 1168, 295, 562, 307, 264, 558, 565, 281, 8947, 257, 10088, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09699646631876628, "compression_ratio": 1.6029411764705883, "no_caption_prob": 2.212507570220623e-05}, {"id": 154, "seek": 113300, "start": 1146.0, "end": 1160.0, "text": " Yes. This is one of the the biggest things on my mind when I was rewatching this talk is this question of when is the right time to extract a module?", "tokens": [50364, 407, 291, 500, 380, 483, 37447, 13, 509, 393, 659, 4543, 3413, 1286, 300, 472, 484, 281, 257, 819, 10088, 370, 300, 291, 393, 6479, 264, 11420, 4365, 293, 500, 380, 293, 5042, 1242, 604, 37447, 13, 51014, 51014, 1079, 13, 639, 307, 472, 295, 264, 264, 3880, 721, 322, 452, 1575, 562, 286, 390, 319, 15219, 278, 341, 751, 307, 341, 1168, 295, 562, 307, 264, 558, 565, 281, 8947, 257, 10088, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09699646631876628, "compression_ratio": 1.6029411764705883, "no_caption_prob": 2.212507570220623e-05}, {"id": 155, "seek": 116000, "start": 1160.0, "end": 1175.0, "text": " And I think, you know, Evan's advice on that question in this talk is basically don't do it prematurely, which I completely agree that premature abstractions are a real problem and people have a tendency to do them.", "tokens": [50364, 400, 286, 519, 11, 291, 458, 11, 22613, 311, 5192, 322, 300, 1168, 294, 341, 751, 307, 1936, 500, 380, 360, 309, 34877, 356, 11, 597, 286, 2584, 3986, 300, 34877, 12649, 626, 366, 257, 957, 1154, 293, 561, 362, 257, 18187, 281, 360, 552, 13, 51114, 51114, 400, 286, 519, 300, 291, 643, 281, 43212, 300, 7164, 281, 281, 1322, 493, 300, 2923, 2841, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05526656763894217, "compression_ratio": 1.5340314136125655, "no_caption_prob": 5.828456050949171e-05}, {"id": 156, "seek": 116000, "start": 1175.0, "end": 1183.0, "text": " And I think that you need to hone that habit to to build up that sensibility.", "tokens": [50364, 400, 286, 519, 11, 291, 458, 11, 22613, 311, 5192, 322, 300, 1168, 294, 341, 751, 307, 1936, 500, 380, 360, 309, 34877, 356, 11, 597, 286, 2584, 3986, 300, 34877, 12649, 626, 366, 257, 957, 1154, 293, 561, 362, 257, 18187, 281, 360, 552, 13, 51114, 51114, 400, 286, 519, 300, 291, 643, 281, 43212, 300, 7164, 281, 281, 1322, 493, 300, 2923, 2841, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05526656763894217, "compression_ratio": 1.5340314136125655, "no_caption_prob": 5.828456050949171e-05}, {"id": 157, "seek": 118300, "start": 1183.0, "end": 1203.0, "text": " That said, once once you have a sense of what what's natural and fits into a particular module, I actually I think that it's actually a good idea in in certain cases to start with a module rather than organically feeling the pain and moving it out.", "tokens": [50364, 663, 848, 11, 1564, 1564, 291, 362, 257, 2020, 295, 437, 437, 311, 3303, 293, 9001, 666, 257, 1729, 10088, 11, 286, 767, 286, 519, 300, 309, 311, 767, 257, 665, 1558, 294, 294, 1629, 3331, 281, 722, 365, 257, 10088, 2831, 813, 1798, 984, 2633, 264, 1822, 293, 2684, 309, 484, 13, 51364, 51364, 823, 11, 370, 411, 9809, 2825, 2825, 466, 341, 294, 21589, 484, 294, 652, 1412, 9227, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.079745236196016, "compression_ratio": 1.5829383886255923, "no_caption_prob": 5.475355646922253e-05}, {"id": 158, "seek": 118300, "start": 1203.0, "end": 1212.0, "text": " Now, so like Richard talked talked about this in scaling out in make data structures.", "tokens": [50364, 663, 848, 11, 1564, 1564, 291, 362, 257, 2020, 295, 437, 437, 311, 3303, 293, 9001, 666, 257, 1729, 10088, 11, 286, 767, 286, 519, 300, 309, 311, 767, 257, 665, 1558, 294, 294, 1629, 3331, 281, 722, 365, 257, 10088, 2831, 813, 1798, 984, 2633, 264, 1822, 293, 2684, 309, 484, 13, 51364, 51364, 823, 11, 370, 411, 9809, 2825, 2825, 466, 341, 294, 21589, 484, 294, 652, 1412, 9227, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.079745236196016, "compression_ratio": 1.5829383886255923, "no_caption_prob": 5.475355646922253e-05}, {"id": 159, "seek": 121200, "start": 1212.0, "end": 1219.0, "text": " Which we haven't covered yet. We covered, yeah, we haven't covered scaling applications, but we covered we covered make data structures.", "tokens": [50364, 3013, 321, 2378, 380, 5343, 1939, 13, 492, 5343, 11, 1338, 11, 321, 2378, 380, 5343, 21589, 5821, 11, 457, 321, 5343, 321, 5343, 652, 1412, 9227, 13, 50714, 50714, 400, 294, 300, 751, 11, 415, 6686, 466, 300, 1349, 1207, 7426, 689, 264, 1349, 1207, 576, 483, 484, 295, 20271, 570, 456, 645, 819, 7139, 295, 3494, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.1564372834705171, "compression_ratio": 1.6411764705882352, "no_caption_prob": 6.604821828659624e-05}, {"id": 160, "seek": 121200, "start": 1219.0, "end": 1229.0, "text": " And in that talk, he talks about that word count bug where the word count would get out of sync because there were different sources of truth.", "tokens": [50364, 3013, 321, 2378, 380, 5343, 1939, 13, 492, 5343, 11, 1338, 11, 321, 2378, 380, 5343, 21589, 5821, 11, 457, 321, 5343, 321, 5343, 652, 1412, 9227, 13, 50714, 50714, 400, 294, 300, 751, 11, 415, 6686, 466, 300, 1349, 1207, 7426, 689, 264, 1349, 1207, 576, 483, 484, 295, 20271, 570, 456, 645, 819, 7139, 295, 3494, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.1564372834705171, "compression_ratio": 1.6411764705882352, "no_caption_prob": 6.604821828659624e-05}, {"id": 161, "seek": 122900, "start": 1229.0, "end": 1247.0, "text": " And when he encapsulated that as internal details so he could have a certain small area that's responsible for making sure the word count is accurate and up to date and it could cache it as it wanted to and recalculated and whatever the bugs went away.", "tokens": [50364, 400, 562, 415, 38745, 6987, 300, 382, 6920, 4365, 370, 415, 727, 362, 257, 1629, 1359, 1859, 300, 311, 6250, 337, 1455, 988, 264, 1349, 1207, 307, 8559, 293, 493, 281, 4002, 293, 309, 727, 19459, 309, 382, 309, 1415, 281, 293, 850, 304, 2444, 770, 293, 2035, 264, 15120, 1437, 1314, 13, 51264, 51264, 1779, 13, 865, 13, 400, 415, 848, 11, 286, 3172, 286, 632, 1409, 365, 300, 37765, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05385982362847579, "compression_ratio": 1.5631067961165048, "no_caption_prob": 0.00013340574514586478}, {"id": 162, "seek": 122900, "start": 1247.0, "end": 1252.0, "text": " Right. Yeah. And he said, I wish I had started with that abstraction.", "tokens": [50364, 400, 562, 415, 38745, 6987, 300, 382, 6920, 4365, 370, 415, 727, 362, 257, 1629, 1359, 1859, 300, 311, 6250, 337, 1455, 988, 264, 1349, 1207, 307, 8559, 293, 493, 281, 4002, 293, 309, 727, 19459, 309, 382, 309, 1415, 281, 293, 850, 304, 2444, 770, 293, 2035, 264, 15120, 1437, 1314, 13, 51264, 51264, 1779, 13, 865, 13, 400, 415, 848, 11, 286, 3172, 286, 632, 1409, 365, 300, 37765, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05385982362847579, "compression_ratio": 1.5631067961165048, "no_caption_prob": 0.00013340574514586478}, {"id": 163, "seek": 125200, "start": 1252.0, "end": 1262.0, "text": " I think that's an example where I would actually recommend starting with a module just like, okay, we've got this chapter and we know it's got a word count.", "tokens": [50364, 286, 519, 300, 311, 364, 1365, 689, 286, 576, 767, 2748, 2891, 365, 257, 10088, 445, 411, 11, 1392, 11, 321, 600, 658, 341, 7187, 293, 321, 458, 309, 311, 658, 257, 1349, 1207, 13, 50864, 50864, 400, 286, 500, 380, 528, 281, 718, 2201, 5672, 322, 613, 2154, 1124, 295, 264, 1349, 1207, 13, 51114, 51114, 286, 519, 309, 311, 10585, 281, 722, 365, 300, 293, 584, 11, 286, 362, 341, 33270, 394, 13, 51314, 51314, 286, 528, 281, 2371, 341, 13, 823, 11, 300, 848, 11, 498, 291, 434, 498, 291, 434, 777, 281, 341, 1399, 293, 291, 500, 380, 362, 257, 688, 295, 1752, 1333, 295, 1798, 984, 49844, 484, 16679, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05642187294839811, "compression_ratio": 1.6953405017921146, "no_caption_prob": 1.3845523426425643e-05}, {"id": 164, "seek": 125200, "start": 1262.0, "end": 1267.0, "text": " And I don't want to let everybody depend on these internals of the word count.", "tokens": [50364, 286, 519, 300, 311, 364, 1365, 689, 286, 576, 767, 2748, 2891, 365, 257, 10088, 445, 411, 11, 1392, 11, 321, 600, 658, 341, 7187, 293, 321, 458, 309, 311, 658, 257, 1349, 1207, 13, 50864, 50864, 400, 286, 500, 380, 528, 281, 718, 2201, 5672, 322, 613, 2154, 1124, 295, 264, 1349, 1207, 13, 51114, 51114, 286, 519, 309, 311, 10585, 281, 722, 365, 300, 293, 584, 11, 286, 362, 341, 33270, 394, 13, 51314, 51314, 286, 528, 281, 2371, 341, 13, 823, 11, 300, 848, 11, 498, 291, 434, 498, 291, 434, 777, 281, 341, 1399, 293, 291, 500, 380, 362, 257, 688, 295, 1752, 1333, 295, 1798, 984, 49844, 484, 16679, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05642187294839811, "compression_ratio": 1.6953405017921146, "no_caption_prob": 1.3845523426425643e-05}, {"id": 165, "seek": 125200, "start": 1267.0, "end": 1271.0, "text": " I think it's reasonable to start with that and say, I have this invariant.", "tokens": [50364, 286, 519, 300, 311, 364, 1365, 689, 286, 576, 767, 2748, 2891, 365, 257, 10088, 445, 411, 11, 1392, 11, 321, 600, 658, 341, 7187, 293, 321, 458, 309, 311, 658, 257, 1349, 1207, 13, 50864, 50864, 400, 286, 500, 380, 528, 281, 718, 2201, 5672, 322, 613, 2154, 1124, 295, 264, 1349, 1207, 13, 51114, 51114, 286, 519, 309, 311, 10585, 281, 722, 365, 300, 293, 584, 11, 286, 362, 341, 33270, 394, 13, 51314, 51314, 286, 528, 281, 2371, 341, 13, 823, 11, 300, 848, 11, 498, 291, 434, 498, 291, 434, 777, 281, 341, 1399, 293, 291, 500, 380, 362, 257, 688, 295, 1752, 1333, 295, 1798, 984, 49844, 484, 16679, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05642187294839811, "compression_ratio": 1.6953405017921146, "no_caption_prob": 1.3845523426425643e-05}, {"id": 166, "seek": 125200, "start": 1271.0, "end": 1281.0, "text": " I want to protect this. Now, that said, if you're if you're new to this process and you don't have a lot of experience sort of organically extracting out modules.", "tokens": [50364, 286, 519, 300, 311, 364, 1365, 689, 286, 576, 767, 2748, 2891, 365, 257, 10088, 445, 411, 11, 1392, 11, 321, 600, 658, 341, 7187, 293, 321, 458, 309, 311, 658, 257, 1349, 1207, 13, 50864, 50864, 400, 286, 500, 380, 528, 281, 718, 2201, 5672, 322, 613, 2154, 1124, 295, 264, 1349, 1207, 13, 51114, 51114, 286, 519, 309, 311, 10585, 281, 722, 365, 300, 293, 584, 11, 286, 362, 341, 33270, 394, 13, 51314, 51314, 286, 528, 281, 2371, 341, 13, 823, 11, 300, 848, 11, 498, 291, 434, 498, 291, 434, 777, 281, 341, 1399, 293, 291, 500, 380, 362, 257, 688, 295, 1752, 1333, 295, 1798, 984, 49844, 484, 16679, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05642187294839811, "compression_ratio": 1.6953405017921146, "no_caption_prob": 1.3845523426425643e-05}, {"id": 167, "seek": 128100, "start": 1281.0, "end": 1294.0, "text": " I do think it's good to sort of practice doing that. And because there are going to be times when you're going to be tempted to extract things out and it's actually okay to leave it where it is.", "tokens": [50364, 286, 360, 519, 309, 311, 665, 281, 1333, 295, 3124, 884, 300, 13, 400, 570, 456, 366, 516, 281, 312, 1413, 562, 291, 434, 516, 281, 312, 29941, 281, 8947, 721, 484, 293, 309, 311, 767, 1392, 281, 1856, 309, 689, 309, 307, 13, 51014, 51014, 865, 13, 583, 1564, 291, 1564, 291, 1499, 729, 3942, 11, 286, 767, 2748, 294, 3331, 411, 300, 11, 2891, 365, 257, 10088, 13, 286, 519, 300, 300, 311, 767, 257, 665, 1558, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07022872992924281, "compression_ratio": 1.6635071090047393, "no_caption_prob": 4.3999381887260824e-05}, {"id": 168, "seek": 128100, "start": 1294.0, "end": 1306.0, "text": " Yeah. But once you once you develop those skills, I actually recommend in cases like that, starting with a module. I think that that's actually a good idea.", "tokens": [50364, 286, 360, 519, 309, 311, 665, 281, 1333, 295, 3124, 884, 300, 13, 400, 570, 456, 366, 516, 281, 312, 1413, 562, 291, 434, 516, 281, 312, 29941, 281, 8947, 721, 484, 293, 309, 311, 767, 1392, 281, 1856, 309, 689, 309, 307, 13, 51014, 51014, 865, 13, 583, 1564, 291, 1564, 291, 1499, 729, 3942, 11, 286, 767, 2748, 294, 3331, 411, 300, 11, 2891, 365, 257, 10088, 13, 286, 519, 300, 300, 311, 767, 257, 665, 1558, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07022872992924281, "compression_ratio": 1.6635071090047393, "no_caption_prob": 4.3999381887260824e-05}, {"id": 169, "seek": 130600, "start": 1306.0, "end": 1319.0, "text": " Yeah, I think it would be useful to know about starting, but when you're trying to extract things to at least try to gain some usefulness about it.", "tokens": [50364, 865, 11, 286, 519, 309, 576, 312, 4420, 281, 458, 466, 2891, 11, 457, 562, 291, 434, 1382, 281, 8947, 721, 281, 412, 1935, 853, 281, 6052, 512, 4420, 1287, 466, 309, 13, 51014, 51014, 407, 562, 286, 1131, 365, 452, 1365, 295, 49844, 264, 8607, 1412, 5102, 11, 597, 797, 11, 437, 291, 483, 307, 291, 979, 263, 781, 428, 3089, 11, 597, 307, 597, 307, 257, 5121, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0987411576348382, "compression_ratio": 1.5935828877005347, "no_caption_prob": 3.3732550946297124e-05}, {"id": 170, "seek": 130600, "start": 1319.0, "end": 1333.0, "text": " So when I met with my example of extracting the remote data pattern, which again, what you get is you decouple your code, which is which is a benefit,", "tokens": [50364, 865, 11, 286, 519, 309, 576, 312, 4420, 281, 458, 466, 2891, 11, 457, 562, 291, 434, 1382, 281, 8947, 721, 281, 412, 1935, 853, 281, 6052, 512, 4420, 1287, 466, 309, 13, 51014, 51014, 407, 562, 286, 1131, 365, 452, 1365, 295, 49844, 264, 8607, 1412, 5102, 11, 597, 797, 11, 437, 291, 483, 307, 291, 979, 263, 781, 428, 3089, 11, 597, 307, 597, 307, 257, 5121, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0987411576348382, "compression_ratio": 1.5935828877005347, "no_caption_prob": 3.3732550946297124e-05}, {"id": 171, "seek": 133300, "start": 1333.0, "end": 1348.0, "text": " which is good and you gain guarantees, which is good. But if you just arbitrarily take a function from one file to another file, you have to think about what do I gain?", "tokens": [50364, 597, 307, 665, 293, 291, 6052, 32567, 11, 597, 307, 665, 13, 583, 498, 291, 445, 19071, 3289, 747, 257, 2445, 490, 472, 3991, 281, 1071, 3991, 11, 291, 362, 281, 519, 466, 437, 360, 286, 6052, 30, 51114, 51114, 407, 11, 337, 5197, 11, 498, 291, 362, 257, 14877, 2445, 293, 291, 584, 11, 286, 478, 516, 281, 1286, 309, 281, 257, 2839, 4174, 10088, 13, 51564, 51564, 1779, 13, 1779, 13, 400, 309, 311, 754, 1673, 309, 311, 1128, 1143, 4992, 1646, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09214416246735647, "compression_ratio": 1.5924170616113744, "no_caption_prob": 1.892384170787409e-05}, {"id": 172, "seek": 133300, "start": 1348.0, "end": 1357.0, "text": " So, for instance, if you have a utility function and you say, I'm going to move it to a utils module.", "tokens": [50364, 597, 307, 665, 293, 291, 6052, 32567, 11, 597, 307, 665, 13, 583, 498, 291, 445, 19071, 3289, 747, 257, 2445, 490, 472, 3991, 281, 1071, 3991, 11, 291, 362, 281, 519, 466, 437, 360, 286, 6052, 30, 51114, 51114, 407, 11, 337, 5197, 11, 498, 291, 362, 257, 14877, 2445, 293, 291, 584, 11, 286, 478, 516, 281, 1286, 309, 281, 257, 2839, 4174, 10088, 13, 51564, 51564, 1779, 13, 1779, 13, 400, 309, 311, 754, 1673, 309, 311, 1128, 1143, 4992, 1646, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09214416246735647, "compression_ratio": 1.5924170616113744, "no_caption_prob": 1.892384170787409e-05}, {"id": 173, "seek": 133300, "start": 1357.0, "end": 1361.0, "text": " Right. Right. And it's even though it's never used anywhere else.", "tokens": [50364, 597, 307, 665, 293, 291, 6052, 32567, 11, 597, 307, 665, 13, 583, 498, 291, 445, 19071, 3289, 747, 257, 2445, 490, 472, 3991, 281, 1071, 3991, 11, 291, 362, 281, 519, 466, 437, 360, 286, 6052, 30, 51114, 51114, 407, 11, 337, 5197, 11, 498, 291, 362, 257, 14877, 2445, 293, 291, 584, 11, 286, 478, 516, 281, 1286, 309, 281, 257, 2839, 4174, 10088, 13, 51564, 51564, 1779, 13, 1779, 13, 400, 309, 311, 754, 1673, 309, 311, 1128, 1143, 4992, 1646, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09214416246735647, "compression_ratio": 1.5924170616113744, "no_caption_prob": 1.892384170787409e-05}, {"id": 174, "seek": 136100, "start": 1361.0, "end": 1369.0, "text": " What do you gain? You don't gain any guarantees. You don't get remove coupling. Yes. Yeah.", "tokens": [50364, 708, 360, 291, 6052, 30, 509, 500, 380, 6052, 604, 32567, 13, 509, 500, 380, 483, 4159, 37447, 13, 1079, 13, 865, 13, 50764, 50764, 509, 500, 380, 483, 604, 7426, 4514, 926, 300, 13, 407, 456, 311, 406, 709, 935, 281, 884, 300, 13, 51064, 51064, 1079, 13, 3443, 291, 362, 746, 1646, 300, 486, 818, 300, 2445, 11, 1310, 11, 1310, 11, 1310, 309, 486, 312, 4420, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1580649066615749, "compression_ratio": 1.6331360946745561, "no_caption_prob": 3.480655868770555e-05}, {"id": 175, "seek": 136100, "start": 1369.0, "end": 1375.0, "text": " You don't get any bug safety around that. So there's not much point to doing that.", "tokens": [50364, 708, 360, 291, 6052, 30, 509, 500, 380, 6052, 604, 32567, 13, 509, 500, 380, 483, 4159, 37447, 13, 1079, 13, 865, 13, 50764, 50764, 509, 500, 380, 483, 604, 7426, 4514, 926, 300, 13, 407, 456, 311, 406, 709, 935, 281, 884, 300, 13, 51064, 51064, 1079, 13, 3443, 291, 362, 746, 1646, 300, 486, 818, 300, 2445, 11, 1310, 11, 1310, 11, 1310, 309, 486, 312, 4420, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1580649066615749, "compression_ratio": 1.6331360946745561, "no_caption_prob": 3.480655868770555e-05}, {"id": 176, "seek": 136100, "start": 1375.0, "end": 1382.0, "text": " Yes. Once you have something else that will call that function, maybe, maybe, maybe it will be useful.", "tokens": [50364, 708, 360, 291, 6052, 30, 509, 500, 380, 6052, 604, 32567, 13, 509, 500, 380, 483, 4159, 37447, 13, 1079, 13, 865, 13, 50764, 50764, 509, 500, 380, 483, 604, 7426, 4514, 926, 300, 13, 407, 456, 311, 406, 709, 935, 281, 884, 300, 13, 51064, 51064, 1079, 13, 3443, 291, 362, 746, 1646, 300, 486, 818, 300, 2445, 11, 1310, 11, 1310, 11, 1310, 309, 486, 312, 4420, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1580649066615749, "compression_ratio": 1.6331360946745561, "no_caption_prob": 3.480655868770555e-05}, {"id": 177, "seek": 138200, "start": 1382.0, "end": 1391.0, "text": " Maybe it will be detrimental to reuse it, as Evan showed that not everything that looks the same is the same thing.", "tokens": [50364, 2704, 309, 486, 312, 45694, 281, 26225, 309, 11, 382, 22613, 4712, 300, 406, 1203, 300, 1542, 264, 912, 307, 264, 912, 551, 13, 50814, 50814, 22837, 3986, 13, 865, 13, 883, 11, 300, 311, 731, 848, 13, 286, 519, 291, 434, 3122, 558, 300, 456, 366, 867, 3331, 689, 291, 434, 516, 281, 362, 30482, 420, 707, 36133, 6828, 300, 309, 311, 516, 281, 312, 5775, 291, 5357, 3458, 498, 291, 853, 281, 12649, 300, 666, 257, 10088, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06620844772883824, "compression_ratio": 1.625, "no_caption_prob": 8.887514559319243e-05}, {"id": 178, "seek": 138200, "start": 1391.0, "end": 1406.0, "text": " Totally agree. Yeah. No, that's well said. I think you're absolutely right that there are many cases where you're going to have utilities or little helper functions that it's going to be leading you astray if you try to abstract that into a module.", "tokens": [50364, 2704, 309, 486, 312, 45694, 281, 26225, 309, 11, 382, 22613, 4712, 300, 406, 1203, 300, 1542, 264, 912, 307, 264, 912, 551, 13, 50814, 50814, 22837, 3986, 13, 865, 13, 883, 11, 300, 311, 731, 848, 13, 286, 519, 291, 434, 3122, 558, 300, 456, 366, 867, 3331, 689, 291, 434, 516, 281, 362, 30482, 420, 707, 36133, 6828, 300, 309, 311, 516, 281, 312, 5775, 291, 5357, 3458, 498, 291, 853, 281, 12649, 300, 666, 257, 10088, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06620844772883824, "compression_ratio": 1.625, "no_caption_prob": 8.887514559319243e-05}, {"id": 179, "seek": 140600, "start": 1406.0, "end": 1414.0, "text": " And as you said, you know, what are you gaining from it? Are you protecting invariants? Are you hiding internals? Are you removing coupling?", "tokens": [50364, 400, 382, 291, 848, 11, 291, 458, 11, 437, 366, 291, 19752, 490, 309, 30, 2014, 291, 12316, 33270, 1719, 30, 2014, 291, 10596, 2154, 1124, 30, 2014, 291, 12720, 37447, 30, 50764, 50764, 400, 498, 291, 434, 406, 884, 604, 295, 729, 721, 11, 550, 456, 311, 572, 1778, 281, 8947, 746, 281, 257, 10088, 13, 51064, 51064, 407, 286, 2584, 3986, 365, 300, 13, 286, 519, 300, 456, 366, 1413, 562, 11, 291, 458, 11, 286, 528, 281, 2371, 341, 11, 613, 2154, 1124, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.04944456016624367, "compression_ratio": 1.7028301886792452, "no_caption_prob": 3.6476012610364705e-05}, {"id": 180, "seek": 140600, "start": 1414.0, "end": 1420.0, "text": " And if you're not doing any of those things, then there's no reason to extract something to a module.", "tokens": [50364, 400, 382, 291, 848, 11, 291, 458, 11, 437, 366, 291, 19752, 490, 309, 30, 2014, 291, 12316, 33270, 1719, 30, 2014, 291, 10596, 2154, 1124, 30, 2014, 291, 12720, 37447, 30, 50764, 50764, 400, 498, 291, 434, 406, 884, 604, 295, 729, 721, 11, 550, 456, 311, 572, 1778, 281, 8947, 746, 281, 257, 10088, 13, 51064, 51064, 407, 286, 2584, 3986, 365, 300, 13, 286, 519, 300, 456, 366, 1413, 562, 11, 291, 458, 11, 286, 528, 281, 2371, 341, 11, 613, 2154, 1124, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.04944456016624367, "compression_ratio": 1.7028301886792452, "no_caption_prob": 3.6476012610364705e-05}, {"id": 181, "seek": 140600, "start": 1420.0, "end": 1428.0, "text": " So I completely agree with that. I think that there are times when, you know, I want to protect this, these internals.", "tokens": [50364, 400, 382, 291, 848, 11, 291, 458, 11, 437, 366, 291, 19752, 490, 309, 30, 2014, 291, 12316, 33270, 1719, 30, 2014, 291, 10596, 2154, 1124, 30, 2014, 291, 12720, 37447, 30, 50764, 50764, 400, 498, 291, 434, 406, 884, 604, 295, 729, 721, 11, 550, 456, 311, 572, 1778, 281, 8947, 746, 281, 257, 10088, 13, 51064, 51064, 407, 286, 2584, 3986, 365, 300, 13, 286, 519, 300, 456, 366, 1413, 562, 11, 291, 458, 11, 286, 528, 281, 2371, 341, 11, 613, 2154, 1124, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.04944456016624367, "compression_ratio": 1.7028301886792452, "no_caption_prob": 3.6476012610364705e-05}, {"id": 182, "seek": 142800, "start": 1428.0, "end": 1436.0, "text": " I want to have an invariant or I want to make sure that this is used correctly. You know, I have like a Social Security number.", "tokens": [50364, 286, 528, 281, 362, 364, 33270, 394, 420, 286, 528, 281, 652, 988, 300, 341, 307, 1143, 8944, 13, 509, 458, 11, 286, 362, 411, 257, 9909, 11164, 1230, 13, 50764, 50764, 286, 519, 286, 478, 516, 281, 12649, 341, 558, 1314, 666, 257, 10088, 11, 337, 1365, 13, 50964, 50964, 865, 11, 570, 382, 291, 848, 11, 365, 1752, 11, 291, 458, 300, 11, 1954, 11, 341, 307, 516, 281, 643, 281, 312, 10594, 13, 51364, 51364, 639, 307, 445, 516, 281, 312, 257, 6798, 833, 264, 13376, 13, 407, 286, 643, 281, 7019, 309, 493, 293, 2371, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05257804507300967, "compression_ratio": 1.6512605042016806, "no_caption_prob": 5.920619878452271e-05}, {"id": 183, "seek": 142800, "start": 1436.0, "end": 1440.0, "text": " I think I'm going to abstract this right away into a module, for example.", "tokens": [50364, 286, 528, 281, 362, 364, 33270, 394, 420, 286, 528, 281, 652, 988, 300, 341, 307, 1143, 8944, 13, 509, 458, 11, 286, 362, 411, 257, 9909, 11164, 1230, 13, 50764, 50764, 286, 519, 286, 478, 516, 281, 12649, 341, 558, 1314, 666, 257, 10088, 11, 337, 1365, 13, 50964, 50964, 865, 11, 570, 382, 291, 848, 11, 365, 1752, 11, 291, 458, 300, 11, 1954, 11, 341, 307, 516, 281, 643, 281, 312, 10594, 13, 51364, 51364, 639, 307, 445, 516, 281, 312, 257, 6798, 833, 264, 13376, 13, 407, 286, 643, 281, 7019, 309, 493, 293, 2371, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05257804507300967, "compression_ratio": 1.6512605042016806, "no_caption_prob": 5.920619878452271e-05}, {"id": 184, "seek": 142800, "start": 1440.0, "end": 1448.0, "text": " Yeah, because as you said, with experience, you know that, oh, this is going to need to be protected.", "tokens": [50364, 286, 528, 281, 362, 364, 33270, 394, 420, 286, 528, 281, 652, 988, 300, 341, 307, 1143, 8944, 13, 509, 458, 11, 286, 362, 411, 257, 9909, 11164, 1230, 13, 50764, 50764, 286, 519, 286, 478, 516, 281, 12649, 341, 558, 1314, 666, 257, 10088, 11, 337, 1365, 13, 50964, 50964, 865, 11, 570, 382, 291, 848, 11, 365, 1752, 11, 291, 458, 300, 11, 1954, 11, 341, 307, 516, 281, 643, 281, 312, 10594, 13, 51364, 51364, 639, 307, 445, 516, 281, 312, 257, 6798, 833, 264, 13376, 13, 407, 286, 643, 281, 7019, 309, 493, 293, 2371, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05257804507300967, "compression_ratio": 1.6512605042016806, "no_caption_prob": 5.920619878452271e-05}, {"id": 185, "seek": 142800, "start": 1448.0, "end": 1453.0, "text": " This is just going to be a string under the hood. So I need to wrap it up and protect it.", "tokens": [50364, 286, 528, 281, 362, 364, 33270, 394, 420, 286, 528, 281, 652, 988, 300, 341, 307, 1143, 8944, 13, 509, 458, 11, 286, 362, 411, 257, 9909, 11164, 1230, 13, 50764, 50764, 286, 519, 286, 478, 516, 281, 12649, 341, 558, 1314, 666, 257, 10088, 11, 337, 1365, 13, 50964, 50964, 865, 11, 570, 382, 291, 848, 11, 365, 1752, 11, 291, 458, 300, 11, 1954, 11, 341, 307, 516, 281, 643, 281, 312, 10594, 13, 51364, 51364, 639, 307, 445, 516, 281, 312, 257, 6798, 833, 264, 13376, 13, 407, 286, 643, 281, 7019, 309, 493, 293, 2371, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05257804507300967, "compression_ratio": 1.6512605042016806, "no_caption_prob": 5.920619878452271e-05}, {"id": 186, "seek": 145300, "start": 1453.0, "end": 1460.0, "text": " Yes. So when you get some experience, we will know this will need protection.", "tokens": [50364, 1079, 13, 407, 562, 291, 483, 512, 1752, 11, 321, 486, 458, 341, 486, 643, 6334, 13, 50714, 50714, 865, 13, 407, 341, 486, 5121, 490, 1419, 257, 2010, 293, 341, 486, 5121, 490, 885, 7472, 666, 257, 819, 10088, 13, 51064, 51064, 1779, 13, 407, 291, 362, 264, 5121, 456, 13, 509, 445, 458, 309, 13, 51214, 51214, 7587, 13, 7587, 13, 509, 643, 281, 312, 4840, 729, 5327, 2361, 322, 729, 9859, 5311, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10989261865615844, "compression_ratio": 1.7040816326530612, "no_caption_prob": 0.000148823979543522}, {"id": 187, "seek": 145300, "start": 1460.0, "end": 1467.0, "text": " Yeah. So this will benefit from having a type and this will benefit from being split into a different module.", "tokens": [50364, 1079, 13, 407, 562, 291, 483, 512, 1752, 11, 321, 486, 458, 341, 486, 643, 6334, 13, 50714, 50714, 865, 13, 407, 341, 486, 5121, 490, 1419, 257, 2010, 293, 341, 486, 5121, 490, 885, 7472, 666, 257, 819, 10088, 13, 51064, 51064, 1779, 13, 407, 291, 362, 264, 5121, 456, 13, 509, 445, 458, 309, 13, 51214, 51214, 7587, 13, 7587, 13, 509, 643, 281, 312, 4840, 729, 5327, 2361, 322, 729, 9859, 5311, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10989261865615844, "compression_ratio": 1.7040816326530612, "no_caption_prob": 0.000148823979543522}, {"id": 188, "seek": 145300, "start": 1467.0, "end": 1470.0, "text": " Right. So you have the benefit there. You just know it.", "tokens": [50364, 1079, 13, 407, 562, 291, 483, 512, 1752, 11, 321, 486, 458, 341, 486, 643, 6334, 13, 50714, 50714, 865, 13, 407, 341, 486, 5121, 490, 1419, 257, 2010, 293, 341, 486, 5121, 490, 885, 7472, 666, 257, 819, 10088, 13, 51064, 51064, 1779, 13, 407, 291, 362, 264, 5121, 456, 13, 509, 445, 458, 309, 13, 51214, 51214, 7587, 13, 7587, 13, 509, 643, 281, 312, 4840, 729, 5327, 2361, 322, 729, 9859, 5311, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10989261865615844, "compression_ratio": 1.7040816326530612, "no_caption_prob": 0.000148823979543522}, {"id": 189, "seek": 145300, "start": 1470.0, "end": 1477.0, "text": " Exactly. Exactly. You need to be driving those decisions based on those concrete benefits.", "tokens": [50364, 1079, 13, 407, 562, 291, 483, 512, 1752, 11, 321, 486, 458, 341, 486, 643, 6334, 13, 50714, 50714, 865, 13, 407, 341, 486, 5121, 490, 1419, 257, 2010, 293, 341, 486, 5121, 490, 885, 7472, 666, 257, 819, 10088, 13, 51064, 51064, 1779, 13, 407, 291, 362, 264, 5121, 456, 13, 509, 445, 458, 309, 13, 51214, 51214, 7587, 13, 7587, 13, 509, 643, 281, 312, 4840, 729, 5327, 2361, 322, 729, 9859, 5311, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10989261865615844, "compression_ratio": 1.7040816326530612, "no_caption_prob": 0.000148823979543522}, {"id": 190, "seek": 147700, "start": 1477.0, "end": 1489.0, "text": " Exactly. I completely agree. So one other technique that really helps you stay honest about getting real benefits from this is test driven development.", "tokens": [50364, 7587, 13, 286, 2584, 3986, 13, 407, 472, 661, 6532, 300, 534, 3665, 291, 1754, 3245, 466, 1242, 957, 5311, 490, 341, 307, 1500, 9555, 3250, 13, 50964, 50964, 759, 291, 434, 3579, 6921, 337, 746, 11, 291, 458, 11, 498, 291, 584, 411, 11, 1954, 11, 286, 3172, 300, 286, 500, 380, 458, 11, 286, 600, 658, 341, 8688, 5467, 293, 286, 11, 291, 458, 11, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06650480753938917, "compression_ratio": 1.5051546391752577, "no_caption_prob": 0.0002268987736897543}, {"id": 191, "seek": 147700, "start": 1489.0, "end": 1500.0, "text": " If you're writing tests for something, you know, if you say like, oh, I wish that I don't know, I've got this shopping cart and I, you know,", "tokens": [50364, 7587, 13, 286, 2584, 3986, 13, 407, 472, 661, 6532, 300, 534, 3665, 291, 1754, 3245, 466, 1242, 957, 5311, 490, 341, 307, 1500, 9555, 3250, 13, 50964, 50964, 759, 291, 434, 3579, 6921, 337, 746, 11, 291, 458, 11, 498, 291, 584, 411, 11, 1954, 11, 286, 3172, 300, 286, 500, 380, 458, 11, 286, 600, 658, 341, 8688, 5467, 293, 286, 11, 291, 458, 11, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06650480753938917, "compression_ratio": 1.5051546391752577, "no_caption_prob": 0.0002268987736897543}, {"id": 192, "seek": 150000, "start": 1500.0, "end": 1510.0, "text": " if I add two items, then it should change the count of the shopping cart items rather than adding a duplicate entry or, you know, whatever.", "tokens": [50364, 498, 286, 909, 732, 4754, 11, 550, 309, 820, 1319, 264, 1207, 295, 264, 8688, 5467, 4754, 2831, 813, 5127, 257, 23976, 8729, 420, 11, 291, 458, 11, 2035, 13, 50864, 50864, 663, 311, 746, 300, 291, 1391, 528, 281, 1500, 3332, 13, 509, 11, 291, 458, 11, 2464, 257, 4985, 1500, 700, 13, 51114, 51114, 400, 731, 11, 437, 366, 291, 516, 281, 1500, 3332, 30, 2260, 2135, 5893, 806, 76, 3991, 11, 291, 458, 11, 428, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1213228731270296, "compression_ratio": 1.614213197969543, "no_caption_prob": 4.399862518766895e-05}, {"id": 193, "seek": 150000, "start": 1510.0, "end": 1515.0, "text": " That's something that you probably want to test drive. You, you know, write a unit test first.", "tokens": [50364, 498, 286, 909, 732, 4754, 11, 550, 309, 820, 1319, 264, 1207, 295, 264, 8688, 5467, 4754, 2831, 813, 5127, 257, 23976, 8729, 420, 11, 291, 458, 11, 2035, 13, 50864, 50864, 663, 311, 746, 300, 291, 1391, 528, 281, 1500, 3332, 13, 509, 11, 291, 458, 11, 2464, 257, 4985, 1500, 700, 13, 51114, 51114, 400, 731, 11, 437, 366, 291, 516, 281, 1500, 3332, 30, 2260, 2135, 5893, 806, 76, 3991, 11, 291, 458, 11, 428, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1213228731270296, "compression_ratio": 1.614213197969543, "no_caption_prob": 4.399862518766895e-05}, {"id": 194, "seek": 150000, "start": 1515.0, "end": 1521.0, "text": " And well, what are you going to test drive? Your main dot elm file, you know, your.", "tokens": [50364, 498, 286, 909, 732, 4754, 11, 550, 309, 820, 1319, 264, 1207, 295, 264, 8688, 5467, 4754, 2831, 813, 5127, 257, 23976, 8729, 420, 11, 291, 458, 11, 2035, 13, 50864, 50864, 663, 311, 746, 300, 291, 1391, 528, 281, 1500, 3332, 13, 509, 11, 291, 458, 11, 2464, 257, 4985, 1500, 700, 13, 51114, 51114, 400, 731, 11, 437, 366, 291, 516, 281, 1500, 3332, 30, 2260, 2135, 5893, 806, 76, 3991, 11, 291, 458, 11, 428, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1213228731270296, "compression_ratio": 1.614213197969543, "no_caption_prob": 4.399862518766895e-05}, {"id": 195, "seek": 152100, "start": 1521.0, "end": 1532.0, "text": " Yeah. Like you're going to test drive a module. Actually, I often like to start with testing code that's directly in a test file.", "tokens": [50364, 865, 13, 1743, 291, 434, 516, 281, 1500, 3332, 257, 10088, 13, 5135, 11, 286, 2049, 411, 281, 722, 365, 4997, 3089, 300, 311, 3838, 294, 257, 1500, 3991, 13, 50914, 50914, 407, 309, 311, 445, 257, 2445, 294, 264, 1500, 3991, 13, 400, 550, 286, 8947, 300, 2445, 281, 257, 10088, 1564, 286, 600, 1333, 295, 5768, 309, 493, 293, 2614, 4997, 570, 300, 311, 264, 16998, 1823, 286, 393, 360, 281, 483, 257, 8437, 10995, 1500, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05081517437854445, "compression_ratio": 1.6333333333333333, "no_caption_prob": 0.00014200339501257986}, {"id": 196, "seek": 152100, "start": 1532.0, "end": 1545.0, "text": " So it's just a function in the test file. And then I extract that function to a module once I've sort of gotten it up and running testing because that's the smallest step I can do to get a passing meaningful test.", "tokens": [50364, 865, 13, 1743, 291, 434, 516, 281, 1500, 3332, 257, 10088, 13, 5135, 11, 286, 2049, 411, 281, 722, 365, 4997, 3089, 300, 311, 3838, 294, 257, 1500, 3991, 13, 50914, 50914, 407, 309, 311, 445, 257, 2445, 294, 264, 1500, 3991, 13, 400, 550, 286, 8947, 300, 2445, 281, 257, 10088, 1564, 286, 600, 1333, 295, 5768, 309, 493, 293, 2614, 4997, 570, 300, 311, 264, 16998, 1823, 286, 393, 360, 281, 483, 257, 8437, 10995, 1500, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05081517437854445, "compression_ratio": 1.6333333333333333, "no_caption_prob": 0.00014200339501257986}, {"id": 197, "seek": 154500, "start": 1545.0, "end": 1551.0, "text": " But that said, I think that, yeah, I mean, what are you going to test drive? Right. You're test driving a module.", "tokens": [50364, 583, 300, 848, 11, 286, 519, 300, 11, 1338, 11, 286, 914, 11, 437, 366, 291, 516, 281, 1500, 3332, 30, 1779, 13, 509, 434, 1500, 4840, 257, 10088, 13, 50664, 50664, 509, 727, 1500, 3332, 707, 14877, 6828, 13, 400, 457, 754, 294, 729, 3331, 11, 411, 689, 360, 729, 14877, 6828, 1621, 30, 50964, 50964, 509, 643, 281, 915, 257, 1280, 337, 552, 300, 291, 434, 516, 281, 1500, 13, 509, 434, 1391, 2839, 4174, 13, 51214, 51214, 12555, 4174, 11, 587, 13, 12555, 4174, 13, 509, 1391, 362, 411, 341, 3149, 340, 986, 3877, 1296, 428, 11, 291, 458, 11, 257, 10088, 293, 257, 1500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13546515777047757, "compression_ratio": 1.75, "no_caption_prob": 6.962089628359536e-06}, {"id": 198, "seek": 154500, "start": 1551.0, "end": 1557.0, "text": " You could test drive little utility functions. And but even in those cases, like where do those utility functions live?", "tokens": [50364, 583, 300, 848, 11, 286, 519, 300, 11, 1338, 11, 286, 914, 11, 437, 366, 291, 516, 281, 1500, 3332, 30, 1779, 13, 509, 434, 1500, 4840, 257, 10088, 13, 50664, 50664, 509, 727, 1500, 3332, 707, 14877, 6828, 13, 400, 457, 754, 294, 729, 3331, 11, 411, 689, 360, 729, 14877, 6828, 1621, 30, 50964, 50964, 509, 643, 281, 915, 257, 1280, 337, 552, 300, 291, 434, 516, 281, 1500, 13, 509, 434, 1391, 2839, 4174, 13, 51214, 51214, 12555, 4174, 11, 587, 13, 12555, 4174, 13, 509, 1391, 362, 411, 341, 3149, 340, 986, 3877, 1296, 428, 11, 291, 458, 11, 257, 10088, 293, 257, 1500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13546515777047757, "compression_ratio": 1.75, "no_caption_prob": 6.962089628359536e-06}, {"id": 199, "seek": 154500, "start": 1557.0, "end": 1562.0, "text": " You need to find a home for them that you're going to test. You're probably utils.", "tokens": [50364, 583, 300, 848, 11, 286, 519, 300, 11, 1338, 11, 286, 914, 11, 437, 366, 291, 516, 281, 1500, 3332, 30, 1779, 13, 509, 434, 1500, 4840, 257, 10088, 13, 50664, 50664, 509, 727, 1500, 3332, 707, 14877, 6828, 13, 400, 457, 754, 294, 729, 3331, 11, 411, 689, 360, 729, 14877, 6828, 1621, 30, 50964, 50964, 509, 643, 281, 915, 257, 1280, 337, 552, 300, 291, 434, 516, 281, 1500, 13, 509, 434, 1391, 2839, 4174, 13, 51214, 51214, 12555, 4174, 11, 587, 13, 12555, 4174, 13, 509, 1391, 362, 411, 341, 3149, 340, 986, 3877, 1296, 428, 11, 291, 458, 11, 257, 10088, 293, 257, 1500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13546515777047757, "compression_ratio": 1.75, "no_caption_prob": 6.962089628359536e-06}, {"id": 200, "seek": 154500, "start": 1562.0, "end": 1570.0, "text": " Utils, man. Utils. You probably have like this mirrored structure between your, you know, a module and a test.", "tokens": [50364, 583, 300, 848, 11, 286, 519, 300, 11, 1338, 11, 286, 914, 11, 437, 366, 291, 516, 281, 1500, 3332, 30, 1779, 13, 509, 434, 1500, 4840, 257, 10088, 13, 50664, 50664, 509, 727, 1500, 3332, 707, 14877, 6828, 13, 400, 457, 754, 294, 729, 3331, 11, 411, 689, 360, 729, 14877, 6828, 1621, 30, 50964, 50964, 509, 643, 281, 915, 257, 1280, 337, 552, 300, 291, 434, 516, 281, 1500, 13, 509, 434, 1391, 2839, 4174, 13, 51214, 51214, 12555, 4174, 11, 587, 13, 12555, 4174, 13, 509, 1391, 362, 411, 341, 3149, 340, 986, 3877, 1296, 428, 11, 291, 458, 11, 257, 10088, 293, 257, 1500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13546515777047757, "compression_ratio": 1.75, "no_caption_prob": 6.962089628359536e-06}, {"id": 201, "seek": 157000, "start": 1570.0, "end": 1581.0, "text": " There's always there's almost always a one to one mapping of those things for unit level tests, not necessarily for, you know, end to end or integration tests, not necessarily for program tests.", "tokens": [50364, 821, 311, 1009, 456, 311, 1920, 1009, 257, 472, 281, 472, 18350, 295, 729, 721, 337, 4985, 1496, 6921, 11, 406, 4725, 337, 11, 291, 458, 11, 917, 281, 917, 420, 10980, 6921, 11, 406, 4725, 337, 1461, 6921, 13, 50914, 50914, 1485, 917, 281, 917, 1500, 3991, 680, 10088, 13, 865, 13, 663, 311, 300, 311, 286, 500, 380, 534, 528, 281, 3811, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.18808464322771346, "compression_ratio": 1.6457142857142857, "no_caption_prob": 7.484185334760696e-05}, {"id": 202, "seek": 157000, "start": 1581.0, "end": 1593.0, "text": " One end to end test file per module. Yeah. That's that's I don't really want to imagine that.", "tokens": [50364, 821, 311, 1009, 456, 311, 1920, 1009, 257, 472, 281, 472, 18350, 295, 729, 721, 337, 4985, 1496, 6921, 11, 406, 4725, 337, 11, 291, 458, 11, 917, 281, 917, 420, 10980, 6921, 11, 406, 4725, 337, 1461, 6921, 13, 50914, 50914, 1485, 917, 281, 917, 1500, 3991, 680, 10088, 13, 865, 13, 663, 311, 300, 311, 286, 500, 380, 534, 528, 281, 3811, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.18808464322771346, "compression_ratio": 1.6457142857142857, "no_caption_prob": 7.484185334760696e-05}, {"id": 203, "seek": 159300, "start": 1593.0, "end": 1608.0, "text": " Integration test. Why not? Maybe. So another thing that talks about right at the beginning of the talk is in JavaScript, he says, or at least in other languages, you need to get the architecture right from the start or you're doomed.", "tokens": [50364, 47713, 1500, 13, 1545, 406, 30, 2704, 13, 407, 1071, 551, 300, 6686, 466, 558, 412, 264, 2863, 295, 264, 751, 307, 294, 15778, 11, 415, 1619, 11, 420, 412, 1935, 294, 661, 8650, 11, 291, 643, 281, 483, 264, 9482, 558, 490, 264, 722, 420, 291, 434, 33847, 13, 51114, 51114, 1079, 13, 400, 300, 307, 746, 300, 321, 360, 406, 841, 294, 264, 2699, 76, 1768, 570, 1895, 578, 3662, 307, 1858, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1190950900693483, "compression_ratio": 1.5348837209302326, "no_caption_prob": 2.8855902201030403e-05}, {"id": 204, "seek": 159300, "start": 1608.0, "end": 1616.0, "text": " Yes. And that is something that we do not feel in the Elm community because refactoring is easy.", "tokens": [50364, 47713, 1500, 13, 1545, 406, 30, 2704, 13, 407, 1071, 551, 300, 6686, 466, 558, 412, 264, 2863, 295, 264, 751, 307, 294, 15778, 11, 415, 1619, 11, 420, 412, 1935, 294, 661, 8650, 11, 291, 643, 281, 483, 264, 9482, 558, 490, 264, 722, 420, 291, 434, 33847, 13, 51114, 51114, 1079, 13, 400, 300, 307, 746, 300, 321, 360, 406, 841, 294, 264, 2699, 76, 1768, 570, 1895, 578, 3662, 307, 1858, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1190950900693483, "compression_ratio": 1.5348837209302326, "no_caption_prob": 2.8855902201030403e-05}, {"id": 205, "seek": 161600, "start": 1616.0, "end": 1629.0, "text": " And for bigger projects, I feel like that is true or truer than in other languages, but it's still quite a lot of work.", "tokens": [50364, 400, 337, 3801, 4455, 11, 286, 841, 411, 300, 307, 2074, 420, 504, 5486, 813, 294, 661, 8650, 11, 457, 309, 311, 920, 1596, 257, 688, 295, 589, 13, 51014, 51014, 1743, 498, 291, 362, 364, 9482, 300, 307, 8760, 25277, 294, 264, 3861, 11, 411, 291, 362, 257, 3262, 4714, 3876, 295, 3089, 293, 456, 311, 472, 9482, 300, 4474, 309, 439, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07865228372461655, "compression_ratio": 1.5792349726775956, "no_caption_prob": 2.2473650460597128e-05}, {"id": 206, "seek": 161600, "start": 1629.0, "end": 1640.0, "text": " Like if you have an architecture that is deeply rooted in the application, like you have a hundred thousand lines of code and there's one architecture that rules it all.", "tokens": [50364, 400, 337, 3801, 4455, 11, 286, 841, 411, 300, 307, 2074, 420, 504, 5486, 813, 294, 661, 8650, 11, 457, 309, 311, 920, 1596, 257, 688, 295, 589, 13, 51014, 51014, 1743, 498, 291, 362, 364, 9482, 300, 307, 8760, 25277, 294, 264, 3861, 11, 411, 291, 362, 257, 3262, 4714, 3876, 295, 3089, 293, 456, 311, 472, 9482, 300, 4474, 309, 439, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07865228372461655, "compression_ratio": 1.5792349726775956, "no_caption_prob": 2.2473650460597128e-05}, {"id": 207, "seek": 164000, "start": 1640.0, "end": 1650.0, "text": " Yeah, it will be very hard to refactor or it's not hard. It's tedious. It's long. It's going to be a work incentive.", "tokens": [50364, 865, 11, 309, 486, 312, 588, 1152, 281, 1895, 15104, 420, 309, 311, 406, 1152, 13, 467, 311, 38284, 13, 467, 311, 938, 13, 467, 311, 516, 281, 312, 257, 589, 22346, 13, 50864, 50864, 286, 411, 281, 519, 293, 281, 18312, 561, 281, 853, 309, 420, 2035, 436, 528, 281, 13, 51164, 51164, 1743, 11, 4177, 11, 360, 291, 519, 341, 307, 257, 665, 1558, 30, 1119, 309, 307, 309, 257, 665, 1558, 281, 751, 281, 452, 3086, 11, 452, 1716, 341, 636, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14757351393110296, "compression_ratio": 1.5842105263157895, "no_caption_prob": 9.167919051833451e-05}, {"id": 208, "seek": 164000, "start": 1650.0, "end": 1656.0, "text": " I like to think and to advise people to try it or whatever they want to.", "tokens": [50364, 865, 11, 309, 486, 312, 588, 1152, 281, 1895, 15104, 420, 309, 311, 406, 1152, 13, 467, 311, 38284, 13, 467, 311, 938, 13, 467, 311, 516, 281, 312, 257, 589, 22346, 13, 50864, 50864, 286, 411, 281, 519, 293, 281, 18312, 561, 281, 853, 309, 420, 2035, 436, 528, 281, 13, 51164, 51164, 1743, 11, 4177, 11, 360, 291, 519, 341, 307, 257, 665, 1558, 30, 1119, 309, 307, 309, 257, 665, 1558, 281, 751, 281, 452, 3086, 11, 452, 1716, 341, 636, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14757351393110296, "compression_ratio": 1.5842105263157895, "no_caption_prob": 9.167919051833451e-05}, {"id": 209, "seek": 164000, "start": 1656.0, "end": 1664.0, "text": " Like, hey, do you think this is a good idea? Is it is it a good idea to talk to my father, my project this way?", "tokens": [50364, 865, 11, 309, 486, 312, 588, 1152, 281, 1895, 15104, 420, 309, 311, 406, 1152, 13, 467, 311, 38284, 13, 467, 311, 938, 13, 467, 311, 516, 281, 312, 257, 589, 22346, 13, 50864, 50864, 286, 411, 281, 519, 293, 281, 18312, 561, 281, 853, 309, 420, 2035, 436, 528, 281, 13, 51164, 51164, 1743, 11, 4177, 11, 360, 291, 519, 341, 307, 257, 665, 1558, 30, 1119, 309, 307, 309, 257, 665, 1558, 281, 751, 281, 452, 3086, 11, 452, 1716, 341, 636, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14757351393110296, "compression_ratio": 1.5842105263157895, "no_caption_prob": 9.167919051833451e-05}, {"id": 210, "seek": 166400, "start": 1664.0, "end": 1670.0, "text": " And I usually tell them I would do it this way, but you know what? Try your try what you had in mind.", "tokens": [50364, 400, 286, 2673, 980, 552, 286, 576, 360, 309, 341, 636, 11, 457, 291, 458, 437, 30, 6526, 428, 853, 437, 291, 632, 294, 1575, 13, 50664, 50664, 400, 498, 309, 1177, 380, 589, 484, 11, 291, 393, 445, 1895, 15104, 309, 13, 440, 787, 551, 300, 286, 576, 584, 550, 307, 291, 643, 281, 312, 588, 4924, 295, 577, 428, 12050, 307, 1364, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08929946457130322, "compression_ratio": 1.4606741573033708, "no_caption_prob": 4.5387318095890805e-05}, {"id": 211, "seek": 166400, "start": 1670.0, "end": 1683.0, "text": " And if it doesn't work out, you can just refactor it. The only thing that I would say then is you need to be very critical of how your experiments is working.", "tokens": [50364, 400, 286, 2673, 980, 552, 286, 576, 360, 309, 341, 636, 11, 457, 291, 458, 437, 30, 6526, 428, 853, 437, 291, 632, 294, 1575, 13, 50664, 50664, 400, 498, 309, 1177, 380, 589, 484, 11, 291, 393, 445, 1895, 15104, 309, 13, 440, 787, 551, 300, 286, 576, 584, 550, 307, 291, 643, 281, 312, 588, 4924, 295, 577, 428, 12050, 307, 1364, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08929946457130322, "compression_ratio": 1.4606741573033708, "no_caption_prob": 4.5387318095890805e-05}, {"id": 212, "seek": 168300, "start": 1683.0, "end": 1700.0, "text": " I need to worry about that before it gets way too spread out. So before it gets the cornerstone of your whole application and where it would become still easy to change, but just very long and it would take you days or months of work.", "tokens": [50364, 286, 643, 281, 3292, 466, 300, 949, 309, 2170, 636, 886, 3974, 484, 13, 407, 949, 309, 2170, 264, 4538, 11243, 295, 428, 1379, 3861, 293, 689, 309, 576, 1813, 920, 1858, 281, 1319, 11, 457, 445, 588, 938, 293, 309, 576, 747, 291, 1708, 420, 2493, 295, 589, 13, 51214, 51214, 1779, 13, 1079, 13, 1079, 13, 663, 311, 257, 534, 665, 935, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14384108004362686, "compression_ratio": 1.5, "no_caption_prob": 2.2826880012871698e-05}, {"id": 213, "seek": 168300, "start": 1700.0, "end": 1705.0, "text": " Right. Yes. Yes. That's a really good point.", "tokens": [50364, 286, 643, 281, 3292, 466, 300, 949, 309, 2170, 636, 886, 3974, 484, 13, 407, 949, 309, 2170, 264, 4538, 11243, 295, 428, 1379, 3861, 293, 689, 309, 576, 1813, 920, 1858, 281, 1319, 11, 457, 445, 588, 938, 293, 309, 576, 747, 291, 1708, 420, 2493, 295, 589, 13, 51214, 51214, 1779, 13, 1079, 13, 1079, 13, 663, 311, 257, 534, 665, 935, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14384108004362686, "compression_ratio": 1.5, "no_caption_prob": 2.2826880012871698e-05}, {"id": 214, "seek": 170500, "start": 1705.0, "end": 1715.0, "text": " I think, you know, the other book club episodes we've been doing have been talking about these sort of more fixed qualities of code.", "tokens": [50364, 286, 519, 11, 291, 458, 11, 264, 661, 1446, 6482, 9313, 321, 600, 668, 884, 362, 668, 1417, 466, 613, 1333, 295, 544, 6806, 16477, 295, 3089, 13, 50864, 50864, 509, 458, 11, 437, 437, 360, 291, 574, 337, 382, 3089, 30, 708, 360, 291, 1286, 3030, 30, 51114, 51114, 400, 264, 993, 295, 264, 3991, 307, 544, 466, 264, 1399, 293, 437, 360, 729, 6082, 574, 411, 293, 577, 360, 291, 483, 456, 293, 577, 775, 309, 16693, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.10340372721354167, "compression_ratio": 1.6633663366336633, "no_caption_prob": 3.647642370196991e-05}, {"id": 215, "seek": 170500, "start": 1715.0, "end": 1720.0, "text": " You know, what what do you look for as code? What do you move towards?", "tokens": [50364, 286, 519, 11, 291, 458, 11, 264, 661, 1446, 6482, 9313, 321, 600, 668, 884, 362, 668, 1417, 466, 613, 1333, 295, 544, 6806, 16477, 295, 3089, 13, 50864, 50864, 509, 458, 11, 437, 437, 360, 291, 574, 337, 382, 3089, 30, 708, 360, 291, 1286, 3030, 30, 51114, 51114, 400, 264, 993, 295, 264, 3991, 307, 544, 466, 264, 1399, 293, 437, 360, 729, 6082, 574, 411, 293, 577, 360, 291, 483, 456, 293, 577, 775, 309, 16693, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.10340372721354167, "compression_ratio": 1.6633663366336633, "no_caption_prob": 3.647642370196991e-05}, {"id": 216, "seek": 170500, "start": 1720.0, "end": 1727.0, "text": " And the life of the file is more about the process and what do those tips look like and how do you get there and how does it evolve?", "tokens": [50364, 286, 519, 11, 291, 458, 11, 264, 661, 1446, 6482, 9313, 321, 600, 668, 884, 362, 668, 1417, 466, 613, 1333, 295, 544, 6806, 16477, 295, 3089, 13, 50864, 50864, 509, 458, 11, 437, 437, 360, 291, 574, 337, 382, 3089, 30, 708, 360, 291, 1286, 3030, 30, 51114, 51114, 400, 264, 993, 295, 264, 3991, 307, 544, 466, 264, 1399, 293, 437, 360, 729, 6082, 574, 411, 293, 577, 360, 291, 483, 456, 293, 577, 775, 309, 16693, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.10340372721354167, "compression_ratio": 1.6633663366336633, "no_caption_prob": 3.647642370196991e-05}, {"id": 217, "seek": 172700, "start": 1727.0, "end": 1743.0, "text": " And, you know, one of the things that I think is really important here, you know, is that as you're saying, that process requires you to be continually reflecting on what are the pain points?", "tokens": [50364, 400, 11, 291, 458, 11, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1021, 510, 11, 291, 458, 11, 307, 300, 382, 291, 434, 1566, 11, 300, 1399, 7029, 291, 281, 312, 22277, 23543, 322, 437, 366, 264, 1822, 2793, 30, 51164, 51164, 708, 366, 437, 366, 264, 2740, 321, 434, 2684, 3030, 30, 51314, 51314, 759, 264, 9482, 307, 516, 294, 294, 257, 3513, 300, 311, 516, 281, 2045, 257, 16725, 2929, 11, 291, 643, 281, 312, 6229, 3202, 281, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05488311702554876, "compression_ratio": 1.7023255813953488, "no_caption_prob": 3.943857518606819e-05}, {"id": 218, "seek": 172700, "start": 1743.0, "end": 1746.0, "text": " What are what are the problems we're moving towards?", "tokens": [50364, 400, 11, 291, 458, 11, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1021, 510, 11, 291, 458, 11, 307, 300, 382, 291, 434, 1566, 11, 300, 1399, 7029, 291, 281, 312, 22277, 23543, 322, 437, 366, 264, 1822, 2793, 30, 51164, 51164, 708, 366, 437, 366, 264, 2740, 321, 434, 2684, 3030, 30, 51314, 51314, 759, 264, 9482, 307, 516, 294, 294, 257, 3513, 300, 311, 516, 281, 2045, 257, 16725, 2929, 11, 291, 643, 281, 312, 6229, 3202, 281, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05488311702554876, "compression_ratio": 1.7023255813953488, "no_caption_prob": 3.943857518606819e-05}, {"id": 219, "seek": 172700, "start": 1746.0, "end": 1752.0, "text": " If the architecture is going in in a direction that's going to hit a brick wall, you need to be paying attention to that.", "tokens": [50364, 400, 11, 291, 458, 11, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1021, 510, 11, 291, 458, 11, 307, 300, 382, 291, 434, 1566, 11, 300, 1399, 7029, 291, 281, 312, 22277, 23543, 322, 437, 366, 264, 1822, 2793, 30, 51164, 51164, 708, 366, 437, 366, 264, 2740, 321, 434, 2684, 3030, 30, 51314, 51314, 759, 264, 9482, 307, 516, 294, 294, 257, 3513, 300, 311, 516, 281, 2045, 257, 16725, 2929, 11, 291, 643, 281, 312, 6229, 3202, 281, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05488311702554876, "compression_ratio": 1.7023255813953488, "no_caption_prob": 3.943857518606819e-05}, {"id": 220, "seek": 175200, "start": 1752.0, "end": 1759.0, "text": " And, you know, so I mean, Evan talks about avoiding premature abstractions, and I completely agree with that.", "tokens": [50364, 400, 11, 291, 458, 11, 370, 286, 914, 11, 22613, 6686, 466, 20220, 34877, 12649, 626, 11, 293, 286, 2584, 3986, 365, 300, 13, 50714, 50714, 286, 519, 264, 636, 286, 519, 466, 1895, 578, 3662, 307, 300, 291, 528, 1895, 15104, 1109, 281, 312, 264, 1822, 291, 841, 562, 291, 434, 1364, 365, 3089, 307, 411, 257, 5306, 13, 51314, 51314, 467, 311, 341, 5306, 300, 307, 257, 1850, 3701, 295, 437, 291, 643, 281, 360, 570, 264, 1822, 307, 3585, 291, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05227362707759557, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00023044516274239868}, {"id": 221, "seek": 175200, "start": 1759.0, "end": 1771.0, "text": " I think the way I think about refactoring is that you want refactorings to be the pain you feel when you're working with code is like a gift.", "tokens": [50364, 400, 11, 291, 458, 11, 370, 286, 914, 11, 22613, 6686, 466, 20220, 34877, 12649, 626, 11, 293, 286, 2584, 3986, 365, 300, 13, 50714, 50714, 286, 519, 264, 636, 286, 519, 466, 1895, 578, 3662, 307, 300, 291, 528, 1895, 15104, 1109, 281, 312, 264, 1822, 291, 841, 562, 291, 434, 1364, 365, 3089, 307, 411, 257, 5306, 13, 51314, 51314, 467, 311, 341, 5306, 300, 307, 257, 1850, 3701, 295, 437, 291, 643, 281, 360, 570, 264, 1822, 307, 3585, 291, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05227362707759557, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00023044516274239868}, {"id": 222, "seek": 175200, "start": 1771.0, "end": 1780.0, "text": " It's this gift that is a clear understanding of what you need to do because the pain is telling you something.", "tokens": [50364, 400, 11, 291, 458, 11, 370, 286, 914, 11, 22613, 6686, 466, 20220, 34877, 12649, 626, 11, 293, 286, 2584, 3986, 365, 300, 13, 50714, 50714, 286, 519, 264, 636, 286, 519, 466, 1895, 578, 3662, 307, 300, 291, 528, 1895, 15104, 1109, 281, 312, 264, 1822, 291, 841, 562, 291, 434, 1364, 365, 3089, 307, 411, 257, 5306, 13, 51314, 51314, 467, 311, 341, 5306, 300, 307, 257, 1850, 3701, 295, 437, 291, 643, 281, 360, 570, 264, 1822, 307, 3585, 291, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05227362707759557, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00023044516274239868}, {"id": 223, "seek": 178000, "start": 1780.0, "end": 1784.0, "text": " Right. I mean, that's what that's what pain is in our nervous system, too.", "tokens": [50364, 1779, 13, 286, 914, 11, 300, 311, 437, 300, 311, 437, 1822, 307, 294, 527, 6296, 1185, 11, 886, 13, 50564, 50564, 1779, 13, 759, 291, 362, 1822, 294, 428, 1676, 11, 291, 434, 411, 11, 16478, 11, 286, 1116, 1101, 574, 760, 412, 452, 1676, 570, 286, 519, 286, 643, 281, 1319, 746, 411, 11, 1954, 11, 286, 478, 16821, 322, 257, 28761, 13, 51014, 51014, 2264, 11, 286, 603, 5533, 452, 2671, 493, 293, 747, 264, 28761, 766, 13, 51214, 51214, 1743, 264, 1822, 307, 7750, 291, 257, 3636, 295, 746, 291, 820, 360, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07634483469594823, "compression_ratio": 1.6296296296296295, "no_caption_prob": 6.013960955897346e-05}, {"id": 224, "seek": 178000, "start": 1784.0, "end": 1793.0, "text": " Right. If you have pain in your leg, you're like, hmm, I'd better look down at my leg because I think I need to change something like, oh, I'm stepping on a Lego.", "tokens": [50364, 1779, 13, 286, 914, 11, 300, 311, 437, 300, 311, 437, 1822, 307, 294, 527, 6296, 1185, 11, 886, 13, 50564, 50564, 1779, 13, 759, 291, 362, 1822, 294, 428, 1676, 11, 291, 434, 411, 11, 16478, 11, 286, 1116, 1101, 574, 760, 412, 452, 1676, 570, 286, 519, 286, 643, 281, 1319, 746, 411, 11, 1954, 11, 286, 478, 16821, 322, 257, 28761, 13, 51014, 51014, 2264, 11, 286, 603, 5533, 452, 2671, 493, 293, 747, 264, 28761, 766, 13, 51214, 51214, 1743, 264, 1822, 307, 7750, 291, 257, 3636, 295, 746, 291, 820, 360, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07634483469594823, "compression_ratio": 1.6296296296296295, "no_caption_prob": 6.013960955897346e-05}, {"id": 225, "seek": 178000, "start": 1793.0, "end": 1797.0, "text": " OK, I'll lift my foot up and take the Lego off.", "tokens": [50364, 1779, 13, 286, 914, 11, 300, 311, 437, 300, 311, 437, 1822, 307, 294, 527, 6296, 1185, 11, 886, 13, 50564, 50564, 1779, 13, 759, 291, 362, 1822, 294, 428, 1676, 11, 291, 434, 411, 11, 16478, 11, 286, 1116, 1101, 574, 760, 412, 452, 1676, 570, 286, 519, 286, 643, 281, 1319, 746, 411, 11, 1954, 11, 286, 478, 16821, 322, 257, 28761, 13, 51014, 51014, 2264, 11, 286, 603, 5533, 452, 2671, 493, 293, 747, 264, 28761, 766, 13, 51214, 51214, 1743, 264, 1822, 307, 7750, 291, 257, 3636, 295, 746, 291, 820, 360, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07634483469594823, "compression_ratio": 1.6296296296296295, "no_caption_prob": 6.013960955897346e-05}, {"id": 226, "seek": 178000, "start": 1797.0, "end": 1802.0, "text": " Like the pain is sending you a message of something you should do.", "tokens": [50364, 1779, 13, 286, 914, 11, 300, 311, 437, 300, 311, 437, 1822, 307, 294, 527, 6296, 1185, 11, 886, 13, 50564, 50564, 1779, 13, 759, 291, 362, 1822, 294, 428, 1676, 11, 291, 434, 411, 11, 16478, 11, 286, 1116, 1101, 574, 760, 412, 452, 1676, 570, 286, 519, 286, 643, 281, 1319, 746, 411, 11, 1954, 11, 286, 478, 16821, 322, 257, 28761, 13, 51014, 51014, 2264, 11, 286, 603, 5533, 452, 2671, 493, 293, 747, 264, 28761, 766, 13, 51214, 51214, 1743, 264, 1822, 307, 7750, 291, 257, 3636, 295, 746, 291, 820, 360, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07634483469594823, "compression_ratio": 1.6296296296296295, "no_caption_prob": 6.013960955897346e-05}, {"id": 227, "seek": 180200, "start": 1802.0, "end": 1811.0, "text": " And then it turns out it was just pain in your elbow and you need acupuncture and that was a spooky action at a distance.", "tokens": [50364, 400, 550, 309, 4523, 484, 309, 390, 445, 1822, 294, 428, 18507, 293, 291, 643, 696, 34572, 42919, 293, 300, 390, 257, 30510, 3069, 412, 257, 4560, 13, 50814, 50814, 1738, 24091, 3069, 412, 257, 4560, 13, 865, 11, 456, 291, 352, 13, 50914, 50914, 407, 11, 731, 11, 291, 2138, 1338, 11, 498, 291, 600, 658, 428, 3089, 3096, 18721, 257, 1629, 636, 11, 291, 727, 2138, 362, 1822, 12354, 1348, 490, 490, 3190, 11868, 264, 4957, 13, 51414, 51414, 583, 1338, 11, 370, 729, 12354, 366, 366, 746, 291, 643, 281, 2140, 281, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11705530166625977, "compression_ratio": 1.7234042553191489, "no_caption_prob": 0.00010229572944808751}, {"id": 228, "seek": 180200, "start": 1811.0, "end": 1813.0, "text": " Spooky action at a distance. Yeah, there you go.", "tokens": [50364, 400, 550, 309, 4523, 484, 309, 390, 445, 1822, 294, 428, 18507, 293, 291, 643, 696, 34572, 42919, 293, 300, 390, 257, 30510, 3069, 412, 257, 4560, 13, 50814, 50814, 1738, 24091, 3069, 412, 257, 4560, 13, 865, 11, 456, 291, 352, 13, 50914, 50914, 407, 11, 731, 11, 291, 2138, 1338, 11, 498, 291, 600, 658, 428, 3089, 3096, 18721, 257, 1629, 636, 11, 291, 727, 2138, 362, 1822, 12354, 1348, 490, 490, 3190, 11868, 264, 4957, 13, 51414, 51414, 583, 1338, 11, 370, 729, 12354, 366, 366, 746, 291, 643, 281, 2140, 281, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11705530166625977, "compression_ratio": 1.7234042553191489, "no_caption_prob": 0.00010229572944808751}, {"id": 229, "seek": 180200, "start": 1813.0, "end": 1823.0, "text": " So, well, you definitely yeah, if you've got your code base arranged a certain way, you could definitely have pain signals coming from from places besides the origin.", "tokens": [50364, 400, 550, 309, 4523, 484, 309, 390, 445, 1822, 294, 428, 18507, 293, 291, 643, 696, 34572, 42919, 293, 300, 390, 257, 30510, 3069, 412, 257, 4560, 13, 50814, 50814, 1738, 24091, 3069, 412, 257, 4560, 13, 865, 11, 456, 291, 352, 13, 50914, 50914, 407, 11, 731, 11, 291, 2138, 1338, 11, 498, 291, 600, 658, 428, 3089, 3096, 18721, 257, 1629, 636, 11, 291, 727, 2138, 362, 1822, 12354, 1348, 490, 490, 3190, 11868, 264, 4957, 13, 51414, 51414, 583, 1338, 11, 370, 729, 12354, 366, 366, 746, 291, 643, 281, 2140, 281, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11705530166625977, "compression_ratio": 1.7234042553191489, "no_caption_prob": 0.00010229572944808751}, {"id": 230, "seek": 180200, "start": 1823.0, "end": 1827.0, "text": " But yeah, so those signals are are something you need to listen to.", "tokens": [50364, 400, 550, 309, 4523, 484, 309, 390, 445, 1822, 294, 428, 18507, 293, 291, 643, 696, 34572, 42919, 293, 300, 390, 257, 30510, 3069, 412, 257, 4560, 13, 50814, 50814, 1738, 24091, 3069, 412, 257, 4560, 13, 865, 11, 456, 291, 352, 13, 50914, 50914, 407, 11, 731, 11, 291, 2138, 1338, 11, 498, 291, 600, 658, 428, 3089, 3096, 18721, 257, 1629, 636, 11, 291, 727, 2138, 362, 1822, 12354, 1348, 490, 490, 3190, 11868, 264, 4957, 13, 51414, 51414, 583, 1338, 11, 370, 729, 12354, 366, 366, 746, 291, 643, 281, 2140, 281, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11705530166625977, "compression_ratio": 1.7234042553191489, "no_caption_prob": 0.00010229572944808751}, {"id": 231, "seek": 182700, "start": 1827.0, "end": 1839.0, "text": " Yeah. And if you don't make design decisions and refactorings based on those signals, then what you're doing is you're actually creating a type of technical debt.", "tokens": [50364, 865, 13, 400, 498, 291, 500, 380, 652, 1715, 5327, 293, 1895, 15104, 1109, 2361, 322, 729, 12354, 11, 550, 437, 291, 434, 884, 307, 291, 434, 767, 4084, 257, 2010, 295, 6191, 7831, 13, 50964, 50964, 3432, 519, 295, 6191, 7831, 2171, 382, 411, 264, 3089, 1943, 380, 2541, 1547, 13, 51214, 51214, 440, 3089, 1943, 380, 1895, 578, 2769, 13, 663, 311, 406, 437, 6191, 7831, 1355, 13, 51414, 51414, 35512, 7831, 1355, 300, 264, 12649, 626, 420, 5011, 295, 12649, 626, 366, 406, 8148, 437, 264, 3089, 307, 1382, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04714734626538826, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00017398041381966323}, {"id": 232, "seek": 182700, "start": 1839.0, "end": 1844.0, "text": " People think of technical debt sometimes as like the code isn't clean enough.", "tokens": [50364, 865, 13, 400, 498, 291, 500, 380, 652, 1715, 5327, 293, 1895, 15104, 1109, 2361, 322, 729, 12354, 11, 550, 437, 291, 434, 884, 307, 291, 434, 767, 4084, 257, 2010, 295, 6191, 7831, 13, 50964, 50964, 3432, 519, 295, 6191, 7831, 2171, 382, 411, 264, 3089, 1943, 380, 2541, 1547, 13, 51214, 51214, 440, 3089, 1943, 380, 1895, 578, 2769, 13, 663, 311, 406, 437, 6191, 7831, 1355, 13, 51414, 51414, 35512, 7831, 1355, 300, 264, 12649, 626, 420, 5011, 295, 12649, 626, 366, 406, 8148, 437, 264, 3089, 307, 1382, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04714734626538826, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00017398041381966323}, {"id": 233, "seek": 182700, "start": 1844.0, "end": 1848.0, "text": " The code isn't refactored. That's not what technical debt means.", "tokens": [50364, 865, 13, 400, 498, 291, 500, 380, 652, 1715, 5327, 293, 1895, 15104, 1109, 2361, 322, 729, 12354, 11, 550, 437, 291, 434, 884, 307, 291, 434, 767, 4084, 257, 2010, 295, 6191, 7831, 13, 50964, 50964, 3432, 519, 295, 6191, 7831, 2171, 382, 411, 264, 3089, 1943, 380, 2541, 1547, 13, 51214, 51214, 440, 3089, 1943, 380, 1895, 578, 2769, 13, 663, 311, 406, 437, 6191, 7831, 1355, 13, 51414, 51414, 35512, 7831, 1355, 300, 264, 12649, 626, 420, 5011, 295, 12649, 626, 366, 406, 8148, 437, 264, 3089, 307, 1382, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04714734626538826, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00017398041381966323}, {"id": 234, "seek": 182700, "start": 1848.0, "end": 1856.0, "text": " Technical debt means that the abstractions or lack of abstractions are not serving what the code is trying to do.", "tokens": [50364, 865, 13, 400, 498, 291, 500, 380, 652, 1715, 5327, 293, 1895, 15104, 1109, 2361, 322, 729, 12354, 11, 550, 437, 291, 434, 884, 307, 291, 434, 767, 4084, 257, 2010, 295, 6191, 7831, 13, 50964, 50964, 3432, 519, 295, 6191, 7831, 2171, 382, 411, 264, 3089, 1943, 380, 2541, 1547, 13, 51214, 51214, 440, 3089, 1943, 380, 1895, 578, 2769, 13, 663, 311, 406, 437, 6191, 7831, 1355, 13, 51414, 51414, 35512, 7831, 1355, 300, 264, 12649, 626, 420, 5011, 295, 12649, 626, 366, 406, 8148, 437, 264, 3089, 307, 1382, 281, 360, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04714734626538826, "compression_ratio": 1.837719298245614, "no_caption_prob": 0.00017398041381966323}, {"id": 235, "seek": 185600, "start": 1856.0, "end": 1860.0, "text": " So it's dependent on what the code is trying to achieve.", "tokens": [50364, 407, 309, 311, 12334, 322, 437, 264, 3089, 307, 1382, 281, 4584, 13, 50564, 50564, 400, 498, 291, 21685, 437, 264, 3089, 307, 516, 281, 360, 11, 550, 291, 434, 516, 281, 1884, 12649, 626, 300, 500, 380, 4596, 437, 264, 3089, 2203, 281, 360, 13, 50964, 50964, 814, 434, 406, 4420, 12649, 626, 13, 46853, 1897, 626, 366, 406, 27993, 665, 13, 51214, 51214, 46853, 1897, 626, 366, 27993, 1578, 11, 457, 300, 2063, 307, 18687, 538, 264, 2158, 436, 2893, 13, 51514, 51514, 583, 498, 436, 434, 406, 6530, 2158, 11, 550, 12649, 626, 366, 257, 2010, 295, 6191, 7831, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.019447362311532563, "compression_ratio": 1.9636363636363636, "no_caption_prob": 5.738545223721303e-05}, {"id": 236, "seek": 185600, "start": 1860.0, "end": 1868.0, "text": " And if you anticipate what the code is going to do, then you're going to create abstractions that don't serve what the code needs to do.", "tokens": [50364, 407, 309, 311, 12334, 322, 437, 264, 3089, 307, 1382, 281, 4584, 13, 50564, 50564, 400, 498, 291, 21685, 437, 264, 3089, 307, 516, 281, 360, 11, 550, 291, 434, 516, 281, 1884, 12649, 626, 300, 500, 380, 4596, 437, 264, 3089, 2203, 281, 360, 13, 50964, 50964, 814, 434, 406, 4420, 12649, 626, 13, 46853, 1897, 626, 366, 406, 27993, 665, 13, 51214, 51214, 46853, 1897, 626, 366, 27993, 1578, 11, 457, 300, 2063, 307, 18687, 538, 264, 2158, 436, 2893, 13, 51514, 51514, 583, 498, 436, 434, 406, 6530, 2158, 11, 550, 12649, 626, 366, 257, 2010, 295, 6191, 7831, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.019447362311532563, "compression_ratio": 1.9636363636363636, "no_caption_prob": 5.738545223721303e-05}, {"id": 237, "seek": 185600, "start": 1868.0, "end": 1873.0, "text": " They're not useful abstractions. Abstractions are not inherently good.", "tokens": [50364, 407, 309, 311, 12334, 322, 437, 264, 3089, 307, 1382, 281, 4584, 13, 50564, 50564, 400, 498, 291, 21685, 437, 264, 3089, 307, 516, 281, 360, 11, 550, 291, 434, 516, 281, 1884, 12649, 626, 300, 500, 380, 4596, 437, 264, 3089, 2203, 281, 360, 13, 50964, 50964, 814, 434, 406, 4420, 12649, 626, 13, 46853, 1897, 626, 366, 406, 27993, 665, 13, 51214, 51214, 46853, 1897, 626, 366, 27993, 1578, 11, 457, 300, 2063, 307, 18687, 538, 264, 2158, 436, 2893, 13, 51514, 51514, 583, 498, 436, 434, 406, 6530, 2158, 11, 550, 12649, 626, 366, 257, 2010, 295, 6191, 7831, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.019447362311532563, "compression_ratio": 1.9636363636363636, "no_caption_prob": 5.738545223721303e-05}, {"id": 238, "seek": 185600, "start": 1873.0, "end": 1879.0, "text": " Abstractions are inherently bad, but that cost is offset by the value they provide.", "tokens": [50364, 407, 309, 311, 12334, 322, 437, 264, 3089, 307, 1382, 281, 4584, 13, 50564, 50564, 400, 498, 291, 21685, 437, 264, 3089, 307, 516, 281, 360, 11, 550, 291, 434, 516, 281, 1884, 12649, 626, 300, 500, 380, 4596, 437, 264, 3089, 2203, 281, 360, 13, 50964, 50964, 814, 434, 406, 4420, 12649, 626, 13, 46853, 1897, 626, 366, 406, 27993, 665, 13, 51214, 51214, 46853, 1897, 626, 366, 27993, 1578, 11, 457, 300, 2063, 307, 18687, 538, 264, 2158, 436, 2893, 13, 51514, 51514, 583, 498, 436, 434, 406, 6530, 2158, 11, 550, 12649, 626, 366, 257, 2010, 295, 6191, 7831, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.019447362311532563, "compression_ratio": 1.9636363636363636, "no_caption_prob": 5.738545223721303e-05}, {"id": 239, "seek": 185600, "start": 1879.0, "end": 1884.0, "text": " But if they're not providing value, then abstractions are a type of technical debt.", "tokens": [50364, 407, 309, 311, 12334, 322, 437, 264, 3089, 307, 1382, 281, 4584, 13, 50564, 50564, 400, 498, 291, 21685, 437, 264, 3089, 307, 516, 281, 360, 11, 550, 291, 434, 516, 281, 1884, 12649, 626, 300, 500, 380, 4596, 437, 264, 3089, 2203, 281, 360, 13, 50964, 50964, 814, 434, 406, 4420, 12649, 626, 13, 46853, 1897, 626, 366, 406, 27993, 665, 13, 51214, 51214, 46853, 1897, 626, 366, 27993, 1578, 11, 457, 300, 2063, 307, 18687, 538, 264, 2158, 436, 2893, 13, 51514, 51514, 583, 498, 436, 434, 406, 6530, 2158, 11, 550, 12649, 626, 366, 257, 2010, 295, 6191, 7831, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.019447362311532563, "compression_ratio": 1.9636363636363636, "no_caption_prob": 5.738545223721303e-05}, {"id": 240, "seek": 188400, "start": 1884.0, "end": 1892.0, "text": " So, yeah. And if you abstract prematurely, then you're probably not having the proper abstraction.", "tokens": [50364, 407, 11, 1338, 13, 400, 498, 291, 12649, 34877, 356, 11, 550, 291, 434, 1391, 406, 1419, 264, 2296, 37765, 13, 50764, 50764, 1079, 11, 4412, 11, 6191, 32528, 13, 7587, 13, 50964, 50964, 509, 434, 4084, 257, 2010, 295, 37765, 597, 307, 8148, 364, 16590, 23267, 643, 11, 406, 364, 3539, 9859, 643, 13, 51414, 51414, 400, 370, 291, 434, 3700, 281, 312, 4084, 264, 3700, 1399, 307, 291, 1884, 364, 37765, 570, 291, 519, 291, 434, 516, 281, 362, 341, 643, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13800380446694113, "compression_ratio": 1.7321428571428572, "no_caption_prob": 0.0001293069071834907}, {"id": 241, "seek": 188400, "start": 1892.0, "end": 1896.0, "text": " Yes, therefore, technical debts. Exactly.", "tokens": [50364, 407, 11, 1338, 13, 400, 498, 291, 12649, 34877, 356, 11, 550, 291, 434, 1391, 406, 1419, 264, 2296, 37765, 13, 50764, 50764, 1079, 11, 4412, 11, 6191, 32528, 13, 7587, 13, 50964, 50964, 509, 434, 4084, 257, 2010, 295, 37765, 597, 307, 8148, 364, 16590, 23267, 643, 11, 406, 364, 3539, 9859, 643, 13, 51414, 51414, 400, 370, 291, 434, 3700, 281, 312, 4084, 264, 3700, 1399, 307, 291, 1884, 364, 37765, 570, 291, 519, 291, 434, 516, 281, 362, 341, 643, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13800380446694113, "compression_ratio": 1.7321428571428572, "no_caption_prob": 0.0001293069071834907}, {"id": 242, "seek": 188400, "start": 1896.0, "end": 1905.0, "text": " You're creating a type of abstraction which is serving an imagined anticipated need, not an actual concrete need.", "tokens": [50364, 407, 11, 1338, 13, 400, 498, 291, 12649, 34877, 356, 11, 550, 291, 434, 1391, 406, 1419, 264, 2296, 37765, 13, 50764, 50764, 1079, 11, 4412, 11, 6191, 32528, 13, 7587, 13, 50964, 50964, 509, 434, 4084, 257, 2010, 295, 37765, 597, 307, 8148, 364, 16590, 23267, 643, 11, 406, 364, 3539, 9859, 643, 13, 51414, 51414, 400, 370, 291, 434, 3700, 281, 312, 4084, 264, 3700, 1399, 307, 291, 1884, 364, 37765, 570, 291, 519, 291, 434, 516, 281, 362, 341, 643, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13800380446694113, "compression_ratio": 1.7321428571428572, "no_caption_prob": 0.0001293069071834907}, {"id": 243, "seek": 188400, "start": 1905.0, "end": 1913.0, "text": " And so you're likely to be creating the likely process is you create an abstraction because you think you're going to have this need.", "tokens": [50364, 407, 11, 1338, 13, 400, 498, 291, 12649, 34877, 356, 11, 550, 291, 434, 1391, 406, 1419, 264, 2296, 37765, 13, 50764, 50764, 1079, 11, 4412, 11, 6191, 32528, 13, 7587, 13, 50964, 50964, 509, 434, 4084, 257, 2010, 295, 37765, 597, 307, 8148, 364, 16590, 23267, 643, 11, 406, 364, 3539, 9859, 643, 13, 51414, 51414, 400, 370, 291, 434, 3700, 281, 312, 4084, 264, 3700, 1399, 307, 291, 1884, 364, 37765, 570, 291, 519, 291, 434, 516, 281, 362, 341, 643, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13800380446694113, "compression_ratio": 1.7321428571428572, "no_caption_prob": 0.0001293069071834907}, {"id": 244, "seek": 191300, "start": 1913.0, "end": 1917.0, "text": " You think your code is going to need to be generalized in this way.", "tokens": [50364, 509, 519, 428, 3089, 307, 516, 281, 643, 281, 312, 44498, 294, 341, 636, 13, 50564, 50564, 509, 1780, 915, 484, 428, 3089, 2203, 281, 312, 44498, 294, 341, 661, 7257, 356, 819, 636, 13, 50764, 50764, 663, 37765, 1177, 380, 854, 412, 439, 13, 509, 362, 281, 517, 12199, 300, 37765, 13, 50964, 50964, 509, 362, 281, 5366, 1071, 37765, 281, 5039, 300, 661, 1154, 13, 51114, 51114, 407, 300, 311, 437, 291, 528, 281, 5042, 13, 1779, 13, 407, 264, 1399, 307, 300, 291, 291, 1689, 3202, 281, 264, 1822, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07070791598447819, "compression_ratio": 1.8738317757009346, "no_caption_prob": 4.757502392749302e-05}, {"id": 245, "seek": 191300, "start": 1917.0, "end": 1921.0, "text": " You later find out your code needs to be generalized in this other subtly different way.", "tokens": [50364, 509, 519, 428, 3089, 307, 516, 281, 643, 281, 312, 44498, 294, 341, 636, 13, 50564, 50564, 509, 1780, 915, 484, 428, 3089, 2203, 281, 312, 44498, 294, 341, 661, 7257, 356, 819, 636, 13, 50764, 50764, 663, 37765, 1177, 380, 854, 412, 439, 13, 509, 362, 281, 517, 12199, 300, 37765, 13, 50964, 50964, 509, 362, 281, 5366, 1071, 37765, 281, 5039, 300, 661, 1154, 13, 51114, 51114, 407, 300, 311, 437, 291, 528, 281, 5042, 13, 1779, 13, 407, 264, 1399, 307, 300, 291, 291, 1689, 3202, 281, 264, 1822, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07070791598447819, "compression_ratio": 1.8738317757009346, "no_caption_prob": 4.757502392749302e-05}, {"id": 246, "seek": 191300, "start": 1921.0, "end": 1925.0, "text": " That abstraction doesn't help at all. You have to unwind that abstraction.", "tokens": [50364, 509, 519, 428, 3089, 307, 516, 281, 643, 281, 312, 44498, 294, 341, 636, 13, 50564, 50564, 509, 1780, 915, 484, 428, 3089, 2203, 281, 312, 44498, 294, 341, 661, 7257, 356, 819, 636, 13, 50764, 50764, 663, 37765, 1177, 380, 854, 412, 439, 13, 509, 362, 281, 517, 12199, 300, 37765, 13, 50964, 50964, 509, 362, 281, 5366, 1071, 37765, 281, 5039, 300, 661, 1154, 13, 51114, 51114, 407, 300, 311, 437, 291, 528, 281, 5042, 13, 1779, 13, 407, 264, 1399, 307, 300, 291, 291, 1689, 3202, 281, 264, 1822, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07070791598447819, "compression_ratio": 1.8738317757009346, "no_caption_prob": 4.757502392749302e-05}, {"id": 247, "seek": 191300, "start": 1925.0, "end": 1928.0, "text": " You have to introduce another abstraction to solve that other problem.", "tokens": [50364, 509, 519, 428, 3089, 307, 516, 281, 643, 281, 312, 44498, 294, 341, 636, 13, 50564, 50564, 509, 1780, 915, 484, 428, 3089, 2203, 281, 312, 44498, 294, 341, 661, 7257, 356, 819, 636, 13, 50764, 50764, 663, 37765, 1177, 380, 854, 412, 439, 13, 509, 362, 281, 517, 12199, 300, 37765, 13, 50964, 50964, 509, 362, 281, 5366, 1071, 37765, 281, 5039, 300, 661, 1154, 13, 51114, 51114, 407, 300, 311, 437, 291, 528, 281, 5042, 13, 1779, 13, 407, 264, 1399, 307, 300, 291, 291, 1689, 3202, 281, 264, 1822, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07070791598447819, "compression_ratio": 1.8738317757009346, "no_caption_prob": 4.757502392749302e-05}, {"id": 248, "seek": 191300, "start": 1928.0, "end": 1935.0, "text": " So that's what you want to avoid. Right. So the process is that you you pay attention to the pain.", "tokens": [50364, 509, 519, 428, 3089, 307, 516, 281, 643, 281, 312, 44498, 294, 341, 636, 13, 50564, 50564, 509, 1780, 915, 484, 428, 3089, 2203, 281, 312, 44498, 294, 341, 661, 7257, 356, 819, 636, 13, 50764, 50764, 663, 37765, 1177, 380, 854, 412, 439, 13, 509, 362, 281, 517, 12199, 300, 37765, 13, 50964, 50964, 509, 362, 281, 5366, 1071, 37765, 281, 5039, 300, 661, 1154, 13, 51114, 51114, 407, 300, 311, 437, 291, 528, 281, 5042, 13, 1779, 13, 407, 264, 1399, 307, 300, 291, 291, 1689, 3202, 281, 264, 1822, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07070791598447819, "compression_ratio": 1.8738317757009346, "no_caption_prob": 4.757502392749302e-05}, {"id": 249, "seek": 193500, "start": 1935.0, "end": 1945.0, "text": " But when you do have a clear signal that like, OK, I now know that we need to do this thing that our code is not well designed to do right now.", "tokens": [50364, 583, 562, 291, 360, 362, 257, 1850, 6358, 300, 411, 11, 2264, 11, 286, 586, 458, 300, 321, 643, 281, 360, 341, 551, 300, 527, 3089, 307, 406, 731, 4761, 281, 360, 558, 586, 13, 50864, 50864, 663, 311, 562, 291, 360, 746, 13, 663, 311, 562, 291, 747, 3069, 13, 50964, 50964, 759, 291, 500, 380, 360, 300, 11, 498, 291, 434, 406, 294, 264, 7164, 295, 21814, 300, 1822, 11, 1953, 466, 437, 309, 1355, 293, 1940, 11629, 3069, 294, 257, 1359, 1823, 11, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.03163456916809082, "compression_ratio": 1.697560975609756, "no_caption_prob": 5.828335997648537e-05}, {"id": 250, "seek": 193500, "start": 1945.0, "end": 1947.0, "text": " That's when you do something. That's when you take action.", "tokens": [50364, 583, 562, 291, 360, 362, 257, 1850, 6358, 300, 411, 11, 2264, 11, 286, 586, 458, 300, 321, 643, 281, 360, 341, 551, 300, 527, 3089, 307, 406, 731, 4761, 281, 360, 558, 586, 13, 50864, 50864, 663, 311, 562, 291, 360, 746, 13, 663, 311, 562, 291, 747, 3069, 13, 50964, 50964, 759, 291, 500, 380, 360, 300, 11, 498, 291, 434, 406, 294, 264, 7164, 295, 21814, 300, 1822, 11, 1953, 466, 437, 309, 1355, 293, 1940, 11629, 3069, 294, 257, 1359, 1823, 11, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.03163456916809082, "compression_ratio": 1.697560975609756, "no_caption_prob": 5.828335997648537e-05}, {"id": 251, "seek": 193500, "start": 1947.0, "end": 1958.0, "text": " If you don't do that, if you're not in the habit of noticing that pain, thinking about what it means and taking immediate action in a small step,", "tokens": [50364, 583, 562, 291, 360, 362, 257, 1850, 6358, 300, 411, 11, 2264, 11, 286, 586, 458, 300, 321, 643, 281, 360, 341, 551, 300, 527, 3089, 307, 406, 731, 4761, 281, 360, 558, 586, 13, 50864, 50864, 663, 311, 562, 291, 360, 746, 13, 663, 311, 562, 291, 747, 3069, 13, 50964, 50964, 759, 291, 500, 380, 360, 300, 11, 498, 291, 434, 406, 294, 264, 7164, 295, 21814, 300, 1822, 11, 1953, 466, 437, 309, 1355, 293, 1940, 11629, 3069, 294, 257, 1359, 1823, 11, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.03163456916809082, "compression_ratio": 1.697560975609756, "no_caption_prob": 5.828335997648537e-05}, {"id": 252, "seek": 195800, "start": 1958.0, "end": 1970.0, "text": " then your code base ends up, like you said, getting you into trouble where you hit these walls and now you've got to do a one month refactoring.", "tokens": [50364, 550, 428, 3089, 3096, 5314, 493, 11, 411, 291, 848, 11, 1242, 291, 666, 5253, 689, 291, 2045, 613, 7920, 293, 586, 291, 600, 658, 281, 360, 257, 472, 1618, 1895, 578, 3662, 13, 50964, 50964, 407, 562, 562, 291, 584, 420, 562, 22613, 1619, 500, 380, 1895, 15104, 11, 500, 380, 12649, 34877, 356, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09416255156199137, "compression_ratio": 1.5033112582781456, "no_caption_prob": 4.539628207567148e-05}, {"id": 253, "seek": 195800, "start": 1970.0, "end": 1979.0, "text": " So when when you say or when Evan says don't refactor, don't abstract prematurely.", "tokens": [50364, 550, 428, 3089, 3096, 5314, 493, 11, 411, 291, 848, 11, 1242, 291, 666, 5253, 689, 291, 2045, 613, 7920, 293, 586, 291, 600, 658, 281, 360, 257, 472, 1618, 1895, 578, 3662, 13, 50964, 50964, 407, 562, 562, 291, 584, 420, 562, 22613, 1619, 500, 380, 1895, 15104, 11, 500, 380, 12649, 34877, 356, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09416255156199137, "compression_ratio": 1.5033112582781456, "no_caption_prob": 4.539628207567148e-05}, {"id": 254, "seek": 197900, "start": 1979.0, "end": 1992.0, "text": " Often that will mean write something twice or make this look keep this looking ugly until you know that something should be abstracted one way or another.", "tokens": [50364, 20043, 300, 486, 914, 2464, 746, 6091, 420, 652, 341, 574, 1066, 341, 1237, 12246, 1826, 291, 458, 300, 746, 820, 312, 12649, 292, 472, 636, 420, 1071, 13, 51014, 51014, 407, 498, 291, 360, 300, 412, 512, 935, 11, 291, 486, 362, 300, 12246, 3089, 11, 300, 2107, 1895, 578, 2769, 3089, 11, 1310, 23976, 257, 3089, 13, 51414, 51414, 1079, 13, 583, 291, 486, 13, 583, 1564, 291, 915, 300, 37765, 11, 550, 291, 820, 12649, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1115247749146961, "compression_ratio": 1.7376237623762376, "no_caption_prob": 7.141281093936414e-05}, {"id": 255, "seek": 197900, "start": 1992.0, "end": 2000.0, "text": " So if you do that at some point, you will have that ugly code, that non refactored code, maybe duplicate a code.", "tokens": [50364, 20043, 300, 486, 914, 2464, 746, 6091, 420, 652, 341, 574, 1066, 341, 1237, 12246, 1826, 291, 458, 300, 746, 820, 312, 12649, 292, 472, 636, 420, 1071, 13, 51014, 51014, 407, 498, 291, 360, 300, 412, 512, 935, 11, 291, 486, 362, 300, 12246, 3089, 11, 300, 2107, 1895, 578, 2769, 3089, 11, 1310, 23976, 257, 3089, 13, 51414, 51414, 1079, 13, 583, 291, 486, 13, 583, 1564, 291, 915, 300, 37765, 11, 550, 291, 820, 12649, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1115247749146961, "compression_ratio": 1.7376237623762376, "no_caption_prob": 7.141281093936414e-05}, {"id": 256, "seek": 197900, "start": 2000.0, "end": 2007.0, "text": " Yes. But you will. But once you find that abstraction, then you should abstract it.", "tokens": [50364, 20043, 300, 486, 914, 2464, 746, 6091, 420, 652, 341, 574, 1066, 341, 1237, 12246, 1826, 291, 458, 300, 746, 820, 312, 12649, 292, 472, 636, 420, 1071, 13, 51014, 51014, 407, 498, 291, 360, 300, 412, 512, 935, 11, 291, 486, 362, 300, 12246, 3089, 11, 300, 2107, 1895, 578, 2769, 3089, 11, 1310, 23976, 257, 3089, 13, 51414, 51414, 1079, 13, 583, 291, 486, 13, 583, 1564, 291, 915, 300, 37765, 11, 550, 291, 820, 12649, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1115247749146961, "compression_ratio": 1.7376237623762376, "no_caption_prob": 7.141281093936414e-05}, {"id": 257, "seek": 200700, "start": 2007.0, "end": 2012.0, "text": " But you will have created technical debts because you should have abstracted.", "tokens": [50364, 583, 291, 486, 362, 2942, 6191, 32528, 570, 291, 820, 362, 12649, 292, 13, 50614, 50614, 583, 309, 311, 445, 746, 300, 291, 362, 281, 1689, 6063, 13, 50864, 50864, 407, 2139, 291, 1689, 264, 6191, 32528, 30264, 538, 884, 264, 558, 37765, 420, 291, 360, 309, 934, 264, 1186, 538, 3806, 13, 51464, 51464, 583, 309, 311, 920, 12284, 813, 884, 264, 2085, 37765, 700, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09749207698123556, "compression_ratio": 1.7277777777777779, "no_caption_prob": 0.00019715454254765064}, {"id": 258, "seek": 200700, "start": 2012.0, "end": 2017.0, "text": " But it's just something that you have to pay somehow.", "tokens": [50364, 583, 291, 486, 362, 2942, 6191, 32528, 570, 291, 820, 362, 12649, 292, 13, 50614, 50614, 583, 309, 311, 445, 746, 300, 291, 362, 281, 1689, 6063, 13, 50864, 50864, 407, 2139, 291, 1689, 264, 6191, 32528, 30264, 538, 884, 264, 558, 37765, 420, 291, 360, 309, 934, 264, 1186, 538, 3806, 13, 51464, 51464, 583, 309, 311, 920, 12284, 813, 884, 264, 2085, 37765, 700, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09749207698123556, "compression_ratio": 1.7277777777777779, "no_caption_prob": 0.00019715454254765064}, {"id": 259, "seek": 200700, "start": 2017.0, "end": 2029.0, "text": " So either you pay the technical debts upfront by doing the right abstraction or you do it after the fact by waiting.", "tokens": [50364, 583, 291, 486, 362, 2942, 6191, 32528, 570, 291, 820, 362, 12649, 292, 13, 50614, 50614, 583, 309, 311, 445, 746, 300, 291, 362, 281, 1689, 6063, 13, 50864, 50864, 407, 2139, 291, 1689, 264, 6191, 32528, 30264, 538, 884, 264, 558, 37765, 420, 291, 360, 309, 934, 264, 1186, 538, 3806, 13, 51464, 51464, 583, 309, 311, 920, 12284, 813, 884, 264, 2085, 37765, 700, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09749207698123556, "compression_ratio": 1.7277777777777779, "no_caption_prob": 0.00019715454254765064}, {"id": 260, "seek": 200700, "start": 2029.0, "end": 2034.0, "text": " But it's still cheaper than doing the wrong abstraction first.", "tokens": [50364, 583, 291, 486, 362, 2942, 6191, 32528, 570, 291, 820, 362, 12649, 292, 13, 50614, 50614, 583, 309, 311, 445, 746, 300, 291, 362, 281, 1689, 6063, 13, 50864, 50864, 407, 2139, 291, 1689, 264, 6191, 32528, 30264, 538, 884, 264, 558, 37765, 420, 291, 360, 309, 934, 264, 1186, 538, 3806, 13, 51464, 51464, 583, 309, 311, 920, 12284, 813, 884, 264, 2085, 37765, 700, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09749207698123556, "compression_ratio": 1.7277777777777779, "no_caption_prob": 0.00019715454254765064}, {"id": 261, "seek": 203400, "start": 2034.0, "end": 2046.0, "text": " Yeah. Yeah. I mean, one thing I think about is, you know, sometimes I see people like extracting functions before before it's used multiple times.", "tokens": [50364, 865, 13, 865, 13, 286, 914, 11, 472, 551, 286, 519, 466, 307, 11, 291, 458, 11, 2171, 286, 536, 561, 411, 49844, 6828, 949, 949, 309, 311, 1143, 3866, 1413, 13, 50964, 50964, 583, 949, 309, 311, 1143, 3866, 1413, 11, 577, 360, 291, 458, 437, 264, 2445, 2203, 281, 574, 411, 30, 51214, 51214, 708, 577, 360, 291, 458, 437, 309, 307, 30, 1012, 360, 291, 458, 437, 746, 307, 949, 309, 2314, 732, 420, 1045, 1413, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08172353108723958, "compression_ratio": 1.8486486486486486, "no_caption_prob": 0.00018232506408821791}, {"id": 262, "seek": 203400, "start": 2046.0, "end": 2051.0, "text": " But before it's used multiple times, how do you know what the function needs to look like?", "tokens": [50364, 865, 13, 865, 13, 286, 914, 11, 472, 551, 286, 519, 466, 307, 11, 291, 458, 11, 2171, 286, 536, 561, 411, 49844, 6828, 949, 949, 309, 311, 1143, 3866, 1413, 13, 50964, 50964, 583, 949, 309, 311, 1143, 3866, 1413, 11, 577, 360, 291, 458, 437, 264, 2445, 2203, 281, 574, 411, 30, 51214, 51214, 708, 577, 360, 291, 458, 437, 309, 307, 30, 1012, 360, 291, 458, 437, 746, 307, 949, 309, 2314, 732, 420, 1045, 1413, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08172353108723958, "compression_ratio": 1.8486486486486486, "no_caption_prob": 0.00018232506408821791}, {"id": 263, "seek": 203400, "start": 2051.0, "end": 2057.0, "text": " What how do you know what it is? How do you know what something is before it happens two or three times?", "tokens": [50364, 865, 13, 865, 13, 286, 914, 11, 472, 551, 286, 519, 466, 307, 11, 291, 458, 11, 2171, 286, 536, 561, 411, 49844, 6828, 949, 949, 309, 311, 1143, 3866, 1413, 13, 50964, 50964, 583, 949, 309, 311, 1143, 3866, 1413, 11, 577, 360, 291, 458, 437, 264, 2445, 2203, 281, 574, 411, 30, 51214, 51214, 708, 577, 360, 291, 458, 437, 309, 307, 30, 1012, 360, 291, 458, 437, 746, 307, 949, 309, 2314, 732, 420, 1045, 1413, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08172353108723958, "compression_ratio": 1.8486486486486486, "no_caption_prob": 0.00018232506408821791}, {"id": 264, "seek": 205700, "start": 2057.0, "end": 2067.0, "text": " So I think that, you know, sometimes I will intentionally introduce duplication so that I can step back and say, hmm, what does this want to be?", "tokens": [50364, 407, 286, 519, 300, 11, 291, 458, 11, 2171, 286, 486, 22062, 5366, 17154, 399, 370, 300, 286, 393, 1823, 646, 293, 584, 11, 16478, 11, 437, 775, 341, 528, 281, 312, 30, 50864, 50864, 708, 37765, 307, 341, 1237, 337, 365, 3539, 9859, 5110, 300, 980, 385, 300, 1589, 30, 51214, 51214, 4803, 286, 2171, 286, 841, 411, 561, 561, 366, 10532, 570, 264, 636, 286, 1895, 15104, 307, 2139, 886, 3469, 337, 552, 420, 886, 2321, 337, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03657880951376522, "compression_ratio": 1.6594827586206897, "no_caption_prob": 2.7106083507533185e-05}, {"id": 265, "seek": 205700, "start": 2067.0, "end": 2074.0, "text": " What abstraction is this looking for with actual concrete examples that tell me that information?", "tokens": [50364, 407, 286, 519, 300, 11, 291, 458, 11, 2171, 286, 486, 22062, 5366, 17154, 399, 370, 300, 286, 393, 1823, 646, 293, 584, 11, 16478, 11, 437, 775, 341, 528, 281, 312, 30, 50864, 50864, 708, 37765, 307, 341, 1237, 337, 365, 3539, 9859, 5110, 300, 980, 385, 300, 1589, 30, 51214, 51214, 4803, 286, 2171, 286, 841, 411, 561, 561, 366, 10532, 570, 264, 636, 286, 1895, 15104, 307, 2139, 886, 3469, 337, 552, 420, 886, 2321, 337, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03657880951376522, "compression_ratio": 1.6594827586206897, "no_caption_prob": 2.7106083507533185e-05}, {"id": 266, "seek": 205700, "start": 2074.0, "end": 2085.0, "text": " Sometimes I sometimes I feel like people people are uncomfortable because the way I refactor is either too late for them or too soon for them.", "tokens": [50364, 407, 286, 519, 300, 11, 291, 458, 11, 2171, 286, 486, 22062, 5366, 17154, 399, 370, 300, 286, 393, 1823, 646, 293, 584, 11, 16478, 11, 437, 775, 341, 528, 281, 312, 30, 50864, 50864, 708, 37765, 307, 341, 1237, 337, 365, 3539, 9859, 5110, 300, 980, 385, 300, 1589, 30, 51214, 51214, 4803, 286, 2171, 286, 841, 411, 561, 561, 366, 10532, 570, 264, 636, 286, 1895, 15104, 307, 2139, 886, 3469, 337, 552, 420, 886, 2321, 337, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03657880951376522, "compression_ratio": 1.6594827586206897, "no_caption_prob": 2.7106083507533185e-05}, {"id": 267, "seek": 208500, "start": 2085.0, "end": 2089.0, "text": " Ironically, both both things happen.", "tokens": [50364, 13720, 984, 11, 1293, 1293, 721, 1051, 13, 50564, 50564, 509, 458, 11, 2171, 561, 366, 10532, 300, 411, 11, 4659, 380, 321, 2541, 341, 3089, 493, 30, 50814, 50814, 1743, 11, 731, 11, 286, 500, 380, 519, 309, 311, 257, 1154, 1939, 13, 961, 311, 718, 311, 411, 718, 311, 2573, 484, 437, 341, 2445, 820, 312, 1219, 13, 51164, 51164, 286, 478, 406, 534, 988, 1939, 13, 961, 311, 976, 309, 257, 14925, 1315, 570, 286, 500, 380, 2673, 1888, 1755, 13, 51464, 51464, 865, 11, 286, 2673, 360, 746, 13, 663, 311, 452, 352, 281, 13, 2188, 561, 360, 16814, 1459, 384, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.096722412109375, "compression_ratio": 1.624, "no_caption_prob": 0.00010888751421589404}, {"id": 268, "seek": 208500, "start": 2089.0, "end": 2094.0, "text": " You know, sometimes people are uncomfortable that like, shouldn't we clean this code up?", "tokens": [50364, 13720, 984, 11, 1293, 1293, 721, 1051, 13, 50564, 50564, 509, 458, 11, 2171, 561, 366, 10532, 300, 411, 11, 4659, 380, 321, 2541, 341, 3089, 493, 30, 50814, 50814, 1743, 11, 731, 11, 286, 500, 380, 519, 309, 311, 257, 1154, 1939, 13, 961, 311, 718, 311, 411, 718, 311, 2573, 484, 437, 341, 2445, 820, 312, 1219, 13, 51164, 51164, 286, 478, 406, 534, 988, 1939, 13, 961, 311, 976, 309, 257, 14925, 1315, 570, 286, 500, 380, 2673, 1888, 1755, 13, 51464, 51464, 865, 11, 286, 2673, 360, 746, 13, 663, 311, 452, 352, 281, 13, 2188, 561, 360, 16814, 1459, 384, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.096722412109375, "compression_ratio": 1.624, "no_caption_prob": 0.00010888751421589404}, {"id": 269, "seek": 208500, "start": 2094.0, "end": 2101.0, "text": " Like, well, I don't think it's a problem yet. Let's let's like let's figure out what this function should be called.", "tokens": [50364, 13720, 984, 11, 1293, 1293, 721, 1051, 13, 50564, 50564, 509, 458, 11, 2171, 561, 366, 10532, 300, 411, 11, 4659, 380, 321, 2541, 341, 3089, 493, 30, 50814, 50814, 1743, 11, 731, 11, 286, 500, 380, 519, 309, 311, 257, 1154, 1939, 13, 961, 311, 718, 311, 411, 718, 311, 2573, 484, 437, 341, 2445, 820, 312, 1219, 13, 51164, 51164, 286, 478, 406, 534, 988, 1939, 13, 961, 311, 976, 309, 257, 14925, 1315, 570, 286, 500, 380, 2673, 1888, 1755, 13, 51464, 51464, 865, 11, 286, 2673, 360, 746, 13, 663, 311, 452, 352, 281, 13, 2188, 561, 360, 16814, 1459, 384, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.096722412109375, "compression_ratio": 1.624, "no_caption_prob": 0.00010888751421589404}, {"id": 270, "seek": 208500, "start": 2101.0, "end": 2107.0, "text": " I'm not really sure yet. Let's give it a nonsense name because I don't usually pick food.", "tokens": [50364, 13720, 984, 11, 1293, 1293, 721, 1051, 13, 50564, 50564, 509, 458, 11, 2171, 561, 366, 10532, 300, 411, 11, 4659, 380, 321, 2541, 341, 3089, 493, 30, 50814, 50814, 1743, 11, 731, 11, 286, 500, 380, 519, 309, 311, 257, 1154, 1939, 13, 961, 311, 718, 311, 411, 718, 311, 2573, 484, 437, 341, 2445, 820, 312, 1219, 13, 51164, 51164, 286, 478, 406, 534, 988, 1939, 13, 961, 311, 976, 309, 257, 14925, 1315, 570, 286, 500, 380, 2673, 1888, 1755, 13, 51464, 51464, 865, 11, 286, 2673, 360, 746, 13, 663, 311, 452, 352, 281, 13, 2188, 561, 360, 16814, 1459, 384, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.096722412109375, "compression_ratio": 1.624, "no_caption_prob": 0.00010888751421589404}, {"id": 271, "seek": 208500, "start": 2107.0, "end": 2111.0, "text": " Yeah, I usually do something. That's my go to. Some people do applesauce.", "tokens": [50364, 13720, 984, 11, 1293, 1293, 721, 1051, 13, 50564, 50564, 509, 458, 11, 2171, 561, 366, 10532, 300, 411, 11, 4659, 380, 321, 2541, 341, 3089, 493, 30, 50814, 50814, 1743, 11, 731, 11, 286, 500, 380, 519, 309, 311, 257, 1154, 1939, 13, 961, 311, 718, 311, 411, 718, 311, 2573, 484, 437, 341, 2445, 820, 312, 1219, 13, 51164, 51164, 286, 478, 406, 534, 988, 1939, 13, 961, 311, 976, 309, 257, 14925, 1315, 570, 286, 500, 380, 2673, 1888, 1755, 13, 51464, 51464, 865, 11, 286, 2673, 360, 746, 13, 663, 311, 452, 352, 281, 13, 2188, 561, 360, 16814, 1459, 384, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.096722412109375, "compression_ratio": 1.624, "no_caption_prob": 0.00010888751421589404}, {"id": 272, "seek": 211100, "start": 2111.0, "end": 2119.0, "text": " I've heard applesauce because it makes it very obvious that, you know, you need to come back and clean it up.", "tokens": [50364, 286, 600, 2198, 16814, 1459, 384, 570, 309, 1669, 309, 588, 6322, 300, 11, 291, 458, 11, 291, 643, 281, 808, 646, 293, 2541, 309, 493, 13, 50764, 50764, 583, 11, 291, 458, 11, 370, 2171, 286, 603, 1333, 295, 718, 721, 1394, 322, 264, 646, 36116, 257, 707, 857, 370, 286, 393, 808, 646, 281, 309, 562, 286, 362, 544, 16992, 322, 322, 437, 37765, 307, 2978, 420, 437, 746, 820, 312, 1219, 13, 51364, 51364, 400, 2171, 300, 1669, 561, 841, 10532, 13, 1743, 11, 4659, 380, 321, 2541, 341, 493, 30, 51564, 51564, 1743, 11, 286, 1116, 411, 281, 718, 309, 1394, 456, 293, 841, 264, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06480621669603431, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.8057880879496224e-05}, {"id": 273, "seek": 211100, "start": 2119.0, "end": 2131.0, "text": " But, you know, so sometimes I'll sort of let things sit on the back burner a little bit so I can come back to it when I have more clarity on on what abstraction is needed or what something should be called.", "tokens": [50364, 286, 600, 2198, 16814, 1459, 384, 570, 309, 1669, 309, 588, 6322, 300, 11, 291, 458, 11, 291, 643, 281, 808, 646, 293, 2541, 309, 493, 13, 50764, 50764, 583, 11, 291, 458, 11, 370, 2171, 286, 603, 1333, 295, 718, 721, 1394, 322, 264, 646, 36116, 257, 707, 857, 370, 286, 393, 808, 646, 281, 309, 562, 286, 362, 544, 16992, 322, 322, 437, 37765, 307, 2978, 420, 437, 746, 820, 312, 1219, 13, 51364, 51364, 400, 2171, 300, 1669, 561, 841, 10532, 13, 1743, 11, 4659, 380, 321, 2541, 341, 493, 30, 51564, 51564, 1743, 11, 286, 1116, 411, 281, 718, 309, 1394, 456, 293, 841, 264, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06480621669603431, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.8057880879496224e-05}, {"id": 274, "seek": 211100, "start": 2131.0, "end": 2135.0, "text": " And sometimes that makes people feel uncomfortable. Like, shouldn't we clean this up?", "tokens": [50364, 286, 600, 2198, 16814, 1459, 384, 570, 309, 1669, 309, 588, 6322, 300, 11, 291, 458, 11, 291, 643, 281, 808, 646, 293, 2541, 309, 493, 13, 50764, 50764, 583, 11, 291, 458, 11, 370, 2171, 286, 603, 1333, 295, 718, 721, 1394, 322, 264, 646, 36116, 257, 707, 857, 370, 286, 393, 808, 646, 281, 309, 562, 286, 362, 544, 16992, 322, 322, 437, 37765, 307, 2978, 420, 437, 746, 820, 312, 1219, 13, 51364, 51364, 400, 2171, 300, 1669, 561, 841, 10532, 13, 1743, 11, 4659, 380, 321, 2541, 341, 493, 30, 51564, 51564, 1743, 11, 286, 1116, 411, 281, 718, 309, 1394, 456, 293, 841, 264, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06480621669603431, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.8057880879496224e-05}, {"id": 275, "seek": 211100, "start": 2135.0, "end": 2139.0, "text": " Like, I'd like to let it sit there and feel the pain.", "tokens": [50364, 286, 600, 2198, 16814, 1459, 384, 570, 309, 1669, 309, 588, 6322, 300, 11, 291, 458, 11, 291, 643, 281, 808, 646, 293, 2541, 309, 493, 13, 50764, 50764, 583, 11, 291, 458, 11, 370, 2171, 286, 603, 1333, 295, 718, 721, 1394, 322, 264, 646, 36116, 257, 707, 857, 370, 286, 393, 808, 646, 281, 309, 562, 286, 362, 544, 16992, 322, 322, 437, 37765, 307, 2978, 420, 437, 746, 820, 312, 1219, 13, 51364, 51364, 400, 2171, 300, 1669, 561, 841, 10532, 13, 1743, 11, 4659, 380, 321, 2541, 341, 493, 30, 51564, 51564, 1743, 11, 286, 1116, 411, 281, 718, 309, 1394, 456, 293, 841, 264, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06480621669603431, "compression_ratio": 1.6826568265682658, "no_caption_prob": 1.8057880879496224e-05}, {"id": 276, "seek": 213900, "start": 2139.0, "end": 2146.0, "text": " Sometimes I think I make people feel uncomfortable because I'm like, OK, let's refactor this and commit it and push it to production.", "tokens": [50364, 4803, 286, 519, 286, 652, 561, 841, 10532, 570, 286, 478, 411, 11, 2264, 11, 718, 311, 1895, 15104, 341, 293, 5599, 309, 293, 2944, 309, 281, 4265, 13, 50714, 50714, 286, 437, 411, 457, 411, 321, 434, 1364, 322, 341, 13, 286, 458, 13, 583, 411, 586, 286, 536, 257, 1101, 1315, 13, 50964, 50964, 823, 718, 311, 5374, 300, 293, 1319, 309, 558, 586, 13, 400, 300, 311, 577, 300, 311, 577, 286, 411, 281, 589, 11, 570, 286, 519, 300, 309, 4045, 291, 281, 841, 264, 1822, 281, 854, 291, 1223, 1101, 437, 12649, 626, 366, 2978, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08007856096540178, "compression_ratio": 1.6653386454183268, "no_caption_prob": 0.00014651256788056344}, {"id": 277, "seek": 213900, "start": 2146.0, "end": 2151.0, "text": " I what like but like we're working on this. I know. But like now I see a better name.", "tokens": [50364, 4803, 286, 519, 286, 652, 561, 841, 10532, 570, 286, 478, 411, 11, 2264, 11, 718, 311, 1895, 15104, 341, 293, 5599, 309, 293, 2944, 309, 281, 4265, 13, 50714, 50714, 286, 437, 411, 457, 411, 321, 434, 1364, 322, 341, 13, 286, 458, 13, 583, 411, 586, 286, 536, 257, 1101, 1315, 13, 50964, 50964, 823, 718, 311, 5374, 300, 293, 1319, 309, 558, 586, 13, 400, 300, 311, 577, 300, 311, 577, 286, 411, 281, 589, 11, 570, 286, 519, 300, 309, 4045, 291, 281, 841, 264, 1822, 281, 854, 291, 1223, 1101, 437, 12649, 626, 366, 2978, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08007856096540178, "compression_ratio": 1.6653386454183268, "no_caption_prob": 0.00014651256788056344}, {"id": 278, "seek": 213900, "start": 2151.0, "end": 2164.0, "text": " Now let's ship that and change it right now. And that's how that's how I like to work, because I think that it allows you to feel the pain to help you understand better what abstractions are needed.", "tokens": [50364, 4803, 286, 519, 286, 652, 561, 841, 10532, 570, 286, 478, 411, 11, 2264, 11, 718, 311, 1895, 15104, 341, 293, 5599, 309, 293, 2944, 309, 281, 4265, 13, 50714, 50714, 286, 437, 411, 457, 411, 321, 434, 1364, 322, 341, 13, 286, 458, 13, 583, 411, 586, 286, 536, 257, 1101, 1315, 13, 50964, 50964, 823, 718, 311, 5374, 300, 293, 1319, 309, 558, 586, 13, 400, 300, 311, 577, 300, 311, 577, 286, 411, 281, 589, 11, 570, 286, 519, 300, 309, 4045, 291, 281, 841, 264, 1822, 281, 854, 291, 1223, 1101, 437, 12649, 626, 366, 2978, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08007856096540178, "compression_ratio": 1.6653386454183268, "no_caption_prob": 0.00014651256788056344}, {"id": 279, "seek": 216400, "start": 2164.0, "end": 2178.0, "text": " And then it as soon as as soon as there's like a concrete thing that, you know, will serve your code well, an abstraction, moving something to a module, having a type that represents something better that, you know, like this is a step in the right direction.", "tokens": [50364, 400, 550, 309, 382, 2321, 382, 382, 2321, 382, 456, 311, 411, 257, 9859, 551, 300, 11, 291, 458, 11, 486, 4596, 428, 3089, 731, 11, 364, 37765, 11, 2684, 746, 281, 257, 10088, 11, 1419, 257, 2010, 300, 8855, 746, 1101, 300, 11, 291, 458, 11, 411, 341, 307, 257, 1823, 294, 264, 558, 3513, 13, 51064, 51064, 639, 307, 1101, 13, 509, 820, 360, 309, 558, 1314, 13, 39401, 11, 291, 458, 11, 291, 393, 360, 300, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.09163505122775123, "compression_ratio": 1.691542288557214, "no_caption_prob": 3.590952474041842e-05}, {"id": 280, "seek": 216400, "start": 2178.0, "end": 2183.0, "text": " This is better. You should do it right away. Anytime, you know, you can do that.", "tokens": [50364, 400, 550, 309, 382, 2321, 382, 382, 2321, 382, 456, 311, 411, 257, 9859, 551, 300, 11, 291, 458, 11, 486, 4596, 428, 3089, 731, 11, 364, 37765, 11, 2684, 746, 281, 257, 10088, 11, 1419, 257, 2010, 300, 8855, 746, 1101, 300, 11, 291, 458, 11, 411, 341, 307, 257, 1823, 294, 264, 558, 3513, 13, 51064, 51064, 639, 307, 1101, 13, 509, 820, 360, 309, 558, 1314, 13, 39401, 11, 291, 458, 11, 291, 393, 360, 300, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.09163505122775123, "compression_ratio": 1.691542288557214, "no_caption_prob": 3.590952474041842e-05}, {"id": 281, "seek": 218300, "start": 2183.0, "end": 2196.0, "text": " But you need to do it safely in a small step, you know, guided by unit tests, safe refactorings, using your ID tooling to automate the refactorings, you know, all these types of things.", "tokens": [50364, 583, 291, 643, 281, 360, 309, 11750, 294, 257, 1359, 1823, 11, 291, 458, 11, 19663, 538, 4985, 6921, 11, 3273, 1895, 15104, 1109, 11, 1228, 428, 7348, 46593, 281, 31605, 264, 1895, 15104, 1109, 11, 291, 458, 11, 439, 613, 3467, 295, 721, 13, 51014, 51014, 400, 300, 321, 434, 1391, 516, 281, 2060, 294, 257, 819, 3500, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.1178874596953392, "compression_ratio": 1.5121951219512195, "no_caption_prob": 1.6187339497264475e-05}, {"id": 282, "seek": 218300, "start": 2196.0, "end": 2199.0, "text": " And that we're probably going to cover in a different episode.", "tokens": [50364, 583, 291, 643, 281, 360, 309, 11750, 294, 257, 1359, 1823, 11, 291, 458, 11, 19663, 538, 4985, 6921, 11, 3273, 1895, 15104, 1109, 11, 1228, 428, 7348, 46593, 281, 31605, 264, 1895, 15104, 1109, 11, 291, 458, 11, 439, 613, 3467, 295, 721, 13, 51014, 51014, 400, 300, 321, 434, 1391, 516, 281, 2060, 294, 257, 819, 3500, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.1178874596953392, "compression_ratio": 1.5121951219512195, "no_caption_prob": 1.6187339497264475e-05}, {"id": 283, "seek": 219900, "start": 2199.0, "end": 2213.0, "text": " And I kind of, you know, this, this particular element of this process being being guided by habits, I actually just released a blog post about this, called relentless tiny habits.", "tokens": [50364, 400, 286, 733, 295, 11, 291, 458, 11, 341, 11, 341, 1729, 4478, 295, 341, 1399, 885, 885, 19663, 538, 14100, 11, 286, 767, 445, 4736, 257, 6968, 2183, 466, 341, 11, 1219, 46136, 5870, 14100, 13, 51064, 51064, 400, 370, 321, 603, 2113, 281, 300, 498, 291, 498, 291, 528, 281, 1401, 544, 466, 411, 11, 15298, 990, 613, 14100, 294, 300, 1399, 11, 291, 393, 1520, 300, 484, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.06748005549112955, "compression_ratio": 1.6373056994818653, "no_caption_prob": 0.00023410901485476643}, {"id": 284, "seek": 219900, "start": 2213.0, "end": 2220.0, "text": " And so we'll link to that if you if you want to read more about like, cultivating these habits in that process, you can check that out.", "tokens": [50364, 400, 286, 733, 295, 11, 291, 458, 11, 341, 11, 341, 1729, 4478, 295, 341, 1399, 885, 885, 19663, 538, 14100, 11, 286, 767, 445, 4736, 257, 6968, 2183, 466, 341, 11, 1219, 46136, 5870, 14100, 13, 51064, 51064, 400, 370, 321, 603, 2113, 281, 300, 498, 291, 498, 291, 528, 281, 1401, 544, 466, 411, 11, 15298, 990, 613, 14100, 294, 300, 1399, 11, 291, 393, 1520, 300, 484, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.06748005549112955, "compression_ratio": 1.6373056994818653, "no_caption_prob": 0.00023410901485476643}, {"id": 285, "seek": 222000, "start": 2220.0, "end": 2230.0, "text": " But I think habits are are an essential part of this and feel the pain, but then be proactive and it seems like a paradox, but I don't think it is.", "tokens": [50364, 583, 286, 519, 14100, 366, 366, 364, 7115, 644, 295, 341, 293, 841, 264, 1822, 11, 457, 550, 312, 28028, 293, 309, 2544, 411, 257, 26221, 11, 457, 286, 500, 380, 519, 309, 307, 13, 50864, 50864, 286, 362, 257, 7164, 295, 4084, 16679, 562, 452, 16679, 483, 886, 938, 13, 51064, 51064, 407, 291, 352, 538, 1622, 1207, 13, 51164, 51164, 865, 13, 51264, 51264, 7580, 11, 406, 439, 14100, 362, 668, 2942, 2681, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0761357843875885, "compression_ratio": 1.5233160621761659, "no_caption_prob": 3.269804801675491e-05}, {"id": 286, "seek": 222000, "start": 2230.0, "end": 2234.0, "text": " I have a habit of creating modules when my modules get too long.", "tokens": [50364, 583, 286, 519, 14100, 366, 366, 364, 7115, 644, 295, 341, 293, 841, 264, 1822, 11, 457, 550, 312, 28028, 293, 309, 2544, 411, 257, 26221, 11, 457, 286, 500, 380, 519, 309, 307, 13, 50864, 50864, 286, 362, 257, 7164, 295, 4084, 16679, 562, 452, 16679, 483, 886, 938, 13, 51064, 51064, 407, 291, 352, 538, 1622, 1207, 13, 51164, 51164, 865, 13, 51264, 51264, 7580, 11, 406, 439, 14100, 362, 668, 2942, 2681, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0761357843875885, "compression_ratio": 1.5233160621761659, "no_caption_prob": 3.269804801675491e-05}, {"id": 287, "seek": 222000, "start": 2234.0, "end": 2236.0, "text": " So you go by line count.", "tokens": [50364, 583, 286, 519, 14100, 366, 366, 364, 7115, 644, 295, 341, 293, 841, 264, 1822, 11, 457, 550, 312, 28028, 293, 309, 2544, 411, 257, 26221, 11, 457, 286, 500, 380, 519, 309, 307, 13, 50864, 50864, 286, 362, 257, 7164, 295, 4084, 16679, 562, 452, 16679, 483, 886, 938, 13, 51064, 51064, 407, 291, 352, 538, 1622, 1207, 13, 51164, 51164, 865, 13, 51264, 51264, 7580, 11, 406, 439, 14100, 362, 668, 2942, 2681, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0761357843875885, "compression_ratio": 1.5233160621761659, "no_caption_prob": 3.269804801675491e-05}, {"id": 288, "seek": 222000, "start": 2236.0, "end": 2238.0, "text": " Yeah.", "tokens": [50364, 583, 286, 519, 14100, 366, 366, 364, 7115, 644, 295, 341, 293, 841, 264, 1822, 11, 457, 550, 312, 28028, 293, 309, 2544, 411, 257, 26221, 11, 457, 286, 500, 380, 519, 309, 307, 13, 50864, 50864, 286, 362, 257, 7164, 295, 4084, 16679, 562, 452, 16679, 483, 886, 938, 13, 51064, 51064, 407, 291, 352, 538, 1622, 1207, 13, 51164, 51164, 865, 13, 51264, 51264, 7580, 11, 406, 439, 14100, 362, 668, 2942, 2681, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0761357843875885, "compression_ratio": 1.5233160621761659, "no_caption_prob": 3.269804801675491e-05}, {"id": 289, "seek": 222000, "start": 2238.0, "end": 2243.0, "text": " Obviously, not all habits have been created equal.", "tokens": [50364, 583, 286, 519, 14100, 366, 366, 364, 7115, 644, 295, 341, 293, 841, 264, 1822, 11, 457, 550, 312, 28028, 293, 309, 2544, 411, 257, 26221, 11, 457, 286, 500, 380, 519, 309, 307, 13, 50864, 50864, 286, 362, 257, 7164, 295, 4084, 16679, 562, 452, 16679, 483, 886, 938, 13, 51064, 51064, 407, 291, 352, 538, 1622, 1207, 13, 51164, 51164, 865, 13, 51264, 51264, 7580, 11, 406, 439, 14100, 362, 668, 2942, 2681, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0761357843875885, "compression_ratio": 1.5233160621761659, "no_caption_prob": 3.269804801675491e-05}, {"id": 290, "seek": 224300, "start": 2243.0, "end": 2252.0, "text": " So so we talked about we talked about line count isn't necessarily the metric for what makes a module difficult to understand.", "tokens": [50364, 407, 370, 321, 2825, 466, 321, 2825, 466, 1622, 1207, 1943, 380, 4725, 264, 20678, 337, 437, 1669, 257, 10088, 2252, 281, 1223, 13, 50814, 50814, 400, 437, 437, 2709, 291, 257, 6358, 300, 291, 643, 281, 8947, 746, 30, 51014, 51014, 708, 366, 264, 16367, 293, 264, 7880, 300, 3089, 307, 1152, 281, 1223, 30, 51314, 51314, 1042, 11, 321, 393, 380, 534, 584, 300, 1622, 14893, 1943, 380, 644, 295, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07316914582863832, "compression_ratio": 1.6464646464646464, "no_caption_prob": 1.7778187611838803e-05}, {"id": 291, "seek": 224300, "start": 2252.0, "end": 2256.0, "text": " And what what gives you a signal that you need to extract something?", "tokens": [50364, 407, 370, 321, 2825, 466, 321, 2825, 466, 1622, 1207, 1943, 380, 4725, 264, 20678, 337, 437, 1669, 257, 10088, 2252, 281, 1223, 13, 50814, 50814, 400, 437, 437, 2709, 291, 257, 6358, 300, 291, 643, 281, 8947, 746, 30, 51014, 51014, 708, 366, 264, 16367, 293, 264, 7880, 300, 3089, 307, 1152, 281, 1223, 30, 51314, 51314, 1042, 11, 321, 393, 380, 534, 584, 300, 1622, 14893, 1943, 380, 644, 295, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07316914582863832, "compression_ratio": 1.6464646464646464, "no_caption_prob": 1.7778187611838803e-05}, {"id": 292, "seek": 224300, "start": 2256.0, "end": 2262.0, "text": " What are the metrics and the signs that code is hard to understand?", "tokens": [50364, 407, 370, 321, 2825, 466, 321, 2825, 466, 1622, 1207, 1943, 380, 4725, 264, 20678, 337, 437, 1669, 257, 10088, 2252, 281, 1223, 13, 50814, 50814, 400, 437, 437, 2709, 291, 257, 6358, 300, 291, 643, 281, 8947, 746, 30, 51014, 51014, 708, 366, 264, 16367, 293, 264, 7880, 300, 3089, 307, 1152, 281, 1223, 30, 51314, 51314, 1042, 11, 321, 393, 380, 534, 584, 300, 1622, 14893, 1943, 380, 644, 295, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07316914582863832, "compression_ratio": 1.6464646464646464, "no_caption_prob": 1.7778187611838803e-05}, {"id": 293, "seek": 224300, "start": 2262.0, "end": 2268.0, "text": " Well, we can't really say that line counts isn't part of that.", "tokens": [50364, 407, 370, 321, 2825, 466, 321, 2825, 466, 1622, 1207, 1943, 380, 4725, 264, 20678, 337, 437, 1669, 257, 10088, 2252, 281, 1223, 13, 50814, 50814, 400, 437, 437, 2709, 291, 257, 6358, 300, 291, 643, 281, 8947, 746, 30, 51014, 51014, 708, 366, 264, 16367, 293, 264, 7880, 300, 3089, 307, 1152, 281, 1223, 30, 51314, 51314, 1042, 11, 321, 393, 380, 534, 584, 300, 1622, 14893, 1943, 380, 644, 295, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07316914582863832, "compression_ratio": 1.6464646464646464, "no_caption_prob": 1.7778187611838803e-05}, {"id": 294, "seek": 226800, "start": 2268.0, "end": 2275.0, "text": " A module that is 50 lines long is way easier to understand one that is 10,000 lines long.", "tokens": [50364, 316, 10088, 300, 307, 2625, 3876, 938, 307, 636, 3571, 281, 1223, 472, 300, 307, 1266, 11, 1360, 3876, 938, 13, 50714, 50714, 440, 4641, 2138, 1669, 257, 10088, 1152, 11, 6081, 281, 1401, 670, 3571, 281, 1401, 13, 50914, 50914, 1779, 11, 558, 13, 286, 2041, 286, 2041, 264, 1168, 456, 307, 11, 411, 11, 775, 30348, 300, 586, 652, 309, 3571, 281, 1401, 30, 51264, 51264, 400, 309, 1177, 380, 767, 370, 300, 370, 300, 311, 534, 264, 544, 1880, 1168, 11, 1943, 380, 309, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.12761912138565726, "compression_ratio": 1.705607476635514, "no_caption_prob": 6.302452675299719e-05}, {"id": 295, "seek": 226800, "start": 2275.0, "end": 2279.0, "text": " The length definitely makes a module hard, harder to read over easier to read.", "tokens": [50364, 316, 10088, 300, 307, 2625, 3876, 938, 307, 636, 3571, 281, 1223, 472, 300, 307, 1266, 11, 1360, 3876, 938, 13, 50714, 50714, 440, 4641, 2138, 1669, 257, 10088, 1152, 11, 6081, 281, 1401, 670, 3571, 281, 1401, 13, 50914, 50914, 1779, 11, 558, 13, 286, 2041, 286, 2041, 264, 1168, 456, 307, 11, 411, 11, 775, 30348, 300, 586, 652, 309, 3571, 281, 1401, 30, 51264, 51264, 400, 309, 1177, 380, 767, 370, 300, 370, 300, 311, 534, 264, 544, 1880, 1168, 11, 1943, 380, 309, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.12761912138565726, "compression_ratio": 1.705607476635514, "no_caption_prob": 6.302452675299719e-05}, {"id": 296, "seek": 226800, "start": 2279.0, "end": 2286.0, "text": " Right, right. I guess I guess the question there is, like, does splitting that now make it easier to read?", "tokens": [50364, 316, 10088, 300, 307, 2625, 3876, 938, 307, 636, 3571, 281, 1223, 472, 300, 307, 1266, 11, 1360, 3876, 938, 13, 50714, 50714, 440, 4641, 2138, 1669, 257, 10088, 1152, 11, 6081, 281, 1401, 670, 3571, 281, 1401, 13, 50914, 50914, 1779, 11, 558, 13, 286, 2041, 286, 2041, 264, 1168, 456, 307, 11, 411, 11, 775, 30348, 300, 586, 652, 309, 3571, 281, 1401, 30, 51264, 51264, 400, 309, 1177, 380, 767, 370, 300, 370, 300, 311, 534, 264, 544, 1880, 1168, 11, 1943, 380, 309, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.12761912138565726, "compression_ratio": 1.705607476635514, "no_caption_prob": 6.302452675299719e-05}, {"id": 297, "seek": 226800, "start": 2286.0, "end": 2290.0, "text": " And it doesn't actually so that so that's really the more interesting question, isn't it?", "tokens": [50364, 316, 10088, 300, 307, 2625, 3876, 938, 307, 636, 3571, 281, 1223, 472, 300, 307, 1266, 11, 1360, 3876, 938, 13, 50714, 50714, 440, 4641, 2138, 1669, 257, 10088, 1152, 11, 6081, 281, 1401, 670, 3571, 281, 1401, 13, 50914, 50914, 1779, 11, 558, 13, 286, 2041, 286, 2041, 264, 1168, 456, 307, 11, 411, 11, 775, 30348, 300, 586, 652, 309, 3571, 281, 1401, 30, 51264, 51264, 400, 309, 1177, 380, 767, 370, 300, 370, 300, 311, 534, 264, 544, 1880, 1168, 11, 1943, 380, 309, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.12761912138565726, "compression_ratio": 1.705607476635514, "no_caption_prob": 6.302452675299719e-05}, {"id": 298, "seek": 229000, "start": 2290.0, "end": 2298.0, "text": " What at what point does splitting a module make it easier to read than it was all in one big module?", "tokens": [50364, 708, 412, 437, 935, 775, 30348, 257, 10088, 652, 309, 3571, 281, 1401, 813, 309, 390, 439, 294, 472, 955, 10088, 30, 50764, 50764, 865, 13, 467, 311, 544, 411, 577, 420, 562, 420, 337, 437, 1778, 30, 50964, 50964, 1079, 13, 400, 1338, 13, 5048, 544, 466, 577, 294, 341, 751, 490, 22613, 13, 51264, 51264, 8266, 16478, 13, 865, 13, 286, 2673, 352, 538, 37447, 11, 382, 286, 848, 949, 11, 1884, 3467, 337, 721, 300, 366, 29482, 1214, 293, 8947, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09234904171375746, "compression_ratio": 1.515695067264574, "no_caption_prob": 0.00013981296797282994}, {"id": 299, "seek": 229000, "start": 2298.0, "end": 2302.0, "text": " Yeah. It's more like how or when or for what reason?", "tokens": [50364, 708, 412, 437, 935, 775, 30348, 257, 10088, 652, 309, 3571, 281, 1401, 813, 309, 390, 439, 294, 472, 955, 10088, 30, 50764, 50764, 865, 13, 467, 311, 544, 411, 577, 420, 562, 420, 337, 437, 1778, 30, 50964, 50964, 1079, 13, 400, 1338, 13, 5048, 544, 466, 577, 294, 341, 751, 490, 22613, 13, 51264, 51264, 8266, 16478, 13, 865, 13, 286, 2673, 352, 538, 37447, 11, 382, 286, 848, 949, 11, 1884, 3467, 337, 721, 300, 366, 29482, 1214, 293, 8947, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09234904171375746, "compression_ratio": 1.515695067264574, "no_caption_prob": 0.00013981296797282994}, {"id": 300, "seek": 229000, "start": 2302.0, "end": 2308.0, "text": " Yes. And yeah. More more about how in this talk from Evan.", "tokens": [50364, 708, 412, 437, 935, 775, 30348, 257, 10088, 652, 309, 3571, 281, 1401, 813, 309, 390, 439, 294, 472, 955, 10088, 30, 50764, 50764, 865, 13, 467, 311, 544, 411, 577, 420, 562, 420, 337, 437, 1778, 30, 50964, 50964, 1079, 13, 400, 1338, 13, 5048, 544, 466, 577, 294, 341, 751, 490, 22613, 13, 51264, 51264, 8266, 16478, 13, 865, 13, 286, 2673, 352, 538, 37447, 11, 382, 286, 848, 949, 11, 1884, 3467, 337, 721, 300, 366, 29482, 1214, 293, 8947, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09234904171375746, "compression_ratio": 1.515695067264574, "no_caption_prob": 0.00013981296797282994}, {"id": 301, "seek": 229000, "start": 2308.0, "end": 2318.0, "text": " Mm hmm. Yeah. I usually go by coupling, as I said before, create types for things that are coupled together and extract that.", "tokens": [50364, 708, 412, 437, 935, 775, 30348, 257, 10088, 652, 309, 3571, 281, 1401, 813, 309, 390, 439, 294, 472, 955, 10088, 30, 50764, 50764, 865, 13, 467, 311, 544, 411, 577, 420, 562, 420, 337, 437, 1778, 30, 50964, 50964, 1079, 13, 400, 1338, 13, 5048, 544, 466, 577, 294, 341, 751, 490, 22613, 13, 51264, 51264, 8266, 16478, 13, 865, 13, 286, 2673, 352, 538, 37447, 11, 382, 286, 848, 949, 11, 1884, 3467, 337, 721, 300, 366, 29482, 1214, 293, 8947, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09234904171375746, "compression_ratio": 1.515695067264574, "no_caption_prob": 0.00013981296797282994}, {"id": 302, "seek": 231800, "start": 2318.0, "end": 2327.0, "text": " Yes. Right. Yeah. I like to think about responsibilities like what it what does this code know about what does it need to understand?", "tokens": [50364, 1079, 13, 1779, 13, 865, 13, 286, 411, 281, 519, 466, 16190, 411, 437, 309, 437, 775, 341, 3089, 458, 466, 437, 775, 309, 643, 281, 1223, 30, 50814, 50814, 509, 458, 11, 286, 841, 1578, 337, 309, 498, 286, 976, 3089, 886, 867, 16190, 11, 291, 458, 13, 51114, 51114, 509, 2464, 257, 688, 295, 3053, 1566, 2597, 13, 865, 13, 407, 2597, 13, 51314, 51314, 467, 311, 411, 498, 291, 434, 291, 458, 11, 498, 291, 434, 412, 257, 1277, 311, 1782, 337, 6148, 293, 436, 434, 411, 6361, 293, 8924, 293, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14130906497730927, "compression_ratio": 1.7555555555555555, "no_caption_prob": 5.307329774950631e-05}, {"id": 303, "seek": 231800, "start": 2327.0, "end": 2333.0, "text": " You know, I feel bad for it if I give code too many responsibilities, you know.", "tokens": [50364, 1079, 13, 1779, 13, 865, 13, 286, 411, 281, 519, 466, 16190, 411, 437, 309, 437, 775, 341, 3089, 458, 466, 437, 775, 309, 643, 281, 1223, 30, 50814, 50814, 509, 458, 11, 286, 841, 1578, 337, 309, 498, 286, 976, 3089, 886, 867, 16190, 11, 291, 458, 13, 51114, 51114, 509, 2464, 257, 688, 295, 3053, 1566, 2597, 13, 865, 13, 407, 2597, 13, 51314, 51314, 467, 311, 411, 498, 291, 434, 291, 458, 11, 498, 291, 434, 412, 257, 1277, 311, 1782, 337, 6148, 293, 436, 434, 411, 6361, 293, 8924, 293, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14130906497730927, "compression_ratio": 1.7555555555555555, "no_caption_prob": 5.307329774950631e-05}, {"id": 304, "seek": 231800, "start": 2333.0, "end": 2337.0, "text": " You write a lot of comments saying sorry. Yeah. So sorry.", "tokens": [50364, 1079, 13, 1779, 13, 865, 13, 286, 411, 281, 519, 466, 16190, 411, 437, 309, 437, 775, 341, 3089, 458, 466, 437, 775, 309, 643, 281, 1223, 30, 50814, 50814, 509, 458, 11, 286, 841, 1578, 337, 309, 498, 286, 976, 3089, 886, 867, 16190, 11, 291, 458, 13, 51114, 51114, 509, 2464, 257, 688, 295, 3053, 1566, 2597, 13, 865, 13, 407, 2597, 13, 51314, 51314, 467, 311, 411, 498, 291, 434, 291, 458, 11, 498, 291, 434, 412, 257, 1277, 311, 1782, 337, 6148, 293, 436, 434, 411, 6361, 293, 8924, 293, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14130906497730927, "compression_ratio": 1.7555555555555555, "no_caption_prob": 5.307329774950631e-05}, {"id": 305, "seek": 231800, "start": 2337.0, "end": 2347.0, "text": " It's like if you're you know, if you're at a friend's house for dinner and they're like cooking and cleaning and, you know,", "tokens": [50364, 1079, 13, 1779, 13, 865, 13, 286, 411, 281, 519, 466, 16190, 411, 437, 309, 437, 775, 341, 3089, 458, 466, 437, 775, 309, 643, 281, 1223, 30, 50814, 50814, 509, 458, 11, 286, 841, 1578, 337, 309, 498, 286, 976, 3089, 886, 867, 16190, 11, 291, 458, 13, 51114, 51114, 509, 2464, 257, 688, 295, 3053, 1566, 2597, 13, 865, 13, 407, 2597, 13, 51314, 51314, 467, 311, 411, 498, 291, 434, 291, 458, 11, 498, 291, 434, 412, 257, 1277, 311, 1782, 337, 6148, 293, 436, 434, 411, 6361, 293, 8924, 293, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14130906497730927, "compression_ratio": 1.7555555555555555, "no_caption_prob": 5.307329774950631e-05}, {"id": 306, "seek": 234700, "start": 2347.0, "end": 2354.0, "text": " and you're like, come on, let me do something like at least let me chop some vegetables or like clean some dishes for you.", "tokens": [50364, 293, 291, 434, 411, 11, 808, 322, 11, 718, 385, 360, 746, 411, 412, 1935, 718, 385, 7931, 512, 9320, 420, 411, 2541, 512, 10814, 337, 291, 13, 50714, 50714, 509, 841, 1578, 498, 436, 747, 322, 886, 867, 16190, 13, 865, 13, 865, 11, 300, 311, 2074, 13, 50964, 50964, 407, 286, 841, 1578, 337, 264, 3089, 281, 411, 309, 11, 291, 458, 11, 976, 309, 257, 1821, 11, 411, 718, 309, 1879, 322, 1080, 1691, 293, 550, 718, 1580, 1646, 360, 1071, 1691, 13, 51314, 51314, 865, 11, 300, 311, 257, 665, 472, 13, 865, 13, 286, 519, 321, 733, 295, 2045, 322, 322, 341, 3071, 300, 11, 291, 458, 11, 437, 437, 393, 291, 764, 257, 10088, 281, 854, 291, 360, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06496909237647241, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.9525308744050562e-05}, {"id": 307, "seek": 234700, "start": 2354.0, "end": 2359.0, "text": " You feel bad if they take on too many responsibilities. Yeah. Yeah, that's true.", "tokens": [50364, 293, 291, 434, 411, 11, 808, 322, 11, 718, 385, 360, 746, 411, 412, 1935, 718, 385, 7931, 512, 9320, 420, 411, 2541, 512, 10814, 337, 291, 13, 50714, 50714, 509, 841, 1578, 498, 436, 747, 322, 886, 867, 16190, 13, 865, 13, 865, 11, 300, 311, 2074, 13, 50964, 50964, 407, 286, 841, 1578, 337, 264, 3089, 281, 411, 309, 11, 291, 458, 11, 976, 309, 257, 1821, 11, 411, 718, 309, 1879, 322, 1080, 1691, 293, 550, 718, 1580, 1646, 360, 1071, 1691, 13, 51314, 51314, 865, 11, 300, 311, 257, 665, 472, 13, 865, 13, 286, 519, 321, 733, 295, 2045, 322, 322, 341, 3071, 300, 11, 291, 458, 11, 437, 437, 393, 291, 764, 257, 10088, 281, 854, 291, 360, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06496909237647241, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.9525308744050562e-05}, {"id": 308, "seek": 234700, "start": 2359.0, "end": 2366.0, "text": " So I feel bad for the code to like it, you know, give it a break, like let it focus on its job and then let someone else do another job.", "tokens": [50364, 293, 291, 434, 411, 11, 808, 322, 11, 718, 385, 360, 746, 411, 412, 1935, 718, 385, 7931, 512, 9320, 420, 411, 2541, 512, 10814, 337, 291, 13, 50714, 50714, 509, 841, 1578, 498, 436, 747, 322, 886, 867, 16190, 13, 865, 13, 865, 11, 300, 311, 2074, 13, 50964, 50964, 407, 286, 841, 1578, 337, 264, 3089, 281, 411, 309, 11, 291, 458, 11, 976, 309, 257, 1821, 11, 411, 718, 309, 1879, 322, 1080, 1691, 293, 550, 718, 1580, 1646, 360, 1071, 1691, 13, 51314, 51314, 865, 11, 300, 311, 257, 665, 472, 13, 865, 13, 286, 519, 321, 733, 295, 2045, 322, 322, 341, 3071, 300, 11, 291, 458, 11, 437, 437, 393, 291, 764, 257, 10088, 281, 854, 291, 360, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06496909237647241, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.9525308744050562e-05}, {"id": 309, "seek": 234700, "start": 2366.0, "end": 2376.0, "text": " Yeah, that's a good one. Yeah. I think we kind of hit on on this earlier that, you know, what what can you use a module to help you do?", "tokens": [50364, 293, 291, 434, 411, 11, 808, 322, 11, 718, 385, 360, 746, 411, 412, 1935, 718, 385, 7931, 512, 9320, 420, 411, 2541, 512, 10814, 337, 291, 13, 50714, 50714, 509, 841, 1578, 498, 436, 747, 322, 886, 867, 16190, 13, 865, 13, 865, 11, 300, 311, 2074, 13, 50964, 50964, 407, 286, 841, 1578, 337, 264, 3089, 281, 411, 309, 11, 291, 458, 11, 976, 309, 257, 1821, 11, 411, 718, 309, 1879, 322, 1080, 1691, 293, 550, 718, 1580, 1646, 360, 1071, 1691, 13, 51314, 51314, 865, 11, 300, 311, 257, 665, 472, 13, 865, 13, 286, 519, 321, 733, 295, 2045, 322, 322, 341, 3071, 300, 11, 291, 458, 11, 437, 437, 393, 291, 764, 257, 10088, 281, 854, 291, 360, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06496909237647241, "compression_ratio": 1.762962962962963, "no_caption_prob": 1.9525308744050562e-05}, {"id": 310, "seek": 237600, "start": 2376.0, "end": 2384.0, "text": " So good, good reasons to want a module. You know, you want you want to test a distinct thing.", "tokens": [50364, 407, 665, 11, 665, 4112, 281, 528, 257, 10088, 13, 509, 458, 11, 291, 528, 291, 528, 281, 1500, 257, 10644, 551, 13, 50764, 50764, 509, 528, 281, 6479, 364, 6920, 2607, 13, 9279, 257, 10644, 551, 322, 1080, 1065, 11, 406, 1951, 364, 2823, 13, 51214, 51214, 1079, 11, 300, 311, 558, 13, 663, 311, 558, 13, 7587, 13, 509, 528, 264, 14194, 11, 406, 264, 1379, 18228, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10545116501885492, "compression_ratio": 1.6727272727272726, "no_caption_prob": 7.843348430469632e-05}, {"id": 311, "seek": 237600, "start": 2384.0, "end": 2393.0, "text": " You want to hide an internal detail. Test a distinct thing on its own, not within an environment.", "tokens": [50364, 407, 665, 11, 665, 4112, 281, 528, 257, 10088, 13, 509, 458, 11, 291, 528, 291, 528, 281, 1500, 257, 10644, 551, 13, 50764, 50764, 509, 528, 281, 6479, 364, 6920, 2607, 13, 9279, 257, 10644, 551, 322, 1080, 1065, 11, 406, 1951, 364, 2823, 13, 51214, 51214, 1079, 11, 300, 311, 558, 13, 663, 311, 558, 13, 7587, 13, 509, 528, 264, 14194, 11, 406, 264, 1379, 18228, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10545116501885492, "compression_ratio": 1.6727272727272726, "no_caption_prob": 7.843348430469632e-05}, {"id": 312, "seek": 237600, "start": 2393.0, "end": 2399.0, "text": " Yes, that's right. That's right. Exactly. You want the banana, not the whole jungle.", "tokens": [50364, 407, 665, 11, 665, 4112, 281, 528, 257, 10088, 13, 509, 458, 11, 291, 528, 291, 528, 281, 1500, 257, 10644, 551, 13, 50764, 50764, 509, 528, 281, 6479, 364, 6920, 2607, 13, 9279, 257, 10644, 551, 322, 1080, 1065, 11, 406, 1951, 364, 2823, 13, 51214, 51214, 1079, 11, 300, 311, 558, 13, 663, 311, 558, 13, 7587, 13, 509, 528, 264, 14194, 11, 406, 264, 1379, 18228, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10545116501885492, "compression_ratio": 1.6727272727272726, "no_caption_prob": 7.843348430469632e-05}, {"id": 313, "seek": 239900, "start": 2399.0, "end": 2409.0, "text": " Right. I think that unit testing is I mean, it's a whole topic and we we went into it in depth in our own test episode.", "tokens": [50364, 1779, 13, 286, 519, 300, 4985, 4997, 307, 286, 914, 11, 309, 311, 257, 1379, 4829, 293, 321, 321, 1437, 666, 309, 294, 7161, 294, 527, 1065, 1500, 3500, 13, 50864, 50864, 583, 300, 3109, 307, 370, 4961, 337, 16696, 16190, 570, 309, 1669, 309, 257, 688, 544, 1850, 13, 51214, 51214, 407, 286, 519, 300, 884, 1500, 9555, 3250, 307, 516, 281, 652, 428, 1691, 295, 16696, 264, 558, 16679, 257, 688, 3571, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05241179768043228, "compression_ratio": 1.6161137440758293, "no_caption_prob": 0.0001313329121330753}, {"id": 314, "seek": 239900, "start": 2409.0, "end": 2416.0, "text": " But that approach is so helpful for identifying responsibilities because it makes it a lot more clear.", "tokens": [50364, 1779, 13, 286, 519, 300, 4985, 4997, 307, 286, 914, 11, 309, 311, 257, 1379, 4829, 293, 321, 321, 1437, 666, 309, 294, 7161, 294, 527, 1065, 1500, 3500, 13, 50864, 50864, 583, 300, 3109, 307, 370, 4961, 337, 16696, 16190, 570, 309, 1669, 309, 257, 688, 544, 1850, 13, 51214, 51214, 407, 286, 519, 300, 884, 1500, 9555, 3250, 307, 516, 281, 652, 428, 1691, 295, 16696, 264, 558, 16679, 257, 688, 3571, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05241179768043228, "compression_ratio": 1.6161137440758293, "no_caption_prob": 0.0001313329121330753}, {"id": 315, "seek": 239900, "start": 2416.0, "end": 2422.0, "text": " So I think that doing test driven development is going to make your job of identifying the right modules a lot easier.", "tokens": [50364, 1779, 13, 286, 519, 300, 4985, 4997, 307, 286, 914, 11, 309, 311, 257, 1379, 4829, 293, 321, 321, 1437, 666, 309, 294, 7161, 294, 527, 1065, 1500, 3500, 13, 50864, 50864, 583, 300, 3109, 307, 370, 4961, 337, 16696, 16190, 570, 309, 1669, 309, 257, 688, 544, 1850, 13, 51214, 51214, 407, 286, 519, 300, 884, 1500, 9555, 3250, 307, 516, 281, 652, 428, 1691, 295, 16696, 264, 558, 16679, 257, 688, 3571, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05241179768043228, "compression_ratio": 1.6161137440758293, "no_caption_prob": 0.0001313329121330753}, {"id": 316, "seek": 242200, "start": 2422.0, "end": 2431.0, "text": " But but yeah, I think, you know, you want to hide internals. You want to, you know, guarantee certain properties of your code.", "tokens": [50364, 583, 457, 1338, 11, 286, 519, 11, 291, 458, 11, 291, 528, 281, 6479, 2154, 1124, 13, 509, 528, 281, 11, 291, 458, 11, 10815, 1629, 7221, 295, 428, 3089, 13, 50814, 50814, 22613, 2825, 466, 11, 291, 458, 11, 283, 16740, 4997, 11, 4707, 2361, 4997, 885, 294, 512, 2098, 411, 257, 1465, 300, 746, 12953, 382, 257, 10088, 300, 291, 434, 411, 11, 51214, 51214, 731, 11, 498, 286, 393, 5876, 257, 4707, 300, 286, 528, 281, 1520, 466, 746, 300, 341, 1009, 13165, 420, 341, 1009, 13165, 294, 264, 294, 341, 2010, 295, 1389, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07174547980813419, "compression_ratio": 1.7932489451476794, "no_caption_prob": 3.8828380638733506e-05}, {"id": 317, "seek": 242200, "start": 2431.0, "end": 2439.0, "text": " Evan talked about, you know, fuzz testing, property based testing being in some ways like a sign that something belongs as a module that you're like,", "tokens": [50364, 583, 457, 1338, 11, 286, 519, 11, 291, 458, 11, 291, 528, 281, 6479, 2154, 1124, 13, 509, 528, 281, 11, 291, 458, 11, 10815, 1629, 7221, 295, 428, 3089, 13, 50814, 50814, 22613, 2825, 466, 11, 291, 458, 11, 283, 16740, 4997, 11, 4707, 2361, 4997, 885, 294, 512, 2098, 411, 257, 1465, 300, 746, 12953, 382, 257, 10088, 300, 291, 434, 411, 11, 51214, 51214, 731, 11, 498, 286, 393, 5876, 257, 4707, 300, 286, 528, 281, 1520, 466, 746, 300, 341, 1009, 13165, 420, 341, 1009, 13165, 294, 264, 294, 341, 2010, 295, 1389, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07174547980813419, "compression_ratio": 1.7932489451476794, "no_caption_prob": 3.8828380638733506e-05}, {"id": 318, "seek": 242200, "start": 2439.0, "end": 2449.0, "text": " well, if I can identify a property that I want to check about something that this always applies or this always applies in the in this type of case.", "tokens": [50364, 583, 457, 1338, 11, 286, 519, 11, 291, 458, 11, 291, 528, 281, 6479, 2154, 1124, 13, 509, 528, 281, 11, 291, 458, 11, 10815, 1629, 7221, 295, 428, 3089, 13, 50814, 50814, 22613, 2825, 466, 11, 291, 458, 11, 283, 16740, 4997, 11, 4707, 2361, 4997, 885, 294, 512, 2098, 411, 257, 1465, 300, 746, 12953, 382, 257, 10088, 300, 291, 434, 411, 11, 51214, 51214, 731, 11, 498, 286, 393, 5876, 257, 4707, 300, 286, 528, 281, 1520, 466, 746, 300, 341, 1009, 13165, 420, 341, 1009, 13165, 294, 264, 294, 341, 2010, 295, 1389, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07174547980813419, "compression_ratio": 1.7932489451476794, "no_caption_prob": 3.8828380638733506e-05}, {"id": 319, "seek": 244900, "start": 2449.0, "end": 2460.0, "text": " If you can write a fuzz test for it, then you can also use the module's ability to hide certain internal details to protect from the outside world.", "tokens": [50364, 759, 291, 393, 2464, 257, 283, 16740, 1500, 337, 309, 11, 550, 291, 393, 611, 764, 264, 10088, 311, 3485, 281, 6479, 1629, 6920, 4365, 281, 2371, 490, 264, 2380, 1002, 13, 50914, 50914, 13674, 5617, 6250, 337, 341, 5633, 295, 12316, 300, 4188, 13, 51214, 51214, 865, 13, 759, 291, 393, 283, 16740, 1500, 257, 1422, 644, 295, 746, 11, 457, 406, 264, 1379, 551, 11, 550, 300, 727, 312, 257, 1465, 300, 291, 643, 281, 7472, 552, 484, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.092396281747257, "compression_ratio": 1.640552995391705, "no_caption_prob": 1.8342258044867776e-05}, {"id": 320, "seek": 244900, "start": 2460.0, "end": 2466.0, "text": " Getting becoming responsible for this task of protecting that condition.", "tokens": [50364, 759, 291, 393, 2464, 257, 283, 16740, 1500, 337, 309, 11, 550, 291, 393, 611, 764, 264, 10088, 311, 3485, 281, 6479, 1629, 6920, 4365, 281, 2371, 490, 264, 2380, 1002, 13, 50914, 50914, 13674, 5617, 6250, 337, 341, 5633, 295, 12316, 300, 4188, 13, 51214, 51214, 865, 13, 759, 291, 393, 283, 16740, 1500, 257, 1422, 644, 295, 746, 11, 457, 406, 264, 1379, 551, 11, 550, 300, 727, 312, 257, 1465, 300, 291, 643, 281, 7472, 552, 484, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.092396281747257, "compression_ratio": 1.640552995391705, "no_caption_prob": 1.8342258044867776e-05}, {"id": 321, "seek": 244900, "start": 2466.0, "end": 2477.0, "text": " Yeah. If you can fuzz test a sub part of something, but not the whole thing, then that could be a sign that you need to split them out.", "tokens": [50364, 759, 291, 393, 2464, 257, 283, 16740, 1500, 337, 309, 11, 550, 291, 393, 611, 764, 264, 10088, 311, 3485, 281, 6479, 1629, 6920, 4365, 281, 2371, 490, 264, 2380, 1002, 13, 50914, 50914, 13674, 5617, 6250, 337, 341, 5633, 295, 12316, 300, 4188, 13, 51214, 51214, 865, 13, 759, 291, 393, 283, 16740, 1500, 257, 1422, 644, 295, 746, 11, 457, 406, 264, 1379, 551, 11, 550, 300, 727, 312, 257, 1465, 300, 291, 643, 281, 7472, 552, 484, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.092396281747257, "compression_ratio": 1.640552995391705, "no_caption_prob": 1.8342258044867776e-05}, {"id": 322, "seek": 247700, "start": 2477.0, "end": 2490.0, "text": " Right. Yeah. If you have like a, you know, URL that you say that if I combine together these paths, I shouldn't have two slashes in a row and I should, you know,", "tokens": [50364, 1779, 13, 865, 13, 759, 291, 362, 411, 257, 11, 291, 458, 11, 12905, 300, 291, 584, 300, 498, 286, 10432, 1214, 613, 14518, 11, 286, 4659, 380, 362, 732, 1061, 12808, 294, 257, 5386, 293, 286, 820, 11, 291, 458, 11, 51014, 51014, 309, 820, 1009, 917, 365, 257, 17330, 420, 2035, 11, 291, 458, 11, 33270, 719, 291, 528, 281, 1520, 466, 300, 13, 51264, 51264, 663, 1062, 312, 257, 665, 1465, 300, 300, 12953, 294, 257, 10088, 570, 291, 528, 281, 2371, 729, 4365, 295, 577, 291, 2028, 365, 300, 1412, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06936574704719312, "compression_ratio": 1.6986899563318778, "no_caption_prob": 3.219118298147805e-05}, {"id": 323, "seek": 247700, "start": 2490.0, "end": 2495.0, "text": " it should always end with a slash or whatever, you know, invariance you want to check about that.", "tokens": [50364, 1779, 13, 865, 13, 759, 291, 362, 411, 257, 11, 291, 458, 11, 12905, 300, 291, 584, 300, 498, 286, 10432, 1214, 613, 14518, 11, 286, 4659, 380, 362, 732, 1061, 12808, 294, 257, 5386, 293, 286, 820, 11, 291, 458, 11, 51014, 51014, 309, 820, 1009, 917, 365, 257, 17330, 420, 2035, 11, 291, 458, 11, 33270, 719, 291, 528, 281, 1520, 466, 300, 13, 51264, 51264, 663, 1062, 312, 257, 665, 1465, 300, 300, 12953, 294, 257, 10088, 570, 291, 528, 281, 2371, 729, 4365, 295, 577, 291, 2028, 365, 300, 1412, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06936574704719312, "compression_ratio": 1.6986899563318778, "no_caption_prob": 3.219118298147805e-05}, {"id": 324, "seek": 247700, "start": 2495.0, "end": 2503.0, "text": " That might be a good sign that that belongs in a module because you want to protect those details of how you deal with that data.", "tokens": [50364, 1779, 13, 865, 13, 759, 291, 362, 411, 257, 11, 291, 458, 11, 12905, 300, 291, 584, 300, 498, 286, 10432, 1214, 613, 14518, 11, 286, 4659, 380, 362, 732, 1061, 12808, 294, 257, 5386, 293, 286, 820, 11, 291, 458, 11, 51014, 51014, 309, 820, 1009, 917, 365, 257, 17330, 420, 2035, 11, 291, 458, 11, 33270, 719, 291, 528, 281, 1520, 466, 300, 13, 51264, 51264, 663, 1062, 312, 257, 665, 1465, 300, 300, 12953, 294, 257, 10088, 570, 291, 528, 281, 2371, 729, 4365, 295, 577, 291, 2028, 365, 300, 1412, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06936574704719312, "compression_ratio": 1.6986899563318778, "no_caption_prob": 3.219118298147805e-05}, {"id": 325, "seek": 250300, "start": 2503.0, "end": 2515.0, "text": " Yeah. So I feel like we haven't talked about one aspect from the talk is same versus similar, which is a big chunk of the talk.", "tokens": [50364, 865, 13, 407, 286, 841, 411, 321, 2378, 380, 2825, 466, 472, 4171, 490, 264, 751, 307, 912, 5717, 2531, 11, 597, 307, 257, 955, 16635, 295, 264, 751, 13, 50964, 50964, 407, 22613, 2516, 264, 1365, 295, 1520, 4995, 279, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.08918596350628397, "compression_ratio": 1.3333333333333333, "no_caption_prob": 7.25333666196093e-05}, {"id": 326, "seek": 250300, "start": 2515.0, "end": 2519.0, "text": " So Evan takes the example of checkboxes.", "tokens": [50364, 865, 13, 407, 286, 841, 411, 321, 2378, 380, 2825, 466, 472, 4171, 490, 264, 751, 307, 912, 5717, 2531, 11, 597, 307, 257, 955, 16635, 295, 264, 751, 13, 50964, 50964, 407, 22613, 2516, 264, 1365, 295, 1520, 4995, 279, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.08918596350628397, "compression_ratio": 1.3333333333333333, "no_caption_prob": 7.25333666196093e-05}, {"id": 327, "seek": 251900, "start": 2519.0, "end": 2533.0, "text": " Yep. So there's one list of checkboxes where you define settings for your user and one other list of checkboxes where you can choose fruits,", "tokens": [50364, 7010, 13, 407, 456, 311, 472, 1329, 295, 1520, 4995, 279, 689, 291, 6964, 6257, 337, 428, 4195, 293, 472, 661, 1329, 295, 1520, 4995, 279, 689, 291, 393, 2826, 12148, 11, 51064, 51064, 7263, 787, 257, 5567, 1230, 295, 12148, 13, 400, 437, 415, 3110, 307, 300, 754, 1673, 309, 1542, 264, 912, 11, 411, 291, 362, 257, 1329, 295, 1520, 4995, 279, 294, 1293, 3331, 11, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06127869420581394, "compression_ratio": 1.6497175141242937, "no_caption_prob": 6.921506428625435e-05}, {"id": 328, "seek": 251900, "start": 2533.0, "end": 2545.0, "text": " potentially only a limited number of fruits. And what he shows is that even though it looks the same, like you have a list of checkboxes in both cases,", "tokens": [50364, 7010, 13, 407, 456, 311, 472, 1329, 295, 1520, 4995, 279, 689, 291, 6964, 6257, 337, 428, 4195, 293, 472, 661, 1329, 295, 1520, 4995, 279, 689, 291, 393, 2826, 12148, 11, 51064, 51064, 7263, 787, 257, 5567, 1230, 295, 12148, 13, 400, 437, 415, 3110, 307, 300, 754, 1673, 309, 1542, 264, 912, 11, 411, 291, 362, 257, 1329, 295, 1520, 4995, 279, 294, 1293, 3331, 11, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06127869420581394, "compression_ratio": 1.6497175141242937, "no_caption_prob": 6.921506428625435e-05}, {"id": 329, "seek": 254500, "start": 2545.0, "end": 2559.0, "text": " you don't want to model them the same way. And because you don't want to model them the same way, you don't want to abstract them the same way because abstractions go around data structures in Elm.", "tokens": [50364, 291, 500, 380, 528, 281, 2316, 552, 264, 912, 636, 13, 400, 570, 291, 500, 380, 528, 281, 2316, 552, 264, 912, 636, 11, 291, 500, 380, 528, 281, 12649, 552, 264, 912, 636, 570, 12649, 626, 352, 926, 1412, 9227, 294, 2699, 76, 13, 51064, 51064, 400, 257, 955, 16635, 295, 702, 751, 307, 1936, 257, 269, 3274, 295, 577, 576, 291, 3877, 613, 732, 764, 3331, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11391279142196864, "compression_ratio": 1.8903225806451613, "no_caption_prob": 3.5007203678105725e-06}, {"id": 330, "seek": 254500, "start": 2559.0, "end": 2574.0, "text": " And a big chunk of his talk is basically a cata of how would you structure these two use cases.", "tokens": [50364, 291, 500, 380, 528, 281, 2316, 552, 264, 912, 636, 13, 400, 570, 291, 500, 380, 528, 281, 2316, 552, 264, 912, 636, 11, 291, 500, 380, 528, 281, 12649, 552, 264, 912, 636, 570, 12649, 626, 352, 926, 1412, 9227, 294, 2699, 76, 13, 51064, 51064, 400, 257, 955, 16635, 295, 702, 751, 307, 1936, 257, 269, 3274, 295, 577, 576, 291, 3877, 613, 732, 764, 3331, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11391279142196864, "compression_ratio": 1.8903225806451613, "no_caption_prob": 3.5007203678105725e-06}, {"id": 331, "seek": 257400, "start": 2574.0, "end": 2582.0, "text": " And it turns out you have plenty of ways to represent the data that is needed to display them.", "tokens": [50364, 400, 309, 4523, 484, 291, 362, 7140, 295, 2098, 281, 2906, 264, 1412, 300, 307, 2978, 281, 4674, 552, 13, 50764, 50764, 400, 436, 439, 976, 291, 588, 819, 5311, 13, 50964, 50964, 865, 13, 400, 2171, 291, 393, 380, 2906, 721, 472, 636, 13, 51264, 51264, 1171, 5197, 11, 291, 393, 380, 2906, 8546, 721, 300, 808, 490, 264, 7154, 1228, 257, 2136, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08314812701681386, "compression_ratio": 1.591160220994475, "no_caption_prob": 7.721503061475232e-05}, {"id": 332, "seek": 257400, "start": 2582.0, "end": 2586.0, "text": " And they all give you very different benefits.", "tokens": [50364, 400, 309, 4523, 484, 291, 362, 7140, 295, 2098, 281, 2906, 264, 1412, 300, 307, 2978, 281, 4674, 552, 13, 50764, 50764, 400, 436, 439, 976, 291, 588, 819, 5311, 13, 50964, 50964, 865, 13, 400, 2171, 291, 393, 380, 2906, 721, 472, 636, 13, 51264, 51264, 1171, 5197, 11, 291, 393, 380, 2906, 8546, 721, 300, 808, 490, 264, 7154, 1228, 257, 2136, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08314812701681386, "compression_ratio": 1.591160220994475, "no_caption_prob": 7.721503061475232e-05}, {"id": 333, "seek": 257400, "start": 2586.0, "end": 2592.0, "text": " Yeah. And sometimes you can't represent things one way.", "tokens": [50364, 400, 309, 4523, 484, 291, 362, 7140, 295, 2098, 281, 2906, 264, 1412, 300, 307, 2978, 281, 4674, 552, 13, 50764, 50764, 400, 436, 439, 976, 291, 588, 819, 5311, 13, 50964, 50964, 865, 13, 400, 2171, 291, 393, 380, 2906, 721, 472, 636, 13, 51264, 51264, 1171, 5197, 11, 291, 393, 380, 2906, 8546, 721, 300, 808, 490, 264, 7154, 1228, 257, 2136, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08314812701681386, "compression_ratio": 1.591160220994475, "no_caption_prob": 7.721503061475232e-05}, {"id": 334, "seek": 257400, "start": 2592.0, "end": 2598.0, "text": " For instance, you can't represent dynamic things that come from the server using a record.", "tokens": [50364, 400, 309, 4523, 484, 291, 362, 7140, 295, 2098, 281, 2906, 264, 1412, 300, 307, 2978, 281, 4674, 552, 13, 50764, 50764, 400, 436, 439, 976, 291, 588, 819, 5311, 13, 50964, 50964, 865, 13, 400, 2171, 291, 393, 380, 2906, 721, 472, 636, 13, 51264, 51264, 1171, 5197, 11, 291, 393, 380, 2906, 8546, 721, 300, 808, 490, 264, 7154, 1228, 257, 2136, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08314812701681386, "compression_ratio": 1.591160220994475, "no_caption_prob": 7.721503061475232e-05}, {"id": 335, "seek": 259800, "start": 2598.0, "end": 2609.0, "text": " You instead need a dictionary, for instance. He mentions that it's a good idea to try to think about all the use cases or all the possible data representations", "tokens": [50364, 509, 2602, 643, 257, 25890, 11, 337, 5197, 13, 634, 23844, 300, 309, 311, 257, 665, 1558, 281, 853, 281, 519, 466, 439, 264, 764, 3331, 420, 439, 264, 1944, 1412, 33358, 50914, 50914, 293, 853, 281, 2573, 484, 264, 2306, 300, 1565, 291, 264, 881, 5311, 300, 366, 13699, 281, 428, 764, 1389, 13, 51314, 51314, 400, 286, 519, 415, 775, 257, 588, 665, 269, 3274, 337, 1310, 945, 2077, 11, 286, 500, 380, 458, 11, 926, 341, 13, 467, 311, 588, 10189, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06885732693618603, "compression_ratio": 1.6238938053097345, "no_caption_prob": 6.920812302269042e-05}, {"id": 336, "seek": 259800, "start": 2609.0, "end": 2617.0, "text": " and try to figure out the ones that bring you the most benefits that are closest to your use case.", "tokens": [50364, 509, 2602, 643, 257, 25890, 11, 337, 5197, 13, 634, 23844, 300, 309, 311, 257, 665, 1558, 281, 853, 281, 519, 466, 439, 264, 764, 3331, 420, 439, 264, 1944, 1412, 33358, 50914, 50914, 293, 853, 281, 2573, 484, 264, 2306, 300, 1565, 291, 264, 881, 5311, 300, 366, 13699, 281, 428, 764, 1389, 13, 51314, 51314, 400, 286, 519, 415, 775, 257, 588, 665, 269, 3274, 337, 1310, 945, 2077, 11, 286, 500, 380, 458, 11, 926, 341, 13, 467, 311, 588, 10189, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06885732693618603, "compression_ratio": 1.6238938053097345, "no_caption_prob": 6.920812302269042e-05}, {"id": 337, "seek": 259800, "start": 2617.0, "end": 2626.0, "text": " And I think he does a very good cata for maybe 20 minutes, I don't know, around this. It's very educational.", "tokens": [50364, 509, 2602, 643, 257, 25890, 11, 337, 5197, 13, 634, 23844, 300, 309, 311, 257, 665, 1558, 281, 853, 281, 519, 466, 439, 264, 764, 3331, 420, 439, 264, 1944, 1412, 33358, 50914, 50914, 293, 853, 281, 2573, 484, 264, 2306, 300, 1565, 291, 264, 881, 5311, 300, 366, 13699, 281, 428, 764, 1389, 13, 51314, 51314, 400, 286, 519, 415, 775, 257, 588, 665, 269, 3274, 337, 1310, 945, 2077, 11, 286, 500, 380, 458, 11, 926, 341, 13, 467, 311, 588, 10189, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06885732693618603, "compression_ratio": 1.6238938053097345, "no_caption_prob": 6.920812302269042e-05}, {"id": 338, "seek": 262600, "start": 2626.0, "end": 2634.0, "text": " Yeah, that's a good point. So what are the implications for same versus similar?", "tokens": [50364, 865, 11, 300, 311, 257, 665, 935, 13, 407, 437, 366, 264, 16602, 337, 912, 5717, 2531, 30, 50764, 50764, 1743, 11, 437, 360, 291, 360, 365, 300, 3601, 30, 1012, 775, 300, 1319, 264, 636, 291, 3109, 721, 30, 51014, 51014, 663, 1669, 385, 11, 286, 519, 11, 445, 406, 281, 1895, 15104, 721, 420, 12649, 721, 949, 286, 458, 437, 436, 486, 312, 1143, 337, 13, 51464, 51464, 1779, 13, 1779, 13, 7156, 295, 1566, 411, 11, 1954, 11, 718, 385, 2674, 1125, 341, 1520, 4995, 14980, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.12818978695159264, "compression_ratio": 1.5648535564853556, "no_caption_prob": 7.842331251595169e-05}, {"id": 339, "seek": 262600, "start": 2634.0, "end": 2639.0, "text": " Like, what do you do with that knowledge? How does that change the way you approach things?", "tokens": [50364, 865, 11, 300, 311, 257, 665, 935, 13, 407, 437, 366, 264, 16602, 337, 912, 5717, 2531, 30, 50764, 50764, 1743, 11, 437, 360, 291, 360, 365, 300, 3601, 30, 1012, 775, 300, 1319, 264, 636, 291, 3109, 721, 30, 51014, 51014, 663, 1669, 385, 11, 286, 519, 11, 445, 406, 281, 1895, 15104, 721, 420, 12649, 721, 949, 286, 458, 437, 436, 486, 312, 1143, 337, 13, 51464, 51464, 1779, 13, 1779, 13, 7156, 295, 1566, 411, 11, 1954, 11, 718, 385, 2674, 1125, 341, 1520, 4995, 14980, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.12818978695159264, "compression_ratio": 1.5648535564853556, "no_caption_prob": 7.842331251595169e-05}, {"id": 340, "seek": 262600, "start": 2639.0, "end": 2648.0, "text": " That makes me, I think, just not to refactor things or abstract things before I know what they will be used for.", "tokens": [50364, 865, 11, 300, 311, 257, 665, 935, 13, 407, 437, 366, 264, 16602, 337, 912, 5717, 2531, 30, 50764, 50764, 1743, 11, 437, 360, 291, 360, 365, 300, 3601, 30, 1012, 775, 300, 1319, 264, 636, 291, 3109, 721, 30, 51014, 51014, 663, 1669, 385, 11, 286, 519, 11, 445, 406, 281, 1895, 15104, 721, 420, 12649, 721, 949, 286, 458, 437, 436, 486, 312, 1143, 337, 13, 51464, 51464, 1779, 13, 1779, 13, 7156, 295, 1566, 411, 11, 1954, 11, 718, 385, 2674, 1125, 341, 1520, 4995, 14980, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.12818978695159264, "compression_ratio": 1.5648535564853556, "no_caption_prob": 7.842331251595169e-05}, {"id": 341, "seek": 262600, "start": 2648.0, "end": 2655.0, "text": " Right. Right. Instead of saying like, oh, let me generalize this checkbox functionality.", "tokens": [50364, 865, 11, 300, 311, 257, 665, 935, 13, 407, 437, 366, 264, 16602, 337, 912, 5717, 2531, 30, 50764, 50764, 1743, 11, 437, 360, 291, 360, 365, 300, 3601, 30, 1012, 775, 300, 1319, 264, 636, 291, 3109, 721, 30, 51014, 51014, 663, 1669, 385, 11, 286, 519, 11, 445, 406, 281, 1895, 15104, 721, 420, 12649, 721, 949, 286, 458, 437, 436, 486, 312, 1143, 337, 13, 51464, 51464, 1779, 13, 1779, 13, 7156, 295, 1566, 411, 11, 1954, 11, 718, 385, 2674, 1125, 341, 1520, 4995, 14980, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.12818978695159264, "compression_ratio": 1.5648535564853556, "no_caption_prob": 7.842331251595169e-05}, {"id": 342, "seek": 265500, "start": 2655.0, "end": 2657.0, "text": " I'll have like a checkboxes module.", "tokens": [50364, 286, 603, 362, 411, 257, 1520, 4995, 279, 10088, 13, 50464, 50464, 865, 13, 1610, 286, 362, 732, 45551, 510, 294, 452, 3861, 13, 50764, 50764, 286, 820, 1391, 12649, 300, 666, 257, 2167, 10221, 293, 365, 23265, 293, 1507, 13, 51064, 51064, 865, 13, 663, 1062, 312, 257, 665, 1558, 11, 457, 1310, 291, 643, 281, 1699, 293, 536, 577, 436, 16693, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10475573118995218, "compression_ratio": 1.4325842696629214, "no_caption_prob": 0.00016092513396870345}, {"id": 343, "seek": 265500, "start": 2657.0, "end": 2663.0, "text": " Yeah. Or I have two dialogues here in my application.", "tokens": [50364, 286, 603, 362, 411, 257, 1520, 4995, 279, 10088, 13, 50464, 50464, 865, 13, 1610, 286, 362, 732, 45551, 510, 294, 452, 3861, 13, 50764, 50764, 286, 820, 1391, 12649, 300, 666, 257, 2167, 10221, 293, 365, 23265, 293, 1507, 13, 51064, 51064, 865, 13, 663, 1062, 312, 257, 665, 1558, 11, 457, 1310, 291, 643, 281, 1699, 293, 536, 577, 436, 16693, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10475573118995218, "compression_ratio": 1.4325842696629214, "no_caption_prob": 0.00016092513396870345}, {"id": 344, "seek": 265500, "start": 2663.0, "end": 2669.0, "text": " I should probably abstract that into a single dialogue and with flags and stuff.", "tokens": [50364, 286, 603, 362, 411, 257, 1520, 4995, 279, 10088, 13, 50464, 50464, 865, 13, 1610, 286, 362, 732, 45551, 510, 294, 452, 3861, 13, 50764, 50764, 286, 820, 1391, 12649, 300, 666, 257, 2167, 10221, 293, 365, 23265, 293, 1507, 13, 51064, 51064, 865, 13, 663, 1062, 312, 257, 665, 1558, 11, 457, 1310, 291, 643, 281, 1699, 293, 536, 577, 436, 16693, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10475573118995218, "compression_ratio": 1.4325842696629214, "no_caption_prob": 0.00016092513396870345}, {"id": 345, "seek": 265500, "start": 2669.0, "end": 2675.0, "text": " Yeah. That might be a good idea, but maybe you need to wait and see how they evolve.", "tokens": [50364, 286, 603, 362, 411, 257, 1520, 4995, 279, 10088, 13, 50464, 50464, 865, 13, 1610, 286, 362, 732, 45551, 510, 294, 452, 3861, 13, 50764, 50764, 286, 820, 1391, 12649, 300, 666, 257, 2167, 10221, 293, 365, 23265, 293, 1507, 13, 51064, 51064, 865, 13, 663, 1062, 312, 257, 665, 1558, 11, 457, 1310, 291, 643, 281, 1699, 293, 536, 577, 436, 16693, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10475573118995218, "compression_ratio": 1.4325842696629214, "no_caption_prob": 0.00016092513396870345}, {"id": 346, "seek": 267500, "start": 2675.0, "end": 2686.0, "text": " Maybe that will make sense. Just have a dialogue layer, dialogue module, and have the internals be different and not one module behind flags.", "tokens": [50364, 2704, 300, 486, 652, 2020, 13, 1449, 362, 257, 10221, 4583, 11, 10221, 10088, 11, 293, 362, 264, 2154, 1124, 312, 819, 293, 406, 472, 10088, 2261, 23265, 13, 50914, 50914, 865, 13, 509, 362, 281, 519, 466, 439, 729, 37765, 11, 264, 2063, 295, 12649, 626, 293, 437, 5311, 436, 1565, 291, 13, 51314, 51314, 1779, 13, 400, 411, 264, 819, 2098, 295, 46586, 309, 293, 17827, 729, 16190, 420, 25514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09173722700639204, "compression_ratio": 1.627906976744186, "no_caption_prob": 0.00014424638357013464}, {"id": 347, "seek": 267500, "start": 2686.0, "end": 2694.0, "text": " Yeah. You have to think about all those abstraction, the cost of abstractions and what benefits they bring you.", "tokens": [50364, 2704, 300, 486, 652, 2020, 13, 1449, 362, 257, 10221, 4583, 11, 10221, 10088, 11, 293, 362, 264, 2154, 1124, 312, 819, 293, 406, 472, 10088, 2261, 23265, 13, 50914, 50914, 865, 13, 509, 362, 281, 519, 466, 439, 729, 37765, 11, 264, 2063, 295, 12649, 626, 293, 437, 5311, 436, 1565, 291, 13, 51314, 51314, 1779, 13, 400, 411, 264, 819, 2098, 295, 46586, 309, 293, 17827, 729, 16190, 420, 25514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09173722700639204, "compression_ratio": 1.627906976744186, "no_caption_prob": 0.00014424638357013464}, {"id": 348, "seek": 267500, "start": 2694.0, "end": 2700.0, "text": " Right. And like the different ways of slicing it and defining those responsibilities or domains.", "tokens": [50364, 2704, 300, 486, 652, 2020, 13, 1449, 362, 257, 10221, 4583, 11, 10221, 10088, 11, 293, 362, 264, 2154, 1124, 312, 819, 293, 406, 472, 10088, 2261, 23265, 13, 50914, 50914, 865, 13, 509, 362, 281, 519, 466, 439, 729, 37765, 11, 264, 2063, 295, 12649, 626, 293, 437, 5311, 436, 1565, 291, 13, 51314, 51314, 1779, 13, 400, 411, 264, 819, 2098, 295, 46586, 309, 293, 17827, 729, 16190, 420, 25514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09173722700639204, "compression_ratio": 1.627906976744186, "no_caption_prob": 0.00014424638357013464}, {"id": 349, "seek": 270000, "start": 2700.0, "end": 2709.0, "text": " Yeah. It's like Evan talks about just exploring a lot of different ways to model data, which I think is such a great lesson.", "tokens": [50364, 865, 13, 467, 311, 411, 22613, 6686, 466, 445, 12736, 257, 688, 295, 819, 2098, 281, 2316, 1412, 11, 597, 286, 519, 307, 1270, 257, 869, 6898, 13, 50814, 50814, 865, 11, 2138, 13, 50914, 50914, 400, 286, 519, 300, 300, 13165, 281, 12736, 577, 291, 393, 1333, 295, 12649, 746, 293, 13153, 766, 257, 1629, 6357, 13, 51314, 51314, 509, 458, 11, 411, 291, 848, 11, 307, 309, 411, 11, 411, 11, 437, 307, 264, 551, 510, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0894209390663239, "compression_ratio": 1.5253456221198156, "no_caption_prob": 2.7107405912829563e-05}, {"id": 350, "seek": 270000, "start": 2709.0, "end": 2711.0, "text": " Yeah, definitely.", "tokens": [50364, 865, 13, 467, 311, 411, 22613, 6686, 466, 445, 12736, 257, 688, 295, 819, 2098, 281, 2316, 1412, 11, 597, 286, 519, 307, 1270, 257, 869, 6898, 13, 50814, 50814, 865, 11, 2138, 13, 50914, 50914, 400, 286, 519, 300, 300, 13165, 281, 12736, 577, 291, 393, 1333, 295, 12649, 746, 293, 13153, 766, 257, 1629, 6357, 13, 51314, 51314, 509, 458, 11, 411, 291, 848, 11, 307, 309, 411, 11, 411, 11, 437, 307, 264, 551, 510, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0894209390663239, "compression_ratio": 1.5253456221198156, "no_caption_prob": 2.7107405912829563e-05}, {"id": 351, "seek": 270000, "start": 2711.0, "end": 2719.0, "text": " And I think that that applies to exploring how you can sort of abstract something and slice off a certain responsibility.", "tokens": [50364, 865, 13, 467, 311, 411, 22613, 6686, 466, 445, 12736, 257, 688, 295, 819, 2098, 281, 2316, 1412, 11, 597, 286, 519, 307, 1270, 257, 869, 6898, 13, 50814, 50814, 865, 11, 2138, 13, 50914, 50914, 400, 286, 519, 300, 300, 13165, 281, 12736, 577, 291, 393, 1333, 295, 12649, 746, 293, 13153, 766, 257, 1629, 6357, 13, 51314, 51314, 509, 458, 11, 411, 291, 848, 11, 307, 309, 411, 11, 411, 11, 437, 307, 264, 551, 510, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0894209390663239, "compression_ratio": 1.5253456221198156, "no_caption_prob": 2.7107405912829563e-05}, {"id": 352, "seek": 270000, "start": 2719.0, "end": 2722.0, "text": " You know, like you said, is it like, like, what is the thing here?", "tokens": [50364, 865, 13, 467, 311, 411, 22613, 6686, 466, 445, 12736, 257, 688, 295, 819, 2098, 281, 2316, 1412, 11, 597, 286, 519, 307, 1270, 257, 869, 6898, 13, 50814, 50814, 865, 11, 2138, 13, 50914, 50914, 400, 286, 519, 300, 300, 13165, 281, 12736, 577, 291, 393, 1333, 295, 12649, 746, 293, 13153, 766, 257, 1629, 6357, 13, 51314, 51314, 509, 458, 11, 411, 291, 848, 11, 307, 309, 411, 11, 411, 11, 437, 307, 264, 551, 510, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0894209390663239, "compression_ratio": 1.5253456221198156, "no_caption_prob": 2.7107405912829563e-05}, {"id": 353, "seek": 272200, "start": 2722.0, "end": 2730.0, "text": " Is it a dialogue or is it, you know, a user selection thing?", "tokens": [50364, 1119, 309, 257, 10221, 420, 307, 309, 11, 291, 458, 11, 257, 4195, 9450, 551, 30, 50764, 50764, 865, 13, 3013, 2314, 281, 312, 257, 10221, 11, 457, 1062, 406, 312, 4153, 13, 50964, 50964, 1779, 13, 1779, 13, 400, 1310, 341, 661, 551, 300, 311, 611, 257, 10221, 307, 370, 819, 300, 436, 434, 2531, 11, 51414, 51414, 457, 412, 264, 4965, 11, 264, 636, 300, 291, 2316, 264, 1412, 293, 439, 613, 721, 14217, 552, 366, 819, 420, 1310, 436, 366, 264, 912, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09708121617635092, "compression_ratio": 1.6824644549763033, "no_caption_prob": 6.854260391264688e-06}, {"id": 354, "seek": 272200, "start": 2730.0, "end": 2734.0, "text": " Yeah. Which happens to be a dialogue, but might not be tomorrow.", "tokens": [50364, 1119, 309, 257, 10221, 420, 307, 309, 11, 291, 458, 11, 257, 4195, 9450, 551, 30, 50764, 50764, 865, 13, 3013, 2314, 281, 312, 257, 10221, 11, 457, 1062, 406, 312, 4153, 13, 50964, 50964, 1779, 13, 1779, 13, 400, 1310, 341, 661, 551, 300, 311, 611, 257, 10221, 307, 370, 819, 300, 436, 434, 2531, 11, 51414, 51414, 457, 412, 264, 4965, 11, 264, 636, 300, 291, 2316, 264, 1412, 293, 439, 613, 721, 14217, 552, 366, 819, 420, 1310, 436, 366, 264, 912, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09708121617635092, "compression_ratio": 1.6824644549763033, "no_caption_prob": 6.854260391264688e-06}, {"id": 355, "seek": 272200, "start": 2734.0, "end": 2743.0, "text": " Right. Right. And maybe this other thing that's also a dialogue is so different that they're similar,", "tokens": [50364, 1119, 309, 257, 10221, 420, 307, 309, 11, 291, 458, 11, 257, 4195, 9450, 551, 30, 50764, 50764, 865, 13, 3013, 2314, 281, 312, 257, 10221, 11, 457, 1062, 406, 312, 4153, 13, 50964, 50964, 1779, 13, 1779, 13, 400, 1310, 341, 661, 551, 300, 311, 611, 257, 10221, 307, 370, 819, 300, 436, 434, 2531, 11, 51414, 51414, 457, 412, 264, 4965, 11, 264, 636, 300, 291, 2316, 264, 1412, 293, 439, 613, 721, 14217, 552, 366, 819, 420, 1310, 436, 366, 264, 912, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09708121617635092, "compression_ratio": 1.6824644549763033, "no_caption_prob": 6.854260391264688e-06}, {"id": 356, "seek": 272200, "start": 2743.0, "end": 2750.0, "text": " but at the core, the way that you model the data and all these things underlying them are different or maybe they are the same.", "tokens": [50364, 1119, 309, 257, 10221, 420, 307, 309, 11, 291, 458, 11, 257, 4195, 9450, 551, 30, 50764, 50764, 865, 13, 3013, 2314, 281, 312, 257, 10221, 11, 457, 1062, 406, 312, 4153, 13, 50964, 50964, 1779, 13, 1779, 13, 400, 1310, 341, 661, 551, 300, 311, 611, 257, 10221, 307, 370, 819, 300, 436, 434, 2531, 11, 51414, 51414, 457, 412, 264, 4965, 11, 264, 636, 300, 291, 2316, 264, 1412, 293, 439, 613, 721, 14217, 552, 366, 819, 420, 1310, 436, 366, 264, 912, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09708121617635092, "compression_ratio": 1.6824644549763033, "no_caption_prob": 6.854260391264688e-06}, {"id": 357, "seek": 275000, "start": 2750.0, "end": 2759.0, "text": " But you can like I think it's good to practice just slicing things a lot of different ways, like just write it down on paper.", "tokens": [50364, 583, 291, 393, 411, 286, 519, 309, 311, 665, 281, 3124, 445, 46586, 721, 257, 688, 295, 819, 2098, 11, 411, 445, 2464, 309, 760, 322, 3035, 13, 50814, 50814, 1743, 11, 437, 366, 439, 264, 819, 2098, 291, 727, 2826, 264, 26764, 3876, 30, 51064, 51064, 509, 458, 11, 411, 341, 11, 341, 307, 472, 6357, 13, 639, 307, 472, 6357, 13, 1449, 2464, 760, 3195, 295, 819, 2098, 13, 51364, 51364, 1436, 498, 291, 787, 362, 264, 700, 551, 300, 1487, 281, 1575, 382, 264, 787, 3922, 291, 362, 11, 291, 434, 534, 22083, 1803, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07818945248921712, "compression_ratio": 1.756, "no_caption_prob": 9.460301953367889e-05}, {"id": 358, "seek": 275000, "start": 2759.0, "end": 2764.0, "text": " Like, what are all the different ways you could choose the dividing lines?", "tokens": [50364, 583, 291, 393, 411, 286, 519, 309, 311, 665, 281, 3124, 445, 46586, 721, 257, 688, 295, 819, 2098, 11, 411, 445, 2464, 309, 760, 322, 3035, 13, 50814, 50814, 1743, 11, 437, 366, 439, 264, 819, 2098, 291, 727, 2826, 264, 26764, 3876, 30, 51064, 51064, 509, 458, 11, 411, 341, 11, 341, 307, 472, 6357, 13, 639, 307, 472, 6357, 13, 1449, 2464, 760, 3195, 295, 819, 2098, 13, 51364, 51364, 1436, 498, 291, 787, 362, 264, 700, 551, 300, 1487, 281, 1575, 382, 264, 787, 3922, 291, 362, 11, 291, 434, 534, 22083, 1803, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07818945248921712, "compression_ratio": 1.756, "no_caption_prob": 9.460301953367889e-05}, {"id": 359, "seek": 275000, "start": 2764.0, "end": 2770.0, "text": " You know, like this, this is one responsibility. This is one responsibility. Just write down lots of different ways.", "tokens": [50364, 583, 291, 393, 411, 286, 519, 309, 311, 665, 281, 3124, 445, 46586, 721, 257, 688, 295, 819, 2098, 11, 411, 445, 2464, 309, 760, 322, 3035, 13, 50814, 50814, 1743, 11, 437, 366, 439, 264, 819, 2098, 291, 727, 2826, 264, 26764, 3876, 30, 51064, 51064, 509, 458, 11, 411, 341, 11, 341, 307, 472, 6357, 13, 639, 307, 472, 6357, 13, 1449, 2464, 760, 3195, 295, 819, 2098, 13, 51364, 51364, 1436, 498, 291, 787, 362, 264, 700, 551, 300, 1487, 281, 1575, 382, 264, 787, 3922, 291, 362, 11, 291, 434, 534, 22083, 1803, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07818945248921712, "compression_ratio": 1.756, "no_caption_prob": 9.460301953367889e-05}, {"id": 360, "seek": 275000, "start": 2770.0, "end": 2778.0, "text": " Because if you only have the first thing that comes to mind as the only choice you have, you're really limiting yourself.", "tokens": [50364, 583, 291, 393, 411, 286, 519, 309, 311, 665, 281, 3124, 445, 46586, 721, 257, 688, 295, 819, 2098, 11, 411, 445, 2464, 309, 760, 322, 3035, 13, 50814, 50814, 1743, 11, 437, 366, 439, 264, 819, 2098, 291, 727, 2826, 264, 26764, 3876, 30, 51064, 51064, 509, 458, 11, 411, 341, 11, 341, 307, 472, 6357, 13, 639, 307, 472, 6357, 13, 1449, 2464, 760, 3195, 295, 819, 2098, 13, 51364, 51364, 1436, 498, 291, 787, 362, 264, 700, 551, 300, 1487, 281, 1575, 382, 264, 787, 3922, 291, 362, 11, 291, 434, 534, 22083, 1803, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07818945248921712, "compression_ratio": 1.756, "no_caption_prob": 9.460301953367889e-05}, {"id": 361, "seek": 277800, "start": 2778.0, "end": 2789.0, "text": " And I think that in this process, the best teacher is experience and experience that comes through actually experimenting and feeling the pain.", "tokens": [50364, 400, 286, 519, 300, 294, 341, 1399, 11, 264, 1151, 5027, 307, 1752, 293, 1752, 300, 1487, 807, 767, 29070, 293, 2633, 264, 1822, 13, 50914, 50914, 400, 498, 291, 500, 380, 2089, 1803, 281, 841, 264, 1822, 295, 406, 1419, 364, 37765, 11, 291, 434, 406, 516, 281, 1466, 729, 721, 13, 51214, 51214, 583, 498, 291, 360, 11, 2171, 291, 603, 352, 281, 257, 3116, 917, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.034386576038517365, "compression_ratio": 1.625, "no_caption_prob": 0.00019712002540472895}, {"id": 362, "seek": 277800, "start": 2789.0, "end": 2795.0, "text": " And if you don't allow yourself to feel the pain of not having an abstraction, you're not going to learn those things.", "tokens": [50364, 400, 286, 519, 300, 294, 341, 1399, 11, 264, 1151, 5027, 307, 1752, 293, 1752, 300, 1487, 807, 767, 29070, 293, 2633, 264, 1822, 13, 50914, 50914, 400, 498, 291, 500, 380, 2089, 1803, 281, 841, 264, 1822, 295, 406, 1419, 364, 37765, 11, 291, 434, 406, 516, 281, 1466, 729, 721, 13, 51214, 51214, 583, 498, 291, 360, 11, 2171, 291, 603, 352, 281, 257, 3116, 917, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.034386576038517365, "compression_ratio": 1.625, "no_caption_prob": 0.00019712002540472895}, {"id": 363, "seek": 277800, "start": 2795.0, "end": 2800.0, "text": " But if you do, sometimes you'll go to a dead end.", "tokens": [50364, 400, 286, 519, 300, 294, 341, 1399, 11, 264, 1151, 5027, 307, 1752, 293, 1752, 300, 1487, 807, 767, 29070, 293, 2633, 264, 1822, 13, 50914, 50914, 400, 498, 291, 500, 380, 2089, 1803, 281, 841, 264, 1822, 295, 406, 1419, 364, 37765, 11, 291, 434, 406, 516, 281, 1466, 729, 721, 13, 51214, 51214, 583, 498, 291, 360, 11, 2171, 291, 603, 352, 281, 257, 3116, 917, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.034386576038517365, "compression_ratio": 1.625, "no_caption_prob": 0.00019712002540472895}, {"id": 364, "seek": 280000, "start": 2800.0, "end": 2808.0, "text": " Sometimes you won't, but you'll be paying attention to, you know, I don't have an abstraction here. OK, why is that painful?", "tokens": [50364, 4803, 291, 1582, 380, 11, 457, 291, 603, 312, 6229, 3202, 281, 11, 291, 458, 11, 286, 500, 380, 362, 364, 37765, 510, 13, 2264, 11, 983, 307, 300, 11697, 30, 50764, 50764, 708, 311, 11697, 466, 309, 30, 400, 300, 311, 3585, 291, 746, 466, 264, 6357, 13, 50964, 50964, 400, 291, 643, 281, 2140, 281, 300, 13, 6557, 466, 819, 2098, 291, 727, 6964, 729, 16190, 293, 853, 309, 13, 51264, 51264, 400, 300, 311, 577, 291, 1466, 13, 407, 321, 751, 466, 257, 688, 466, 37447, 294, 341, 3500, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.051810495632210955, "compression_ratio": 1.6528925619834711, "no_caption_prob": 1.723124660202302e-05}, {"id": 365, "seek": 280000, "start": 2808.0, "end": 2812.0, "text": " What's painful about it? And that's telling you something about the responsibility.", "tokens": [50364, 4803, 291, 1582, 380, 11, 457, 291, 603, 312, 6229, 3202, 281, 11, 291, 458, 11, 286, 500, 380, 362, 364, 37765, 510, 13, 2264, 11, 983, 307, 300, 11697, 30, 50764, 50764, 708, 311, 11697, 466, 309, 30, 400, 300, 311, 3585, 291, 746, 466, 264, 6357, 13, 50964, 50964, 400, 291, 643, 281, 2140, 281, 300, 13, 6557, 466, 819, 2098, 291, 727, 6964, 729, 16190, 293, 853, 309, 13, 51264, 51264, 400, 300, 311, 577, 291, 1466, 13, 407, 321, 751, 466, 257, 688, 466, 37447, 294, 341, 3500, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.051810495632210955, "compression_ratio": 1.6528925619834711, "no_caption_prob": 1.723124660202302e-05}, {"id": 366, "seek": 280000, "start": 2812.0, "end": 2818.0, "text": " And you need to listen to that. Think about different ways you could define those responsibilities and try it.", "tokens": [50364, 4803, 291, 1582, 380, 11, 457, 291, 603, 312, 6229, 3202, 281, 11, 291, 458, 11, 286, 500, 380, 362, 364, 37765, 510, 13, 2264, 11, 983, 307, 300, 11697, 30, 50764, 50764, 708, 311, 11697, 466, 309, 30, 400, 300, 311, 3585, 291, 746, 466, 264, 6357, 13, 50964, 50964, 400, 291, 643, 281, 2140, 281, 300, 13, 6557, 466, 819, 2098, 291, 727, 6964, 729, 16190, 293, 853, 309, 13, 51264, 51264, 400, 300, 311, 577, 291, 1466, 13, 407, 321, 751, 466, 257, 688, 466, 37447, 294, 341, 3500, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.051810495632210955, "compression_ratio": 1.6528925619834711, "no_caption_prob": 1.723124660202302e-05}, {"id": 367, "seek": 280000, "start": 2818.0, "end": 2824.0, "text": " And that's how you learn. So we talk about a lot about coupling in this episode.", "tokens": [50364, 4803, 291, 1582, 380, 11, 457, 291, 603, 312, 6229, 3202, 281, 11, 291, 458, 11, 286, 500, 380, 362, 364, 37765, 510, 13, 2264, 11, 983, 307, 300, 11697, 30, 50764, 50764, 708, 311, 11697, 466, 309, 30, 400, 300, 311, 3585, 291, 746, 466, 264, 6357, 13, 50964, 50964, 400, 291, 643, 281, 2140, 281, 300, 13, 6557, 466, 819, 2098, 291, 727, 6964, 729, 16190, 293, 853, 309, 13, 51264, 51264, 400, 300, 311, 577, 291, 1466, 13, 407, 321, 751, 466, 257, 688, 466, 37447, 294, 341, 3500, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.051810495632210955, "compression_ratio": 1.6528925619834711, "no_caption_prob": 1.723124660202302e-05}, {"id": 368, "seek": 282400, "start": 2824.0, "end": 2832.0, "text": " That is actually not very much part of my vocabulary. I don't think about coupling.", "tokens": [50364, 663, 307, 767, 406, 588, 709, 644, 295, 452, 19864, 13, 286, 500, 380, 519, 466, 37447, 13, 50764, 50764, 708, 286, 519, 466, 307, 1455, 6243, 4368, 6243, 13, 50964, 50964, 407, 5699, 286, 536, 257, 1412, 3877, 689, 264, 7909, 393, 312, 294, 257, 1785, 300, 307, 34702, 11, 300, 311, 689, 286, 519, 466, 1455, 6243, 4368, 6243, 293, 2684, 552, 484, 281, 257, 777, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07360481571506809, "compression_ratio": 1.7486631016042782, "no_caption_prob": 0.00011590040230657905}, {"id": 369, "seek": 282400, "start": 2832.0, "end": 2836.0, "text": " What I think about is making impossible states impossible.", "tokens": [50364, 663, 307, 767, 406, 588, 709, 644, 295, 452, 19864, 13, 286, 500, 380, 519, 466, 37447, 13, 50764, 50764, 708, 286, 519, 466, 307, 1455, 6243, 4368, 6243, 13, 50964, 50964, 407, 5699, 286, 536, 257, 1412, 3877, 689, 264, 7909, 393, 312, 294, 257, 1785, 300, 307, 34702, 11, 300, 311, 689, 286, 519, 466, 1455, 6243, 4368, 6243, 293, 2684, 552, 484, 281, 257, 777, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07360481571506809, "compression_ratio": 1.7486631016042782, "no_caption_prob": 0.00011590040230657905}, {"id": 370, "seek": 282400, "start": 2836.0, "end": 2852.0, "text": " So whenever I see a data structure where the fields can be in a state that is invalid, that's where I think about making impossible states impossible and moving them out to a new type.", "tokens": [50364, 663, 307, 767, 406, 588, 709, 644, 295, 452, 19864, 13, 286, 500, 380, 519, 466, 37447, 13, 50764, 50764, 708, 286, 519, 466, 307, 1455, 6243, 4368, 6243, 13, 50964, 50964, 407, 5699, 286, 536, 257, 1412, 3877, 689, 264, 7909, 393, 312, 294, 257, 1785, 300, 307, 34702, 11, 300, 311, 689, 286, 519, 466, 1455, 6243, 4368, 6243, 293, 2684, 552, 484, 281, 257, 777, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07360481571506809, "compression_ratio": 1.7486631016042782, "no_caption_prob": 0.00011590040230657905}, {"id": 371, "seek": 285200, "start": 2852.0, "end": 2858.0, "text": " I never think about the word coupling, but I think essentially that is pretty much it right.", "tokens": [50364, 286, 1128, 519, 466, 264, 1349, 37447, 11, 457, 286, 519, 4476, 300, 307, 1238, 709, 309, 558, 13, 50664, 50664, 1610, 611, 1242, 1507, 294, 20271, 13, 50814, 50814, 865, 13, 30187, 1412, 294, 20271, 420, 1419, 264, 21977, 11, 264, 6159, 7642, 23505, 370, 300, 641, 4368, 366, 29482, 294, 264, 558, 636, 13, 51314, 51314, 821, 311, 257, 37447, 295, 4368, 11, 295, 1412, 4368, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13725996670657642, "compression_ratio": 1.5707070707070707, "no_caption_prob": 1.1659379197226372e-05}, {"id": 372, "seek": 285200, "start": 2858.0, "end": 2861.0, "text": " Or also getting stuff in sync.", "tokens": [50364, 286, 1128, 519, 466, 264, 1349, 37447, 11, 457, 286, 519, 4476, 300, 307, 1238, 709, 309, 558, 13, 50664, 50664, 1610, 611, 1242, 1507, 294, 20271, 13, 50814, 50814, 865, 13, 30187, 1412, 294, 20271, 420, 1419, 264, 21977, 11, 264, 6159, 7642, 23505, 370, 300, 641, 4368, 366, 29482, 294, 264, 558, 636, 13, 51314, 51314, 821, 311, 257, 37447, 295, 4368, 11, 295, 1412, 4368, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13725996670657642, "compression_ratio": 1.5707070707070707, "no_caption_prob": 1.1659379197226372e-05}, {"id": 373, "seek": 285200, "start": 2861.0, "end": 2871.0, "text": " Yeah. Keeping data in sync or having the variance, the relationships defined appropriately so that their states are coupled in the right way.", "tokens": [50364, 286, 1128, 519, 466, 264, 1349, 37447, 11, 457, 286, 519, 4476, 300, 307, 1238, 709, 309, 558, 13, 50664, 50664, 1610, 611, 1242, 1507, 294, 20271, 13, 50814, 50814, 865, 13, 30187, 1412, 294, 20271, 420, 1419, 264, 21977, 11, 264, 6159, 7642, 23505, 370, 300, 641, 4368, 366, 29482, 294, 264, 558, 636, 13, 51314, 51314, 821, 311, 257, 37447, 295, 4368, 11, 295, 1412, 4368, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13725996670657642, "compression_ratio": 1.5707070707070707, "no_caption_prob": 1.1659379197226372e-05}, {"id": 374, "seek": 285200, "start": 2871.0, "end": 2874.0, "text": " There's a coupling of states, of data states.", "tokens": [50364, 286, 1128, 519, 466, 264, 1349, 37447, 11, 457, 286, 519, 4476, 300, 307, 1238, 709, 309, 558, 13, 50664, 50664, 1610, 611, 1242, 1507, 294, 20271, 13, 50814, 50814, 865, 13, 30187, 1412, 294, 20271, 420, 1419, 264, 21977, 11, 264, 6159, 7642, 23505, 370, 300, 641, 4368, 366, 29482, 294, 264, 558, 636, 13, 51314, 51314, 821, 311, 257, 37447, 295, 4368, 11, 295, 1412, 4368, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13725996670657642, "compression_ratio": 1.5707070707070707, "no_caption_prob": 1.1659379197226372e-05}, {"id": 375, "seek": 287400, "start": 2874.0, "end": 2890.0, "text": " Yeah. If this field needs to change every time that field needs to be changed, that is probably that makes sense to have a data structure or not be represented, but just recomputed every time.", "tokens": [50364, 865, 13, 759, 341, 2519, 2203, 281, 1319, 633, 565, 300, 2519, 2203, 281, 312, 3105, 11, 300, 307, 1391, 300, 1669, 2020, 281, 362, 257, 1412, 3877, 420, 406, 312, 10379, 11, 457, 445, 23334, 2582, 292, 633, 565, 13, 51164, 51164, 663, 311, 1880, 13, 286, 2138, 519, 300, 264, 721, 291, 434, 1417, 466, 366, 257, 1465, 295, 37447, 13, 51514, 51514, 286, 478, 406, 988, 286, 576, 352, 370, 1400, 382, 281, 584, 300, 300, 311, 264, 787, 551, 300, 307, 257, 1465, 295, 37447, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09754561363382543, "compression_ratio": 1.7477477477477477, "no_caption_prob": 7.254131196532398e-05}, {"id": 376, "seek": 287400, "start": 2890.0, "end": 2897.0, "text": " That's interesting. I definitely think that the things you're talking about are a sign of coupling.", "tokens": [50364, 865, 13, 759, 341, 2519, 2203, 281, 1319, 633, 565, 300, 2519, 2203, 281, 312, 3105, 11, 300, 307, 1391, 300, 1669, 2020, 281, 362, 257, 1412, 3877, 420, 406, 312, 10379, 11, 457, 445, 23334, 2582, 292, 633, 565, 13, 51164, 51164, 663, 311, 1880, 13, 286, 2138, 519, 300, 264, 721, 291, 434, 1417, 466, 366, 257, 1465, 295, 37447, 13, 51514, 51514, 286, 478, 406, 988, 286, 576, 352, 370, 1400, 382, 281, 584, 300, 300, 311, 264, 787, 551, 300, 307, 257, 1465, 295, 37447, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09754561363382543, "compression_ratio": 1.7477477477477477, "no_caption_prob": 7.254131196532398e-05}, {"id": 377, "seek": 287400, "start": 2897.0, "end": 2902.0, "text": " I'm not sure I would go so far as to say that that's the only thing that is a sign of coupling.", "tokens": [50364, 865, 13, 759, 341, 2519, 2203, 281, 1319, 633, 565, 300, 2519, 2203, 281, 312, 3105, 11, 300, 307, 1391, 300, 1669, 2020, 281, 362, 257, 1412, 3877, 420, 406, 312, 10379, 11, 457, 445, 23334, 2582, 292, 633, 565, 13, 51164, 51164, 663, 311, 1880, 13, 286, 2138, 519, 300, 264, 721, 291, 434, 1417, 466, 366, 257, 1465, 295, 37447, 13, 51514, 51514, 286, 478, 406, 988, 286, 576, 352, 370, 1400, 382, 281, 584, 300, 300, 311, 264, 787, 551, 300, 307, 257, 1465, 295, 37447, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09754561363382543, "compression_ratio": 1.7477477477477477, "no_caption_prob": 7.254131196532398e-05}, {"id": 378, "seek": 290200, "start": 2902.0, "end": 2906.0, "text": " No, no, definitely not. But that is what I have in mind.", "tokens": [50364, 883, 11, 572, 11, 2138, 406, 13, 583, 300, 307, 437, 286, 362, 294, 1575, 13, 50564, 50564, 663, 1062, 445, 312, 570, 286, 478, 406, 439, 300, 1143, 281, 1228, 264, 1349, 37447, 294, 452, 7429, 1691, 13, 50964, 50964, 467, 311, 257, 588, 12649, 1349, 13, 286, 767, 360, 764, 300, 1349, 257, 688, 11, 457, 286, 519, 1310, 257, 1101, 1349, 337, 309, 307, 445, 6357, 13, 51414, 51414, 1012, 867, 16190, 775, 264, 912, 551, 362, 30, 467, 311, 257, 688, 544, 3303, 281, 519, 295, 309, 294, 2115, 295, 16190, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0895627784729004, "compression_ratio": 1.6722689075630253, "no_caption_prob": 0.00022691849153488874}, {"id": 379, "seek": 290200, "start": 2906.0, "end": 2914.0, "text": " That might just be because I'm not all that used to using the word coupling in my everyday job.", "tokens": [50364, 883, 11, 572, 11, 2138, 406, 13, 583, 300, 307, 437, 286, 362, 294, 1575, 13, 50564, 50564, 663, 1062, 445, 312, 570, 286, 478, 406, 439, 300, 1143, 281, 1228, 264, 1349, 37447, 294, 452, 7429, 1691, 13, 50964, 50964, 467, 311, 257, 588, 12649, 1349, 13, 286, 767, 360, 764, 300, 1349, 257, 688, 11, 457, 286, 519, 1310, 257, 1101, 1349, 337, 309, 307, 445, 6357, 13, 51414, 51414, 1012, 867, 16190, 775, 264, 912, 551, 362, 30, 467, 311, 257, 688, 544, 3303, 281, 519, 295, 309, 294, 2115, 295, 16190, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0895627784729004, "compression_ratio": 1.6722689075630253, "no_caption_prob": 0.00022691849153488874}, {"id": 380, "seek": 290200, "start": 2914.0, "end": 2923.0, "text": " It's a very abstract word. I actually do use that word a lot, but I think maybe a better word for it is just responsibility.", "tokens": [50364, 883, 11, 572, 11, 2138, 406, 13, 583, 300, 307, 437, 286, 362, 294, 1575, 13, 50564, 50564, 663, 1062, 445, 312, 570, 286, 478, 406, 439, 300, 1143, 281, 1228, 264, 1349, 37447, 294, 452, 7429, 1691, 13, 50964, 50964, 467, 311, 257, 588, 12649, 1349, 13, 286, 767, 360, 764, 300, 1349, 257, 688, 11, 457, 286, 519, 1310, 257, 1101, 1349, 337, 309, 307, 445, 6357, 13, 51414, 51414, 1012, 867, 16190, 775, 264, 912, 551, 362, 30, 467, 311, 257, 688, 544, 3303, 281, 519, 295, 309, 294, 2115, 295, 16190, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0895627784729004, "compression_ratio": 1.6722689075630253, "no_caption_prob": 0.00022691849153488874}, {"id": 381, "seek": 290200, "start": 2923.0, "end": 2929.0, "text": " How many responsibilities does the same thing have? It's a lot more natural to think of it in terms of responsibilities.", "tokens": [50364, 883, 11, 572, 11, 2138, 406, 13, 583, 300, 307, 437, 286, 362, 294, 1575, 13, 50564, 50564, 663, 1062, 445, 312, 570, 286, 478, 406, 439, 300, 1143, 281, 1228, 264, 1349, 37447, 294, 452, 7429, 1691, 13, 50964, 50964, 467, 311, 257, 588, 12649, 1349, 13, 286, 767, 360, 764, 300, 1349, 257, 688, 11, 457, 286, 519, 1310, 257, 1101, 1349, 337, 309, 307, 445, 6357, 13, 51414, 51414, 1012, 867, 16190, 775, 264, 912, 551, 362, 30, 467, 311, 257, 688, 544, 3303, 281, 519, 295, 309, 294, 2115, 295, 16190, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0895627784729004, "compression_ratio": 1.6722689075630253, "no_caption_prob": 0.00022691849153488874}, {"id": 382, "seek": 292900, "start": 2929.0, "end": 2934.0, "text": " You could have a conversation with a child and talk about, what do you think this is responsible for?", "tokens": [50364, 509, 727, 362, 257, 3761, 365, 257, 1440, 293, 751, 466, 11, 437, 360, 291, 519, 341, 307, 6250, 337, 30, 50614, 50614, 708, 311, 341, 6250, 337, 30, 400, 436, 727, 362, 257, 10248, 3761, 365, 291, 466, 309, 13, 50814, 50814, 400, 291, 500, 380, 643, 281, 2903, 604, 10392, 281, 552, 11, 597, 307, 257, 1465, 300, 309, 311, 257, 665, 1349, 570, 291, 393, 8881, 412, 665, 12649, 626, 538, 1953, 466, 341, 2199, 1558, 293, 37447, 13, 51414, 51414, 467, 311, 411, 11, 437, 775, 300, 754, 914, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06994859053164112, "compression_ratio": 1.7394957983193278, "no_caption_prob": 5.649479498970322e-05}, {"id": 383, "seek": 292900, "start": 2934.0, "end": 2938.0, "text": " What's this responsible for? And they could have a brilliant conversation with you about it.", "tokens": [50364, 509, 727, 362, 257, 3761, 365, 257, 1440, 293, 751, 466, 11, 437, 360, 291, 519, 341, 307, 6250, 337, 30, 50614, 50614, 708, 311, 341, 6250, 337, 30, 400, 436, 727, 362, 257, 10248, 3761, 365, 291, 466, 309, 13, 50814, 50814, 400, 291, 500, 380, 643, 281, 2903, 604, 10392, 281, 552, 11, 597, 307, 257, 1465, 300, 309, 311, 257, 665, 1349, 570, 291, 393, 8881, 412, 665, 12649, 626, 538, 1953, 466, 341, 2199, 1558, 293, 37447, 13, 51414, 51414, 467, 311, 411, 11, 437, 775, 300, 754, 914, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06994859053164112, "compression_ratio": 1.7394957983193278, "no_caption_prob": 5.649479498970322e-05}, {"id": 384, "seek": 292900, "start": 2938.0, "end": 2950.0, "text": " And you don't need to explain any concepts to them, which is a sign that it's a good word because you can arrive at good abstractions by thinking about this simple idea and coupling.", "tokens": [50364, 509, 727, 362, 257, 3761, 365, 257, 1440, 293, 751, 466, 11, 437, 360, 291, 519, 341, 307, 6250, 337, 30, 50614, 50614, 708, 311, 341, 6250, 337, 30, 400, 436, 727, 362, 257, 10248, 3761, 365, 291, 466, 309, 13, 50814, 50814, 400, 291, 500, 380, 643, 281, 2903, 604, 10392, 281, 552, 11, 597, 307, 257, 1465, 300, 309, 311, 257, 665, 1349, 570, 291, 393, 8881, 412, 665, 12649, 626, 538, 1953, 466, 341, 2199, 1558, 293, 37447, 13, 51414, 51414, 467, 311, 411, 11, 437, 775, 300, 754, 914, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06994859053164112, "compression_ratio": 1.7394957983193278, "no_caption_prob": 5.649479498970322e-05}, {"id": 385, "seek": 292900, "start": 2950.0, "end": 2952.0, "text": " It's like, what does that even mean?", "tokens": [50364, 509, 727, 362, 257, 3761, 365, 257, 1440, 293, 751, 466, 11, 437, 360, 291, 519, 341, 307, 6250, 337, 30, 50614, 50614, 708, 311, 341, 6250, 337, 30, 400, 436, 727, 362, 257, 10248, 3761, 365, 291, 466, 309, 13, 50814, 50814, 400, 291, 500, 380, 643, 281, 2903, 604, 10392, 281, 552, 11, 597, 307, 257, 1465, 300, 309, 311, 257, 665, 1349, 570, 291, 393, 8881, 412, 665, 12649, 626, 538, 1953, 466, 341, 2199, 1558, 293, 37447, 13, 51414, 51414, 467, 311, 411, 11, 437, 775, 300, 754, 914, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06994859053164112, "compression_ratio": 1.7394957983193278, "no_caption_prob": 5.649479498970322e-05}, {"id": 386, "seek": 295200, "start": 2952.0, "end": 2960.0, "text": " I don't even know how you say coupling in French. I don't know how to say responsibility.", "tokens": [50364, 286, 500, 380, 754, 458, 577, 291, 584, 37447, 294, 5522, 13, 286, 500, 380, 458, 577, 281, 584, 6357, 13, 50764, 50764, 14711, 13, 407, 577, 820, 561, 483, 1409, 365, 9275, 613, 3487, 295, 264, 993, 295, 257, 3991, 281, 641, 7429, 17720, 30, 51264, 51264, 2386, 295, 439, 11, 286, 841, 411, 286, 1009, 584, 341, 11, 457, 445, 1159, 264, 751, 420, 1401, 264, 7222, 13, 51614, 51614, 1664, 380, 352, 2085, 365, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10395775071109634, "compression_ratio": 1.5330188679245282, "no_caption_prob": 2.931062954303343e-05}, {"id": 387, "seek": 295200, "start": 2960.0, "end": 2970.0, "text": " Interesting. So how should people get started with applying these ideas of the life of a file to their everyday coding?", "tokens": [50364, 286, 500, 380, 754, 458, 577, 291, 584, 37447, 294, 5522, 13, 286, 500, 380, 458, 577, 281, 584, 6357, 13, 50764, 50764, 14711, 13, 407, 577, 820, 561, 483, 1409, 365, 9275, 613, 3487, 295, 264, 993, 295, 257, 3991, 281, 641, 7429, 17720, 30, 51264, 51264, 2386, 295, 439, 11, 286, 841, 411, 286, 1009, 584, 341, 11, 457, 445, 1159, 264, 751, 420, 1401, 264, 7222, 13, 51614, 51614, 1664, 380, 352, 2085, 365, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10395775071109634, "compression_ratio": 1.5330188679245282, "no_caption_prob": 2.931062954303343e-05}, {"id": 388, "seek": 295200, "start": 2970.0, "end": 2977.0, "text": " First of all, I feel like I always say this, but just watch the talk or read the article.", "tokens": [50364, 286, 500, 380, 754, 458, 577, 291, 584, 37447, 294, 5522, 13, 286, 500, 380, 458, 577, 281, 584, 6357, 13, 50764, 50764, 14711, 13, 407, 577, 820, 561, 483, 1409, 365, 9275, 613, 3487, 295, 264, 993, 295, 257, 3991, 281, 641, 7429, 17720, 30, 51264, 51264, 2386, 295, 439, 11, 286, 841, 411, 286, 1009, 584, 341, 11, 457, 445, 1159, 264, 751, 420, 1401, 264, 7222, 13, 51614, 51614, 1664, 380, 352, 2085, 365, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10395775071109634, "compression_ratio": 1.5330188679245282, "no_caption_prob": 2.931062954303343e-05}, {"id": 389, "seek": 295200, "start": 2977.0, "end": 2979.0, "text": " Can't go wrong with that.", "tokens": [50364, 286, 500, 380, 754, 458, 577, 291, 584, 37447, 294, 5522, 13, 286, 500, 380, 458, 577, 281, 584, 6357, 13, 50764, 50764, 14711, 13, 407, 577, 820, 561, 483, 1409, 365, 9275, 613, 3487, 295, 264, 993, 295, 257, 3991, 281, 641, 7429, 17720, 30, 51264, 51264, 2386, 295, 439, 11, 286, 841, 411, 286, 1009, 584, 341, 11, 457, 445, 1159, 264, 751, 420, 1401, 264, 7222, 13, 51614, 51614, 1664, 380, 352, 2085, 365, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10395775071109634, "compression_ratio": 1.5330188679245282, "no_caption_prob": 2.931062954303343e-05}, {"id": 390, "seek": 297900, "start": 2979.0, "end": 2987.0, "text": " Yeah, it's not even watch it, watch it, then rewatch it, then rewatch it again and again.", "tokens": [50364, 865, 11, 309, 311, 406, 754, 1159, 309, 11, 1159, 309, 11, 550, 319, 15219, 309, 11, 550, 319, 15219, 309, 797, 293, 797, 13, 50764, 50764, 3664, 512, 5570, 11, 853, 512, 295, 264, 7512, 11, 483, 512, 10249, 13, 50964, 50964, 865, 13, 6526, 281, 841, 264, 1822, 13, 1449, 3124, 406, 12649, 278, 886, 2440, 13, 51264, 51264, 400, 562, 291, 841, 264, 1822, 11, 562, 291, 841, 2740, 11, 550, 1895, 15104, 293, 1286, 721, 666, 3467, 11, 666, 1412, 9227, 11, 293, 550, 666, 16679, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12587297339188425, "compression_ratio": 1.801980198019802, "no_caption_prob": 5.9201378462603316e-05}, {"id": 391, "seek": 297900, "start": 2987.0, "end": 2991.0, "text": " Take some notes, try some of the techniques, get some inspiration.", "tokens": [50364, 865, 11, 309, 311, 406, 754, 1159, 309, 11, 1159, 309, 11, 550, 319, 15219, 309, 11, 550, 319, 15219, 309, 797, 293, 797, 13, 50764, 50764, 3664, 512, 5570, 11, 853, 512, 295, 264, 7512, 11, 483, 512, 10249, 13, 50964, 50964, 865, 13, 6526, 281, 841, 264, 1822, 13, 1449, 3124, 406, 12649, 278, 886, 2440, 13, 51264, 51264, 400, 562, 291, 841, 264, 1822, 11, 562, 291, 841, 2740, 11, 550, 1895, 15104, 293, 1286, 721, 666, 3467, 11, 666, 1412, 9227, 11, 293, 550, 666, 16679, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12587297339188425, "compression_ratio": 1.801980198019802, "no_caption_prob": 5.9201378462603316e-05}, {"id": 392, "seek": 297900, "start": 2991.0, "end": 2997.0, "text": " Yeah. Try to feel the pain. Just practice not abstracting too early.", "tokens": [50364, 865, 11, 309, 311, 406, 754, 1159, 309, 11, 1159, 309, 11, 550, 319, 15219, 309, 11, 550, 319, 15219, 309, 797, 293, 797, 13, 50764, 50764, 3664, 512, 5570, 11, 853, 512, 295, 264, 7512, 11, 483, 512, 10249, 13, 50964, 50964, 865, 13, 6526, 281, 841, 264, 1822, 13, 1449, 3124, 406, 12649, 278, 886, 2440, 13, 51264, 51264, 400, 562, 291, 841, 264, 1822, 11, 562, 291, 841, 2740, 11, 550, 1895, 15104, 293, 1286, 721, 666, 3467, 11, 666, 1412, 9227, 11, 293, 550, 666, 16679, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12587297339188425, "compression_ratio": 1.801980198019802, "no_caption_prob": 5.9201378462603316e-05}, {"id": 393, "seek": 297900, "start": 2997.0, "end": 3007.0, "text": " And when you feel the pain, when you feel problems, then refactor and move things into types, into data structures, and then into modules.", "tokens": [50364, 865, 11, 309, 311, 406, 754, 1159, 309, 11, 1159, 309, 11, 550, 319, 15219, 309, 11, 550, 319, 15219, 309, 797, 293, 797, 13, 50764, 50764, 3664, 512, 5570, 11, 853, 512, 295, 264, 7512, 11, 483, 512, 10249, 13, 50964, 50964, 865, 13, 6526, 281, 841, 264, 1822, 13, 1449, 3124, 406, 12649, 278, 886, 2440, 13, 51264, 51264, 400, 562, 291, 841, 264, 1822, 11, 562, 291, 841, 2740, 11, 550, 1895, 15104, 293, 1286, 721, 666, 3467, 11, 666, 1412, 9227, 11, 293, 550, 666, 16679, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12587297339188425, "compression_ratio": 1.801980198019802, "no_caption_prob": 5.9201378462603316e-05}, {"id": 394, "seek": 300700, "start": 3007.0, "end": 3020.0, "text": " And then when you have more experience, when you can tell that something will benefit being into its own module without it being premature abstraction, do that.", "tokens": [50364, 400, 550, 562, 291, 362, 544, 1752, 11, 562, 291, 393, 980, 300, 746, 486, 5121, 885, 666, 1080, 1065, 10088, 1553, 309, 885, 34877, 37765, 11, 360, 300, 13, 51014, 51014, 400, 1338, 11, 652, 6243, 4368, 6243, 13, 759, 291, 2378, 380, 13207, 281, 300, 3500, 11, 352, 2140, 281, 300, 472, 13, 51464, 51464, 865, 11, 456, 311, 19959, 1296, 439, 613, 3487, 11, 597, 307, 11, 291, 458, 485, 51664, 51664, 11875, 1412, 9227, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12694852897919803, "compression_ratio": 1.6188340807174888, "no_caption_prob": 5.224477354204282e-05}, {"id": 395, "seek": 300700, "start": 3020.0, "end": 3029.0, "text": " And yeah, make impossible states impossible. If you haven't listened to that episode, go listen to that one.", "tokens": [50364, 400, 550, 562, 291, 362, 544, 1752, 11, 562, 291, 393, 980, 300, 746, 486, 5121, 885, 666, 1080, 1065, 10088, 1553, 309, 885, 34877, 37765, 11, 360, 300, 13, 51014, 51014, 400, 1338, 11, 652, 6243, 4368, 6243, 13, 759, 291, 2378, 380, 13207, 281, 300, 3500, 11, 352, 2140, 281, 300, 472, 13, 51464, 51464, 865, 11, 456, 311, 19959, 1296, 439, 613, 3487, 11, 597, 307, 11, 291, 458, 485, 51664, 51664, 11875, 1412, 9227, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12694852897919803, "compression_ratio": 1.6188340807174888, "no_caption_prob": 5.224477354204282e-05}, {"id": 396, "seek": 300700, "start": 3029.0, "end": 3033.0, "text": " Yeah, there's overlap between all these ideas, which is, you know...", "tokens": [50364, 400, 550, 562, 291, 362, 544, 1752, 11, 562, 291, 393, 980, 300, 746, 486, 5121, 885, 666, 1080, 1065, 10088, 1553, 309, 885, 34877, 37765, 11, 360, 300, 13, 51014, 51014, 400, 1338, 11, 652, 6243, 4368, 6243, 13, 759, 291, 2378, 380, 13207, 281, 300, 3500, 11, 352, 2140, 281, 300, 472, 13, 51464, 51464, 865, 11, 456, 311, 19959, 1296, 439, 613, 3487, 11, 597, 307, 11, 291, 458, 485, 51664, 51664, 11875, 1412, 9227, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12694852897919803, "compression_ratio": 1.6188340807174888, "no_caption_prob": 5.224477354204282e-05}, {"id": 397, "seek": 300700, "start": 3033.0, "end": 3035.0, "text": " Build data structures.", "tokens": [50364, 400, 550, 562, 291, 362, 544, 1752, 11, 562, 291, 393, 980, 300, 746, 486, 5121, 885, 666, 1080, 1065, 10088, 1553, 309, 885, 34877, 37765, 11, 360, 300, 13, 51014, 51014, 400, 1338, 11, 652, 6243, 4368, 6243, 13, 759, 291, 2378, 380, 13207, 281, 300, 3500, 11, 352, 2140, 281, 300, 472, 13, 51464, 51464, 865, 11, 456, 311, 19959, 1296, 439, 613, 3487, 11, 597, 307, 11, 291, 458, 485, 51664, 51664, 11875, 1412, 9227, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12694852897919803, "compression_ratio": 1.6188340807174888, "no_caption_prob": 5.224477354204282e-05}, {"id": 398, "seek": 303500, "start": 3035.0, "end": 3042.0, "text": " Right. Organize things around data structures. And how do you choose your data structures?", "tokens": [50364, 1779, 13, 12538, 1125, 721, 926, 1412, 9227, 13, 400, 577, 360, 291, 2826, 428, 1412, 9227, 30, 50714, 50714, 1042, 11, 291, 652, 6243, 4368, 6243, 13, 509, 2826, 264, 2306, 300, 362, 264, 7221, 291, 528, 13, 50914, 50914, 865, 11, 370, 439, 295, 613, 3487, 1333, 295, 366, 294, 13991, 926, 613, 4965, 10392, 13, 51214, 51214, 286, 534, 841, 411, 30348, 926, 1412, 9227, 420, 1310, 754, 16190, 307, 445, 264, 636, 281, 360, 309, 294, 2699, 76, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09046930795187479, "compression_ratio": 1.6581196581196582, "no_caption_prob": 5.5620788771193475e-05}, {"id": 399, "seek": 303500, "start": 3042.0, "end": 3046.0, "text": " Well, you make impossible states impossible. You choose the ones that have the properties you want.", "tokens": [50364, 1779, 13, 12538, 1125, 721, 926, 1412, 9227, 13, 400, 577, 360, 291, 2826, 428, 1412, 9227, 30, 50714, 50714, 1042, 11, 291, 652, 6243, 4368, 6243, 13, 509, 2826, 264, 2306, 300, 362, 264, 7221, 291, 528, 13, 50914, 50914, 865, 11, 370, 439, 295, 613, 3487, 1333, 295, 366, 294, 13991, 926, 613, 4965, 10392, 13, 51214, 51214, 286, 534, 841, 411, 30348, 926, 1412, 9227, 420, 1310, 754, 16190, 307, 445, 264, 636, 281, 360, 309, 294, 2699, 76, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09046930795187479, "compression_ratio": 1.6581196581196582, "no_caption_prob": 5.5620788771193475e-05}, {"id": 400, "seek": 303500, "start": 3046.0, "end": 3052.0, "text": " Yeah, so all of these ideas sort of are in orbit around these core concepts.", "tokens": [50364, 1779, 13, 12538, 1125, 721, 926, 1412, 9227, 13, 400, 577, 360, 291, 2826, 428, 1412, 9227, 30, 50714, 50714, 1042, 11, 291, 652, 6243, 4368, 6243, 13, 509, 2826, 264, 2306, 300, 362, 264, 7221, 291, 528, 13, 50914, 50914, 865, 11, 370, 439, 295, 613, 3487, 1333, 295, 366, 294, 13991, 926, 613, 4965, 10392, 13, 51214, 51214, 286, 534, 841, 411, 30348, 926, 1412, 9227, 420, 1310, 754, 16190, 307, 445, 264, 636, 281, 360, 309, 294, 2699, 76, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09046930795187479, "compression_ratio": 1.6581196581196582, "no_caption_prob": 5.5620788771193475e-05}, {"id": 401, "seek": 303500, "start": 3052.0, "end": 3061.0, "text": " I really feel like splitting around data structures or maybe even responsibilities is just the way to do it in Elm.", "tokens": [50364, 1779, 13, 12538, 1125, 721, 926, 1412, 9227, 13, 400, 577, 360, 291, 2826, 428, 1412, 9227, 30, 50714, 50714, 1042, 11, 291, 652, 6243, 4368, 6243, 13, 509, 2826, 264, 2306, 300, 362, 264, 7221, 291, 528, 13, 50914, 50914, 865, 11, 370, 439, 295, 613, 3487, 1333, 295, 366, 294, 13991, 926, 613, 4965, 10392, 13, 51214, 51214, 286, 534, 841, 411, 30348, 926, 1412, 9227, 420, 1310, 754, 16190, 307, 445, 264, 636, 281, 360, 309, 294, 2699, 76, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09046930795187479, "compression_ratio": 1.6581196581196582, "no_caption_prob": 5.5620788771193475e-05}, {"id": 402, "seek": 303500, "start": 3061.0, "end": 3062.0, "text": " Yes.", "tokens": [50364, 1779, 13, 12538, 1125, 721, 926, 1412, 9227, 13, 400, 577, 360, 291, 2826, 428, 1412, 9227, 30, 50714, 50714, 1042, 11, 291, 652, 6243, 4368, 6243, 13, 509, 2826, 264, 2306, 300, 362, 264, 7221, 291, 528, 13, 50914, 50914, 865, 11, 370, 439, 295, 613, 3487, 1333, 295, 366, 294, 13991, 926, 613, 4965, 10392, 13, 51214, 51214, 286, 534, 841, 411, 30348, 926, 1412, 9227, 420, 1310, 754, 16190, 307, 445, 264, 636, 281, 360, 309, 294, 2699, 76, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09046930795187479, "compression_ratio": 1.6581196581196582, "no_caption_prob": 5.5620788771193475e-05}, {"id": 403, "seek": 306200, "start": 3062.0, "end": 3069.0, "text": " It's not like we've been brainwashed, although maybe. Evan is a good speaker, I think.", "tokens": [50364, 467, 311, 406, 411, 321, 600, 668, 3567, 86, 12219, 11, 4878, 1310, 13, 22613, 307, 257, 665, 8145, 11, 286, 519, 13, 50714, 50714, 583, 309, 311, 544, 411, 321, 3031, 309, 293, 309, 2732, 13, 400, 321, 3031, 309, 797, 293, 309, 445, 1009, 1985, 13, 51114, 51114, 467, 1985, 13, 286, 914, 11, 286, 500, 380, 519, 309, 311, 2685, 281, 2699, 76, 412, 439, 13, 286, 519, 309, 311, 26387, 294, 445, 264, 1558, 295, 257, 10088, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09162582353103993, "compression_ratio": 1.5837837837837838, "no_caption_prob": 0.00015115503629203886}, {"id": 404, "seek": 306200, "start": 3069.0, "end": 3077.0, "text": " But it's more like we tried it and it worked. And we tried it again and it just always works.", "tokens": [50364, 467, 311, 406, 411, 321, 600, 668, 3567, 86, 12219, 11, 4878, 1310, 13, 22613, 307, 257, 665, 8145, 11, 286, 519, 13, 50714, 50714, 583, 309, 311, 544, 411, 321, 3031, 309, 293, 309, 2732, 13, 400, 321, 3031, 309, 797, 293, 309, 445, 1009, 1985, 13, 51114, 51114, 467, 1985, 13, 286, 914, 11, 286, 500, 380, 519, 309, 311, 2685, 281, 2699, 76, 412, 439, 13, 286, 519, 309, 311, 26387, 294, 445, 264, 1558, 295, 257, 10088, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09162582353103993, "compression_ratio": 1.5837837837837838, "no_caption_prob": 0.00015115503629203886}, {"id": 405, "seek": 306200, "start": 3077.0, "end": 3087.0, "text": " It works. I mean, I don't think it's specific to Elm at all. I think it's inherent in just the idea of a module.", "tokens": [50364, 467, 311, 406, 411, 321, 600, 668, 3567, 86, 12219, 11, 4878, 1310, 13, 22613, 307, 257, 665, 8145, 11, 286, 519, 13, 50714, 50714, 583, 309, 311, 544, 411, 321, 3031, 309, 293, 309, 2732, 13, 400, 321, 3031, 309, 797, 293, 309, 445, 1009, 1985, 13, 51114, 51114, 467, 1985, 13, 286, 914, 11, 286, 500, 380, 519, 309, 311, 2685, 281, 2699, 76, 412, 439, 13, 286, 519, 309, 311, 26387, 294, 445, 264, 1558, 295, 257, 10088, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09162582353103993, "compression_ratio": 1.5837837837837838, "no_caption_prob": 0.00015115503629203886}, {"id": 406, "seek": 308700, "start": 3087.0, "end": 3096.0, "text": " In Elixir, there are these like struct types that you can actually define a struct for a particular module.", "tokens": [50364, 682, 2699, 970, 347, 11, 456, 366, 613, 411, 6594, 3467, 300, 291, 393, 767, 6964, 257, 6594, 337, 257, 1729, 10088, 13, 50814, 50814, 407, 309, 311, 411, 309, 311, 1920, 411, 364, 2657, 294, 257, 636, 300, 309, 311, 411, 341, 307, 264, 1412, 2010, 6615, 365, 341, 10088, 13, 51114, 51114, 400, 309, 311, 411, 3094, 666, 264, 2856, 13, 51214, 51214, 2264, 11, 1338, 13, 51264, 51264, 400, 370, 300, 311, 2138, 264, 636, 561, 3877, 721, 294, 264, 2699, 970, 347, 1002, 382, 731, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07027927865373328, "compression_ratio": 1.6527777777777777, "no_caption_prob": 7.721172732999548e-05}, {"id": 407, "seek": 308700, "start": 3096.0, "end": 3102.0, "text": " So it's like it's almost like an object in a way that it's like this is the data type associated with this module.", "tokens": [50364, 682, 2699, 970, 347, 11, 456, 366, 613, 411, 6594, 3467, 300, 291, 393, 767, 6964, 257, 6594, 337, 257, 1729, 10088, 13, 50814, 50814, 407, 309, 311, 411, 309, 311, 1920, 411, 364, 2657, 294, 257, 636, 300, 309, 311, 411, 341, 307, 264, 1412, 2010, 6615, 365, 341, 10088, 13, 51114, 51114, 400, 309, 311, 411, 3094, 666, 264, 2856, 13, 51214, 51214, 2264, 11, 1338, 13, 51264, 51264, 400, 370, 300, 311, 2138, 264, 636, 561, 3877, 721, 294, 264, 2699, 970, 347, 1002, 382, 731, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07027927865373328, "compression_ratio": 1.6527777777777777, "no_caption_prob": 7.721172732999548e-05}, {"id": 408, "seek": 308700, "start": 3102.0, "end": 3104.0, "text": " And it's like built into the language.", "tokens": [50364, 682, 2699, 970, 347, 11, 456, 366, 613, 411, 6594, 3467, 300, 291, 393, 767, 6964, 257, 6594, 337, 257, 1729, 10088, 13, 50814, 50814, 407, 309, 311, 411, 309, 311, 1920, 411, 364, 2657, 294, 257, 636, 300, 309, 311, 411, 341, 307, 264, 1412, 2010, 6615, 365, 341, 10088, 13, 51114, 51114, 400, 309, 311, 411, 3094, 666, 264, 2856, 13, 51214, 51214, 2264, 11, 1338, 13, 51264, 51264, 400, 370, 300, 311, 2138, 264, 636, 561, 3877, 721, 294, 264, 2699, 970, 347, 1002, 382, 731, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07027927865373328, "compression_ratio": 1.6527777777777777, "no_caption_prob": 7.721172732999548e-05}, {"id": 409, "seek": 308700, "start": 3104.0, "end": 3105.0, "text": " OK, yeah.", "tokens": [50364, 682, 2699, 970, 347, 11, 456, 366, 613, 411, 6594, 3467, 300, 291, 393, 767, 6964, 257, 6594, 337, 257, 1729, 10088, 13, 50814, 50814, 407, 309, 311, 411, 309, 311, 1920, 411, 364, 2657, 294, 257, 636, 300, 309, 311, 411, 341, 307, 264, 1412, 2010, 6615, 365, 341, 10088, 13, 51114, 51114, 400, 309, 311, 411, 3094, 666, 264, 2856, 13, 51214, 51214, 2264, 11, 1338, 13, 51264, 51264, 400, 370, 300, 311, 2138, 264, 636, 561, 3877, 721, 294, 264, 2699, 970, 347, 1002, 382, 731, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07027927865373328, "compression_ratio": 1.6527777777777777, "no_caption_prob": 7.721172732999548e-05}, {"id": 410, "seek": 308700, "start": 3105.0, "end": 3110.0, "text": " And so that's definitely the way people structure things in the Elixir world as well.", "tokens": [50364, 682, 2699, 970, 347, 11, 456, 366, 613, 411, 6594, 3467, 300, 291, 393, 767, 6964, 257, 6594, 337, 257, 1729, 10088, 13, 50814, 50814, 407, 309, 311, 411, 309, 311, 1920, 411, 364, 2657, 294, 257, 636, 300, 309, 311, 411, 341, 307, 264, 1412, 2010, 6615, 365, 341, 10088, 13, 51114, 51114, 400, 309, 311, 411, 3094, 666, 264, 2856, 13, 51214, 51214, 2264, 11, 1338, 13, 51264, 51264, 400, 370, 300, 311, 2138, 264, 636, 561, 3877, 721, 294, 264, 2699, 970, 347, 1002, 382, 731, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07027927865373328, "compression_ratio": 1.6527777777777777, "no_caption_prob": 7.721172732999548e-05}, {"id": 411, "seek": 311000, "start": 3110.0, "end": 3120.0, "text": " And just like when you think about, again, the mechanics of a module, it can group certain types, values, functions, and it can hide some of them.", "tokens": [50364, 400, 445, 411, 562, 291, 519, 466, 11, 797, 11, 264, 12939, 295, 257, 10088, 11, 309, 393, 1594, 1629, 3467, 11, 4190, 11, 6828, 11, 293, 309, 393, 6479, 512, 295, 552, 13, 50864, 50864, 1779, 13, 407, 11, 731, 11, 498, 291, 437, 498, 291, 528, 281, 6479, 6920, 4365, 11, 457, 309, 311, 7642, 294, 1071, 10088, 30, 51214, 51214, 1042, 11, 300, 636, 295, 17608, 1177, 380, 589, 570, 291, 393, 380, 6479, 309, 11, 570, 586, 264, 721, 300, 764, 309, 500, 380, 362, 2105, 281, 309, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.046159203519526217, "compression_ratio": 1.588235294117647, "no_caption_prob": 0.00015114840061869472}, {"id": 412, "seek": 311000, "start": 3120.0, "end": 3127.0, "text": " Right. So, well, if you what if you want to hide internal details, but it's defined in another module?", "tokens": [50364, 400, 445, 411, 562, 291, 519, 466, 11, 797, 11, 264, 12939, 295, 257, 10088, 11, 309, 393, 1594, 1629, 3467, 11, 4190, 11, 6828, 11, 293, 309, 393, 6479, 512, 295, 552, 13, 50864, 50864, 1779, 13, 407, 11, 731, 11, 498, 291, 437, 498, 291, 528, 281, 6479, 6920, 4365, 11, 457, 309, 311, 7642, 294, 1071, 10088, 30, 51214, 51214, 1042, 11, 300, 636, 295, 17608, 1177, 380, 589, 570, 291, 393, 380, 6479, 309, 11, 570, 586, 264, 721, 300, 764, 309, 500, 380, 362, 2105, 281, 309, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.046159203519526217, "compression_ratio": 1.588235294117647, "no_caption_prob": 0.00015114840061869472}, {"id": 413, "seek": 311000, "start": 3127.0, "end": 3133.0, "text": " Well, that way of organizing doesn't work because you can't hide it, because now the things that use it don't have access to it.", "tokens": [50364, 400, 445, 411, 562, 291, 519, 466, 11, 797, 11, 264, 12939, 295, 257, 10088, 11, 309, 393, 1594, 1629, 3467, 11, 4190, 11, 6828, 11, 293, 309, 393, 6479, 512, 295, 552, 13, 50864, 50864, 1779, 13, 407, 11, 731, 11, 498, 291, 437, 498, 291, 528, 281, 6479, 6920, 4365, 11, 457, 309, 311, 7642, 294, 1071, 10088, 30, 51214, 51214, 1042, 11, 300, 636, 295, 17608, 1177, 380, 589, 570, 291, 393, 380, 6479, 309, 11, 570, 586, 264, 721, 300, 764, 309, 500, 380, 362, 2105, 281, 309, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.046159203519526217, "compression_ratio": 1.588235294117647, "no_caption_prob": 0.00015114840061869472}, {"id": 414, "seek": 313300, "start": 3133.0, "end": 3148.0, "text": " So, of course, this makes sense that that a module is organized around a data type because, yeah, I mean, it abstracts the details of how you consume that data type and nothing else has access to those internals.", "tokens": [50364, 407, 11, 295, 1164, 11, 341, 1669, 2020, 300, 300, 257, 10088, 307, 9983, 926, 257, 1412, 2010, 570, 11, 1338, 11, 286, 914, 11, 309, 12649, 82, 264, 4365, 295, 577, 291, 14732, 300, 1412, 2010, 293, 1825, 1646, 575, 2105, 281, 729, 2154, 1124, 13, 51114, 51114, 407, 445, 538, 300, 4965, 23860, 11, 300, 311, 300, 311, 300, 311, 437, 291, 362, 281, 360, 281, 13982, 300, 23860, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06717759057095177, "compression_ratio": 1.61139896373057, "no_caption_prob": 0.00017950808978639543}, {"id": 415, "seek": 313300, "start": 3148.0, "end": 3156.0, "text": " So just by that core mechanic, that's that's that's what you have to do to leverage that mechanic.", "tokens": [50364, 407, 11, 295, 1164, 11, 341, 1669, 2020, 300, 300, 257, 10088, 307, 9983, 926, 257, 1412, 2010, 570, 11, 1338, 11, 286, 914, 11, 309, 12649, 82, 264, 4365, 295, 577, 291, 14732, 300, 1412, 2010, 293, 1825, 1646, 575, 2105, 281, 729, 2154, 1124, 13, 51114, 51114, 407, 445, 538, 300, 4965, 23860, 11, 300, 311, 300, 311, 300, 311, 437, 291, 362, 281, 360, 281, 13982, 300, 23860, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06717759057095177, "compression_ratio": 1.61139896373057, "no_caption_prob": 0.00017950808978639543}, {"id": 416, "seek": 315600, "start": 3156.0, "end": 3166.0, "text": " So I think, yeah, I mean, I think that it's a process. And, you know, as you said, Jeroen, experiment, try out the process, practice.", "tokens": [50364, 407, 286, 519, 11, 1338, 11, 286, 914, 11, 286, 519, 300, 309, 311, 257, 1399, 13, 400, 11, 291, 458, 11, 382, 291, 848, 11, 508, 2032, 268, 11, 5120, 11, 853, 484, 264, 1399, 11, 3124, 13, 50864, 50864, 6526, 264, 2085, 6547, 13, 50964, 50964, 6526, 13, 865, 11, 2293, 13, 51064, 51064, 6526, 264, 2085, 6547, 370, 300, 291, 393, 841, 264, 1822, 293, 550, 291, 393, 352, 293, 2903, 281, 428, 7734, 411, 341, 307, 406, 264, 636, 281, 352, 570, 341, 11, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14229053132077482, "compression_ratio": 1.6954314720812182, "no_caption_prob": 0.00017399598436895758}, {"id": 417, "seek": 315600, "start": 3166.0, "end": 3168.0, "text": " Try the wrong solutions.", "tokens": [50364, 407, 286, 519, 11, 1338, 11, 286, 914, 11, 286, 519, 300, 309, 311, 257, 1399, 13, 400, 11, 291, 458, 11, 382, 291, 848, 11, 508, 2032, 268, 11, 5120, 11, 853, 484, 264, 1399, 11, 3124, 13, 50864, 50864, 6526, 264, 2085, 6547, 13, 50964, 50964, 6526, 13, 865, 11, 2293, 13, 51064, 51064, 6526, 264, 2085, 6547, 370, 300, 291, 393, 841, 264, 1822, 293, 550, 291, 393, 352, 293, 2903, 281, 428, 7734, 411, 341, 307, 406, 264, 636, 281, 352, 570, 341, 11, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14229053132077482, "compression_ratio": 1.6954314720812182, "no_caption_prob": 0.00017399598436895758}, {"id": 418, "seek": 315600, "start": 3168.0, "end": 3170.0, "text": " Try. Yeah, exactly.", "tokens": [50364, 407, 286, 519, 11, 1338, 11, 286, 914, 11, 286, 519, 300, 309, 311, 257, 1399, 13, 400, 11, 291, 458, 11, 382, 291, 848, 11, 508, 2032, 268, 11, 5120, 11, 853, 484, 264, 1399, 11, 3124, 13, 50864, 50864, 6526, 264, 2085, 6547, 13, 50964, 50964, 6526, 13, 865, 11, 2293, 13, 51064, 51064, 6526, 264, 2085, 6547, 370, 300, 291, 393, 841, 264, 1822, 293, 550, 291, 393, 352, 293, 2903, 281, 428, 7734, 411, 341, 307, 406, 264, 636, 281, 352, 570, 341, 11, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14229053132077482, "compression_ratio": 1.6954314720812182, "no_caption_prob": 0.00017399598436895758}, {"id": 419, "seek": 315600, "start": 3170.0, "end": 3181.0, "text": " Try the wrong solutions so that you can feel the pain and then you can go and explain to your colleagues like this is not the way to go because this, that.", "tokens": [50364, 407, 286, 519, 11, 1338, 11, 286, 914, 11, 286, 519, 300, 309, 311, 257, 1399, 13, 400, 11, 291, 458, 11, 382, 291, 848, 11, 508, 2032, 268, 11, 5120, 11, 853, 484, 264, 1399, 11, 3124, 13, 50864, 50864, 6526, 264, 2085, 6547, 13, 50964, 50964, 6526, 13, 865, 11, 2293, 13, 51064, 51064, 6526, 264, 2085, 6547, 370, 300, 291, 393, 841, 264, 1822, 293, 550, 291, 393, 352, 293, 2903, 281, 428, 7734, 411, 341, 307, 406, 264, 636, 281, 352, 570, 341, 11, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14229053132077482, "compression_ratio": 1.6954314720812182, "no_caption_prob": 0.00017399598436895758}, {"id": 420, "seek": 318100, "start": 3181.0, "end": 3189.0, "text": " Mm hmm. Yes, it's it's an iterative process and it requires experimentation and you're going to you're going to get it wrong.", "tokens": [50364, 8266, 16478, 13, 1079, 11, 309, 311, 309, 311, 364, 17138, 1166, 1399, 293, 309, 7029, 37142, 293, 291, 434, 516, 281, 291, 434, 516, 281, 483, 309, 2085, 13, 50764, 50764, 583, 437, 291, 528, 281, 360, 307, 291, 528, 281, 406, 483, 309, 439, 2085, 493, 1868, 13, 51014, 51014, 759, 291, 360, 1203, 493, 1868, 11, 550, 291, 434, 516, 281, 483, 1203, 2085, 493, 1868, 13, 51214, 51214, 583, 498, 291, 747, 5870, 4439, 382, 291, 841, 264, 1822, 11, 286, 914, 11, 498, 291, 445, 519, 466, 309, 411, 428, 565, 307, 5567, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08251671652192051, "compression_ratio": 1.8262910798122065, "no_caption_prob": 0.0005879859090782702}, {"id": 421, "seek": 318100, "start": 3189.0, "end": 3194.0, "text": " But what you want to do is you want to not get it all wrong up front.", "tokens": [50364, 8266, 16478, 13, 1079, 11, 309, 311, 309, 311, 364, 17138, 1166, 1399, 293, 309, 7029, 37142, 293, 291, 434, 516, 281, 291, 434, 516, 281, 483, 309, 2085, 13, 50764, 50764, 583, 437, 291, 528, 281, 360, 307, 291, 528, 281, 406, 483, 309, 439, 2085, 493, 1868, 13, 51014, 51014, 759, 291, 360, 1203, 493, 1868, 11, 550, 291, 434, 516, 281, 483, 1203, 2085, 493, 1868, 13, 51214, 51214, 583, 498, 291, 747, 5870, 4439, 382, 291, 841, 264, 1822, 11, 286, 914, 11, 498, 291, 445, 519, 466, 309, 411, 428, 565, 307, 5567, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08251671652192051, "compression_ratio": 1.8262910798122065, "no_caption_prob": 0.0005879859090782702}, {"id": 422, "seek": 318100, "start": 3194.0, "end": 3198.0, "text": " If you do everything up front, then you're going to get everything wrong up front.", "tokens": [50364, 8266, 16478, 13, 1079, 11, 309, 311, 309, 311, 364, 17138, 1166, 1399, 293, 309, 7029, 37142, 293, 291, 434, 516, 281, 291, 434, 516, 281, 483, 309, 2085, 13, 50764, 50764, 583, 437, 291, 528, 281, 360, 307, 291, 528, 281, 406, 483, 309, 439, 2085, 493, 1868, 13, 51014, 51014, 759, 291, 360, 1203, 493, 1868, 11, 550, 291, 434, 516, 281, 483, 1203, 2085, 493, 1868, 13, 51214, 51214, 583, 498, 291, 747, 5870, 4439, 382, 291, 841, 264, 1822, 11, 286, 914, 11, 498, 291, 445, 519, 466, 309, 411, 428, 565, 307, 5567, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08251671652192051, "compression_ratio": 1.8262910798122065, "no_caption_prob": 0.0005879859090782702}, {"id": 423, "seek": 318100, "start": 3198.0, "end": 3207.0, "text": " But if you take tiny steps as you feel the pain, I mean, if you just think about it like your time is limited.", "tokens": [50364, 8266, 16478, 13, 1079, 11, 309, 311, 309, 311, 364, 17138, 1166, 1399, 293, 309, 7029, 37142, 293, 291, 434, 516, 281, 291, 434, 516, 281, 483, 309, 2085, 13, 50764, 50764, 583, 437, 291, 528, 281, 360, 307, 291, 528, 281, 406, 483, 309, 439, 2085, 493, 1868, 13, 51014, 51014, 759, 291, 360, 1203, 493, 1868, 11, 550, 291, 434, 516, 281, 483, 1203, 2085, 493, 1868, 13, 51214, 51214, 583, 498, 291, 747, 5870, 4439, 382, 291, 841, 264, 1822, 11, 286, 914, 11, 498, 291, 445, 519, 466, 309, 411, 428, 565, 307, 5567, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08251671652192051, "compression_ratio": 1.8262910798122065, "no_caption_prob": 0.0005879859090782702}, {"id": 424, "seek": 320700, "start": 3207.0, "end": 3215.0, "text": " And so what do you want to spend time on? Some thing that you imagine you're going to need an abstraction for in the future or something you need an abstraction for right now.", "tokens": [50364, 400, 370, 437, 360, 291, 528, 281, 3496, 565, 322, 30, 2188, 551, 300, 291, 3811, 291, 434, 516, 281, 643, 364, 37765, 337, 294, 264, 2027, 420, 746, 291, 643, 364, 37765, 337, 558, 586, 13, 50764, 50764, 1743, 498, 291, 362, 257, 5567, 2372, 295, 565, 11, 589, 322, 264, 551, 300, 291, 458, 291, 643, 586, 700, 13, 51064, 51064, 1468, 380, 5964, 428, 565, 365, 661, 1507, 13, 407, 11, 1338, 11, 3124, 11, 3124, 25704, 2937, 13, 51314, 51314, 286, 458, 300, 286, 588, 23506, 19268, 25704, 2937, 11, 15424, 12649, 626, 562, 286, 390, 1242, 1409, 365, 552, 11, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0853271484375, "compression_ratio": 1.78544061302682, "no_caption_prob": 5.306678940542042e-05}, {"id": 425, "seek": 320700, "start": 3215.0, "end": 3221.0, "text": " Like if you have a limited amount of time, work on the thing that you know you need now first.", "tokens": [50364, 400, 370, 437, 360, 291, 528, 281, 3496, 565, 322, 30, 2188, 551, 300, 291, 3811, 291, 434, 516, 281, 643, 364, 37765, 337, 294, 264, 2027, 420, 746, 291, 643, 364, 37765, 337, 558, 586, 13, 50764, 50764, 1743, 498, 291, 362, 257, 5567, 2372, 295, 565, 11, 589, 322, 264, 551, 300, 291, 458, 291, 643, 586, 700, 13, 51064, 51064, 1468, 380, 5964, 428, 565, 365, 661, 1507, 13, 407, 11, 1338, 11, 3124, 11, 3124, 25704, 2937, 13, 51314, 51314, 286, 458, 300, 286, 588, 23506, 19268, 25704, 2937, 11, 15424, 12649, 626, 562, 286, 390, 1242, 1409, 365, 552, 11, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0853271484375, "compression_ratio": 1.78544061302682, "no_caption_prob": 5.306678940542042e-05}, {"id": 426, "seek": 320700, "start": 3221.0, "end": 3226.0, "text": " Don't waste your time with other stuff. So, yeah, practice, practice deferring.", "tokens": [50364, 400, 370, 437, 360, 291, 528, 281, 3496, 565, 322, 30, 2188, 551, 300, 291, 3811, 291, 434, 516, 281, 643, 364, 37765, 337, 294, 264, 2027, 420, 746, 291, 643, 364, 37765, 337, 558, 586, 13, 50764, 50764, 1743, 498, 291, 362, 257, 5567, 2372, 295, 565, 11, 589, 322, 264, 551, 300, 291, 458, 291, 643, 586, 700, 13, 51064, 51064, 1468, 380, 5964, 428, 565, 365, 661, 1507, 13, 407, 11, 1338, 11, 3124, 11, 3124, 25704, 2937, 13, 51314, 51314, 286, 458, 300, 286, 588, 23506, 19268, 25704, 2937, 11, 15424, 12649, 626, 562, 286, 390, 1242, 1409, 365, 552, 11, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0853271484375, "compression_ratio": 1.78544061302682, "no_caption_prob": 5.306678940542042e-05}, {"id": 427, "seek": 320700, "start": 3226.0, "end": 3233.0, "text": " I know that I very deliberately practiced deferring, introducing abstractions when I was getting started with them,", "tokens": [50364, 400, 370, 437, 360, 291, 528, 281, 3496, 565, 322, 30, 2188, 551, 300, 291, 3811, 291, 434, 516, 281, 643, 364, 37765, 337, 294, 264, 2027, 420, 746, 291, 643, 364, 37765, 337, 558, 586, 13, 50764, 50764, 1743, 498, 291, 362, 257, 5567, 2372, 295, 565, 11, 589, 322, 264, 551, 300, 291, 458, 291, 643, 586, 700, 13, 51064, 51064, 1468, 380, 5964, 428, 565, 365, 661, 1507, 13, 407, 11, 1338, 11, 3124, 11, 3124, 25704, 2937, 13, 51314, 51314, 286, 458, 300, 286, 588, 23506, 19268, 25704, 2937, 11, 15424, 12649, 626, 562, 286, 390, 1242, 1409, 365, 552, 11, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0853271484375, "compression_ratio": 1.78544061302682, "no_caption_prob": 5.306678940542042e-05}, {"id": 428, "seek": 323300, "start": 3233.0, "end": 3240.0, "text": " because I think maybe even because I had heard this advice from Evan's talk, I can't remember.", "tokens": [50364, 570, 286, 519, 1310, 754, 570, 286, 632, 2198, 341, 5192, 490, 22613, 311, 751, 11, 286, 393, 380, 1604, 13, 50714, 50714, 286, 393, 380, 1604, 689, 286, 658, 341, 10249, 11, 457, 286, 1604, 286, 390, 286, 390, 5061, 766, 322, 309, 570, 286, 994, 380, 528, 452, 2657, 21841, 3678, 281, 5934, 452, 1715, 5327, 13, 51264, 51264, 400, 286, 767, 390, 1075, 281, 5042, 257, 688, 295, 264, 10147, 18542, 300, 411, 9809, 2825, 466, 294, 652, 1412, 9227, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.04795710245768229, "compression_ratio": 1.6016949152542372, "no_caption_prob": 0.00011059460666729137}, {"id": 429, "seek": 323300, "start": 3240.0, "end": 3251.0, "text": " I can't remember where I got this inspiration, but I remember I was I was holding off on it because I didn't want my object oriented background to guide my design decisions.", "tokens": [50364, 570, 286, 519, 1310, 754, 570, 286, 632, 2198, 341, 5192, 490, 22613, 311, 751, 11, 286, 393, 380, 1604, 13, 50714, 50714, 286, 393, 380, 1604, 689, 286, 658, 341, 10249, 11, 457, 286, 1604, 286, 390, 286, 390, 5061, 766, 322, 309, 570, 286, 994, 380, 528, 452, 2657, 21841, 3678, 281, 5934, 452, 1715, 5327, 13, 51264, 51264, 400, 286, 767, 390, 1075, 281, 5042, 257, 688, 295, 264, 10147, 18542, 300, 411, 9809, 2825, 466, 294, 652, 1412, 9227, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.04795710245768229, "compression_ratio": 1.6016949152542372, "no_caption_prob": 0.00011059460666729137}, {"id": 430, "seek": 323300, "start": 3251.0, "end": 3260.0, "text": " And I actually was able to avoid a lot of the pitfalls that like Richard talked about in make data structures", "tokens": [50364, 570, 286, 519, 1310, 754, 570, 286, 632, 2198, 341, 5192, 490, 22613, 311, 751, 11, 286, 393, 380, 1604, 13, 50714, 50714, 286, 393, 380, 1604, 689, 286, 658, 341, 10249, 11, 457, 286, 1604, 286, 390, 286, 390, 5061, 766, 322, 309, 570, 286, 994, 380, 528, 452, 2657, 21841, 3678, 281, 5934, 452, 1715, 5327, 13, 51264, 51264, 400, 286, 767, 390, 1075, 281, 5042, 257, 688, 295, 264, 10147, 18542, 300, 411, 9809, 2825, 466, 294, 652, 1412, 9227, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.04795710245768229, "compression_ratio": 1.6016949152542372, "no_caption_prob": 0.00011059460666729137}, {"id": 431, "seek": 326000, "start": 3260.0, "end": 3269.0, "text": " where he had to learn the hard way that, you know, creating these abstractions around or maybe he talks about this in scaling applications.", "tokens": [50364, 689, 415, 632, 281, 1466, 264, 1152, 636, 300, 11, 291, 458, 11, 4084, 613, 12649, 626, 926, 420, 1310, 415, 6686, 466, 341, 294, 21589, 5821, 13, 50814, 50814, 583, 415, 6686, 466, 341, 11, 291, 458, 11, 4084, 12649, 626, 689, 291, 434, 1382, 281, 38745, 5256, 1412, 293, 291, 434, 1382, 281, 764, 341, 2657, 21841, 3109, 689, 428, 3636, 8437, 1296, 439, 613, 819, 1412, 3467, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.06639357248942057, "compression_ratio": 1.8358974358974358, "no_caption_prob": 2.6273262847098522e-05}, {"id": 432, "seek": 326000, "start": 3269.0, "end": 3279.0, "text": " But he talks about this, you know, creating abstractions where you're trying to encapsulate data and you're trying to use this object oriented approach where your message passing between all these different data types.", "tokens": [50364, 689, 415, 632, 281, 1466, 264, 1152, 636, 300, 11, 291, 458, 11, 4084, 613, 12649, 626, 926, 420, 1310, 415, 6686, 466, 341, 294, 21589, 5821, 13, 50814, 50814, 583, 415, 6686, 466, 341, 11, 291, 458, 11, 4084, 12649, 626, 689, 291, 434, 1382, 281, 38745, 5256, 1412, 293, 291, 434, 1382, 281, 764, 341, 2657, 21841, 3109, 689, 428, 3636, 8437, 1296, 439, 613, 819, 1412, 3467, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.06639357248942057, "compression_ratio": 1.8358974358974358, "no_caption_prob": 2.6273262847098522e-05}, {"id": 433, "seek": 327900, "start": 3279.0, "end": 3296.0, "text": " And I actually didn't need to feel that pain because I was disciplined about deferring abstractions and letting myself feel the pain and be open to a new set of like design ideas.", "tokens": [50364, 400, 286, 767, 994, 380, 643, 281, 841, 300, 1822, 570, 286, 390, 40061, 466, 25704, 2937, 12649, 626, 293, 8295, 2059, 841, 264, 1822, 293, 312, 1269, 281, 257, 777, 992, 295, 411, 1715, 3487, 13, 51214, 51214, 400, 300, 534, 4254, 13, 407, 286, 2138, 2748, 1382, 300, 484, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.0488889217376709, "compression_ratio": 1.473053892215569, "no_caption_prob": 3.0715538741787896e-05}, {"id": 434, "seek": 327900, "start": 3296.0, "end": 3299.0, "text": " And that really helped. So I definitely recommend trying that out.", "tokens": [50364, 400, 286, 767, 994, 380, 643, 281, 841, 300, 1822, 570, 286, 390, 40061, 466, 25704, 2937, 12649, 626, 293, 8295, 2059, 841, 264, 1822, 293, 312, 1269, 281, 257, 777, 992, 295, 411, 1715, 3487, 13, 51214, 51214, 400, 300, 534, 4254, 13, 407, 286, 2138, 2748, 1382, 300, 484, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.0488889217376709, "compression_ratio": 1.473053892215569, "no_caption_prob": 3.0715538741787896e-05}, {"id": 435, "seek": 329900, "start": 3299.0, "end": 3310.0, "text": " That said, when you know that something can have a better name, when you know that something can be extracted into a nice function that groups this stuff together, then do it right away.", "tokens": [50364, 663, 848, 11, 562, 291, 458, 300, 746, 393, 362, 257, 1101, 1315, 11, 562, 291, 458, 300, 746, 393, 312, 34086, 666, 257, 1481, 2445, 300, 3935, 341, 1507, 1214, 11, 550, 360, 309, 558, 1314, 13, 50914, 50914, 1057, 558, 13, 1042, 11, 286, 519, 321, 600, 14226, 264, 3983, 586, 13, 51114, 51114, 286, 519, 321, 286, 519, 321, 5343, 13, 1042, 11, 300, 311, 300, 311, 1203, 456, 307, 281, 458, 466, 14685, 322, 3089, 13, 51414, 51414, 492, 600, 5343, 309, 439, 13, 639, 390, 257, 1019, 7367, 13, 2561, 337, 4764, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08924628239051968, "compression_ratio": 1.7394957983193278, "no_caption_prob": 4.683669612859376e-05}, {"id": 436, "seek": 329900, "start": 3310.0, "end": 3314.0, "text": " All right. Well, I think we've wrapped the subject now.", "tokens": [50364, 663, 848, 11, 562, 291, 458, 300, 746, 393, 362, 257, 1101, 1315, 11, 562, 291, 458, 300, 746, 393, 312, 34086, 666, 257, 1481, 2445, 300, 3935, 341, 1507, 1214, 11, 550, 360, 309, 558, 1314, 13, 50914, 50914, 1057, 558, 13, 1042, 11, 286, 519, 321, 600, 14226, 264, 3983, 586, 13, 51114, 51114, 286, 519, 321, 286, 519, 321, 5343, 13, 1042, 11, 300, 311, 300, 311, 1203, 456, 307, 281, 458, 466, 14685, 322, 3089, 13, 51414, 51414, 492, 600, 5343, 309, 439, 13, 639, 390, 257, 1019, 7367, 13, 2561, 337, 4764, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08924628239051968, "compression_ratio": 1.7394957983193278, "no_caption_prob": 4.683669612859376e-05}, {"id": 437, "seek": 329900, "start": 3314.0, "end": 3320.0, "text": " I think we I think we covered. Well, that's that's everything there is to know about designing on code.", "tokens": [50364, 663, 848, 11, 562, 291, 458, 300, 746, 393, 362, 257, 1101, 1315, 11, 562, 291, 458, 300, 746, 393, 312, 34086, 666, 257, 1481, 2445, 300, 3935, 341, 1507, 1214, 11, 550, 360, 309, 558, 1314, 13, 50914, 50914, 1057, 558, 13, 1042, 11, 286, 519, 321, 600, 14226, 264, 3983, 586, 13, 51114, 51114, 286, 519, 321, 286, 519, 321, 5343, 13, 1042, 11, 300, 311, 300, 311, 1203, 456, 307, 281, 458, 466, 14685, 322, 3089, 13, 51414, 51414, 492, 600, 5343, 309, 439, 13, 639, 390, 257, 1019, 7367, 13, 2561, 337, 4764, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08924628239051968, "compression_ratio": 1.7394957983193278, "no_caption_prob": 4.683669612859376e-05}, {"id": 438, "seek": 329900, "start": 3320.0, "end": 3327.0, "text": " We've covered it all. This was a fun podcast. Thanks for listening.", "tokens": [50364, 663, 848, 11, 562, 291, 458, 300, 746, 393, 362, 257, 1101, 1315, 11, 562, 291, 458, 300, 746, 393, 312, 34086, 666, 257, 1481, 2445, 300, 3935, 341, 1507, 1214, 11, 550, 360, 309, 558, 1314, 13, 50914, 50914, 1057, 558, 13, 1042, 11, 286, 519, 321, 600, 14226, 264, 3983, 586, 13, 51114, 51114, 286, 519, 321, 286, 519, 321, 5343, 13, 1042, 11, 300, 311, 300, 311, 1203, 456, 307, 281, 458, 466, 14685, 322, 3089, 13, 51414, 51414, 492, 600, 5343, 309, 439, 13, 639, 390, 257, 1019, 7367, 13, 2561, 337, 4764, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08924628239051968, "compression_ratio": 1.7394957983193278, "no_caption_prob": 4.683669612859376e-05}, {"id": 439, "seek": 332700, "start": 3327.0, "end": 3336.0, "text": " Yeah. Now, you know, impossible states, you know how to how to incrementally build files.", "tokens": [50364, 865, 13, 823, 11, 291, 458, 11, 6243, 4368, 11, 291, 458, 577, 281, 577, 281, 26200, 379, 1322, 7098, 13, 50814, 50814, 492, 434, 1096, 13, 865, 13, 583, 286, 920, 500, 380, 458, 577, 281, 281, 652, 318, 6273, 13, 51014, 51014, 821, 291, 352, 13, 407, 300, 603, 312, 264, 1472, 295, 264, 7367, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.1841020430288007, "compression_ratio": 1.3904109589041096, "no_caption_prob": 0.00024149828823283315}, {"id": 440, "seek": 332700, "start": 3336.0, "end": 3340.0, "text": " We're done. Yeah. But I still don't know how to to make SPS.", "tokens": [50364, 865, 13, 823, 11, 291, 458, 11, 6243, 4368, 11, 291, 458, 577, 281, 577, 281, 26200, 379, 1322, 7098, 13, 50814, 50814, 492, 434, 1096, 13, 865, 13, 583, 286, 920, 500, 380, 458, 577, 281, 281, 652, 318, 6273, 13, 51014, 51014, 821, 291, 352, 13, 407, 300, 603, 312, 264, 1472, 295, 264, 7367, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.1841020430288007, "compression_ratio": 1.3904109589041096, "no_caption_prob": 0.00024149828823283315}, {"id": 441, "seek": 332700, "start": 3340.0, "end": 3344.0, "text": " There you go. So that'll be the rest of the podcast.", "tokens": [50364, 865, 13, 823, 11, 291, 458, 11, 6243, 4368, 11, 291, 458, 577, 281, 577, 281, 26200, 379, 1322, 7098, 13, 50814, 50814, 492, 434, 1096, 13, 865, 13, 583, 286, 920, 500, 380, 458, 577, 281, 281, 652, 318, 6273, 13, 51014, 51014, 821, 291, 352, 13, 407, 300, 603, 312, 264, 1472, 295, 264, 7367, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.1841020430288007, "compression_ratio": 1.3904109589041096, "no_caption_prob": 0.00024149828823283315}, {"id": 442, "seek": 334400, "start": 3344.0, "end": 3357.0, "text": " Talking about that. But if you do have something you'd like to hear about on the podcast, send us a question or a topic suggestion. Go to Elm dash radio dot com slash question questions.", "tokens": [50364, 22445, 466, 300, 13, 583, 498, 291, 360, 362, 746, 291, 1116, 411, 281, 1568, 466, 322, 264, 7367, 11, 2845, 505, 257, 1168, 420, 257, 4829, 16541, 13, 1037, 281, 2699, 76, 8240, 6477, 5893, 395, 17330, 1168, 1651, 13, 51014, 51014, 407, 867, 1651, 13, 865, 13, 509, 393, 291, 393, 915, 264, 2960, 456, 13, 51214, 51214, 865, 13, 400, 3131, 505, 322, 6373, 7367, 13, 492, 1116, 4449, 257, 3131, 13, 400, 1309, 291, 370, 709, 337, 4764, 13, 400, 291, 434, 294, 13, 51564, 51564, 286, 603, 751, 281, 291, 958, 565, 13, 3008, 291, 958, 565, 13, 4621, 6543, 13, 51664], "temperature": 0.0, "avg_logprob": -0.18096668348399872, "compression_ratio": 1.6746031746031746, "no_caption_prob": 0.00020337641763035208}, {"id": 443, "seek": 334400, "start": 3357.0, "end": 3361.0, "text": " So many questions. Yeah. You can you can find the button there.", "tokens": [50364, 22445, 466, 300, 13, 583, 498, 291, 360, 362, 746, 291, 1116, 411, 281, 1568, 466, 322, 264, 7367, 11, 2845, 505, 257, 1168, 420, 257, 4829, 16541, 13, 1037, 281, 2699, 76, 8240, 6477, 5893, 395, 17330, 1168, 1651, 13, 51014, 51014, 407, 867, 1651, 13, 865, 13, 509, 393, 291, 393, 915, 264, 2960, 456, 13, 51214, 51214, 865, 13, 400, 3131, 505, 322, 6373, 7367, 13, 492, 1116, 4449, 257, 3131, 13, 400, 1309, 291, 370, 709, 337, 4764, 13, 400, 291, 434, 294, 13, 51564, 51564, 286, 603, 751, 281, 291, 958, 565, 13, 3008, 291, 958, 565, 13, 4621, 6543, 13, 51664], "temperature": 0.0, "avg_logprob": -0.18096668348399872, "compression_ratio": 1.6746031746031746, "no_caption_prob": 0.00020337641763035208}, {"id": 444, "seek": 334400, "start": 3361.0, "end": 3368.0, "text": " Yeah. And review us on Apple podcast. We'd appreciate a review. And thank you so much for listening. And you're in.", "tokens": [50364, 22445, 466, 300, 13, 583, 498, 291, 360, 362, 746, 291, 1116, 411, 281, 1568, 466, 322, 264, 7367, 11, 2845, 505, 257, 1168, 420, 257, 4829, 16541, 13, 1037, 281, 2699, 76, 8240, 6477, 5893, 395, 17330, 1168, 1651, 13, 51014, 51014, 407, 867, 1651, 13, 865, 13, 509, 393, 291, 393, 915, 264, 2960, 456, 13, 51214, 51214, 865, 13, 400, 3131, 505, 322, 6373, 7367, 13, 492, 1116, 4449, 257, 3131, 13, 400, 1309, 291, 370, 709, 337, 4764, 13, 400, 291, 434, 294, 13, 51564, 51564, 286, 603, 751, 281, 291, 958, 565, 13, 3008, 291, 958, 565, 13, 4621, 6543, 13, 51664], "temperature": 0.0, "avg_logprob": -0.18096668348399872, "compression_ratio": 1.6746031746031746, "no_caption_prob": 0.00020337641763035208}, {"id": 445, "seek": 336800, "start": 3368.0, "end": 3389.0, "text": " I'll talk to you next time. See you next time. Bye bye.", "tokens": [50364, 286, 603, 751, 281, 291, 958, 565, 13, 3008, 291, 958, 565, 13, 4621, 6543, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14128531907734118, "compression_ratio": 1.1224489795918366, "no_caption_prob": 0.00011947980965487659}], "language": "en"}