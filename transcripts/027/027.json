{"text": " Hello Jeroen! Hello Dylan! And once again today we've got a special guest with us here to talk about a very cool library called Elm Tailwind Modules. Philip, thank you so much for joining us. Hi, thanks for having me. It's our pleasure. Do you want to give us a brief intro, you know, what you do, where you work? Tell us a little bit about yourself. Okay, so up until recently, I guess, I've been a student in Karlsruhe at KIT. But I started working for Fission last year in July. And yeah, since then I've been freelancing and starting this year, early this year, I've become a well now part time but soon full time employee of Fission. And there I'm writing Elm for all of the core applications. Awesome. And you were you doing some research at the university as well? You were you were pretty, pretty in on a lot of like the deep dive category theory stuff and a lot of those things when when I last talked to you. Yeah. So well, most of the deep dive category stuff is from conversations and yeah, lots of thoughts with together with my brother and I guess self study a little bit. So that's where I guess I picked up that. And we were trying stuff. We also tried to start up something but that was really early and and other than that, I was also doing some research in university like officially. And that was, for example, my bachelor's thesis on reduce, which maybe some of you know. Yeah. Yeah. So that was something else I've been doing in Elm, which was not totally hobby or side project before. That's awesome. Yeah. The topic that we invited you for is Elm Tailwind Modules. So maybe give us a brief intro to what Tailwind is and then what Elm Tailwind Modules is. Yeah. So no one has really figured out how to do styling in the web today yet. I guess it feels like it feels like that at least. So yeah, Tailwind is this utility first CSS framework, which is how they describe themselves, which means that instead of trying to structure your CSS using lots of class selectors and complicated selectors, you simply use small snippets of reusable CSS, I guess, in your HTML. So you have lots more lots more changes in your HTML than you have in your CSS. Your CSS then gets only generated by like a configuration file, a Tailwind configuration file with all of the colors and spacings you use. And then you end up using only classes when writing HTML. Yeah. So it's it looks like inline CSS, but instead of applying specific properties like color is red, you say you apply class saying red or exactly font red, background red, stuff like that. Yeah, it's almost like a CSS class based API. It's like you're calling API functions to style HTML elements by applying classes. Yeah. And at the beginning, you think, oh, this is so limiting. I mean, how would you, for example, use another color? But most of the time by limiting your options by only having certain spacings available, like a set of maybe 16 different spacings, you end up having really, how's it called? Consistent. Yeah, consistent user interfaces with consistent spacings and lots of different spacings. Yeah, I think that's that's one of the features that makes Tailwind a really nice experience to work with and allows you to create really nice experiences on the web, because it kind of has this built in concept of a palette. So you have like a palette of colors. So you have like, you know, BG red 500 would be like the built in default color palette they give you. But the intended way to use it is really to define your own palette. So you have you can define a primary color or secondary or however you name them, define those colors, and then it generates these CSS classes for you to do BG primary or BG secondary or whatever your colors are called. And that, you know, so it gives you this palette for, like you said, spacing for colors and for breakpoints. So you can define your palette of breakpoints and those constraints, those limited selections in the palette really make it so much easier to create nice experiences for your web design. Yeah. And at the beginning, when I was starting with, or when I first looked at Tailwind CSS, I was thinking, hmm, is this how CSS is meant to be used? But after I tried, I tried a lot with my blog, and I experimented a little bit with different ways of using CSS. First using plain old CSS, then using LUI, then using SCSS, SAS, yeah, and finally, converging on Tailwind CSS. And I really felt like, for example, the SAS based version was hard to maintain. Because if I was making a change to the layout, my blog, I ended up having to go into my CSS and change it again, and never really knowing how the CSS and the HTML are coupled together. So is the CSS selector even active anymore? I don't know. And it's really hard to check. So like in this way, I've never felt like the way CSS is, I mean, meant to be used, I guess, was really working for me. Right. And then you have this like layer of indirection for like the selectors that you write in your CSS style sheets using, you know, the kind of traditional way of writing CSS. And you don't know what unintended consequences are going to come from changing a CSS selector somewhere, or changing the style somewhere. So you have this like, with this like utility based approach, you have this like localized reasoning benefit, where, you know, if you change the CSS classes, the Tailwind classes that are being applied to one element, you know, it's not going to have, you know, an effect on some spooky effect at a distance on some other element, which is similar to the feeling of using LMI, in a way. It can still have an effect on the children of the elements, right? Like the if you set the color to be red on an element, all the children of that will be red. So yeah, there's CSS inheritance. So some properties are inheritable, and children inherit these properties, but I don't know which ones are exactly inheritable. Okay, I didn't figure, I didn't know that. Yeah, it's true. For example, for text, and font sizes, and colors, not colors, but fonts, fonts in general, they all get inherited, but that's still true with Tailwind CSS. Yeah, okay. And I never got that distinction of inheritable and not inheritable properties. Good to know. Yeah, so for example, display flex is something that just is just set on like the element you set it on and not on children. Right. And if you apply padding, you know, if you say padding, you know, p2, or px2 for padding horizontal to, if you apply that Tailwind class, it's not going to change the padding for any of the child elements, it's just the parent element that's going to have that padding applied. So you can think locally about a lot of those utility classes. But you know, it's, it's different than if you, you know, go in and change something in your CSS style sheet. And you say you change the padding on a particular type of element, a particular type of selector, you don't know what that's going to affect. But when you say, you know, px2, you know, it's going to apply to the thing you're saying that HTML tag that you're applying it to. Yes, exactly. And if you, for example, had this more complicated selector, which actually selected something in your HTML, and you had another place, you were thinking of changing the structure of your HTML, you end up looking into your CSS and wondering, can I just change the selector? But changing the selector is so dangerous, or at least it feels like that. And you end up copying your whole definition and changing the selector then. And so you end up with duplicate CSS. And to me, that feels a lot like the symptoms of premature optimization, I'd say. So you optimize, not optimization, but abstraction, premature abstract. So you extracted something, but ended up feeling like you needed to tweak it a little bit, and then you duplicate it. And so you defeated the purpose of abstracting the first place. Yeah, and sometimes these like CSS selector abstractions can be very awkward to think about, you know, it's like, if something has this CSS class, and then it's the immediate child of that, which is a span, or, you know, whatever, then it's going to have the styling applied, right? So you're trying to figure out why is this styling not applied. And the abstraction is, you know, you can easily end up just applying a bunch of these rules that don't have a clean abstraction. And then you're stuck with them, because you don't know what you're going to break if you change it in the future. Whereas if you're using utility classes, you're just sort of like, the padding seems off on this element, I'm just going to remove this utility class here. And you know, it's not going to break anything else. And because it's not applying this abstraction where anything that follows this structure where it has this class, and then it has this following CSS selector within that is going to get this styling applied. And I also think most or a lot of that has to do with I think there was this concept of cohesion. And I forgot this coupling, coupling, I think, yeah. And so if two things are tightly coupled, they should be in a place close to each other. But if you end up having like CSS in a totally different file than HTML, it becomes difficult. It's easier to just delete both, I guess, if you have them in a similar place, like it is when you use CSS utility class. Yeah, I totally agree. Like separating things is not inherently good. It doesn't inherently make the code easier to reason about. If you've separated two things that are intimately connected and need to be understood together to make sense of the whole separating them actually makes it harder to understand. So that's why you want the cohesion. And so I completely agree like utility classes give you more cohesion when compared to using CSS selectors in a style sheet. So you were writing code with Tailwind CSS, and you start applying these utility classes. And you're thinking, this is pretty cool. But wait a minute, it's not type safe. What if I type a Tailwind class incorrectly? I wouldn't get a compiler error. Exactly. So there it was writing my blog, and I haven't made the refactor yet. But so if you look code up, it's all class names inside of strings. And you've got a couple of weeks so No pressure. Thinking about stuff in my backlog. Okay, so yeah, I have these strings full of CSS classes. And what if I make a typo? So yeah, I end up wondering why does my CSS not get applied? Or what if I tweak my CSS configuration, like my Tailwind config file, and it generates different class names, and I end up changing the class names almost everywhere but forget one place. It silently fails. So this is not ideal. And there's been solutions in the Elm community. For example, I should look it up. It's Dean's project. Monty5811PoseCSSElmTailwind? Exactly. It's a little bit hard to remember name, I'd say. But yes, exactly. I just read it in my memory. Nice. Exactly. And in that project, that project solves the issue of incorrect class names appearing somewhere silently, without failing. So how does it do that? It takes your CSS, looks at the generated CSS, the CSS generated by Tailwind, looks at all the class names that appear in there, and creates an Elm definition, which is basically just an alias for the type class. So you end up importing this generated CSS file, and if the CSS in quotation definition doesn't exist, so it's just a plain value, the Elm compiler will tell you, hey, you're referencing something that doesn't exist. So you either need to recompile to get the updated class name, or it just doesn't exist at all, and you should probably fix this bug. Yes, exactly. We do a lot of work in the Elm community to not be afraid of typos. Don't hurt me. Types without borders. Elm is really safe. You can do so many refactoring in Elm. Oh, but what if you do typos? Oh, no. Is the Elm community just paranoid? Maybe. Maybe. Just maybe. Don't we trust ourselves? No. I don't. Absolutely not. Me neither. So what was the problem with Monty's project? Why didn't you just use that one? I did use that one. Well, at least for work related things. That's what we use at Fission. Oh, we still use at Fission. Well, and also another version of it, but I guess keep it short. Details. Details. Yeah. The thing I was noticing when using Monty's Tailwind generation project was that it created pretty big Elm files. At one point, I ended up with a 300,000 lines of code Elm file because I was using all of the Tailwind utilities plus two plugins in Tailwind, the typography plugin and the Tailwind UI plugin. I think I used it to stress the performance of Elm review, just by the way. It took like five seconds to parse. So it's really big. It's really big. Exactly. So for people who might be wondering why, Tailwind uses a sort of brute force approach to generate every permutation of all of these different variations. So if you have your color palette, so if you have like 20 colors and then you have your breakpoints and then you have your spacing, it's going to create for every breakpoint and for every color, it's going to create every type of padding. Padding X for all of the different, or well, I guess you don't have padding for colors, but it's going to create every BG color for every breakpoint. So if you have like the medium breakpoint, it's going to be like MD colon BG dash red dash 500. And it's going to generate every permutation of all of these different possibilities mixed together, which is essentially emulating almost like calling an API and saying like, okay, for this breakpoint, pass in this argument of this color for background, background color or something. Right. But it's doing it through CSS classes. So it just brute force generates every permutation and it's a combinatoric explosion. And then the way Tailwind deals with that is it uses something called purge CSS, which uses like regex to go through your source code, find all the CSS classes that are used and strip out from the CSS all the ones you don't use to have a reasonably sized CSS bundle in production. So that didn't work well for the Elm compiler and output. It didn't like that. Well, I don't think the Elm compiler was actually surprisingly fast. It wasn't the bottleneck, at least. It was more my tooling, which seemed to slow down a lot more when I was using projects with generators, Elm modules, which were that big. Yeah, I think I remember VS code slowing down pretty heavily, at least. There's been lots of improvements, though. I've used these files to do more debugging in VS code, actually. Nice. Not much, but a little bit. And they figured out some improvements to it. So that was nice. Still, it slowed down my tooling a lot. And in September last year, I saw one project which was post CSS, Elm, Tailwind, no wait, post CSS, Tailwind, Elm CSS. Post CSS, Elm CSS, Tailwind from Justin Reyes. Exactly. You've got all of the links prepared. Nice. This turns into some kind of bingo of me trying to pronounce the... This is our special Christmas episode again. Exactly. That project from Justin. And he had this genius idea of using Elm CSS and transforming all of the CSS that Tailwind would generate and transform the generated CSS into generated Elm code in a way so you can just throw away the CSS again. Just use the generated Elm code. So there's Elm CSS, which lets you define CSS within Elm, kind of similar and inspired to CSS in JS. And he was using that to define an Elm file which contained all of the properties that would be defined in the Tailwind CSS file and have a neat Elm definition for each of the utility classes then. Right. So and I think he also had this innovation where it could be more composable to put those pieces together, right? Because you had instead of having a single... So, you know, like I was saying before, like conceptually Tailwind is essentially a hack to give you an API through CSS classes where, you know, you can say at the medium breakpoint on hover, the background color of this button should be blue. And so it generates MD colon hover colon BG dash blue or, you know, whatever. But, you know, conceptually it's an API that you're passing in a bunch of arguments to these functions. And well, that's sort of what Justin Ressier had as his innovation was that you could actually generate Elm code that composes those things together to give you the CSS class names. Is that the idea behind his library? Exactly. And like one of the examples I was having at work was we use dark mode. So we ended up having just twice as much CSS and Elm code, therefore. Right. Right. But what you would do in Elm CSS was just define another function which would be called maybe dark and it would just wrap your CSS you were using with a media query which queries for prefers color theme dark. And you don't have to add anything else. So it's just one more definition instead of doubling all of your definitions. That's awesome. So it's using Elm CSS under the hood as well, right? This library here? Yes. Not as well. This one does and Monti's didn't. Oh, right. I meant compared to Philip's library. Exactly. True. Yes. So we talked about, you know, the pain points with Monti's having, you know, generated code that was difficult for tooling to parse. What was the what was the reason that made you want to build something? What were the pain points of using Justin Ressier's approach? Justin's project was not complete at the point I was trying to use it. So I was trying to use it with, for example, Italian CSS plugins like the typography plugin or the UI plugin. But it ended up not generating correct Elm code. And so I was trying to I was taking this project and making changes to it. And while I was doing that, I was thinking of more architectural improvements to it, I guess. And in the end, it happened to be, I guess, more of a coincidence that I did not that I forked this project instead of really contributing to it. I was planning on switching to another Elm library. So instead of using Elm CSS, I was thinking about using Elm Origami, which is some not well known at all Elm project, which is again a fork of Elm CSS. So I guess we're like getting into the red lines on the wall kind of thing here. I know the meme you're referring to. But yeah, so accidents happened. I ended up significantly reworking his project, but starting out from his and making changes to it, switching the code generation from plain JavaScript to TypeScript, changing it from doing internal changes and adding more features. So it became possible to, for example, use generators, Tailwinds, CSS with plugins. Exactly. Right. So the plugins and the customization of the palette is really cool because you tweak your Tailwind config and you change your palette, you change your color palette to have your primary and secondary instead of the built in blue 500, blue 600. And now it's generating these palettes for you and reducing your options. So let's talk a little bit about what the experience now feels like using your Elm Tailwind modules tool. So it's built on Elm CSS under the hood. It's just giving you Elm CSS code that's actually defining the same CSS that Tailwind would. So you don't actually have a CSS file with the built in permutations of every possible Tailwind class. There are actually no Tailwind classes in your code when you use your Elm Tailwind modules tool. Yes. So the fastest way to check out this project would be just to use some, I guess, pre compiled or pre generated Elm code, which I uploaded to the Elm packages directory. I think the package is called Matthias23 slash Elm default Tailwind modules. And in there, there's just two files with two modules with lots of definitions. It's basically the generated code. And then you'd use Elm HTML just like you're used to. And there is one more HTML attribute you can use because of Elm CSS, which is the CSS attribute. It takes a list of parameters and there you can just import these definitions and insert them there. And it'll apply them like if you were applying a list of classes. It feels similar at least. By the way, why does the Elm CSS API have that CSS function? So you've got Elm CSS. There are like a lot of things to define for this episode, but once you get into the flow of using it, it doesn't feel overwhelming. But there are a lot of concepts to introduce. So with Elm CSS, it's a drop in replacement for Elm HTML essentially. It aims to be that plus then a superset with the added features. So then if you have like an anchor tag, if you have, you know, with Elm HTML, you would do an anchor tag with just a and then list of attributes and then list of children. And the list of attributes, you can do HTML attributes dot href. And then you can add HTML attributes dot style and you can add inline styles. So I guess Elm CSS, it would look exactly the same except your imports would be different. Instead of importing HTML, you import styles dot HTML as HTML or something like that. And you still have a for the anchor tag. You still have the list of attributes and the list of children. But now in the list of attributes, you can include you can call the CSS function, which then takes a list of styles. So I guess that would be like the alternative to doing HTML attributes dot style background read. You would do CSS list of CSS attributes and then you would do CSS dot background and then CSS dot RGB 25500 or something like that. And the value of that is, again, not to have typo errors. Right. Right. The goal the goal of R.T. Feldman slash Elm CSS is to give you a drop in replacement library for Elm HTML that adds CSS styling utilities that give you a type safe API for doing CSS. It's not attempting to be, you know, giving you a simplified way of expressing things like Elm UI. It's just like you want to use CSS. Here's a type safe, high level Elm API for doing exactly CSS. It's not trying to change how you interact with CSS except for making it type safe. So then within that CSS attribute that you can you can include in your list of attributes, you can have a list of CSS styles to apply. Now you can you can use those because it's regular Elm CSS. But now you have these little generated definitions from your from Elm tailwind modules. So you can use the generated modules, which are tailwinds utilities and tailwind dot breakpoints. And those give you helper functions that you can use within that list of CSS Elm CSS styles. Yeah, exactly. And they're composable, too. So like what that would look like if you were saying in dark mode for a, you know, at the medium breakpoint, I want to have a blue background, then what that would look like is CSS. And it's a list of Elm CSS attributes. And then you would say dark, and then you give a list of dark attributes. And then you would say tailwind dot utilities dot or no sorry, tailwind dot breakpoints dot medium, or dot MD. And you'd give a list of things for that, which it sounds like overwhelming that it's a list of lists of lists. But really, it's just this composable thing, which is really what tailwind is attempting to emulate is the experience of composing together these different utilities. And it does that by a combinatoric explosion of every permutation being generated as a CSS class. But this is actually the ideal that it's striving to emulate, which is, it's just functions. And you can, and since it's composable, you can now do programmatic things with that where you, you can kind of pass around things and compose them together through code, or abstract them or make your own small definitions for the group or a list of CSS you want to apply. For example, I have this uppercase button style in my project that I reuse. Yeah. And where you would before use some special CSS syntax that is added by tailwind in using post CSS, you can now use Elm definitions and have your type save code back. Let me just get this straight. So Justin and Monty, whose name is actually Dean. I think so, yes. Yeah. So Justin and Dean's solution were to generate functions that alias the tailwind classes. But since, yeah. No, no, no, not quite. It's the case for Monty's project, but it wasn't the case for Justin's project. Justin already didn't only alias the definitions, but kind of like inlined the styles. So it was actually generating, for example, mx underscore auto equals, and then CSS dot batch of margin left something auto and margin right auto, for example. Yeah, because he was also targeting Elm CSS. So with Elm CSS, use the CSS function, which takes styles, which does not take classes. So if you want to pass in tailwind utilities to that, you need to have them translated to properties, right? So that's what you generate with your project. And what Justin also did. Yes. So my project is in the idea the same as Justin's. I just picked up the project and actually his code base, modified it, improved it and added to it until I felt it was ready for some of my projects I wanted to use. So we mentioned before that tailwind uses purged CSS to do dead code elimination. So what it did was, as Dylan said, use a regex to find all CSS classes in your code base, which may have some false positives, false negatives, I guess. Wait, don't regexes just work perfectly every time and never have any issues? Well, yeah, except with typos. I guess it can be both. Yeah, there's like the issue of what if you use some code to generate a class name. So what if you were doing the kind of abstraction of, yeah, I don't want to write this color name like this. I want to abstract my, I guess, color from my border radius, border color. And you split up your strings. Exactly. If you split a string, your string won't be found by purged CSS and some classes will go missing and they won't be included in your production build. That might be hard to debug. Which, as you said, it's actually desirable in many cases to programmatically create like a composable way of defining something. And so you actually that's not purged CSS friendly. So having an actual generated programmatic API for this is really desirable. If you don't want to purge CSS, the result. You essentially have to. I think it's like over a megabyte. The default generated tailwind CSS asset, I think it's over a megabyte, maybe even several megabytes. I think you quickly get in the megabyte range if you have the certain variants enabled and dark mode and stuff like that. Because if you add dark mode, now it's applying something for every other class that existed. So it literally just doubles the classes. So if you had one megabyte, now it's two megabytes. Of course, minification might reduce that. But even so, minification, even if it's minified and the minified asset is not twice as big strictly, you still have to parse and interpret all of those CSS classes once you've decompressed it. Plus, you have to actually decompress it. So it's a lot of work for the browser engine to do that you want to avoid. Essentially, I would say it's necessary to purge CSS with vanilla tailwind. But I mean, you can't use purge CSS if you do that concatenation. Yes. Even just if you don't do purge CSS, if you want yourself to find the CSS classes that you don't use anymore in your Elm code, just finding them manually in your editor, that becomes a problem. In your case, you don't need to do that anymore. Yes. So right now, we don't generate any more CSS files, or at least it is possible to do this without generating CSS files, or that maybe later. And you can rely on just your Elm code and the Elm compiler in turn with the minus minus optimize flag will remove every function that can't be called or won't be called by your Elm program. So it does that code elimination and all of the classes you won't use in your Elm app, they won't appear in your generated Elm code because Elm figures out their dead code. Yeah, yeah, that's really clever. I love how that design all just kind of works out. I don't remember. Is it the Elm compiler that removes those functions or is it the minifier? It's actually the Elm compiler. So what the Elm compiler does is just take your main function and look at all of the functions that are referenced by the main function, and then in turn, look at all the functions referenced by them. So it basically just and it takes them and includes them in the generated bundle. Instead of like removing stuff, it just takes everything that is reachable code and transforms it and compiles it. Yeah, it doesn't eliminate code. It just pulls only what it needs. Also, the number of like the amount of code that's being generated is not a combinatoric explosion because the code you're generating is these composable helpers. So it's not that for each variant of dark mode, you need to generate a class for each variant of breakpoint and for each variant within that of color. You actually just generate a function, you know, tailwind.breakpoints.md, tailwind.breakpoints.sm, and those are generating functions that compose together and apply the media queries for those breakpoints, which is really, really cool. And it makes it so much nicer to work with. And I know on the roadmap, Philip, you've got that you want to work on trying to take that a step further and actually extract out colors to be composable in that way as well. Yes, exactly. So at the moment, we have lots of definitions for, for example, background color. And then you say bg underscore red underscore 700, for example, and the red underscore 700 part is your color name. And it's taken from your tailwind configuration. And tailwind will just generate a class name, or in this case, in the end, a definition for each of your colors. And the idea is to only generate one definition, which will then be bg underscore color. And it will take another parameter, which would then be, for example, red underscore 700, which would then be its own definition. So this way, instead of having like background color, border color, text color, and all of them, and each of them being defined for every of your colors defined in your tailwind configuration, you end up only needing one definition for text, background, and border color, and all of your colors once. So this is the end goal. That would probably reduce the size of the compiled code also, right? Exactly. This would be even smaller code. At the moment, we don't generate variants. So if you like, generate these sm underscore underscore definitions for the small breakpoint, then my tool will spit out a warning and say, please just turn on variants, it makes your code a lot shorter. So and you can use L and CSS to do the same. So use that. And this would be another way to make it even less code. Yeah, I was just searching for the hover function, because I know that tailwind has that, but you're actually just using CSS dot hover from L and CSS. Exactly. And same thing for the breakpoints. So the breakpoints are actually configured in tailwind in the tailwind configuration. So I use those breakpoint configurations to generate another file with your standard breakpoints, so to say. Another file? Yeah, exactly. Another module. So that's the tailwind dot breakpoints module. And it contains then, for example, in the standards or default tailwind configuration, it contains a function named sm, md, lg for the small, medium and large breakpoints and more. And they take in turn just a list of styles to apply when you're at this kind of breakpoint. It's not perfect right now. There's one thing that I really don't know how to fix. And this is something that Justin stumbled upon too, and which is kind of difficult to handle. Tailwind CSS actually. So you have to be careful with the order of your styles when you write them down. So you need with the L tailwind modules projects, you need to order your breakpoints from big to small if you're using min width breakpoints. So that means if you don't honor this order, you'll end up having some styles overwrite other styles in cases you might not be used to when using tailwind CSS. And this can be really surprising. And this is due to the fact that tailwind CSS relies on the generated tailwind to have a certain order of definitions. So that the, I think, first definition that applies in the CSS file will be the one that the browser actually uses. Either the first or the last, I don't actually remember. And this, yeah, this is kind of unfortunate and I don't really know how to solve this issue yet. But there might be some way to use a clever set of helper functions and combination of that with the generated code where you could have like instead of the CSS, which takes a list of the CSS properties or styles, you could have like a special tailwind one and you could have some special type instead of just being a direct CSS property. You could have it be something that has like, you know, a tuple where one of the pieces of information is ordering information. So if it's a breakpoint or if it's no breakpoint determines the order and then it applies those when you compose them together. But it's a challenging technical difficulty there. Yes. And again, I have to give props to Justin there because he took a stab at solving this issue and wrote a generated function. So he added a function to the generated code, which would actually take a list of tuples. So for each breakpoint, you can define a list of styles and then it would order the breakpoints automatically. And I think that was a step in the right direction. It just felt a little bit too clunky and a little bit too verbose for my taste. And there's like the question of how do you want to group your code if you, for example, have a list of states, styles to apply when you're hovering an element and you want to have this list of styles change when you have another breakpoint. So you think about which one is wrapped around the other. But yes, so it's I'm not entirely sure how to do that yet. It certainly makes it less composable. And then if you wanted to do like CSS dot batch, which is a function that comes with Elm CSS that allows you to group together multiple styles. Now they would wouldn't be styles, they would be tuples. And so you couldn't use things like CSS dot batch. Like that's part of the beauty of this approach is that you're just generating these Elm CSS properties. And so you can compose them together and use them just like a first class citizen in Elm CSS. I wonder if there would be some sort of like post processing that could be done like with Elm review or something that you could have it order things. The problem is if you're using if you're calling out to functions and things like that, it could become difficult if you're concatenating lists and things like that. Yeah, this is always the problem with static analysis. My thing is that instead of having every property be a CSS style, you could probably have an intermediate type. And then when you try to transform it into a CSS property, then you do all the nice things. And maybe if you do that, you can also make it work for Elm HTML. But that would be a bit more tricky because of how the CSS classes are handled. Maybe not. You could fork Elm CSS and make a drop in replacement for Elm CSS, and that would allow you to include extra pieces of metadata in your CSS styles. That would actually probably solve the problem pretty nicely. But then now you have like this is something that sometimes happens in the Elm ecosystem is like you have like this is a drop in replacement for this. This is a drop in replacement for this. It's like Elm accessible HTML. And then there's Elm CSS. And what if you want to use Elm CSS with accessible HTML? They don't really compose because you keep like creating these drop in replacements for things. Absolutely, yes. And this is something I was thinking about. But exactly. I don't want to make yet another competing project, I guess, which is not compatible. And I think I didn't think of Jeroen's idea, actually, which I think is a good probably a really good idea to have. Oh, right. This intermediary library, I guess, which would allow you to sort your definitions by some kind of internal key. And that would solve the issue. The solution is always to add more types. Yeah, I think there's like this one quote, every problem in computer science can be solved by another layer of indirection. Except the problem of too many layers of indirection. Exactly. Yes. Except performance problems. So what would be the reasons for using Elm UI or using Tailwind? Or any other variants like Elm HTML? Yeah, so I think like at the very core, Elm UI and Elm or Tailwind are solving similar issues, which is trying to make the developer experience of using styling applications in the web better. So then, yeah, it's the question when do you use one or the other? And I think Elm UI is really useful for people who don't know or don't want to know or don't have to know how to use CSS yet, because it really is much simpler, though I haven't used it much, I have to say. When I started, for example, writing my blog, I was thinking about using Elm UI and it was and it is the default for Elm pages. The Elm pages start right now, right? That's true. I actually have an Elm pages Tailwind starter repo, but it's out of date and I'm planning to update it to use Elm Tailwind modules. Oh, yes. Great. But there's, for example, there's some benefits to using CSS compared to Elm UI, which would be, for example, the way you can use media queries for different device sizes and I guess some smaller things, which would be like newer features in CSS, which have to be added in Elm UI first. Like CSS Grid, for example. Exactly. CSS Grid or I don't know, like things like focus within or stuff like that. Maybe I'm not sure. Maybe I'm wrong here. And this is actually already implemented. But yeah, CSS Grid would be an example. So when I was using when I was writing my blog, I was also thinking about this question, should I use Tailwind or should I use Elm UI? And it ended up being Tailwind because I need the breakpoints to work correctly and without JavaScript in that case. So with media queries. Yeah, I'll give my personal experience report as somebody who's used both a fair amount. I've done a lot of Elm UI. I've done a lot of Tailwind. And so with Tailwind, some of the things that are kind of challenging coming from Elm UI are that you do have to think about CSS and not pretend it doesn't exist. You can pretend that certain parts of CSS don't exist, which is great. And it's in general a way smoother experience than what I've had personally trying to just write, you know, CSS files and SCSS files. But you still have to understand CSS and how things work. Right. You do. You still have to understand flex and flex grow and flex shrink and item center and justify around. Or, you know, all of these things you have to. And I find myself constantly having to look them up. The Tailwind CSS documentation is great, but Elm UI has like a clean slate and it can say, OK, if we were to imagine CSS from scratch, what terms would we use to describe these things? And it's beautiful. You know, you don't have to like remember the to put flex in the right place. And you just say spacing on the parent. And it's it's beautiful. The pain points using Elm UI for me have been one of the most important things for making a polished professional web design is having it be very mobile friendly and responsive. And I've found that to be very difficult to do with Elm UI in my personal experience, because a couple of things. One, I I want it to pre render nicely, which there's just no no story for in Elm UI at the moment. At some point there may be. But right now there's no way to do that using media queries, which means it's not going to pre render well, which we discussed on our Elm UI episode. And the second thing is you have to like wire through state of the current browser dimensions in a lot of places to do it. And I just prefer a more declarative way of saying at this break point to this at this break point to this. So Tailwind is amazing for that. Tailwind is amazing at having like a palette of options and being able to just. That's just a feature that's baked into Tailwind and it works very nicely with Elm Tailwind modules. So that's a killer feature. That's not something that is impossible to do in Elm UI. And at some point maybe we'll have a cool tool for like building a palette, which would be great. Also, Mini Bill Leonardo built a package that wraps Elm UI. Again, it's a drop in replacement that does a slight twist on something. And what it does is it allows you to have state that you can call into without passing arguments through every place that you're calling your Elm UI functions. So you can have state like the current width to do conditional breakpoints and things like that. So that alleviates that pain point a little bit, but still it doesn't pre render nicely. But the other killer feature of Tailwind CSS is Tailwind UI. Tailwind UI is like a paid like component library of these copy pastable snippets of Tailwind HTML with CSS classes. And it is so easy to make like professional landing pages and application designs using that. And that's one of the killer features, I would say, of using Tailwind in general. But that is not compatible with what Philip did because you can't take that Tailwind UI and put it into your Elm projects, right? Yeah, not directly. So it's just HTML with CSS class references in strings. So you can use it as a drop in. But... But, well, yeah, right. So it's just these templates basically, right? It's just templates of HTML code. And I so when I was building the Elm, ElmTS Interop.com landing page, I built it with Elm Tailwind modules, which was an amazing experience. I was very pleased. And I discovered that I was copy pasting and, you know, tweaking the the Tailwind UI templates, HTML templates so often that I would save myself time if I built a tool that automatically parsed them. So I built I built a tool which is at HTML to Elm.com. And it has the ability to parse Tailwind CSS classes and give you the same format that the generated code from Elm Tailwind modules uses. So so all you do is you, you know, copy paste your template from from Tailwind UI.com. And it will give you something that you can just paste into your Elm Tailwind modules project. And it just works. And it's quite nice. And I built an Elm review rule, which maybe will be hopefully it'll be published by the time this episode is released, which allows you to do debug to do. And then you can do a triple quote string and paste in that HTML template from Tailwind UI. And it just generates all of the code that is now going to be compiling working Elm Tailwind modules code. So it definitely saved me time in the process of building it, or at least was more fun than manually going in and doing that. That's a more truthful answer. I have to thank Dylan that in the future when I'm using Tailwind UI components, I'm going to have more fun because yes, I won't have to, yeah, fiddle with the HTML and transform it into Elm code and then fiddle with the classes and transform them to Tailwind utility classes. And that's great. Yeah. I didn't get that you did this for Tailwind UI, but when you started talking about it was oh, yep, that makes sense. Yeah, it even it even will do things like, you know, if you have hover colon BG blue, right, then it's actually going to create CSS that says CSS dot hover, not Tailwind dot utilities dot hover, because that's how it's generated. So it handles all of those special cases and gives you compiling code. It definitely enhances the experience. It just like it's no fun to like have in the middle of your workload to have to go manually tweak a bunch of stuff. Yeah. So just to clarify, it's HTML to Elm dot com separated by dashes. So HTML dash to dash Elm dot com. Yes, we'll put a link in the show notes. Yeah. So did we answer the question about Elm UI versus Tailwind? Right. I remember I wanted to say something about that. I think ultimately I'm having like dreams of there being the ultimate M.U.I. in the end, because I see lots of similarities between Tailwind and M.U.I. even if like you have to flinch a lot. There is things like, for example, the spacing utility in Tailwind, which they just use space underscore X underscore eight, for example. And it'll add, I think, yeah, 32 pixels of spacing between your children elements. And I guess this is something similar to using a row or column in Elm UI and adding the spacing modifier. And it's an abstraction over CSS. So in the end, it's both is actually CSS code, but you're using the same API. So they are having similarities. And if you start to abstract, if you start to abstract Elm Tailwind modules like what I'm planning in the future, it's going to be even similar when you're using background color and just putting in a color you have to find somewhere else. It's going to start to look very similar. And it makes me dream of this ultimate M.U.I. I guess, which has all of these features and maybe works with media queries. And then in the end, maybe you don't even have to think about Flexbox anymore and how stretching and growing and shrinking works. And I think that would be that's that's something awesome. So I think of Tailwind and Elm Tailwind modules more as a compromise between having all of the, in quotes, advanced features available today, but moving into the same direction or but approaching from a very different angle that Elm UI does. Yeah, I think that makes a ton of sense. Like one concrete example of how you might translate that, that just to give people an idea of what that experience might feel like, would be instead of having, you know, Tailwind.Utilities.Flex, which is actually just display flex under the hood, you would not generate Tailwind.Utilities.Flex, but instead you would have a function, you know, and it would be like for a flex tag. Although that does become interesting now because then now you get into the same thing as Elm UI, right? Where Elm UI separates the notion of like containers and their markup. So if something is the term in Elm UI is a region. So if the region is main or nav bar, that's like the semantics and the semantics are separated from the styling. So you would have to get into that territory a little, which I mean, there's really no reason that you couldn't, that you couldn't take that same direction of having it be an attribute to define the region, the semantics of the HTML elements. But if you have an API like that, now flex becomes something where like you say, OK, flex, and you can create this nice experience where you can define within that the different variants that you could have for centering things and having the spacing and you could have a higher level API for saying those things. Yeah. One thing I was thinking about is there is, for example, the Tailwind CSS definition of flex and flex row and flex call. And I was thinking, well, why don't flex row and flex call just imply display flex? And once you use that, why even flex dash row? Why not just row and call? And then you start to have more similar APIs between Elm UI and Tailwind. Yeah, Tailwind already tries to abstract those things to a certain extent. So it's just taking it a step further. So one thing that we didn't mention, think, is that because you now have functions or constants to define your CSS, you can use your editor to auto complete those definitions. Right. So you can do a tag, square brackets, tailwind. And then it gives you auto completion for saying background red 500 or something. Yes, that's true. And there's even tooling and there is tooling for Tailwind CSS in general to give you auto complete when you're writing a string and you're starting with something that looks like a tailwind class. But this project, you don't need another tool which will need to understand Elm code, but instead use the normal Elm tooling. And one thing, one other thing I haven't talked about too much in public yet is I've added documentation generation to the Tailwind modules tool so you can now generate document or doc comments together with your generated code, which will include the CSS that was consumed to generate these definitions. So when you hover over a Tailwind generated Tailwind utility class constant, you will in your tooling, if you have tooling installed, Elm tooling installed, will see in its documentation what CSS was consumed for generating this and in essence will apply when you use this class or this constant. Nice. I hope that doesn't make the file much, much bigger. It does. In fact, it does, unfortunately. But I hope in the future it's going to become smaller anyway with less and less definitions. Do you know how many definitions you create with your generation at the moment? I don't know. It depends. It depends a lot on your Tailwind configuration. So, for example, do you have dark mode on or off or do you have variants on or off? I don't know what the values are right now for the default. I just checked and it's about 3600 for the Elm default Tailwind modules. Yeah. So it's a lot of definitions right now. It's still quite a lot. Wait, is that lines of code or number of definitions? Number of definitions. Really? It's going to become a lot smaller when you extract out the colors because the permutations for the colors is a lot. Also, just if you reduce your palette. So to reiterate something we talked about earlier, when you go to your Tailwind configuration file, you can define your custom palette, which is a best practice. You should do that. And when you do that, it's going to reduce the number of permutations by quite a bit. You can even half it if you only define dark mode. Yeah. And if you I mean, the number of built in color variations is like like 30 or 40 or something, right? So if you if you have like eight colors instead, then you've drastically reduced the number of defined top level values. And I imagine you could do the same thing with spacing, too. Is that something you're thinking about? Yeah, exactly. Both of these things. And I think spacing might even have way more. Yes, I guess effect or an even more drastic effect because it applies in more places. Yes. So it has the permutation like the combinatoric explosion in more places. Yes. But I still have to think about how to best do this. It's more straightforward with colors than with spacing, because then you're thinking about, hmm, should you introduce an int argument to your definitions or will you generate some kind of type which encapsulates all of the possible spacings to reduce the set of them you can pass to your definition? Because I think this is a feature of tailwind CSS. Absolutely. Yeah. Having it be a restricted palette is like a huge feature. And also like the the tailwind team in in tailwind itself and in the paid pro tailwind UI, like library of templates. They've put so much thought into the designs. They've done so much research and and tweaks things. And it's very reliable in terms, you know, just like should the, you know, the default font size be 16 pixels and then should you have like 14 or 12 pixels for certain, you know, text around forms and things like that. And they really put so much thought into the spacing and the font sizes and all these things. So the palette is like one of the most compelling features of using tailwind. Absolutely. And one thing I really like when working with tailwind is that it's written by people who've done a lot of HTML and CSS development and design. So I think the two heads of tailwind CSS are our like the founders, I guess, were Adam Waethin and Steven Schroeger. And they also wrote a book which I read and really, really recommend this refactoring UI. So this was something for me as a mostly programmer, which would inspire me to try more design and to get better as visually making things aesthetically pleasing. So what are some best practices when using Elm Tailwind modules? We talked about like narrowing down your palette in your tailwind configuration to reduce the, you know, color palette that you're using. You know, you can reduce the breakpoints if you don't use all of the breakpoints. For example, there are some things like that that just sort of constrain things to help you build more consistent designs. What other best practices do you think help you build nice designs and nice code using Elm Tailwind modules? Yeah, one other thing, and I think I mentioned that the command line interface will also tell you is just turn off your variants and completely use Elm CSS for that. And I mentioned it's order your breakpoints accordingly, otherwise they don't apply. And then there's like a big question of what's important to use, I guess. So I personally have an interesting way of using the tailwind modules project and writing HTML code myself in Elm, which is I usually write modules which read like HTML templates. They don't contain any logic. The most complicated thing it contains is maybe list.map. Even that's very rarely. And other than that, it's also very light on dependencies. And these modules only depend on HTML. So the HTML.style module, the HTML.style.attributes module, the tailwind modules and maybe an icon set and stuff like that, but not on actual logic code. And the types are mostly HTML and attributes which might even get passed in or passed out. So it's basically all everything is like with HTML templates and the outside code then has logic to use it. And what I end up doing in these modules to make them more readable, and that's the whole point for them in the first place, is I use explicit imports, which is very unconventional in Elm. Do you mean like unqualified imports? Yes. Like exposing dot dot kind of? Oh, yeah. Yeah, not explicit. Yeah, I'm using the exposing dot dot imports. Exactly. And I see Jeroen shaking his head at me. I'm going to get a game of the stink eye. Jeroen is the personification of Elm review telling you, I think you might want to fix this. I don't even have an Elm review rule for that. It's so uncommon. But it's just the gaze. Oh, no, actually, I do have a rule for that. I actually have one that fixes it. Just use that. All right. Yeah. So I like doing that because it reads more similarly to, for example, Tailwind UI templates that you see. And I think if you really restrict yourself to only using HTML and CSS in those template modules, you don't start to have this question of, well, is this definition defined in this module or in another module or where is it defined? But you really can, you should or you mostly know like section is an HTML element. And you see there's maybe an MX underscore auto in there and you see, yes, this is a tailwind class. And so these there's less of an issue with that there. It is still something unconventional. I see that. But I think there's even more value behind separating these kind of template classes from the rest of the code. And I think this is the biggest thing, maybe. But yeah, this is how I like to work with it. I haven't developed any other best practices yet. And I would say this is a developed best practice yet at all. So basically what you're just doing is you're defining reusable view functions. Yes. That you just, yeah, you can compose them together. I think of them like, I think in React, people usually like to split their React components into presentational components and functional. No, I don't know what the other one was. I remember smart and dumb components. I think they renamed it, but all right. Presentational and logic based. Yeah, basically I try to do like some kind of similar splitting where I have these modules which have no logic and only care about your HTML and CSS fitting in nicely together with each other. Yeah, I definitely like that idea a lot. As far as like the unqualified imports, like I don't have any problem with people doing that. But for my own personal preferences, I really like auto completion and it's just like inseparable from my workflow. Like my brain will cease to function if I don't have that feedback mechanism at play. And so I just write like module name dot. That's how I write code. And my brain would stop working if I didn't have that. So, you know, for that reason, I might like do a short import alias or something like that in that context. But otherwise, I think the idea of separating, you know, these nice like view helper modules is a really nice pattern. And like one one thing I want to add to that is that it can be really helpful, like in the object oriented space. People talk about these view objects. I'll post a link that talks about that. I think it's a nice pattern that applies in functional programming as well, which is having like the logic for presentational aspects of like, how do you present given a user data object? How do you present that user's name? How do you present, you know, all these different strings that you need? And at that point, you build up this data type, maybe just a record with a bunch of fields that are pretty much strings. Right. And one of the cool things about that is if you're doing unit testing, now you can have a unit test that doesn't pull in HTML to test your views. You can test those view, you know, little records. And you can have a nice decoupled thing that has the presentational elements and gives you all the little bits of data that you need. And then you can have kind of dumb view helpers that don't have to have all the knowledge of how to how to build that up. So that's one pattern that I think can be helpful for for using that approach. Yeah, that sounds nice. It sounds really similar to what ends up happening in this kind of way of working. That's what I was imagining, that that's something that you naturally are going to do if you're going to have these dumb things that basically just use list dot map and are otherwise dumb. Another question I had is, do you do you use or can you use at apply with Elm tail end modules? And would you would you even want to or would you use Elm abstractions to do to get that effect? Oh, yeah. Right. This gets back to another best practice, I guess. You can use at apply. So for those that don't know, at apply is something that a kind of syntax in CSS, which gets introduced when you use tailwind CSS. Yeah, it's like a special tailwind directive for like smushing together utility classes for like at apply. And you create a button that has this background and this hover class and whatever. Exactly. And the best practice in our case would then be don't use it. Just define these things in your own land. But it also depends very much on your use case, unfortunately, because some teams, for example, use the same CSS and tailwind configuration that they use for other pages, which would, for example, be statically rendered next. For example, and then they end up not well being able to import these definitions. So it's also about interoperability there. So I guess if you can, it's best to use the Elm CSS definitions and use it within your own code because it's much easier and less prone to maybe some mistakes in translation when generating the Elm code if you had used it in CSS directly. But it is possible. And yeah, it is possible to use at apply in your CSS and have it generate some custom code. Yeah, I sort of had a similar philosophy with Elm GraphQL, which was like as much as I could do with Elm high level abstractions, I would prefer that over GraphQL abstractions. You know, so like GraphQL has has this notion of variables that you can pass parameters into things. But Elm has parameters and functions, so prefer using those over sort of GraphQL domain concepts when possible, because it becomes like a more high level abstraction that's more idiomatic to Elm. And you can leverage all the features like you can refactor refactoring tools in your IDE and you can refactor static analysis tools like Elm Review to help you analyze dead code. And, you know, it just becomes a really nice experience. And also, it's less moving parts. So when you're using a generator, you would draw and you can like not use it instead. That's one less moving part in that case. So it's always what I recommend. The best code is the code that was never written, I guess. Yeah, yeah, absolutely. Yeah, I love that it's just CSS dot hover instead of generating a special tailwind one because you could just compose those together. I love how you say the best code is the one that has not been written and you generate a giant file with 2600 functions. I'm super guilty. Another thing, like when when working with tailwind, I believe a lot of people who work with tailwind have this experience that they rely heavily on the docs and on tailwind UI in particular. It's a paid product. But if you use tailwind a lot, it's so helpful. It's like my Bible for it because the cool thing about it is it gives you these templates. But it's not like bootstrap templates where it sort of gives you a style where it's like a dark, dark template or a light template. It's like a starter point that you just tweak as needed. And so you can build off of it and turn it into something like not every tailwind site looks the same, whereas with like Twitter bootstrap, every site looks the same. And then maybe you can tell that something uses a particular Twitter bootstrap template, but it just changes the color scheme and fonts. Do we have to mention that we were not sponsored or? I know. Maybe or maybe we should just ask them to retroactively sponsor us. Sounds good to me. So that's just super handy is using those templates and then you can tweak them and make it look like it's something you built a customized thing. Not like it's not immediately recognizable because you can turn it into your own look and feel. But when you do that, you end up with all this boilerplate code because they repeat things constantly because it's just HTML. So you'll have like, you know, if you copy paste one of their nav bar examples, then you'll have like, you know, an unordered list of list items with like 10 list items for all the nav bar content. And the same tailwind CSS classes are applied to all of the unselected nav bar elements. And then the current page that's on has a specific one because it's not like a JavaScript framework. It's just HTML. So then you have to sort of reverse engineer pulling that up into abstractions. So that's another best practice for people to keep in mind is I would say like start with just getting that template on the page and then reverse engineer it through refactoring. Like you can listen to our Elm Radio incremental steps episode and that's the approach I would recommend for incrementally refactoring to pull up those abstractions. But don't try to do that, like at the same time to refactor and extract those abstractions as you're getting your layout working. Get it like rendering and then little by little extract out parameters and create abstractions. I've felt that I wanted to abstract things also very often. I was thinking, hey, I've used the same parts of the same set of table and UI classes in multiple places. Maybe I should abstract it, but it should be really painfully aware that you have to abstract this when you're doing this. So in the end, I often ended up still switching some parts and then they don't match up exactly and abstracting gets hard. But yeah, starting from these concrete examples, especially intelligent UI, which is great. It's really useful and helpful. And then once it really gets painful and you really think this gets repeated a lot, then you can start abstracting and grouping, for example, some CSS utility class. Right. That's a great point. I think Adam Wethin talks about this a lot, like on his on Fullstack Radio, his podcast. He it's cool because you can sort of get into his brain a little bit and hear the way he thinks about these things. And so I'll post a few links in the show notes to some episodes where he talks about the philosophy behind Tailwind CSS. But one thing that comes up often is he talks about how people have this fear of, wait a minute, all these utility classes in line in my HTML, it's going to be a terrible experience. And he's like, well, I mean, if you have like 15 utility classes on your nav bar, but the nav bar is the only one that has that specific set of 15 utility classes, it's fine. You don't need to abstract that. And people at first are horrified and they're like, surely I have to abstract this. But he's like, well, if that's the one place it shows up, it's abstracted in this night. You know, maybe you have a React component or, you know, an Elm module or whatever for your nav bar that abstracts that. That's fine. Just leave it there with those 15 Tailwind utilities in line. It's perfectly fine. I think Tailwind CSS land, lots of people have a similar reaction to the at apply functionality. And they ask like, when should I start using at apply and like making my own, for example, button class? And the answers are very similar. And they're all like, wait it, wait for it. Just leave it like it is and do it as late as you can. And it really, most people, I think, try to abstract too early and that applies to at apply or grouping CSS Tailwind utilities with Elm CSS. Well, great stuff. I think we've given people a lot to chew on here. And thank you again for building this really lovely tool. It's been delightful to use. I've enjoyed it quite a bit. Thank you. So, Philipp, how should people get started with the Elm Tailwind modules? I think the best way would be to, I think it depends. It depends on whether, okay, so there's two kinds of people who I guess want to use on Tailwind modules. One is the people who are using, who've been using other Tailwind and Elm things before and want to switch to this or who have only been using plain Tailwind CSS and want to switch to this. And there's one kinds of people who, for example, at work have been using Tailwind CSS before and want to switch to something with more auto completion, more type safety, maybe. And there's the other camp with people who want to try out Tailwind CSS and love Elm. And for the second crowd, I would suggest using Elm default Tailwind modules, which is the Elm package with the generated code with the default Tailwind configuration. So then you can get a feel for how Tailwind itself feels and don't have to use any JavaScript and fiddle with bundling and NPM or anything like that. You don't even have to use NPM install. You just install this package. And later you can switch to the code generator itself and write your own Tailwind config once you want to use your own colors or some custom fonts, things like that. And for everyone else who is already accustomed to Tailwind CSS and maybe has their own already has their own Tailwind configuration file, just check out the readme on GitHub. It explains how to use the command line interface tool. And if you have a really, really advanced use case, you might even use the node API. So how to get started really depends on who you are. I try to have include like everyone include people who want to get started as quickly as possible. And I want to include companies who have complicated structures with their own Tailwind configurations and their own added CSS and post CSS configurations and things like that. It's hard to like get both under the same. It's hard to do your best for both. But I guess the best starting point is always the readme and the GitHub project. Do you think that an incremental upgrade would work well for people who are already using the regular style of Tailwind with Tailwind classes in their Elm code? Using Elm HTML, you mean? Oh, good point. I guess. Aha. That's interesting. Right. So if you're using Elm HTML, you would first have to switch to Elm CSS, which you could do. But and I mean, it's a drop in replacement. So you basically change your imports to change from Elm HTML to Elm CSS because it's it's a superset of the API. Yeah, that's a good point. I think Elm CSS is quite it's quite possible to use to introduce Elm CSS incrementally. So there's like from unstyled and to unstyled. So you can go from the Elm CSS world into the normal Elm slash HTML world and the other way around. So I guess the best way for people who have lots of Elm slash HTML code would be to add the drop in replacement module by module. Right. Starting at the leaves. Exactly. Starting at the leaves. In the meantime, you'll have lots more generated code. But in the end, you hopefully have a have the normal amount of code again. Right. And you should be able to take like, you know, an Elm CSS element that is using like the class syntax to do tailwind classes and then take that one HTML element that's in Elm CSS and change that to use Elm Tailwind syntax. Right. Yes. Elm Tailwind modules. Yeah. So incremental upgrades would probably be the way to go. You could probably have some kind of tool maybe using Elm review or Elm HTML to Elm CSS.com. Right. To help with that. I did think about the possibility of having like a transformer that would allow you to turn class names as an Elm review rule into tailwind using the parsing logic that I have. The tricky thing is if you have a mixture of classes that don't represent classes that don't represent tailwind and classes that do represent tailwind, then it can get a little bit messy because you don't know how to separate them. But that's maybe a topic for another day. But great. So try out the default package, which is published on the Package Repository, Elm default tailwind modules. Find the link in the show notes. Check out the readme. Check out HTML to Elm.com perhaps. Give that a try. And, Philipp, thanks again for coming on the show. Thanks again for having me. It was lots of fun. Likewise. And Jeroen, I'll talk to you next time. See you next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.0, "text": " Hello Jeroen! Hello Dylan! And once again today we've got a special guest with us here to talk about a very cool library called Elm Tailwind Modules.", "tokens": [50364, 2425, 508, 2032, 268, 0, 2425, 28160, 0, 400, 1564, 797, 965, 321, 600, 658, 257, 2121, 8341, 365, 505, 510, 281, 751, 466, 257, 588, 1627, 6405, 1219, 2699, 76, 46074, 12199, 6583, 3473, 13, 50914, 50914, 21144, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 2421, 11, 3231, 337, 1419, 385, 13, 467, 311, 527, 6834, 13, 51114, 51114, 1144, 291, 528, 281, 976, 505, 257, 5353, 12897, 11, 291, 458, 11, 437, 291, 360, 11, 689, 291, 589, 30, 5115, 505, 257, 707, 857, 466, 1803, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.17885671916760895, "compression_ratio": 1.4893617021276595, "no_caption_prob": 0.18106281757354736}, {"id": 1, "seek": 0, "start": 11.0, "end": 15.0, "text": " Philip, thank you so much for joining us. Hi, thanks for having me. It's our pleasure.", "tokens": [50364, 2425, 508, 2032, 268, 0, 2425, 28160, 0, 400, 1564, 797, 965, 321, 600, 658, 257, 2121, 8341, 365, 505, 510, 281, 751, 466, 257, 588, 1627, 6405, 1219, 2699, 76, 46074, 12199, 6583, 3473, 13, 50914, 50914, 21144, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 2421, 11, 3231, 337, 1419, 385, 13, 467, 311, 527, 6834, 13, 51114, 51114, 1144, 291, 528, 281, 976, 505, 257, 5353, 12897, 11, 291, 458, 11, 437, 291, 360, 11, 689, 291, 589, 30, 5115, 505, 257, 707, 857, 466, 1803, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.17885671916760895, "compression_ratio": 1.4893617021276595, "no_caption_prob": 0.18106281757354736}, {"id": 2, "seek": 0, "start": 15.0, "end": 22.0, "text": " Do you want to give us a brief intro, you know, what you do, where you work? Tell us a little bit about yourself.", "tokens": [50364, 2425, 508, 2032, 268, 0, 2425, 28160, 0, 400, 1564, 797, 965, 321, 600, 658, 257, 2121, 8341, 365, 505, 510, 281, 751, 466, 257, 588, 1627, 6405, 1219, 2699, 76, 46074, 12199, 6583, 3473, 13, 50914, 50914, 21144, 11, 1309, 291, 370, 709, 337, 5549, 505, 13, 2421, 11, 3231, 337, 1419, 385, 13, 467, 311, 527, 6834, 13, 51114, 51114, 1144, 291, 528, 281, 976, 505, 257, 5353, 12897, 11, 291, 458, 11, 437, 291, 360, 11, 689, 291, 589, 30, 5115, 505, 257, 707, 857, 466, 1803, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.17885671916760895, "compression_ratio": 1.4893617021276595, "no_caption_prob": 0.18106281757354736}, {"id": 3, "seek": 2200, "start": 22.0, "end": 36.0, "text": " Okay, so up until recently, I guess, I've been a student in Karlsruhe at KIT. But I started working for Fission last year in July.", "tokens": [50364, 1033, 11, 370, 493, 1826, 3938, 11, 286, 2041, 11, 286, 600, 668, 257, 3107, 294, 20405, 82, 894, 675, 412, 591, 3927, 13, 583, 286, 1409, 1364, 337, 479, 3106, 1036, 1064, 294, 7370, 13, 51064, 51064, 400, 1338, 11, 1670, 550, 286, 600, 668, 27931, 8779, 293, 2891, 341, 1064, 11, 2440, 341, 1064, 11, 286, 600, 1813, 257, 731, 586, 644, 565, 457, 2321, 1577, 565, 10738, 295, 479, 3106, 13, 51614, 51614, 400, 456, 286, 478, 3579, 2699, 76, 337, 439, 295, 264, 4965, 5821, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.12026227788722262, "compression_ratio": 1.5491071428571428, "no_caption_prob": 0.0009522975306026638}, {"id": 4, "seek": 2200, "start": 36.0, "end": 47.0, "text": " And yeah, since then I've been freelancing and starting this year, early this year, I've become a well now part time but soon full time employee of Fission.", "tokens": [50364, 1033, 11, 370, 493, 1826, 3938, 11, 286, 2041, 11, 286, 600, 668, 257, 3107, 294, 20405, 82, 894, 675, 412, 591, 3927, 13, 583, 286, 1409, 1364, 337, 479, 3106, 1036, 1064, 294, 7370, 13, 51064, 51064, 400, 1338, 11, 1670, 550, 286, 600, 668, 27931, 8779, 293, 2891, 341, 1064, 11, 2440, 341, 1064, 11, 286, 600, 1813, 257, 731, 586, 644, 565, 457, 2321, 1577, 565, 10738, 295, 479, 3106, 13, 51614, 51614, 400, 456, 286, 478, 3579, 2699, 76, 337, 439, 295, 264, 4965, 5821, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.12026227788722262, "compression_ratio": 1.5491071428571428, "no_caption_prob": 0.0009522975306026638}, {"id": 5, "seek": 2200, "start": 47.0, "end": 51.0, "text": " And there I'm writing Elm for all of the core applications.", "tokens": [50364, 1033, 11, 370, 493, 1826, 3938, 11, 286, 2041, 11, 286, 600, 668, 257, 3107, 294, 20405, 82, 894, 675, 412, 591, 3927, 13, 583, 286, 1409, 1364, 337, 479, 3106, 1036, 1064, 294, 7370, 13, 51064, 51064, 400, 1338, 11, 1670, 550, 286, 600, 668, 27931, 8779, 293, 2891, 341, 1064, 11, 2440, 341, 1064, 11, 286, 600, 1813, 257, 731, 586, 644, 565, 457, 2321, 1577, 565, 10738, 295, 479, 3106, 13, 51614, 51614, 400, 456, 286, 478, 3579, 2699, 76, 337, 439, 295, 264, 4965, 5821, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.12026227788722262, "compression_ratio": 1.5491071428571428, "no_caption_prob": 0.0009522975306026638}, {"id": 6, "seek": 5100, "start": 51.0, "end": 63.0, "text": " Awesome. And you were you doing some research at the university as well? You were you were pretty, pretty in on a lot of like the deep dive category theory stuff and a lot of those things when when I last talked to you.", "tokens": [50364, 10391, 13, 400, 291, 645, 291, 884, 512, 2132, 412, 264, 5454, 382, 731, 30, 509, 645, 291, 645, 1238, 11, 1238, 294, 322, 257, 688, 295, 411, 264, 2452, 9192, 7719, 5261, 1507, 293, 257, 688, 295, 729, 721, 562, 562, 286, 1036, 2825, 281, 291, 13, 50964, 50964, 865, 13, 407, 731, 11, 881, 295, 264, 2452, 9192, 7719, 1507, 307, 490, 7315, 293, 1338, 11, 3195, 295, 4598, 365, 1214, 365, 452, 3708, 293, 286, 2041, 2698, 2979, 257, 707, 857, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1243668245465568, "compression_ratio": 1.7276785714285714, "no_caption_prob": 0.00014644220937043428}, {"id": 7, "seek": 5100, "start": 63.0, "end": 77.0, "text": " Yeah. So well, most of the deep dive category stuff is from conversations and yeah, lots of thoughts with together with my brother and I guess self study a little bit.", "tokens": [50364, 10391, 13, 400, 291, 645, 291, 884, 512, 2132, 412, 264, 5454, 382, 731, 30, 509, 645, 291, 645, 1238, 11, 1238, 294, 322, 257, 688, 295, 411, 264, 2452, 9192, 7719, 5261, 1507, 293, 257, 688, 295, 729, 721, 562, 562, 286, 1036, 2825, 281, 291, 13, 50964, 50964, 865, 13, 407, 731, 11, 881, 295, 264, 2452, 9192, 7719, 1507, 307, 490, 7315, 293, 1338, 11, 3195, 295, 4598, 365, 1214, 365, 452, 3708, 293, 286, 2041, 2698, 2979, 257, 707, 857, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1243668245465568, "compression_ratio": 1.7276785714285714, "no_caption_prob": 0.00014644220937043428}, {"id": 8, "seek": 7700, "start": 77.0, "end": 90.0, "text": " So that's where I guess I picked up that. And we were trying stuff. We also tried to start up something but that was really early and and other than that, I was also doing some research in university like officially.", "tokens": [50364, 407, 300, 311, 689, 286, 2041, 286, 6183, 493, 300, 13, 400, 321, 645, 1382, 1507, 13, 492, 611, 3031, 281, 722, 493, 746, 457, 300, 390, 534, 2440, 293, 293, 661, 813, 300, 11, 286, 390, 611, 884, 512, 2132, 294, 5454, 411, 12053, 13, 51014, 51014, 400, 300, 390, 11, 337, 1365, 11, 452, 25947, 311, 22288, 322, 5407, 11, 597, 1310, 512, 295, 291, 458, 13, 865, 13, 51314, 51314, 865, 13, 407, 300, 390, 746, 1646, 286, 600, 668, 884, 294, 2699, 76, 11, 597, 390, 406, 3879, 18240, 420, 1252, 1716, 949, 13, 51664, 51664, 663, 311, 3476, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14733220912792064, "compression_ratio": 1.6329588014981273, "no_caption_prob": 3.535101859597489e-05}, {"id": 9, "seek": 7700, "start": 90.0, "end": 96.0, "text": " And that was, for example, my bachelor's thesis on reduce, which maybe some of you know. Yeah.", "tokens": [50364, 407, 300, 311, 689, 286, 2041, 286, 6183, 493, 300, 13, 400, 321, 645, 1382, 1507, 13, 492, 611, 3031, 281, 722, 493, 746, 457, 300, 390, 534, 2440, 293, 293, 661, 813, 300, 11, 286, 390, 611, 884, 512, 2132, 294, 5454, 411, 12053, 13, 51014, 51014, 400, 300, 390, 11, 337, 1365, 11, 452, 25947, 311, 22288, 322, 5407, 11, 597, 1310, 512, 295, 291, 458, 13, 865, 13, 51314, 51314, 865, 13, 407, 300, 390, 746, 1646, 286, 600, 668, 884, 294, 2699, 76, 11, 597, 390, 406, 3879, 18240, 420, 1252, 1716, 949, 13, 51664, 51664, 663, 311, 3476, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14733220912792064, "compression_ratio": 1.6329588014981273, "no_caption_prob": 3.535101859597489e-05}, {"id": 10, "seek": 7700, "start": 96.0, "end": 103.0, "text": " Yeah. So that was something else I've been doing in Elm, which was not totally hobby or side project before.", "tokens": [50364, 407, 300, 311, 689, 286, 2041, 286, 6183, 493, 300, 13, 400, 321, 645, 1382, 1507, 13, 492, 611, 3031, 281, 722, 493, 746, 457, 300, 390, 534, 2440, 293, 293, 661, 813, 300, 11, 286, 390, 611, 884, 512, 2132, 294, 5454, 411, 12053, 13, 51014, 51014, 400, 300, 390, 11, 337, 1365, 11, 452, 25947, 311, 22288, 322, 5407, 11, 597, 1310, 512, 295, 291, 458, 13, 865, 13, 51314, 51314, 865, 13, 407, 300, 390, 746, 1646, 286, 600, 668, 884, 294, 2699, 76, 11, 597, 390, 406, 3879, 18240, 420, 1252, 1716, 949, 13, 51664, 51664, 663, 311, 3476, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14733220912792064, "compression_ratio": 1.6329588014981273, "no_caption_prob": 3.535101859597489e-05}, {"id": 11, "seek": 7700, "start": 103.0, "end": 104.0, "text": " That's awesome.", "tokens": [50364, 407, 300, 311, 689, 286, 2041, 286, 6183, 493, 300, 13, 400, 321, 645, 1382, 1507, 13, 492, 611, 3031, 281, 722, 493, 746, 457, 300, 390, 534, 2440, 293, 293, 661, 813, 300, 11, 286, 390, 611, 884, 512, 2132, 294, 5454, 411, 12053, 13, 51014, 51014, 400, 300, 390, 11, 337, 1365, 11, 452, 25947, 311, 22288, 322, 5407, 11, 597, 1310, 512, 295, 291, 458, 13, 865, 13, 51314, 51314, 865, 13, 407, 300, 390, 746, 1646, 286, 600, 668, 884, 294, 2699, 76, 11, 597, 390, 406, 3879, 18240, 420, 1252, 1716, 949, 13, 51664, 51664, 663, 311, 3476, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14733220912792064, "compression_ratio": 1.6329588014981273, "no_caption_prob": 3.535101859597489e-05}, {"id": 12, "seek": 10400, "start": 104.0, "end": 116.0, "text": " Yeah. The topic that we invited you for is Elm Tailwind Modules. So maybe give us a brief intro to what Tailwind is and then what Elm Tailwind Modules is.", "tokens": [50364, 865, 13, 440, 4829, 300, 321, 9185, 291, 337, 307, 2699, 76, 46074, 12199, 6583, 3473, 13, 407, 1310, 976, 505, 257, 5353, 12897, 281, 437, 46074, 12199, 307, 293, 550, 437, 2699, 76, 46074, 12199, 6583, 3473, 307, 13, 50964, 50964, 865, 13, 407, 572, 472, 575, 534, 8932, 484, 577, 281, 360, 27944, 294, 264, 3670, 965, 1939, 13, 286, 2041, 309, 3417, 411, 309, 3417, 411, 300, 412, 1935, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.10962327734216468, "compression_ratio": 1.5604395604395604, "no_caption_prob": 8.348897245014086e-05}, {"id": 13, "seek": 10400, "start": 116.0, "end": 126.0, "text": " Yeah. So no one has really figured out how to do styling in the web today yet. I guess it feels like it feels like that at least.", "tokens": [50364, 865, 13, 440, 4829, 300, 321, 9185, 291, 337, 307, 2699, 76, 46074, 12199, 6583, 3473, 13, 407, 1310, 976, 505, 257, 5353, 12897, 281, 437, 46074, 12199, 307, 293, 550, 437, 2699, 76, 46074, 12199, 6583, 3473, 307, 13, 50964, 50964, 865, 13, 407, 572, 472, 575, 534, 8932, 484, 577, 281, 360, 27944, 294, 264, 3670, 965, 1939, 13, 286, 2041, 309, 3417, 411, 309, 3417, 411, 300, 412, 1935, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.10962327734216468, "compression_ratio": 1.5604395604395604, "no_caption_prob": 8.348897245014086e-05}, {"id": 14, "seek": 12600, "start": 126.0, "end": 147.0, "text": " So yeah, Tailwind is this utility first CSS framework, which is how they describe themselves, which means that instead of trying to structure your CSS using lots of class selectors and complicated selectors, you simply use small snippets of reusable CSS, I guess, in your HTML.", "tokens": [50364, 407, 1338, 11, 46074, 12199, 307, 341, 14877, 700, 24387, 8388, 11, 597, 307, 577, 436, 6786, 2969, 11, 597, 1355, 300, 2602, 295, 1382, 281, 3877, 428, 24387, 1228, 3195, 295, 1508, 3048, 830, 293, 6179, 3048, 830, 11, 291, 2935, 764, 1359, 35623, 1385, 295, 41807, 24387, 11, 286, 2041, 11, 294, 428, 17995, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.06536198834903904, "compression_ratio": 1.4656084656084656, "no_caption_prob": 1.1478343367343768e-05}, {"id": 15, "seek": 14700, "start": 147.0, "end": 161.0, "text": " So you have lots more lots more changes in your HTML than you have in your CSS. Your CSS then gets only generated by like a configuration file, a Tailwind configuration file with all of the colors and spacings you use.", "tokens": [50364, 407, 291, 362, 3195, 544, 3195, 544, 2962, 294, 428, 17995, 813, 291, 362, 294, 428, 24387, 13, 2260, 24387, 550, 2170, 787, 10833, 538, 411, 257, 11694, 3991, 11, 257, 46074, 12199, 11694, 3991, 365, 439, 295, 264, 4577, 293, 39404, 1109, 291, 764, 13, 51064, 51064, 400, 550, 291, 917, 493, 1228, 787, 5359, 562, 3579, 17995, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.0759056955575943, "compression_ratio": 1.5953757225433527, "no_caption_prob": 3.2697353162802756e-05}, {"id": 16, "seek": 14700, "start": 161.0, "end": 166.0, "text": " And then you end up using only classes when writing HTML.", "tokens": [50364, 407, 291, 362, 3195, 544, 3195, 544, 2962, 294, 428, 17995, 813, 291, 362, 294, 428, 24387, 13, 2260, 24387, 550, 2170, 787, 10833, 538, 411, 257, 11694, 3991, 11, 257, 46074, 12199, 11694, 3991, 365, 439, 295, 264, 4577, 293, 39404, 1109, 291, 764, 13, 51064, 51064, 400, 550, 291, 917, 493, 1228, 787, 5359, 562, 3579, 17995, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.0759056955575943, "compression_ratio": 1.5953757225433527, "no_caption_prob": 3.2697353162802756e-05}, {"id": 17, "seek": 16600, "start": 166.0, "end": 183.0, "text": " Yeah. So it's it looks like inline CSS, but instead of applying specific properties like color is red, you say you apply class saying red or exactly font red, background red, stuff like that.", "tokens": [50364, 865, 13, 407, 309, 311, 309, 1542, 411, 294, 1889, 24387, 11, 457, 2602, 295, 9275, 2685, 7221, 411, 2017, 307, 2182, 11, 291, 584, 291, 3079, 1508, 1566, 2182, 420, 2293, 10703, 2182, 11, 3678, 2182, 11, 1507, 411, 300, 13, 51214, 51214, 865, 11, 309, 311, 1920, 411, 257, 24387, 1508, 2361, 9362, 13, 467, 311, 411, 291, 434, 5141, 9362, 6828, 281, 3758, 17995, 4959, 538, 9275, 5359, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12523946009184184, "compression_ratio": 1.5165876777251184, "no_caption_prob": 1.3845679859514348e-05}, {"id": 18, "seek": 16600, "start": 183.0, "end": 194.0, "text": " Yeah, it's almost like a CSS class based API. It's like you're calling API functions to style HTML elements by applying classes.", "tokens": [50364, 865, 13, 407, 309, 311, 309, 1542, 411, 294, 1889, 24387, 11, 457, 2602, 295, 9275, 2685, 7221, 411, 2017, 307, 2182, 11, 291, 584, 291, 3079, 1508, 1566, 2182, 420, 2293, 10703, 2182, 11, 3678, 2182, 11, 1507, 411, 300, 13, 51214, 51214, 865, 11, 309, 311, 1920, 411, 257, 24387, 1508, 2361, 9362, 13, 467, 311, 411, 291, 434, 5141, 9362, 6828, 281, 3758, 17995, 4959, 538, 9275, 5359, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12523946009184184, "compression_ratio": 1.5165876777251184, "no_caption_prob": 1.3845679859514348e-05}, {"id": 19, "seek": 19400, "start": 194.0, "end": 214.0, "text": " Yeah. And at the beginning, you think, oh, this is so limiting. I mean, how would you, for example, use another color? But most of the time by limiting your options by only having certain spacings available, like a set of maybe 16 different spacings, you end up having really, how's it called?", "tokens": [50364, 865, 13, 400, 412, 264, 2863, 11, 291, 519, 11, 1954, 11, 341, 307, 370, 22083, 13, 286, 914, 11, 577, 576, 291, 11, 337, 1365, 11, 764, 1071, 2017, 30, 583, 881, 295, 264, 565, 538, 22083, 428, 3956, 538, 787, 1419, 1629, 39404, 1109, 2435, 11, 411, 257, 992, 295, 1310, 3165, 819, 39404, 1109, 11, 291, 917, 493, 1419, 534, 11, 577, 311, 309, 1219, 30, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.1079801859920972, "compression_ratio": 1.47979797979798, "no_caption_prob": 2.2125006580608897e-05}, {"id": 20, "seek": 21400, "start": 214.0, "end": 234.0, "text": " Consistent. Yeah, consistent user interfaces with consistent spacings and lots of different spacings. Yeah, I think that's that's one of the features that makes Tailwind a really nice experience to work with and allows you to create really nice experiences on the web, because it kind of has this built in concept of a palette.", "tokens": [50364, 6923, 25367, 13, 865, 11, 8398, 4195, 28416, 365, 8398, 39404, 1109, 293, 3195, 295, 819, 39404, 1109, 13, 865, 11, 286, 519, 300, 311, 300, 311, 472, 295, 264, 4122, 300, 1669, 46074, 12199, 257, 534, 1481, 1752, 281, 589, 365, 293, 4045, 291, 281, 1884, 534, 1481, 5235, 322, 264, 3670, 11, 570, 309, 733, 295, 575, 341, 3094, 294, 3410, 295, 257, 15851, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.11946761440223372, "compression_ratio": 1.694300518134715, "no_caption_prob": 5.307371975504793e-05}, {"id": 21, "seek": 23400, "start": 234.0, "end": 249.0, "text": " So you have like a palette of colors. So you have like, you know, BG red 500 would be like the built in default color palette they give you. But the intended way to use it is really to define your own palette.", "tokens": [50364, 407, 291, 362, 411, 257, 15851, 295, 4577, 13, 407, 291, 362, 411, 11, 291, 458, 11, 363, 38, 2182, 5923, 576, 312, 411, 264, 3094, 294, 7576, 2017, 15851, 436, 976, 291, 13, 583, 264, 10226, 636, 281, 764, 309, 307, 534, 281, 6964, 428, 1065, 15851, 13, 51114, 51114], "temperature": 0.0, "avg_logprob": -0.07690279438810528, "compression_ratio": 1.4822695035460993, "no_caption_prob": 9.609717380953953e-05}, {"id": 22, "seek": 24900, "start": 249.0, "end": 264.0, "text": " So you have you can define a primary color or secondary or however you name them, define those colors, and then it generates these CSS classes for you to do BG primary or BG secondary or whatever your colors are called.", "tokens": [50364, 407, 291, 362, 291, 393, 6964, 257, 6194, 2017, 420, 11396, 420, 4461, 291, 1315, 552, 11, 6964, 729, 4577, 11, 293, 550, 309, 23815, 613, 24387, 5359, 337, 291, 281, 360, 363, 38, 6194, 420, 363, 38, 11396, 420, 2035, 428, 4577, 366, 1219, 13, 51114, 51114], "temperature": 0.0, "avg_logprob": -0.08147823333740234, "compression_ratio": 1.553191489361702, "no_caption_prob": 3.9441409171558917e-05}, {"id": 23, "seek": 26400, "start": 264.0, "end": 282.0, "text": " And that, you know, so it gives you this palette for, like you said, spacing for colors and for breakpoints. So you can define your palette of breakpoints and those constraints, those limited selections in the palette really make it so much easier to create nice experiences for your web design.", "tokens": [50364, 400, 300, 11, 291, 458, 11, 370, 309, 2709, 291, 341, 15851, 337, 11, 411, 291, 848, 11, 27739, 337, 4577, 293, 337, 1821, 20552, 13, 407, 291, 393, 6964, 428, 15851, 295, 1821, 20552, 293, 729, 18491, 11, 729, 5567, 47829, 294, 264, 15851, 534, 652, 309, 370, 709, 3571, 281, 1884, 1481, 5235, 337, 428, 3670, 1715, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.07431475818157196, "compression_ratio": 1.620879120879121, "no_caption_prob": 2.3552427592221648e-05}, {"id": 24, "seek": 28200, "start": 282.0, "end": 299.0, "text": " Yeah. And at the beginning, when I was starting with, or when I first looked at Tailwind CSS, I was thinking, hmm, is this how CSS is meant to be used? But after I tried, I tried a lot with my blog, and I experimented a little bit with different ways of using CSS.", "tokens": [50364, 865, 13, 400, 412, 264, 2863, 11, 562, 286, 390, 2891, 365, 11, 420, 562, 286, 700, 2956, 412, 46074, 12199, 24387, 11, 286, 390, 1953, 11, 16478, 11, 307, 341, 577, 24387, 307, 4140, 281, 312, 1143, 30, 583, 934, 286, 3031, 11, 286, 3031, 257, 688, 365, 452, 6968, 11, 293, 286, 5120, 292, 257, 707, 857, 365, 819, 2098, 295, 1228, 24387, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.1069115366254534, "compression_ratio": 1.5085714285714287, "no_caption_prob": 0.0001355136773781851}, {"id": 25, "seek": 29900, "start": 299.0, "end": 317.0, "text": " First using plain old CSS, then using LUI, then using SCSS, SAS, yeah, and finally, converging on Tailwind CSS. And I really felt like, for example, the SAS based version was hard to maintain.", "tokens": [50364, 2386, 1228, 11121, 1331, 24387, 11, 550, 1228, 441, 46324, 11, 550, 1228, 9028, 21929, 11, 33441, 11, 1338, 11, 293, 2721, 11, 9652, 3249, 322, 46074, 12199, 24387, 13, 400, 286, 534, 2762, 411, 11, 337, 1365, 11, 264, 33441, 2361, 3037, 390, 1152, 281, 6909, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.22546417896564191, "compression_ratio": 1.3426573426573427, "no_caption_prob": 0.00012930852244608104}, {"id": 26, "seek": 31700, "start": 317.0, "end": 333.0, "text": " Because if I was making a change to the layout, my blog, I ended up having to go into my CSS and change it again, and never really knowing how the CSS and the HTML are coupled together. So is the CSS selector even active anymore? I don't know.", "tokens": [50364, 1436, 498, 286, 390, 1455, 257, 1319, 281, 264, 13333, 11, 452, 6968, 11, 286, 4590, 493, 1419, 281, 352, 666, 452, 24387, 293, 1319, 309, 797, 11, 293, 1128, 534, 5276, 577, 264, 24387, 293, 264, 17995, 366, 29482, 1214, 13, 407, 307, 264, 24387, 23264, 1672, 754, 4967, 3602, 30, 286, 500, 380, 458, 13, 51164, 51164, 400, 309, 311, 534, 1152, 281, 1520, 13, 407, 411, 294, 341, 636, 11, 286, 600, 1128, 2762, 411, 264, 636, 24387, 307, 11, 286, 914, 11, 4140, 281, 312, 1143, 11, 286, 2041, 11, 390, 534, 1364, 337, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06845829578546378, "compression_ratio": 1.5887096774193548, "no_caption_prob": 3.4267959563294426e-05}, {"id": 27, "seek": 31700, "start": 333.0, "end": 344.0, "text": " And it's really hard to check. So like in this way, I've never felt like the way CSS is, I mean, meant to be used, I guess, was really working for me.", "tokens": [50364, 1436, 498, 286, 390, 1455, 257, 1319, 281, 264, 13333, 11, 452, 6968, 11, 286, 4590, 493, 1419, 281, 352, 666, 452, 24387, 293, 1319, 309, 797, 11, 293, 1128, 534, 5276, 577, 264, 24387, 293, 264, 17995, 366, 29482, 1214, 13, 407, 307, 264, 24387, 23264, 1672, 754, 4967, 3602, 30, 286, 500, 380, 458, 13, 51164, 51164, 400, 309, 311, 534, 1152, 281, 1520, 13, 407, 411, 294, 341, 636, 11, 286, 600, 1128, 2762, 411, 264, 636, 24387, 307, 11, 286, 914, 11, 4140, 281, 312, 1143, 11, 286, 2041, 11, 390, 534, 1364, 337, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06845829578546378, "compression_ratio": 1.5887096774193548, "no_caption_prob": 3.4267959563294426e-05}, {"id": 28, "seek": 34400, "start": 344.0, "end": 364.0, "text": " Right. And then you have this like layer of indirection for like the selectors that you write in your CSS style sheets using, you know, the kind of traditional way of writing CSS. And you don't know what unintended consequences are going to come from changing a CSS selector somewhere, or changing the style somewhere.", "tokens": [50364, 1779, 13, 400, 550, 291, 362, 341, 411, 4583, 295, 1016, 621, 882, 337, 411, 264, 3048, 830, 300, 291, 2464, 294, 428, 24387, 3758, 15421, 1228, 11, 291, 458, 11, 264, 733, 295, 5164, 636, 295, 3579, 24387, 13, 400, 291, 500, 380, 458, 437, 49902, 10098, 366, 516, 281, 808, 490, 4473, 257, 24387, 23264, 1672, 4079, 11, 420, 4473, 264, 3758, 4079, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.07725527627127511, "compression_ratio": 1.6391752577319587, "no_caption_prob": 9.168578253593296e-05}, {"id": 29, "seek": 36400, "start": 364.0, "end": 387.0, "text": " So you have this like, with this like utility based approach, you have this like localized reasoning benefit, where, you know, if you change the CSS classes, the Tailwind classes that are being applied to one element, you know, it's not going to have, you know, an effect on some spooky effect at a distance on some other element, which is similar to the feeling of using LMI, in a way.", "tokens": [50364, 407, 291, 362, 341, 411, 11, 365, 341, 411, 14877, 2361, 3109, 11, 291, 362, 341, 411, 44574, 21577, 5121, 11, 689, 11, 291, 458, 11, 498, 291, 1319, 264, 24387, 5359, 11, 264, 46074, 12199, 5359, 300, 366, 885, 6456, 281, 472, 4478, 11, 291, 458, 11, 309, 311, 406, 516, 281, 362, 11, 291, 458, 11, 364, 1802, 322, 512, 30510, 1802, 412, 257, 4560, 322, 512, 661, 4478, 11, 597, 307, 2531, 281, 264, 2633, 295, 1228, 441, 13808, 11, 294, 257, 636, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08289401085822137, "compression_ratio": 1.7155555555555555, "no_caption_prob": 1.450729996577138e-05}, {"id": 30, "seek": 38700, "start": 387.0, "end": 398.0, "text": " It can still have an effect on the children of the elements, right? Like the if you set the color to be red on an element, all the children of that will be red.", "tokens": [50364, 467, 393, 920, 362, 364, 1802, 322, 264, 2227, 295, 264, 4959, 11, 558, 30, 1743, 264, 498, 291, 992, 264, 2017, 281, 312, 2182, 322, 364, 4478, 11, 439, 264, 2227, 295, 300, 486, 312, 2182, 13, 50914, 50914, 407, 1338, 11, 456, 311, 24387, 32122, 13, 407, 512, 7221, 366, 9484, 16772, 11, 293, 2227, 21389, 613, 7221, 11, 457, 286, 500, 380, 458, 597, 2306, 366, 2293, 9484, 16772, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08604527139044427, "compression_ratio": 1.7037037037037037, "no_caption_prob": 6.814667722210288e-05}, {"id": 31, "seek": 38700, "start": 398.0, "end": 409.0, "text": " So yeah, there's CSS inheritance. So some properties are inheritable, and children inherit these properties, but I don't know which ones are exactly inheritable.", "tokens": [50364, 467, 393, 920, 362, 364, 1802, 322, 264, 2227, 295, 264, 4959, 11, 558, 30, 1743, 264, 498, 291, 992, 264, 2017, 281, 312, 2182, 322, 364, 4478, 11, 439, 264, 2227, 295, 300, 486, 312, 2182, 13, 50914, 50914, 407, 1338, 11, 456, 311, 24387, 32122, 13, 407, 512, 7221, 366, 9484, 16772, 11, 293, 2227, 21389, 613, 7221, 11, 457, 286, 500, 380, 458, 597, 2306, 366, 2293, 9484, 16772, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08604527139044427, "compression_ratio": 1.7037037037037037, "no_caption_prob": 6.814667722210288e-05}, {"id": 32, "seek": 40900, "start": 409.0, "end": 423.0, "text": " Okay, I didn't figure, I didn't know that. Yeah, it's true. For example, for text, and font sizes, and colors, not colors, but fonts, fonts in general, they all get inherited, but that's still true with Tailwind CSS.", "tokens": [50364, 1033, 11, 286, 994, 380, 2573, 11, 286, 994, 380, 458, 300, 13, 865, 11, 309, 311, 2074, 13, 1171, 1365, 11, 337, 2487, 11, 293, 10703, 11602, 11, 293, 4577, 11, 406, 4577, 11, 457, 35316, 11, 35316, 294, 2674, 11, 436, 439, 483, 27091, 11, 457, 300, 311, 920, 2074, 365, 46074, 12199, 24387, 13, 51064, 51064, 865, 11, 1392, 13, 400, 286, 1128, 658, 300, 16844, 295, 9484, 16772, 293, 406, 9484, 16772, 7221, 13, 2205, 281, 458, 13, 51414, 51414, 865, 11, 370, 337, 1365, 11, 4674, 5896, 307, 746, 300, 445, 307, 445, 992, 322, 411, 264, 4478, 291, 992, 309, 322, 293, 406, 322, 2227, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15757031276308256, "compression_ratio": 1.6996197718631179, "no_caption_prob": 1.568928564665839e-05}, {"id": 33, "seek": 40900, "start": 423.0, "end": 430.0, "text": " Yeah, okay. And I never got that distinction of inheritable and not inheritable properties. Good to know.", "tokens": [50364, 1033, 11, 286, 994, 380, 2573, 11, 286, 994, 380, 458, 300, 13, 865, 11, 309, 311, 2074, 13, 1171, 1365, 11, 337, 2487, 11, 293, 10703, 11602, 11, 293, 4577, 11, 406, 4577, 11, 457, 35316, 11, 35316, 294, 2674, 11, 436, 439, 483, 27091, 11, 457, 300, 311, 920, 2074, 365, 46074, 12199, 24387, 13, 51064, 51064, 865, 11, 1392, 13, 400, 286, 1128, 658, 300, 16844, 295, 9484, 16772, 293, 406, 9484, 16772, 7221, 13, 2205, 281, 458, 13, 51414, 51414, 865, 11, 370, 337, 1365, 11, 4674, 5896, 307, 746, 300, 445, 307, 445, 992, 322, 411, 264, 4478, 291, 992, 309, 322, 293, 406, 322, 2227, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15757031276308256, "compression_ratio": 1.6996197718631179, "no_caption_prob": 1.568928564665839e-05}, {"id": 34, "seek": 40900, "start": 430.0, "end": 438.0, "text": " Yeah, so for example, display flex is something that just is just set on like the element you set it on and not on children.", "tokens": [50364, 1033, 11, 286, 994, 380, 2573, 11, 286, 994, 380, 458, 300, 13, 865, 11, 309, 311, 2074, 13, 1171, 1365, 11, 337, 2487, 11, 293, 10703, 11602, 11, 293, 4577, 11, 406, 4577, 11, 457, 35316, 11, 35316, 294, 2674, 11, 436, 439, 483, 27091, 11, 457, 300, 311, 920, 2074, 365, 46074, 12199, 24387, 13, 51064, 51064, 865, 11, 1392, 13, 400, 286, 1128, 658, 300, 16844, 295, 9484, 16772, 293, 406, 9484, 16772, 7221, 13, 2205, 281, 458, 13, 51414, 51414, 865, 11, 370, 337, 1365, 11, 4674, 5896, 307, 746, 300, 445, 307, 445, 992, 322, 411, 264, 4478, 291, 992, 309, 322, 293, 406, 322, 2227, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15757031276308256, "compression_ratio": 1.6996197718631179, "no_caption_prob": 1.568928564665839e-05}, {"id": 35, "seek": 43800, "start": 438.0, "end": 455.0, "text": " Right. And if you apply padding, you know, if you say padding, you know, p2, or px2 for padding horizontal to, if you apply that Tailwind class, it's not going to change the padding for any of the child elements, it's just the parent element that's going to have that padding applied.", "tokens": [50364, 1779, 13, 400, 498, 291, 3079, 39562, 11, 291, 458, 11, 498, 291, 584, 39562, 11, 291, 458, 11, 280, 17, 11, 420, 280, 87, 17, 337, 39562, 12750, 281, 11, 498, 291, 3079, 300, 46074, 12199, 1508, 11, 309, 311, 406, 516, 281, 1319, 264, 39562, 337, 604, 295, 264, 1440, 4959, 11, 309, 311, 445, 264, 2596, 4478, 300, 311, 516, 281, 362, 300, 39562, 6456, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.11032873963656491, "compression_ratio": 1.7212121212121212, "no_caption_prob": 7.36817455617711e-05}, {"id": 36, "seek": 45500, "start": 455.0, "end": 475.0, "text": " So you can think locally about a lot of those utility classes. But you know, it's, it's different than if you, you know, go in and change something in your CSS style sheet. And you say you change the padding on a particular type of element, a particular type of selector, you don't know what that's going to affect.", "tokens": [50364, 407, 291, 393, 519, 16143, 466, 257, 688, 295, 729, 14877, 5359, 13, 583, 291, 458, 11, 309, 311, 11, 309, 311, 819, 813, 498, 291, 11, 291, 458, 11, 352, 294, 293, 1319, 746, 294, 428, 24387, 3758, 8193, 13, 400, 291, 584, 291, 1319, 264, 39562, 322, 257, 1729, 2010, 295, 4478, 11, 257, 1729, 2010, 295, 23264, 1672, 11, 291, 500, 380, 458, 437, 300, 311, 516, 281, 3345, 13, 51364, 51364, 583, 562, 291, 584, 11, 291, 458, 11, 280, 87, 17, 11, 291, 458, 11, 309, 311, 516, 281, 3079, 281, 264, 551, 291, 434, 1566, 300, 17995, 6162, 300, 291, 434, 9275, 309, 281, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0606958472210428, "compression_ratio": 1.8097165991902835, "no_caption_prob": 2.0784988009836525e-05}, {"id": 37, "seek": 45500, "start": 475.0, "end": 482.0, "text": " But when you say, you know, px2, you know, it's going to apply to the thing you're saying that HTML tag that you're applying it to.", "tokens": [50364, 407, 291, 393, 519, 16143, 466, 257, 688, 295, 729, 14877, 5359, 13, 583, 291, 458, 11, 309, 311, 11, 309, 311, 819, 813, 498, 291, 11, 291, 458, 11, 352, 294, 293, 1319, 746, 294, 428, 24387, 3758, 8193, 13, 400, 291, 584, 291, 1319, 264, 39562, 322, 257, 1729, 2010, 295, 4478, 11, 257, 1729, 2010, 295, 23264, 1672, 11, 291, 500, 380, 458, 437, 300, 311, 516, 281, 3345, 13, 51364, 51364, 583, 562, 291, 584, 11, 291, 458, 11, 280, 87, 17, 11, 291, 458, 11, 309, 311, 516, 281, 3079, 281, 264, 551, 291, 434, 1566, 300, 17995, 6162, 300, 291, 434, 9275, 309, 281, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0606958472210428, "compression_ratio": 1.8097165991902835, "no_caption_prob": 2.0784988009836525e-05}, {"id": 38, "seek": 48200, "start": 482.0, "end": 499.0, "text": " Yes, exactly. And if you, for example, had this more complicated selector, which actually selected something in your HTML, and you had another place, you were thinking of changing the structure of your HTML, you end up looking into your CSS and wondering, can I just change the selector?", "tokens": [50364, 1079, 11, 2293, 13, 400, 498, 291, 11, 337, 1365, 11, 632, 341, 544, 6179, 23264, 1672, 11, 597, 767, 8209, 746, 294, 428, 17995, 11, 293, 291, 632, 1071, 1081, 11, 291, 645, 1953, 295, 4473, 264, 3877, 295, 428, 17995, 11, 291, 917, 493, 1237, 666, 428, 24387, 293, 6359, 11, 393, 286, 445, 1319, 264, 23264, 1672, 30, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.06410303115844726, "compression_ratio": 1.53475935828877, "no_caption_prob": 1.147864713857416e-05}, {"id": 39, "seek": 49900, "start": 499.0, "end": 516.0, "text": " But changing the selector is so dangerous, or at least it feels like that. And you end up copying your whole definition and changing the selector then. And so you end up with duplicate CSS. And to me, that feels a lot like the symptoms of premature optimization, I'd say.", "tokens": [50364, 583, 4473, 264, 23264, 1672, 307, 370, 5795, 11, 420, 412, 1935, 309, 3417, 411, 300, 13, 400, 291, 917, 493, 27976, 428, 1379, 7123, 293, 4473, 264, 23264, 1672, 550, 13, 400, 370, 291, 917, 493, 365, 23976, 24387, 13, 400, 281, 385, 11, 300, 3417, 257, 688, 411, 264, 8332, 295, 34877, 19618, 11, 286, 1116, 584, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.06523490697145462, "compression_ratio": 1.5664739884393064, "no_caption_prob": 5.738528852816671e-05}, {"id": 40, "seek": 51600, "start": 516.0, "end": 531.0, "text": " So you optimize, not optimization, but abstraction, premature abstract. So you extracted something, but ended up feeling like you needed to tweak it a little bit, and then you duplicate it. And so you defeated the purpose of abstracting the first place.", "tokens": [50364, 407, 291, 19719, 11, 406, 19618, 11, 457, 37765, 11, 34877, 12649, 13, 407, 291, 34086, 746, 11, 457, 4590, 493, 2633, 411, 291, 2978, 281, 29879, 309, 257, 707, 857, 11, 293, 550, 291, 23976, 309, 13, 400, 370, 291, 15563, 264, 4334, 295, 12649, 278, 264, 700, 1081, 13, 51114, 51114], "temperature": 0.0, "avg_logprob": -0.08466854095458984, "compression_ratio": 1.6012658227848102, "no_caption_prob": 0.0001398159802192822}, {"id": 41, "seek": 53100, "start": 531.0, "end": 549.0, "text": " Yeah, and sometimes these like CSS selector abstractions can be very awkward to think about, you know, it's like, if something has this CSS class, and then it's the immediate child of that, which is a span, or, you know, whatever, then it's going to have the styling applied, right?", "tokens": [50364, 865, 11, 293, 2171, 613, 411, 24387, 23264, 1672, 12649, 626, 393, 312, 588, 11411, 281, 519, 466, 11, 291, 458, 11, 309, 311, 411, 11, 498, 746, 575, 341, 24387, 1508, 11, 293, 550, 309, 311, 264, 11629, 1440, 295, 300, 11, 597, 307, 257, 16174, 11, 420, 11, 291, 458, 11, 2035, 11, 550, 309, 311, 516, 281, 362, 264, 27944, 6456, 11, 558, 30, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.05949219179825044, "compression_ratio": 1.540983606557377, "no_caption_prob": 0.00010719987767515704}, {"id": 42, "seek": 54900, "start": 549.0, "end": 565.0, "text": " So you're trying to figure out why is this styling not applied. And the abstraction is, you know, you can easily end up just applying a bunch of these rules that don't have a clean abstraction. And then you're stuck with them, because you don't know what you're going to break if you change it in the future.", "tokens": [50364, 407, 291, 434, 1382, 281, 2573, 484, 983, 307, 341, 27944, 406, 6456, 13, 400, 264, 37765, 307, 11, 291, 458, 11, 291, 393, 3612, 917, 493, 445, 9275, 257, 3840, 295, 613, 4474, 300, 500, 380, 362, 257, 2541, 37765, 13, 400, 550, 291, 434, 5541, 365, 552, 11, 570, 291, 500, 380, 458, 437, 291, 434, 516, 281, 1821, 498, 291, 1319, 309, 294, 264, 2027, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.03971103119523558, "compression_ratio": 1.5876288659793814, "no_caption_prob": 5.307234823703766e-05}, {"id": 43, "seek": 56500, "start": 565.0, "end": 590.0, "text": " Whereas if you're using utility classes, you're just sort of like, the padding seems off on this element, I'm just going to remove this utility class here. And you know, it's not going to break anything else. And because it's not applying this abstraction where anything that follows this structure where it has this class, and then it has this following CSS selector within that is going to get this styling applied.", "tokens": [50364, 13813, 498, 291, 434, 1228, 14877, 5359, 11, 291, 434, 445, 1333, 295, 411, 11, 264, 39562, 2544, 766, 322, 341, 4478, 11, 286, 478, 445, 516, 281, 4159, 341, 14877, 1508, 510, 13, 400, 291, 458, 11, 309, 311, 406, 516, 281, 1821, 1340, 1646, 13, 400, 570, 309, 311, 406, 9275, 341, 37765, 689, 1340, 300, 10002, 341, 3877, 689, 309, 575, 341, 1508, 11, 293, 550, 309, 575, 341, 3480, 24387, 23264, 1672, 1951, 300, 307, 516, 281, 483, 341, 27944, 6456, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07374367184109158, "compression_ratio": 1.8051948051948052, "no_caption_prob": 1.6442347259726375e-05}, {"id": 44, "seek": 59000, "start": 590.0, "end": 607.0, "text": " And I also think most or a lot of that has to do with I think there was this concept of cohesion. And I forgot this coupling, coupling, I think, yeah. And so if two things are tightly coupled, they should be in a place close to each other.", "tokens": [50364, 400, 286, 611, 519, 881, 420, 257, 688, 295, 300, 575, 281, 360, 365, 286, 519, 456, 390, 341, 3410, 295, 598, 38571, 13, 400, 286, 5298, 341, 37447, 11, 37447, 11, 286, 519, 11, 1338, 13, 400, 370, 498, 732, 721, 366, 21952, 29482, 11, 436, 820, 312, 294, 257, 1081, 1998, 281, 1184, 661, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.07185239479190013, "compression_ratio": 1.551948051948052, "no_caption_prob": 6.204917735885829e-05}, {"id": 45, "seek": 60700, "start": 607.0, "end": 622.0, "text": " But if you end up having like CSS in a totally different file than HTML, it becomes difficult. It's easier to just delete both, I guess, if you have them in a similar place, like it is when you use CSS utility class.", "tokens": [50364, 583, 498, 291, 917, 493, 1419, 411, 24387, 294, 257, 3879, 819, 3991, 813, 17995, 11, 309, 3643, 2252, 13, 467, 311, 3571, 281, 445, 12097, 1293, 11, 286, 2041, 11, 498, 291, 362, 552, 294, 257, 2531, 1081, 11, 411, 309, 307, 562, 291, 764, 24387, 14877, 1508, 13, 51114, 51114], "temperature": 0.0, "avg_logprob": -0.05768289389433684, "compression_ratio": 1.3846153846153846, "no_caption_prob": 3.1201499950839207e-05}, {"id": 46, "seek": 62200, "start": 622.0, "end": 640.0, "text": " Yeah, I totally agree. Like separating things is not inherently good. It doesn't inherently make the code easier to reason about. If you've separated two things that are intimately connected and need to be understood together to make sense of the whole separating them actually makes it harder to understand.", "tokens": [50364, 865, 11, 286, 3879, 3986, 13, 1743, 29279, 721, 307, 406, 27993, 665, 13, 467, 1177, 380, 27993, 652, 264, 3089, 3571, 281, 1778, 466, 13, 759, 291, 600, 12005, 732, 721, 300, 366, 560, 5401, 4582, 293, 643, 281, 312, 7320, 1214, 281, 652, 2020, 295, 264, 1379, 29279, 552, 767, 1669, 309, 6081, 281, 1223, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.06204097117147138, "compression_ratio": 1.6382978723404256, "no_caption_prob": 0.00011411457671783864}, {"id": 47, "seek": 64000, "start": 640.0, "end": 658.0, "text": " So that's why you want the cohesion. And so I completely agree like utility classes give you more cohesion when compared to using CSS selectors in a style sheet. So you were writing code with Tailwind CSS, and you start applying these utility classes.", "tokens": [50364, 407, 300, 311, 983, 291, 528, 264, 598, 38571, 13, 400, 370, 286, 2584, 3986, 411, 14877, 5359, 976, 291, 544, 598, 38571, 562, 5347, 281, 1228, 24387, 3048, 830, 294, 257, 3758, 8193, 13, 407, 291, 645, 3579, 3089, 365, 46074, 12199, 24387, 11, 293, 291, 722, 9275, 613, 14877, 5359, 13, 51264, 51264, 400, 291, 434, 1953, 11, 341, 307, 1238, 1627, 13, 583, 1699, 257, 3456, 11, 309, 311, 406, 2010, 3273, 13, 708, 498, 286, 2010, 257, 46074, 12199, 1508, 42892, 30, 286, 2759, 380, 483, 257, 31958, 6713, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10123972990074936, "compression_ratio": 1.6205533596837944, "no_caption_prob": 4.9084868805948645e-05}, {"id": 48, "seek": 64000, "start": 658.0, "end": 668.0, "text": " And you're thinking, this is pretty cool. But wait a minute, it's not type safe. What if I type a Tailwind class incorrectly? I wouldn't get a compiler error.", "tokens": [50364, 407, 300, 311, 983, 291, 528, 264, 598, 38571, 13, 400, 370, 286, 2584, 3986, 411, 14877, 5359, 976, 291, 544, 598, 38571, 562, 5347, 281, 1228, 24387, 3048, 830, 294, 257, 3758, 8193, 13, 407, 291, 645, 3579, 3089, 365, 46074, 12199, 24387, 11, 293, 291, 722, 9275, 613, 14877, 5359, 13, 51264, 51264, 400, 291, 434, 1953, 11, 341, 307, 1238, 1627, 13, 583, 1699, 257, 3456, 11, 309, 311, 406, 2010, 3273, 13, 708, 498, 286, 2010, 257, 46074, 12199, 1508, 42892, 30, 286, 2759, 380, 483, 257, 31958, 6713, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10123972990074936, "compression_ratio": 1.6205533596837944, "no_caption_prob": 4.9084868805948645e-05}, {"id": 49, "seek": 66800, "start": 668.0, "end": 678.0, "text": " Exactly. So there it was writing my blog, and I haven't made the refactor yet. But so if you look code up, it's all class names inside of strings.", "tokens": [50364, 7587, 13, 407, 456, 309, 390, 3579, 452, 6968, 11, 293, 286, 2378, 380, 1027, 264, 1895, 15104, 1939, 13, 583, 370, 498, 291, 574, 3089, 493, 11, 309, 311, 439, 1508, 5288, 1854, 295, 13985, 13, 50864, 50864, 400, 291, 600, 658, 257, 1916, 295, 3259, 370, 51164, 51164, 883, 3321, 13, 51214, 51214, 24460, 466, 1507, 294, 452, 47364, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.16781591646599048, "compression_ratio": 1.3588235294117648, "no_caption_prob": 7.484147499781102e-05}, {"id": 50, "seek": 66800, "start": 678.0, "end": 684.0, "text": " And you've got a couple of weeks so", "tokens": [50364, 7587, 13, 407, 456, 309, 390, 3579, 452, 6968, 11, 293, 286, 2378, 380, 1027, 264, 1895, 15104, 1939, 13, 583, 370, 498, 291, 574, 3089, 493, 11, 309, 311, 439, 1508, 5288, 1854, 295, 13985, 13, 50864, 50864, 400, 291, 600, 658, 257, 1916, 295, 3259, 370, 51164, 51164, 883, 3321, 13, 51214, 51214, 24460, 466, 1507, 294, 452, 47364, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.16781591646599048, "compression_ratio": 1.3588235294117648, "no_caption_prob": 7.484147499781102e-05}, {"id": 51, "seek": 66800, "start": 684.0, "end": 685.0, "text": " No pressure.", "tokens": [50364, 7587, 13, 407, 456, 309, 390, 3579, 452, 6968, 11, 293, 286, 2378, 380, 1027, 264, 1895, 15104, 1939, 13, 583, 370, 498, 291, 574, 3089, 493, 11, 309, 311, 439, 1508, 5288, 1854, 295, 13985, 13, 50864, 50864, 400, 291, 600, 658, 257, 1916, 295, 3259, 370, 51164, 51164, 883, 3321, 13, 51214, 51214, 24460, 466, 1507, 294, 452, 47364, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.16781591646599048, "compression_ratio": 1.3588235294117648, "no_caption_prob": 7.484147499781102e-05}, {"id": 52, "seek": 66800, "start": 685.0, "end": 689.0, "text": " Thinking about stuff in my backlog.", "tokens": [50364, 7587, 13, 407, 456, 309, 390, 3579, 452, 6968, 11, 293, 286, 2378, 380, 1027, 264, 1895, 15104, 1939, 13, 583, 370, 498, 291, 574, 3089, 493, 11, 309, 311, 439, 1508, 5288, 1854, 295, 13985, 13, 50864, 50864, 400, 291, 600, 658, 257, 1916, 295, 3259, 370, 51164, 51164, 883, 3321, 13, 51214, 51214, 24460, 466, 1507, 294, 452, 47364, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.16781591646599048, "compression_ratio": 1.3588235294117648, "no_caption_prob": 7.484147499781102e-05}, {"id": 53, "seek": 68900, "start": 689.0, "end": 711.0, "text": " Okay, so yeah, I have these strings full of CSS classes. And what if I make a typo? So yeah, I end up wondering why does my CSS not get applied? Or what if I tweak my CSS configuration, like my Tailwind config file, and it generates different class names, and I end up changing the class names almost everywhere but forget one place.", "tokens": [50364, 1033, 11, 370, 1338, 11, 286, 362, 613, 13985, 1577, 295, 24387, 5359, 13, 400, 437, 498, 286, 652, 257, 2125, 78, 30, 407, 1338, 11, 286, 917, 493, 6359, 983, 775, 452, 24387, 406, 483, 6456, 30, 1610, 437, 498, 286, 29879, 452, 24387, 11694, 11, 411, 452, 46074, 12199, 6662, 3991, 11, 293, 309, 23815, 819, 1508, 5288, 11, 293, 286, 917, 493, 4473, 264, 1508, 5288, 1920, 5315, 457, 2870, 472, 1081, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.11041791439056396, "compression_ratio": 1.5781990521327014, "no_caption_prob": 5.828611028846353e-05}, {"id": 54, "seek": 71100, "start": 711.0, "end": 723.0, "text": " It silently fails. So this is not ideal. And there's been solutions in the Elm community. For example, I should look it up. It's Dean's project.", "tokens": [50364, 467, 40087, 18199, 13, 407, 341, 307, 406, 7157, 13, 400, 456, 311, 668, 6547, 294, 264, 2699, 76, 1768, 13, 1171, 1365, 11, 286, 820, 574, 309, 493, 13, 467, 311, 13324, 311, 1716, 13, 50964, 50964, 4713, 874, 20419, 5348, 47, 541, 34, 21929, 17356, 76, 51, 864, 12199, 30, 51114, 51114, 7587, 13, 467, 311, 257, 707, 857, 1152, 281, 1604, 1315, 11, 286, 1116, 584, 13, 583, 2086, 11, 2293, 13, 51364, 51364, 286, 445, 1401, 309, 294, 452, 4675, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.21831538168232092, "compression_ratio": 1.3478260869565217, "no_caption_prob": 0.00010889004624914378}, {"id": 55, "seek": 71100, "start": 723.0, "end": 726.0, "text": " Monty5811PoseCSSElmTailwind?", "tokens": [50364, 467, 40087, 18199, 13, 407, 341, 307, 406, 7157, 13, 400, 456, 311, 668, 6547, 294, 264, 2699, 76, 1768, 13, 1171, 1365, 11, 286, 820, 574, 309, 493, 13, 467, 311, 13324, 311, 1716, 13, 50964, 50964, 4713, 874, 20419, 5348, 47, 541, 34, 21929, 17356, 76, 51, 864, 12199, 30, 51114, 51114, 7587, 13, 467, 311, 257, 707, 857, 1152, 281, 1604, 1315, 11, 286, 1116, 584, 13, 583, 2086, 11, 2293, 13, 51364, 51364, 286, 445, 1401, 309, 294, 452, 4675, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.21831538168232092, "compression_ratio": 1.3478260869565217, "no_caption_prob": 0.00010889004624914378}, {"id": 56, "seek": 71100, "start": 726.0, "end": 731.0, "text": " Exactly. It's a little bit hard to remember name, I'd say. But yes, exactly.", "tokens": [50364, 467, 40087, 18199, 13, 407, 341, 307, 406, 7157, 13, 400, 456, 311, 668, 6547, 294, 264, 2699, 76, 1768, 13, 1171, 1365, 11, 286, 820, 574, 309, 493, 13, 467, 311, 13324, 311, 1716, 13, 50964, 50964, 4713, 874, 20419, 5348, 47, 541, 34, 21929, 17356, 76, 51, 864, 12199, 30, 51114, 51114, 7587, 13, 467, 311, 257, 707, 857, 1152, 281, 1604, 1315, 11, 286, 1116, 584, 13, 583, 2086, 11, 2293, 13, 51364, 51364, 286, 445, 1401, 309, 294, 452, 4675, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.21831538168232092, "compression_ratio": 1.3478260869565217, "no_caption_prob": 0.00010889004624914378}, {"id": 57, "seek": 71100, "start": 731.0, "end": 735.0, "text": " I just read it in my memory.", "tokens": [50364, 467, 40087, 18199, 13, 407, 341, 307, 406, 7157, 13, 400, 456, 311, 668, 6547, 294, 264, 2699, 76, 1768, 13, 1171, 1365, 11, 286, 820, 574, 309, 493, 13, 467, 311, 13324, 311, 1716, 13, 50964, 50964, 4713, 874, 20419, 5348, 47, 541, 34, 21929, 17356, 76, 51, 864, 12199, 30, 51114, 51114, 7587, 13, 467, 311, 257, 707, 857, 1152, 281, 1604, 1315, 11, 286, 1116, 584, 13, 583, 2086, 11, 2293, 13, 51364, 51364, 286, 445, 1401, 309, 294, 452, 4675, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.21831538168232092, "compression_ratio": 1.3478260869565217, "no_caption_prob": 0.00010889004624914378}, {"id": 58, "seek": 73500, "start": 735.0, "end": 745.0, "text": " Nice. Exactly. And in that project, that project solves the issue of incorrect class names appearing somewhere silently, without failing.", "tokens": [50364, 5490, 13, 7587, 13, 400, 294, 300, 1716, 11, 300, 1716, 39890, 264, 2734, 295, 18424, 1508, 5288, 19870, 4079, 40087, 11, 1553, 18223, 13, 50864, 50864, 407, 577, 775, 309, 360, 300, 30, 50964, 50964, 467, 2516, 428, 24387, 11, 1542, 412, 264, 10833, 24387, 11, 264, 24387, 10833, 538, 46074, 12199, 11, 1542, 412, 439, 264, 1508, 5288, 300, 4204, 294, 456, 11, 293, 7829, 364, 2699, 76, 7123, 11, 597, 307, 1936, 445, 364, 419, 4609, 337, 264, 2010, 1508, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08439154516566884, "compression_ratio": 1.626086956521739, "no_caption_prob": 3.426754119573161e-05}, {"id": 59, "seek": 73500, "start": 745.0, "end": 747.0, "text": " So how does it do that?", "tokens": [50364, 5490, 13, 7587, 13, 400, 294, 300, 1716, 11, 300, 1716, 39890, 264, 2734, 295, 18424, 1508, 5288, 19870, 4079, 40087, 11, 1553, 18223, 13, 50864, 50864, 407, 577, 775, 309, 360, 300, 30, 50964, 50964, 467, 2516, 428, 24387, 11, 1542, 412, 264, 10833, 24387, 11, 264, 24387, 10833, 538, 46074, 12199, 11, 1542, 412, 439, 264, 1508, 5288, 300, 4204, 294, 456, 11, 293, 7829, 364, 2699, 76, 7123, 11, 597, 307, 1936, 445, 364, 419, 4609, 337, 264, 2010, 1508, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08439154516566884, "compression_ratio": 1.626086956521739, "no_caption_prob": 3.426754119573161e-05}, {"id": 60, "seek": 73500, "start": 747.0, "end": 760.0, "text": " It takes your CSS, looks at the generated CSS, the CSS generated by Tailwind, looks at all the class names that appear in there, and creates an Elm definition, which is basically just an alias for the type class.", "tokens": [50364, 5490, 13, 7587, 13, 400, 294, 300, 1716, 11, 300, 1716, 39890, 264, 2734, 295, 18424, 1508, 5288, 19870, 4079, 40087, 11, 1553, 18223, 13, 50864, 50864, 407, 577, 775, 309, 360, 300, 30, 50964, 50964, 467, 2516, 428, 24387, 11, 1542, 412, 264, 10833, 24387, 11, 264, 24387, 10833, 538, 46074, 12199, 11, 1542, 412, 439, 264, 1508, 5288, 300, 4204, 294, 456, 11, 293, 7829, 364, 2699, 76, 7123, 11, 597, 307, 1936, 445, 364, 419, 4609, 337, 264, 2010, 1508, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08439154516566884, "compression_ratio": 1.626086956521739, "no_caption_prob": 3.426754119573161e-05}, {"id": 61, "seek": 76000, "start": 760.0, "end": 778.0, "text": " So you end up importing this generated CSS file, and if the CSS in quotation definition doesn't exist, so it's just a plain value, the Elm compiler will tell you, hey, you're referencing something that doesn't exist.", "tokens": [50364, 407, 291, 917, 493, 43866, 341, 10833, 24387, 3991, 11, 293, 498, 264, 24387, 294, 47312, 7123, 1177, 380, 2514, 11, 370, 309, 311, 445, 257, 11121, 2158, 11, 264, 2699, 76, 31958, 486, 980, 291, 11, 4177, 11, 291, 434, 40582, 746, 300, 1177, 380, 2514, 13, 51264, 51264, 407, 291, 2139, 643, 281, 48000, 794, 281, 483, 264, 10588, 1508, 1315, 11, 420, 309, 445, 1177, 380, 2514, 412, 439, 11, 293, 291, 820, 1391, 3191, 341, 7426, 13, 51714, 51714, 1079, 11, 2293, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0871805673117166, "compression_ratio": 1.6106194690265487, "no_caption_prob": 2.2472981072496623e-05}, {"id": 62, "seek": 76000, "start": 778.0, "end": 787.0, "text": " So you either need to recompile to get the updated class name, or it just doesn't exist at all, and you should probably fix this bug.", "tokens": [50364, 407, 291, 917, 493, 43866, 341, 10833, 24387, 3991, 11, 293, 498, 264, 24387, 294, 47312, 7123, 1177, 380, 2514, 11, 370, 309, 311, 445, 257, 11121, 2158, 11, 264, 2699, 76, 31958, 486, 980, 291, 11, 4177, 11, 291, 434, 40582, 746, 300, 1177, 380, 2514, 13, 51264, 51264, 407, 291, 2139, 643, 281, 48000, 794, 281, 483, 264, 10588, 1508, 1315, 11, 420, 309, 445, 1177, 380, 2514, 412, 439, 11, 293, 291, 820, 1391, 3191, 341, 7426, 13, 51714, 51714, 1079, 11, 2293, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0871805673117166, "compression_ratio": 1.6106194690265487, "no_caption_prob": 2.2472981072496623e-05}, {"id": 63, "seek": 76000, "start": 787.0, "end": 788.0, "text": " Yes, exactly.", "tokens": [50364, 407, 291, 917, 493, 43866, 341, 10833, 24387, 3991, 11, 293, 498, 264, 24387, 294, 47312, 7123, 1177, 380, 2514, 11, 370, 309, 311, 445, 257, 11121, 2158, 11, 264, 2699, 76, 31958, 486, 980, 291, 11, 4177, 11, 291, 434, 40582, 746, 300, 1177, 380, 2514, 13, 51264, 51264, 407, 291, 2139, 643, 281, 48000, 794, 281, 483, 264, 10588, 1508, 1315, 11, 420, 309, 445, 1177, 380, 2514, 412, 439, 11, 293, 291, 820, 1391, 3191, 341, 7426, 13, 51714, 51714, 1079, 11, 2293, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0871805673117166, "compression_ratio": 1.6106194690265487, "no_caption_prob": 2.2472981072496623e-05}, {"id": 64, "seek": 78800, "start": 788.0, "end": 794.0, "text": " We do a lot of work in the Elm community to not be afraid of typos. Don't hurt me.", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 65, "seek": 78800, "start": 794.0, "end": 796.0, "text": " Types without borders.", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 66, "seek": 78800, "start": 796.0, "end": 804.0, "text": " Elm is really safe. You can do so many refactoring in Elm. Oh, but what if you do typos? Oh, no.", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 67, "seek": 78800, "start": 804.0, "end": 807.0, "text": " Is the Elm community just paranoid?", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 68, "seek": 78800, "start": 807.0, "end": 810.0, "text": " Maybe. Maybe. Just maybe.", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 69, "seek": 78800, "start": 810.0, "end": 813.0, "text": " Don't we trust ourselves?", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 70, "seek": 78800, "start": 813.0, "end": 814.0, "text": " No.", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 71, "seek": 78800, "start": 814.0, "end": 815.0, "text": " I don't. Absolutely not.", "tokens": [50364, 492, 360, 257, 688, 295, 589, 294, 264, 2699, 76, 1768, 281, 406, 312, 4638, 295, 2125, 329, 13, 1468, 380, 4607, 385, 13, 50664, 50664, 5569, 5190, 1553, 16287, 13, 50764, 50764, 2699, 76, 307, 534, 3273, 13, 509, 393, 360, 370, 867, 1895, 578, 3662, 294, 2699, 76, 13, 876, 11, 457, 437, 498, 291, 360, 2125, 329, 30, 876, 11, 572, 13, 51164, 51164, 1119, 264, 2699, 76, 1768, 445, 43948, 30, 51314, 51314, 2704, 13, 2704, 13, 1449, 1310, 13, 51464, 51464, 1468, 380, 321, 3361, 4175, 30, 51614, 51614, 883, 13, 51664, 51664, 286, 500, 380, 13, 7021, 406, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10955127226103337, "compression_ratio": 1.5118483412322274, "no_caption_prob": 5.828653956996277e-05}, {"id": 72, "seek": 81500, "start": 815.0, "end": 818.0, "text": " Me neither.", "tokens": [50364, 1923, 9662, 13, 50514, 50514, 407, 437, 390, 264, 1154, 365, 4713, 874, 311, 1716, 30, 1545, 994, 380, 291, 445, 764, 300, 472, 30, 50764, 50764, 286, 630, 764, 300, 472, 13, 1042, 11, 412, 1935, 337, 589, 4077, 721, 13, 663, 311, 437, 321, 764, 412, 479, 3106, 13, 876, 11, 321, 920, 764, 412, 479, 3106, 13, 1042, 11, 293, 611, 1071, 3037, 295, 309, 11, 457, 286, 2041, 1066, 309, 2099, 13, 51414, 51414, 42811, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13358195622762045, "compression_ratio": 1.507936507936508, "no_caption_prob": 5.828561552334577e-05}, {"id": 73, "seek": 81500, "start": 818.0, "end": 823.0, "text": " So what was the problem with Monty's project? Why didn't you just use that one?", "tokens": [50364, 1923, 9662, 13, 50514, 50514, 407, 437, 390, 264, 1154, 365, 4713, 874, 311, 1716, 30, 1545, 994, 380, 291, 445, 764, 300, 472, 30, 50764, 50764, 286, 630, 764, 300, 472, 13, 1042, 11, 412, 1935, 337, 589, 4077, 721, 13, 663, 311, 437, 321, 764, 412, 479, 3106, 13, 876, 11, 321, 920, 764, 412, 479, 3106, 13, 1042, 11, 293, 611, 1071, 3037, 295, 309, 11, 457, 286, 2041, 1066, 309, 2099, 13, 51414, 51414, 42811, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13358195622762045, "compression_ratio": 1.507936507936508, "no_caption_prob": 5.828561552334577e-05}, {"id": 74, "seek": 81500, "start": 823.0, "end": 836.0, "text": " I did use that one. Well, at least for work related things. That's what we use at Fission. Oh, we still use at Fission. Well, and also another version of it, but I guess keep it short.", "tokens": [50364, 1923, 9662, 13, 50514, 50514, 407, 437, 390, 264, 1154, 365, 4713, 874, 311, 1716, 30, 1545, 994, 380, 291, 445, 764, 300, 472, 30, 50764, 50764, 286, 630, 764, 300, 472, 13, 1042, 11, 412, 1935, 337, 589, 4077, 721, 13, 663, 311, 437, 321, 764, 412, 479, 3106, 13, 876, 11, 321, 920, 764, 412, 479, 3106, 13, 1042, 11, 293, 611, 1071, 3037, 295, 309, 11, 457, 286, 2041, 1066, 309, 2099, 13, 51414, 51414, 42811, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13358195622762045, "compression_ratio": 1.507936507936508, "no_caption_prob": 5.828561552334577e-05}, {"id": 75, "seek": 81500, "start": 836.0, "end": 837.0, "text": " Details.", "tokens": [50364, 1923, 9662, 13, 50514, 50514, 407, 437, 390, 264, 1154, 365, 4713, 874, 311, 1716, 30, 1545, 994, 380, 291, 445, 764, 300, 472, 30, 50764, 50764, 286, 630, 764, 300, 472, 13, 1042, 11, 412, 1935, 337, 589, 4077, 721, 13, 663, 311, 437, 321, 764, 412, 479, 3106, 13, 876, 11, 321, 920, 764, 412, 479, 3106, 13, 1042, 11, 293, 611, 1071, 3037, 295, 309, 11, 457, 286, 2041, 1066, 309, 2099, 13, 51414, 51414, 42811, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13358195622762045, "compression_ratio": 1.507936507936508, "no_caption_prob": 5.828561552334577e-05}, {"id": 76, "seek": 83700, "start": 837.0, "end": 845.0, "text": " Details. Yeah. The thing I was noticing when using Monty's Tailwind generation project was that it created pretty big Elm files.", "tokens": [50364, 42811, 13, 865, 13, 440, 551, 286, 390, 21814, 562, 1228, 4713, 874, 311, 46074, 12199, 5125, 1716, 390, 300, 309, 2942, 1238, 955, 2699, 76, 7098, 13, 50764, 50764, 1711, 472, 935, 11, 286, 4590, 493, 365, 257, 6641, 11, 1360, 3876, 295, 3089, 2699, 76, 3991, 570, 286, 390, 1228, 439, 295, 264, 46074, 12199, 30482, 1804, 732, 33759, 294, 46074, 12199, 11, 264, 2125, 5820, 23407, 293, 264, 46074, 12199, 15682, 23407, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.09981114268302918, "compression_ratio": 1.5658536585365854, "no_caption_prob": 5.9199926909059286e-05}, {"id": 77, "seek": 83700, "start": 845.0, "end": 860.0, "text": " At one point, I ended up with a 300,000 lines of code Elm file because I was using all of the Tailwind utilities plus two plugins in Tailwind, the typography plugin and the Tailwind UI plugin.", "tokens": [50364, 42811, 13, 865, 13, 440, 551, 286, 390, 21814, 562, 1228, 4713, 874, 311, 46074, 12199, 5125, 1716, 390, 300, 309, 2942, 1238, 955, 2699, 76, 7098, 13, 50764, 50764, 1711, 472, 935, 11, 286, 4590, 493, 365, 257, 6641, 11, 1360, 3876, 295, 3089, 2699, 76, 3991, 570, 286, 390, 1228, 439, 295, 264, 46074, 12199, 30482, 1804, 732, 33759, 294, 46074, 12199, 11, 264, 2125, 5820, 23407, 293, 264, 46074, 12199, 15682, 23407, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.09981114268302918, "compression_ratio": 1.5658536585365854, "no_caption_prob": 5.9199926909059286e-05}, {"id": 78, "seek": 86000, "start": 860.0, "end": 873.0, "text": " I think I used it to stress the performance of Elm review, just by the way. It took like five seconds to parse. So it's really big. It's really big.", "tokens": [50364, 286, 519, 286, 1143, 309, 281, 4244, 264, 3389, 295, 2699, 76, 3131, 11, 445, 538, 264, 636, 13, 467, 1890, 411, 1732, 3949, 281, 48377, 13, 407, 309, 311, 534, 955, 13, 467, 311, 534, 955, 13, 51014, 51014, 7587, 13, 407, 337, 561, 567, 1062, 312, 6359, 983, 11, 46074, 12199, 4960, 257, 1333, 295, 47909, 3464, 3109, 281, 8460, 633, 4784, 11380, 295, 439, 295, 613, 819, 17840, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11339551524112099, "compression_ratio": 1.5294117647058822, "no_caption_prob": 2.1108968212502077e-05}, {"id": 79, "seek": 86000, "start": 873.0, "end": 886.0, "text": " Exactly. So for people who might be wondering why, Tailwind uses a sort of brute force approach to generate every permutation of all of these different variations.", "tokens": [50364, 286, 519, 286, 1143, 309, 281, 4244, 264, 3389, 295, 2699, 76, 3131, 11, 445, 538, 264, 636, 13, 467, 1890, 411, 1732, 3949, 281, 48377, 13, 407, 309, 311, 534, 955, 13, 467, 311, 534, 955, 13, 51014, 51014, 7587, 13, 407, 337, 561, 567, 1062, 312, 6359, 983, 11, 46074, 12199, 4960, 257, 1333, 295, 47909, 3464, 3109, 281, 8460, 633, 4784, 11380, 295, 439, 295, 613, 819, 17840, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11339551524112099, "compression_ratio": 1.5294117647058822, "no_caption_prob": 2.1108968212502077e-05}, {"id": 80, "seek": 88600, "start": 886.0, "end": 903.0, "text": " So if you have your color palette, so if you have like 20 colors and then you have your breakpoints and then you have your spacing, it's going to create for every breakpoint and for every color, it's going to create every type of padding.", "tokens": [50364, 407, 498, 291, 362, 428, 2017, 15851, 11, 370, 498, 291, 362, 411, 945, 4577, 293, 550, 291, 362, 428, 1821, 20552, 293, 550, 291, 362, 428, 27739, 11, 309, 311, 516, 281, 1884, 337, 633, 1821, 6053, 293, 337, 633, 2017, 11, 309, 311, 516, 281, 1884, 633, 2010, 295, 39562, 13, 51214, 51214, 18691, 3584, 1783, 337, 439, 295, 264, 819, 11, 420, 731, 11, 286, 2041, 291, 500, 380, 362, 39562, 337, 4577, 11, 457, 309, 311, 516, 281, 1884, 633, 363, 38, 2017, 337, 633, 1821, 6053, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10312414169311523, "compression_ratio": 2.0748663101604277, "no_caption_prob": 0.00010718982230173424}, {"id": 81, "seek": 88600, "start": 903.0, "end": 913.0, "text": " Padding X for all of the different, or well, I guess you don't have padding for colors, but it's going to create every BG color for every breakpoint.", "tokens": [50364, 407, 498, 291, 362, 428, 2017, 15851, 11, 370, 498, 291, 362, 411, 945, 4577, 293, 550, 291, 362, 428, 1821, 20552, 293, 550, 291, 362, 428, 27739, 11, 309, 311, 516, 281, 1884, 337, 633, 1821, 6053, 293, 337, 633, 2017, 11, 309, 311, 516, 281, 1884, 633, 2010, 295, 39562, 13, 51214, 51214, 18691, 3584, 1783, 337, 439, 295, 264, 819, 11, 420, 731, 11, 286, 2041, 291, 500, 380, 362, 39562, 337, 4577, 11, 457, 309, 311, 516, 281, 1884, 633, 363, 38, 2017, 337, 633, 1821, 6053, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10312414169311523, "compression_ratio": 2.0748663101604277, "no_caption_prob": 0.00010718982230173424}, {"id": 82, "seek": 91300, "start": 913.0, "end": 922.0, "text": " So if you have like the medium breakpoint, it's going to be like MD colon BG dash red dash 500.", "tokens": [50364, 407, 498, 291, 362, 411, 264, 6399, 1821, 6053, 11, 309, 311, 516, 281, 312, 411, 22521, 8255, 363, 38, 8240, 2182, 8240, 5923, 13, 50814, 50814, 400, 309, 311, 516, 281, 8460, 633, 4784, 11380, 295, 439, 295, 613, 819, 12178, 7467, 1214, 11, 597, 307, 4476, 846, 12162, 1920, 411, 5141, 364, 9362, 293, 1566, 411, 11, 1392, 11, 337, 341, 1821, 6053, 11, 1320, 294, 341, 6770, 295, 341, 2017, 337, 3678, 11, 3678, 2017, 420, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10606247397030101, "compression_ratio": 1.5875, "no_caption_prob": 4.985610576113686e-05}, {"id": 83, "seek": 91300, "start": 922.0, "end": 941.0, "text": " And it's going to generate every permutation of all of these different possibilities mixed together, which is essentially emulating almost like calling an API and saying like, okay, for this breakpoint, pass in this argument of this color for background, background color or something.", "tokens": [50364, 407, 498, 291, 362, 411, 264, 6399, 1821, 6053, 11, 309, 311, 516, 281, 312, 411, 22521, 8255, 363, 38, 8240, 2182, 8240, 5923, 13, 50814, 50814, 400, 309, 311, 516, 281, 8460, 633, 4784, 11380, 295, 439, 295, 613, 819, 12178, 7467, 1214, 11, 597, 307, 4476, 846, 12162, 1920, 411, 5141, 364, 9362, 293, 1566, 411, 11, 1392, 11, 337, 341, 1821, 6053, 11, 1320, 294, 341, 6770, 295, 341, 2017, 337, 3678, 11, 3678, 2017, 420, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10606247397030101, "compression_ratio": 1.5875, "no_caption_prob": 4.985610576113686e-05}, {"id": 84, "seek": 94100, "start": 941.0, "end": 950.0, "text": " Right. But it's doing it through CSS classes. So it just brute force generates every permutation and it's a combinatoric explosion.", "tokens": [50364, 1779, 13, 583, 309, 311, 884, 309, 807, 24387, 5359, 13, 407, 309, 445, 47909, 3464, 23815, 633, 4784, 11380, 293, 309, 311, 257, 2512, 31927, 299, 15673, 13, 50814, 50814, 400, 550, 264, 636, 46074, 12199, 11215, 365, 300, 307, 309, 4960, 746, 1219, 1864, 432, 24387, 11, 597, 4960, 411, 319, 432, 87, 281, 352, 807, 428, 4009, 3089, 11, 915, 439, 264, 24387, 5359, 300, 366, 1143, 293, 12828, 484, 490, 264, 24387, 439, 264, 2306, 291, 500, 380, 764, 281, 362, 257, 23551, 20004, 24387, 24438, 294, 4265, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07438328339881503, "compression_ratio": 1.5907335907335907, "no_caption_prob": 1.184292614198057e-05}, {"id": 85, "seek": 94100, "start": 950.0, "end": 969.0, "text": " And then the way Tailwind deals with that is it uses something called purge CSS, which uses like regex to go through your source code, find all the CSS classes that are used and strip out from the CSS all the ones you don't use to have a reasonably sized CSS bundle in production.", "tokens": [50364, 1779, 13, 583, 309, 311, 884, 309, 807, 24387, 5359, 13, 407, 309, 445, 47909, 3464, 23815, 633, 4784, 11380, 293, 309, 311, 257, 2512, 31927, 299, 15673, 13, 50814, 50814, 400, 550, 264, 636, 46074, 12199, 11215, 365, 300, 307, 309, 4960, 746, 1219, 1864, 432, 24387, 11, 597, 4960, 411, 319, 432, 87, 281, 352, 807, 428, 4009, 3089, 11, 915, 439, 264, 24387, 5359, 300, 366, 1143, 293, 12828, 484, 490, 264, 24387, 439, 264, 2306, 291, 500, 380, 764, 281, 362, 257, 23551, 20004, 24387, 24438, 294, 4265, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07438328339881503, "compression_ratio": 1.5907335907335907, "no_caption_prob": 1.184292614198057e-05}, {"id": 86, "seek": 96900, "start": 969.0, "end": 974.0, "text": " So that didn't work well for the Elm compiler and output. It didn't like that.", "tokens": [50364, 407, 300, 994, 380, 589, 731, 337, 264, 2699, 76, 31958, 293, 5598, 13, 467, 994, 380, 411, 300, 13, 50614, 50614, 1042, 11, 286, 500, 380, 519, 264, 2699, 76, 31958, 390, 767, 17600, 2370, 13, 467, 2067, 380, 264, 44641, 547, 11, 412, 1935, 13, 50864, 50864, 467, 390, 544, 452, 46593, 11, 597, 6576, 281, 2964, 760, 257, 688, 544, 562, 286, 390, 1228, 4455, 365, 38662, 11, 2699, 76, 16679, 11, 597, 645, 300, 955, 13, 51364, 51364, 865, 11, 286, 519, 286, 1604, 25091, 3089, 26958, 760, 1238, 10950, 11, 412, 1935, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09247825659957587, "compression_ratio": 1.6652542372881356, "no_caption_prob": 4.0928889575297944e-06}, {"id": 87, "seek": 96900, "start": 974.0, "end": 979.0, "text": " Well, I don't think the Elm compiler was actually surprisingly fast. It wasn't the bottleneck, at least.", "tokens": [50364, 407, 300, 994, 380, 589, 731, 337, 264, 2699, 76, 31958, 293, 5598, 13, 467, 994, 380, 411, 300, 13, 50614, 50614, 1042, 11, 286, 500, 380, 519, 264, 2699, 76, 31958, 390, 767, 17600, 2370, 13, 467, 2067, 380, 264, 44641, 547, 11, 412, 1935, 13, 50864, 50864, 467, 390, 544, 452, 46593, 11, 597, 6576, 281, 2964, 760, 257, 688, 544, 562, 286, 390, 1228, 4455, 365, 38662, 11, 2699, 76, 16679, 11, 597, 645, 300, 955, 13, 51364, 51364, 865, 11, 286, 519, 286, 1604, 25091, 3089, 26958, 760, 1238, 10950, 11, 412, 1935, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09247825659957587, "compression_ratio": 1.6652542372881356, "no_caption_prob": 4.0928889575297944e-06}, {"id": 88, "seek": 96900, "start": 979.0, "end": 989.0, "text": " It was more my tooling, which seemed to slow down a lot more when I was using projects with generators, Elm modules, which were that big.", "tokens": [50364, 407, 300, 994, 380, 589, 731, 337, 264, 2699, 76, 31958, 293, 5598, 13, 467, 994, 380, 411, 300, 13, 50614, 50614, 1042, 11, 286, 500, 380, 519, 264, 2699, 76, 31958, 390, 767, 17600, 2370, 13, 467, 2067, 380, 264, 44641, 547, 11, 412, 1935, 13, 50864, 50864, 467, 390, 544, 452, 46593, 11, 597, 6576, 281, 2964, 760, 257, 688, 544, 562, 286, 390, 1228, 4455, 365, 38662, 11, 2699, 76, 16679, 11, 597, 645, 300, 955, 13, 51364, 51364, 865, 11, 286, 519, 286, 1604, 25091, 3089, 26958, 760, 1238, 10950, 11, 412, 1935, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09247825659957587, "compression_ratio": 1.6652542372881356, "no_caption_prob": 4.0928889575297944e-06}, {"id": 89, "seek": 96900, "start": 989.0, "end": 994.0, "text": " Yeah, I think I remember VS code slowing down pretty heavily, at least.", "tokens": [50364, 407, 300, 994, 380, 589, 731, 337, 264, 2699, 76, 31958, 293, 5598, 13, 467, 994, 380, 411, 300, 13, 50614, 50614, 1042, 11, 286, 500, 380, 519, 264, 2699, 76, 31958, 390, 767, 17600, 2370, 13, 467, 2067, 380, 264, 44641, 547, 11, 412, 1935, 13, 50864, 50864, 467, 390, 544, 452, 46593, 11, 597, 6576, 281, 2964, 760, 257, 688, 544, 562, 286, 390, 1228, 4455, 365, 38662, 11, 2699, 76, 16679, 11, 597, 645, 300, 955, 13, 51364, 51364, 865, 11, 286, 519, 286, 1604, 25091, 3089, 26958, 760, 1238, 10950, 11, 412, 1935, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09247825659957587, "compression_ratio": 1.6652542372881356, "no_caption_prob": 4.0928889575297944e-06}, {"id": 90, "seek": 99400, "start": 994.0, "end": 1001.0, "text": " There's been lots of improvements, though. I've used these files to do more debugging in VS code, actually.", "tokens": [50364, 821, 311, 668, 3195, 295, 13797, 11, 1673, 13, 286, 600, 1143, 613, 7098, 281, 360, 544, 45592, 294, 25091, 3089, 11, 767, 13, 50714, 50714, 5490, 13, 1726, 709, 11, 457, 257, 707, 857, 13, 400, 436, 8932, 484, 512, 13797, 281, 309, 13, 407, 300, 390, 1481, 13, 51114, 51114, 8291, 11, 309, 32057, 760, 452, 46593, 257, 688, 13, 400, 294, 7216, 1036, 1064, 11, 286, 1866, 472, 1716, 597, 390, 2183, 24387, 11, 2699, 76, 11, 46074, 12199, 11, 572, 1699, 11, 2183, 24387, 11, 46074, 12199, 11, 2699, 76, 24387, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1308715057373047, "compression_ratio": 1.5423728813559323, "no_caption_prob": 2.318432780157309e-05}, {"id": 91, "seek": 99400, "start": 1001.0, "end": 1009.0, "text": " Nice. Not much, but a little bit. And they figured out some improvements to it. So that was nice.", "tokens": [50364, 821, 311, 668, 3195, 295, 13797, 11, 1673, 13, 286, 600, 1143, 613, 7098, 281, 360, 544, 45592, 294, 25091, 3089, 11, 767, 13, 50714, 50714, 5490, 13, 1726, 709, 11, 457, 257, 707, 857, 13, 400, 436, 8932, 484, 512, 13797, 281, 309, 13, 407, 300, 390, 1481, 13, 51114, 51114, 8291, 11, 309, 32057, 760, 452, 46593, 257, 688, 13, 400, 294, 7216, 1036, 1064, 11, 286, 1866, 472, 1716, 597, 390, 2183, 24387, 11, 2699, 76, 11, 46074, 12199, 11, 572, 1699, 11, 2183, 24387, 11, 46074, 12199, 11, 2699, 76, 24387, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1308715057373047, "compression_ratio": 1.5423728813559323, "no_caption_prob": 2.318432780157309e-05}, {"id": 92, "seek": 99400, "start": 1009.0, "end": 1023.0, "text": " Still, it slowed down my tooling a lot. And in September last year, I saw one project which was post CSS, Elm, Tailwind, no wait, post CSS, Tailwind, Elm CSS.", "tokens": [50364, 821, 311, 668, 3195, 295, 13797, 11, 1673, 13, 286, 600, 1143, 613, 7098, 281, 360, 544, 45592, 294, 25091, 3089, 11, 767, 13, 50714, 50714, 5490, 13, 1726, 709, 11, 457, 257, 707, 857, 13, 400, 436, 8932, 484, 512, 13797, 281, 309, 13, 407, 300, 390, 1481, 13, 51114, 51114, 8291, 11, 309, 32057, 760, 452, 46593, 257, 688, 13, 400, 294, 7216, 1036, 1064, 11, 286, 1866, 472, 1716, 597, 390, 2183, 24387, 11, 2699, 76, 11, 46074, 12199, 11, 572, 1699, 11, 2183, 24387, 11, 46074, 12199, 11, 2699, 76, 24387, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1308715057373047, "compression_ratio": 1.5423728813559323, "no_caption_prob": 2.318432780157309e-05}, {"id": 93, "seek": 102300, "start": 1023.0, "end": 1026.0, "text": " Post CSS, Elm CSS, Tailwind from Justin Reyes.", "tokens": [50364, 10223, 24387, 11, 2699, 76, 24387, 11, 46074, 12199, 490, 11320, 1300, 2346, 13, 50514, 50514, 7587, 13, 509, 600, 658, 439, 295, 264, 6123, 4927, 13, 5490, 13, 639, 4523, 666, 512, 733, 295, 272, 18459, 295, 385, 1382, 281, 19567, 264, 485, 51014, 51014, 639, 307, 527, 2121, 5272, 3500, 797, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.14683197284566946, "compression_ratio": 1.3167701863354038, "no_caption_prob": 4.683473889599554e-05}, {"id": 94, "seek": 102300, "start": 1026.0, "end": 1036.0, "text": " Exactly. You've got all of the links prepared. Nice. This turns into some kind of bingo of me trying to pronounce the...", "tokens": [50364, 10223, 24387, 11, 2699, 76, 24387, 11, 46074, 12199, 490, 11320, 1300, 2346, 13, 50514, 50514, 7587, 13, 509, 600, 658, 439, 295, 264, 6123, 4927, 13, 5490, 13, 639, 4523, 666, 512, 733, 295, 272, 18459, 295, 385, 1382, 281, 19567, 264, 485, 51014, 51014, 639, 307, 527, 2121, 5272, 3500, 797, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.14683197284566946, "compression_ratio": 1.3167701863354038, "no_caption_prob": 4.683473889599554e-05}, {"id": 95, "seek": 102300, "start": 1036.0, "end": 1041.0, "text": " This is our special Christmas episode again.", "tokens": [50364, 10223, 24387, 11, 2699, 76, 24387, 11, 46074, 12199, 490, 11320, 1300, 2346, 13, 50514, 50514, 7587, 13, 509, 600, 658, 439, 295, 264, 6123, 4927, 13, 5490, 13, 639, 4523, 666, 512, 733, 295, 272, 18459, 295, 385, 1382, 281, 19567, 264, 485, 51014, 51014, 639, 307, 527, 2121, 5272, 3500, 797, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.14683197284566946, "compression_ratio": 1.3167701863354038, "no_caption_prob": 4.683473889599554e-05}, {"id": 96, "seek": 104100, "start": 1041.0, "end": 1060.0, "text": " Exactly. That project from Justin. And he had this genius idea of using Elm CSS and transforming all of the CSS that Tailwind would generate and transform the generated CSS into generated Elm code in a way so you can just throw away the CSS again.", "tokens": [50364, 7587, 13, 663, 1716, 490, 11320, 13, 400, 415, 632, 341, 14017, 1558, 295, 1228, 2699, 76, 24387, 293, 27210, 439, 295, 264, 24387, 300, 46074, 12199, 576, 8460, 293, 4088, 264, 10833, 24387, 666, 10833, 2699, 76, 3089, 294, 257, 636, 370, 291, 393, 445, 3507, 1314, 264, 24387, 797, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.10044809750148229, "compression_ratio": 1.54375, "no_caption_prob": 2.9772176276310347e-05}, {"id": 97, "seek": 106000, "start": 1060.0, "end": 1071.0, "text": " Just use the generated Elm code. So there's Elm CSS, which lets you define CSS within Elm, kind of similar and inspired to CSS in JS.", "tokens": [50364, 1449, 764, 264, 10833, 2699, 76, 3089, 13, 407, 456, 311, 2699, 76, 24387, 11, 597, 6653, 291, 6964, 24387, 1951, 2699, 76, 11, 733, 295, 2531, 293, 7547, 281, 24387, 294, 33063, 13, 50914, 50914, 400, 415, 390, 1228, 300, 281, 6964, 364, 2699, 76, 3991, 597, 16212, 439, 295, 264, 7221, 300, 576, 312, 7642, 294, 264, 46074, 12199, 24387, 3991, 293, 362, 257, 10654, 2699, 76, 7123, 337, 1184, 295, 264, 14877, 5359, 550, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06515463968602622, "compression_ratio": 1.6067961165048543, "no_caption_prob": 2.8572967494255863e-06}, {"id": 98, "seek": 106000, "start": 1071.0, "end": 1086.0, "text": " And he was using that to define an Elm file which contained all of the properties that would be defined in the Tailwind CSS file and have a neat Elm definition for each of the utility classes then.", "tokens": [50364, 1449, 764, 264, 10833, 2699, 76, 3089, 13, 407, 456, 311, 2699, 76, 24387, 11, 597, 6653, 291, 6964, 24387, 1951, 2699, 76, 11, 733, 295, 2531, 293, 7547, 281, 24387, 294, 33063, 13, 50914, 50914, 400, 415, 390, 1228, 300, 281, 6964, 364, 2699, 76, 3991, 597, 16212, 439, 295, 264, 7221, 300, 576, 312, 7642, 294, 264, 46074, 12199, 24387, 3991, 293, 362, 257, 10654, 2699, 76, 7123, 337, 1184, 295, 264, 14877, 5359, 550, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06515463968602622, "compression_ratio": 1.6067961165048543, "no_caption_prob": 2.8572967494255863e-06}, {"id": 99, "seek": 108600, "start": 1086.0, "end": 1097.0, "text": " Right. So and I think he also had this innovation where it could be more composable to put those pieces together, right? Because you had instead of having a single...", "tokens": [50364, 1779, 13, 407, 293, 286, 519, 415, 611, 632, 341, 8504, 689, 309, 727, 312, 544, 10199, 712, 281, 829, 729, 3755, 1214, 11, 558, 30, 1436, 291, 632, 2602, 295, 1419, 257, 2167, 485, 50914, 50914], "temperature": 0.0, "avg_logprob": -0.1740101178487142, "compression_ratio": 1.2868217054263567, "no_caption_prob": 6.921253225300461e-05}, {"id": 100, "seek": 109700, "start": 1097.0, "end": 1116.0, "text": " So, you know, like I was saying before, like conceptually Tailwind is essentially a hack to give you an API through CSS classes where, you know, you can say at the medium breakpoint on hover, the background color of this button should be blue.", "tokens": [50364, 407, 11, 291, 458, 11, 411, 286, 390, 1566, 949, 11, 411, 3410, 671, 46074, 12199, 307, 4476, 257, 10339, 281, 976, 291, 364, 9362, 807, 24387, 5359, 689, 11, 291, 458, 11, 291, 393, 584, 412, 264, 6399, 1821, 6053, 322, 20076, 11, 264, 3678, 2017, 295, 341, 2960, 820, 312, 3344, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.11610157736416521, "compression_ratio": 1.4210526315789473, "no_caption_prob": 2.2827387510915287e-05}, {"id": 101, "seek": 111600, "start": 1116.0, "end": 1131.0, "text": " And so it generates MD colon hover colon BG dash blue or, you know, whatever. But, you know, conceptually it's an API that you're passing in a bunch of arguments to these functions.", "tokens": [50364, 400, 370, 309, 23815, 22521, 8255, 20076, 8255, 363, 38, 8240, 3344, 420, 11, 291, 458, 11, 2035, 13, 583, 11, 291, 458, 11, 3410, 671, 309, 311, 364, 9362, 300, 291, 434, 8437, 294, 257, 3840, 295, 12869, 281, 613, 6828, 13, 51114, 51114, 400, 731, 11, 300, 311, 1333, 295, 437, 11320, 497, 442, 811, 632, 382, 702, 8504, 390, 300, 291, 727, 767, 8460, 2699, 76, 3089, 300, 715, 4201, 729, 721, 1214, 281, 976, 291, 264, 24387, 1508, 5288, 13, 1119, 300, 264, 1558, 2261, 702, 6405, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09877005219459534, "compression_ratio": 1.5748031496062993, "no_caption_prob": 1.4738659046997782e-05}, {"id": 102, "seek": 111600, "start": 1131.0, "end": 1145.0, "text": " And well, that's sort of what Justin Ressier had as his innovation was that you could actually generate Elm code that composes those things together to give you the CSS class names. Is that the idea behind his library?", "tokens": [50364, 400, 370, 309, 23815, 22521, 8255, 20076, 8255, 363, 38, 8240, 3344, 420, 11, 291, 458, 11, 2035, 13, 583, 11, 291, 458, 11, 3410, 671, 309, 311, 364, 9362, 300, 291, 434, 8437, 294, 257, 3840, 295, 12869, 281, 613, 6828, 13, 51114, 51114, 400, 731, 11, 300, 311, 1333, 295, 437, 11320, 497, 442, 811, 632, 382, 702, 8504, 390, 300, 291, 727, 767, 8460, 2699, 76, 3089, 300, 715, 4201, 729, 721, 1214, 281, 976, 291, 264, 24387, 1508, 5288, 13, 1119, 300, 264, 1558, 2261, 702, 6405, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09877005219459534, "compression_ratio": 1.5748031496062993, "no_caption_prob": 1.4738659046997782e-05}, {"id": 103, "seek": 114500, "start": 1145.0, "end": 1157.0, "text": " Exactly. And like one of the examples I was having at work was we use dark mode. So we ended up having just twice as much CSS and Elm code, therefore.", "tokens": [50364, 7587, 13, 400, 411, 472, 295, 264, 5110, 286, 390, 1419, 412, 589, 390, 321, 764, 2877, 4391, 13, 407, 321, 4590, 493, 1419, 445, 6091, 382, 709, 24387, 293, 2699, 76, 3089, 11, 4412, 13, 50964, 50964, 1779, 13, 1779, 13, 51064, 51064], "temperature": 0.0, "avg_logprob": -0.1277967121290124, "compression_ratio": 1.2713178294573644, "no_caption_prob": 2.9772094421787187e-05}, {"id": 104, "seek": 114500, "start": 1157.0, "end": 1159.0, "text": " Right. Right.", "tokens": [50364, 7587, 13, 400, 411, 472, 295, 264, 5110, 286, 390, 1419, 412, 589, 390, 321, 764, 2877, 4391, 13, 407, 321, 4590, 493, 1419, 445, 6091, 382, 709, 24387, 293, 2699, 76, 3089, 11, 4412, 13, 50964, 50964, 1779, 13, 1779, 13, 51064, 51064], "temperature": 0.0, "avg_logprob": -0.1277967121290124, "compression_ratio": 1.2713178294573644, "no_caption_prob": 2.9772094421787187e-05}, {"id": 105, "seek": 115900, "start": 1159.0, "end": 1177.0, "text": " But what you would do in Elm CSS was just define another function which would be called maybe dark and it would just wrap your CSS you were using with a media query which queries for prefers color theme dark.", "tokens": [50364, 583, 437, 291, 576, 360, 294, 2699, 76, 24387, 390, 445, 6964, 1071, 2445, 597, 576, 312, 1219, 1310, 2877, 293, 309, 576, 445, 7019, 428, 24387, 291, 645, 1228, 365, 257, 3021, 14581, 597, 24109, 337, 44334, 2017, 6314, 2877, 13, 51264, 51264, 400, 291, 500, 380, 362, 281, 909, 1340, 1646, 13, 407, 309, 311, 445, 472, 544, 7123, 2602, 295, 33651, 439, 295, 428, 21988, 13, 51564, 51564, 663, 311, 3476, 13, 407, 309, 311, 1228, 2699, 76, 24387, 833, 264, 13376, 382, 731, 11, 558, 30, 639, 6405, 510, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0845305870990364, "compression_ratio": 1.653386454183267, "no_caption_prob": 7.843564526410773e-05}, {"id": 106, "seek": 115900, "start": 1177.0, "end": 1183.0, "text": " And you don't have to add anything else. So it's just one more definition instead of doubling all of your definitions.", "tokens": [50364, 583, 437, 291, 576, 360, 294, 2699, 76, 24387, 390, 445, 6964, 1071, 2445, 597, 576, 312, 1219, 1310, 2877, 293, 309, 576, 445, 7019, 428, 24387, 291, 645, 1228, 365, 257, 3021, 14581, 597, 24109, 337, 44334, 2017, 6314, 2877, 13, 51264, 51264, 400, 291, 500, 380, 362, 281, 909, 1340, 1646, 13, 407, 309, 311, 445, 472, 544, 7123, 2602, 295, 33651, 439, 295, 428, 21988, 13, 51564, 51564, 663, 311, 3476, 13, 407, 309, 311, 1228, 2699, 76, 24387, 833, 264, 13376, 382, 731, 11, 558, 30, 639, 6405, 510, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0845305870990364, "compression_ratio": 1.653386454183267, "no_caption_prob": 7.843564526410773e-05}, {"id": 107, "seek": 115900, "start": 1183.0, "end": 1188.0, "text": " That's awesome. So it's using Elm CSS under the hood as well, right? This library here?", "tokens": [50364, 583, 437, 291, 576, 360, 294, 2699, 76, 24387, 390, 445, 6964, 1071, 2445, 597, 576, 312, 1219, 1310, 2877, 293, 309, 576, 445, 7019, 428, 24387, 291, 645, 1228, 365, 257, 3021, 14581, 597, 24109, 337, 44334, 2017, 6314, 2877, 13, 51264, 51264, 400, 291, 500, 380, 362, 281, 909, 1340, 1646, 13, 407, 309, 311, 445, 472, 544, 7123, 2602, 295, 33651, 439, 295, 428, 21988, 13, 51564, 51564, 663, 311, 3476, 13, 407, 309, 311, 1228, 2699, 76, 24387, 833, 264, 13376, 382, 731, 11, 558, 30, 639, 6405, 510, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0845305870990364, "compression_ratio": 1.653386454183267, "no_caption_prob": 7.843564526410773e-05}, {"id": 108, "seek": 118800, "start": 1188.0, "end": 1193.0, "text": " Yes. Not as well. This one does and Monti's didn't.", "tokens": [50364, 1079, 13, 1726, 382, 731, 13, 639, 472, 775, 293, 7947, 72, 311, 994, 380, 13, 50614, 50614, 876, 11, 558, 13, 286, 4140, 5347, 281, 21144, 311, 6405, 13, 50764, 50764, 7587, 13, 13587, 13, 1079, 13, 50914, 50914, 407, 321, 2825, 466, 11, 291, 458, 11, 264, 1822, 2793, 365, 7947, 72, 311, 1419, 11, 291, 458, 11, 10833, 3089, 300, 390, 2252, 337, 46593, 281, 48377, 13, 51364, 51364, 708, 390, 264, 437, 390, 264, 1778, 300, 1027, 291, 528, 281, 1322, 746, 30, 708, 645, 264, 1822, 2793, 295, 1228, 11320, 497, 442, 811, 311, 3109, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10759737832205636, "compression_ratio": 1.5731707317073171, "no_caption_prob": 3.269766239100136e-05}, {"id": 109, "seek": 118800, "start": 1193.0, "end": 1196.0, "text": " Oh, right. I meant compared to Philip's library.", "tokens": [50364, 1079, 13, 1726, 382, 731, 13, 639, 472, 775, 293, 7947, 72, 311, 994, 380, 13, 50614, 50614, 876, 11, 558, 13, 286, 4140, 5347, 281, 21144, 311, 6405, 13, 50764, 50764, 7587, 13, 13587, 13, 1079, 13, 50914, 50914, 407, 321, 2825, 466, 11, 291, 458, 11, 264, 1822, 2793, 365, 7947, 72, 311, 1419, 11, 291, 458, 11, 10833, 3089, 300, 390, 2252, 337, 46593, 281, 48377, 13, 51364, 51364, 708, 390, 264, 437, 390, 264, 1778, 300, 1027, 291, 528, 281, 1322, 746, 30, 708, 645, 264, 1822, 2793, 295, 1228, 11320, 497, 442, 811, 311, 3109, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10759737832205636, "compression_ratio": 1.5731707317073171, "no_caption_prob": 3.269766239100136e-05}, {"id": 110, "seek": 118800, "start": 1196.0, "end": 1199.0, "text": " Exactly. True. Yes.", "tokens": [50364, 1079, 13, 1726, 382, 731, 13, 639, 472, 775, 293, 7947, 72, 311, 994, 380, 13, 50614, 50614, 876, 11, 558, 13, 286, 4140, 5347, 281, 21144, 311, 6405, 13, 50764, 50764, 7587, 13, 13587, 13, 1079, 13, 50914, 50914, 407, 321, 2825, 466, 11, 291, 458, 11, 264, 1822, 2793, 365, 7947, 72, 311, 1419, 11, 291, 458, 11, 10833, 3089, 300, 390, 2252, 337, 46593, 281, 48377, 13, 51364, 51364, 708, 390, 264, 437, 390, 264, 1778, 300, 1027, 291, 528, 281, 1322, 746, 30, 708, 645, 264, 1822, 2793, 295, 1228, 11320, 497, 442, 811, 311, 3109, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10759737832205636, "compression_ratio": 1.5731707317073171, "no_caption_prob": 3.269766239100136e-05}, {"id": 111, "seek": 118800, "start": 1199.0, "end": 1208.0, "text": " So we talked about, you know, the pain points with Monti's having, you know, generated code that was difficult for tooling to parse.", "tokens": [50364, 1079, 13, 1726, 382, 731, 13, 639, 472, 775, 293, 7947, 72, 311, 994, 380, 13, 50614, 50614, 876, 11, 558, 13, 286, 4140, 5347, 281, 21144, 311, 6405, 13, 50764, 50764, 7587, 13, 13587, 13, 1079, 13, 50914, 50914, 407, 321, 2825, 466, 11, 291, 458, 11, 264, 1822, 2793, 365, 7947, 72, 311, 1419, 11, 291, 458, 11, 10833, 3089, 300, 390, 2252, 337, 46593, 281, 48377, 13, 51364, 51364, 708, 390, 264, 437, 390, 264, 1778, 300, 1027, 291, 528, 281, 1322, 746, 30, 708, 645, 264, 1822, 2793, 295, 1228, 11320, 497, 442, 811, 311, 3109, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10759737832205636, "compression_ratio": 1.5731707317073171, "no_caption_prob": 3.269766239100136e-05}, {"id": 112, "seek": 118800, "start": 1208.0, "end": 1215.0, "text": " What was the what was the reason that made you want to build something? What were the pain points of using Justin Ressier's approach?", "tokens": [50364, 1079, 13, 1726, 382, 731, 13, 639, 472, 775, 293, 7947, 72, 311, 994, 380, 13, 50614, 50614, 876, 11, 558, 13, 286, 4140, 5347, 281, 21144, 311, 6405, 13, 50764, 50764, 7587, 13, 13587, 13, 1079, 13, 50914, 50914, 407, 321, 2825, 466, 11, 291, 458, 11, 264, 1822, 2793, 365, 7947, 72, 311, 1419, 11, 291, 458, 11, 10833, 3089, 300, 390, 2252, 337, 46593, 281, 48377, 13, 51364, 51364, 708, 390, 264, 437, 390, 264, 1778, 300, 1027, 291, 528, 281, 1322, 746, 30, 708, 645, 264, 1822, 2793, 295, 1228, 11320, 497, 442, 811, 311, 3109, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10759737832205636, "compression_ratio": 1.5731707317073171, "no_caption_prob": 3.269766239100136e-05}, {"id": 113, "seek": 121500, "start": 1215.0, "end": 1228.0, "text": " Justin's project was not complete at the point I was trying to use it. So I was trying to use it with, for example, Italian CSS plugins like the typography plugin or the UI plugin.", "tokens": [50364, 11320, 311, 1716, 390, 406, 3566, 412, 264, 935, 286, 390, 1382, 281, 764, 309, 13, 407, 286, 390, 1382, 281, 764, 309, 365, 11, 337, 1365, 11, 10003, 24387, 33759, 411, 264, 2125, 5820, 23407, 420, 264, 15682, 23407, 13, 51014, 51014, 583, 309, 4590, 493, 406, 17746, 3006, 2699, 76, 3089, 13, 400, 370, 286, 390, 1382, 281, 286, 390, 1940, 341, 1716, 293, 1455, 2962, 281, 309, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13020554860432942, "compression_ratio": 1.6344086021505377, "no_caption_prob": 2.885531102947425e-05}, {"id": 114, "seek": 121500, "start": 1228.0, "end": 1237.0, "text": " But it ended up not generating correct Elm code. And so I was trying to I was taking this project and making changes to it.", "tokens": [50364, 11320, 311, 1716, 390, 406, 3566, 412, 264, 935, 286, 390, 1382, 281, 764, 309, 13, 407, 286, 390, 1382, 281, 764, 309, 365, 11, 337, 1365, 11, 10003, 24387, 33759, 411, 264, 2125, 5820, 23407, 420, 264, 15682, 23407, 13, 51014, 51014, 583, 309, 4590, 493, 406, 17746, 3006, 2699, 76, 3089, 13, 400, 370, 286, 390, 1382, 281, 286, 390, 1940, 341, 1716, 293, 1455, 2962, 281, 309, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13020554860432942, "compression_ratio": 1.6344086021505377, "no_caption_prob": 2.885531102947425e-05}, {"id": 115, "seek": 123700, "start": 1237.0, "end": 1252.0, "text": " And while I was doing that, I was thinking of more architectural improvements to it, I guess. And in the end, it happened to be, I guess, more of a coincidence that I did not that I forked this project instead of really contributing to it.", "tokens": [50364, 400, 1339, 286, 390, 884, 300, 11, 286, 390, 1953, 295, 544, 26621, 13797, 281, 309, 11, 286, 2041, 13, 400, 294, 264, 917, 11, 309, 2011, 281, 312, 11, 286, 2041, 11, 544, 295, 257, 22137, 300, 286, 630, 406, 300, 286, 17716, 292, 341, 1716, 2602, 295, 534, 19270, 281, 309, 13, 51114, 51114, 286, 390, 5038, 322, 16493, 281, 1071, 2699, 76, 6405, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.06630958637721102, "compression_ratio": 1.5561497326203209, "no_caption_prob": 6.144071903690929e-06}, {"id": 116, "seek": 123700, "start": 1252.0, "end": 1256.0, "text": " I was planning on switching to another Elm library.", "tokens": [50364, 400, 1339, 286, 390, 884, 300, 11, 286, 390, 1953, 295, 544, 26621, 13797, 281, 309, 11, 286, 2041, 13, 400, 294, 264, 917, 11, 309, 2011, 281, 312, 11, 286, 2041, 11, 544, 295, 257, 22137, 300, 286, 630, 406, 300, 286, 17716, 292, 341, 1716, 2602, 295, 534, 19270, 281, 309, 13, 51114, 51114, 286, 390, 5038, 322, 16493, 281, 1071, 2699, 76, 6405, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.06630958637721102, "compression_ratio": 1.5561497326203209, "no_caption_prob": 6.144071903690929e-06}, {"id": 117, "seek": 125600, "start": 1256.0, "end": 1268.0, "text": " So instead of using Elm CSS, I was thinking about using Elm Origami, which is some not well known at all Elm project, which is again a fork of Elm CSS.", "tokens": [50364, 407, 2602, 295, 1228, 2699, 76, 24387, 11, 286, 390, 1953, 466, 1228, 2699, 76, 13895, 4526, 11, 597, 307, 512, 406, 731, 2570, 412, 439, 2699, 76, 1716, 11, 597, 307, 797, 257, 17716, 295, 2699, 76, 24387, 13, 50964, 50964, 407, 286, 2041, 321, 434, 411, 1242, 666, 264, 2182, 3876, 322, 264, 2929, 733, 295, 551, 510, 13, 51314, 51314, 286, 458, 264, 21701, 291, 434, 13761, 281, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.058309429570248254, "compression_ratio": 1.5027932960893855, "no_caption_prob": 2.7968600988970138e-05}, {"id": 118, "seek": 125600, "start": 1268.0, "end": 1275.0, "text": " So I guess we're like getting into the red lines on the wall kind of thing here.", "tokens": [50364, 407, 2602, 295, 1228, 2699, 76, 24387, 11, 286, 390, 1953, 466, 1228, 2699, 76, 13895, 4526, 11, 597, 307, 512, 406, 731, 2570, 412, 439, 2699, 76, 1716, 11, 597, 307, 797, 257, 17716, 295, 2699, 76, 24387, 13, 50964, 50964, 407, 286, 2041, 321, 434, 411, 1242, 666, 264, 2182, 3876, 322, 264, 2929, 733, 295, 551, 510, 13, 51314, 51314, 286, 458, 264, 21701, 291, 434, 13761, 281, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.058309429570248254, "compression_ratio": 1.5027932960893855, "no_caption_prob": 2.7968600988970138e-05}, {"id": 119, "seek": 125600, "start": 1275.0, "end": 1278.0, "text": " I know the meme you're referring to.", "tokens": [50364, 407, 2602, 295, 1228, 2699, 76, 24387, 11, 286, 390, 1953, 466, 1228, 2699, 76, 13895, 4526, 11, 597, 307, 512, 406, 731, 2570, 412, 439, 2699, 76, 1716, 11, 597, 307, 797, 257, 17716, 295, 2699, 76, 24387, 13, 50964, 50964, 407, 286, 2041, 321, 434, 411, 1242, 666, 264, 2182, 3876, 322, 264, 2929, 733, 295, 551, 510, 13, 51314, 51314, 286, 458, 264, 21701, 291, 434, 13761, 281, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.058309429570248254, "compression_ratio": 1.5027932960893855, "no_caption_prob": 2.7968600988970138e-05}, {"id": 120, "seek": 127800, "start": 1278.0, "end": 1295.0, "text": " But yeah, so accidents happened. I ended up significantly reworking his project, but starting out from his and making changes to it, switching the code generation from plain JavaScript to TypeScript,", "tokens": [50364, 583, 1338, 11, 370, 23875, 2011, 13, 286, 4590, 493, 10591, 319, 22475, 702, 1716, 11, 457, 2891, 484, 490, 702, 293, 1455, 2962, 281, 309, 11, 16493, 264, 3089, 5125, 490, 11121, 15778, 281, 15576, 14237, 11, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.1058549994514102, "compression_ratio": 1.3724137931034484, "no_caption_prob": 4.1984505514847115e-05}, {"id": 121, "seek": 129500, "start": 1295.0, "end": 1308.0, "text": " changing it from doing internal changes and adding more features. So it became possible to, for example, use generators, Tailwinds, CSS with plugins. Exactly.", "tokens": [50364, 4473, 309, 490, 884, 6920, 2962, 293, 5127, 544, 4122, 13, 407, 309, 3062, 1944, 281, 11, 337, 1365, 11, 764, 38662, 11, 46074, 12199, 82, 11, 24387, 365, 33759, 13, 7587, 13, 51014, 51014], "temperature": 0.0, "avg_logprob": -0.24754348961082664, "compression_ratio": 1.253968253968254, "no_caption_prob": 8.092358621070161e-05}, {"id": 122, "seek": 130800, "start": 1308.0, "end": 1327.0, "text": " Right. So the plugins and the customization of the palette is really cool because you tweak your Tailwind config and you change your palette, you change your color palette to have your primary and secondary instead of the built in blue 500, blue 600.", "tokens": [50364, 1779, 13, 407, 264, 33759, 293, 264, 39387, 295, 264, 15851, 307, 534, 1627, 570, 291, 29879, 428, 46074, 12199, 6662, 293, 291, 1319, 428, 15851, 11, 291, 1319, 428, 2017, 15851, 281, 362, 428, 6194, 293, 11396, 2602, 295, 264, 3094, 294, 3344, 5923, 11, 3344, 11849, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.1037047584101839, "compression_ratio": 1.5822784810126582, "no_caption_prob": 0.00045817080535925925}, {"id": 123, "seek": 132700, "start": 1327.0, "end": 1341.0, "text": " And now it's generating these palettes for you and reducing your options. So let's talk a little bit about what the experience now feels like using your Elm Tailwind modules tool.", "tokens": [50364, 400, 586, 309, 311, 17746, 613, 3984, 16049, 337, 291, 293, 12245, 428, 3956, 13, 407, 718, 311, 751, 257, 707, 857, 466, 437, 264, 1752, 586, 3417, 411, 1228, 428, 2699, 76, 46074, 12199, 16679, 2290, 13, 51064, 51064, 407, 309, 311, 3094, 322, 2699, 76, 24387, 833, 264, 13376, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.0974132674080985, "compression_ratio": 1.4285714285714286, "no_caption_prob": 1.9333344880578807e-06}, {"id": 124, "seek": 132700, "start": 1341.0, "end": 1344.0, "text": " So it's built on Elm CSS under the hood.", "tokens": [50364, 400, 586, 309, 311, 17746, 613, 3984, 16049, 337, 291, 293, 12245, 428, 3956, 13, 407, 718, 311, 751, 257, 707, 857, 466, 437, 264, 1752, 586, 3417, 411, 1228, 428, 2699, 76, 46074, 12199, 16679, 2290, 13, 51064, 51064, 407, 309, 311, 3094, 322, 2699, 76, 24387, 833, 264, 13376, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.0974132674080985, "compression_ratio": 1.4285714285714286, "no_caption_prob": 1.9333344880578807e-06}, {"id": 125, "seek": 134400, "start": 1344.0, "end": 1359.0, "text": " It's just giving you Elm CSS code that's actually defining the same CSS that Tailwind would. So you don't actually have a CSS file with the built in permutations of every possible Tailwind class.", "tokens": [50364, 467, 311, 445, 2902, 291, 2699, 76, 24387, 3089, 300, 311, 767, 17827, 264, 912, 24387, 300, 46074, 12199, 576, 13, 407, 291, 500, 380, 767, 362, 257, 24387, 3991, 365, 264, 3094, 294, 4784, 325, 763, 295, 633, 1944, 46074, 12199, 1508, 13, 51114, 51114, 821, 366, 767, 572, 46074, 12199, 5359, 294, 428, 3089, 562, 291, 764, 428, 2699, 76, 46074, 12199, 16679, 2290, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.033090218691758704, "compression_ratio": 1.6132596685082874, "no_caption_prob": 1.6442198102595285e-05}, {"id": 126, "seek": 134400, "start": 1359.0, "end": 1365.0, "text": " There are actually no Tailwind classes in your code when you use your Elm Tailwind modules tool.", "tokens": [50364, 467, 311, 445, 2902, 291, 2699, 76, 24387, 3089, 300, 311, 767, 17827, 264, 912, 24387, 300, 46074, 12199, 576, 13, 407, 291, 500, 380, 767, 362, 257, 24387, 3991, 365, 264, 3094, 294, 4784, 325, 763, 295, 633, 1944, 46074, 12199, 1508, 13, 51114, 51114, 821, 366, 767, 572, 46074, 12199, 5359, 294, 428, 3089, 562, 291, 764, 428, 2699, 76, 46074, 12199, 16679, 2290, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.033090218691758704, "compression_ratio": 1.6132596685082874, "no_caption_prob": 1.6442198102595285e-05}, {"id": 127, "seek": 136500, "start": 1365.0, "end": 1376.0, "text": " Yes. So the fastest way to check out this project would be just to use some, I guess, pre compiled or pre generated Elm code, which I uploaded to the Elm packages directory.", "tokens": [50364, 1079, 13, 407, 264, 14573, 636, 281, 1520, 484, 341, 1716, 576, 312, 445, 281, 764, 512, 11, 286, 2041, 11, 659, 36548, 420, 659, 10833, 2699, 76, 3089, 11, 597, 286, 17135, 281, 264, 2699, 76, 17401, 21120, 13, 50914, 50914, 286, 519, 264, 7372, 307, 1219, 11327, 4609, 9356, 17330, 2699, 76, 7576, 46074, 12199, 16679, 13, 400, 294, 456, 11, 456, 311, 445, 732, 7098, 365, 732, 16679, 365, 3195, 295, 21988, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13069411516189575, "compression_ratio": 1.5277777777777777, "no_caption_prob": 1.544595943414606e-05}, {"id": 128, "seek": 136500, "start": 1376.0, "end": 1389.0, "text": " I think the package is called Matthias23 slash Elm default Tailwind modules. And in there, there's just two files with two modules with lots of definitions.", "tokens": [50364, 1079, 13, 407, 264, 14573, 636, 281, 1520, 484, 341, 1716, 576, 312, 445, 281, 764, 512, 11, 286, 2041, 11, 659, 36548, 420, 659, 10833, 2699, 76, 3089, 11, 597, 286, 17135, 281, 264, 2699, 76, 17401, 21120, 13, 50914, 50914, 286, 519, 264, 7372, 307, 1219, 11327, 4609, 9356, 17330, 2699, 76, 7576, 46074, 12199, 16679, 13, 400, 294, 456, 11, 456, 311, 445, 732, 7098, 365, 732, 16679, 365, 3195, 295, 21988, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13069411516189575, "compression_ratio": 1.5277777777777777, "no_caption_prob": 1.544595943414606e-05}, {"id": 129, "seek": 138900, "start": 1389.0, "end": 1403.0, "text": " It's basically the generated code. And then you'd use Elm HTML just like you're used to. And there is one more HTML attribute you can use because of Elm CSS, which is the CSS attribute.", "tokens": [50364, 467, 311, 1936, 264, 10833, 3089, 13, 400, 550, 291, 1116, 764, 2699, 76, 17995, 445, 411, 291, 434, 1143, 281, 13, 400, 456, 307, 472, 544, 17995, 19667, 291, 393, 764, 570, 295, 2699, 76, 24387, 11, 597, 307, 264, 24387, 19667, 13, 51064, 51064, 467, 2516, 257, 1329, 295, 9834, 293, 456, 291, 393, 445, 974, 613, 21988, 293, 8969, 552, 456, 13, 400, 309, 603, 3079, 552, 411, 498, 291, 645, 9275, 257, 1329, 295, 5359, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08957306543986003, "compression_ratio": 1.6761904761904762, "no_caption_prob": 2.8856276912847534e-05}, {"id": 130, "seek": 138900, "start": 1403.0, "end": 1414.0, "text": " It takes a list of parameters and there you can just import these definitions and insert them there. And it'll apply them like if you were applying a list of classes.", "tokens": [50364, 467, 311, 1936, 264, 10833, 3089, 13, 400, 550, 291, 1116, 764, 2699, 76, 17995, 445, 411, 291, 434, 1143, 281, 13, 400, 456, 307, 472, 544, 17995, 19667, 291, 393, 764, 570, 295, 2699, 76, 24387, 11, 597, 307, 264, 24387, 19667, 13, 51064, 51064, 467, 2516, 257, 1329, 295, 9834, 293, 456, 291, 393, 445, 974, 613, 21988, 293, 8969, 552, 456, 13, 400, 309, 603, 3079, 552, 411, 498, 291, 645, 9275, 257, 1329, 295, 5359, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08957306543986003, "compression_ratio": 1.6761904761904762, "no_caption_prob": 2.8856276912847534e-05}, {"id": 131, "seek": 141400, "start": 1414.0, "end": 1423.0, "text": " It feels similar at least. By the way, why does the Elm CSS API have that CSS function? So you've got Elm CSS.", "tokens": [50364, 467, 3417, 2531, 412, 1935, 13, 3146, 264, 636, 11, 983, 775, 264, 2699, 76, 24387, 9362, 362, 300, 24387, 2445, 30, 407, 291, 600, 658, 2699, 76, 24387, 13, 50814, 50814, 821, 366, 411, 257, 688, 295, 721, 281, 6964, 337, 341, 3500, 11, 457, 1564, 291, 483, 666, 264, 3095, 295, 1228, 309, 11, 309, 1177, 380, 841, 13373, 13, 51264, 51264, 583, 456, 366, 257, 688, 295, 10392, 281, 5366, 13, 407, 365, 2699, 76, 24387, 11, 309, 311, 257, 3270, 294, 14419, 337, 2699, 76, 17995, 4476, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09258616964022319, "compression_ratio": 1.5407725321888412, "no_caption_prob": 7.25389618310146e-05}, {"id": 132, "seek": 141400, "start": 1423.0, "end": 1432.0, "text": " There are like a lot of things to define for this episode, but once you get into the flow of using it, it doesn't feel overwhelming.", "tokens": [50364, 467, 3417, 2531, 412, 1935, 13, 3146, 264, 636, 11, 983, 775, 264, 2699, 76, 24387, 9362, 362, 300, 24387, 2445, 30, 407, 291, 600, 658, 2699, 76, 24387, 13, 50814, 50814, 821, 366, 411, 257, 688, 295, 721, 281, 6964, 337, 341, 3500, 11, 457, 1564, 291, 483, 666, 264, 3095, 295, 1228, 309, 11, 309, 1177, 380, 841, 13373, 13, 51264, 51264, 583, 456, 366, 257, 688, 295, 10392, 281, 5366, 13, 407, 365, 2699, 76, 24387, 11, 309, 311, 257, 3270, 294, 14419, 337, 2699, 76, 17995, 4476, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09258616964022319, "compression_ratio": 1.5407725321888412, "no_caption_prob": 7.25389618310146e-05}, {"id": 133, "seek": 141400, "start": 1432.0, "end": 1441.0, "text": " But there are a lot of concepts to introduce. So with Elm CSS, it's a drop in replacement for Elm HTML essentially.", "tokens": [50364, 467, 3417, 2531, 412, 1935, 13, 3146, 264, 636, 11, 983, 775, 264, 2699, 76, 24387, 9362, 362, 300, 24387, 2445, 30, 407, 291, 600, 658, 2699, 76, 24387, 13, 50814, 50814, 821, 366, 411, 257, 688, 295, 721, 281, 6964, 337, 341, 3500, 11, 457, 1564, 291, 483, 666, 264, 3095, 295, 1228, 309, 11, 309, 1177, 380, 841, 13373, 13, 51264, 51264, 583, 456, 366, 257, 688, 295, 10392, 281, 5366, 13, 407, 365, 2699, 76, 24387, 11, 309, 311, 257, 3270, 294, 14419, 337, 2699, 76, 17995, 4476, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09258616964022319, "compression_ratio": 1.5407725321888412, "no_caption_prob": 7.25389618310146e-05}, {"id": 134, "seek": 144100, "start": 1441.0, "end": 1458.0, "text": " It aims to be that plus then a superset with the added features. So then if you have like an anchor tag, if you have, you know, with Elm HTML, you would do an anchor tag with just a and then list of attributes and then list of children.", "tokens": [50364, 467, 24683, 281, 312, 300, 1804, 550, 257, 37906, 302, 365, 264, 3869, 4122, 13, 407, 550, 498, 291, 362, 411, 364, 18487, 6162, 11, 498, 291, 362, 11, 291, 458, 11, 365, 2699, 76, 17995, 11, 291, 576, 360, 364, 18487, 6162, 365, 445, 257, 293, 550, 1329, 295, 17212, 293, 550, 1329, 295, 2227, 13, 51214, 51214, 400, 264, 1329, 295, 17212, 11, 291, 393, 360, 17995, 17212, 5893, 276, 33115, 13, 400, 550, 291, 393, 909, 17995, 17212, 5893, 3758, 293, 291, 393, 909, 294, 1889, 13273, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11280543678685238, "compression_ratio": 1.9637305699481866, "no_caption_prob": 2.3186606995295733e-05}, {"id": 135, "seek": 144100, "start": 1458.0, "end": 1468.0, "text": " And the list of attributes, you can do HTML attributes dot href. And then you can add HTML attributes dot style and you can add inline styles.", "tokens": [50364, 467, 24683, 281, 312, 300, 1804, 550, 257, 37906, 302, 365, 264, 3869, 4122, 13, 407, 550, 498, 291, 362, 411, 364, 18487, 6162, 11, 498, 291, 362, 11, 291, 458, 11, 365, 2699, 76, 17995, 11, 291, 576, 360, 364, 18487, 6162, 365, 445, 257, 293, 550, 1329, 295, 17212, 293, 550, 1329, 295, 2227, 13, 51214, 51214, 400, 264, 1329, 295, 17212, 11, 291, 393, 360, 17995, 17212, 5893, 276, 33115, 13, 400, 550, 291, 393, 909, 17995, 17212, 5893, 3758, 293, 291, 393, 909, 294, 1889, 13273, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11280543678685238, "compression_ratio": 1.9637305699481866, "no_caption_prob": 2.3186606995295733e-05}, {"id": 136, "seek": 146800, "start": 1468.0, "end": 1479.0, "text": " So I guess Elm CSS, it would look exactly the same except your imports would be different. Instead of importing HTML, you import styles dot HTML as HTML or something like that.", "tokens": [50364, 407, 286, 2041, 2699, 76, 24387, 11, 309, 576, 574, 2293, 264, 912, 3993, 428, 41596, 576, 312, 819, 13, 7156, 295, 43866, 17995, 11, 291, 974, 13273, 5893, 17995, 382, 17995, 420, 746, 411, 300, 13, 50914, 50914, 400, 291, 920, 362, 257, 337, 264, 18487, 6162, 13, 509, 920, 362, 264, 1329, 295, 17212, 293, 264, 1329, 295, 2227, 13, 583, 586, 294, 264, 1329, 295, 17212, 11, 291, 393, 4090, 291, 393, 818, 264, 24387, 2445, 11, 597, 550, 2516, 257, 1329, 295, 13273, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07159459072610606, "compression_ratio": 1.7081545064377683, "no_caption_prob": 8.397823876293842e-06}, {"id": 137, "seek": 146800, "start": 1479.0, "end": 1492.0, "text": " And you still have a for the anchor tag. You still have the list of attributes and the list of children. But now in the list of attributes, you can include you can call the CSS function, which then takes a list of styles.", "tokens": [50364, 407, 286, 2041, 2699, 76, 24387, 11, 309, 576, 574, 2293, 264, 912, 3993, 428, 41596, 576, 312, 819, 13, 7156, 295, 43866, 17995, 11, 291, 974, 13273, 5893, 17995, 382, 17995, 420, 746, 411, 300, 13, 50914, 50914, 400, 291, 920, 362, 257, 337, 264, 18487, 6162, 13, 509, 920, 362, 264, 1329, 295, 17212, 293, 264, 1329, 295, 2227, 13, 583, 586, 294, 264, 1329, 295, 17212, 11, 291, 393, 4090, 291, 393, 818, 264, 24387, 2445, 11, 597, 550, 2516, 257, 1329, 295, 13273, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07159459072610606, "compression_ratio": 1.7081545064377683, "no_caption_prob": 8.397823876293842e-06}, {"id": 138, "seek": 149200, "start": 1492.0, "end": 1512.0, "text": " So I guess that would be like the alternative to doing HTML attributes dot style background read. You would do CSS list of CSS attributes and then you would do CSS dot background and then CSS dot RGB 25500 or something like that.", "tokens": [50364, 407, 286, 2041, 300, 576, 312, 411, 264, 8535, 281, 884, 17995, 17212, 5893, 3758, 3678, 1401, 13, 509, 576, 360, 24387, 1329, 295, 24387, 17212, 293, 550, 291, 576, 360, 24387, 5893, 3678, 293, 550, 24387, 5893, 31231, 3552, 7526, 420, 746, 411, 300, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10455551147460937, "compression_ratio": 1.4967320261437909, "no_caption_prob": 1.0129860129381996e-05}, {"id": 139, "seek": 151200, "start": 1512.0, "end": 1532.0, "text": " And the value of that is, again, not to have typo errors. Right. Right. The goal the goal of R.T. Feldman slash Elm CSS is to give you a drop in replacement library for Elm HTML that adds CSS styling utilities that give you a type safe API for doing CSS.", "tokens": [50364, 400, 264, 2158, 295, 300, 307, 11, 797, 11, 406, 281, 362, 2125, 78, 13603, 13, 1779, 13, 1779, 13, 440, 3387, 264, 3387, 295, 497, 13, 51, 13, 42677, 1601, 17330, 2699, 76, 24387, 307, 281, 976, 291, 257, 3270, 294, 14419, 6405, 337, 2699, 76, 17995, 300, 10860, 24387, 27944, 30482, 300, 976, 291, 257, 2010, 3273, 9362, 337, 884, 24387, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08210307710310992, "compression_ratio": 1.4597701149425288, "no_caption_prob": 1.3631064575747587e-05}, {"id": 140, "seek": 153200, "start": 1532.0, "end": 1544.0, "text": " It's not attempting to be, you know, giving you a simplified way of expressing things like Elm UI. It's just like you want to use CSS. Here's a type safe, high level Elm API for doing exactly CSS.", "tokens": [50364, 467, 311, 406, 22001, 281, 312, 11, 291, 458, 11, 2902, 291, 257, 26335, 636, 295, 22171, 721, 411, 2699, 76, 15682, 13, 467, 311, 445, 411, 291, 528, 281, 764, 24387, 13, 1692, 311, 257, 2010, 3273, 11, 1090, 1496, 2699, 76, 9362, 337, 884, 2293, 24387, 13, 50964, 50964, 467, 311, 406, 1382, 281, 1319, 577, 291, 4648, 365, 24387, 3993, 337, 1455, 309, 2010, 3273, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.06050200005100198, "compression_ratio": 1.4736842105263157, "no_caption_prob": 5.594253707386088e-06}, {"id": 141, "seek": 153200, "start": 1544.0, "end": 1549.0, "text": " It's not trying to change how you interact with CSS except for making it type safe.", "tokens": [50364, 467, 311, 406, 22001, 281, 312, 11, 291, 458, 11, 2902, 291, 257, 26335, 636, 295, 22171, 721, 411, 2699, 76, 15682, 13, 467, 311, 445, 411, 291, 528, 281, 764, 24387, 13, 1692, 311, 257, 2010, 3273, 11, 1090, 1496, 2699, 76, 9362, 337, 884, 2293, 24387, 13, 50964, 50964, 467, 311, 406, 1382, 281, 1319, 577, 291, 4648, 365, 24387, 3993, 337, 1455, 309, 2010, 3273, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.06050200005100198, "compression_ratio": 1.4736842105263157, "no_caption_prob": 5.594253707386088e-06}, {"id": 142, "seek": 154900, "start": 1549.0, "end": 1562.0, "text": " So then within that CSS attribute that you can you can include in your list of attributes, you can have a list of CSS styles to apply. Now you can you can use those because it's regular Elm CSS.", "tokens": [50364, 407, 550, 1951, 300, 24387, 19667, 300, 291, 393, 291, 393, 4090, 294, 428, 1329, 295, 17212, 11, 291, 393, 362, 257, 1329, 295, 24387, 13273, 281, 3079, 13, 823, 291, 393, 291, 393, 764, 729, 570, 309, 311, 3890, 2699, 76, 24387, 13, 51014, 51014, 583, 586, 291, 362, 613, 707, 10833, 21988, 490, 428, 490, 2699, 76, 6838, 12199, 16679, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08321313003995526, "compression_ratio": 1.6264367816091954, "no_caption_prob": 7.253971125464886e-05}, {"id": 143, "seek": 154900, "start": 1562.0, "end": 1569.0, "text": " But now you have these little generated definitions from your from Elm tailwind modules.", "tokens": [50364, 407, 550, 1951, 300, 24387, 19667, 300, 291, 393, 291, 393, 4090, 294, 428, 1329, 295, 17212, 11, 291, 393, 362, 257, 1329, 295, 24387, 13273, 281, 3079, 13, 823, 291, 393, 291, 393, 764, 729, 570, 309, 311, 3890, 2699, 76, 24387, 13, 51014, 51014, 583, 586, 291, 362, 613, 707, 10833, 21988, 490, 428, 490, 2699, 76, 6838, 12199, 16679, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08321313003995526, "compression_ratio": 1.6264367816091954, "no_caption_prob": 7.253971125464886e-05}, {"id": 144, "seek": 156900, "start": 1569.0, "end": 1583.0, "text": " So you can use the generated modules, which are tailwinds utilities and tailwind dot breakpoints. And those give you helper functions that you can use within that list of CSS Elm CSS styles.", "tokens": [50364, 407, 291, 393, 764, 264, 10833, 16679, 11, 597, 366, 6838, 12199, 82, 30482, 293, 6838, 12199, 5893, 1821, 20552, 13, 400, 729, 976, 291, 36133, 6828, 300, 291, 393, 764, 1951, 300, 1329, 295, 24387, 2699, 76, 24387, 13273, 13, 51064, 51064, 865, 11, 2293, 13, 400, 436, 434, 10199, 712, 11, 886, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.11745251639414642, "compression_ratio": 1.4268292682926829, "no_caption_prob": 7.141425157897174e-05}, {"id": 145, "seek": 156900, "start": 1583.0, "end": 1585.0, "text": " Yeah, exactly. And they're composable, too.", "tokens": [50364, 407, 291, 393, 764, 264, 10833, 16679, 11, 597, 366, 6838, 12199, 82, 30482, 293, 6838, 12199, 5893, 1821, 20552, 13, 400, 729, 976, 291, 36133, 6828, 300, 291, 393, 764, 1951, 300, 1329, 295, 24387, 2699, 76, 24387, 13273, 13, 51064, 51064, 865, 11, 2293, 13, 400, 436, 434, 10199, 712, 11, 886, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.11745251639414642, "compression_ratio": 1.4268292682926829, "no_caption_prob": 7.141425157897174e-05}, {"id": 146, "seek": 158500, "start": 1585.0, "end": 1599.0, "text": " So like what that would look like if you were saying in dark mode for a, you know, at the medium breakpoint, I want to have a blue background, then what that would look like is CSS.", "tokens": [50364, 407, 411, 437, 300, 576, 574, 411, 498, 291, 645, 1566, 294, 2877, 4391, 337, 257, 11, 291, 458, 11, 412, 264, 6399, 1821, 6053, 11, 286, 528, 281, 362, 257, 3344, 3678, 11, 550, 437, 300, 576, 574, 411, 307, 24387, 13, 51064, 51064], "temperature": 0.0, "avg_logprob": -0.08026727209699915, "compression_ratio": 1.448, "no_caption_prob": 6.401709833880886e-05}, {"id": 147, "seek": 159900, "start": 1599.0, "end": 1617.0, "text": " And it's a list of Elm CSS attributes. And then you would say dark, and then you give a list of dark attributes. And then you would say tailwind dot utilities dot or no sorry, tailwind dot breakpoints dot medium, or dot MD.", "tokens": [50364, 400, 309, 311, 257, 1329, 295, 2699, 76, 24387, 17212, 13, 400, 550, 291, 576, 584, 2877, 11, 293, 550, 291, 976, 257, 1329, 295, 2877, 17212, 13, 400, 550, 291, 576, 584, 6838, 12199, 5893, 30482, 5893, 420, 572, 2597, 11, 6838, 12199, 5893, 1821, 20552, 5893, 6399, 11, 420, 5893, 22521, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.11306050728107321, "compression_ratio": 1.6893939393939394, "no_caption_prob": 1.3211723853601143e-05}, {"id": 148, "seek": 161700, "start": 1617.0, "end": 1633.0, "text": " And you'd give a list of things for that, which it sounds like overwhelming that it's a list of lists of lists. But really, it's just this composable thing, which is really what tailwind is attempting to emulate is the experience of composing together these different utilities.", "tokens": [50364, 400, 291, 1116, 976, 257, 1329, 295, 721, 337, 300, 11, 597, 309, 3263, 411, 13373, 300, 309, 311, 257, 1329, 295, 14511, 295, 14511, 13, 583, 534, 11, 309, 311, 445, 341, 10199, 712, 551, 11, 597, 307, 534, 437, 6838, 12199, 307, 22001, 281, 45497, 307, 264, 1752, 295, 715, 6110, 1214, 613, 819, 30482, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.04500767107932798, "compression_ratio": 1.6162790697674418, "no_caption_prob": 3.882974124280736e-05}, {"id": 149, "seek": 163300, "start": 1633.0, "end": 1653.0, "text": " And it does that by a combinatoric explosion of every permutation being generated as a CSS class. But this is actually the ideal that it's striving to emulate, which is, it's just functions. And you can, and since it's composable, you can now do programmatic things with that where you, you can kind of pass around things and compose them together through code,", "tokens": [50364, 400, 309, 775, 300, 538, 257, 2512, 31927, 299, 15673, 295, 633, 4784, 11380, 885, 10833, 382, 257, 24387, 1508, 13, 583, 341, 307, 767, 264, 7157, 300, 309, 311, 36582, 281, 45497, 11, 597, 307, 11, 309, 311, 445, 6828, 13, 400, 291, 393, 11, 293, 1670, 309, 311, 10199, 712, 11, 291, 393, 586, 360, 1461, 25915, 721, 365, 300, 689, 291, 11, 291, 393, 733, 295, 1320, 926, 721, 293, 35925, 552, 1214, 807, 3089, 11, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08474762468452914, "compression_ratio": 1.5903083700440528, "no_caption_prob": 4.637857728084782e-06}, {"id": 150, "seek": 165300, "start": 1653.0, "end": 1681.0, "text": " or abstract them or make your own small definitions for the group or a list of CSS you want to apply. For example, I have this uppercase button style in my project that I reuse. Yeah. And where you would before use some special CSS syntax that is added by tailwind in using post CSS, you can now use Elm definitions and have your type save code back.", "tokens": [50364, 420, 12649, 552, 420, 652, 428, 1065, 1359, 21988, 337, 264, 1594, 420, 257, 1329, 295, 24387, 291, 528, 281, 3079, 13, 1171, 1365, 11, 286, 362, 341, 11775, 2869, 651, 2960, 3758, 294, 452, 1716, 300, 286, 26225, 13, 865, 13, 400, 689, 291, 576, 949, 764, 512, 2121, 24387, 28431, 300, 307, 3869, 538, 6838, 12199, 294, 1228, 2183, 24387, 11, 291, 393, 586, 764, 2699, 76, 21988, 293, 362, 428, 2010, 3155, 3089, 646, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11504858296091963, "compression_ratio": 1.5283842794759825, "no_caption_prob": 8.139643796312157e-06}, {"id": 151, "seek": 168100, "start": 1681.0, "end": 1687.0, "text": " Let me just get this straight. So Justin and Monty, whose name is actually Dean.", "tokens": [50364, 961, 385, 445, 483, 341, 2997, 13, 407, 11320, 293, 4713, 874, 11, 6104, 1315, 307, 767, 13324, 13, 50664, 50664, 286, 519, 370, 11, 2086, 13, 50714, 50714, 865, 13, 407, 11320, 293, 13324, 311, 3827, 645, 281, 8460, 6828, 300, 419, 4609, 264, 6838, 12199, 5359, 13, 583, 1670, 11, 1338, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.14927142241905475, "compression_ratio": 1.4189189189189189, "no_caption_prob": 2.9772272682748735e-05}, {"id": 152, "seek": 168100, "start": 1687.0, "end": 1688.0, "text": " I think so, yes.", "tokens": [50364, 961, 385, 445, 483, 341, 2997, 13, 407, 11320, 293, 4713, 874, 11, 6104, 1315, 307, 767, 13324, 13, 50664, 50664, 286, 519, 370, 11, 2086, 13, 50714, 50714, 865, 13, 407, 11320, 293, 13324, 311, 3827, 645, 281, 8460, 6828, 300, 419, 4609, 264, 6838, 12199, 5359, 13, 583, 1670, 11, 1338, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.14927142241905475, "compression_ratio": 1.4189189189189189, "no_caption_prob": 2.9772272682748735e-05}, {"id": 153, "seek": 168100, "start": 1688.0, "end": 1698.0, "text": " Yeah. So Justin and Dean's solution were to generate functions that alias the tailwind classes. But since, yeah.", "tokens": [50364, 961, 385, 445, 483, 341, 2997, 13, 407, 11320, 293, 4713, 874, 11, 6104, 1315, 307, 767, 13324, 13, 50664, 50664, 286, 519, 370, 11, 2086, 13, 50714, 50714, 865, 13, 407, 11320, 293, 13324, 311, 3827, 645, 281, 8460, 6828, 300, 419, 4609, 264, 6838, 12199, 5359, 13, 583, 1670, 11, 1338, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.14927142241905475, "compression_ratio": 1.4189189189189189, "no_caption_prob": 2.9772272682748735e-05}, {"id": 154, "seek": 169800, "start": 1698.0, "end": 1723.0, "text": " No, no, no, not quite. It's the case for Monty's project, but it wasn't the case for Justin's project. Justin already didn't only alias the definitions, but kind of like inlined the styles. So it was actually generating, for example, mx underscore auto equals, and then CSS dot batch of margin left something auto and margin right auto, for example.", "tokens": [50364, 883, 11, 572, 11, 572, 11, 406, 1596, 13, 467, 311, 264, 1389, 337, 4713, 874, 311, 1716, 11, 457, 309, 2067, 380, 264, 1389, 337, 11320, 311, 1716, 13, 11320, 1217, 994, 380, 787, 419, 4609, 264, 21988, 11, 457, 733, 295, 411, 294, 13564, 264, 13273, 13, 407, 309, 390, 767, 17746, 11, 337, 1365, 11, 275, 87, 37556, 8399, 6915, 11, 293, 550, 24387, 5893, 15245, 295, 10270, 1411, 746, 8399, 293, 10270, 558, 8399, 11, 337, 1365, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12512089485345884, "compression_ratio": 1.6384976525821595, "no_caption_prob": 2.5071338313864544e-05}, {"id": 155, "seek": 172300, "start": 1723.0, "end": 1743.0, "text": " Yeah, because he was also targeting Elm CSS. So with Elm CSS, use the CSS function, which takes styles, which does not take classes. So if you want to pass in tailwind utilities to that, you need to have them translated to properties, right? So that's what you generate with your project.", "tokens": [50364, 865, 11, 570, 415, 390, 611, 17918, 2699, 76, 24387, 13, 407, 365, 2699, 76, 24387, 11, 764, 264, 24387, 2445, 11, 597, 2516, 13273, 11, 597, 775, 406, 747, 5359, 13, 407, 498, 291, 528, 281, 1320, 294, 6838, 12199, 30482, 281, 300, 11, 291, 643, 281, 362, 552, 16805, 281, 7221, 11, 558, 30, 407, 300, 311, 437, 291, 8460, 365, 428, 1716, 13, 51364, 51364, 400, 437, 11320, 611, 630, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.12067470795068985, "compression_ratio": 1.5467980295566504, "no_caption_prob": 0.000166013662237674}, {"id": 156, "seek": 172300, "start": 1743.0, "end": 1744.0, "text": " And what Justin also did.", "tokens": [50364, 865, 11, 570, 415, 390, 611, 17918, 2699, 76, 24387, 13, 407, 365, 2699, 76, 24387, 11, 764, 264, 24387, 2445, 11, 597, 2516, 13273, 11, 597, 775, 406, 747, 5359, 13, 407, 498, 291, 528, 281, 1320, 294, 6838, 12199, 30482, 281, 300, 11, 291, 643, 281, 362, 552, 16805, 281, 7221, 11, 558, 30, 407, 300, 311, 437, 291, 8460, 365, 428, 1716, 13, 51364, 51364, 400, 437, 11320, 611, 630, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.12067470795068985, "compression_ratio": 1.5467980295566504, "no_caption_prob": 0.000166013662237674}, {"id": 157, "seek": 174400, "start": 1744.0, "end": 1761.0, "text": " Yes. So my project is in the idea the same as Justin's. I just picked up the project and actually his code base, modified it, improved it and added to it until I felt it was ready for some of my projects I wanted to use.", "tokens": [50364, 1079, 13, 407, 452, 1716, 307, 294, 264, 1558, 264, 912, 382, 11320, 311, 13, 286, 445, 6183, 493, 264, 1716, 293, 767, 702, 3089, 3096, 11, 15873, 309, 11, 9689, 309, 293, 3869, 281, 309, 1826, 286, 2762, 309, 390, 1919, 337, 512, 295, 452, 4455, 286, 1415, 281, 764, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.11219614744186401, "compression_ratio": 1.4666666666666666, "no_caption_prob": 1.834241447795648e-05}, {"id": 158, "seek": 176100, "start": 1761.0, "end": 1779.0, "text": " So we mentioned before that tailwind uses purged CSS to do dead code elimination. So what it did was, as Dylan said, use a regex to find all CSS classes in your code base, which may have some false positives, false negatives, I guess.", "tokens": [50364, 407, 321, 2835, 949, 300, 6838, 12199, 4960, 1864, 3004, 24387, 281, 360, 3116, 3089, 29224, 13, 407, 437, 309, 630, 390, 11, 382, 28160, 848, 11, 764, 257, 319, 432, 87, 281, 915, 439, 24387, 5359, 294, 428, 3089, 3096, 11, 597, 815, 362, 512, 7908, 35127, 11, 7908, 40019, 11, 286, 2041, 13, 51264, 51264, 3802, 11, 500, 380, 319, 432, 47047, 445, 589, 6239, 633, 565, 293, 1128, 362, 604, 2663, 30, 51464, 51464, 1042, 11, 1338, 11, 3993, 365, 2125, 329, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0967318852742513, "compression_ratio": 1.5244444444444445, "no_caption_prob": 0.00010720364662120119}, {"id": 159, "seek": 176100, "start": 1779.0, "end": 1783.0, "text": " Wait, don't regexes just work perfectly every time and never have any issues?", "tokens": [50364, 407, 321, 2835, 949, 300, 6838, 12199, 4960, 1864, 3004, 24387, 281, 360, 3116, 3089, 29224, 13, 407, 437, 309, 630, 390, 11, 382, 28160, 848, 11, 764, 257, 319, 432, 87, 281, 915, 439, 24387, 5359, 294, 428, 3089, 3096, 11, 597, 815, 362, 512, 7908, 35127, 11, 7908, 40019, 11, 286, 2041, 13, 51264, 51264, 3802, 11, 500, 380, 319, 432, 47047, 445, 589, 6239, 633, 565, 293, 1128, 362, 604, 2663, 30, 51464, 51464, 1042, 11, 1338, 11, 3993, 365, 2125, 329, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0967318852742513, "compression_ratio": 1.5244444444444445, "no_caption_prob": 0.00010720364662120119}, {"id": 160, "seek": 176100, "start": 1783.0, "end": 1789.0, "text": " Well, yeah, except with typos.", "tokens": [50364, 407, 321, 2835, 949, 300, 6838, 12199, 4960, 1864, 3004, 24387, 281, 360, 3116, 3089, 29224, 13, 407, 437, 309, 630, 390, 11, 382, 28160, 848, 11, 764, 257, 319, 432, 87, 281, 915, 439, 24387, 5359, 294, 428, 3089, 3096, 11, 597, 815, 362, 512, 7908, 35127, 11, 7908, 40019, 11, 286, 2041, 13, 51264, 51264, 3802, 11, 500, 380, 319, 432, 47047, 445, 589, 6239, 633, 565, 293, 1128, 362, 604, 2663, 30, 51464, 51464, 1042, 11, 1338, 11, 3993, 365, 2125, 329, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0967318852742513, "compression_ratio": 1.5244444444444445, "no_caption_prob": 0.00010720364662120119}, {"id": 161, "seek": 178900, "start": 1789.0, "end": 1809.0, "text": " I guess it can be both. Yeah, there's like the issue of what if you use some code to generate a class name. So what if you were doing the kind of abstraction of, yeah, I don't want to write this color name like this. I want to abstract my, I guess, color from my border radius, border color.", "tokens": [50364, 286, 2041, 309, 393, 312, 1293, 13, 865, 11, 456, 311, 411, 264, 2734, 295, 437, 498, 291, 764, 512, 3089, 281, 8460, 257, 1508, 1315, 13, 407, 437, 498, 291, 645, 884, 264, 733, 295, 37765, 295, 11, 1338, 11, 286, 500, 380, 528, 281, 2464, 341, 2017, 1315, 411, 341, 13, 286, 528, 281, 12649, 452, 11, 286, 2041, 11, 2017, 490, 452, 7838, 15845, 11, 7838, 2017, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.11103290557861328, "compression_ratio": 1.6256983240223464, "no_caption_prob": 3.071767059736885e-05}, {"id": 162, "seek": 180900, "start": 1809.0, "end": 1823.0, "text": " And you split up your strings. Exactly. If you split a string, your string won't be found by purged CSS and some classes will go missing and they won't be included in your production build.", "tokens": [50364, 400, 291, 7472, 493, 428, 13985, 13, 7587, 13, 759, 291, 7472, 257, 6798, 11, 428, 6798, 1582, 380, 312, 1352, 538, 1864, 3004, 24387, 293, 512, 5359, 486, 352, 5361, 293, 436, 1582, 380, 312, 5556, 294, 428, 4265, 1322, 13, 51064, 51064, 663, 1062, 312, 1152, 281, 24083, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.14824255163019354, "compression_ratio": 1.4630872483221478, "no_caption_prob": 1.9525561583577655e-05}, {"id": 163, "seek": 180900, "start": 1823.0, "end": 1825.0, "text": " That might be hard to debug.", "tokens": [50364, 400, 291, 7472, 493, 428, 13985, 13, 7587, 13, 759, 291, 7472, 257, 6798, 11, 428, 6798, 1582, 380, 312, 1352, 538, 1864, 3004, 24387, 293, 512, 5359, 486, 352, 5361, 293, 436, 1582, 380, 312, 5556, 294, 428, 4265, 1322, 13, 51064, 51064, 663, 1062, 312, 1152, 281, 24083, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.14824255163019354, "compression_ratio": 1.4630872483221478, "no_caption_prob": 1.9525561583577655e-05}, {"id": 164, "seek": 182500, "start": 1825.0, "end": 1843.0, "text": " Which, as you said, it's actually desirable in many cases to programmatically create like a composable way of defining something. And so you actually that's not purged CSS friendly. So having an actual generated programmatic API for this is really desirable.", "tokens": [50364, 3013, 11, 382, 291, 848, 11, 309, 311, 767, 30533, 294, 867, 3331, 281, 37648, 5030, 1884, 411, 257, 10199, 712, 636, 295, 17827, 746, 13, 400, 370, 291, 767, 300, 311, 406, 1864, 3004, 24387, 9208, 13, 407, 1419, 364, 3539, 10833, 1461, 25915, 9362, 337, 341, 307, 534, 30533, 13, 51264, 51264, 759, 291, 500, 380, 528, 281, 1864, 432, 24387, 11, 264, 1874, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.10380878582806655, "compression_ratio": 1.5252525252525253, "no_caption_prob": 7.602263212902471e-05}, {"id": 165, "seek": 182500, "start": 1843.0, "end": 1846.0, "text": " If you don't want to purge CSS, the result.", "tokens": [50364, 3013, 11, 382, 291, 848, 11, 309, 311, 767, 30533, 294, 867, 3331, 281, 37648, 5030, 1884, 411, 257, 10199, 712, 636, 295, 17827, 746, 13, 400, 370, 291, 767, 300, 311, 406, 1864, 3004, 24387, 9208, 13, 407, 1419, 364, 3539, 10833, 1461, 25915, 9362, 337, 341, 307, 534, 30533, 13, 51264, 51264, 759, 291, 500, 380, 528, 281, 1864, 432, 24387, 11, 264, 1874, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.10380878582806655, "compression_ratio": 1.5252525252525253, "no_caption_prob": 7.602263212902471e-05}, {"id": 166, "seek": 184600, "start": 1846.0, "end": 1856.0, "text": " You essentially have to. I think it's like over a megabyte. The default generated tailwind CSS asset, I think it's over a megabyte, maybe even several megabytes.", "tokens": [50364, 509, 4476, 362, 281, 13, 286, 519, 309, 311, 411, 670, 257, 10816, 34529, 13, 440, 7576, 10833, 6838, 12199, 24387, 11999, 11, 286, 519, 309, 311, 670, 257, 10816, 34529, 11, 1310, 754, 2940, 10816, 24538, 13, 50864, 50864, 286, 519, 291, 2661, 483, 294, 264, 10816, 34529, 3613, 498, 291, 362, 264, 1629, 21669, 15172, 293, 2877, 4391, 293, 1507, 411, 300, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.09206574205039204, "compression_ratio": 1.6079545454545454, "no_caption_prob": 0.00010554162145126611}, {"id": 167, "seek": 184600, "start": 1856.0, "end": 1864.0, "text": " I think you quickly get in the megabyte range if you have the certain variants enabled and dark mode and stuff like that.", "tokens": [50364, 509, 4476, 362, 281, 13, 286, 519, 309, 311, 411, 670, 257, 10816, 34529, 13, 440, 7576, 10833, 6838, 12199, 24387, 11999, 11, 286, 519, 309, 311, 670, 257, 10816, 34529, 11, 1310, 754, 2940, 10816, 24538, 13, 50864, 50864, 286, 519, 291, 2661, 483, 294, 264, 10816, 34529, 3613, 498, 291, 362, 264, 1629, 21669, 15172, 293, 2877, 4391, 293, 1507, 411, 300, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.09206574205039204, "compression_ratio": 1.6079545454545454, "no_caption_prob": 0.00010554162145126611}, {"id": 168, "seek": 186400, "start": 1864.0, "end": 1878.0, "text": " Because if you add dark mode, now it's applying something for every other class that existed. So it literally just doubles the classes. So if you had one megabyte, now it's two megabytes. Of course, minification might reduce that.", "tokens": [50364, 1436, 498, 291, 909, 2877, 4391, 11, 586, 309, 311, 9275, 746, 337, 633, 661, 1508, 300, 13135, 13, 407, 309, 3736, 445, 31634, 264, 5359, 13, 407, 498, 291, 632, 472, 10816, 34529, 11, 586, 309, 311, 732, 10816, 24538, 13, 2720, 1164, 11, 923, 3774, 1062, 5407, 300, 13, 51064, 51064], "temperature": 0.0, "avg_logprob": -0.07636950232765892, "compression_ratio": 1.4375, "no_caption_prob": 3.822733924607746e-05}, {"id": 169, "seek": 187800, "start": 1878.0, "end": 1894.0, "text": " But even so, minification, even if it's minified and the minified asset is not twice as big strictly, you still have to parse and interpret all of those CSS classes once you've decompressed it. Plus, you have to actually decompress it.", "tokens": [50364, 583, 754, 370, 11, 923, 3774, 11, 754, 498, 309, 311, 923, 2587, 293, 264, 923, 2587, 11999, 307, 406, 6091, 382, 955, 20792, 11, 291, 920, 362, 281, 48377, 293, 7302, 439, 295, 729, 24387, 5359, 1564, 291, 600, 22867, 3805, 309, 13, 7721, 11, 291, 362, 281, 767, 22867, 735, 309, 13, 51164, 51164, 407, 309, 311, 257, 688, 295, 589, 337, 264, 11185, 2848, 281, 360, 300, 291, 528, 281, 5042, 13, 23596, 11, 286, 576, 584, 309, 311, 4818, 281, 1864, 432, 24387, 365, 17528, 6838, 12199, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06612398723761241, "compression_ratio": 1.6495726495726495, "no_caption_prob": 3.024152829311788e-05}, {"id": 170, "seek": 187800, "start": 1894.0, "end": 1904.0, "text": " So it's a lot of work for the browser engine to do that you want to avoid. Essentially, I would say it's necessary to purge CSS with vanilla tailwind.", "tokens": [50364, 583, 754, 370, 11, 923, 3774, 11, 754, 498, 309, 311, 923, 2587, 293, 264, 923, 2587, 11999, 307, 406, 6091, 382, 955, 20792, 11, 291, 920, 362, 281, 48377, 293, 7302, 439, 295, 729, 24387, 5359, 1564, 291, 600, 22867, 3805, 309, 13, 7721, 11, 291, 362, 281, 767, 22867, 735, 309, 13, 51164, 51164, 407, 309, 311, 257, 688, 295, 589, 337, 264, 11185, 2848, 281, 360, 300, 291, 528, 281, 5042, 13, 23596, 11, 286, 576, 584, 309, 311, 4818, 281, 1864, 432, 24387, 365, 17528, 6838, 12199, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06612398723761241, "compression_ratio": 1.6495726495726495, "no_caption_prob": 3.024152829311788e-05}, {"id": 171, "seek": 190400, "start": 1904.0, "end": 1908.0, "text": " But I mean, you can't use purge CSS if you do that concatenation.", "tokens": [50364, 583, 286, 914, 11, 291, 393, 380, 764, 1864, 432, 24387, 498, 291, 360, 300, 1588, 7186, 399, 13, 50564, 50564, 1079, 13, 50614, 50614, 2754, 445, 498, 291, 500, 380, 360, 1864, 432, 24387, 11, 498, 291, 528, 1803, 281, 915, 264, 24387, 5359, 300, 291, 500, 380, 764, 3602, 294, 428, 2699, 76, 3089, 11, 445, 5006, 552, 16945, 294, 428, 9839, 11, 300, 3643, 257, 1154, 13, 682, 428, 1389, 11, 291, 500, 380, 643, 281, 360, 300, 3602, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.06858288556679912, "compression_ratio": 1.701086956521739, "no_caption_prob": 2.1112075046403334e-05}, {"id": 172, "seek": 190400, "start": 1908.0, "end": 1909.0, "text": " Yes.", "tokens": [50364, 583, 286, 914, 11, 291, 393, 380, 764, 1864, 432, 24387, 498, 291, 360, 300, 1588, 7186, 399, 13, 50564, 50564, 1079, 13, 50614, 50614, 2754, 445, 498, 291, 500, 380, 360, 1864, 432, 24387, 11, 498, 291, 528, 1803, 281, 915, 264, 24387, 5359, 300, 291, 500, 380, 764, 3602, 294, 428, 2699, 76, 3089, 11, 445, 5006, 552, 16945, 294, 428, 9839, 11, 300, 3643, 257, 1154, 13, 682, 428, 1389, 11, 291, 500, 380, 643, 281, 360, 300, 3602, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.06858288556679912, "compression_ratio": 1.701086956521739, "no_caption_prob": 2.1112075046403334e-05}, {"id": 173, "seek": 190400, "start": 1909.0, "end": 1924.0, "text": " Even just if you don't do purge CSS, if you want yourself to find the CSS classes that you don't use anymore in your Elm code, just finding them manually in your editor, that becomes a problem. In your case, you don't need to do that anymore.", "tokens": [50364, 583, 286, 914, 11, 291, 393, 380, 764, 1864, 432, 24387, 498, 291, 360, 300, 1588, 7186, 399, 13, 50564, 50564, 1079, 13, 50614, 50614, 2754, 445, 498, 291, 500, 380, 360, 1864, 432, 24387, 11, 498, 291, 528, 1803, 281, 915, 264, 24387, 5359, 300, 291, 500, 380, 764, 3602, 294, 428, 2699, 76, 3089, 11, 445, 5006, 552, 16945, 294, 428, 9839, 11, 300, 3643, 257, 1154, 13, 682, 428, 1389, 11, 291, 500, 380, 643, 281, 360, 300, 3602, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.06858288556679912, "compression_ratio": 1.701086956521739, "no_caption_prob": 2.1112075046403334e-05}, {"id": 174, "seek": 192400, "start": 1924.0, "end": 1934.0, "text": " Yes. So right now, we don't generate any more CSS files, or at least it is possible to do this without generating CSS files, or that maybe later.", "tokens": [50364, 1079, 13, 407, 558, 586, 11, 321, 500, 380, 8460, 604, 544, 24387, 7098, 11, 420, 412, 1935, 309, 307, 1944, 281, 360, 341, 1553, 17746, 24387, 7098, 11, 420, 300, 1310, 1780, 13, 50864, 50864, 400, 291, 393, 10687, 322, 445, 428, 2699, 76, 3089, 293, 264, 2699, 76, 31958, 294, 1261, 365, 264, 3175, 3175, 19719, 7166, 486, 4159, 633, 2445, 300, 393, 380, 312, 1219, 420, 1582, 380, 312, 1219, 538, 428, 2699, 76, 1461, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.12290029640657356, "compression_ratio": 1.5924170616113744, "no_caption_prob": 1.6187301298487e-05}, {"id": 175, "seek": 192400, "start": 1934.0, "end": 1948.0, "text": " And you can rely on just your Elm code and the Elm compiler in turn with the minus minus optimize flag will remove every function that can't be called or won't be called by your Elm program.", "tokens": [50364, 1079, 13, 407, 558, 586, 11, 321, 500, 380, 8460, 604, 544, 24387, 7098, 11, 420, 412, 1935, 309, 307, 1944, 281, 360, 341, 1553, 17746, 24387, 7098, 11, 420, 300, 1310, 1780, 13, 50864, 50864, 400, 291, 393, 10687, 322, 445, 428, 2699, 76, 3089, 293, 264, 2699, 76, 31958, 294, 1261, 365, 264, 3175, 3175, 19719, 7166, 486, 4159, 633, 2445, 300, 393, 380, 312, 1219, 420, 1582, 380, 312, 1219, 538, 428, 2699, 76, 1461, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.12290029640657356, "compression_ratio": 1.5924170616113744, "no_caption_prob": 1.6187301298487e-05}, {"id": 176, "seek": 194800, "start": 1948.0, "end": 1960.0, "text": " So it does that code elimination and all of the classes you won't use in your Elm app, they won't appear in your generated Elm code because Elm figures out their dead code.", "tokens": [50364, 407, 309, 775, 300, 3089, 29224, 293, 439, 295, 264, 5359, 291, 1582, 380, 764, 294, 428, 2699, 76, 724, 11, 436, 1582, 380, 4204, 294, 428, 10833, 2699, 76, 3089, 570, 2699, 76, 9624, 484, 641, 3116, 3089, 13, 50964, 50964, 865, 11, 1338, 11, 300, 311, 534, 13494, 13, 286, 959, 577, 300, 1715, 439, 445, 733, 295, 1985, 484, 13, 51214, 51214, 286, 500, 380, 1604, 13, 1119, 309, 264, 2699, 76, 31958, 300, 30445, 729, 6828, 420, 307, 309, 264, 923, 9902, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.11074353312398051, "compression_ratio": 1.5981735159817352, "no_caption_prob": 3.5912118619307876e-05}, {"id": 177, "seek": 194800, "start": 1960.0, "end": 1965.0, "text": " Yeah, yeah, that's really clever. I love how that design all just kind of works out.", "tokens": [50364, 407, 309, 775, 300, 3089, 29224, 293, 439, 295, 264, 5359, 291, 1582, 380, 764, 294, 428, 2699, 76, 724, 11, 436, 1582, 380, 4204, 294, 428, 10833, 2699, 76, 3089, 570, 2699, 76, 9624, 484, 641, 3116, 3089, 13, 50964, 50964, 865, 11, 1338, 11, 300, 311, 534, 13494, 13, 286, 959, 577, 300, 1715, 439, 445, 733, 295, 1985, 484, 13, 51214, 51214, 286, 500, 380, 1604, 13, 1119, 309, 264, 2699, 76, 31958, 300, 30445, 729, 6828, 420, 307, 309, 264, 923, 9902, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.11074353312398051, "compression_ratio": 1.5981735159817352, "no_caption_prob": 3.5912118619307876e-05}, {"id": 178, "seek": 194800, "start": 1965.0, "end": 1970.0, "text": " I don't remember. Is it the Elm compiler that removes those functions or is it the minifier?", "tokens": [50364, 407, 309, 775, 300, 3089, 29224, 293, 439, 295, 264, 5359, 291, 1582, 380, 764, 294, 428, 2699, 76, 724, 11, 436, 1582, 380, 4204, 294, 428, 10833, 2699, 76, 3089, 570, 2699, 76, 9624, 484, 641, 3116, 3089, 13, 50964, 50964, 865, 11, 1338, 11, 300, 311, 534, 13494, 13, 286, 959, 577, 300, 1715, 439, 445, 733, 295, 1985, 484, 13, 51214, 51214, 286, 500, 380, 1604, 13, 1119, 309, 264, 2699, 76, 31958, 300, 30445, 729, 6828, 420, 307, 309, 264, 923, 9902, 30, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.11074353312398051, "compression_ratio": 1.5981735159817352, "no_caption_prob": 3.5912118619307876e-05}, {"id": 179, "seek": 197000, "start": 1970.0, "end": 1982.0, "text": " It's actually the Elm compiler. So what the Elm compiler does is just take your main function and look at all of the functions that are referenced by the main function, and then in turn, look at all the functions referenced by them.", "tokens": [50364, 467, 311, 767, 264, 2699, 76, 31958, 13, 407, 437, 264, 2699, 76, 31958, 775, 307, 445, 747, 428, 2135, 2445, 293, 574, 412, 439, 295, 264, 6828, 300, 366, 32734, 538, 264, 2135, 2445, 11, 293, 550, 294, 1261, 11, 574, 412, 439, 264, 6828, 32734, 538, 552, 13, 50964, 50964, 407, 309, 1936, 445, 293, 309, 2516, 552, 293, 5974, 552, 294, 264, 10833, 24438, 13, 7156, 295, 411, 12720, 1507, 11, 309, 445, 2516, 1203, 300, 307, 2524, 712, 3089, 293, 35592, 309, 293, 715, 4680, 309, 13, 51614, 51614, 865, 11, 309, 1177, 380, 13819, 3089, 13, 467, 445, 16982, 787, 437, 309, 2203, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07862575497247476, "compression_ratio": 1.9003831417624522, "no_caption_prob": 5.7386034313822165e-05}, {"id": 180, "seek": 197000, "start": 1982.0, "end": 1995.0, "text": " So it basically just and it takes them and includes them in the generated bundle. Instead of like removing stuff, it just takes everything that is reachable code and transforms it and compiles it.", "tokens": [50364, 467, 311, 767, 264, 2699, 76, 31958, 13, 407, 437, 264, 2699, 76, 31958, 775, 307, 445, 747, 428, 2135, 2445, 293, 574, 412, 439, 295, 264, 6828, 300, 366, 32734, 538, 264, 2135, 2445, 11, 293, 550, 294, 1261, 11, 574, 412, 439, 264, 6828, 32734, 538, 552, 13, 50964, 50964, 407, 309, 1936, 445, 293, 309, 2516, 552, 293, 5974, 552, 294, 264, 10833, 24438, 13, 7156, 295, 411, 12720, 1507, 11, 309, 445, 2516, 1203, 300, 307, 2524, 712, 3089, 293, 35592, 309, 293, 715, 4680, 309, 13, 51614, 51614, 865, 11, 309, 1177, 380, 13819, 3089, 13, 467, 445, 16982, 787, 437, 309, 2203, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07862575497247476, "compression_ratio": 1.9003831417624522, "no_caption_prob": 5.7386034313822165e-05}, {"id": 181, "seek": 197000, "start": 1995.0, "end": 1999.0, "text": " Yeah, it doesn't eliminate code. It just pulls only what it needs.", "tokens": [50364, 467, 311, 767, 264, 2699, 76, 31958, 13, 407, 437, 264, 2699, 76, 31958, 775, 307, 445, 747, 428, 2135, 2445, 293, 574, 412, 439, 295, 264, 6828, 300, 366, 32734, 538, 264, 2135, 2445, 11, 293, 550, 294, 1261, 11, 574, 412, 439, 264, 6828, 32734, 538, 552, 13, 50964, 50964, 407, 309, 1936, 445, 293, 309, 2516, 552, 293, 5974, 552, 294, 264, 10833, 24438, 13, 7156, 295, 411, 12720, 1507, 11, 309, 445, 2516, 1203, 300, 307, 2524, 712, 3089, 293, 35592, 309, 293, 715, 4680, 309, 13, 51614, 51614, 865, 11, 309, 1177, 380, 13819, 3089, 13, 467, 445, 16982, 787, 437, 309, 2203, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07862575497247476, "compression_ratio": 1.9003831417624522, "no_caption_prob": 5.7386034313822165e-05}, {"id": 182, "seek": 199900, "start": 1999.0, "end": 2009.0, "text": " Also, the number of like the amount of code that's being generated is not a combinatoric explosion because the code you're generating is these composable helpers.", "tokens": [50364, 2743, 11, 264, 1230, 295, 411, 264, 2372, 295, 3089, 300, 311, 885, 10833, 307, 406, 257, 2512, 31927, 299, 15673, 570, 264, 3089, 291, 434, 17746, 307, 613, 10199, 712, 854, 433, 13, 50864, 50864, 407, 309, 311, 406, 300, 337, 1184, 17501, 295, 2877, 4391, 11, 291, 643, 281, 8460, 257, 1508, 337, 1184, 17501, 295, 1821, 6053, 293, 337, 1184, 17501, 1951, 300, 295, 2017, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06838935042080814, "compression_ratio": 1.691891891891892, "no_caption_prob": 5.828701250720769e-05}, {"id": 183, "seek": 199900, "start": 2009.0, "end": 2022.0, "text": " So it's not that for each variant of dark mode, you need to generate a class for each variant of breakpoint and for each variant within that of color.", "tokens": [50364, 2743, 11, 264, 1230, 295, 411, 264, 2372, 295, 3089, 300, 311, 885, 10833, 307, 406, 257, 2512, 31927, 299, 15673, 570, 264, 3089, 291, 434, 17746, 307, 613, 10199, 712, 854, 433, 13, 50864, 50864, 407, 309, 311, 406, 300, 337, 1184, 17501, 295, 2877, 4391, 11, 291, 643, 281, 8460, 257, 1508, 337, 1184, 17501, 295, 1821, 6053, 293, 337, 1184, 17501, 1951, 300, 295, 2017, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06838935042080814, "compression_ratio": 1.691891891891892, "no_caption_prob": 5.828701250720769e-05}, {"id": 184, "seek": 202200, "start": 2022.0, "end": 2039.0, "text": " You actually just generate a function, you know, tailwind.breakpoints.md, tailwind.breakpoints.sm, and those are generating functions that compose together and apply the media queries for those breakpoints, which is really, really cool.", "tokens": [50364, 509, 767, 445, 8460, 257, 2445, 11, 291, 458, 11, 6838, 12199, 13, 13225, 20552, 13, 76, 67, 11, 6838, 12199, 13, 13225, 20552, 13, 10817, 11, 293, 729, 366, 17746, 6828, 300, 35925, 1214, 293, 3079, 264, 3021, 24109, 337, 729, 1821, 20552, 11, 597, 307, 534, 11, 534, 1627, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.09570250340870448, "compression_ratio": 1.6054421768707483, "no_caption_prob": 1.2218595657031983e-05}, {"id": 185, "seek": 203900, "start": 2039.0, "end": 2055.0, "text": " And it makes it so much nicer to work with. And I know on the roadmap, Philip, you've got that you want to work on trying to take that a step further and actually extract out colors to be composable in that way as well.", "tokens": [50364, 400, 309, 1669, 309, 370, 709, 22842, 281, 589, 365, 13, 400, 286, 458, 322, 264, 35738, 11, 21144, 11, 291, 600, 658, 300, 291, 528, 281, 589, 322, 1382, 281, 747, 300, 257, 1823, 3052, 293, 767, 8947, 484, 4577, 281, 312, 10199, 712, 294, 300, 636, 382, 731, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.05417773073369807, "compression_ratio": 1.4129032258064516, "no_caption_prob": 3.269856097176671e-05}, {"id": 186, "seek": 205500, "start": 2055.0, "end": 2073.0, "text": " Yes, exactly. So at the moment, we have lots of definitions for, for example, background color. And then you say bg underscore red underscore 700, for example, and the red underscore 700 part is your color name.", "tokens": [50364, 1079, 11, 2293, 13, 407, 412, 264, 1623, 11, 321, 362, 3195, 295, 21988, 337, 11, 337, 1365, 11, 3678, 2017, 13, 400, 550, 291, 584, 272, 70, 37556, 2182, 37556, 15204, 11, 337, 1365, 11, 293, 264, 2182, 37556, 15204, 644, 307, 428, 2017, 1315, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.14580539628571154, "compression_ratio": 1.5179856115107915, "no_caption_prob": 1.568943844176829e-05}, {"id": 187, "seek": 207300, "start": 2073.0, "end": 2091.0, "text": " And it's taken from your tailwind configuration. And tailwind will just generate a class name, or in this case, in the end, a definition for each of your colors. And the idea is to only generate one definition, which will then be bg underscore color.", "tokens": [50364, 400, 309, 311, 2726, 490, 428, 6838, 12199, 11694, 13, 400, 6838, 12199, 486, 445, 8460, 257, 1508, 1315, 11, 420, 294, 341, 1389, 11, 294, 264, 917, 11, 257, 7123, 337, 1184, 295, 428, 4577, 13, 400, 264, 1558, 307, 281, 787, 8460, 472, 7123, 11, 597, 486, 550, 312, 272, 70, 37556, 2017, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.076837690671285, "compression_ratio": 1.5822784810126582, "no_caption_prob": 9.818255421123467e-06}, {"id": 188, "seek": 209100, "start": 2091.0, "end": 2114.0, "text": " And it will take another parameter, which would then be, for example, red underscore 700, which would then be its own definition. So this way, instead of having like background color, border color, text color, and all of them, and each of them being defined for every of your colors defined in your tailwind configuration,", "tokens": [50364, 400, 309, 486, 747, 1071, 13075, 11, 597, 576, 550, 312, 11, 337, 1365, 11, 2182, 37556, 15204, 11, 597, 576, 550, 312, 1080, 1065, 7123, 13, 407, 341, 636, 11, 2602, 295, 1419, 411, 3678, 2017, 11, 7838, 2017, 11, 2487, 2017, 11, 293, 439, 295, 552, 11, 293, 1184, 295, 552, 885, 7642, 337, 633, 295, 428, 4577, 7642, 294, 428, 6838, 12199, 11694, 11, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.04961761958162549, "compression_ratio": 1.634517766497462, "no_caption_prob": 3.3405212889192626e-06}, {"id": 189, "seek": 211400, "start": 2114.0, "end": 2124.0, "text": " you end up only needing one definition for text, background, and border color, and all of your colors once. So this is the end goal.", "tokens": [50364, 291, 917, 493, 787, 18006, 472, 7123, 337, 2487, 11, 3678, 11, 293, 7838, 2017, 11, 293, 439, 295, 428, 4577, 1564, 13, 407, 341, 307, 264, 917, 3387, 13, 50864, 50864, 663, 576, 1391, 5407, 264, 2744, 295, 264, 36548, 3089, 611, 11, 558, 30, 51064, 51064], "temperature": 0.0, "avg_logprob": -0.09743443489074707, "compression_ratio": 1.3835616438356164, "no_caption_prob": 1.952573256858159e-05}, {"id": 190, "seek": 211400, "start": 2124.0, "end": 2128.0, "text": " That would probably reduce the size of the compiled code also, right?", "tokens": [50364, 291, 917, 493, 787, 18006, 472, 7123, 337, 2487, 11, 3678, 11, 293, 7838, 2017, 11, 293, 439, 295, 428, 4577, 1564, 13, 407, 341, 307, 264, 917, 3387, 13, 50864, 50864, 663, 576, 1391, 5407, 264, 2744, 295, 264, 36548, 3089, 611, 11, 558, 30, 51064, 51064], "temperature": 0.0, "avg_logprob": -0.09743443489074707, "compression_ratio": 1.3835616438356164, "no_caption_prob": 1.952573256858159e-05}, {"id": 191, "seek": 212800, "start": 2128.0, "end": 2148.0, "text": " Exactly. This would be even smaller code. At the moment, we don't generate variants. So if you like, generate these sm underscore underscore definitions for the small breakpoint, then my tool will spit out a warning and say, please just turn on variants, it makes your code a lot shorter.", "tokens": [50364, 7587, 13, 639, 576, 312, 754, 4356, 3089, 13, 1711, 264, 1623, 11, 321, 500, 380, 8460, 21669, 13, 407, 498, 291, 411, 11, 8460, 613, 899, 37556, 37556, 21988, 337, 264, 1359, 1821, 6053, 11, 550, 452, 2290, 486, 22127, 484, 257, 9164, 293, 584, 11, 1767, 445, 1261, 322, 21669, 11, 309, 1669, 428, 3089, 257, 688, 11639, 13, 51364, 51364, 407, 293, 291, 393, 764, 441, 293, 24387, 281, 360, 264, 912, 13, 407, 764, 300, 13, 400, 341, 576, 312, 1071, 636, 281, 652, 309, 754, 1570, 3089, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12330863402061856, "compression_ratio": 1.6448979591836734, "no_caption_prob": 0.00011060922406613827}, {"id": 192, "seek": 212800, "start": 2148.0, "end": 2156.0, "text": " So and you can use L and CSS to do the same. So use that. And this would be another way to make it even less code.", "tokens": [50364, 7587, 13, 639, 576, 312, 754, 4356, 3089, 13, 1711, 264, 1623, 11, 321, 500, 380, 8460, 21669, 13, 407, 498, 291, 411, 11, 8460, 613, 899, 37556, 37556, 21988, 337, 264, 1359, 1821, 6053, 11, 550, 452, 2290, 486, 22127, 484, 257, 9164, 293, 584, 11, 1767, 445, 1261, 322, 21669, 11, 309, 1669, 428, 3089, 257, 688, 11639, 13, 51364, 51364, 407, 293, 291, 393, 764, 441, 293, 24387, 281, 360, 264, 912, 13, 407, 764, 300, 13, 400, 341, 576, 312, 1071, 636, 281, 652, 309, 754, 1570, 3089, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12330863402061856, "compression_ratio": 1.6448979591836734, "no_caption_prob": 0.00011060922406613827}, {"id": 193, "seek": 215600, "start": 2156.0, "end": 2164.0, "text": " Yeah, I was just searching for the hover function, because I know that tailwind has that, but you're actually just using CSS dot hover from L and CSS.", "tokens": [50364, 865, 11, 286, 390, 445, 10808, 337, 264, 20076, 2445, 11, 570, 286, 458, 300, 6838, 12199, 575, 300, 11, 457, 291, 434, 767, 445, 1228, 24387, 5893, 20076, 490, 441, 293, 24387, 13, 50764, 50764, 7587, 13, 50814, 50814, 400, 912, 551, 337, 264, 1821, 20552, 13, 50914, 50914, 407, 264, 1821, 20552, 366, 767, 30538, 294, 6838, 12199, 294, 264, 6838, 12199, 11694, 13, 407, 286, 764, 729, 1821, 6053, 31493, 281, 8460, 1071, 3991, 365, 428, 3832, 1821, 20552, 11, 370, 281, 584, 13, 51564, 51564, 3996, 3991, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09934369723002116, "compression_ratio": 1.7876106194690264, "no_caption_prob": 8.398018508160021e-06}, {"id": 194, "seek": 215600, "start": 2164.0, "end": 2165.0, "text": " Exactly.", "tokens": [50364, 865, 11, 286, 390, 445, 10808, 337, 264, 20076, 2445, 11, 570, 286, 458, 300, 6838, 12199, 575, 300, 11, 457, 291, 434, 767, 445, 1228, 24387, 5893, 20076, 490, 441, 293, 24387, 13, 50764, 50764, 7587, 13, 50814, 50814, 400, 912, 551, 337, 264, 1821, 20552, 13, 50914, 50914, 407, 264, 1821, 20552, 366, 767, 30538, 294, 6838, 12199, 294, 264, 6838, 12199, 11694, 13, 407, 286, 764, 729, 1821, 6053, 31493, 281, 8460, 1071, 3991, 365, 428, 3832, 1821, 20552, 11, 370, 281, 584, 13, 51564, 51564, 3996, 3991, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09934369723002116, "compression_ratio": 1.7876106194690264, "no_caption_prob": 8.398018508160021e-06}, {"id": 195, "seek": 215600, "start": 2165.0, "end": 2167.0, "text": " And same thing for the breakpoints.", "tokens": [50364, 865, 11, 286, 390, 445, 10808, 337, 264, 20076, 2445, 11, 570, 286, 458, 300, 6838, 12199, 575, 300, 11, 457, 291, 434, 767, 445, 1228, 24387, 5893, 20076, 490, 441, 293, 24387, 13, 50764, 50764, 7587, 13, 50814, 50814, 400, 912, 551, 337, 264, 1821, 20552, 13, 50914, 50914, 407, 264, 1821, 20552, 366, 767, 30538, 294, 6838, 12199, 294, 264, 6838, 12199, 11694, 13, 407, 286, 764, 729, 1821, 6053, 31493, 281, 8460, 1071, 3991, 365, 428, 3832, 1821, 20552, 11, 370, 281, 584, 13, 51564, 51564, 3996, 3991, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09934369723002116, "compression_ratio": 1.7876106194690264, "no_caption_prob": 8.398018508160021e-06}, {"id": 196, "seek": 215600, "start": 2167.0, "end": 2180.0, "text": " So the breakpoints are actually configured in tailwind in the tailwind configuration. So I use those breakpoint configurations to generate another file with your standard breakpoints, so to say.", "tokens": [50364, 865, 11, 286, 390, 445, 10808, 337, 264, 20076, 2445, 11, 570, 286, 458, 300, 6838, 12199, 575, 300, 11, 457, 291, 434, 767, 445, 1228, 24387, 5893, 20076, 490, 441, 293, 24387, 13, 50764, 50764, 7587, 13, 50814, 50814, 400, 912, 551, 337, 264, 1821, 20552, 13, 50914, 50914, 407, 264, 1821, 20552, 366, 767, 30538, 294, 6838, 12199, 294, 264, 6838, 12199, 11694, 13, 407, 286, 764, 729, 1821, 6053, 31493, 281, 8460, 1071, 3991, 365, 428, 3832, 1821, 20552, 11, 370, 281, 584, 13, 51564, 51564, 3996, 3991, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09934369723002116, "compression_ratio": 1.7876106194690264, "no_caption_prob": 8.398018508160021e-06}, {"id": 197, "seek": 215600, "start": 2180.0, "end": 2181.0, "text": " Another file?", "tokens": [50364, 865, 11, 286, 390, 445, 10808, 337, 264, 20076, 2445, 11, 570, 286, 458, 300, 6838, 12199, 575, 300, 11, 457, 291, 434, 767, 445, 1228, 24387, 5893, 20076, 490, 441, 293, 24387, 13, 50764, 50764, 7587, 13, 50814, 50814, 400, 912, 551, 337, 264, 1821, 20552, 13, 50914, 50914, 407, 264, 1821, 20552, 366, 767, 30538, 294, 6838, 12199, 294, 264, 6838, 12199, 11694, 13, 407, 286, 764, 729, 1821, 6053, 31493, 281, 8460, 1071, 3991, 365, 428, 3832, 1821, 20552, 11, 370, 281, 584, 13, 51564, 51564, 3996, 3991, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09934369723002116, "compression_ratio": 1.7876106194690264, "no_caption_prob": 8.398018508160021e-06}, {"id": 198, "seek": 218100, "start": 2181.0, "end": 2201.0, "text": " Yeah, exactly. Another module. So that's the tailwind dot breakpoints module. And it contains then, for example, in the standards or default tailwind configuration, it contains a function named sm, md, lg for the small, medium and large breakpoints and more.", "tokens": [50364, 865, 11, 2293, 13, 3996, 10088, 13, 407, 300, 311, 264, 6838, 12199, 5893, 1821, 20552, 10088, 13, 400, 309, 8306, 550, 11, 337, 1365, 11, 294, 264, 7787, 420, 7576, 6838, 12199, 11694, 11, 309, 8306, 257, 2445, 4926, 899, 11, 275, 67, 11, 287, 70, 337, 264, 1359, 11, 6399, 293, 2416, 1821, 20552, 293, 544, 13, 51364, 51364, 400, 436, 747, 294, 1261, 445, 257, 1329, 295, 13273, 281, 3079, 562, 291, 434, 412, 341, 733, 295, 1821, 6053, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11822528400640378, "compression_ratio": 1.6401869158878504, "no_caption_prob": 4.331782474764623e-05}, {"id": 199, "seek": 218100, "start": 2201.0, "end": 2207.0, "text": " And they take in turn just a list of styles to apply when you're at this kind of breakpoint.", "tokens": [50364, 865, 11, 2293, 13, 3996, 10088, 13, 407, 300, 311, 264, 6838, 12199, 5893, 1821, 20552, 10088, 13, 400, 309, 8306, 550, 11, 337, 1365, 11, 294, 264, 7787, 420, 7576, 6838, 12199, 11694, 11, 309, 8306, 257, 2445, 4926, 899, 11, 275, 67, 11, 287, 70, 337, 264, 1359, 11, 6399, 293, 2416, 1821, 20552, 293, 544, 13, 51364, 51364, 400, 436, 747, 294, 1261, 445, 257, 1329, 295, 13273, 281, 3079, 562, 291, 434, 412, 341, 733, 295, 1821, 6053, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11822528400640378, "compression_ratio": 1.6401869158878504, "no_caption_prob": 4.331782474764623e-05}, {"id": 200, "seek": 220700, "start": 2207.0, "end": 2218.0, "text": " It's not perfect right now. There's one thing that I really don't know how to fix. And this is something that Justin stumbled upon too, and which is kind of difficult to handle.", "tokens": [50364, 467, 311, 406, 2176, 558, 586, 13, 821, 311, 472, 551, 300, 286, 534, 500, 380, 458, 577, 281, 3191, 13, 400, 341, 307, 746, 300, 11320, 36668, 3564, 886, 11, 293, 597, 307, 733, 295, 2252, 281, 4813, 13, 50914, 50914, 46074, 12199, 24387, 767, 13, 407, 291, 362, 281, 312, 5026, 365, 264, 1668, 295, 428, 13273, 562, 291, 2464, 552, 760, 13, 51264, 51264, 407, 291, 643, 365, 264, 441, 6838, 12199, 16679, 4455, 11, 291, 643, 281, 1668, 428, 1821, 20552, 490, 955, 281, 1359, 498, 291, 434, 1228, 923, 11402, 1821, 20552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10109214221729952, "compression_ratio": 1.6370656370656371, "no_caption_prob": 7.071802883729106e-06}, {"id": 201, "seek": 220700, "start": 2218.0, "end": 2225.0, "text": " Tailwind CSS actually. So you have to be careful with the order of your styles when you write them down.", "tokens": [50364, 467, 311, 406, 2176, 558, 586, 13, 821, 311, 472, 551, 300, 286, 534, 500, 380, 458, 577, 281, 3191, 13, 400, 341, 307, 746, 300, 11320, 36668, 3564, 886, 11, 293, 597, 307, 733, 295, 2252, 281, 4813, 13, 50914, 50914, 46074, 12199, 24387, 767, 13, 407, 291, 362, 281, 312, 5026, 365, 264, 1668, 295, 428, 13273, 562, 291, 2464, 552, 760, 13, 51264, 51264, 407, 291, 643, 365, 264, 441, 6838, 12199, 16679, 4455, 11, 291, 643, 281, 1668, 428, 1821, 20552, 490, 955, 281, 1359, 498, 291, 434, 1228, 923, 11402, 1821, 20552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10109214221729952, "compression_ratio": 1.6370656370656371, "no_caption_prob": 7.071802883729106e-06}, {"id": 202, "seek": 220700, "start": 2225.0, "end": 2235.0, "text": " So you need with the L tailwind modules projects, you need to order your breakpoints from big to small if you're using min width breakpoints.", "tokens": [50364, 467, 311, 406, 2176, 558, 586, 13, 821, 311, 472, 551, 300, 286, 534, 500, 380, 458, 577, 281, 3191, 13, 400, 341, 307, 746, 300, 11320, 36668, 3564, 886, 11, 293, 597, 307, 733, 295, 2252, 281, 4813, 13, 50914, 50914, 46074, 12199, 24387, 767, 13, 407, 291, 362, 281, 312, 5026, 365, 264, 1668, 295, 428, 13273, 562, 291, 2464, 552, 760, 13, 51264, 51264, 407, 291, 643, 365, 264, 441, 6838, 12199, 16679, 4455, 11, 291, 643, 281, 1668, 428, 1821, 20552, 490, 955, 281, 1359, 498, 291, 434, 1228, 923, 11402, 1821, 20552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10109214221729952, "compression_ratio": 1.6370656370656371, "no_caption_prob": 7.071802883729106e-06}, {"id": 203, "seek": 223500, "start": 2235.0, "end": 2247.0, "text": " So that means if you don't honor this order, you'll end up having some styles overwrite other styles in cases you might not be used to when using tailwind CSS.", "tokens": [50364, 407, 300, 1355, 498, 291, 500, 380, 5968, 341, 1668, 11, 291, 603, 917, 493, 1419, 512, 13273, 670, 21561, 661, 13273, 294, 3331, 291, 1062, 406, 312, 1143, 281, 562, 1228, 6838, 12199, 24387, 13, 50964, 50964, 400, 341, 393, 312, 534, 8830, 13, 400, 341, 307, 3462, 281, 264, 1186, 300, 6838, 12199, 24387, 30910, 322, 264, 10833, 6838, 12199, 281, 362, 257, 1629, 1668, 295, 21988, 13, 51464, 51464, 407, 300, 264, 11, 286, 519, 11, 700, 7123, 300, 13165, 294, 264, 24387, 3991, 486, 312, 264, 472, 300, 264, 11185, 767, 4960, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0659890599770121, "compression_ratio": 1.736842105263158, "no_caption_prob": 1.7778327674022876e-05}, {"id": 204, "seek": 223500, "start": 2247.0, "end": 2257.0, "text": " And this can be really surprising. And this is due to the fact that tailwind CSS relies on the generated tailwind to have a certain order of definitions.", "tokens": [50364, 407, 300, 1355, 498, 291, 500, 380, 5968, 341, 1668, 11, 291, 603, 917, 493, 1419, 512, 13273, 670, 21561, 661, 13273, 294, 3331, 291, 1062, 406, 312, 1143, 281, 562, 1228, 6838, 12199, 24387, 13, 50964, 50964, 400, 341, 393, 312, 534, 8830, 13, 400, 341, 307, 3462, 281, 264, 1186, 300, 6838, 12199, 24387, 30910, 322, 264, 10833, 6838, 12199, 281, 362, 257, 1629, 1668, 295, 21988, 13, 51464, 51464, 407, 300, 264, 11, 286, 519, 11, 700, 7123, 300, 13165, 294, 264, 24387, 3991, 486, 312, 264, 472, 300, 264, 11185, 767, 4960, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0659890599770121, "compression_ratio": 1.736842105263158, "no_caption_prob": 1.7778327674022876e-05}, {"id": 205, "seek": 223500, "start": 2257.0, "end": 2264.0, "text": " So that the, I think, first definition that applies in the CSS file will be the one that the browser actually uses.", "tokens": [50364, 407, 300, 1355, 498, 291, 500, 380, 5968, 341, 1668, 11, 291, 603, 917, 493, 1419, 512, 13273, 670, 21561, 661, 13273, 294, 3331, 291, 1062, 406, 312, 1143, 281, 562, 1228, 6838, 12199, 24387, 13, 50964, 50964, 400, 341, 393, 312, 534, 8830, 13, 400, 341, 307, 3462, 281, 264, 1186, 300, 6838, 12199, 24387, 30910, 322, 264, 10833, 6838, 12199, 281, 362, 257, 1629, 1668, 295, 21988, 13, 51464, 51464, 407, 300, 264, 11, 286, 519, 11, 700, 7123, 300, 13165, 294, 264, 24387, 3991, 486, 312, 264, 472, 300, 264, 11185, 767, 4960, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0659890599770121, "compression_ratio": 1.736842105263158, "no_caption_prob": 1.7778327674022876e-05}, {"id": 206, "seek": 226400, "start": 2264.0, "end": 2272.0, "text": " Either the first or the last, I don't actually remember. And this, yeah, this is kind of unfortunate and I don't really know how to solve this issue yet.", "tokens": [50364, 13746, 264, 700, 420, 264, 1036, 11, 286, 500, 380, 767, 1604, 13, 400, 341, 11, 1338, 11, 341, 307, 733, 295, 17843, 293, 286, 500, 380, 534, 458, 577, 281, 5039, 341, 2734, 1939, 13, 50764, 50764, 583, 456, 1062, 312, 512, 636, 281, 764, 257, 13494, 992, 295, 36133, 6828, 293, 6562, 295, 300, 365, 264, 10833, 3089, 689, 291, 727, 362, 411, 2602, 295, 264, 24387, 11, 597, 2516, 257, 1329, 295, 264, 24387, 7221, 420, 13273, 11, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09512514226576861, "compression_ratio": 1.5751072961373391, "no_caption_prob": 2.8856678909505717e-05}, {"id": 207, "seek": 226400, "start": 2272.0, "end": 2286.0, "text": " But there might be some way to use a clever set of helper functions and combination of that with the generated code where you could have like instead of the CSS, which takes a list of the CSS properties or styles,", "tokens": [50364, 13746, 264, 700, 420, 264, 1036, 11, 286, 500, 380, 767, 1604, 13, 400, 341, 11, 1338, 11, 341, 307, 733, 295, 17843, 293, 286, 500, 380, 534, 458, 577, 281, 5039, 341, 2734, 1939, 13, 50764, 50764, 583, 456, 1062, 312, 512, 636, 281, 764, 257, 13494, 992, 295, 36133, 6828, 293, 6562, 295, 300, 365, 264, 10833, 3089, 689, 291, 727, 362, 411, 2602, 295, 264, 24387, 11, 597, 2516, 257, 1329, 295, 264, 24387, 7221, 420, 13273, 11, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09512514226576861, "compression_ratio": 1.5751072961373391, "no_caption_prob": 2.8856678909505717e-05}, {"id": 208, "seek": 228600, "start": 2286.0, "end": 2296.0, "text": " you could have like a special tailwind one and you could have some special type instead of just being a direct CSS property.", "tokens": [50364, 291, 727, 362, 411, 257, 2121, 6838, 12199, 472, 293, 291, 727, 362, 512, 2121, 2010, 2602, 295, 445, 885, 257, 2047, 24387, 4707, 13, 50864, 50864, 509, 727, 362, 309, 312, 746, 300, 575, 411, 11, 291, 458, 11, 257, 2604, 781, 689, 472, 295, 264, 3755, 295, 1589, 307, 21739, 1589, 13, 51164, 51164, 407, 498, 309, 311, 257, 1821, 6053, 420, 498, 309, 311, 572, 1821, 6053, 24799, 264, 1668, 293, 550, 309, 13165, 729, 562, 291, 35925, 552, 1214, 13, 51514, 51514, 583, 309, 311, 257, 7595, 6191, 10360, 456, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05374015461314808, "compression_ratio": 1.7663934426229508, "no_caption_prob": 0.0001535526243969798}, {"id": 209, "seek": 228600, "start": 2296.0, "end": 2302.0, "text": " You could have it be something that has like, you know, a tuple where one of the pieces of information is ordering information.", "tokens": [50364, 291, 727, 362, 411, 257, 2121, 6838, 12199, 472, 293, 291, 727, 362, 512, 2121, 2010, 2602, 295, 445, 885, 257, 2047, 24387, 4707, 13, 50864, 50864, 509, 727, 362, 309, 312, 746, 300, 575, 411, 11, 291, 458, 11, 257, 2604, 781, 689, 472, 295, 264, 3755, 295, 1589, 307, 21739, 1589, 13, 51164, 51164, 407, 498, 309, 311, 257, 1821, 6053, 420, 498, 309, 311, 572, 1821, 6053, 24799, 264, 1668, 293, 550, 309, 13165, 729, 562, 291, 35925, 552, 1214, 13, 51514, 51514, 583, 309, 311, 257, 7595, 6191, 10360, 456, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05374015461314808, "compression_ratio": 1.7663934426229508, "no_caption_prob": 0.0001535526243969798}, {"id": 210, "seek": 228600, "start": 2302.0, "end": 2309.0, "text": " So if it's a breakpoint or if it's no breakpoint determines the order and then it applies those when you compose them together.", "tokens": [50364, 291, 727, 362, 411, 257, 2121, 6838, 12199, 472, 293, 291, 727, 362, 512, 2121, 2010, 2602, 295, 445, 885, 257, 2047, 24387, 4707, 13, 50864, 50864, 509, 727, 362, 309, 312, 746, 300, 575, 411, 11, 291, 458, 11, 257, 2604, 781, 689, 472, 295, 264, 3755, 295, 1589, 307, 21739, 1589, 13, 51164, 51164, 407, 498, 309, 311, 257, 1821, 6053, 420, 498, 309, 311, 572, 1821, 6053, 24799, 264, 1668, 293, 550, 309, 13165, 729, 562, 291, 35925, 552, 1214, 13, 51514, 51514, 583, 309, 311, 257, 7595, 6191, 10360, 456, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05374015461314808, "compression_ratio": 1.7663934426229508, "no_caption_prob": 0.0001535526243969798}, {"id": 211, "seek": 228600, "start": 2309.0, "end": 2314.0, "text": " But it's a challenging technical difficulty there.", "tokens": [50364, 291, 727, 362, 411, 257, 2121, 6838, 12199, 472, 293, 291, 727, 362, 512, 2121, 2010, 2602, 295, 445, 885, 257, 2047, 24387, 4707, 13, 50864, 50864, 509, 727, 362, 309, 312, 746, 300, 575, 411, 11, 291, 458, 11, 257, 2604, 781, 689, 472, 295, 264, 3755, 295, 1589, 307, 21739, 1589, 13, 51164, 51164, 407, 498, 309, 311, 257, 1821, 6053, 420, 498, 309, 311, 572, 1821, 6053, 24799, 264, 1668, 293, 550, 309, 13165, 729, 562, 291, 35925, 552, 1214, 13, 51514, 51514, 583, 309, 311, 257, 7595, 6191, 10360, 456, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05374015461314808, "compression_ratio": 1.7663934426229508, "no_caption_prob": 0.0001535526243969798}, {"id": 212, "seek": 231400, "start": 2314.0, "end": 2323.0, "text": " Yes. And again, I have to give props to Justin there because he took a stab at solving this issue and wrote a generated function.", "tokens": [50364, 1079, 13, 400, 797, 11, 286, 362, 281, 976, 26173, 281, 11320, 456, 570, 415, 1890, 257, 16343, 412, 12606, 341, 2734, 293, 4114, 257, 10833, 2445, 13, 50814, 50814, 407, 415, 3869, 257, 2445, 281, 264, 10833, 3089, 11, 597, 576, 767, 747, 257, 1329, 295, 2604, 2622, 13, 51114, 51114, 407, 337, 1184, 1821, 6053, 11, 291, 393, 6964, 257, 1329, 295, 13273, 293, 550, 309, 576, 1668, 264, 1821, 20552, 6772, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0499432177483281, "compression_ratio": 1.6019417475728155, "no_caption_prob": 5.144021997693926e-05}, {"id": 213, "seek": 231400, "start": 2323.0, "end": 2329.0, "text": " So he added a function to the generated code, which would actually take a list of tuples.", "tokens": [50364, 1079, 13, 400, 797, 11, 286, 362, 281, 976, 26173, 281, 11320, 456, 570, 415, 1890, 257, 16343, 412, 12606, 341, 2734, 293, 4114, 257, 10833, 2445, 13, 50814, 50814, 407, 415, 3869, 257, 2445, 281, 264, 10833, 3089, 11, 597, 576, 767, 747, 257, 1329, 295, 2604, 2622, 13, 51114, 51114, 407, 337, 1184, 1821, 6053, 11, 291, 393, 6964, 257, 1329, 295, 13273, 293, 550, 309, 576, 1668, 264, 1821, 20552, 6772, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0499432177483281, "compression_ratio": 1.6019417475728155, "no_caption_prob": 5.144021997693926e-05}, {"id": 214, "seek": 231400, "start": 2329.0, "end": 2337.0, "text": " So for each breakpoint, you can define a list of styles and then it would order the breakpoints automatically.", "tokens": [50364, 1079, 13, 400, 797, 11, 286, 362, 281, 976, 26173, 281, 11320, 456, 570, 415, 1890, 257, 16343, 412, 12606, 341, 2734, 293, 4114, 257, 10833, 2445, 13, 50814, 50814, 407, 415, 3869, 257, 2445, 281, 264, 10833, 3089, 11, 597, 576, 767, 747, 257, 1329, 295, 2604, 2622, 13, 51114, 51114, 407, 337, 1184, 1821, 6053, 11, 291, 393, 6964, 257, 1329, 295, 13273, 293, 550, 309, 576, 1668, 264, 1821, 20552, 6772, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0499432177483281, "compression_ratio": 1.6019417475728155, "no_caption_prob": 5.144021997693926e-05}, {"id": 215, "seek": 233700, "start": 2337.0, "end": 2345.0, "text": " And I think that was a step in the right direction. It just felt a little bit too clunky and a little bit too verbose for my taste.", "tokens": [50364, 400, 286, 519, 300, 390, 257, 1823, 294, 264, 558, 3513, 13, 467, 445, 2762, 257, 707, 857, 886, 596, 25837, 293, 257, 707, 857, 886, 9595, 541, 337, 452, 3939, 13, 50764, 50764, 400, 456, 311, 411, 264, 1168, 295, 577, 360, 291, 528, 281, 1594, 428, 3089, 498, 291, 11, 337, 1365, 11, 362, 257, 1329, 295, 4368, 11, 51164, 51164, 13273, 281, 3079, 562, 291, 434, 44923, 364, 4478, 293, 291, 528, 281, 362, 341, 1329, 295, 13273, 1319, 562, 291, 362, 1071, 1821, 6053, 13, 51614, 51614, 407, 291, 519, 466, 597, 472, 307, 14226, 926, 264, 661, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07623763396361163, "compression_ratio": 1.6901960784313725, "no_caption_prob": 5.173834324523341e-06}, {"id": 216, "seek": 233700, "start": 2345.0, "end": 2353.0, "text": " And there's like the question of how do you want to group your code if you, for example, have a list of states,", "tokens": [50364, 400, 286, 519, 300, 390, 257, 1823, 294, 264, 558, 3513, 13, 467, 445, 2762, 257, 707, 857, 886, 596, 25837, 293, 257, 707, 857, 886, 9595, 541, 337, 452, 3939, 13, 50764, 50764, 400, 456, 311, 411, 264, 1168, 295, 577, 360, 291, 528, 281, 1594, 428, 3089, 498, 291, 11, 337, 1365, 11, 362, 257, 1329, 295, 4368, 11, 51164, 51164, 13273, 281, 3079, 562, 291, 434, 44923, 364, 4478, 293, 291, 528, 281, 362, 341, 1329, 295, 13273, 1319, 562, 291, 362, 1071, 1821, 6053, 13, 51614, 51614, 407, 291, 519, 466, 597, 472, 307, 14226, 926, 264, 661, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07623763396361163, "compression_ratio": 1.6901960784313725, "no_caption_prob": 5.173834324523341e-06}, {"id": 217, "seek": 233700, "start": 2353.0, "end": 2362.0, "text": " styles to apply when you're hovering an element and you want to have this list of styles change when you have another breakpoint.", "tokens": [50364, 400, 286, 519, 300, 390, 257, 1823, 294, 264, 558, 3513, 13, 467, 445, 2762, 257, 707, 857, 886, 596, 25837, 293, 257, 707, 857, 886, 9595, 541, 337, 452, 3939, 13, 50764, 50764, 400, 456, 311, 411, 264, 1168, 295, 577, 360, 291, 528, 281, 1594, 428, 3089, 498, 291, 11, 337, 1365, 11, 362, 257, 1329, 295, 4368, 11, 51164, 51164, 13273, 281, 3079, 562, 291, 434, 44923, 364, 4478, 293, 291, 528, 281, 362, 341, 1329, 295, 13273, 1319, 562, 291, 362, 1071, 1821, 6053, 13, 51614, 51614, 407, 291, 519, 466, 597, 472, 307, 14226, 926, 264, 661, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07623763396361163, "compression_ratio": 1.6901960784313725, "no_caption_prob": 5.173834324523341e-06}, {"id": 218, "seek": 233700, "start": 2362.0, "end": 2366.0, "text": " So you think about which one is wrapped around the other.", "tokens": [50364, 400, 286, 519, 300, 390, 257, 1823, 294, 264, 558, 3513, 13, 467, 445, 2762, 257, 707, 857, 886, 596, 25837, 293, 257, 707, 857, 886, 9595, 541, 337, 452, 3939, 13, 50764, 50764, 400, 456, 311, 411, 264, 1168, 295, 577, 360, 291, 528, 281, 1594, 428, 3089, 498, 291, 11, 337, 1365, 11, 362, 257, 1329, 295, 4368, 11, 51164, 51164, 13273, 281, 3079, 562, 291, 434, 44923, 364, 4478, 293, 291, 528, 281, 362, 341, 1329, 295, 13273, 1319, 562, 291, 362, 1071, 1821, 6053, 13, 51614, 51614, 407, 291, 519, 466, 597, 472, 307, 14226, 926, 264, 661, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07623763396361163, "compression_ratio": 1.6901960784313725, "no_caption_prob": 5.173834324523341e-06}, {"id": 219, "seek": 236600, "start": 2366.0, "end": 2370.0, "text": " But yes, so it's I'm not entirely sure how to do that yet.", "tokens": [50364, 583, 2086, 11, 370, 309, 311, 286, 478, 406, 7696, 988, 577, 281, 360, 300, 1939, 13, 50564, 50564, 467, 3297, 1669, 309, 1570, 10199, 712, 13, 400, 550, 498, 291, 1415, 281, 360, 411, 24387, 5893, 15245, 11, 50814, 50814, 597, 307, 257, 2445, 300, 1487, 365, 2699, 76, 24387, 300, 4045, 291, 281, 1594, 1214, 3866, 13273, 13, 51114, 51114, 823, 436, 576, 2759, 380, 312, 13273, 11, 436, 576, 312, 2604, 2622, 13, 400, 370, 291, 2809, 380, 764, 721, 411, 24387, 5893, 15245, 13, 51364, 51364, 1743, 300, 311, 644, 295, 264, 6643, 295, 341, 3109, 307, 300, 291, 434, 445, 17746, 613, 2699, 76, 24387, 7221, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09405023476173138, "compression_ratio": 1.687732342007435, "no_caption_prob": 5.475803482113406e-05}, {"id": 220, "seek": 236600, "start": 2370.0, "end": 2375.0, "text": " It certainly makes it less composable. And then if you wanted to do like CSS dot batch,", "tokens": [50364, 583, 2086, 11, 370, 309, 311, 286, 478, 406, 7696, 988, 577, 281, 360, 300, 1939, 13, 50564, 50564, 467, 3297, 1669, 309, 1570, 10199, 712, 13, 400, 550, 498, 291, 1415, 281, 360, 411, 24387, 5893, 15245, 11, 50814, 50814, 597, 307, 257, 2445, 300, 1487, 365, 2699, 76, 24387, 300, 4045, 291, 281, 1594, 1214, 3866, 13273, 13, 51114, 51114, 823, 436, 576, 2759, 380, 312, 13273, 11, 436, 576, 312, 2604, 2622, 13, 400, 370, 291, 2809, 380, 764, 721, 411, 24387, 5893, 15245, 13, 51364, 51364, 1743, 300, 311, 644, 295, 264, 6643, 295, 341, 3109, 307, 300, 291, 434, 445, 17746, 613, 2699, 76, 24387, 7221, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09405023476173138, "compression_ratio": 1.687732342007435, "no_caption_prob": 5.475803482113406e-05}, {"id": 221, "seek": 236600, "start": 2375.0, "end": 2381.0, "text": " which is a function that comes with Elm CSS that allows you to group together multiple styles.", "tokens": [50364, 583, 2086, 11, 370, 309, 311, 286, 478, 406, 7696, 988, 577, 281, 360, 300, 1939, 13, 50564, 50564, 467, 3297, 1669, 309, 1570, 10199, 712, 13, 400, 550, 498, 291, 1415, 281, 360, 411, 24387, 5893, 15245, 11, 50814, 50814, 597, 307, 257, 2445, 300, 1487, 365, 2699, 76, 24387, 300, 4045, 291, 281, 1594, 1214, 3866, 13273, 13, 51114, 51114, 823, 436, 576, 2759, 380, 312, 13273, 11, 436, 576, 312, 2604, 2622, 13, 400, 370, 291, 2809, 380, 764, 721, 411, 24387, 5893, 15245, 13, 51364, 51364, 1743, 300, 311, 644, 295, 264, 6643, 295, 341, 3109, 307, 300, 291, 434, 445, 17746, 613, 2699, 76, 24387, 7221, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09405023476173138, "compression_ratio": 1.687732342007435, "no_caption_prob": 5.475803482113406e-05}, {"id": 222, "seek": 236600, "start": 2381.0, "end": 2386.0, "text": " Now they would wouldn't be styles, they would be tuples. And so you couldn't use things like CSS dot batch.", "tokens": [50364, 583, 2086, 11, 370, 309, 311, 286, 478, 406, 7696, 988, 577, 281, 360, 300, 1939, 13, 50564, 50564, 467, 3297, 1669, 309, 1570, 10199, 712, 13, 400, 550, 498, 291, 1415, 281, 360, 411, 24387, 5893, 15245, 11, 50814, 50814, 597, 307, 257, 2445, 300, 1487, 365, 2699, 76, 24387, 300, 4045, 291, 281, 1594, 1214, 3866, 13273, 13, 51114, 51114, 823, 436, 576, 2759, 380, 312, 13273, 11, 436, 576, 312, 2604, 2622, 13, 400, 370, 291, 2809, 380, 764, 721, 411, 24387, 5893, 15245, 13, 51364, 51364, 1743, 300, 311, 644, 295, 264, 6643, 295, 341, 3109, 307, 300, 291, 434, 445, 17746, 613, 2699, 76, 24387, 7221, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09405023476173138, "compression_ratio": 1.687732342007435, "no_caption_prob": 5.475803482113406e-05}, {"id": 223, "seek": 236600, "start": 2386.0, "end": 2393.0, "text": " Like that's part of the beauty of this approach is that you're just generating these Elm CSS properties.", "tokens": [50364, 583, 2086, 11, 370, 309, 311, 286, 478, 406, 7696, 988, 577, 281, 360, 300, 1939, 13, 50564, 50564, 467, 3297, 1669, 309, 1570, 10199, 712, 13, 400, 550, 498, 291, 1415, 281, 360, 411, 24387, 5893, 15245, 11, 50814, 50814, 597, 307, 257, 2445, 300, 1487, 365, 2699, 76, 24387, 300, 4045, 291, 281, 1594, 1214, 3866, 13273, 13, 51114, 51114, 823, 436, 576, 2759, 380, 312, 13273, 11, 436, 576, 312, 2604, 2622, 13, 400, 370, 291, 2809, 380, 764, 721, 411, 24387, 5893, 15245, 13, 51364, 51364, 1743, 300, 311, 644, 295, 264, 6643, 295, 341, 3109, 307, 300, 291, 434, 445, 17746, 613, 2699, 76, 24387, 7221, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09405023476173138, "compression_ratio": 1.687732342007435, "no_caption_prob": 5.475803482113406e-05}, {"id": 224, "seek": 239300, "start": 2393.0, "end": 2399.0, "text": " And so you can compose them together and use them just like a first class citizen in Elm CSS.", "tokens": [50364, 400, 370, 291, 393, 35925, 552, 1214, 293, 764, 552, 445, 411, 257, 700, 1508, 13326, 294, 2699, 76, 24387, 13, 50664, 50664, 286, 2441, 498, 456, 576, 312, 512, 1333, 295, 411, 2183, 9007, 300, 727, 312, 1096, 411, 365, 2699, 76, 3131, 420, 746, 300, 291, 727, 362, 309, 1668, 721, 13, 51114, 51114, 440, 1154, 307, 498, 291, 434, 1228, 498, 291, 434, 5141, 484, 281, 6828, 293, 721, 411, 300, 11, 309, 727, 1813, 2252, 498, 291, 434, 1588, 7186, 990, 14511, 293, 721, 411, 300, 13, 51564, 51564, 865, 11, 341, 307, 1009, 264, 1154, 365, 13437, 5215, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07138003243340386, "compression_ratio": 1.7884615384615385, "no_caption_prob": 4.264382005203515e-05}, {"id": 225, "seek": 239300, "start": 2399.0, "end": 2408.0, "text": " I wonder if there would be some sort of like post processing that could be done like with Elm review or something that you could have it order things.", "tokens": [50364, 400, 370, 291, 393, 35925, 552, 1214, 293, 764, 552, 445, 411, 257, 700, 1508, 13326, 294, 2699, 76, 24387, 13, 50664, 50664, 286, 2441, 498, 456, 576, 312, 512, 1333, 295, 411, 2183, 9007, 300, 727, 312, 1096, 411, 365, 2699, 76, 3131, 420, 746, 300, 291, 727, 362, 309, 1668, 721, 13, 51114, 51114, 440, 1154, 307, 498, 291, 434, 1228, 498, 291, 434, 5141, 484, 281, 6828, 293, 721, 411, 300, 11, 309, 727, 1813, 2252, 498, 291, 434, 1588, 7186, 990, 14511, 293, 721, 411, 300, 13, 51564, 51564, 865, 11, 341, 307, 1009, 264, 1154, 365, 13437, 5215, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07138003243340386, "compression_ratio": 1.7884615384615385, "no_caption_prob": 4.264382005203515e-05}, {"id": 226, "seek": 239300, "start": 2408.0, "end": 2417.0, "text": " The problem is if you're using if you're calling out to functions and things like that, it could become difficult if you're concatenating lists and things like that.", "tokens": [50364, 400, 370, 291, 393, 35925, 552, 1214, 293, 764, 552, 445, 411, 257, 700, 1508, 13326, 294, 2699, 76, 24387, 13, 50664, 50664, 286, 2441, 498, 456, 576, 312, 512, 1333, 295, 411, 2183, 9007, 300, 727, 312, 1096, 411, 365, 2699, 76, 3131, 420, 746, 300, 291, 727, 362, 309, 1668, 721, 13, 51114, 51114, 440, 1154, 307, 498, 291, 434, 1228, 498, 291, 434, 5141, 484, 281, 6828, 293, 721, 411, 300, 11, 309, 727, 1813, 2252, 498, 291, 434, 1588, 7186, 990, 14511, 293, 721, 411, 300, 13, 51564, 51564, 865, 11, 341, 307, 1009, 264, 1154, 365, 13437, 5215, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07138003243340386, "compression_ratio": 1.7884615384615385, "no_caption_prob": 4.264382005203515e-05}, {"id": 227, "seek": 239300, "start": 2417.0, "end": 2420.0, "text": " Yeah, this is always the problem with static analysis.", "tokens": [50364, 400, 370, 291, 393, 35925, 552, 1214, 293, 764, 552, 445, 411, 257, 700, 1508, 13326, 294, 2699, 76, 24387, 13, 50664, 50664, 286, 2441, 498, 456, 576, 312, 512, 1333, 295, 411, 2183, 9007, 300, 727, 312, 1096, 411, 365, 2699, 76, 3131, 420, 746, 300, 291, 727, 362, 309, 1668, 721, 13, 51114, 51114, 440, 1154, 307, 498, 291, 434, 1228, 498, 291, 434, 5141, 484, 281, 6828, 293, 721, 411, 300, 11, 309, 727, 1813, 2252, 498, 291, 434, 1588, 7186, 990, 14511, 293, 721, 411, 300, 13, 51564, 51564, 865, 11, 341, 307, 1009, 264, 1154, 365, 13437, 5215, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07138003243340386, "compression_ratio": 1.7884615384615385, "no_caption_prob": 4.264382005203515e-05}, {"id": 228, "seek": 242000, "start": 2420.0, "end": 2427.0, "text": " My thing is that instead of having every property be a CSS style, you could probably have an intermediate type.", "tokens": [50364, 1222, 551, 307, 300, 2602, 295, 1419, 633, 4707, 312, 257, 24387, 3758, 11, 291, 727, 1391, 362, 364, 19376, 2010, 13, 50714, 50714, 400, 550, 562, 291, 853, 281, 4088, 309, 666, 257, 24387, 4707, 11, 550, 291, 360, 439, 264, 1481, 721, 13, 50964, 50964, 400, 1310, 498, 291, 360, 300, 11, 291, 393, 611, 652, 309, 589, 337, 2699, 76, 17995, 13, 51214, 51214, 583, 300, 576, 312, 257, 857, 544, 12414, 570, 295, 577, 264, 24387, 5359, 366, 18033, 13, 2704, 406, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0685786362532731, "compression_ratio": 1.592920353982301, "no_caption_prob": 3.373640720383264e-05}, {"id": 229, "seek": 242000, "start": 2427.0, "end": 2432.0, "text": " And then when you try to transform it into a CSS property, then you do all the nice things.", "tokens": [50364, 1222, 551, 307, 300, 2602, 295, 1419, 633, 4707, 312, 257, 24387, 3758, 11, 291, 727, 1391, 362, 364, 19376, 2010, 13, 50714, 50714, 400, 550, 562, 291, 853, 281, 4088, 309, 666, 257, 24387, 4707, 11, 550, 291, 360, 439, 264, 1481, 721, 13, 50964, 50964, 400, 1310, 498, 291, 360, 300, 11, 291, 393, 611, 652, 309, 589, 337, 2699, 76, 17995, 13, 51214, 51214, 583, 300, 576, 312, 257, 857, 544, 12414, 570, 295, 577, 264, 24387, 5359, 366, 18033, 13, 2704, 406, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0685786362532731, "compression_ratio": 1.592920353982301, "no_caption_prob": 3.373640720383264e-05}, {"id": 230, "seek": 242000, "start": 2432.0, "end": 2437.0, "text": " And maybe if you do that, you can also make it work for Elm HTML.", "tokens": [50364, 1222, 551, 307, 300, 2602, 295, 1419, 633, 4707, 312, 257, 24387, 3758, 11, 291, 727, 1391, 362, 364, 19376, 2010, 13, 50714, 50714, 400, 550, 562, 291, 853, 281, 4088, 309, 666, 257, 24387, 4707, 11, 550, 291, 360, 439, 264, 1481, 721, 13, 50964, 50964, 400, 1310, 498, 291, 360, 300, 11, 291, 393, 611, 652, 309, 589, 337, 2699, 76, 17995, 13, 51214, 51214, 583, 300, 576, 312, 257, 857, 544, 12414, 570, 295, 577, 264, 24387, 5359, 366, 18033, 13, 2704, 406, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0685786362532731, "compression_ratio": 1.592920353982301, "no_caption_prob": 3.373640720383264e-05}, {"id": 231, "seek": 242000, "start": 2437.0, "end": 2443.0, "text": " But that would be a bit more tricky because of how the CSS classes are handled. Maybe not.", "tokens": [50364, 1222, 551, 307, 300, 2602, 295, 1419, 633, 4707, 312, 257, 24387, 3758, 11, 291, 727, 1391, 362, 364, 19376, 2010, 13, 50714, 50714, 400, 550, 562, 291, 853, 281, 4088, 309, 666, 257, 24387, 4707, 11, 550, 291, 360, 439, 264, 1481, 721, 13, 50964, 50964, 400, 1310, 498, 291, 360, 300, 11, 291, 393, 611, 652, 309, 589, 337, 2699, 76, 17995, 13, 51214, 51214, 583, 300, 576, 312, 257, 857, 544, 12414, 570, 295, 577, 264, 24387, 5359, 366, 18033, 13, 2704, 406, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0685786362532731, "compression_ratio": 1.592920353982301, "no_caption_prob": 3.373640720383264e-05}, {"id": 232, "seek": 244300, "start": 2443.0, "end": 2454.0, "text": " You could fork Elm CSS and make a drop in replacement for Elm CSS, and that would allow you to include extra pieces of metadata in your CSS styles.", "tokens": [50364, 509, 727, 17716, 2699, 76, 24387, 293, 652, 257, 3270, 294, 14419, 337, 2699, 76, 24387, 11, 293, 300, 576, 2089, 291, 281, 4090, 2857, 3755, 295, 26603, 294, 428, 24387, 13273, 13, 50914, 50914, 663, 576, 767, 1391, 5039, 264, 1154, 1238, 9594, 13, 51064, 51064, 583, 550, 586, 291, 362, 411, 341, 307, 746, 300, 2171, 2314, 294, 264, 2699, 76, 11311, 307, 411, 291, 362, 411, 341, 307, 257, 3270, 294, 14419, 337, 341, 13, 51514, 51514, 639, 307, 257, 3270, 294, 14419, 337, 341, 13, 467, 311, 411, 2699, 76, 9515, 17995, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0650553561673306, "compression_ratio": 1.873913043478261, "no_caption_prob": 6.814134394517168e-05}, {"id": 233, "seek": 244300, "start": 2454.0, "end": 2457.0, "text": " That would actually probably solve the problem pretty nicely.", "tokens": [50364, 509, 727, 17716, 2699, 76, 24387, 293, 652, 257, 3270, 294, 14419, 337, 2699, 76, 24387, 11, 293, 300, 576, 2089, 291, 281, 4090, 2857, 3755, 295, 26603, 294, 428, 24387, 13273, 13, 50914, 50914, 663, 576, 767, 1391, 5039, 264, 1154, 1238, 9594, 13, 51064, 51064, 583, 550, 586, 291, 362, 411, 341, 307, 746, 300, 2171, 2314, 294, 264, 2699, 76, 11311, 307, 411, 291, 362, 411, 341, 307, 257, 3270, 294, 14419, 337, 341, 13, 51514, 51514, 639, 307, 257, 3270, 294, 14419, 337, 341, 13, 467, 311, 411, 2699, 76, 9515, 17995, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0650553561673306, "compression_ratio": 1.873913043478261, "no_caption_prob": 6.814134394517168e-05}, {"id": 234, "seek": 244300, "start": 2457.0, "end": 2466.0, "text": " But then now you have like this is something that sometimes happens in the Elm ecosystem is like you have like this is a drop in replacement for this.", "tokens": [50364, 509, 727, 17716, 2699, 76, 24387, 293, 652, 257, 3270, 294, 14419, 337, 2699, 76, 24387, 11, 293, 300, 576, 2089, 291, 281, 4090, 2857, 3755, 295, 26603, 294, 428, 24387, 13273, 13, 50914, 50914, 663, 576, 767, 1391, 5039, 264, 1154, 1238, 9594, 13, 51064, 51064, 583, 550, 586, 291, 362, 411, 341, 307, 746, 300, 2171, 2314, 294, 264, 2699, 76, 11311, 307, 411, 291, 362, 411, 341, 307, 257, 3270, 294, 14419, 337, 341, 13, 51514, 51514, 639, 307, 257, 3270, 294, 14419, 337, 341, 13, 467, 311, 411, 2699, 76, 9515, 17995, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0650553561673306, "compression_ratio": 1.873913043478261, "no_caption_prob": 6.814134394517168e-05}, {"id": 235, "seek": 244300, "start": 2466.0, "end": 2470.0, "text": " This is a drop in replacement for this. It's like Elm accessible HTML.", "tokens": [50364, 509, 727, 17716, 2699, 76, 24387, 293, 652, 257, 3270, 294, 14419, 337, 2699, 76, 24387, 11, 293, 300, 576, 2089, 291, 281, 4090, 2857, 3755, 295, 26603, 294, 428, 24387, 13273, 13, 50914, 50914, 663, 576, 767, 1391, 5039, 264, 1154, 1238, 9594, 13, 51064, 51064, 583, 550, 586, 291, 362, 411, 341, 307, 746, 300, 2171, 2314, 294, 264, 2699, 76, 11311, 307, 411, 291, 362, 411, 341, 307, 257, 3270, 294, 14419, 337, 341, 13, 51514, 51514, 639, 307, 257, 3270, 294, 14419, 337, 341, 13, 467, 311, 411, 2699, 76, 9515, 17995, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0650553561673306, "compression_ratio": 1.873913043478261, "no_caption_prob": 6.814134394517168e-05}, {"id": 236, "seek": 247000, "start": 2470.0, "end": 2476.0, "text": " And then there's Elm CSS. And what if you want to use Elm CSS with accessible HTML?", "tokens": [50364, 400, 550, 456, 311, 2699, 76, 24387, 13, 400, 437, 498, 291, 528, 281, 764, 2699, 76, 24387, 365, 9515, 17995, 30, 50664, 50664, 814, 500, 380, 534, 35925, 570, 291, 1066, 411, 4084, 613, 3270, 294, 3248, 41140, 337, 721, 13, 50864, 50864, 7021, 11, 2086, 13, 400, 341, 307, 746, 286, 390, 1953, 466, 13, 51014, 51014, 583, 2293, 13, 286, 500, 380, 528, 281, 652, 1939, 1071, 15439, 1716, 11, 286, 2041, 11, 597, 307, 406, 18218, 13, 51314, 51314, 400, 286, 519, 286, 994, 380, 519, 295, 508, 2032, 268, 311, 1558, 11, 767, 11, 597, 286, 519, 307, 257, 665, 1391, 257, 534, 665, 1558, 281, 362, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08458458664070846, "compression_ratio": 1.6308243727598566, "no_caption_prob": 3.1200950616039336e-05}, {"id": 237, "seek": 247000, "start": 2476.0, "end": 2480.0, "text": " They don't really compose because you keep like creating these drop in replacements for things.", "tokens": [50364, 400, 550, 456, 311, 2699, 76, 24387, 13, 400, 437, 498, 291, 528, 281, 764, 2699, 76, 24387, 365, 9515, 17995, 30, 50664, 50664, 814, 500, 380, 534, 35925, 570, 291, 1066, 411, 4084, 613, 3270, 294, 3248, 41140, 337, 721, 13, 50864, 50864, 7021, 11, 2086, 13, 400, 341, 307, 746, 286, 390, 1953, 466, 13, 51014, 51014, 583, 2293, 13, 286, 500, 380, 528, 281, 652, 1939, 1071, 15439, 1716, 11, 286, 2041, 11, 597, 307, 406, 18218, 13, 51314, 51314, 400, 286, 519, 286, 994, 380, 519, 295, 508, 2032, 268, 311, 1558, 11, 767, 11, 597, 286, 519, 307, 257, 665, 1391, 257, 534, 665, 1558, 281, 362, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08458458664070846, "compression_ratio": 1.6308243727598566, "no_caption_prob": 3.1200950616039336e-05}, {"id": 238, "seek": 247000, "start": 2480.0, "end": 2483.0, "text": " Absolutely, yes. And this is something I was thinking about.", "tokens": [50364, 400, 550, 456, 311, 2699, 76, 24387, 13, 400, 437, 498, 291, 528, 281, 764, 2699, 76, 24387, 365, 9515, 17995, 30, 50664, 50664, 814, 500, 380, 534, 35925, 570, 291, 1066, 411, 4084, 613, 3270, 294, 3248, 41140, 337, 721, 13, 50864, 50864, 7021, 11, 2086, 13, 400, 341, 307, 746, 286, 390, 1953, 466, 13, 51014, 51014, 583, 2293, 13, 286, 500, 380, 528, 281, 652, 1939, 1071, 15439, 1716, 11, 286, 2041, 11, 597, 307, 406, 18218, 13, 51314, 51314, 400, 286, 519, 286, 994, 380, 519, 295, 508, 2032, 268, 311, 1558, 11, 767, 11, 597, 286, 519, 307, 257, 665, 1391, 257, 534, 665, 1558, 281, 362, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08458458664070846, "compression_ratio": 1.6308243727598566, "no_caption_prob": 3.1200950616039336e-05}, {"id": 239, "seek": 247000, "start": 2483.0, "end": 2489.0, "text": " But exactly. I don't want to make yet another competing project, I guess, which is not compatible.", "tokens": [50364, 400, 550, 456, 311, 2699, 76, 24387, 13, 400, 437, 498, 291, 528, 281, 764, 2699, 76, 24387, 365, 9515, 17995, 30, 50664, 50664, 814, 500, 380, 534, 35925, 570, 291, 1066, 411, 4084, 613, 3270, 294, 3248, 41140, 337, 721, 13, 50864, 50864, 7021, 11, 2086, 13, 400, 341, 307, 746, 286, 390, 1953, 466, 13, 51014, 51014, 583, 2293, 13, 286, 500, 380, 528, 281, 652, 1939, 1071, 15439, 1716, 11, 286, 2041, 11, 597, 307, 406, 18218, 13, 51314, 51314, 400, 286, 519, 286, 994, 380, 519, 295, 508, 2032, 268, 311, 1558, 11, 767, 11, 597, 286, 519, 307, 257, 665, 1391, 257, 534, 665, 1558, 281, 362, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08458458664070846, "compression_ratio": 1.6308243727598566, "no_caption_prob": 3.1200950616039336e-05}, {"id": 240, "seek": 247000, "start": 2489.0, "end": 2497.0, "text": " And I think I didn't think of Jeroen's idea, actually, which I think is a good probably a really good idea to have.", "tokens": [50364, 400, 550, 456, 311, 2699, 76, 24387, 13, 400, 437, 498, 291, 528, 281, 764, 2699, 76, 24387, 365, 9515, 17995, 30, 50664, 50664, 814, 500, 380, 534, 35925, 570, 291, 1066, 411, 4084, 613, 3270, 294, 3248, 41140, 337, 721, 13, 50864, 50864, 7021, 11, 2086, 13, 400, 341, 307, 746, 286, 390, 1953, 466, 13, 51014, 51014, 583, 2293, 13, 286, 500, 380, 528, 281, 652, 1939, 1071, 15439, 1716, 11, 286, 2041, 11, 597, 307, 406, 18218, 13, 51314, 51314, 400, 286, 519, 286, 994, 380, 519, 295, 508, 2032, 268, 311, 1558, 11, 767, 11, 597, 286, 519, 307, 257, 665, 1391, 257, 534, 665, 1558, 281, 362, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08458458664070846, "compression_ratio": 1.6308243727598566, "no_caption_prob": 3.1200950616039336e-05}, {"id": 241, "seek": 249700, "start": 2497.0, "end": 2508.0, "text": " Oh, right. This intermediary library, I guess, which would allow you to sort your definitions by some kind of internal key.", "tokens": [50364, 876, 11, 558, 13, 639, 15184, 822, 6405, 11, 286, 2041, 11, 597, 576, 2089, 291, 281, 1333, 428, 21988, 538, 512, 733, 295, 6920, 2141, 13, 50914, 50914, 400, 300, 576, 5039, 264, 2734, 13, 440, 3827, 307, 1009, 281, 909, 544, 3467, 13, 51114, 51114, 865, 11, 286, 519, 456, 311, 411, 341, 472, 6513, 11, 633, 1154, 294, 3820, 3497, 393, 312, 13041, 538, 1071, 4583, 295, 1016, 621, 882, 13, 51414, 51414, 16192, 264, 1154, 295, 886, 867, 7914, 295, 1016, 621, 882, 13, 7587, 13, 1079, 13, 16192, 3389, 2740, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08563482284545898, "compression_ratio": 1.6456692913385826, "no_caption_prob": 4.860422905039741e-06}, {"id": 242, "seek": 249700, "start": 2508.0, "end": 2512.0, "text": " And that would solve the issue. The solution is always to add more types.", "tokens": [50364, 876, 11, 558, 13, 639, 15184, 822, 6405, 11, 286, 2041, 11, 597, 576, 2089, 291, 281, 1333, 428, 21988, 538, 512, 733, 295, 6920, 2141, 13, 50914, 50914, 400, 300, 576, 5039, 264, 2734, 13, 440, 3827, 307, 1009, 281, 909, 544, 3467, 13, 51114, 51114, 865, 11, 286, 519, 456, 311, 411, 341, 472, 6513, 11, 633, 1154, 294, 3820, 3497, 393, 312, 13041, 538, 1071, 4583, 295, 1016, 621, 882, 13, 51414, 51414, 16192, 264, 1154, 295, 886, 867, 7914, 295, 1016, 621, 882, 13, 7587, 13, 1079, 13, 16192, 3389, 2740, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08563482284545898, "compression_ratio": 1.6456692913385826, "no_caption_prob": 4.860422905039741e-06}, {"id": 243, "seek": 249700, "start": 2512.0, "end": 2518.0, "text": " Yeah, I think there's like this one quote, every problem in computer science can be solved by another layer of indirection.", "tokens": [50364, 876, 11, 558, 13, 639, 15184, 822, 6405, 11, 286, 2041, 11, 597, 576, 2089, 291, 281, 1333, 428, 21988, 538, 512, 733, 295, 6920, 2141, 13, 50914, 50914, 400, 300, 576, 5039, 264, 2734, 13, 440, 3827, 307, 1009, 281, 909, 544, 3467, 13, 51114, 51114, 865, 11, 286, 519, 456, 311, 411, 341, 472, 6513, 11, 633, 1154, 294, 3820, 3497, 393, 312, 13041, 538, 1071, 4583, 295, 1016, 621, 882, 13, 51414, 51414, 16192, 264, 1154, 295, 886, 867, 7914, 295, 1016, 621, 882, 13, 7587, 13, 1079, 13, 16192, 3389, 2740, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08563482284545898, "compression_ratio": 1.6456692913385826, "no_caption_prob": 4.860422905039741e-06}, {"id": 244, "seek": 249700, "start": 2518.0, "end": 2525.0, "text": " Except the problem of too many layers of indirection. Exactly. Yes. Except performance problems.", "tokens": [50364, 876, 11, 558, 13, 639, 15184, 822, 6405, 11, 286, 2041, 11, 597, 576, 2089, 291, 281, 1333, 428, 21988, 538, 512, 733, 295, 6920, 2141, 13, 50914, 50914, 400, 300, 576, 5039, 264, 2734, 13, 440, 3827, 307, 1009, 281, 909, 544, 3467, 13, 51114, 51114, 865, 11, 286, 519, 456, 311, 411, 341, 472, 6513, 11, 633, 1154, 294, 3820, 3497, 393, 312, 13041, 538, 1071, 4583, 295, 1016, 621, 882, 13, 51414, 51414, 16192, 264, 1154, 295, 886, 867, 7914, 295, 1016, 621, 882, 13, 7587, 13, 1079, 13, 16192, 3389, 2740, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08563482284545898, "compression_ratio": 1.6456692913385826, "no_caption_prob": 4.860422905039741e-06}, {"id": 245, "seek": 252500, "start": 2525.0, "end": 2530.0, "text": " So what would be the reasons for using Elm UI or using Tailwind?", "tokens": [50364, 407, 437, 576, 312, 264, 4112, 337, 1228, 2699, 76, 15682, 420, 1228, 46074, 12199, 30, 50614, 50614, 1610, 604, 661, 21669, 411, 2699, 76, 17995, 30, 50764, 50764, 865, 11, 370, 286, 519, 411, 412, 264, 588, 4965, 11, 2699, 76, 15682, 293, 2699, 76, 420, 46074, 12199, 366, 12606, 2531, 2663, 11, 51164, 51164, 597, 307, 1382, 281, 652, 264, 10754, 1752, 295, 1228, 27944, 5821, 294, 264, 3670, 1101, 13, 51564, 51564, 407, 550, 11, 1338, 11, 309, 311, 264, 1168, 562, 360, 291, 764, 472, 420, 264, 661, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10288289650199339, "compression_ratio": 1.5361702127659576, "no_caption_prob": 0.00025312392972409725}, {"id": 246, "seek": 252500, "start": 2530.0, "end": 2533.0, "text": " Or any other variants like Elm HTML?", "tokens": [50364, 407, 437, 576, 312, 264, 4112, 337, 1228, 2699, 76, 15682, 420, 1228, 46074, 12199, 30, 50614, 50614, 1610, 604, 661, 21669, 411, 2699, 76, 17995, 30, 50764, 50764, 865, 11, 370, 286, 519, 411, 412, 264, 588, 4965, 11, 2699, 76, 15682, 293, 2699, 76, 420, 46074, 12199, 366, 12606, 2531, 2663, 11, 51164, 51164, 597, 307, 1382, 281, 652, 264, 10754, 1752, 295, 1228, 27944, 5821, 294, 264, 3670, 1101, 13, 51564, 51564, 407, 550, 11, 1338, 11, 309, 311, 264, 1168, 562, 360, 291, 764, 472, 420, 264, 661, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10288289650199339, "compression_ratio": 1.5361702127659576, "no_caption_prob": 0.00025312392972409725}, {"id": 247, "seek": 252500, "start": 2533.0, "end": 2541.0, "text": " Yeah, so I think like at the very core, Elm UI and Elm or Tailwind are solving similar issues,", "tokens": [50364, 407, 437, 576, 312, 264, 4112, 337, 1228, 2699, 76, 15682, 420, 1228, 46074, 12199, 30, 50614, 50614, 1610, 604, 661, 21669, 411, 2699, 76, 17995, 30, 50764, 50764, 865, 11, 370, 286, 519, 411, 412, 264, 588, 4965, 11, 2699, 76, 15682, 293, 2699, 76, 420, 46074, 12199, 366, 12606, 2531, 2663, 11, 51164, 51164, 597, 307, 1382, 281, 652, 264, 10754, 1752, 295, 1228, 27944, 5821, 294, 264, 3670, 1101, 13, 51564, 51564, 407, 550, 11, 1338, 11, 309, 311, 264, 1168, 562, 360, 291, 764, 472, 420, 264, 661, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10288289650199339, "compression_ratio": 1.5361702127659576, "no_caption_prob": 0.00025312392972409725}, {"id": 248, "seek": 252500, "start": 2541.0, "end": 2549.0, "text": " which is trying to make the developer experience of using styling applications in the web better.", "tokens": [50364, 407, 437, 576, 312, 264, 4112, 337, 1228, 2699, 76, 15682, 420, 1228, 46074, 12199, 30, 50614, 50614, 1610, 604, 661, 21669, 411, 2699, 76, 17995, 30, 50764, 50764, 865, 11, 370, 286, 519, 411, 412, 264, 588, 4965, 11, 2699, 76, 15682, 293, 2699, 76, 420, 46074, 12199, 366, 12606, 2531, 2663, 11, 51164, 51164, 597, 307, 1382, 281, 652, 264, 10754, 1752, 295, 1228, 27944, 5821, 294, 264, 3670, 1101, 13, 51564, 51564, 407, 550, 11, 1338, 11, 309, 311, 264, 1168, 562, 360, 291, 764, 472, 420, 264, 661, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10288289650199339, "compression_ratio": 1.5361702127659576, "no_caption_prob": 0.00025312392972409725}, {"id": 249, "seek": 252500, "start": 2549.0, "end": 2553.0, "text": " So then, yeah, it's the question when do you use one or the other?", "tokens": [50364, 407, 437, 576, 312, 264, 4112, 337, 1228, 2699, 76, 15682, 420, 1228, 46074, 12199, 30, 50614, 50614, 1610, 604, 661, 21669, 411, 2699, 76, 17995, 30, 50764, 50764, 865, 11, 370, 286, 519, 411, 412, 264, 588, 4965, 11, 2699, 76, 15682, 293, 2699, 76, 420, 46074, 12199, 366, 12606, 2531, 2663, 11, 51164, 51164, 597, 307, 1382, 281, 652, 264, 10754, 1752, 295, 1228, 27944, 5821, 294, 264, 3670, 1101, 13, 51564, 51564, 407, 550, 11, 1338, 11, 309, 311, 264, 1168, 562, 360, 291, 764, 472, 420, 264, 661, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10288289650199339, "compression_ratio": 1.5361702127659576, "no_caption_prob": 0.00025312392972409725}, {"id": 250, "seek": 255300, "start": 2553.0, "end": 2562.0, "text": " And I think Elm UI is really useful for people who don't know or don't want to know or don't have to know how to use CSS yet,", "tokens": [50364, 400, 286, 519, 2699, 76, 15682, 307, 534, 4420, 337, 561, 567, 500, 380, 458, 420, 500, 380, 528, 281, 458, 420, 500, 380, 362, 281, 458, 577, 281, 764, 24387, 1939, 11, 50814, 50814, 570, 309, 534, 307, 709, 18587, 11, 1673, 286, 2378, 380, 1143, 309, 709, 11, 286, 362, 281, 584, 13, 51014, 51014, 1133, 286, 1409, 11, 337, 1365, 11, 3579, 452, 6968, 11, 286, 390, 1953, 466, 1228, 2699, 76, 15682, 293, 309, 390, 293, 309, 307, 264, 7576, 337, 2699, 76, 7183, 13, 51364, 51364, 440, 2699, 76, 7183, 722, 558, 586, 11, 558, 30, 663, 311, 2074, 13, 286, 767, 362, 364, 2699, 76, 7183, 46074, 12199, 22465, 49040, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09441589323942326, "compression_ratio": 1.720472440944882, "no_caption_prob": 0.00020025705453008413}, {"id": 251, "seek": 255300, "start": 2562.0, "end": 2566.0, "text": " because it really is much simpler, though I haven't used it much, I have to say.", "tokens": [50364, 400, 286, 519, 2699, 76, 15682, 307, 534, 4420, 337, 561, 567, 500, 380, 458, 420, 500, 380, 528, 281, 458, 420, 500, 380, 362, 281, 458, 577, 281, 764, 24387, 1939, 11, 50814, 50814, 570, 309, 534, 307, 709, 18587, 11, 1673, 286, 2378, 380, 1143, 309, 709, 11, 286, 362, 281, 584, 13, 51014, 51014, 1133, 286, 1409, 11, 337, 1365, 11, 3579, 452, 6968, 11, 286, 390, 1953, 466, 1228, 2699, 76, 15682, 293, 309, 390, 293, 309, 307, 264, 7576, 337, 2699, 76, 7183, 13, 51364, 51364, 440, 2699, 76, 7183, 722, 558, 586, 11, 558, 30, 663, 311, 2074, 13, 286, 767, 362, 364, 2699, 76, 7183, 46074, 12199, 22465, 49040, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09441589323942326, "compression_ratio": 1.720472440944882, "no_caption_prob": 0.00020025705453008413}, {"id": 252, "seek": 255300, "start": 2566.0, "end": 2573.0, "text": " When I started, for example, writing my blog, I was thinking about using Elm UI and it was and it is the default for Elm pages.", "tokens": [50364, 400, 286, 519, 2699, 76, 15682, 307, 534, 4420, 337, 561, 567, 500, 380, 458, 420, 500, 380, 528, 281, 458, 420, 500, 380, 362, 281, 458, 577, 281, 764, 24387, 1939, 11, 50814, 50814, 570, 309, 534, 307, 709, 18587, 11, 1673, 286, 2378, 380, 1143, 309, 709, 11, 286, 362, 281, 584, 13, 51014, 51014, 1133, 286, 1409, 11, 337, 1365, 11, 3579, 452, 6968, 11, 286, 390, 1953, 466, 1228, 2699, 76, 15682, 293, 309, 390, 293, 309, 307, 264, 7576, 337, 2699, 76, 7183, 13, 51364, 51364, 440, 2699, 76, 7183, 722, 558, 586, 11, 558, 30, 663, 311, 2074, 13, 286, 767, 362, 364, 2699, 76, 7183, 46074, 12199, 22465, 49040, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09441589323942326, "compression_ratio": 1.720472440944882, "no_caption_prob": 0.00020025705453008413}, {"id": 253, "seek": 255300, "start": 2573.0, "end": 2580.0, "text": " The Elm pages start right now, right? That's true. I actually have an Elm pages Tailwind starter repo,", "tokens": [50364, 400, 286, 519, 2699, 76, 15682, 307, 534, 4420, 337, 561, 567, 500, 380, 458, 420, 500, 380, 528, 281, 458, 420, 500, 380, 362, 281, 458, 577, 281, 764, 24387, 1939, 11, 50814, 50814, 570, 309, 534, 307, 709, 18587, 11, 1673, 286, 2378, 380, 1143, 309, 709, 11, 286, 362, 281, 584, 13, 51014, 51014, 1133, 286, 1409, 11, 337, 1365, 11, 3579, 452, 6968, 11, 286, 390, 1953, 466, 1228, 2699, 76, 15682, 293, 309, 390, 293, 309, 307, 264, 7576, 337, 2699, 76, 7183, 13, 51364, 51364, 440, 2699, 76, 7183, 722, 558, 586, 11, 558, 30, 663, 311, 2074, 13, 286, 767, 362, 364, 2699, 76, 7183, 46074, 12199, 22465, 49040, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09441589323942326, "compression_ratio": 1.720472440944882, "no_caption_prob": 0.00020025705453008413}, {"id": 254, "seek": 258000, "start": 2580.0, "end": 2584.0, "text": " but it's out of date and I'm planning to update it to use Elm Tailwind modules.", "tokens": [50364, 457, 309, 311, 484, 295, 4002, 293, 286, 478, 5038, 281, 5623, 309, 281, 764, 2699, 76, 46074, 12199, 16679, 13, 50564, 50564, 876, 11, 2086, 13, 3769, 13, 583, 456, 311, 11, 337, 1365, 11, 456, 311, 512, 5311, 281, 1228, 24387, 5347, 281, 2699, 76, 15682, 11, 597, 576, 312, 11, 337, 1365, 11, 51064, 51064, 264, 636, 291, 393, 764, 3021, 24109, 337, 819, 4302, 11602, 293, 286, 2041, 512, 4356, 721, 11, 51414, 51414, 597, 576, 312, 411, 17628, 4122, 294, 24387, 11, 597, 362, 281, 312, 3869, 294, 2699, 76, 15682, 700, 13, 51714, 51714, 1743, 24387, 42905, 11, 337, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1253447575612111, "compression_ratio": 1.6599190283400809, "no_caption_prob": 3.4267395676579326e-05}, {"id": 255, "seek": 258000, "start": 2584.0, "end": 2594.0, "text": " Oh, yes. Great. But there's, for example, there's some benefits to using CSS compared to Elm UI, which would be, for example,", "tokens": [50364, 457, 309, 311, 484, 295, 4002, 293, 286, 478, 5038, 281, 5623, 309, 281, 764, 2699, 76, 46074, 12199, 16679, 13, 50564, 50564, 876, 11, 2086, 13, 3769, 13, 583, 456, 311, 11, 337, 1365, 11, 456, 311, 512, 5311, 281, 1228, 24387, 5347, 281, 2699, 76, 15682, 11, 597, 576, 312, 11, 337, 1365, 11, 51064, 51064, 264, 636, 291, 393, 764, 3021, 24109, 337, 819, 4302, 11602, 293, 286, 2041, 512, 4356, 721, 11, 51414, 51414, 597, 576, 312, 411, 17628, 4122, 294, 24387, 11, 597, 362, 281, 312, 3869, 294, 2699, 76, 15682, 700, 13, 51714, 51714, 1743, 24387, 42905, 11, 337, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1253447575612111, "compression_ratio": 1.6599190283400809, "no_caption_prob": 3.4267395676579326e-05}, {"id": 256, "seek": 258000, "start": 2594.0, "end": 2601.0, "text": " the way you can use media queries for different device sizes and I guess some smaller things,", "tokens": [50364, 457, 309, 311, 484, 295, 4002, 293, 286, 478, 5038, 281, 5623, 309, 281, 764, 2699, 76, 46074, 12199, 16679, 13, 50564, 50564, 876, 11, 2086, 13, 3769, 13, 583, 456, 311, 11, 337, 1365, 11, 456, 311, 512, 5311, 281, 1228, 24387, 5347, 281, 2699, 76, 15682, 11, 597, 576, 312, 11, 337, 1365, 11, 51064, 51064, 264, 636, 291, 393, 764, 3021, 24109, 337, 819, 4302, 11602, 293, 286, 2041, 512, 4356, 721, 11, 51414, 51414, 597, 576, 312, 411, 17628, 4122, 294, 24387, 11, 597, 362, 281, 312, 3869, 294, 2699, 76, 15682, 700, 13, 51714, 51714, 1743, 24387, 42905, 11, 337, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1253447575612111, "compression_ratio": 1.6599190283400809, "no_caption_prob": 3.4267395676579326e-05}, {"id": 257, "seek": 258000, "start": 2601.0, "end": 2607.0, "text": " which would be like newer features in CSS, which have to be added in Elm UI first.", "tokens": [50364, 457, 309, 311, 484, 295, 4002, 293, 286, 478, 5038, 281, 5623, 309, 281, 764, 2699, 76, 46074, 12199, 16679, 13, 50564, 50564, 876, 11, 2086, 13, 3769, 13, 583, 456, 311, 11, 337, 1365, 11, 456, 311, 512, 5311, 281, 1228, 24387, 5347, 281, 2699, 76, 15682, 11, 597, 576, 312, 11, 337, 1365, 11, 51064, 51064, 264, 636, 291, 393, 764, 3021, 24109, 337, 819, 4302, 11602, 293, 286, 2041, 512, 4356, 721, 11, 51414, 51414, 597, 576, 312, 411, 17628, 4122, 294, 24387, 11, 597, 362, 281, 312, 3869, 294, 2699, 76, 15682, 700, 13, 51714, 51714, 1743, 24387, 42905, 11, 337, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1253447575612111, "compression_ratio": 1.6599190283400809, "no_caption_prob": 3.4267395676579326e-05}, {"id": 258, "seek": 258000, "start": 2607.0, "end": 2609.0, "text": " Like CSS Grid, for example.", "tokens": [50364, 457, 309, 311, 484, 295, 4002, 293, 286, 478, 5038, 281, 5623, 309, 281, 764, 2699, 76, 46074, 12199, 16679, 13, 50564, 50564, 876, 11, 2086, 13, 3769, 13, 583, 456, 311, 11, 337, 1365, 11, 456, 311, 512, 5311, 281, 1228, 24387, 5347, 281, 2699, 76, 15682, 11, 597, 576, 312, 11, 337, 1365, 11, 51064, 51064, 264, 636, 291, 393, 764, 3021, 24109, 337, 819, 4302, 11602, 293, 286, 2041, 512, 4356, 721, 11, 51414, 51414, 597, 576, 312, 411, 17628, 4122, 294, 24387, 11, 597, 362, 281, 312, 3869, 294, 2699, 76, 15682, 700, 13, 51714, 51714, 1743, 24387, 42905, 11, 337, 1365, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1253447575612111, "compression_ratio": 1.6599190283400809, "no_caption_prob": 3.4267395676579326e-05}, {"id": 259, "seek": 260900, "start": 2609.0, "end": 2616.0, "text": " Exactly. CSS Grid or I don't know, like things like focus within or stuff like that.", "tokens": [50364, 7587, 13, 24387, 42905, 420, 286, 500, 380, 458, 11, 411, 721, 411, 1879, 1951, 420, 1507, 411, 300, 13, 50714, 50714, 2704, 286, 478, 406, 988, 13, 2704, 286, 478, 2085, 510, 13, 400, 341, 307, 767, 1217, 12270, 13, 583, 1338, 11, 24387, 42905, 576, 312, 364, 1365, 13, 51064, 51064, 407, 562, 286, 390, 1228, 562, 286, 390, 3579, 452, 6968, 11, 286, 390, 611, 1953, 466, 341, 1168, 11, 51314, 51314, 820, 286, 764, 46074, 12199, 420, 820, 286, 764, 2699, 76, 15682, 30, 400, 309, 4590, 493, 885, 46074, 12199, 570, 286, 643, 264, 1821, 20552, 281, 589, 8944, 293, 1553, 15778, 294, 300, 1389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12766919343367866, "compression_ratio": 1.6370106761565837, "no_caption_prob": 0.00010390106035629287}, {"id": 260, "seek": 260900, "start": 2616.0, "end": 2623.0, "text": " Maybe I'm not sure. Maybe I'm wrong here. And this is actually already implemented. But yeah, CSS Grid would be an example.", "tokens": [50364, 7587, 13, 24387, 42905, 420, 286, 500, 380, 458, 11, 411, 721, 411, 1879, 1951, 420, 1507, 411, 300, 13, 50714, 50714, 2704, 286, 478, 406, 988, 13, 2704, 286, 478, 2085, 510, 13, 400, 341, 307, 767, 1217, 12270, 13, 583, 1338, 11, 24387, 42905, 576, 312, 364, 1365, 13, 51064, 51064, 407, 562, 286, 390, 1228, 562, 286, 390, 3579, 452, 6968, 11, 286, 390, 611, 1953, 466, 341, 1168, 11, 51314, 51314, 820, 286, 764, 46074, 12199, 420, 820, 286, 764, 2699, 76, 15682, 30, 400, 309, 4590, 493, 885, 46074, 12199, 570, 286, 643, 264, 1821, 20552, 281, 589, 8944, 293, 1553, 15778, 294, 300, 1389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12766919343367866, "compression_ratio": 1.6370106761565837, "no_caption_prob": 0.00010390106035629287}, {"id": 261, "seek": 260900, "start": 2623.0, "end": 2628.0, "text": " So when I was using when I was writing my blog, I was also thinking about this question,", "tokens": [50364, 7587, 13, 24387, 42905, 420, 286, 500, 380, 458, 11, 411, 721, 411, 1879, 1951, 420, 1507, 411, 300, 13, 50714, 50714, 2704, 286, 478, 406, 988, 13, 2704, 286, 478, 2085, 510, 13, 400, 341, 307, 767, 1217, 12270, 13, 583, 1338, 11, 24387, 42905, 576, 312, 364, 1365, 13, 51064, 51064, 407, 562, 286, 390, 1228, 562, 286, 390, 3579, 452, 6968, 11, 286, 390, 611, 1953, 466, 341, 1168, 11, 51314, 51314, 820, 286, 764, 46074, 12199, 420, 820, 286, 764, 2699, 76, 15682, 30, 400, 309, 4590, 493, 885, 46074, 12199, 570, 286, 643, 264, 1821, 20552, 281, 589, 8944, 293, 1553, 15778, 294, 300, 1389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12766919343367866, "compression_ratio": 1.6370106761565837, "no_caption_prob": 0.00010390106035629287}, {"id": 262, "seek": 260900, "start": 2628.0, "end": 2637.0, "text": " should I use Tailwind or should I use Elm UI? And it ended up being Tailwind because I need the breakpoints to work correctly and without JavaScript in that case.", "tokens": [50364, 7587, 13, 24387, 42905, 420, 286, 500, 380, 458, 11, 411, 721, 411, 1879, 1951, 420, 1507, 411, 300, 13, 50714, 50714, 2704, 286, 478, 406, 988, 13, 2704, 286, 478, 2085, 510, 13, 400, 341, 307, 767, 1217, 12270, 13, 583, 1338, 11, 24387, 42905, 576, 312, 364, 1365, 13, 51064, 51064, 407, 562, 286, 390, 1228, 562, 286, 390, 3579, 452, 6968, 11, 286, 390, 611, 1953, 466, 341, 1168, 11, 51314, 51314, 820, 286, 764, 46074, 12199, 420, 820, 286, 764, 2699, 76, 15682, 30, 400, 309, 4590, 493, 885, 46074, 12199, 570, 286, 643, 264, 1821, 20552, 281, 589, 8944, 293, 1553, 15778, 294, 300, 1389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12766919343367866, "compression_ratio": 1.6370106761565837, "no_caption_prob": 0.00010390106035629287}, {"id": 263, "seek": 263700, "start": 2637.0, "end": 2645.0, "text": " So with media queries. Yeah, I'll give my personal experience report as somebody who's used both a fair amount.", "tokens": [50364, 407, 365, 3021, 24109, 13, 865, 11, 286, 603, 976, 452, 2973, 1752, 2275, 382, 2618, 567, 311, 1143, 1293, 257, 3143, 2372, 13, 50764, 50764, 286, 600, 1096, 257, 688, 295, 2699, 76, 15682, 13, 286, 600, 1096, 257, 688, 295, 46074, 12199, 13, 50964, 50964, 400, 370, 365, 46074, 12199, 11, 512, 295, 264, 721, 300, 366, 733, 295, 7595, 1348, 490, 2699, 76, 15682, 366, 300, 291, 360, 362, 281, 519, 466, 24387, 293, 406, 11865, 309, 1177, 380, 2514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06668471748178656, "compression_ratio": 1.5348837209302326, "no_caption_prob": 0.00010889185796258971}, {"id": 264, "seek": 263700, "start": 2645.0, "end": 2649.0, "text": " I've done a lot of Elm UI. I've done a lot of Tailwind.", "tokens": [50364, 407, 365, 3021, 24109, 13, 865, 11, 286, 603, 976, 452, 2973, 1752, 2275, 382, 2618, 567, 311, 1143, 1293, 257, 3143, 2372, 13, 50764, 50764, 286, 600, 1096, 257, 688, 295, 2699, 76, 15682, 13, 286, 600, 1096, 257, 688, 295, 46074, 12199, 13, 50964, 50964, 400, 370, 365, 46074, 12199, 11, 512, 295, 264, 721, 300, 366, 733, 295, 7595, 1348, 490, 2699, 76, 15682, 366, 300, 291, 360, 362, 281, 519, 466, 24387, 293, 406, 11865, 309, 1177, 380, 2514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06668471748178656, "compression_ratio": 1.5348837209302326, "no_caption_prob": 0.00010889185796258971}, {"id": 265, "seek": 263700, "start": 2649.0, "end": 2662.0, "text": " And so with Tailwind, some of the things that are kind of challenging coming from Elm UI are that you do have to think about CSS and not pretend it doesn't exist.", "tokens": [50364, 407, 365, 3021, 24109, 13, 865, 11, 286, 603, 976, 452, 2973, 1752, 2275, 382, 2618, 567, 311, 1143, 1293, 257, 3143, 2372, 13, 50764, 50764, 286, 600, 1096, 257, 688, 295, 2699, 76, 15682, 13, 286, 600, 1096, 257, 688, 295, 46074, 12199, 13, 50964, 50964, 400, 370, 365, 46074, 12199, 11, 512, 295, 264, 721, 300, 366, 733, 295, 7595, 1348, 490, 2699, 76, 15682, 366, 300, 291, 360, 362, 281, 519, 466, 24387, 293, 406, 11865, 309, 1177, 380, 2514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06668471748178656, "compression_ratio": 1.5348837209302326, "no_caption_prob": 0.00010889185796258971}, {"id": 266, "seek": 266200, "start": 2662.0, "end": 2667.0, "text": " You can pretend that certain parts of CSS don't exist, which is great.", "tokens": [50364, 509, 393, 11865, 300, 1629, 3166, 295, 24387, 500, 380, 2514, 11, 597, 307, 869, 13, 50614, 50614, 400, 309, 311, 294, 2674, 257, 636, 28640, 1752, 813, 437, 286, 600, 632, 5665, 1382, 281, 445, 2464, 11, 291, 458, 11, 24387, 7098, 293, 9028, 21929, 7098, 13, 51014, 51014, 583, 291, 920, 362, 281, 1223, 24387, 293, 577, 721, 589, 13, 1779, 13, 51264, 51264, 509, 360, 13, 509, 920, 362, 281, 1223, 5896, 293, 5896, 1852, 293, 5896, 23060, 293, 3174, 3056, 293, 20833, 926, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09599614143371582, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.00015354652714449912}, {"id": 267, "seek": 266200, "start": 2667.0, "end": 2675.0, "text": " And it's in general a way smoother experience than what I've had personally trying to just write, you know, CSS files and SCSS files.", "tokens": [50364, 509, 393, 11865, 300, 1629, 3166, 295, 24387, 500, 380, 2514, 11, 597, 307, 869, 13, 50614, 50614, 400, 309, 311, 294, 2674, 257, 636, 28640, 1752, 813, 437, 286, 600, 632, 5665, 1382, 281, 445, 2464, 11, 291, 458, 11, 24387, 7098, 293, 9028, 21929, 7098, 13, 51014, 51014, 583, 291, 920, 362, 281, 1223, 24387, 293, 577, 721, 589, 13, 1779, 13, 51264, 51264, 509, 360, 13, 509, 920, 362, 281, 1223, 5896, 293, 5896, 1852, 293, 5896, 23060, 293, 3174, 3056, 293, 20833, 926, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09599614143371582, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.00015354652714449912}, {"id": 268, "seek": 266200, "start": 2675.0, "end": 2680.0, "text": " But you still have to understand CSS and how things work. Right.", "tokens": [50364, 509, 393, 11865, 300, 1629, 3166, 295, 24387, 500, 380, 2514, 11, 597, 307, 869, 13, 50614, 50614, 400, 309, 311, 294, 2674, 257, 636, 28640, 1752, 813, 437, 286, 600, 632, 5665, 1382, 281, 445, 2464, 11, 291, 458, 11, 24387, 7098, 293, 9028, 21929, 7098, 13, 51014, 51014, 583, 291, 920, 362, 281, 1223, 24387, 293, 577, 721, 589, 13, 1779, 13, 51264, 51264, 509, 360, 13, 509, 920, 362, 281, 1223, 5896, 293, 5896, 1852, 293, 5896, 23060, 293, 3174, 3056, 293, 20833, 926, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09599614143371582, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.00015354652714449912}, {"id": 269, "seek": 266200, "start": 2680.0, "end": 2690.0, "text": " You do. You still have to understand flex and flex grow and flex shrink and item center and justify around.", "tokens": [50364, 509, 393, 11865, 300, 1629, 3166, 295, 24387, 500, 380, 2514, 11, 597, 307, 869, 13, 50614, 50614, 400, 309, 311, 294, 2674, 257, 636, 28640, 1752, 813, 437, 286, 600, 632, 5665, 1382, 281, 445, 2464, 11, 291, 458, 11, 24387, 7098, 293, 9028, 21929, 7098, 13, 51014, 51014, 583, 291, 920, 362, 281, 1223, 24387, 293, 577, 721, 589, 13, 1779, 13, 51264, 51264, 509, 360, 13, 509, 920, 362, 281, 1223, 5896, 293, 5896, 1852, 293, 5896, 23060, 293, 3174, 3056, 293, 20833, 926, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09599614143371582, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.00015354652714449912}, {"id": 270, "seek": 269000, "start": 2690.0, "end": 2696.0, "text": " Or, you know, all of these things you have to. And I find myself constantly having to look them up.", "tokens": [50364, 1610, 11, 291, 458, 11, 439, 295, 613, 721, 291, 362, 281, 13, 400, 286, 915, 2059, 6460, 1419, 281, 574, 552, 493, 13, 50664, 50664, 440, 46074, 12199, 24387, 14333, 307, 869, 11, 457, 2699, 76, 15682, 575, 411, 257, 2541, 39118, 293, 309, 393, 584, 11, 2264, 11, 498, 321, 645, 281, 3811, 24387, 490, 8459, 11, 437, 2115, 576, 321, 764, 281, 6786, 613, 721, 30, 51214, 51214, 400, 309, 311, 2238, 13, 509, 458, 11, 291, 500, 380, 362, 281, 411, 1604, 264, 281, 829, 5896, 294, 264, 558, 1081, 13, 51514, 51514, 400, 291, 445, 584, 27739, 322, 264, 2596, 13, 400, 309, 311, 309, 311, 2238, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09010705377301599, "compression_ratio": 1.6195652173913044, "no_caption_prob": 7.966673001646996e-05}, {"id": 271, "seek": 269000, "start": 2696.0, "end": 2707.0, "text": " The Tailwind CSS documentation is great, but Elm UI has like a clean slate and it can say, OK, if we were to imagine CSS from scratch, what terms would we use to describe these things?", "tokens": [50364, 1610, 11, 291, 458, 11, 439, 295, 613, 721, 291, 362, 281, 13, 400, 286, 915, 2059, 6460, 1419, 281, 574, 552, 493, 13, 50664, 50664, 440, 46074, 12199, 24387, 14333, 307, 869, 11, 457, 2699, 76, 15682, 575, 411, 257, 2541, 39118, 293, 309, 393, 584, 11, 2264, 11, 498, 321, 645, 281, 3811, 24387, 490, 8459, 11, 437, 2115, 576, 321, 764, 281, 6786, 613, 721, 30, 51214, 51214, 400, 309, 311, 2238, 13, 509, 458, 11, 291, 500, 380, 362, 281, 411, 1604, 264, 281, 829, 5896, 294, 264, 558, 1081, 13, 51514, 51514, 400, 291, 445, 584, 27739, 322, 264, 2596, 13, 400, 309, 311, 309, 311, 2238, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09010705377301599, "compression_ratio": 1.6195652173913044, "no_caption_prob": 7.966673001646996e-05}, {"id": 272, "seek": 269000, "start": 2707.0, "end": 2713.0, "text": " And it's beautiful. You know, you don't have to like remember the to put flex in the right place.", "tokens": [50364, 1610, 11, 291, 458, 11, 439, 295, 613, 721, 291, 362, 281, 13, 400, 286, 915, 2059, 6460, 1419, 281, 574, 552, 493, 13, 50664, 50664, 440, 46074, 12199, 24387, 14333, 307, 869, 11, 457, 2699, 76, 15682, 575, 411, 257, 2541, 39118, 293, 309, 393, 584, 11, 2264, 11, 498, 321, 645, 281, 3811, 24387, 490, 8459, 11, 437, 2115, 576, 321, 764, 281, 6786, 613, 721, 30, 51214, 51214, 400, 309, 311, 2238, 13, 509, 458, 11, 291, 500, 380, 362, 281, 411, 1604, 264, 281, 829, 5896, 294, 264, 558, 1081, 13, 51514, 51514, 400, 291, 445, 584, 27739, 322, 264, 2596, 13, 400, 309, 311, 309, 311, 2238, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09010705377301599, "compression_ratio": 1.6195652173913044, "no_caption_prob": 7.966673001646996e-05}, {"id": 273, "seek": 269000, "start": 2713.0, "end": 2718.0, "text": " And you just say spacing on the parent. And it's it's beautiful.", "tokens": [50364, 1610, 11, 291, 458, 11, 439, 295, 613, 721, 291, 362, 281, 13, 400, 286, 915, 2059, 6460, 1419, 281, 574, 552, 493, 13, 50664, 50664, 440, 46074, 12199, 24387, 14333, 307, 869, 11, 457, 2699, 76, 15682, 575, 411, 257, 2541, 39118, 293, 309, 393, 584, 11, 2264, 11, 498, 321, 645, 281, 3811, 24387, 490, 8459, 11, 437, 2115, 576, 321, 764, 281, 6786, 613, 721, 30, 51214, 51214, 400, 309, 311, 2238, 13, 509, 458, 11, 291, 500, 380, 362, 281, 411, 1604, 264, 281, 829, 5896, 294, 264, 558, 1081, 13, 51514, 51514, 400, 291, 445, 584, 27739, 322, 264, 2596, 13, 400, 309, 311, 309, 311, 2238, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09010705377301599, "compression_ratio": 1.6195652173913044, "no_caption_prob": 7.966673001646996e-05}, {"id": 274, "seek": 271800, "start": 2718.0, "end": 2730.0, "text": " The pain points using Elm UI for me have been one of the most important things for making a polished professional web design is having it be very mobile friendly and responsive.", "tokens": [50364, 440, 1822, 2793, 1228, 2699, 76, 15682, 337, 385, 362, 668, 472, 295, 264, 881, 1021, 721, 337, 1455, 257, 29079, 4843, 3670, 1715, 307, 1419, 309, 312, 588, 6013, 9208, 293, 21826, 13, 50964, 50964, 400, 286, 600, 1352, 300, 281, 312, 588, 2252, 281, 360, 365, 2699, 76, 15682, 294, 452, 2973, 1752, 11, 570, 257, 1916, 295, 721, 13, 51264, 51264, 1485, 11, 286, 286, 528, 309, 281, 659, 15529, 9594, 11, 597, 456, 311, 445, 572, 572, 1657, 337, 294, 2699, 76, 15682, 412, 264, 1623, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07158582586991159, "compression_ratio": 1.5537848605577689, "no_caption_prob": 6.604878581129014e-05}, {"id": 275, "seek": 271800, "start": 2730.0, "end": 2736.0, "text": " And I've found that to be very difficult to do with Elm UI in my personal experience, because a couple of things.", "tokens": [50364, 440, 1822, 2793, 1228, 2699, 76, 15682, 337, 385, 362, 668, 472, 295, 264, 881, 1021, 721, 337, 1455, 257, 29079, 4843, 3670, 1715, 307, 1419, 309, 312, 588, 6013, 9208, 293, 21826, 13, 50964, 50964, 400, 286, 600, 1352, 300, 281, 312, 588, 2252, 281, 360, 365, 2699, 76, 15682, 294, 452, 2973, 1752, 11, 570, 257, 1916, 295, 721, 13, 51264, 51264, 1485, 11, 286, 286, 528, 309, 281, 659, 15529, 9594, 11, 597, 456, 311, 445, 572, 572, 1657, 337, 294, 2699, 76, 15682, 412, 264, 1623, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07158582586991159, "compression_ratio": 1.5537848605577689, "no_caption_prob": 6.604878581129014e-05}, {"id": 276, "seek": 271800, "start": 2736.0, "end": 2744.0, "text": " One, I I want it to pre render nicely, which there's just no no story for in Elm UI at the moment.", "tokens": [50364, 440, 1822, 2793, 1228, 2699, 76, 15682, 337, 385, 362, 668, 472, 295, 264, 881, 1021, 721, 337, 1455, 257, 29079, 4843, 3670, 1715, 307, 1419, 309, 312, 588, 6013, 9208, 293, 21826, 13, 50964, 50964, 400, 286, 600, 1352, 300, 281, 312, 588, 2252, 281, 360, 365, 2699, 76, 15682, 294, 452, 2973, 1752, 11, 570, 257, 1916, 295, 721, 13, 51264, 51264, 1485, 11, 286, 286, 528, 309, 281, 659, 15529, 9594, 11, 597, 456, 311, 445, 572, 572, 1657, 337, 294, 2699, 76, 15682, 412, 264, 1623, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07158582586991159, "compression_ratio": 1.5537848605577689, "no_caption_prob": 6.604878581129014e-05}, {"id": 277, "seek": 274400, "start": 2744.0, "end": 2753.0, "text": " At some point there may be. But right now there's no way to do that using media queries, which means it's not going to pre render well, which we discussed on our Elm UI episode.", "tokens": [50364, 1711, 512, 935, 456, 815, 312, 13, 583, 558, 586, 456, 311, 572, 636, 281, 360, 300, 1228, 3021, 24109, 11, 597, 1355, 309, 311, 406, 516, 281, 659, 15529, 731, 11, 597, 321, 7152, 322, 527, 2699, 76, 15682, 3500, 13, 50814, 50814, 400, 264, 1150, 551, 307, 291, 362, 281, 411, 6234, 807, 1785, 295, 264, 2190, 11185, 12819, 294, 257, 688, 295, 3190, 281, 360, 309, 13, 51164, 51164, 400, 286, 445, 4382, 257, 544, 16694, 1166, 636, 295, 1566, 412, 341, 1821, 935, 281, 341, 412, 341, 1821, 935, 281, 341, 13, 51414, 51414, 407, 46074, 12199, 307, 2243, 337, 300, 13, 46074, 12199, 307, 2243, 412, 1419, 411, 257, 15851, 295, 3956, 293, 885, 1075, 281, 445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08262003500630537, "compression_ratio": 1.7842465753424657, "no_caption_prob": 7.367621583398432e-05}, {"id": 278, "seek": 274400, "start": 2753.0, "end": 2760.0, "text": " And the second thing is you have to like wire through state of the current browser dimensions in a lot of places to do it.", "tokens": [50364, 1711, 512, 935, 456, 815, 312, 13, 583, 558, 586, 456, 311, 572, 636, 281, 360, 300, 1228, 3021, 24109, 11, 597, 1355, 309, 311, 406, 516, 281, 659, 15529, 731, 11, 597, 321, 7152, 322, 527, 2699, 76, 15682, 3500, 13, 50814, 50814, 400, 264, 1150, 551, 307, 291, 362, 281, 411, 6234, 807, 1785, 295, 264, 2190, 11185, 12819, 294, 257, 688, 295, 3190, 281, 360, 309, 13, 51164, 51164, 400, 286, 445, 4382, 257, 544, 16694, 1166, 636, 295, 1566, 412, 341, 1821, 935, 281, 341, 412, 341, 1821, 935, 281, 341, 13, 51414, 51414, 407, 46074, 12199, 307, 2243, 337, 300, 13, 46074, 12199, 307, 2243, 412, 1419, 411, 257, 15851, 295, 3956, 293, 885, 1075, 281, 445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08262003500630537, "compression_ratio": 1.7842465753424657, "no_caption_prob": 7.367621583398432e-05}, {"id": 279, "seek": 274400, "start": 2760.0, "end": 2765.0, "text": " And I just prefer a more declarative way of saying at this break point to this at this break point to this.", "tokens": [50364, 1711, 512, 935, 456, 815, 312, 13, 583, 558, 586, 456, 311, 572, 636, 281, 360, 300, 1228, 3021, 24109, 11, 597, 1355, 309, 311, 406, 516, 281, 659, 15529, 731, 11, 597, 321, 7152, 322, 527, 2699, 76, 15682, 3500, 13, 50814, 50814, 400, 264, 1150, 551, 307, 291, 362, 281, 411, 6234, 807, 1785, 295, 264, 2190, 11185, 12819, 294, 257, 688, 295, 3190, 281, 360, 309, 13, 51164, 51164, 400, 286, 445, 4382, 257, 544, 16694, 1166, 636, 295, 1566, 412, 341, 1821, 935, 281, 341, 412, 341, 1821, 935, 281, 341, 13, 51414, 51414, 407, 46074, 12199, 307, 2243, 337, 300, 13, 46074, 12199, 307, 2243, 412, 1419, 411, 257, 15851, 295, 3956, 293, 885, 1075, 281, 445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08262003500630537, "compression_ratio": 1.7842465753424657, "no_caption_prob": 7.367621583398432e-05}, {"id": 280, "seek": 274400, "start": 2765.0, "end": 2773.0, "text": " So Tailwind is amazing for that. Tailwind is amazing at having like a palette of options and being able to just.", "tokens": [50364, 1711, 512, 935, 456, 815, 312, 13, 583, 558, 586, 456, 311, 572, 636, 281, 360, 300, 1228, 3021, 24109, 11, 597, 1355, 309, 311, 406, 516, 281, 659, 15529, 731, 11, 597, 321, 7152, 322, 527, 2699, 76, 15682, 3500, 13, 50814, 50814, 400, 264, 1150, 551, 307, 291, 362, 281, 411, 6234, 807, 1785, 295, 264, 2190, 11185, 12819, 294, 257, 688, 295, 3190, 281, 360, 309, 13, 51164, 51164, 400, 286, 445, 4382, 257, 544, 16694, 1166, 636, 295, 1566, 412, 341, 1821, 935, 281, 341, 412, 341, 1821, 935, 281, 341, 13, 51414, 51414, 407, 46074, 12199, 307, 2243, 337, 300, 13, 46074, 12199, 307, 2243, 412, 1419, 411, 257, 15851, 295, 3956, 293, 885, 1075, 281, 445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08262003500630537, "compression_ratio": 1.7842465753424657, "no_caption_prob": 7.367621583398432e-05}, {"id": 281, "seek": 277300, "start": 2773.0, "end": 2778.0, "text": " That's just a feature that's baked into Tailwind and it works very nicely with Elm Tailwind modules.", "tokens": [50364, 663, 311, 445, 257, 4111, 300, 311, 19453, 666, 46074, 12199, 293, 309, 1985, 588, 9594, 365, 2699, 76, 46074, 12199, 16679, 13, 50614, 50614, 407, 300, 311, 257, 13364, 4111, 13, 663, 311, 406, 746, 300, 307, 6243, 281, 360, 294, 2699, 76, 15682, 13, 50864, 50864, 400, 412, 512, 935, 1310, 321, 603, 362, 257, 1627, 2290, 337, 411, 2390, 257, 15851, 11, 597, 576, 312, 869, 13, 51114, 51114, 2743, 11, 18239, 5477, 36523, 3094, 257, 7372, 300, 25831, 2699, 76, 15682, 13, 51414, 51414, 3764, 11, 309, 311, 257, 3270, 294, 14419, 300, 775, 257, 4036, 8203, 322, 746, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05504049195183648, "compression_ratio": 1.606177606177606, "no_caption_prob": 0.00017670953820925206}, {"id": 282, "seek": 277300, "start": 2778.0, "end": 2783.0, "text": " So that's a killer feature. That's not something that is impossible to do in Elm UI.", "tokens": [50364, 663, 311, 445, 257, 4111, 300, 311, 19453, 666, 46074, 12199, 293, 309, 1985, 588, 9594, 365, 2699, 76, 46074, 12199, 16679, 13, 50614, 50614, 407, 300, 311, 257, 13364, 4111, 13, 663, 311, 406, 746, 300, 307, 6243, 281, 360, 294, 2699, 76, 15682, 13, 50864, 50864, 400, 412, 512, 935, 1310, 321, 603, 362, 257, 1627, 2290, 337, 411, 2390, 257, 15851, 11, 597, 576, 312, 869, 13, 51114, 51114, 2743, 11, 18239, 5477, 36523, 3094, 257, 7372, 300, 25831, 2699, 76, 15682, 13, 51414, 51414, 3764, 11, 309, 311, 257, 3270, 294, 14419, 300, 775, 257, 4036, 8203, 322, 746, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05504049195183648, "compression_ratio": 1.606177606177606, "no_caption_prob": 0.00017670953820925206}, {"id": 283, "seek": 277300, "start": 2783.0, "end": 2788.0, "text": " And at some point maybe we'll have a cool tool for like building a palette, which would be great.", "tokens": [50364, 663, 311, 445, 257, 4111, 300, 311, 19453, 666, 46074, 12199, 293, 309, 1985, 588, 9594, 365, 2699, 76, 46074, 12199, 16679, 13, 50614, 50614, 407, 300, 311, 257, 13364, 4111, 13, 663, 311, 406, 746, 300, 307, 6243, 281, 360, 294, 2699, 76, 15682, 13, 50864, 50864, 400, 412, 512, 935, 1310, 321, 603, 362, 257, 1627, 2290, 337, 411, 2390, 257, 15851, 11, 597, 576, 312, 869, 13, 51114, 51114, 2743, 11, 18239, 5477, 36523, 3094, 257, 7372, 300, 25831, 2699, 76, 15682, 13, 51414, 51414, 3764, 11, 309, 311, 257, 3270, 294, 14419, 300, 775, 257, 4036, 8203, 322, 746, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05504049195183648, "compression_ratio": 1.606177606177606, "no_caption_prob": 0.00017670953820925206}, {"id": 284, "seek": 277300, "start": 2788.0, "end": 2794.0, "text": " Also, Mini Bill Leonardo built a package that wraps Elm UI.", "tokens": [50364, 663, 311, 445, 257, 4111, 300, 311, 19453, 666, 46074, 12199, 293, 309, 1985, 588, 9594, 365, 2699, 76, 46074, 12199, 16679, 13, 50614, 50614, 407, 300, 311, 257, 13364, 4111, 13, 663, 311, 406, 746, 300, 307, 6243, 281, 360, 294, 2699, 76, 15682, 13, 50864, 50864, 400, 412, 512, 935, 1310, 321, 603, 362, 257, 1627, 2290, 337, 411, 2390, 257, 15851, 11, 597, 576, 312, 869, 13, 51114, 51114, 2743, 11, 18239, 5477, 36523, 3094, 257, 7372, 300, 25831, 2699, 76, 15682, 13, 51414, 51414, 3764, 11, 309, 311, 257, 3270, 294, 14419, 300, 775, 257, 4036, 8203, 322, 746, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05504049195183648, "compression_ratio": 1.606177606177606, "no_caption_prob": 0.00017670953820925206}, {"id": 285, "seek": 277300, "start": 2794.0, "end": 2798.0, "text": " Again, it's a drop in replacement that does a slight twist on something.", "tokens": [50364, 663, 311, 445, 257, 4111, 300, 311, 19453, 666, 46074, 12199, 293, 309, 1985, 588, 9594, 365, 2699, 76, 46074, 12199, 16679, 13, 50614, 50614, 407, 300, 311, 257, 13364, 4111, 13, 663, 311, 406, 746, 300, 307, 6243, 281, 360, 294, 2699, 76, 15682, 13, 50864, 50864, 400, 412, 512, 935, 1310, 321, 603, 362, 257, 1627, 2290, 337, 411, 2390, 257, 15851, 11, 597, 576, 312, 869, 13, 51114, 51114, 2743, 11, 18239, 5477, 36523, 3094, 257, 7372, 300, 25831, 2699, 76, 15682, 13, 51414, 51414, 3764, 11, 309, 311, 257, 3270, 294, 14419, 300, 775, 257, 4036, 8203, 322, 746, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05504049195183648, "compression_ratio": 1.606177606177606, "no_caption_prob": 0.00017670953820925206}, {"id": 286, "seek": 279800, "start": 2798.0, "end": 2807.0, "text": " And what it does is it allows you to have state that you can call into without passing arguments through every place that you're calling your Elm UI functions.", "tokens": [50364, 400, 437, 309, 775, 307, 309, 4045, 291, 281, 362, 1785, 300, 291, 393, 818, 666, 1553, 8437, 12869, 807, 633, 1081, 300, 291, 434, 5141, 428, 2699, 76, 15682, 6828, 13, 50814, 50814, 407, 291, 393, 362, 1785, 411, 264, 2190, 11402, 281, 360, 27708, 1821, 20552, 293, 721, 411, 300, 13, 51164, 51164, 407, 300, 33201, 1024, 300, 1822, 935, 257, 707, 857, 11, 457, 920, 309, 1177, 380, 659, 15529, 9594, 13, 51364, 51364, 583, 264, 661, 13364, 4111, 295, 46074, 12199, 24387, 307, 46074, 12199, 15682, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04950678975958573, "compression_ratio": 1.6437246963562753, "no_caption_prob": 0.00022336890106089413}, {"id": 287, "seek": 279800, "start": 2807.0, "end": 2814.0, "text": " So you can have state like the current width to do conditional breakpoints and things like that.", "tokens": [50364, 400, 437, 309, 775, 307, 309, 4045, 291, 281, 362, 1785, 300, 291, 393, 818, 666, 1553, 8437, 12869, 807, 633, 1081, 300, 291, 434, 5141, 428, 2699, 76, 15682, 6828, 13, 50814, 50814, 407, 291, 393, 362, 1785, 411, 264, 2190, 11402, 281, 360, 27708, 1821, 20552, 293, 721, 411, 300, 13, 51164, 51164, 407, 300, 33201, 1024, 300, 1822, 935, 257, 707, 857, 11, 457, 920, 309, 1177, 380, 659, 15529, 9594, 13, 51364, 51364, 583, 264, 661, 13364, 4111, 295, 46074, 12199, 24387, 307, 46074, 12199, 15682, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04950678975958573, "compression_ratio": 1.6437246963562753, "no_caption_prob": 0.00022336890106089413}, {"id": 288, "seek": 279800, "start": 2814.0, "end": 2818.0, "text": " So that alleviates that pain point a little bit, but still it doesn't pre render nicely.", "tokens": [50364, 400, 437, 309, 775, 307, 309, 4045, 291, 281, 362, 1785, 300, 291, 393, 818, 666, 1553, 8437, 12869, 807, 633, 1081, 300, 291, 434, 5141, 428, 2699, 76, 15682, 6828, 13, 50814, 50814, 407, 291, 393, 362, 1785, 411, 264, 2190, 11402, 281, 360, 27708, 1821, 20552, 293, 721, 411, 300, 13, 51164, 51164, 407, 300, 33201, 1024, 300, 1822, 935, 257, 707, 857, 11, 457, 920, 309, 1177, 380, 659, 15529, 9594, 13, 51364, 51364, 583, 264, 661, 13364, 4111, 295, 46074, 12199, 24387, 307, 46074, 12199, 15682, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04950678975958573, "compression_ratio": 1.6437246963562753, "no_caption_prob": 0.00022336890106089413}, {"id": 289, "seek": 279800, "start": 2818.0, "end": 2824.0, "text": " But the other killer feature of Tailwind CSS is Tailwind UI.", "tokens": [50364, 400, 437, 309, 775, 307, 309, 4045, 291, 281, 362, 1785, 300, 291, 393, 818, 666, 1553, 8437, 12869, 807, 633, 1081, 300, 291, 434, 5141, 428, 2699, 76, 15682, 6828, 13, 50814, 50814, 407, 291, 393, 362, 1785, 411, 264, 2190, 11402, 281, 360, 27708, 1821, 20552, 293, 721, 411, 300, 13, 51164, 51164, 407, 300, 33201, 1024, 300, 1822, 935, 257, 707, 857, 11, 457, 920, 309, 1177, 380, 659, 15529, 9594, 13, 51364, 51364, 583, 264, 661, 13364, 4111, 295, 46074, 12199, 24387, 307, 46074, 12199, 15682, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04950678975958573, "compression_ratio": 1.6437246963562753, "no_caption_prob": 0.00022336890106089413}, {"id": 290, "seek": 282400, "start": 2824.0, "end": 2835.0, "text": " Tailwind UI is like a paid like component library of these copy pastable snippets of Tailwind HTML with CSS classes.", "tokens": [50364, 46074, 12199, 15682, 307, 411, 257, 4835, 411, 6542, 6405, 295, 613, 5055, 1791, 712, 35623, 1385, 295, 46074, 12199, 17995, 365, 24387, 5359, 13, 50914, 50914, 400, 309, 307, 370, 1858, 281, 652, 411, 4843, 11202, 7183, 293, 3861, 11347, 1228, 300, 13, 51264, 51264, 400, 300, 311, 472, 295, 264, 13364, 4122, 11, 286, 576, 584, 11, 295, 1228, 46074, 12199, 294, 2674, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06490780285426549, "compression_ratio": 1.4974358974358974, "no_caption_prob": 6.397458491846919e-05}, {"id": 291, "seek": 282400, "start": 2835.0, "end": 2842.0, "text": " And it is so easy to make like professional landing pages and application designs using that.", "tokens": [50364, 46074, 12199, 15682, 307, 411, 257, 4835, 411, 6542, 6405, 295, 613, 5055, 1791, 712, 35623, 1385, 295, 46074, 12199, 17995, 365, 24387, 5359, 13, 50914, 50914, 400, 309, 307, 370, 1858, 281, 652, 411, 4843, 11202, 7183, 293, 3861, 11347, 1228, 300, 13, 51264, 51264, 400, 300, 311, 472, 295, 264, 13364, 4122, 11, 286, 576, 584, 11, 295, 1228, 46074, 12199, 294, 2674, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06490780285426549, "compression_ratio": 1.4974358974358974, "no_caption_prob": 6.397458491846919e-05}, {"id": 292, "seek": 282400, "start": 2842.0, "end": 2846.0, "text": " And that's one of the killer features, I would say, of using Tailwind in general.", "tokens": [50364, 46074, 12199, 15682, 307, 411, 257, 4835, 411, 6542, 6405, 295, 613, 5055, 1791, 712, 35623, 1385, 295, 46074, 12199, 17995, 365, 24387, 5359, 13, 50914, 50914, 400, 309, 307, 370, 1858, 281, 652, 411, 4843, 11202, 7183, 293, 3861, 11347, 1228, 300, 13, 51264, 51264, 400, 300, 311, 472, 295, 264, 13364, 4122, 11, 286, 576, 584, 11, 295, 1228, 46074, 12199, 294, 2674, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06490780285426549, "compression_ratio": 1.4974358974358974, "no_caption_prob": 6.397458491846919e-05}, {"id": 293, "seek": 284600, "start": 2846.0, "end": 2855.0, "text": " But that is not compatible with what Philip did because you can't take that Tailwind UI and put it into your Elm projects, right?", "tokens": [50364, 583, 300, 307, 406, 18218, 365, 437, 21144, 630, 570, 291, 393, 380, 747, 300, 46074, 12199, 15682, 293, 829, 309, 666, 428, 2699, 76, 4455, 11, 558, 30, 50814, 50814, 865, 11, 406, 3838, 13, 407, 309, 311, 445, 17995, 365, 24387, 1508, 15400, 294, 13985, 13, 51164, 51164, 407, 291, 393, 764, 309, 382, 257, 3270, 294, 13, 583, 485, 51364, 51364, 583, 11, 731, 11, 1338, 11, 558, 13, 407, 309, 311, 445, 613, 21165, 1936, 11, 558, 30, 467, 311, 445, 21165, 295, 17995, 3089, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18573497204070397, "compression_ratio": 1.551111111111111, "no_caption_prob": 7.721842848695815e-05}, {"id": 294, "seek": 284600, "start": 2855.0, "end": 2862.0, "text": " Yeah, not directly. So it's just HTML with CSS class references in strings.", "tokens": [50364, 583, 300, 307, 406, 18218, 365, 437, 21144, 630, 570, 291, 393, 380, 747, 300, 46074, 12199, 15682, 293, 829, 309, 666, 428, 2699, 76, 4455, 11, 558, 30, 50814, 50814, 865, 11, 406, 3838, 13, 407, 309, 311, 445, 17995, 365, 24387, 1508, 15400, 294, 13985, 13, 51164, 51164, 407, 291, 393, 764, 309, 382, 257, 3270, 294, 13, 583, 485, 51364, 51364, 583, 11, 731, 11, 1338, 11, 558, 13, 407, 309, 311, 445, 613, 21165, 1936, 11, 558, 30, 467, 311, 445, 21165, 295, 17995, 3089, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18573497204070397, "compression_ratio": 1.551111111111111, "no_caption_prob": 7.721842848695815e-05}, {"id": 295, "seek": 284600, "start": 2862.0, "end": 2866.0, "text": " So you can use it as a drop in. But...", "tokens": [50364, 583, 300, 307, 406, 18218, 365, 437, 21144, 630, 570, 291, 393, 380, 747, 300, 46074, 12199, 15682, 293, 829, 309, 666, 428, 2699, 76, 4455, 11, 558, 30, 50814, 50814, 865, 11, 406, 3838, 13, 407, 309, 311, 445, 17995, 365, 24387, 1508, 15400, 294, 13985, 13, 51164, 51164, 407, 291, 393, 764, 309, 382, 257, 3270, 294, 13, 583, 485, 51364, 51364, 583, 11, 731, 11, 1338, 11, 558, 13, 407, 309, 311, 445, 613, 21165, 1936, 11, 558, 30, 467, 311, 445, 21165, 295, 17995, 3089, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18573497204070397, "compression_ratio": 1.551111111111111, "no_caption_prob": 7.721842848695815e-05}, {"id": 296, "seek": 284600, "start": 2866.0, "end": 2873.0, "text": " But, well, yeah, right. So it's just these templates basically, right? It's just templates of HTML code.", "tokens": [50364, 583, 300, 307, 406, 18218, 365, 437, 21144, 630, 570, 291, 393, 380, 747, 300, 46074, 12199, 15682, 293, 829, 309, 666, 428, 2699, 76, 4455, 11, 558, 30, 50814, 50814, 865, 11, 406, 3838, 13, 407, 309, 311, 445, 17995, 365, 24387, 1508, 15400, 294, 13985, 13, 51164, 51164, 407, 291, 393, 764, 309, 382, 257, 3270, 294, 13, 583, 485, 51364, 51364, 583, 11, 731, 11, 1338, 11, 558, 13, 407, 309, 311, 445, 613, 21165, 1936, 11, 558, 30, 467, 311, 445, 21165, 295, 17995, 3089, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18573497204070397, "compression_ratio": 1.551111111111111, "no_caption_prob": 7.721842848695815e-05}, {"id": 297, "seek": 287300, "start": 2873.0, "end": 2882.0, "text": " And I so when I was building the Elm, ElmTS Interop.com landing page, I built it with Elm Tailwind modules, which was an amazing experience.", "tokens": [50364, 400, 286, 370, 562, 286, 390, 2390, 264, 2699, 76, 11, 2699, 76, 7327, 5751, 404, 13, 1112, 11202, 3028, 11, 286, 3094, 309, 365, 2699, 76, 46074, 12199, 16679, 11, 597, 390, 364, 2243, 1752, 13, 50814, 50814, 286, 390, 588, 10587, 13, 400, 286, 6941, 300, 286, 390, 5055, 1791, 278, 293, 11, 291, 458, 11, 51114, 51114, 6986, 2456, 264, 264, 46074, 12199, 15682, 21165, 11, 17995, 21165, 370, 2049, 300, 286, 576, 3155, 2059, 565, 498, 286, 3094, 257, 2290, 300, 6772, 21156, 292, 552, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13363457740621365, "compression_ratio": 1.5720524017467248, "no_caption_prob": 9.913933899952099e-05}, {"id": 298, "seek": 287300, "start": 2882.0, "end": 2888.0, "text": " I was very pleased. And I discovered that I was copy pasting and, you know,", "tokens": [50364, 400, 286, 370, 562, 286, 390, 2390, 264, 2699, 76, 11, 2699, 76, 7327, 5751, 404, 13, 1112, 11202, 3028, 11, 286, 3094, 309, 365, 2699, 76, 46074, 12199, 16679, 11, 597, 390, 364, 2243, 1752, 13, 50814, 50814, 286, 390, 588, 10587, 13, 400, 286, 6941, 300, 286, 390, 5055, 1791, 278, 293, 11, 291, 458, 11, 51114, 51114, 6986, 2456, 264, 264, 46074, 12199, 15682, 21165, 11, 17995, 21165, 370, 2049, 300, 286, 576, 3155, 2059, 565, 498, 286, 3094, 257, 2290, 300, 6772, 21156, 292, 552, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13363457740621365, "compression_ratio": 1.5720524017467248, "no_caption_prob": 9.913933899952099e-05}, {"id": 299, "seek": 287300, "start": 2888.0, "end": 2897.0, "text": " tweaking the the Tailwind UI templates, HTML templates so often that I would save myself time if I built a tool that automatically parsed them.", "tokens": [50364, 400, 286, 370, 562, 286, 390, 2390, 264, 2699, 76, 11, 2699, 76, 7327, 5751, 404, 13, 1112, 11202, 3028, 11, 286, 3094, 309, 365, 2699, 76, 46074, 12199, 16679, 11, 597, 390, 364, 2243, 1752, 13, 50814, 50814, 286, 390, 588, 10587, 13, 400, 286, 6941, 300, 286, 390, 5055, 1791, 278, 293, 11, 291, 458, 11, 51114, 51114, 6986, 2456, 264, 264, 46074, 12199, 15682, 21165, 11, 17995, 21165, 370, 2049, 300, 286, 576, 3155, 2059, 565, 498, 286, 3094, 257, 2290, 300, 6772, 21156, 292, 552, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13363457740621365, "compression_ratio": 1.5720524017467248, "no_caption_prob": 9.913933899952099e-05}, {"id": 300, "seek": 289700, "start": 2897.0, "end": 2904.0, "text": " So I built I built a tool which is at HTML to Elm.com.", "tokens": [50364, 407, 286, 3094, 286, 3094, 257, 2290, 597, 307, 412, 17995, 281, 2699, 76, 13, 1112, 13, 50714, 50714, 400, 309, 575, 264, 3485, 281, 48377, 46074, 12199, 24387, 5359, 293, 976, 291, 264, 912, 7877, 300, 264, 10833, 3089, 490, 2699, 76, 46074, 12199, 16679, 4960, 13, 51214, 51214, 407, 370, 439, 291, 360, 307, 291, 11, 291, 458, 11, 5055, 9163, 428, 12379, 490, 490, 46074, 12199, 15682, 13, 1112, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13342785525631595, "compression_ratio": 1.508108108108108, "no_caption_prob": 7.721030851826072e-05}, {"id": 301, "seek": 289700, "start": 2904.0, "end": 2914.0, "text": " And it has the ability to parse Tailwind CSS classes and give you the same format that the generated code from Elm Tailwind modules uses.", "tokens": [50364, 407, 286, 3094, 286, 3094, 257, 2290, 597, 307, 412, 17995, 281, 2699, 76, 13, 1112, 13, 50714, 50714, 400, 309, 575, 264, 3485, 281, 48377, 46074, 12199, 24387, 5359, 293, 976, 291, 264, 912, 7877, 300, 264, 10833, 3089, 490, 2699, 76, 46074, 12199, 16679, 4960, 13, 51214, 51214, 407, 370, 439, 291, 360, 307, 291, 11, 291, 458, 11, 5055, 9163, 428, 12379, 490, 490, 46074, 12199, 15682, 13, 1112, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13342785525631595, "compression_ratio": 1.508108108108108, "no_caption_prob": 7.721030851826072e-05}, {"id": 302, "seek": 289700, "start": 2914.0, "end": 2921.0, "text": " So so all you do is you, you know, copy paste your template from from Tailwind UI.com.", "tokens": [50364, 407, 286, 3094, 286, 3094, 257, 2290, 597, 307, 412, 17995, 281, 2699, 76, 13, 1112, 13, 50714, 50714, 400, 309, 575, 264, 3485, 281, 48377, 46074, 12199, 24387, 5359, 293, 976, 291, 264, 912, 7877, 300, 264, 10833, 3089, 490, 2699, 76, 46074, 12199, 16679, 4960, 13, 51214, 51214, 407, 370, 439, 291, 360, 307, 291, 11, 291, 458, 11, 5055, 9163, 428, 12379, 490, 490, 46074, 12199, 15682, 13, 1112, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.13342785525631595, "compression_ratio": 1.508108108108108, "no_caption_prob": 7.721030851826072e-05}, {"id": 303, "seek": 292100, "start": 2921.0, "end": 2927.0, "text": " And it will give you something that you can just paste into your Elm Tailwind modules project.", "tokens": [50364, 400, 309, 486, 976, 291, 746, 300, 291, 393, 445, 9163, 666, 428, 2699, 76, 46074, 12199, 16679, 1716, 13, 50664, 50664, 400, 309, 445, 1985, 13, 400, 309, 311, 1596, 1481, 13, 400, 286, 3094, 364, 2699, 76, 3131, 4978, 11, 597, 1310, 486, 312, 4696, 309, 603, 312, 6572, 538, 264, 565, 341, 3500, 307, 4736, 11, 51164, 51164, 597, 4045, 291, 281, 360, 24083, 281, 360, 13, 400, 550, 291, 393, 360, 257, 15508, 6513, 6798, 293, 9163, 294, 300, 17995, 12379, 490, 46074, 12199, 15682, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07788576978318235, "compression_ratio": 1.6075949367088607, "no_caption_prob": 3.071527316933498e-05}, {"id": 304, "seek": 292100, "start": 2927.0, "end": 2937.0, "text": " And it just works. And it's quite nice. And I built an Elm review rule, which maybe will be hopefully it'll be published by the time this episode is released,", "tokens": [50364, 400, 309, 486, 976, 291, 746, 300, 291, 393, 445, 9163, 666, 428, 2699, 76, 46074, 12199, 16679, 1716, 13, 50664, 50664, 400, 309, 445, 1985, 13, 400, 309, 311, 1596, 1481, 13, 400, 286, 3094, 364, 2699, 76, 3131, 4978, 11, 597, 1310, 486, 312, 4696, 309, 603, 312, 6572, 538, 264, 565, 341, 3500, 307, 4736, 11, 51164, 51164, 597, 4045, 291, 281, 360, 24083, 281, 360, 13, 400, 550, 291, 393, 360, 257, 15508, 6513, 6798, 293, 9163, 294, 300, 17995, 12379, 490, 46074, 12199, 15682, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07788576978318235, "compression_ratio": 1.6075949367088607, "no_caption_prob": 3.071527316933498e-05}, {"id": 305, "seek": 292100, "start": 2937.0, "end": 2946.0, "text": " which allows you to do debug to do. And then you can do a triple quote string and paste in that HTML template from Tailwind UI.", "tokens": [50364, 400, 309, 486, 976, 291, 746, 300, 291, 393, 445, 9163, 666, 428, 2699, 76, 46074, 12199, 16679, 1716, 13, 50664, 50664, 400, 309, 445, 1985, 13, 400, 309, 311, 1596, 1481, 13, 400, 286, 3094, 364, 2699, 76, 3131, 4978, 11, 597, 1310, 486, 312, 4696, 309, 603, 312, 6572, 538, 264, 565, 341, 3500, 307, 4736, 11, 51164, 51164, 597, 4045, 291, 281, 360, 24083, 281, 360, 13, 400, 550, 291, 393, 360, 257, 15508, 6513, 6798, 293, 9163, 294, 300, 17995, 12379, 490, 46074, 12199, 15682, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07788576978318235, "compression_ratio": 1.6075949367088607, "no_caption_prob": 3.071527316933498e-05}, {"id": 306, "seek": 294600, "start": 2946.0, "end": 2952.0, "text": " And it just generates all of the code that is now going to be compiling working Elm Tailwind modules code.", "tokens": [50364, 400, 309, 445, 23815, 439, 295, 264, 3089, 300, 307, 586, 516, 281, 312, 715, 4883, 1364, 2699, 76, 46074, 12199, 16679, 3089, 13, 50664, 50664, 407, 309, 2138, 6624, 385, 565, 294, 264, 1399, 295, 2390, 309, 11, 420, 412, 1935, 390, 544, 1019, 813, 16945, 516, 294, 293, 884, 300, 13, 51114, 51114, 663, 311, 257, 544, 44669, 1867, 13, 286, 362, 281, 1309, 28160, 300, 294, 264, 2027, 562, 286, 478, 1228, 46074, 12199, 15682, 6677, 11, 286, 478, 516, 281, 362, 544, 1019, 570, 2086, 11, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11226534336171251, "compression_ratio": 1.6092436974789917, "no_caption_prob": 4.6377999751712196e-06}, {"id": 307, "seek": 294600, "start": 2952.0, "end": 2961.0, "text": " So it definitely saved me time in the process of building it, or at least was more fun than manually going in and doing that.", "tokens": [50364, 400, 309, 445, 23815, 439, 295, 264, 3089, 300, 307, 586, 516, 281, 312, 715, 4883, 1364, 2699, 76, 46074, 12199, 16679, 3089, 13, 50664, 50664, 407, 309, 2138, 6624, 385, 565, 294, 264, 1399, 295, 2390, 309, 11, 420, 412, 1935, 390, 544, 1019, 813, 16945, 516, 294, 293, 884, 300, 13, 51114, 51114, 663, 311, 257, 544, 44669, 1867, 13, 286, 362, 281, 1309, 28160, 300, 294, 264, 2027, 562, 286, 478, 1228, 46074, 12199, 15682, 6677, 11, 286, 478, 516, 281, 362, 544, 1019, 570, 2086, 11, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11226534336171251, "compression_ratio": 1.6092436974789917, "no_caption_prob": 4.6377999751712196e-06}, {"id": 308, "seek": 294600, "start": 2961.0, "end": 2971.0, "text": " That's a more truthful answer. I have to thank Dylan that in the future when I'm using Tailwind UI components, I'm going to have more fun because yes,", "tokens": [50364, 400, 309, 445, 23815, 439, 295, 264, 3089, 300, 307, 586, 516, 281, 312, 715, 4883, 1364, 2699, 76, 46074, 12199, 16679, 3089, 13, 50664, 50664, 407, 309, 2138, 6624, 385, 565, 294, 264, 1399, 295, 2390, 309, 11, 420, 412, 1935, 390, 544, 1019, 813, 16945, 516, 294, 293, 884, 300, 13, 51114, 51114, 663, 311, 257, 544, 44669, 1867, 13, 286, 362, 281, 1309, 28160, 300, 294, 264, 2027, 562, 286, 478, 1228, 46074, 12199, 15682, 6677, 11, 286, 478, 516, 281, 362, 544, 1019, 570, 2086, 11, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11226534336171251, "compression_ratio": 1.6092436974789917, "no_caption_prob": 4.6377999751712196e-06}, {"id": 309, "seek": 297100, "start": 2971.0, "end": 2981.0, "text": " I won't have to, yeah, fiddle with the HTML and transform it into Elm code and then fiddle with the classes and transform them to Tailwind utility classes.", "tokens": [50364, 286, 1582, 380, 362, 281, 11, 1338, 11, 24553, 2285, 365, 264, 17995, 293, 4088, 309, 666, 2699, 76, 3089, 293, 550, 24553, 2285, 365, 264, 5359, 293, 4088, 552, 281, 46074, 12199, 14877, 5359, 13, 50864, 50864, 400, 300, 311, 869, 13, 865, 13, 286, 994, 380, 483, 300, 291, 630, 341, 337, 46074, 12199, 15682, 11, 457, 562, 291, 1409, 1417, 466, 309, 390, 1954, 11, 18633, 11, 300, 1669, 2020, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.12246133119632037, "compression_ratio": 1.5416666666666667, "no_caption_prob": 6.108549132477492e-05}, {"id": 310, "seek": 297100, "start": 2981.0, "end": 2991.0, "text": " And that's great. Yeah. I didn't get that you did this for Tailwind UI, but when you started talking about it was oh, yep, that makes sense.", "tokens": [50364, 286, 1582, 380, 362, 281, 11, 1338, 11, 24553, 2285, 365, 264, 17995, 293, 4088, 309, 666, 2699, 76, 3089, 293, 550, 24553, 2285, 365, 264, 5359, 293, 4088, 552, 281, 46074, 12199, 14877, 5359, 13, 50864, 50864, 400, 300, 311, 869, 13, 865, 13, 286, 994, 380, 483, 300, 291, 630, 341, 337, 46074, 12199, 15682, 11, 457, 562, 291, 1409, 1417, 466, 309, 390, 1954, 11, 18633, 11, 300, 1669, 2020, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.12246133119632037, "compression_ratio": 1.5416666666666667, "no_caption_prob": 6.108549132477492e-05}, {"id": 311, "seek": 299100, "start": 2991.0, "end": 3005.0, "text": " Yeah, it even it even will do things like, you know, if you have hover colon BG blue, right, then it's actually going to create CSS that says CSS dot hover,", "tokens": [50364, 865, 11, 309, 754, 309, 754, 486, 360, 721, 411, 11, 291, 458, 11, 498, 291, 362, 20076, 8255, 363, 38, 3344, 11, 558, 11, 550, 309, 311, 767, 516, 281, 1884, 24387, 300, 1619, 24387, 5893, 20076, 11, 51064, 51064, 406, 46074, 12199, 5893, 30482, 5893, 20076, 11, 570, 300, 311, 577, 309, 311, 10833, 13, 407, 309, 18722, 439, 295, 729, 2121, 3331, 293, 2709, 291, 715, 4883, 3089, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14300437977439479, "compression_ratio": 1.5075376884422111, "no_caption_prob": 0.00016863035853020847}, {"id": 312, "seek": 299100, "start": 3005.0, "end": 3013.0, "text": " not Tailwind dot utilities dot hover, because that's how it's generated. So it handles all of those special cases and gives you compiling code.", "tokens": [50364, 865, 11, 309, 754, 309, 754, 486, 360, 721, 411, 11, 291, 458, 11, 498, 291, 362, 20076, 8255, 363, 38, 3344, 11, 558, 11, 550, 309, 311, 767, 516, 281, 1884, 24387, 300, 1619, 24387, 5893, 20076, 11, 51064, 51064, 406, 46074, 12199, 5893, 30482, 5893, 20076, 11, 570, 300, 311, 577, 309, 311, 10833, 13, 407, 309, 18722, 439, 295, 729, 2121, 3331, 293, 2709, 291, 715, 4883, 3089, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14300437977439479, "compression_ratio": 1.5075376884422111, "no_caption_prob": 0.00016863035853020847}, {"id": 313, "seek": 301300, "start": 3013.0, "end": 3023.0, "text": " It definitely enhances the experience. It just like it's no fun to like have in the middle of your workload to have to go manually tweak a bunch of stuff.", "tokens": [50364, 467, 2138, 46628, 264, 1752, 13, 467, 445, 411, 309, 311, 572, 1019, 281, 411, 362, 294, 264, 2808, 295, 428, 20139, 281, 362, 281, 352, 16945, 29879, 257, 3840, 295, 1507, 13, 50864, 50864, 865, 13, 407, 445, 281, 17594, 11, 309, 311, 17995, 281, 2699, 76, 5893, 395, 12005, 538, 8240, 279, 13, 407, 17995, 8240, 281, 8240, 2699, 76, 5893, 395, 13, 51264, 51264, 1079, 11, 321, 603, 829, 257, 2113, 294, 264, 855, 5570, 13, 865, 13, 407, 630, 321, 1867, 264, 1168, 466, 2699, 76, 15682, 5717, 46074, 12199, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.09788944745304609, "compression_ratio": 1.5485232067510548, "no_caption_prob": 1.1300505320832599e-05}, {"id": 314, "seek": 301300, "start": 3023.0, "end": 3031.0, "text": " Yeah. So just to clarify, it's HTML to Elm dot com separated by dashes. So HTML dash to dash Elm dot com.", "tokens": [50364, 467, 2138, 46628, 264, 1752, 13, 467, 445, 411, 309, 311, 572, 1019, 281, 411, 362, 294, 264, 2808, 295, 428, 20139, 281, 362, 281, 352, 16945, 29879, 257, 3840, 295, 1507, 13, 50864, 50864, 865, 13, 407, 445, 281, 17594, 11, 309, 311, 17995, 281, 2699, 76, 5893, 395, 12005, 538, 8240, 279, 13, 407, 17995, 8240, 281, 8240, 2699, 76, 5893, 395, 13, 51264, 51264, 1079, 11, 321, 603, 829, 257, 2113, 294, 264, 855, 5570, 13, 865, 13, 407, 630, 321, 1867, 264, 1168, 466, 2699, 76, 15682, 5717, 46074, 12199, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.09788944745304609, "compression_ratio": 1.5485232067510548, "no_caption_prob": 1.1300505320832599e-05}, {"id": 315, "seek": 301300, "start": 3031.0, "end": 3037.0, "text": " Yes, we'll put a link in the show notes. Yeah. So did we answer the question about Elm UI versus Tailwind?", "tokens": [50364, 467, 2138, 46628, 264, 1752, 13, 467, 445, 411, 309, 311, 572, 1019, 281, 411, 362, 294, 264, 2808, 295, 428, 20139, 281, 362, 281, 352, 16945, 29879, 257, 3840, 295, 1507, 13, 50864, 50864, 865, 13, 407, 445, 281, 17594, 11, 309, 311, 17995, 281, 2699, 76, 5893, 395, 12005, 538, 8240, 279, 13, 407, 17995, 8240, 281, 8240, 2699, 76, 5893, 395, 13, 51264, 51264, 1079, 11, 321, 603, 829, 257, 2113, 294, 264, 855, 5570, 13, 865, 13, 407, 630, 321, 1867, 264, 1168, 466, 2699, 76, 15682, 5717, 46074, 12199, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.09788944745304609, "compression_ratio": 1.5485232067510548, "no_caption_prob": 1.1300505320832599e-05}, {"id": 316, "seek": 303700, "start": 3037.0, "end": 3047.0, "text": " Right. I remember I wanted to say something about that. I think ultimately I'm having like dreams of there being the ultimate M.U.I. in the end,", "tokens": [50364, 1779, 13, 286, 1604, 286, 1415, 281, 584, 746, 466, 300, 13, 286, 519, 6284, 286, 478, 1419, 411, 7505, 295, 456, 885, 264, 9705, 376, 13, 52, 13, 40, 13, 294, 264, 917, 11, 50864, 50864, 570, 286, 536, 3195, 295, 24197, 1296, 46074, 12199, 293, 376, 13, 52, 13, 40, 13, 754, 498, 411, 291, 362, 281, 932, 12415, 257, 688, 13, 51264, 51264, 821, 307, 721, 411, 11, 337, 1365, 11, 264, 27739, 14877, 294, 46074, 12199, 11, 597, 436, 445, 764, 1901, 37556, 1783, 37556, 3180, 11, 337, 1365, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12365055084228516, "compression_ratio": 1.641025641025641, "no_caption_prob": 9.460475121159106e-05}, {"id": 317, "seek": 303700, "start": 3047.0, "end": 3055.0, "text": " because I see lots of similarities between Tailwind and M.U.I. even if like you have to flinch a lot.", "tokens": [50364, 1779, 13, 286, 1604, 286, 1415, 281, 584, 746, 466, 300, 13, 286, 519, 6284, 286, 478, 1419, 411, 7505, 295, 456, 885, 264, 9705, 376, 13, 52, 13, 40, 13, 294, 264, 917, 11, 50864, 50864, 570, 286, 536, 3195, 295, 24197, 1296, 46074, 12199, 293, 376, 13, 52, 13, 40, 13, 754, 498, 411, 291, 362, 281, 932, 12415, 257, 688, 13, 51264, 51264, 821, 307, 721, 411, 11, 337, 1365, 11, 264, 27739, 14877, 294, 46074, 12199, 11, 597, 436, 445, 764, 1901, 37556, 1783, 37556, 3180, 11, 337, 1365, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12365055084228516, "compression_ratio": 1.641025641025641, "no_caption_prob": 9.460475121159106e-05}, {"id": 318, "seek": 303700, "start": 3055.0, "end": 3065.0, "text": " There is things like, for example, the spacing utility in Tailwind, which they just use space underscore X underscore eight, for example.", "tokens": [50364, 1779, 13, 286, 1604, 286, 1415, 281, 584, 746, 466, 300, 13, 286, 519, 6284, 286, 478, 1419, 411, 7505, 295, 456, 885, 264, 9705, 376, 13, 52, 13, 40, 13, 294, 264, 917, 11, 50864, 50864, 570, 286, 536, 3195, 295, 24197, 1296, 46074, 12199, 293, 376, 13, 52, 13, 40, 13, 754, 498, 411, 291, 362, 281, 932, 12415, 257, 688, 13, 51264, 51264, 821, 307, 721, 411, 11, 337, 1365, 11, 264, 27739, 14877, 294, 46074, 12199, 11, 597, 436, 445, 764, 1901, 37556, 1783, 37556, 3180, 11, 337, 1365, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12365055084228516, "compression_ratio": 1.641025641025641, "no_caption_prob": 9.460475121159106e-05}, {"id": 319, "seek": 306500, "start": 3065.0, "end": 3071.0, "text": " And it'll add, I think, yeah, 32 pixels of spacing between your children elements.", "tokens": [50364, 400, 309, 603, 909, 11, 286, 519, 11, 1338, 11, 8858, 18668, 295, 27739, 1296, 428, 2227, 4959, 13, 50664, 50664, 400, 286, 2041, 341, 307, 746, 2531, 281, 1228, 257, 5386, 420, 7738, 294, 2699, 76, 15682, 293, 5127, 264, 27739, 38011, 13, 51064, 51064, 400, 309, 311, 364, 37765, 670, 24387, 13, 407, 294, 264, 917, 11, 309, 311, 1293, 307, 767, 24387, 3089, 11, 457, 291, 434, 1228, 264, 912, 9362, 13, 51364, 51364, 407, 436, 366, 1419, 24197, 13, 400, 498, 291, 722, 281, 12649, 11, 498, 291, 722, 281, 12649, 2699, 76, 46074, 12199, 16679, 411, 437, 286, 478, 5038, 294, 264, 2027, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09268711731497166, "compression_ratio": 1.6555555555555554, "no_caption_prob": 2.1444477170007303e-05}, {"id": 320, "seek": 306500, "start": 3071.0, "end": 3079.0, "text": " And I guess this is something similar to using a row or column in Elm UI and adding the spacing modifier.", "tokens": [50364, 400, 309, 603, 909, 11, 286, 519, 11, 1338, 11, 8858, 18668, 295, 27739, 1296, 428, 2227, 4959, 13, 50664, 50664, 400, 286, 2041, 341, 307, 746, 2531, 281, 1228, 257, 5386, 420, 7738, 294, 2699, 76, 15682, 293, 5127, 264, 27739, 38011, 13, 51064, 51064, 400, 309, 311, 364, 37765, 670, 24387, 13, 407, 294, 264, 917, 11, 309, 311, 1293, 307, 767, 24387, 3089, 11, 457, 291, 434, 1228, 264, 912, 9362, 13, 51364, 51364, 407, 436, 366, 1419, 24197, 13, 400, 498, 291, 722, 281, 12649, 11, 498, 291, 722, 281, 12649, 2699, 76, 46074, 12199, 16679, 411, 437, 286, 478, 5038, 294, 264, 2027, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09268711731497166, "compression_ratio": 1.6555555555555554, "no_caption_prob": 2.1444477170007303e-05}, {"id": 321, "seek": 306500, "start": 3079.0, "end": 3085.0, "text": " And it's an abstraction over CSS. So in the end, it's both is actually CSS code, but you're using the same API.", "tokens": [50364, 400, 309, 603, 909, 11, 286, 519, 11, 1338, 11, 8858, 18668, 295, 27739, 1296, 428, 2227, 4959, 13, 50664, 50664, 400, 286, 2041, 341, 307, 746, 2531, 281, 1228, 257, 5386, 420, 7738, 294, 2699, 76, 15682, 293, 5127, 264, 27739, 38011, 13, 51064, 51064, 400, 309, 311, 364, 37765, 670, 24387, 13, 407, 294, 264, 917, 11, 309, 311, 1293, 307, 767, 24387, 3089, 11, 457, 291, 434, 1228, 264, 912, 9362, 13, 51364, 51364, 407, 436, 366, 1419, 24197, 13, 400, 498, 291, 722, 281, 12649, 11, 498, 291, 722, 281, 12649, 2699, 76, 46074, 12199, 16679, 411, 437, 286, 478, 5038, 294, 264, 2027, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09268711731497166, "compression_ratio": 1.6555555555555554, "no_caption_prob": 2.1444477170007303e-05}, {"id": 322, "seek": 306500, "start": 3085.0, "end": 3094.0, "text": " So they are having similarities. And if you start to abstract, if you start to abstract Elm Tailwind modules like what I'm planning in the future,", "tokens": [50364, 400, 309, 603, 909, 11, 286, 519, 11, 1338, 11, 8858, 18668, 295, 27739, 1296, 428, 2227, 4959, 13, 50664, 50664, 400, 286, 2041, 341, 307, 746, 2531, 281, 1228, 257, 5386, 420, 7738, 294, 2699, 76, 15682, 293, 5127, 264, 27739, 38011, 13, 51064, 51064, 400, 309, 311, 364, 37765, 670, 24387, 13, 407, 294, 264, 917, 11, 309, 311, 1293, 307, 767, 24387, 3089, 11, 457, 291, 434, 1228, 264, 912, 9362, 13, 51364, 51364, 407, 436, 366, 1419, 24197, 13, 400, 498, 291, 722, 281, 12649, 11, 498, 291, 722, 281, 12649, 2699, 76, 46074, 12199, 16679, 411, 437, 286, 478, 5038, 294, 264, 2027, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09268711731497166, "compression_ratio": 1.6555555555555554, "no_caption_prob": 2.1444477170007303e-05}, {"id": 323, "seek": 309400, "start": 3094.0, "end": 3103.0, "text": " it's going to be even similar when you're using background color and just putting in a color you have to find somewhere else.", "tokens": [50364, 309, 311, 516, 281, 312, 754, 2531, 562, 291, 434, 1228, 3678, 2017, 293, 445, 3372, 294, 257, 2017, 291, 362, 281, 915, 4079, 1646, 13, 50814, 50814, 467, 311, 516, 281, 722, 281, 574, 588, 2531, 13, 400, 309, 1669, 385, 3055, 295, 341, 9705, 376, 13, 52, 13, 40, 13, 286, 2041, 11, 51164, 51164, 597, 575, 439, 295, 613, 4122, 293, 1310, 1985, 365, 3021, 24109, 13, 51364, 51364, 400, 550, 294, 264, 917, 11, 1310, 291, 500, 380, 754, 362, 281, 519, 466, 29208, 4995, 3602, 293, 577, 19632, 293, 4194, 293, 41684, 1985, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06593350530828088, "compression_ratio": 1.640625, "no_caption_prob": 9.914729162119329e-05}, {"id": 324, "seek": 309400, "start": 3103.0, "end": 3110.0, "text": " It's going to start to look very similar. And it makes me dream of this ultimate M.U.I. I guess,", "tokens": [50364, 309, 311, 516, 281, 312, 754, 2531, 562, 291, 434, 1228, 3678, 2017, 293, 445, 3372, 294, 257, 2017, 291, 362, 281, 915, 4079, 1646, 13, 50814, 50814, 467, 311, 516, 281, 722, 281, 574, 588, 2531, 13, 400, 309, 1669, 385, 3055, 295, 341, 9705, 376, 13, 52, 13, 40, 13, 286, 2041, 11, 51164, 51164, 597, 575, 439, 295, 613, 4122, 293, 1310, 1985, 365, 3021, 24109, 13, 51364, 51364, 400, 550, 294, 264, 917, 11, 1310, 291, 500, 380, 754, 362, 281, 519, 466, 29208, 4995, 3602, 293, 577, 19632, 293, 4194, 293, 41684, 1985, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06593350530828088, "compression_ratio": 1.640625, "no_caption_prob": 9.914729162119329e-05}, {"id": 325, "seek": 309400, "start": 3110.0, "end": 3114.0, "text": " which has all of these features and maybe works with media queries.", "tokens": [50364, 309, 311, 516, 281, 312, 754, 2531, 562, 291, 434, 1228, 3678, 2017, 293, 445, 3372, 294, 257, 2017, 291, 362, 281, 915, 4079, 1646, 13, 50814, 50814, 467, 311, 516, 281, 722, 281, 574, 588, 2531, 13, 400, 309, 1669, 385, 3055, 295, 341, 9705, 376, 13, 52, 13, 40, 13, 286, 2041, 11, 51164, 51164, 597, 575, 439, 295, 613, 4122, 293, 1310, 1985, 365, 3021, 24109, 13, 51364, 51364, 400, 550, 294, 264, 917, 11, 1310, 291, 500, 380, 754, 362, 281, 519, 466, 29208, 4995, 3602, 293, 577, 19632, 293, 4194, 293, 41684, 1985, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06593350530828088, "compression_ratio": 1.640625, "no_caption_prob": 9.914729162119329e-05}, {"id": 326, "seek": 309400, "start": 3114.0, "end": 3123.0, "text": " And then in the end, maybe you don't even have to think about Flexbox anymore and how stretching and growing and shrinking works.", "tokens": [50364, 309, 311, 516, 281, 312, 754, 2531, 562, 291, 434, 1228, 3678, 2017, 293, 445, 3372, 294, 257, 2017, 291, 362, 281, 915, 4079, 1646, 13, 50814, 50814, 467, 311, 516, 281, 722, 281, 574, 588, 2531, 13, 400, 309, 1669, 385, 3055, 295, 341, 9705, 376, 13, 52, 13, 40, 13, 286, 2041, 11, 51164, 51164, 597, 575, 439, 295, 613, 4122, 293, 1310, 1985, 365, 3021, 24109, 13, 51364, 51364, 400, 550, 294, 264, 917, 11, 1310, 291, 500, 380, 754, 362, 281, 519, 466, 29208, 4995, 3602, 293, 577, 19632, 293, 4194, 293, 41684, 1985, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06593350530828088, "compression_ratio": 1.640625, "no_caption_prob": 9.914729162119329e-05}, {"id": 327, "seek": 312300, "start": 3123.0, "end": 3126.0, "text": " And I think that would be that's that's something awesome.", "tokens": [50364, 400, 286, 519, 300, 576, 312, 300, 311, 300, 311, 746, 3476, 13, 50514, 50514, 407, 286, 519, 295, 46074, 12199, 293, 2699, 76, 46074, 12199, 16679, 544, 382, 257, 18577, 1296, 1419, 439, 295, 264, 11, 294, 19963, 11, 50964, 50964, 7339, 4122, 2435, 965, 11, 457, 2684, 666, 264, 912, 3513, 420, 457, 14908, 490, 257, 588, 819, 5802, 300, 2699, 76, 15682, 775, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08358418773597395, "compression_ratio": 1.5075376884422111, "no_caption_prob": 3.169269984937273e-05}, {"id": 328, "seek": 312300, "start": 3126.0, "end": 3135.0, "text": " So I think of Tailwind and Elm Tailwind modules more as a compromise between having all of the, in quotes,", "tokens": [50364, 400, 286, 519, 300, 576, 312, 300, 311, 300, 311, 746, 3476, 13, 50514, 50514, 407, 286, 519, 295, 46074, 12199, 293, 2699, 76, 46074, 12199, 16679, 544, 382, 257, 18577, 1296, 1419, 439, 295, 264, 11, 294, 19963, 11, 50964, 50964, 7339, 4122, 2435, 965, 11, 457, 2684, 666, 264, 912, 3513, 420, 457, 14908, 490, 257, 588, 819, 5802, 300, 2699, 76, 15682, 775, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08358418773597395, "compression_ratio": 1.5075376884422111, "no_caption_prob": 3.169269984937273e-05}, {"id": 329, "seek": 312300, "start": 3135.0, "end": 3145.0, "text": " advanced features available today, but moving into the same direction or but approaching from a very different angle that Elm UI does.", "tokens": [50364, 400, 286, 519, 300, 576, 312, 300, 311, 300, 311, 746, 3476, 13, 50514, 50514, 407, 286, 519, 295, 46074, 12199, 293, 2699, 76, 46074, 12199, 16679, 544, 382, 257, 18577, 1296, 1419, 439, 295, 264, 11, 294, 19963, 11, 50964, 50964, 7339, 4122, 2435, 965, 11, 457, 2684, 666, 264, 912, 3513, 420, 457, 14908, 490, 257, 588, 819, 5802, 300, 2699, 76, 15682, 775, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08358418773597395, "compression_ratio": 1.5075376884422111, "no_caption_prob": 3.169269984937273e-05}, {"id": 330, "seek": 314500, "start": 3145.0, "end": 3155.0, "text": " Yeah, I think that makes a ton of sense. Like one concrete example of how you might translate that, that just to give people an idea of what that experience might feel like,", "tokens": [50364, 865, 11, 286, 519, 300, 1669, 257, 2952, 295, 2020, 13, 1743, 472, 9859, 1365, 295, 577, 291, 1062, 13799, 300, 11, 300, 445, 281, 976, 561, 364, 1558, 295, 437, 300, 1752, 1062, 841, 411, 11, 50864, 50864, 576, 312, 2602, 295, 1419, 11, 291, 458, 11, 46074, 12199, 13, 52, 83, 3064, 13, 37, 2021, 11, 597, 307, 767, 445, 4674, 5896, 833, 264, 13376, 11, 51314, 51314, 291, 576, 406, 8460, 46074, 12199, 13, 52, 83, 3064, 13, 37, 2021, 11, 457, 2602, 291, 576, 362, 257, 2445, 11, 291, 458, 11, 293, 309, 576, 312, 411, 337, 257, 5896, 6162, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10626326569723427, "compression_ratio": 1.7224489795918367, "no_caption_prob": 4.3995853047817945e-05}, {"id": 331, "seek": 314500, "start": 3155.0, "end": 3164.0, "text": " would be instead of having, you know, Tailwind.Utilities.Flex, which is actually just display flex under the hood,", "tokens": [50364, 865, 11, 286, 519, 300, 1669, 257, 2952, 295, 2020, 13, 1743, 472, 9859, 1365, 295, 577, 291, 1062, 13799, 300, 11, 300, 445, 281, 976, 561, 364, 1558, 295, 437, 300, 1752, 1062, 841, 411, 11, 50864, 50864, 576, 312, 2602, 295, 1419, 11, 291, 458, 11, 46074, 12199, 13, 52, 83, 3064, 13, 37, 2021, 11, 597, 307, 767, 445, 4674, 5896, 833, 264, 13376, 11, 51314, 51314, 291, 576, 406, 8460, 46074, 12199, 13, 52, 83, 3064, 13, 37, 2021, 11, 457, 2602, 291, 576, 362, 257, 2445, 11, 291, 458, 11, 293, 309, 576, 312, 411, 337, 257, 5896, 6162, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10626326569723427, "compression_ratio": 1.7224489795918367, "no_caption_prob": 4.3995853047817945e-05}, {"id": 332, "seek": 314500, "start": 3164.0, "end": 3173.0, "text": " you would not generate Tailwind.Utilities.Flex, but instead you would have a function, you know, and it would be like for a flex tag.", "tokens": [50364, 865, 11, 286, 519, 300, 1669, 257, 2952, 295, 2020, 13, 1743, 472, 9859, 1365, 295, 577, 291, 1062, 13799, 300, 11, 300, 445, 281, 976, 561, 364, 1558, 295, 437, 300, 1752, 1062, 841, 411, 11, 50864, 50864, 576, 312, 2602, 295, 1419, 11, 291, 458, 11, 46074, 12199, 13, 52, 83, 3064, 13, 37, 2021, 11, 597, 307, 767, 445, 4674, 5896, 833, 264, 13376, 11, 51314, 51314, 291, 576, 406, 8460, 46074, 12199, 13, 52, 83, 3064, 13, 37, 2021, 11, 457, 2602, 291, 576, 362, 257, 2445, 11, 291, 458, 11, 293, 309, 576, 312, 411, 337, 257, 5896, 6162, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10626326569723427, "compression_ratio": 1.7224489795918367, "no_caption_prob": 4.3995853047817945e-05}, {"id": 333, "seek": 317300, "start": 3173.0, "end": 3180.0, "text": " Although that does become interesting now because then now you get into the same thing as Elm UI, right?", "tokens": [50364, 5780, 300, 775, 1813, 1880, 586, 570, 550, 586, 291, 483, 666, 264, 912, 551, 382, 2699, 76, 15682, 11, 558, 30, 50714, 50714, 2305, 2699, 76, 15682, 34149, 264, 10710, 295, 411, 17089, 293, 641, 1491, 1010, 13, 50964, 50964, 407, 498, 746, 307, 264, 1433, 294, 2699, 76, 15682, 307, 257, 4458, 13, 407, 498, 264, 4458, 307, 2135, 420, 5947, 2159, 11, 300, 311, 411, 264, 4361, 45298, 293, 264, 4361, 45298, 366, 12005, 490, 264, 27944, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08262280295876896, "compression_ratio": 1.6699507389162562, "no_caption_prob": 0.00014882403775118291}, {"id": 334, "seek": 317300, "start": 3180.0, "end": 3185.0, "text": " Where Elm UI separates the notion of like containers and their markup.", "tokens": [50364, 5780, 300, 775, 1813, 1880, 586, 570, 550, 586, 291, 483, 666, 264, 912, 551, 382, 2699, 76, 15682, 11, 558, 30, 50714, 50714, 2305, 2699, 76, 15682, 34149, 264, 10710, 295, 411, 17089, 293, 641, 1491, 1010, 13, 50964, 50964, 407, 498, 746, 307, 264, 1433, 294, 2699, 76, 15682, 307, 257, 4458, 13, 407, 498, 264, 4458, 307, 2135, 420, 5947, 2159, 11, 300, 311, 411, 264, 4361, 45298, 293, 264, 4361, 45298, 366, 12005, 490, 264, 27944, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08262280295876896, "compression_ratio": 1.6699507389162562, "no_caption_prob": 0.00014882403775118291}, {"id": 335, "seek": 317300, "start": 3185.0, "end": 3200.0, "text": " So if something is the term in Elm UI is a region. So if the region is main or nav bar, that's like the semantics and the semantics are separated from the styling.", "tokens": [50364, 5780, 300, 775, 1813, 1880, 586, 570, 550, 586, 291, 483, 666, 264, 912, 551, 382, 2699, 76, 15682, 11, 558, 30, 50714, 50714, 2305, 2699, 76, 15682, 34149, 264, 10710, 295, 411, 17089, 293, 641, 1491, 1010, 13, 50964, 50964, 407, 498, 746, 307, 264, 1433, 294, 2699, 76, 15682, 307, 257, 4458, 13, 407, 498, 264, 4458, 307, 2135, 420, 5947, 2159, 11, 300, 311, 411, 264, 4361, 45298, 293, 264, 4361, 45298, 366, 12005, 490, 264, 27944, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08262280295876896, "compression_ratio": 1.6699507389162562, "no_caption_prob": 0.00014882403775118291}, {"id": 336, "seek": 320000, "start": 3200.0, "end": 3205.0, "text": " So you would have to get into that territory a little, which I mean, there's really no reason that you couldn't,", "tokens": [50364, 407, 291, 576, 362, 281, 483, 666, 300, 11360, 257, 707, 11, 597, 286, 914, 11, 456, 311, 534, 572, 1778, 300, 291, 2809, 380, 11, 50614, 50614, 300, 291, 2809, 380, 747, 300, 912, 3513, 295, 1419, 309, 312, 364, 19667, 281, 6964, 264, 4458, 11, 264, 4361, 45298, 295, 264, 17995, 4959, 13, 51064, 51064, 583, 498, 291, 362, 364, 9362, 411, 300, 11, 586, 5896, 3643, 746, 689, 411, 291, 584, 11, 2264, 11, 5896, 11, 51364, 51364, 293, 291, 393, 1884, 341, 1481, 1752, 689, 291, 393, 6964, 1951, 300, 264, 819, 21669, 300, 291, 727, 362, 337, 1489, 1794, 721, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08645618508715149, "compression_ratio": 1.7279411764705883, "no_caption_prob": 4.198291935608722e-05}, {"id": 337, "seek": 320000, "start": 3205.0, "end": 3214.0, "text": " that you couldn't take that same direction of having it be an attribute to define the region, the semantics of the HTML elements.", "tokens": [50364, 407, 291, 576, 362, 281, 483, 666, 300, 11360, 257, 707, 11, 597, 286, 914, 11, 456, 311, 534, 572, 1778, 300, 291, 2809, 380, 11, 50614, 50614, 300, 291, 2809, 380, 747, 300, 912, 3513, 295, 1419, 309, 312, 364, 19667, 281, 6964, 264, 4458, 11, 264, 4361, 45298, 295, 264, 17995, 4959, 13, 51064, 51064, 583, 498, 291, 362, 364, 9362, 411, 300, 11, 586, 5896, 3643, 746, 689, 411, 291, 584, 11, 2264, 11, 5896, 11, 51364, 51364, 293, 291, 393, 1884, 341, 1481, 1752, 689, 291, 393, 6964, 1951, 300, 264, 819, 21669, 300, 291, 727, 362, 337, 1489, 1794, 721, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08645618508715149, "compression_ratio": 1.7279411764705883, "no_caption_prob": 4.198291935608722e-05}, {"id": 338, "seek": 320000, "start": 3214.0, "end": 3220.0, "text": " But if you have an API like that, now flex becomes something where like you say, OK, flex,", "tokens": [50364, 407, 291, 576, 362, 281, 483, 666, 300, 11360, 257, 707, 11, 597, 286, 914, 11, 456, 311, 534, 572, 1778, 300, 291, 2809, 380, 11, 50614, 50614, 300, 291, 2809, 380, 747, 300, 912, 3513, 295, 1419, 309, 312, 364, 19667, 281, 6964, 264, 4458, 11, 264, 4361, 45298, 295, 264, 17995, 4959, 13, 51064, 51064, 583, 498, 291, 362, 364, 9362, 411, 300, 11, 586, 5896, 3643, 746, 689, 411, 291, 584, 11, 2264, 11, 5896, 11, 51364, 51364, 293, 291, 393, 1884, 341, 1481, 1752, 689, 291, 393, 6964, 1951, 300, 264, 819, 21669, 300, 291, 727, 362, 337, 1489, 1794, 721, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08645618508715149, "compression_ratio": 1.7279411764705883, "no_caption_prob": 4.198291935608722e-05}, {"id": 339, "seek": 320000, "start": 3220.0, "end": 3227.0, "text": " and you can create this nice experience where you can define within that the different variants that you could have for centering things", "tokens": [50364, 407, 291, 576, 362, 281, 483, 666, 300, 11360, 257, 707, 11, 597, 286, 914, 11, 456, 311, 534, 572, 1778, 300, 291, 2809, 380, 11, 50614, 50614, 300, 291, 2809, 380, 747, 300, 912, 3513, 295, 1419, 309, 312, 364, 19667, 281, 6964, 264, 4458, 11, 264, 4361, 45298, 295, 264, 17995, 4959, 13, 51064, 51064, 583, 498, 291, 362, 364, 9362, 411, 300, 11, 586, 5896, 3643, 746, 689, 411, 291, 584, 11, 2264, 11, 5896, 11, 51364, 51364, 293, 291, 393, 1884, 341, 1481, 1752, 689, 291, 393, 6964, 1951, 300, 264, 819, 21669, 300, 291, 727, 362, 337, 1489, 1794, 721, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08645618508715149, "compression_ratio": 1.7279411764705883, "no_caption_prob": 4.198291935608722e-05}, {"id": 340, "seek": 322700, "start": 3227.0, "end": 3231.0, "text": " and having the spacing and you could have a higher level API for saying those things.", "tokens": [50364, 293, 1419, 264, 27739, 293, 291, 727, 362, 257, 2946, 1496, 9362, 337, 1566, 729, 721, 13, 50564, 50564, 865, 13, 1485, 551, 286, 390, 1953, 466, 307, 456, 307, 11, 337, 1365, 11, 264, 46074, 12199, 24387, 7123, 295, 5896, 293, 5896, 5386, 293, 5896, 818, 13, 51014, 51014, 400, 286, 390, 1953, 11, 731, 11, 983, 500, 380, 5896, 5386, 293, 5896, 818, 445, 33616, 4674, 5896, 30, 51264, 51264, 400, 1564, 291, 764, 300, 11, 983, 754, 5896, 8240, 5386, 30, 1545, 406, 445, 5386, 293, 818, 30, 51514, 51514, 400, 550, 291, 722, 281, 362, 544, 2531, 21445, 1296, 2699, 76, 15682, 293, 46074, 12199, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06956207961366888, "compression_ratio": 1.734375, "no_caption_prob": 5.307360697770491e-05}, {"id": 341, "seek": 322700, "start": 3231.0, "end": 3240.0, "text": " Yeah. One thing I was thinking about is there is, for example, the Tailwind CSS definition of flex and flex row and flex call.", "tokens": [50364, 293, 1419, 264, 27739, 293, 291, 727, 362, 257, 2946, 1496, 9362, 337, 1566, 729, 721, 13, 50564, 50564, 865, 13, 1485, 551, 286, 390, 1953, 466, 307, 456, 307, 11, 337, 1365, 11, 264, 46074, 12199, 24387, 7123, 295, 5896, 293, 5896, 5386, 293, 5896, 818, 13, 51014, 51014, 400, 286, 390, 1953, 11, 731, 11, 983, 500, 380, 5896, 5386, 293, 5896, 818, 445, 33616, 4674, 5896, 30, 51264, 51264, 400, 1564, 291, 764, 300, 11, 983, 754, 5896, 8240, 5386, 30, 1545, 406, 445, 5386, 293, 818, 30, 51514, 51514, 400, 550, 291, 722, 281, 362, 544, 2531, 21445, 1296, 2699, 76, 15682, 293, 46074, 12199, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06956207961366888, "compression_ratio": 1.734375, "no_caption_prob": 5.307360697770491e-05}, {"id": 342, "seek": 322700, "start": 3240.0, "end": 3245.0, "text": " And I was thinking, well, why don't flex row and flex call just imply display flex?", "tokens": [50364, 293, 1419, 264, 27739, 293, 291, 727, 362, 257, 2946, 1496, 9362, 337, 1566, 729, 721, 13, 50564, 50564, 865, 13, 1485, 551, 286, 390, 1953, 466, 307, 456, 307, 11, 337, 1365, 11, 264, 46074, 12199, 24387, 7123, 295, 5896, 293, 5896, 5386, 293, 5896, 818, 13, 51014, 51014, 400, 286, 390, 1953, 11, 731, 11, 983, 500, 380, 5896, 5386, 293, 5896, 818, 445, 33616, 4674, 5896, 30, 51264, 51264, 400, 1564, 291, 764, 300, 11, 983, 754, 5896, 8240, 5386, 30, 1545, 406, 445, 5386, 293, 818, 30, 51514, 51514, 400, 550, 291, 722, 281, 362, 544, 2531, 21445, 1296, 2699, 76, 15682, 293, 46074, 12199, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06956207961366888, "compression_ratio": 1.734375, "no_caption_prob": 5.307360697770491e-05}, {"id": 343, "seek": 322700, "start": 3245.0, "end": 3250.0, "text": " And once you use that, why even flex dash row? Why not just row and call?", "tokens": [50364, 293, 1419, 264, 27739, 293, 291, 727, 362, 257, 2946, 1496, 9362, 337, 1566, 729, 721, 13, 50564, 50564, 865, 13, 1485, 551, 286, 390, 1953, 466, 307, 456, 307, 11, 337, 1365, 11, 264, 46074, 12199, 24387, 7123, 295, 5896, 293, 5896, 5386, 293, 5896, 818, 13, 51014, 51014, 400, 286, 390, 1953, 11, 731, 11, 983, 500, 380, 5896, 5386, 293, 5896, 818, 445, 33616, 4674, 5896, 30, 51264, 51264, 400, 1564, 291, 764, 300, 11, 983, 754, 5896, 8240, 5386, 30, 1545, 406, 445, 5386, 293, 818, 30, 51514, 51514, 400, 550, 291, 722, 281, 362, 544, 2531, 21445, 1296, 2699, 76, 15682, 293, 46074, 12199, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06956207961366888, "compression_ratio": 1.734375, "no_caption_prob": 5.307360697770491e-05}, {"id": 344, "seek": 322700, "start": 3250.0, "end": 3255.0, "text": " And then you start to have more similar APIs between Elm UI and Tailwind.", "tokens": [50364, 293, 1419, 264, 27739, 293, 291, 727, 362, 257, 2946, 1496, 9362, 337, 1566, 729, 721, 13, 50564, 50564, 865, 13, 1485, 551, 286, 390, 1953, 466, 307, 456, 307, 11, 337, 1365, 11, 264, 46074, 12199, 24387, 7123, 295, 5896, 293, 5896, 5386, 293, 5896, 818, 13, 51014, 51014, 400, 286, 390, 1953, 11, 731, 11, 983, 500, 380, 5896, 5386, 293, 5896, 818, 445, 33616, 4674, 5896, 30, 51264, 51264, 400, 1564, 291, 764, 300, 11, 983, 754, 5896, 8240, 5386, 30, 1545, 406, 445, 5386, 293, 818, 30, 51514, 51514, 400, 550, 291, 722, 281, 362, 544, 2531, 21445, 1296, 2699, 76, 15682, 293, 46074, 12199, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06956207961366888, "compression_ratio": 1.734375, "no_caption_prob": 5.307360697770491e-05}, {"id": 345, "seek": 325500, "start": 3255.0, "end": 3261.0, "text": " Yeah, Tailwind already tries to abstract those things to a certain extent. So it's just taking it a step further.", "tokens": [50364, 865, 11, 46074, 12199, 1217, 9898, 281, 12649, 729, 721, 281, 257, 1629, 8396, 13, 407, 309, 311, 445, 1940, 309, 257, 1823, 3052, 13, 50664, 50664, 407, 472, 551, 300, 321, 994, 380, 2152, 11, 519, 11, 307, 300, 570, 291, 586, 362, 6828, 420, 35870, 281, 6964, 428, 24387, 11, 51064, 51064, 291, 393, 764, 428, 9839, 281, 8399, 3566, 729, 21988, 13, 1779, 13, 51264, 51264, 407, 291, 393, 360, 257, 6162, 11, 3732, 26179, 11, 6838, 12199, 13, 51514, 51514, 400, 550, 309, 2709, 291, 8399, 19372, 337, 1566, 3678, 2182, 5923, 420, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12188973473113718, "compression_ratio": 1.632183908045977, "no_caption_prob": 8.219778101192787e-05}, {"id": 346, "seek": 325500, "start": 3261.0, "end": 3269.0, "text": " So one thing that we didn't mention, think, is that because you now have functions or constants to define your CSS,", "tokens": [50364, 865, 11, 46074, 12199, 1217, 9898, 281, 12649, 729, 721, 281, 257, 1629, 8396, 13, 407, 309, 311, 445, 1940, 309, 257, 1823, 3052, 13, 50664, 50664, 407, 472, 551, 300, 321, 994, 380, 2152, 11, 519, 11, 307, 300, 570, 291, 586, 362, 6828, 420, 35870, 281, 6964, 428, 24387, 11, 51064, 51064, 291, 393, 764, 428, 9839, 281, 8399, 3566, 729, 21988, 13, 1779, 13, 51264, 51264, 407, 291, 393, 360, 257, 6162, 11, 3732, 26179, 11, 6838, 12199, 13, 51514, 51514, 400, 550, 309, 2709, 291, 8399, 19372, 337, 1566, 3678, 2182, 5923, 420, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12188973473113718, "compression_ratio": 1.632183908045977, "no_caption_prob": 8.219778101192787e-05}, {"id": 347, "seek": 325500, "start": 3269.0, "end": 3273.0, "text": " you can use your editor to auto complete those definitions. Right.", "tokens": [50364, 865, 11, 46074, 12199, 1217, 9898, 281, 12649, 729, 721, 281, 257, 1629, 8396, 13, 407, 309, 311, 445, 1940, 309, 257, 1823, 3052, 13, 50664, 50664, 407, 472, 551, 300, 321, 994, 380, 2152, 11, 519, 11, 307, 300, 570, 291, 586, 362, 6828, 420, 35870, 281, 6964, 428, 24387, 11, 51064, 51064, 291, 393, 764, 428, 9839, 281, 8399, 3566, 729, 21988, 13, 1779, 13, 51264, 51264, 407, 291, 393, 360, 257, 6162, 11, 3732, 26179, 11, 6838, 12199, 13, 51514, 51514, 400, 550, 309, 2709, 291, 8399, 19372, 337, 1566, 3678, 2182, 5923, 420, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12188973473113718, "compression_ratio": 1.632183908045977, "no_caption_prob": 8.219778101192787e-05}, {"id": 348, "seek": 325500, "start": 3273.0, "end": 3278.0, "text": " So you can do a tag, square brackets, tailwind.", "tokens": [50364, 865, 11, 46074, 12199, 1217, 9898, 281, 12649, 729, 721, 281, 257, 1629, 8396, 13, 407, 309, 311, 445, 1940, 309, 257, 1823, 3052, 13, 50664, 50664, 407, 472, 551, 300, 321, 994, 380, 2152, 11, 519, 11, 307, 300, 570, 291, 586, 362, 6828, 420, 35870, 281, 6964, 428, 24387, 11, 51064, 51064, 291, 393, 764, 428, 9839, 281, 8399, 3566, 729, 21988, 13, 1779, 13, 51264, 51264, 407, 291, 393, 360, 257, 6162, 11, 3732, 26179, 11, 6838, 12199, 13, 51514, 51514, 400, 550, 309, 2709, 291, 8399, 19372, 337, 1566, 3678, 2182, 5923, 420, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12188973473113718, "compression_ratio": 1.632183908045977, "no_caption_prob": 8.219778101192787e-05}, {"id": 349, "seek": 325500, "start": 3278.0, "end": 3283.0, "text": " And then it gives you auto completion for saying background red 500 or something.", "tokens": [50364, 865, 11, 46074, 12199, 1217, 9898, 281, 12649, 729, 721, 281, 257, 1629, 8396, 13, 407, 309, 311, 445, 1940, 309, 257, 1823, 3052, 13, 50664, 50664, 407, 472, 551, 300, 321, 994, 380, 2152, 11, 519, 11, 307, 300, 570, 291, 586, 362, 6828, 420, 35870, 281, 6964, 428, 24387, 11, 51064, 51064, 291, 393, 764, 428, 9839, 281, 8399, 3566, 729, 21988, 13, 1779, 13, 51264, 51264, 407, 291, 393, 360, 257, 6162, 11, 3732, 26179, 11, 6838, 12199, 13, 51514, 51514, 400, 550, 309, 2709, 291, 8399, 19372, 337, 1566, 3678, 2182, 5923, 420, 746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12188973473113718, "compression_ratio": 1.632183908045977, "no_caption_prob": 8.219778101192787e-05}, {"id": 350, "seek": 328300, "start": 3283.0, "end": 3292.0, "text": " Yes, that's true. And there's even tooling and there is tooling for Tailwind CSS in general to give you auto complete", "tokens": [50364, 1079, 11, 300, 311, 2074, 13, 400, 456, 311, 754, 46593, 293, 456, 307, 46593, 337, 46074, 12199, 24387, 294, 2674, 281, 976, 291, 8399, 3566, 50814, 50814, 562, 291, 434, 3579, 257, 6798, 293, 291, 434, 2891, 365, 746, 300, 1542, 411, 257, 6838, 12199, 1508, 13, 51114, 51114, 583, 341, 1716, 11, 291, 500, 380, 643, 1071, 2290, 597, 486, 643, 281, 1223, 2699, 76, 3089, 11, 457, 2602, 764, 264, 2710, 2699, 76, 46593, 13, 51464, 51464, 400, 472, 551, 11, 472, 661, 551, 286, 2378, 380, 2825, 466, 886, 709, 294, 1908, 1939, 307, 286, 600, 3869, 14333, 5125, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08867655067800362, "compression_ratio": 1.673992673992674, "no_caption_prob": 5.738565232604742e-05}, {"id": 351, "seek": 328300, "start": 3292.0, "end": 3298.0, "text": " when you're writing a string and you're starting with something that looks like a tailwind class.", "tokens": [50364, 1079, 11, 300, 311, 2074, 13, 400, 456, 311, 754, 46593, 293, 456, 307, 46593, 337, 46074, 12199, 24387, 294, 2674, 281, 976, 291, 8399, 3566, 50814, 50814, 562, 291, 434, 3579, 257, 6798, 293, 291, 434, 2891, 365, 746, 300, 1542, 411, 257, 6838, 12199, 1508, 13, 51114, 51114, 583, 341, 1716, 11, 291, 500, 380, 643, 1071, 2290, 597, 486, 643, 281, 1223, 2699, 76, 3089, 11, 457, 2602, 764, 264, 2710, 2699, 76, 46593, 13, 51464, 51464, 400, 472, 551, 11, 472, 661, 551, 286, 2378, 380, 2825, 466, 886, 709, 294, 1908, 1939, 307, 286, 600, 3869, 14333, 5125, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08867655067800362, "compression_ratio": 1.673992673992674, "no_caption_prob": 5.738565232604742e-05}, {"id": 352, "seek": 328300, "start": 3298.0, "end": 3305.0, "text": " But this project, you don't need another tool which will need to understand Elm code, but instead use the normal Elm tooling.", "tokens": [50364, 1079, 11, 300, 311, 2074, 13, 400, 456, 311, 754, 46593, 293, 456, 307, 46593, 337, 46074, 12199, 24387, 294, 2674, 281, 976, 291, 8399, 3566, 50814, 50814, 562, 291, 434, 3579, 257, 6798, 293, 291, 434, 2891, 365, 746, 300, 1542, 411, 257, 6838, 12199, 1508, 13, 51114, 51114, 583, 341, 1716, 11, 291, 500, 380, 643, 1071, 2290, 597, 486, 643, 281, 1223, 2699, 76, 3089, 11, 457, 2602, 764, 264, 2710, 2699, 76, 46593, 13, 51464, 51464, 400, 472, 551, 11, 472, 661, 551, 286, 2378, 380, 2825, 466, 886, 709, 294, 1908, 1939, 307, 286, 600, 3869, 14333, 5125, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08867655067800362, "compression_ratio": 1.673992673992674, "no_caption_prob": 5.738565232604742e-05}, {"id": 353, "seek": 328300, "start": 3305.0, "end": 3312.0, "text": " And one thing, one other thing I haven't talked about too much in public yet is I've added documentation generation", "tokens": [50364, 1079, 11, 300, 311, 2074, 13, 400, 456, 311, 754, 46593, 293, 456, 307, 46593, 337, 46074, 12199, 24387, 294, 2674, 281, 976, 291, 8399, 3566, 50814, 50814, 562, 291, 434, 3579, 257, 6798, 293, 291, 434, 2891, 365, 746, 300, 1542, 411, 257, 6838, 12199, 1508, 13, 51114, 51114, 583, 341, 1716, 11, 291, 500, 380, 643, 1071, 2290, 597, 486, 643, 281, 1223, 2699, 76, 3089, 11, 457, 2602, 764, 264, 2710, 2699, 76, 46593, 13, 51464, 51464, 400, 472, 551, 11, 472, 661, 551, 286, 2378, 380, 2825, 466, 886, 709, 294, 1908, 1939, 307, 286, 600, 3869, 14333, 5125, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08867655067800362, "compression_ratio": 1.673992673992674, "no_caption_prob": 5.738565232604742e-05}, {"id": 354, "seek": 331200, "start": 3312.0, "end": 3320.0, "text": " to the Tailwind modules tool so you can now generate document or doc comments together with your generated code,", "tokens": [50364, 281, 264, 46074, 12199, 16679, 2290, 370, 291, 393, 586, 8460, 4166, 420, 3211, 3053, 1214, 365, 428, 10833, 3089, 11, 50764, 50764, 597, 486, 4090, 264, 24387, 300, 390, 21226, 281, 8460, 613, 21988, 13, 51064, 51064, 407, 562, 291, 20076, 670, 257, 46074, 12199, 10833, 46074, 12199, 14877, 1508, 5754, 11, 291, 486, 294, 428, 46593, 11, 51464, 51464, 498, 291, 362, 46593, 8899, 11, 2699, 76, 46593, 8899, 11, 486, 536, 294, 1080, 14333, 437, 24387, 390, 21226, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13903292487649357, "compression_ratio": 1.863849765258216, "no_caption_prob": 3.3735737815732136e-05}, {"id": 355, "seek": 331200, "start": 3320.0, "end": 3326.0, "text": " which will include the CSS that was consumed to generate these definitions.", "tokens": [50364, 281, 264, 46074, 12199, 16679, 2290, 370, 291, 393, 586, 8460, 4166, 420, 3211, 3053, 1214, 365, 428, 10833, 3089, 11, 50764, 50764, 597, 486, 4090, 264, 24387, 300, 390, 21226, 281, 8460, 613, 21988, 13, 51064, 51064, 407, 562, 291, 20076, 670, 257, 46074, 12199, 10833, 46074, 12199, 14877, 1508, 5754, 11, 291, 486, 294, 428, 46593, 11, 51464, 51464, 498, 291, 362, 46593, 8899, 11, 2699, 76, 46593, 8899, 11, 486, 536, 294, 1080, 14333, 437, 24387, 390, 21226, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13903292487649357, "compression_ratio": 1.863849765258216, "no_caption_prob": 3.3735737815732136e-05}, {"id": 356, "seek": 331200, "start": 3326.0, "end": 3334.0, "text": " So when you hover over a Tailwind generated Tailwind utility class constant, you will in your tooling,", "tokens": [50364, 281, 264, 46074, 12199, 16679, 2290, 370, 291, 393, 586, 8460, 4166, 420, 3211, 3053, 1214, 365, 428, 10833, 3089, 11, 50764, 50764, 597, 486, 4090, 264, 24387, 300, 390, 21226, 281, 8460, 613, 21988, 13, 51064, 51064, 407, 562, 291, 20076, 670, 257, 46074, 12199, 10833, 46074, 12199, 14877, 1508, 5754, 11, 291, 486, 294, 428, 46593, 11, 51464, 51464, 498, 291, 362, 46593, 8899, 11, 2699, 76, 46593, 8899, 11, 486, 536, 294, 1080, 14333, 437, 24387, 390, 21226, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13903292487649357, "compression_ratio": 1.863849765258216, "no_caption_prob": 3.3735737815732136e-05}, {"id": 357, "seek": 331200, "start": 3334.0, "end": 3340.0, "text": " if you have tooling installed, Elm tooling installed, will see in its documentation what CSS was consumed", "tokens": [50364, 281, 264, 46074, 12199, 16679, 2290, 370, 291, 393, 586, 8460, 4166, 420, 3211, 3053, 1214, 365, 428, 10833, 3089, 11, 50764, 50764, 597, 486, 4090, 264, 24387, 300, 390, 21226, 281, 8460, 613, 21988, 13, 51064, 51064, 407, 562, 291, 20076, 670, 257, 46074, 12199, 10833, 46074, 12199, 14877, 1508, 5754, 11, 291, 486, 294, 428, 46593, 11, 51464, 51464, 498, 291, 362, 46593, 8899, 11, 2699, 76, 46593, 8899, 11, 486, 536, 294, 1080, 14333, 437, 24387, 390, 21226, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13903292487649357, "compression_ratio": 1.863849765258216, "no_caption_prob": 3.3735737815732136e-05}, {"id": 358, "seek": 334000, "start": 3340.0, "end": 3346.0, "text": " for generating this and in essence will apply when you use this class or this constant.", "tokens": [50364, 337, 17746, 341, 293, 294, 12801, 486, 3079, 562, 291, 764, 341, 1508, 420, 341, 5754, 13, 50664, 50664, 5490, 13, 286, 1454, 300, 1177, 380, 652, 264, 3991, 709, 11, 709, 3801, 13, 50864, 50864, 467, 775, 13, 682, 1186, 11, 309, 775, 11, 7015, 13, 583, 286, 1454, 294, 264, 2027, 309, 311, 516, 281, 1813, 4356, 4033, 365, 1570, 293, 1570, 21988, 13, 51264, 51264, 1144, 291, 458, 577, 867, 21988, 291, 1884, 365, 428, 5125, 412, 264, 1623, 30, 51464, 51464, 286, 500, 380, 458, 13, 467, 5946, 13, 467, 5946, 257, 688, 322, 428, 46074, 12199, 11694, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08084003947605596, "compression_ratio": 1.6964980544747081, "no_caption_prob": 0.00014882937830407172}, {"id": 359, "seek": 334000, "start": 3346.0, "end": 3350.0, "text": " Nice. I hope that doesn't make the file much, much bigger.", "tokens": [50364, 337, 17746, 341, 293, 294, 12801, 486, 3079, 562, 291, 764, 341, 1508, 420, 341, 5754, 13, 50664, 50664, 5490, 13, 286, 1454, 300, 1177, 380, 652, 264, 3991, 709, 11, 709, 3801, 13, 50864, 50864, 467, 775, 13, 682, 1186, 11, 309, 775, 11, 7015, 13, 583, 286, 1454, 294, 264, 2027, 309, 311, 516, 281, 1813, 4356, 4033, 365, 1570, 293, 1570, 21988, 13, 51264, 51264, 1144, 291, 458, 577, 867, 21988, 291, 1884, 365, 428, 5125, 412, 264, 1623, 30, 51464, 51464, 286, 500, 380, 458, 13, 467, 5946, 13, 467, 5946, 257, 688, 322, 428, 46074, 12199, 11694, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08084003947605596, "compression_ratio": 1.6964980544747081, "no_caption_prob": 0.00014882937830407172}, {"id": 360, "seek": 334000, "start": 3350.0, "end": 3358.0, "text": " It does. In fact, it does, unfortunately. But I hope in the future it's going to become smaller anyway with less and less definitions.", "tokens": [50364, 337, 17746, 341, 293, 294, 12801, 486, 3079, 562, 291, 764, 341, 1508, 420, 341, 5754, 13, 50664, 50664, 5490, 13, 286, 1454, 300, 1177, 380, 652, 264, 3991, 709, 11, 709, 3801, 13, 50864, 50864, 467, 775, 13, 682, 1186, 11, 309, 775, 11, 7015, 13, 583, 286, 1454, 294, 264, 2027, 309, 311, 516, 281, 1813, 4356, 4033, 365, 1570, 293, 1570, 21988, 13, 51264, 51264, 1144, 291, 458, 577, 867, 21988, 291, 1884, 365, 428, 5125, 412, 264, 1623, 30, 51464, 51464, 286, 500, 380, 458, 13, 467, 5946, 13, 467, 5946, 257, 688, 322, 428, 46074, 12199, 11694, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08084003947605596, "compression_ratio": 1.6964980544747081, "no_caption_prob": 0.00014882937830407172}, {"id": 361, "seek": 334000, "start": 3358.0, "end": 3362.0, "text": " Do you know how many definitions you create with your generation at the moment?", "tokens": [50364, 337, 17746, 341, 293, 294, 12801, 486, 3079, 562, 291, 764, 341, 1508, 420, 341, 5754, 13, 50664, 50664, 5490, 13, 286, 1454, 300, 1177, 380, 652, 264, 3991, 709, 11, 709, 3801, 13, 50864, 50864, 467, 775, 13, 682, 1186, 11, 309, 775, 11, 7015, 13, 583, 286, 1454, 294, 264, 2027, 309, 311, 516, 281, 1813, 4356, 4033, 365, 1570, 293, 1570, 21988, 13, 51264, 51264, 1144, 291, 458, 577, 867, 21988, 291, 1884, 365, 428, 5125, 412, 264, 1623, 30, 51464, 51464, 286, 500, 380, 458, 13, 467, 5946, 13, 467, 5946, 257, 688, 322, 428, 46074, 12199, 11694, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08084003947605596, "compression_ratio": 1.6964980544747081, "no_caption_prob": 0.00014882937830407172}, {"id": 362, "seek": 334000, "start": 3362.0, "end": 3368.0, "text": " I don't know. It depends. It depends a lot on your Tailwind configuration.", "tokens": [50364, 337, 17746, 341, 293, 294, 12801, 486, 3079, 562, 291, 764, 341, 1508, 420, 341, 5754, 13, 50664, 50664, 5490, 13, 286, 1454, 300, 1177, 380, 652, 264, 3991, 709, 11, 709, 3801, 13, 50864, 50864, 467, 775, 13, 682, 1186, 11, 309, 775, 11, 7015, 13, 583, 286, 1454, 294, 264, 2027, 309, 311, 516, 281, 1813, 4356, 4033, 365, 1570, 293, 1570, 21988, 13, 51264, 51264, 1144, 291, 458, 577, 867, 21988, 291, 1884, 365, 428, 5125, 412, 264, 1623, 30, 51464, 51464, 286, 500, 380, 458, 13, 467, 5946, 13, 467, 5946, 257, 688, 322, 428, 46074, 12199, 11694, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08084003947605596, "compression_ratio": 1.6964980544747081, "no_caption_prob": 0.00014882937830407172}, {"id": 363, "seek": 336800, "start": 3368.0, "end": 3372.0, "text": " So, for example, do you have dark mode on or off or do you have variants on or off?", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 364, "seek": 336800, "start": 3372.0, "end": 3376.0, "text": " I don't know what the values are right now for the default.", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 365, "seek": 336800, "start": 3376.0, "end": 3382.0, "text": " I just checked and it's about 3600 for the Elm default Tailwind modules.", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 366, "seek": 336800, "start": 3382.0, "end": 3384.0, "text": " Yeah. So it's a lot of definitions right now.", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 367, "seek": 336800, "start": 3384.0, "end": 3386.0, "text": " It's still quite a lot.", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 368, "seek": 336800, "start": 3386.0, "end": 3389.0, "text": " Wait, is that lines of code or number of definitions?", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 369, "seek": 336800, "start": 3389.0, "end": 3390.0, "text": " Number of definitions.", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 370, "seek": 336800, "start": 3390.0, "end": 3397.0, "text": " Really? It's going to become a lot smaller when you extract out the colors because the permutations for the colors is a lot.", "tokens": [50364, 407, 11, 337, 1365, 11, 360, 291, 362, 2877, 4391, 322, 420, 766, 420, 360, 291, 362, 21669, 322, 420, 766, 30, 50564, 50564, 286, 500, 380, 458, 437, 264, 4190, 366, 558, 586, 337, 264, 7576, 13, 50764, 50764, 286, 445, 10033, 293, 309, 311, 466, 8652, 628, 337, 264, 2699, 76, 7576, 46074, 12199, 16679, 13, 51064, 51064, 865, 13, 407, 309, 311, 257, 688, 295, 21988, 558, 586, 13, 51164, 51164, 467, 311, 920, 1596, 257, 688, 13, 51264, 51264, 3802, 11, 307, 300, 3876, 295, 3089, 420, 1230, 295, 21988, 30, 51414, 51414, 5118, 295, 21988, 13, 51464, 51464, 4083, 30, 467, 311, 516, 281, 1813, 257, 688, 4356, 562, 291, 8947, 484, 264, 4577, 570, 264, 4784, 325, 763, 337, 264, 4577, 307, 257, 688, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11323022489194516, "compression_ratio": 1.7428571428571429, "no_caption_prob": 7.071836535033071e-06}, {"id": 371, "seek": 339700, "start": 3397.0, "end": 3402.0, "text": " Also, just if you reduce your palette. So to reiterate something we talked about earlier,", "tokens": [50364, 2743, 11, 445, 498, 291, 5407, 428, 15851, 13, 407, 281, 33528, 746, 321, 2825, 466, 3071, 11, 50614, 50614, 562, 291, 352, 281, 428, 46074, 12199, 11694, 3991, 11, 291, 393, 6964, 428, 2375, 15851, 11, 597, 307, 257, 1151, 3124, 13, 50914, 50914, 509, 820, 360, 300, 13, 400, 562, 291, 360, 300, 11, 309, 311, 516, 281, 5407, 264, 1230, 295, 4784, 325, 763, 538, 1596, 257, 857, 13, 51264, 51264, 509, 393, 754, 1922, 309, 498, 291, 787, 6964, 2877, 4391, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08531219694349501, "compression_ratio": 1.6153846153846154, "no_caption_prob": 5.6495318858651444e-05}, {"id": 372, "seek": 339700, "start": 3402.0, "end": 3408.0, "text": " when you go to your Tailwind configuration file, you can define your custom palette, which is a best practice.", "tokens": [50364, 2743, 11, 445, 498, 291, 5407, 428, 15851, 13, 407, 281, 33528, 746, 321, 2825, 466, 3071, 11, 50614, 50614, 562, 291, 352, 281, 428, 46074, 12199, 11694, 3991, 11, 291, 393, 6964, 428, 2375, 15851, 11, 597, 307, 257, 1151, 3124, 13, 50914, 50914, 509, 820, 360, 300, 13, 400, 562, 291, 360, 300, 11, 309, 311, 516, 281, 5407, 264, 1230, 295, 4784, 325, 763, 538, 1596, 257, 857, 13, 51264, 51264, 509, 393, 754, 1922, 309, 498, 291, 787, 6964, 2877, 4391, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08531219694349501, "compression_ratio": 1.6153846153846154, "no_caption_prob": 5.6495318858651444e-05}, {"id": 373, "seek": 339700, "start": 3408.0, "end": 3415.0, "text": " You should do that. And when you do that, it's going to reduce the number of permutations by quite a bit.", "tokens": [50364, 2743, 11, 445, 498, 291, 5407, 428, 15851, 13, 407, 281, 33528, 746, 321, 2825, 466, 3071, 11, 50614, 50614, 562, 291, 352, 281, 428, 46074, 12199, 11694, 3991, 11, 291, 393, 6964, 428, 2375, 15851, 11, 597, 307, 257, 1151, 3124, 13, 50914, 50914, 509, 820, 360, 300, 13, 400, 562, 291, 360, 300, 11, 309, 311, 516, 281, 5407, 264, 1230, 295, 4784, 325, 763, 538, 1596, 257, 857, 13, 51264, 51264, 509, 393, 754, 1922, 309, 498, 291, 787, 6964, 2877, 4391, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08531219694349501, "compression_ratio": 1.6153846153846154, "no_caption_prob": 5.6495318858651444e-05}, {"id": 374, "seek": 339700, "start": 3415.0, "end": 3419.0, "text": " You can even half it if you only define dark mode.", "tokens": [50364, 2743, 11, 445, 498, 291, 5407, 428, 15851, 13, 407, 281, 33528, 746, 321, 2825, 466, 3071, 11, 50614, 50614, 562, 291, 352, 281, 428, 46074, 12199, 11694, 3991, 11, 291, 393, 6964, 428, 2375, 15851, 11, 597, 307, 257, 1151, 3124, 13, 50914, 50914, 509, 820, 360, 300, 13, 400, 562, 291, 360, 300, 11, 309, 311, 516, 281, 5407, 264, 1230, 295, 4784, 325, 763, 538, 1596, 257, 857, 13, 51264, 51264, 509, 393, 754, 1922, 309, 498, 291, 787, 6964, 2877, 4391, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08531219694349501, "compression_ratio": 1.6153846153846154, "no_caption_prob": 5.6495318858651444e-05}, {"id": 375, "seek": 341900, "start": 3419.0, "end": 3427.0, "text": " Yeah. And if you I mean, the number of built in color variations is like like 30 or 40 or something, right?", "tokens": [50364, 865, 13, 400, 498, 291, 286, 914, 11, 264, 1230, 295, 3094, 294, 2017, 17840, 307, 411, 411, 2217, 420, 3356, 420, 746, 11, 558, 30, 50764, 50764, 407, 498, 291, 498, 291, 362, 411, 3180, 4577, 2602, 11, 550, 291, 600, 29673, 9212, 264, 1230, 295, 7642, 1192, 1496, 4190, 13, 51214, 51214, 400, 286, 3811, 291, 727, 360, 264, 912, 551, 365, 27739, 11, 886, 13, 1119, 300, 746, 291, 434, 1953, 466, 30, 51464, 51464, 865, 11, 2293, 13, 6767, 295, 613, 721, 13, 400, 286, 519, 27739, 1062, 754, 362, 636, 544, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08917596080515644, "compression_ratio": 1.6857142857142857, "no_caption_prob": 9.914879774441943e-05}, {"id": 376, "seek": 341900, "start": 3427.0, "end": 3436.0, "text": " So if you if you have like eight colors instead, then you've drastically reduced the number of defined top level values.", "tokens": [50364, 865, 13, 400, 498, 291, 286, 914, 11, 264, 1230, 295, 3094, 294, 2017, 17840, 307, 411, 411, 2217, 420, 3356, 420, 746, 11, 558, 30, 50764, 50764, 407, 498, 291, 498, 291, 362, 411, 3180, 4577, 2602, 11, 550, 291, 600, 29673, 9212, 264, 1230, 295, 7642, 1192, 1496, 4190, 13, 51214, 51214, 400, 286, 3811, 291, 727, 360, 264, 912, 551, 365, 27739, 11, 886, 13, 1119, 300, 746, 291, 434, 1953, 466, 30, 51464, 51464, 865, 11, 2293, 13, 6767, 295, 613, 721, 13, 400, 286, 519, 27739, 1062, 754, 362, 636, 544, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08917596080515644, "compression_ratio": 1.6857142857142857, "no_caption_prob": 9.914879774441943e-05}, {"id": 377, "seek": 341900, "start": 3436.0, "end": 3441.0, "text": " And I imagine you could do the same thing with spacing, too. Is that something you're thinking about?", "tokens": [50364, 865, 13, 400, 498, 291, 286, 914, 11, 264, 1230, 295, 3094, 294, 2017, 17840, 307, 411, 411, 2217, 420, 3356, 420, 746, 11, 558, 30, 50764, 50764, 407, 498, 291, 498, 291, 362, 411, 3180, 4577, 2602, 11, 550, 291, 600, 29673, 9212, 264, 1230, 295, 7642, 1192, 1496, 4190, 13, 51214, 51214, 400, 286, 3811, 291, 727, 360, 264, 912, 551, 365, 27739, 11, 886, 13, 1119, 300, 746, 291, 434, 1953, 466, 30, 51464, 51464, 865, 11, 2293, 13, 6767, 295, 613, 721, 13, 400, 286, 519, 27739, 1062, 754, 362, 636, 544, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08917596080515644, "compression_ratio": 1.6857142857142857, "no_caption_prob": 9.914879774441943e-05}, {"id": 378, "seek": 341900, "start": 3441.0, "end": 3447.0, "text": " Yeah, exactly. Both of these things. And I think spacing might even have way more.", "tokens": [50364, 865, 13, 400, 498, 291, 286, 914, 11, 264, 1230, 295, 3094, 294, 2017, 17840, 307, 411, 411, 2217, 420, 3356, 420, 746, 11, 558, 30, 50764, 50764, 407, 498, 291, 498, 291, 362, 411, 3180, 4577, 2602, 11, 550, 291, 600, 29673, 9212, 264, 1230, 295, 7642, 1192, 1496, 4190, 13, 51214, 51214, 400, 286, 3811, 291, 727, 360, 264, 912, 551, 365, 27739, 11, 886, 13, 1119, 300, 746, 291, 434, 1953, 466, 30, 51464, 51464, 865, 11, 2293, 13, 6767, 295, 613, 721, 13, 400, 286, 519, 27739, 1062, 754, 362, 636, 544, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08917596080515644, "compression_ratio": 1.6857142857142857, "no_caption_prob": 9.914879774441943e-05}, {"id": 379, "seek": 344700, "start": 3447.0, "end": 3452.0, "text": " Yes, I guess effect or an even more drastic effect because it applies in more places.", "tokens": [50364, 1079, 11, 286, 2041, 1802, 420, 364, 754, 544, 36821, 1802, 570, 309, 13165, 294, 544, 3190, 13, 50614, 50614, 1079, 13, 407, 309, 575, 264, 4784, 11380, 411, 264, 2512, 31927, 299, 15673, 294, 544, 3190, 13, 50864, 50864, 1079, 13, 583, 286, 920, 362, 281, 519, 466, 577, 281, 1151, 360, 341, 13, 51064, 51064, 467, 311, 544, 15325, 365, 4577, 813, 365, 27739, 11, 570, 550, 291, 434, 1953, 466, 11, 16478, 11, 51264, 51264, 820, 291, 5366, 364, 560, 6770, 281, 428, 21988, 420, 486, 291, 8460, 512, 733, 295, 2010, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1187532212999132, "compression_ratio": 1.664, "no_caption_prob": 4.006329254480079e-05}, {"id": 380, "seek": 344700, "start": 3452.0, "end": 3457.0, "text": " Yes. So it has the permutation like the combinatoric explosion in more places.", "tokens": [50364, 1079, 11, 286, 2041, 1802, 420, 364, 754, 544, 36821, 1802, 570, 309, 13165, 294, 544, 3190, 13, 50614, 50614, 1079, 13, 407, 309, 575, 264, 4784, 11380, 411, 264, 2512, 31927, 299, 15673, 294, 544, 3190, 13, 50864, 50864, 1079, 13, 583, 286, 920, 362, 281, 519, 466, 577, 281, 1151, 360, 341, 13, 51064, 51064, 467, 311, 544, 15325, 365, 4577, 813, 365, 27739, 11, 570, 550, 291, 434, 1953, 466, 11, 16478, 11, 51264, 51264, 820, 291, 5366, 364, 560, 6770, 281, 428, 21988, 420, 486, 291, 8460, 512, 733, 295, 2010, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1187532212999132, "compression_ratio": 1.664, "no_caption_prob": 4.006329254480079e-05}, {"id": 381, "seek": 344700, "start": 3457.0, "end": 3461.0, "text": " Yes. But I still have to think about how to best do this.", "tokens": [50364, 1079, 11, 286, 2041, 1802, 420, 364, 754, 544, 36821, 1802, 570, 309, 13165, 294, 544, 3190, 13, 50614, 50614, 1079, 13, 407, 309, 575, 264, 4784, 11380, 411, 264, 2512, 31927, 299, 15673, 294, 544, 3190, 13, 50864, 50864, 1079, 13, 583, 286, 920, 362, 281, 519, 466, 577, 281, 1151, 360, 341, 13, 51064, 51064, 467, 311, 544, 15325, 365, 4577, 813, 365, 27739, 11, 570, 550, 291, 434, 1953, 466, 11, 16478, 11, 51264, 51264, 820, 291, 5366, 364, 560, 6770, 281, 428, 21988, 420, 486, 291, 8460, 512, 733, 295, 2010, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1187532212999132, "compression_ratio": 1.664, "no_caption_prob": 4.006329254480079e-05}, {"id": 382, "seek": 344700, "start": 3461.0, "end": 3465.0, "text": " It's more straightforward with colors than with spacing, because then you're thinking about, hmm,", "tokens": [50364, 1079, 11, 286, 2041, 1802, 420, 364, 754, 544, 36821, 1802, 570, 309, 13165, 294, 544, 3190, 13, 50614, 50614, 1079, 13, 407, 309, 575, 264, 4784, 11380, 411, 264, 2512, 31927, 299, 15673, 294, 544, 3190, 13, 50864, 50864, 1079, 13, 583, 286, 920, 362, 281, 519, 466, 577, 281, 1151, 360, 341, 13, 51064, 51064, 467, 311, 544, 15325, 365, 4577, 813, 365, 27739, 11, 570, 550, 291, 434, 1953, 466, 11, 16478, 11, 51264, 51264, 820, 291, 5366, 364, 560, 6770, 281, 428, 21988, 420, 486, 291, 8460, 512, 733, 295, 2010, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1187532212999132, "compression_ratio": 1.664, "no_caption_prob": 4.006329254480079e-05}, {"id": 383, "seek": 344700, "start": 3465.0, "end": 3473.0, "text": " should you introduce an int argument to your definitions or will you generate some kind of type", "tokens": [50364, 1079, 11, 286, 2041, 1802, 420, 364, 754, 544, 36821, 1802, 570, 309, 13165, 294, 544, 3190, 13, 50614, 50614, 1079, 13, 407, 309, 575, 264, 4784, 11380, 411, 264, 2512, 31927, 299, 15673, 294, 544, 3190, 13, 50864, 50864, 1079, 13, 583, 286, 920, 362, 281, 519, 466, 577, 281, 1151, 360, 341, 13, 51064, 51064, 467, 311, 544, 15325, 365, 4577, 813, 365, 27739, 11, 570, 550, 291, 434, 1953, 466, 11, 16478, 11, 51264, 51264, 820, 291, 5366, 364, 560, 6770, 281, 428, 21988, 420, 486, 291, 8460, 512, 733, 295, 2010, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.1187532212999132, "compression_ratio": 1.664, "no_caption_prob": 4.006329254480079e-05}, {"id": 384, "seek": 347300, "start": 3473.0, "end": 3480.0, "text": " which encapsulates all of the possible spacings to reduce the set of them you can pass to your definition?", "tokens": [50364, 597, 38745, 26192, 439, 295, 264, 1944, 39404, 1109, 281, 5407, 264, 992, 295, 552, 291, 393, 1320, 281, 428, 7123, 30, 50714, 50714, 1436, 286, 519, 341, 307, 257, 4111, 295, 6838, 12199, 24387, 13, 50864, 50864, 7021, 13, 865, 13, 10222, 309, 312, 257, 20608, 15851, 307, 411, 257, 2603, 4111, 13, 51064, 51064, 400, 611, 411, 264, 264, 6838, 12199, 1469, 294, 294, 6838, 12199, 2564, 293, 294, 264, 4835, 447, 6838, 12199, 15682, 11, 411, 6405, 295, 21165, 13, 51564, 51564, 814, 600, 829, 370, 709, 1194, 666, 264, 11347, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313841078016493, "compression_ratio": 1.6008064516129032, "no_caption_prob": 0.0001159143794211559}, {"id": 385, "seek": 347300, "start": 3480.0, "end": 3483.0, "text": " Because I think this is a feature of tailwind CSS.", "tokens": [50364, 597, 38745, 26192, 439, 295, 264, 1944, 39404, 1109, 281, 5407, 264, 992, 295, 552, 291, 393, 1320, 281, 428, 7123, 30, 50714, 50714, 1436, 286, 519, 341, 307, 257, 4111, 295, 6838, 12199, 24387, 13, 50864, 50864, 7021, 13, 865, 13, 10222, 309, 312, 257, 20608, 15851, 307, 411, 257, 2603, 4111, 13, 51064, 51064, 400, 611, 411, 264, 264, 6838, 12199, 1469, 294, 294, 6838, 12199, 2564, 293, 294, 264, 4835, 447, 6838, 12199, 15682, 11, 411, 6405, 295, 21165, 13, 51564, 51564, 814, 600, 829, 370, 709, 1194, 666, 264, 11347, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313841078016493, "compression_ratio": 1.6008064516129032, "no_caption_prob": 0.0001159143794211559}, {"id": 386, "seek": 347300, "start": 3483.0, "end": 3487.0, "text": " Absolutely. Yeah. Having it be a restricted palette is like a huge feature.", "tokens": [50364, 597, 38745, 26192, 439, 295, 264, 1944, 39404, 1109, 281, 5407, 264, 992, 295, 552, 291, 393, 1320, 281, 428, 7123, 30, 50714, 50714, 1436, 286, 519, 341, 307, 257, 4111, 295, 6838, 12199, 24387, 13, 50864, 50864, 7021, 13, 865, 13, 10222, 309, 312, 257, 20608, 15851, 307, 411, 257, 2603, 4111, 13, 51064, 51064, 400, 611, 411, 264, 264, 6838, 12199, 1469, 294, 294, 6838, 12199, 2564, 293, 294, 264, 4835, 447, 6838, 12199, 15682, 11, 411, 6405, 295, 21165, 13, 51564, 51564, 814, 600, 829, 370, 709, 1194, 666, 264, 11347, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313841078016493, "compression_ratio": 1.6008064516129032, "no_caption_prob": 0.0001159143794211559}, {"id": 387, "seek": 347300, "start": 3487.0, "end": 3497.0, "text": " And also like the the tailwind team in in tailwind itself and in the paid pro tailwind UI, like library of templates.", "tokens": [50364, 597, 38745, 26192, 439, 295, 264, 1944, 39404, 1109, 281, 5407, 264, 992, 295, 552, 291, 393, 1320, 281, 428, 7123, 30, 50714, 50714, 1436, 286, 519, 341, 307, 257, 4111, 295, 6838, 12199, 24387, 13, 50864, 50864, 7021, 13, 865, 13, 10222, 309, 312, 257, 20608, 15851, 307, 411, 257, 2603, 4111, 13, 51064, 51064, 400, 611, 411, 264, 264, 6838, 12199, 1469, 294, 294, 6838, 12199, 2564, 293, 294, 264, 4835, 447, 6838, 12199, 15682, 11, 411, 6405, 295, 21165, 13, 51564, 51564, 814, 600, 829, 370, 709, 1194, 666, 264, 11347, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313841078016493, "compression_ratio": 1.6008064516129032, "no_caption_prob": 0.0001159143794211559}, {"id": 388, "seek": 347300, "start": 3497.0, "end": 3500.0, "text": " They've put so much thought into the designs.", "tokens": [50364, 597, 38745, 26192, 439, 295, 264, 1944, 39404, 1109, 281, 5407, 264, 992, 295, 552, 291, 393, 1320, 281, 428, 7123, 30, 50714, 50714, 1436, 286, 519, 341, 307, 257, 4111, 295, 6838, 12199, 24387, 13, 50864, 50864, 7021, 13, 865, 13, 10222, 309, 312, 257, 20608, 15851, 307, 411, 257, 2603, 4111, 13, 51064, 51064, 400, 611, 411, 264, 264, 6838, 12199, 1469, 294, 294, 6838, 12199, 2564, 293, 294, 264, 4835, 447, 6838, 12199, 15682, 11, 411, 6405, 295, 21165, 13, 51564, 51564, 814, 600, 829, 370, 709, 1194, 666, 264, 11347, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313841078016493, "compression_ratio": 1.6008064516129032, "no_caption_prob": 0.0001159143794211559}, {"id": 389, "seek": 350000, "start": 3500.0, "end": 3508.0, "text": " They've done so much research and and tweaks things. And it's very reliable in terms, you know, just like should the, you know,", "tokens": [50364, 814, 600, 1096, 370, 709, 2132, 293, 293, 46664, 721, 13, 400, 309, 311, 588, 12924, 294, 2115, 11, 291, 458, 11, 445, 411, 820, 264, 11, 291, 458, 11, 50764, 50764, 264, 7576, 10703, 2744, 312, 3165, 18668, 293, 550, 820, 291, 362, 411, 3499, 420, 2272, 18668, 337, 1629, 11, 291, 458, 11, 51114, 51114, 2487, 926, 6422, 293, 721, 411, 300, 13, 400, 436, 534, 829, 370, 709, 1194, 666, 264, 27739, 293, 264, 10703, 11602, 293, 439, 613, 721, 13, 51464, 51464, 407, 264, 15851, 307, 411, 472, 295, 264, 881, 20050, 4122, 295, 1228, 6838, 12199, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08965412175880288, "compression_ratio": 1.7237354085603114, "no_caption_prob": 4.069363058079034e-05}, {"id": 390, "seek": 350000, "start": 3508.0, "end": 3515.0, "text": " the default font size be 16 pixels and then should you have like 14 or 12 pixels for certain, you know,", "tokens": [50364, 814, 600, 1096, 370, 709, 2132, 293, 293, 46664, 721, 13, 400, 309, 311, 588, 12924, 294, 2115, 11, 291, 458, 11, 445, 411, 820, 264, 11, 291, 458, 11, 50764, 50764, 264, 7576, 10703, 2744, 312, 3165, 18668, 293, 550, 820, 291, 362, 411, 3499, 420, 2272, 18668, 337, 1629, 11, 291, 458, 11, 51114, 51114, 2487, 926, 6422, 293, 721, 411, 300, 13, 400, 436, 534, 829, 370, 709, 1194, 666, 264, 27739, 293, 264, 10703, 11602, 293, 439, 613, 721, 13, 51464, 51464, 407, 264, 15851, 307, 411, 472, 295, 264, 881, 20050, 4122, 295, 1228, 6838, 12199, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08965412175880288, "compression_ratio": 1.7237354085603114, "no_caption_prob": 4.069363058079034e-05}, {"id": 391, "seek": 350000, "start": 3515.0, "end": 3522.0, "text": " text around forms and things like that. And they really put so much thought into the spacing and the font sizes and all these things.", "tokens": [50364, 814, 600, 1096, 370, 709, 2132, 293, 293, 46664, 721, 13, 400, 309, 311, 588, 12924, 294, 2115, 11, 291, 458, 11, 445, 411, 820, 264, 11, 291, 458, 11, 50764, 50764, 264, 7576, 10703, 2744, 312, 3165, 18668, 293, 550, 820, 291, 362, 411, 3499, 420, 2272, 18668, 337, 1629, 11, 291, 458, 11, 51114, 51114, 2487, 926, 6422, 293, 721, 411, 300, 13, 400, 436, 534, 829, 370, 709, 1194, 666, 264, 27739, 293, 264, 10703, 11602, 293, 439, 613, 721, 13, 51464, 51464, 407, 264, 15851, 307, 411, 472, 295, 264, 881, 20050, 4122, 295, 1228, 6838, 12199, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08965412175880288, "compression_ratio": 1.7237354085603114, "no_caption_prob": 4.069363058079034e-05}, {"id": 392, "seek": 350000, "start": 3522.0, "end": 3527.0, "text": " So the palette is like one of the most compelling features of using tailwind.", "tokens": [50364, 814, 600, 1096, 370, 709, 2132, 293, 293, 46664, 721, 13, 400, 309, 311, 588, 12924, 294, 2115, 11, 291, 458, 11, 445, 411, 820, 264, 11, 291, 458, 11, 50764, 50764, 264, 7576, 10703, 2744, 312, 3165, 18668, 293, 550, 820, 291, 362, 411, 3499, 420, 2272, 18668, 337, 1629, 11, 291, 458, 11, 51114, 51114, 2487, 926, 6422, 293, 721, 411, 300, 13, 400, 436, 534, 829, 370, 709, 1194, 666, 264, 27739, 293, 264, 10703, 11602, 293, 439, 613, 721, 13, 51464, 51464, 407, 264, 15851, 307, 411, 472, 295, 264, 881, 20050, 4122, 295, 1228, 6838, 12199, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08965412175880288, "compression_ratio": 1.7237354085603114, "no_caption_prob": 4.069363058079034e-05}, {"id": 393, "seek": 352700, "start": 3527.0, "end": 3537.0, "text": " Absolutely. And one thing I really like when working with tailwind is that it's written by people who've done a lot of HTML and CSS development and design.", "tokens": [50364, 7021, 13, 400, 472, 551, 286, 534, 411, 562, 1364, 365, 6838, 12199, 307, 300, 309, 311, 3720, 538, 561, 567, 600, 1096, 257, 688, 295, 17995, 293, 24387, 3250, 293, 1715, 13, 50864, 50864, 407, 286, 519, 264, 732, 8050, 295, 6838, 12199, 24387, 366, 527, 411, 264, 25608, 11, 286, 2041, 11, 645, 7938, 15405, 3293, 259, 293, 12754, 2065, 340, 30744, 13, 51264, 51264, 400, 436, 611, 4114, 257, 1446, 597, 286, 1401, 293, 534, 11, 534, 2748, 341, 1895, 578, 3662, 15682, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1629727541745364, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.00019714515656232834}, {"id": 394, "seek": 352700, "start": 3537.0, "end": 3545.0, "text": " So I think the two heads of tailwind CSS are our like the founders, I guess, were Adam Waethin and Steven Schroeger.", "tokens": [50364, 7021, 13, 400, 472, 551, 286, 534, 411, 562, 1364, 365, 6838, 12199, 307, 300, 309, 311, 3720, 538, 561, 567, 600, 1096, 257, 688, 295, 17995, 293, 24387, 3250, 293, 1715, 13, 50864, 50864, 407, 286, 519, 264, 732, 8050, 295, 6838, 12199, 24387, 366, 527, 411, 264, 25608, 11, 286, 2041, 11, 645, 7938, 15405, 3293, 259, 293, 12754, 2065, 340, 30744, 13, 51264, 51264, 400, 436, 611, 4114, 257, 1446, 597, 286, 1401, 293, 534, 11, 534, 2748, 341, 1895, 578, 3662, 15682, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1629727541745364, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.00019714515656232834}, {"id": 395, "seek": 352700, "start": 3545.0, "end": 3551.0, "text": " And they also wrote a book which I read and really, really recommend this refactoring UI.", "tokens": [50364, 7021, 13, 400, 472, 551, 286, 534, 411, 562, 1364, 365, 6838, 12199, 307, 300, 309, 311, 3720, 538, 561, 567, 600, 1096, 257, 688, 295, 17995, 293, 24387, 3250, 293, 1715, 13, 50864, 50864, 407, 286, 519, 264, 732, 8050, 295, 6838, 12199, 24387, 366, 527, 411, 264, 25608, 11, 286, 2041, 11, 645, 7938, 15405, 3293, 259, 293, 12754, 2065, 340, 30744, 13, 51264, 51264, 400, 436, 611, 4114, 257, 1446, 597, 286, 1401, 293, 534, 11, 534, 2748, 341, 1895, 578, 3662, 15682, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1629727541745364, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.00019714515656232834}, {"id": 396, "seek": 355100, "start": 3551.0, "end": 3561.0, "text": " So this was something for me as a mostly programmer, which would inspire me to try more design and to get better as visually making things aesthetically pleasing.", "tokens": [50364, 407, 341, 390, 746, 337, 385, 382, 257, 5240, 32116, 11, 597, 576, 15638, 385, 281, 853, 544, 1715, 293, 281, 483, 1101, 382, 19622, 1455, 721, 27837, 984, 32798, 13, 50864, 50864, 407, 437, 366, 512, 1151, 7525, 562, 1228, 2699, 76, 46074, 12199, 16679, 30, 51114, 51114, 492, 2825, 466, 411, 9432, 278, 760, 428, 15851, 294, 428, 6838, 12199, 11694, 281, 5407, 264, 11, 291, 458, 11, 2017, 15851, 300, 291, 434, 1228, 13, 51464, 51464, 509, 458, 11, 291, 393, 5407, 264, 1821, 20552, 498, 291, 500, 380, 764, 439, 295, 264, 1821, 20552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07421567139116306, "compression_ratio": 1.6679104477611941, "no_caption_prob": 7.254011143231764e-05}, {"id": 397, "seek": 355100, "start": 3561.0, "end": 3566.0, "text": " So what are some best practices when using Elm Tailwind modules?", "tokens": [50364, 407, 341, 390, 746, 337, 385, 382, 257, 5240, 32116, 11, 597, 576, 15638, 385, 281, 853, 544, 1715, 293, 281, 483, 1101, 382, 19622, 1455, 721, 27837, 984, 32798, 13, 50864, 50864, 407, 437, 366, 512, 1151, 7525, 562, 1228, 2699, 76, 46074, 12199, 16679, 30, 51114, 51114, 492, 2825, 466, 411, 9432, 278, 760, 428, 15851, 294, 428, 6838, 12199, 11694, 281, 5407, 264, 11, 291, 458, 11, 2017, 15851, 300, 291, 434, 1228, 13, 51464, 51464, 509, 458, 11, 291, 393, 5407, 264, 1821, 20552, 498, 291, 500, 380, 764, 439, 295, 264, 1821, 20552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07421567139116306, "compression_ratio": 1.6679104477611941, "no_caption_prob": 7.254011143231764e-05}, {"id": 398, "seek": 355100, "start": 3566.0, "end": 3573.0, "text": " We talked about like narrowing down your palette in your tailwind configuration to reduce the, you know, color palette that you're using.", "tokens": [50364, 407, 341, 390, 746, 337, 385, 382, 257, 5240, 32116, 11, 597, 576, 15638, 385, 281, 853, 544, 1715, 293, 281, 483, 1101, 382, 19622, 1455, 721, 27837, 984, 32798, 13, 50864, 50864, 407, 437, 366, 512, 1151, 7525, 562, 1228, 2699, 76, 46074, 12199, 16679, 30, 51114, 51114, 492, 2825, 466, 411, 9432, 278, 760, 428, 15851, 294, 428, 6838, 12199, 11694, 281, 5407, 264, 11, 291, 458, 11, 2017, 15851, 300, 291, 434, 1228, 13, 51464, 51464, 509, 458, 11, 291, 393, 5407, 264, 1821, 20552, 498, 291, 500, 380, 764, 439, 295, 264, 1821, 20552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07421567139116306, "compression_ratio": 1.6679104477611941, "no_caption_prob": 7.254011143231764e-05}, {"id": 399, "seek": 355100, "start": 3573.0, "end": 3578.0, "text": " You know, you can reduce the breakpoints if you don't use all of the breakpoints.", "tokens": [50364, 407, 341, 390, 746, 337, 385, 382, 257, 5240, 32116, 11, 597, 576, 15638, 385, 281, 853, 544, 1715, 293, 281, 483, 1101, 382, 19622, 1455, 721, 27837, 984, 32798, 13, 50864, 50864, 407, 437, 366, 512, 1151, 7525, 562, 1228, 2699, 76, 46074, 12199, 16679, 30, 51114, 51114, 492, 2825, 466, 411, 9432, 278, 760, 428, 15851, 294, 428, 6838, 12199, 11694, 281, 5407, 264, 11, 291, 458, 11, 2017, 15851, 300, 291, 434, 1228, 13, 51464, 51464, 509, 458, 11, 291, 393, 5407, 264, 1821, 20552, 498, 291, 500, 380, 764, 439, 295, 264, 1821, 20552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07421567139116306, "compression_ratio": 1.6679104477611941, "no_caption_prob": 7.254011143231764e-05}, {"id": 400, "seek": 357800, "start": 3578.0, "end": 3586.0, "text": " For example, there are some things like that that just sort of constrain things to help you build more consistent designs.", "tokens": [50364, 1171, 1365, 11, 456, 366, 512, 721, 411, 300, 300, 445, 1333, 295, 1817, 7146, 721, 281, 854, 291, 1322, 544, 8398, 11347, 13, 50764, 50764, 708, 661, 1151, 7525, 360, 291, 519, 854, 291, 1322, 1481, 11347, 293, 1481, 3089, 1228, 2699, 76, 46074, 12199, 16679, 30, 51164, 51164, 865, 11, 472, 661, 551, 11, 293, 286, 519, 286, 2835, 300, 264, 5622, 1622, 9226, 486, 611, 980, 291, 307, 445, 1261, 766, 428, 21669, 293, 2584, 764, 2699, 76, 24387, 337, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07662844390011905, "compression_ratio": 1.6610878661087867, "no_caption_prob": 9.516137652099133e-06}, {"id": 401, "seek": 357800, "start": 3586.0, "end": 3594.0, "text": " What other best practices do you think help you build nice designs and nice code using Elm Tailwind modules?", "tokens": [50364, 1171, 1365, 11, 456, 366, 512, 721, 411, 300, 300, 445, 1333, 295, 1817, 7146, 721, 281, 854, 291, 1322, 544, 8398, 11347, 13, 50764, 50764, 708, 661, 1151, 7525, 360, 291, 519, 854, 291, 1322, 1481, 11347, 293, 1481, 3089, 1228, 2699, 76, 46074, 12199, 16679, 30, 51164, 51164, 865, 11, 472, 661, 551, 11, 293, 286, 519, 286, 2835, 300, 264, 5622, 1622, 9226, 486, 611, 980, 291, 307, 445, 1261, 766, 428, 21669, 293, 2584, 764, 2699, 76, 24387, 337, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07662844390011905, "compression_ratio": 1.6610878661087867, "no_caption_prob": 9.516137652099133e-06}, {"id": 402, "seek": 357800, "start": 3594.0, "end": 3604.0, "text": " Yeah, one other thing, and I think I mentioned that the command line interface will also tell you is just turn off your variants and completely use Elm CSS for that.", "tokens": [50364, 1171, 1365, 11, 456, 366, 512, 721, 411, 300, 300, 445, 1333, 295, 1817, 7146, 721, 281, 854, 291, 1322, 544, 8398, 11347, 13, 50764, 50764, 708, 661, 1151, 7525, 360, 291, 519, 854, 291, 1322, 1481, 11347, 293, 1481, 3089, 1228, 2699, 76, 46074, 12199, 16679, 30, 51164, 51164, 865, 11, 472, 661, 551, 11, 293, 286, 519, 286, 2835, 300, 264, 5622, 1622, 9226, 486, 611, 980, 291, 307, 445, 1261, 766, 428, 21669, 293, 2584, 764, 2699, 76, 24387, 337, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07662844390011905, "compression_ratio": 1.6610878661087867, "no_caption_prob": 9.516137652099133e-06}, {"id": 403, "seek": 360400, "start": 3604.0, "end": 3609.0, "text": " And I mentioned it's order your breakpoints accordingly, otherwise they don't apply.", "tokens": [50364, 400, 286, 2835, 309, 311, 1668, 428, 1821, 20552, 19717, 11, 5911, 436, 500, 380, 3079, 13, 50614, 50614, 400, 550, 456, 311, 411, 257, 955, 1168, 295, 437, 311, 1021, 281, 764, 11, 286, 2041, 13, 50914, 50914, 407, 286, 5665, 362, 364, 1880, 636, 295, 1228, 264, 6838, 12199, 16679, 1716, 293, 3579, 17995, 3089, 2059, 294, 2699, 76, 11, 597, 307, 286, 2673, 2464, 16679, 597, 1401, 411, 17995, 21165, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10399545767368415, "compression_ratio": 1.4759825327510918, "no_caption_prob": 2.627372850838583e-05}, {"id": 404, "seek": 360400, "start": 3609.0, "end": 3615.0, "text": " And then there's like a big question of what's important to use, I guess.", "tokens": [50364, 400, 286, 2835, 309, 311, 1668, 428, 1821, 20552, 19717, 11, 5911, 436, 500, 380, 3079, 13, 50614, 50614, 400, 550, 456, 311, 411, 257, 955, 1168, 295, 437, 311, 1021, 281, 764, 11, 286, 2041, 13, 50914, 50914, 407, 286, 5665, 362, 364, 1880, 636, 295, 1228, 264, 6838, 12199, 16679, 1716, 293, 3579, 17995, 3089, 2059, 294, 2699, 76, 11, 597, 307, 286, 2673, 2464, 16679, 597, 1401, 411, 17995, 21165, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10399545767368415, "compression_ratio": 1.4759825327510918, "no_caption_prob": 2.627372850838583e-05}, {"id": 405, "seek": 360400, "start": 3615.0, "end": 3632.0, "text": " So I personally have an interesting way of using the tailwind modules project and writing HTML code myself in Elm, which is I usually write modules which read like HTML templates.", "tokens": [50364, 400, 286, 2835, 309, 311, 1668, 428, 1821, 20552, 19717, 11, 5911, 436, 500, 380, 3079, 13, 50614, 50614, 400, 550, 456, 311, 411, 257, 955, 1168, 295, 437, 311, 1021, 281, 764, 11, 286, 2041, 13, 50914, 50914, 407, 286, 5665, 362, 364, 1880, 636, 295, 1228, 264, 6838, 12199, 16679, 1716, 293, 3579, 17995, 3089, 2059, 294, 2699, 76, 11, 597, 307, 286, 2673, 2464, 16679, 597, 1401, 411, 17995, 21165, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10399545767368415, "compression_ratio": 1.4759825327510918, "no_caption_prob": 2.627372850838583e-05}, {"id": 406, "seek": 363200, "start": 3632.0, "end": 3635.0, "text": " They don't contain any logic.", "tokens": [50364, 814, 500, 380, 5304, 604, 9952, 13, 50514, 50514, 440, 881, 6179, 551, 309, 8306, 307, 1310, 1329, 13, 24223, 13, 50714, 50714, 2754, 300, 311, 588, 13752, 13, 50814, 50814, 400, 661, 813, 300, 11, 309, 311, 611, 588, 1442, 322, 36606, 13, 51014, 51014, 400, 613, 16679, 787, 5672, 322, 17995, 13, 51164, 51164, 407, 264, 17995, 13, 15014, 10088, 11, 264, 17995, 13, 15014, 13, 1591, 2024, 1819, 10088, 11, 264, 6838, 12199, 16679, 293, 1310, 364, 6528, 992, 293, 1507, 411, 300, 11, 457, 406, 322, 3539, 9952, 3089, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0930689694930096, "compression_ratio": 1.6621004566210045, "no_caption_prob": 6.204617966432124e-05}, {"id": 407, "seek": 363200, "start": 3635.0, "end": 3639.0, "text": " The most complicated thing it contains is maybe list.map.", "tokens": [50364, 814, 500, 380, 5304, 604, 9952, 13, 50514, 50514, 440, 881, 6179, 551, 309, 8306, 307, 1310, 1329, 13, 24223, 13, 50714, 50714, 2754, 300, 311, 588, 13752, 13, 50814, 50814, 400, 661, 813, 300, 11, 309, 311, 611, 588, 1442, 322, 36606, 13, 51014, 51014, 400, 613, 16679, 787, 5672, 322, 17995, 13, 51164, 51164, 407, 264, 17995, 13, 15014, 10088, 11, 264, 17995, 13, 15014, 13, 1591, 2024, 1819, 10088, 11, 264, 6838, 12199, 16679, 293, 1310, 364, 6528, 992, 293, 1507, 411, 300, 11, 457, 406, 322, 3539, 9952, 3089, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0930689694930096, "compression_ratio": 1.6621004566210045, "no_caption_prob": 6.204617966432124e-05}, {"id": 408, "seek": 363200, "start": 3639.0, "end": 3641.0, "text": " Even that's very rarely.", "tokens": [50364, 814, 500, 380, 5304, 604, 9952, 13, 50514, 50514, 440, 881, 6179, 551, 309, 8306, 307, 1310, 1329, 13, 24223, 13, 50714, 50714, 2754, 300, 311, 588, 13752, 13, 50814, 50814, 400, 661, 813, 300, 11, 309, 311, 611, 588, 1442, 322, 36606, 13, 51014, 51014, 400, 613, 16679, 787, 5672, 322, 17995, 13, 51164, 51164, 407, 264, 17995, 13, 15014, 10088, 11, 264, 17995, 13, 15014, 13, 1591, 2024, 1819, 10088, 11, 264, 6838, 12199, 16679, 293, 1310, 364, 6528, 992, 293, 1507, 411, 300, 11, 457, 406, 322, 3539, 9952, 3089, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0930689694930096, "compression_ratio": 1.6621004566210045, "no_caption_prob": 6.204617966432124e-05}, {"id": 409, "seek": 363200, "start": 3641.0, "end": 3645.0, "text": " And other than that, it's also very light on dependencies.", "tokens": [50364, 814, 500, 380, 5304, 604, 9952, 13, 50514, 50514, 440, 881, 6179, 551, 309, 8306, 307, 1310, 1329, 13, 24223, 13, 50714, 50714, 2754, 300, 311, 588, 13752, 13, 50814, 50814, 400, 661, 813, 300, 11, 309, 311, 611, 588, 1442, 322, 36606, 13, 51014, 51014, 400, 613, 16679, 787, 5672, 322, 17995, 13, 51164, 51164, 407, 264, 17995, 13, 15014, 10088, 11, 264, 17995, 13, 15014, 13, 1591, 2024, 1819, 10088, 11, 264, 6838, 12199, 16679, 293, 1310, 364, 6528, 992, 293, 1507, 411, 300, 11, 457, 406, 322, 3539, 9952, 3089, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0930689694930096, "compression_ratio": 1.6621004566210045, "no_caption_prob": 6.204617966432124e-05}, {"id": 410, "seek": 363200, "start": 3645.0, "end": 3648.0, "text": " And these modules only depend on HTML.", "tokens": [50364, 814, 500, 380, 5304, 604, 9952, 13, 50514, 50514, 440, 881, 6179, 551, 309, 8306, 307, 1310, 1329, 13, 24223, 13, 50714, 50714, 2754, 300, 311, 588, 13752, 13, 50814, 50814, 400, 661, 813, 300, 11, 309, 311, 611, 588, 1442, 322, 36606, 13, 51014, 51014, 400, 613, 16679, 787, 5672, 322, 17995, 13, 51164, 51164, 407, 264, 17995, 13, 15014, 10088, 11, 264, 17995, 13, 15014, 13, 1591, 2024, 1819, 10088, 11, 264, 6838, 12199, 16679, 293, 1310, 364, 6528, 992, 293, 1507, 411, 300, 11, 457, 406, 322, 3539, 9952, 3089, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0930689694930096, "compression_ratio": 1.6621004566210045, "no_caption_prob": 6.204617966432124e-05}, {"id": 411, "seek": 363200, "start": 3648.0, "end": 3661.0, "text": " So the HTML.style module, the HTML.style.attributes module, the tailwind modules and maybe an icon set and stuff like that, but not on actual logic code.", "tokens": [50364, 814, 500, 380, 5304, 604, 9952, 13, 50514, 50514, 440, 881, 6179, 551, 309, 8306, 307, 1310, 1329, 13, 24223, 13, 50714, 50714, 2754, 300, 311, 588, 13752, 13, 50814, 50814, 400, 661, 813, 300, 11, 309, 311, 611, 588, 1442, 322, 36606, 13, 51014, 51014, 400, 613, 16679, 787, 5672, 322, 17995, 13, 51164, 51164, 407, 264, 17995, 13, 15014, 10088, 11, 264, 17995, 13, 15014, 13, 1591, 2024, 1819, 10088, 11, 264, 6838, 12199, 16679, 293, 1310, 364, 6528, 992, 293, 1507, 411, 300, 11, 457, 406, 322, 3539, 9952, 3089, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0930689694930096, "compression_ratio": 1.6621004566210045, "no_caption_prob": 6.204617966432124e-05}, {"id": 412, "seek": 366100, "start": 3661.0, "end": 3669.0, "text": " And the types are mostly HTML and attributes which might even get passed in or passed out.", "tokens": [50364, 400, 264, 3467, 366, 5240, 17995, 293, 17212, 597, 1062, 754, 483, 4678, 294, 420, 4678, 484, 13, 50764, 50764, 407, 309, 311, 1936, 439, 1203, 307, 411, 365, 17995, 21165, 293, 264, 2380, 3089, 550, 575, 9952, 281, 764, 309, 13, 51214, 51214, 400, 437, 286, 917, 493, 884, 294, 613, 16679, 281, 652, 552, 544, 49857, 11, 293, 300, 311, 264, 1379, 935, 337, 552, 294, 264, 700, 1081, 11, 307, 286, 764, 13691, 41596, 11, 597, 307, 588, 35847, 46105, 294, 2699, 76, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06721664785028814, "compression_ratio": 1.579591836734694, "no_caption_prob": 8.092366624623537e-05}, {"id": 413, "seek": 366100, "start": 3669.0, "end": 3678.0, "text": " So it's basically all everything is like with HTML templates and the outside code then has logic to use it.", "tokens": [50364, 400, 264, 3467, 366, 5240, 17995, 293, 17212, 597, 1062, 754, 483, 4678, 294, 420, 4678, 484, 13, 50764, 50764, 407, 309, 311, 1936, 439, 1203, 307, 411, 365, 17995, 21165, 293, 264, 2380, 3089, 550, 575, 9952, 281, 764, 309, 13, 51214, 51214, 400, 437, 286, 917, 493, 884, 294, 613, 16679, 281, 652, 552, 544, 49857, 11, 293, 300, 311, 264, 1379, 935, 337, 552, 294, 264, 700, 1081, 11, 307, 286, 764, 13691, 41596, 11, 597, 307, 588, 35847, 46105, 294, 2699, 76, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06721664785028814, "compression_ratio": 1.579591836734694, "no_caption_prob": 8.092366624623537e-05}, {"id": 414, "seek": 366100, "start": 3678.0, "end": 3689.0, "text": " And what I end up doing in these modules to make them more readable, and that's the whole point for them in the first place, is I use explicit imports, which is very unconventional in Elm.", "tokens": [50364, 400, 264, 3467, 366, 5240, 17995, 293, 17212, 597, 1062, 754, 483, 4678, 294, 420, 4678, 484, 13, 50764, 50764, 407, 309, 311, 1936, 439, 1203, 307, 411, 365, 17995, 21165, 293, 264, 2380, 3089, 550, 575, 9952, 281, 764, 309, 13, 51214, 51214, 400, 437, 286, 917, 493, 884, 294, 613, 16679, 281, 652, 552, 544, 49857, 11, 293, 300, 311, 264, 1379, 935, 337, 552, 294, 264, 700, 1081, 11, 307, 286, 764, 13691, 41596, 11, 597, 307, 588, 35847, 46105, 294, 2699, 76, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06721664785028814, "compression_ratio": 1.579591836734694, "no_caption_prob": 8.092366624623537e-05}, {"id": 415, "seek": 368900, "start": 3689.0, "end": 3691.0, "text": " Do you mean like unqualified imports?", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 416, "seek": 368900, "start": 3691.0, "end": 3692.0, "text": " Yes.", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 417, "seek": 368900, "start": 3692.0, "end": 3694.0, "text": " Like exposing dot dot kind of?", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 418, "seek": 368900, "start": 3694.0, "end": 3696.0, "text": " Oh, yeah. Yeah, not explicit.", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 419, "seek": 368900, "start": 3696.0, "end": 3699.0, "text": " Yeah, I'm using the exposing dot dot imports.", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 420, "seek": 368900, "start": 3699.0, "end": 3705.0, "text": " Exactly. And I see Jeroen shaking his head at me.", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 421, "seek": 368900, "start": 3705.0, "end": 3708.0, "text": " I'm going to get a game of the stink eye.", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 422, "seek": 368900, "start": 3708.0, "end": 3715.0, "text": " Jeroen is the personification of Elm review telling you, I think you might want to fix this.", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 423, "seek": 368900, "start": 3715.0, "end": 3718.0, "text": " I don't even have an Elm review rule for that.", "tokens": [50364, 1144, 291, 914, 411, 517, 46094, 41596, 30, 50464, 50464, 1079, 13, 50514, 50514, 1743, 33178, 5893, 5893, 733, 295, 30, 50614, 50614, 876, 11, 1338, 13, 865, 11, 406, 13691, 13, 50714, 50714, 865, 11, 286, 478, 1228, 264, 33178, 5893, 5893, 41596, 13, 50864, 50864, 7587, 13, 400, 286, 536, 508, 2032, 268, 15415, 702, 1378, 412, 385, 13, 51164, 51164, 286, 478, 516, 281, 483, 257, 1216, 295, 264, 35843, 3313, 13, 51314, 51314, 508, 2032, 268, 307, 264, 954, 3774, 295, 2699, 76, 3131, 3585, 291, 11, 286, 519, 291, 1062, 528, 281, 3191, 341, 13, 51664, 51664, 286, 500, 380, 754, 362, 364, 2699, 76, 3131, 4978, 337, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15006198402212448, "compression_ratio": 1.5875, "no_caption_prob": 4.133411857765168e-05}, {"id": 424, "seek": 371800, "start": 3718.0, "end": 3720.0, "text": " It's so uncommon.", "tokens": [50364, 467, 311, 370, 29289, 13, 50464, 50464, 583, 309, 311, 445, 264, 24294, 13, 50564, 50564, 876, 11, 572, 11, 767, 11, 286, 360, 362, 257, 4978, 337, 300, 13, 50764, 50764, 286, 767, 362, 472, 300, 32539, 309, 13, 1449, 764, 300, 13, 51014, 51014, 1057, 558, 13, 865, 13, 407, 286, 411, 884, 300, 570, 309, 15700, 544, 14138, 281, 11, 337, 1365, 11, 46074, 12199, 15682, 21165, 300, 291, 536, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14138251084547776, "compression_ratio": 1.4153005464480874, "no_caption_prob": 7.601925608469173e-05}, {"id": 425, "seek": 371800, "start": 3720.0, "end": 3722.0, "text": " But it's just the gaze.", "tokens": [50364, 467, 311, 370, 29289, 13, 50464, 50464, 583, 309, 311, 445, 264, 24294, 13, 50564, 50564, 876, 11, 572, 11, 767, 11, 286, 360, 362, 257, 4978, 337, 300, 13, 50764, 50764, 286, 767, 362, 472, 300, 32539, 309, 13, 1449, 764, 300, 13, 51014, 51014, 1057, 558, 13, 865, 13, 407, 286, 411, 884, 300, 570, 309, 15700, 544, 14138, 281, 11, 337, 1365, 11, 46074, 12199, 15682, 21165, 300, 291, 536, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14138251084547776, "compression_ratio": 1.4153005464480874, "no_caption_prob": 7.601925608469173e-05}, {"id": 426, "seek": 371800, "start": 3722.0, "end": 3726.0, "text": " Oh, no, actually, I do have a rule for that.", "tokens": [50364, 467, 311, 370, 29289, 13, 50464, 50464, 583, 309, 311, 445, 264, 24294, 13, 50564, 50564, 876, 11, 572, 11, 767, 11, 286, 360, 362, 257, 4978, 337, 300, 13, 50764, 50764, 286, 767, 362, 472, 300, 32539, 309, 13, 1449, 764, 300, 13, 51014, 51014, 1057, 558, 13, 865, 13, 407, 286, 411, 884, 300, 570, 309, 15700, 544, 14138, 281, 11, 337, 1365, 11, 46074, 12199, 15682, 21165, 300, 291, 536, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14138251084547776, "compression_ratio": 1.4153005464480874, "no_caption_prob": 7.601925608469173e-05}, {"id": 427, "seek": 371800, "start": 3726.0, "end": 3731.0, "text": " I actually have one that fixes it. Just use that.", "tokens": [50364, 467, 311, 370, 29289, 13, 50464, 50464, 583, 309, 311, 445, 264, 24294, 13, 50564, 50564, 876, 11, 572, 11, 767, 11, 286, 360, 362, 257, 4978, 337, 300, 13, 50764, 50764, 286, 767, 362, 472, 300, 32539, 309, 13, 1449, 764, 300, 13, 51014, 51014, 1057, 558, 13, 865, 13, 407, 286, 411, 884, 300, 570, 309, 15700, 544, 14138, 281, 11, 337, 1365, 11, 46074, 12199, 15682, 21165, 300, 291, 536, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14138251084547776, "compression_ratio": 1.4153005464480874, "no_caption_prob": 7.601925608469173e-05}, {"id": 428, "seek": 371800, "start": 3731.0, "end": 3740.0, "text": " All right. Yeah. So I like doing that because it reads more similarly to, for example, Tailwind UI templates that you see.", "tokens": [50364, 467, 311, 370, 29289, 13, 50464, 50464, 583, 309, 311, 445, 264, 24294, 13, 50564, 50564, 876, 11, 572, 11, 767, 11, 286, 360, 362, 257, 4978, 337, 300, 13, 50764, 50764, 286, 767, 362, 472, 300, 32539, 309, 13, 1449, 764, 300, 13, 51014, 51014, 1057, 558, 13, 865, 13, 407, 286, 411, 884, 300, 570, 309, 15700, 544, 14138, 281, 11, 337, 1365, 11, 46074, 12199, 15682, 21165, 300, 291, 536, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.14138251084547776, "compression_ratio": 1.4153005464480874, "no_caption_prob": 7.601925608469173e-05}, {"id": 429, "seek": 374000, "start": 3740.0, "end": 3748.0, "text": " And I think if you really restrict yourself to only using HTML and CSS in those template modules,", "tokens": [50364, 400, 286, 519, 498, 291, 534, 7694, 1803, 281, 787, 1228, 17995, 293, 24387, 294, 729, 12379, 16679, 11, 50764, 50764, 291, 500, 380, 722, 281, 362, 341, 1168, 295, 11, 731, 11, 307, 341, 7123, 7642, 294, 341, 10088, 420, 294, 1071, 10088, 420, 689, 307, 309, 7642, 30, 51214, 51214, 583, 291, 534, 393, 11, 291, 820, 420, 291, 5240, 458, 411, 3541, 307, 364, 17995, 4478, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07299365868439546, "compression_ratio": 1.5829145728643217, "no_caption_prob": 4.0692462789593264e-05}, {"id": 430, "seek": 374000, "start": 3748.0, "end": 3757.0, "text": " you don't start to have this question of, well, is this definition defined in this module or in another module or where is it defined?", "tokens": [50364, 400, 286, 519, 498, 291, 534, 7694, 1803, 281, 787, 1228, 17995, 293, 24387, 294, 729, 12379, 16679, 11, 50764, 50764, 291, 500, 380, 722, 281, 362, 341, 1168, 295, 11, 731, 11, 307, 341, 7123, 7642, 294, 341, 10088, 420, 294, 1071, 10088, 420, 689, 307, 309, 7642, 30, 51214, 51214, 583, 291, 534, 393, 11, 291, 820, 420, 291, 5240, 458, 411, 3541, 307, 364, 17995, 4478, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07299365868439546, "compression_ratio": 1.5829145728643217, "no_caption_prob": 4.0692462789593264e-05}, {"id": 431, "seek": 374000, "start": 3757.0, "end": 3763.0, "text": " But you really can, you should or you mostly know like section is an HTML element.", "tokens": [50364, 400, 286, 519, 498, 291, 534, 7694, 1803, 281, 787, 1228, 17995, 293, 24387, 294, 729, 12379, 16679, 11, 50764, 50764, 291, 500, 380, 722, 281, 362, 341, 1168, 295, 11, 731, 11, 307, 341, 7123, 7642, 294, 341, 10088, 420, 294, 1071, 10088, 420, 689, 307, 309, 7642, 30, 51214, 51214, 583, 291, 534, 393, 11, 291, 820, 420, 291, 5240, 458, 411, 3541, 307, 364, 17995, 4478, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07299365868439546, "compression_ratio": 1.5829145728643217, "no_caption_prob": 4.0692462789593264e-05}, {"id": 432, "seek": 376300, "start": 3763.0, "end": 3772.0, "text": " And you see there's maybe an MX underscore auto in there and you see, yes, this is a tailwind class.", "tokens": [50364, 400, 291, 536, 456, 311, 1310, 364, 47509, 37556, 8399, 294, 456, 293, 291, 536, 11, 2086, 11, 341, 307, 257, 6838, 12199, 1508, 13, 50814, 50814, 400, 370, 613, 456, 311, 1570, 295, 364, 2734, 365, 300, 456, 13, 50964, 50964, 467, 307, 920, 746, 35847, 46105, 13, 286, 536, 300, 13, 51114, 51114, 583, 286, 519, 456, 311, 754, 544, 2158, 2261, 29279, 613, 733, 295, 12379, 5359, 490, 264, 1472, 295, 264, 3089, 13, 51564, 51564, 400, 286, 519, 341, 307, 264, 3880, 551, 11, 1310, 13, 51664, 51664, 583, 1338, 11, 341, 307, 577, 286, 411, 281, 589, 365, 309, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08254444927250573, "compression_ratio": 1.7478632478632479, "no_caption_prob": 3.169271440128796e-05}, {"id": 433, "seek": 376300, "start": 3772.0, "end": 3775.0, "text": " And so these there's less of an issue with that there.", "tokens": [50364, 400, 291, 536, 456, 311, 1310, 364, 47509, 37556, 8399, 294, 456, 293, 291, 536, 11, 2086, 11, 341, 307, 257, 6838, 12199, 1508, 13, 50814, 50814, 400, 370, 613, 456, 311, 1570, 295, 364, 2734, 365, 300, 456, 13, 50964, 50964, 467, 307, 920, 746, 35847, 46105, 13, 286, 536, 300, 13, 51114, 51114, 583, 286, 519, 456, 311, 754, 544, 2158, 2261, 29279, 613, 733, 295, 12379, 5359, 490, 264, 1472, 295, 264, 3089, 13, 51564, 51564, 400, 286, 519, 341, 307, 264, 3880, 551, 11, 1310, 13, 51664, 51664, 583, 1338, 11, 341, 307, 577, 286, 411, 281, 589, 365, 309, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08254444927250573, "compression_ratio": 1.7478632478632479, "no_caption_prob": 3.169271440128796e-05}, {"id": 434, "seek": 376300, "start": 3775.0, "end": 3778.0, "text": " It is still something unconventional. I see that.", "tokens": [50364, 400, 291, 536, 456, 311, 1310, 364, 47509, 37556, 8399, 294, 456, 293, 291, 536, 11, 2086, 11, 341, 307, 257, 6838, 12199, 1508, 13, 50814, 50814, 400, 370, 613, 456, 311, 1570, 295, 364, 2734, 365, 300, 456, 13, 50964, 50964, 467, 307, 920, 746, 35847, 46105, 13, 286, 536, 300, 13, 51114, 51114, 583, 286, 519, 456, 311, 754, 544, 2158, 2261, 29279, 613, 733, 295, 12379, 5359, 490, 264, 1472, 295, 264, 3089, 13, 51564, 51564, 400, 286, 519, 341, 307, 264, 3880, 551, 11, 1310, 13, 51664, 51664, 583, 1338, 11, 341, 307, 577, 286, 411, 281, 589, 365, 309, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08254444927250573, "compression_ratio": 1.7478632478632479, "no_caption_prob": 3.169271440128796e-05}, {"id": 435, "seek": 376300, "start": 3778.0, "end": 3787.0, "text": " But I think there's even more value behind separating these kind of template classes from the rest of the code.", "tokens": [50364, 400, 291, 536, 456, 311, 1310, 364, 47509, 37556, 8399, 294, 456, 293, 291, 536, 11, 2086, 11, 341, 307, 257, 6838, 12199, 1508, 13, 50814, 50814, 400, 370, 613, 456, 311, 1570, 295, 364, 2734, 365, 300, 456, 13, 50964, 50964, 467, 307, 920, 746, 35847, 46105, 13, 286, 536, 300, 13, 51114, 51114, 583, 286, 519, 456, 311, 754, 544, 2158, 2261, 29279, 613, 733, 295, 12379, 5359, 490, 264, 1472, 295, 264, 3089, 13, 51564, 51564, 400, 286, 519, 341, 307, 264, 3880, 551, 11, 1310, 13, 51664, 51664, 583, 1338, 11, 341, 307, 577, 286, 411, 281, 589, 365, 309, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08254444927250573, "compression_ratio": 1.7478632478632479, "no_caption_prob": 3.169271440128796e-05}, {"id": 436, "seek": 376300, "start": 3787.0, "end": 3789.0, "text": " And I think this is the biggest thing, maybe.", "tokens": [50364, 400, 291, 536, 456, 311, 1310, 364, 47509, 37556, 8399, 294, 456, 293, 291, 536, 11, 2086, 11, 341, 307, 257, 6838, 12199, 1508, 13, 50814, 50814, 400, 370, 613, 456, 311, 1570, 295, 364, 2734, 365, 300, 456, 13, 50964, 50964, 467, 307, 920, 746, 35847, 46105, 13, 286, 536, 300, 13, 51114, 51114, 583, 286, 519, 456, 311, 754, 544, 2158, 2261, 29279, 613, 733, 295, 12379, 5359, 490, 264, 1472, 295, 264, 3089, 13, 51564, 51564, 400, 286, 519, 341, 307, 264, 3880, 551, 11, 1310, 13, 51664, 51664, 583, 1338, 11, 341, 307, 577, 286, 411, 281, 589, 365, 309, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08254444927250573, "compression_ratio": 1.7478632478632479, "no_caption_prob": 3.169271440128796e-05}, {"id": 437, "seek": 376300, "start": 3789.0, "end": 3792.0, "text": " But yeah, this is how I like to work with it.", "tokens": [50364, 400, 291, 536, 456, 311, 1310, 364, 47509, 37556, 8399, 294, 456, 293, 291, 536, 11, 2086, 11, 341, 307, 257, 6838, 12199, 1508, 13, 50814, 50814, 400, 370, 613, 456, 311, 1570, 295, 364, 2734, 365, 300, 456, 13, 50964, 50964, 467, 307, 920, 746, 35847, 46105, 13, 286, 536, 300, 13, 51114, 51114, 583, 286, 519, 456, 311, 754, 544, 2158, 2261, 29279, 613, 733, 295, 12379, 5359, 490, 264, 1472, 295, 264, 3089, 13, 51564, 51564, 400, 286, 519, 341, 307, 264, 3880, 551, 11, 1310, 13, 51664, 51664, 583, 1338, 11, 341, 307, 577, 286, 411, 281, 589, 365, 309, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08254444927250573, "compression_ratio": 1.7478632478632479, "no_caption_prob": 3.169271440128796e-05}, {"id": 438, "seek": 379200, "start": 3792.0, "end": 3795.0, "text": " I haven't developed any other best practices yet.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 439, "seek": 379200, "start": 3795.0, "end": 3799.0, "text": " And I would say this is a developed best practice yet at all.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 440, "seek": 379200, "start": 3799.0, "end": 3804.0, "text": " So basically what you're just doing is you're defining reusable view functions.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 441, "seek": 379200, "start": 3804.0, "end": 3805.0, "text": " Yes.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 442, "seek": 379200, "start": 3805.0, "end": 3807.0, "text": " That you just, yeah, you can compose them together.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 443, "seek": 379200, "start": 3807.0, "end": 3816.0, "text": " I think of them like, I think in React, people usually like to split their React components into presentational components and functional.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 444, "seek": 379200, "start": 3816.0, "end": 3818.0, "text": " No, I don't know what the other one was.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 445, "seek": 379200, "start": 3818.0, "end": 3821.0, "text": " I remember smart and dumb components.", "tokens": [50364, 286, 2378, 380, 4743, 604, 661, 1151, 7525, 1939, 13, 50514, 50514, 400, 286, 576, 584, 341, 307, 257, 4743, 1151, 3124, 1939, 412, 439, 13, 50714, 50714, 407, 1936, 437, 291, 434, 445, 884, 307, 291, 434, 17827, 41807, 1910, 6828, 13, 50964, 50964, 1079, 13, 51014, 51014, 663, 291, 445, 11, 1338, 11, 291, 393, 35925, 552, 1214, 13, 51114, 51114, 286, 519, 295, 552, 411, 11, 286, 519, 294, 30644, 11, 561, 2673, 411, 281, 7472, 641, 30644, 6677, 666, 1974, 1478, 6677, 293, 11745, 13, 51564, 51564, 883, 11, 286, 500, 380, 458, 437, 264, 661, 472, 390, 13, 51664, 51664, 286, 1604, 4069, 293, 10316, 6677, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.118118639650016, "compression_ratio": 1.7259259259259259, "no_caption_prob": 4.985789564670995e-05}, {"id": 446, "seek": 382100, "start": 3821.0, "end": 3823.0, "text": " I think they renamed it, but all right.", "tokens": [50364, 286, 519, 436, 40949, 309, 11, 457, 439, 558, 13, 50464, 50464, 33253, 1478, 293, 9952, 2361, 13, 50614, 50614, 865, 11, 1936, 286, 853, 281, 360, 411, 512, 733, 295, 2531, 30348, 689, 286, 362, 613, 16679, 597, 362, 572, 9952, 293, 787, 1127, 466, 428, 17995, 293, 24387, 15669, 294, 9594, 1214, 365, 1184, 661, 13, 51264, 51264, 865, 11, 286, 2138, 411, 300, 1558, 257, 688, 13, 51364, 51364, 1018, 1400, 382, 411, 264, 517, 46094, 41596, 11, 411, 286, 500, 380, 362, 604, 1154, 365, 561, 884, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313123014784351, "compression_ratio": 1.5647058823529412, "no_caption_prob": 1.2606796190084424e-05}, {"id": 447, "seek": 382100, "start": 3823.0, "end": 3826.0, "text": " Presentational and logic based.", "tokens": [50364, 286, 519, 436, 40949, 309, 11, 457, 439, 558, 13, 50464, 50464, 33253, 1478, 293, 9952, 2361, 13, 50614, 50614, 865, 11, 1936, 286, 853, 281, 360, 411, 512, 733, 295, 2531, 30348, 689, 286, 362, 613, 16679, 597, 362, 572, 9952, 293, 787, 1127, 466, 428, 17995, 293, 24387, 15669, 294, 9594, 1214, 365, 1184, 661, 13, 51264, 51264, 865, 11, 286, 2138, 411, 300, 1558, 257, 688, 13, 51364, 51364, 1018, 1400, 382, 411, 264, 517, 46094, 41596, 11, 411, 286, 500, 380, 362, 604, 1154, 365, 561, 884, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313123014784351, "compression_ratio": 1.5647058823529412, "no_caption_prob": 1.2606796190084424e-05}, {"id": 448, "seek": 382100, "start": 3826.0, "end": 3839.0, "text": " Yeah, basically I try to do like some kind of similar splitting where I have these modules which have no logic and only care about your HTML and CSS fitting in nicely together with each other.", "tokens": [50364, 286, 519, 436, 40949, 309, 11, 457, 439, 558, 13, 50464, 50464, 33253, 1478, 293, 9952, 2361, 13, 50614, 50614, 865, 11, 1936, 286, 853, 281, 360, 411, 512, 733, 295, 2531, 30348, 689, 286, 362, 613, 16679, 597, 362, 572, 9952, 293, 787, 1127, 466, 428, 17995, 293, 24387, 15669, 294, 9594, 1214, 365, 1184, 661, 13, 51264, 51264, 865, 11, 286, 2138, 411, 300, 1558, 257, 688, 13, 51364, 51364, 1018, 1400, 382, 411, 264, 517, 46094, 41596, 11, 411, 286, 500, 380, 362, 604, 1154, 365, 561, 884, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313123014784351, "compression_ratio": 1.5647058823529412, "no_caption_prob": 1.2606796190084424e-05}, {"id": 449, "seek": 382100, "start": 3839.0, "end": 3841.0, "text": " Yeah, I definitely like that idea a lot.", "tokens": [50364, 286, 519, 436, 40949, 309, 11, 457, 439, 558, 13, 50464, 50464, 33253, 1478, 293, 9952, 2361, 13, 50614, 50614, 865, 11, 1936, 286, 853, 281, 360, 411, 512, 733, 295, 2531, 30348, 689, 286, 362, 613, 16679, 597, 362, 572, 9952, 293, 787, 1127, 466, 428, 17995, 293, 24387, 15669, 294, 9594, 1214, 365, 1184, 661, 13, 51264, 51264, 865, 11, 286, 2138, 411, 300, 1558, 257, 688, 13, 51364, 51364, 1018, 1400, 382, 411, 264, 517, 46094, 41596, 11, 411, 286, 500, 380, 362, 604, 1154, 365, 561, 884, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313123014784351, "compression_ratio": 1.5647058823529412, "no_caption_prob": 1.2606796190084424e-05}, {"id": 450, "seek": 382100, "start": 3841.0, "end": 3848.0, "text": " As far as like the unqualified imports, like I don't have any problem with people doing that.", "tokens": [50364, 286, 519, 436, 40949, 309, 11, 457, 439, 558, 13, 50464, 50464, 33253, 1478, 293, 9952, 2361, 13, 50614, 50614, 865, 11, 1936, 286, 853, 281, 360, 411, 512, 733, 295, 2531, 30348, 689, 286, 362, 613, 16679, 597, 362, 572, 9952, 293, 787, 1127, 466, 428, 17995, 293, 24387, 15669, 294, 9594, 1214, 365, 1184, 661, 13, 51264, 51264, 865, 11, 286, 2138, 411, 300, 1558, 257, 688, 13, 51364, 51364, 1018, 1400, 382, 411, 264, 517, 46094, 41596, 11, 411, 286, 500, 380, 362, 604, 1154, 365, 561, 884, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1313123014784351, "compression_ratio": 1.5647058823529412, "no_caption_prob": 1.2606796190084424e-05}, {"id": 451, "seek": 384800, "start": 3848.0, "end": 3856.0, "text": " But for my own personal preferences, I really like auto completion and it's just like inseparable from my workflow.", "tokens": [50364, 583, 337, 452, 1065, 2973, 21910, 11, 286, 534, 411, 8399, 19372, 293, 309, 311, 445, 411, 33874, 42012, 490, 452, 20993, 13, 50764, 50764, 1743, 452, 3567, 486, 27887, 281, 2445, 498, 286, 500, 380, 362, 300, 5824, 7513, 412, 862, 13, 51064, 51064, 400, 370, 286, 445, 2464, 411, 10088, 1315, 5893, 13, 51214, 51214, 663, 311, 577, 286, 2464, 3089, 13, 51314, 51314, 400, 452, 3567, 576, 1590, 1364, 498, 286, 994, 380, 362, 300, 13, 51414, 51414, 407, 11, 291, 458, 11, 337, 300, 1778, 11, 286, 1062, 411, 360, 257, 2099, 974, 419, 4609, 420, 746, 411, 300, 294, 300, 4319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06622082907874305, "compression_ratio": 1.6325757575757576, "no_caption_prob": 7.030438428046182e-05}, {"id": 452, "seek": 384800, "start": 3856.0, "end": 3862.0, "text": " Like my brain will cease to function if I don't have that feedback mechanism at play.", "tokens": [50364, 583, 337, 452, 1065, 2973, 21910, 11, 286, 534, 411, 8399, 19372, 293, 309, 311, 445, 411, 33874, 42012, 490, 452, 20993, 13, 50764, 50764, 1743, 452, 3567, 486, 27887, 281, 2445, 498, 286, 500, 380, 362, 300, 5824, 7513, 412, 862, 13, 51064, 51064, 400, 370, 286, 445, 2464, 411, 10088, 1315, 5893, 13, 51214, 51214, 663, 311, 577, 286, 2464, 3089, 13, 51314, 51314, 400, 452, 3567, 576, 1590, 1364, 498, 286, 994, 380, 362, 300, 13, 51414, 51414, 407, 11, 291, 458, 11, 337, 300, 1778, 11, 286, 1062, 411, 360, 257, 2099, 974, 419, 4609, 420, 746, 411, 300, 294, 300, 4319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06622082907874305, "compression_ratio": 1.6325757575757576, "no_caption_prob": 7.030438428046182e-05}, {"id": 453, "seek": 384800, "start": 3862.0, "end": 3865.0, "text": " And so I just write like module name dot.", "tokens": [50364, 583, 337, 452, 1065, 2973, 21910, 11, 286, 534, 411, 8399, 19372, 293, 309, 311, 445, 411, 33874, 42012, 490, 452, 20993, 13, 50764, 50764, 1743, 452, 3567, 486, 27887, 281, 2445, 498, 286, 500, 380, 362, 300, 5824, 7513, 412, 862, 13, 51064, 51064, 400, 370, 286, 445, 2464, 411, 10088, 1315, 5893, 13, 51214, 51214, 663, 311, 577, 286, 2464, 3089, 13, 51314, 51314, 400, 452, 3567, 576, 1590, 1364, 498, 286, 994, 380, 362, 300, 13, 51414, 51414, 407, 11, 291, 458, 11, 337, 300, 1778, 11, 286, 1062, 411, 360, 257, 2099, 974, 419, 4609, 420, 746, 411, 300, 294, 300, 4319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06622082907874305, "compression_ratio": 1.6325757575757576, "no_caption_prob": 7.030438428046182e-05}, {"id": 454, "seek": 384800, "start": 3865.0, "end": 3867.0, "text": " That's how I write code.", "tokens": [50364, 583, 337, 452, 1065, 2973, 21910, 11, 286, 534, 411, 8399, 19372, 293, 309, 311, 445, 411, 33874, 42012, 490, 452, 20993, 13, 50764, 50764, 1743, 452, 3567, 486, 27887, 281, 2445, 498, 286, 500, 380, 362, 300, 5824, 7513, 412, 862, 13, 51064, 51064, 400, 370, 286, 445, 2464, 411, 10088, 1315, 5893, 13, 51214, 51214, 663, 311, 577, 286, 2464, 3089, 13, 51314, 51314, 400, 452, 3567, 576, 1590, 1364, 498, 286, 994, 380, 362, 300, 13, 51414, 51414, 407, 11, 291, 458, 11, 337, 300, 1778, 11, 286, 1062, 411, 360, 257, 2099, 974, 419, 4609, 420, 746, 411, 300, 294, 300, 4319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06622082907874305, "compression_ratio": 1.6325757575757576, "no_caption_prob": 7.030438428046182e-05}, {"id": 455, "seek": 384800, "start": 3867.0, "end": 3869.0, "text": " And my brain would stop working if I didn't have that.", "tokens": [50364, 583, 337, 452, 1065, 2973, 21910, 11, 286, 534, 411, 8399, 19372, 293, 309, 311, 445, 411, 33874, 42012, 490, 452, 20993, 13, 50764, 50764, 1743, 452, 3567, 486, 27887, 281, 2445, 498, 286, 500, 380, 362, 300, 5824, 7513, 412, 862, 13, 51064, 51064, 400, 370, 286, 445, 2464, 411, 10088, 1315, 5893, 13, 51214, 51214, 663, 311, 577, 286, 2464, 3089, 13, 51314, 51314, 400, 452, 3567, 576, 1590, 1364, 498, 286, 994, 380, 362, 300, 13, 51414, 51414, 407, 11, 291, 458, 11, 337, 300, 1778, 11, 286, 1062, 411, 360, 257, 2099, 974, 419, 4609, 420, 746, 411, 300, 294, 300, 4319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06622082907874305, "compression_ratio": 1.6325757575757576, "no_caption_prob": 7.030438428046182e-05}, {"id": 456, "seek": 384800, "start": 3869.0, "end": 3875.0, "text": " So, you know, for that reason, I might like do a short import alias or something like that in that context.", "tokens": [50364, 583, 337, 452, 1065, 2973, 21910, 11, 286, 534, 411, 8399, 19372, 293, 309, 311, 445, 411, 33874, 42012, 490, 452, 20993, 13, 50764, 50764, 1743, 452, 3567, 486, 27887, 281, 2445, 498, 286, 500, 380, 362, 300, 5824, 7513, 412, 862, 13, 51064, 51064, 400, 370, 286, 445, 2464, 411, 10088, 1315, 5893, 13, 51214, 51214, 663, 311, 577, 286, 2464, 3089, 13, 51314, 51314, 400, 452, 3567, 576, 1590, 1364, 498, 286, 994, 380, 362, 300, 13, 51414, 51414, 407, 11, 291, 458, 11, 337, 300, 1778, 11, 286, 1062, 411, 360, 257, 2099, 974, 419, 4609, 420, 746, 411, 300, 294, 300, 4319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06622082907874305, "compression_ratio": 1.6325757575757576, "no_caption_prob": 7.030438428046182e-05}, {"id": 457, "seek": 387500, "start": 3875.0, "end": 3883.0, "text": " But otherwise, I think the idea of separating, you know, these nice like view helper modules is a really nice pattern.", "tokens": [50364, 583, 5911, 11, 286, 519, 264, 1558, 295, 29279, 11, 291, 458, 11, 613, 1481, 411, 1910, 36133, 16679, 307, 257, 534, 1481, 5102, 13, 50764, 50764, 400, 411, 472, 472, 551, 286, 528, 281, 909, 281, 300, 307, 300, 309, 393, 312, 534, 4961, 11, 411, 294, 264, 2657, 21841, 1901, 13, 51114, 51114, 3432, 751, 466, 613, 1910, 6565, 13, 51214, 51214, 286, 603, 2183, 257, 2113, 300, 6686, 466, 300, 13, 51314, 51314, 286, 519, 309, 311, 257, 1481, 5102, 300, 13165, 294, 11745, 9410, 382, 731, 11, 597, 307, 1419, 411, 264, 9952, 337, 1974, 1478, 7270, 295, 411, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058562375881053785, "compression_ratio": 1.7224334600760456, "no_caption_prob": 0.00016342513845302165}, {"id": 458, "seek": 387500, "start": 3883.0, "end": 3890.0, "text": " And like one one thing I want to add to that is that it can be really helpful, like in the object oriented space.", "tokens": [50364, 583, 5911, 11, 286, 519, 264, 1558, 295, 29279, 11, 291, 458, 11, 613, 1481, 411, 1910, 36133, 16679, 307, 257, 534, 1481, 5102, 13, 50764, 50764, 400, 411, 472, 472, 551, 286, 528, 281, 909, 281, 300, 307, 300, 309, 393, 312, 534, 4961, 11, 411, 294, 264, 2657, 21841, 1901, 13, 51114, 51114, 3432, 751, 466, 613, 1910, 6565, 13, 51214, 51214, 286, 603, 2183, 257, 2113, 300, 6686, 466, 300, 13, 51314, 51314, 286, 519, 309, 311, 257, 1481, 5102, 300, 13165, 294, 11745, 9410, 382, 731, 11, 597, 307, 1419, 411, 264, 9952, 337, 1974, 1478, 7270, 295, 411, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058562375881053785, "compression_ratio": 1.7224334600760456, "no_caption_prob": 0.00016342513845302165}, {"id": 459, "seek": 387500, "start": 3890.0, "end": 3892.0, "text": " People talk about these view objects.", "tokens": [50364, 583, 5911, 11, 286, 519, 264, 1558, 295, 29279, 11, 291, 458, 11, 613, 1481, 411, 1910, 36133, 16679, 307, 257, 534, 1481, 5102, 13, 50764, 50764, 400, 411, 472, 472, 551, 286, 528, 281, 909, 281, 300, 307, 300, 309, 393, 312, 534, 4961, 11, 411, 294, 264, 2657, 21841, 1901, 13, 51114, 51114, 3432, 751, 466, 613, 1910, 6565, 13, 51214, 51214, 286, 603, 2183, 257, 2113, 300, 6686, 466, 300, 13, 51314, 51314, 286, 519, 309, 311, 257, 1481, 5102, 300, 13165, 294, 11745, 9410, 382, 731, 11, 597, 307, 1419, 411, 264, 9952, 337, 1974, 1478, 7270, 295, 411, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058562375881053785, "compression_ratio": 1.7224334600760456, "no_caption_prob": 0.00016342513845302165}, {"id": 460, "seek": 387500, "start": 3892.0, "end": 3894.0, "text": " I'll post a link that talks about that.", "tokens": [50364, 583, 5911, 11, 286, 519, 264, 1558, 295, 29279, 11, 291, 458, 11, 613, 1481, 411, 1910, 36133, 16679, 307, 257, 534, 1481, 5102, 13, 50764, 50764, 400, 411, 472, 472, 551, 286, 528, 281, 909, 281, 300, 307, 300, 309, 393, 312, 534, 4961, 11, 411, 294, 264, 2657, 21841, 1901, 13, 51114, 51114, 3432, 751, 466, 613, 1910, 6565, 13, 51214, 51214, 286, 603, 2183, 257, 2113, 300, 6686, 466, 300, 13, 51314, 51314, 286, 519, 309, 311, 257, 1481, 5102, 300, 13165, 294, 11745, 9410, 382, 731, 11, 597, 307, 1419, 411, 264, 9952, 337, 1974, 1478, 7270, 295, 411, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058562375881053785, "compression_ratio": 1.7224334600760456, "no_caption_prob": 0.00016342513845302165}, {"id": 461, "seek": 387500, "start": 3894.0, "end": 3903.0, "text": " I think it's a nice pattern that applies in functional programming as well, which is having like the logic for presentational aspects of like,", "tokens": [50364, 583, 5911, 11, 286, 519, 264, 1558, 295, 29279, 11, 291, 458, 11, 613, 1481, 411, 1910, 36133, 16679, 307, 257, 534, 1481, 5102, 13, 50764, 50764, 400, 411, 472, 472, 551, 286, 528, 281, 909, 281, 300, 307, 300, 309, 393, 312, 534, 4961, 11, 411, 294, 264, 2657, 21841, 1901, 13, 51114, 51114, 3432, 751, 466, 613, 1910, 6565, 13, 51214, 51214, 286, 603, 2183, 257, 2113, 300, 6686, 466, 300, 13, 51314, 51314, 286, 519, 309, 311, 257, 1481, 5102, 300, 13165, 294, 11745, 9410, 382, 731, 11, 597, 307, 1419, 411, 264, 9952, 337, 1974, 1478, 7270, 295, 411, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058562375881053785, "compression_ratio": 1.7224334600760456, "no_caption_prob": 0.00016342513845302165}, {"id": 462, "seek": 390300, "start": 3903.0, "end": 3906.0, "text": " how do you present given a user data object?", "tokens": [50364, 577, 360, 291, 1974, 2212, 257, 4195, 1412, 2657, 30, 50514, 50514, 1012, 360, 291, 1974, 300, 4195, 311, 1315, 30, 50614, 50614, 1012, 360, 291, 1974, 11, 291, 458, 11, 439, 613, 819, 13985, 300, 291, 643, 30, 50814, 50814, 400, 412, 300, 935, 11, 291, 1322, 493, 341, 1412, 2010, 11, 1310, 445, 257, 2136, 365, 257, 3840, 295, 7909, 300, 366, 1238, 709, 13985, 13, 51114, 51114, 1779, 13, 400, 472, 295, 264, 1627, 721, 466, 300, 307, 498, 291, 434, 884, 4985, 4997, 11, 586, 291, 393, 362, 257, 4985, 1500, 300, 1177, 380, 2235, 294, 17995, 281, 1500, 428, 6809, 13, 51564, 51564, 509, 393, 1500, 729, 1910, 11, 291, 458, 11, 707, 7724, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04169231076394358, "compression_ratio": 1.787313432835821, "no_caption_prob": 0.00012730377784464508}, {"id": 463, "seek": 390300, "start": 3906.0, "end": 3908.0, "text": " How do you present that user's name?", "tokens": [50364, 577, 360, 291, 1974, 2212, 257, 4195, 1412, 2657, 30, 50514, 50514, 1012, 360, 291, 1974, 300, 4195, 311, 1315, 30, 50614, 50614, 1012, 360, 291, 1974, 11, 291, 458, 11, 439, 613, 819, 13985, 300, 291, 643, 30, 50814, 50814, 400, 412, 300, 935, 11, 291, 1322, 493, 341, 1412, 2010, 11, 1310, 445, 257, 2136, 365, 257, 3840, 295, 7909, 300, 366, 1238, 709, 13985, 13, 51114, 51114, 1779, 13, 400, 472, 295, 264, 1627, 721, 466, 300, 307, 498, 291, 434, 884, 4985, 4997, 11, 586, 291, 393, 362, 257, 4985, 1500, 300, 1177, 380, 2235, 294, 17995, 281, 1500, 428, 6809, 13, 51564, 51564, 509, 393, 1500, 729, 1910, 11, 291, 458, 11, 707, 7724, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04169231076394358, "compression_ratio": 1.787313432835821, "no_caption_prob": 0.00012730377784464508}, {"id": 464, "seek": 390300, "start": 3908.0, "end": 3912.0, "text": " How do you present, you know, all these different strings that you need?", "tokens": [50364, 577, 360, 291, 1974, 2212, 257, 4195, 1412, 2657, 30, 50514, 50514, 1012, 360, 291, 1974, 300, 4195, 311, 1315, 30, 50614, 50614, 1012, 360, 291, 1974, 11, 291, 458, 11, 439, 613, 819, 13985, 300, 291, 643, 30, 50814, 50814, 400, 412, 300, 935, 11, 291, 1322, 493, 341, 1412, 2010, 11, 1310, 445, 257, 2136, 365, 257, 3840, 295, 7909, 300, 366, 1238, 709, 13985, 13, 51114, 51114, 1779, 13, 400, 472, 295, 264, 1627, 721, 466, 300, 307, 498, 291, 434, 884, 4985, 4997, 11, 586, 291, 393, 362, 257, 4985, 1500, 300, 1177, 380, 2235, 294, 17995, 281, 1500, 428, 6809, 13, 51564, 51564, 509, 393, 1500, 729, 1910, 11, 291, 458, 11, 707, 7724, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04169231076394358, "compression_ratio": 1.787313432835821, "no_caption_prob": 0.00012730377784464508}, {"id": 465, "seek": 390300, "start": 3912.0, "end": 3918.0, "text": " And at that point, you build up this data type, maybe just a record with a bunch of fields that are pretty much strings.", "tokens": [50364, 577, 360, 291, 1974, 2212, 257, 4195, 1412, 2657, 30, 50514, 50514, 1012, 360, 291, 1974, 300, 4195, 311, 1315, 30, 50614, 50614, 1012, 360, 291, 1974, 11, 291, 458, 11, 439, 613, 819, 13985, 300, 291, 643, 30, 50814, 50814, 400, 412, 300, 935, 11, 291, 1322, 493, 341, 1412, 2010, 11, 1310, 445, 257, 2136, 365, 257, 3840, 295, 7909, 300, 366, 1238, 709, 13985, 13, 51114, 51114, 1779, 13, 400, 472, 295, 264, 1627, 721, 466, 300, 307, 498, 291, 434, 884, 4985, 4997, 11, 586, 291, 393, 362, 257, 4985, 1500, 300, 1177, 380, 2235, 294, 17995, 281, 1500, 428, 6809, 13, 51564, 51564, 509, 393, 1500, 729, 1910, 11, 291, 458, 11, 707, 7724, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04169231076394358, "compression_ratio": 1.787313432835821, "no_caption_prob": 0.00012730377784464508}, {"id": 466, "seek": 390300, "start": 3918.0, "end": 3927.0, "text": " Right. And one of the cool things about that is if you're doing unit testing, now you can have a unit test that doesn't pull in HTML to test your views.", "tokens": [50364, 577, 360, 291, 1974, 2212, 257, 4195, 1412, 2657, 30, 50514, 50514, 1012, 360, 291, 1974, 300, 4195, 311, 1315, 30, 50614, 50614, 1012, 360, 291, 1974, 11, 291, 458, 11, 439, 613, 819, 13985, 300, 291, 643, 30, 50814, 50814, 400, 412, 300, 935, 11, 291, 1322, 493, 341, 1412, 2010, 11, 1310, 445, 257, 2136, 365, 257, 3840, 295, 7909, 300, 366, 1238, 709, 13985, 13, 51114, 51114, 1779, 13, 400, 472, 295, 264, 1627, 721, 466, 300, 307, 498, 291, 434, 884, 4985, 4997, 11, 586, 291, 393, 362, 257, 4985, 1500, 300, 1177, 380, 2235, 294, 17995, 281, 1500, 428, 6809, 13, 51564, 51564, 509, 393, 1500, 729, 1910, 11, 291, 458, 11, 707, 7724, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04169231076394358, "compression_ratio": 1.787313432835821, "no_caption_prob": 0.00012730377784464508}, {"id": 467, "seek": 390300, "start": 3927.0, "end": 3931.0, "text": " You can test those view, you know, little records.", "tokens": [50364, 577, 360, 291, 1974, 2212, 257, 4195, 1412, 2657, 30, 50514, 50514, 1012, 360, 291, 1974, 300, 4195, 311, 1315, 30, 50614, 50614, 1012, 360, 291, 1974, 11, 291, 458, 11, 439, 613, 819, 13985, 300, 291, 643, 30, 50814, 50814, 400, 412, 300, 935, 11, 291, 1322, 493, 341, 1412, 2010, 11, 1310, 445, 257, 2136, 365, 257, 3840, 295, 7909, 300, 366, 1238, 709, 13985, 13, 51114, 51114, 1779, 13, 400, 472, 295, 264, 1627, 721, 466, 300, 307, 498, 291, 434, 884, 4985, 4997, 11, 586, 291, 393, 362, 257, 4985, 1500, 300, 1177, 380, 2235, 294, 17995, 281, 1500, 428, 6809, 13, 51564, 51564, 509, 393, 1500, 729, 1910, 11, 291, 458, 11, 707, 7724, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04169231076394358, "compression_ratio": 1.787313432835821, "no_caption_prob": 0.00012730377784464508}, {"id": 468, "seek": 393100, "start": 3931.0, "end": 3939.0, "text": " And you can have a nice decoupled thing that has the presentational elements and gives you all the little bits of data that you need.", "tokens": [50364, 400, 291, 393, 362, 257, 1481, 979, 263, 15551, 551, 300, 575, 264, 1974, 1478, 4959, 293, 2709, 291, 439, 264, 707, 9239, 295, 1412, 300, 291, 643, 13, 50764, 50764, 400, 550, 291, 393, 362, 733, 295, 10316, 1910, 854, 433, 300, 500, 380, 362, 281, 362, 439, 264, 3601, 295, 577, 281, 577, 281, 1322, 300, 493, 13, 51164, 51164, 407, 300, 311, 472, 5102, 300, 286, 519, 393, 312, 4961, 337, 337, 1228, 300, 3109, 13, 51364, 51364, 865, 11, 300, 3263, 1481, 13, 467, 3263, 534, 2531, 281, 437, 5314, 493, 2737, 294, 341, 733, 295, 636, 295, 1364, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03605186497723615, "compression_ratio": 1.764, "no_caption_prob": 4.0063219785224646e-05}, {"id": 469, "seek": 393100, "start": 3939.0, "end": 3947.0, "text": " And then you can have kind of dumb view helpers that don't have to have all the knowledge of how to how to build that up.", "tokens": [50364, 400, 291, 393, 362, 257, 1481, 979, 263, 15551, 551, 300, 575, 264, 1974, 1478, 4959, 293, 2709, 291, 439, 264, 707, 9239, 295, 1412, 300, 291, 643, 13, 50764, 50764, 400, 550, 291, 393, 362, 733, 295, 10316, 1910, 854, 433, 300, 500, 380, 362, 281, 362, 439, 264, 3601, 295, 577, 281, 577, 281, 1322, 300, 493, 13, 51164, 51164, 407, 300, 311, 472, 5102, 300, 286, 519, 393, 312, 4961, 337, 337, 1228, 300, 3109, 13, 51364, 51364, 865, 11, 300, 3263, 1481, 13, 467, 3263, 534, 2531, 281, 437, 5314, 493, 2737, 294, 341, 733, 295, 636, 295, 1364, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03605186497723615, "compression_ratio": 1.764, "no_caption_prob": 4.0063219785224646e-05}, {"id": 470, "seek": 393100, "start": 3947.0, "end": 3951.0, "text": " So that's one pattern that I think can be helpful for for using that approach.", "tokens": [50364, 400, 291, 393, 362, 257, 1481, 979, 263, 15551, 551, 300, 575, 264, 1974, 1478, 4959, 293, 2709, 291, 439, 264, 707, 9239, 295, 1412, 300, 291, 643, 13, 50764, 50764, 400, 550, 291, 393, 362, 733, 295, 10316, 1910, 854, 433, 300, 500, 380, 362, 281, 362, 439, 264, 3601, 295, 577, 281, 577, 281, 1322, 300, 493, 13, 51164, 51164, 407, 300, 311, 472, 5102, 300, 286, 519, 393, 312, 4961, 337, 337, 1228, 300, 3109, 13, 51364, 51364, 865, 11, 300, 3263, 1481, 13, 467, 3263, 534, 2531, 281, 437, 5314, 493, 2737, 294, 341, 733, 295, 636, 295, 1364, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03605186497723615, "compression_ratio": 1.764, "no_caption_prob": 4.0063219785224646e-05}, {"id": 471, "seek": 393100, "start": 3951.0, "end": 3957.0, "text": " Yeah, that sounds nice. It sounds really similar to what ends up happening in this kind of way of working.", "tokens": [50364, 400, 291, 393, 362, 257, 1481, 979, 263, 15551, 551, 300, 575, 264, 1974, 1478, 4959, 293, 2709, 291, 439, 264, 707, 9239, 295, 1412, 300, 291, 643, 13, 50764, 50764, 400, 550, 291, 393, 362, 733, 295, 10316, 1910, 854, 433, 300, 500, 380, 362, 281, 362, 439, 264, 3601, 295, 577, 281, 577, 281, 1322, 300, 493, 13, 51164, 51164, 407, 300, 311, 472, 5102, 300, 286, 519, 393, 312, 4961, 337, 337, 1228, 300, 3109, 13, 51364, 51364, 865, 11, 300, 3263, 1481, 13, 467, 3263, 534, 2531, 281, 437, 5314, 493, 2737, 294, 341, 733, 295, 636, 295, 1364, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03605186497723615, "compression_ratio": 1.764, "no_caption_prob": 4.0063219785224646e-05}, {"id": 472, "seek": 395700, "start": 3957.0, "end": 3966.0, "text": " That's what I was imagining, that that's something that you naturally are going to do if you're going to have these dumb things that basically just use list dot map and are otherwise dumb.", "tokens": [50364, 663, 311, 437, 286, 390, 27798, 11, 300, 300, 311, 746, 300, 291, 8195, 366, 516, 281, 360, 498, 291, 434, 516, 281, 362, 613, 10316, 721, 300, 1936, 445, 764, 1329, 5893, 4471, 293, 366, 5911, 10316, 13, 50814, 50814, 3996, 1168, 286, 632, 307, 11, 360, 291, 360, 291, 764, 420, 393, 291, 764, 412, 3079, 365, 2699, 76, 6838, 917, 16679, 30, 51164, 51164, 400, 576, 291, 576, 291, 754, 528, 281, 420, 576, 291, 764, 2699, 76, 12649, 626, 281, 360, 281, 483, 300, 1802, 30, 51464, 51464, 876, 11, 1338, 13, 1779, 13, 639, 2170, 646, 281, 1071, 1151, 3124, 11, 286, 2041, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10703496173419784, "compression_ratio": 1.696969696969697, "no_caption_prob": 9.313985356129706e-05}, {"id": 473, "seek": 395700, "start": 3966.0, "end": 3973.0, "text": " Another question I had is, do you do you use or can you use at apply with Elm tail end modules?", "tokens": [50364, 663, 311, 437, 286, 390, 27798, 11, 300, 300, 311, 746, 300, 291, 8195, 366, 516, 281, 360, 498, 291, 434, 516, 281, 362, 613, 10316, 721, 300, 1936, 445, 764, 1329, 5893, 4471, 293, 366, 5911, 10316, 13, 50814, 50814, 3996, 1168, 286, 632, 307, 11, 360, 291, 360, 291, 764, 420, 393, 291, 764, 412, 3079, 365, 2699, 76, 6838, 917, 16679, 30, 51164, 51164, 400, 576, 291, 576, 291, 754, 528, 281, 420, 576, 291, 764, 2699, 76, 12649, 626, 281, 360, 281, 483, 300, 1802, 30, 51464, 51464, 876, 11, 1338, 13, 1779, 13, 639, 2170, 646, 281, 1071, 1151, 3124, 11, 286, 2041, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10703496173419784, "compression_ratio": 1.696969696969697, "no_caption_prob": 9.313985356129706e-05}, {"id": 474, "seek": 395700, "start": 3973.0, "end": 3979.0, "text": " And would you would you even want to or would you use Elm abstractions to do to get that effect?", "tokens": [50364, 663, 311, 437, 286, 390, 27798, 11, 300, 300, 311, 746, 300, 291, 8195, 366, 516, 281, 360, 498, 291, 434, 516, 281, 362, 613, 10316, 721, 300, 1936, 445, 764, 1329, 5893, 4471, 293, 366, 5911, 10316, 13, 50814, 50814, 3996, 1168, 286, 632, 307, 11, 360, 291, 360, 291, 764, 420, 393, 291, 764, 412, 3079, 365, 2699, 76, 6838, 917, 16679, 30, 51164, 51164, 400, 576, 291, 576, 291, 754, 528, 281, 420, 576, 291, 764, 2699, 76, 12649, 626, 281, 360, 281, 483, 300, 1802, 30, 51464, 51464, 876, 11, 1338, 13, 1779, 13, 639, 2170, 646, 281, 1071, 1151, 3124, 11, 286, 2041, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10703496173419784, "compression_ratio": 1.696969696969697, "no_caption_prob": 9.313985356129706e-05}, {"id": 475, "seek": 395700, "start": 3979.0, "end": 3982.0, "text": " Oh, yeah. Right. This gets back to another best practice, I guess.", "tokens": [50364, 663, 311, 437, 286, 390, 27798, 11, 300, 300, 311, 746, 300, 291, 8195, 366, 516, 281, 360, 498, 291, 434, 516, 281, 362, 613, 10316, 721, 300, 1936, 445, 764, 1329, 5893, 4471, 293, 366, 5911, 10316, 13, 50814, 50814, 3996, 1168, 286, 632, 307, 11, 360, 291, 360, 291, 764, 420, 393, 291, 764, 412, 3079, 365, 2699, 76, 6838, 917, 16679, 30, 51164, 51164, 400, 576, 291, 576, 291, 754, 528, 281, 420, 576, 291, 764, 2699, 76, 12649, 626, 281, 360, 281, 483, 300, 1802, 30, 51464, 51464, 876, 11, 1338, 13, 1779, 13, 639, 2170, 646, 281, 1071, 1151, 3124, 11, 286, 2041, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10703496173419784, "compression_ratio": 1.696969696969697, "no_caption_prob": 9.313985356129706e-05}, {"id": 476, "seek": 398200, "start": 3982.0, "end": 3992.0, "text": " You can use at apply. So for those that don't know, at apply is something that a kind of syntax in CSS, which gets introduced when you use tailwind CSS.", "tokens": [50364, 509, 393, 764, 412, 3079, 13, 407, 337, 729, 300, 500, 380, 458, 11, 412, 3079, 307, 746, 300, 257, 733, 295, 28431, 294, 24387, 11, 597, 2170, 7268, 562, 291, 764, 6838, 12199, 24387, 13, 50864, 50864, 865, 11, 309, 311, 411, 257, 2121, 6838, 12199, 45444, 337, 411, 899, 5371, 1214, 14877, 5359, 337, 411, 412, 3079, 13, 51214, 51214, 400, 291, 1884, 257, 2960, 300, 575, 341, 3678, 293, 341, 20076, 1508, 293, 2035, 13, 51464, 51464, 7587, 13, 400, 264, 1151, 3124, 294, 527, 1389, 576, 550, 312, 500, 380, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08325525793698754, "compression_ratio": 1.6626506024096386, "no_caption_prob": 2.7535337721928954e-05}, {"id": 477, "seek": 398200, "start": 3992.0, "end": 3999.0, "text": " Yeah, it's like a special tailwind directive for like smushing together utility classes for like at apply.", "tokens": [50364, 509, 393, 764, 412, 3079, 13, 407, 337, 729, 300, 500, 380, 458, 11, 412, 3079, 307, 746, 300, 257, 733, 295, 28431, 294, 24387, 11, 597, 2170, 7268, 562, 291, 764, 6838, 12199, 24387, 13, 50864, 50864, 865, 11, 309, 311, 411, 257, 2121, 6838, 12199, 45444, 337, 411, 899, 5371, 1214, 14877, 5359, 337, 411, 412, 3079, 13, 51214, 51214, 400, 291, 1884, 257, 2960, 300, 575, 341, 3678, 293, 341, 20076, 1508, 293, 2035, 13, 51464, 51464, 7587, 13, 400, 264, 1151, 3124, 294, 527, 1389, 576, 550, 312, 500, 380, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08325525793698754, "compression_ratio": 1.6626506024096386, "no_caption_prob": 2.7535337721928954e-05}, {"id": 478, "seek": 398200, "start": 3999.0, "end": 4004.0, "text": " And you create a button that has this background and this hover class and whatever.", "tokens": [50364, 509, 393, 764, 412, 3079, 13, 407, 337, 729, 300, 500, 380, 458, 11, 412, 3079, 307, 746, 300, 257, 733, 295, 28431, 294, 24387, 11, 597, 2170, 7268, 562, 291, 764, 6838, 12199, 24387, 13, 50864, 50864, 865, 11, 309, 311, 411, 257, 2121, 6838, 12199, 45444, 337, 411, 899, 5371, 1214, 14877, 5359, 337, 411, 412, 3079, 13, 51214, 51214, 400, 291, 1884, 257, 2960, 300, 575, 341, 3678, 293, 341, 20076, 1508, 293, 2035, 13, 51464, 51464, 7587, 13, 400, 264, 1151, 3124, 294, 527, 1389, 576, 550, 312, 500, 380, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08325525793698754, "compression_ratio": 1.6626506024096386, "no_caption_prob": 2.7535337721928954e-05}, {"id": 479, "seek": 398200, "start": 4004.0, "end": 4008.0, "text": " Exactly. And the best practice in our case would then be don't use it.", "tokens": [50364, 509, 393, 764, 412, 3079, 13, 407, 337, 729, 300, 500, 380, 458, 11, 412, 3079, 307, 746, 300, 257, 733, 295, 28431, 294, 24387, 11, 597, 2170, 7268, 562, 291, 764, 6838, 12199, 24387, 13, 50864, 50864, 865, 11, 309, 311, 411, 257, 2121, 6838, 12199, 45444, 337, 411, 899, 5371, 1214, 14877, 5359, 337, 411, 412, 3079, 13, 51214, 51214, 400, 291, 1884, 257, 2960, 300, 575, 341, 3678, 293, 341, 20076, 1508, 293, 2035, 13, 51464, 51464, 7587, 13, 400, 264, 1151, 3124, 294, 527, 1389, 576, 550, 312, 500, 380, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08325525793698754, "compression_ratio": 1.6626506024096386, "no_caption_prob": 2.7535337721928954e-05}, {"id": 480, "seek": 400800, "start": 4008.0, "end": 4026.0, "text": " Just define these things in your own land. But it also depends very much on your use case, unfortunately, because some teams, for example, use the same CSS and tailwind configuration that they use for other pages, which would, for example, be statically rendered next.", "tokens": [50364, 1449, 6964, 613, 721, 294, 428, 1065, 2117, 13, 583, 309, 611, 5946, 588, 709, 322, 428, 764, 1389, 11, 7015, 11, 570, 512, 5491, 11, 337, 1365, 11, 764, 264, 912, 24387, 293, 6838, 12199, 11694, 300, 436, 764, 337, 661, 7183, 11, 597, 576, 11, 337, 1365, 11, 312, 2219, 984, 28748, 958, 13, 51264, 51264, 1171, 1365, 11, 293, 550, 436, 917, 493, 406, 731, 885, 1075, 281, 974, 613, 21988, 13, 51514, 51514, 407, 309, 311, 611, 466, 728, 7192, 2310, 456, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10059799990811191, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.144017268321477e-05}, {"id": 481, "seek": 400800, "start": 4026.0, "end": 4031.0, "text": " For example, and then they end up not well being able to import these definitions.", "tokens": [50364, 1449, 6964, 613, 721, 294, 428, 1065, 2117, 13, 583, 309, 611, 5946, 588, 709, 322, 428, 764, 1389, 11, 7015, 11, 570, 512, 5491, 11, 337, 1365, 11, 764, 264, 912, 24387, 293, 6838, 12199, 11694, 300, 436, 764, 337, 661, 7183, 11, 597, 576, 11, 337, 1365, 11, 312, 2219, 984, 28748, 958, 13, 51264, 51264, 1171, 1365, 11, 293, 550, 436, 917, 493, 406, 731, 885, 1075, 281, 974, 613, 21988, 13, 51514, 51514, 407, 309, 311, 611, 466, 728, 7192, 2310, 456, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10059799990811191, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.144017268321477e-05}, {"id": 482, "seek": 400800, "start": 4031.0, "end": 4035.0, "text": " So it's also about interoperability there.", "tokens": [50364, 1449, 6964, 613, 721, 294, 428, 1065, 2117, 13, 583, 309, 611, 5946, 588, 709, 322, 428, 764, 1389, 11, 7015, 11, 570, 512, 5491, 11, 337, 1365, 11, 764, 264, 912, 24387, 293, 6838, 12199, 11694, 300, 436, 764, 337, 661, 7183, 11, 597, 576, 11, 337, 1365, 11, 312, 2219, 984, 28748, 958, 13, 51264, 51264, 1171, 1365, 11, 293, 550, 436, 917, 493, 406, 731, 885, 1075, 281, 974, 613, 21988, 13, 51514, 51514, 407, 309, 311, 611, 466, 728, 7192, 2310, 456, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10059799990811191, "compression_ratio": 1.6147540983606556, "no_caption_prob": 5.144017268321477e-05}, {"id": 483, "seek": 403500, "start": 4035.0, "end": 4052.0, "text": " So I guess if you can, it's best to use the Elm CSS definitions and use it within your own code because it's much easier and less prone to maybe some mistakes in translation when generating the Elm code if you had used it in CSS directly.", "tokens": [50364, 407, 286, 2041, 498, 291, 393, 11, 309, 311, 1151, 281, 764, 264, 2699, 76, 24387, 21988, 293, 764, 309, 1951, 428, 1065, 3089, 570, 309, 311, 709, 3571, 293, 1570, 25806, 281, 1310, 512, 8038, 294, 12853, 562, 17746, 264, 2699, 76, 3089, 498, 291, 632, 1143, 309, 294, 24387, 3838, 13, 51214, 51214, 583, 309, 307, 1944, 13, 400, 1338, 11, 309, 307, 1944, 281, 764, 412, 3079, 294, 428, 24387, 293, 362, 309, 8460, 512, 2375, 3089, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10176972781910616, "compression_ratio": 1.6666666666666667, "no_caption_prob": 7.602271216455847e-05}, {"id": 484, "seek": 403500, "start": 4052.0, "end": 4062.0, "text": " But it is possible. And yeah, it is possible to use at apply in your CSS and have it generate some custom code.", "tokens": [50364, 407, 286, 2041, 498, 291, 393, 11, 309, 311, 1151, 281, 764, 264, 2699, 76, 24387, 21988, 293, 764, 309, 1951, 428, 1065, 3089, 570, 309, 311, 709, 3571, 293, 1570, 25806, 281, 1310, 512, 8038, 294, 12853, 562, 17746, 264, 2699, 76, 3089, 498, 291, 632, 1143, 309, 294, 24387, 3838, 13, 51214, 51214, 583, 309, 307, 1944, 13, 400, 1338, 11, 309, 307, 1944, 281, 764, 412, 3079, 294, 428, 24387, 293, 362, 309, 8460, 512, 2375, 3089, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10176972781910616, "compression_ratio": 1.6666666666666667, "no_caption_prob": 7.602271216455847e-05}, {"id": 485, "seek": 406200, "start": 4062.0, "end": 4075.0, "text": " Yeah, I sort of had a similar philosophy with Elm GraphQL, which was like as much as I could do with Elm high level abstractions, I would prefer that over GraphQL abstractions.", "tokens": [50364, 865, 11, 286, 1333, 295, 632, 257, 2531, 10675, 365, 2699, 76, 21884, 13695, 11, 597, 390, 411, 382, 709, 382, 286, 727, 360, 365, 2699, 76, 1090, 1496, 12649, 626, 11, 286, 576, 4382, 300, 670, 21884, 13695, 12649, 626, 13, 51014, 51014, 509, 458, 11, 370, 411, 21884, 13695, 575, 575, 341, 10710, 295, 9102, 300, 291, 393, 1320, 9834, 666, 721, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.07282085004060165, "compression_ratio": 1.5136612021857923, "no_caption_prob": 0.00011772905418183655}, {"id": 486, "seek": 406200, "start": 4075.0, "end": 4082.0, "text": " You know, so like GraphQL has has this notion of variables that you can pass parameters into things.", "tokens": [50364, 865, 11, 286, 1333, 295, 632, 257, 2531, 10675, 365, 2699, 76, 21884, 13695, 11, 597, 390, 411, 382, 709, 382, 286, 727, 360, 365, 2699, 76, 1090, 1496, 12649, 626, 11, 286, 576, 4382, 300, 670, 21884, 13695, 12649, 626, 13, 51014, 51014, 509, 458, 11, 370, 411, 21884, 13695, 575, 575, 341, 10710, 295, 9102, 300, 291, 393, 1320, 9834, 666, 721, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.07282085004060165, "compression_ratio": 1.5136612021857923, "no_caption_prob": 0.00011772905418183655}, {"id": 487, "seek": 408200, "start": 4082.0, "end": 4095.0, "text": " But Elm has parameters and functions, so prefer using those over sort of GraphQL domain concepts when possible, because it becomes like a more high level abstraction that's more idiomatic to Elm.", "tokens": [50364, 583, 2699, 76, 575, 9834, 293, 6828, 11, 370, 4382, 1228, 729, 670, 1333, 295, 21884, 13695, 9274, 10392, 562, 1944, 11, 570, 309, 3643, 411, 257, 544, 1090, 1496, 37765, 300, 311, 544, 18014, 13143, 281, 2699, 76, 13, 51014, 51014, 400, 291, 393, 13982, 439, 264, 4122, 411, 291, 393, 1895, 15104, 1895, 578, 3662, 3873, 294, 428, 40930, 293, 291, 393, 1895, 15104, 13437, 5215, 3873, 411, 2699, 76, 19954, 281, 854, 291, 12477, 3116, 3089, 13, 51614, 51614, 400, 11, 291, 458, 11, 309, 445, 3643, 257, 534, 1481, 1752, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09112508369214607, "compression_ratio": 1.667953667953668, "no_caption_prob": 6.401426799129695e-05}, {"id": 488, "seek": 408200, "start": 4095.0, "end": 4107.0, "text": " And you can leverage all the features like you can refactor refactoring tools in your IDE and you can refactor static analysis tools like Elm Review to help you analyze dead code.", "tokens": [50364, 583, 2699, 76, 575, 9834, 293, 6828, 11, 370, 4382, 1228, 729, 670, 1333, 295, 21884, 13695, 9274, 10392, 562, 1944, 11, 570, 309, 3643, 411, 257, 544, 1090, 1496, 37765, 300, 311, 544, 18014, 13143, 281, 2699, 76, 13, 51014, 51014, 400, 291, 393, 13982, 439, 264, 4122, 411, 291, 393, 1895, 15104, 1895, 578, 3662, 3873, 294, 428, 40930, 293, 291, 393, 1895, 15104, 13437, 5215, 3873, 411, 2699, 76, 19954, 281, 854, 291, 12477, 3116, 3089, 13, 51614, 51614, 400, 11, 291, 458, 11, 309, 445, 3643, 257, 534, 1481, 1752, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09112508369214607, "compression_ratio": 1.667953667953668, "no_caption_prob": 6.401426799129695e-05}, {"id": 489, "seek": 408200, "start": 4107.0, "end": 4111.0, "text": " And, you know, it just becomes a really nice experience.", "tokens": [50364, 583, 2699, 76, 575, 9834, 293, 6828, 11, 370, 4382, 1228, 729, 670, 1333, 295, 21884, 13695, 9274, 10392, 562, 1944, 11, 570, 309, 3643, 411, 257, 544, 1090, 1496, 37765, 300, 311, 544, 18014, 13143, 281, 2699, 76, 13, 51014, 51014, 400, 291, 393, 13982, 439, 264, 4122, 411, 291, 393, 1895, 15104, 1895, 578, 3662, 3873, 294, 428, 40930, 293, 291, 393, 1895, 15104, 13437, 5215, 3873, 411, 2699, 76, 19954, 281, 854, 291, 12477, 3116, 3089, 13, 51614, 51614, 400, 11, 291, 458, 11, 309, 445, 3643, 257, 534, 1481, 1752, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09112508369214607, "compression_ratio": 1.667953667953668, "no_caption_prob": 6.401426799129695e-05}, {"id": 490, "seek": 411100, "start": 4111.0, "end": 4120.0, "text": " And also, it's less moving parts. So when you're using a generator, you would draw and you can like not use it instead.", "tokens": [50364, 400, 611, 11, 309, 311, 1570, 2684, 3166, 13, 407, 562, 291, 434, 1228, 257, 19265, 11, 291, 576, 2642, 293, 291, 393, 411, 406, 764, 309, 2602, 13, 50814, 50814, 663, 311, 472, 1570, 2684, 644, 294, 300, 1389, 13, 407, 309, 311, 1009, 437, 286, 2748, 13, 440, 1151, 3089, 307, 264, 3089, 300, 390, 1128, 3720, 11, 286, 2041, 13, 51114, 51114, 865, 11, 1338, 11, 3122, 13, 865, 11, 286, 959, 300, 309, 311, 445, 24387, 5893, 20076, 2602, 295, 17746, 257, 2121, 6838, 12199, 472, 570, 291, 727, 445, 35925, 729, 1214, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10556971793081246, "compression_ratio": 1.6844262295081966, "no_caption_prob": 4.908472328679636e-05}, {"id": 491, "seek": 411100, "start": 4120.0, "end": 4126.0, "text": " That's one less moving part in that case. So it's always what I recommend. The best code is the code that was never written, I guess.", "tokens": [50364, 400, 611, 11, 309, 311, 1570, 2684, 3166, 13, 407, 562, 291, 434, 1228, 257, 19265, 11, 291, 576, 2642, 293, 291, 393, 411, 406, 764, 309, 2602, 13, 50814, 50814, 663, 311, 472, 1570, 2684, 644, 294, 300, 1389, 13, 407, 309, 311, 1009, 437, 286, 2748, 13, 440, 1151, 3089, 307, 264, 3089, 300, 390, 1128, 3720, 11, 286, 2041, 13, 51114, 51114, 865, 11, 1338, 11, 3122, 13, 865, 11, 286, 959, 300, 309, 311, 445, 24387, 5893, 20076, 2602, 295, 17746, 257, 2121, 6838, 12199, 472, 570, 291, 727, 445, 35925, 729, 1214, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10556971793081246, "compression_ratio": 1.6844262295081966, "no_caption_prob": 4.908472328679636e-05}, {"id": 492, "seek": 411100, "start": 4126.0, "end": 4135.0, "text": " Yeah, yeah, absolutely. Yeah, I love that it's just CSS dot hover instead of generating a special tailwind one because you could just compose those together.", "tokens": [50364, 400, 611, 11, 309, 311, 1570, 2684, 3166, 13, 407, 562, 291, 434, 1228, 257, 19265, 11, 291, 576, 2642, 293, 291, 393, 411, 406, 764, 309, 2602, 13, 50814, 50814, 663, 311, 472, 1570, 2684, 644, 294, 300, 1389, 13, 407, 309, 311, 1009, 437, 286, 2748, 13, 440, 1151, 3089, 307, 264, 3089, 300, 390, 1128, 3720, 11, 286, 2041, 13, 51114, 51114, 865, 11, 1338, 11, 3122, 13, 865, 11, 286, 959, 300, 309, 311, 445, 24387, 5893, 20076, 2602, 295, 17746, 257, 2121, 6838, 12199, 472, 570, 291, 727, 445, 35925, 729, 1214, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10556971793081246, "compression_ratio": 1.6844262295081966, "no_caption_prob": 4.908472328679636e-05}, {"id": 493, "seek": 413500, "start": 4135.0, "end": 4144.0, "text": " I love how you say the best code is the one that has not been written and you generate a giant file with 2600 functions.", "tokens": [50364, 286, 959, 577, 291, 584, 264, 1151, 3089, 307, 264, 472, 300, 575, 406, 668, 3720, 293, 291, 8460, 257, 7410, 3991, 365, 7551, 628, 6828, 13, 50814, 50814, 286, 478, 1687, 12341, 13, 51064, 51064, 3996, 551, 11, 411, 562, 562, 1364, 365, 6838, 12199, 11, 286, 1697, 257, 688, 295, 561, 567, 589, 365, 6838, 12199, 362, 341, 1752, 300, 436, 10687, 10950, 322, 264, 45623, 293, 322, 6838, 12199, 15682, 294, 1729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09621274471282959, "compression_ratio": 1.5639810426540284, "no_caption_prob": 5.224988126428798e-05}, {"id": 494, "seek": 413500, "start": 4144.0, "end": 4149.0, "text": " I'm super guilty.", "tokens": [50364, 286, 959, 577, 291, 584, 264, 1151, 3089, 307, 264, 472, 300, 575, 406, 668, 3720, 293, 291, 8460, 257, 7410, 3991, 365, 7551, 628, 6828, 13, 50814, 50814, 286, 478, 1687, 12341, 13, 51064, 51064, 3996, 551, 11, 411, 562, 562, 1364, 365, 6838, 12199, 11, 286, 1697, 257, 688, 295, 561, 567, 589, 365, 6838, 12199, 362, 341, 1752, 300, 436, 10687, 10950, 322, 264, 45623, 293, 322, 6838, 12199, 15682, 294, 1729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09621274471282959, "compression_ratio": 1.5639810426540284, "no_caption_prob": 5.224988126428798e-05}, {"id": 495, "seek": 413500, "start": 4149.0, "end": 4161.0, "text": " Another thing, like when when working with tailwind, I believe a lot of people who work with tailwind have this experience that they rely heavily on the docs and on tailwind UI in particular.", "tokens": [50364, 286, 959, 577, 291, 584, 264, 1151, 3089, 307, 264, 472, 300, 575, 406, 668, 3720, 293, 291, 8460, 257, 7410, 3991, 365, 7551, 628, 6828, 13, 50814, 50814, 286, 478, 1687, 12341, 13, 51064, 51064, 3996, 551, 11, 411, 562, 562, 1364, 365, 6838, 12199, 11, 286, 1697, 257, 688, 295, 561, 567, 589, 365, 6838, 12199, 362, 341, 1752, 300, 436, 10687, 10950, 322, 264, 45623, 293, 322, 6838, 12199, 15682, 294, 1729, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09621274471282959, "compression_ratio": 1.5639810426540284, "no_caption_prob": 5.224988126428798e-05}, {"id": 496, "seek": 416100, "start": 4161.0, "end": 4165.0, "text": " It's a paid product. But if you use tailwind a lot, it's so helpful.", "tokens": [50364, 467, 311, 257, 4835, 1674, 13, 583, 498, 291, 764, 6838, 12199, 257, 688, 11, 309, 311, 370, 4961, 13, 50564, 50564, 467, 311, 411, 452, 6544, 337, 309, 570, 264, 1627, 551, 466, 309, 307, 309, 2709, 291, 613, 21165, 13, 50814, 50814, 583, 309, 311, 406, 411, 11450, 372, 4007, 21165, 689, 309, 1333, 295, 2709, 291, 257, 3758, 689, 309, 311, 411, 257, 2877, 11, 2877, 12379, 420, 257, 1442, 12379, 13, 51214, 51214, 467, 311, 411, 257, 22465, 935, 300, 291, 445, 29879, 382, 2978, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.05866303849727549, "compression_ratio": 1.7058823529411764, "no_caption_prob": 9.168552787741646e-05}, {"id": 497, "seek": 416100, "start": 4165.0, "end": 4170.0, "text": " It's like my Bible for it because the cool thing about it is it gives you these templates.", "tokens": [50364, 467, 311, 257, 4835, 1674, 13, 583, 498, 291, 764, 6838, 12199, 257, 688, 11, 309, 311, 370, 4961, 13, 50564, 50564, 467, 311, 411, 452, 6544, 337, 309, 570, 264, 1627, 551, 466, 309, 307, 309, 2709, 291, 613, 21165, 13, 50814, 50814, 583, 309, 311, 406, 411, 11450, 372, 4007, 21165, 689, 309, 1333, 295, 2709, 291, 257, 3758, 689, 309, 311, 411, 257, 2877, 11, 2877, 12379, 420, 257, 1442, 12379, 13, 51214, 51214, 467, 311, 411, 257, 22465, 935, 300, 291, 445, 29879, 382, 2978, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.05866303849727549, "compression_ratio": 1.7058823529411764, "no_caption_prob": 9.168552787741646e-05}, {"id": 498, "seek": 416100, "start": 4170.0, "end": 4178.0, "text": " But it's not like bootstrap templates where it sort of gives you a style where it's like a dark, dark template or a light template.", "tokens": [50364, 467, 311, 257, 4835, 1674, 13, 583, 498, 291, 764, 6838, 12199, 257, 688, 11, 309, 311, 370, 4961, 13, 50564, 50564, 467, 311, 411, 452, 6544, 337, 309, 570, 264, 1627, 551, 466, 309, 307, 309, 2709, 291, 613, 21165, 13, 50814, 50814, 583, 309, 311, 406, 411, 11450, 372, 4007, 21165, 689, 309, 1333, 295, 2709, 291, 257, 3758, 689, 309, 311, 411, 257, 2877, 11, 2877, 12379, 420, 257, 1442, 12379, 13, 51214, 51214, 467, 311, 411, 257, 22465, 935, 300, 291, 445, 29879, 382, 2978, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.05866303849727549, "compression_ratio": 1.7058823529411764, "no_caption_prob": 9.168552787741646e-05}, {"id": 499, "seek": 416100, "start": 4178.0, "end": 4182.0, "text": " It's like a starter point that you just tweak as needed.", "tokens": [50364, 467, 311, 257, 4835, 1674, 13, 583, 498, 291, 764, 6838, 12199, 257, 688, 11, 309, 311, 370, 4961, 13, 50564, 50564, 467, 311, 411, 452, 6544, 337, 309, 570, 264, 1627, 551, 466, 309, 307, 309, 2709, 291, 613, 21165, 13, 50814, 50814, 583, 309, 311, 406, 411, 11450, 372, 4007, 21165, 689, 309, 1333, 295, 2709, 291, 257, 3758, 689, 309, 311, 411, 257, 2877, 11, 2877, 12379, 420, 257, 1442, 12379, 13, 51214, 51214, 467, 311, 411, 257, 22465, 935, 300, 291, 445, 29879, 382, 2978, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.05866303849727549, "compression_ratio": 1.7058823529411764, "no_caption_prob": 9.168552787741646e-05}, {"id": 500, "seek": 418200, "start": 4182.0, "end": 4192.0, "text": " And so you can build off of it and turn it into something like not every tailwind site looks the same, whereas with like Twitter bootstrap, every site looks the same.", "tokens": [50364, 400, 370, 291, 393, 1322, 766, 295, 309, 293, 1261, 309, 666, 746, 411, 406, 633, 6838, 12199, 3621, 1542, 264, 912, 11, 9735, 365, 411, 5794, 11450, 372, 4007, 11, 633, 3621, 1542, 264, 912, 13, 50864, 50864, 400, 550, 1310, 291, 393, 980, 300, 746, 4960, 257, 1729, 5794, 11450, 372, 4007, 12379, 11, 457, 309, 445, 2962, 264, 2017, 12232, 293, 35316, 13, 51214, 51214, 1144, 321, 362, 281, 2152, 300, 321, 645, 406, 16621, 420, 30, 51364, 51364, 286, 458, 13, 2704, 420, 1310, 321, 820, 445, 1029, 552, 281, 18820, 45679, 16198, 505, 13, 51664, 51664, 14576, 665, 281, 385, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08560525720769709, "compression_ratio": 1.714828897338403, "no_caption_prob": 0.00026526389410719275}, {"id": 501, "seek": 418200, "start": 4192.0, "end": 4199.0, "text": " And then maybe you can tell that something uses a particular Twitter bootstrap template, but it just changes the color scheme and fonts.", "tokens": [50364, 400, 370, 291, 393, 1322, 766, 295, 309, 293, 1261, 309, 666, 746, 411, 406, 633, 6838, 12199, 3621, 1542, 264, 912, 11, 9735, 365, 411, 5794, 11450, 372, 4007, 11, 633, 3621, 1542, 264, 912, 13, 50864, 50864, 400, 550, 1310, 291, 393, 980, 300, 746, 4960, 257, 1729, 5794, 11450, 372, 4007, 12379, 11, 457, 309, 445, 2962, 264, 2017, 12232, 293, 35316, 13, 51214, 51214, 1144, 321, 362, 281, 2152, 300, 321, 645, 406, 16621, 420, 30, 51364, 51364, 286, 458, 13, 2704, 420, 1310, 321, 820, 445, 1029, 552, 281, 18820, 45679, 16198, 505, 13, 51664, 51664, 14576, 665, 281, 385, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08560525720769709, "compression_ratio": 1.714828897338403, "no_caption_prob": 0.00026526389410719275}, {"id": 502, "seek": 418200, "start": 4199.0, "end": 4202.0, "text": " Do we have to mention that we were not sponsored or?", "tokens": [50364, 400, 370, 291, 393, 1322, 766, 295, 309, 293, 1261, 309, 666, 746, 411, 406, 633, 6838, 12199, 3621, 1542, 264, 912, 11, 9735, 365, 411, 5794, 11450, 372, 4007, 11, 633, 3621, 1542, 264, 912, 13, 50864, 50864, 400, 550, 1310, 291, 393, 980, 300, 746, 4960, 257, 1729, 5794, 11450, 372, 4007, 12379, 11, 457, 309, 445, 2962, 264, 2017, 12232, 293, 35316, 13, 51214, 51214, 1144, 321, 362, 281, 2152, 300, 321, 645, 406, 16621, 420, 30, 51364, 51364, 286, 458, 13, 2704, 420, 1310, 321, 820, 445, 1029, 552, 281, 18820, 45679, 16198, 505, 13, 51664, 51664, 14576, 665, 281, 385, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08560525720769709, "compression_ratio": 1.714828897338403, "no_caption_prob": 0.00026526389410719275}, {"id": 503, "seek": 418200, "start": 4202.0, "end": 4208.0, "text": " I know. Maybe or maybe we should just ask them to retroactively sponsor us.", "tokens": [50364, 400, 370, 291, 393, 1322, 766, 295, 309, 293, 1261, 309, 666, 746, 411, 406, 633, 6838, 12199, 3621, 1542, 264, 912, 11, 9735, 365, 411, 5794, 11450, 372, 4007, 11, 633, 3621, 1542, 264, 912, 13, 50864, 50864, 400, 550, 1310, 291, 393, 980, 300, 746, 4960, 257, 1729, 5794, 11450, 372, 4007, 12379, 11, 457, 309, 445, 2962, 264, 2017, 12232, 293, 35316, 13, 51214, 51214, 1144, 321, 362, 281, 2152, 300, 321, 645, 406, 16621, 420, 30, 51364, 51364, 286, 458, 13, 2704, 420, 1310, 321, 820, 445, 1029, 552, 281, 18820, 45679, 16198, 505, 13, 51664, 51664, 14576, 665, 281, 385, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08560525720769709, "compression_ratio": 1.714828897338403, "no_caption_prob": 0.00026526389410719275}, {"id": 504, "seek": 418200, "start": 4208.0, "end": 4210.0, "text": " Sounds good to me.", "tokens": [50364, 400, 370, 291, 393, 1322, 766, 295, 309, 293, 1261, 309, 666, 746, 411, 406, 633, 6838, 12199, 3621, 1542, 264, 912, 11, 9735, 365, 411, 5794, 11450, 372, 4007, 11, 633, 3621, 1542, 264, 912, 13, 50864, 50864, 400, 550, 1310, 291, 393, 980, 300, 746, 4960, 257, 1729, 5794, 11450, 372, 4007, 12379, 11, 457, 309, 445, 2962, 264, 2017, 12232, 293, 35316, 13, 51214, 51214, 1144, 321, 362, 281, 2152, 300, 321, 645, 406, 16621, 420, 30, 51364, 51364, 286, 458, 13, 2704, 420, 1310, 321, 820, 445, 1029, 552, 281, 18820, 45679, 16198, 505, 13, 51664, 51664, 14576, 665, 281, 385, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08560525720769709, "compression_ratio": 1.714828897338403, "no_caption_prob": 0.00026526389410719275}, {"id": 505, "seek": 421000, "start": 4210.0, "end": 4219.0, "text": " So that's just super handy is using those templates and then you can tweak them and make it look like it's something you built a customized thing.", "tokens": [50364, 407, 300, 311, 445, 1687, 13239, 307, 1228, 729, 21165, 293, 550, 291, 393, 29879, 552, 293, 652, 309, 574, 411, 309, 311, 746, 291, 3094, 257, 30581, 551, 13, 50814, 50814, 1726, 411, 309, 311, 406, 4258, 40757, 570, 291, 393, 1261, 309, 666, 428, 1065, 574, 293, 841, 13, 51064, 51064, 583, 562, 291, 360, 300, 11, 291, 917, 493, 365, 439, 341, 39228, 37008, 3089, 570, 436, 7149, 721, 6460, 570, 309, 311, 445, 17995, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.04382203285952648, "compression_ratio": 1.6502242152466369, "no_caption_prob": 0.0006665370892733335}, {"id": 506, "seek": 421000, "start": 4219.0, "end": 4224.0, "text": " Not like it's not immediately recognizable because you can turn it into your own look and feel.", "tokens": [50364, 407, 300, 311, 445, 1687, 13239, 307, 1228, 729, 21165, 293, 550, 291, 393, 29879, 552, 293, 652, 309, 574, 411, 309, 311, 746, 291, 3094, 257, 30581, 551, 13, 50814, 50814, 1726, 411, 309, 311, 406, 4258, 40757, 570, 291, 393, 1261, 309, 666, 428, 1065, 574, 293, 841, 13, 51064, 51064, 583, 562, 291, 360, 300, 11, 291, 917, 493, 365, 439, 341, 39228, 37008, 3089, 570, 436, 7149, 721, 6460, 570, 309, 311, 445, 17995, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.04382203285952648, "compression_ratio": 1.6502242152466369, "no_caption_prob": 0.0006665370892733335}, {"id": 507, "seek": 421000, "start": 4224.0, "end": 4231.0, "text": " But when you do that, you end up with all this boilerplate code because they repeat things constantly because it's just HTML.", "tokens": [50364, 407, 300, 311, 445, 1687, 13239, 307, 1228, 729, 21165, 293, 550, 291, 393, 29879, 552, 293, 652, 309, 574, 411, 309, 311, 746, 291, 3094, 257, 30581, 551, 13, 50814, 50814, 1726, 411, 309, 311, 406, 4258, 40757, 570, 291, 393, 1261, 309, 666, 428, 1065, 574, 293, 841, 13, 51064, 51064, 583, 562, 291, 360, 300, 11, 291, 917, 493, 365, 439, 341, 39228, 37008, 3089, 570, 436, 7149, 721, 6460, 570, 309, 311, 445, 17995, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.04382203285952648, "compression_ratio": 1.6502242152466369, "no_caption_prob": 0.0006665370892733335}, {"id": 508, "seek": 423100, "start": 4231.0, "end": 4245.0, "text": " So you'll have like, you know, if you copy paste one of their nav bar examples, then you'll have like, you know, an unordered list of list items with like 10 list items for all the nav bar content.", "tokens": [50364, 407, 291, 603, 362, 411, 11, 291, 458, 11, 498, 291, 5055, 9163, 472, 295, 641, 5947, 2159, 5110, 11, 550, 291, 603, 362, 411, 11, 291, 458, 11, 364, 517, 765, 4073, 1329, 295, 1329, 4754, 365, 411, 1266, 1329, 4754, 337, 439, 264, 5947, 2159, 2701, 13, 51064, 51064, 400, 264, 912, 6838, 12199, 24387, 5359, 366, 6456, 281, 439, 295, 264, 517, 405, 1809, 292, 5947, 2159, 4959, 13, 51414, 51414, 400, 550, 264, 2190, 3028, 300, 311, 322, 575, 257, 2685, 472, 570, 309, 311, 406, 411, 257, 15778, 8388, 13, 51664, 51664, 467, 311, 445, 17995, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04640215747761277, "compression_ratio": 1.6584362139917694, "no_caption_prob": 0.0001823379279812798}, {"id": 509, "seek": 423100, "start": 4245.0, "end": 4252.0, "text": " And the same tailwind CSS classes are applied to all of the unselected nav bar elements.", "tokens": [50364, 407, 291, 603, 362, 411, 11, 291, 458, 11, 498, 291, 5055, 9163, 472, 295, 641, 5947, 2159, 5110, 11, 550, 291, 603, 362, 411, 11, 291, 458, 11, 364, 517, 765, 4073, 1329, 295, 1329, 4754, 365, 411, 1266, 1329, 4754, 337, 439, 264, 5947, 2159, 2701, 13, 51064, 51064, 400, 264, 912, 6838, 12199, 24387, 5359, 366, 6456, 281, 439, 295, 264, 517, 405, 1809, 292, 5947, 2159, 4959, 13, 51414, 51414, 400, 550, 264, 2190, 3028, 300, 311, 322, 575, 257, 2685, 472, 570, 309, 311, 406, 411, 257, 15778, 8388, 13, 51664, 51664, 467, 311, 445, 17995, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04640215747761277, "compression_ratio": 1.6584362139917694, "no_caption_prob": 0.0001823379279812798}, {"id": 510, "seek": 423100, "start": 4252.0, "end": 4257.0, "text": " And then the current page that's on has a specific one because it's not like a JavaScript framework.", "tokens": [50364, 407, 291, 603, 362, 411, 11, 291, 458, 11, 498, 291, 5055, 9163, 472, 295, 641, 5947, 2159, 5110, 11, 550, 291, 603, 362, 411, 11, 291, 458, 11, 364, 517, 765, 4073, 1329, 295, 1329, 4754, 365, 411, 1266, 1329, 4754, 337, 439, 264, 5947, 2159, 2701, 13, 51064, 51064, 400, 264, 912, 6838, 12199, 24387, 5359, 366, 6456, 281, 439, 295, 264, 517, 405, 1809, 292, 5947, 2159, 4959, 13, 51414, 51414, 400, 550, 264, 2190, 3028, 300, 311, 322, 575, 257, 2685, 472, 570, 309, 311, 406, 411, 257, 15778, 8388, 13, 51664, 51664, 467, 311, 445, 17995, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04640215747761277, "compression_ratio": 1.6584362139917694, "no_caption_prob": 0.0001823379279812798}, {"id": 511, "seek": 423100, "start": 4257.0, "end": 4259.0, "text": " It's just HTML.", "tokens": [50364, 407, 291, 603, 362, 411, 11, 291, 458, 11, 498, 291, 5055, 9163, 472, 295, 641, 5947, 2159, 5110, 11, 550, 291, 603, 362, 411, 11, 291, 458, 11, 364, 517, 765, 4073, 1329, 295, 1329, 4754, 365, 411, 1266, 1329, 4754, 337, 439, 264, 5947, 2159, 2701, 13, 51064, 51064, 400, 264, 912, 6838, 12199, 24387, 5359, 366, 6456, 281, 439, 295, 264, 517, 405, 1809, 292, 5947, 2159, 4959, 13, 51414, 51414, 400, 550, 264, 2190, 3028, 300, 311, 322, 575, 257, 2685, 472, 570, 309, 311, 406, 411, 257, 15778, 8388, 13, 51664, 51664, 467, 311, 445, 17995, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04640215747761277, "compression_ratio": 1.6584362139917694, "no_caption_prob": 0.0001823379279812798}, {"id": 512, "seek": 425900, "start": 4259.0, "end": 4264.0, "text": " So then you have to sort of reverse engineer pulling that up into abstractions.", "tokens": [50364, 407, 550, 291, 362, 281, 1333, 295, 9943, 11403, 8407, 300, 493, 666, 12649, 626, 13, 50614, 50614, 407, 300, 311, 1071, 1151, 3124, 337, 561, 281, 1066, 294, 1575, 307, 286, 576, 584, 411, 722, 365, 445, 1242, 300, 12379, 322, 264, 3028, 293, 550, 9943, 11403, 309, 807, 1895, 578, 3662, 13, 51214, 51214, 1743, 291, 393, 2140, 281, 527, 2699, 76, 17296, 35759, 4439, 3500, 293, 300, 311, 264, 3109, 286, 576, 2748, 337, 26200, 379, 1895, 578, 3662, 281, 2235, 493, 729, 12649, 626, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.054873435728011594, "compression_ratio": 1.7377049180327868, "no_caption_prob": 3.219116115360521e-05}, {"id": 513, "seek": 425900, "start": 4264.0, "end": 4276.0, "text": " So that's another best practice for people to keep in mind is I would say like start with just getting that template on the page and then reverse engineer it through refactoring.", "tokens": [50364, 407, 550, 291, 362, 281, 1333, 295, 9943, 11403, 8407, 300, 493, 666, 12649, 626, 13, 50614, 50614, 407, 300, 311, 1071, 1151, 3124, 337, 561, 281, 1066, 294, 1575, 307, 286, 576, 584, 411, 722, 365, 445, 1242, 300, 12379, 322, 264, 3028, 293, 550, 9943, 11403, 309, 807, 1895, 578, 3662, 13, 51214, 51214, 1743, 291, 393, 2140, 281, 527, 2699, 76, 17296, 35759, 4439, 3500, 293, 300, 311, 264, 3109, 286, 576, 2748, 337, 26200, 379, 1895, 578, 3662, 281, 2235, 493, 729, 12649, 626, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.054873435728011594, "compression_ratio": 1.7377049180327868, "no_caption_prob": 3.219116115360521e-05}, {"id": 514, "seek": 425900, "start": 4276.0, "end": 4286.0, "text": " Like you can listen to our Elm Radio incremental steps episode and that's the approach I would recommend for incrementally refactoring to pull up those abstractions.", "tokens": [50364, 407, 550, 291, 362, 281, 1333, 295, 9943, 11403, 8407, 300, 493, 666, 12649, 626, 13, 50614, 50614, 407, 300, 311, 1071, 1151, 3124, 337, 561, 281, 1066, 294, 1575, 307, 286, 576, 584, 411, 722, 365, 445, 1242, 300, 12379, 322, 264, 3028, 293, 550, 9943, 11403, 309, 807, 1895, 578, 3662, 13, 51214, 51214, 1743, 291, 393, 2140, 281, 527, 2699, 76, 17296, 35759, 4439, 3500, 293, 300, 311, 264, 3109, 286, 576, 2748, 337, 26200, 379, 1895, 578, 3662, 281, 2235, 493, 729, 12649, 626, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.054873435728011594, "compression_ratio": 1.7377049180327868, "no_caption_prob": 3.219116115360521e-05}, {"id": 515, "seek": 428600, "start": 4286.0, "end": 4294.0, "text": " But don't try to do that, like at the same time to refactor and extract those abstractions as you're getting your layout working.", "tokens": [50364, 583, 500, 380, 853, 281, 360, 300, 11, 411, 412, 264, 912, 565, 281, 1895, 15104, 293, 8947, 729, 12649, 626, 382, 291, 434, 1242, 428, 13333, 1364, 13, 50764, 50764, 3240, 309, 411, 22407, 293, 550, 707, 538, 707, 8947, 484, 9834, 293, 1884, 12649, 626, 13, 51114, 51114, 286, 600, 2762, 300, 286, 1415, 281, 12649, 721, 611, 588, 2049, 13, 51314, 51314, 286, 390, 1953, 11, 4177, 11, 286, 600, 1143, 264, 912, 3166, 295, 264, 912, 992, 295, 3199, 293, 15682, 5359, 294, 3866, 3190, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07605393389438062, "compression_ratio": 1.7074235807860263, "no_caption_prob": 3.024145553354174e-05}, {"id": 516, "seek": 428600, "start": 4294.0, "end": 4301.0, "text": " Get it like rendering and then little by little extract out parameters and create abstractions.", "tokens": [50364, 583, 500, 380, 853, 281, 360, 300, 11, 411, 412, 264, 912, 565, 281, 1895, 15104, 293, 8947, 729, 12649, 626, 382, 291, 434, 1242, 428, 13333, 1364, 13, 50764, 50764, 3240, 309, 411, 22407, 293, 550, 707, 538, 707, 8947, 484, 9834, 293, 1884, 12649, 626, 13, 51114, 51114, 286, 600, 2762, 300, 286, 1415, 281, 12649, 721, 611, 588, 2049, 13, 51314, 51314, 286, 390, 1953, 11, 4177, 11, 286, 600, 1143, 264, 912, 3166, 295, 264, 912, 992, 295, 3199, 293, 15682, 5359, 294, 3866, 3190, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07605393389438062, "compression_ratio": 1.7074235807860263, "no_caption_prob": 3.024145553354174e-05}, {"id": 517, "seek": 428600, "start": 4301.0, "end": 4305.0, "text": " I've felt that I wanted to abstract things also very often.", "tokens": [50364, 583, 500, 380, 853, 281, 360, 300, 11, 411, 412, 264, 912, 565, 281, 1895, 15104, 293, 8947, 729, 12649, 626, 382, 291, 434, 1242, 428, 13333, 1364, 13, 50764, 50764, 3240, 309, 411, 22407, 293, 550, 707, 538, 707, 8947, 484, 9834, 293, 1884, 12649, 626, 13, 51114, 51114, 286, 600, 2762, 300, 286, 1415, 281, 12649, 721, 611, 588, 2049, 13, 51314, 51314, 286, 390, 1953, 11, 4177, 11, 286, 600, 1143, 264, 912, 3166, 295, 264, 912, 992, 295, 3199, 293, 15682, 5359, 294, 3866, 3190, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07605393389438062, "compression_ratio": 1.7074235807860263, "no_caption_prob": 3.024145553354174e-05}, {"id": 518, "seek": 428600, "start": 4305.0, "end": 4312.0, "text": " I was thinking, hey, I've used the same parts of the same set of table and UI classes in multiple places.", "tokens": [50364, 583, 500, 380, 853, 281, 360, 300, 11, 411, 412, 264, 912, 565, 281, 1895, 15104, 293, 8947, 729, 12649, 626, 382, 291, 434, 1242, 428, 13333, 1364, 13, 50764, 50764, 3240, 309, 411, 22407, 293, 550, 707, 538, 707, 8947, 484, 9834, 293, 1884, 12649, 626, 13, 51114, 51114, 286, 600, 2762, 300, 286, 1415, 281, 12649, 721, 611, 588, 2049, 13, 51314, 51314, 286, 390, 1953, 11, 4177, 11, 286, 600, 1143, 264, 912, 3166, 295, 264, 912, 992, 295, 3199, 293, 15682, 5359, 294, 3866, 3190, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07605393389438062, "compression_ratio": 1.7074235807860263, "no_caption_prob": 3.024145553354174e-05}, {"id": 519, "seek": 431200, "start": 4312.0, "end": 4320.0, "text": " Maybe I should abstract it, but it should be really painfully aware that you have to abstract this when you're doing this.", "tokens": [50364, 2704, 286, 820, 12649, 309, 11, 457, 309, 820, 312, 534, 1822, 2277, 3650, 300, 291, 362, 281, 12649, 341, 562, 291, 434, 884, 341, 13, 50764, 50764, 407, 294, 264, 917, 11, 286, 2049, 4590, 493, 920, 16493, 512, 3166, 293, 550, 436, 500, 380, 2995, 493, 2293, 293, 12649, 278, 2170, 1152, 13, 51114, 51114, 583, 1338, 11, 2891, 490, 613, 9859, 5110, 11, 2318, 13232, 15682, 11, 597, 307, 869, 13, 51364, 51364, 467, 311, 534, 4420, 293, 4961, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0682755996441019, "compression_ratio": 1.5974025974025974, "no_caption_prob": 3.4807286283466965e-05}, {"id": 520, "seek": 431200, "start": 4320.0, "end": 4327.0, "text": " So in the end, I often ended up still switching some parts and then they don't match up exactly and abstracting gets hard.", "tokens": [50364, 2704, 286, 820, 12649, 309, 11, 457, 309, 820, 312, 534, 1822, 2277, 3650, 300, 291, 362, 281, 12649, 341, 562, 291, 434, 884, 341, 13, 50764, 50764, 407, 294, 264, 917, 11, 286, 2049, 4590, 493, 920, 16493, 512, 3166, 293, 550, 436, 500, 380, 2995, 493, 2293, 293, 12649, 278, 2170, 1152, 13, 51114, 51114, 583, 1338, 11, 2891, 490, 613, 9859, 5110, 11, 2318, 13232, 15682, 11, 597, 307, 869, 13, 51364, 51364, 467, 311, 534, 4420, 293, 4961, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0682755996441019, "compression_ratio": 1.5974025974025974, "no_caption_prob": 3.4807286283466965e-05}, {"id": 521, "seek": 431200, "start": 4327.0, "end": 4332.0, "text": " But yeah, starting from these concrete examples, especially intelligent UI, which is great.", "tokens": [50364, 2704, 286, 820, 12649, 309, 11, 457, 309, 820, 312, 534, 1822, 2277, 3650, 300, 291, 362, 281, 12649, 341, 562, 291, 434, 884, 341, 13, 50764, 50764, 407, 294, 264, 917, 11, 286, 2049, 4590, 493, 920, 16493, 512, 3166, 293, 550, 436, 500, 380, 2995, 493, 2293, 293, 12649, 278, 2170, 1152, 13, 51114, 51114, 583, 1338, 11, 2891, 490, 613, 9859, 5110, 11, 2318, 13232, 15682, 11, 597, 307, 869, 13, 51364, 51364, 467, 311, 534, 4420, 293, 4961, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0682755996441019, "compression_ratio": 1.5974025974025974, "no_caption_prob": 3.4807286283466965e-05}, {"id": 522, "seek": 431200, "start": 4332.0, "end": 4335.0, "text": " It's really useful and helpful.", "tokens": [50364, 2704, 286, 820, 12649, 309, 11, 457, 309, 820, 312, 534, 1822, 2277, 3650, 300, 291, 362, 281, 12649, 341, 562, 291, 434, 884, 341, 13, 50764, 50764, 407, 294, 264, 917, 11, 286, 2049, 4590, 493, 920, 16493, 512, 3166, 293, 550, 436, 500, 380, 2995, 493, 2293, 293, 12649, 278, 2170, 1152, 13, 51114, 51114, 583, 1338, 11, 2891, 490, 613, 9859, 5110, 11, 2318, 13232, 15682, 11, 597, 307, 869, 13, 51364, 51364, 467, 311, 534, 4420, 293, 4961, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0682755996441019, "compression_ratio": 1.5974025974025974, "no_caption_prob": 3.4807286283466965e-05}, {"id": 523, "seek": 433500, "start": 4335.0, "end": 4347.0, "text": " And then once it really gets painful and you really think this gets repeated a lot, then you can start abstracting and grouping, for example, some CSS utility class.", "tokens": [50364, 400, 550, 1564, 309, 534, 2170, 11697, 293, 291, 534, 519, 341, 2170, 10477, 257, 688, 11, 550, 291, 393, 722, 12649, 278, 293, 40149, 11, 337, 1365, 11, 512, 24387, 14877, 1508, 13, 50964, 50964, 1779, 13, 663, 311, 257, 869, 935, 13, 286, 519, 7938, 343, 3293, 259, 6686, 466, 341, 257, 688, 11, 411, 322, 702, 322, 13841, 372, 501, 17296, 11, 702, 7367, 13, 51364, 51364, 634, 309, 311, 1627, 570, 291, 393, 1333, 295, 483, 666, 702, 3567, 257, 707, 857, 293, 1568, 264, 636, 415, 7309, 466, 613, 721, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09113786697387695, "compression_ratio": 1.6088709677419355, "no_caption_prob": 9.760718967299908e-05}, {"id": 524, "seek": 433500, "start": 4347.0, "end": 4355.0, "text": " Right. That's a great point. I think Adam Wethin talks about this a lot, like on his on Fullstack Radio, his podcast.", "tokens": [50364, 400, 550, 1564, 309, 534, 2170, 11697, 293, 291, 534, 519, 341, 2170, 10477, 257, 688, 11, 550, 291, 393, 722, 12649, 278, 293, 40149, 11, 337, 1365, 11, 512, 24387, 14877, 1508, 13, 50964, 50964, 1779, 13, 663, 311, 257, 869, 935, 13, 286, 519, 7938, 343, 3293, 259, 6686, 466, 341, 257, 688, 11, 411, 322, 702, 322, 13841, 372, 501, 17296, 11, 702, 7367, 13, 51364, 51364, 634, 309, 311, 1627, 570, 291, 393, 1333, 295, 483, 666, 702, 3567, 257, 707, 857, 293, 1568, 264, 636, 415, 7309, 466, 613, 721, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09113786697387695, "compression_ratio": 1.6088709677419355, "no_caption_prob": 9.760718967299908e-05}, {"id": 525, "seek": 433500, "start": 4355.0, "end": 4361.0, "text": " He it's cool because you can sort of get into his brain a little bit and hear the way he thinks about these things.", "tokens": [50364, 400, 550, 1564, 309, 534, 2170, 11697, 293, 291, 534, 519, 341, 2170, 10477, 257, 688, 11, 550, 291, 393, 722, 12649, 278, 293, 40149, 11, 337, 1365, 11, 512, 24387, 14877, 1508, 13, 50964, 50964, 1779, 13, 663, 311, 257, 869, 935, 13, 286, 519, 7938, 343, 3293, 259, 6686, 466, 341, 257, 688, 11, 411, 322, 702, 322, 13841, 372, 501, 17296, 11, 702, 7367, 13, 51364, 51364, 634, 309, 311, 1627, 570, 291, 393, 1333, 295, 483, 666, 702, 3567, 257, 707, 857, 293, 1568, 264, 636, 415, 7309, 466, 613, 721, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09113786697387695, "compression_ratio": 1.6088709677419355, "no_caption_prob": 9.760718967299908e-05}, {"id": 526, "seek": 436100, "start": 4361.0, "end": 4367.0, "text": " And so I'll post a few links in the show notes to some episodes where he talks about the philosophy behind Tailwind CSS.", "tokens": [50364, 400, 370, 286, 603, 2183, 257, 1326, 6123, 294, 264, 855, 5570, 281, 512, 9313, 689, 415, 6686, 466, 264, 10675, 2261, 46074, 12199, 24387, 13, 50664, 50664, 583, 472, 551, 300, 1487, 493, 2049, 307, 415, 6686, 466, 577, 561, 362, 341, 4240, 295, 11, 1699, 257, 3456, 11, 439, 613, 14877, 5359, 294, 1622, 294, 452, 17995, 11, 309, 311, 516, 281, 312, 257, 6237, 1752, 13, 51214, 51214, 400, 415, 311, 411, 11, 731, 11, 286, 914, 11, 498, 291, 362, 411, 2119, 14877, 5359, 322, 428, 5947, 2159, 11, 457, 264, 5947, 2159, 307, 264, 787, 472, 300, 575, 300, 2685, 992, 295, 2119, 14877, 5359, 11, 309, 311, 2489, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057217978629745356, "compression_ratio": 1.6890459363957597, "no_caption_prob": 0.0001851814886322245}, {"id": 527, "seek": 436100, "start": 4367.0, "end": 4378.0, "text": " But one thing that comes up often is he talks about how people have this fear of, wait a minute, all these utility classes in line in my HTML, it's going to be a terrible experience.", "tokens": [50364, 400, 370, 286, 603, 2183, 257, 1326, 6123, 294, 264, 855, 5570, 281, 512, 9313, 689, 415, 6686, 466, 264, 10675, 2261, 46074, 12199, 24387, 13, 50664, 50664, 583, 472, 551, 300, 1487, 493, 2049, 307, 415, 6686, 466, 577, 561, 362, 341, 4240, 295, 11, 1699, 257, 3456, 11, 439, 613, 14877, 5359, 294, 1622, 294, 452, 17995, 11, 309, 311, 516, 281, 312, 257, 6237, 1752, 13, 51214, 51214, 400, 415, 311, 411, 11, 731, 11, 286, 914, 11, 498, 291, 362, 411, 2119, 14877, 5359, 322, 428, 5947, 2159, 11, 457, 264, 5947, 2159, 307, 264, 787, 472, 300, 575, 300, 2685, 992, 295, 2119, 14877, 5359, 11, 309, 311, 2489, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057217978629745356, "compression_ratio": 1.6890459363957597, "no_caption_prob": 0.0001851814886322245}, {"id": 528, "seek": 436100, "start": 4378.0, "end": 4390.0, "text": " And he's like, well, I mean, if you have like 15 utility classes on your nav bar, but the nav bar is the only one that has that specific set of 15 utility classes, it's fine.", "tokens": [50364, 400, 370, 286, 603, 2183, 257, 1326, 6123, 294, 264, 855, 5570, 281, 512, 9313, 689, 415, 6686, 466, 264, 10675, 2261, 46074, 12199, 24387, 13, 50664, 50664, 583, 472, 551, 300, 1487, 493, 2049, 307, 415, 6686, 466, 577, 561, 362, 341, 4240, 295, 11, 1699, 257, 3456, 11, 439, 613, 14877, 5359, 294, 1622, 294, 452, 17995, 11, 309, 311, 516, 281, 312, 257, 6237, 1752, 13, 51214, 51214, 400, 415, 311, 411, 11, 731, 11, 286, 914, 11, 498, 291, 362, 411, 2119, 14877, 5359, 322, 428, 5947, 2159, 11, 457, 264, 5947, 2159, 307, 264, 787, 472, 300, 575, 300, 2685, 992, 295, 2119, 14877, 5359, 11, 309, 311, 2489, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057217978629745356, "compression_ratio": 1.6890459363957597, "no_caption_prob": 0.0001851814886322245}, {"id": 529, "seek": 439000, "start": 4390.0, "end": 4396.0, "text": " You don't need to abstract that. And people at first are horrified and they're like, surely I have to abstract this.", "tokens": [50364, 509, 500, 380, 643, 281, 12649, 300, 13, 400, 561, 412, 700, 366, 17582, 2587, 293, 436, 434, 411, 11, 11468, 286, 362, 281, 12649, 341, 13, 50664, 50664, 583, 415, 311, 411, 11, 731, 11, 498, 300, 311, 264, 472, 1081, 309, 3110, 493, 11, 309, 311, 12649, 292, 294, 341, 1818, 13, 50864, 50864, 509, 458, 11, 1310, 291, 362, 257, 30644, 6542, 420, 11, 291, 458, 11, 364, 2699, 76, 10088, 420, 2035, 337, 428, 5947, 2159, 300, 12649, 82, 300, 13, 51264, 51264, 663, 311, 2489, 13, 1449, 1856, 309, 456, 365, 729, 2119, 46074, 12199, 30482, 294, 1622, 13, 467, 311, 6239, 2489, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05721825624989197, "compression_ratio": 1.6106870229007633, "no_caption_prob": 3.76357274944894e-05}, {"id": 530, "seek": 439000, "start": 4396.0, "end": 4400.0, "text": " But he's like, well, if that's the one place it shows up, it's abstracted in this night.", "tokens": [50364, 509, 500, 380, 643, 281, 12649, 300, 13, 400, 561, 412, 700, 366, 17582, 2587, 293, 436, 434, 411, 11, 11468, 286, 362, 281, 12649, 341, 13, 50664, 50664, 583, 415, 311, 411, 11, 731, 11, 498, 300, 311, 264, 472, 1081, 309, 3110, 493, 11, 309, 311, 12649, 292, 294, 341, 1818, 13, 50864, 50864, 509, 458, 11, 1310, 291, 362, 257, 30644, 6542, 420, 11, 291, 458, 11, 364, 2699, 76, 10088, 420, 2035, 337, 428, 5947, 2159, 300, 12649, 82, 300, 13, 51264, 51264, 663, 311, 2489, 13, 1449, 1856, 309, 456, 365, 729, 2119, 46074, 12199, 30482, 294, 1622, 13, 467, 311, 6239, 2489, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05721825624989197, "compression_ratio": 1.6106870229007633, "no_caption_prob": 3.76357274944894e-05}, {"id": 531, "seek": 439000, "start": 4400.0, "end": 4408.0, "text": " You know, maybe you have a React component or, you know, an Elm module or whatever for your nav bar that abstracts that.", "tokens": [50364, 509, 500, 380, 643, 281, 12649, 300, 13, 400, 561, 412, 700, 366, 17582, 2587, 293, 436, 434, 411, 11, 11468, 286, 362, 281, 12649, 341, 13, 50664, 50664, 583, 415, 311, 411, 11, 731, 11, 498, 300, 311, 264, 472, 1081, 309, 3110, 493, 11, 309, 311, 12649, 292, 294, 341, 1818, 13, 50864, 50864, 509, 458, 11, 1310, 291, 362, 257, 30644, 6542, 420, 11, 291, 458, 11, 364, 2699, 76, 10088, 420, 2035, 337, 428, 5947, 2159, 300, 12649, 82, 300, 13, 51264, 51264, 663, 311, 2489, 13, 1449, 1856, 309, 456, 365, 729, 2119, 46074, 12199, 30482, 294, 1622, 13, 467, 311, 6239, 2489, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05721825624989197, "compression_ratio": 1.6106870229007633, "no_caption_prob": 3.76357274944894e-05}, {"id": 532, "seek": 439000, "start": 4408.0, "end": 4414.0, "text": " That's fine. Just leave it there with those 15 Tailwind utilities in line. It's perfectly fine.", "tokens": [50364, 509, 500, 380, 643, 281, 12649, 300, 13, 400, 561, 412, 700, 366, 17582, 2587, 293, 436, 434, 411, 11, 11468, 286, 362, 281, 12649, 341, 13, 50664, 50664, 583, 415, 311, 411, 11, 731, 11, 498, 300, 311, 264, 472, 1081, 309, 3110, 493, 11, 309, 311, 12649, 292, 294, 341, 1818, 13, 50864, 50864, 509, 458, 11, 1310, 291, 362, 257, 30644, 6542, 420, 11, 291, 458, 11, 364, 2699, 76, 10088, 420, 2035, 337, 428, 5947, 2159, 300, 12649, 82, 300, 13, 51264, 51264, 663, 311, 2489, 13, 1449, 1856, 309, 456, 365, 729, 2119, 46074, 12199, 30482, 294, 1622, 13, 467, 311, 6239, 2489, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05721825624989197, "compression_ratio": 1.6106870229007633, "no_caption_prob": 3.76357274944894e-05}, {"id": 533, "seek": 441400, "start": 4414.0, "end": 4420.0, "text": " I think Tailwind CSS land, lots of people have a similar reaction to the at apply functionality.", "tokens": [50364, 286, 519, 46074, 12199, 24387, 2117, 11, 3195, 295, 561, 362, 257, 2531, 5480, 281, 264, 412, 3079, 14980, 13, 50664, 50664, 400, 436, 1029, 411, 11, 562, 820, 286, 722, 1228, 412, 3079, 293, 411, 1455, 452, 1065, 11, 337, 1365, 11, 2960, 1508, 30, 51014, 51014, 400, 264, 6338, 366, 588, 2531, 13, 400, 436, 434, 439, 411, 11, 1699, 309, 11, 1699, 337, 309, 13, 1449, 1856, 309, 411, 309, 307, 293, 360, 309, 382, 3469, 382, 291, 393, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13875437330925602, "compression_ratio": 1.5829383886255923, "no_caption_prob": 1.69640716194408e-05}, {"id": 534, "seek": 441400, "start": 4420.0, "end": 4427.0, "text": " And they ask like, when should I start using at apply and like making my own, for example, button class?", "tokens": [50364, 286, 519, 46074, 12199, 24387, 2117, 11, 3195, 295, 561, 362, 257, 2531, 5480, 281, 264, 412, 3079, 14980, 13, 50664, 50664, 400, 436, 1029, 411, 11, 562, 820, 286, 722, 1228, 412, 3079, 293, 411, 1455, 452, 1065, 11, 337, 1365, 11, 2960, 1508, 30, 51014, 51014, 400, 264, 6338, 366, 588, 2531, 13, 400, 436, 434, 439, 411, 11, 1699, 309, 11, 1699, 337, 309, 13, 1449, 1856, 309, 411, 309, 307, 293, 360, 309, 382, 3469, 382, 291, 393, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13875437330925602, "compression_ratio": 1.5829383886255923, "no_caption_prob": 1.69640716194408e-05}, {"id": 535, "seek": 441400, "start": 4427.0, "end": 4436.0, "text": " And the answers are very similar. And they're all like, wait it, wait for it. Just leave it like it is and do it as late as you can.", "tokens": [50364, 286, 519, 46074, 12199, 24387, 2117, 11, 3195, 295, 561, 362, 257, 2531, 5480, 281, 264, 412, 3079, 14980, 13, 50664, 50664, 400, 436, 1029, 411, 11, 562, 820, 286, 722, 1228, 412, 3079, 293, 411, 1455, 452, 1065, 11, 337, 1365, 11, 2960, 1508, 30, 51014, 51014, 400, 264, 6338, 366, 588, 2531, 13, 400, 436, 434, 439, 411, 11, 1699, 309, 11, 1699, 337, 309, 13, 1449, 1856, 309, 411, 309, 307, 293, 360, 309, 382, 3469, 382, 291, 393, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.13875437330925602, "compression_ratio": 1.5829383886255923, "no_caption_prob": 1.69640716194408e-05}, {"id": 536, "seek": 443600, "start": 4436.0, "end": 4447.0, "text": " And it really, most people, I think, try to abstract too early and that applies to at apply or grouping CSS Tailwind utilities with Elm CSS.", "tokens": [50364, 400, 309, 534, 11, 881, 561, 11, 286, 519, 11, 853, 281, 12649, 886, 2440, 293, 300, 13165, 281, 412, 3079, 420, 40149, 24387, 46074, 12199, 30482, 365, 2699, 76, 24387, 13, 50914, 50914, 1042, 11, 869, 1507, 13, 286, 519, 321, 600, 2212, 561, 257, 688, 281, 21200, 322, 510, 13, 400, 1309, 291, 797, 337, 2390, 341, 534, 7496, 2290, 13, 51364, 51364, 467, 311, 668, 35194, 281, 764, 13, 286, 600, 4626, 309, 1596, 257, 857, 13, 1044, 291, 13, 51564, 51564, 407, 11, 13694, 11, 577, 820, 561, 483, 1409, 365, 264, 2699, 76, 46074, 12199, 16679, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1017241747874134, "compression_ratio": 1.5708812260536398, "no_caption_prob": 5.920663534197956e-05}, {"id": 537, "seek": 443600, "start": 4447.0, "end": 4456.0, "text": " Well, great stuff. I think we've given people a lot to chew on here. And thank you again for building this really lovely tool.", "tokens": [50364, 400, 309, 534, 11, 881, 561, 11, 286, 519, 11, 853, 281, 12649, 886, 2440, 293, 300, 13165, 281, 412, 3079, 420, 40149, 24387, 46074, 12199, 30482, 365, 2699, 76, 24387, 13, 50914, 50914, 1042, 11, 869, 1507, 13, 286, 519, 321, 600, 2212, 561, 257, 688, 281, 21200, 322, 510, 13, 400, 1309, 291, 797, 337, 2390, 341, 534, 7496, 2290, 13, 51364, 51364, 467, 311, 668, 35194, 281, 764, 13, 286, 600, 4626, 309, 1596, 257, 857, 13, 1044, 291, 13, 51564, 51564, 407, 11, 13694, 11, 577, 820, 561, 483, 1409, 365, 264, 2699, 76, 46074, 12199, 16679, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1017241747874134, "compression_ratio": 1.5708812260536398, "no_caption_prob": 5.920663534197956e-05}, {"id": 538, "seek": 443600, "start": 4456.0, "end": 4460.0, "text": " It's been delightful to use. I've enjoyed it quite a bit. Thank you.", "tokens": [50364, 400, 309, 534, 11, 881, 561, 11, 286, 519, 11, 853, 281, 12649, 886, 2440, 293, 300, 13165, 281, 412, 3079, 420, 40149, 24387, 46074, 12199, 30482, 365, 2699, 76, 24387, 13, 50914, 50914, 1042, 11, 869, 1507, 13, 286, 519, 321, 600, 2212, 561, 257, 688, 281, 21200, 322, 510, 13, 400, 1309, 291, 797, 337, 2390, 341, 534, 7496, 2290, 13, 51364, 51364, 467, 311, 668, 35194, 281, 764, 13, 286, 600, 4626, 309, 1596, 257, 857, 13, 1044, 291, 13, 51564, 51564, 407, 11, 13694, 11, 577, 820, 561, 483, 1409, 365, 264, 2699, 76, 46074, 12199, 16679, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1017241747874134, "compression_ratio": 1.5708812260536398, "no_caption_prob": 5.920663534197956e-05}, {"id": 539, "seek": 443600, "start": 4460.0, "end": 4464.0, "text": " So, Philipp, how should people get started with the Elm Tailwind modules?", "tokens": [50364, 400, 309, 534, 11, 881, 561, 11, 286, 519, 11, 853, 281, 12649, 886, 2440, 293, 300, 13165, 281, 412, 3079, 420, 40149, 24387, 46074, 12199, 30482, 365, 2699, 76, 24387, 13, 50914, 50914, 1042, 11, 869, 1507, 13, 286, 519, 321, 600, 2212, 561, 257, 688, 281, 21200, 322, 510, 13, 400, 1309, 291, 797, 337, 2390, 341, 534, 7496, 2290, 13, 51364, 51364, 467, 311, 668, 35194, 281, 764, 13, 286, 600, 4626, 309, 1596, 257, 857, 13, 1044, 291, 13, 51564, 51564, 407, 11, 13694, 11, 577, 820, 561, 483, 1409, 365, 264, 2699, 76, 46074, 12199, 16679, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1017241747874134, "compression_ratio": 1.5708812260536398, "no_caption_prob": 5.920663534197956e-05}, {"id": 540, "seek": 446400, "start": 4464.0, "end": 4476.0, "text": " I think the best way would be to, I think it depends. It depends on whether, okay, so there's two kinds of people who I guess want to use on Tailwind modules.", "tokens": [50364, 286, 519, 264, 1151, 636, 576, 312, 281, 11, 286, 519, 309, 5946, 13, 467, 5946, 322, 1968, 11, 1392, 11, 370, 456, 311, 732, 3685, 295, 561, 567, 286, 2041, 528, 281, 764, 322, 46074, 12199, 16679, 13, 50964, 50964, 1485, 307, 264, 561, 567, 366, 1228, 11, 567, 600, 668, 1228, 661, 46074, 12199, 293, 2699, 76, 721, 949, 293, 528, 281, 3679, 281, 341, 420, 567, 362, 787, 668, 1228, 11121, 46074, 12199, 24387, 293, 528, 281, 3679, 281, 341, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1172809058969671, "compression_ratio": 1.766497461928934, "no_caption_prob": 8.479672396788374e-05}, {"id": 541, "seek": 446400, "start": 4476.0, "end": 4489.0, "text": " One is the people who are using, who've been using other Tailwind and Elm things before and want to switch to this or who have only been using plain Tailwind CSS and want to switch to this.", "tokens": [50364, 286, 519, 264, 1151, 636, 576, 312, 281, 11, 286, 519, 309, 5946, 13, 467, 5946, 322, 1968, 11, 1392, 11, 370, 456, 311, 732, 3685, 295, 561, 567, 286, 2041, 528, 281, 764, 322, 46074, 12199, 16679, 13, 50964, 50964, 1485, 307, 264, 561, 567, 366, 1228, 11, 567, 600, 668, 1228, 661, 46074, 12199, 293, 2699, 76, 721, 949, 293, 528, 281, 3679, 281, 341, 420, 567, 362, 787, 668, 1228, 11121, 46074, 12199, 24387, 293, 528, 281, 3679, 281, 341, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1172809058969671, "compression_ratio": 1.766497461928934, "no_caption_prob": 8.479672396788374e-05}, {"id": 542, "seek": 448900, "start": 4489.0, "end": 4501.0, "text": " And there's one kinds of people who, for example, at work have been using Tailwind CSS before and want to switch to something with more auto completion, more type safety, maybe.", "tokens": [50364, 400, 456, 311, 472, 3685, 295, 561, 567, 11, 337, 1365, 11, 412, 589, 362, 668, 1228, 46074, 12199, 24387, 949, 293, 528, 281, 3679, 281, 746, 365, 544, 8399, 19372, 11, 544, 2010, 4514, 11, 1310, 13, 50964, 50964, 400, 456, 311, 264, 661, 2255, 365, 561, 567, 528, 281, 853, 484, 46074, 12199, 24387, 293, 959, 2699, 76, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.060808797983022835, "compression_ratio": 1.5654761904761905, "no_caption_prob": 2.8405591365299188e-05}, {"id": 543, "seek": 448900, "start": 4501.0, "end": 4508.0, "text": " And there's the other camp with people who want to try out Tailwind CSS and love Elm.", "tokens": [50364, 400, 456, 311, 472, 3685, 295, 561, 567, 11, 337, 1365, 11, 412, 589, 362, 668, 1228, 46074, 12199, 24387, 949, 293, 528, 281, 3679, 281, 746, 365, 544, 8399, 19372, 11, 544, 2010, 4514, 11, 1310, 13, 50964, 50964, 400, 456, 311, 264, 661, 2255, 365, 561, 567, 528, 281, 853, 484, 46074, 12199, 24387, 293, 959, 2699, 76, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.060808797983022835, "compression_ratio": 1.5654761904761905, "no_caption_prob": 2.8405591365299188e-05}, {"id": 544, "seek": 450800, "start": 4508.0, "end": 4519.0, "text": " And for the second crowd, I would suggest using Elm default Tailwind modules, which is the Elm package with the generated code with the default Tailwind configuration.", "tokens": [50364, 400, 337, 264, 1150, 6919, 11, 286, 576, 3402, 1228, 2699, 76, 7576, 46074, 12199, 16679, 11, 597, 307, 264, 2699, 76, 7372, 365, 264, 10833, 3089, 365, 264, 7576, 46074, 12199, 11694, 13, 50914, 50914, 407, 550, 291, 393, 483, 257, 841, 337, 577, 46074, 12199, 2564, 3417, 293, 500, 380, 362, 281, 764, 604, 15778, 293, 24553, 2285, 365, 13882, 1688, 293, 426, 18819, 420, 1340, 411, 300, 13, 51464, 51464, 509, 500, 380, 754, 362, 281, 764, 426, 18819, 3625, 13, 509, 445, 3625, 341, 7372, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.053639751799563144, "compression_ratio": 1.651063829787234, "no_caption_prob": 4.565828021441121e-06}, {"id": 545, "seek": 450800, "start": 4519.0, "end": 4530.0, "text": " So then you can get a feel for how Tailwind itself feels and don't have to use any JavaScript and fiddle with bundling and NPM or anything like that.", "tokens": [50364, 400, 337, 264, 1150, 6919, 11, 286, 576, 3402, 1228, 2699, 76, 7576, 46074, 12199, 16679, 11, 597, 307, 264, 2699, 76, 7372, 365, 264, 10833, 3089, 365, 264, 7576, 46074, 12199, 11694, 13, 50914, 50914, 407, 550, 291, 393, 483, 257, 841, 337, 577, 46074, 12199, 2564, 3417, 293, 500, 380, 362, 281, 764, 604, 15778, 293, 24553, 2285, 365, 13882, 1688, 293, 426, 18819, 420, 1340, 411, 300, 13, 51464, 51464, 509, 500, 380, 754, 362, 281, 764, 426, 18819, 3625, 13, 509, 445, 3625, 341, 7372, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.053639751799563144, "compression_ratio": 1.651063829787234, "no_caption_prob": 4.565828021441121e-06}, {"id": 546, "seek": 450800, "start": 4530.0, "end": 4534.0, "text": " You don't even have to use NPM install. You just install this package.", "tokens": [50364, 400, 337, 264, 1150, 6919, 11, 286, 576, 3402, 1228, 2699, 76, 7576, 46074, 12199, 16679, 11, 597, 307, 264, 2699, 76, 7372, 365, 264, 10833, 3089, 365, 264, 7576, 46074, 12199, 11694, 13, 50914, 50914, 407, 550, 291, 393, 483, 257, 841, 337, 577, 46074, 12199, 2564, 3417, 293, 500, 380, 362, 281, 764, 604, 15778, 293, 24553, 2285, 365, 13882, 1688, 293, 426, 18819, 420, 1340, 411, 300, 13, 51464, 51464, 509, 500, 380, 754, 362, 281, 764, 426, 18819, 3625, 13, 509, 445, 3625, 341, 7372, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.053639751799563144, "compression_ratio": 1.651063829787234, "no_caption_prob": 4.565828021441121e-06}, {"id": 547, "seek": 453400, "start": 4534.0, "end": 4545.0, "text": " And later you can switch to the code generator itself and write your own Tailwind config once you want to use your own colors or some custom fonts, things like that.", "tokens": [50364, 400, 1780, 291, 393, 3679, 281, 264, 3089, 19265, 2564, 293, 2464, 428, 1065, 46074, 12199, 6662, 1564, 291, 528, 281, 764, 428, 1065, 4577, 420, 512, 2375, 35316, 11, 721, 411, 300, 13, 50914, 50914, 400, 337, 1518, 1646, 567, 307, 1217, 35980, 281, 46074, 12199, 24387, 293, 1310, 575, 641, 1065, 1217, 575, 641, 1065, 46074, 12199, 11694, 3991, 11, 445, 1520, 484, 264, 1401, 1398, 322, 23331, 13, 51514, 51514, 467, 13948, 577, 281, 764, 264, 5622, 1622, 9226, 2290, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08493154699152167, "compression_ratio": 1.6822033898305084, "no_caption_prob": 1.497048378951149e-05}, {"id": 548, "seek": 453400, "start": 4545.0, "end": 4557.0, "text": " And for everyone else who is already accustomed to Tailwind CSS and maybe has their own already has their own Tailwind configuration file, just check out the readme on GitHub.", "tokens": [50364, 400, 1780, 291, 393, 3679, 281, 264, 3089, 19265, 2564, 293, 2464, 428, 1065, 46074, 12199, 6662, 1564, 291, 528, 281, 764, 428, 1065, 4577, 420, 512, 2375, 35316, 11, 721, 411, 300, 13, 50914, 50914, 400, 337, 1518, 1646, 567, 307, 1217, 35980, 281, 46074, 12199, 24387, 293, 1310, 575, 641, 1065, 1217, 575, 641, 1065, 46074, 12199, 11694, 3991, 11, 445, 1520, 484, 264, 1401, 1398, 322, 23331, 13, 51514, 51514, 467, 13948, 577, 281, 764, 264, 5622, 1622, 9226, 2290, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08493154699152167, "compression_ratio": 1.6822033898305084, "no_caption_prob": 1.497048378951149e-05}, {"id": 549, "seek": 453400, "start": 4557.0, "end": 4561.0, "text": " It explains how to use the command line interface tool.", "tokens": [50364, 400, 1780, 291, 393, 3679, 281, 264, 3089, 19265, 2564, 293, 2464, 428, 1065, 46074, 12199, 6662, 1564, 291, 528, 281, 764, 428, 1065, 4577, 420, 512, 2375, 35316, 11, 721, 411, 300, 13, 50914, 50914, 400, 337, 1518, 1646, 567, 307, 1217, 35980, 281, 46074, 12199, 24387, 293, 1310, 575, 641, 1065, 1217, 575, 641, 1065, 46074, 12199, 11694, 3991, 11, 445, 1520, 484, 264, 1401, 1398, 322, 23331, 13, 51514, 51514, 467, 13948, 577, 281, 764, 264, 5622, 1622, 9226, 2290, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08493154699152167, "compression_ratio": 1.6822033898305084, "no_caption_prob": 1.497048378951149e-05}, {"id": 550, "seek": 456100, "start": 4561.0, "end": 4568.0, "text": " And if you have a really, really advanced use case, you might even use the node API.", "tokens": [50364, 400, 498, 291, 362, 257, 534, 11, 534, 7339, 764, 1389, 11, 291, 1062, 754, 764, 264, 9984, 9362, 13, 50714, 50714, 407, 577, 281, 483, 1409, 534, 5946, 322, 567, 291, 366, 13, 286, 853, 281, 362, 4090, 411, 1518, 4090, 561, 567, 528, 281, 483, 1409, 382, 2661, 382, 1944, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.08399860482466848, "compression_ratio": 1.5128205128205128, "no_caption_prob": 4.289259777578991e-06}, {"id": 551, "seek": 456100, "start": 4568.0, "end": 4579.0, "text": " So how to get started really depends on who you are. I try to have include like everyone include people who want to get started as quickly as possible.", "tokens": [50364, 400, 498, 291, 362, 257, 534, 11, 534, 7339, 764, 1389, 11, 291, 1062, 754, 764, 264, 9984, 9362, 13, 50714, 50714, 407, 577, 281, 483, 1409, 534, 5946, 322, 567, 291, 366, 13, 286, 853, 281, 362, 4090, 411, 1518, 4090, 561, 567, 528, 281, 483, 1409, 382, 2661, 382, 1944, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.08399860482466848, "compression_ratio": 1.5128205128205128, "no_caption_prob": 4.289259777578991e-06}, {"id": 552, "seek": 457900, "start": 4579.0, "end": 4593.0, "text": " And I want to include companies who have complicated structures with their own Tailwind configurations and their own added CSS and post CSS configurations and things like that.", "tokens": [50364, 400, 286, 528, 281, 4090, 3431, 567, 362, 6179, 9227, 365, 641, 1065, 46074, 12199, 31493, 293, 641, 1065, 3869, 24387, 293, 2183, 24387, 31493, 293, 721, 411, 300, 13, 51064, 51064, 467, 311, 1152, 281, 411, 483, 1293, 833, 264, 912, 13, 467, 311, 1152, 281, 360, 428, 1151, 337, 1293, 13, 51364, 51364, 583, 286, 2041, 264, 1151, 2891, 935, 307, 1009, 264, 1401, 1398, 293, 264, 23331, 1716, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07740769888225355, "compression_ratio": 1.6310679611650485, "no_caption_prob": 1.3419577953754924e-05}, {"id": 553, "seek": 457900, "start": 4593.0, "end": 4599.0, "text": " It's hard to like get both under the same. It's hard to do your best for both.", "tokens": [50364, 400, 286, 528, 281, 4090, 3431, 567, 362, 6179, 9227, 365, 641, 1065, 46074, 12199, 31493, 293, 641, 1065, 3869, 24387, 293, 2183, 24387, 31493, 293, 721, 411, 300, 13, 51064, 51064, 467, 311, 1152, 281, 411, 483, 1293, 833, 264, 912, 13, 467, 311, 1152, 281, 360, 428, 1151, 337, 1293, 13, 51364, 51364, 583, 286, 2041, 264, 1151, 2891, 935, 307, 1009, 264, 1401, 1398, 293, 264, 23331, 1716, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07740769888225355, "compression_ratio": 1.6310679611650485, "no_caption_prob": 1.3419577953754924e-05}, {"id": 554, "seek": 457900, "start": 4599.0, "end": 4603.0, "text": " But I guess the best starting point is always the readme and the GitHub project.", "tokens": [50364, 400, 286, 528, 281, 4090, 3431, 567, 362, 6179, 9227, 365, 641, 1065, 46074, 12199, 31493, 293, 641, 1065, 3869, 24387, 293, 2183, 24387, 31493, 293, 721, 411, 300, 13, 51064, 51064, 467, 311, 1152, 281, 411, 483, 1293, 833, 264, 912, 13, 467, 311, 1152, 281, 360, 428, 1151, 337, 1293, 13, 51364, 51364, 583, 286, 2041, 264, 1151, 2891, 935, 307, 1009, 264, 1401, 1398, 293, 264, 23331, 1716, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07740769888225355, "compression_ratio": 1.6310679611650485, "no_caption_prob": 1.3419577953754924e-05}, {"id": 555, "seek": 460300, "start": 4603.0, "end": 4613.0, "text": " Do you think that an incremental upgrade would work well for people who are already using the regular style of Tailwind with Tailwind classes in their Elm code?", "tokens": [50364, 1144, 291, 519, 300, 364, 35759, 11484, 576, 589, 731, 337, 561, 567, 366, 1217, 1228, 264, 3890, 3758, 295, 46074, 12199, 365, 46074, 12199, 5359, 294, 641, 2699, 76, 3089, 30, 50864, 50864, 11142, 2699, 76, 17995, 11, 291, 914, 30, 50964, 50964, 876, 11, 665, 935, 13, 286, 2041, 13, 27448, 13, 663, 311, 1880, 13, 1779, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.13636182248592377, "compression_ratio": 1.335164835164835, "no_caption_prob": 0.000687390798702836}, {"id": 556, "seek": 460300, "start": 4613.0, "end": 4615.0, "text": " Using Elm HTML, you mean?", "tokens": [50364, 1144, 291, 519, 300, 364, 35759, 11484, 576, 589, 731, 337, 561, 567, 366, 1217, 1228, 264, 3890, 3758, 295, 46074, 12199, 365, 46074, 12199, 5359, 294, 641, 2699, 76, 3089, 30, 50864, 50864, 11142, 2699, 76, 17995, 11, 291, 914, 30, 50964, 50964, 876, 11, 665, 935, 13, 286, 2041, 13, 27448, 13, 663, 311, 1880, 13, 1779, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.13636182248592377, "compression_ratio": 1.335164835164835, "no_caption_prob": 0.000687390798702836}, {"id": 557, "seek": 460300, "start": 4615.0, "end": 4619.0, "text": " Oh, good point. I guess. Aha. That's interesting. Right.", "tokens": [50364, 1144, 291, 519, 300, 364, 35759, 11484, 576, 589, 731, 337, 561, 567, 366, 1217, 1228, 264, 3890, 3758, 295, 46074, 12199, 365, 46074, 12199, 5359, 294, 641, 2699, 76, 3089, 30, 50864, 50864, 11142, 2699, 76, 17995, 11, 291, 914, 30, 50964, 50964, 876, 11, 665, 935, 13, 286, 2041, 13, 27448, 13, 663, 311, 1880, 13, 1779, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.13636182248592377, "compression_ratio": 1.335164835164835, "no_caption_prob": 0.000687390798702836}, {"id": 558, "seek": 461900, "start": 4619.0, "end": 4637.0, "text": " So if you're using Elm HTML, you would first have to switch to Elm CSS, which you could do. But and I mean, it's a drop in replacement. So you basically change your imports to change from Elm HTML to Elm CSS because it's it's a superset of the API.", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 17995, 11, 291, 576, 700, 362, 281, 3679, 281, 2699, 76, 24387, 11, 597, 291, 727, 360, 13, 583, 293, 286, 914, 11, 309, 311, 257, 3270, 294, 14419, 13, 407, 291, 1936, 1319, 428, 41596, 281, 1319, 490, 2699, 76, 17995, 281, 2699, 76, 24387, 570, 309, 311, 309, 311, 257, 37906, 302, 295, 264, 9362, 13, 51264, 51264, 865, 11, 300, 311, 257, 665, 935, 13, 286, 519, 2699, 76, 24387, 307, 1596, 309, 311, 1596, 1944, 281, 764, 281, 5366, 2699, 76, 24387, 26200, 379, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.059866352081298826, "compression_ratio": 1.5921052631578947, "no_caption_prob": 0.0001910919527290389}, {"id": 559, "seek": 461900, "start": 4637.0, "end": 4645.0, "text": " Yeah, that's a good point. I think Elm CSS is quite it's quite possible to use to introduce Elm CSS incrementally.", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 17995, 11, 291, 576, 700, 362, 281, 3679, 281, 2699, 76, 24387, 11, 597, 291, 727, 360, 13, 583, 293, 286, 914, 11, 309, 311, 257, 3270, 294, 14419, 13, 407, 291, 1936, 1319, 428, 41596, 281, 1319, 490, 2699, 76, 17995, 281, 2699, 76, 24387, 570, 309, 311, 309, 311, 257, 37906, 302, 295, 264, 9362, 13, 51264, 51264, 865, 11, 300, 311, 257, 665, 935, 13, 286, 519, 2699, 76, 24387, 307, 1596, 309, 311, 1596, 1944, 281, 764, 281, 5366, 2699, 76, 24387, 26200, 379, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.059866352081298826, "compression_ratio": 1.5921052631578947, "no_caption_prob": 0.0001910919527290389}, {"id": 560, "seek": 464500, "start": 4645.0, "end": 4657.0, "text": " So there's like from unstyled and to unstyled. So you can go from the Elm CSS world into the normal Elm slash HTML world and the other way around.", "tokens": [50364, 407, 456, 311, 411, 490, 18799, 88, 1493, 293, 281, 18799, 88, 1493, 13, 407, 291, 393, 352, 490, 264, 2699, 76, 24387, 1002, 666, 264, 2710, 2699, 76, 17330, 17995, 1002, 293, 264, 661, 636, 926, 13, 50964, 50964, 407, 286, 2041, 264, 1151, 636, 337, 561, 567, 362, 3195, 295, 2699, 76, 17330, 17995, 3089, 576, 312, 281, 909, 264, 3270, 294, 14419, 10088, 538, 10088, 13, 51414, 51414, 1779, 13, 16217, 412, 264, 5510, 13, 51514, 51514, 7587, 13, 16217, 412, 264, 5510, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07021891415774167, "compression_ratio": 1.6666666666666667, "no_caption_prob": 2.7107940695714206e-05}, {"id": 561, "seek": 464500, "start": 4657.0, "end": 4666.0, "text": " So I guess the best way for people who have lots of Elm slash HTML code would be to add the drop in replacement module by module.", "tokens": [50364, 407, 456, 311, 411, 490, 18799, 88, 1493, 293, 281, 18799, 88, 1493, 13, 407, 291, 393, 352, 490, 264, 2699, 76, 24387, 1002, 666, 264, 2710, 2699, 76, 17330, 17995, 1002, 293, 264, 661, 636, 926, 13, 50964, 50964, 407, 286, 2041, 264, 1151, 636, 337, 561, 567, 362, 3195, 295, 2699, 76, 17330, 17995, 3089, 576, 312, 281, 909, 264, 3270, 294, 14419, 10088, 538, 10088, 13, 51414, 51414, 1779, 13, 16217, 412, 264, 5510, 13, 51514, 51514, 7587, 13, 16217, 412, 264, 5510, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07021891415774167, "compression_ratio": 1.6666666666666667, "no_caption_prob": 2.7107940695714206e-05}, {"id": 562, "seek": 464500, "start": 4666.0, "end": 4668.0, "text": " Right. Starting at the leaves.", "tokens": [50364, 407, 456, 311, 411, 490, 18799, 88, 1493, 293, 281, 18799, 88, 1493, 13, 407, 291, 393, 352, 490, 264, 2699, 76, 24387, 1002, 666, 264, 2710, 2699, 76, 17330, 17995, 1002, 293, 264, 661, 636, 926, 13, 50964, 50964, 407, 286, 2041, 264, 1151, 636, 337, 561, 567, 362, 3195, 295, 2699, 76, 17330, 17995, 3089, 576, 312, 281, 909, 264, 3270, 294, 14419, 10088, 538, 10088, 13, 51414, 51414, 1779, 13, 16217, 412, 264, 5510, 13, 51514, 51514, 7587, 13, 16217, 412, 264, 5510, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07021891415774167, "compression_ratio": 1.6666666666666667, "no_caption_prob": 2.7107940695714206e-05}, {"id": 563, "seek": 464500, "start": 4668.0, "end": 4670.0, "text": " Exactly. Starting at the leaves.", "tokens": [50364, 407, 456, 311, 411, 490, 18799, 88, 1493, 293, 281, 18799, 88, 1493, 13, 407, 291, 393, 352, 490, 264, 2699, 76, 24387, 1002, 666, 264, 2710, 2699, 76, 17330, 17995, 1002, 293, 264, 661, 636, 926, 13, 50964, 50964, 407, 286, 2041, 264, 1151, 636, 337, 561, 567, 362, 3195, 295, 2699, 76, 17330, 17995, 3089, 576, 312, 281, 909, 264, 3270, 294, 14419, 10088, 538, 10088, 13, 51414, 51414, 1779, 13, 16217, 412, 264, 5510, 13, 51514, 51514, 7587, 13, 16217, 412, 264, 5510, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07021891415774167, "compression_ratio": 1.6666666666666667, "no_caption_prob": 2.7107940695714206e-05}, {"id": 564, "seek": 467000, "start": 4670.0, "end": 4678.0, "text": " In the meantime, you'll have lots more generated code. But in the end, you hopefully have a have the normal amount of code again.", "tokens": [50364, 682, 264, 14991, 11, 291, 603, 362, 3195, 544, 10833, 3089, 13, 583, 294, 264, 917, 11, 291, 4696, 362, 257, 362, 264, 2710, 2372, 295, 3089, 797, 13, 50764, 50764, 1779, 13, 400, 291, 820, 312, 1075, 281, 747, 411, 11, 291, 458, 11, 364, 2699, 76, 24387, 4478, 300, 307, 1228, 411, 264, 1508, 28431, 281, 360, 6838, 12199, 5359, 293, 550, 747, 300, 472, 17995, 4478, 300, 311, 294, 2699, 76, 24387, 293, 1319, 300, 281, 764, 2699, 76, 46074, 12199, 28431, 13, 51714, 51714, 1779, 13, 1079, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07901339729626973, "compression_ratio": 1.6488888888888888, "no_caption_prob": 8.092177449725568e-05}, {"id": 565, "seek": 467000, "start": 4678.0, "end": 4697.0, "text": " Right. And you should be able to take like, you know, an Elm CSS element that is using like the class syntax to do tailwind classes and then take that one HTML element that's in Elm CSS and change that to use Elm Tailwind syntax.", "tokens": [50364, 682, 264, 14991, 11, 291, 603, 362, 3195, 544, 10833, 3089, 13, 583, 294, 264, 917, 11, 291, 4696, 362, 257, 362, 264, 2710, 2372, 295, 3089, 797, 13, 50764, 50764, 1779, 13, 400, 291, 820, 312, 1075, 281, 747, 411, 11, 291, 458, 11, 364, 2699, 76, 24387, 4478, 300, 307, 1228, 411, 264, 1508, 28431, 281, 360, 6838, 12199, 5359, 293, 550, 747, 300, 472, 17995, 4478, 300, 311, 294, 2699, 76, 24387, 293, 1319, 300, 281, 764, 2699, 76, 46074, 12199, 28431, 13, 51714, 51714, 1779, 13, 1079, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07901339729626973, "compression_ratio": 1.6488888888888888, "no_caption_prob": 8.092177449725568e-05}, {"id": 566, "seek": 467000, "start": 4697.0, "end": 4698.0, "text": " Right. Yes.", "tokens": [50364, 682, 264, 14991, 11, 291, 603, 362, 3195, 544, 10833, 3089, 13, 583, 294, 264, 917, 11, 291, 4696, 362, 257, 362, 264, 2710, 2372, 295, 3089, 797, 13, 50764, 50764, 1779, 13, 400, 291, 820, 312, 1075, 281, 747, 411, 11, 291, 458, 11, 364, 2699, 76, 24387, 4478, 300, 307, 1228, 411, 264, 1508, 28431, 281, 360, 6838, 12199, 5359, 293, 550, 747, 300, 472, 17995, 4478, 300, 311, 294, 2699, 76, 24387, 293, 1319, 300, 281, 764, 2699, 76, 46074, 12199, 28431, 13, 51714, 51714, 1779, 13, 1079, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07901339729626973, "compression_ratio": 1.6488888888888888, "no_caption_prob": 8.092177449725568e-05}, {"id": 567, "seek": 469800, "start": 4698.0, "end": 4702.0, "text": " Elm Tailwind modules. Yeah. So incremental upgrades would probably be the way to go.", "tokens": [50364, 2699, 76, 46074, 12199, 16679, 13, 865, 13, 407, 35759, 24868, 576, 1391, 312, 264, 636, 281, 352, 13, 50564, 50564, 509, 727, 1391, 362, 512, 733, 295, 2290, 1310, 1228, 2699, 76, 3131, 420, 2699, 76, 17995, 281, 2699, 76, 24387, 13, 1112, 13, 51164, 51164, 1779, 13, 51214, 51214, 1407, 854, 365, 300, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.20918672879536945, "compression_ratio": 1.326797385620915, "no_caption_prob": 3.269743319833651e-05}, {"id": 568, "seek": 469800, "start": 4702.0, "end": 4714.0, "text": " You could probably have some kind of tool maybe using Elm review or Elm HTML to Elm CSS.com.", "tokens": [50364, 2699, 76, 46074, 12199, 16679, 13, 865, 13, 407, 35759, 24868, 576, 1391, 312, 264, 636, 281, 352, 13, 50564, 50564, 509, 727, 1391, 362, 512, 733, 295, 2290, 1310, 1228, 2699, 76, 3131, 420, 2699, 76, 17995, 281, 2699, 76, 24387, 13, 1112, 13, 51164, 51164, 1779, 13, 51214, 51214, 1407, 854, 365, 300, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.20918672879536945, "compression_ratio": 1.326797385620915, "no_caption_prob": 3.269743319833651e-05}, {"id": 569, "seek": 469800, "start": 4714.0, "end": 4715.0, "text": " Right.", "tokens": [50364, 2699, 76, 46074, 12199, 16679, 13, 865, 13, 407, 35759, 24868, 576, 1391, 312, 264, 636, 281, 352, 13, 50564, 50564, 509, 727, 1391, 362, 512, 733, 295, 2290, 1310, 1228, 2699, 76, 3131, 420, 2699, 76, 17995, 281, 2699, 76, 24387, 13, 1112, 13, 51164, 51164, 1779, 13, 51214, 51214, 1407, 854, 365, 300, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.20918672879536945, "compression_ratio": 1.326797385620915, "no_caption_prob": 3.269743319833651e-05}, {"id": 570, "seek": 469800, "start": 4715.0, "end": 4716.0, "text": " To help with that.", "tokens": [50364, 2699, 76, 46074, 12199, 16679, 13, 865, 13, 407, 35759, 24868, 576, 1391, 312, 264, 636, 281, 352, 13, 50564, 50564, 509, 727, 1391, 362, 512, 733, 295, 2290, 1310, 1228, 2699, 76, 3131, 420, 2699, 76, 17995, 281, 2699, 76, 24387, 13, 1112, 13, 51164, 51164, 1779, 13, 51214, 51214, 1407, 854, 365, 300, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.20918672879536945, "compression_ratio": 1.326797385620915, "no_caption_prob": 3.269743319833651e-05}, {"id": 571, "seek": 471600, "start": 4716.0, "end": 4728.0, "text": " I did think about the possibility of having like a transformer that would allow you to turn class names as an Elm review rule into tailwind using the parsing logic that I have.", "tokens": [50364, 286, 630, 519, 466, 264, 7959, 295, 1419, 411, 257, 31782, 300, 576, 2089, 291, 281, 1261, 1508, 5288, 382, 364, 2699, 76, 3131, 4978, 666, 6838, 12199, 1228, 264, 21156, 278, 9952, 300, 286, 362, 13, 50964, 50964, 440, 12414, 551, 307, 498, 291, 362, 257, 9925, 295, 5359, 300, 500, 380, 2906, 5359, 300, 500, 380, 2906, 6838, 12199, 293, 5359, 300, 360, 2906, 6838, 12199, 11, 550, 309, 393, 483, 257, 707, 857, 16191, 570, 291, 500, 380, 458, 577, 281, 4994, 552, 13, 51564, 51564, 583, 300, 311, 1310, 257, 4829, 337, 1071, 786, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.03945075655446469, "compression_ratio": 1.7647058823529411, "no_caption_prob": 0.00013978466449771076}, {"id": 572, "seek": 471600, "start": 4728.0, "end": 4740.0, "text": " The tricky thing is if you have a mixture of classes that don't represent classes that don't represent tailwind and classes that do represent tailwind, then it can get a little bit messy because you don't know how to separate them.", "tokens": [50364, 286, 630, 519, 466, 264, 7959, 295, 1419, 411, 257, 31782, 300, 576, 2089, 291, 281, 1261, 1508, 5288, 382, 364, 2699, 76, 3131, 4978, 666, 6838, 12199, 1228, 264, 21156, 278, 9952, 300, 286, 362, 13, 50964, 50964, 440, 12414, 551, 307, 498, 291, 362, 257, 9925, 295, 5359, 300, 500, 380, 2906, 5359, 300, 500, 380, 2906, 6838, 12199, 293, 5359, 300, 360, 2906, 6838, 12199, 11, 550, 309, 393, 483, 257, 707, 857, 16191, 570, 291, 500, 380, 458, 577, 281, 4994, 552, 13, 51564, 51564, 583, 300, 311, 1310, 257, 4829, 337, 1071, 786, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.03945075655446469, "compression_ratio": 1.7647058823529411, "no_caption_prob": 0.00013978466449771076}, {"id": 573, "seek": 471600, "start": 4740.0, "end": 4743.0, "text": " But that's maybe a topic for another day.", "tokens": [50364, 286, 630, 519, 466, 264, 7959, 295, 1419, 411, 257, 31782, 300, 576, 2089, 291, 281, 1261, 1508, 5288, 382, 364, 2699, 76, 3131, 4978, 666, 6838, 12199, 1228, 264, 21156, 278, 9952, 300, 286, 362, 13, 50964, 50964, 440, 12414, 551, 307, 498, 291, 362, 257, 9925, 295, 5359, 300, 500, 380, 2906, 5359, 300, 500, 380, 2906, 6838, 12199, 293, 5359, 300, 360, 2906, 6838, 12199, 11, 550, 309, 393, 483, 257, 707, 857, 16191, 570, 291, 500, 380, 458, 577, 281, 4994, 552, 13, 51564, 51564, 583, 300, 311, 1310, 257, 4829, 337, 1071, 786, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.03945075655446469, "compression_ratio": 1.7647058823529411, "no_caption_prob": 0.00013978466449771076}, {"id": 574, "seek": 474300, "start": 4743.0, "end": 4751.0, "text": " But great. So try out the default package, which is published on the Package Repository, Elm default tailwind modules.", "tokens": [50364, 583, 869, 13, 407, 853, 484, 264, 7576, 7372, 11, 597, 307, 6572, 322, 264, 18466, 609, 3696, 9598, 827, 11, 2699, 76, 7576, 6838, 12199, 16679, 13, 50764, 50764, 11809, 264, 2113, 294, 264, 855, 5570, 13, 6881, 484, 264, 1401, 1398, 13, 6881, 484, 17995, 281, 2699, 76, 13, 1112, 4317, 13, 5303, 300, 257, 853, 13, 400, 11, 13694, 11, 3231, 797, 337, 1348, 322, 264, 855, 13, 51264, 51264, 2561, 797, 337, 1419, 385, 13, 467, 390, 3195, 295, 1019, 13, 51364, 51364, 30269, 13, 400, 508, 2032, 268, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51514, 51514, 3008, 291, 958, 565, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14848593303135463, "compression_ratio": 1.6307053941908713, "no_caption_prob": 0.000114108195703011}, {"id": 575, "seek": 474300, "start": 4751.0, "end": 4761.0, "text": " Find the link in the show notes. Check out the readme. Check out HTML to Elm.com perhaps. Give that a try. And, Philipp, thanks again for coming on the show.", "tokens": [50364, 583, 869, 13, 407, 853, 484, 264, 7576, 7372, 11, 597, 307, 6572, 322, 264, 18466, 609, 3696, 9598, 827, 11, 2699, 76, 7576, 6838, 12199, 16679, 13, 50764, 50764, 11809, 264, 2113, 294, 264, 855, 5570, 13, 6881, 484, 264, 1401, 1398, 13, 6881, 484, 17995, 281, 2699, 76, 13, 1112, 4317, 13, 5303, 300, 257, 853, 13, 400, 11, 13694, 11, 3231, 797, 337, 1348, 322, 264, 855, 13, 51264, 51264, 2561, 797, 337, 1419, 385, 13, 467, 390, 3195, 295, 1019, 13, 51364, 51364, 30269, 13, 400, 508, 2032, 268, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51514, 51514, 3008, 291, 958, 565, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14848593303135463, "compression_ratio": 1.6307053941908713, "no_caption_prob": 0.000114108195703011}, {"id": 576, "seek": 474300, "start": 4761.0, "end": 4763.0, "text": " Thanks again for having me. It was lots of fun.", "tokens": [50364, 583, 869, 13, 407, 853, 484, 264, 7576, 7372, 11, 597, 307, 6572, 322, 264, 18466, 609, 3696, 9598, 827, 11, 2699, 76, 7576, 6838, 12199, 16679, 13, 50764, 50764, 11809, 264, 2113, 294, 264, 855, 5570, 13, 6881, 484, 264, 1401, 1398, 13, 6881, 484, 17995, 281, 2699, 76, 13, 1112, 4317, 13, 5303, 300, 257, 853, 13, 400, 11, 13694, 11, 3231, 797, 337, 1348, 322, 264, 855, 13, 51264, 51264, 2561, 797, 337, 1419, 385, 13, 467, 390, 3195, 295, 1019, 13, 51364, 51364, 30269, 13, 400, 508, 2032, 268, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51514, 51514, 3008, 291, 958, 565, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14848593303135463, "compression_ratio": 1.6307053941908713, "no_caption_prob": 0.000114108195703011}, {"id": 577, "seek": 474300, "start": 4763.0, "end": 4766.0, "text": " Likewise. And Jeroen, I'll talk to you next time.", "tokens": [50364, 583, 869, 13, 407, 853, 484, 264, 7576, 7372, 11, 597, 307, 6572, 322, 264, 18466, 609, 3696, 9598, 827, 11, 2699, 76, 7576, 6838, 12199, 16679, 13, 50764, 50764, 11809, 264, 2113, 294, 264, 855, 5570, 13, 6881, 484, 264, 1401, 1398, 13, 6881, 484, 17995, 281, 2699, 76, 13, 1112, 4317, 13, 5303, 300, 257, 853, 13, 400, 11, 13694, 11, 3231, 797, 337, 1348, 322, 264, 855, 13, 51264, 51264, 2561, 797, 337, 1419, 385, 13, 467, 390, 3195, 295, 1019, 13, 51364, 51364, 30269, 13, 400, 508, 2032, 268, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51514, 51514, 3008, 291, 958, 565, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14848593303135463, "compression_ratio": 1.6307053941908713, "no_caption_prob": 0.000114108195703011}, {"id": 578, "seek": 476600, "start": 4766.0, "end": 4778.0, "text": " See you next time.", "tokens": [50364, 3008, 291, 958, 565, 13, 50964], "temperature": 0.0, "avg_logprob": -0.09348205476999283, "compression_ratio": 0.6923076923076923, "no_caption_prob": 2.9295757485670038e-05}], "language": "en"}