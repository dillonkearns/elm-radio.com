{"text": " Hello Jeroen. Hello Dillon. I'm very glad to be talking about this topic so promptly. I think it's really important to get on it and talk about it right away. I was thinking you were going to do a pun with AI or something and I was like, I couldn't find anything to, anything funny to say, but yep. Good one. Good one. Yeah, it was unprompted, but I had to go for it. This was a handcrafted artisanal pun, not coded, not AI assisted in any way, I promise. I believe you. Not, not on the unprompted part. It actually was not AI assisted, although, um, we're going to, I imagine we're going to have a lot of bad puns out there these days with AI assisting people, you know, using it for evil and creating more puns in the world. So be on the lookout. Well that will compensate the fact that people have less kids nowadays and there are less dads, you know, so I think we've introduced the subject. We're going to talk about AI and Elm and all of those things that are quite buzzy at the, in the last few months. And ever more and more, it's a bit hard to keep up. It's going so fast. So just to set the record or we're recording at the beginning of April, 2022, 2023. No you are wrong. If we were recording this in 2022 and talking about GPT-4, that would be incredibly prescient. Yeah, but I'm just going to gaslight you and tell you you're wrong. Just like that AI. It's a hallucination. Are you hallucinating? Are you an AI? I am legally contracted to say no to that. So yeah, so this is April, 2023. In one month, this will be outdated. We hope it won't, but we'll see. So chat GPT-4 was just released. GitHub Copilot X was announced. Yeah, I'm on the waiting list for that. Haven't gotten access yet. So yeah, this is the current state. AI journey is the best one to create images so far, and we have no clue how it will be in the future. Things are moving very fast. Yeah, very fast. So these are all very interesting technologies and people think that they are going to revolutionize a lot of things. They're probably going to be right in some aspects and wrong in some others. What I want to talk mostly today about was like the coding aspects of it. Is AI going to replace developers? Is it going to help them mostly? And all those kinds of things that people might wonder as well. How do you use this effectively to your advantage? How do you avoid being misusing them as well? So you've played with chat GPT-4 at the moment, and I think you've had some interesting results. Yes. Do you want to talk about that? Yeah. So maybe to set the stage a little bit regarding the question of will AI take our jobs? I tend to think that, I mean, of course, it's very interesting and time will tell and anything could happen. Things are moving very quickly. I don't think we can make predictions with too much accuracy at this stage with the way things are going. But I tend to believe that this is going to be a very powerful tool. And I think that it's more likely that people who are good at using these tools will replace your job rather than the tools themselves will replace our jobs. So I think it's an important skill, just like Googling was an important skill. Of course, it's a next level of that. It's more sophisticated. It's able to do things on its own, which is not quite what Google was doing for us. But you can be... Googling is an important technical skill. And if you are a developer, it's worth trying to get good at that. And in the same way, I think using AI tools effectively is an important skill. Similar to using an ID effectively, for instance, instead of writing everything in notepad or on literal punch cards or... Well, now I'm going too far, but... Well yeah, exactly. And we have to keep up with the technology. So I would say that maybe I'm an optimist, but I would say keep up with the latest technology to stay relevant. But hopefully we're going to be able to do more sophisticated things leveraging these tools. Now, another sort of piece of background I want to introduce to this conversation is to me, this is a really big question. Is Elm and pure typed functional programming a good combination with AI? Do you have an opinion on that? Well, it could be a good one or it could be an irrelevant one in the sense that if an AI writes all the code for you, and it's awesome at it, like much better than you could be, like, let's say a hundred times better than you, then why do you need type safety? Why do you need ease of refactoring and a language that is easy to maintain? Maybe you don't. I personally don't believe that that will happen. I'll talk about that later. Probably. I think it's actually better to have a, at least a typed language like Elm to work with because at least so far in April, 2020 something, chatGPT and all those tools, they give you incorrect results. They're very impressive and they're often correct, but they're also more often than not, I'd say incorrect or slightly inaccurate or in the case of Elm, often it has in syntax errors. Right. And you want to know about those, right? Yeah, exactly. And one thing that Elm gives us is a nice compiler with a great type checker and some additional linting that it does on its own. And that helps prevent a lot of issues that humans make, but that an AI can do as well because those AIs have been trained on humans and Slack overflow. Probably not on the Elm Slack, by the way, which would be a great resource. Interesting. Yeah, that's true. I've noticed a lot of like old syntax, like the prime syntax, the little apostrophe it likes to use. But I also think it's been trained on Haskell code. Yeah, totally. In some cases. Totally. I really like your framing. I think that's spot on for, you know, is typed pure functional programming a good fit for these AI tools? And I think this is exactly the right question. Are humans going to be maintaining it or are machines going to completely just take over the code and humans don't need to be involved? I think that's exactly the right question. I think that my gut feeling is right now for the next little while, at least, we've still got a little time where we're going to be an important part of the process. And I see it more as a collaboration between humans and AI at the point where the humans are no longer needed. Then, yes, the whole pure typed functional programming thing doesn't matter so much because it's an implementation detail at that point. But until then, I think it's extremely valuable because, as you say, it's very prone to hallucinations. So like... Hallucination being when it says something and it thinks it's right. Exactly. And when it isn't, when it isn't. Yes, because these... and hallucination is like sort of the technical term that open AI is using in some of these white papers talking about this and stuff nowadays. But hallucination, it's very prone to hallucination because these are sort of predictive models that kind of synthesize information, but it's not an exact science. And sometimes it mixes things together that don't quite fit. And so I think, I mean, Jeroen, I think it's fair to say that we really like having tools that we can trust. If there's one thing you can say about us as the hosts of Elm Radio, I think that's a fair thing to say, right? Yeah, yeah. We do not accept half guarantees, right? We like guarantees. We like constraints. We like guarantees. Yeah, otherwise we wouldn't use side trips. Right, exactly. Then we get like pretty good... you can't really call it a guarantee if it's pretty good, right? Guarantees are not pretty good. Guarantees are guarantees. You get pretty good assurances, pretty good confidence, but you don't get guarantees. We like guarantees, right? Yeah. Well, I guess to some extent Elm is also improvable in that way. Like we're not doing formal logic or proofs. Fair. We're pretty close to that. Yeah. Especially considering how simple the language is and how usable. And the things that you can know about an Elm program, you do know. So like we don't get guarantees about everything, but we do get certain things for which they are definitely guarantees. And we like that. And we try to get more of those things. I know somebody who built a whole tool to try to get more guarantees through static analysis for Elm code. So people go to great lengths for these things, I hear. So then when you're talking about guarantees and then AI that's prone to hallucination, that becomes an interesting question, right? Now I actually am pretty confident about our ability to do useful things with that. Maybe that's counterintuitive because I'm talking about how much we care about guarantees and then talking about hallucination. I'm actually very reluctant to integrate things like GitHub copilot suggestions into my code because I think it's a very easy way to introduce subtle bugs. But the way I'm thinking about how AI fits into my workflow for writing Elm code and my sort of ideals for tools that involve like trusting my tools so that I can do critical thinking and then delegate certain types of problems with complete trust to a tool, right? Those two things do fit together, but not out of the box. If you just throw in whatever suggestions GitHub copilot is throwing at you, like for example, I was playing around with GitHub copilot, which for anyone who hasn't used it, it's now a paid tool, but it will give you sort of fancy AI assisted, GPT assisted auto completions in your editor. I think it's free for open source maintainers. With a certain number of stars. Unfortunately, I didn't qualify. Really? I think I qualified. Or maybe I'm using the free version still. Yeah, you might have been using the open beta. I got it for free in the beta period, but you probably need like 10,000 stars or something. I don't know. Not many. Hey, people, we need stars. Get on it. Otherwise, we need to pay for like $10 a month or something, which is unacceptable. Yeah, our listeners can pay us in stars. Go star a project right now. Pause this podcast and star our projects. Yeah. So it's definitely interesting working with Copilot. I have to say, I don't find it. In some cases, I'll trust it. I will have a custom type with four variants, and I will write out a function that says my custom type to string, and then it fills it in perfectly. And it's impressive, but there are certain things like that, that I have an intuition that it's going to be really good and trustworthy at solving. That said, it does hallucinate certain things. It will hallucinate certain variants because the process through which it is arriving at these suggestions does not involve understanding the types of the program like the compiler does. So to me, where it gets very interesting is when you start using prompt engineering to do that. And so I've been thinking about a set of principles around this. So prompt engineering is when you ask a question to get a Copilot or mostly chatGPT or other tools and you do it in a specific way, like you frame your questions in a specific way, you ask for specific things, you give additional instructions so that it gives you better results. I don't know why people call it engineering yet, but it's very interesting. Although, I mean, there are prompt engineer job posts out there, and I think this is kind of going to become a thing. So it feels more like politics, like when you try to phrase things that sound good to you, what makes you sound good. It's more like a speech thing than an engineering thing so far. Absolutely. Absolutely. I hope those literature majors in college are finally cashing in on those writing skills. Oh, now you're not making fun of my poetry degree, right? Now that I can make full blown web applications in two seconds. Right. Yeah, I mean, I think writing skills have been valuable for a long time, but this unlocks a whole new set of things you can do, including engineering with your writing. And it really is like, I mean, if you think about what these prompts are doing, like the way that they work is they're based on the context they're given, they're sort of like role playing with that context, essentially, because their basic premise is given like this context, what's likely to follow it, right? So if you write in a certain style, it is going to be more likely to follow with a certain style. If you write in a style that sounds very much like a scientific paper, a scientific journal publication, and you write about your method for your study and all these things, it's probably going to give you more rigorous results. And it's probably going to do the things that it's seen by gathering information from a bunch of scientific journals, like coming up with a rigorous method and talking about whatever, like counterbalancing, you know, addressing particular concerns and stuff. So like, you have to really get it to role play to solve the problem you want it to solve, to be like the smartest thing to address the problem you want. And that's where nerds come into play again. Yes, totally. Because we kind of get that. It's not just like some magic box to us, like we kind of can understand how it could synthesize information so we need to give it useful context for that. Now I was thinking like, people play Dungeons and Dragons. Oh, that too. Or used to role playing. Yeah, very true. Yeah, so like, I think priming it with good context is one thing that I've been thinking about as I've been playing with it. And another thing I think about is like, is like how verifiable is the problem you're giving it? So if you give it a problem and you're like, I don't know, what is the meaning of life? And it tells you something, it's like, well, how do I verify it? Like I haven't given it much context, I've given it sort of a vague thing, it's going to be piecing together a bunch of things. I'm not like giving it a specific problem to solve. I'm not giving it a problem that I can verify that I've gotten the answer. So if I give it some like an elm problem, and I have a way to check. So like there are certain problems where it's difficult to find an answer, but it's easy to know that the answer is correct once you have it. And P problems. Is that the term? No, but you know, P equals NP. I never quite got that. I'm going to need to ask chat GPT to explain that to me better. Okay, let's not get into that one. That's a few hours of content, which is probably not best served by us. I guess like things like the traveling salesman problem you like would be an example of that, right? And then yeah, that's an NP problem. You can tell if you have a solution and it does fit an optimal path, it's easy to tell, but it's not easy to derive an optimal path, something like that. Yeah, almost. You know whether the solution that is given is a solution because you can check it and the checking is pretty easy. But knowing whether it's optimal is extremely hard. I see. Right, right, right. Okay. So like, is this the most optimal solution? Well, to check that you would need to check all other solutions. And it's easy to if you find a counter example, then yes, you know, it's not the most optimal one, but to know that whether it is indeed the most optimal one, you're going to have to check everything. And that's, that's extremely expensive. Right, exactly. Yeah. So I think like, to me, that's the type of mindset for finding good ways to use these tools to automate our coding. Also like, like you mentioned, finding a counter example in the traveling salesman problem is easy to verify because you just check how many nodes it traverses or whatever, right? And it's, is the number smaller, right? So that's a very cheap operation to test a counter example. So if you know, so, so if you're able to like, get, let's say you try to prompt the, you know, write a prompt engineering prompt for chat GPT to solve the traveling salesman problem for something and you set it up and you prime it with some context and you like, you found one solution, but now it needs to find a better path. And if it, if it gives you a more optimal path, then you're done. You can easily verify that and you can say, you know that it provided you with something valuable because you can easily verify that it's a valid solution and a more optimal solution. Right? So the, there, this class of problems that is easy and cheap to verify that it's valuable is the kind of thing that where I find it to be a very interesting space. And I think that Elm is very well suited to this type of problem. So like one very simple example, like if you, if you want to write a JSON decoder and now another consideration here is like what inputs can we feed it to prime it to give, to give us better results. Right? So that, so we want to give it like prime it with good context and we want to have verifiable output. I've also been thinking about like that verification through a feedback cycle. So iterating on that verification becomes interesting. If you use the open AI APIs, you can automate this process where you can test these results. So you, and then you can even give it information like Elm compiler output or did a JSON decoder succeed. So if you, for example, you're trying to solve the problem of, I want to write a JSON decoder and you either have like a curl command to run to hidden API or some JSON example of what the API gives you, for example, that's your input. You prime it with that. You can even prime it with like a prompt that helps step you through that process to, to give you higher quality output, but then you can verify that. So you say your job is to write a JSON decoder. It needs to decode into this Elm type and it needs at the end, it needs to give me a compiling JSON decoder of this type and it needs to successfully decode given this input. That's all verifiable. So if it gives you garbage or hallucinate something, or it gives you invalid syntax, you can even tell it and it can iterate on that. And you can kind of reduce the amount of noise. Because I don't want to hear about hallucinations from AI. So you know, like before I mentioned like how much we want guarantees, not like somewhat high confidence. I want guarantees. But if we can throw away anything that's garbage and only get signal, no noise, then we can do really interesting things. And Elm is really good for that. You would like to have a system where you skip the intermediate steps of saying, telling, hey, this is wrong, because this doesn't compile. So here's some source code. Here's my request. And then there's some back and forth between the Elm compiler, for instance, and the system, the AI. And then you only get to know the ending result. Exactly. That would be much nicer. And then it's like a proven result. It's a guarantee at that point. So this is kind of the cool thing is like, with a little bit of glue and a little bit of piecing things together, a little bit of allowing it to iterate and get feedback and adapt based on that feedback, which is actually like GPT-4 is very good at this. You can get guarantees, you can get guaranteed safe tools, especially with Elm. With JavaScript, that would be more challenging. Yeah, it would be hard to verify the results. But I'm guessing, or at least whenever you say verifying the results, I'm thinking of the Elm compiler. But I'm also thinking of writing tests, you know. Exactly. I would probably also try to include the results of Elm tests to the prompt, if possible. But that does mean that you need to verify things. And that's kind of what our industry is all about, right? Why we have software engineers and not just coders. That's why we call ourselves engineers, is because we make things and we know it's going to be, we know we shouldn't trust even ourselves. We shouldn't trust the code that we're writing, the code that we're reading, and the code that has been running for years, because we know, well, there are bugs everywhere. So that's why we have all those tools, type systems, test suites, formal logic, manual QA, all those kinds of things, to make sure that we do things correctly. And also, even the processes, like the Agile movement is running your code in such a way, or working in such a way, that you get better results out of it. So we do need to verify our results. And we can't just use the results of the AI willy-nilly. I mean, we can, and people are. I think that's actually kind of the norm. It's going to become increasingly common to see, sort of like, this is a really weird piece of code. Does this even give the right results? Like, oh, somebody just YOLOed this chat GPT or this copilot completion into the code and committed it. Yeah. But I mean, it's something very different from what we do today. Because in a lot of cases, we are still running code and with not a lot of tests in practice. I feel like most people don't write enough tests, myself included. So this is just maybe strengthening the need for adding tests. Exactly. In a way, like our role changes, right? Our role becomes more like verifying and guiding systems rather than like, I can write a line of code. That's not the super valuable asset anymore. Yeah. But I do feel like because it's going to be so easy to write code, and because you don't go through all the steps of writing good code, you're not going to do it as much. For instance, what you like to do, and myself as well, is to do things in a TDD style. You know, you start with a red test, and you change the code to make the test green, but you only change the code as much as necessary for that test to become green. And then you continuously improve or complexify that function until it hits all the requirements. But if I ask the tool, hey, can you give me a function that does this? Well, I probably won't have all the same tests that would have been the results. Yes. Just like running tests after the fact. So you can probably ask the tool to write tests, but do you want an AI to write your tests? Right, exactly. It's kind of like, who monitors the police or whatever that sentence is. Right, right. I totally agree with your framing here. I mean, I think this is a very good way to look at it. And I think, you know, what do we want to take for granted is like how I would think about that. So for example, JSON decoders. Do we want to take JSON decoders for granted? Kind of like we kind of we want to be able to write them with a lot of flexibility, but we don't want to spend a lot of brainpower creating and maintaining them. So I mean, if they're verifiable, that's great. If we can continue to verify them, if we can, I mean, better still, if we can use something like GraphQL to make sure it stays in sync even better. But we don't really want to have to think too much about building and maintaining those low level details. We want that to just be like, given a decoder that works. And so this is a very good thing to delegate to AI and in my opinion, and whereas like solve this complex problem that has a lot of edge cases, and a lot of like things to consider the use case, how do we want it to behave and stuff like these are the types of things that I think our job as an engineer is still extremely relevant. Thinking about the user experience. And in my opinion, I think that engineering, these types of things are going to become a more important part of the job. Thinking about the user experience. Sure these AI systems can sort of do that, but we need like they can, we can tell them think about the user experience and think about these different use cases and think about that in the test suite you write. But I think you want a human involved in really artisanally crafting user experiences and use cases. And then you want to say, okay, now that I've figured these things out, here's a suite of tests. And if some AI thing can just satisfy those tests, maybe you're good, you know? Actually, one of the things that I tried with chat GPT three, so maybe it's better now, but I think my point was to hold is I told it, please write a function that satisfies these elm tests. So I wrote some tests and basically told it to write a function. And it did so and it was pretty good, but it wasn't correct. Like there were syntax errors, which I told it to fix. And when those were gone, well, the, the tests were not passing. Some of them were, but not, not all of them. And the function that I needed was slightly a bit too complex to be such an easy function to implement, as you said before. So basically the code that it wrote was pretty hard to read. And so that means that, okay, I have something that I can use as a basis and that I need to change to, to make the test pass the few failing tests pass. But because it was so complex, I was like, well, how do I make the test pass? Well, to, to make the test pass, I need to change the code to change the code. I need to understand the code. So how do we understand the code? Well, if anything you've taught me is like, or other people in the agile community, like you can get an understanding of the code by changing the code, by doing refactoring techniques, so extracting variables, renaming things, changing how conditions work. And as you do these steps, these tiny steps, because we like them, you start to get some insights into the code and then you can finally notice, oh, well, this is clearly wrong. Now I know what I need to change. And the thing is that I find funny is that this is exactly how you work with legacy code. But this code is only a few seconds old or a few minutes old, which is like working with legacy is becoming even more relevant. Even this new code, which I find very odd and more interesting. That's a nice insight. I like that. I think, I mean, I do think that we need to guide what kinds of results we want also with these steps, with prompt engineering and priming. But I think you're right that this does become a sort of process of creating some code that we can look at its behavior, we can see, we can get a test around it and see that the test is passing and verify it, but then not really understand the code and need to do that process of refactoring to get clarity and get it in the way that fits our mental model or gets away complexity. But also like we can say, you know, here's a unit test, make this, like write some code that makes this test pass. And we can do some prompt engineering that says, do that using the simplest thing that could possibly work. Here's an example of the simplest thing that could possibly work. In this test, there's this error message that the test is giving and you write this thing that, okay, sorting a list, it returns the hard-coded list and it makes it green. And that's the simplest way it could make that work. So you can actually illustrate that with examples. You can write very long prompts and you can get it to do a sort of fake it till you make it style process that you can actually understand. So you can get it to like follow the kind of process you would follow and it totally changes the results you get. And if you've, in addition to that, connect it to test output and compiler output so it can iterate on that, you can actually like automate some of those things, which starts to become very interesting. I'm wondering whether that would have the same effect in the sense that if I don't see, if I do this and I only see the end results, which is kind of the point, well, will I have an insight into how this function works because I didn't write it. So now it's just like someone else's code. And again, if I need to change it, then I need to go through all those refactoring steps or making it easier to understand for myself or just go read it well. But definitely the thing that I will keep in mind is that all these techniques about running good code, they will stay relevant. So if I don't want to lose my job, this is the kind of things that I can maybe should focus on because I think that these will stay relevant. Maybe my whole job will be removed. Maybe I will get fired if it has become way too good. But maybe my chances of not being fired increase if I am one of those who are better at these tasks. Right. Yeah. And one of the things that keeps coming up for me is like, what do I want to be atomic? Like there's a certain philosophy of using tools that I've arrived at through a lot of craftsmanship principles and TDD and things like that, which is like, I don't want tools that I can partially trust and I don't want tools that give me partial results. I want tools that I can completely trust and that allow me to take a set of low level steps, but think of them as one high level step. So to me, that's the question. Now, in the case of making a red test green and a TDD step, for example, like do the simplest thing that could possibly work. What if that was an atomic step I could take for granted? That instead of a set of low level steps, I will look at the code, I will hard code the return value, I will create a new module with the name that's failing. It says could not find module of this name. I will create that module. I will create a function of the name that the error message in the failing test says is missing. I will write a type annotation that satisfies the compiler and return an empty value and have a failing test. And then to make it green, I will change that empty value to a hard coded value that makes the test green. What if I could just take that for granted and say, hey, computer, do that step, do that TDD step to make it red and then make it green in the simplest way possible. And I could take that for granted and then I can take it from there. That would be great. And then that's something I can fully trust and I can sort of verify it. And so another principle I've been thinking about in sort of like designing these prompts and these workflows using AI tools is guardrails. So like not only verifying something at the end that it did the correct thing because you can run the Elm compiler, you can. But along the way, if you can say, OK, like, for example, you can create a new module and a new function, but you can't touch any other code and you can't touch the test. The test has to remain the same and the test must succeed at the end. You sort of set up guardrails and you say, listen, if the AI given these guardrails can give me a result that satisfies all these criteria by the end of it, then if it does that, I can verify that it gave me what I wanted and I can fully trust it. Those are the types of tools that I want. So one thing that I was really amazed by, I'll share a link to this tweet, but I saw this demo where this was actually with GPT-3, but this example stuck with me where somebody was finding that GPT-3 did a poor job if you asked it questions that went through sort of several steps. Like if you said, what is the capital of the country where the Taj Mahal is? Then it would give Agra or something like the city where the Taj Mahal is instead of New Delhi, which is the capital of India. So what they did is they did some prompt engineering. So they gave it a starting prompt, which said, here's an example of doing this thing. And they kind of gave an example question. They gave some intermediaries questions where it said, okay, well, in order to answer this question, I need to answer an intermediary question first. And so they gave an example of that as the sort of context for the prompt. And then they said, now answer this question. Question, what is the capital of the place where the Taj Mahal is, the country where the Taj Mahal is? And then it went ahead and followed that set of steps. Intermediary question, what country is the Taj Mahal in? Answer, India. Intermediary question, what is the capital of India? New Delhi. Simple answer, New Delhi. And it got the correct answer. So it got higher quality results because it was guided to break the problem down into sub problems. And pretty interesting, right? Yeah. It's a bit funny because I feel like everyone has this like, oh, well, you know, if I tried to chat to JPT and didn't give me great results, but then I tried to prime it or I tried to give this kind of prompt or written this way, and now we get great results. And I feel like maybe everyone will have their own ideal prompt and people will share it. It's kind of like, well, I have my set of key bindings of shortcuts for my computer. Oh, you don't have a shortcut for this action in your ID? Oh, let me share it with you. Or have their own proprietary prompts. Maybe yeah. And we will start to have like our very custom experience around working with AI. It's like, hey, this is how I do it. And this works for me. And this might not work for you. Yeah. And then it'll be like, here's a very good prompt for generating the best prompt. I kind of feel like maybe people who use Vim will have something like that. There's a real art to it. And I mean, you're getting it to break problems. So I took this concept, and I applied this idea of breaking the problem down into sub problems. I actually had written this blog post years back about like solving Elm code, like solving type puzzles in Elm, like a jigsaw puzzle frame then fill in. So like a jigsaw puzzle, you start by filling in the borders and the corner. The corner pieces are easy to find. So you find the corners, then you've got sort of a set of fixed points. So that's like one low hanging fruit. It's easy to solve those problems. Then you find the edge pieces and you can fill those in. And now that you've got the edges, it makes solving the rest of the puzzle easier, right? So that's one approach to solving jigsaw puzzles to break it down into sub problems. But like with Elm types, I kind of, I use this technique a lot when I'm writing Elm code as a human. I will, I'll say like, okay, I don't know exactly what's going to fit here in this pipeline. But I know I want to like take this starting value, I want to do something to it. And then I want it to be passed through in this pipeline to this next function. Right? So sometimes I'll just like put a debug.todo there. And then maybe I'll extract that debug.todo to a function or a let binding. And then I'll try to get a type annotation for that value I have in my let binding. That would satisfy the compiler. Exactly. Now I've broken it down into a sub problem. So I took this sort of like, fill in this code, I don't know what goes here, I've turned it into, okay, I know the type I need. So that's sort of like finding the edge pieces in the puzzle. So now I've created the sub problem for myself. And now I can do things like, so I've got a debug.todo with a type annotation. Now I can turn that into maybe result.map around a debug.todo or list.map with a debug.todo. So now I'm saying, well, I know that if I apply some function over a list, it will work. And now I've further broken down that sub problem. And now I can follow that step again and say, okay, we'll break out another, that debug.todo, give that a type annotation. So now it's list.map, some function, I don't know what, now follow that same process with that. So it's breaking it down into sub problems. I use this technique all the time when I'm like, often with like API design, you're doing weird type puzzles, but also just with like user code, like trying to parse some markdown and take the markdown blocks and find and traverse them and map them into this type and whatever. So I use this technique a lot. Now I tried to use this sort of same prompt engineering idea to teach GPT how to follow this set of steps of breaking down a type puzzle. And it was actually really good at it. So I'll share like a little GitHub gist of my GPT prompt and the results it got. But what I basically did is I told it, I said, your job is to solve this type puzzle. And I gave it some guardrails. So like the guardrails I gave it were, I'm going to give you some code, which has debug.todo replace me in it. Your job is to, you know, get a, satisfy the type for that debug.todo. And your final solution cannot include debug.todo. You can write intermediary steps, which may include debug.todo. And you are not allowed to change any code other than the section that says debug.todo. So I gave it these guardrails. Also these are verifiable things, right? So you can test for this to see if it's given you a valid solution, given the guardrails you wanted it to honor, because it might hallucinate and not do that, but you can check that. Yeah. So one thing that I'm thinking of is, will you be able to verify things accurately? Maybe I'm being too, I'm trying to play the devil's advocate here a bit, and I might be a bit too hard on chat.gpt. But for instance, whenever you're working in that TD style, when you do things one step at a time, you discover edge cases, right? So for instance, you give a list as an argument and needs to return a number. And first you hard code that number. And then you notice, Oh, well, what if that list is, is, is empty then? Oh, well then I need to write a test for if the, the, the list is empty. Ah, okay. So I'm going to do that. But the, the AI might not do that, might not notice that. So maybe it's, it is going to fix things correctly. Maybe not, but let's say it's going to do it correctly, but it's not going to have a test for that. Or you're not going to know, or you're going to, I mean, you are not going to notice that you're going to need to write a test with an empty list. So that's the process is a bit hard to figure out if you don't do it yourself. It's kind of like, I think also one of the reasons why people say, well, you should pair program rather than review someone else's code, because you will discover those, those things while you're working. Yeah, totally. Yeah, I agree. I think, I think that's, I think that that's something that's going to play out more and more these days. I think we're going to see like a lot of junior developers using these AI tools in exactly the kind of way you're describing where maybe they trust it too much to do too many steps. And then what happens is you're not really engaging with the problem intellectually, and you're not thinking about these test cases that come up. So I think there's an art to knowing when to use it. So like the type of problem here for this sort of frame then fill in problem I'm talking about, this is this is a class of problem that I find myself spending a lot of mental effort solving on a regular basis. That is kind of this, this, you know, it has this quality we talked about with a traveling salesman where you know it when you see it, if you have a good solution, you can easily verify that it that it solved it. And yet it's not really doing anything too creative, because it's fitting pieces together. It's not really writing too many implementation details. And I find that often with Elm code, you arrive at these types of situations where like, if you could make the types work, you would trust that the code worked because like, there's only really one good way to fit these functions together to get the right thing. Like you're not doing too much logic of like, give it this empty value and give it this now it might hallucinate these types of things. But you could even use prompt engineering to tell it like, you're just fitting these functions together. I don't want you to write new logic or use default values. So I think these types of things can be improved through prompt engineering and also through selecting the right types of problems. But like, for example, the I gave it a pretty, pretty challenging problem with this sort of prompt I designed. I had it fill in this, this thing in a in an Elm pages example that I have where it takes markdown blocks and it traverses these headings and it and I what I did is I primed it with a list of all of the available functions that it could use. And another thing you can do a set of guardrails is you can say only use these functions. And you could even say you must use these functions. And these other functions are available and you may not use any other functions. And of course, these things are verifiable in the in the final output easily. Right. But why would you tell it you can only use these functions because you're now limiting limiting its creativity. For instance, if you forget to mention list.map, then it's not going to use that. And it's going to use something else like list.fold instead. Well, so the the way basically I was doing this as a proof of concept of saying, I'm going to give you all of the functions that are in scope in this particular code base. And I'm going to give you like all of the functions from from the list module and from the result module. So you can give it like a certain set of available functions and say, these are the types and I taught it like I even taught it how partial application works. So I can take an example. And I said, given this type, if you pass in this function, now the type annotation is this. And it I played around with it and tweaked it in these ways. And it did a better job at solving these puzzles. So it's pretty interesting. You can kind of teach it in these prompts. Yeah. But you don't want to limit its creativity too much. Right. Yeah. Also. So but I get your point. Right. I wanted to solve a sort of uncreative problem of wiring things together that I don't really like if I could automate that as an atomic step, I would love to like if I could, you could even think of it this way, like, AI, give me all of the possible solutions using the functions in scope here to satisfy this type, right? Just like, and then you can just select, okay, these are all the valid ways to do that. So if I can teach through a GPT prompt, the AI to solve that type of puzzle, and give me all the possible results, and then I can use a tool to actually verify those results. So I so I know I can 100% trust them. That becomes a very interesting tool in my toolkit, where now I'm more capable as a programmer. And I'm not sort of like hallucinating weird things into my code base, or as you said, like having it write out these new cases that I'm not considering in my testing or considering how it affects the user experience. And if that's what I want the experience to be, it's just like, how do I solve this type problem? Oh, yeah, that's the only one sensible, sensible, meaningful solution, and it found it. And I can easily look at it and say, oh, yeah, result dot map, tuple dot map first list dot map. Yes, that it didn't use anything too crazy. It satisfies the types. It's good. I can easily look at it and see it did the right thing. But it would have taken me a long time to solve it myself. And so in case it wasn't clear, my idea is to like, this is something I want to experiment a little more with the OpenAI API to fully automate this. And because it's a pretty easy thing to automate to just say, what are all the types of all the functions in in scope here? Like that's a an automatable thing. So feed it that into the prompt and give it the ability through, you know, through writing a small script that hits the OpenAI API, tell it what the compiler error is to let it iterate on. So when I gave it this problem as a proof of concept manually, I manually told it the compiler errors and it with two iterations with telling it the compiler error, it was able to get the correct result, which I thought was pretty cool. So one thing that for now I'm feeling is a bit of a problem, but it will probably be solved pretty soon, very soon. Is that, for instance, at the moment we do everything through JGPT because that's a lot better than Copilot so far. But that means that every time you ask a new problem, you need to prime it again, you need to give it the context and the rules. So for instance, if you want to say, well, I have this problem here that I'm trying to solve and I don't want to spend mental power on doing it. So I'm asking the AI to do it for me, but I need to give it the functions in my codebase. Well, that's a lot of work. And so for a moment, we do it with JGPT, you always need to write those functions in the prompt. But at some point, I'm guessing that they will be able to analyze your codebase or your source file, and then it will be able to solve the problem. So a lot of our work as developers is not writing new code, it's editing existing code. So I feel like that's going to be somewhat missing now, but it's probably going to be solved pretty soon. The only question is how much input can give those AIs, and that's pretty low at the moment, I think. Actually, GPT-4, can't it take like 25,000 tokens as input? So you can feed it a huge input. That's nice. That has improved more. That's a game changer. Yeah, yeah. So you can feed it all of your documentation or all, you can give it huge inputs. Cool. Yeah. But until then, I'm thinking, for instance, if we had a tool that's extracted information from your codebase, and that you can then just copy paste into the prompt, that could be pretty cool. So like having all the types for the functions. And there is a tool that is called Elm Review, which has an extract feature. Yeah, exactly. To get whatever information is needed. But yeah, that's still going to be quite annoying. Like you probably don't want to send the types for all the APIs in your codebase. But maybe that could be interesting. Unless you automate it, and why not? It gives good results. Yeah, what I mean is more like if you need to give too much inputs in a way that the AI will not be able to parse that or understand that, or it's just too big. Like I work on a 200,000 lines of code, codebase. But how many type annotations does that represent, right? Like hundreds of thousands, probably? You think so? That are in scope in a particular point in code? Well, you can import anything. Not everything is exposed, probably. Yeah, exactly. Yeah. And a lot of things are going to be values that are locally scoped to let like I would I would venture to guess in a 200,000 line codebase. With code comments? Or maybe there are a thousand. Maybe there are like on the order of one to 10,000. No more than definitely no more than 10,000. Yeah, no, if you only include the exposed things or the things in scope of that file, then yeah, that's, that's a lot less. Oh, there's also dependencies, but that's also not that much. Right, maybe it's doable. And you can do heuristics to filter and not even heuristics, like reliable heuristics to filter out. You know, you know that if you're trying to arrive at this type, but none of the types connect in any way. So if you can take a string and use it on this thing, and you can take an int and turn it into a string, then those two things connect. But if a if this custom type can't be turned into a string, then you know it, it's not going to be involved in your problem at all, because your problem is dealing with strings, and you can't turn that to or from a string, for example. Yeah, you can also remove all the modules that would create an import cycle. Right. So basically, you can't import anything that imports this file directly or indirectly. Exactly. Yeah. So to me, this is the really interesting intersection. So now you were mentioning earlier that you think that these tools will start to understand your code more over time, but we're not there yet. I actually, I don't see it that way. I believe that these tools are going to continue doing what they're doing, which is that they've been remarkably successful in being able to solve complex problems just through this crazy synthesis and predictive text sort of thing. No, I didn't mean it in the sense of understanding. I meant it's just of gathering the information. Like every time you ask something to Jadgipty, you need to provide information about your code base. At the moment, it does not look at your code base. I see. I see. Right, right. But I don't think that they will, for example, know type information about your code base, except insofar as it's part of the predictive text because it's in there. But I think that they're getting enough mileage solving problems through this sort of predictive text, that they're going to keep going with that. But I think the interesting intersection, especially with typed pure functional programming languages is if you, so humans have their role, these sort of like compiler tools and static analysis tools have their role, and these AI tools have their role. So with this trifecta, I think each of these pieces needs to do what it is best at. Compilers are good at verifying things. Humans are good at, do we even need humans anymore? Humans are good at critically thinking, guiding these tools. Humans have goals. Humans are good at gathering requirements. Exactly. I'm not going to say they're good at it, but at the moment they're better than a machine. Exactly. And they have to because humans have goals. The AI's job is not to have goals. Yeah. Humans have goals for humans. When a machine wants to make a program for a machine, then it can do it on its own. This is absolutely not discrimination that I'm mentioning. God. Yeah. The human is the customer. The human is the one that gets to say whether you solved the problem or not, that gets to make the calls of what the problem you're solving is. So that's like, the human needs to do that. There's no substitute for that. Yeah. Because as you said, if the customer is a machine or an API or something, then you can automate it. So the human only asks, well, I need this, and then the machine can do the rest. And you can have these feedback cycles with compilers and all kinds of test suites. So yeah. Exactly. Yeah. So if that trifecta is what becomes really interesting to me, the human sets the goals and can sort of validate these criteria and accept or not accept them. The compiler is a verification tool. It is a tool for giving information through static analysis that is guaranteed correct information and checking that information. Review and other static analysis tools can provide similar input and verifications. And AI can piece things together using those guardrails and inputs and verifications provided by those other external systems. So when those three things are sort of interacting, then I think it becomes really interesting, especially, as I said, when we are using these things to create higher level building blocks as humans. So we can say, give me a decoder. And I know that it satisfies these things. And I don't have to use brainpower to check that because I know it's an automated verification of that. So I can trust it. Give me a fake it till you make it simplest thing that could possibly work green test for this test case and give it guardrails that allow me to trust that it's not going beyond that and filling in implementation details. Then you can actually trust these things. And yeah, well, there's there's one question of, do you even need a compiler or type checker in the linter and the test suites? Could you not just ask the AI to verify things? Yeah. But then it comes again to the point of, well, who monitors who? How do you trust the right checks? Right, exactly. And at the end of the day, we we do trust the compiler. Now, that said, it is possible for the compiler to have bugs and it can. But for all intents and purposes, we fully trust the compiler. We fully trust Elm Review. Of course, possible for these things to have bugs. But I think that's a good assumption. Whereas with AI, I don't fully trust it unless I verify it. Yeah. The thing that is very important for me with regards to the compilers and linters and test suites is that these are consistent. Like if you run the same code, if you ask the compiler to verify the same code, it's going to give you the same results. If you run the same code in a test suite, it's going to give you the same results. If you ask the AI to review your code, like, hey, are there any consistency issues that the linter would tell me, for instance, then from one run to another, it could tell you different things. Right. It's kind of like asking a human, hey, can you please review this code and tell me how you can improve it? Well, if I ask you today to do this seriously on my code base, you're going to find a lot of problems. If I ask you tomorrow to do it again from scratch, you're going to give me a whole different kind of problems. Like, oh, well, I think I can rewrite this function. Sure. But maybe it's good enough. Yeah. Linters, when they're dealing with consistency, they give you a certain minimum of consistency of code that is written in a specific way. And it could go higher, probably. Like you want all our functions to be named in a very similar way, for instance, but that's probably a bit too hard for a linter. An AI would always tell you different things, and we don't want that. So we need these to be trustworthy and consistent in the sense that it doesn't give you different results every time. Right. And the lower level the task, the more we can trust it. Just like Elm types, because the type system is so simple, it's easy to trust it. Whereas TypeScript, it's so permissive, it's hard to trust it. And there are so many caveats and exceptions that it's hard to trust such a complex and permissive system. Yeah. So I do think that this might be a superpower of Elm. And honestly, I think that maybe this could be a really appealing thing about Elm that makes it more mainstream. That, wow, this language, it turns out it's really good for automating and tooling. And you know what? Automating and tooling is really hot these days because people are building all sorts of AI automation. And we can have trusted AI automation. So I think we're at this early stage where people are just sort of letting AI just write their code, which is kind of crazy. They're letting AI just execute shell commands for them. I saw a recent thing where somebody like... We all knew it was going to happen when you start letting AI just fill in commands in your shell. But somebody basically like RMRFed their drive or broke their computer and are trying to fix it. We all knew it was going to happen. It's kind of a crazy state of things, right? But if we can have tools that we can really trust and not have to worry about it doing anything that's going to put things in a bad state or go beyond the scope of what we're trying to do, just like perfectly reliably solve a difficult problem that we can now take for granted. That's awesome. And I think Elm is a really good fit for that. Yeah. I've also heard the opposite point of view where this could be pretty bad for Elm or for smaller languages in the sense that the AI is trained on code that is available. And there's not a lot of Elm code out there compared to more mainstream languages like JavaScript. So this could make adoption of new languages harder or smaller languages in general. But as you said, if there are guarantees like the ones that Elm provides, that can even out the playing field. But if you're designing a language that doesn't have the same guarantees as Elm, and it's just very new or very small, then you get kind of the worst of both worlds. Right. And this all depends on writing the tooling, right? And so I think we have an opportunity to build really cool stuff leveraging these techniques right now. So I'm definitely going to be playing around with that. Like I've got a lot of ideas. I want to make this sort of automated type puzzle solver. I think, you know, having it build JSON decoders starts to become really interesting where like Mario and I were working on this Elm HTTP fusion thing, which is really cool for like having a UI where you make an HTTP request, and then you can sort of click the JSON fields you want and it generates a decoder. It's like, that's great. But what if you can tell it the type you want and it can figure out what fields to get and generate something that is provably correct because you actually ran it and verified it, and then you can fully trust it, but it just solves your problem. And it sort of can solve that last mile problem where like, there are so many things I've been trying to automate where it's difficult to do that last little piece of the puzzle and AI can do that missing piece. So I think this unlocks some really cool things. I've been thinking about like some other use cases I'm thinking about are like, so for example, like with Elm GraphQL, you know, we've talked with Matt about Elm GQL, which sort of tries to be a simpler way of just taking a raw GraphQL query as a string. And it's very easy to interact with GraphQL APIs through this raw query string. And then it can generate type aliases for you of the response you get, and you just paste in your GraphQL query string and it spits out some Elm code to execute that query. And the trade off with that approach in Elm GQL versus Elm GraphQL, as we talked about in our Elm GQL episode is with Elm GraphQL, you have to explicitly write everything you're decoding in Elm code. But you can maintain it in Elm code and you get more fine grained control over the types you decode into. So there's a trade off. But what if you had a tool that generated an Elm GraphQL query, you get complete control over the fine grained code and that you decode into, but what if you could just tell an AI tool generate an Elm GraphQL query. And using this sort of type puzzle solver I built, I can say here are all the functions for generating Elm GraphQL types, solve this problem. And here's the raw GraphQL query. And here is the resulting Elm type I want. And it could, I think it could solve that pretty well. So some of these tools become more interesting when you have that extra bit of glue from AI. And that would solve all of Elm's problems because all of Elm's problems are boilerplate. Exactly. It's boilerplate that's really easy to maintain once you have it. So if it's very easy to confidently write boilerplate, then yeah, Elm becomes a lot more exciting. If we take your last example, it does mean that you redo the same logic every time and not necessarily in a framework or library oriented way. So you would redo, you would inline the creation of the GraphQL query and decoding those instead of using a pre-made library, which simplifies the API for that. But it could be very interesting nonetheless. Yeah. Yeah. I think part of the challenge right now to using these tools effectively is like defining the problems and the workflows to leverage these as much as possible. Another thing on my mind here is like refactoring. So we have, you know, if you build in an IntelliJ refactoring for like extracting a function to a module, like what kinds of refactoring should we invest in building in like IDEs or language servers versus using AI? I mean, we could also just ask an AI to write those things to be integrated into the ID for instance. So for instance, if you go back to the linter example, I don't want an AI to review my code because it's going to be inconsistent. I can ask it to write a linter rule once and then I can run that linter rule multiple times. But yeah, I definitely agree that there are cases where you will want to have a transformation using AI rather than one that is hard-coded one way or another in an IDE. That could be interesting to find. Yeah. And I mean, I don't know. I'm very bullish on what we can do with these AI tools. But I'll have you ask yourself whether you should. Well, that's another question. The thing I'm bearish on would be just saying AI build a plugin. You know, people are, there's a lot of hype around like it built a Chrome extension for this thing. It built a whole app from a sketch on a napkin. And so it's like, okay, that's very impressive. It's very interesting, but like how I am skeptical of how useful that is going to actually prove to be. Like, I don't feel like that's what's going to take people's jobs away. I don't feel like that's what's going to replace the work we're doing day to day. I think it's these more mature things that we can really rely on where we're choosing more constrained problems to do higher level operations and verify them and put guardrails on them. Like, I don't know. I think that's my personal bias and obsession and people will get over that and not worry about that and be able to do cooler things than I can do. That's very possible. I admit that's a possibility, but that's where I'm putting my money. So like writing, having it write the IDE completions for extracting functions and things like that. Like it's like I can, the hard part isn't writing like the happy path. I can write the happy path of that. I've actually, I've done that in IntelliJ refactorings. The hard part is everything else that it's not considering. And if I have to babysit it to make sure it solved each of those cases, I may as well do it myself. Cause like the things it's going to miss, the things that I don't trust that it did and I have to go check myself, it's easier to do them myself and engage with the problem and solve it my way and know that I accounted for every corner case and wrote a test for it than to just trust the AI and be like, okay, now I have to go check everything that it did in this crazy, impossible to understand code. That's not the way I would have solved it. But if you paired with the AI. Right. That's, that's the direction I think things are going. Just like tell it very high level instructions. But every time you give instructions, you, there's, there's some bias, right? So at least so far the, the AI is, they're always very confident. Exactly. Which is problematic when they're actually wrong. But they're also never going to say no. Well unless you ask for things that's been trained to say no to. Right. Yeah. I've seen a lot of people in the Elm Slack ask for questions like, how do I do X or how do I do, how do I solve this problem? And there's often that XY problem. Like you ask to solve it. Exactly. You asked a solution to X, but you're actually trying to solve a different Y problem. And so even if I imagine that the AIs will become extremely, extremely good, like 100 times better than you and me combined, or there's still only going to solve the problem that you're asking them to. Just like, let's imagine it's the smartest person on the world that you have free access to. Well, if you ask them something and they don't know, they don't think about whether you're going to, whether it makes sense to ask the question, then they're not going to tell you. Exactly. So you need to prompt them, but you also need to think about how you ask the question, what question you ask. And I'm thinking maybe we should ask them as well. Like, Hey, I have this feature that I want to do. So can you tell me how I transform this HTML to a string? And maybe you should also ask, like, does this make sense by the way? Because then they start asking, answering that question. Well, that no, that doesn't make sense. So I said, we're good at gathering requirements, but we're not very good at those, but that is our job. And I think it will increasingly become our job. So we're going to become AI managers. Yeah. Basically. I think that's a good way to look at it. Yeah. AI product owners. Yeah, totally. Totally. Yeah. I think, and what you're talking about, the word that's been coming to mind for me is that these AI engines are very suggestible. Like if you say, I don't know, where might I have lost my keys? Hint, I often forget them in my pants that I put in the hamper. Then it's going to be like, are they in the hamper? But it's going to run with, I've seen that with the Elm compiler sometimes says, hint, and it tells it, maybe you need to do this. And then it's like, okay, sure, let me try. And it gets fixated on this one path that the compiler sort of hinted at, and that's not a good path. So that's why with this type puzzle, I was trying to give it a very clear set of rules and say, this is the set of steps you're following. And then even teach it, this is how you adjust if you are incorrect in one of your guesses. And so you really have to prime it and prevent it from getting fixated and biased in one direction. Yeah. But you also said some guardrails and if you were wrong in sending those guardrails, that's going to be a long problem for you. Oh yeah, absolutely. And it is, I mean, these AI engines are also, they're interesting for ideation as well. So there, I mean, that's a whole nother topic we could get into, but. We mostly talked about using it for things that we know well, and that we can validate, verify, which I completely agree is probably the way to use it. But it is also very good at helping you out when you don't know something. And there it becomes a lot more dangerous because it's overconfident and it's going to lead you to wrong results, wrong paths, and you're not going to be able to figure those out. But because it knows a lot more than you, it will, I think in a lot of cases, be used in that way. And there people have to weigh in the risks that are involved. Right. So definitely in some cases, it's going to be amazing. For instance, I am not a good drawer, but I can ask an AI to draw something for me. I actually do have a whole website filled with drawings, but I probably shouldn't train it on that. But yeah, if I ask the AI to do it, then that would probably give some better results. But when it comes to code, if I can verify it, then it's better. If I can't verify it, then it's something new to me. Well, that is very interesting as well. And the thing that I'm worried here about on that matter is that if I ask the tool to do something for me for something that I don't know, whether I will start over relying on it instead of learning properly and improving my own skill sets. I think that's going to happen a lot with a lot of people getting into development right now. And yeah, I think being an experienced developer, it's a lot easier to know what to rely on it for or when it's maybe like starting to write code where you're not learning to write a reg x. And you probably should sort of figure that out instead of just blindly trusting a thing. Or maybe it's okay to just be like, if the test passes, I don't really care how it arrived at that. Maybe that's okay too. You know, but yeah, I can for instance, imagine a backend developer who knows a little bit of Elm and they just ask the AI to generate the UI for their application or at least the view parts of the application. And that's going to be very helpful to get started. But how do you make sure that things are correct with accessibility and all those concerns that you don't know about? Right, exactly. Is it going to fit well with a design system you set up? And there are all these assumptions that, yeah, so you have to know what to rely on it for. And if it's like, if you can have it perform a high level task that you can fully verify and trust it for, that's interesting. If you can have it help you with ideation and generating a list of things to think about, and that's input for you to consider some other things, that's also very good. Because that, if something is helping you with ideation, you can filter out a little bit of junk to get the diamond in the rough. Oh, this one idea, I didn't consider that. And that was really good. So that's another use case. But the sort of in-between space where you just YOLO it and blindly incorporate it into your code, I'm honestly pretty skeptical of the utility of that. And I'm skeptical of how maintainable it's going to be working with systems like that and maintaining code where there's a lot of that happening. I think it's going to be okay for things that you're okay with throwing away. Well, that you're okay with and that you can throw away. Yeah, yeah, right. Yeah, if you can scope something down really narrowly. I used it the other day for writing something to traverse a directory structure to find the root Elm project by looking until it found an Elm.json file. For my Elm pages scripts, I changed it so you can do Elm pages run and then give a file path and it will find the nearest Elm.json to the file you pass in. And I wrote it with GPT-4 and I went through a few iterations and I guided it very clearly with what I wanted in the result. But I knew it was like, this is going to generate one function for me that if it works, I can just let it do its thing. Although I didn't like the style it used. So I told it, instead of doing a bunch of for loops and while loops, can you do it using functional style mapping and recursive functions? And it modified it. And then I said, can you use ESM imports instead? And with a few tweaks, I had it refactor it to the style I wanted. And so yeah, it was like a constrained thing. And the next time you do that, you will prime it with, oh, use a functional style and use ESM, etc. Right. And that was like a constrained enough thing that I know with my experience, that it's like an independent, separable problem that if it writes a function that does this, I can use that and it can be useful to my workflow. So I think there's an art to knowing when to rely on it as well. I feel like we have a lot more to talk about, a lot of interesting aspects to cover, but this has already been a quite long episode. Yes. So I think we're going to cut it here. Maybe we'll come back to this topic in a few months. Who knows? Let us know if you like it and if you want more of it. Yeah. And tell us what you've been doing with Element AI or pure functional programming and AI. We would love to hear from you. We'd love to hear what clever things you come up with or just how you use it in your workflow and let us know what you want to hear about with Element AI in the future. Did you prompt the audience well enough so that they give you the answers that you're looking for or do you need to rephrase it slightly? Maybe let's give them some guardrails. Give us your example use cases. Give us an example of the problem you used with it. There we go. I think we're good. Don't give us ideas if you think they're bad. Okay, that should be it, I think. Perfect. Well, Jeroen, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello Jeroen.", "tokens": [2425, 508, 2032, 268, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello Dillon.", "tokens": [2425, 28160, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 2, "seek": 0, "start": 2.0, "end": 6.640000000000001, "text": " I'm very glad to be talking about this topic so promptly.", "tokens": [286, 478, 588, 5404, 281, 312, 1417, 466, 341, 4829, 370, 48594, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 3, "seek": 0, "start": 6.640000000000001, "end": 10.96, "text": " I think it's really important to get on it and talk about it right away.", "tokens": [286, 519, 309, 311, 534, 1021, 281, 483, 322, 309, 293, 751, 466, 309, 558, 1314, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 4, "seek": 0, "start": 10.96, "end": 16.96, "text": " I was thinking you were going to do a pun with AI or something and I was like, I couldn't", "tokens": [286, 390, 1953, 291, 645, 516, 281, 360, 257, 4468, 365, 7318, 420, 746, 293, 286, 390, 411, 11, 286, 2809, 380], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 5, "seek": 0, "start": 16.96, "end": 21.76, "text": " find anything to, anything funny to say, but yep.", "tokens": [915, 1340, 281, 11, 1340, 4074, 281, 584, 11, 457, 18633, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 6, "seek": 0, "start": 21.76, "end": 22.76, "text": " Good one.", "tokens": [2205, 472, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 7, "seek": 0, "start": 22.76, "end": 23.76, "text": " Good one.", "tokens": [2205, 472, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 8, "seek": 0, "start": 23.76, "end": 26.080000000000002, "text": " Yeah, it was unprompted, but I had to go for it.", "tokens": [865, 11, 309, 390, 517, 28722, 25383, 11, 457, 286, 632, 281, 352, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.30209805672628837, "compression_ratio": 1.6123348017621146, "no_speech_prob": 0.10057061165571213}, {"id": 9, "seek": 2608, "start": 26.08, "end": 33.64, "text": " This was a handcrafted artisanal pun, not coded, not AI assisted in any way, I promise.", "tokens": [639, 390, 257, 1011, 5611, 292, 1523, 14804, 304, 4468, 11, 406, 34874, 11, 406, 7318, 30291, 294, 604, 636, 11, 286, 6228, 13], "temperature": 0.0, "avg_logprob": -0.27203864382024395, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.2411236639309209e-05}, {"id": 10, "seek": 2608, "start": 33.64, "end": 34.64, "text": " I believe you.", "tokens": [286, 1697, 291, 13], "temperature": 0.0, "avg_logprob": -0.27203864382024395, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.2411236639309209e-05}, {"id": 11, "seek": 2608, "start": 34.64, "end": 36.04, "text": " Not, not on the unprompted part.", "tokens": [1726, 11, 406, 322, 264, 517, 28722, 25383, 644, 13], "temperature": 0.0, "avg_logprob": -0.27203864382024395, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.2411236639309209e-05}, {"id": 12, "seek": 2608, "start": 36.04, "end": 40.8, "text": " It actually was not AI assisted, although, um, we're going to, I imagine we're going", "tokens": [467, 767, 390, 406, 7318, 30291, 11, 4878, 11, 1105, 11, 321, 434, 516, 281, 11, 286, 3811, 321, 434, 516], "temperature": 0.0, "avg_logprob": -0.27203864382024395, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.2411236639309209e-05}, {"id": 13, "seek": 2608, "start": 40.8, "end": 46.28, "text": " to have a lot of bad puns out there these days with AI assisting people, you know, using", "tokens": [281, 362, 257, 688, 295, 1578, 4468, 82, 484, 456, 613, 1708, 365, 7318, 40368, 561, 11, 291, 458, 11, 1228], "temperature": 0.0, "avg_logprob": -0.27203864382024395, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.2411236639309209e-05}, {"id": 14, "seek": 2608, "start": 46.28, "end": 48.599999999999994, "text": " it for evil and creating more puns in the world.", "tokens": [309, 337, 6724, 293, 4084, 544, 4468, 82, 294, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.27203864382024395, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.2411236639309209e-05}, {"id": 15, "seek": 2608, "start": 48.599999999999994, "end": 52.519999999999996, "text": " So be on the lookout.", "tokens": [407, 312, 322, 264, 41025, 13], "temperature": 0.0, "avg_logprob": -0.27203864382024395, "compression_ratio": 1.6379310344827587, "no_speech_prob": 1.2411236639309209e-05}, {"id": 16, "seek": 5252, "start": 52.52, "end": 56.84, "text": " Well that will compensate the fact that people have less kids nowadays and there are less", "tokens": [1042, 300, 486, 29458, 264, 1186, 300, 561, 362, 1570, 2301, 13434, 293, 456, 366, 1570], "temperature": 0.0, "avg_logprob": -0.32140304163882605, "compression_ratio": 1.537037037037037, "no_speech_prob": 5.62573973184044e-07}, {"id": 17, "seek": 5252, "start": 56.84, "end": 63.0, "text": " dads, you know, so I think we've introduced the subject.", "tokens": [41798, 11, 291, 458, 11, 370, 286, 519, 321, 600, 7268, 264, 3983, 13], "temperature": 0.0, "avg_logprob": -0.32140304163882605, "compression_ratio": 1.537037037037037, "no_speech_prob": 5.62573973184044e-07}, {"id": 18, "seek": 5252, "start": 63.0, "end": 71.56, "text": " We're going to talk about AI and Elm and all of those things that are quite buzzy at the,", "tokens": [492, 434, 516, 281, 751, 466, 7318, 293, 2699, 76, 293, 439, 295, 729, 721, 300, 366, 1596, 758, 89, 1229, 412, 264, 11], "temperature": 0.0, "avg_logprob": -0.32140304163882605, "compression_ratio": 1.537037037037037, "no_speech_prob": 5.62573973184044e-07}, {"id": 19, "seek": 5252, "start": 71.56, "end": 74.56, "text": " in the last few months.", "tokens": [294, 264, 1036, 1326, 2493, 13], "temperature": 0.0, "avg_logprob": -0.32140304163882605, "compression_ratio": 1.537037037037037, "no_speech_prob": 5.62573973184044e-07}, {"id": 20, "seek": 5252, "start": 74.56, "end": 79.2, "text": " And ever more and more, it's a bit hard to keep up.", "tokens": [400, 1562, 544, 293, 544, 11, 309, 311, 257, 857, 1152, 281, 1066, 493, 13], "temperature": 0.0, "avg_logprob": -0.32140304163882605, "compression_ratio": 1.537037037037037, "no_speech_prob": 5.62573973184044e-07}, {"id": 21, "seek": 5252, "start": 79.2, "end": 80.52000000000001, "text": " It's going so fast.", "tokens": [467, 311, 516, 370, 2370, 13], "temperature": 0.0, "avg_logprob": -0.32140304163882605, "compression_ratio": 1.537037037037037, "no_speech_prob": 5.62573973184044e-07}, {"id": 22, "seek": 8052, "start": 80.52, "end": 91.44, "text": " So just to set the record or we're recording at the beginning of April, 2022, 2023.", "tokens": [407, 445, 281, 992, 264, 2136, 420, 321, 434, 6613, 412, 264, 2863, 295, 6929, 11, 20229, 11, 44377, 13], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 23, "seek": 8052, "start": 91.44, "end": 92.44, "text": " No you are wrong.", "tokens": [883, 291, 366, 2085, 13], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 24, "seek": 8052, "start": 92.44, "end": 100.12, "text": " If we were recording this in 2022 and talking about GPT-4, that would be incredibly prescient.", "tokens": [759, 321, 645, 6613, 341, 294, 20229, 293, 1417, 466, 26039, 51, 12, 19, 11, 300, 576, 312, 6252, 1183, 5412, 13], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 25, "seek": 8052, "start": 100.12, "end": 105.32, "text": " Yeah, but I'm just going to gaslight you and tell you you're wrong.", "tokens": [865, 11, 457, 286, 478, 445, 516, 281, 4211, 2764, 291, 293, 980, 291, 291, 434, 2085, 13], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 26, "seek": 8052, "start": 105.32, "end": 106.84, "text": " Just like that AI.", "tokens": [1449, 411, 300, 7318, 13], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 27, "seek": 8052, "start": 106.84, "end": 107.84, "text": " It's a hallucination.", "tokens": [467, 311, 257, 35212, 2486, 13], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 28, "seek": 8052, "start": 107.84, "end": 108.84, "text": " Are you hallucinating?", "tokens": [2014, 291, 35212, 8205, 30], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 29, "seek": 8052, "start": 108.84, "end": 109.84, "text": " Are you an AI?", "tokens": [2014, 291, 364, 7318, 30], "temperature": 0.0, "avg_logprob": -0.33663137142474836, "compression_ratio": 1.559090909090909, "no_speech_prob": 1.6536474731765338e-06}, {"id": 30, "seek": 10984, "start": 109.84, "end": 114.64, "text": " I am legally contracted to say no to that.", "tokens": [286, 669, 21106, 37629, 281, 584, 572, 281, 300, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 31, "seek": 10984, "start": 114.64, "end": 118.16, "text": " So yeah, so this is April, 2023.", "tokens": [407, 1338, 11, 370, 341, 307, 6929, 11, 44377, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 32, "seek": 10984, "start": 118.16, "end": 120.4, "text": " In one month, this will be outdated.", "tokens": [682, 472, 1618, 11, 341, 486, 312, 36313, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 33, "seek": 10984, "start": 120.4, "end": 122.48, "text": " We hope it won't, but we'll see.", "tokens": [492, 1454, 309, 1582, 380, 11, 457, 321, 603, 536, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 34, "seek": 10984, "start": 122.48, "end": 126.48, "text": " So chat GPT-4 was just released.", "tokens": [407, 5081, 26039, 51, 12, 19, 390, 445, 4736, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 35, "seek": 10984, "start": 126.48, "end": 128.32, "text": " GitHub Copilot X was announced.", "tokens": [23331, 11579, 31516, 1783, 390, 7548, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 36, "seek": 10984, "start": 128.32, "end": 130.48000000000002, "text": " Yeah, I'm on the waiting list for that.", "tokens": [865, 11, 286, 478, 322, 264, 3806, 1329, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 37, "seek": 10984, "start": 130.48000000000002, "end": 131.76, "text": " Haven't gotten access yet.", "tokens": [23770, 380, 5768, 2105, 1939, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 38, "seek": 10984, "start": 131.76, "end": 134.28, "text": " So yeah, this is the current state.", "tokens": [407, 1338, 11, 341, 307, 264, 2190, 1785, 13], "temperature": 0.0, "avg_logprob": -0.3171421532492036, "compression_ratio": 1.4423963133640554, "no_speech_prob": 1.1910821058336296e-06}, {"id": 39, "seek": 13428, "start": 134.28, "end": 140.64000000000001, "text": " AI journey is the best one to create images so far, and we have no clue how it will be", "tokens": [7318, 4671, 307, 264, 1151, 472, 281, 1884, 5267, 370, 1400, 11, 293, 321, 362, 572, 13602, 577, 309, 486, 312], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 40, "seek": 13428, "start": 140.64000000000001, "end": 141.96, "text": " in the future.", "tokens": [294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 41, "seek": 13428, "start": 141.96, "end": 143.68, "text": " Things are moving very fast.", "tokens": [9514, 366, 2684, 588, 2370, 13], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 42, "seek": 13428, "start": 143.68, "end": 145.6, "text": " Yeah, very fast.", "tokens": [865, 11, 588, 2370, 13], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 43, "seek": 13428, "start": 145.6, "end": 152.36, "text": " So these are all very interesting technologies and people think that they are going to revolutionize", "tokens": [407, 613, 366, 439, 588, 1880, 7943, 293, 561, 519, 300, 436, 366, 516, 281, 8894, 1125], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 44, "seek": 13428, "start": 152.36, "end": 153.36, "text": " a lot of things.", "tokens": [257, 688, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 45, "seek": 13428, "start": 153.36, "end": 158.04, "text": " They're probably going to be right in some aspects and wrong in some others.", "tokens": [814, 434, 1391, 516, 281, 312, 558, 294, 512, 7270, 293, 2085, 294, 512, 2357, 13], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 46, "seek": 13428, "start": 158.04, "end": 162.92000000000002, "text": " What I want to talk mostly today about was like the coding aspects of it.", "tokens": [708, 286, 528, 281, 751, 5240, 965, 466, 390, 411, 264, 17720, 7270, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.2701194198043258, "compression_ratio": 1.625, "no_speech_prob": 8.186004265553493e-07}, {"id": 47, "seek": 16292, "start": 162.92, "end": 165.04, "text": " Is AI going to replace developers?", "tokens": [1119, 7318, 516, 281, 7406, 8849, 30], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 48, "seek": 16292, "start": 165.04, "end": 168.44, "text": " Is it going to help them mostly?", "tokens": [1119, 309, 516, 281, 854, 552, 5240, 30], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 49, "seek": 16292, "start": 168.44, "end": 172.79999999999998, "text": " And all those kinds of things that people might wonder as well.", "tokens": [400, 439, 729, 3685, 295, 721, 300, 561, 1062, 2441, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 50, "seek": 16292, "start": 172.79999999999998, "end": 176.2, "text": " How do you use this effectively to your advantage?", "tokens": [1012, 360, 291, 764, 341, 8659, 281, 428, 5002, 30], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 51, "seek": 16292, "start": 176.2, "end": 180.79999999999998, "text": " How do you avoid being misusing them as well?", "tokens": [1012, 360, 291, 5042, 885, 3346, 7981, 552, 382, 731, 30], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 52, "seek": 16292, "start": 180.79999999999998, "end": 187.6, "text": " So you've played with chat GPT-4 at the moment, and I think you've had some interesting results.", "tokens": [407, 291, 600, 3737, 365, 5081, 26039, 51, 12, 19, 412, 264, 1623, 11, 293, 286, 519, 291, 600, 632, 512, 1880, 3542, 13], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 53, "seek": 16292, "start": 187.6, "end": 188.6, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 54, "seek": 16292, "start": 188.6, "end": 189.6, "text": " Do you want to talk about that?", "tokens": [1144, 291, 528, 281, 751, 466, 300, 30], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 55, "seek": 16292, "start": 189.6, "end": 190.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.28564124334426155, "compression_ratio": 1.5333333333333334, "no_speech_prob": 1.8447072989147273e-06}, {"id": 56, "seek": 19060, "start": 190.6, "end": 196.35999999999999, "text": " So maybe to set the stage a little bit regarding the question of will AI take our jobs?", "tokens": [407, 1310, 281, 992, 264, 3233, 257, 707, 857, 8595, 264, 1168, 295, 486, 7318, 747, 527, 4782, 30], "temperature": 0.0, "avg_logprob": -0.2517541738656851, "compression_ratio": 1.631578947368421, "no_speech_prob": 2.9939055821159855e-06}, {"id": 57, "seek": 19060, "start": 196.35999999999999, "end": 202.4, "text": " I tend to think that, I mean, of course, it's very interesting and time will tell and anything", "tokens": [286, 3928, 281, 519, 300, 11, 286, 914, 11, 295, 1164, 11, 309, 311, 588, 1880, 293, 565, 486, 980, 293, 1340], "temperature": 0.0, "avg_logprob": -0.2517541738656851, "compression_ratio": 1.631578947368421, "no_speech_prob": 2.9939055821159855e-06}, {"id": 58, "seek": 19060, "start": 202.4, "end": 203.4, "text": " could happen.", "tokens": [727, 1051, 13], "temperature": 0.0, "avg_logprob": -0.2517541738656851, "compression_ratio": 1.631578947368421, "no_speech_prob": 2.9939055821159855e-06}, {"id": 59, "seek": 19060, "start": 203.4, "end": 204.76, "text": " Things are moving very quickly.", "tokens": [9514, 366, 2684, 588, 2661, 13], "temperature": 0.0, "avg_logprob": -0.2517541738656851, "compression_ratio": 1.631578947368421, "no_speech_prob": 2.9939055821159855e-06}, {"id": 60, "seek": 19060, "start": 204.76, "end": 210.04, "text": " I don't think we can make predictions with too much accuracy at this stage with the way", "tokens": [286, 500, 380, 519, 321, 393, 652, 21264, 365, 886, 709, 14170, 412, 341, 3233, 365, 264, 636], "temperature": 0.0, "avg_logprob": -0.2517541738656851, "compression_ratio": 1.631578947368421, "no_speech_prob": 2.9939055821159855e-06}, {"id": 61, "seek": 19060, "start": 210.04, "end": 211.28, "text": " things are going.", "tokens": [721, 366, 516, 13], "temperature": 0.0, "avg_logprob": -0.2517541738656851, "compression_ratio": 1.631578947368421, "no_speech_prob": 2.9939055821159855e-06}, {"id": 62, "seek": 19060, "start": 211.28, "end": 215.92, "text": " But I tend to believe that this is going to be a very powerful tool.", "tokens": [583, 286, 3928, 281, 1697, 300, 341, 307, 516, 281, 312, 257, 588, 4005, 2290, 13], "temperature": 0.0, "avg_logprob": -0.2517541738656851, "compression_ratio": 1.631578947368421, "no_speech_prob": 2.9939055821159855e-06}, {"id": 63, "seek": 21592, "start": 215.92, "end": 222.56, "text": " And I think that it's more likely that people who are good at using these tools will replace", "tokens": [400, 286, 519, 300, 309, 311, 544, 3700, 300, 561, 567, 366, 665, 412, 1228, 613, 3873, 486, 7406], "temperature": 0.0, "avg_logprob": -0.1970680046081543, "compression_ratio": 1.6946902654867257, "no_speech_prob": 3.446494019954116e-06}, {"id": 64, "seek": 21592, "start": 222.56, "end": 227.48, "text": " your job rather than the tools themselves will replace our jobs.", "tokens": [428, 1691, 2831, 813, 264, 3873, 2969, 486, 7406, 527, 4782, 13], "temperature": 0.0, "avg_logprob": -0.1970680046081543, "compression_ratio": 1.6946902654867257, "no_speech_prob": 3.446494019954116e-06}, {"id": 65, "seek": 21592, "start": 227.48, "end": 232.67999999999998, "text": " So I think it's an important skill, just like Googling was an important skill.", "tokens": [407, 286, 519, 309, 311, 364, 1021, 5389, 11, 445, 411, 45005, 1688, 390, 364, 1021, 5389, 13], "temperature": 0.0, "avg_logprob": -0.1970680046081543, "compression_ratio": 1.6946902654867257, "no_speech_prob": 3.446494019954116e-06}, {"id": 66, "seek": 21592, "start": 232.67999999999998, "end": 236.11999999999998, "text": " Of course, it's a next level of that.", "tokens": [2720, 1164, 11, 309, 311, 257, 958, 1496, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.1970680046081543, "compression_ratio": 1.6946902654867257, "no_speech_prob": 3.446494019954116e-06}, {"id": 67, "seek": 21592, "start": 236.11999999999998, "end": 237.32, "text": " It's more sophisticated.", "tokens": [467, 311, 544, 16950, 13], "temperature": 0.0, "avg_logprob": -0.1970680046081543, "compression_ratio": 1.6946902654867257, "no_speech_prob": 3.446494019954116e-06}, {"id": 68, "seek": 21592, "start": 237.32, "end": 244.07999999999998, "text": " It's able to do things on its own, which is not quite what Google was doing for us.", "tokens": [467, 311, 1075, 281, 360, 721, 322, 1080, 1065, 11, 597, 307, 406, 1596, 437, 3329, 390, 884, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.1970680046081543, "compression_ratio": 1.6946902654867257, "no_speech_prob": 3.446494019954116e-06}, {"id": 69, "seek": 24408, "start": 244.08, "end": 246.12, "text": " But you can be...", "tokens": [583, 291, 393, 312, 485], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 70, "seek": 24408, "start": 246.12, "end": 248.72, "text": " Googling is an important technical skill.", "tokens": [45005, 1688, 307, 364, 1021, 6191, 5389, 13], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 71, "seek": 24408, "start": 248.72, "end": 253.68, "text": " And if you are a developer, it's worth trying to get good at that.", "tokens": [400, 498, 291, 366, 257, 10754, 11, 309, 311, 3163, 1382, 281, 483, 665, 412, 300, 13], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 72, "seek": 24408, "start": 253.68, "end": 259.36, "text": " And in the same way, I think using AI tools effectively is an important skill.", "tokens": [400, 294, 264, 912, 636, 11, 286, 519, 1228, 7318, 3873, 8659, 307, 364, 1021, 5389, 13], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 73, "seek": 24408, "start": 259.36, "end": 265.24, "text": " Similar to using an ID effectively, for instance, instead of writing everything in notepad or", "tokens": [10905, 281, 1228, 364, 7348, 8659, 11, 337, 5197, 11, 2602, 295, 3579, 1203, 294, 406, 595, 345, 420], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 74, "seek": 24408, "start": 265.24, "end": 267.08000000000004, "text": " on literal punch cards or...", "tokens": [322, 20411, 8135, 5632, 420, 485], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 75, "seek": 24408, "start": 267.08000000000004, "end": 270.12, "text": " Well, now I'm going too far, but...", "tokens": [1042, 11, 586, 286, 478, 516, 886, 1400, 11, 457, 485], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 76, "seek": 24408, "start": 270.12, "end": 271.44, "text": " Well yeah, exactly.", "tokens": [1042, 1338, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 77, "seek": 24408, "start": 271.44, "end": 273.36, "text": " And we have to keep up with the technology.", "tokens": [400, 321, 362, 281, 1066, 493, 365, 264, 2899, 13], "temperature": 0.0, "avg_logprob": -0.2916332180217161, "compression_ratio": 1.621212121212121, "no_speech_prob": 1.8162065771321068e-06}, {"id": 78, "seek": 27336, "start": 273.36, "end": 279.84000000000003, "text": " So I would say that maybe I'm an optimist, but I would say keep up with the latest technology", "tokens": [407, 286, 576, 584, 300, 1310, 286, 478, 364, 5028, 468, 11, 457, 286, 576, 584, 1066, 493, 365, 264, 6792, 2899], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 79, "seek": 27336, "start": 279.84000000000003, "end": 281.24, "text": " to stay relevant.", "tokens": [281, 1754, 7340, 13], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 80, "seek": 27336, "start": 281.24, "end": 285.32, "text": " But hopefully we're going to be able to do more sophisticated things leveraging these", "tokens": [583, 4696, 321, 434, 516, 281, 312, 1075, 281, 360, 544, 16950, 721, 32666, 613], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 81, "seek": 27336, "start": 285.32, "end": 286.32, "text": " tools.", "tokens": [3873, 13], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 82, "seek": 27336, "start": 286.32, "end": 291.48, "text": " Now, another sort of piece of background I want to introduce to this conversation is", "tokens": [823, 11, 1071, 1333, 295, 2522, 295, 3678, 286, 528, 281, 5366, 281, 341, 3761, 307], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 83, "seek": 27336, "start": 291.48, "end": 294.32, "text": " to me, this is a really big question.", "tokens": [281, 385, 11, 341, 307, 257, 534, 955, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 84, "seek": 27336, "start": 294.32, "end": 301.32, "text": " Is Elm and pure typed functional programming a good combination with AI?", "tokens": [1119, 2699, 76, 293, 6075, 33941, 11745, 9410, 257, 665, 6562, 365, 7318, 30], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 85, "seek": 27336, "start": 301.32, "end": 302.52000000000004, "text": " Do you have an opinion on that?", "tokens": [1144, 291, 362, 364, 4800, 322, 300, 30], "temperature": 0.0, "avg_logprob": -0.2532119226018223, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.8129970814916305e-06}, {"id": 86, "seek": 30252, "start": 302.52, "end": 309.08, "text": " Well, it could be a good one or it could be an irrelevant one in the sense that if an", "tokens": [1042, 11, 309, 727, 312, 257, 665, 472, 420, 309, 727, 312, 364, 28682, 472, 294, 264, 2020, 300, 498, 364], "temperature": 0.0, "avg_logprob": -0.29854257257135064, "compression_ratio": 1.6974789915966386, "no_speech_prob": 1.553473111925996e-06}, {"id": 87, "seek": 30252, "start": 309.08, "end": 315.52, "text": " AI writes all the code for you, and it's awesome at it, like much better than you could be,", "tokens": [7318, 13657, 439, 264, 3089, 337, 291, 11, 293, 309, 311, 3476, 412, 309, 11, 411, 709, 1101, 813, 291, 727, 312, 11], "temperature": 0.0, "avg_logprob": -0.29854257257135064, "compression_ratio": 1.6974789915966386, "no_speech_prob": 1.553473111925996e-06}, {"id": 88, "seek": 30252, "start": 315.52, "end": 320.47999999999996, "text": " like, let's say a hundred times better than you, then why do you need type safety?", "tokens": [411, 11, 718, 311, 584, 257, 3262, 1413, 1101, 813, 291, 11, 550, 983, 360, 291, 643, 2010, 4514, 30], "temperature": 0.0, "avg_logprob": -0.29854257257135064, "compression_ratio": 1.6974789915966386, "no_speech_prob": 1.553473111925996e-06}, {"id": 89, "seek": 30252, "start": 320.47999999999996, "end": 327.2, "text": " Why do you need ease of refactoring and a language that is easy to maintain?", "tokens": [1545, 360, 291, 643, 12708, 295, 1895, 578, 3662, 293, 257, 2856, 300, 307, 1858, 281, 6909, 30], "temperature": 0.0, "avg_logprob": -0.29854257257135064, "compression_ratio": 1.6974789915966386, "no_speech_prob": 1.553473111925996e-06}, {"id": 90, "seek": 30252, "start": 327.2, "end": 328.2, "text": " Maybe you don't.", "tokens": [2704, 291, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.29854257257135064, "compression_ratio": 1.6974789915966386, "no_speech_prob": 1.553473111925996e-06}, {"id": 91, "seek": 30252, "start": 328.2, "end": 332.0, "text": " I personally don't believe that that will happen.", "tokens": [286, 5665, 500, 380, 1697, 300, 300, 486, 1051, 13], "temperature": 0.0, "avg_logprob": -0.29854257257135064, "compression_ratio": 1.6974789915966386, "no_speech_prob": 1.553473111925996e-06}, {"id": 92, "seek": 33200, "start": 332.0, "end": 333.0, "text": " I'll talk about that later.", "tokens": [286, 603, 751, 466, 300, 1780, 13], "temperature": 0.0, "avg_logprob": -0.3436904514537138, "compression_ratio": 1.3620689655172413, "no_speech_prob": 1.6279971077892696e-06}, {"id": 93, "seek": 33200, "start": 333.0, "end": 334.0, "text": " Probably.", "tokens": [9210, 13], "temperature": 0.0, "avg_logprob": -0.3436904514537138, "compression_ratio": 1.3620689655172413, "no_speech_prob": 1.6279971077892696e-06}, {"id": 94, "seek": 33200, "start": 334.0, "end": 340.84, "text": " I think it's actually better to have a, at least a typed language like Elm to work with", "tokens": [286, 519, 309, 311, 767, 1101, 281, 362, 257, 11, 412, 1935, 257, 33941, 2856, 411, 2699, 76, 281, 589, 365], "temperature": 0.0, "avg_logprob": -0.3436904514537138, "compression_ratio": 1.3620689655172413, "no_speech_prob": 1.6279971077892696e-06}, {"id": 95, "seek": 33200, "start": 340.84, "end": 354.44, "text": " because at least so far in April, 2020 something, chatGPT and all those tools, they give you", "tokens": [570, 412, 1935, 370, 1400, 294, 6929, 11, 4808, 746, 11, 5081, 38, 47, 51, 293, 439, 729, 3873, 11, 436, 976, 291], "temperature": 0.0, "avg_logprob": -0.3436904514537138, "compression_ratio": 1.3620689655172413, "no_speech_prob": 1.6279971077892696e-06}, {"id": 96, "seek": 33200, "start": 354.44, "end": 356.28, "text": " incorrect results.", "tokens": [18424, 3542, 13], "temperature": 0.0, "avg_logprob": -0.3436904514537138, "compression_ratio": 1.3620689655172413, "no_speech_prob": 1.6279971077892696e-06}, {"id": 97, "seek": 35628, "start": 356.28, "end": 362.2, "text": " They're very impressive and they're often correct, but they're also more often than", "tokens": [814, 434, 588, 8992, 293, 436, 434, 2049, 3006, 11, 457, 436, 434, 611, 544, 2049, 813], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 98, "seek": 35628, "start": 362.2, "end": 369.03999999999996, "text": " not, I'd say incorrect or slightly inaccurate or in the case of Elm, often it has in syntax", "tokens": [406, 11, 286, 1116, 584, 18424, 420, 4748, 46443, 420, 294, 264, 1389, 295, 2699, 76, 11, 2049, 309, 575, 294, 28431], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 99, "seek": 35628, "start": 369.03999999999996, "end": 370.03999999999996, "text": " errors.", "tokens": [13603, 13], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 100, "seek": 35628, "start": 370.03999999999996, "end": 371.03999999999996, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 101, "seek": 35628, "start": 371.03999999999996, "end": 373.28, "text": " And you want to know about those, right?", "tokens": [400, 291, 528, 281, 458, 466, 729, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 102, "seek": 35628, "start": 373.28, "end": 374.91999999999996, "text": " Yeah, exactly.", "tokens": [865, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 103, "seek": 35628, "start": 374.91999999999996, "end": 380.03999999999996, "text": " And one thing that Elm gives us is a nice compiler with a great type checker and some", "tokens": [400, 472, 551, 300, 2699, 76, 2709, 505, 307, 257, 1481, 31958, 365, 257, 869, 2010, 1520, 260, 293, 512], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 104, "seek": 35628, "start": 380.03999999999996, "end": 383.71999999999997, "text": " additional linting that it does on its own.", "tokens": [4497, 287, 686, 278, 300, 309, 775, 322, 1080, 1065, 13], "temperature": 0.0, "avg_logprob": -0.2590616154220869, "compression_ratio": 1.606837606837607, "no_speech_prob": 6.893268391650054e-07}, {"id": 105, "seek": 38372, "start": 383.72, "end": 389.28000000000003, "text": " And that helps prevent a lot of issues that humans make, but that an AI can do as well", "tokens": [400, 300, 3665, 4871, 257, 688, 295, 2663, 300, 6255, 652, 11, 457, 300, 364, 7318, 393, 360, 382, 731], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 106, "seek": 38372, "start": 389.28000000000003, "end": 394.64000000000004, "text": " because those AIs have been trained on humans and Slack overflow.", "tokens": [570, 729, 316, 6802, 362, 668, 8895, 322, 6255, 293, 37211, 37772, 13], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 107, "seek": 38372, "start": 394.64000000000004, "end": 398.16, "text": " Probably not on the Elm Slack, by the way, which would be a great resource.", "tokens": [9210, 406, 322, 264, 2699, 76, 37211, 11, 538, 264, 636, 11, 597, 576, 312, 257, 869, 7684, 13], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 108, "seek": 38372, "start": 398.16, "end": 399.16, "text": " Interesting.", "tokens": [14711, 13], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 109, "seek": 38372, "start": 399.16, "end": 400.56, "text": " Yeah, that's true.", "tokens": [865, 11, 300, 311, 2074, 13], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 110, "seek": 38372, "start": 400.56, "end": 407.36, "text": " I've noticed a lot of like old syntax, like the prime syntax, the little apostrophe it", "tokens": [286, 600, 5694, 257, 688, 295, 411, 1331, 28431, 11, 411, 264, 5835, 28431, 11, 264, 707, 19484, 27194, 309], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 111, "seek": 38372, "start": 407.36, "end": 409.08000000000004, "text": " likes to use.", "tokens": [5902, 281, 764, 13], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 112, "seek": 38372, "start": 409.08000000000004, "end": 412.20000000000005, "text": " But I also think it's been trained on Haskell code.", "tokens": [583, 286, 611, 519, 309, 311, 668, 8895, 322, 8646, 43723, 3089, 13], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 113, "seek": 38372, "start": 412.20000000000005, "end": 413.20000000000005, "text": " Yeah, totally.", "tokens": [865, 11, 3879, 13], "temperature": 0.0, "avg_logprob": -0.313307675448331, "compression_ratio": 1.621212121212121, "no_speech_prob": 3.844906132144388e-06}, {"id": 114, "seek": 41320, "start": 413.2, "end": 414.2, "text": " In some cases.", "tokens": [682, 512, 3331, 13], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 115, "seek": 41320, "start": 414.2, "end": 415.2, "text": " Totally.", "tokens": [22837, 13], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 116, "seek": 41320, "start": 415.2, "end": 417.2, "text": " I really like your framing.", "tokens": [286, 534, 411, 428, 28971, 13], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 117, "seek": 41320, "start": 417.2, "end": 426.48, "text": " I think that's spot on for, you know, is typed pure functional programming a good fit for", "tokens": [286, 519, 300, 311, 4008, 322, 337, 11, 291, 458, 11, 307, 33941, 6075, 11745, 9410, 257, 665, 3318, 337], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 118, "seek": 41320, "start": 426.48, "end": 427.92, "text": " these AI tools?", "tokens": [613, 7318, 3873, 30], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 119, "seek": 41320, "start": 427.92, "end": 430.52, "text": " And I think this is exactly the right question.", "tokens": [400, 286, 519, 341, 307, 2293, 264, 558, 1168, 13], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 120, "seek": 41320, "start": 430.52, "end": 436.14, "text": " Are humans going to be maintaining it or are machines going to completely just take over", "tokens": [2014, 6255, 516, 281, 312, 14916, 309, 420, 366, 8379, 516, 281, 2584, 445, 747, 670], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 121, "seek": 41320, "start": 436.14, "end": 438.52, "text": " the code and humans don't need to be involved?", "tokens": [264, 3089, 293, 6255, 500, 380, 643, 281, 312, 3288, 30], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 122, "seek": 41320, "start": 438.52, "end": 440.36, "text": " I think that's exactly the right question.", "tokens": [286, 519, 300, 311, 2293, 264, 558, 1168, 13], "temperature": 0.0, "avg_logprob": -0.24493084701837278, "compression_ratio": 1.6916299559471366, "no_speech_prob": 6.338673756545177e-06}, {"id": 123, "seek": 44036, "start": 440.36, "end": 449.84000000000003, "text": " I think that my gut feeling is right now for the next little while, at least, we've still", "tokens": [286, 519, 300, 452, 5228, 2633, 307, 558, 586, 337, 264, 958, 707, 1339, 11, 412, 1935, 11, 321, 600, 920], "temperature": 0.0, "avg_logprob": -0.2403191670332805, "compression_ratio": 1.6388888888888888, "no_speech_prob": 6.577839712917921e-07}, {"id": 124, "seek": 44036, "start": 449.84000000000003, "end": 453.68, "text": " got a little time where we're going to be an important part of the process.", "tokens": [658, 257, 707, 565, 689, 321, 434, 516, 281, 312, 364, 1021, 644, 295, 264, 1399, 13], "temperature": 0.0, "avg_logprob": -0.2403191670332805, "compression_ratio": 1.6388888888888888, "no_speech_prob": 6.577839712917921e-07}, {"id": 125, "seek": 44036, "start": 453.68, "end": 460.16, "text": " And I see it more as a collaboration between humans and AI at the point where the humans", "tokens": [400, 286, 536, 309, 544, 382, 257, 9363, 1296, 6255, 293, 7318, 412, 264, 935, 689, 264, 6255], "temperature": 0.0, "avg_logprob": -0.2403191670332805, "compression_ratio": 1.6388888888888888, "no_speech_prob": 6.577839712917921e-07}, {"id": 126, "seek": 44036, "start": 460.16, "end": 461.52000000000004, "text": " are no longer needed.", "tokens": [366, 572, 2854, 2978, 13], "temperature": 0.0, "avg_logprob": -0.2403191670332805, "compression_ratio": 1.6388888888888888, "no_speech_prob": 6.577839712917921e-07}, {"id": 127, "seek": 44036, "start": 461.52000000000004, "end": 466.36, "text": " Then, yes, the whole pure typed functional programming thing doesn't matter so much because", "tokens": [1396, 11, 2086, 11, 264, 1379, 6075, 33941, 11745, 9410, 551, 1177, 380, 1871, 370, 709, 570], "temperature": 0.0, "avg_logprob": -0.2403191670332805, "compression_ratio": 1.6388888888888888, "no_speech_prob": 6.577839712917921e-07}, {"id": 128, "seek": 44036, "start": 466.36, "end": 468.28000000000003, "text": " it's an implementation detail at that point.", "tokens": [309, 311, 364, 11420, 2607, 412, 300, 935, 13], "temperature": 0.0, "avg_logprob": -0.2403191670332805, "compression_ratio": 1.6388888888888888, "no_speech_prob": 6.577839712917921e-07}, {"id": 129, "seek": 46828, "start": 468.28, "end": 474.67999999999995, "text": " But until then, I think it's extremely valuable because, as you say, it's very prone to hallucinations.", "tokens": [583, 1826, 550, 11, 286, 519, 309, 311, 4664, 8263, 570, 11, 382, 291, 584, 11, 309, 311, 588, 25806, 281, 35212, 10325, 13], "temperature": 0.0, "avg_logprob": -0.28998365769019496, "compression_ratio": 1.6540084388185654, "no_speech_prob": 3.7266001982061425e-06}, {"id": 130, "seek": 46828, "start": 474.67999999999995, "end": 475.96, "text": " So like...", "tokens": [407, 411, 485], "temperature": 0.0, "avg_logprob": -0.28998365769019496, "compression_ratio": 1.6540084388185654, "no_speech_prob": 3.7266001982061425e-06}, {"id": 131, "seek": 46828, "start": 475.96, "end": 481.96, "text": " Hallucination being when it says something and it thinks it's right.", "tokens": [5434, 1311, 2486, 885, 562, 309, 1619, 746, 293, 309, 7309, 309, 311, 558, 13], "temperature": 0.0, "avg_logprob": -0.28998365769019496, "compression_ratio": 1.6540084388185654, "no_speech_prob": 3.7266001982061425e-06}, {"id": 132, "seek": 46828, "start": 481.96, "end": 482.96, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.28998365769019496, "compression_ratio": 1.6540084388185654, "no_speech_prob": 3.7266001982061425e-06}, {"id": 133, "seek": 46828, "start": 482.96, "end": 483.96, "text": " And when it isn't, when it isn't.", "tokens": [400, 562, 309, 1943, 380, 11, 562, 309, 1943, 380, 13], "temperature": 0.0, "avg_logprob": -0.28998365769019496, "compression_ratio": 1.6540084388185654, "no_speech_prob": 3.7266001982061425e-06}, {"id": 134, "seek": 46828, "start": 483.96, "end": 489.71999999999997, "text": " Yes, because these... and hallucination is like sort of the technical term that open", "tokens": [1079, 11, 570, 613, 485, 293, 35212, 2486, 307, 411, 1333, 295, 264, 6191, 1433, 300, 1269], "temperature": 0.0, "avg_logprob": -0.28998365769019496, "compression_ratio": 1.6540084388185654, "no_speech_prob": 3.7266001982061425e-06}, {"id": 135, "seek": 46828, "start": 489.71999999999997, "end": 494.4, "text": " AI is using in some of these white papers talking about this and stuff nowadays.", "tokens": [7318, 307, 1228, 294, 512, 295, 613, 2418, 10577, 1417, 466, 341, 293, 1507, 13434, 13], "temperature": 0.0, "avg_logprob": -0.28998365769019496, "compression_ratio": 1.6540084388185654, "no_speech_prob": 3.7266001982061425e-06}, {"id": 136, "seek": 49440, "start": 494.4, "end": 500.96, "text": " But hallucination, it's very prone to hallucination because these are sort of predictive models", "tokens": [583, 35212, 2486, 11, 309, 311, 588, 25806, 281, 35212, 2486, 570, 613, 366, 1333, 295, 35521, 5245], "temperature": 0.0, "avg_logprob": -0.20984397063384186, "compression_ratio": 1.6746987951807228, "no_speech_prob": 5.682214577973355e-06}, {"id": 137, "seek": 49440, "start": 500.96, "end": 506.03999999999996, "text": " that kind of synthesize information, but it's not an exact science.", "tokens": [300, 733, 295, 26617, 1125, 1589, 11, 457, 309, 311, 406, 364, 1900, 3497, 13], "temperature": 0.0, "avg_logprob": -0.20984397063384186, "compression_ratio": 1.6746987951807228, "no_speech_prob": 5.682214577973355e-06}, {"id": 138, "seek": 49440, "start": 506.03999999999996, "end": 510.12, "text": " And sometimes it mixes things together that don't quite fit.", "tokens": [400, 2171, 309, 37121, 721, 1214, 300, 500, 380, 1596, 3318, 13], "temperature": 0.0, "avg_logprob": -0.20984397063384186, "compression_ratio": 1.6746987951807228, "no_speech_prob": 5.682214577973355e-06}, {"id": 139, "seek": 49440, "start": 510.12, "end": 516.72, "text": " And so I think, I mean, Jeroen, I think it's fair to say that we really like having tools", "tokens": [400, 370, 286, 519, 11, 286, 914, 11, 508, 2032, 268, 11, 286, 519, 309, 311, 3143, 281, 584, 300, 321, 534, 411, 1419, 3873], "temperature": 0.0, "avg_logprob": -0.20984397063384186, "compression_ratio": 1.6746987951807228, "no_speech_prob": 5.682214577973355e-06}, {"id": 140, "seek": 49440, "start": 516.72, "end": 517.72, "text": " that we can trust.", "tokens": [300, 321, 393, 3361, 13], "temperature": 0.0, "avg_logprob": -0.20984397063384186, "compression_ratio": 1.6746987951807228, "no_speech_prob": 5.682214577973355e-06}, {"id": 141, "seek": 49440, "start": 517.72, "end": 524.12, "text": " If there's one thing you can say about us as the hosts of Elm Radio, I think that's", "tokens": [759, 456, 311, 472, 551, 291, 393, 584, 466, 505, 382, 264, 21573, 295, 2699, 76, 17296, 11, 286, 519, 300, 311], "temperature": 0.0, "avg_logprob": -0.20984397063384186, "compression_ratio": 1.6746987951807228, "no_speech_prob": 5.682214577973355e-06}, {"id": 142, "seek": 52412, "start": 524.12, "end": 526.16, "text": " a fair thing to say, right?", "tokens": [257, 3143, 551, 281, 584, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 143, "seek": 52412, "start": 526.16, "end": 528.16, "text": " Yeah, yeah.", "tokens": [865, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 144, "seek": 52412, "start": 528.16, "end": 532.28, "text": " We do not accept half guarantees, right?", "tokens": [492, 360, 406, 3241, 1922, 32567, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 145, "seek": 52412, "start": 532.28, "end": 533.44, "text": " We like guarantees.", "tokens": [492, 411, 32567, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 146, "seek": 52412, "start": 533.44, "end": 534.44, "text": " We like constraints.", "tokens": [492, 411, 18491, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 147, "seek": 52412, "start": 534.44, "end": 535.44, "text": " We like guarantees.", "tokens": [492, 411, 32567, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 148, "seek": 52412, "start": 535.44, "end": 537.84, "text": " Yeah, otherwise we wouldn't use side trips.", "tokens": [865, 11, 5911, 321, 2759, 380, 764, 1252, 16051, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 149, "seek": 52412, "start": 537.84, "end": 539.36, "text": " Right, exactly.", "tokens": [1779, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 150, "seek": 52412, "start": 539.36, "end": 543.52, "text": " Then we get like pretty good... you can't really call it a guarantee if it's pretty", "tokens": [1396, 321, 483, 411, 1238, 665, 485, 291, 393, 380, 534, 818, 309, 257, 10815, 498, 309, 311, 1238], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 151, "seek": 52412, "start": 543.52, "end": 544.52, "text": " good, right?", "tokens": [665, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 152, "seek": 52412, "start": 544.52, "end": 545.64, "text": " Guarantees are not pretty good.", "tokens": [2694, 289, 2879, 279, 366, 406, 1238, 665, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 153, "seek": 52412, "start": 545.64, "end": 546.64, "text": " Guarantees are guarantees.", "tokens": [2694, 289, 2879, 279, 366, 32567, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 154, "seek": 52412, "start": 546.64, "end": 552.46, "text": " You get pretty good assurances, pretty good confidence, but you don't get guarantees.", "tokens": [509, 483, 1238, 665, 1256, 374, 2676, 11, 1238, 665, 6687, 11, 457, 291, 500, 380, 483, 32567, 13], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 155, "seek": 52412, "start": 552.46, "end": 553.88, "text": " We like guarantees, right?", "tokens": [492, 411, 32567, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2664360425150986, "compression_ratio": 2.06140350877193, "no_speech_prob": 1.0675962585082743e-06}, {"id": 156, "seek": 55388, "start": 553.88, "end": 554.88, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 157, "seek": 55388, "start": 554.88, "end": 558.6, "text": " Well, I guess to some extent Elm is also improvable in that way.", "tokens": [1042, 11, 286, 2041, 281, 512, 8396, 2699, 76, 307, 611, 2530, 17915, 294, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 158, "seek": 55388, "start": 558.6, "end": 562.2, "text": " Like we're not doing formal logic or proofs.", "tokens": [1743, 321, 434, 406, 884, 9860, 9952, 420, 8177, 82, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 159, "seek": 55388, "start": 562.2, "end": 563.2, "text": " Fair.", "tokens": [12157, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 160, "seek": 55388, "start": 563.2, "end": 565.24, "text": " We're pretty close to that.", "tokens": [492, 434, 1238, 1998, 281, 300, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 161, "seek": 55388, "start": 565.24, "end": 566.24, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 162, "seek": 55388, "start": 566.24, "end": 570.92, "text": " Especially considering how simple the language is and how usable.", "tokens": [8545, 8079, 577, 2199, 264, 2856, 307, 293, 577, 29975, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 163, "seek": 55388, "start": 570.92, "end": 575.12, "text": " And the things that you can know about an Elm program, you do know.", "tokens": [400, 264, 721, 300, 291, 393, 458, 466, 364, 2699, 76, 1461, 11, 291, 360, 458, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 164, "seek": 55388, "start": 575.12, "end": 581.32, "text": " So like we don't get guarantees about everything, but we do get certain things for which they", "tokens": [407, 411, 321, 500, 380, 483, 32567, 466, 1203, 11, 457, 321, 360, 483, 1629, 721, 337, 597, 436], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 165, "seek": 55388, "start": 581.32, "end": 582.92, "text": " are definitely guarantees.", "tokens": [366, 2138, 32567, 13], "temperature": 0.0, "avg_logprob": -0.2850774798476905, "compression_ratio": 1.583011583011583, "no_speech_prob": 6.681235049654788e-07}, {"id": 166, "seek": 58292, "start": 582.92, "end": 583.92, "text": " And we like that.", "tokens": [400, 321, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 167, "seek": 58292, "start": 583.92, "end": 585.88, "text": " And we try to get more of those things.", "tokens": [400, 321, 853, 281, 483, 544, 295, 729, 721, 13], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 168, "seek": 58292, "start": 585.88, "end": 590.7199999999999, "text": " I know somebody who built a whole tool to try to get more guarantees through static", "tokens": [286, 458, 2618, 567, 3094, 257, 1379, 2290, 281, 853, 281, 483, 544, 32567, 807, 13437], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 169, "seek": 58292, "start": 590.7199999999999, "end": 592.5999999999999, "text": " analysis for Elm code.", "tokens": [5215, 337, 2699, 76, 3089, 13], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 170, "seek": 58292, "start": 592.5999999999999, "end": 597.0, "text": " So people go to great lengths for these things, I hear.", "tokens": [407, 561, 352, 281, 869, 26329, 337, 613, 721, 11, 286, 1568, 13], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 171, "seek": 58292, "start": 597.0, "end": 603.28, "text": " So then when you're talking about guarantees and then AI that's prone to hallucination,", "tokens": [407, 550, 562, 291, 434, 1417, 466, 32567, 293, 550, 7318, 300, 311, 25806, 281, 35212, 2486, 11], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 172, "seek": 58292, "start": 603.28, "end": 605.76, "text": " that becomes an interesting question, right?", "tokens": [300, 3643, 364, 1880, 1168, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 173, "seek": 58292, "start": 605.76, "end": 612.68, "text": " Now I actually am pretty confident about our ability to do useful things with that.", "tokens": [823, 286, 767, 669, 1238, 6679, 466, 527, 3485, 281, 360, 4420, 721, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.21048955050381749, "compression_ratio": 1.649056603773585, "no_speech_prob": 4.565902600006666e-06}, {"id": 174, "seek": 61268, "start": 612.68, "end": 618.0, "text": " Maybe that's counterintuitive because I'm talking about how much we care about guarantees", "tokens": [2704, 300, 311, 5682, 686, 48314, 570, 286, 478, 1417, 466, 577, 709, 321, 1127, 466, 32567], "temperature": 0.0, "avg_logprob": -0.2159082524916705, "compression_ratio": 1.6576576576576576, "no_speech_prob": 1.3287585716170724e-06}, {"id": 175, "seek": 61268, "start": 618.0, "end": 620.56, "text": " and then talking about hallucination.", "tokens": [293, 550, 1417, 466, 35212, 2486, 13], "temperature": 0.0, "avg_logprob": -0.2159082524916705, "compression_ratio": 1.6576576576576576, "no_speech_prob": 1.3287585716170724e-06}, {"id": 176, "seek": 61268, "start": 620.56, "end": 627.8399999999999, "text": " I'm actually very reluctant to integrate things like GitHub copilot suggestions into my code", "tokens": [286, 478, 767, 588, 33677, 281, 13365, 721, 411, 23331, 2971, 31516, 13396, 666, 452, 3089], "temperature": 0.0, "avg_logprob": -0.2159082524916705, "compression_ratio": 1.6576576576576576, "no_speech_prob": 1.3287585716170724e-06}, {"id": 177, "seek": 61268, "start": 627.8399999999999, "end": 632.5999999999999, "text": " because I think it's a very easy way to introduce subtle bugs.", "tokens": [570, 286, 519, 309, 311, 257, 588, 1858, 636, 281, 5366, 13743, 15120, 13], "temperature": 0.0, "avg_logprob": -0.2159082524916705, "compression_ratio": 1.6576576576576576, "no_speech_prob": 1.3287585716170724e-06}, {"id": 178, "seek": 61268, "start": 632.5999999999999, "end": 639.4799999999999, "text": " But the way I'm thinking about how AI fits into my workflow for writing Elm code and", "tokens": [583, 264, 636, 286, 478, 1953, 466, 577, 7318, 9001, 666, 452, 20993, 337, 3579, 2699, 76, 3089, 293], "temperature": 0.0, "avg_logprob": -0.2159082524916705, "compression_ratio": 1.6576576576576576, "no_speech_prob": 1.3287585716170724e-06}, {"id": 179, "seek": 63948, "start": 639.48, "end": 648.08, "text": " my sort of ideals for tools that involve like trusting my tools so that I can do critical", "tokens": [452, 1333, 295, 30956, 337, 3873, 300, 9494, 411, 28235, 452, 3873, 370, 300, 286, 393, 360, 4924], "temperature": 0.0, "avg_logprob": -0.22418437401453653, "compression_ratio": 1.6254980079681276, "no_speech_prob": 2.8572819701366825e-06}, {"id": 180, "seek": 63948, "start": 648.08, "end": 655.08, "text": " thinking and then delegate certain types of problems with complete trust to a tool, right?", "tokens": [1953, 293, 550, 40999, 1629, 3467, 295, 2740, 365, 3566, 3361, 281, 257, 2290, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.22418437401453653, "compression_ratio": 1.6254980079681276, "no_speech_prob": 2.8572819701366825e-06}, {"id": 181, "seek": 63948, "start": 655.08, "end": 659.04, "text": " Those two things do fit together, but not out of the box.", "tokens": [3950, 732, 721, 360, 3318, 1214, 11, 457, 406, 484, 295, 264, 2424, 13], "temperature": 0.0, "avg_logprob": -0.22418437401453653, "compression_ratio": 1.6254980079681276, "no_speech_prob": 2.8572819701366825e-06}, {"id": 182, "seek": 63948, "start": 659.04, "end": 664.48, "text": " If you just throw in whatever suggestions GitHub copilot is throwing at you, like for", "tokens": [759, 291, 445, 3507, 294, 2035, 13396, 23331, 2971, 31516, 307, 10238, 412, 291, 11, 411, 337], "temperature": 0.0, "avg_logprob": -0.22418437401453653, "compression_ratio": 1.6254980079681276, "no_speech_prob": 2.8572819701366825e-06}, {"id": 183, "seek": 63948, "start": 664.48, "end": 668.9200000000001, "text": " example, I was playing around with GitHub copilot, which for anyone who hasn't used", "tokens": [1365, 11, 286, 390, 2433, 926, 365, 23331, 2971, 31516, 11, 597, 337, 2878, 567, 6132, 380, 1143], "temperature": 0.0, "avg_logprob": -0.22418437401453653, "compression_ratio": 1.6254980079681276, "no_speech_prob": 2.8572819701366825e-06}, {"id": 184, "seek": 66892, "start": 668.92, "end": 677.28, "text": " it, it's now a paid tool, but it will give you sort of fancy AI assisted, GPT assisted", "tokens": [309, 11, 309, 311, 586, 257, 4835, 2290, 11, 457, 309, 486, 976, 291, 1333, 295, 10247, 7318, 30291, 11, 26039, 51, 30291], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 185, "seek": 66892, "start": 677.28, "end": 679.9599999999999, "text": " auto completions in your editor.", "tokens": [8399, 1557, 626, 294, 428, 9839, 13], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 186, "seek": 66892, "start": 679.9599999999999, "end": 682.9599999999999, "text": " I think it's free for open source maintainers.", "tokens": [286, 519, 309, 311, 1737, 337, 1269, 4009, 6909, 433, 13], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 187, "seek": 66892, "start": 682.9599999999999, "end": 684.24, "text": " With a certain number of stars.", "tokens": [2022, 257, 1629, 1230, 295, 6105, 13], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 188, "seek": 66892, "start": 684.24, "end": 686.24, "text": " Unfortunately, I didn't qualify.", "tokens": [8590, 11, 286, 994, 380, 20276, 13], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 189, "seek": 66892, "start": 686.24, "end": 687.24, "text": " Really?", "tokens": [4083, 30], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 190, "seek": 66892, "start": 687.24, "end": 688.68, "text": " I think I qualified.", "tokens": [286, 519, 286, 15904, 13], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 191, "seek": 66892, "start": 688.68, "end": 691.28, "text": " Or maybe I'm using the free version still.", "tokens": [1610, 1310, 286, 478, 1228, 264, 1737, 3037, 920, 13], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 192, "seek": 66892, "start": 691.28, "end": 693.5999999999999, "text": " Yeah, you might have been using the open beta.", "tokens": [865, 11, 291, 1062, 362, 668, 1228, 264, 1269, 9861, 13], "temperature": 0.0, "avg_logprob": -0.2991269120892275, "compression_ratio": 1.4893617021276595, "no_speech_prob": 1.1189372344233561e-06}, {"id": 193, "seek": 69360, "start": 693.6, "end": 700.6800000000001, "text": " I got it for free in the beta period, but you probably need like 10,000 stars or something.", "tokens": [286, 658, 309, 337, 1737, 294, 264, 9861, 2896, 11, 457, 291, 1391, 643, 411, 1266, 11, 1360, 6105, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 194, "seek": 69360, "start": 700.6800000000001, "end": 701.6800000000001, "text": " I don't know.", "tokens": [286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 195, "seek": 69360, "start": 701.6800000000001, "end": 702.6800000000001, "text": " Not many.", "tokens": [1726, 867, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 196, "seek": 69360, "start": 702.6800000000001, "end": 705.72, "text": " Hey, people, we need stars.", "tokens": [1911, 11, 561, 11, 321, 643, 6105, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 197, "seek": 69360, "start": 705.72, "end": 706.72, "text": " Get on it.", "tokens": [3240, 322, 309, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 198, "seek": 69360, "start": 706.72, "end": 712.0, "text": " Otherwise, we need to pay for like $10 a month or something, which is unacceptable.", "tokens": [10328, 11, 321, 643, 281, 1689, 337, 411, 1848, 3279, 257, 1618, 420, 746, 11, 597, 307, 31812, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 199, "seek": 69360, "start": 712.0, "end": 714.8000000000001, "text": " Yeah, our listeners can pay us in stars.", "tokens": [865, 11, 527, 23274, 393, 1689, 505, 294, 6105, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 200, "seek": 69360, "start": 714.8000000000001, "end": 716.64, "text": " Go star a project right now.", "tokens": [1037, 3543, 257, 1716, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 201, "seek": 69360, "start": 716.64, "end": 719.6, "text": " Pause this podcast and star our projects.", "tokens": [31973, 341, 7367, 293, 3543, 527, 4455, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 202, "seek": 69360, "start": 719.6, "end": 720.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.3149968233975497, "compression_ratio": 1.575221238938053, "no_speech_prob": 1.6027860283429618e-06}, {"id": 203, "seek": 72060, "start": 720.6, "end": 723.6800000000001, "text": " So it's definitely interesting working with Copilot.", "tokens": [407, 309, 311, 2138, 1880, 1364, 365, 11579, 31516, 13], "temperature": 0.0, "avg_logprob": -0.276089838931435, "compression_ratio": 1.6009174311926606, "no_speech_prob": 1.5779419300088193e-06}, {"id": 204, "seek": 72060, "start": 723.6800000000001, "end": 726.72, "text": " I have to say, I don't find it.", "tokens": [286, 362, 281, 584, 11, 286, 500, 380, 915, 309, 13], "temperature": 0.0, "avg_logprob": -0.276089838931435, "compression_ratio": 1.6009174311926606, "no_speech_prob": 1.5779419300088193e-06}, {"id": 205, "seek": 72060, "start": 726.72, "end": 728.4, "text": " In some cases, I'll trust it.", "tokens": [682, 512, 3331, 11, 286, 603, 3361, 309, 13], "temperature": 0.0, "avg_logprob": -0.276089838931435, "compression_ratio": 1.6009174311926606, "no_speech_prob": 1.5779419300088193e-06}, {"id": 206, "seek": 72060, "start": 728.4, "end": 735.0400000000001, "text": " I will have a custom type with four variants, and I will write out a function that says", "tokens": [286, 486, 362, 257, 2375, 2010, 365, 1451, 21669, 11, 293, 286, 486, 2464, 484, 257, 2445, 300, 1619], "temperature": 0.0, "avg_logprob": -0.276089838931435, "compression_ratio": 1.6009174311926606, "no_speech_prob": 1.5779419300088193e-06}, {"id": 207, "seek": 72060, "start": 735.0400000000001, "end": 739.96, "text": " my custom type to string, and then it fills it in perfectly.", "tokens": [452, 2375, 2010, 281, 6798, 11, 293, 550, 309, 22498, 309, 294, 6239, 13], "temperature": 0.0, "avg_logprob": -0.276089838931435, "compression_ratio": 1.6009174311926606, "no_speech_prob": 1.5779419300088193e-06}, {"id": 208, "seek": 72060, "start": 739.96, "end": 747.38, "text": " And it's impressive, but there are certain things like that, that I have an intuition", "tokens": [400, 309, 311, 8992, 11, 457, 456, 366, 1629, 721, 411, 300, 11, 300, 286, 362, 364, 24002], "temperature": 0.0, "avg_logprob": -0.276089838931435, "compression_ratio": 1.6009174311926606, "no_speech_prob": 1.5779419300088193e-06}, {"id": 209, "seek": 74738, "start": 747.38, "end": 750.76, "text": " that it's going to be really good and trustworthy at solving.", "tokens": [300, 309, 311, 516, 281, 312, 534, 665, 293, 39714, 412, 12606, 13], "temperature": 0.0, "avg_logprob": -0.23586069742838542, "compression_ratio": 1.6428571428571428, "no_speech_prob": 9.132484706242394e-07}, {"id": 210, "seek": 74738, "start": 750.76, "end": 752.6, "text": " That said, it does hallucinate certain things.", "tokens": [663, 848, 11, 309, 775, 35212, 13923, 1629, 721, 13], "temperature": 0.0, "avg_logprob": -0.23586069742838542, "compression_ratio": 1.6428571428571428, "no_speech_prob": 9.132484706242394e-07}, {"id": 211, "seek": 74738, "start": 752.6, "end": 757.36, "text": " It will hallucinate certain variants because the process through which it is arriving at", "tokens": [467, 486, 35212, 13923, 1629, 21669, 570, 264, 1399, 807, 597, 309, 307, 22436, 412], "temperature": 0.0, "avg_logprob": -0.23586069742838542, "compression_ratio": 1.6428571428571428, "no_speech_prob": 9.132484706242394e-07}, {"id": 212, "seek": 74738, "start": 757.36, "end": 763.88, "text": " these suggestions does not involve understanding the types of the program like the compiler", "tokens": [613, 13396, 775, 406, 9494, 3701, 264, 3467, 295, 264, 1461, 411, 264, 31958], "temperature": 0.0, "avg_logprob": -0.23586069742838542, "compression_ratio": 1.6428571428571428, "no_speech_prob": 9.132484706242394e-07}, {"id": 213, "seek": 74738, "start": 763.88, "end": 765.0, "text": " does.", "tokens": [775, 13], "temperature": 0.0, "avg_logprob": -0.23586069742838542, "compression_ratio": 1.6428571428571428, "no_speech_prob": 9.132484706242394e-07}, {"id": 214, "seek": 74738, "start": 765.0, "end": 771.28, "text": " So to me, where it gets very interesting is when you start using prompt engineering to", "tokens": [407, 281, 385, 11, 689, 309, 2170, 588, 1880, 307, 562, 291, 722, 1228, 12391, 7043, 281], "temperature": 0.0, "avg_logprob": -0.23586069742838542, "compression_ratio": 1.6428571428571428, "no_speech_prob": 9.132484706242394e-07}, {"id": 215, "seek": 74738, "start": 771.28, "end": 772.52, "text": " do that.", "tokens": [360, 300, 13], "temperature": 0.0, "avg_logprob": -0.23586069742838542, "compression_ratio": 1.6428571428571428, "no_speech_prob": 9.132484706242394e-07}, {"id": 216, "seek": 77252, "start": 772.52, "end": 779.56, "text": " And so I've been thinking about a set of principles around this.", "tokens": [400, 370, 286, 600, 668, 1953, 466, 257, 992, 295, 9156, 926, 341, 13], "temperature": 0.0, "avg_logprob": -0.31104464758010136, "compression_ratio": 1.6, "no_speech_prob": 1.994689228013158e-06}, {"id": 217, "seek": 77252, "start": 779.56, "end": 787.0, "text": " So prompt engineering is when you ask a question to get a Copilot or mostly chatGPT or other", "tokens": [407, 12391, 7043, 307, 562, 291, 1029, 257, 1168, 281, 483, 257, 11579, 31516, 420, 5240, 5081, 38, 47, 51, 420, 661], "temperature": 0.0, "avg_logprob": -0.31104464758010136, "compression_ratio": 1.6, "no_speech_prob": 1.994689228013158e-06}, {"id": 218, "seek": 77252, "start": 787.0, "end": 792.4, "text": " tools and you do it in a specific way, like you frame your questions in a specific way,", "tokens": [3873, 293, 291, 360, 309, 294, 257, 2685, 636, 11, 411, 291, 3920, 428, 1651, 294, 257, 2685, 636, 11], "temperature": 0.0, "avg_logprob": -0.31104464758010136, "compression_ratio": 1.6, "no_speech_prob": 1.994689228013158e-06}, {"id": 219, "seek": 77252, "start": 792.4, "end": 798.72, "text": " you ask for specific things, you give additional instructions so that it gives you better results.", "tokens": [291, 1029, 337, 2685, 721, 11, 291, 976, 4497, 9415, 370, 300, 309, 2709, 291, 1101, 3542, 13], "temperature": 0.0, "avg_logprob": -0.31104464758010136, "compression_ratio": 1.6, "no_speech_prob": 1.994689228013158e-06}, {"id": 220, "seek": 79872, "start": 798.72, "end": 804.12, "text": " I don't know why people call it engineering yet, but it's very interesting.", "tokens": [286, 500, 380, 458, 983, 561, 818, 309, 7043, 1939, 11, 457, 309, 311, 588, 1880, 13], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 221, "seek": 79872, "start": 804.12, "end": 810.72, "text": " Although, I mean, there are prompt engineer job posts out there, and I think this is kind", "tokens": [5780, 11, 286, 914, 11, 456, 366, 12391, 11403, 1691, 12300, 484, 456, 11, 293, 286, 519, 341, 307, 733], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 222, "seek": 79872, "start": 810.72, "end": 812.1600000000001, "text": " of going to become a thing.", "tokens": [295, 516, 281, 1813, 257, 551, 13], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 223, "seek": 79872, "start": 812.1600000000001, "end": 818.0, "text": " So it feels more like politics, like when you try to phrase things that sound good to", "tokens": [407, 309, 3417, 544, 411, 7341, 11, 411, 562, 291, 853, 281, 9535, 721, 300, 1626, 665, 281], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 224, "seek": 79872, "start": 818.0, "end": 821.6800000000001, "text": " you, what makes you sound good.", "tokens": [291, 11, 437, 1669, 291, 1626, 665, 13], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 225, "seek": 79872, "start": 821.6800000000001, "end": 825.48, "text": " It's more like a speech thing than an engineering thing so far.", "tokens": [467, 311, 544, 411, 257, 6218, 551, 813, 364, 7043, 551, 370, 1400, 13], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 226, "seek": 79872, "start": 825.48, "end": 826.48, "text": " Absolutely.", "tokens": [7021, 13], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 227, "seek": 79872, "start": 826.48, "end": 827.48, "text": " Absolutely.", "tokens": [7021, 13], "temperature": 0.0, "avg_logprob": -0.2927006955416697, "compression_ratio": 1.6978723404255318, "no_speech_prob": 1.3081116776447743e-06}, {"id": 228, "seek": 82748, "start": 827.48, "end": 833.04, "text": " I hope those literature majors in college are finally cashing in on those writing skills.", "tokens": [286, 1454, 729, 10394, 31770, 294, 3859, 366, 2721, 3058, 571, 294, 322, 729, 3579, 3942, 13], "temperature": 0.0, "avg_logprob": -0.3147000098715023, "compression_ratio": 1.5731707317073171, "no_speech_prob": 3.50080881617032e-06}, {"id": 229, "seek": 82748, "start": 833.04, "end": 838.76, "text": " Oh, now you're not making fun of my poetry degree, right?", "tokens": [876, 11, 586, 291, 434, 406, 1455, 1019, 295, 452, 15155, 4314, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.3147000098715023, "compression_ratio": 1.5731707317073171, "no_speech_prob": 3.50080881617032e-06}, {"id": 230, "seek": 82748, "start": 838.76, "end": 843.96, "text": " Now that I can make full blown web applications in two seconds.", "tokens": [823, 300, 286, 393, 652, 1577, 16479, 3670, 5821, 294, 732, 3949, 13], "temperature": 0.0, "avg_logprob": -0.3147000098715023, "compression_ratio": 1.5731707317073171, "no_speech_prob": 3.50080881617032e-06}, {"id": 231, "seek": 82748, "start": 843.96, "end": 844.96, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.3147000098715023, "compression_ratio": 1.5731707317073171, "no_speech_prob": 3.50080881617032e-06}, {"id": 232, "seek": 82748, "start": 844.96, "end": 851.34, "text": " Yeah, I mean, I think writing skills have been valuable for a long time, but this unlocks", "tokens": [865, 11, 286, 914, 11, 286, 519, 3579, 3942, 362, 668, 8263, 337, 257, 938, 565, 11, 457, 341, 517, 34896], "temperature": 0.0, "avg_logprob": -0.3147000098715023, "compression_ratio": 1.5731707317073171, "no_speech_prob": 3.50080881617032e-06}, {"id": 233, "seek": 82748, "start": 851.34, "end": 855.4, "text": " a whole new set of things you can do, including engineering with your writing.", "tokens": [257, 1379, 777, 992, 295, 721, 291, 393, 360, 11, 3009, 7043, 365, 428, 3579, 13], "temperature": 0.0, "avg_logprob": -0.3147000098715023, "compression_ratio": 1.5731707317073171, "no_speech_prob": 3.50080881617032e-06}, {"id": 234, "seek": 85540, "start": 855.4, "end": 860.04, "text": " And it really is like, I mean, if you think about what these prompts are doing, like the", "tokens": [400, 309, 534, 307, 411, 11, 286, 914, 11, 498, 291, 519, 466, 437, 613, 41095, 366, 884, 11, 411, 264], "temperature": 0.0, "avg_logprob": -0.24563949221656436, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.013384103833232e-06}, {"id": 235, "seek": 85540, "start": 860.04, "end": 866.4, "text": " way that they work is they're based on the context they're given, they're sort of like", "tokens": [636, 300, 436, 589, 307, 436, 434, 2361, 322, 264, 4319, 436, 434, 2212, 11, 436, 434, 1333, 295, 411], "temperature": 0.0, "avg_logprob": -0.24563949221656436, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.013384103833232e-06}, {"id": 236, "seek": 85540, "start": 866.4, "end": 873.3199999999999, "text": " role playing with that context, essentially, because their basic premise is given like", "tokens": [3090, 2433, 365, 300, 4319, 11, 4476, 11, 570, 641, 3875, 22045, 307, 2212, 411], "temperature": 0.0, "avg_logprob": -0.24563949221656436, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.013384103833232e-06}, {"id": 237, "seek": 85540, "start": 873.3199999999999, "end": 876.4, "text": " this context, what's likely to follow it, right?", "tokens": [341, 4319, 11, 437, 311, 3700, 281, 1524, 309, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.24563949221656436, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.013384103833232e-06}, {"id": 238, "seek": 85540, "start": 876.4, "end": 882.68, "text": " So if you write in a certain style, it is going to be more likely to follow with a certain", "tokens": [407, 498, 291, 2464, 294, 257, 1629, 3758, 11, 309, 307, 516, 281, 312, 544, 3700, 281, 1524, 365, 257, 1629], "temperature": 0.0, "avg_logprob": -0.24563949221656436, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.013384103833232e-06}, {"id": 239, "seek": 85540, "start": 882.68, "end": 883.68, "text": " style.", "tokens": [3758, 13], "temperature": 0.0, "avg_logprob": -0.24563949221656436, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.013384103833232e-06}, {"id": 240, "seek": 88368, "start": 883.68, "end": 888.8, "text": " If you write in a style that sounds very much like a scientific paper, a scientific journal", "tokens": [759, 291, 2464, 294, 257, 3758, 300, 3263, 588, 709, 411, 257, 8134, 3035, 11, 257, 8134, 6708], "temperature": 0.0, "avg_logprob": -0.2400385750664605, "compression_ratio": 1.7946428571428572, "no_speech_prob": 4.4508257701636467e-07}, {"id": 241, "seek": 88368, "start": 888.8, "end": 897.16, "text": " publication, and you write about your method for your study and all these things, it's", "tokens": [19953, 11, 293, 291, 2464, 466, 428, 3170, 337, 428, 2979, 293, 439, 613, 721, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.2400385750664605, "compression_ratio": 1.7946428571428572, "no_speech_prob": 4.4508257701636467e-07}, {"id": 242, "seek": 88368, "start": 897.16, "end": 900.76, "text": " probably going to give you more rigorous results.", "tokens": [1391, 516, 281, 976, 291, 544, 29882, 3542, 13], "temperature": 0.0, "avg_logprob": -0.2400385750664605, "compression_ratio": 1.7946428571428572, "no_speech_prob": 4.4508257701636467e-07}, {"id": 243, "seek": 88368, "start": 900.76, "end": 906.1999999999999, "text": " And it's probably going to do the things that it's seen by gathering information from a", "tokens": [400, 309, 311, 1391, 516, 281, 360, 264, 721, 300, 309, 311, 1612, 538, 13519, 1589, 490, 257], "temperature": 0.0, "avg_logprob": -0.2400385750664605, "compression_ratio": 1.7946428571428572, "no_speech_prob": 4.4508257701636467e-07}, {"id": 244, "seek": 88368, "start": 906.1999999999999, "end": 911.3199999999999, "text": " bunch of scientific journals, like coming up with a rigorous method and talking about", "tokens": [3840, 295, 8134, 29621, 11, 411, 1348, 493, 365, 257, 29882, 3170, 293, 1417, 466], "temperature": 0.0, "avg_logprob": -0.2400385750664605, "compression_ratio": 1.7946428571428572, "no_speech_prob": 4.4508257701636467e-07}, {"id": 245, "seek": 91132, "start": 911.32, "end": 916.6, "text": " whatever, like counterbalancing, you know, addressing particular concerns and stuff.", "tokens": [2035, 11, 411, 5682, 2645, 8779, 11, 291, 458, 11, 14329, 1729, 7389, 293, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2287816743592958, "compression_ratio": 1.66798418972332, "no_speech_prob": 3.446522669037222e-06}, {"id": 246, "seek": 91132, "start": 916.6, "end": 922.96, "text": " So like, you have to really get it to role play to solve the problem you want it to solve,", "tokens": [407, 411, 11, 291, 362, 281, 534, 483, 309, 281, 3090, 862, 281, 5039, 264, 1154, 291, 528, 309, 281, 5039, 11], "temperature": 0.0, "avg_logprob": -0.2287816743592958, "compression_ratio": 1.66798418972332, "no_speech_prob": 3.446522669037222e-06}, {"id": 247, "seek": 91132, "start": 922.96, "end": 927.6400000000001, "text": " to be like the smartest thing to address the problem you want.", "tokens": [281, 312, 411, 264, 41491, 551, 281, 2985, 264, 1154, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.2287816743592958, "compression_ratio": 1.66798418972332, "no_speech_prob": 3.446522669037222e-06}, {"id": 248, "seek": 91132, "start": 927.6400000000001, "end": 930.5600000000001, "text": " And that's where nerds come into play again.", "tokens": [400, 300, 311, 689, 23229, 82, 808, 666, 862, 797, 13], "temperature": 0.0, "avg_logprob": -0.2287816743592958, "compression_ratio": 1.66798418972332, "no_speech_prob": 3.446522669037222e-06}, {"id": 249, "seek": 91132, "start": 930.5600000000001, "end": 932.4200000000001, "text": " Yes, totally.", "tokens": [1079, 11, 3879, 13], "temperature": 0.0, "avg_logprob": -0.2287816743592958, "compression_ratio": 1.66798418972332, "no_speech_prob": 3.446522669037222e-06}, {"id": 250, "seek": 91132, "start": 932.4200000000001, "end": 934.6800000000001, "text": " Because we kind of get that.", "tokens": [1436, 321, 733, 295, 483, 300, 13], "temperature": 0.0, "avg_logprob": -0.2287816743592958, "compression_ratio": 1.66798418972332, "no_speech_prob": 3.446522669037222e-06}, {"id": 251, "seek": 91132, "start": 934.6800000000001, "end": 940.5, "text": " It's not just like some magic box to us, like we kind of can understand how it could synthesize", "tokens": [467, 311, 406, 445, 411, 512, 5585, 2424, 281, 505, 11, 411, 321, 733, 295, 393, 1223, 577, 309, 727, 26617, 1125], "temperature": 0.0, "avg_logprob": -0.2287816743592958, "compression_ratio": 1.66798418972332, "no_speech_prob": 3.446522669037222e-06}, {"id": 252, "seek": 94050, "start": 940.5, "end": 944.36, "text": " information so we need to give it useful context for that.", "tokens": [1589, 370, 321, 643, 281, 976, 309, 4420, 4319, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.3911199898555361, "compression_ratio": 1.6284153005464481, "no_speech_prob": 1.0289400961482897e-05}, {"id": 253, "seek": 94050, "start": 944.36, "end": 948.72, "text": " Now I was thinking like, people play Dungeons and Dragons.", "tokens": [823, 286, 390, 1953, 411, 11, 561, 862, 11959, 30636, 293, 37437, 13], "temperature": 0.0, "avg_logprob": -0.3911199898555361, "compression_ratio": 1.6284153005464481, "no_speech_prob": 1.0289400961482897e-05}, {"id": 254, "seek": 94050, "start": 948.72, "end": 949.72, "text": " Oh, that too.", "tokens": [876, 11, 300, 886, 13], "temperature": 0.0, "avg_logprob": -0.3911199898555361, "compression_ratio": 1.6284153005464481, "no_speech_prob": 1.0289400961482897e-05}, {"id": 255, "seek": 94050, "start": 949.72, "end": 952.52, "text": " Or used to role playing.", "tokens": [1610, 1143, 281, 3090, 2433, 13], "temperature": 0.0, "avg_logprob": -0.3911199898555361, "compression_ratio": 1.6284153005464481, "no_speech_prob": 1.0289400961482897e-05}, {"id": 256, "seek": 94050, "start": 952.52, "end": 955.04, "text": " Yeah, very true.", "tokens": [865, 11, 588, 2074, 13], "temperature": 0.0, "avg_logprob": -0.3911199898555361, "compression_ratio": 1.6284153005464481, "no_speech_prob": 1.0289400961482897e-05}, {"id": 257, "seek": 94050, "start": 955.04, "end": 962.36, "text": " Yeah, so like, I think priming it with good context is one thing that I've been thinking", "tokens": [865, 11, 370, 411, 11, 286, 519, 2886, 278, 309, 365, 665, 4319, 307, 472, 551, 300, 286, 600, 668, 1953], "temperature": 0.0, "avg_logprob": -0.3911199898555361, "compression_ratio": 1.6284153005464481, "no_speech_prob": 1.0289400961482897e-05}, {"id": 258, "seek": 94050, "start": 962.36, "end": 964.36, "text": " about as I've been playing with it.", "tokens": [466, 382, 286, 600, 668, 2433, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.3911199898555361, "compression_ratio": 1.6284153005464481, "no_speech_prob": 1.0289400961482897e-05}, {"id": 259, "seek": 96436, "start": 964.36, "end": 971.28, "text": " And another thing I think about is like, is like how verifiable is the problem you're", "tokens": [400, 1071, 551, 286, 519, 466, 307, 411, 11, 307, 411, 577, 1306, 30876, 307, 264, 1154, 291, 434], "temperature": 0.0, "avg_logprob": -0.2273209479547316, "compression_ratio": 1.7510204081632652, "no_speech_prob": 8.446180004284543e-07}, {"id": 260, "seek": 96436, "start": 971.28, "end": 972.36, "text": " giving it?", "tokens": [2902, 309, 30], "temperature": 0.0, "avg_logprob": -0.2273209479547316, "compression_ratio": 1.7510204081632652, "no_speech_prob": 8.446180004284543e-07}, {"id": 261, "seek": 96436, "start": 972.36, "end": 978.24, "text": " So if you give it a problem and you're like, I don't know, what is the meaning of life?", "tokens": [407, 498, 291, 976, 309, 257, 1154, 293, 291, 434, 411, 11, 286, 500, 380, 458, 11, 437, 307, 264, 3620, 295, 993, 30], "temperature": 0.0, "avg_logprob": -0.2273209479547316, "compression_ratio": 1.7510204081632652, "no_speech_prob": 8.446180004284543e-07}, {"id": 262, "seek": 96436, "start": 978.24, "end": 982.2, "text": " And it tells you something, it's like, well, how do I verify it?", "tokens": [400, 309, 5112, 291, 746, 11, 309, 311, 411, 11, 731, 11, 577, 360, 286, 16888, 309, 30], "temperature": 0.0, "avg_logprob": -0.2273209479547316, "compression_ratio": 1.7510204081632652, "no_speech_prob": 8.446180004284543e-07}, {"id": 263, "seek": 96436, "start": 982.2, "end": 985.92, "text": " Like I haven't given it much context, I've given it sort of a vague thing, it's going", "tokens": [1743, 286, 2378, 380, 2212, 309, 709, 4319, 11, 286, 600, 2212, 309, 1333, 295, 257, 24247, 551, 11, 309, 311, 516], "temperature": 0.0, "avg_logprob": -0.2273209479547316, "compression_ratio": 1.7510204081632652, "no_speech_prob": 8.446180004284543e-07}, {"id": 264, "seek": 96436, "start": 985.92, "end": 988.04, "text": " to be piecing together a bunch of things.", "tokens": [281, 312, 1730, 2175, 1214, 257, 3840, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.2273209479547316, "compression_ratio": 1.7510204081632652, "no_speech_prob": 8.446180004284543e-07}, {"id": 265, "seek": 96436, "start": 988.04, "end": 991.48, "text": " I'm not like giving it a specific problem to solve.", "tokens": [286, 478, 406, 411, 2902, 309, 257, 2685, 1154, 281, 5039, 13], "temperature": 0.0, "avg_logprob": -0.2273209479547316, "compression_ratio": 1.7510204081632652, "no_speech_prob": 8.446180004284543e-07}, {"id": 266, "seek": 99148, "start": 991.48, "end": 997.28, "text": " I'm not giving it a problem that I can verify that I've gotten the answer.", "tokens": [286, 478, 406, 2902, 309, 257, 1154, 300, 286, 393, 16888, 300, 286, 600, 5768, 264, 1867, 13], "temperature": 0.0, "avg_logprob": -0.2789878223253333, "compression_ratio": 1.6358974358974359, "no_speech_prob": 1.2098471415811218e-06}, {"id": 267, "seek": 99148, "start": 997.28, "end": 1005.76, "text": " So if I give it some like an elm problem, and I have a way to check.", "tokens": [407, 498, 286, 976, 309, 512, 411, 364, 806, 76, 1154, 11, 293, 286, 362, 257, 636, 281, 1520, 13], "temperature": 0.0, "avg_logprob": -0.2789878223253333, "compression_ratio": 1.6358974358974359, "no_speech_prob": 1.2098471415811218e-06}, {"id": 268, "seek": 99148, "start": 1005.76, "end": 1012.26, "text": " So like there are certain problems where it's difficult to find an answer, but it's easy", "tokens": [407, 411, 456, 366, 1629, 2740, 689, 309, 311, 2252, 281, 915, 364, 1867, 11, 457, 309, 311, 1858], "temperature": 0.0, "avg_logprob": -0.2789878223253333, "compression_ratio": 1.6358974358974359, "no_speech_prob": 1.2098471415811218e-06}, {"id": 269, "seek": 99148, "start": 1012.26, "end": 1016.4, "text": " to know that the answer is correct once you have it.", "tokens": [281, 458, 300, 264, 1867, 307, 3006, 1564, 291, 362, 309, 13], "temperature": 0.0, "avg_logprob": -0.2789878223253333, "compression_ratio": 1.6358974358974359, "no_speech_prob": 1.2098471415811218e-06}, {"id": 270, "seek": 99148, "start": 1016.4, "end": 1017.78, "text": " And P problems.", "tokens": [400, 430, 2740, 13], "temperature": 0.0, "avg_logprob": -0.2789878223253333, "compression_ratio": 1.6358974358974359, "no_speech_prob": 1.2098471415811218e-06}, {"id": 271, "seek": 99148, "start": 1017.78, "end": 1018.78, "text": " Is that the term?", "tokens": [1119, 300, 264, 1433, 30], "temperature": 0.0, "avg_logprob": -0.2789878223253333, "compression_ratio": 1.6358974358974359, "no_speech_prob": 1.2098471415811218e-06}, {"id": 272, "seek": 101878, "start": 1018.78, "end": 1022.4399999999999, "text": " No, but you know, P equals NP.", "tokens": [883, 11, 457, 291, 458, 11, 430, 6915, 38611, 13], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 273, "seek": 101878, "start": 1022.4399999999999, "end": 1023.92, "text": " I never quite got that.", "tokens": [286, 1128, 1596, 658, 300, 13], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 274, "seek": 101878, "start": 1023.92, "end": 1027.52, "text": " I'm going to need to ask chat GPT to explain that to me better.", "tokens": [286, 478, 516, 281, 643, 281, 1029, 5081, 26039, 51, 281, 2903, 300, 281, 385, 1101, 13], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 275, "seek": 101878, "start": 1027.52, "end": 1031.32, "text": " Okay, let's not get into that one.", "tokens": [1033, 11, 718, 311, 406, 483, 666, 300, 472, 13], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 276, "seek": 101878, "start": 1031.32, "end": 1036.48, "text": " That's a few hours of content, which is probably not best served by us.", "tokens": [663, 311, 257, 1326, 2496, 295, 2701, 11, 597, 307, 1391, 406, 1151, 7584, 538, 505, 13], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 277, "seek": 101878, "start": 1036.48, "end": 1041.24, "text": " I guess like things like the traveling salesman problem you like would be an example of that,", "tokens": [286, 2041, 411, 721, 411, 264, 9712, 5763, 1601, 1154, 291, 411, 576, 312, 364, 1365, 295, 300, 11], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 278, "seek": 101878, "start": 1041.24, "end": 1042.24, "text": " right?", "tokens": [558, 30], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 279, "seek": 101878, "start": 1042.24, "end": 1043.24, "text": " And then yeah, that's an NP problem.", "tokens": [400, 550, 1338, 11, 300, 311, 364, 38611, 1154, 13], "temperature": 0.0, "avg_logprob": -0.29713037473346116, "compression_ratio": 1.5188284518828452, "no_speech_prob": 1.5056774600452627e-06}, {"id": 280, "seek": 104324, "start": 1043.24, "end": 1049.8, "text": " You can tell if you have a solution and it does fit an optimal path, it's easy to tell,", "tokens": [509, 393, 980, 498, 291, 362, 257, 3827, 293, 309, 775, 3318, 364, 16252, 3100, 11, 309, 311, 1858, 281, 980, 11], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 281, "seek": 104324, "start": 1049.8, "end": 1053.92, "text": " but it's not easy to derive an optimal path, something like that.", "tokens": [457, 309, 311, 406, 1858, 281, 28446, 364, 16252, 3100, 11, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 282, "seek": 104324, "start": 1053.92, "end": 1055.18, "text": " Yeah, almost.", "tokens": [865, 11, 1920, 13], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 283, "seek": 104324, "start": 1055.18, "end": 1059.6200000000001, "text": " You know whether the solution that is given is a solution because you can check it and", "tokens": [509, 458, 1968, 264, 3827, 300, 307, 2212, 307, 257, 3827, 570, 291, 393, 1520, 309, 293], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 284, "seek": 104324, "start": 1059.6200000000001, "end": 1061.68, "text": " the checking is pretty easy.", "tokens": [264, 8568, 307, 1238, 1858, 13], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 285, "seek": 104324, "start": 1061.68, "end": 1065.24, "text": " But knowing whether it's optimal is extremely hard.", "tokens": [583, 5276, 1968, 309, 311, 16252, 307, 4664, 1152, 13], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 286, "seek": 104324, "start": 1065.24, "end": 1066.24, "text": " I see.", "tokens": [286, 536, 13], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 287, "seek": 104324, "start": 1066.24, "end": 1067.24, "text": " Right, right, right.", "tokens": [1779, 11, 558, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 288, "seek": 104324, "start": 1067.24, "end": 1068.24, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 289, "seek": 104324, "start": 1068.24, "end": 1071.2, "text": " So like, is this the most optimal solution?", "tokens": [407, 411, 11, 307, 341, 264, 881, 16252, 3827, 30], "temperature": 0.0, "avg_logprob": -0.2775522215753539, "compression_ratio": 1.7725321888412018, "no_speech_prob": 5.203521027397073e-07}, {"id": 290, "seek": 107120, "start": 1071.2, "end": 1075.44, "text": " Well, to check that you would need to check all other solutions.", "tokens": [1042, 11, 281, 1520, 300, 291, 576, 643, 281, 1520, 439, 661, 6547, 13], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 291, "seek": 107120, "start": 1075.44, "end": 1080.56, "text": " And it's easy to if you find a counter example, then yes, you know, it's not the most optimal", "tokens": [400, 309, 311, 1858, 281, 498, 291, 915, 257, 5682, 1365, 11, 550, 2086, 11, 291, 458, 11, 309, 311, 406, 264, 881, 16252], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 292, "seek": 107120, "start": 1080.56, "end": 1085.0800000000002, "text": " one, but to know that whether it is indeed the most optimal one, you're going to have", "tokens": [472, 11, 457, 281, 458, 300, 1968, 309, 307, 6451, 264, 881, 16252, 472, 11, 291, 434, 516, 281, 362], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 293, "seek": 107120, "start": 1085.0800000000002, "end": 1086.0800000000002, "text": " to check everything.", "tokens": [281, 1520, 1203, 13], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 294, "seek": 107120, "start": 1086.0800000000002, "end": 1088.64, "text": " And that's, that's extremely expensive.", "tokens": [400, 300, 311, 11, 300, 311, 4664, 5124, 13], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 295, "seek": 107120, "start": 1088.64, "end": 1089.64, "text": " Right, exactly.", "tokens": [1779, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 296, "seek": 107120, "start": 1089.64, "end": 1090.64, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 297, "seek": 107120, "start": 1090.64, "end": 1095.92, "text": " So I think like, to me, that's the type of mindset for finding good ways to use these", "tokens": [407, 286, 519, 411, 11, 281, 385, 11, 300, 311, 264, 2010, 295, 12543, 337, 5006, 665, 2098, 281, 764, 613], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 298, "seek": 107120, "start": 1095.92, "end": 1098.48, "text": " tools to automate our coding.", "tokens": [3873, 281, 31605, 527, 17720, 13], "temperature": 0.0, "avg_logprob": -0.27504597940752584, "compression_ratio": 1.7170542635658914, "no_speech_prob": 1.1544567541932338e-06}, {"id": 299, "seek": 109848, "start": 1098.48, "end": 1104.56, "text": " Also like, like you mentioned, finding a counter example in the traveling salesman problem", "tokens": [2743, 411, 11, 411, 291, 2835, 11, 5006, 257, 5682, 1365, 294, 264, 9712, 5763, 1601, 1154], "temperature": 0.0, "avg_logprob": -0.2609237324107777, "compression_ratio": 1.6283185840707965, "no_speech_prob": 1.8447998400006327e-06}, {"id": 300, "seek": 109848, "start": 1104.56, "end": 1110.84, "text": " is easy to verify because you just check how many nodes it traverses or whatever, right?", "tokens": [307, 1858, 281, 16888, 570, 291, 445, 1520, 577, 867, 13891, 309, 23149, 279, 420, 2035, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2609237324107777, "compression_ratio": 1.6283185840707965, "no_speech_prob": 1.8447998400006327e-06}, {"id": 301, "seek": 109848, "start": 1110.84, "end": 1113.8, "text": " And it's, is the number smaller, right?", "tokens": [400, 309, 311, 11, 307, 264, 1230, 4356, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2609237324107777, "compression_ratio": 1.6283185840707965, "no_speech_prob": 1.8447998400006327e-06}, {"id": 302, "seek": 109848, "start": 1113.8, "end": 1118.28, "text": " So that's a very cheap operation to test a counter example.", "tokens": [407, 300, 311, 257, 588, 7084, 6916, 281, 1500, 257, 5682, 1365, 13], "temperature": 0.0, "avg_logprob": -0.2609237324107777, "compression_ratio": 1.6283185840707965, "no_speech_prob": 1.8447998400006327e-06}, {"id": 303, "seek": 109848, "start": 1118.28, "end": 1126.84, "text": " So if you know, so, so if you're able to like, get, let's say you try to prompt the, you", "tokens": [407, 498, 291, 458, 11, 370, 11, 370, 498, 291, 434, 1075, 281, 411, 11, 483, 11, 718, 311, 584, 291, 853, 281, 12391, 264, 11, 291], "temperature": 0.0, "avg_logprob": -0.2609237324107777, "compression_ratio": 1.6283185840707965, "no_speech_prob": 1.8447998400006327e-06}, {"id": 304, "seek": 112684, "start": 1126.84, "end": 1132.9599999999998, "text": " know, write a prompt engineering prompt for chat GPT to solve the traveling salesman problem", "tokens": [458, 11, 2464, 257, 12391, 7043, 12391, 337, 5081, 26039, 51, 281, 5039, 264, 9712, 5763, 1601, 1154], "temperature": 0.0, "avg_logprob": -0.24388943296490292, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.4144696933726664e-06}, {"id": 305, "seek": 112684, "start": 1132.9599999999998, "end": 1138.36, "text": " for something and you set it up and you prime it with some context and you like, you found", "tokens": [337, 746, 293, 291, 992, 309, 493, 293, 291, 5835, 309, 365, 512, 4319, 293, 291, 411, 11, 291, 1352], "temperature": 0.0, "avg_logprob": -0.24388943296490292, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.4144696933726664e-06}, {"id": 306, "seek": 112684, "start": 1138.36, "end": 1143.0, "text": " one solution, but now it needs to find a better path.", "tokens": [472, 3827, 11, 457, 586, 309, 2203, 281, 915, 257, 1101, 3100, 13], "temperature": 0.0, "avg_logprob": -0.24388943296490292, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.4144696933726664e-06}, {"id": 307, "seek": 112684, "start": 1143.0, "end": 1147.8, "text": " And if it, if it gives you a more optimal path, then you're done.", "tokens": [400, 498, 309, 11, 498, 309, 2709, 291, 257, 544, 16252, 3100, 11, 550, 291, 434, 1096, 13], "temperature": 0.0, "avg_logprob": -0.24388943296490292, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.4144696933726664e-06}, {"id": 308, "seek": 112684, "start": 1147.8, "end": 1153.3999999999999, "text": " You can easily verify that and you can say, you know that it provided you with something", "tokens": [509, 393, 3612, 16888, 300, 293, 291, 393, 584, 11, 291, 458, 300, 309, 5649, 291, 365, 746], "temperature": 0.0, "avg_logprob": -0.24388943296490292, "compression_ratio": 1.6752136752136753, "no_speech_prob": 1.4144696933726664e-06}, {"id": 309, "seek": 115340, "start": 1153.4, "end": 1160.1200000000001, "text": " valuable because you can easily verify that it's a valid solution and a more optimal solution.", "tokens": [8263, 570, 291, 393, 3612, 16888, 300, 309, 311, 257, 7363, 3827, 293, 257, 544, 16252, 3827, 13], "temperature": 0.0, "avg_logprob": -0.22520475948558133, "compression_ratio": 1.6305418719211822, "no_speech_prob": 5.626330334962404e-07}, {"id": 310, "seek": 115340, "start": 1160.1200000000001, "end": 1161.1200000000001, "text": " Right?", "tokens": [1779, 30], "temperature": 0.0, "avg_logprob": -0.22520475948558133, "compression_ratio": 1.6305418719211822, "no_speech_prob": 5.626330334962404e-07}, {"id": 311, "seek": 115340, "start": 1161.1200000000001, "end": 1169.6000000000001, "text": " So the, there, this class of problems that is easy and cheap to verify that it's valuable", "tokens": [407, 264, 11, 456, 11, 341, 1508, 295, 2740, 300, 307, 1858, 293, 7084, 281, 16888, 300, 309, 311, 8263], "temperature": 0.0, "avg_logprob": -0.22520475948558133, "compression_ratio": 1.6305418719211822, "no_speech_prob": 5.626330334962404e-07}, {"id": 312, "seek": 115340, "start": 1169.6000000000001, "end": 1174.3200000000002, "text": " is the kind of thing that where I find it to be a very interesting space.", "tokens": [307, 264, 733, 295, 551, 300, 689, 286, 915, 309, 281, 312, 257, 588, 1880, 1901, 13], "temperature": 0.0, "avg_logprob": -0.22520475948558133, "compression_ratio": 1.6305418719211822, "no_speech_prob": 5.626330334962404e-07}, {"id": 313, "seek": 115340, "start": 1174.3200000000002, "end": 1177.98, "text": " And I think that Elm is very well suited to this type of problem.", "tokens": [400, 286, 519, 300, 2699, 76, 307, 588, 731, 24736, 281, 341, 2010, 295, 1154, 13], "temperature": 0.0, "avg_logprob": -0.22520475948558133, "compression_ratio": 1.6305418719211822, "no_speech_prob": 5.626330334962404e-07}, {"id": 314, "seek": 117798, "start": 1177.98, "end": 1186.0, "text": " So like one very simple example, like if you, if you want to write a JSON decoder and now", "tokens": [407, 411, 472, 588, 2199, 1365, 11, 411, 498, 291, 11, 498, 291, 528, 281, 2464, 257, 31828, 979, 19866, 293, 586], "temperature": 0.0, "avg_logprob": -0.252171168607824, "compression_ratio": 1.5958549222797926, "no_speech_prob": 4.7377795908687403e-07}, {"id": 315, "seek": 117798, "start": 1186.0, "end": 1192.5, "text": " another consideration here is like what inputs can we feed it to prime it to give, to give", "tokens": [1071, 12381, 510, 307, 411, 437, 15743, 393, 321, 3154, 309, 281, 5835, 309, 281, 976, 11, 281, 976], "temperature": 0.0, "avg_logprob": -0.252171168607824, "compression_ratio": 1.5958549222797926, "no_speech_prob": 4.7377795908687403e-07}, {"id": 316, "seek": 117798, "start": 1192.5, "end": 1194.04, "text": " us better results.", "tokens": [505, 1101, 3542, 13], "temperature": 0.0, "avg_logprob": -0.252171168607824, "compression_ratio": 1.5958549222797926, "no_speech_prob": 4.7377795908687403e-07}, {"id": 317, "seek": 117798, "start": 1194.04, "end": 1195.04, "text": " Right?", "tokens": [1779, 30], "temperature": 0.0, "avg_logprob": -0.252171168607824, "compression_ratio": 1.5958549222797926, "no_speech_prob": 4.7377795908687403e-07}, {"id": 318, "seek": 117798, "start": 1195.04, "end": 1202.08, "text": " So that, so we want to give it like prime it with good context and we want to have verifiable", "tokens": [407, 300, 11, 370, 321, 528, 281, 976, 309, 411, 5835, 309, 365, 665, 4319, 293, 321, 528, 281, 362, 1306, 30876], "temperature": 0.0, "avg_logprob": -0.252171168607824, "compression_ratio": 1.5958549222797926, "no_speech_prob": 4.7377795908687403e-07}, {"id": 319, "seek": 117798, "start": 1202.08, "end": 1203.08, "text": " output.", "tokens": [5598, 13], "temperature": 0.0, "avg_logprob": -0.252171168607824, "compression_ratio": 1.5958549222797926, "no_speech_prob": 4.7377795908687403e-07}, {"id": 320, "seek": 120308, "start": 1203.08, "end": 1208.96, "text": " I've also been thinking about like that verification through a feedback cycle.", "tokens": [286, 600, 611, 668, 1953, 466, 411, 300, 30206, 807, 257, 5824, 6586, 13], "temperature": 0.0, "avg_logprob": -0.20270147777739025, "compression_ratio": 1.6511627906976745, "no_speech_prob": 3.4125676506846503e-07}, {"id": 321, "seek": 120308, "start": 1208.96, "end": 1212.8799999999999, "text": " So iterating on that verification becomes interesting.", "tokens": [407, 17138, 990, 322, 300, 30206, 3643, 1880, 13], "temperature": 0.0, "avg_logprob": -0.20270147777739025, "compression_ratio": 1.6511627906976745, "no_speech_prob": 3.4125676506846503e-07}, {"id": 322, "seek": 120308, "start": 1212.8799999999999, "end": 1220.4399999999998, "text": " If you use the open AI APIs, you can automate this process where you can test these results.", "tokens": [759, 291, 764, 264, 1269, 7318, 21445, 11, 291, 393, 31605, 341, 1399, 689, 291, 393, 1500, 613, 3542, 13], "temperature": 0.0, "avg_logprob": -0.20270147777739025, "compression_ratio": 1.6511627906976745, "no_speech_prob": 3.4125676506846503e-07}, {"id": 323, "seek": 120308, "start": 1220.4399999999998, "end": 1226.36, "text": " So you, and then you can even give it information like Elm compiler output or did a JSON decoder", "tokens": [407, 291, 11, 293, 550, 291, 393, 754, 976, 309, 1589, 411, 2699, 76, 31958, 5598, 420, 630, 257, 31828, 979, 19866], "temperature": 0.0, "avg_logprob": -0.20270147777739025, "compression_ratio": 1.6511627906976745, "no_speech_prob": 3.4125676506846503e-07}, {"id": 324, "seek": 120308, "start": 1226.36, "end": 1227.36, "text": " succeed.", "tokens": [7754, 13], "temperature": 0.0, "avg_logprob": -0.20270147777739025, "compression_ratio": 1.6511627906976745, "no_speech_prob": 3.4125676506846503e-07}, {"id": 325, "seek": 120308, "start": 1227.36, "end": 1232.4399999999998, "text": " So if you, for example, you're trying to solve the problem of, I want to write a JSON decoder", "tokens": [407, 498, 291, 11, 337, 1365, 11, 291, 434, 1382, 281, 5039, 264, 1154, 295, 11, 286, 528, 281, 2464, 257, 31828, 979, 19866], "temperature": 0.0, "avg_logprob": -0.20270147777739025, "compression_ratio": 1.6511627906976745, "no_speech_prob": 3.4125676506846503e-07}, {"id": 326, "seek": 123244, "start": 1232.44, "end": 1239.3200000000002, "text": " and you either have like a curl command to run to hidden API or some JSON example of", "tokens": [293, 291, 2139, 362, 411, 257, 22591, 5622, 281, 1190, 281, 7633, 9362, 420, 512, 31828, 1365, 295], "temperature": 0.0, "avg_logprob": -0.21138889273417363, "compression_ratio": 1.6205357142857142, "no_speech_prob": 7.112355433491757e-07}, {"id": 327, "seek": 123244, "start": 1239.3200000000002, "end": 1243.38, "text": " what the API gives you, for example, that's your input.", "tokens": [437, 264, 9362, 2709, 291, 11, 337, 1365, 11, 300, 311, 428, 4846, 13], "temperature": 0.0, "avg_logprob": -0.21138889273417363, "compression_ratio": 1.6205357142857142, "no_speech_prob": 7.112355433491757e-07}, {"id": 328, "seek": 123244, "start": 1243.38, "end": 1244.48, "text": " You prime it with that.", "tokens": [509, 5835, 309, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.21138889273417363, "compression_ratio": 1.6205357142857142, "no_speech_prob": 7.112355433491757e-07}, {"id": 329, "seek": 123244, "start": 1244.48, "end": 1251.0800000000002, "text": " You can even prime it with like a prompt that helps step you through that process to, to", "tokens": [509, 393, 754, 5835, 309, 365, 411, 257, 12391, 300, 3665, 1823, 291, 807, 300, 1399, 281, 11, 281], "temperature": 0.0, "avg_logprob": -0.21138889273417363, "compression_ratio": 1.6205357142857142, "no_speech_prob": 7.112355433491757e-07}, {"id": 330, "seek": 123244, "start": 1251.0800000000002, "end": 1254.26, "text": " give you higher quality output, but then you can verify that.", "tokens": [976, 291, 2946, 3125, 5598, 11, 457, 550, 291, 393, 16888, 300, 13], "temperature": 0.0, "avg_logprob": -0.21138889273417363, "compression_ratio": 1.6205357142857142, "no_speech_prob": 7.112355433491757e-07}, {"id": 331, "seek": 123244, "start": 1254.26, "end": 1258.76, "text": " So you say your job is to write a JSON decoder.", "tokens": [407, 291, 584, 428, 1691, 307, 281, 2464, 257, 31828, 979, 19866, 13], "temperature": 0.0, "avg_logprob": -0.21138889273417363, "compression_ratio": 1.6205357142857142, "no_speech_prob": 7.112355433491757e-07}, {"id": 332, "seek": 125876, "start": 1258.76, "end": 1265.12, "text": " It needs to decode into this Elm type and it needs at the end, it needs to give me a", "tokens": [467, 2203, 281, 979, 1429, 666, 341, 2699, 76, 2010, 293, 309, 2203, 412, 264, 917, 11, 309, 2203, 281, 976, 385, 257], "temperature": 0.0, "avg_logprob": -0.21432554374620752, "compression_ratio": 1.6844444444444444, "no_speech_prob": 2.6577137646199844e-07}, {"id": 333, "seek": 125876, "start": 1265.12, "end": 1272.84, "text": " compiling JSON decoder of this type and it needs to successfully decode given this input.", "tokens": [715, 4883, 31828, 979, 19866, 295, 341, 2010, 293, 309, 2203, 281, 10727, 979, 1429, 2212, 341, 4846, 13], "temperature": 0.0, "avg_logprob": -0.21432554374620752, "compression_ratio": 1.6844444444444444, "no_speech_prob": 2.6577137646199844e-07}, {"id": 334, "seek": 125876, "start": 1272.84, "end": 1274.02, "text": " That's all verifiable.", "tokens": [663, 311, 439, 1306, 30876, 13], "temperature": 0.0, "avg_logprob": -0.21432554374620752, "compression_ratio": 1.6844444444444444, "no_speech_prob": 2.6577137646199844e-07}, {"id": 335, "seek": 125876, "start": 1274.02, "end": 1278.8799999999999, "text": " So if it gives you garbage or hallucinate something, or it gives you invalid syntax,", "tokens": [407, 498, 309, 2709, 291, 14150, 420, 35212, 13923, 746, 11, 420, 309, 2709, 291, 34702, 28431, 11], "temperature": 0.0, "avg_logprob": -0.21432554374620752, "compression_ratio": 1.6844444444444444, "no_speech_prob": 2.6577137646199844e-07}, {"id": 336, "seek": 125876, "start": 1278.8799999999999, "end": 1281.6, "text": " you can even tell it and it can iterate on that.", "tokens": [291, 393, 754, 980, 309, 293, 309, 393, 44497, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.21432554374620752, "compression_ratio": 1.6844444444444444, "no_speech_prob": 2.6577137646199844e-07}, {"id": 337, "seek": 125876, "start": 1281.6, "end": 1284.72, "text": " And you can kind of reduce the amount of noise.", "tokens": [400, 291, 393, 733, 295, 5407, 264, 2372, 295, 5658, 13], "temperature": 0.0, "avg_logprob": -0.21432554374620752, "compression_ratio": 1.6844444444444444, "no_speech_prob": 2.6577137646199844e-07}, {"id": 338, "seek": 128472, "start": 1284.72, "end": 1288.92, "text": " Because I don't want to hear about hallucinations from AI.", "tokens": [1436, 286, 500, 380, 528, 281, 1568, 466, 35212, 10325, 490, 7318, 13], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 339, "seek": 128472, "start": 1288.92, "end": 1294.46, "text": " So you know, like before I mentioned like how much we want guarantees, not like somewhat", "tokens": [407, 291, 458, 11, 411, 949, 286, 2835, 411, 577, 709, 321, 528, 32567, 11, 406, 411, 8344], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 340, "seek": 128472, "start": 1294.46, "end": 1295.46, "text": " high confidence.", "tokens": [1090, 6687, 13], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 341, "seek": 128472, "start": 1295.46, "end": 1297.04, "text": " I want guarantees.", "tokens": [286, 528, 32567, 13], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 342, "seek": 128472, "start": 1297.04, "end": 1304.92, "text": " But if we can throw away anything that's garbage and only get signal, no noise, then we can", "tokens": [583, 498, 321, 393, 3507, 1314, 1340, 300, 311, 14150, 293, 787, 483, 6358, 11, 572, 5658, 11, 550, 321, 393], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 343, "seek": 128472, "start": 1304.92, "end": 1306.58, "text": " do really interesting things.", "tokens": [360, 534, 1880, 721, 13], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 344, "seek": 128472, "start": 1306.58, "end": 1308.2, "text": " And Elm is really good for that.", "tokens": [400, 2699, 76, 307, 534, 665, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 345, "seek": 128472, "start": 1308.2, "end": 1312.92, "text": " You would like to have a system where you skip the intermediate steps of saying, telling,", "tokens": [509, 576, 411, 281, 362, 257, 1185, 689, 291, 10023, 264, 19376, 4439, 295, 1566, 11, 3585, 11], "temperature": 0.0, "avg_logprob": -0.24142683536634532, "compression_ratio": 1.6150943396226416, "no_speech_prob": 1.994722197196097e-06}, {"id": 346, "seek": 131292, "start": 1312.92, "end": 1315.8400000000001, "text": " hey, this is wrong, because this doesn't compile.", "tokens": [4177, 11, 341, 307, 2085, 11, 570, 341, 1177, 380, 31413, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 347, "seek": 131292, "start": 1315.8400000000001, "end": 1318.2, "text": " So here's some source code.", "tokens": [407, 510, 311, 512, 4009, 3089, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 348, "seek": 131292, "start": 1318.2, "end": 1319.92, "text": " Here's my request.", "tokens": [1692, 311, 452, 5308, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 349, "seek": 131292, "start": 1319.92, "end": 1325.0800000000002, "text": " And then there's some back and forth between the Elm compiler, for instance, and the system,", "tokens": [400, 550, 456, 311, 512, 646, 293, 5220, 1296, 264, 2699, 76, 31958, 11, 337, 5197, 11, 293, 264, 1185, 11], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 350, "seek": 131292, "start": 1325.0800000000002, "end": 1326.0800000000002, "text": " the AI.", "tokens": [264, 7318, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 351, "seek": 131292, "start": 1326.0800000000002, "end": 1329.1200000000001, "text": " And then you only get to know the ending result.", "tokens": [400, 550, 291, 787, 483, 281, 458, 264, 8121, 1874, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 352, "seek": 131292, "start": 1329.1200000000001, "end": 1330.1200000000001, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 353, "seek": 131292, "start": 1330.1200000000001, "end": 1331.8000000000002, "text": " That would be much nicer.", "tokens": [663, 576, 312, 709, 22842, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 354, "seek": 131292, "start": 1331.8000000000002, "end": 1334.3600000000001, "text": " And then it's like a proven result.", "tokens": [400, 550, 309, 311, 411, 257, 12785, 1874, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 355, "seek": 131292, "start": 1334.3600000000001, "end": 1335.8200000000002, "text": " It's a guarantee at that point.", "tokens": [467, 311, 257, 10815, 412, 300, 935, 13], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 356, "seek": 131292, "start": 1335.8200000000002, "end": 1342.24, "text": " So this is kind of the cool thing is like, with a little bit of glue and a little bit", "tokens": [407, 341, 307, 733, 295, 264, 1627, 551, 307, 411, 11, 365, 257, 707, 857, 295, 8998, 293, 257, 707, 857], "temperature": 0.0, "avg_logprob": -0.2510949364004209, "compression_ratio": 1.7058823529411764, "no_speech_prob": 9.1324943696236e-07}, {"id": 357, "seek": 134224, "start": 1342.24, "end": 1347.44, "text": " of piecing things together, a little bit of allowing it to iterate and get feedback and", "tokens": [295, 1730, 2175, 721, 1214, 11, 257, 707, 857, 295, 8293, 309, 281, 44497, 293, 483, 5824, 293], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 358, "seek": 134224, "start": 1347.44, "end": 1352.0, "text": " adapt based on that feedback, which is actually like GPT-4 is very good at this.", "tokens": [6231, 2361, 322, 300, 5824, 11, 597, 307, 767, 411, 26039, 51, 12, 19, 307, 588, 665, 412, 341, 13], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 359, "seek": 134224, "start": 1352.0, "end": 1356.0, "text": " You can get guarantees, you can get guaranteed safe tools, especially with Elm.", "tokens": [509, 393, 483, 32567, 11, 291, 393, 483, 18031, 3273, 3873, 11, 2318, 365, 2699, 76, 13], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 360, "seek": 134224, "start": 1356.0, "end": 1358.48, "text": " With JavaScript, that would be more challenging.", "tokens": [2022, 15778, 11, 300, 576, 312, 544, 7595, 13], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 361, "seek": 134224, "start": 1358.48, "end": 1361.24, "text": " Yeah, it would be hard to verify the results.", "tokens": [865, 11, 309, 576, 312, 1152, 281, 16888, 264, 3542, 13], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 362, "seek": 134224, "start": 1361.24, "end": 1366.16, "text": " But I'm guessing, or at least whenever you say verifying the results, I'm thinking of", "tokens": [583, 286, 478, 17939, 11, 420, 412, 1935, 5699, 291, 584, 1306, 5489, 264, 3542, 11, 286, 478, 1953, 295], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 363, "seek": 134224, "start": 1366.16, "end": 1367.16, "text": " the Elm compiler.", "tokens": [264, 2699, 76, 31958, 13], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 364, "seek": 134224, "start": 1367.16, "end": 1370.52, "text": " But I'm also thinking of writing tests, you know.", "tokens": [583, 286, 478, 611, 1953, 295, 3579, 6921, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 365, "seek": 134224, "start": 1370.52, "end": 1371.52, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.259440806374621, "compression_ratio": 1.6866666666666668, "no_speech_prob": 4.565902145259315e-06}, {"id": 366, "seek": 137152, "start": 1371.52, "end": 1379.12, "text": " I would probably also try to include the results of Elm tests to the prompt, if possible.", "tokens": [286, 576, 1391, 611, 853, 281, 4090, 264, 3542, 295, 2699, 76, 6921, 281, 264, 12391, 11, 498, 1944, 13], "temperature": 0.0, "avg_logprob": -0.2838052113850911, "compression_ratio": 1.5339366515837105, "no_speech_prob": 6.475880809375667e-07}, {"id": 367, "seek": 137152, "start": 1379.12, "end": 1383.48, "text": " But that does mean that you need to verify things.", "tokens": [583, 300, 775, 914, 300, 291, 643, 281, 16888, 721, 13], "temperature": 0.0, "avg_logprob": -0.2838052113850911, "compression_ratio": 1.5339366515837105, "no_speech_prob": 6.475880809375667e-07}, {"id": 368, "seek": 137152, "start": 1383.48, "end": 1387.84, "text": " And that's kind of what our industry is all about, right?", "tokens": [400, 300, 311, 733, 295, 437, 527, 3518, 307, 439, 466, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2838052113850911, "compression_ratio": 1.5339366515837105, "no_speech_prob": 6.475880809375667e-07}, {"id": 369, "seek": 137152, "start": 1387.84, "end": 1391.6, "text": " Why we have software engineers and not just coders.", "tokens": [1545, 321, 362, 4722, 11955, 293, 406, 445, 17656, 433, 13], "temperature": 0.0, "avg_logprob": -0.2838052113850911, "compression_ratio": 1.5339366515837105, "no_speech_prob": 6.475880809375667e-07}, {"id": 370, "seek": 137152, "start": 1391.6, "end": 1398.8, "text": " That's why we call ourselves engineers, is because we make things and we know it's going", "tokens": [663, 311, 983, 321, 818, 4175, 11955, 11, 307, 570, 321, 652, 721, 293, 321, 458, 309, 311, 516], "temperature": 0.0, "avg_logprob": -0.2838052113850911, "compression_ratio": 1.5339366515837105, "no_speech_prob": 6.475880809375667e-07}, {"id": 371, "seek": 139880, "start": 1398.8, "end": 1403.2, "text": " to be, we know we shouldn't trust even ourselves.", "tokens": [281, 312, 11, 321, 458, 321, 4659, 380, 3361, 754, 4175, 13], "temperature": 0.0, "avg_logprob": -0.21352281757429534, "compression_ratio": 1.7363636363636363, "no_speech_prob": 7.224330147437286e-07}, {"id": 372, "seek": 139880, "start": 1403.2, "end": 1408.8799999999999, "text": " We shouldn't trust the code that we're writing, the code that we're reading, and the code", "tokens": [492, 4659, 380, 3361, 264, 3089, 300, 321, 434, 3579, 11, 264, 3089, 300, 321, 434, 3760, 11, 293, 264, 3089], "temperature": 0.0, "avg_logprob": -0.21352281757429534, "compression_ratio": 1.7363636363636363, "no_speech_prob": 7.224330147437286e-07}, {"id": 373, "seek": 139880, "start": 1408.8799999999999, "end": 1414.52, "text": " that has been running for years, because we know, well, there are bugs everywhere.", "tokens": [300, 575, 668, 2614, 337, 924, 11, 570, 321, 458, 11, 731, 11, 456, 366, 15120, 5315, 13], "temperature": 0.0, "avg_logprob": -0.21352281757429534, "compression_ratio": 1.7363636363636363, "no_speech_prob": 7.224330147437286e-07}, {"id": 374, "seek": 139880, "start": 1414.52, "end": 1422.72, "text": " So that's why we have all those tools, type systems, test suites, formal logic, manual", "tokens": [407, 300, 311, 983, 321, 362, 439, 729, 3873, 11, 2010, 3652, 11, 1500, 459, 3324, 11, 9860, 9952, 11, 9688], "temperature": 0.0, "avg_logprob": -0.21352281757429534, "compression_ratio": 1.7363636363636363, "no_speech_prob": 7.224330147437286e-07}, {"id": 375, "seek": 139880, "start": 1422.72, "end": 1428.76, "text": " QA, all those kinds of things, to make sure that we do things correctly.", "tokens": [1249, 32, 11, 439, 729, 3685, 295, 721, 11, 281, 652, 988, 300, 321, 360, 721, 8944, 13], "temperature": 0.0, "avg_logprob": -0.21352281757429534, "compression_ratio": 1.7363636363636363, "no_speech_prob": 7.224330147437286e-07}, {"id": 376, "seek": 142876, "start": 1428.76, "end": 1437.12, "text": " And also, even the processes, like the Agile movement is running your code in such a way,", "tokens": [400, 611, 11, 754, 264, 7555, 11, 411, 264, 2725, 794, 3963, 307, 2614, 428, 3089, 294, 1270, 257, 636, 11], "temperature": 0.0, "avg_logprob": -0.24652349334402182, "compression_ratio": 1.6019900497512438, "no_speech_prob": 4.09285075875232e-06}, {"id": 377, "seek": 142876, "start": 1437.12, "end": 1442.68, "text": " or working in such a way, that you get better results out of it.", "tokens": [420, 1364, 294, 1270, 257, 636, 11, 300, 291, 483, 1101, 3542, 484, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.24652349334402182, "compression_ratio": 1.6019900497512438, "no_speech_prob": 4.09285075875232e-06}, {"id": 378, "seek": 142876, "start": 1442.68, "end": 1446.8, "text": " So we do need to verify our results.", "tokens": [407, 321, 360, 643, 281, 16888, 527, 3542, 13], "temperature": 0.0, "avg_logprob": -0.24652349334402182, "compression_ratio": 1.6019900497512438, "no_speech_prob": 4.09285075875232e-06}, {"id": 379, "seek": 142876, "start": 1446.8, "end": 1451.36, "text": " And we can't just use the results of the AI willy-nilly.", "tokens": [400, 321, 393, 380, 445, 764, 264, 3542, 295, 264, 7318, 486, 88, 12, 77, 6917, 13], "temperature": 0.0, "avg_logprob": -0.24652349334402182, "compression_ratio": 1.6019900497512438, "no_speech_prob": 4.09285075875232e-06}, {"id": 380, "seek": 142876, "start": 1451.36, "end": 1453.32, "text": " I mean, we can, and people are.", "tokens": [286, 914, 11, 321, 393, 11, 293, 561, 366, 13], "temperature": 0.0, "avg_logprob": -0.24652349334402182, "compression_ratio": 1.6019900497512438, "no_speech_prob": 4.09285075875232e-06}, {"id": 381, "seek": 142876, "start": 1453.32, "end": 1456.4, "text": " I think that's actually kind of the norm.", "tokens": [286, 519, 300, 311, 767, 733, 295, 264, 2026, 13], "temperature": 0.0, "avg_logprob": -0.24652349334402182, "compression_ratio": 1.6019900497512438, "no_speech_prob": 4.09285075875232e-06}, {"id": 382, "seek": 145640, "start": 1456.4, "end": 1461.64, "text": " It's going to become increasingly common to see, sort of like, this is a really weird", "tokens": [467, 311, 516, 281, 1813, 12980, 2689, 281, 536, 11, 1333, 295, 411, 11, 341, 307, 257, 534, 3657], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 383, "seek": 145640, "start": 1461.64, "end": 1462.64, "text": " piece of code.", "tokens": [2522, 295, 3089, 13], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 384, "seek": 145640, "start": 1462.64, "end": 1464.92, "text": " Does this even give the right results?", "tokens": [4402, 341, 754, 976, 264, 558, 3542, 30], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 385, "seek": 145640, "start": 1464.92, "end": 1472.24, "text": " Like, oh, somebody just YOLOed this chat GPT or this copilot completion into the code and", "tokens": [1743, 11, 1954, 11, 2618, 445, 398, 5046, 46, 292, 341, 5081, 26039, 51, 420, 341, 2971, 31516, 19372, 666, 264, 3089, 293], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 386, "seek": 145640, "start": 1472.24, "end": 1473.24, "text": " committed it.", "tokens": [7784, 309, 13], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 387, "seek": 145640, "start": 1473.24, "end": 1474.24, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 388, "seek": 145640, "start": 1474.24, "end": 1478.0400000000002, "text": " But I mean, it's something very different from what we do today.", "tokens": [583, 286, 914, 11, 309, 311, 746, 588, 819, 490, 437, 321, 360, 965, 13], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 389, "seek": 145640, "start": 1478.0400000000002, "end": 1485.0800000000002, "text": " Because in a lot of cases, we are still running code and with not a lot of tests in practice.", "tokens": [1436, 294, 257, 688, 295, 3331, 11, 321, 366, 920, 2614, 3089, 293, 365, 406, 257, 688, 295, 6921, 294, 3124, 13], "temperature": 0.0, "avg_logprob": -0.2648673977768212, "compression_ratio": 1.5572519083969465, "no_speech_prob": 4.860385161009617e-06}, {"id": 390, "seek": 148508, "start": 1485.08, "end": 1490.72, "text": " I feel like most people don't write enough tests, myself included.", "tokens": [286, 841, 411, 881, 561, 500, 380, 2464, 1547, 6921, 11, 2059, 5556, 13], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 391, "seek": 148508, "start": 1490.72, "end": 1496.6399999999999, "text": " So this is just maybe strengthening the need for adding tests.", "tokens": [407, 341, 307, 445, 1310, 28224, 264, 643, 337, 5127, 6921, 13], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 392, "seek": 148508, "start": 1496.6399999999999, "end": 1497.6399999999999, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 393, "seek": 148508, "start": 1497.6399999999999, "end": 1499.9199999999998, "text": " In a way, like our role changes, right?", "tokens": [682, 257, 636, 11, 411, 527, 3090, 2962, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 394, "seek": 148508, "start": 1499.9199999999998, "end": 1507.4199999999998, "text": " Our role becomes more like verifying and guiding systems rather than like, I can write a line", "tokens": [2621, 3090, 3643, 544, 411, 1306, 5489, 293, 25061, 3652, 2831, 813, 411, 11, 286, 393, 2464, 257, 1622], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 395, "seek": 148508, "start": 1507.4199999999998, "end": 1508.8799999999999, "text": " of code.", "tokens": [295, 3089, 13], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 396, "seek": 148508, "start": 1508.8799999999999, "end": 1511.08, "text": " That's not the super valuable asset anymore.", "tokens": [663, 311, 406, 264, 1687, 8263, 11999, 3602, 13], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 397, "seek": 148508, "start": 1511.08, "end": 1512.08, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.24644506242540148, "compression_ratio": 1.4755555555555555, "no_speech_prob": 6.083505468268413e-07}, {"id": 398, "seek": 151208, "start": 1512.08, "end": 1516.1599999999999, "text": " But I do feel like because it's going to be so easy to write code, and because you don't", "tokens": [583, 286, 360, 841, 411, 570, 309, 311, 516, 281, 312, 370, 1858, 281, 2464, 3089, 11, 293, 570, 291, 500, 380], "temperature": 0.0, "avg_logprob": -0.24144943393006615, "compression_ratio": 1.6168224299065421, "no_speech_prob": 2.4060620944510447e-06}, {"id": 399, "seek": 151208, "start": 1516.1599999999999, "end": 1522.9199999999998, "text": " go through all the steps of writing good code, you're not going to do it as much.", "tokens": [352, 807, 439, 264, 4439, 295, 3579, 665, 3089, 11, 291, 434, 406, 516, 281, 360, 309, 382, 709, 13], "temperature": 0.0, "avg_logprob": -0.24144943393006615, "compression_ratio": 1.6168224299065421, "no_speech_prob": 2.4060620944510447e-06}, {"id": 400, "seek": 151208, "start": 1522.9199999999998, "end": 1529.76, "text": " For instance, what you like to do, and myself as well, is to do things in a TDD style.", "tokens": [1171, 5197, 11, 437, 291, 411, 281, 360, 11, 293, 2059, 382, 731, 11, 307, 281, 360, 721, 294, 257, 314, 20818, 3758, 13], "temperature": 0.0, "avg_logprob": -0.24144943393006615, "compression_ratio": 1.6168224299065421, "no_speech_prob": 2.4060620944510447e-06}, {"id": 401, "seek": 151208, "start": 1529.76, "end": 1540.8799999999999, "text": " You know, you start with a red test, and you change the code to make the test green, but", "tokens": [509, 458, 11, 291, 722, 365, 257, 2182, 1500, 11, 293, 291, 1319, 264, 3089, 281, 652, 264, 1500, 3092, 11, 457], "temperature": 0.0, "avg_logprob": -0.24144943393006615, "compression_ratio": 1.6168224299065421, "no_speech_prob": 2.4060620944510447e-06}, {"id": 402, "seek": 154088, "start": 1540.88, "end": 1546.0400000000002, "text": " you only change the code as much as necessary for that test to become green.", "tokens": [291, 787, 1319, 264, 3089, 382, 709, 382, 4818, 337, 300, 1500, 281, 1813, 3092, 13], "temperature": 0.0, "avg_logprob": -0.24613664505329538, "compression_ratio": 1.5720338983050848, "no_speech_prob": 1.994712874875404e-06}, {"id": 403, "seek": 154088, "start": 1546.0400000000002, "end": 1554.3600000000001, "text": " And then you continuously improve or complexify that function until it hits all the requirements.", "tokens": [400, 550, 291, 15684, 3470, 420, 3997, 2505, 300, 2445, 1826, 309, 8664, 439, 264, 7728, 13], "temperature": 0.0, "avg_logprob": -0.24613664505329538, "compression_ratio": 1.5720338983050848, "no_speech_prob": 1.994712874875404e-06}, {"id": 404, "seek": 154088, "start": 1554.3600000000001, "end": 1560.3600000000001, "text": " But if I ask the tool, hey, can you give me a function that does this?", "tokens": [583, 498, 286, 1029, 264, 2290, 11, 4177, 11, 393, 291, 976, 385, 257, 2445, 300, 775, 341, 30], "temperature": 0.0, "avg_logprob": -0.24613664505329538, "compression_ratio": 1.5720338983050848, "no_speech_prob": 1.994712874875404e-06}, {"id": 405, "seek": 154088, "start": 1560.3600000000001, "end": 1566.5200000000002, "text": " Well, I probably won't have all the same tests that would have been the results.", "tokens": [1042, 11, 286, 1391, 1582, 380, 362, 439, 264, 912, 6921, 300, 576, 362, 668, 264, 3542, 13], "temperature": 0.0, "avg_logprob": -0.24613664505329538, "compression_ratio": 1.5720338983050848, "no_speech_prob": 1.994712874875404e-06}, {"id": 406, "seek": 154088, "start": 1566.5200000000002, "end": 1567.5200000000002, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.24613664505329538, "compression_ratio": 1.5720338983050848, "no_speech_prob": 1.994712874875404e-06}, {"id": 407, "seek": 154088, "start": 1567.5200000000002, "end": 1569.6000000000001, "text": " Just like running tests after the fact.", "tokens": [1449, 411, 2614, 6921, 934, 264, 1186, 13], "temperature": 0.0, "avg_logprob": -0.24613664505329538, "compression_ratio": 1.5720338983050848, "no_speech_prob": 1.994712874875404e-06}, {"id": 408, "seek": 156960, "start": 1569.6, "end": 1576.0, "text": " So you can probably ask the tool to write tests, but do you want an AI to write your", "tokens": [407, 291, 393, 1391, 1029, 264, 2290, 281, 2464, 6921, 11, 457, 360, 291, 528, 364, 7318, 281, 2464, 428], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 409, "seek": 156960, "start": 1576.0, "end": 1577.0, "text": " tests?", "tokens": [6921, 30], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 410, "seek": 156960, "start": 1577.0, "end": 1578.0, "text": " Right, exactly.", "tokens": [1779, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 411, "seek": 156960, "start": 1578.0, "end": 1585.1999999999998, "text": " It's kind of like, who monitors the police or whatever that sentence is.", "tokens": [467, 311, 733, 295, 411, 11, 567, 26518, 264, 3804, 420, 2035, 300, 8174, 307, 13], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 412, "seek": 156960, "start": 1585.1999999999998, "end": 1586.1999999999998, "text": " Right, right.", "tokens": [1779, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 413, "seek": 156960, "start": 1586.1999999999998, "end": 1588.6399999999999, "text": " I totally agree with your framing here.", "tokens": [286, 3879, 3986, 365, 428, 28971, 510, 13], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 414, "seek": 156960, "start": 1588.6399999999999, "end": 1592.0, "text": " I mean, I think this is a very good way to look at it.", "tokens": [286, 914, 11, 286, 519, 341, 307, 257, 588, 665, 636, 281, 574, 412, 309, 13], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 415, "seek": 156960, "start": 1592.0, "end": 1598.12, "text": " And I think, you know, what do we want to take for granted is like how I would think", "tokens": [400, 286, 519, 11, 291, 458, 11, 437, 360, 321, 528, 281, 747, 337, 12344, 307, 411, 577, 286, 576, 519], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 416, "seek": 156960, "start": 1598.12, "end": 1599.3999999999999, "text": " about that.", "tokens": [466, 300, 13], "temperature": 0.0, "avg_logprob": -0.2654898626762524, "compression_ratio": 1.6150627615062763, "no_speech_prob": 1.6797191619843943e-06}, {"id": 417, "seek": 159940, "start": 1599.4, "end": 1602.4, "text": " So for example, JSON decoders.", "tokens": [407, 337, 1365, 11, 31828, 979, 378, 433, 13], "temperature": 0.0, "avg_logprob": -0.20982964541933952, "compression_ratio": 1.6651982378854626, "no_speech_prob": 4.247006870627956e-07}, {"id": 418, "seek": 159940, "start": 1602.4, "end": 1606.52, "text": " Do we want to take JSON decoders for granted?", "tokens": [1144, 321, 528, 281, 747, 31828, 979, 378, 433, 337, 12344, 30], "temperature": 0.0, "avg_logprob": -0.20982964541933952, "compression_ratio": 1.6651982378854626, "no_speech_prob": 4.247006870627956e-07}, {"id": 419, "seek": 159940, "start": 1606.52, "end": 1611.92, "text": " Kind of like we kind of we want to be able to write them with a lot of flexibility, but", "tokens": [9242, 295, 411, 321, 733, 295, 321, 528, 281, 312, 1075, 281, 2464, 552, 365, 257, 688, 295, 12635, 11, 457], "temperature": 0.0, "avg_logprob": -0.20982964541933952, "compression_ratio": 1.6651982378854626, "no_speech_prob": 4.247006870627956e-07}, {"id": 420, "seek": 159940, "start": 1611.92, "end": 1616.8200000000002, "text": " we don't want to spend a lot of brainpower creating and maintaining them.", "tokens": [321, 500, 380, 528, 281, 3496, 257, 688, 295, 3567, 9513, 4084, 293, 14916, 552, 13], "temperature": 0.0, "avg_logprob": -0.20982964541933952, "compression_ratio": 1.6651982378854626, "no_speech_prob": 4.247006870627956e-07}, {"id": 421, "seek": 159940, "start": 1616.8200000000002, "end": 1621.6000000000001, "text": " So I mean, if they're verifiable, that's great.", "tokens": [407, 286, 914, 11, 498, 436, 434, 1306, 30876, 11, 300, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.20982964541933952, "compression_ratio": 1.6651982378854626, "no_speech_prob": 4.247006870627956e-07}, {"id": 422, "seek": 159940, "start": 1621.6000000000001, "end": 1628.14, "text": " If we can continue to verify them, if we can, I mean, better still, if we can use something", "tokens": [759, 321, 393, 2354, 281, 16888, 552, 11, 498, 321, 393, 11, 286, 914, 11, 1101, 920, 11, 498, 321, 393, 764, 746], "temperature": 0.0, "avg_logprob": -0.20982964541933952, "compression_ratio": 1.6651982378854626, "no_speech_prob": 4.247006870627956e-07}, {"id": 423, "seek": 162814, "start": 1628.14, "end": 1633.16, "text": " like GraphQL to make sure it stays in sync even better.", "tokens": [411, 21884, 13695, 281, 652, 988, 309, 10834, 294, 20271, 754, 1101, 13], "temperature": 0.0, "avg_logprob": -0.2029728234982958, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.62802803060913e-06}, {"id": 424, "seek": 162814, "start": 1633.16, "end": 1637.94, "text": " But we don't really want to have to think too much about building and maintaining those", "tokens": [583, 321, 500, 380, 534, 528, 281, 362, 281, 519, 886, 709, 466, 2390, 293, 14916, 729], "temperature": 0.0, "avg_logprob": -0.2029728234982958, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.62802803060913e-06}, {"id": 425, "seek": 162814, "start": 1637.94, "end": 1638.94, "text": " low level details.", "tokens": [2295, 1496, 4365, 13], "temperature": 0.0, "avg_logprob": -0.2029728234982958, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.62802803060913e-06}, {"id": 426, "seek": 162814, "start": 1638.94, "end": 1643.5200000000002, "text": " We want that to just be like, given a decoder that works.", "tokens": [492, 528, 300, 281, 445, 312, 411, 11, 2212, 257, 979, 19866, 300, 1985, 13], "temperature": 0.0, "avg_logprob": -0.2029728234982958, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.62802803060913e-06}, {"id": 427, "seek": 162814, "start": 1643.5200000000002, "end": 1649.8400000000001, "text": " And so this is a very good thing to delegate to AI and in my opinion, and whereas like", "tokens": [400, 370, 341, 307, 257, 588, 665, 551, 281, 40999, 281, 7318, 293, 294, 452, 4800, 11, 293, 9735, 411], "temperature": 0.0, "avg_logprob": -0.2029728234982958, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.62802803060913e-06}, {"id": 428, "seek": 162814, "start": 1649.8400000000001, "end": 1656.44, "text": " solve this complex problem that has a lot of edge cases, and a lot of like things to", "tokens": [5039, 341, 3997, 1154, 300, 575, 257, 688, 295, 4691, 3331, 11, 293, 257, 688, 295, 411, 721, 281], "temperature": 0.0, "avg_logprob": -0.2029728234982958, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.62802803060913e-06}, {"id": 429, "seek": 165644, "start": 1656.44, "end": 1661.54, "text": " consider the use case, how do we want it to behave and stuff like these are the types", "tokens": [1949, 264, 764, 1389, 11, 577, 360, 321, 528, 309, 281, 15158, 293, 1507, 411, 613, 366, 264, 3467], "temperature": 0.0, "avg_logprob": -0.2604293123297735, "compression_ratio": 1.8257261410788381, "no_speech_prob": 5.338101345842006e-06}, {"id": 430, "seek": 165644, "start": 1661.54, "end": 1666.3400000000001, "text": " of things that I think our job as an engineer is still extremely relevant.", "tokens": [295, 721, 300, 286, 519, 527, 1691, 382, 364, 11403, 307, 920, 4664, 7340, 13], "temperature": 0.0, "avg_logprob": -0.2604293123297735, "compression_ratio": 1.8257261410788381, "no_speech_prob": 5.338101345842006e-06}, {"id": 431, "seek": 165644, "start": 1666.3400000000001, "end": 1668.64, "text": " Thinking about the user experience.", "tokens": [24460, 466, 264, 4195, 1752, 13], "temperature": 0.0, "avg_logprob": -0.2604293123297735, "compression_ratio": 1.8257261410788381, "no_speech_prob": 5.338101345842006e-06}, {"id": 432, "seek": 165644, "start": 1668.64, "end": 1674.4, "text": " And in my opinion, I think that engineering, these types of things are going to become", "tokens": [400, 294, 452, 4800, 11, 286, 519, 300, 7043, 11, 613, 3467, 295, 721, 366, 516, 281, 1813], "temperature": 0.0, "avg_logprob": -0.2604293123297735, "compression_ratio": 1.8257261410788381, "no_speech_prob": 5.338101345842006e-06}, {"id": 433, "seek": 165644, "start": 1674.4, "end": 1676.1200000000001, "text": " a more important part of the job.", "tokens": [257, 544, 1021, 644, 295, 264, 1691, 13], "temperature": 0.0, "avg_logprob": -0.2604293123297735, "compression_ratio": 1.8257261410788381, "no_speech_prob": 5.338101345842006e-06}, {"id": 434, "seek": 165644, "start": 1676.1200000000001, "end": 1677.8400000000001, "text": " Thinking about the user experience.", "tokens": [24460, 466, 264, 4195, 1752, 13], "temperature": 0.0, "avg_logprob": -0.2604293123297735, "compression_ratio": 1.8257261410788381, "no_speech_prob": 5.338101345842006e-06}, {"id": 435, "seek": 165644, "start": 1677.8400000000001, "end": 1683.76, "text": " Sure these AI systems can sort of do that, but we need like they can, we can tell them", "tokens": [4894, 613, 7318, 3652, 393, 1333, 295, 360, 300, 11, 457, 321, 643, 411, 436, 393, 11, 321, 393, 980, 552], "temperature": 0.0, "avg_logprob": -0.2604293123297735, "compression_ratio": 1.8257261410788381, "no_speech_prob": 5.338101345842006e-06}, {"id": 436, "seek": 168376, "start": 1683.76, "end": 1689.56, "text": " think about the user experience and think about these different use cases and think", "tokens": [519, 466, 264, 4195, 1752, 293, 519, 466, 613, 819, 764, 3331, 293, 519], "temperature": 0.0, "avg_logprob": -0.2763320033990064, "compression_ratio": 1.7822222222222222, "no_speech_prob": 7.296195235539926e-06}, {"id": 437, "seek": 168376, "start": 1689.56, "end": 1691.24, "text": " about that in the test suite you write.", "tokens": [466, 300, 294, 264, 1500, 14205, 291, 2464, 13], "temperature": 0.0, "avg_logprob": -0.2763320033990064, "compression_ratio": 1.7822222222222222, "no_speech_prob": 7.296195235539926e-06}, {"id": 438, "seek": 168376, "start": 1691.24, "end": 1698.8799999999999, "text": " But I think you want a human involved in really artisanally crafting user experiences and", "tokens": [583, 286, 519, 291, 528, 257, 1952, 3288, 294, 534, 1523, 14804, 379, 29048, 4195, 5235, 293], "temperature": 0.0, "avg_logprob": -0.2763320033990064, "compression_ratio": 1.7822222222222222, "no_speech_prob": 7.296195235539926e-06}, {"id": 439, "seek": 168376, "start": 1698.8799999999999, "end": 1700.4, "text": " use cases.", "tokens": [764, 3331, 13], "temperature": 0.0, "avg_logprob": -0.2763320033990064, "compression_ratio": 1.7822222222222222, "no_speech_prob": 7.296195235539926e-06}, {"id": 440, "seek": 168376, "start": 1700.4, "end": 1704.28, "text": " And then you want to say, okay, now that I've figured these things out, here's a suite of", "tokens": [400, 550, 291, 528, 281, 584, 11, 1392, 11, 586, 300, 286, 600, 8932, 613, 721, 484, 11, 510, 311, 257, 14205, 295], "temperature": 0.0, "avg_logprob": -0.2763320033990064, "compression_ratio": 1.7822222222222222, "no_speech_prob": 7.296195235539926e-06}, {"id": 441, "seek": 168376, "start": 1704.28, "end": 1705.96, "text": " tests.", "tokens": [6921, 13], "temperature": 0.0, "avg_logprob": -0.2763320033990064, "compression_ratio": 1.7822222222222222, "no_speech_prob": 7.296195235539926e-06}, {"id": 442, "seek": 168376, "start": 1705.96, "end": 1713.52, "text": " And if some AI thing can just satisfy those tests, maybe you're good, you know?", "tokens": [400, 498, 512, 7318, 551, 393, 445, 19319, 729, 6921, 11, 1310, 291, 434, 665, 11, 291, 458, 30], "temperature": 0.0, "avg_logprob": -0.2763320033990064, "compression_ratio": 1.7822222222222222, "no_speech_prob": 7.296195235539926e-06}, {"id": 443, "seek": 171352, "start": 1713.52, "end": 1719.8799999999999, "text": " Actually, one of the things that I tried with chat GPT three, so maybe it's better now,", "tokens": [5135, 11, 472, 295, 264, 721, 300, 286, 3031, 365, 5081, 26039, 51, 1045, 11, 370, 1310, 309, 311, 1101, 586, 11], "temperature": 0.0, "avg_logprob": -0.28840231663972427, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.002996555143909e-06}, {"id": 444, "seek": 171352, "start": 1719.8799999999999, "end": 1726.4, "text": " but I think my point was to hold is I told it, please write a function that satisfies", "tokens": [457, 286, 519, 452, 935, 390, 281, 1797, 307, 286, 1907, 309, 11, 1767, 2464, 257, 2445, 300, 44271], "temperature": 0.0, "avg_logprob": -0.28840231663972427, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.002996555143909e-06}, {"id": 445, "seek": 171352, "start": 1726.4, "end": 1728.36, "text": " these elm tests.", "tokens": [613, 806, 76, 6921, 13], "temperature": 0.0, "avg_logprob": -0.28840231663972427, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.002996555143909e-06}, {"id": 446, "seek": 171352, "start": 1728.36, "end": 1733.96, "text": " So I wrote some tests and basically told it to write a function.", "tokens": [407, 286, 4114, 512, 6921, 293, 1936, 1907, 309, 281, 2464, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.28840231663972427, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.002996555143909e-06}, {"id": 447, "seek": 171352, "start": 1733.96, "end": 1738.32, "text": " And it did so and it was pretty good, but it wasn't correct.", "tokens": [400, 309, 630, 370, 293, 309, 390, 1238, 665, 11, 457, 309, 2067, 380, 3006, 13], "temperature": 0.0, "avg_logprob": -0.28840231663972427, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.002996555143909e-06}, {"id": 448, "seek": 171352, "start": 1738.32, "end": 1743.0, "text": " Like there were syntax errors, which I told it to fix.", "tokens": [1743, 456, 645, 28431, 13603, 11, 597, 286, 1907, 309, 281, 3191, 13], "temperature": 0.0, "avg_logprob": -0.28840231663972427, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.002996555143909e-06}, {"id": 449, "seek": 174300, "start": 1743.0, "end": 1746.04, "text": " And when those were gone, well, the, the tests were not passing.", "tokens": [400, 562, 729, 645, 2780, 11, 731, 11, 264, 11, 264, 6921, 645, 406, 8437, 13], "temperature": 0.0, "avg_logprob": -0.25740715173574596, "compression_ratio": 1.6798245614035088, "no_speech_prob": 9.87452381195908e-07}, {"id": 450, "seek": 174300, "start": 1746.04, "end": 1749.44, "text": " Some of them were, but not, not all of them.", "tokens": [2188, 295, 552, 645, 11, 457, 406, 11, 406, 439, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.25740715173574596, "compression_ratio": 1.6798245614035088, "no_speech_prob": 9.87452381195908e-07}, {"id": 451, "seek": 174300, "start": 1749.44, "end": 1756.68, "text": " And the function that I needed was slightly a bit too complex to be such an easy function", "tokens": [400, 264, 2445, 300, 286, 2978, 390, 4748, 257, 857, 886, 3997, 281, 312, 1270, 364, 1858, 2445], "temperature": 0.0, "avg_logprob": -0.25740715173574596, "compression_ratio": 1.6798245614035088, "no_speech_prob": 9.87452381195908e-07}, {"id": 452, "seek": 174300, "start": 1756.68, "end": 1759.42, "text": " to implement, as you said before.", "tokens": [281, 4445, 11, 382, 291, 848, 949, 13], "temperature": 0.0, "avg_logprob": -0.25740715173574596, "compression_ratio": 1.6798245614035088, "no_speech_prob": 9.87452381195908e-07}, {"id": 453, "seek": 174300, "start": 1759.42, "end": 1764.12, "text": " So basically the code that it wrote was pretty hard to read.", "tokens": [407, 1936, 264, 3089, 300, 309, 4114, 390, 1238, 1152, 281, 1401, 13], "temperature": 0.0, "avg_logprob": -0.25740715173574596, "compression_ratio": 1.6798245614035088, "no_speech_prob": 9.87452381195908e-07}, {"id": 454, "seek": 174300, "start": 1764.12, "end": 1769.76, "text": " And so that means that, okay, I have something that I can use as a basis and that I need", "tokens": [400, 370, 300, 1355, 300, 11, 1392, 11, 286, 362, 746, 300, 286, 393, 764, 382, 257, 5143, 293, 300, 286, 643], "temperature": 0.0, "avg_logprob": -0.25740715173574596, "compression_ratio": 1.6798245614035088, "no_speech_prob": 9.87452381195908e-07}, {"id": 455, "seek": 176976, "start": 1769.76, "end": 1774.64, "text": " to change to, to make the test pass the few failing tests pass.", "tokens": [281, 1319, 281, 11, 281, 652, 264, 1500, 1320, 264, 1326, 18223, 6921, 1320, 13], "temperature": 0.0, "avg_logprob": -0.28734594021203386, "compression_ratio": 1.917948717948718, "no_speech_prob": 1.0511331538509694e-06}, {"id": 456, "seek": 176976, "start": 1774.64, "end": 1780.8799999999999, "text": " But because it was so complex, I was like, well, how do I make the test pass?", "tokens": [583, 570, 309, 390, 370, 3997, 11, 286, 390, 411, 11, 731, 11, 577, 360, 286, 652, 264, 1500, 1320, 30], "temperature": 0.0, "avg_logprob": -0.28734594021203386, "compression_ratio": 1.917948717948718, "no_speech_prob": 1.0511331538509694e-06}, {"id": 457, "seek": 176976, "start": 1780.8799999999999, "end": 1784.8799999999999, "text": " Well, to, to make the test pass, I need to change the code to change the code.", "tokens": [1042, 11, 281, 11, 281, 652, 264, 1500, 1320, 11, 286, 643, 281, 1319, 264, 3089, 281, 1319, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.28734594021203386, "compression_ratio": 1.917948717948718, "no_speech_prob": 1.0511331538509694e-06}, {"id": 458, "seek": 176976, "start": 1784.8799999999999, "end": 1786.7, "text": " I need to understand the code.", "tokens": [286, 643, 281, 1223, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.28734594021203386, "compression_ratio": 1.917948717948718, "no_speech_prob": 1.0511331538509694e-06}, {"id": 459, "seek": 176976, "start": 1786.7, "end": 1788.28, "text": " So how do we understand the code?", "tokens": [407, 577, 360, 321, 1223, 264, 3089, 30], "temperature": 0.0, "avg_logprob": -0.28734594021203386, "compression_ratio": 1.917948717948718, "no_speech_prob": 1.0511331538509694e-06}, {"id": 460, "seek": 176976, "start": 1788.28, "end": 1795.68, "text": " Well, if anything you've taught me is like, or other people in the agile community, like", "tokens": [1042, 11, 498, 1340, 291, 600, 5928, 385, 307, 411, 11, 420, 661, 561, 294, 264, 30072, 1768, 11, 411], "temperature": 0.0, "avg_logprob": -0.28734594021203386, "compression_ratio": 1.917948717948718, "no_speech_prob": 1.0511331538509694e-06}, {"id": 461, "seek": 179568, "start": 1795.68, "end": 1803.04, "text": " you can get an understanding of the code by changing the code, by doing refactoring techniques,", "tokens": [291, 393, 483, 364, 3701, 295, 264, 3089, 538, 4473, 264, 3089, 11, 538, 884, 1895, 578, 3662, 7512, 11], "temperature": 0.0, "avg_logprob": -0.257261155780993, "compression_ratio": 1.662280701754386, "no_speech_prob": 1.9333431282575475e-06}, {"id": 462, "seek": 179568, "start": 1803.04, "end": 1810.48, "text": " so extracting variables, renaming things, changing how conditions work.", "tokens": [370, 49844, 9102, 11, 8124, 5184, 721, 11, 4473, 577, 4487, 589, 13], "temperature": 0.0, "avg_logprob": -0.257261155780993, "compression_ratio": 1.662280701754386, "no_speech_prob": 1.9333431282575475e-06}, {"id": 463, "seek": 179568, "start": 1810.48, "end": 1816.8400000000001, "text": " And as you do these steps, these tiny steps, because we like them, you start to get some", "tokens": [400, 382, 291, 360, 613, 4439, 11, 613, 5870, 4439, 11, 570, 321, 411, 552, 11, 291, 722, 281, 483, 512], "temperature": 0.0, "avg_logprob": -0.257261155780993, "compression_ratio": 1.662280701754386, "no_speech_prob": 1.9333431282575475e-06}, {"id": 464, "seek": 179568, "start": 1816.8400000000001, "end": 1822.7, "text": " insights into the code and then you can finally notice, oh, well, this is clearly wrong.", "tokens": [14310, 666, 264, 3089, 293, 550, 291, 393, 2721, 3449, 11, 1954, 11, 731, 11, 341, 307, 4448, 2085, 13], "temperature": 0.0, "avg_logprob": -0.257261155780993, "compression_ratio": 1.662280701754386, "no_speech_prob": 1.9333431282575475e-06}, {"id": 465, "seek": 179568, "start": 1822.7, "end": 1825.2, "text": " Now I know what I need to change.", "tokens": [823, 286, 458, 437, 286, 643, 281, 1319, 13], "temperature": 0.0, "avg_logprob": -0.257261155780993, "compression_ratio": 1.662280701754386, "no_speech_prob": 1.9333431282575475e-06}, {"id": 466, "seek": 182520, "start": 1825.2, "end": 1830.8, "text": " And the thing is that I find funny is that this is exactly how you work with legacy code.", "tokens": [400, 264, 551, 307, 300, 286, 915, 4074, 307, 300, 341, 307, 2293, 577, 291, 589, 365, 11711, 3089, 13], "temperature": 0.0, "avg_logprob": -0.2961807924158433, "compression_ratio": 1.6173469387755102, "no_speech_prob": 5.714959456781799e-07}, {"id": 467, "seek": 182520, "start": 1830.8, "end": 1837.32, "text": " But this code is only a few seconds old or a few minutes old, which is like working with", "tokens": [583, 341, 3089, 307, 787, 257, 1326, 3949, 1331, 420, 257, 1326, 2077, 1331, 11, 597, 307, 411, 1364, 365], "temperature": 0.0, "avg_logprob": -0.2961807924158433, "compression_ratio": 1.6173469387755102, "no_speech_prob": 5.714959456781799e-07}, {"id": 468, "seek": 182520, "start": 1837.32, "end": 1841.72, "text": " legacy is becoming even more relevant.", "tokens": [11711, 307, 5617, 754, 544, 7340, 13], "temperature": 0.0, "avg_logprob": -0.2961807924158433, "compression_ratio": 1.6173469387755102, "no_speech_prob": 5.714959456781799e-07}, {"id": 469, "seek": 182520, "start": 1841.72, "end": 1846.48, "text": " Even this new code, which I find very odd and more interesting.", "tokens": [2754, 341, 777, 3089, 11, 597, 286, 915, 588, 7401, 293, 544, 1880, 13], "temperature": 0.0, "avg_logprob": -0.2961807924158433, "compression_ratio": 1.6173469387755102, "no_speech_prob": 5.714959456781799e-07}, {"id": 470, "seek": 182520, "start": 1846.48, "end": 1847.48, "text": " That's a nice insight.", "tokens": [663, 311, 257, 1481, 11269, 13], "temperature": 0.0, "avg_logprob": -0.2961807924158433, "compression_ratio": 1.6173469387755102, "no_speech_prob": 5.714959456781799e-07}, {"id": 471, "seek": 182520, "start": 1847.48, "end": 1848.48, "text": " I like that.", "tokens": [286, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2961807924158433, "compression_ratio": 1.6173469387755102, "no_speech_prob": 5.714959456781799e-07}, {"id": 472, "seek": 184848, "start": 1848.48, "end": 1856.44, "text": " I think, I mean, I do think that we need to guide what kinds of results we want also with", "tokens": [286, 519, 11, 286, 914, 11, 286, 360, 519, 300, 321, 643, 281, 5934, 437, 3685, 295, 3542, 321, 528, 611, 365], "temperature": 0.0, "avg_logprob": -0.23511808821298544, "compression_ratio": 1.7296137339055795, "no_speech_prob": 2.6425300347909797e-06}, {"id": 473, "seek": 184848, "start": 1856.44, "end": 1860.4, "text": " these steps, with prompt engineering and priming.", "tokens": [613, 4439, 11, 365, 12391, 7043, 293, 2886, 278, 13], "temperature": 0.0, "avg_logprob": -0.23511808821298544, "compression_ratio": 1.7296137339055795, "no_speech_prob": 2.6425300347909797e-06}, {"id": 474, "seek": 184848, "start": 1860.4, "end": 1867.72, "text": " But I think you're right that this does become a sort of process of creating some code that", "tokens": [583, 286, 519, 291, 434, 558, 300, 341, 775, 1813, 257, 1333, 295, 1399, 295, 4084, 512, 3089, 300], "temperature": 0.0, "avg_logprob": -0.23511808821298544, "compression_ratio": 1.7296137339055795, "no_speech_prob": 2.6425300347909797e-06}, {"id": 475, "seek": 184848, "start": 1867.72, "end": 1872.24, "text": " we can look at its behavior, we can see, we can get a test around it and see that the", "tokens": [321, 393, 574, 412, 1080, 5223, 11, 321, 393, 536, 11, 321, 393, 483, 257, 1500, 926, 309, 293, 536, 300, 264], "temperature": 0.0, "avg_logprob": -0.23511808821298544, "compression_ratio": 1.7296137339055795, "no_speech_prob": 2.6425300347909797e-06}, {"id": 476, "seek": 184848, "start": 1872.24, "end": 1877.8, "text": " test is passing and verify it, but then not really understand the code and need to do", "tokens": [1500, 307, 8437, 293, 16888, 309, 11, 457, 550, 406, 534, 1223, 264, 3089, 293, 643, 281, 360], "temperature": 0.0, "avg_logprob": -0.23511808821298544, "compression_ratio": 1.7296137339055795, "no_speech_prob": 2.6425300347909797e-06}, {"id": 477, "seek": 187780, "start": 1877.8, "end": 1882.68, "text": " that process of refactoring to get clarity and get it in the way that fits our mental", "tokens": [300, 1399, 295, 1895, 578, 3662, 281, 483, 16992, 293, 483, 309, 294, 264, 636, 300, 9001, 527, 4973], "temperature": 0.0, "avg_logprob": -0.24205231666564941, "compression_ratio": 1.8, "no_speech_prob": 5.014674115955131e-06}, {"id": 478, "seek": 187780, "start": 1882.68, "end": 1886.12, "text": " model or gets away complexity.", "tokens": [2316, 420, 2170, 1314, 14024, 13], "temperature": 0.0, "avg_logprob": -0.24205231666564941, "compression_ratio": 1.8, "no_speech_prob": 5.014674115955131e-06}, {"id": 479, "seek": 187780, "start": 1886.12, "end": 1895.2, "text": " But also like we can say, you know, here's a unit test, make this, like write some code", "tokens": [583, 611, 411, 321, 393, 584, 11, 291, 458, 11, 510, 311, 257, 4985, 1500, 11, 652, 341, 11, 411, 2464, 512, 3089], "temperature": 0.0, "avg_logprob": -0.24205231666564941, "compression_ratio": 1.8, "no_speech_prob": 5.014674115955131e-06}, {"id": 480, "seek": 187780, "start": 1895.2, "end": 1897.52, "text": " that makes this test pass.", "tokens": [300, 1669, 341, 1500, 1320, 13], "temperature": 0.0, "avg_logprob": -0.24205231666564941, "compression_ratio": 1.8, "no_speech_prob": 5.014674115955131e-06}, {"id": 481, "seek": 187780, "start": 1897.52, "end": 1902.44, "text": " And we can do some prompt engineering that says, do that using the simplest thing that", "tokens": [400, 321, 393, 360, 512, 12391, 7043, 300, 1619, 11, 360, 300, 1228, 264, 22811, 551, 300], "temperature": 0.0, "avg_logprob": -0.24205231666564941, "compression_ratio": 1.8, "no_speech_prob": 5.014674115955131e-06}, {"id": 482, "seek": 187780, "start": 1902.44, "end": 1904.0, "text": " could possibly work.", "tokens": [727, 6264, 589, 13], "temperature": 0.0, "avg_logprob": -0.24205231666564941, "compression_ratio": 1.8, "no_speech_prob": 5.014674115955131e-06}, {"id": 483, "seek": 187780, "start": 1904.0, "end": 1907.08, "text": " Here's an example of the simplest thing that could possibly work.", "tokens": [1692, 311, 364, 1365, 295, 264, 22811, 551, 300, 727, 6264, 589, 13], "temperature": 0.0, "avg_logprob": -0.24205231666564941, "compression_ratio": 1.8, "no_speech_prob": 5.014674115955131e-06}, {"id": 484, "seek": 190708, "start": 1907.08, "end": 1912.72, "text": " In this test, there's this error message that the test is giving and you write this thing", "tokens": [682, 341, 1500, 11, 456, 311, 341, 6713, 3636, 300, 264, 1500, 307, 2902, 293, 291, 2464, 341, 551], "temperature": 0.0, "avg_logprob": -0.24150684644591133, "compression_ratio": 1.7659574468085106, "no_speech_prob": 1.1015846439477173e-06}, {"id": 485, "seek": 190708, "start": 1912.72, "end": 1918.8999999999999, "text": " that, okay, sorting a list, it returns the hard-coded list and it makes it green.", "tokens": [300, 11, 1392, 11, 32411, 257, 1329, 11, 309, 11247, 264, 1152, 12, 66, 12340, 1329, 293, 309, 1669, 309, 3092, 13], "temperature": 0.0, "avg_logprob": -0.24150684644591133, "compression_ratio": 1.7659574468085106, "no_speech_prob": 1.1015846439477173e-06}, {"id": 486, "seek": 190708, "start": 1918.8999999999999, "end": 1921.36, "text": " And that's the simplest way it could make that work.", "tokens": [400, 300, 311, 264, 22811, 636, 309, 727, 652, 300, 589, 13], "temperature": 0.0, "avg_logprob": -0.24150684644591133, "compression_ratio": 1.7659574468085106, "no_speech_prob": 1.1015846439477173e-06}, {"id": 487, "seek": 190708, "start": 1921.36, "end": 1924.3999999999999, "text": " So you can actually illustrate that with examples.", "tokens": [407, 291, 393, 767, 23221, 300, 365, 5110, 13], "temperature": 0.0, "avg_logprob": -0.24150684644591133, "compression_ratio": 1.7659574468085106, "no_speech_prob": 1.1015846439477173e-06}, {"id": 488, "seek": 190708, "start": 1924.3999999999999, "end": 1931.48, "text": " You can write very long prompts and you can get it to do a sort of fake it till you make", "tokens": [509, 393, 2464, 588, 938, 41095, 293, 291, 393, 483, 309, 281, 360, 257, 1333, 295, 7592, 309, 4288, 291, 652], "temperature": 0.0, "avg_logprob": -0.24150684644591133, "compression_ratio": 1.7659574468085106, "no_speech_prob": 1.1015846439477173e-06}, {"id": 489, "seek": 190708, "start": 1931.48, "end": 1935.4399999999998, "text": " it style process that you can actually understand.", "tokens": [309, 3758, 1399, 300, 291, 393, 767, 1223, 13], "temperature": 0.0, "avg_logprob": -0.24150684644591133, "compression_ratio": 1.7659574468085106, "no_speech_prob": 1.1015846439477173e-06}, {"id": 490, "seek": 193544, "start": 1935.44, "end": 1940.8, "text": " So you can get it to like follow the kind of process you would follow and it totally", "tokens": [407, 291, 393, 483, 309, 281, 411, 1524, 264, 733, 295, 1399, 291, 576, 1524, 293, 309, 3879], "temperature": 0.0, "avg_logprob": -0.23117733001708984, "compression_ratio": 1.6903765690376569, "no_speech_prob": 9.570760539645562e-07}, {"id": 491, "seek": 193544, "start": 1940.8, "end": 1942.52, "text": " changes the results you get.", "tokens": [2962, 264, 3542, 291, 483, 13], "temperature": 0.0, "avg_logprob": -0.23117733001708984, "compression_ratio": 1.6903765690376569, "no_speech_prob": 9.570760539645562e-07}, {"id": 492, "seek": 193544, "start": 1942.52, "end": 1947.56, "text": " And if you've, in addition to that, connect it to test output and compiler output so it", "tokens": [400, 498, 291, 600, 11, 294, 4500, 281, 300, 11, 1745, 309, 281, 1500, 5598, 293, 31958, 5598, 370, 309], "temperature": 0.0, "avg_logprob": -0.23117733001708984, "compression_ratio": 1.6903765690376569, "no_speech_prob": 9.570760539645562e-07}, {"id": 493, "seek": 193544, "start": 1947.56, "end": 1952.48, "text": " can iterate on that, you can actually like automate some of those things, which starts", "tokens": [393, 44497, 322, 300, 11, 291, 393, 767, 411, 31605, 512, 295, 729, 721, 11, 597, 3719], "temperature": 0.0, "avg_logprob": -0.23117733001708984, "compression_ratio": 1.6903765690376569, "no_speech_prob": 9.570760539645562e-07}, {"id": 494, "seek": 193544, "start": 1952.48, "end": 1953.6000000000001, "text": " to become very interesting.", "tokens": [281, 1813, 588, 1880, 13], "temperature": 0.0, "avg_logprob": -0.23117733001708984, "compression_ratio": 1.6903765690376569, "no_speech_prob": 9.570760539645562e-07}, {"id": 495, "seek": 193544, "start": 1953.6000000000001, "end": 1960.3200000000002, "text": " I'm wondering whether that would have the same effect in the sense that if I don't see,", "tokens": [286, 478, 6359, 1968, 300, 576, 362, 264, 912, 1802, 294, 264, 2020, 300, 498, 286, 500, 380, 536, 11], "temperature": 0.0, "avg_logprob": -0.23117733001708984, "compression_ratio": 1.6903765690376569, "no_speech_prob": 9.570760539645562e-07}, {"id": 496, "seek": 196032, "start": 1960.32, "end": 1966.04, "text": " if I do this and I only see the end results, which is kind of the point, well, will I have", "tokens": [498, 286, 360, 341, 293, 286, 787, 536, 264, 917, 3542, 11, 597, 307, 733, 295, 264, 935, 11, 731, 11, 486, 286, 362], "temperature": 0.0, "avg_logprob": -0.21563876405054208, "compression_ratio": 1.5608695652173914, "no_speech_prob": 3.7265874652803177e-06}, {"id": 497, "seek": 196032, "start": 1966.04, "end": 1970.0, "text": " an insight into how this function works because I didn't write it.", "tokens": [364, 11269, 666, 577, 341, 2445, 1985, 570, 286, 994, 380, 2464, 309, 13], "temperature": 0.0, "avg_logprob": -0.21563876405054208, "compression_ratio": 1.5608695652173914, "no_speech_prob": 3.7265874652803177e-06}, {"id": 498, "seek": 196032, "start": 1970.0, "end": 1972.6799999999998, "text": " So now it's just like someone else's code.", "tokens": [407, 586, 309, 311, 445, 411, 1580, 1646, 311, 3089, 13], "temperature": 0.0, "avg_logprob": -0.21563876405054208, "compression_ratio": 1.5608695652173914, "no_speech_prob": 3.7265874652803177e-06}, {"id": 499, "seek": 196032, "start": 1972.6799999999998, "end": 1977.74, "text": " And again, if I need to change it, then I need to go through all those refactoring steps", "tokens": [400, 797, 11, 498, 286, 643, 281, 1319, 309, 11, 550, 286, 643, 281, 352, 807, 439, 729, 1895, 578, 3662, 4439], "temperature": 0.0, "avg_logprob": -0.21563876405054208, "compression_ratio": 1.5608695652173914, "no_speech_prob": 3.7265874652803177e-06}, {"id": 500, "seek": 196032, "start": 1977.74, "end": 1985.3999999999999, "text": " or making it easier to understand for myself or just go read it well.", "tokens": [420, 1455, 309, 3571, 281, 1223, 337, 2059, 420, 445, 352, 1401, 309, 731, 13], "temperature": 0.0, "avg_logprob": -0.21563876405054208, "compression_ratio": 1.5608695652173914, "no_speech_prob": 3.7265874652803177e-06}, {"id": 501, "seek": 198540, "start": 1985.4, "end": 1992.3600000000001, "text": " But definitely the thing that I will keep in mind is that all these techniques about", "tokens": [583, 2138, 264, 551, 300, 286, 486, 1066, 294, 1575, 307, 300, 439, 613, 7512, 466], "temperature": 0.0, "avg_logprob": -0.21476850202006678, "compression_ratio": 1.6744186046511629, "no_speech_prob": 2.332046051378711e-06}, {"id": 502, "seek": 198540, "start": 1992.3600000000001, "end": 1995.5400000000002, "text": " running good code, they will stay relevant.", "tokens": [2614, 665, 3089, 11, 436, 486, 1754, 7340, 13], "temperature": 0.0, "avg_logprob": -0.21476850202006678, "compression_ratio": 1.6744186046511629, "no_speech_prob": 2.332046051378711e-06}, {"id": 503, "seek": 198540, "start": 1995.5400000000002, "end": 2001.6000000000001, "text": " So if I don't want to lose my job, this is the kind of things that I can maybe should", "tokens": [407, 498, 286, 500, 380, 528, 281, 3624, 452, 1691, 11, 341, 307, 264, 733, 295, 721, 300, 286, 393, 1310, 820], "temperature": 0.0, "avg_logprob": -0.21476850202006678, "compression_ratio": 1.6744186046511629, "no_speech_prob": 2.332046051378711e-06}, {"id": 504, "seek": 198540, "start": 2001.6000000000001, "end": 2005.52, "text": " focus on because I think that these will stay relevant.", "tokens": [1879, 322, 570, 286, 519, 300, 613, 486, 1754, 7340, 13], "temperature": 0.0, "avg_logprob": -0.21476850202006678, "compression_ratio": 1.6744186046511629, "no_speech_prob": 2.332046051378711e-06}, {"id": 505, "seek": 198540, "start": 2005.52, "end": 2007.7800000000002, "text": " Maybe my whole job will be removed.", "tokens": [2704, 452, 1379, 1691, 486, 312, 7261, 13], "temperature": 0.0, "avg_logprob": -0.21476850202006678, "compression_ratio": 1.6744186046511629, "no_speech_prob": 2.332046051378711e-06}, {"id": 506, "seek": 198540, "start": 2007.7800000000002, "end": 2011.96, "text": " Maybe I will get fired if it has become way too good.", "tokens": [2704, 286, 486, 483, 11777, 498, 309, 575, 1813, 636, 886, 665, 13], "temperature": 0.0, "avg_logprob": -0.21476850202006678, "compression_ratio": 1.6744186046511629, "no_speech_prob": 2.332046051378711e-06}, {"id": 507, "seek": 201196, "start": 2011.96, "end": 2017.52, "text": " But maybe my chances of not being fired increase if I am one of those who are better at these", "tokens": [583, 1310, 452, 10486, 295, 406, 885, 11777, 3488, 498, 286, 669, 472, 295, 729, 567, 366, 1101, 412, 613], "temperature": 0.0, "avg_logprob": -0.2128254788593181, "compression_ratio": 1.551440329218107, "no_speech_prob": 4.3818383232974156e-07}, {"id": 508, "seek": 201196, "start": 2017.52, "end": 2018.52, "text": " tasks.", "tokens": [9608, 13], "temperature": 0.0, "avg_logprob": -0.2128254788593181, "compression_ratio": 1.551440329218107, "no_speech_prob": 4.3818383232974156e-07}, {"id": 509, "seek": 201196, "start": 2018.52, "end": 2019.52, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2128254788593181, "compression_ratio": 1.551440329218107, "no_speech_prob": 4.3818383232974156e-07}, {"id": 510, "seek": 201196, "start": 2019.52, "end": 2020.52, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2128254788593181, "compression_ratio": 1.551440329218107, "no_speech_prob": 4.3818383232974156e-07}, {"id": 511, "seek": 201196, "start": 2020.52, "end": 2025.92, "text": " And one of the things that keeps coming up for me is like, what do I want to be atomic?", "tokens": [400, 472, 295, 264, 721, 300, 5965, 1348, 493, 337, 385, 307, 411, 11, 437, 360, 286, 528, 281, 312, 22275, 30], "temperature": 0.0, "avg_logprob": -0.2128254788593181, "compression_ratio": 1.551440329218107, "no_speech_prob": 4.3818383232974156e-07}, {"id": 512, "seek": 201196, "start": 2025.92, "end": 2031.92, "text": " Like there's a certain philosophy of using tools that I've arrived at through a lot of", "tokens": [1743, 456, 311, 257, 1629, 10675, 295, 1228, 3873, 300, 286, 600, 6678, 412, 807, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.2128254788593181, "compression_ratio": 1.551440329218107, "no_speech_prob": 4.3818383232974156e-07}, {"id": 513, "seek": 201196, "start": 2031.92, "end": 2040.2, "text": " craftsmanship principles and TDD and things like that, which is like, I don't want tools", "tokens": [8448, 10817, 27140, 9156, 293, 314, 20818, 293, 721, 411, 300, 11, 597, 307, 411, 11, 286, 500, 380, 528, 3873], "temperature": 0.0, "avg_logprob": -0.2128254788593181, "compression_ratio": 1.551440329218107, "no_speech_prob": 4.3818383232974156e-07}, {"id": 514, "seek": 204020, "start": 2040.2, "end": 2044.52, "text": " that I can partially trust and I don't want tools that give me partial results.", "tokens": [300, 286, 393, 18886, 3361, 293, 286, 500, 380, 528, 3873, 300, 976, 385, 14641, 3542, 13], "temperature": 0.0, "avg_logprob": -0.21838755443178373, "compression_ratio": 1.716, "no_speech_prob": 2.22526136894885e-06}, {"id": 515, "seek": 204020, "start": 2044.52, "end": 2052.6, "text": " I want tools that I can completely trust and that allow me to take a set of low level steps,", "tokens": [286, 528, 3873, 300, 286, 393, 2584, 3361, 293, 300, 2089, 385, 281, 747, 257, 992, 295, 2295, 1496, 4439, 11], "temperature": 0.0, "avg_logprob": -0.21838755443178373, "compression_ratio": 1.716, "no_speech_prob": 2.22526136894885e-06}, {"id": 516, "seek": 204020, "start": 2052.6, "end": 2055.08, "text": " but think of them as one high level step.", "tokens": [457, 519, 295, 552, 382, 472, 1090, 1496, 1823, 13], "temperature": 0.0, "avg_logprob": -0.21838755443178373, "compression_ratio": 1.716, "no_speech_prob": 2.22526136894885e-06}, {"id": 517, "seek": 204020, "start": 2055.08, "end": 2056.88, "text": " So to me, that's the question.", "tokens": [407, 281, 385, 11, 300, 311, 264, 1168, 13], "temperature": 0.0, "avg_logprob": -0.21838755443178373, "compression_ratio": 1.716, "no_speech_prob": 2.22526136894885e-06}, {"id": 518, "seek": 204020, "start": 2056.88, "end": 2064.96, "text": " Now, in the case of making a red test green and a TDD step, for example, like do the simplest", "tokens": [823, 11, 294, 264, 1389, 295, 1455, 257, 2182, 1500, 3092, 293, 257, 314, 20818, 1823, 11, 337, 1365, 11, 411, 360, 264, 22811], "temperature": 0.0, "avg_logprob": -0.21838755443178373, "compression_ratio": 1.716, "no_speech_prob": 2.22526136894885e-06}, {"id": 519, "seek": 204020, "start": 2064.96, "end": 2066.48, "text": " thing that could possibly work.", "tokens": [551, 300, 727, 6264, 589, 13], "temperature": 0.0, "avg_logprob": -0.21838755443178373, "compression_ratio": 1.716, "no_speech_prob": 2.22526136894885e-06}, {"id": 520, "seek": 204020, "start": 2066.48, "end": 2070.16, "text": " What if that was an atomic step I could take for granted?", "tokens": [708, 498, 300, 390, 364, 22275, 1823, 286, 727, 747, 337, 12344, 30], "temperature": 0.0, "avg_logprob": -0.21838755443178373, "compression_ratio": 1.716, "no_speech_prob": 2.22526136894885e-06}, {"id": 521, "seek": 207016, "start": 2070.16, "end": 2076.16, "text": " That instead of a set of low level steps, I will look at the code, I will hard code", "tokens": [663, 2602, 295, 257, 992, 295, 2295, 1496, 4439, 11, 286, 486, 574, 412, 264, 3089, 11, 286, 486, 1152, 3089], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 522, "seek": 207016, "start": 2076.16, "end": 2080.72, "text": " the return value, I will create a new module with the name that's failing.", "tokens": [264, 2736, 2158, 11, 286, 486, 1884, 257, 777, 10088, 365, 264, 1315, 300, 311, 18223, 13], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 523, "seek": 207016, "start": 2080.72, "end": 2082.3999999999996, "text": " It says could not find module of this name.", "tokens": [467, 1619, 727, 406, 915, 10088, 295, 341, 1315, 13], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 524, "seek": 207016, "start": 2082.3999999999996, "end": 2083.68, "text": " I will create that module.", "tokens": [286, 486, 1884, 300, 10088, 13], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 525, "seek": 207016, "start": 2083.68, "end": 2088.12, "text": " I will create a function of the name that the error message in the failing test says", "tokens": [286, 486, 1884, 257, 2445, 295, 264, 1315, 300, 264, 6713, 3636, 294, 264, 18223, 1500, 1619], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 526, "seek": 207016, "start": 2088.12, "end": 2089.16, "text": " is missing.", "tokens": [307, 5361, 13], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 527, "seek": 207016, "start": 2089.16, "end": 2096.5, "text": " I will write a type annotation that satisfies the compiler and return an empty value and", "tokens": [286, 486, 2464, 257, 2010, 48654, 300, 44271, 264, 31958, 293, 2736, 364, 6707, 2158, 293], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 528, "seek": 207016, "start": 2096.5, "end": 2098.3599999999997, "text": " have a failing test.", "tokens": [362, 257, 18223, 1500, 13], "temperature": 0.0, "avg_logprob": -0.2232153732164771, "compression_ratio": 1.9377777777777778, "no_speech_prob": 3.7266172512318008e-06}, {"id": 529, "seek": 209836, "start": 2098.36, "end": 2103.7200000000003, "text": " And then to make it green, I will change that empty value to a hard coded value that makes", "tokens": [400, 550, 281, 652, 309, 3092, 11, 286, 486, 1319, 300, 6707, 2158, 281, 257, 1152, 34874, 2158, 300, 1669], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 530, "seek": 209836, "start": 2103.7200000000003, "end": 2105.08, "text": " the test green.", "tokens": [264, 1500, 3092, 13], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 531, "seek": 209836, "start": 2105.08, "end": 2109.0, "text": " What if I could just take that for granted and say, hey, computer, do that step, do that", "tokens": [708, 498, 286, 727, 445, 747, 300, 337, 12344, 293, 584, 11, 4177, 11, 3820, 11, 360, 300, 1823, 11, 360, 300], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 532, "seek": 209836, "start": 2109.0, "end": 2113.04, "text": " TDD step to make it red and then make it green in the simplest way possible.", "tokens": [314, 20818, 1823, 281, 652, 309, 2182, 293, 550, 652, 309, 3092, 294, 264, 22811, 636, 1944, 13], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 533, "seek": 209836, "start": 2113.04, "end": 2115.48, "text": " And I could take that for granted and then I can take it from there.", "tokens": [400, 286, 727, 747, 300, 337, 12344, 293, 550, 286, 393, 747, 309, 490, 456, 13], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 534, "seek": 209836, "start": 2115.48, "end": 2116.84, "text": " That would be great.", "tokens": [663, 576, 312, 869, 13], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 535, "seek": 209836, "start": 2116.84, "end": 2122.2400000000002, "text": " And then that's something I can fully trust and I can sort of verify it.", "tokens": [400, 550, 300, 311, 746, 286, 393, 4498, 3361, 293, 286, 393, 1333, 295, 16888, 309, 13], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 536, "seek": 209836, "start": 2122.2400000000002, "end": 2127.0, "text": " And so another principle I've been thinking about in sort of like designing these prompts", "tokens": [400, 370, 1071, 8665, 286, 600, 668, 1953, 466, 294, 1333, 295, 411, 14685, 613, 41095], "temperature": 0.0, "avg_logprob": -0.23308134078979492, "compression_ratio": 1.8551236749116609, "no_speech_prob": 1.1726351658580825e-06}, {"id": 537, "seek": 212700, "start": 2127.0, "end": 2131.48, "text": " and these workflows using AI tools is guardrails.", "tokens": [293, 613, 43461, 1228, 7318, 3873, 307, 6290, 424, 4174, 13], "temperature": 0.0, "avg_logprob": -0.23260233043569378, "compression_ratio": 1.6938775510204083, "no_speech_prob": 2.94797223432397e-06}, {"id": 538, "seek": 212700, "start": 2131.48, "end": 2137.16, "text": " So like not only verifying something at the end that it did the correct thing because", "tokens": [407, 411, 406, 787, 1306, 5489, 746, 412, 264, 917, 300, 309, 630, 264, 3006, 551, 570], "temperature": 0.0, "avg_logprob": -0.23260233043569378, "compression_ratio": 1.6938775510204083, "no_speech_prob": 2.94797223432397e-06}, {"id": 539, "seek": 212700, "start": 2137.16, "end": 2139.52, "text": " you can run the Elm compiler, you can.", "tokens": [291, 393, 1190, 264, 2699, 76, 31958, 11, 291, 393, 13], "temperature": 0.0, "avg_logprob": -0.23260233043569378, "compression_ratio": 1.6938775510204083, "no_speech_prob": 2.94797223432397e-06}, {"id": 540, "seek": 212700, "start": 2139.52, "end": 2146.84, "text": " But along the way, if you can say, OK, like, for example, you can create a new module and", "tokens": [583, 2051, 264, 636, 11, 498, 291, 393, 584, 11, 2264, 11, 411, 11, 337, 1365, 11, 291, 393, 1884, 257, 777, 10088, 293], "temperature": 0.0, "avg_logprob": -0.23260233043569378, "compression_ratio": 1.6938775510204083, "no_speech_prob": 2.94797223432397e-06}, {"id": 541, "seek": 212700, "start": 2146.84, "end": 2153.0, "text": " a new function, but you can't touch any other code and you can't touch the test.", "tokens": [257, 777, 2445, 11, 457, 291, 393, 380, 2557, 604, 661, 3089, 293, 291, 393, 380, 2557, 264, 1500, 13], "temperature": 0.0, "avg_logprob": -0.23260233043569378, "compression_ratio": 1.6938775510204083, "no_speech_prob": 2.94797223432397e-06}, {"id": 542, "seek": 212700, "start": 2153.0, "end": 2156.72, "text": " The test has to remain the same and the test must succeed at the end.", "tokens": [440, 1500, 575, 281, 6222, 264, 912, 293, 264, 1500, 1633, 7754, 412, 264, 917, 13], "temperature": 0.0, "avg_logprob": -0.23260233043569378, "compression_ratio": 1.6938775510204083, "no_speech_prob": 2.94797223432397e-06}, {"id": 543, "seek": 215672, "start": 2156.72, "end": 2163.52, "text": " You sort of set up guardrails and you say, listen, if the AI given these guardrails can", "tokens": [509, 1333, 295, 992, 493, 6290, 424, 4174, 293, 291, 584, 11, 2140, 11, 498, 264, 7318, 2212, 613, 6290, 424, 4174, 393], "temperature": 0.0, "avg_logprob": -0.19429644630068824, "compression_ratio": 1.6696428571428572, "no_speech_prob": 3.6119361084274715e-06}, {"id": 544, "seek": 215672, "start": 2163.52, "end": 2169.52, "text": " give me a result that satisfies all these criteria by the end of it, then if it does", "tokens": [976, 385, 257, 1874, 300, 44271, 439, 613, 11101, 538, 264, 917, 295, 309, 11, 550, 498, 309, 775], "temperature": 0.0, "avg_logprob": -0.19429644630068824, "compression_ratio": 1.6696428571428572, "no_speech_prob": 3.6119361084274715e-06}, {"id": 545, "seek": 215672, "start": 2169.52, "end": 2174.2799999999997, "text": " that, I can verify that it gave me what I wanted and I can fully trust it.", "tokens": [300, 11, 286, 393, 16888, 300, 309, 2729, 385, 437, 286, 1415, 293, 286, 393, 4498, 3361, 309, 13], "temperature": 0.0, "avg_logprob": -0.19429644630068824, "compression_ratio": 1.6696428571428572, "no_speech_prob": 3.6119361084274715e-06}, {"id": 546, "seek": 215672, "start": 2174.2799999999997, "end": 2176.62, "text": " Those are the types of tools that I want.", "tokens": [3950, 366, 264, 3467, 295, 3873, 300, 286, 528, 13], "temperature": 0.0, "avg_logprob": -0.19429644630068824, "compression_ratio": 1.6696428571428572, "no_speech_prob": 3.6119361084274715e-06}, {"id": 547, "seek": 215672, "start": 2176.62, "end": 2183.8399999999997, "text": " So one thing that I was really amazed by, I'll share a link to this tweet, but I saw", "tokens": [407, 472, 551, 300, 286, 390, 534, 20507, 538, 11, 286, 603, 2073, 257, 2113, 281, 341, 15258, 11, 457, 286, 1866], "temperature": 0.0, "avg_logprob": -0.19429644630068824, "compression_ratio": 1.6696428571428572, "no_speech_prob": 3.6119361084274715e-06}, {"id": 548, "seek": 218384, "start": 2183.84, "end": 2191.08, "text": " this demo where this was actually with GPT-3, but this example stuck with me where somebody", "tokens": [341, 10723, 689, 341, 390, 767, 365, 26039, 51, 12, 18, 11, 457, 341, 1365, 5541, 365, 385, 689, 2618], "temperature": 0.0, "avg_logprob": -0.2169898215760576, "compression_ratio": 1.6126126126126126, "no_speech_prob": 2.4059470433712704e-06}, {"id": 549, "seek": 218384, "start": 2191.08, "end": 2198.8, "text": " was finding that GPT-3 did a poor job if you asked it questions that went through sort", "tokens": [390, 5006, 300, 26039, 51, 12, 18, 630, 257, 4716, 1691, 498, 291, 2351, 309, 1651, 300, 1437, 807, 1333], "temperature": 0.0, "avg_logprob": -0.2169898215760576, "compression_ratio": 1.6126126126126126, "no_speech_prob": 2.4059470433712704e-06}, {"id": 550, "seek": 218384, "start": 2198.8, "end": 2200.04, "text": " of several steps.", "tokens": [295, 2940, 4439, 13], "temperature": 0.0, "avg_logprob": -0.2169898215760576, "compression_ratio": 1.6126126126126126, "no_speech_prob": 2.4059470433712704e-06}, {"id": 551, "seek": 218384, "start": 2200.04, "end": 2207.7200000000003, "text": " Like if you said, what is the capital of the country where the Taj Mahal is?", "tokens": [1743, 498, 291, 848, 11, 437, 307, 264, 4238, 295, 264, 1941, 689, 264, 44837, 10104, 304, 307, 30], "temperature": 0.0, "avg_logprob": -0.2169898215760576, "compression_ratio": 1.6126126126126126, "no_speech_prob": 2.4059470433712704e-06}, {"id": 552, "seek": 218384, "start": 2207.7200000000003, "end": 2213.04, "text": " Then it would give Agra or something like the city where the Taj Mahal is instead of", "tokens": [1396, 309, 576, 976, 2725, 424, 420, 746, 411, 264, 2307, 689, 264, 44837, 10104, 304, 307, 2602, 295], "temperature": 0.0, "avg_logprob": -0.2169898215760576, "compression_ratio": 1.6126126126126126, "no_speech_prob": 2.4059470433712704e-06}, {"id": 553, "seek": 221304, "start": 2213.04, "end": 2215.72, "text": " New Delhi, which is the capital of India.", "tokens": [1873, 26680, 11, 597, 307, 264, 4238, 295, 5282, 13], "temperature": 0.0, "avg_logprob": -0.2251181953831723, "compression_ratio": 1.7641509433962264, "no_speech_prob": 1.1189358701813035e-06}, {"id": 554, "seek": 221304, "start": 2215.72, "end": 2220.7599999999998, "text": " So what they did is they did some prompt engineering.", "tokens": [407, 437, 436, 630, 307, 436, 630, 512, 12391, 7043, 13], "temperature": 0.0, "avg_logprob": -0.2251181953831723, "compression_ratio": 1.7641509433962264, "no_speech_prob": 1.1189358701813035e-06}, {"id": 555, "seek": 221304, "start": 2220.7599999999998, "end": 2226.7599999999998, "text": " So they gave it a starting prompt, which said, here's an example of doing this thing.", "tokens": [407, 436, 2729, 309, 257, 2891, 12391, 11, 597, 848, 11, 510, 311, 364, 1365, 295, 884, 341, 551, 13], "temperature": 0.0, "avg_logprob": -0.2251181953831723, "compression_ratio": 1.7641509433962264, "no_speech_prob": 1.1189358701813035e-06}, {"id": 556, "seek": 221304, "start": 2226.7599999999998, "end": 2229.5, "text": " And they kind of gave an example question.", "tokens": [400, 436, 733, 295, 2729, 364, 1365, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2251181953831723, "compression_ratio": 1.7641509433962264, "no_speech_prob": 1.1189358701813035e-06}, {"id": 557, "seek": 221304, "start": 2229.5, "end": 2234.84, "text": " They gave some intermediaries questions where it said, okay, well, in order to answer this", "tokens": [814, 2729, 512, 15184, 4889, 1651, 689, 309, 848, 11, 1392, 11, 731, 11, 294, 1668, 281, 1867, 341], "temperature": 0.0, "avg_logprob": -0.2251181953831723, "compression_ratio": 1.7641509433962264, "no_speech_prob": 1.1189358701813035e-06}, {"id": 558, "seek": 221304, "start": 2234.84, "end": 2238.92, "text": " question, I need to answer an intermediary question first.", "tokens": [1168, 11, 286, 643, 281, 1867, 364, 15184, 822, 1168, 700, 13], "temperature": 0.0, "avg_logprob": -0.2251181953831723, "compression_ratio": 1.7641509433962264, "no_speech_prob": 1.1189358701813035e-06}, {"id": 559, "seek": 223892, "start": 2238.92, "end": 2243.08, "text": " And so they gave an example of that as the sort of context for the prompt.", "tokens": [400, 370, 436, 2729, 364, 1365, 295, 300, 382, 264, 1333, 295, 4319, 337, 264, 12391, 13], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 560, "seek": 223892, "start": 2243.08, "end": 2245.84, "text": " And then they said, now answer this question.", "tokens": [400, 550, 436, 848, 11, 586, 1867, 341, 1168, 13], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 561, "seek": 223892, "start": 2245.84, "end": 2252.64, "text": " Question, what is the capital of the place where the Taj Mahal is, the country where", "tokens": [14464, 11, 437, 307, 264, 4238, 295, 264, 1081, 689, 264, 44837, 10104, 304, 307, 11, 264, 1941, 689], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 562, "seek": 223892, "start": 2252.64, "end": 2253.7200000000003, "text": " the Taj Mahal is?", "tokens": [264, 44837, 10104, 304, 307, 30], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 563, "seek": 223892, "start": 2253.7200000000003, "end": 2257.96, "text": " And then it went ahead and followed that set of steps.", "tokens": [400, 550, 309, 1437, 2286, 293, 6263, 300, 992, 295, 4439, 13], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 564, "seek": 223892, "start": 2257.96, "end": 2261.88, "text": " Intermediary question, what country is the Taj Mahal in?", "tokens": [5751, 3130, 822, 1168, 11, 437, 1941, 307, 264, 44837, 10104, 304, 294, 30], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 565, "seek": 223892, "start": 2261.88, "end": 2263.84, "text": " Answer, India.", "tokens": [24545, 11, 5282, 13], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 566, "seek": 223892, "start": 2263.84, "end": 2267.44, "text": " Intermediary question, what is the capital of India?", "tokens": [5751, 3130, 822, 1168, 11, 437, 307, 264, 4238, 295, 5282, 30], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 567, "seek": 223892, "start": 2267.44, "end": 2268.6800000000003, "text": " New Delhi.", "tokens": [1873, 26680, 13], "temperature": 0.0, "avg_logprob": -0.25915863167526376, "compression_ratio": 1.8990825688073394, "no_speech_prob": 1.8162112382924533e-06}, {"id": 568, "seek": 226868, "start": 2268.68, "end": 2270.3999999999996, "text": " Simple answer, New Delhi.", "tokens": [21532, 1867, 11, 1873, 26680, 13], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 569, "seek": 226868, "start": 2270.3999999999996, "end": 2271.3999999999996, "text": " And it got the correct answer.", "tokens": [400, 309, 658, 264, 3006, 1867, 13], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 570, "seek": 226868, "start": 2271.3999999999996, "end": 2277.02, "text": " So it got higher quality results because it was guided to break the problem down into", "tokens": [407, 309, 658, 2946, 3125, 3542, 570, 309, 390, 19663, 281, 1821, 264, 1154, 760, 666], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 571, "seek": 226868, "start": 2277.02, "end": 2278.3599999999997, "text": " sub problems.", "tokens": [1422, 2740, 13], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 572, "seek": 226868, "start": 2278.3599999999997, "end": 2281.04, "text": " And pretty interesting, right?", "tokens": [400, 1238, 1880, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 573, "seek": 226868, "start": 2281.04, "end": 2282.2, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 574, "seek": 226868, "start": 2282.2, "end": 2289.48, "text": " It's a bit funny because I feel like everyone has this like, oh, well, you know, if I tried", "tokens": [467, 311, 257, 857, 4074, 570, 286, 841, 411, 1518, 575, 341, 411, 11, 1954, 11, 731, 11, 291, 458, 11, 498, 286, 3031], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 575, "seek": 226868, "start": 2289.48, "end": 2296.6, "text": " to chat to JPT and didn't give me great results, but then I tried to prime it or I tried to", "tokens": [281, 5081, 281, 34336, 51, 293, 994, 380, 976, 385, 869, 3542, 11, 457, 550, 286, 3031, 281, 5835, 309, 420, 286, 3031, 281], "temperature": 0.0, "avg_logprob": -0.31187525335347877, "compression_ratio": 1.5774058577405858, "no_speech_prob": 4.495044322538888e-06}, {"id": 576, "seek": 229660, "start": 2296.6, "end": 2301.64, "text": " give this kind of prompt or written this way, and now we get great results.", "tokens": [976, 341, 733, 295, 12391, 420, 3720, 341, 636, 11, 293, 586, 321, 483, 869, 3542, 13], "temperature": 0.0, "avg_logprob": -0.30408181876779716, "compression_ratio": 1.6623931623931625, "no_speech_prob": 1.2289061714909622e-06}, {"id": 577, "seek": 229660, "start": 2301.64, "end": 2309.16, "text": " And I feel like maybe everyone will have their own ideal prompt and people will share it.", "tokens": [400, 286, 841, 411, 1310, 1518, 486, 362, 641, 1065, 7157, 12391, 293, 561, 486, 2073, 309, 13], "temperature": 0.0, "avg_logprob": -0.30408181876779716, "compression_ratio": 1.6623931623931625, "no_speech_prob": 1.2289061714909622e-06}, {"id": 578, "seek": 229660, "start": 2309.16, "end": 2315.2799999999997, "text": " It's kind of like, well, I have my set of key bindings of shortcuts for my computer.", "tokens": [467, 311, 733, 295, 411, 11, 731, 11, 286, 362, 452, 992, 295, 2141, 14786, 1109, 295, 34620, 337, 452, 3820, 13], "temperature": 0.0, "avg_logprob": -0.30408181876779716, "compression_ratio": 1.6623931623931625, "no_speech_prob": 1.2289061714909622e-06}, {"id": 579, "seek": 229660, "start": 2315.2799999999997, "end": 2319.2, "text": " Oh, you don't have a shortcut for this action in your ID?", "tokens": [876, 11, 291, 500, 380, 362, 257, 24822, 337, 341, 3069, 294, 428, 7348, 30], "temperature": 0.0, "avg_logprob": -0.30408181876779716, "compression_ratio": 1.6623931623931625, "no_speech_prob": 1.2289061714909622e-06}, {"id": 580, "seek": 229660, "start": 2319.2, "end": 2321.2599999999998, "text": " Oh, let me share it with you.", "tokens": [876, 11, 718, 385, 2073, 309, 365, 291, 13], "temperature": 0.0, "avg_logprob": -0.30408181876779716, "compression_ratio": 1.6623931623931625, "no_speech_prob": 1.2289061714909622e-06}, {"id": 581, "seek": 229660, "start": 2321.2599999999998, "end": 2324.44, "text": " Or have their own proprietary prompts.", "tokens": [1610, 362, 641, 1065, 38992, 41095, 13], "temperature": 0.0, "avg_logprob": -0.30408181876779716, "compression_ratio": 1.6623931623931625, "no_speech_prob": 1.2289061714909622e-06}, {"id": 582, "seek": 229660, "start": 2324.44, "end": 2325.44, "text": " Maybe yeah.", "tokens": [2704, 1338, 13], "temperature": 0.0, "avg_logprob": -0.30408181876779716, "compression_ratio": 1.6623931623931625, "no_speech_prob": 1.2289061714909622e-06}, {"id": 583, "seek": 232544, "start": 2325.44, "end": 2331.92, "text": " And we will start to have like our very custom experience around working with AI.", "tokens": [400, 321, 486, 722, 281, 362, 411, 527, 588, 2375, 1752, 926, 1364, 365, 7318, 13], "temperature": 0.0, "avg_logprob": -0.33097351703447164, "compression_ratio": 1.5943396226415094, "no_speech_prob": 1.0676880037863157e-06}, {"id": 584, "seek": 232544, "start": 2331.92, "end": 2334.28, "text": " It's like, hey, this is how I do it.", "tokens": [467, 311, 411, 11, 4177, 11, 341, 307, 577, 286, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.33097351703447164, "compression_ratio": 1.5943396226415094, "no_speech_prob": 1.0676880037863157e-06}, {"id": 585, "seek": 232544, "start": 2334.28, "end": 2335.28, "text": " And this works for me.", "tokens": [400, 341, 1985, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.33097351703447164, "compression_ratio": 1.5943396226415094, "no_speech_prob": 1.0676880037863157e-06}, {"id": 586, "seek": 232544, "start": 2335.28, "end": 2337.76, "text": " And this might not work for you.", "tokens": [400, 341, 1062, 406, 589, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.33097351703447164, "compression_ratio": 1.5943396226415094, "no_speech_prob": 1.0676880037863157e-06}, {"id": 587, "seek": 232544, "start": 2337.76, "end": 2338.88, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.33097351703447164, "compression_ratio": 1.5943396226415094, "no_speech_prob": 1.0676880037863157e-06}, {"id": 588, "seek": 232544, "start": 2338.88, "end": 2346.52, "text": " And then it'll be like, here's a very good prompt for generating the best prompt.", "tokens": [400, 550, 309, 603, 312, 411, 11, 510, 311, 257, 588, 665, 12391, 337, 17746, 264, 1151, 12391, 13], "temperature": 0.0, "avg_logprob": -0.33097351703447164, "compression_ratio": 1.5943396226415094, "no_speech_prob": 1.0676880037863157e-06}, {"id": 589, "seek": 232544, "start": 2346.52, "end": 2353.96, "text": " I kind of feel like maybe people who use Vim will have something like that.", "tokens": [286, 733, 295, 841, 411, 1310, 561, 567, 764, 691, 332, 486, 362, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.33097351703447164, "compression_ratio": 1.5943396226415094, "no_speech_prob": 1.0676880037863157e-06}, {"id": 590, "seek": 235396, "start": 2353.96, "end": 2358.04, "text": " There's a real art to it.", "tokens": [821, 311, 257, 957, 1523, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.2973701819944917, "compression_ratio": 1.575609756097561, "no_speech_prob": 1.0845095630429569e-06}, {"id": 591, "seek": 235396, "start": 2358.04, "end": 2361.08, "text": " And I mean, you're getting it to break problems.", "tokens": [400, 286, 914, 11, 291, 434, 1242, 309, 281, 1821, 2740, 13], "temperature": 0.0, "avg_logprob": -0.2973701819944917, "compression_ratio": 1.575609756097561, "no_speech_prob": 1.0845095630429569e-06}, {"id": 592, "seek": 235396, "start": 2361.08, "end": 2367.76, "text": " So I took this concept, and I applied this idea of breaking the problem down into sub", "tokens": [407, 286, 1890, 341, 3410, 11, 293, 286, 6456, 341, 1558, 295, 7697, 264, 1154, 760, 666, 1422], "temperature": 0.0, "avg_logprob": -0.2973701819944917, "compression_ratio": 1.575609756097561, "no_speech_prob": 1.0845095630429569e-06}, {"id": 593, "seek": 235396, "start": 2367.76, "end": 2368.76, "text": " problems.", "tokens": [2740, 13], "temperature": 0.0, "avg_logprob": -0.2973701819944917, "compression_ratio": 1.575609756097561, "no_speech_prob": 1.0845095630429569e-06}, {"id": 594, "seek": 235396, "start": 2368.76, "end": 2376.64, "text": " I actually had written this blog post years back about like solving Elm code, like solving", "tokens": [286, 767, 632, 3720, 341, 6968, 2183, 924, 646, 466, 411, 12606, 2699, 76, 3089, 11, 411, 12606], "temperature": 0.0, "avg_logprob": -0.2973701819944917, "compression_ratio": 1.575609756097561, "no_speech_prob": 1.0845095630429569e-06}, {"id": 595, "seek": 235396, "start": 2376.64, "end": 2381.12, "text": " type puzzles in Elm, like a jigsaw puzzle frame then fill in.", "tokens": [2010, 24138, 294, 2699, 76, 11, 411, 257, 361, 17156, 1607, 12805, 3920, 550, 2836, 294, 13], "temperature": 0.0, "avg_logprob": -0.2973701819944917, "compression_ratio": 1.575609756097561, "no_speech_prob": 1.0845095630429569e-06}, {"id": 596, "seek": 238112, "start": 2381.12, "end": 2387.08, "text": " So like a jigsaw puzzle, you start by filling in the borders and the corner.", "tokens": [407, 411, 257, 361, 17156, 1607, 12805, 11, 291, 722, 538, 10623, 294, 264, 16287, 293, 264, 4538, 13], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 597, "seek": 238112, "start": 2387.08, "end": 2388.7999999999997, "text": " The corner pieces are easy to find.", "tokens": [440, 4538, 3755, 366, 1858, 281, 915, 13], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 598, "seek": 238112, "start": 2388.7999999999997, "end": 2393.2799999999997, "text": " So you find the corners, then you've got sort of a set of fixed points.", "tokens": [407, 291, 915, 264, 12413, 11, 550, 291, 600, 658, 1333, 295, 257, 992, 295, 6806, 2793, 13], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 599, "seek": 238112, "start": 2393.2799999999997, "end": 2396.2599999999998, "text": " So that's like one low hanging fruit.", "tokens": [407, 300, 311, 411, 472, 2295, 8345, 6773, 13], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 600, "seek": 238112, "start": 2396.2599999999998, "end": 2398.3599999999997, "text": " It's easy to solve those problems.", "tokens": [467, 311, 1858, 281, 5039, 729, 2740, 13], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 601, "seek": 238112, "start": 2398.3599999999997, "end": 2400.2599999999998, "text": " Then you find the edge pieces and you can fill those in.", "tokens": [1396, 291, 915, 264, 4691, 3755, 293, 291, 393, 2836, 729, 294, 13], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 602, "seek": 238112, "start": 2400.2599999999998, "end": 2405.04, "text": " And now that you've got the edges, it makes solving the rest of the puzzle easier, right?", "tokens": [400, 586, 300, 291, 600, 658, 264, 8819, 11, 309, 1669, 12606, 264, 1472, 295, 264, 12805, 3571, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 603, "seek": 238112, "start": 2405.04, "end": 2409.7999999999997, "text": " So that's one approach to solving jigsaw puzzles to break it down into sub problems.", "tokens": [407, 300, 311, 472, 3109, 281, 12606, 361, 17156, 1607, 24138, 281, 1821, 309, 760, 666, 1422, 2740, 13], "temperature": 0.0, "avg_logprob": -0.21673300033225154, "compression_ratio": 1.8593155893536122, "no_speech_prob": 1.0029934855992906e-06}, {"id": 604, "seek": 240980, "start": 2409.8, "end": 2415.2200000000003, "text": " But like with Elm types, I kind of, I use this technique a lot when I'm writing Elm", "tokens": [583, 411, 365, 2699, 76, 3467, 11, 286, 733, 295, 11, 286, 764, 341, 6532, 257, 688, 562, 286, 478, 3579, 2699, 76], "temperature": 0.0, "avg_logprob": -0.222937026113834, "compression_ratio": 1.6088888888888888, "no_speech_prob": 4.157301191298757e-06}, {"id": 605, "seek": 240980, "start": 2415.2200000000003, "end": 2416.6400000000003, "text": " code as a human.", "tokens": [3089, 382, 257, 1952, 13], "temperature": 0.0, "avg_logprob": -0.222937026113834, "compression_ratio": 1.6088888888888888, "no_speech_prob": 4.157301191298757e-06}, {"id": 606, "seek": 240980, "start": 2416.6400000000003, "end": 2423.36, "text": " I will, I'll say like, okay, I don't know exactly what's going to fit here in this pipeline.", "tokens": [286, 486, 11, 286, 603, 584, 411, 11, 1392, 11, 286, 500, 380, 458, 2293, 437, 311, 516, 281, 3318, 510, 294, 341, 15517, 13], "temperature": 0.0, "avg_logprob": -0.222937026113834, "compression_ratio": 1.6088888888888888, "no_speech_prob": 4.157301191298757e-06}, {"id": 607, "seek": 240980, "start": 2423.36, "end": 2429.6800000000003, "text": " But I know I want to like take this starting value, I want to do something to it.", "tokens": [583, 286, 458, 286, 528, 281, 411, 747, 341, 2891, 2158, 11, 286, 528, 281, 360, 746, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.222937026113834, "compression_ratio": 1.6088888888888888, "no_speech_prob": 4.157301191298757e-06}, {"id": 608, "seek": 240980, "start": 2429.6800000000003, "end": 2436.2000000000003, "text": " And then I want it to be passed through in this pipeline to this next function.", "tokens": [400, 550, 286, 528, 309, 281, 312, 4678, 807, 294, 341, 15517, 281, 341, 958, 2445, 13], "temperature": 0.0, "avg_logprob": -0.222937026113834, "compression_ratio": 1.6088888888888888, "no_speech_prob": 4.157301191298757e-06}, {"id": 609, "seek": 240980, "start": 2436.2000000000003, "end": 2438.04, "text": " Right?", "tokens": [1779, 30], "temperature": 0.0, "avg_logprob": -0.222937026113834, "compression_ratio": 1.6088888888888888, "no_speech_prob": 4.157301191298757e-06}, {"id": 610, "seek": 243804, "start": 2438.04, "end": 2441.88, "text": " So sometimes I'll just like put a debug.todo there.", "tokens": [407, 2171, 286, 603, 445, 411, 829, 257, 24083, 13, 83, 17423, 456, 13], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 611, "seek": 243804, "start": 2441.88, "end": 2446.96, "text": " And then maybe I'll extract that debug.todo to a function or a let binding.", "tokens": [400, 550, 1310, 286, 603, 8947, 300, 24083, 13, 83, 17423, 281, 257, 2445, 420, 257, 718, 17359, 13], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 612, "seek": 243804, "start": 2446.96, "end": 2452.8, "text": " And then I'll try to get a type annotation for that value I have in my let binding.", "tokens": [400, 550, 286, 603, 853, 281, 483, 257, 2010, 48654, 337, 300, 2158, 286, 362, 294, 452, 718, 17359, 13], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 613, "seek": 243804, "start": 2452.8, "end": 2455.36, "text": " That would satisfy the compiler.", "tokens": [663, 576, 19319, 264, 31958, 13], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 614, "seek": 243804, "start": 2455.36, "end": 2456.68, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 615, "seek": 243804, "start": 2456.68, "end": 2459.34, "text": " Now I've broken it down into a sub problem.", "tokens": [823, 286, 600, 5463, 309, 760, 666, 257, 1422, 1154, 13], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 616, "seek": 243804, "start": 2459.34, "end": 2463.86, "text": " So I took this sort of like, fill in this code, I don't know what goes here, I've turned", "tokens": [407, 286, 1890, 341, 1333, 295, 411, 11, 2836, 294, 341, 3089, 11, 286, 500, 380, 458, 437, 1709, 510, 11, 286, 600, 3574], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 617, "seek": 243804, "start": 2463.86, "end": 2466.16, "text": " it into, okay, I know the type I need.", "tokens": [309, 666, 11, 1392, 11, 286, 458, 264, 2010, 286, 643, 13], "temperature": 0.0, "avg_logprob": -0.21299916221981957, "compression_ratio": 1.6472868217054264, "no_speech_prob": 1.0511462278373074e-06}, {"id": 618, "seek": 246616, "start": 2466.16, "end": 2470.8399999999997, "text": " So that's sort of like finding the edge pieces in the puzzle.", "tokens": [407, 300, 311, 1333, 295, 411, 5006, 264, 4691, 3755, 294, 264, 12805, 13], "temperature": 0.0, "avg_logprob": -0.1636788390931629, "compression_ratio": 1.5611111111111111, "no_speech_prob": 1.287892473555985e-06}, {"id": 619, "seek": 246616, "start": 2470.8399999999997, "end": 2473.56, "text": " So now I've created the sub problem for myself.", "tokens": [407, 586, 286, 600, 2942, 264, 1422, 1154, 337, 2059, 13], "temperature": 0.0, "avg_logprob": -0.1636788390931629, "compression_ratio": 1.5611111111111111, "no_speech_prob": 1.287892473555985e-06}, {"id": 620, "seek": 246616, "start": 2473.56, "end": 2480.2799999999997, "text": " And now I can do things like, so I've got a debug.todo with a type annotation.", "tokens": [400, 586, 286, 393, 360, 721, 411, 11, 370, 286, 600, 658, 257, 24083, 13, 83, 17423, 365, 257, 2010, 48654, 13], "temperature": 0.0, "avg_logprob": -0.1636788390931629, "compression_ratio": 1.5611111111111111, "no_speech_prob": 1.287892473555985e-06}, {"id": 621, "seek": 246616, "start": 2480.2799999999997, "end": 2489.44, "text": " Now I can turn that into maybe result.map around a debug.todo or list.map with a debug.todo.", "tokens": [823, 286, 393, 1261, 300, 666, 1310, 1874, 13, 24223, 926, 257, 24083, 13, 83, 17423, 420, 1329, 13, 24223, 365, 257, 24083, 13, 83, 17423, 13], "temperature": 0.0, "avg_logprob": -0.1636788390931629, "compression_ratio": 1.5611111111111111, "no_speech_prob": 1.287892473555985e-06}, {"id": 622, "seek": 248944, "start": 2489.44, "end": 2498.28, "text": " So now I'm saying, well, I know that if I apply some function over a list, it will work.", "tokens": [407, 586, 286, 478, 1566, 11, 731, 11, 286, 458, 300, 498, 286, 3079, 512, 2445, 670, 257, 1329, 11, 309, 486, 589, 13], "temperature": 0.0, "avg_logprob": -0.18349230187570947, "compression_ratio": 1.7253218884120172, "no_speech_prob": 5.285499469209753e-07}, {"id": 623, "seek": 248944, "start": 2498.28, "end": 2500.76, "text": " And now I've further broken down that sub problem.", "tokens": [400, 586, 286, 600, 3052, 5463, 760, 300, 1422, 1154, 13], "temperature": 0.0, "avg_logprob": -0.18349230187570947, "compression_ratio": 1.7253218884120172, "no_speech_prob": 5.285499469209753e-07}, {"id": 624, "seek": 248944, "start": 2500.76, "end": 2506.04, "text": " And now I can follow that step again and say, okay, we'll break out another, that debug.todo,", "tokens": [400, 586, 286, 393, 1524, 300, 1823, 797, 293, 584, 11, 1392, 11, 321, 603, 1821, 484, 1071, 11, 300, 24083, 13, 83, 17423, 11], "temperature": 0.0, "avg_logprob": -0.18349230187570947, "compression_ratio": 1.7253218884120172, "no_speech_prob": 5.285499469209753e-07}, {"id": 625, "seek": 248944, "start": 2506.04, "end": 2507.4, "text": " give that a type annotation.", "tokens": [976, 300, 257, 2010, 48654, 13], "temperature": 0.0, "avg_logprob": -0.18349230187570947, "compression_ratio": 1.7253218884120172, "no_speech_prob": 5.285499469209753e-07}, {"id": 626, "seek": 248944, "start": 2507.4, "end": 2512.96, "text": " So now it's list.map, some function, I don't know what, now follow that same process with", "tokens": [407, 586, 309, 311, 1329, 13, 24223, 11, 512, 2445, 11, 286, 500, 380, 458, 437, 11, 586, 1524, 300, 912, 1399, 365], "temperature": 0.0, "avg_logprob": -0.18349230187570947, "compression_ratio": 1.7253218884120172, "no_speech_prob": 5.285499469209753e-07}, {"id": 627, "seek": 248944, "start": 2512.96, "end": 2513.96, "text": " that.", "tokens": [300, 13], "temperature": 0.0, "avg_logprob": -0.18349230187570947, "compression_ratio": 1.7253218884120172, "no_speech_prob": 5.285499469209753e-07}, {"id": 628, "seek": 248944, "start": 2513.96, "end": 2515.32, "text": " So it's breaking it down into sub problems.", "tokens": [407, 309, 311, 7697, 309, 760, 666, 1422, 2740, 13], "temperature": 0.0, "avg_logprob": -0.18349230187570947, "compression_ratio": 1.7253218884120172, "no_speech_prob": 5.285499469209753e-07}, {"id": 629, "seek": 251532, "start": 2515.32, "end": 2521.6400000000003, "text": " I use this technique all the time when I'm like, often with like API design, you're doing", "tokens": [286, 764, 341, 6532, 439, 264, 565, 562, 286, 478, 411, 11, 2049, 365, 411, 9362, 1715, 11, 291, 434, 884], "temperature": 0.0, "avg_logprob": -0.22855437628113398, "compression_ratio": 1.6296296296296295, "no_speech_prob": 6.27667532171472e-07}, {"id": 630, "seek": 251532, "start": 2521.6400000000003, "end": 2528.48, "text": " weird type puzzles, but also just with like user code, like trying to parse some markdown", "tokens": [3657, 2010, 24138, 11, 457, 611, 445, 365, 411, 4195, 3089, 11, 411, 1382, 281, 48377, 512, 1491, 5093], "temperature": 0.0, "avg_logprob": -0.22855437628113398, "compression_ratio": 1.6296296296296295, "no_speech_prob": 6.27667532171472e-07}, {"id": 631, "seek": 251532, "start": 2528.48, "end": 2533.36, "text": " and take the markdown blocks and find and traverse them and map them into this type", "tokens": [293, 747, 264, 1491, 5093, 8474, 293, 915, 293, 45674, 552, 293, 4471, 552, 666, 341, 2010], "temperature": 0.0, "avg_logprob": -0.22855437628113398, "compression_ratio": 1.6296296296296295, "no_speech_prob": 6.27667532171472e-07}, {"id": 632, "seek": 251532, "start": 2533.36, "end": 2534.7200000000003, "text": " and whatever.", "tokens": [293, 2035, 13], "temperature": 0.0, "avg_logprob": -0.22855437628113398, "compression_ratio": 1.6296296296296295, "no_speech_prob": 6.27667532171472e-07}, {"id": 633, "seek": 251532, "start": 2534.7200000000003, "end": 2536.48, "text": " So I use this technique a lot.", "tokens": [407, 286, 764, 341, 6532, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.22855437628113398, "compression_ratio": 1.6296296296296295, "no_speech_prob": 6.27667532171472e-07}, {"id": 634, "seek": 251532, "start": 2536.48, "end": 2544.52, "text": " Now I tried to use this sort of same prompt engineering idea to teach GPT how to follow", "tokens": [823, 286, 3031, 281, 764, 341, 1333, 295, 912, 12391, 7043, 1558, 281, 2924, 26039, 51, 577, 281, 1524], "temperature": 0.0, "avg_logprob": -0.22855437628113398, "compression_ratio": 1.6296296296296295, "no_speech_prob": 6.27667532171472e-07}, {"id": 635, "seek": 254452, "start": 2544.52, "end": 2548.6, "text": " this set of steps of breaking down a type puzzle.", "tokens": [341, 992, 295, 4439, 295, 7697, 760, 257, 2010, 12805, 13], "temperature": 0.0, "avg_logprob": -0.18125619207109725, "compression_ratio": 1.5791666666666666, "no_speech_prob": 2.482461923136725e-06}, {"id": 636, "seek": 254452, "start": 2548.6, "end": 2550.12, "text": " And it was actually really good at it.", "tokens": [400, 309, 390, 767, 534, 665, 412, 309, 13], "temperature": 0.0, "avg_logprob": -0.18125619207109725, "compression_ratio": 1.5791666666666666, "no_speech_prob": 2.482461923136725e-06}, {"id": 637, "seek": 254452, "start": 2550.12, "end": 2559.28, "text": " So I'll share like a little GitHub gist of my GPT prompt and the results it got.", "tokens": [407, 286, 603, 2073, 411, 257, 707, 23331, 290, 468, 295, 452, 26039, 51, 12391, 293, 264, 3542, 309, 658, 13], "temperature": 0.0, "avg_logprob": -0.18125619207109725, "compression_ratio": 1.5791666666666666, "no_speech_prob": 2.482461923136725e-06}, {"id": 638, "seek": 254452, "start": 2559.28, "end": 2566.92, "text": " But what I basically did is I told it, I said, your job is to solve this type puzzle.", "tokens": [583, 437, 286, 1936, 630, 307, 286, 1907, 309, 11, 286, 848, 11, 428, 1691, 307, 281, 5039, 341, 2010, 12805, 13], "temperature": 0.0, "avg_logprob": -0.18125619207109725, "compression_ratio": 1.5791666666666666, "no_speech_prob": 2.482461923136725e-06}, {"id": 639, "seek": 254452, "start": 2566.92, "end": 2568.28, "text": " And I gave it some guardrails.", "tokens": [400, 286, 2729, 309, 512, 6290, 424, 4174, 13], "temperature": 0.0, "avg_logprob": -0.18125619207109725, "compression_ratio": 1.5791666666666666, "no_speech_prob": 2.482461923136725e-06}, {"id": 640, "seek": 254452, "start": 2568.28, "end": 2574.4, "text": " So like the guardrails I gave it were, I'm going to give you some code, which has debug.todo", "tokens": [407, 411, 264, 6290, 424, 4174, 286, 2729, 309, 645, 11, 286, 478, 516, 281, 976, 291, 512, 3089, 11, 597, 575, 24083, 13, 83, 17423], "temperature": 0.0, "avg_logprob": -0.18125619207109725, "compression_ratio": 1.5791666666666666, "no_speech_prob": 2.482461923136725e-06}, {"id": 641, "seek": 257440, "start": 2574.4, "end": 2576.48, "text": " replace me in it.", "tokens": [7406, 385, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.21092456241823593, "compression_ratio": 1.65, "no_speech_prob": 2.4439748358418e-06}, {"id": 642, "seek": 257440, "start": 2576.48, "end": 2582.36, "text": " Your job is to, you know, get a, satisfy the type for that debug.todo.", "tokens": [2260, 1691, 307, 281, 11, 291, 458, 11, 483, 257, 11, 19319, 264, 2010, 337, 300, 24083, 13, 83, 17423, 13], "temperature": 0.0, "avg_logprob": -0.21092456241823593, "compression_ratio": 1.65, "no_speech_prob": 2.4439748358418e-06}, {"id": 643, "seek": 257440, "start": 2582.36, "end": 2586.2200000000003, "text": " And your final solution cannot include debug.todo.", "tokens": [400, 428, 2572, 3827, 2644, 4090, 24083, 13, 83, 17423, 13], "temperature": 0.0, "avg_logprob": -0.21092456241823593, "compression_ratio": 1.65, "no_speech_prob": 2.4439748358418e-06}, {"id": 644, "seek": 257440, "start": 2586.2200000000003, "end": 2590.88, "text": " You can write intermediary steps, which may include debug.todo.", "tokens": [509, 393, 2464, 15184, 822, 4439, 11, 597, 815, 4090, 24083, 13, 83, 17423, 13], "temperature": 0.0, "avg_logprob": -0.21092456241823593, "compression_ratio": 1.65, "no_speech_prob": 2.4439748358418e-06}, {"id": 645, "seek": 257440, "start": 2590.88, "end": 2596.12, "text": " And you are not allowed to change any code other than the section that says debug.todo.", "tokens": [400, 291, 366, 406, 4350, 281, 1319, 604, 3089, 661, 813, 264, 3541, 300, 1619, 24083, 13, 83, 17423, 13], "temperature": 0.0, "avg_logprob": -0.21092456241823593, "compression_ratio": 1.65, "no_speech_prob": 2.4439748358418e-06}, {"id": 646, "seek": 257440, "start": 2596.12, "end": 2597.9, "text": " So I gave it these guardrails.", "tokens": [407, 286, 2729, 309, 613, 6290, 424, 4174, 13], "temperature": 0.0, "avg_logprob": -0.21092456241823593, "compression_ratio": 1.65, "no_speech_prob": 2.4439748358418e-06}, {"id": 647, "seek": 257440, "start": 2597.9, "end": 2599.52, "text": " Also these are verifiable things, right?", "tokens": [2743, 613, 366, 1306, 30876, 721, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.21092456241823593, "compression_ratio": 1.65, "no_speech_prob": 2.4439748358418e-06}, {"id": 648, "seek": 259952, "start": 2599.52, "end": 2605.48, "text": " So you can test for this to see if it's given you a valid solution, given the guardrails", "tokens": [407, 291, 393, 1500, 337, 341, 281, 536, 498, 309, 311, 2212, 291, 257, 7363, 3827, 11, 2212, 264, 6290, 424, 4174], "temperature": 0.0, "avg_logprob": -0.27681994438171387, "compression_ratio": 1.6234309623430963, "no_speech_prob": 2.8571455459314166e-06}, {"id": 649, "seek": 259952, "start": 2605.48, "end": 2611.2, "text": " you wanted it to honor, because it might hallucinate and not do that, but you can check that.", "tokens": [291, 1415, 309, 281, 5968, 11, 570, 309, 1062, 35212, 13923, 293, 406, 360, 300, 11, 457, 291, 393, 1520, 300, 13], "temperature": 0.0, "avg_logprob": -0.27681994438171387, "compression_ratio": 1.6234309623430963, "no_speech_prob": 2.8571455459314166e-06}, {"id": 650, "seek": 259952, "start": 2611.2, "end": 2612.2, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.27681994438171387, "compression_ratio": 1.6234309623430963, "no_speech_prob": 2.8571455459314166e-06}, {"id": 651, "seek": 259952, "start": 2612.2, "end": 2619.96, "text": " So one thing that I'm thinking of is, will you be able to verify things accurately?", "tokens": [407, 472, 551, 300, 286, 478, 1953, 295, 307, 11, 486, 291, 312, 1075, 281, 16888, 721, 20095, 30], "temperature": 0.0, "avg_logprob": -0.27681994438171387, "compression_ratio": 1.6234309623430963, "no_speech_prob": 2.8571455459314166e-06}, {"id": 652, "seek": 259952, "start": 2619.96, "end": 2624.84, "text": " Maybe I'm being too, I'm trying to play the devil's advocate here a bit, and I might be", "tokens": [2704, 286, 478, 885, 886, 11, 286, 478, 1382, 281, 862, 264, 13297, 311, 14608, 510, 257, 857, 11, 293, 286, 1062, 312], "temperature": 0.0, "avg_logprob": -0.27681994438171387, "compression_ratio": 1.6234309623430963, "no_speech_prob": 2.8571455459314166e-06}, {"id": 653, "seek": 259952, "start": 2624.84, "end": 2627.28, "text": " a bit too hard on chat.gpt.", "tokens": [257, 857, 886, 1152, 322, 5081, 13, 70, 662, 13], "temperature": 0.0, "avg_logprob": -0.27681994438171387, "compression_ratio": 1.6234309623430963, "no_speech_prob": 2.8571455459314166e-06}, {"id": 654, "seek": 262728, "start": 2627.28, "end": 2632.6800000000003, "text": " But for instance, whenever you're working in that TD style, when you do things one step", "tokens": [583, 337, 5197, 11, 5699, 291, 434, 1364, 294, 300, 42606, 3758, 11, 562, 291, 360, 721, 472, 1823], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 655, "seek": 262728, "start": 2632.6800000000003, "end": 2636.0800000000004, "text": " at a time, you discover edge cases, right?", "tokens": [412, 257, 565, 11, 291, 4411, 4691, 3331, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 656, "seek": 262728, "start": 2636.0800000000004, "end": 2641.44, "text": " So for instance, you give a list as an argument and needs to return a number.", "tokens": [407, 337, 5197, 11, 291, 976, 257, 1329, 382, 364, 6770, 293, 2203, 281, 2736, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 657, "seek": 262728, "start": 2641.44, "end": 2643.8, "text": " And first you hard code that number.", "tokens": [400, 700, 291, 1152, 3089, 300, 1230, 13], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 658, "seek": 262728, "start": 2643.8, "end": 2648.76, "text": " And then you notice, Oh, well, what if that list is, is, is empty then?", "tokens": [400, 550, 291, 3449, 11, 876, 11, 731, 11, 437, 498, 300, 1329, 307, 11, 307, 11, 307, 6707, 550, 30], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 659, "seek": 262728, "start": 2648.76, "end": 2654.2400000000002, "text": " Oh, well then I need to write a test for if the, the, the list is empty.", "tokens": [876, 11, 731, 550, 286, 643, 281, 2464, 257, 1500, 337, 498, 264, 11, 264, 11, 264, 1329, 307, 6707, 13], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 660, "seek": 262728, "start": 2654.2400000000002, "end": 2655.2400000000002, "text": " Ah, okay.", "tokens": [2438, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 661, "seek": 262728, "start": 2655.2400000000002, "end": 2657.1000000000004, "text": " So I'm going to do that.", "tokens": [407, 286, 478, 516, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.3527646064758301, "compression_ratio": 1.7276422764227641, "no_speech_prob": 4.181145243364881e-07}, {"id": 662, "seek": 265710, "start": 2657.1, "end": 2660.92, "text": " But the, the AI might not do that, might not notice that.", "tokens": [583, 264, 11, 264, 7318, 1062, 406, 360, 300, 11, 1062, 406, 3449, 300, 13], "temperature": 0.0, "avg_logprob": -0.23205452556757963, "compression_ratio": 1.891304347826087, "no_speech_prob": 3.989681829352776e-07}, {"id": 663, "seek": 265710, "start": 2660.92, "end": 2664.5, "text": " So maybe it's, it is going to fix things correctly.", "tokens": [407, 1310, 309, 311, 11, 309, 307, 516, 281, 3191, 721, 8944, 13], "temperature": 0.0, "avg_logprob": -0.23205452556757963, "compression_ratio": 1.891304347826087, "no_speech_prob": 3.989681829352776e-07}, {"id": 664, "seek": 265710, "start": 2664.5, "end": 2667.88, "text": " Maybe not, but let's say it's going to do it correctly, but it's not going to have a", "tokens": [2704, 406, 11, 457, 718, 311, 584, 309, 311, 516, 281, 360, 309, 8944, 11, 457, 309, 311, 406, 516, 281, 362, 257], "temperature": 0.0, "avg_logprob": -0.23205452556757963, "compression_ratio": 1.891304347826087, "no_speech_prob": 3.989681829352776e-07}, {"id": 665, "seek": 265710, "start": 2667.88, "end": 2669.4, "text": " test for that.", "tokens": [1500, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.23205452556757963, "compression_ratio": 1.891304347826087, "no_speech_prob": 3.989681829352776e-07}, {"id": 666, "seek": 265710, "start": 2669.4, "end": 2676.16, "text": " Or you're not going to know, or you're going to, I mean, you are not going to notice that", "tokens": [1610, 291, 434, 406, 516, 281, 458, 11, 420, 291, 434, 516, 281, 11, 286, 914, 11, 291, 366, 406, 516, 281, 3449, 300], "temperature": 0.0, "avg_logprob": -0.23205452556757963, "compression_ratio": 1.891304347826087, "no_speech_prob": 3.989681829352776e-07}, {"id": 667, "seek": 265710, "start": 2676.16, "end": 2679.54, "text": " you're going to need to write a test with an empty list.", "tokens": [291, 434, 516, 281, 643, 281, 2464, 257, 1500, 365, 364, 6707, 1329, 13], "temperature": 0.0, "avg_logprob": -0.23205452556757963, "compression_ratio": 1.891304347826087, "no_speech_prob": 3.989681829352776e-07}, {"id": 668, "seek": 265710, "start": 2679.54, "end": 2685.48, "text": " So that's the process is a bit hard to figure out if you don't do it yourself.", "tokens": [407, 300, 311, 264, 1399, 307, 257, 857, 1152, 281, 2573, 484, 498, 291, 500, 380, 360, 309, 1803, 13], "temperature": 0.0, "avg_logprob": -0.23205452556757963, "compression_ratio": 1.891304347826087, "no_speech_prob": 3.989681829352776e-07}, {"id": 669, "seek": 268548, "start": 2685.48, "end": 2689.84, "text": " It's kind of like, I think also one of the reasons why people say, well, you should pair", "tokens": [467, 311, 733, 295, 411, 11, 286, 519, 611, 472, 295, 264, 4112, 983, 561, 584, 11, 731, 11, 291, 820, 6119], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 670, "seek": 268548, "start": 2689.84, "end": 2695.64, "text": " program rather than review someone else's code, because you will discover those, those", "tokens": [1461, 2831, 813, 3131, 1580, 1646, 311, 3089, 11, 570, 291, 486, 4411, 729, 11, 729], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 671, "seek": 268548, "start": 2695.64, "end": 2697.64, "text": " things while you're working.", "tokens": [721, 1339, 291, 434, 1364, 13], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 672, "seek": 268548, "start": 2697.64, "end": 2698.64, "text": " Yeah, totally.", "tokens": [865, 11, 3879, 13], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 673, "seek": 268548, "start": 2698.64, "end": 2699.88, "text": " Yeah, I agree.", "tokens": [865, 11, 286, 3986, 13], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 674, "seek": 268548, "start": 2699.88, "end": 2703.96, "text": " I think, I think that's, I think that that's something that's going to play out more and", "tokens": [286, 519, 11, 286, 519, 300, 311, 11, 286, 519, 300, 300, 311, 746, 300, 311, 516, 281, 862, 484, 544, 293], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 675, "seek": 268548, "start": 2703.96, "end": 2704.96, "text": " more these days.", "tokens": [544, 613, 1708, 13], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 676, "seek": 268548, "start": 2704.96, "end": 2710.88, "text": " I think we're going to see like a lot of junior developers using these AI tools in exactly", "tokens": [286, 519, 321, 434, 516, 281, 536, 411, 257, 688, 295, 16195, 8849, 1228, 613, 7318, 3873, 294, 2293], "temperature": 0.0, "avg_logprob": -0.25283200165321085, "compression_ratio": 1.7591836734693878, "no_speech_prob": 2.3687687189521967e-06}, {"id": 677, "seek": 271088, "start": 2710.88, "end": 2718.56, "text": " the kind of way you're describing where maybe they trust it too much to do too many steps.", "tokens": [264, 733, 295, 636, 291, 434, 16141, 689, 1310, 436, 3361, 309, 886, 709, 281, 360, 886, 867, 4439, 13], "temperature": 0.0, "avg_logprob": -0.23696686119161625, "compression_ratio": 1.6506550218340612, "no_speech_prob": 3.785136641454301e-06}, {"id": 678, "seek": 271088, "start": 2718.56, "end": 2724.6, "text": " And then what happens is you're not really engaging with the problem intellectually, and", "tokens": [400, 550, 437, 2314, 307, 291, 434, 406, 534, 11268, 365, 264, 1154, 46481, 11, 293], "temperature": 0.0, "avg_logprob": -0.23696686119161625, "compression_ratio": 1.6506550218340612, "no_speech_prob": 3.785136641454301e-06}, {"id": 679, "seek": 271088, "start": 2724.6, "end": 2727.62, "text": " you're not thinking about these test cases that come up.", "tokens": [291, 434, 406, 1953, 466, 613, 1500, 3331, 300, 808, 493, 13], "temperature": 0.0, "avg_logprob": -0.23696686119161625, "compression_ratio": 1.6506550218340612, "no_speech_prob": 3.785136641454301e-06}, {"id": 680, "seek": 271088, "start": 2727.62, "end": 2731.36, "text": " So I think there's an art to knowing when to use it.", "tokens": [407, 286, 519, 456, 311, 364, 1523, 281, 5276, 562, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.23696686119161625, "compression_ratio": 1.6506550218340612, "no_speech_prob": 3.785136641454301e-06}, {"id": 681, "seek": 271088, "start": 2731.36, "end": 2736.96, "text": " So like the type of problem here for this sort of frame then fill in problem I'm talking", "tokens": [407, 411, 264, 2010, 295, 1154, 510, 337, 341, 1333, 295, 3920, 550, 2836, 294, 1154, 286, 478, 1417], "temperature": 0.0, "avg_logprob": -0.23696686119161625, "compression_ratio": 1.6506550218340612, "no_speech_prob": 3.785136641454301e-06}, {"id": 682, "seek": 273696, "start": 2736.96, "end": 2743.44, "text": " about, this is this is a class of problem that I find myself spending a lot of mental", "tokens": [466, 11, 341, 307, 341, 307, 257, 1508, 295, 1154, 300, 286, 915, 2059, 6434, 257, 688, 295, 4973], "temperature": 0.0, "avg_logprob": -0.2103783925374349, "compression_ratio": 1.7056737588652482, "no_speech_prob": 1.9333181171532487e-06}, {"id": 683, "seek": 273696, "start": 2743.44, "end": 2745.96, "text": " effort solving on a regular basis.", "tokens": [4630, 12606, 322, 257, 3890, 5143, 13], "temperature": 0.0, "avg_logprob": -0.2103783925374349, "compression_ratio": 1.7056737588652482, "no_speech_prob": 1.9333181171532487e-06}, {"id": 684, "seek": 273696, "start": 2745.96, "end": 2750.76, "text": " That is kind of this, this, you know, it has this quality we talked about with a traveling", "tokens": [663, 307, 733, 295, 341, 11, 341, 11, 291, 458, 11, 309, 575, 341, 3125, 321, 2825, 466, 365, 257, 9712], "temperature": 0.0, "avg_logprob": -0.2103783925374349, "compression_ratio": 1.7056737588652482, "no_speech_prob": 1.9333181171532487e-06}, {"id": 685, "seek": 273696, "start": 2750.76, "end": 2754.76, "text": " salesman where you know it when you see it, if you have a good solution, you can easily", "tokens": [5763, 1601, 689, 291, 458, 309, 562, 291, 536, 309, 11, 498, 291, 362, 257, 665, 3827, 11, 291, 393, 3612], "temperature": 0.0, "avg_logprob": -0.2103783925374349, "compression_ratio": 1.7056737588652482, "no_speech_prob": 1.9333181171532487e-06}, {"id": 686, "seek": 273696, "start": 2754.76, "end": 2757.0, "text": " verify that it that it solved it.", "tokens": [16888, 300, 309, 300, 309, 13041, 309, 13], "temperature": 0.0, "avg_logprob": -0.2103783925374349, "compression_ratio": 1.7056737588652482, "no_speech_prob": 1.9333181171532487e-06}, {"id": 687, "seek": 273696, "start": 2757.0, "end": 2762.6, "text": " And yet it's not really doing anything too creative, because it's fitting pieces together.", "tokens": [400, 1939, 309, 311, 406, 534, 884, 1340, 886, 5880, 11, 570, 309, 311, 15669, 3755, 1214, 13], "temperature": 0.0, "avg_logprob": -0.2103783925374349, "compression_ratio": 1.7056737588652482, "no_speech_prob": 1.9333181171532487e-06}, {"id": 688, "seek": 273696, "start": 2762.6, "end": 2766.32, "text": " It's not really writing too many implementation details.", "tokens": [467, 311, 406, 534, 3579, 886, 867, 11420, 4365, 13], "temperature": 0.0, "avg_logprob": -0.2103783925374349, "compression_ratio": 1.7056737588652482, "no_speech_prob": 1.9333181171532487e-06}, {"id": 689, "seek": 276632, "start": 2766.32, "end": 2771.6000000000004, "text": " And I find that often with Elm code, you arrive at these types of situations where like, if", "tokens": [400, 286, 915, 300, 2049, 365, 2699, 76, 3089, 11, 291, 8881, 412, 613, 3467, 295, 6851, 689, 411, 11, 498], "temperature": 0.0, "avg_logprob": -0.2412619981609407, "compression_ratio": 1.8357664233576643, "no_speech_prob": 3.5008188206120394e-06}, {"id": 690, "seek": 276632, "start": 2771.6000000000004, "end": 2776.32, "text": " you could make the types work, you would trust that the code worked because like, there's", "tokens": [291, 727, 652, 264, 3467, 589, 11, 291, 576, 3361, 300, 264, 3089, 2732, 570, 411, 11, 456, 311], "temperature": 0.0, "avg_logprob": -0.2412619981609407, "compression_ratio": 1.8357664233576643, "no_speech_prob": 3.5008188206120394e-06}, {"id": 691, "seek": 276632, "start": 2776.32, "end": 2780.48, "text": " only really one good way to fit these functions together to get the right thing.", "tokens": [787, 534, 472, 665, 636, 281, 3318, 613, 6828, 1214, 281, 483, 264, 558, 551, 13], "temperature": 0.0, "avg_logprob": -0.2412619981609407, "compression_ratio": 1.8357664233576643, "no_speech_prob": 3.5008188206120394e-06}, {"id": 692, "seek": 276632, "start": 2780.48, "end": 2785.4, "text": " Like you're not doing too much logic of like, give it this empty value and give it this", "tokens": [1743, 291, 434, 406, 884, 886, 709, 9952, 295, 411, 11, 976, 309, 341, 6707, 2158, 293, 976, 309, 341], "temperature": 0.0, "avg_logprob": -0.2412619981609407, "compression_ratio": 1.8357664233576643, "no_speech_prob": 3.5008188206120394e-06}, {"id": 693, "seek": 276632, "start": 2785.4, "end": 2787.56, "text": " now it might hallucinate these types of things.", "tokens": [586, 309, 1062, 35212, 13923, 613, 3467, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.2412619981609407, "compression_ratio": 1.8357664233576643, "no_speech_prob": 3.5008188206120394e-06}, {"id": 694, "seek": 276632, "start": 2787.56, "end": 2793.1200000000003, "text": " But you could even use prompt engineering to tell it like, you're just fitting these", "tokens": [583, 291, 727, 754, 764, 12391, 7043, 281, 980, 309, 411, 11, 291, 434, 445, 15669, 613], "temperature": 0.0, "avg_logprob": -0.2412619981609407, "compression_ratio": 1.8357664233576643, "no_speech_prob": 3.5008188206120394e-06}, {"id": 695, "seek": 276632, "start": 2793.1200000000003, "end": 2794.2000000000003, "text": " functions together.", "tokens": [6828, 1214, 13], "temperature": 0.0, "avg_logprob": -0.2412619981609407, "compression_ratio": 1.8357664233576643, "no_speech_prob": 3.5008188206120394e-06}, {"id": 696, "seek": 279420, "start": 2794.2, "end": 2797.8799999999997, "text": " I don't want you to write new logic or use default values.", "tokens": [286, 500, 380, 528, 291, 281, 2464, 777, 9952, 420, 764, 7576, 4190, 13], "temperature": 0.0, "avg_logprob": -0.22918866344333924, "compression_ratio": 1.6382978723404256, "no_speech_prob": 9.132490959018469e-07}, {"id": 697, "seek": 279420, "start": 2797.8799999999997, "end": 2801.4399999999996, "text": " So I think these types of things can be improved through prompt engineering and also through", "tokens": [407, 286, 519, 613, 3467, 295, 721, 393, 312, 9689, 807, 12391, 7043, 293, 611, 807], "temperature": 0.0, "avg_logprob": -0.22918866344333924, "compression_ratio": 1.6382978723404256, "no_speech_prob": 9.132490959018469e-07}, {"id": 698, "seek": 279420, "start": 2801.4399999999996, "end": 2803.3599999999997, "text": " selecting the right types of problems.", "tokens": [18182, 264, 558, 3467, 295, 2740, 13], "temperature": 0.0, "avg_logprob": -0.22918866344333924, "compression_ratio": 1.6382978723404256, "no_speech_prob": 9.132490959018469e-07}, {"id": 699, "seek": 279420, "start": 2803.3599999999997, "end": 2810.2, "text": " But like, for example, the I gave it a pretty, pretty challenging problem with this sort", "tokens": [583, 411, 11, 337, 1365, 11, 264, 286, 2729, 309, 257, 1238, 11, 1238, 7595, 1154, 365, 341, 1333], "temperature": 0.0, "avg_logprob": -0.22918866344333924, "compression_ratio": 1.6382978723404256, "no_speech_prob": 9.132490959018469e-07}, {"id": 700, "seek": 279420, "start": 2810.2, "end": 2812.8399999999997, "text": " of prompt I designed.", "tokens": [295, 12391, 286, 4761, 13], "temperature": 0.0, "avg_logprob": -0.22918866344333924, "compression_ratio": 1.6382978723404256, "no_speech_prob": 9.132490959018469e-07}, {"id": 701, "seek": 279420, "start": 2812.8399999999997, "end": 2818.72, "text": " I had it fill in this, this thing in a in an Elm pages example that I have where it", "tokens": [286, 632, 309, 2836, 294, 341, 11, 341, 551, 294, 257, 294, 364, 2699, 76, 7183, 1365, 300, 286, 362, 689, 309], "temperature": 0.0, "avg_logprob": -0.22918866344333924, "compression_ratio": 1.6382978723404256, "no_speech_prob": 9.132490959018469e-07}, {"id": 702, "seek": 281872, "start": 2818.72, "end": 2828.9599999999996, "text": " takes markdown blocks and it traverses these headings and it and I what I did is I primed", "tokens": [2516, 1491, 5093, 8474, 293, 309, 23149, 279, 613, 1378, 1109, 293, 309, 293, 286, 437, 286, 630, 307, 286, 2886, 292], "temperature": 0.0, "avg_logprob": -0.24494568506876627, "compression_ratio": 1.905, "no_speech_prob": 3.520896711961541e-07}, {"id": 703, "seek": 281872, "start": 2828.9599999999996, "end": 2835.08, "text": " it with a list of all of the available functions that it could use.", "tokens": [309, 365, 257, 1329, 295, 439, 295, 264, 2435, 6828, 300, 309, 727, 764, 13], "temperature": 0.0, "avg_logprob": -0.24494568506876627, "compression_ratio": 1.905, "no_speech_prob": 3.520896711961541e-07}, {"id": 704, "seek": 281872, "start": 2835.08, "end": 2839.52, "text": " And another thing you can do a set of guardrails is you can say only use these functions.", "tokens": [400, 1071, 551, 291, 393, 360, 257, 992, 295, 6290, 424, 4174, 307, 291, 393, 584, 787, 764, 613, 6828, 13], "temperature": 0.0, "avg_logprob": -0.24494568506876627, "compression_ratio": 1.905, "no_speech_prob": 3.520896711961541e-07}, {"id": 705, "seek": 281872, "start": 2839.52, "end": 2843.3199999999997, "text": " And you could even say you must use these functions.", "tokens": [400, 291, 727, 754, 584, 291, 1633, 764, 613, 6828, 13], "temperature": 0.0, "avg_logprob": -0.24494568506876627, "compression_ratio": 1.905, "no_speech_prob": 3.520896711961541e-07}, {"id": 706, "seek": 281872, "start": 2843.3199999999997, "end": 2847.6, "text": " And these other functions are available and you may not use any other functions.", "tokens": [400, 613, 661, 6828, 366, 2435, 293, 291, 815, 406, 764, 604, 661, 6828, 13], "temperature": 0.0, "avg_logprob": -0.24494568506876627, "compression_ratio": 1.905, "no_speech_prob": 3.520896711961541e-07}, {"id": 707, "seek": 284760, "start": 2847.6, "end": 2851.36, "text": " And of course, these things are verifiable in the in the final output easily.", "tokens": [400, 295, 1164, 11, 613, 721, 366, 1306, 30876, 294, 264, 294, 264, 2572, 5598, 3612, 13], "temperature": 0.0, "avg_logprob": -0.3517338184828169, "compression_ratio": 1.599056603773585, "no_speech_prob": 1.228914811690629e-06}, {"id": 708, "seek": 284760, "start": 2851.36, "end": 2852.36, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.3517338184828169, "compression_ratio": 1.599056603773585, "no_speech_prob": 1.228914811690629e-06}, {"id": 709, "seek": 284760, "start": 2852.36, "end": 2858.56, "text": " But why would you tell it you can only use these functions because you're now limiting", "tokens": [583, 983, 576, 291, 980, 309, 291, 393, 787, 764, 613, 6828, 570, 291, 434, 586, 22083], "temperature": 0.0, "avg_logprob": -0.3517338184828169, "compression_ratio": 1.599056603773585, "no_speech_prob": 1.228914811690629e-06}, {"id": 710, "seek": 284760, "start": 2858.56, "end": 2861.08, "text": " limiting its creativity.", "tokens": [22083, 1080, 12915, 13], "temperature": 0.0, "avg_logprob": -0.3517338184828169, "compression_ratio": 1.599056603773585, "no_speech_prob": 1.228914811690629e-06}, {"id": 711, "seek": 284760, "start": 2861.08, "end": 2866.7999999999997, "text": " For instance, if you forget to mention list.map, then it's not going to use that.", "tokens": [1171, 5197, 11, 498, 291, 2870, 281, 2152, 1329, 13, 24223, 11, 550, 309, 311, 406, 516, 281, 764, 300, 13], "temperature": 0.0, "avg_logprob": -0.3517338184828169, "compression_ratio": 1.599056603773585, "no_speech_prob": 1.228914811690629e-06}, {"id": 712, "seek": 284760, "start": 2866.7999999999997, "end": 2870.12, "text": " And it's going to use something else like list.fold instead.", "tokens": [400, 309, 311, 516, 281, 764, 746, 1646, 411, 1329, 13, 18353, 2602, 13], "temperature": 0.0, "avg_logprob": -0.3517338184828169, "compression_ratio": 1.599056603773585, "no_speech_prob": 1.228914811690629e-06}, {"id": 713, "seek": 287012, "start": 2870.12, "end": 2878.68, "text": " Well, so the the way basically I was doing this as a proof of concept of saying, I'm", "tokens": [1042, 11, 370, 264, 264, 636, 1936, 286, 390, 884, 341, 382, 257, 8177, 295, 3410, 295, 1566, 11, 286, 478], "temperature": 0.0, "avg_logprob": -0.22958297029547736, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.276242280975566e-07}, {"id": 714, "seek": 287012, "start": 2878.68, "end": 2884.2, "text": " going to give you all of the functions that are in scope in this particular code base.", "tokens": [516, 281, 976, 291, 439, 295, 264, 6828, 300, 366, 294, 11923, 294, 341, 1729, 3089, 3096, 13], "temperature": 0.0, "avg_logprob": -0.22958297029547736, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.276242280975566e-07}, {"id": 715, "seek": 287012, "start": 2884.2, "end": 2889.0, "text": " And I'm going to give you like all of the functions from from the list module and from", "tokens": [400, 286, 478, 516, 281, 976, 291, 411, 439, 295, 264, 6828, 490, 490, 264, 1329, 10088, 293, 490], "temperature": 0.0, "avg_logprob": -0.22958297029547736, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.276242280975566e-07}, {"id": 716, "seek": 287012, "start": 2889.0, "end": 2890.04, "text": " the result module.", "tokens": [264, 1874, 10088, 13], "temperature": 0.0, "avg_logprob": -0.22958297029547736, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.276242280975566e-07}, {"id": 717, "seek": 287012, "start": 2890.04, "end": 2894.56, "text": " So you can give it like a certain set of available functions and say, these are the types and", "tokens": [407, 291, 393, 976, 309, 411, 257, 1629, 992, 295, 2435, 6828, 293, 584, 11, 613, 366, 264, 3467, 293], "temperature": 0.0, "avg_logprob": -0.22958297029547736, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.276242280975566e-07}, {"id": 718, "seek": 287012, "start": 2894.56, "end": 2898.64, "text": " I taught it like I even taught it how partial application works.", "tokens": [286, 5928, 309, 411, 286, 754, 5928, 309, 577, 14641, 3861, 1985, 13], "temperature": 0.0, "avg_logprob": -0.22958297029547736, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.276242280975566e-07}, {"id": 719, "seek": 289864, "start": 2898.64, "end": 2900.44, "text": " So I can take an example.", "tokens": [407, 286, 393, 747, 364, 1365, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 720, "seek": 289864, "start": 2900.44, "end": 2905.72, "text": " And I said, given this type, if you pass in this function, now the type annotation is", "tokens": [400, 286, 848, 11, 2212, 341, 2010, 11, 498, 291, 1320, 294, 341, 2445, 11, 586, 264, 2010, 48654, 307], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 721, "seek": 289864, "start": 2905.72, "end": 2906.72, "text": " this.", "tokens": [341, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 722, "seek": 289864, "start": 2906.72, "end": 2909.72, "text": " And it I played around with it and tweaked it in these ways.", "tokens": [400, 309, 286, 3737, 926, 365, 309, 293, 6986, 7301, 309, 294, 613, 2098, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 723, "seek": 289864, "start": 2909.72, "end": 2912.3199999999997, "text": " And it did a better job at solving these puzzles.", "tokens": [400, 309, 630, 257, 1101, 1691, 412, 12606, 613, 24138, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 724, "seek": 289864, "start": 2912.3199999999997, "end": 2913.3599999999997, "text": " So it's pretty interesting.", "tokens": [407, 309, 311, 1238, 1880, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 725, "seek": 289864, "start": 2913.3599999999997, "end": 2915.52, "text": " You can kind of teach it in these prompts.", "tokens": [509, 393, 733, 295, 2924, 309, 294, 613, 41095, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 726, "seek": 289864, "start": 2915.52, "end": 2916.52, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 727, "seek": 289864, "start": 2916.52, "end": 2920.2799999999997, "text": " But you don't want to limit its creativity too much.", "tokens": [583, 291, 500, 380, 528, 281, 4948, 1080, 12915, 886, 709, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 728, "seek": 289864, "start": 2920.2799999999997, "end": 2921.2799999999997, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 729, "seek": 289864, "start": 2921.2799999999997, "end": 2922.2799999999997, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 730, "seek": 289864, "start": 2922.2799999999997, "end": 2923.2799999999997, "text": " Also.", "tokens": [2743, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 731, "seek": 289864, "start": 2923.2799999999997, "end": 2924.2799999999997, "text": " So but I get your point.", "tokens": [407, 457, 286, 483, 428, 935, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 732, "seek": 289864, "start": 2924.2799999999997, "end": 2925.2799999999997, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2691223437969501, "compression_ratio": 1.636, "no_speech_prob": 6.893556019349489e-07}, {"id": 733, "seek": 292528, "start": 2925.28, "end": 2932.4, "text": " I wanted to solve a sort of uncreative problem of wiring things together that I don't really", "tokens": [286, 1415, 281, 5039, 257, 1333, 295, 6219, 620, 488, 1154, 295, 27520, 721, 1214, 300, 286, 500, 380, 534], "temperature": 0.0, "avg_logprob": -0.271516710798317, "compression_ratio": 1.680327868852459, "no_speech_prob": 9.132444347415003e-07}, {"id": 734, "seek": 292528, "start": 2932.4, "end": 2937.92, "text": " like if I could automate that as an atomic step, I would love to like if I could, you", "tokens": [411, 498, 286, 727, 31605, 300, 382, 364, 22275, 1823, 11, 286, 576, 959, 281, 411, 498, 286, 727, 11, 291], "temperature": 0.0, "avg_logprob": -0.271516710798317, "compression_ratio": 1.680327868852459, "no_speech_prob": 9.132444347415003e-07}, {"id": 735, "seek": 292528, "start": 2937.92, "end": 2944.7200000000003, "text": " could even think of it this way, like, AI, give me all of the possible solutions using", "tokens": [727, 754, 519, 295, 309, 341, 636, 11, 411, 11, 7318, 11, 976, 385, 439, 295, 264, 1944, 6547, 1228], "temperature": 0.0, "avg_logprob": -0.271516710798317, "compression_ratio": 1.680327868852459, "no_speech_prob": 9.132444347415003e-07}, {"id": 736, "seek": 292528, "start": 2944.7200000000003, "end": 2949.28, "text": " the functions in scope here to satisfy this type, right?", "tokens": [264, 6828, 294, 11923, 510, 281, 19319, 341, 2010, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.271516710798317, "compression_ratio": 1.680327868852459, "no_speech_prob": 9.132444347415003e-07}, {"id": 737, "seek": 292528, "start": 2949.28, "end": 2953.48, "text": " Just like, and then you can just select, okay, these are all the valid ways to do that.", "tokens": [1449, 411, 11, 293, 550, 291, 393, 445, 3048, 11, 1392, 11, 613, 366, 439, 264, 7363, 2098, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.271516710798317, "compression_ratio": 1.680327868852459, "no_speech_prob": 9.132444347415003e-07}, {"id": 738, "seek": 295348, "start": 2953.48, "end": 2960.32, "text": " So if I can teach through a GPT prompt, the AI to solve that type of puzzle, and give", "tokens": [407, 498, 286, 393, 2924, 807, 257, 26039, 51, 12391, 11, 264, 7318, 281, 5039, 300, 2010, 295, 12805, 11, 293, 976], "temperature": 0.0, "avg_logprob": -0.21523016803669479, "compression_ratio": 1.54296875, "no_speech_prob": 7.112384423635376e-07}, {"id": 739, "seek": 295348, "start": 2960.32, "end": 2965.76, "text": " me all the possible results, and then I can use a tool to actually verify those results.", "tokens": [385, 439, 264, 1944, 3542, 11, 293, 550, 286, 393, 764, 257, 2290, 281, 767, 16888, 729, 3542, 13], "temperature": 0.0, "avg_logprob": -0.21523016803669479, "compression_ratio": 1.54296875, "no_speech_prob": 7.112384423635376e-07}, {"id": 740, "seek": 295348, "start": 2965.76, "end": 2968.62, "text": " So I so I know I can 100% trust them.", "tokens": [407, 286, 370, 286, 458, 286, 393, 2319, 4, 3361, 552, 13], "temperature": 0.0, "avg_logprob": -0.21523016803669479, "compression_ratio": 1.54296875, "no_speech_prob": 7.112384423635376e-07}, {"id": 741, "seek": 295348, "start": 2968.62, "end": 2974.92, "text": " That becomes a very interesting tool in my toolkit, where now I'm more capable as a programmer.", "tokens": [663, 3643, 257, 588, 1880, 2290, 294, 452, 40167, 11, 689, 586, 286, 478, 544, 8189, 382, 257, 32116, 13], "temperature": 0.0, "avg_logprob": -0.21523016803669479, "compression_ratio": 1.54296875, "no_speech_prob": 7.112384423635376e-07}, {"id": 742, "seek": 295348, "start": 2974.92, "end": 2979.84, "text": " And I'm not sort of like hallucinating weird things into my code base, or as you said,", "tokens": [400, 286, 478, 406, 1333, 295, 411, 35212, 8205, 3657, 721, 666, 452, 3089, 3096, 11, 420, 382, 291, 848, 11], "temperature": 0.0, "avg_logprob": -0.21523016803669479, "compression_ratio": 1.54296875, "no_speech_prob": 7.112384423635376e-07}, {"id": 743, "seek": 297984, "start": 2979.84, "end": 2985.92, "text": " like having it write out these new cases that I'm not considering in my testing or considering", "tokens": [411, 1419, 309, 2464, 484, 613, 777, 3331, 300, 286, 478, 406, 8079, 294, 452, 4997, 420, 8079], "temperature": 0.0, "avg_logprob": -0.24287176968758567, "compression_ratio": 1.7066115702479339, "no_speech_prob": 3.6688379623228684e-06}, {"id": 744, "seek": 297984, "start": 2985.92, "end": 2987.1600000000003, "text": " how it affects the user experience.", "tokens": [577, 309, 11807, 264, 4195, 1752, 13], "temperature": 0.0, "avg_logprob": -0.24287176968758567, "compression_ratio": 1.7066115702479339, "no_speech_prob": 3.6688379623228684e-06}, {"id": 745, "seek": 297984, "start": 2987.1600000000003, "end": 2991.92, "text": " And if that's what I want the experience to be, it's just like, how do I solve this type", "tokens": [400, 498, 300, 311, 437, 286, 528, 264, 1752, 281, 312, 11, 309, 311, 445, 411, 11, 577, 360, 286, 5039, 341, 2010], "temperature": 0.0, "avg_logprob": -0.24287176968758567, "compression_ratio": 1.7066115702479339, "no_speech_prob": 3.6688379623228684e-06}, {"id": 746, "seek": 297984, "start": 2991.92, "end": 2992.92, "text": " problem?", "tokens": [1154, 30], "temperature": 0.0, "avg_logprob": -0.24287176968758567, "compression_ratio": 1.7066115702479339, "no_speech_prob": 3.6688379623228684e-06}, {"id": 747, "seek": 297984, "start": 2992.92, "end": 2998.6400000000003, "text": " Oh, yeah, that's the only one sensible, sensible, meaningful solution, and it found it.", "tokens": [876, 11, 1338, 11, 300, 311, 264, 787, 472, 25380, 11, 25380, 11, 10995, 3827, 11, 293, 309, 1352, 309, 13], "temperature": 0.0, "avg_logprob": -0.24287176968758567, "compression_ratio": 1.7066115702479339, "no_speech_prob": 3.6688379623228684e-06}, {"id": 748, "seek": 297984, "start": 2998.6400000000003, "end": 3005.7200000000003, "text": " And I can easily look at it and say, oh, yeah, result dot map, tuple dot map first list dot", "tokens": [400, 286, 393, 3612, 574, 412, 309, 293, 584, 11, 1954, 11, 1338, 11, 1874, 5893, 4471, 11, 2604, 781, 5893, 4471, 700, 1329, 5893], "temperature": 0.0, "avg_logprob": -0.24287176968758567, "compression_ratio": 1.7066115702479339, "no_speech_prob": 3.6688379623228684e-06}, {"id": 749, "seek": 297984, "start": 3005.7200000000003, "end": 3006.7200000000003, "text": " map.", "tokens": [4471, 13], "temperature": 0.0, "avg_logprob": -0.24287176968758567, "compression_ratio": 1.7066115702479339, "no_speech_prob": 3.6688379623228684e-06}, {"id": 750, "seek": 300672, "start": 3006.72, "end": 3010.0, "text": " Yes, that it didn't use anything too crazy.", "tokens": [1079, 11, 300, 309, 994, 380, 764, 1340, 886, 3219, 13], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 751, "seek": 300672, "start": 3010.0, "end": 3011.3999999999996, "text": " It satisfies the types.", "tokens": [467, 44271, 264, 3467, 13], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 752, "seek": 300672, "start": 3011.3999999999996, "end": 3012.3999999999996, "text": " It's good.", "tokens": [467, 311, 665, 13], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 753, "seek": 300672, "start": 3012.3999999999996, "end": 3014.16, "text": " I can easily look at it and see it did the right thing.", "tokens": [286, 393, 3612, 574, 412, 309, 293, 536, 309, 630, 264, 558, 551, 13], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 754, "seek": 300672, "start": 3014.16, "end": 3018.08, "text": " But it would have taken me a long time to solve it myself.", "tokens": [583, 309, 576, 362, 2726, 385, 257, 938, 565, 281, 5039, 309, 2059, 13], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 755, "seek": 300672, "start": 3018.08, "end": 3024.16, "text": " And so in case it wasn't clear, my idea is to like, this is something I want to experiment", "tokens": [400, 370, 294, 1389, 309, 2067, 380, 1850, 11, 452, 1558, 307, 281, 411, 11, 341, 307, 746, 286, 528, 281, 5120], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 756, "seek": 300672, "start": 3024.16, "end": 3028.56, "text": " a little more with the OpenAI API to fully automate this.", "tokens": [257, 707, 544, 365, 264, 7238, 48698, 9362, 281, 4498, 31605, 341, 13], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 757, "seek": 300672, "start": 3028.56, "end": 3034.3999999999996, "text": " And because it's a pretty easy thing to automate to just say, what are all the types of all", "tokens": [400, 570, 309, 311, 257, 1238, 1858, 551, 281, 31605, 281, 445, 584, 11, 437, 366, 439, 264, 3467, 295, 439], "temperature": 0.0, "avg_logprob": -0.24227523803710938, "compression_ratio": 1.650190114068441, "no_speech_prob": 1.9033758462683181e-06}, {"id": 758, "seek": 303440, "start": 3034.4, "end": 3037.56, "text": " the functions in in scope here?", "tokens": [264, 6828, 294, 294, 11923, 510, 30], "temperature": 0.0, "avg_logprob": -0.24102489226454987, "compression_ratio": 1.7258064516129032, "no_speech_prob": 1.118935642807628e-06}, {"id": 759, "seek": 303440, "start": 3037.56, "end": 3040.62, "text": " Like that's a an automatable thing.", "tokens": [1743, 300, 311, 257, 364, 28034, 712, 551, 13], "temperature": 0.0, "avg_logprob": -0.24102489226454987, "compression_ratio": 1.7258064516129032, "no_speech_prob": 1.118935642807628e-06}, {"id": 760, "seek": 303440, "start": 3040.62, "end": 3045.44, "text": " So feed it that into the prompt and give it the ability through, you know, through writing", "tokens": [407, 3154, 309, 300, 666, 264, 12391, 293, 976, 309, 264, 3485, 807, 11, 291, 458, 11, 807, 3579], "temperature": 0.0, "avg_logprob": -0.24102489226454987, "compression_ratio": 1.7258064516129032, "no_speech_prob": 1.118935642807628e-06}, {"id": 761, "seek": 303440, "start": 3045.44, "end": 3052.7200000000003, "text": " a small script that hits the OpenAI API, tell it what the compiler error is to let it iterate", "tokens": [257, 1359, 5755, 300, 8664, 264, 7238, 48698, 9362, 11, 980, 309, 437, 264, 31958, 6713, 307, 281, 718, 309, 44497], "temperature": 0.0, "avg_logprob": -0.24102489226454987, "compression_ratio": 1.7258064516129032, "no_speech_prob": 1.118935642807628e-06}, {"id": 762, "seek": 303440, "start": 3052.7200000000003, "end": 3053.7200000000003, "text": " on.", "tokens": [322, 13], "temperature": 0.0, "avg_logprob": -0.24102489226454987, "compression_ratio": 1.7258064516129032, "no_speech_prob": 1.118935642807628e-06}, {"id": 763, "seek": 303440, "start": 3053.7200000000003, "end": 3058.32, "text": " So when I gave it this problem as a proof of concept manually, I manually told it the", "tokens": [407, 562, 286, 2729, 309, 341, 1154, 382, 257, 8177, 295, 3410, 16945, 11, 286, 16945, 1907, 309, 264], "temperature": 0.0, "avg_logprob": -0.24102489226454987, "compression_ratio": 1.7258064516129032, "no_speech_prob": 1.118935642807628e-06}, {"id": 764, "seek": 303440, "start": 3058.32, "end": 3063.2400000000002, "text": " compiler errors and it with two iterations with telling it the compiler error, it was", "tokens": [31958, 13603, 293, 309, 365, 732, 36540, 365, 3585, 309, 264, 31958, 6713, 11, 309, 390], "temperature": 0.0, "avg_logprob": -0.24102489226454987, "compression_ratio": 1.7258064516129032, "no_speech_prob": 1.118935642807628e-06}, {"id": 765, "seek": 306324, "start": 3063.24, "end": 3066.9199999999996, "text": " able to get the correct result, which I thought was pretty cool.", "tokens": [1075, 281, 483, 264, 3006, 1874, 11, 597, 286, 1194, 390, 1238, 1627, 13], "temperature": 0.0, "avg_logprob": -0.28675477117554754, "compression_ratio": 1.6666666666666667, "no_speech_prob": 6.143973678263137e-06}, {"id": 766, "seek": 306324, "start": 3066.9199999999996, "end": 3072.8199999999997, "text": " So one thing that for now I'm feeling is a bit of a problem, but it will probably be", "tokens": [407, 472, 551, 300, 337, 586, 286, 478, 2633, 307, 257, 857, 295, 257, 1154, 11, 457, 309, 486, 1391, 312], "temperature": 0.0, "avg_logprob": -0.28675477117554754, "compression_ratio": 1.6666666666666667, "no_speech_prob": 6.143973678263137e-06}, {"id": 767, "seek": 306324, "start": 3072.8199999999997, "end": 3076.56, "text": " solved pretty soon, very soon.", "tokens": [13041, 1238, 2321, 11, 588, 2321, 13], "temperature": 0.0, "avg_logprob": -0.28675477117554754, "compression_ratio": 1.6666666666666667, "no_speech_prob": 6.143973678263137e-06}, {"id": 768, "seek": 306324, "start": 3076.56, "end": 3082.12, "text": " Is that, for instance, at the moment we do everything through JGPT because that's a lot", "tokens": [1119, 300, 11, 337, 5197, 11, 412, 264, 1623, 321, 360, 1203, 807, 508, 38, 47, 51, 570, 300, 311, 257, 688], "temperature": 0.0, "avg_logprob": -0.28675477117554754, "compression_ratio": 1.6666666666666667, "no_speech_prob": 6.143973678263137e-06}, {"id": 769, "seek": 306324, "start": 3082.12, "end": 3085.7799999999997, "text": " better than Copilot so far.", "tokens": [1101, 813, 11579, 31516, 370, 1400, 13], "temperature": 0.0, "avg_logprob": -0.28675477117554754, "compression_ratio": 1.6666666666666667, "no_speech_prob": 6.143973678263137e-06}, {"id": 770, "seek": 306324, "start": 3085.7799999999997, "end": 3089.4799999999996, "text": " But that means that every time you ask a new problem, you need to prime it again, you need", "tokens": [583, 300, 1355, 300, 633, 565, 291, 1029, 257, 777, 1154, 11, 291, 643, 281, 5835, 309, 797, 11, 291, 643], "temperature": 0.0, "avg_logprob": -0.28675477117554754, "compression_ratio": 1.6666666666666667, "no_speech_prob": 6.143973678263137e-06}, {"id": 771, "seek": 306324, "start": 3089.4799999999996, "end": 3093.22, "text": " to give it the context and the rules.", "tokens": [281, 976, 309, 264, 4319, 293, 264, 4474, 13], "temperature": 0.0, "avg_logprob": -0.28675477117554754, "compression_ratio": 1.6666666666666667, "no_speech_prob": 6.143973678263137e-06}, {"id": 772, "seek": 309322, "start": 3093.22, "end": 3097.7999999999997, "text": " So for instance, if you want to say, well, I have this problem here that I'm trying to", "tokens": [407, 337, 5197, 11, 498, 291, 528, 281, 584, 11, 731, 11, 286, 362, 341, 1154, 510, 300, 286, 478, 1382, 281], "temperature": 0.0, "avg_logprob": -0.2288479891690341, "compression_ratio": 1.5955555555555556, "no_speech_prob": 6.681387958451523e-07}, {"id": 773, "seek": 309322, "start": 3097.7999999999997, "end": 3101.9599999999996, "text": " solve and I don't want to spend mental power on doing it.", "tokens": [5039, 293, 286, 500, 380, 528, 281, 3496, 4973, 1347, 322, 884, 309, 13], "temperature": 0.0, "avg_logprob": -0.2288479891690341, "compression_ratio": 1.5955555555555556, "no_speech_prob": 6.681387958451523e-07}, {"id": 774, "seek": 309322, "start": 3101.9599999999996, "end": 3107.6, "text": " So I'm asking the AI to do it for me, but I need to give it the functions in my codebase.", "tokens": [407, 286, 478, 3365, 264, 7318, 281, 360, 309, 337, 385, 11, 457, 286, 643, 281, 976, 309, 264, 6828, 294, 452, 3089, 17429, 13], "temperature": 0.0, "avg_logprob": -0.2288479891690341, "compression_ratio": 1.5955555555555556, "no_speech_prob": 6.681387958451523e-07}, {"id": 775, "seek": 309322, "start": 3107.6, "end": 3110.08, "text": " Well, that's a lot of work.", "tokens": [1042, 11, 300, 311, 257, 688, 295, 589, 13], "temperature": 0.0, "avg_logprob": -0.2288479891690341, "compression_ratio": 1.5955555555555556, "no_speech_prob": 6.681387958451523e-07}, {"id": 776, "seek": 309322, "start": 3110.08, "end": 3118.3199999999997, "text": " And so for a moment, we do it with JGPT, you always need to write those functions in the", "tokens": [400, 370, 337, 257, 1623, 11, 321, 360, 309, 365, 508, 38, 47, 51, 11, 291, 1009, 643, 281, 2464, 729, 6828, 294, 264], "temperature": 0.0, "avg_logprob": -0.2288479891690341, "compression_ratio": 1.5955555555555556, "no_speech_prob": 6.681387958451523e-07}, {"id": 777, "seek": 309322, "start": 3118.3199999999997, "end": 3119.52, "text": " prompt.", "tokens": [12391, 13], "temperature": 0.0, "avg_logprob": -0.2288479891690341, "compression_ratio": 1.5955555555555556, "no_speech_prob": 6.681387958451523e-07}, {"id": 778, "seek": 311952, "start": 3119.52, "end": 3125.88, "text": " But at some point, I'm guessing that they will be able to analyze your codebase or your", "tokens": [583, 412, 512, 935, 11, 286, 478, 17939, 300, 436, 486, 312, 1075, 281, 12477, 428, 3089, 17429, 420, 428], "temperature": 0.0, "avg_logprob": -0.2422030766805013, "compression_ratio": 1.6553398058252426, "no_speech_prob": 3.412559124171821e-07}, {"id": 779, "seek": 311952, "start": 3125.88, "end": 3129.52, "text": " source file, and then it will be able to solve the problem.", "tokens": [4009, 3991, 11, 293, 550, 309, 486, 312, 1075, 281, 5039, 264, 1154, 13], "temperature": 0.0, "avg_logprob": -0.2422030766805013, "compression_ratio": 1.6553398058252426, "no_speech_prob": 3.412559124171821e-07}, {"id": 780, "seek": 311952, "start": 3129.52, "end": 3135.68, "text": " So a lot of our work as developers is not writing new code, it's editing existing code.", "tokens": [407, 257, 688, 295, 527, 589, 382, 8849, 307, 406, 3579, 777, 3089, 11, 309, 311, 10000, 6741, 3089, 13], "temperature": 0.0, "avg_logprob": -0.2422030766805013, "compression_ratio": 1.6553398058252426, "no_speech_prob": 3.412559124171821e-07}, {"id": 781, "seek": 311952, "start": 3135.68, "end": 3141.72, "text": " So I feel like that's going to be somewhat missing now, but it's probably going to be", "tokens": [407, 286, 841, 411, 300, 311, 516, 281, 312, 8344, 5361, 586, 11, 457, 309, 311, 1391, 516, 281, 312], "temperature": 0.0, "avg_logprob": -0.2422030766805013, "compression_ratio": 1.6553398058252426, "no_speech_prob": 3.412559124171821e-07}, {"id": 782, "seek": 311952, "start": 3141.72, "end": 3144.48, "text": " solved pretty soon.", "tokens": [13041, 1238, 2321, 13], "temperature": 0.0, "avg_logprob": -0.2422030766805013, "compression_ratio": 1.6553398058252426, "no_speech_prob": 3.412559124171821e-07}, {"id": 783, "seek": 314448, "start": 3144.48, "end": 3150.56, "text": " The only question is how much input can give those AIs, and that's pretty low at the moment,", "tokens": [440, 787, 1168, 307, 577, 709, 4846, 393, 976, 729, 316, 6802, 11, 293, 300, 311, 1238, 2295, 412, 264, 1623, 11], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 784, "seek": 314448, "start": 3150.56, "end": 3151.56, "text": " I think.", "tokens": [286, 519, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 785, "seek": 314448, "start": 3151.56, "end": 3156.04, "text": " Actually, GPT-4, can't it take like 25,000 tokens as input?", "tokens": [5135, 11, 26039, 51, 12, 19, 11, 393, 380, 309, 747, 411, 3552, 11, 1360, 22667, 382, 4846, 30], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 786, "seek": 314448, "start": 3156.04, "end": 3157.84, "text": " So you can feed it a huge input.", "tokens": [407, 291, 393, 3154, 309, 257, 2603, 4846, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 787, "seek": 314448, "start": 3157.84, "end": 3158.84, "text": " That's nice.", "tokens": [663, 311, 1481, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 788, "seek": 314448, "start": 3158.84, "end": 3160.2400000000002, "text": " That has improved more.", "tokens": [663, 575, 9689, 544, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 789, "seek": 314448, "start": 3160.2400000000002, "end": 3161.2400000000002, "text": " That's a game changer.", "tokens": [663, 311, 257, 1216, 22822, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 790, "seek": 314448, "start": 3161.2400000000002, "end": 3162.2400000000002, "text": " Yeah, yeah.", "tokens": [865, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 791, "seek": 314448, "start": 3162.2400000000002, "end": 3168.6, "text": " So you can feed it all of your documentation or all, you can give it huge inputs.", "tokens": [407, 291, 393, 3154, 309, 439, 295, 428, 14333, 420, 439, 11, 291, 393, 976, 309, 2603, 15743, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 792, "seek": 314448, "start": 3168.6, "end": 3169.6, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 793, "seek": 314448, "start": 3169.6, "end": 3170.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.31434150503463104, "compression_ratio": 1.5789473684210527, "no_speech_prob": 2.994307124026818e-06}, {"id": 794, "seek": 317060, "start": 3170.6, "end": 3176.2799999999997, "text": " But until then, I'm thinking, for instance, if we had a tool that's extracted information", "tokens": [583, 1826, 550, 11, 286, 478, 1953, 11, 337, 5197, 11, 498, 321, 632, 257, 2290, 300, 311, 34086, 1589], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 795, "seek": 317060, "start": 3176.2799999999997, "end": 3182.2, "text": " from your codebase, and that you can then just copy paste into the prompt, that could", "tokens": [490, 428, 3089, 17429, 11, 293, 300, 291, 393, 550, 445, 5055, 9163, 666, 264, 12391, 11, 300, 727], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 796, "seek": 317060, "start": 3182.2, "end": 3183.2, "text": " be pretty cool.", "tokens": [312, 1238, 1627, 13], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 797, "seek": 317060, "start": 3183.2, "end": 3186.52, "text": " So like having all the types for the functions.", "tokens": [407, 411, 1419, 439, 264, 3467, 337, 264, 6828, 13], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 798, "seek": 317060, "start": 3186.52, "end": 3191.12, "text": " And there is a tool that is called Elm Review, which has an extract feature.", "tokens": [400, 456, 307, 257, 2290, 300, 307, 1219, 2699, 76, 19954, 11, 597, 575, 364, 8947, 4111, 13], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 799, "seek": 317060, "start": 3191.12, "end": 3192.44, "text": " Yeah, exactly.", "tokens": [865, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 800, "seek": 317060, "start": 3192.44, "end": 3195.64, "text": " To get whatever information is needed.", "tokens": [1407, 483, 2035, 1589, 307, 2978, 13], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 801, "seek": 317060, "start": 3195.64, "end": 3198.08, "text": " But yeah, that's still going to be quite annoying.", "tokens": [583, 1338, 11, 300, 311, 920, 516, 281, 312, 1596, 11304, 13], "temperature": 0.0, "avg_logprob": -0.2896594320024763, "compression_ratio": 1.6130268199233717, "no_speech_prob": 1.706162379377929e-06}, {"id": 802, "seek": 319808, "start": 3198.08, "end": 3203.52, "text": " Like you probably don't want to send the types for all the APIs in your codebase.", "tokens": [1743, 291, 1391, 500, 380, 528, 281, 2845, 264, 3467, 337, 439, 264, 21445, 294, 428, 3089, 17429, 13], "temperature": 0.0, "avg_logprob": -0.38637748924461573, "compression_ratio": 1.51953125, "no_speech_prob": 1.4367351468536071e-06}, {"id": 803, "seek": 319808, "start": 3203.52, "end": 3205.08, "text": " But maybe that could be interesting.", "tokens": [583, 1310, 300, 727, 312, 1880, 13], "temperature": 0.0, "avg_logprob": -0.38637748924461573, "compression_ratio": 1.51953125, "no_speech_prob": 1.4367351468536071e-06}, {"id": 804, "seek": 319808, "start": 3205.08, "end": 3207.56, "text": " Unless you automate it, and why not?", "tokens": [16581, 291, 31605, 309, 11, 293, 983, 406, 30], "temperature": 0.0, "avg_logprob": -0.38637748924461573, "compression_ratio": 1.51953125, "no_speech_prob": 1.4367351468536071e-06}, {"id": 805, "seek": 319808, "start": 3207.56, "end": 3209.4, "text": " It gives good results.", "tokens": [467, 2709, 665, 3542, 13], "temperature": 0.0, "avg_logprob": -0.38637748924461573, "compression_ratio": 1.51953125, "no_speech_prob": 1.4367351468536071e-06}, {"id": 806, "seek": 319808, "start": 3209.4, "end": 3214.64, "text": " Yeah, what I mean is more like if you need to give too much inputs in a way that the", "tokens": [865, 11, 437, 286, 914, 307, 544, 411, 498, 291, 643, 281, 976, 886, 709, 15743, 294, 257, 636, 300, 264], "temperature": 0.0, "avg_logprob": -0.38637748924461573, "compression_ratio": 1.51953125, "no_speech_prob": 1.4367351468536071e-06}, {"id": 807, "seek": 319808, "start": 3214.64, "end": 3220.7999999999997, "text": " AI will not be able to parse that or understand that, or it's just too big.", "tokens": [7318, 486, 406, 312, 1075, 281, 48377, 300, 420, 1223, 300, 11, 420, 309, 311, 445, 886, 955, 13], "temperature": 0.0, "avg_logprob": -0.38637748924461573, "compression_ratio": 1.51953125, "no_speech_prob": 1.4367351468536071e-06}, {"id": 808, "seek": 319808, "start": 3220.7999999999997, "end": 3226.6, "text": " Like I work on a 200,000 lines of code, codebase.", "tokens": [1743, 286, 589, 322, 257, 2331, 11, 1360, 3876, 295, 3089, 11, 3089, 17429, 13], "temperature": 0.0, "avg_logprob": -0.38637748924461573, "compression_ratio": 1.51953125, "no_speech_prob": 1.4367351468536071e-06}, {"id": 809, "seek": 322660, "start": 3226.6, "end": 3231.2, "text": " But how many type annotations does that represent, right?", "tokens": [583, 577, 867, 2010, 25339, 763, 775, 300, 2906, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 810, "seek": 322660, "start": 3231.2, "end": 3234.8399999999997, "text": " Like hundreds of thousands, probably?", "tokens": [1743, 6779, 295, 5383, 11, 1391, 30], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 811, "seek": 322660, "start": 3234.8399999999997, "end": 3235.96, "text": " You think so?", "tokens": [509, 519, 370, 30], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 812, "seek": 322660, "start": 3235.96, "end": 3238.36, "text": " That are in scope in a particular point in code?", "tokens": [663, 366, 294, 11923, 294, 257, 1729, 935, 294, 3089, 30], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 813, "seek": 322660, "start": 3238.36, "end": 3240.3199999999997, "text": " Well, you can import anything.", "tokens": [1042, 11, 291, 393, 974, 1340, 13], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 814, "seek": 322660, "start": 3240.3199999999997, "end": 3241.92, "text": " Not everything is exposed, probably.", "tokens": [1726, 1203, 307, 9495, 11, 1391, 13], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 815, "seek": 322660, "start": 3241.92, "end": 3242.92, "text": " Yeah, exactly.", "tokens": [865, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 816, "seek": 322660, "start": 3242.92, "end": 3243.92, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 817, "seek": 322660, "start": 3243.92, "end": 3248.2, "text": " And a lot of things are going to be values that are locally scoped to let like I would", "tokens": [400, 257, 688, 295, 721, 366, 516, 281, 312, 4190, 300, 366, 16143, 795, 27277, 281, 718, 411, 286, 576], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 818, "seek": 322660, "start": 3248.2, "end": 3252.08, "text": " I would venture to guess in a 200,000 line codebase.", "tokens": [286, 576, 18474, 281, 2041, 294, 257, 2331, 11, 1360, 1622, 3089, 17429, 13], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 819, "seek": 322660, "start": 3252.08, "end": 3253.36, "text": " With code comments?", "tokens": [2022, 3089, 3053, 30], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 820, "seek": 322660, "start": 3253.36, "end": 3256.2, "text": " Or maybe there are a thousand.", "tokens": [1610, 1310, 456, 366, 257, 4714, 13], "temperature": 0.0, "avg_logprob": -0.3334509887695313, "compression_ratio": 1.5812274368231047, "no_speech_prob": 1.994714921238483e-06}, {"id": 821, "seek": 325620, "start": 3256.2, "end": 3260.56, "text": " Maybe there are like on the order of one to 10,000.", "tokens": [2704, 456, 366, 411, 322, 264, 1668, 295, 472, 281, 1266, 11, 1360, 13], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 822, "seek": 325620, "start": 3260.56, "end": 3262.52, "text": " No more than definitely no more than 10,000.", "tokens": [883, 544, 813, 2138, 572, 544, 813, 1266, 11, 1360, 13], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 823, "seek": 325620, "start": 3262.52, "end": 3266.56, "text": " Yeah, no, if you only include the exposed things or the things in scope of that file,", "tokens": [865, 11, 572, 11, 498, 291, 787, 4090, 264, 9495, 721, 420, 264, 721, 294, 11923, 295, 300, 3991, 11], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 824, "seek": 325620, "start": 3266.56, "end": 3268.9199999999996, "text": " then yeah, that's, that's a lot less.", "tokens": [550, 1338, 11, 300, 311, 11, 300, 311, 257, 688, 1570, 13], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 825, "seek": 325620, "start": 3268.9199999999996, "end": 3273.8399999999997, "text": " Oh, there's also dependencies, but that's also not that much.", "tokens": [876, 11, 456, 311, 611, 36606, 11, 457, 300, 311, 611, 406, 300, 709, 13], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 826, "seek": 325620, "start": 3273.8399999999997, "end": 3276.9199999999996, "text": " Right, maybe it's doable.", "tokens": [1779, 11, 1310, 309, 311, 41183, 13], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 827, "seek": 325620, "start": 3276.9199999999996, "end": 3283.24, "text": " And you can do heuristics to filter and not even heuristics, like reliable heuristics", "tokens": [400, 291, 393, 360, 415, 374, 6006, 281, 6608, 293, 406, 754, 415, 374, 6006, 11, 411, 12924, 415, 374, 6006], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 828, "seek": 325620, "start": 3283.24, "end": 3284.96, "text": " to filter out.", "tokens": [281, 6608, 484, 13], "temperature": 0.0, "avg_logprob": -0.359029019465212, "compression_ratio": 1.7330508474576272, "no_speech_prob": 3.1071820671968453e-07}, {"id": 829, "seek": 328496, "start": 3284.96, "end": 3291.2400000000002, "text": " You know, you know that if you're trying to arrive at this type, but none of the types", "tokens": [509, 458, 11, 291, 458, 300, 498, 291, 434, 1382, 281, 8881, 412, 341, 2010, 11, 457, 6022, 295, 264, 3467], "temperature": 0.0, "avg_logprob": -0.22883639419287966, "compression_ratio": 1.8666666666666667, "no_speech_prob": 6.2408689700532705e-06}, {"id": 830, "seek": 328496, "start": 3291.2400000000002, "end": 3292.92, "text": " connect in any way.", "tokens": [1745, 294, 604, 636, 13], "temperature": 0.0, "avg_logprob": -0.22883639419287966, "compression_ratio": 1.8666666666666667, "no_speech_prob": 6.2408689700532705e-06}, {"id": 831, "seek": 328496, "start": 3292.92, "end": 3298.7200000000003, "text": " So if you can take a string and use it on this thing, and you can take an int and turn", "tokens": [407, 498, 291, 393, 747, 257, 6798, 293, 764, 309, 322, 341, 551, 11, 293, 291, 393, 747, 364, 560, 293, 1261], "temperature": 0.0, "avg_logprob": -0.22883639419287966, "compression_ratio": 1.8666666666666667, "no_speech_prob": 6.2408689700532705e-06}, {"id": 832, "seek": 328496, "start": 3298.7200000000003, "end": 3301.6, "text": " it into a string, then those two things connect.", "tokens": [309, 666, 257, 6798, 11, 550, 729, 732, 721, 1745, 13], "temperature": 0.0, "avg_logprob": -0.22883639419287966, "compression_ratio": 1.8666666666666667, "no_speech_prob": 6.2408689700532705e-06}, {"id": 833, "seek": 328496, "start": 3301.6, "end": 3309.7200000000003, "text": " But if a if this custom type can't be turned into a string, then you know it, it's not", "tokens": [583, 498, 257, 498, 341, 2375, 2010, 393, 380, 312, 3574, 666, 257, 6798, 11, 550, 291, 458, 309, 11, 309, 311, 406], "temperature": 0.0, "avg_logprob": -0.22883639419287966, "compression_ratio": 1.8666666666666667, "no_speech_prob": 6.2408689700532705e-06}, {"id": 834, "seek": 328496, "start": 3309.7200000000003, "end": 3313.48, "text": " going to be involved in your problem at all, because your problem is dealing with strings,", "tokens": [516, 281, 312, 3288, 294, 428, 1154, 412, 439, 11, 570, 428, 1154, 307, 6260, 365, 13985, 11], "temperature": 0.0, "avg_logprob": -0.22883639419287966, "compression_ratio": 1.8666666666666667, "no_speech_prob": 6.2408689700532705e-06}, {"id": 835, "seek": 331348, "start": 3313.48, "end": 3317.0, "text": " and you can't turn that to or from a string, for example.", "tokens": [293, 291, 393, 380, 1261, 300, 281, 420, 490, 257, 6798, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 836, "seek": 331348, "start": 3317.0, "end": 3322.68, "text": " Yeah, you can also remove all the modules that would create an import cycle.", "tokens": [865, 11, 291, 393, 611, 4159, 439, 264, 16679, 300, 576, 1884, 364, 974, 6586, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 837, "seek": 331348, "start": 3322.68, "end": 3323.68, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 838, "seek": 331348, "start": 3323.68, "end": 3328.84, "text": " So basically, you can't import anything that imports this file directly or indirectly.", "tokens": [407, 1936, 11, 291, 393, 380, 974, 1340, 300, 41596, 341, 3991, 3838, 420, 37779, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 839, "seek": 331348, "start": 3328.84, "end": 3329.84, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 840, "seek": 331348, "start": 3329.84, "end": 3330.84, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 841, "seek": 331348, "start": 3330.84, "end": 3333.68, "text": " So to me, this is the really interesting intersection.", "tokens": [407, 281, 385, 11, 341, 307, 264, 534, 1880, 15236, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 842, "seek": 331348, "start": 3333.68, "end": 3338.52, "text": " So now you were mentioning earlier that you think that these tools will start to understand", "tokens": [407, 586, 291, 645, 18315, 3071, 300, 291, 519, 300, 613, 3873, 486, 722, 281, 1223], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 843, "seek": 331348, "start": 3338.52, "end": 3341.56, "text": " your code more over time, but we're not there yet.", "tokens": [428, 3089, 544, 670, 565, 11, 457, 321, 434, 406, 456, 1939, 13], "temperature": 0.0, "avg_logprob": -0.2789020538330078, "compression_ratio": 1.715953307392996, "no_speech_prob": 8.579226005167584e-07}, {"id": 844, "seek": 334156, "start": 3341.56, "end": 3344.4, "text": " I actually, I don't see it that way.", "tokens": [286, 767, 11, 286, 500, 380, 536, 309, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.30456532372368705, "compression_ratio": 1.6043478260869566, "no_speech_prob": 3.668822955660289e-06}, {"id": 845, "seek": 334156, "start": 3344.4, "end": 3349.52, "text": " I believe that these tools are going to continue doing what they're doing, which is that they've", "tokens": [286, 1697, 300, 613, 3873, 366, 516, 281, 2354, 884, 437, 436, 434, 884, 11, 597, 307, 300, 436, 600], "temperature": 0.0, "avg_logprob": -0.30456532372368705, "compression_ratio": 1.6043478260869566, "no_speech_prob": 3.668822955660289e-06}, {"id": 846, "seek": 334156, "start": 3349.52, "end": 3356.88, "text": " been remarkably successful in being able to solve complex problems just through this crazy", "tokens": [668, 37381, 4406, 294, 885, 1075, 281, 5039, 3997, 2740, 445, 807, 341, 3219], "temperature": 0.0, "avg_logprob": -0.30456532372368705, "compression_ratio": 1.6043478260869566, "no_speech_prob": 3.668822955660289e-06}, {"id": 847, "seek": 334156, "start": 3356.88, "end": 3360.04, "text": " synthesis and predictive text sort of thing.", "tokens": [30252, 293, 35521, 2487, 1333, 295, 551, 13], "temperature": 0.0, "avg_logprob": -0.30456532372368705, "compression_ratio": 1.6043478260869566, "no_speech_prob": 3.668822955660289e-06}, {"id": 848, "seek": 334156, "start": 3360.04, "end": 3362.56, "text": " No, I didn't mean it in the sense of understanding.", "tokens": [883, 11, 286, 994, 380, 914, 309, 294, 264, 2020, 295, 3701, 13], "temperature": 0.0, "avg_logprob": -0.30456532372368705, "compression_ratio": 1.6043478260869566, "no_speech_prob": 3.668822955660289e-06}, {"id": 849, "seek": 334156, "start": 3362.56, "end": 3367.16, "text": " I meant it's just of gathering the information.", "tokens": [286, 4140, 309, 311, 445, 295, 13519, 264, 1589, 13], "temperature": 0.0, "avg_logprob": -0.30456532372368705, "compression_ratio": 1.6043478260869566, "no_speech_prob": 3.668822955660289e-06}, {"id": 850, "seek": 336716, "start": 3367.16, "end": 3372.56, "text": " Like every time you ask something to Jadgipty, you need to provide information about your", "tokens": [1743, 633, 565, 291, 1029, 746, 281, 508, 345, 70, 647, 874, 11, 291, 643, 281, 2893, 1589, 466, 428], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 851, "seek": 336716, "start": 3372.56, "end": 3373.56, "text": " code base.", "tokens": [3089, 3096, 13], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 852, "seek": 336716, "start": 3373.56, "end": 3375.92, "text": " At the moment, it does not look at your code base.", "tokens": [1711, 264, 1623, 11, 309, 775, 406, 574, 412, 428, 3089, 3096, 13], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 853, "seek": 336716, "start": 3375.92, "end": 3376.92, "text": " I see.", "tokens": [286, 536, 13], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 854, "seek": 336716, "start": 3376.92, "end": 3377.92, "text": " I see.", "tokens": [286, 536, 13], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 855, "seek": 336716, "start": 3377.92, "end": 3379.08, "text": " Right, right.", "tokens": [1779, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 856, "seek": 336716, "start": 3379.08, "end": 3385.16, "text": " But I don't think that they will, for example, know type information about your code base,", "tokens": [583, 286, 500, 380, 519, 300, 436, 486, 11, 337, 1365, 11, 458, 2010, 1589, 466, 428, 3089, 3096, 11], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 857, "seek": 336716, "start": 3385.16, "end": 3389.08, "text": " except insofar as it's part of the predictive text because it's in there.", "tokens": [3993, 294, 539, 21196, 382, 309, 311, 644, 295, 264, 35521, 2487, 570, 309, 311, 294, 456, 13], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 858, "seek": 336716, "start": 3389.08, "end": 3396.08, "text": " But I think that they're getting enough mileage solving problems through this sort of predictive", "tokens": [583, 286, 519, 300, 436, 434, 1242, 1547, 43121, 12606, 2740, 807, 341, 1333, 295, 35521], "temperature": 0.0, "avg_logprob": -0.2699296951293945, "compression_ratio": 1.778225806451613, "no_speech_prob": 4.157281182415318e-06}, {"id": 859, "seek": 339608, "start": 3396.08, "end": 3399.7999999999997, "text": " text, that they're going to keep going with that.", "tokens": [2487, 11, 300, 436, 434, 516, 281, 1066, 516, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.3241722724016975, "compression_ratio": 1.650273224043716, "no_speech_prob": 2.4060600480879657e-06}, {"id": 860, "seek": 339608, "start": 3399.7999999999997, "end": 3406.56, "text": " But I think the interesting intersection, especially with typed pure functional programming", "tokens": [583, 286, 519, 264, 1880, 15236, 11, 2318, 365, 33941, 6075, 11745, 9410], "temperature": 0.0, "avg_logprob": -0.3241722724016975, "compression_ratio": 1.650273224043716, "no_speech_prob": 2.4060600480879657e-06}, {"id": 861, "seek": 339608, "start": 3406.56, "end": 3415.7599999999998, "text": " languages is if you, so humans have their role, these sort of like compiler tools and", "tokens": [8650, 307, 498, 291, 11, 370, 6255, 362, 641, 3090, 11, 613, 1333, 295, 411, 31958, 3873, 293], "temperature": 0.0, "avg_logprob": -0.3241722724016975, "compression_ratio": 1.650273224043716, "no_speech_prob": 2.4060600480879657e-06}, {"id": 862, "seek": 339608, "start": 3415.7599999999998, "end": 3419.6, "text": " static analysis tools have their role, and these AI tools have their role.", "tokens": [13437, 5215, 3873, 362, 641, 3090, 11, 293, 613, 7318, 3873, 362, 641, 3090, 13], "temperature": 0.0, "avg_logprob": -0.3241722724016975, "compression_ratio": 1.650273224043716, "no_speech_prob": 2.4060600480879657e-06}, {"id": 863, "seek": 341960, "start": 3419.6, "end": 3426.6, "text": " So with this trifecta, I think each of these pieces needs to do what it is best at.", "tokens": [407, 365, 341, 36956, 557, 64, 11, 286, 519, 1184, 295, 613, 3755, 2203, 281, 360, 437, 309, 307, 1151, 412, 13], "temperature": 0.0, "avg_logprob": -0.20908369336809432, "compression_ratio": 1.6684782608695652, "no_speech_prob": 2.6841544240596704e-06}, {"id": 864, "seek": 341960, "start": 3426.6, "end": 3428.96, "text": " Compilers are good at verifying things.", "tokens": [6620, 388, 433, 366, 665, 412, 1306, 5489, 721, 13], "temperature": 0.0, "avg_logprob": -0.20908369336809432, "compression_ratio": 1.6684782608695652, "no_speech_prob": 2.6841544240596704e-06}, {"id": 865, "seek": 341960, "start": 3428.96, "end": 3435.56, "text": " Humans are good at, do we even need humans anymore?", "tokens": [35809, 366, 665, 412, 11, 360, 321, 754, 643, 6255, 3602, 30], "temperature": 0.0, "avg_logprob": -0.20908369336809432, "compression_ratio": 1.6684782608695652, "no_speech_prob": 2.6841544240596704e-06}, {"id": 866, "seek": 341960, "start": 3435.56, "end": 3440.16, "text": " Humans are good at critically thinking, guiding these tools.", "tokens": [35809, 366, 665, 412, 22797, 1953, 11, 25061, 613, 3873, 13], "temperature": 0.0, "avg_logprob": -0.20908369336809432, "compression_ratio": 1.6684782608695652, "no_speech_prob": 2.6841544240596704e-06}, {"id": 867, "seek": 341960, "start": 3440.16, "end": 3444.92, "text": " Humans have goals.", "tokens": [35809, 362, 5493, 13], "temperature": 0.0, "avg_logprob": -0.20908369336809432, "compression_ratio": 1.6684782608695652, "no_speech_prob": 2.6841544240596704e-06}, {"id": 868, "seek": 341960, "start": 3444.92, "end": 3447.16, "text": " Humans are good at gathering requirements.", "tokens": [35809, 366, 665, 412, 13519, 7728, 13], "temperature": 0.0, "avg_logprob": -0.20908369336809432, "compression_ratio": 1.6684782608695652, "no_speech_prob": 2.6841544240596704e-06}, {"id": 869, "seek": 341960, "start": 3447.16, "end": 3448.16, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.20908369336809432, "compression_ratio": 1.6684782608695652, "no_speech_prob": 2.6841544240596704e-06}, {"id": 870, "seek": 344816, "start": 3448.16, "end": 3453.48, "text": " I'm not going to say they're good at it, but at the moment they're better than a machine.", "tokens": [286, 478, 406, 516, 281, 584, 436, 434, 665, 412, 309, 11, 457, 412, 264, 1623, 436, 434, 1101, 813, 257, 3479, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 871, "seek": 344816, "start": 3453.48, "end": 3454.48, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 872, "seek": 344816, "start": 3454.48, "end": 3456.3599999999997, "text": " And they have to because humans have goals.", "tokens": [400, 436, 362, 281, 570, 6255, 362, 5493, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 873, "seek": 344816, "start": 3456.3599999999997, "end": 3458.64, "text": " The AI's job is not to have goals.", "tokens": [440, 7318, 311, 1691, 307, 406, 281, 362, 5493, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 874, "seek": 344816, "start": 3458.64, "end": 3459.64, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 875, "seek": 344816, "start": 3459.64, "end": 3463.3999999999996, "text": " Humans have goals for humans.", "tokens": [35809, 362, 5493, 337, 6255, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 876, "seek": 344816, "start": 3463.3999999999996, "end": 3468.5, "text": " When a machine wants to make a program for a machine, then it can do it on its own.", "tokens": [1133, 257, 3479, 2738, 281, 652, 257, 1461, 337, 257, 3479, 11, 550, 309, 393, 360, 309, 322, 1080, 1065, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 877, "seek": 344816, "start": 3468.5, "end": 3471.7599999999998, "text": " This is absolutely not discrimination that I'm mentioning.", "tokens": [639, 307, 3122, 406, 15973, 300, 286, 478, 18315, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 878, "seek": 344816, "start": 3471.7599999999998, "end": 3472.7599999999998, "text": " God.", "tokens": [1265, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 879, "seek": 344816, "start": 3472.7599999999998, "end": 3473.7599999999998, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 880, "seek": 344816, "start": 3473.7599999999998, "end": 3475.3599999999997, "text": " The human is the customer.", "tokens": [440, 1952, 307, 264, 5474, 13], "temperature": 0.0, "avg_logprob": -0.30365912934653777, "compression_ratio": 1.6694915254237288, "no_speech_prob": 1.7061682910934906e-06}, {"id": 881, "seek": 347536, "start": 3475.36, "end": 3480.2000000000003, "text": " The human is the one that gets to say whether you solved the problem or not, that gets to", "tokens": [440, 1952, 307, 264, 472, 300, 2170, 281, 584, 1968, 291, 13041, 264, 1154, 420, 406, 11, 300, 2170, 281], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 882, "seek": 347536, "start": 3480.2000000000003, "end": 3482.52, "text": " make the calls of what the problem you're solving is.", "tokens": [652, 264, 5498, 295, 437, 264, 1154, 291, 434, 12606, 307, 13], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 883, "seek": 347536, "start": 3482.52, "end": 3485.88, "text": " So that's like, the human needs to do that.", "tokens": [407, 300, 311, 411, 11, 264, 1952, 2203, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 884, "seek": 347536, "start": 3485.88, "end": 3487.36, "text": " There's no substitute for that.", "tokens": [821, 311, 572, 15802, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 885, "seek": 347536, "start": 3487.36, "end": 3488.36, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 886, "seek": 347536, "start": 3488.36, "end": 3495.6800000000003, "text": " Because as you said, if the customer is a machine or an API or something, then you can", "tokens": [1436, 382, 291, 848, 11, 498, 264, 5474, 307, 257, 3479, 420, 364, 9362, 420, 746, 11, 550, 291, 393], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 887, "seek": 347536, "start": 3495.6800000000003, "end": 3496.96, "text": " automate it.", "tokens": [31605, 309, 13], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 888, "seek": 347536, "start": 3496.96, "end": 3502.1200000000003, "text": " So the human only asks, well, I need this, and then the machine can do the rest.", "tokens": [407, 264, 1952, 787, 8962, 11, 731, 11, 286, 643, 341, 11, 293, 550, 264, 3479, 393, 360, 264, 1472, 13], "temperature": 0.0, "avg_logprob": -0.2416040669316831, "compression_ratio": 1.7276595744680852, "no_speech_prob": 1.538167140324731e-07}, {"id": 889, "seek": 350212, "start": 3502.12, "end": 3509.6, "text": " And you can have these feedback cycles with compilers and all kinds of test suites.", "tokens": [400, 291, 393, 362, 613, 5824, 17796, 365, 715, 388, 433, 293, 439, 3685, 295, 1500, 459, 3324, 13], "temperature": 0.0, "avg_logprob": -0.24651490188226466, "compression_ratio": 1.532994923857868, "no_speech_prob": 7.934406198728539e-07}, {"id": 890, "seek": 350212, "start": 3509.6, "end": 3510.6, "text": " So yeah.", "tokens": [407, 1338, 13], "temperature": 0.0, "avg_logprob": -0.24651490188226466, "compression_ratio": 1.532994923857868, "no_speech_prob": 7.934406198728539e-07}, {"id": 891, "seek": 350212, "start": 3510.6, "end": 3511.6, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.24651490188226466, "compression_ratio": 1.532994923857868, "no_speech_prob": 7.934406198728539e-07}, {"id": 892, "seek": 350212, "start": 3511.6, "end": 3512.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.24651490188226466, "compression_ratio": 1.532994923857868, "no_speech_prob": 7.934406198728539e-07}, {"id": 893, "seek": 350212, "start": 3512.6, "end": 3517.24, "text": " So if that trifecta is what becomes really interesting to me, the human sets the goals", "tokens": [407, 498, 300, 36956, 557, 64, 307, 437, 3643, 534, 1880, 281, 385, 11, 264, 1952, 6352, 264, 5493], "temperature": 0.0, "avg_logprob": -0.24651490188226466, "compression_ratio": 1.532994923857868, "no_speech_prob": 7.934406198728539e-07}, {"id": 894, "seek": 350212, "start": 3517.24, "end": 3522.8399999999997, "text": " and can sort of validate these criteria and accept or not accept them.", "tokens": [293, 393, 1333, 295, 29562, 613, 11101, 293, 3241, 420, 406, 3241, 552, 13], "temperature": 0.0, "avg_logprob": -0.24651490188226466, "compression_ratio": 1.532994923857868, "no_speech_prob": 7.934406198728539e-07}, {"id": 895, "seek": 350212, "start": 3522.8399999999997, "end": 3526.56, "text": " The compiler is a verification tool.", "tokens": [440, 31958, 307, 257, 30206, 2290, 13], "temperature": 0.0, "avg_logprob": -0.24651490188226466, "compression_ratio": 1.532994923857868, "no_speech_prob": 7.934406198728539e-07}, {"id": 896, "seek": 352656, "start": 3526.56, "end": 3532.32, "text": " It is a tool for giving information through static analysis that is guaranteed correct", "tokens": [467, 307, 257, 2290, 337, 2902, 1589, 807, 13437, 5215, 300, 307, 18031, 3006], "temperature": 0.0, "avg_logprob": -0.22247569480638826, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.132481295637263e-07}, {"id": 897, "seek": 352656, "start": 3532.32, "end": 3535.04, "text": " information and checking that information.", "tokens": [1589, 293, 8568, 300, 1589, 13], "temperature": 0.0, "avg_logprob": -0.22247569480638826, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.132481295637263e-07}, {"id": 898, "seek": 352656, "start": 3535.04, "end": 3541.0, "text": " Review and other static analysis tools can provide similar input and verifications.", "tokens": [19954, 293, 661, 13437, 5215, 3873, 393, 2893, 2531, 4846, 293, 1306, 7833, 13], "temperature": 0.0, "avg_logprob": -0.22247569480638826, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.132481295637263e-07}, {"id": 899, "seek": 352656, "start": 3541.0, "end": 3548.52, "text": " And AI can piece things together using those guardrails and inputs and verifications provided", "tokens": [400, 7318, 393, 2522, 721, 1214, 1228, 729, 6290, 424, 4174, 293, 15743, 293, 1306, 7833, 5649], "temperature": 0.0, "avg_logprob": -0.22247569480638826, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.132481295637263e-07}, {"id": 900, "seek": 352656, "start": 3548.52, "end": 3550.64, "text": " by those other external systems.", "tokens": [538, 729, 661, 8320, 3652, 13], "temperature": 0.0, "avg_logprob": -0.22247569480638826, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.132481295637263e-07}, {"id": 901, "seek": 352656, "start": 3550.64, "end": 3555.36, "text": " So when those three things are sort of interacting, then I think it becomes really interesting,", "tokens": [407, 562, 729, 1045, 721, 366, 1333, 295, 18017, 11, 550, 286, 519, 309, 3643, 534, 1880, 11], "temperature": 0.0, "avg_logprob": -0.22247569480638826, "compression_ratio": 1.8632478632478633, "no_speech_prob": 9.132481295637263e-07}, {"id": 902, "seek": 355536, "start": 3555.36, "end": 3561.8, "text": " especially, as I said, when we are using these things to create higher level building blocks", "tokens": [2318, 11, 382, 286, 848, 11, 562, 321, 366, 1228, 613, 721, 281, 1884, 2946, 1496, 2390, 8474], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 903, "seek": 355536, "start": 3561.8, "end": 3563.08, "text": " as humans.", "tokens": [382, 6255, 13], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 904, "seek": 355536, "start": 3563.08, "end": 3565.88, "text": " So we can say, give me a decoder.", "tokens": [407, 321, 393, 584, 11, 976, 385, 257, 979, 19866, 13], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 905, "seek": 355536, "start": 3565.88, "end": 3567.52, "text": " And I know that it satisfies these things.", "tokens": [400, 286, 458, 300, 309, 44271, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 906, "seek": 355536, "start": 3567.52, "end": 3571.92, "text": " And I don't have to use brainpower to check that because I know it's an automated verification", "tokens": [400, 286, 500, 380, 362, 281, 764, 3567, 9513, 281, 1520, 300, 570, 286, 458, 309, 311, 364, 18473, 30206], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 907, "seek": 355536, "start": 3571.92, "end": 3572.92, "text": " of that.", "tokens": [295, 300, 13], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 908, "seek": 355536, "start": 3572.92, "end": 3574.04, "text": " So I can trust it.", "tokens": [407, 286, 393, 3361, 309, 13], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 909, "seek": 355536, "start": 3574.04, "end": 3578.6800000000003, "text": " Give me a fake it till you make it simplest thing that could possibly work green test", "tokens": [5303, 385, 257, 7592, 309, 4288, 291, 652, 309, 22811, 551, 300, 727, 6264, 589, 3092, 1500], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 910, "seek": 355536, "start": 3578.6800000000003, "end": 3584.4, "text": " for this test case and give it guardrails that allow me to trust that it's not going", "tokens": [337, 341, 1500, 1389, 293, 976, 309, 6290, 424, 4174, 300, 2089, 385, 281, 3361, 300, 309, 311, 406, 516], "temperature": 0.0, "avg_logprob": -0.18952839768777682, "compression_ratio": 1.686832740213523, "no_speech_prob": 3.0894491374056088e-06}, {"id": 911, "seek": 358440, "start": 3584.4, "end": 3588.08, "text": " beyond that and filling in implementation details.", "tokens": [4399, 300, 293, 10623, 294, 11420, 4365, 13], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 912, "seek": 358440, "start": 3588.08, "end": 3590.96, "text": " Then you can actually trust these things.", "tokens": [1396, 291, 393, 767, 3361, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 913, "seek": 358440, "start": 3590.96, "end": 3598.56, "text": " And yeah, well, there's there's one question of, do you even need a compiler or type checker", "tokens": [400, 1338, 11, 731, 11, 456, 311, 456, 311, 472, 1168, 295, 11, 360, 291, 754, 643, 257, 31958, 420, 2010, 1520, 260], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 914, "seek": 358440, "start": 3598.56, "end": 3601.52, "text": " in the linter and the test suites?", "tokens": [294, 264, 287, 5106, 293, 264, 1500, 459, 3324, 30], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 915, "seek": 358440, "start": 3601.52, "end": 3604.96, "text": " Could you not just ask the AI to verify things?", "tokens": [7497, 291, 406, 445, 1029, 264, 7318, 281, 16888, 721, 30], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 916, "seek": 358440, "start": 3604.96, "end": 3605.96, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 917, "seek": 358440, "start": 3605.96, "end": 3610.48, "text": " But then it comes again to the point of, well, who monitors who?", "tokens": [583, 550, 309, 1487, 797, 281, 264, 935, 295, 11, 731, 11, 567, 26518, 567, 30], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 918, "seek": 358440, "start": 3610.48, "end": 3613.04, "text": " How do you trust the right checks?", "tokens": [1012, 360, 291, 3361, 264, 558, 13834, 30], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 919, "seek": 358440, "start": 3613.04, "end": 3614.32, "text": " Right, exactly.", "tokens": [1779, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.3241922205144709, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.2377304250985617e-06}, {"id": 920, "seek": 361432, "start": 3614.32, "end": 3617.52, "text": " And at the end of the day, we we do trust the compiler.", "tokens": [400, 412, 264, 917, 295, 264, 786, 11, 321, 321, 360, 3361, 264, 31958, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 921, "seek": 361432, "start": 3617.52, "end": 3623.0800000000004, "text": " Now, that said, it is possible for the compiler to have bugs and it can.", "tokens": [823, 11, 300, 848, 11, 309, 307, 1944, 337, 264, 31958, 281, 362, 15120, 293, 309, 393, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 922, "seek": 361432, "start": 3623.0800000000004, "end": 3627.04, "text": " But for all intents and purposes, we fully trust the compiler.", "tokens": [583, 337, 439, 560, 791, 293, 9932, 11, 321, 4498, 3361, 264, 31958, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 923, "seek": 361432, "start": 3627.04, "end": 3628.7200000000003, "text": " We fully trust Elm Review.", "tokens": [492, 4498, 3361, 2699, 76, 19954, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 924, "seek": 361432, "start": 3628.7200000000003, "end": 3630.8, "text": " Of course, possible for these things to have bugs.", "tokens": [2720, 1164, 11, 1944, 337, 613, 721, 281, 362, 15120, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 925, "seek": 361432, "start": 3630.8, "end": 3632.88, "text": " But I think that's a good assumption.", "tokens": [583, 286, 519, 300, 311, 257, 665, 15302, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 926, "seek": 361432, "start": 3632.88, "end": 3636.88, "text": " Whereas with AI, I don't fully trust it unless I verify it.", "tokens": [13813, 365, 7318, 11, 286, 500, 380, 4498, 3361, 309, 5969, 286, 16888, 309, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 927, "seek": 361432, "start": 3636.88, "end": 3637.88, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 928, "seek": 361432, "start": 3637.88, "end": 3643.88, "text": " The thing that is very important for me with regards to the compilers and linters and test", "tokens": [440, 551, 300, 307, 588, 1021, 337, 385, 365, 14258, 281, 264, 715, 388, 433, 293, 22896, 1559, 293, 1500], "temperature": 0.0, "avg_logprob": -0.2370109703704601, "compression_ratio": 1.8267716535433072, "no_speech_prob": 4.520914558270306e-07}, {"id": 929, "seek": 364388, "start": 3643.88, "end": 3647.4, "text": " suites is that these are consistent.", "tokens": [459, 3324, 307, 300, 613, 366, 8398, 13], "temperature": 0.0, "avg_logprob": -0.24019706855385992, "compression_ratio": 2.009259259259259, "no_speech_prob": 7.224371643133054e-07}, {"id": 930, "seek": 364388, "start": 3647.4, "end": 3652.2400000000002, "text": " Like if you run the same code, if you ask the compiler to verify the same code, it's", "tokens": [1743, 498, 291, 1190, 264, 912, 3089, 11, 498, 291, 1029, 264, 31958, 281, 16888, 264, 912, 3089, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.24019706855385992, "compression_ratio": 2.009259259259259, "no_speech_prob": 7.224371643133054e-07}, {"id": 931, "seek": 364388, "start": 3652.2400000000002, "end": 3654.12, "text": " going to give you the same results.", "tokens": [516, 281, 976, 291, 264, 912, 3542, 13], "temperature": 0.0, "avg_logprob": -0.24019706855385992, "compression_ratio": 2.009259259259259, "no_speech_prob": 7.224371643133054e-07}, {"id": 932, "seek": 364388, "start": 3654.12, "end": 3659.6800000000003, "text": " If you run the same code in a test suite, it's going to give you the same results.", "tokens": [759, 291, 1190, 264, 912, 3089, 294, 257, 1500, 14205, 11, 309, 311, 516, 281, 976, 291, 264, 912, 3542, 13], "temperature": 0.0, "avg_logprob": -0.24019706855385992, "compression_ratio": 2.009259259259259, "no_speech_prob": 7.224371643133054e-07}, {"id": 933, "seek": 364388, "start": 3659.6800000000003, "end": 3666.52, "text": " If you ask the AI to review your code, like, hey, are there any consistency issues that", "tokens": [759, 291, 1029, 264, 7318, 281, 3131, 428, 3089, 11, 411, 11, 4177, 11, 366, 456, 604, 14416, 2663, 300], "temperature": 0.0, "avg_logprob": -0.24019706855385992, "compression_ratio": 2.009259259259259, "no_speech_prob": 7.224371643133054e-07}, {"id": 934, "seek": 364388, "start": 3666.52, "end": 3672.48, "text": " the linter would tell me, for instance, then from one run to another, it could tell you", "tokens": [264, 287, 5106, 576, 980, 385, 11, 337, 5197, 11, 550, 490, 472, 1190, 281, 1071, 11, 309, 727, 980, 291], "temperature": 0.0, "avg_logprob": -0.24019706855385992, "compression_ratio": 2.009259259259259, "no_speech_prob": 7.224371643133054e-07}, {"id": 935, "seek": 364388, "start": 3672.48, "end": 3673.48, "text": " different things.", "tokens": [819, 721, 13], "temperature": 0.0, "avg_logprob": -0.24019706855385992, "compression_ratio": 2.009259259259259, "no_speech_prob": 7.224371643133054e-07}, {"id": 936, "seek": 367348, "start": 3673.48, "end": 3674.48, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 937, "seek": 367348, "start": 3674.48, "end": 3680.68, "text": " It's kind of like asking a human, hey, can you please review this code and tell me how", "tokens": [467, 311, 733, 295, 411, 3365, 257, 1952, 11, 4177, 11, 393, 291, 1767, 3131, 341, 3089, 293, 980, 385, 577], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 938, "seek": 367348, "start": 3680.68, "end": 3681.92, "text": " you can improve it?", "tokens": [291, 393, 3470, 309, 30], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 939, "seek": 367348, "start": 3681.92, "end": 3686.8, "text": " Well, if I ask you today to do this seriously on my code base, you're going to find a lot", "tokens": [1042, 11, 498, 286, 1029, 291, 965, 281, 360, 341, 6638, 322, 452, 3089, 3096, 11, 291, 434, 516, 281, 915, 257, 688], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 940, "seek": 367348, "start": 3686.8, "end": 3687.8, "text": " of problems.", "tokens": [295, 2740, 13], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 941, "seek": 367348, "start": 3687.8, "end": 3692.68, "text": " If I ask you tomorrow to do it again from scratch, you're going to give me a whole different", "tokens": [759, 286, 1029, 291, 4153, 281, 360, 309, 797, 490, 8459, 11, 291, 434, 516, 281, 976, 385, 257, 1379, 819], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 942, "seek": 367348, "start": 3692.68, "end": 3693.68, "text": " kind of problems.", "tokens": [733, 295, 2740, 13], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 943, "seek": 367348, "start": 3693.68, "end": 3697.0, "text": " Like, oh, well, I think I can rewrite this function.", "tokens": [1743, 11, 1954, 11, 731, 11, 286, 519, 286, 393, 28132, 341, 2445, 13], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 944, "seek": 367348, "start": 3697.0, "end": 3698.0, "text": " Sure.", "tokens": [4894, 13], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 945, "seek": 367348, "start": 3698.0, "end": 3699.32, "text": " But maybe it's good enough.", "tokens": [583, 1310, 309, 311, 665, 1547, 13], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 946, "seek": 367348, "start": 3699.32, "end": 3700.32, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2199452966451645, "compression_ratio": 1.627906976744186, "no_speech_prob": 1.2482444162742468e-06}, {"id": 947, "seek": 370032, "start": 3700.32, "end": 3710.04, "text": " Linters, when they're dealing with consistency, they give you a certain minimum of consistency", "tokens": [441, 35388, 11, 562, 436, 434, 6260, 365, 14416, 11, 436, 976, 291, 257, 1629, 7285, 295, 14416], "temperature": 0.0, "avg_logprob": -0.2869421801989592, "compression_ratio": 1.5435897435897437, "no_speech_prob": 4.2469696381886024e-07}, {"id": 948, "seek": 370032, "start": 3710.04, "end": 3713.92, "text": " of code that is written in a specific way.", "tokens": [295, 3089, 300, 307, 3720, 294, 257, 2685, 636, 13], "temperature": 0.0, "avg_logprob": -0.2869421801989592, "compression_ratio": 1.5435897435897437, "no_speech_prob": 4.2469696381886024e-07}, {"id": 949, "seek": 370032, "start": 3713.92, "end": 3716.8, "text": " And it could go higher, probably.", "tokens": [400, 309, 727, 352, 2946, 11, 1391, 13], "temperature": 0.0, "avg_logprob": -0.2869421801989592, "compression_ratio": 1.5435897435897437, "no_speech_prob": 4.2469696381886024e-07}, {"id": 950, "seek": 370032, "start": 3716.8, "end": 3723.6000000000004, "text": " Like you want all our functions to be named in a very similar way, for instance, but that's", "tokens": [1743, 291, 528, 439, 527, 6828, 281, 312, 4926, 294, 257, 588, 2531, 636, 11, 337, 5197, 11, 457, 300, 311], "temperature": 0.0, "avg_logprob": -0.2869421801989592, "compression_ratio": 1.5435897435897437, "no_speech_prob": 4.2469696381886024e-07}, {"id": 951, "seek": 370032, "start": 3723.6000000000004, "end": 3726.0800000000004, "text": " probably a bit too hard for a linter.", "tokens": [1391, 257, 857, 886, 1152, 337, 257, 287, 5106, 13], "temperature": 0.0, "avg_logprob": -0.2869421801989592, "compression_ratio": 1.5435897435897437, "no_speech_prob": 4.2469696381886024e-07}, {"id": 952, "seek": 372608, "start": 3726.08, "end": 3730.48, "text": " An AI would always tell you different things, and we don't want that.", "tokens": [1107, 7318, 576, 1009, 980, 291, 819, 721, 11, 293, 321, 500, 380, 528, 300, 13], "temperature": 0.0, "avg_logprob": -0.24729109677401456, "compression_ratio": 1.6390041493775933, "no_speech_prob": 5.771884389105253e-06}, {"id": 953, "seek": 372608, "start": 3730.48, "end": 3736.68, "text": " So we need these to be trustworthy and consistent in the sense that it doesn't give you different", "tokens": [407, 321, 643, 613, 281, 312, 39714, 293, 8398, 294, 264, 2020, 300, 309, 1177, 380, 976, 291, 819], "temperature": 0.0, "avg_logprob": -0.24729109677401456, "compression_ratio": 1.6390041493775933, "no_speech_prob": 5.771884389105253e-06}, {"id": 954, "seek": 372608, "start": 3736.68, "end": 3738.48, "text": " results every time.", "tokens": [3542, 633, 565, 13], "temperature": 0.0, "avg_logprob": -0.24729109677401456, "compression_ratio": 1.6390041493775933, "no_speech_prob": 5.771884389105253e-06}, {"id": 955, "seek": 372608, "start": 3738.48, "end": 3739.48, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.24729109677401456, "compression_ratio": 1.6390041493775933, "no_speech_prob": 5.771884389105253e-06}, {"id": 956, "seek": 372608, "start": 3739.48, "end": 3742.84, "text": " And the lower level the task, the more we can trust it.", "tokens": [400, 264, 3126, 1496, 264, 5633, 11, 264, 544, 321, 393, 3361, 309, 13], "temperature": 0.0, "avg_logprob": -0.24729109677401456, "compression_ratio": 1.6390041493775933, "no_speech_prob": 5.771884389105253e-06}, {"id": 957, "seek": 372608, "start": 3742.84, "end": 3747.7599999999998, "text": " Just like Elm types, because the type system is so simple, it's easy to trust it.", "tokens": [1449, 411, 2699, 76, 3467, 11, 570, 264, 2010, 1185, 307, 370, 2199, 11, 309, 311, 1858, 281, 3361, 309, 13], "temperature": 0.0, "avg_logprob": -0.24729109677401456, "compression_ratio": 1.6390041493775933, "no_speech_prob": 5.771884389105253e-06}, {"id": 958, "seek": 372608, "start": 3747.7599999999998, "end": 3752.04, "text": " Whereas TypeScript, it's so permissive, it's hard to trust it.", "tokens": [13813, 15576, 14237, 11, 309, 311, 370, 4784, 891, 488, 11, 309, 311, 1152, 281, 3361, 309, 13], "temperature": 0.0, "avg_logprob": -0.24729109677401456, "compression_ratio": 1.6390041493775933, "no_speech_prob": 5.771884389105253e-06}, {"id": 959, "seek": 375204, "start": 3752.04, "end": 3759.12, "text": " And there are so many caveats and exceptions that it's hard to trust such a complex and", "tokens": [400, 456, 366, 370, 867, 11730, 1720, 293, 22847, 300, 309, 311, 1152, 281, 3361, 1270, 257, 3997, 293], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 960, "seek": 375204, "start": 3759.12, "end": 3760.12, "text": " permissive system.", "tokens": [4784, 891, 488, 1185, 13], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 961, "seek": 375204, "start": 3760.12, "end": 3761.12, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 962, "seek": 375204, "start": 3761.12, "end": 3764.88, "text": " So I do think that this might be a superpower of Elm.", "tokens": [407, 286, 360, 519, 300, 341, 1062, 312, 257, 45765, 295, 2699, 76, 13], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 963, "seek": 375204, "start": 3764.88, "end": 3770.84, "text": " And honestly, I think that maybe this could be a really appealing thing about Elm that", "tokens": [400, 6095, 11, 286, 519, 300, 1310, 341, 727, 312, 257, 534, 23842, 551, 466, 2699, 76, 300], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 964, "seek": 375204, "start": 3770.84, "end": 3773.12, "text": " makes it more mainstream.", "tokens": [1669, 309, 544, 15960, 13], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 965, "seek": 375204, "start": 3773.12, "end": 3779.6, "text": " That, wow, this language, it turns out it's really good for automating and tooling.", "tokens": [663, 11, 6076, 11, 341, 2856, 11, 309, 4523, 484, 309, 311, 534, 665, 337, 3553, 990, 293, 46593, 13], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 966, "seek": 375204, "start": 3779.6, "end": 3781.08, "text": " And you know what?", "tokens": [400, 291, 458, 437, 30], "temperature": 0.0, "avg_logprob": -0.22910438393646815, "compression_ratio": 1.578512396694215, "no_speech_prob": 3.187516540492652e-06}, {"id": 967, "seek": 378108, "start": 3781.08, "end": 3784.2799999999997, "text": " Automating and tooling is really hot these days because people are building all sorts", "tokens": [24619, 990, 293, 46593, 307, 534, 2368, 613, 1708, 570, 561, 366, 2390, 439, 7527], "temperature": 0.0, "avg_logprob": -0.27245875767299105, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.241134486917872e-05}, {"id": 968, "seek": 378108, "start": 3784.2799999999997, "end": 3785.96, "text": " of AI automation.", "tokens": [295, 7318, 17769, 13], "temperature": 0.0, "avg_logprob": -0.27245875767299105, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.241134486917872e-05}, {"id": 969, "seek": 378108, "start": 3785.96, "end": 3791.04, "text": " And we can have trusted AI automation.", "tokens": [400, 321, 393, 362, 16034, 7318, 17769, 13], "temperature": 0.0, "avg_logprob": -0.27245875767299105, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.241134486917872e-05}, {"id": 970, "seek": 378108, "start": 3791.04, "end": 3796.6, "text": " So I think we're at this early stage where people are just sort of letting AI just write", "tokens": [407, 286, 519, 321, 434, 412, 341, 2440, 3233, 689, 561, 366, 445, 1333, 295, 8295, 7318, 445, 2464], "temperature": 0.0, "avg_logprob": -0.27245875767299105, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.241134486917872e-05}, {"id": 971, "seek": 378108, "start": 3796.6, "end": 3799.2, "text": " their code, which is kind of crazy.", "tokens": [641, 3089, 11, 597, 307, 733, 295, 3219, 13], "temperature": 0.0, "avg_logprob": -0.27245875767299105, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.241134486917872e-05}, {"id": 972, "seek": 378108, "start": 3799.2, "end": 3803.08, "text": " They're letting AI just execute shell commands for them.", "tokens": [814, 434, 8295, 7318, 445, 14483, 8720, 16901, 337, 552, 13], "temperature": 0.0, "avg_logprob": -0.27245875767299105, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.241134486917872e-05}, {"id": 973, "seek": 378108, "start": 3803.08, "end": 3808.12, "text": " I saw a recent thing where somebody like...", "tokens": [286, 1866, 257, 5162, 551, 689, 2618, 411, 485], "temperature": 0.0, "avg_logprob": -0.27245875767299105, "compression_ratio": 1.6502242152466369, "no_speech_prob": 1.241134486917872e-05}, {"id": 974, "seek": 380812, "start": 3808.12, "end": 3813.64, "text": " We all knew it was going to happen when you start letting AI just fill in commands in", "tokens": [492, 439, 2586, 309, 390, 516, 281, 1051, 562, 291, 722, 8295, 7318, 445, 2836, 294, 16901, 294], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 975, "seek": 380812, "start": 3813.64, "end": 3814.64, "text": " your shell.", "tokens": [428, 8720, 13], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 976, "seek": 380812, "start": 3814.64, "end": 3820.24, "text": " But somebody basically like RMRFed their drive or broke their computer and are trying to", "tokens": [583, 2618, 1936, 411, 23790, 49, 37, 292, 641, 3332, 420, 6902, 641, 3820, 293, 366, 1382, 281], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 977, "seek": 380812, "start": 3820.24, "end": 3821.56, "text": " fix it.", "tokens": [3191, 309, 13], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 978, "seek": 380812, "start": 3821.56, "end": 3822.6, "text": " We all knew it was going to happen.", "tokens": [492, 439, 2586, 309, 390, 516, 281, 1051, 13], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 979, "seek": 380812, "start": 3822.6, "end": 3824.7599999999998, "text": " It's kind of a crazy state of things, right?", "tokens": [467, 311, 733, 295, 257, 3219, 1785, 295, 721, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 980, "seek": 380812, "start": 3824.7599999999998, "end": 3830.7799999999997, "text": " But if we can have tools that we can really trust and not have to worry about it doing", "tokens": [583, 498, 321, 393, 362, 3873, 300, 321, 393, 534, 3361, 293, 406, 362, 281, 3292, 466, 309, 884], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 981, "seek": 380812, "start": 3830.7799999999997, "end": 3835.68, "text": " anything that's going to put things in a bad state or go beyond the scope of what we're", "tokens": [1340, 300, 311, 516, 281, 829, 721, 294, 257, 1578, 1785, 420, 352, 4399, 264, 11923, 295, 437, 321, 434], "temperature": 0.0, "avg_logprob": -0.22317401568094888, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.6536453131266171e-06}, {"id": 982, "seek": 383568, "start": 3835.68, "end": 3841.68, "text": " trying to do, just like perfectly reliably solve a difficult problem that we can now", "tokens": [1382, 281, 360, 11, 445, 411, 6239, 49927, 5039, 257, 2252, 1154, 300, 321, 393, 586], "temperature": 0.0, "avg_logprob": -0.23966227520953168, "compression_ratio": 1.508849557522124, "no_speech_prob": 1.003010879685462e-06}, {"id": 983, "seek": 383568, "start": 3841.68, "end": 3843.44, "text": " take for granted.", "tokens": [747, 337, 12344, 13], "temperature": 0.0, "avg_logprob": -0.23966227520953168, "compression_ratio": 1.508849557522124, "no_speech_prob": 1.003010879685462e-06}, {"id": 984, "seek": 383568, "start": 3843.44, "end": 3844.44, "text": " That's awesome.", "tokens": [663, 311, 3476, 13], "temperature": 0.0, "avg_logprob": -0.23966227520953168, "compression_ratio": 1.508849557522124, "no_speech_prob": 1.003010879685462e-06}, {"id": 985, "seek": 383568, "start": 3844.44, "end": 3846.64, "text": " And I think Elm is a really good fit for that.", "tokens": [400, 286, 519, 2699, 76, 307, 257, 534, 665, 3318, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.23966227520953168, "compression_ratio": 1.508849557522124, "no_speech_prob": 1.003010879685462e-06}, {"id": 986, "seek": 383568, "start": 3846.64, "end": 3847.64, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.23966227520953168, "compression_ratio": 1.508849557522124, "no_speech_prob": 1.003010879685462e-06}, {"id": 987, "seek": 383568, "start": 3847.64, "end": 3853.2799999999997, "text": " I've also heard the opposite point of view where this could be pretty bad for Elm or", "tokens": [286, 600, 611, 2198, 264, 6182, 935, 295, 1910, 689, 341, 727, 312, 1238, 1578, 337, 2699, 76, 420], "temperature": 0.0, "avg_logprob": -0.23966227520953168, "compression_ratio": 1.508849557522124, "no_speech_prob": 1.003010879685462e-06}, {"id": 988, "seek": 383568, "start": 3853.2799999999997, "end": 3861.3799999999997, "text": " for smaller languages in the sense that the AI is trained on code that is available.", "tokens": [337, 4356, 8650, 294, 264, 2020, 300, 264, 7318, 307, 8895, 322, 3089, 300, 307, 2435, 13], "temperature": 0.0, "avg_logprob": -0.23966227520953168, "compression_ratio": 1.508849557522124, "no_speech_prob": 1.003010879685462e-06}, {"id": 989, "seek": 386138, "start": 3861.38, "end": 3866.08, "text": " And there's not a lot of Elm code out there compared to more mainstream languages like", "tokens": [400, 456, 311, 406, 257, 688, 295, 2699, 76, 3089, 484, 456, 5347, 281, 544, 15960, 8650, 411], "temperature": 0.0, "avg_logprob": -0.22691248843544407, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.3405058275093324e-06}, {"id": 990, "seek": 386138, "start": 3866.08, "end": 3867.96, "text": " JavaScript.", "tokens": [15778, 13], "temperature": 0.0, "avg_logprob": -0.22691248843544407, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.3405058275093324e-06}, {"id": 991, "seek": 386138, "start": 3867.96, "end": 3875.36, "text": " So this could make adoption of new languages harder or smaller languages in general.", "tokens": [407, 341, 727, 652, 19215, 295, 777, 8650, 6081, 420, 4356, 8650, 294, 2674, 13], "temperature": 0.0, "avg_logprob": -0.22691248843544407, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.3405058275093324e-06}, {"id": 992, "seek": 386138, "start": 3875.36, "end": 3882.44, "text": " But as you said, if there are guarantees like the ones that Elm provides, that can even", "tokens": [583, 382, 291, 848, 11, 498, 456, 366, 32567, 411, 264, 2306, 300, 2699, 76, 6417, 11, 300, 393, 754], "temperature": 0.0, "avg_logprob": -0.22691248843544407, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.3405058275093324e-06}, {"id": 993, "seek": 386138, "start": 3882.44, "end": 3884.8, "text": " out the playing field.", "tokens": [484, 264, 2433, 2519, 13], "temperature": 0.0, "avg_logprob": -0.22691248843544407, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.3405058275093324e-06}, {"id": 994, "seek": 386138, "start": 3884.8, "end": 3889.36, "text": " But if you're designing a language that doesn't have the same guarantees as Elm, and it's", "tokens": [583, 498, 291, 434, 14685, 257, 2856, 300, 1177, 380, 362, 264, 912, 32567, 382, 2699, 76, 11, 293, 309, 311], "temperature": 0.0, "avg_logprob": -0.22691248843544407, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.3405058275093324e-06}, {"id": 995, "seek": 388936, "start": 3889.36, "end": 3895.6800000000003, "text": " just very new or very small, then you get kind of the worst of both worlds.", "tokens": [445, 588, 777, 420, 588, 1359, 11, 550, 291, 483, 733, 295, 264, 5855, 295, 1293, 13401, 13], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 996, "seek": 388936, "start": 3895.6800000000003, "end": 3896.6800000000003, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 997, "seek": 388936, "start": 3896.6800000000003, "end": 3900.04, "text": " And this all depends on writing the tooling, right?", "tokens": [400, 341, 439, 5946, 322, 3579, 264, 46593, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 998, "seek": 388936, "start": 3900.04, "end": 3907.08, "text": " And so I think we have an opportunity to build really cool stuff leveraging these techniques", "tokens": [400, 370, 286, 519, 321, 362, 364, 2650, 281, 1322, 534, 1627, 1507, 32666, 613, 7512], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 999, "seek": 388936, "start": 3907.08, "end": 3908.08, "text": " right now.", "tokens": [558, 586, 13], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 1000, "seek": 388936, "start": 3908.08, "end": 3910.84, "text": " So I'm definitely going to be playing around with that.", "tokens": [407, 286, 478, 2138, 516, 281, 312, 2433, 926, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 1001, "seek": 388936, "start": 3910.84, "end": 3912.7200000000003, "text": " Like I've got a lot of ideas.", "tokens": [1743, 286, 600, 658, 257, 688, 295, 3487, 13], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 1002, "seek": 388936, "start": 3912.7200000000003, "end": 3917.96, "text": " I want to make this sort of automated type puzzle solver.", "tokens": [286, 528, 281, 652, 341, 1333, 295, 18473, 2010, 12805, 1404, 331, 13], "temperature": 0.0, "avg_logprob": -0.2322533364389457, "compression_ratio": 1.5403225806451613, "no_speech_prob": 3.3930771223822376e-06}, {"id": 1003, "seek": 391796, "start": 3917.96, "end": 3925.04, "text": " I think, you know, having it build JSON decoders starts to become really interesting where", "tokens": [286, 519, 11, 291, 458, 11, 1419, 309, 1322, 31828, 979, 378, 433, 3719, 281, 1813, 534, 1880, 689], "temperature": 0.0, "avg_logprob": -0.270999323238026, "compression_ratio": 1.560747663551402, "no_speech_prob": 8.939435247157235e-06}, {"id": 1004, "seek": 391796, "start": 3925.04, "end": 3931.2400000000002, "text": " like Mario and I were working on this Elm HTTP fusion thing, which is really cool for", "tokens": [411, 9343, 293, 286, 645, 1364, 322, 341, 2699, 76, 33283, 23100, 551, 11, 597, 307, 534, 1627, 337], "temperature": 0.0, "avg_logprob": -0.270999323238026, "compression_ratio": 1.560747663551402, "no_speech_prob": 8.939435247157235e-06}, {"id": 1005, "seek": 391796, "start": 3931.2400000000002, "end": 3939.12, "text": " like having a UI where you make an HTTP request, and then you can sort of click the JSON fields", "tokens": [411, 1419, 257, 15682, 689, 291, 652, 364, 33283, 5308, 11, 293, 550, 291, 393, 1333, 295, 2052, 264, 31828, 7909], "temperature": 0.0, "avg_logprob": -0.270999323238026, "compression_ratio": 1.560747663551402, "no_speech_prob": 8.939435247157235e-06}, {"id": 1006, "seek": 391796, "start": 3939.12, "end": 3941.32, "text": " you want and it generates a decoder.", "tokens": [291, 528, 293, 309, 23815, 257, 979, 19866, 13], "temperature": 0.0, "avg_logprob": -0.270999323238026, "compression_ratio": 1.560747663551402, "no_speech_prob": 8.939435247157235e-06}, {"id": 1007, "seek": 391796, "start": 3941.32, "end": 3942.76, "text": " It's like, that's great.", "tokens": [467, 311, 411, 11, 300, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.270999323238026, "compression_ratio": 1.560747663551402, "no_speech_prob": 8.939435247157235e-06}, {"id": 1008, "seek": 394276, "start": 3942.76, "end": 3949.6000000000004, "text": " But what if you can tell it the type you want and it can figure out what fields to get and", "tokens": [583, 437, 498, 291, 393, 980, 309, 264, 2010, 291, 528, 293, 309, 393, 2573, 484, 437, 7909, 281, 483, 293], "temperature": 0.0, "avg_logprob": -0.20989892289445206, "compression_ratio": 1.7576923076923077, "no_speech_prob": 2.1567980184045155e-06}, {"id": 1009, "seek": 394276, "start": 3949.6000000000004, "end": 3955.0, "text": " generate something that is provably correct because you actually ran it and verified it,", "tokens": [8460, 746, 300, 307, 1439, 1188, 3006, 570, 291, 767, 5872, 309, 293, 31197, 309, 11], "temperature": 0.0, "avg_logprob": -0.20989892289445206, "compression_ratio": 1.7576923076923077, "no_speech_prob": 2.1567980184045155e-06}, {"id": 1010, "seek": 394276, "start": 3955.0, "end": 3958.4, "text": " and then you can fully trust it, but it just solves your problem.", "tokens": [293, 550, 291, 393, 4498, 3361, 309, 11, 457, 309, 445, 39890, 428, 1154, 13], "temperature": 0.0, "avg_logprob": -0.20989892289445206, "compression_ratio": 1.7576923076923077, "no_speech_prob": 2.1567980184045155e-06}, {"id": 1011, "seek": 394276, "start": 3958.4, "end": 3963.76, "text": " And it sort of can solve that last mile problem where like, there are so many things I've", "tokens": [400, 309, 1333, 295, 393, 5039, 300, 1036, 12620, 1154, 689, 411, 11, 456, 366, 370, 867, 721, 286, 600], "temperature": 0.0, "avg_logprob": -0.20989892289445206, "compression_ratio": 1.7576923076923077, "no_speech_prob": 2.1567980184045155e-06}, {"id": 1012, "seek": 394276, "start": 3963.76, "end": 3969.36, "text": " been trying to automate where it's difficult to do that last little piece of the puzzle", "tokens": [668, 1382, 281, 31605, 689, 309, 311, 2252, 281, 360, 300, 1036, 707, 2522, 295, 264, 12805], "temperature": 0.0, "avg_logprob": -0.20989892289445206, "compression_ratio": 1.7576923076923077, "no_speech_prob": 2.1567980184045155e-06}, {"id": 1013, "seek": 394276, "start": 3969.36, "end": 3971.78, "text": " and AI can do that missing piece.", "tokens": [293, 7318, 393, 360, 300, 5361, 2522, 13], "temperature": 0.0, "avg_logprob": -0.20989892289445206, "compression_ratio": 1.7576923076923077, "no_speech_prob": 2.1567980184045155e-06}, {"id": 1014, "seek": 397178, "start": 3971.78, "end": 3975.52, "text": " So I think this unlocks some really cool things.", "tokens": [407, 286, 519, 341, 517, 34896, 512, 534, 1627, 721, 13], "temperature": 0.0, "avg_logprob": -0.21411899455542704, "compression_ratio": 1.6437768240343347, "no_speech_prob": 1.3925251778346137e-06}, {"id": 1015, "seek": 397178, "start": 3975.52, "end": 3979.6800000000003, "text": " I've been thinking about like some other use cases I'm thinking about are like, so for", "tokens": [286, 600, 668, 1953, 466, 411, 512, 661, 764, 3331, 286, 478, 1953, 466, 366, 411, 11, 370, 337], "temperature": 0.0, "avg_logprob": -0.21411899455542704, "compression_ratio": 1.6437768240343347, "no_speech_prob": 1.3925251778346137e-06}, {"id": 1016, "seek": 397178, "start": 3979.6800000000003, "end": 3985.2000000000003, "text": " example, like with Elm GraphQL, you know, we've talked with Matt about Elm GQL, which", "tokens": [1365, 11, 411, 365, 2699, 76, 21884, 13695, 11, 291, 458, 11, 321, 600, 2825, 365, 7397, 466, 2699, 76, 460, 13695, 11, 597], "temperature": 0.0, "avg_logprob": -0.21411899455542704, "compression_ratio": 1.6437768240343347, "no_speech_prob": 1.3925251778346137e-06}, {"id": 1017, "seek": 397178, "start": 3985.2000000000003, "end": 3992.84, "text": " sort of tries to be a simpler way of just taking a raw GraphQL query as a string.", "tokens": [1333, 295, 9898, 281, 312, 257, 18587, 636, 295, 445, 1940, 257, 8936, 21884, 13695, 14581, 382, 257, 6798, 13], "temperature": 0.0, "avg_logprob": -0.21411899455542704, "compression_ratio": 1.6437768240343347, "no_speech_prob": 1.3925251778346137e-06}, {"id": 1018, "seek": 397178, "start": 3992.84, "end": 3999.84, "text": " And it's very easy to interact with GraphQL APIs through this raw query string.", "tokens": [400, 309, 311, 588, 1858, 281, 4648, 365, 21884, 13695, 21445, 807, 341, 8936, 14581, 6798, 13], "temperature": 0.0, "avg_logprob": -0.21411899455542704, "compression_ratio": 1.6437768240343347, "no_speech_prob": 1.3925251778346137e-06}, {"id": 1019, "seek": 399984, "start": 3999.84, "end": 4005.0, "text": " And then it can generate type aliases for you of the response you get, and you just", "tokens": [400, 550, 309, 393, 8460, 2010, 10198, 1957, 337, 291, 295, 264, 4134, 291, 483, 11, 293, 291, 445], "temperature": 0.0, "avg_logprob": -0.19956635039986917, "compression_ratio": 1.6533333333333333, "no_speech_prob": 7.224405180750182e-07}, {"id": 1020, "seek": 399984, "start": 4005.0, "end": 4012.4, "text": " paste in your GraphQL query string and it spits out some Elm code to execute that query.", "tokens": [9163, 294, 428, 21884, 13695, 14581, 6798, 293, 309, 637, 1208, 484, 512, 2699, 76, 3089, 281, 14483, 300, 14581, 13], "temperature": 0.0, "avg_logprob": -0.19956635039986917, "compression_ratio": 1.6533333333333333, "no_speech_prob": 7.224405180750182e-07}, {"id": 1021, "seek": 399984, "start": 4012.4, "end": 4017.44, "text": " And the trade off with that approach in Elm GQL versus Elm GraphQL, as we talked about", "tokens": [400, 264, 4923, 766, 365, 300, 3109, 294, 2699, 76, 460, 13695, 5717, 2699, 76, 21884, 13695, 11, 382, 321, 2825, 466], "temperature": 0.0, "avg_logprob": -0.19956635039986917, "compression_ratio": 1.6533333333333333, "no_speech_prob": 7.224405180750182e-07}, {"id": 1022, "seek": 399984, "start": 4017.44, "end": 4025.04, "text": " in our Elm GQL episode is with Elm GraphQL, you have to explicitly write everything you're", "tokens": [294, 527, 2699, 76, 460, 13695, 3500, 307, 365, 2699, 76, 21884, 13695, 11, 291, 362, 281, 20803, 2464, 1203, 291, 434], "temperature": 0.0, "avg_logprob": -0.19956635039986917, "compression_ratio": 1.6533333333333333, "no_speech_prob": 7.224405180750182e-07}, {"id": 1023, "seek": 399984, "start": 4025.04, "end": 4027.56, "text": " decoding in Elm code.", "tokens": [979, 8616, 294, 2699, 76, 3089, 13], "temperature": 0.0, "avg_logprob": -0.19956635039986917, "compression_ratio": 1.6533333333333333, "no_speech_prob": 7.224405180750182e-07}, {"id": 1024, "seek": 402756, "start": 4027.56, "end": 4032.7599999999998, "text": " But you can maintain it in Elm code and you get more fine grained control over the types", "tokens": [583, 291, 393, 6909, 309, 294, 2699, 76, 3089, 293, 291, 483, 544, 2489, 1295, 2001, 1969, 670, 264, 3467], "temperature": 0.0, "avg_logprob": -0.22156481398749597, "compression_ratio": 1.806282722513089, "no_speech_prob": 4.3818400285999815e-07}, {"id": 1025, "seek": 402756, "start": 4032.7599999999998, "end": 4034.6, "text": " you decode into.", "tokens": [291, 979, 1429, 666, 13], "temperature": 0.0, "avg_logprob": -0.22156481398749597, "compression_ratio": 1.806282722513089, "no_speech_prob": 4.3818400285999815e-07}, {"id": 1026, "seek": 402756, "start": 4034.6, "end": 4036.52, "text": " So there's a trade off.", "tokens": [407, 456, 311, 257, 4923, 766, 13], "temperature": 0.0, "avg_logprob": -0.22156481398749597, "compression_ratio": 1.806282722513089, "no_speech_prob": 4.3818400285999815e-07}, {"id": 1027, "seek": 402756, "start": 4036.52, "end": 4044.56, "text": " But what if you had a tool that generated an Elm GraphQL query, you get complete control", "tokens": [583, 437, 498, 291, 632, 257, 2290, 300, 10833, 364, 2699, 76, 21884, 13695, 14581, 11, 291, 483, 3566, 1969], "temperature": 0.0, "avg_logprob": -0.22156481398749597, "compression_ratio": 1.806282722513089, "no_speech_prob": 4.3818400285999815e-07}, {"id": 1028, "seek": 402756, "start": 4044.56, "end": 4051.08, "text": " over the fine grained code and that you decode into, but what if you could just tell an AI", "tokens": [670, 264, 2489, 1295, 2001, 3089, 293, 300, 291, 979, 1429, 666, 11, 457, 437, 498, 291, 727, 445, 980, 364, 7318], "temperature": 0.0, "avg_logprob": -0.22156481398749597, "compression_ratio": 1.806282722513089, "no_speech_prob": 4.3818400285999815e-07}, {"id": 1029, "seek": 402756, "start": 4051.08, "end": 4053.92, "text": " tool generate an Elm GraphQL query.", "tokens": [2290, 8460, 364, 2699, 76, 21884, 13695, 14581, 13], "temperature": 0.0, "avg_logprob": -0.22156481398749597, "compression_ratio": 1.806282722513089, "no_speech_prob": 4.3818400285999815e-07}, {"id": 1030, "seek": 405392, "start": 4053.92, "end": 4059.96, "text": " And using this sort of type puzzle solver I built, I can say here are all the functions", "tokens": [400, 1228, 341, 1333, 295, 2010, 12805, 1404, 331, 286, 3094, 11, 286, 393, 584, 510, 366, 439, 264, 6828], "temperature": 0.0, "avg_logprob": -0.24012149810791017, "compression_ratio": 1.6266666666666667, "no_speech_prob": 3.989707124674169e-07}, {"id": 1031, "seek": 405392, "start": 4059.96, "end": 4064.56, "text": " for generating Elm GraphQL types, solve this problem.", "tokens": [337, 17746, 2699, 76, 21884, 13695, 3467, 11, 5039, 341, 1154, 13], "temperature": 0.0, "avg_logprob": -0.24012149810791017, "compression_ratio": 1.6266666666666667, "no_speech_prob": 3.989707124674169e-07}, {"id": 1032, "seek": 405392, "start": 4064.56, "end": 4066.64, "text": " And here's the raw GraphQL query.", "tokens": [400, 510, 311, 264, 8936, 21884, 13695, 14581, 13], "temperature": 0.0, "avg_logprob": -0.24012149810791017, "compression_ratio": 1.6266666666666667, "no_speech_prob": 3.989707124674169e-07}, {"id": 1033, "seek": 405392, "start": 4066.64, "end": 4070.16, "text": " And here is the resulting Elm type I want.", "tokens": [400, 510, 307, 264, 16505, 2699, 76, 2010, 286, 528, 13], "temperature": 0.0, "avg_logprob": -0.24012149810791017, "compression_ratio": 1.6266666666666667, "no_speech_prob": 3.989707124674169e-07}, {"id": 1034, "seek": 405392, "start": 4070.16, "end": 4074.1, "text": " And it could, I think it could solve that pretty well.", "tokens": [400, 309, 727, 11, 286, 519, 309, 727, 5039, 300, 1238, 731, 13], "temperature": 0.0, "avg_logprob": -0.24012149810791017, "compression_ratio": 1.6266666666666667, "no_speech_prob": 3.989707124674169e-07}, {"id": 1035, "seek": 405392, "start": 4074.1, "end": 4080.6, "text": " So some of these tools become more interesting when you have that extra bit of glue from", "tokens": [407, 512, 295, 613, 3873, 1813, 544, 1880, 562, 291, 362, 300, 2857, 857, 295, 8998, 490], "temperature": 0.0, "avg_logprob": -0.24012149810791017, "compression_ratio": 1.6266666666666667, "no_speech_prob": 3.989707124674169e-07}, {"id": 1036, "seek": 405392, "start": 4080.6, "end": 4081.8, "text": " AI.", "tokens": [7318, 13], "temperature": 0.0, "avg_logprob": -0.24012149810791017, "compression_ratio": 1.6266666666666667, "no_speech_prob": 3.989707124674169e-07}, {"id": 1037, "seek": 408180, "start": 4081.8, "end": 4087.2000000000003, "text": " And that would solve all of Elm's problems because all of Elm's problems are boilerplate.", "tokens": [400, 300, 576, 5039, 439, 295, 2699, 76, 311, 2740, 570, 439, 295, 2699, 76, 311, 2740, 366, 39228, 37008, 13], "temperature": 0.0, "avg_logprob": -0.22441029098798643, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.457968548696954e-07}, {"id": 1038, "seek": 408180, "start": 4087.2000000000003, "end": 4088.2000000000003, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.22441029098798643, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.457968548696954e-07}, {"id": 1039, "seek": 408180, "start": 4088.2000000000003, "end": 4092.1600000000003, "text": " It's boilerplate that's really easy to maintain once you have it.", "tokens": [467, 311, 39228, 37008, 300, 311, 534, 1858, 281, 6909, 1564, 291, 362, 309, 13], "temperature": 0.0, "avg_logprob": -0.22441029098798643, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.457968548696954e-07}, {"id": 1040, "seek": 408180, "start": 4092.1600000000003, "end": 4097.400000000001, "text": " So if it's very easy to confidently write boilerplate, then yeah, Elm becomes a lot", "tokens": [407, 498, 309, 311, 588, 1858, 281, 41956, 2464, 39228, 37008, 11, 550, 1338, 11, 2699, 76, 3643, 257, 688], "temperature": 0.0, "avg_logprob": -0.22441029098798643, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.457968548696954e-07}, {"id": 1041, "seek": 408180, "start": 4097.400000000001, "end": 4098.72, "text": " more exciting.", "tokens": [544, 4670, 13], "temperature": 0.0, "avg_logprob": -0.22441029098798643, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.457968548696954e-07}, {"id": 1042, "seek": 408180, "start": 4098.72, "end": 4104.6, "text": " If we take your last example, it does mean that you redo the same logic every time and", "tokens": [759, 321, 747, 428, 1036, 1365, 11, 309, 775, 914, 300, 291, 29956, 264, 912, 9952, 633, 565, 293], "temperature": 0.0, "avg_logprob": -0.22441029098798643, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.457968548696954e-07}, {"id": 1043, "seek": 408180, "start": 4104.6, "end": 4111.28, "text": " not necessarily in a framework or library oriented way.", "tokens": [406, 4725, 294, 257, 8388, 420, 6405, 21841, 636, 13], "temperature": 0.0, "avg_logprob": -0.22441029098798643, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.457968548696954e-07}, {"id": 1044, "seek": 411128, "start": 4111.28, "end": 4119.48, "text": " So you would redo, you would inline the creation of the GraphQL query and decoding those instead", "tokens": [407, 291, 576, 29956, 11, 291, 576, 294, 1889, 264, 8016, 295, 264, 21884, 13695, 14581, 293, 979, 8616, 729, 2602], "temperature": 0.0, "avg_logprob": -0.26783699325368376, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.248265562026063e-06}, {"id": 1045, "seek": 411128, "start": 4119.48, "end": 4125.599999999999, "text": " of using a pre-made library, which simplifies the API for that.", "tokens": [295, 1228, 257, 659, 12, 10341, 6405, 11, 597, 6883, 11221, 264, 9362, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.26783699325368376, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.248265562026063e-06}, {"id": 1046, "seek": 411128, "start": 4125.599999999999, "end": 4128.4, "text": " But it could be very interesting nonetheless.", "tokens": [583, 309, 727, 312, 588, 1880, 26756, 13], "temperature": 0.0, "avg_logprob": -0.26783699325368376, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.248265562026063e-06}, {"id": 1047, "seek": 411128, "start": 4128.4, "end": 4129.4, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.26783699325368376, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.248265562026063e-06}, {"id": 1048, "seek": 411128, "start": 4129.4, "end": 4130.4, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.26783699325368376, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.248265562026063e-06}, {"id": 1049, "seek": 411128, "start": 4130.4, "end": 4136.5199999999995, "text": " I think part of the challenge right now to using these tools effectively is like defining", "tokens": [286, 519, 644, 295, 264, 3430, 558, 586, 281, 1228, 613, 3873, 8659, 307, 411, 17827], "temperature": 0.0, "avg_logprob": -0.26783699325368376, "compression_ratio": 1.4736842105263157, "no_speech_prob": 1.248265562026063e-06}, {"id": 1050, "seek": 413652, "start": 4136.52, "end": 4142.0, "text": " the problems and the workflows to leverage these as much as possible.", "tokens": [264, 2740, 293, 264, 43461, 281, 13982, 613, 382, 709, 382, 1944, 13], "temperature": 0.0, "avg_logprob": -0.2672464655733657, "compression_ratio": 1.5700934579439252, "no_speech_prob": 3.844901129923528e-06}, {"id": 1051, "seek": 413652, "start": 4142.0, "end": 4145.040000000001, "text": " Another thing on my mind here is like refactoring.", "tokens": [3996, 551, 322, 452, 1575, 510, 307, 411, 1895, 578, 3662, 13], "temperature": 0.0, "avg_logprob": -0.2672464655733657, "compression_ratio": 1.5700934579439252, "no_speech_prob": 3.844901129923528e-06}, {"id": 1052, "seek": 413652, "start": 4145.040000000001, "end": 4153.6, "text": " So we have, you know, if you build in an IntelliJ refactoring for like extracting a function", "tokens": [407, 321, 362, 11, 291, 458, 11, 498, 291, 1322, 294, 364, 18762, 72, 41, 1895, 578, 3662, 337, 411, 49844, 257, 2445], "temperature": 0.0, "avg_logprob": -0.2672464655733657, "compression_ratio": 1.5700934579439252, "no_speech_prob": 3.844901129923528e-06}, {"id": 1053, "seek": 413652, "start": 4153.6, "end": 4161.0, "text": " to a module, like what kinds of refactoring should we invest in building in like IDEs", "tokens": [281, 257, 10088, 11, 411, 437, 3685, 295, 1895, 578, 3662, 820, 321, 1963, 294, 2390, 294, 411, 7348, 20442], "temperature": 0.0, "avg_logprob": -0.2672464655733657, "compression_ratio": 1.5700934579439252, "no_speech_prob": 3.844901129923528e-06}, {"id": 1054, "seek": 413652, "start": 4161.0, "end": 4164.080000000001, "text": " or language servers versus using AI?", "tokens": [420, 2856, 15909, 5717, 1228, 7318, 30], "temperature": 0.0, "avg_logprob": -0.2672464655733657, "compression_ratio": 1.5700934579439252, "no_speech_prob": 3.844901129923528e-06}, {"id": 1055, "seek": 416408, "start": 4164.08, "end": 4173.72, "text": " I mean, we could also just ask an AI to write those things to be integrated into the ID", "tokens": [286, 914, 11, 321, 727, 611, 445, 1029, 364, 7318, 281, 2464, 729, 721, 281, 312, 10919, 666, 264, 7348], "temperature": 0.0, "avg_logprob": -0.29279251098632814, "compression_ratio": 1.649746192893401, "no_speech_prob": 1.6893439180876157e-07}, {"id": 1056, "seek": 416408, "start": 4173.72, "end": 4174.72, "text": " for instance.", "tokens": [337, 5197, 13], "temperature": 0.0, "avg_logprob": -0.29279251098632814, "compression_ratio": 1.649746192893401, "no_speech_prob": 1.6893439180876157e-07}, {"id": 1057, "seek": 416408, "start": 4174.72, "end": 4183.72, "text": " So for instance, if you go back to the linter example, I don't want an AI to review my code", "tokens": [407, 337, 5197, 11, 498, 291, 352, 646, 281, 264, 287, 5106, 1365, 11, 286, 500, 380, 528, 364, 7318, 281, 3131, 452, 3089], "temperature": 0.0, "avg_logprob": -0.29279251098632814, "compression_ratio": 1.649746192893401, "no_speech_prob": 1.6893439180876157e-07}, {"id": 1058, "seek": 416408, "start": 4183.72, "end": 4185.36, "text": " because it's going to be inconsistent.", "tokens": [570, 309, 311, 516, 281, 312, 36891, 13], "temperature": 0.0, "avg_logprob": -0.29279251098632814, "compression_ratio": 1.649746192893401, "no_speech_prob": 1.6893439180876157e-07}, {"id": 1059, "seek": 416408, "start": 4185.36, "end": 4191.92, "text": " I can ask it to write a linter rule once and then I can run that linter rule multiple times.", "tokens": [286, 393, 1029, 309, 281, 2464, 257, 287, 5106, 4978, 1564, 293, 550, 286, 393, 1190, 300, 287, 5106, 4978, 3866, 1413, 13], "temperature": 0.0, "avg_logprob": -0.29279251098632814, "compression_ratio": 1.649746192893401, "no_speech_prob": 1.6893439180876157e-07}, {"id": 1060, "seek": 419192, "start": 4191.92, "end": 4199.32, "text": " But yeah, I definitely agree that there are cases where you will want to have a transformation", "tokens": [583, 1338, 11, 286, 2138, 3986, 300, 456, 366, 3331, 689, 291, 486, 528, 281, 362, 257, 9887], "temperature": 0.0, "avg_logprob": -0.2989655230418745, "compression_ratio": 1.455, "no_speech_prob": 3.6898572375321237e-07}, {"id": 1061, "seek": 419192, "start": 4199.32, "end": 4205.76, "text": " using AI rather than one that is hard-coded one way or another in an IDE.", "tokens": [1228, 7318, 2831, 813, 472, 300, 307, 1152, 12, 66, 12340, 472, 636, 420, 1071, 294, 364, 40930, 13], "temperature": 0.0, "avg_logprob": -0.2989655230418745, "compression_ratio": 1.455, "no_speech_prob": 3.6898572375321237e-07}, {"id": 1062, "seek": 419192, "start": 4205.76, "end": 4208.12, "text": " That could be interesting to find.", "tokens": [663, 727, 312, 1880, 281, 915, 13], "temperature": 0.0, "avg_logprob": -0.2989655230418745, "compression_ratio": 1.455, "no_speech_prob": 3.6898572375321237e-07}, {"id": 1063, "seek": 419192, "start": 4208.12, "end": 4209.12, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2989655230418745, "compression_ratio": 1.455, "no_speech_prob": 3.6898572375321237e-07}, {"id": 1064, "seek": 419192, "start": 4209.12, "end": 4212.72, "text": " And I mean, I don't know.", "tokens": [400, 286, 914, 11, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.2989655230418745, "compression_ratio": 1.455, "no_speech_prob": 3.6898572375321237e-07}, {"id": 1065, "seek": 419192, "start": 4212.72, "end": 4217.72, "text": " I'm very bullish on what we can do with these AI tools.", "tokens": [286, 478, 588, 38692, 322, 437, 321, 393, 360, 365, 613, 7318, 3873, 13], "temperature": 0.0, "avg_logprob": -0.2989655230418745, "compression_ratio": 1.455, "no_speech_prob": 3.6898572375321237e-07}, {"id": 1066, "seek": 421772, "start": 4217.72, "end": 4222.04, "text": " But I'll have you ask yourself whether you should.", "tokens": [583, 286, 603, 362, 291, 1029, 1803, 1968, 291, 820, 13], "temperature": 0.0, "avg_logprob": -0.3167541580970841, "compression_ratio": 1.52, "no_speech_prob": 1.4062236004974693e-05}, {"id": 1067, "seek": 421772, "start": 4222.04, "end": 4226.16, "text": " Well, that's another question.", "tokens": [1042, 11, 300, 311, 1071, 1168, 13], "temperature": 0.0, "avg_logprob": -0.3167541580970841, "compression_ratio": 1.52, "no_speech_prob": 1.4062236004974693e-05}, {"id": 1068, "seek": 421772, "start": 4226.16, "end": 4234.4800000000005, "text": " The thing I'm bearish on would be just saying AI build a plugin.", "tokens": [440, 551, 286, 478, 6155, 742, 322, 576, 312, 445, 1566, 7318, 1322, 257, 23407, 13], "temperature": 0.0, "avg_logprob": -0.3167541580970841, "compression_ratio": 1.52, "no_speech_prob": 1.4062236004974693e-05}, {"id": 1069, "seek": 421772, "start": 4234.4800000000005, "end": 4239.12, "text": " You know, people are, there's a lot of hype around like it built a Chrome extension for", "tokens": [509, 458, 11, 561, 366, 11, 456, 311, 257, 688, 295, 24144, 926, 411, 309, 3094, 257, 15327, 10320, 337], "temperature": 0.0, "avg_logprob": -0.3167541580970841, "compression_ratio": 1.52, "no_speech_prob": 1.4062236004974693e-05}, {"id": 1070, "seek": 421772, "start": 4239.12, "end": 4240.12, "text": " this thing.", "tokens": [341, 551, 13], "temperature": 0.0, "avg_logprob": -0.3167541580970841, "compression_ratio": 1.52, "no_speech_prob": 1.4062236004974693e-05}, {"id": 1071, "seek": 421772, "start": 4240.12, "end": 4242.8, "text": " It built a whole app from a sketch on a napkin.", "tokens": [467, 3094, 257, 1379, 724, 490, 257, 12325, 322, 257, 9296, 5843, 13], "temperature": 0.0, "avg_logprob": -0.3167541580970841, "compression_ratio": 1.52, "no_speech_prob": 1.4062236004974693e-05}, {"id": 1072, "seek": 421772, "start": 4242.8, "end": 4246.320000000001, "text": " And so it's like, okay, that's very impressive.", "tokens": [400, 370, 309, 311, 411, 11, 1392, 11, 300, 311, 588, 8992, 13], "temperature": 0.0, "avg_logprob": -0.3167541580970841, "compression_ratio": 1.52, "no_speech_prob": 1.4062236004974693e-05}, {"id": 1073, "seek": 424632, "start": 4246.32, "end": 4254.04, "text": " It's very interesting, but like how I am skeptical of how useful that is going to actually prove", "tokens": [467, 311, 588, 1880, 11, 457, 411, 577, 286, 669, 28601, 295, 577, 4420, 300, 307, 516, 281, 767, 7081], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1074, "seek": 424632, "start": 4254.04, "end": 4255.04, "text": " to be.", "tokens": [281, 312, 13], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1075, "seek": 424632, "start": 4255.04, "end": 4258.24, "text": " Like, I don't feel like that's what's going to take people's jobs away.", "tokens": [1743, 11, 286, 500, 380, 841, 411, 300, 311, 437, 311, 516, 281, 747, 561, 311, 4782, 1314, 13], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1076, "seek": 424632, "start": 4258.24, "end": 4261.759999999999, "text": " I don't feel like that's what's going to replace the work we're doing day to day.", "tokens": [286, 500, 380, 841, 411, 300, 311, 437, 311, 516, 281, 7406, 264, 589, 321, 434, 884, 786, 281, 786, 13], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1077, "seek": 424632, "start": 4261.759999999999, "end": 4267.28, "text": " I think it's these more mature things that we can really rely on where we're choosing", "tokens": [286, 519, 309, 311, 613, 544, 14442, 721, 300, 321, 393, 534, 10687, 322, 689, 321, 434, 10875], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1078, "seek": 424632, "start": 4267.28, "end": 4273.08, "text": " more constrained problems to do higher level operations and verify them and put guardrails", "tokens": [544, 38901, 2740, 281, 360, 2946, 1496, 7705, 293, 16888, 552, 293, 829, 6290, 424, 4174], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1079, "seek": 424632, "start": 4273.08, "end": 4274.08, "text": " on them.", "tokens": [322, 552, 13], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1080, "seek": 424632, "start": 4274.08, "end": 4275.08, "text": " Like, I don't know.", "tokens": [1743, 11, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.1772189483642578, "compression_ratio": 1.801556420233463, "no_speech_prob": 3.5007742553716525e-06}, {"id": 1081, "seek": 427508, "start": 4275.08, "end": 4281.2, "text": " I think that's my personal bias and obsession and people will get over that and not worry", "tokens": [286, 519, 300, 311, 452, 2973, 12577, 293, 30521, 293, 561, 486, 483, 670, 300, 293, 406, 3292], "temperature": 0.0, "avg_logprob": -0.21111685808967143, "compression_ratio": 1.6095238095238096, "no_speech_prob": 9.721461537992582e-07}, {"id": 1082, "seek": 427508, "start": 4281.2, "end": 4284.08, "text": " about that and be able to do cooler things than I can do.", "tokens": [466, 300, 293, 312, 1075, 281, 360, 15566, 721, 813, 286, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.21111685808967143, "compression_ratio": 1.6095238095238096, "no_speech_prob": 9.721461537992582e-07}, {"id": 1083, "seek": 427508, "start": 4284.08, "end": 4285.08, "text": " That's very possible.", "tokens": [663, 311, 588, 1944, 13], "temperature": 0.0, "avg_logprob": -0.21111685808967143, "compression_ratio": 1.6095238095238096, "no_speech_prob": 9.721461537992582e-07}, {"id": 1084, "seek": 427508, "start": 4285.08, "end": 4289.6, "text": " I admit that's a possibility, but that's where I'm putting my money.", "tokens": [286, 9796, 300, 311, 257, 7959, 11, 457, 300, 311, 689, 286, 478, 3372, 452, 1460, 13], "temperature": 0.0, "avg_logprob": -0.21111685808967143, "compression_ratio": 1.6095238095238096, "no_speech_prob": 9.721461537992582e-07}, {"id": 1085, "seek": 427508, "start": 4289.6, "end": 4298.88, "text": " So like writing, having it write the IDE completions for extracting functions and things like that.", "tokens": [407, 411, 3579, 11, 1419, 309, 2464, 264, 40930, 1557, 626, 337, 49844, 6828, 293, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.21111685808967143, "compression_ratio": 1.6095238095238096, "no_speech_prob": 9.721461537992582e-07}, {"id": 1086, "seek": 429888, "start": 4298.88, "end": 4306.12, "text": " Like it's like I can, the hard part isn't writing like the happy path.", "tokens": [1743, 309, 311, 411, 286, 393, 11, 264, 1152, 644, 1943, 380, 3579, 411, 264, 2055, 3100, 13], "temperature": 0.0, "avg_logprob": -0.2428916539901342, "compression_ratio": 1.7575757575757576, "no_speech_prob": 2.521420810808195e-06}, {"id": 1087, "seek": 429888, "start": 4306.12, "end": 4307.68, "text": " I can write the happy path of that.", "tokens": [286, 393, 2464, 264, 2055, 3100, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.2428916539901342, "compression_ratio": 1.7575757575757576, "no_speech_prob": 2.521420810808195e-06}, {"id": 1088, "seek": 429888, "start": 4307.68, "end": 4313.12, "text": " I've actually, I've done that in IntelliJ refactorings.", "tokens": [286, 600, 767, 11, 286, 600, 1096, 300, 294, 18762, 72, 41, 1895, 15104, 1109, 13], "temperature": 0.0, "avg_logprob": -0.2428916539901342, "compression_ratio": 1.7575757575757576, "no_speech_prob": 2.521420810808195e-06}, {"id": 1089, "seek": 429888, "start": 4313.12, "end": 4316.400000000001, "text": " The hard part is everything else that it's not considering.", "tokens": [440, 1152, 644, 307, 1203, 1646, 300, 309, 311, 406, 8079, 13], "temperature": 0.0, "avg_logprob": -0.2428916539901342, "compression_ratio": 1.7575757575757576, "no_speech_prob": 2.521420810808195e-06}, {"id": 1090, "seek": 429888, "start": 4316.400000000001, "end": 4321.12, "text": " And if I have to babysit it to make sure it solved each of those cases, I may as well", "tokens": [400, 498, 286, 362, 281, 39764, 270, 309, 281, 652, 988, 309, 13041, 1184, 295, 729, 3331, 11, 286, 815, 382, 731], "temperature": 0.0, "avg_logprob": -0.2428916539901342, "compression_ratio": 1.7575757575757576, "no_speech_prob": 2.521420810808195e-06}, {"id": 1091, "seek": 429888, "start": 4321.12, "end": 4322.12, "text": " do it myself.", "tokens": [360, 309, 2059, 13], "temperature": 0.0, "avg_logprob": -0.2428916539901342, "compression_ratio": 1.7575757575757576, "no_speech_prob": 2.521420810808195e-06}, {"id": 1092, "seek": 429888, "start": 4322.12, "end": 4327.32, "text": " Cause like the things it's going to miss, the things that I don't trust that it did", "tokens": [10865, 411, 264, 721, 309, 311, 516, 281, 1713, 11, 264, 721, 300, 286, 500, 380, 3361, 300, 309, 630], "temperature": 0.0, "avg_logprob": -0.2428916539901342, "compression_ratio": 1.7575757575757576, "no_speech_prob": 2.521420810808195e-06}, {"id": 1093, "seek": 432732, "start": 4327.32, "end": 4333.16, "text": " and I have to go check myself, it's easier to do them myself and engage with the problem", "tokens": [293, 286, 362, 281, 352, 1520, 2059, 11, 309, 311, 3571, 281, 360, 552, 2059, 293, 4683, 365, 264, 1154], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1094, "seek": 432732, "start": 4333.16, "end": 4338.0, "text": " and solve it my way and know that I accounted for every corner case and wrote a test for", "tokens": [293, 5039, 309, 452, 636, 293, 458, 300, 286, 43138, 337, 633, 4538, 1389, 293, 4114, 257, 1500, 337], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1095, "seek": 432732, "start": 4338.0, "end": 4343.28, "text": " it than to just trust the AI and be like, okay, now I have to go check everything that", "tokens": [309, 813, 281, 445, 3361, 264, 7318, 293, 312, 411, 11, 1392, 11, 586, 286, 362, 281, 352, 1520, 1203, 300], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1096, "seek": 432732, "start": 4343.28, "end": 4346.679999999999, "text": " it did in this crazy, impossible to understand code.", "tokens": [309, 630, 294, 341, 3219, 11, 6243, 281, 1223, 3089, 13], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1097, "seek": 432732, "start": 4346.679999999999, "end": 4349.04, "text": " That's not the way I would have solved it.", "tokens": [663, 311, 406, 264, 636, 286, 576, 362, 13041, 309, 13], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1098, "seek": 432732, "start": 4349.04, "end": 4352.0, "text": " But if you paired with the AI.", "tokens": [583, 498, 291, 25699, 365, 264, 7318, 13], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1099, "seek": 432732, "start": 4352.0, "end": 4353.0, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1100, "seek": 432732, "start": 4353.0, "end": 4355.599999999999, "text": " That's, that's the direction I think things are going.", "tokens": [663, 311, 11, 300, 311, 264, 3513, 286, 519, 721, 366, 516, 13], "temperature": 0.0, "avg_logprob": -0.24570493000309643, "compression_ratio": 1.7030075187969924, "no_speech_prob": 8.714292221156938e-07}, {"id": 1101, "seek": 435560, "start": 4355.6, "end": 4359.320000000001, "text": " Just like tell it very high level instructions.", "tokens": [1449, 411, 980, 309, 588, 1090, 1496, 9415, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1102, "seek": 435560, "start": 4359.320000000001, "end": 4364.200000000001, "text": " But every time you give instructions, you, there's, there's some bias, right?", "tokens": [583, 633, 565, 291, 976, 9415, 11, 291, 11, 456, 311, 11, 456, 311, 512, 12577, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1103, "seek": 435560, "start": 4364.200000000001, "end": 4368.72, "text": " So at least so far the, the AI is, they're always very confident.", "tokens": [407, 412, 1935, 370, 1400, 264, 11, 264, 7318, 307, 11, 436, 434, 1009, 588, 6679, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1104, "seek": 435560, "start": 4368.72, "end": 4369.92, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1105, "seek": 435560, "start": 4369.92, "end": 4373.56, "text": " Which is problematic when they're actually wrong.", "tokens": [3013, 307, 19011, 562, 436, 434, 767, 2085, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1106, "seek": 435560, "start": 4373.56, "end": 4376.360000000001, "text": " But they're also never going to say no.", "tokens": [583, 436, 434, 611, 1128, 516, 281, 584, 572, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1107, "seek": 435560, "start": 4376.360000000001, "end": 4380.56, "text": " Well unless you ask for things that's been trained to say no to.", "tokens": [1042, 5969, 291, 1029, 337, 721, 300, 311, 668, 8895, 281, 584, 572, 281, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1108, "seek": 435560, "start": 4380.56, "end": 4381.56, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1109, "seek": 435560, "start": 4381.56, "end": 4382.56, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.38364632016136535, "compression_ratio": 1.6140350877192982, "no_speech_prob": 5.804967599942756e-07}, {"id": 1110, "seek": 438256, "start": 4382.56, "end": 4386.96, "text": " I've seen a lot of people in the Elm Slack ask for questions like, how do I do X or how", "tokens": [286, 600, 1612, 257, 688, 295, 561, 294, 264, 2699, 76, 37211, 1029, 337, 1651, 411, 11, 577, 360, 286, 360, 1783, 420, 577], "temperature": 0.0, "avg_logprob": -0.3236692176674897, "compression_ratio": 1.5887445887445888, "no_speech_prob": 2.5360054678458255e-07}, {"id": 1111, "seek": 438256, "start": 4386.96, "end": 4389.72, "text": " do I do, how do I solve this problem?", "tokens": [360, 286, 360, 11, 577, 360, 286, 5039, 341, 1154, 30], "temperature": 0.0, "avg_logprob": -0.3236692176674897, "compression_ratio": 1.5887445887445888, "no_speech_prob": 2.5360054678458255e-07}, {"id": 1112, "seek": 438256, "start": 4389.72, "end": 4392.280000000001, "text": " And there's often that XY problem.", "tokens": [400, 456, 311, 2049, 300, 48826, 1154, 13], "temperature": 0.0, "avg_logprob": -0.3236692176674897, "compression_ratio": 1.5887445887445888, "no_speech_prob": 2.5360054678458255e-07}, {"id": 1113, "seek": 438256, "start": 4392.280000000001, "end": 4393.96, "text": " Like you ask to solve it.", "tokens": [1743, 291, 1029, 281, 5039, 309, 13], "temperature": 0.0, "avg_logprob": -0.3236692176674897, "compression_ratio": 1.5887445887445888, "no_speech_prob": 2.5360054678458255e-07}, {"id": 1114, "seek": 438256, "start": 4393.96, "end": 4394.96, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.3236692176674897, "compression_ratio": 1.5887445887445888, "no_speech_prob": 2.5360054678458255e-07}, {"id": 1115, "seek": 438256, "start": 4394.96, "end": 4399.72, "text": " You asked a solution to X, but you're actually trying to solve a different Y problem.", "tokens": [509, 2351, 257, 3827, 281, 1783, 11, 457, 291, 434, 767, 1382, 281, 5039, 257, 819, 398, 1154, 13], "temperature": 0.0, "avg_logprob": -0.3236692176674897, "compression_ratio": 1.5887445887445888, "no_speech_prob": 2.5360054678458255e-07}, {"id": 1116, "seek": 438256, "start": 4399.72, "end": 4408.120000000001, "text": " And so even if I imagine that the AIs will become extremely, extremely good, like 100", "tokens": [400, 370, 754, 498, 286, 3811, 300, 264, 316, 6802, 486, 1813, 4664, 11, 4664, 665, 11, 411, 2319], "temperature": 0.0, "avg_logprob": -0.3236692176674897, "compression_ratio": 1.5887445887445888, "no_speech_prob": 2.5360054678458255e-07}, {"id": 1117, "seek": 440812, "start": 4408.12, "end": 4413.48, "text": " times better than you and me combined, or there's still only going to solve the problem", "tokens": [1413, 1101, 813, 291, 293, 385, 9354, 11, 420, 456, 311, 920, 787, 516, 281, 5039, 264, 1154], "temperature": 0.0, "avg_logprob": -0.26991023657456886, "compression_ratio": 1.7155172413793103, "no_speech_prob": 4.88822763600183e-07}, {"id": 1118, "seek": 440812, "start": 4413.48, "end": 4415.64, "text": " that you're asking them to.", "tokens": [300, 291, 434, 3365, 552, 281, 13], "temperature": 0.0, "avg_logprob": -0.26991023657456886, "compression_ratio": 1.7155172413793103, "no_speech_prob": 4.88822763600183e-07}, {"id": 1119, "seek": 440812, "start": 4415.64, "end": 4420.599999999999, "text": " Just like, let's imagine it's the smartest person on the world that you have free access", "tokens": [1449, 411, 11, 718, 311, 3811, 309, 311, 264, 41491, 954, 322, 264, 1002, 300, 291, 362, 1737, 2105], "temperature": 0.0, "avg_logprob": -0.26991023657456886, "compression_ratio": 1.7155172413793103, "no_speech_prob": 4.88822763600183e-07}, {"id": 1120, "seek": 440812, "start": 4420.599999999999, "end": 4421.599999999999, "text": " to.", "tokens": [281, 13], "temperature": 0.0, "avg_logprob": -0.26991023657456886, "compression_ratio": 1.7155172413793103, "no_speech_prob": 4.88822763600183e-07}, {"id": 1121, "seek": 440812, "start": 4421.599999999999, "end": 4426.64, "text": " Well, if you ask them something and they don't know, they don't think about whether you're", "tokens": [1042, 11, 498, 291, 1029, 552, 746, 293, 436, 500, 380, 458, 11, 436, 500, 380, 519, 466, 1968, 291, 434], "temperature": 0.0, "avg_logprob": -0.26991023657456886, "compression_ratio": 1.7155172413793103, "no_speech_prob": 4.88822763600183e-07}, {"id": 1122, "seek": 440812, "start": 4426.64, "end": 4432.68, "text": " going to, whether it makes sense to ask the question, then they're not going to tell you.", "tokens": [516, 281, 11, 1968, 309, 1669, 2020, 281, 1029, 264, 1168, 11, 550, 436, 434, 406, 516, 281, 980, 291, 13], "temperature": 0.0, "avg_logprob": -0.26991023657456886, "compression_ratio": 1.7155172413793103, "no_speech_prob": 4.88822763600183e-07}, {"id": 1123, "seek": 440812, "start": 4432.68, "end": 4433.68, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.26991023657456886, "compression_ratio": 1.7155172413793103, "no_speech_prob": 4.88822763600183e-07}, {"id": 1124, "seek": 443368, "start": 4433.68, "end": 4439.320000000001, "text": " So you need to prompt them, but you also need to think about how you ask the question, what", "tokens": [407, 291, 643, 281, 12391, 552, 11, 457, 291, 611, 643, 281, 519, 466, 577, 291, 1029, 264, 1168, 11, 437], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1125, "seek": 443368, "start": 4439.320000000001, "end": 4440.96, "text": " question you ask.", "tokens": [1168, 291, 1029, 13], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1126, "seek": 443368, "start": 4440.96, "end": 4444.16, "text": " And I'm thinking maybe we should ask them as well.", "tokens": [400, 286, 478, 1953, 1310, 321, 820, 1029, 552, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1127, "seek": 443368, "start": 4444.16, "end": 4448.280000000001, "text": " Like, Hey, I have this feature that I want to do.", "tokens": [1743, 11, 1911, 11, 286, 362, 341, 4111, 300, 286, 528, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1128, "seek": 443368, "start": 4448.280000000001, "end": 4452.240000000001, "text": " So can you tell me how I transform this HTML to a string?", "tokens": [407, 393, 291, 980, 385, 577, 286, 4088, 341, 17995, 281, 257, 6798, 30], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1129, "seek": 443368, "start": 4452.240000000001, "end": 4455.76, "text": " And maybe you should also ask, like, does this make sense by the way?", "tokens": [400, 1310, 291, 820, 611, 1029, 11, 411, 11, 775, 341, 652, 2020, 538, 264, 636, 30], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1130, "seek": 443368, "start": 4455.76, "end": 4459.92, "text": " Because then they start asking, answering that question.", "tokens": [1436, 550, 436, 722, 3365, 11, 13430, 300, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1131, "seek": 443368, "start": 4459.92, "end": 4462.02, "text": " Well, that no, that doesn't make sense.", "tokens": [1042, 11, 300, 572, 11, 300, 1177, 380, 652, 2020, 13], "temperature": 0.0, "avg_logprob": -0.2907259286927783, "compression_ratio": 1.7261904761904763, "no_speech_prob": 2.964845862152288e-07}, {"id": 1132, "seek": 446202, "start": 4462.02, "end": 4469.4400000000005, "text": " So I said, we're good at gathering requirements, but we're not very good at those, but that", "tokens": [407, 286, 848, 11, 321, 434, 665, 412, 13519, 7728, 11, 457, 321, 434, 406, 588, 665, 412, 729, 11, 457, 300], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1133, "seek": 446202, "start": 4469.4400000000005, "end": 4470.4400000000005, "text": " is our job.", "tokens": [307, 527, 1691, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1134, "seek": 446202, "start": 4470.4400000000005, "end": 4474.0, "text": " And I think it will increasingly become our job.", "tokens": [400, 286, 519, 309, 486, 12980, 1813, 527, 1691, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1135, "seek": 446202, "start": 4474.0, "end": 4476.6, "text": " So we're going to become AI managers.", "tokens": [407, 321, 434, 516, 281, 1813, 7318, 14084, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1136, "seek": 446202, "start": 4476.6, "end": 4477.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1137, "seek": 446202, "start": 4477.6, "end": 4478.6, "text": " Basically.", "tokens": [8537, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1138, "seek": 446202, "start": 4478.6, "end": 4479.6, "text": " I think that's a good way to look at it.", "tokens": [286, 519, 300, 311, 257, 665, 636, 281, 574, 412, 309, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1139, "seek": 446202, "start": 4479.6, "end": 4480.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1140, "seek": 446202, "start": 4480.6, "end": 4481.6, "text": " AI product owners.", "tokens": [7318, 1674, 7710, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1141, "seek": 446202, "start": 4481.6, "end": 4482.6, "text": " Yeah, totally.", "tokens": [865, 11, 3879, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1142, "seek": 446202, "start": 4482.6, "end": 4483.6, "text": " Totally.", "tokens": [22837, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1143, "seek": 446202, "start": 4483.6, "end": 4484.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1144, "seek": 446202, "start": 4484.6, "end": 4490.52, "text": " I think, and what you're talking about, the word that's been coming to mind for me is that", "tokens": [286, 519, 11, 293, 437, 291, 434, 1417, 466, 11, 264, 1349, 300, 311, 668, 1348, 281, 1575, 337, 385, 307, 300], "temperature": 0.0, "avg_logprob": -0.2586124572753906, "compression_ratio": 1.7356828193832599, "no_speech_prob": 1.8845986460291897e-07}, {"id": 1145, "seek": 449052, "start": 4490.52, "end": 4494.0, "text": " these AI engines are very suggestible.", "tokens": [613, 7318, 12982, 366, 588, 3402, 964, 13], "temperature": 0.0, "avg_logprob": -0.3263092317442963, "compression_ratio": 1.3974358974358974, "no_speech_prob": 2.5214433208020637e-06}, {"id": 1146, "seek": 449052, "start": 4494.0, "end": 4503.200000000001, "text": " Like if you say, I don't know, where might I have lost my keys?", "tokens": [1743, 498, 291, 584, 11, 286, 500, 380, 458, 11, 689, 1062, 286, 362, 2731, 452, 9317, 30], "temperature": 0.0, "avg_logprob": -0.3263092317442963, "compression_ratio": 1.3974358974358974, "no_speech_prob": 2.5214433208020637e-06}, {"id": 1147, "seek": 449052, "start": 4503.200000000001, "end": 4511.200000000001, "text": " Hint, I often forget them in my pants that I put in the hamper.", "tokens": [389, 686, 11, 286, 2049, 2870, 552, 294, 452, 10082, 300, 286, 829, 294, 264, 7852, 610, 13], "temperature": 0.0, "avg_logprob": -0.3263092317442963, "compression_ratio": 1.3974358974358974, "no_speech_prob": 2.5214433208020637e-06}, {"id": 1148, "seek": 449052, "start": 4511.200000000001, "end": 4514.84, "text": " Then it's going to be like, are they in the hamper?", "tokens": [1396, 309, 311, 516, 281, 312, 411, 11, 366, 436, 294, 264, 7852, 610, 30], "temperature": 0.0, "avg_logprob": -0.3263092317442963, "compression_ratio": 1.3974358974358974, "no_speech_prob": 2.5214433208020637e-06}, {"id": 1149, "seek": 451484, "start": 4514.84, "end": 4523.64, "text": " But it's going to run with, I've seen that with the Elm compiler sometimes says, hint,", "tokens": [583, 309, 311, 516, 281, 1190, 365, 11, 286, 600, 1612, 300, 365, 264, 2699, 76, 31958, 2171, 1619, 11, 12075, 11], "temperature": 0.0, "avg_logprob": -0.26087871166544224, "compression_ratio": 1.5991189427312775, "no_speech_prob": 9.276109835809621e-07}, {"id": 1150, "seek": 451484, "start": 4523.64, "end": 4525.88, "text": " and it tells it, maybe you need to do this.", "tokens": [293, 309, 5112, 309, 11, 1310, 291, 643, 281, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.26087871166544224, "compression_ratio": 1.5991189427312775, "no_speech_prob": 9.276109835809621e-07}, {"id": 1151, "seek": 451484, "start": 4525.88, "end": 4528.12, "text": " And then it's like, okay, sure, let me try.", "tokens": [400, 550, 309, 311, 411, 11, 1392, 11, 988, 11, 718, 385, 853, 13], "temperature": 0.0, "avg_logprob": -0.26087871166544224, "compression_ratio": 1.5991189427312775, "no_speech_prob": 9.276109835809621e-07}, {"id": 1152, "seek": 451484, "start": 4528.12, "end": 4534.46, "text": " And it gets fixated on this one path that the compiler sort of hinted at, and that's", "tokens": [400, 309, 2170, 3191, 770, 322, 341, 472, 3100, 300, 264, 31958, 1333, 295, 12075, 292, 412, 11, 293, 300, 311], "temperature": 0.0, "avg_logprob": -0.26087871166544224, "compression_ratio": 1.5991189427312775, "no_speech_prob": 9.276109835809621e-07}, {"id": 1153, "seek": 451484, "start": 4534.46, "end": 4535.56, "text": " not a good path.", "tokens": [406, 257, 665, 3100, 13], "temperature": 0.0, "avg_logprob": -0.26087871166544224, "compression_ratio": 1.5991189427312775, "no_speech_prob": 9.276109835809621e-07}, {"id": 1154, "seek": 451484, "start": 4535.56, "end": 4541.6, "text": " So that's why with this type puzzle, I was trying to give it a very clear set of rules", "tokens": [407, 300, 311, 983, 365, 341, 2010, 12805, 11, 286, 390, 1382, 281, 976, 309, 257, 588, 1850, 992, 295, 4474], "temperature": 0.0, "avg_logprob": -0.26087871166544224, "compression_ratio": 1.5991189427312775, "no_speech_prob": 9.276109835809621e-07}, {"id": 1155, "seek": 454160, "start": 4541.6, "end": 4546.92, "text": " and say, this is the set of steps you're following.", "tokens": [293, 584, 11, 341, 307, 264, 992, 295, 4439, 291, 434, 3480, 13], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1156, "seek": 454160, "start": 4546.92, "end": 4551.360000000001, "text": " And then even teach it, this is how you adjust if you are incorrect in one of your guesses.", "tokens": [400, 550, 754, 2924, 309, 11, 341, 307, 577, 291, 4369, 498, 291, 366, 18424, 294, 472, 295, 428, 42703, 13], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1157, "seek": 454160, "start": 4551.360000000001, "end": 4556.4800000000005, "text": " And so you really have to prime it and prevent it from getting fixated and biased in one", "tokens": [400, 370, 291, 534, 362, 281, 5835, 309, 293, 4871, 309, 490, 1242, 3191, 770, 293, 28035, 294, 472], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1158, "seek": 454160, "start": 4556.4800000000005, "end": 4557.4800000000005, "text": " direction.", "tokens": [3513, 13], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1159, "seek": 454160, "start": 4557.4800000000005, "end": 4558.4800000000005, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1160, "seek": 454160, "start": 4558.4800000000005, "end": 4564.280000000001, "text": " But you also said some guardrails and if you were wrong in sending those guardrails, that's", "tokens": [583, 291, 611, 848, 512, 6290, 424, 4174, 293, 498, 291, 645, 2085, 294, 7750, 729, 6290, 424, 4174, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1161, "seek": 454160, "start": 4564.280000000001, "end": 4566.280000000001, "text": " going to be a long problem for you.", "tokens": [516, 281, 312, 257, 938, 1154, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1162, "seek": 454160, "start": 4566.280000000001, "end": 4568.200000000001, "text": " Oh yeah, absolutely.", "tokens": [876, 1338, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.2679093850625528, "compression_ratio": 1.6378600823045268, "no_speech_prob": 8.10558375974324e-08}, {"id": 1163, "seek": 456820, "start": 4568.2, "end": 4573.84, "text": " And it is, I mean, these AI engines are also, they're interesting for ideation as well.", "tokens": [400, 309, 307, 11, 286, 914, 11, 613, 7318, 12982, 366, 611, 11, 436, 434, 1880, 337, 1153, 399, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.28274728701664853, "compression_ratio": 1.5933609958506223, "no_speech_prob": 6.893552608744358e-07}, {"id": 1164, "seek": 456820, "start": 4573.84, "end": 4578.36, "text": " So there, I mean, that's a whole nother topic we could get into, but.", "tokens": [407, 456, 11, 286, 914, 11, 300, 311, 257, 1379, 406, 511, 4829, 321, 727, 483, 666, 11, 457, 13], "temperature": 0.0, "avg_logprob": -0.28274728701664853, "compression_ratio": 1.5933609958506223, "no_speech_prob": 6.893552608744358e-07}, {"id": 1165, "seek": 456820, "start": 4578.36, "end": 4583.5599999999995, "text": " We mostly talked about using it for things that we know well, and that we can validate,", "tokens": [492, 5240, 2825, 466, 1228, 309, 337, 721, 300, 321, 458, 731, 11, 293, 300, 321, 393, 29562, 11], "temperature": 0.0, "avg_logprob": -0.28274728701664853, "compression_ratio": 1.5933609958506223, "no_speech_prob": 6.893552608744358e-07}, {"id": 1166, "seek": 456820, "start": 4583.5599999999995, "end": 4589.08, "text": " verify, which I completely agree is probably the way to use it.", "tokens": [16888, 11, 597, 286, 2584, 3986, 307, 1391, 264, 636, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.28274728701664853, "compression_ratio": 1.5933609958506223, "no_speech_prob": 6.893552608744358e-07}, {"id": 1167, "seek": 456820, "start": 4589.08, "end": 4593.72, "text": " But it is also very good at helping you out when you don't know something.", "tokens": [583, 309, 307, 611, 588, 665, 412, 4315, 291, 484, 562, 291, 500, 380, 458, 746, 13], "temperature": 0.0, "avg_logprob": -0.28274728701664853, "compression_ratio": 1.5933609958506223, "no_speech_prob": 6.893552608744358e-07}, {"id": 1168, "seek": 459372, "start": 4593.72, "end": 4598.64, "text": " And there it becomes a lot more dangerous because it's overconfident and it's going", "tokens": [400, 456, 309, 3643, 257, 688, 544, 5795, 570, 309, 311, 670, 24697, 1078, 293, 309, 311, 516], "temperature": 0.0, "avg_logprob": -0.27960865906994753, "compression_ratio": 1.6492890995260663, "no_speech_prob": 8.99089229733363e-07}, {"id": 1169, "seek": 459372, "start": 4598.64, "end": 4604.400000000001, "text": " to lead you to wrong results, wrong paths, and you're not going to be able to figure", "tokens": [281, 1477, 291, 281, 2085, 3542, 11, 2085, 14518, 11, 293, 291, 434, 406, 516, 281, 312, 1075, 281, 2573], "temperature": 0.0, "avg_logprob": -0.27960865906994753, "compression_ratio": 1.6492890995260663, "no_speech_prob": 8.99089229733363e-07}, {"id": 1170, "seek": 459372, "start": 4604.400000000001, "end": 4605.4400000000005, "text": " those out.", "tokens": [729, 484, 13], "temperature": 0.0, "avg_logprob": -0.27960865906994753, "compression_ratio": 1.6492890995260663, "no_speech_prob": 8.99089229733363e-07}, {"id": 1171, "seek": 459372, "start": 4605.4400000000005, "end": 4612.4800000000005, "text": " But because it knows a lot more than you, it will, I think in a lot of cases, be used", "tokens": [583, 570, 309, 3255, 257, 688, 544, 813, 291, 11, 309, 486, 11, 286, 519, 294, 257, 688, 295, 3331, 11, 312, 1143], "temperature": 0.0, "avg_logprob": -0.27960865906994753, "compression_ratio": 1.6492890995260663, "no_speech_prob": 8.99089229733363e-07}, {"id": 1172, "seek": 459372, "start": 4612.4800000000005, "end": 4613.4800000000005, "text": " in that way.", "tokens": [294, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.27960865906994753, "compression_ratio": 1.6492890995260663, "no_speech_prob": 8.99089229733363e-07}, {"id": 1173, "seek": 459372, "start": 4613.4800000000005, "end": 4619.52, "text": " And there people have to weigh in the risks that are involved.", "tokens": [400, 456, 561, 362, 281, 13843, 294, 264, 10888, 300, 366, 3288, 13], "temperature": 0.0, "avg_logprob": -0.27960865906994753, "compression_ratio": 1.6492890995260663, "no_speech_prob": 8.99089229733363e-07}, {"id": 1174, "seek": 459372, "start": 4619.52, "end": 4620.52, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.27960865906994753, "compression_ratio": 1.6492890995260663, "no_speech_prob": 8.99089229733363e-07}, {"id": 1175, "seek": 462052, "start": 4620.52, "end": 4624.88, "text": " So definitely in some cases, it's going to be amazing.", "tokens": [407, 2138, 294, 512, 3331, 11, 309, 311, 516, 281, 312, 2243, 13], "temperature": 0.0, "avg_logprob": -0.27593668391195575, "compression_ratio": 1.5330188679245282, "no_speech_prob": 7.93431183865323e-07}, {"id": 1176, "seek": 462052, "start": 4624.88, "end": 4632.240000000001, "text": " For instance, I am not a good drawer, but I can ask an AI to draw something for me.", "tokens": [1171, 5197, 11, 286, 669, 406, 257, 665, 24039, 11, 457, 286, 393, 1029, 364, 7318, 281, 2642, 746, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.27593668391195575, "compression_ratio": 1.5330188679245282, "no_speech_prob": 7.93431183865323e-07}, {"id": 1177, "seek": 462052, "start": 4632.240000000001, "end": 4637.56, "text": " I actually do have a whole website filled with drawings, but I probably shouldn't train", "tokens": [286, 767, 360, 362, 257, 1379, 3144, 6412, 365, 18618, 11, 457, 286, 1391, 4659, 380, 3847], "temperature": 0.0, "avg_logprob": -0.27593668391195575, "compression_ratio": 1.5330188679245282, "no_speech_prob": 7.93431183865323e-07}, {"id": 1178, "seek": 462052, "start": 4637.56, "end": 4639.84, "text": " it on that.", "tokens": [309, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.27593668391195575, "compression_ratio": 1.5330188679245282, "no_speech_prob": 7.93431183865323e-07}, {"id": 1179, "seek": 462052, "start": 4639.84, "end": 4646.400000000001, "text": " But yeah, if I ask the AI to do it, then that would probably give some better results.", "tokens": [583, 1338, 11, 498, 286, 1029, 264, 7318, 281, 360, 309, 11, 550, 300, 576, 1391, 976, 512, 1101, 3542, 13], "temperature": 0.0, "avg_logprob": -0.27593668391195575, "compression_ratio": 1.5330188679245282, "no_speech_prob": 7.93431183865323e-07}, {"id": 1180, "seek": 464640, "start": 4646.4, "end": 4651.0, "text": " But when it comes to code, if I can verify it, then it's better.", "tokens": [583, 562, 309, 1487, 281, 3089, 11, 498, 286, 393, 16888, 309, 11, 550, 309, 311, 1101, 13], "temperature": 0.0, "avg_logprob": -0.21471620720123577, "compression_ratio": 1.7533039647577093, "no_speech_prob": 5.59428053747979e-06}, {"id": 1181, "seek": 464640, "start": 4651.0, "end": 4653.599999999999, "text": " If I can't verify it, then it's something new to me.", "tokens": [759, 286, 393, 380, 16888, 309, 11, 550, 309, 311, 746, 777, 281, 385, 13], "temperature": 0.0, "avg_logprob": -0.21471620720123577, "compression_ratio": 1.7533039647577093, "no_speech_prob": 5.59428053747979e-06}, {"id": 1182, "seek": 464640, "start": 4653.599999999999, "end": 4656.2, "text": " Well, that is very interesting as well.", "tokens": [1042, 11, 300, 307, 588, 1880, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.21471620720123577, "compression_ratio": 1.7533039647577093, "no_speech_prob": 5.59428053747979e-06}, {"id": 1183, "seek": 464640, "start": 4656.2, "end": 4662.5599999999995, "text": " And the thing that I'm worried here about on that matter is that if I ask the tool to", "tokens": [400, 264, 551, 300, 286, 478, 5804, 510, 466, 322, 300, 1871, 307, 300, 498, 286, 1029, 264, 2290, 281], "temperature": 0.0, "avg_logprob": -0.21471620720123577, "compression_ratio": 1.7533039647577093, "no_speech_prob": 5.59428053747979e-06}, {"id": 1184, "seek": 464640, "start": 4662.5599999999995, "end": 4667.5199999999995, "text": " do something for me for something that I don't know, whether I will start over relying on", "tokens": [360, 746, 337, 385, 337, 746, 300, 286, 500, 380, 458, 11, 1968, 286, 486, 722, 670, 24140, 322], "temperature": 0.0, "avg_logprob": -0.21471620720123577, "compression_ratio": 1.7533039647577093, "no_speech_prob": 5.59428053747979e-06}, {"id": 1185, "seek": 464640, "start": 4667.5199999999995, "end": 4673.04, "text": " it instead of learning properly and improving my own skill sets.", "tokens": [309, 2602, 295, 2539, 6108, 293, 11470, 452, 1065, 5389, 6352, 13], "temperature": 0.0, "avg_logprob": -0.21471620720123577, "compression_ratio": 1.7533039647577093, "no_speech_prob": 5.59428053747979e-06}, {"id": 1186, "seek": 467304, "start": 4673.04, "end": 4677.48, "text": " I think that's going to happen a lot with a lot of people getting into development right", "tokens": [286, 519, 300, 311, 516, 281, 1051, 257, 688, 365, 257, 688, 295, 561, 1242, 666, 3250, 558], "temperature": 0.0, "avg_logprob": -0.2058686708149157, "compression_ratio": 1.6359649122807018, "no_speech_prob": 6.747522547811968e-06}, {"id": 1187, "seek": 467304, "start": 4677.48, "end": 4678.48, "text": " now.", "tokens": [586, 13], "temperature": 0.0, "avg_logprob": -0.2058686708149157, "compression_ratio": 1.6359649122807018, "no_speech_prob": 6.747522547811968e-06}, {"id": 1188, "seek": 467304, "start": 4678.48, "end": 4684.56, "text": " And yeah, I think being an experienced developer, it's a lot easier to know what to rely on", "tokens": [400, 1338, 11, 286, 519, 885, 364, 6751, 10754, 11, 309, 311, 257, 688, 3571, 281, 458, 437, 281, 10687, 322], "temperature": 0.0, "avg_logprob": -0.2058686708149157, "compression_ratio": 1.6359649122807018, "no_speech_prob": 6.747522547811968e-06}, {"id": 1189, "seek": 467304, "start": 4684.56, "end": 4694.04, "text": " it for or when it's maybe like starting to write code where you're not learning to write", "tokens": [309, 337, 420, 562, 309, 311, 1310, 411, 2891, 281, 2464, 3089, 689, 291, 434, 406, 2539, 281, 2464], "temperature": 0.0, "avg_logprob": -0.2058686708149157, "compression_ratio": 1.6359649122807018, "no_speech_prob": 6.747522547811968e-06}, {"id": 1190, "seek": 467304, "start": 4694.04, "end": 4695.04, "text": " a reg x.", "tokens": [257, 1121, 2031, 13], "temperature": 0.0, "avg_logprob": -0.2058686708149157, "compression_ratio": 1.6359649122807018, "no_speech_prob": 6.747522547811968e-06}, {"id": 1191, "seek": 467304, "start": 4695.04, "end": 4699.88, "text": " And you probably should sort of figure that out instead of just blindly trusting a thing.", "tokens": [400, 291, 1391, 820, 1333, 295, 2573, 300, 484, 2602, 295, 445, 47744, 28235, 257, 551, 13], "temperature": 0.0, "avg_logprob": -0.2058686708149157, "compression_ratio": 1.6359649122807018, "no_speech_prob": 6.747522547811968e-06}, {"id": 1192, "seek": 469988, "start": 4699.88, "end": 4705.16, "text": " Or maybe it's okay to just be like, if the test passes, I don't really care how it arrived", "tokens": [1610, 1310, 309, 311, 1392, 281, 445, 312, 411, 11, 498, 264, 1500, 11335, 11, 286, 500, 380, 534, 1127, 577, 309, 6678], "temperature": 0.0, "avg_logprob": -0.2795201967347343, "compression_ratio": 1.5778688524590163, "no_speech_prob": 6.747891802660888e-06}, {"id": 1193, "seek": 469988, "start": 4705.16, "end": 4706.16, "text": " at that.", "tokens": [412, 300, 13], "temperature": 0.0, "avg_logprob": -0.2795201967347343, "compression_ratio": 1.5778688524590163, "no_speech_prob": 6.747891802660888e-06}, {"id": 1194, "seek": 469988, "start": 4706.16, "end": 4707.16, "text": " Maybe that's okay too.", "tokens": [2704, 300, 311, 1392, 886, 13], "temperature": 0.0, "avg_logprob": -0.2795201967347343, "compression_ratio": 1.5778688524590163, "no_speech_prob": 6.747891802660888e-06}, {"id": 1195, "seek": 469988, "start": 4707.16, "end": 4712.400000000001, "text": " You know, but yeah, I can for instance, imagine a backend developer who knows a little bit", "tokens": [509, 458, 11, 457, 1338, 11, 286, 393, 337, 5197, 11, 3811, 257, 38087, 10754, 567, 3255, 257, 707, 857], "temperature": 0.0, "avg_logprob": -0.2795201967347343, "compression_ratio": 1.5778688524590163, "no_speech_prob": 6.747891802660888e-06}, {"id": 1196, "seek": 469988, "start": 4712.400000000001, "end": 4719.92, "text": " of Elm and they just ask the AI to generate the UI for their application or at least the", "tokens": [295, 2699, 76, 293, 436, 445, 1029, 264, 7318, 281, 8460, 264, 15682, 337, 641, 3861, 420, 412, 1935, 264], "temperature": 0.0, "avg_logprob": -0.2795201967347343, "compression_ratio": 1.5778688524590163, "no_speech_prob": 6.747891802660888e-06}, {"id": 1197, "seek": 469988, "start": 4719.92, "end": 4723.400000000001, "text": " view parts of the application.", "tokens": [1910, 3166, 295, 264, 3861, 13], "temperature": 0.0, "avg_logprob": -0.2795201967347343, "compression_ratio": 1.5778688524590163, "no_speech_prob": 6.747891802660888e-06}, {"id": 1198, "seek": 469988, "start": 4723.400000000001, "end": 4726.08, "text": " And that's going to be very helpful to get started.", "tokens": [400, 300, 311, 516, 281, 312, 588, 4961, 281, 483, 1409, 13], "temperature": 0.0, "avg_logprob": -0.2795201967347343, "compression_ratio": 1.5778688524590163, "no_speech_prob": 6.747891802660888e-06}, {"id": 1199, "seek": 472608, "start": 4726.08, "end": 4732.36, "text": " But how do you make sure that things are correct with accessibility and all those concerns", "tokens": [583, 577, 360, 291, 652, 988, 300, 721, 366, 3006, 365, 15002, 293, 439, 729, 7389], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1200, "seek": 472608, "start": 4732.36, "end": 4734.48, "text": " that you don't know about?", "tokens": [300, 291, 500, 380, 458, 466, 30], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1201, "seek": 472608, "start": 4734.48, "end": 4736.5199999999995, "text": " Right, exactly.", "tokens": [1779, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1202, "seek": 472608, "start": 4736.5199999999995, "end": 4740.2, "text": " Is it going to fit well with a design system you set up?", "tokens": [1119, 309, 516, 281, 3318, 731, 365, 257, 1715, 1185, 291, 992, 493, 30], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1203, "seek": 472608, "start": 4740.2, "end": 4744.64, "text": " And there are all these assumptions that, yeah, so you have to know what to rely on", "tokens": [400, 456, 366, 439, 613, 17695, 300, 11, 1338, 11, 370, 291, 362, 281, 458, 437, 281, 10687, 322], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1204, "seek": 472608, "start": 4744.64, "end": 4745.64, "text": " it for.", "tokens": [309, 337, 13], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1205, "seek": 472608, "start": 4745.64, "end": 4752.04, "text": " And if it's like, if you can have it perform a high level task that you can fully verify", "tokens": [400, 498, 309, 311, 411, 11, 498, 291, 393, 362, 309, 2042, 257, 1090, 1496, 5633, 300, 291, 393, 4498, 16888], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1206, "seek": 472608, "start": 4752.04, "end": 4754.98, "text": " and trust it for, that's interesting.", "tokens": [293, 3361, 309, 337, 11, 300, 311, 1880, 13], "temperature": 0.0, "avg_logprob": -0.23884343671369124, "compression_ratio": 1.623015873015873, "no_speech_prob": 2.1233563529676758e-06}, {"id": 1207, "seek": 475498, "start": 4754.98, "end": 4762.08, "text": " If you can have it help you with ideation and generating a list of things to think about,", "tokens": [759, 291, 393, 362, 309, 854, 291, 365, 1153, 399, 293, 17746, 257, 1329, 295, 721, 281, 519, 466, 11], "temperature": 0.0, "avg_logprob": -0.23254791895548502, "compression_ratio": 1.747787610619469, "no_speech_prob": 2.1907660539000062e-06}, {"id": 1208, "seek": 475498, "start": 4762.08, "end": 4766.639999999999, "text": " and that's input for you to consider some other things, that's also very good.", "tokens": [293, 300, 311, 4846, 337, 291, 281, 1949, 512, 661, 721, 11, 300, 311, 611, 588, 665, 13], "temperature": 0.0, "avg_logprob": -0.23254791895548502, "compression_ratio": 1.747787610619469, "no_speech_prob": 2.1907660539000062e-06}, {"id": 1209, "seek": 475498, "start": 4766.639999999999, "end": 4771.799999999999, "text": " Because that, if something is helping you with ideation, you can filter out a little", "tokens": [1436, 300, 11, 498, 746, 307, 4315, 291, 365, 1153, 399, 11, 291, 393, 6608, 484, 257, 707], "temperature": 0.0, "avg_logprob": -0.23254791895548502, "compression_ratio": 1.747787610619469, "no_speech_prob": 2.1907660539000062e-06}, {"id": 1210, "seek": 475498, "start": 4771.799999999999, "end": 4774.0, "text": " bit of junk to get the diamond in the rough.", "tokens": [857, 295, 19109, 281, 483, 264, 16059, 294, 264, 5903, 13], "temperature": 0.0, "avg_logprob": -0.23254791895548502, "compression_ratio": 1.747787610619469, "no_speech_prob": 2.1907660539000062e-06}, {"id": 1211, "seek": 475498, "start": 4774.0, "end": 4776.08, "text": " Oh, this one idea, I didn't consider that.", "tokens": [876, 11, 341, 472, 1558, 11, 286, 994, 380, 1949, 300, 13], "temperature": 0.0, "avg_logprob": -0.23254791895548502, "compression_ratio": 1.747787610619469, "no_speech_prob": 2.1907660539000062e-06}, {"id": 1212, "seek": 475498, "start": 4776.08, "end": 4777.16, "text": " And that was really good.", "tokens": [400, 300, 390, 534, 665, 13], "temperature": 0.0, "avg_logprob": -0.23254791895548502, "compression_ratio": 1.747787610619469, "no_speech_prob": 2.1907660539000062e-06}, {"id": 1213, "seek": 475498, "start": 4777.16, "end": 4778.48, "text": " So that's another use case.", "tokens": [407, 300, 311, 1071, 764, 1389, 13], "temperature": 0.0, "avg_logprob": -0.23254791895548502, "compression_ratio": 1.747787610619469, "no_speech_prob": 2.1907660539000062e-06}, {"id": 1214, "seek": 477848, "start": 4778.48, "end": 4785.0, "text": " But the sort of in-between space where you just YOLO it and blindly incorporate it into", "tokens": [583, 264, 1333, 295, 294, 12, 32387, 1901, 689, 291, 445, 398, 5046, 46, 309, 293, 47744, 16091, 309, 666], "temperature": 0.0, "avg_logprob": -0.2556301983920011, "compression_ratio": 1.7745901639344261, "no_speech_prob": 2.8571430448209867e-06}, {"id": 1215, "seek": 477848, "start": 4785.0, "end": 4791.44, "text": " your code, I'm honestly pretty skeptical of the utility of that.", "tokens": [428, 3089, 11, 286, 478, 6095, 1238, 28601, 295, 264, 14877, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.2556301983920011, "compression_ratio": 1.7745901639344261, "no_speech_prob": 2.8571430448209867e-06}, {"id": 1216, "seek": 477848, "start": 4791.44, "end": 4796.24, "text": " And I'm skeptical of how maintainable it's going to be working with systems like that", "tokens": [400, 286, 478, 28601, 295, 577, 6909, 712, 309, 311, 516, 281, 312, 1364, 365, 3652, 411, 300], "temperature": 0.0, "avg_logprob": -0.2556301983920011, "compression_ratio": 1.7745901639344261, "no_speech_prob": 2.8571430448209867e-06}, {"id": 1217, "seek": 477848, "start": 4796.24, "end": 4799.5599999999995, "text": " and maintaining code where there's a lot of that happening.", "tokens": [293, 14916, 3089, 689, 456, 311, 257, 688, 295, 300, 2737, 13], "temperature": 0.0, "avg_logprob": -0.2556301983920011, "compression_ratio": 1.7745901639344261, "no_speech_prob": 2.8571430448209867e-06}, {"id": 1218, "seek": 477848, "start": 4799.5599999999995, "end": 4804.04, "text": " I think it's going to be okay for things that you're okay with throwing away.", "tokens": [286, 519, 309, 311, 516, 281, 312, 1392, 337, 721, 300, 291, 434, 1392, 365, 10238, 1314, 13], "temperature": 0.0, "avg_logprob": -0.2556301983920011, "compression_ratio": 1.7745901639344261, "no_speech_prob": 2.8571430448209867e-06}, {"id": 1219, "seek": 477848, "start": 4804.04, "end": 4808.04, "text": " Well, that you're okay with and that you can throw away.", "tokens": [1042, 11, 300, 291, 434, 1392, 365, 293, 300, 291, 393, 3507, 1314, 13], "temperature": 0.0, "avg_logprob": -0.2556301983920011, "compression_ratio": 1.7745901639344261, "no_speech_prob": 2.8571430448209867e-06}, {"id": 1220, "seek": 480804, "start": 4808.04, "end": 4809.84, "text": " Yeah, yeah, right.", "tokens": [865, 11, 1338, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.26956146734732167, "compression_ratio": 1.6754385964912282, "no_speech_prob": 1.1189317774551455e-06}, {"id": 1221, "seek": 480804, "start": 4809.84, "end": 4812.6, "text": " Yeah, if you can scope something down really narrowly.", "tokens": [865, 11, 498, 291, 393, 11923, 746, 760, 534, 9432, 356, 13], "temperature": 0.0, "avg_logprob": -0.26956146734732167, "compression_ratio": 1.6754385964912282, "no_speech_prob": 1.1189317774551455e-06}, {"id": 1222, "seek": 480804, "start": 4812.6, "end": 4821.4, "text": " I used it the other day for writing something to traverse a directory structure to find", "tokens": [286, 1143, 309, 264, 661, 786, 337, 3579, 746, 281, 45674, 257, 21120, 3877, 281, 915], "temperature": 0.0, "avg_logprob": -0.26956146734732167, "compression_ratio": 1.6754385964912282, "no_speech_prob": 1.1189317774551455e-06}, {"id": 1223, "seek": 480804, "start": 4821.4, "end": 4826.92, "text": " the root Elm project by looking until it found an Elm.json file.", "tokens": [264, 5593, 2699, 76, 1716, 538, 1237, 1826, 309, 1352, 364, 2699, 76, 13, 73, 3015, 3991, 13], "temperature": 0.0, "avg_logprob": -0.26956146734732167, "compression_ratio": 1.6754385964912282, "no_speech_prob": 1.1189317774551455e-06}, {"id": 1224, "seek": 480804, "start": 4826.92, "end": 4831.56, "text": " For my Elm pages scripts, I changed it so you can do Elm pages run and then give a file", "tokens": [1171, 452, 2699, 76, 7183, 23294, 11, 286, 3105, 309, 370, 291, 393, 360, 2699, 76, 7183, 1190, 293, 550, 976, 257, 3991], "temperature": 0.0, "avg_logprob": -0.26956146734732167, "compression_ratio": 1.6754385964912282, "no_speech_prob": 1.1189317774551455e-06}, {"id": 1225, "seek": 480804, "start": 4831.56, "end": 4836.96, "text": " path and it will find the nearest Elm.json to the file you pass in.", "tokens": [3100, 293, 309, 486, 915, 264, 23831, 2699, 76, 13, 73, 3015, 281, 264, 3991, 291, 1320, 294, 13], "temperature": 0.0, "avg_logprob": -0.26956146734732167, "compression_ratio": 1.6754385964912282, "no_speech_prob": 1.1189317774551455e-06}, {"id": 1226, "seek": 483696, "start": 4836.96, "end": 4843.4, "text": " And I wrote it with GPT-4 and I went through a few iterations and I guided it very clearly", "tokens": [400, 286, 4114, 309, 365, 26039, 51, 12, 19, 293, 286, 1437, 807, 257, 1326, 36540, 293, 286, 19663, 309, 588, 4448], "temperature": 0.0, "avg_logprob": -0.22908123608293204, "compression_ratio": 1.628352490421456, "no_speech_prob": 1.2482569218263961e-06}, {"id": 1227, "seek": 483696, "start": 4843.4, "end": 4846.8, "text": " with what I wanted in the result.", "tokens": [365, 437, 286, 1415, 294, 264, 1874, 13], "temperature": 0.0, "avg_logprob": -0.22908123608293204, "compression_ratio": 1.628352490421456, "no_speech_prob": 1.2482569218263961e-06}, {"id": 1228, "seek": 483696, "start": 4846.8, "end": 4852.12, "text": " But I knew it was like, this is going to generate one function for me that if it works, I can", "tokens": [583, 286, 2586, 309, 390, 411, 11, 341, 307, 516, 281, 8460, 472, 2445, 337, 385, 300, 498, 309, 1985, 11, 286, 393], "temperature": 0.0, "avg_logprob": -0.22908123608293204, "compression_ratio": 1.628352490421456, "no_speech_prob": 1.2482569218263961e-06}, {"id": 1229, "seek": 483696, "start": 4852.12, "end": 4854.44, "text": " just let it do its thing.", "tokens": [445, 718, 309, 360, 1080, 551, 13], "temperature": 0.0, "avg_logprob": -0.22908123608293204, "compression_ratio": 1.628352490421456, "no_speech_prob": 1.2482569218263961e-06}, {"id": 1230, "seek": 483696, "start": 4854.44, "end": 4856.12, "text": " Although I didn't like the style it used.", "tokens": [5780, 286, 994, 380, 411, 264, 3758, 309, 1143, 13], "temperature": 0.0, "avg_logprob": -0.22908123608293204, "compression_ratio": 1.628352490421456, "no_speech_prob": 1.2482569218263961e-06}, {"id": 1231, "seek": 483696, "start": 4856.12, "end": 4863.04, "text": " So I told it, instead of doing a bunch of for loops and while loops, can you do it using", "tokens": [407, 286, 1907, 309, 11, 2602, 295, 884, 257, 3840, 295, 337, 16121, 293, 1339, 16121, 11, 393, 291, 360, 309, 1228], "temperature": 0.0, "avg_logprob": -0.22908123608293204, "compression_ratio": 1.628352490421456, "no_speech_prob": 1.2482569218263961e-06}, {"id": 1232, "seek": 483696, "start": 4863.04, "end": 4866.8, "text": " functional style mapping and recursive functions?", "tokens": [11745, 3758, 18350, 293, 20560, 488, 6828, 30], "temperature": 0.0, "avg_logprob": -0.22908123608293204, "compression_ratio": 1.628352490421456, "no_speech_prob": 1.2482569218263961e-06}, {"id": 1233, "seek": 486680, "start": 4866.8, "end": 4868.2, "text": " And it modified it.", "tokens": [400, 309, 15873, 309, 13], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1234, "seek": 486680, "start": 4868.2, "end": 4871.12, "text": " And then I said, can you use ESM imports instead?", "tokens": [400, 550, 286, 848, 11, 393, 291, 764, 12564, 44, 41596, 2602, 30], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1235, "seek": 486680, "start": 4871.12, "end": 4874.4800000000005, "text": " And with a few tweaks, I had it refactor it to the style I wanted.", "tokens": [400, 365, 257, 1326, 46664, 11, 286, 632, 309, 1895, 15104, 309, 281, 264, 3758, 286, 1415, 13], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1236, "seek": 486680, "start": 4874.4800000000005, "end": 4878.360000000001, "text": " And so yeah, it was like a constrained thing.", "tokens": [400, 370, 1338, 11, 309, 390, 411, 257, 38901, 551, 13], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1237, "seek": 486680, "start": 4878.360000000001, "end": 4883.6, "text": " And the next time you do that, you will prime it with, oh, use a functional style and use", "tokens": [400, 264, 958, 565, 291, 360, 300, 11, 291, 486, 5835, 309, 365, 11, 1954, 11, 764, 257, 11745, 3758, 293, 764], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1238, "seek": 486680, "start": 4883.6, "end": 4885.6, "text": " ESM, etc.", "tokens": [12564, 44, 11, 5183, 13], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1239, "seek": 486680, "start": 4885.6, "end": 4886.6, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1240, "seek": 486680, "start": 4886.6, "end": 4893.320000000001, "text": " And that was like a constrained enough thing that I know with my experience, that it's", "tokens": [400, 300, 390, 411, 257, 38901, 1547, 551, 300, 286, 458, 365, 452, 1752, 11, 300, 309, 311], "temperature": 0.0, "avg_logprob": -0.31053100313459125, "compression_ratio": 1.6711111111111112, "no_speech_prob": 1.067698462975386e-06}, {"id": 1241, "seek": 489332, "start": 4893.32, "end": 4899.32, "text": " like an independent, separable problem that if it writes a function that does this, I", "tokens": [411, 364, 6695, 11, 3128, 712, 1154, 300, 498, 309, 13657, 257, 2445, 300, 775, 341, 11, 286], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1242, "seek": 489332, "start": 4899.32, "end": 4901.5199999999995, "text": " can use that and it can be useful to my workflow.", "tokens": [393, 764, 300, 293, 309, 393, 312, 4420, 281, 452, 20993, 13], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1243, "seek": 489332, "start": 4901.5199999999995, "end": 4905.24, "text": " So I think there's an art to knowing when to rely on it as well.", "tokens": [407, 286, 519, 456, 311, 364, 1523, 281, 5276, 562, 281, 10687, 322, 309, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1244, "seek": 489332, "start": 4905.24, "end": 4912.0, "text": " I feel like we have a lot more to talk about, a lot of interesting aspects to cover, but", "tokens": [286, 841, 411, 321, 362, 257, 688, 544, 281, 751, 466, 11, 257, 688, 295, 1880, 7270, 281, 2060, 11, 457], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1245, "seek": 489332, "start": 4912.0, "end": 4915.48, "text": " this has already been a quite long episode.", "tokens": [341, 575, 1217, 668, 257, 1596, 938, 3500, 13], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1246, "seek": 489332, "start": 4915.48, "end": 4916.719999999999, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1247, "seek": 489332, "start": 4916.719999999999, "end": 4918.799999999999, "text": " So I think we're going to cut it here.", "tokens": [407, 286, 519, 321, 434, 516, 281, 1723, 309, 510, 13], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1248, "seek": 489332, "start": 4918.799999999999, "end": 4921.84, "text": " Maybe we'll come back to this topic in a few months.", "tokens": [2704, 321, 603, 808, 646, 281, 341, 4829, 294, 257, 1326, 2493, 13], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1249, "seek": 489332, "start": 4921.84, "end": 4922.84, "text": " Who knows?", "tokens": [2102, 3255, 30], "temperature": 0.0, "avg_logprob": -0.2413136769854833, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.4144585520625697e-06}, {"id": 1250, "seek": 492284, "start": 4922.84, "end": 4925.56, "text": " Let us know if you like it and if you want more of it.", "tokens": [961, 505, 458, 498, 291, 411, 309, 293, 498, 291, 528, 544, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1251, "seek": 492284, "start": 4925.56, "end": 4926.56, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1252, "seek": 492284, "start": 4926.56, "end": 4932.04, "text": " And tell us what you've been doing with Element AI or pure functional programming and AI.", "tokens": [400, 980, 505, 437, 291, 600, 668, 884, 365, 20900, 7318, 420, 6075, 11745, 9410, 293, 7318, 13], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1253, "seek": 492284, "start": 4932.04, "end": 4933.2, "text": " We would love to hear from you.", "tokens": [492, 576, 959, 281, 1568, 490, 291, 13], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1254, "seek": 492284, "start": 4933.2, "end": 4937.92, "text": " We'd love to hear what clever things you come up with or just how you use it in your workflow", "tokens": [492, 1116, 959, 281, 1568, 437, 13494, 721, 291, 808, 493, 365, 420, 445, 577, 291, 764, 309, 294, 428, 20993], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1255, "seek": 492284, "start": 4937.92, "end": 4942.360000000001, "text": " and let us know what you want to hear about with Element AI in the future.", "tokens": [293, 718, 505, 458, 437, 291, 528, 281, 1568, 466, 365, 20900, 7318, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1256, "seek": 492284, "start": 4942.360000000001, "end": 4947.24, "text": " Did you prompt the audience well enough so that they give you the answers that you're", "tokens": [2589, 291, 12391, 264, 4034, 731, 1547, 370, 300, 436, 976, 291, 264, 6338, 300, 291, 434], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1257, "seek": 492284, "start": 4947.24, "end": 4950.8, "text": " looking for or do you need to rephrase it slightly?", "tokens": [1237, 337, 420, 360, 291, 643, 281, 319, 44598, 651, 309, 4748, 30], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1258, "seek": 492284, "start": 4950.8, "end": 4952.68, "text": " Maybe let's give them some guardrails.", "tokens": [2704, 718, 311, 976, 552, 512, 6290, 424, 4174, 13], "temperature": 0.0, "avg_logprob": -0.20816807036704205, "compression_ratio": 1.7425742574257426, "no_speech_prob": 2.710656735871453e-05}, {"id": 1259, "seek": 495268, "start": 4952.68, "end": 4955.4800000000005, "text": " Give us your example use cases.", "tokens": [5303, 505, 428, 1365, 764, 3331, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1260, "seek": 495268, "start": 4955.4800000000005, "end": 4958.4400000000005, "text": " Give us an example of the problem you used with it.", "tokens": [5303, 505, 364, 1365, 295, 264, 1154, 291, 1143, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1261, "seek": 495268, "start": 4958.4400000000005, "end": 4959.4400000000005, "text": " There we go.", "tokens": [821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1262, "seek": 495268, "start": 4959.4400000000005, "end": 4960.4400000000005, "text": " I think we're good.", "tokens": [286, 519, 321, 434, 665, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1263, "seek": 495268, "start": 4960.4400000000005, "end": 4962.8, "text": " Don't give us ideas if you think they're bad.", "tokens": [1468, 380, 976, 505, 3487, 498, 291, 519, 436, 434, 1578, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1264, "seek": 495268, "start": 4962.8, "end": 4967.200000000001, "text": " Okay, that should be it, I think.", "tokens": [1033, 11, 300, 820, 312, 309, 11, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1265, "seek": 495268, "start": 4967.200000000001, "end": 4968.200000000001, "text": " Perfect.", "tokens": [10246, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1266, "seek": 495268, "start": 4968.200000000001, "end": 4970.240000000001, "text": " Well, Jeroen, until next time.", "tokens": [1042, 11, 508, 2032, 268, 11, 1826, 958, 565, 13], "temperature": 0.0, "avg_logprob": -0.3094466896944268, "compression_ratio": 1.505952380952381, "no_speech_prob": 9.367833627038635e-06}, {"id": 1267, "seek": 497024, "start": 4970.24, "end": 4983.12, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 51008], "temperature": 0.0, "avg_logprob": -0.6759963035583496, "compression_ratio": 0.6666666666666666, "no_speech_prob": 4.87961333419662e-05}], "language": "en"}