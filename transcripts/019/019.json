{"text": " Hello, Jeroen. Hello, Dylan. How are you doing today? I'm doing very well. How about you? I'm doing well. And what are we talking about today? Today, we will talk about scaling Elm apps. Yeah, this sort of turned into another little book club talk, didn't it? Yeah, we didn't expect it to be like this, but I think we'll do it. So Richard Fellmann has made an awesome talk called Scaling Elm Apps, Elm Europe 2017. And we want to talk about some of the same subjects. And it turns out we want to talk about the whole subjects. Yeah, I think some of the things we'll be touching on, I think it'll end up being sort of a superset of that talk. Well, hopefully we will bring something to the table. Yeah, yeah. So one of the big questions that comes up a lot in Elm applications as you start to scale is, how do I encapsulate these pieces of state that I have into self contained units? That's always the question that people want to use this familiar pattern of a component. You said it. You said it. Coming from a background doing React or other object oriented paradigms, people tend to want to reach for something that's a component. And that seems like this natural way to split things. And I think that a lot of people who have worked on larger scale Elm apps will have experienced some of the pain of going too far to sort of componentize the way that you write your Elm code. So that's going to be one of the things we dive into today. So the big question for me is, how do you draw the dividing lines? That is one of the most interesting questions about scaling Elm apps in my mind. What are some of your thoughts about how to draw those dividing lines? There are no dividing lines. Just put everything in one giant main file. And no problems, no parent child communication, no components, and everyone is happy. Right. Now, of course, we did an episode on growing. I know what you're talking about. Well, we did hundreds of episodes right now. Oh, yeah. And of course, we did a whole episode on the life of a file, which was another book club episode. And we sort of touched on this topic. But I think there's still more to say about this in terms of a larger scale app that has to do communication. So that's sort of a different question. Or perhaps it's really the same question, but it deserves some revisiting. So one of the key takeaways from scaling Elm apps, Richard's Elm Europe talk, is narrowing the types. Yeah. But for a reason, to keep less things in our minds and make the things that we work with smaller. Yes. And easier to work with. Exactly. And if you draw those lines a certain way, and actually Richard illustrates it really nicely with this image of the sort of farmers market. Where he splits some tomatoes and some different vegetables into different regions versus drawing the line and getting all these different seemingly unrelated things in the picture. And so I think that really illustrates well how you can separate things out in a way that they aren't cohesive. So like a classic example of this to me is having like a decoders.elm module and putting all your decoders in there. Yeah. My example would be splitting by main model view types subscriptions, which is also I think something that, yeah, you're drawing the line somewhere, but it's not at the right place. We already talked about this with the life of Elm. That's right. That is how you scale Elm apps. But you know that that might be the answer, but that doesn't really give you much about what to do about that. And so, so, okay, you've got, you've got something that has a decoder and encapsulates a data type. It's built around a data type. We talked about all those things in our life of a file episode. And Evan talks about those things in his talk, the same title. And that's great. But then what about when you have to actually handle events and send messages? And how do you slice things when that's the case? And so this sort of component based mindset would say that you have a self contained state. And essentially I would describe this component based mindset in Elm, which is generally not recommended. I would define that as trying to wire through a mini Elm architecture for every self contained piece. So you draw those rectangles throughout your page and then you sort of take each of those rectangles and you say, okay, well this is like a Russian doll nesting where we've got each of those contained state, which might contain other bits of self contained state. So those, that's the sort of component architecture. Yeah. Which works in React, for instance. It works very well in React because I mean, you can, so let's talk about that. Like why does that work well in React and not in Elm? I would say it's because you have access to things like global states. So in Elm we work a lot with the single source of truth, which you can't access from any component. You need to pass it as an argument to different functions. So you can't access it in a read way and you can't also write it. But in React you can do that. Yeah. And you can also just sort of send events and respond to events and... And do side effects. Right. Yeah. Like running to the global model if you have one, is one such effect. Right. You can mutate things globally if you need to in a particular instance. And it's not necessarily going to require you to sort of wire up sending messages back to the parent. So that can be a more natural way to do it in that paradigm. So now I will say there are times when it is very nice to sort of encapsulate that local state. You know, if you've got some sort of, you know, if you want to have a date picker or some sort of sophisticated UI component that has a lot of internal state and you just want to sort of know, tell me when you've, when you're done picking a date. Just let me know. And you don't want to wire everything into the model and you know, you've got this in all these different pages and it's a pain to wire it in. There's an answer for that problem. You can use a web component and you could even, you know, you could even build that web component in Elm. And that can be a really good answer in cases like that. And I think that's one of the challenges of Elm is figuring out how do we split apart our code but not have this sort of... Like we want the explicitness and all the benefits of pure functions and explicitness and all of that and no magic. But we also want the convenience of being able to sprinkle something in and not have to manually wire it up and have verbose code that wires things through. And it's like, well, you've got to pick one. Although using a web component actually kind of allows you to do both where you have this self contained thing that has its state. It has an interface, you know, through sending events like actual HTML events that you can listen for in your Elm code that registers it. That can be a really good answer for those types of sort of state heavy UI components. Yeah. People usually don't like that because then they have to write JavaScript. But you can also write it in Elm. Yeah. You do lose all the niceness because you need to work with insurgency and communication through ports or attributes. But there's a middle ground. Yeah. And JavaScript is fine too, honestly, if it's not too big. Right. If it's like a UI component or perhaps it's an off the shelf UI component that you're using. I mean, with something like, you know, material UI, you know, you've got these like ripple effects when you hover over or click on buttons and things like that. And wiring that into an Elm app is really a pain. And doing that kind of thing, web components are exactly suited to solving that problem in a framework agnostic way. So, OK, so when it comes to actually, you know, there are certain cases when you need to communicate state from one part of the code and you need to send a message up. You know, a button gets clicked, some input gets changed, a validation happens, something comes back from the server and you need to sort of trigger it from these different parts of your app. And so another principle that I think about here is composing things. And sometimes I like to think in terms of a hook. I kind of like the term hook for, you know, something that gives you a point that you can hook into that you say, when this happens, let me know. And I want to do these other things. It's like a, you know, it's like a push notification or a code subscription, like even the subscription in HTML. Yeah, exactly. And so I think like one thing that I see happening sometimes is that you get this code that just piles on these responsibilities. And that's the thing to look out for. You know, I think that like scaling applications, it's all about, you know, just trying to find those dividing lines and how to organize things. And if you see all these different responsibilities being mixed together, you know, I mean, we've talked about this. There's an art to seeing those responsibilities. If you're looking at JSON decoders, you know, you might be tempted to say, like, oh, that's one responsibility. This is your responsible for all the JSON decoding. You're responsible for all the view code. But then you lose your ability to to do nice things like, you know, opaque types. You have you have to jump between code in all these different places. I think one good heuristic is when you sit down to work on a task, how many different modules do you have to jump around to? Yeah, usually you just want to work in the module that you need to change and maybe the one that uses it or the ones. But not different modules that are linked to each other and that are coupled to each other. Yes. Yeah. Yeah. I mean, if you're if you're changing one thing, then ideally you want to change things in one place. You want to. But now if you're changing two things, then if you have to go to two different modules, then that might be a good sign. And, you know, I mean, it's much easier said than done. But I think it's very easy to pile on responsibilities in a single module and have it be a sort of hub for all these responsibilities that get grouped together. And it can turn into a sort of junk drawer of, oh, this happens and these these events need to occur. And, you know, I need to change the state from this step to this step. And then when that happens, it needs to have these validations and it needs to store that between pages. And suddenly you've got all these different responsibilities in one module. But if you can instead compose those together, you know, in object oriented programming, sometimes people talk about prefer composition over inheritance. And there's a reason for that, because when you compose things together, you can think about them independently. When you inherit, it just intermeshes them and intermingles them in a way where it becomes very difficult to think about them separately. And because they're not separate simply. Right. You've coupled them together. And with composition, you can really think about things independently and say, OK, these things, both of these things need to happen. But I can think about them separately and put them together sort of at the edges, not at the center of the system. Yeah. So maybe let's go back to how to divide simple things. So I was half joking when I said put everything in your main file, because that kind of works. And you you don't have a lot of problems around what some people call parent child communication. Everything is one module and everything is pretty easy. It's not maintainable because your your update and your view do way too many things, but it's relatively easy. So if you want to draw the dividing lines, make things simpler. Often what you will do is just try and make bigger functions into smaller functions. So Rich's example was I have a view function, separate that into a view header, view body and view footer. And those are just simple view functions. So you don't have to make them separate. So all you're doing is just moving code. You're not adding any wiring at all except calling the function. And that is very easy refactor and very easy divide. Yeah, right. Those are like the low hanging fruit wins. And in general, I think it's a very good idea to start with low hanging fruit, too, because you just clear out all these things and suddenly you're like, OK, I know this is this is an easy win. This header, I can I can think about it on its own. Let's put it in a module. And then suddenly you come back and look at the module that was starting to get unwieldy and you can see it with more clarity. So starting with those obvious wins is a really good place to start. Yeah, you can do that for any functions, any view function, any update function, any decoder function, helper function, anything. And that's where we go back to you, to what you said about composition. Composing functions is pretty easy, but composing components is surprisingly because of the name is complicated. Yeah, right. Complex components composition. It's a mouthful. It's a good tongue twister. Come, come, come. Yeah, no, that's not going to be able not going to say that again, I think. Yeah. Even harder to do it than it is to say it. And I think the next step is then to to move things into a new module. As we said with the life of file, you have something that deals with one concept. Move that to a separate file that handles that one concept, that one responsibility. And when you're dealing with the architecture with with view and all that, that is what people usually call a component. And sometimes we call that a model view update triplets. And this is where things become a bit harder because often you will need to create a new message type. Yeah. And then you need to either use HTML dot map to fit those messages into the bigger picture or compose those messages. Richard calls it the teach me how to message pattern to pass in a function for creating the message and then compose those together with with pipes. Yeah. This one simpler alternative is you reuse the same kind of message as main has or the parent has because of an import cycle. You would need to move that to a message module. And that's where people start splitting everything by module view and update. And that simplifies in one way, but probably not in the right way. Yes. Right. So let's talk about that. So I let's talk about the core mechanics at play here a little bit. What are the foundational forces at play? You know, like we've got our our gravity and our electromagnetism and all these different you know, what are these forces? And I think I think one of the key forces which Richard talks about in scaling L maps is narrowing down what something can do. So when when by default you're making something as broad as possible, then it's harder to reason about it. Right. That's that's like a basic operating principle that I think is is an intuition you should listen to for guiding you towards how you how you design your own code and evolve the design. So Richard talks about if something needs to return a command, you know, or a message, it needs to do that. And there's there's nothing you can do to prevent that unless you reduce the scope of your actual application, which right. Now, sometimes that does happen. I wrote an article. I'll share the link for this sort of design process that I went through for graph QL at one point when when I started to build map to into a selection set. And the challenge was that when you when you map two selection sets together. So if you're selecting two different fields, you can actually you know, we talked about this a little in our graph QL episode. You can select two fields with the same name, but different arguments. You could select an avatar that has a large size argument and one that has a small size argument. And in GraphQL, those need an alias to prevent a collision there. And so the you know, the older version of Elm GraphQL was doing this approach where you build up a selection set, you say all the fields and it sort of needs them all at once. You can't arbitrarily add selection, add fields to a selection set. You have to add it in one place because it would then add an alias to each of those fields. But then if you throw something else in, it doesn't it would need this extra state to know how to add a unique alias. If it's adding avatar one and avatar two and then you map another thing in there with map two that already has an avatar. Now it needs to track the state of all the aliases it's used. And so there's an inherently inherent complexity there. And so, you know, in a nutshell, the design insight that I had for solving that problem was that I could uniquely create an alias for a field based on all of these different things that go into that. The arguments that it sends, the name of the field, and the it also depends on the type of the field. So I had to use that information. But you take all those things together, you create a unique cache. And now I don't have to think about that. There's no opportunity for fields to collide. And I don't need that state in a selection set to make sure they're unique because they're unique by default. So that is something that happens. And the name of that article, I think, was how Elm guides towards simplicity. So that actually is something that can happen, that you realize a simpler way to design something at a sort of architecture level, like at the core of the problem. Or sometimes you rethink the way that you're building a feature because you realize there's an inherent complexity that guides you towards a different approach that might be just as useful for users but easier to build. So I don't want to actually discount that because sometimes that's a perfectly valid thing to do, to make something simpler, and Elm reveals the inherent complexity. Elm isn't a silver bullet that's going to make dealing with complexity easy, but it reveals your complexity to you. And that's the power of it is you can see what's complex and you can see what's not. So all that said, if you can make something inherently simpler, great. But assuming that you're not going to change the actual problem at hand, if something is, you know, needing to communicate some global state, you click this one, you know, button and then it changes something globally, it closes a modal or whatever it may be. That's an inherent complexity that you need to have. But if you don't have that, then don't make the lowest common denominator communicating and making all possible information available. And so pass in the minimal amount of information you can and interact back to the parent minimally as well. Richard talks about that idea of sort of narrowing the types and the effect that that has when you're thinking locally. I mean, it's all about being able to think locally and, you know, putting your detective hat on when you're trying to understand a bug or understand how to add a new feature. And being able to eliminate options as irrelevant to your investigation. That's that's what it's all about. So that's like one of the kind of core mechanics of improving your your application design. I'll try and explicit what you meant with eliminating possibilities. Like Richard gives the example of I'm looking for a bug somewhere, some HTTP request was made and it shouldn't have. I'm looking for where that could have been created so I can stop it from being created. And then you go through all the functions and you if you want the HTTP request, you need something that returns a command. So you go through all the functions and you find ones that return command and the ones that don't you can just ignore. Exactly. Yeah. Yeah. So you're narrowing down those paths and your search space narrows. And I mean, that's the to me, that's the really incredible thing about Elm. And so that's I think one of the trade offs with some some approach like, you know, react that, you know, react is appealing in some ways. And a lot of people really love it. The thing that I love about Elm is that, you know, sure, maybe it's harder to just sprinkle in a little bit of JavaScript magic somewhere that, you know, you get this super powerful extra functionality and you have an Apollo caching layer for your GraphQL automatically and you send a mutation and it just automatically stores cached requests. But then when that's not working, where do you look? Everywhere. Everywhere. And, you know, not to mention the dynamism of JavaScript as a language compared to Elm. So that so it just Elm is incredible at narrowing down your search space and being able to think locally. And I think that's so beautiful. But but you have to structure your application in a way that leverages that. And if you structure your application where you have these many Elm architecture patterns, these triplets that return model command and out messages all over your app, you've thrown that benefit out the window. Effectively, it's what's happened. Most modules expose the triplet, the model, the view, the update, sometimes the subscriptions. And they often have the same signature like model is function that takes a message, a model and returns a model and a tuple of model and command message or just returns a model. But it can return a lot of things. And that is some flexibility that is very, very useful. And we have to keep in mind that we can add arguments and we can return more things that than what it's custom to do. That and that is where boilerplate comes in because we have to write all that boilerplate. Well, we can change that boilerplate however we want. And that is one of the strengths of having that sometimes annoying boilerplate that a lot of people complain about. Yeah, I think a nice way to think about this is, you know, I've heard the term used. It's actually from this book, The Goose Book, Growing Object Oriented Software Guided by Tests. I think that's the title. And of course, it's talking about object oriented design. But they also talk about having a functional core and they talk about outside in testing. And it's sort of a well known book for sort of introducing this outside in testing style where you start with the end to end tests and mock things in the middle. I'm not sure I tend to be more in the sort of I guess the Detroit school Kent Beck sort of inside out testing school of thought there. But I really like this idea that they have of talking about a matchmaker and having this be a responsibility that a matchmaker is delegating. It's I often think about like a telephone operator that just a phone call comes in and the operator. The operator's job is not to resolve the issue and fix the problem. The operator's job is to route it to the right person. That's all their job is. Hey, I need an auto mechanic. OK, let me patch you in. Hey, I need can you. I'm trying to call this person. OK, I'll patch you in. That's their only job. That's their only responsibility. You know, we kind of talked about how decoding is not a good way to define a responsibility. That's just something that with experience you learn that, hey, you know, decoding isn't actually there's responsibility. That's like one of the one of the things that an article needs to do. An article needs to decode. It also has a data type. It also knows how to fetch an article from the server. Those are the response. That's the responsibility is sort of everything involved in that data type of an article. Well, another thing that I've learned from experiences, I think that a matchmaker is a good responsibility and it's a good thing to think about that. Hey, if this is doing too much logic, maybe the job of this thing is really to be a matchmaker and to delegate to the right places. So, you know, your update function, if you see a lot of logic in your update function, that's a great opportunity to pull things out into some functions and to extract those out into some modules. Usually around some sort of data type. And, you know, this is where you sort of try to narrow that interface. So if something cleanly pulls out of your of your sort of page component. Now, pages are a place where you want to have this sort of triplet that you can communicate, you know, view and update to perform commands and stuff. I think that components work really nicely at the top level. There's siblings, these page components in Elm, but they don't work nicely in this sort of nesting hierarchy from the top down. You have this component which contains this component, which contains this component. I would say they work well when you really know what is possible and what can happen. And that is the case at the top level with pages. So you've got frameworks like Elm S.P.A. which creates page components because we know what can happen. But even creating that structure limits what it can do. Yes. And Elm S.P.A. actually is a really good example of this narrowing technique because even though under the hood, every page is a component, which is fully the same, that it has access to the shared state and it has access to its own local state. And it has an init and it has an update. You can narrow it by using these sort of simpler constructors, which we talked about in our Elm S.P.A. episode that you can say, hey, this is going to be a static component. It's just a view. It doesn't have any update or anything. And now that narrows your search space if you're trying to understand an issue or trying to understand how that page works. But so, yeah, this idea of a matchmaker, I think, is very handy. If something is delegating to a lot of different places, then it shouldn't be too smart for its own good. And if it is, then that's an opportunity to sort of split pieces out so it can just delegate. That should be its job. Another thing I see happening sometimes is having these sort of layers of abstraction for these delegators. So having like a, you know, you've got your page component for the main page, but then you've got some sort of abstraction around handling some part of the state. And it's got its own messages and updates that's just delegating, but it's not really doing anything itself. It's sort of delegating. I'm not sure I follow. Can you give me an example? So I've seen an example with a sort of page wizard state that that page wizard state has this sort of this flow where these, you know, it's changing to different steps and it's sort of delegating. But it's sort of taking this responsibility for like part of the state and it's watering it down. And you really don't want that delegation to go through too many different layers. So it's really this sort of composition versus inheritance sort of thing. Like you want to compose together. Like when you delegate, you want to be delegating at the sort of top level of a page. If you're delegating within these layers of abstraction, then what happens is it becomes really hard to trace where messages are coming from. You know, have you ever seen this in an application where you're just like, OK, wait a minute. So this message came from here, but where did that come from and how is that getting triggered? And so you want those sort of connections to be going through as few layers of indirection as possible. You want it to be more flat in that regard. And composition helps you do things in a flatter way. You also want it to be familiar. Like we have the Elm architecture where we usually have those functions that have the same signatures. And when they do, that's great because they're familiar to us and we can change them. If possible, it's nice to avoid that. Right. I think that there's a part of us as programmers that we see all these different, this asymmetry of all these different function signatures. Returning these different things. This one's returning a model. This one's returning a model command tuple. This one is just returning an email address. This one's returning a result email address with validation errors. We're like, this doesn't feel right. You know, it'd be really nice. What if these were all uniform? What if they all just returned a model command message? Wouldn't that be great? Well, yep. Turns out it might not be that great. So this like desire to have uniformity sometimes serves us well. But in this particular case, you have to keep in mind this dynamic of what does that do in terms of the cost of local reasoning and being able to eliminate possibilities. So there's this trade off between like wiring because it's like it. So, OK, if you if you make everything a sort of, you know, model command message componentized sort of or make it a triplet or a little mini architecture, right? If you make everything have access to everything and being able to be able to change everything and perform commands. I mean, now you've you've got JavaScript. You can perform a commit. You can perform side effects. All of you know, of course, it's it's still not not exactly the same as JavaScript, but you don't have runtime exceptions. So that's an improvement. Right. Yeah. But you've got this sort of there's this there's this tension between, hey, if I want to change this in the future, I'm going to have to do this extra work to wire that in and change that. And we want to avoid that. But what we also want to avoid is diluting what something is doing and making it less clear what something can change, what something depends on. And so that's I think that's the big key advice is that instinct should override your instincts and your desire to want to have a uniform way of things interacting and not ever have to change the way things are wired. If you have like those records or if you have like components which where you specify how to edit, how to update, how to view, they all need to work together. They all need to be the same, pretty much. So if you have a very small and simple component which only does have an internal state but not trigger commands, you still have to specify that you don't want any commands. And you still need to accept arguments that other components might want to have. So you have a lot of complexity and you have nothing that is narrowed down. And yeah, that makes it very hard to find what something can do and what is ignored. But if you if you make everything custom and just try to make it look the same by having names in its updates and subscriptions and so on, well, then it's familiar. But you're not tied to one implementation where if you need to add a new argument, you need to add it to all the components because you've inherited this complexity. Right. Now, that said, sometimes it can be nice to have these patterns of having like a session, like a sort of something that represents a global state that can be shared and passed around and persists between page changes. But, you know, so that's a common pattern. And, you know, I mean, there's a way to sort of find a happy medium where you're not wiring through everything by default, but you can also have this sort of container for, you know, a lot of the sort of core things that are being reused all over the place. Yeah. And I think that this makes sense because you will need the session in like most places in the application. So you end up ignoring one argument sometimes. Right. And in some places you will just not pass it around and where where that argument is ignored, things will be simpler. So, yeah, try to ignore what you can when you can and make the simplest solution. What's your opinion on extensible records, Jeroen? I think, you know, you've done a lot with this sort of like extensible functionality with phantom types. Oh, yeah. And that's a very interesting way to use that sort of part of the compiler. But what do you think about extensible records for data types? I really don't like it. I've seen, I've only seen it used at my current company. I didn't before because I wrote most of the code and didn't think of that. And it couples you to do some things that you don't want to do or that you don't need to do. So an extensible record is type alias records where you have some fields and then some unknown fields and then you specify what those unknown fields are wherever you will use it. Right. So you could have like a point type alias point equals record curly braces. And instead of just saying X colon, you know, number and Y colon number, you could say in front of those fields that you declare, you could give a type variable name like point, lowercase p point, and then a vertical bar. Sometimes I think about it as it's like this record is some sort of point record such that there is an X which is a number and a Y that's a number. But now if you pass a 3D point that has a Z as well, it would have access to the X and Y because it knows that it has those. But it wouldn't have access to the Z and it could ignore that. But you could pass a 2D point or a 3D point interchangeably. So it's sort of like a type of polymorphism in Elm. Yeah, kind of. I read it as points with at least X number and Y is a number. So those are great for arguments as Richard and apparently Evan says, according to Richard. Yeah, I wrote down Evan's quote that Richard quoted in this talk. Extensible records are useful to restrict arguments, not for data modeling. Yeah, so when they're used in arguments, you say my function colon takes a extensible record. So curly braces, points, vertical slash, X, blah, blah, blah. That says this function will take something that has those fields and do something with it. But that's just another way of saying it takes one argument X and one argument Y. But just as a record and it could be a more complex record, but we don't care about it. And that is just syntactic sugar in a way. So if you model it as one argument with an extensible record, it's no different from a non extensible record or several arguments. It's just it looks different, but it's in practice the same. But when you do modeling with that, so if you put like if you have a user which is an extensible record, which has a name, for instance, which has at least a name. And then you use that as user, which also has an age, which is a number. Well, then if you start working with that kind of type, you need to fetch users which always have names. And if you have the more fields you have in there, the more likely it will be that it will not be used wherever it is needed, wherever you will use that user. And that just means that you're adding unnecessary complexity because now you need to initialize those unused fields. You need to fetch them. You need to create them in a way that is complex sometimes. And yeah, it's just a lot of unnecessary pain. I think it would be much better to just say to create a new type that happens to contain the names, the same fields with the same names and same types. You also have to pass around the type variable everywhere, which can be a pain. Yep. I've used extensible records sometimes. Like sometimes a URL is a record in Elm which has a path and a host and whatever, a protocol and these different data types and values. And sometimes I only care about the path. And so I'll make my URLs an extensible record which only takes the path. And then if I'm testing it, I can pass in a record which only has path equals some path. And I can use that in the test. Now, I mean, because I don't want to create like maybe something requires a URL, but other things don't. And I don't want to create fake data for the URL necessarily, but I just want to make it clear what certain pieces depend on. Now, you could just take the path and directly grab that. Yeah, that would be the same thing. Right. And so I guess the, you know, maybe the argument for an extensible record would be that if you wanted to depend on another piece of data, then you could reach for it. So it could be a trade off where you get this benefit we're talking about where you can narrow and restrict types and see what you're working with more clearly, while at the same time you are able to grab another piece of data if you want to. That's the idea. In practice, generally I hear, you know, experienced Elm developers complaining about the headache of using extensible records to do that more than saying that it's a pattern that they really like and want to use more. So it seems that somehow in practice, it tends to be more of a headache to wire that up everywhere than it is, you know, than it merits. Yeah, it kind of feels like more like inheritance rather than composition. Yeah, right. You could add a user field to your records and compose it that way. Yeah. Rather than using an extensible record and you wouldn't have the same problems. Right. Yeah, I mean, it also couples you in an annoying way where, you know, if you say, hey, I've got a session, but I only need the auth token for this page. So I'm going to make the type that this page takes be an extensible record, which is only shares this one field in common with the global session type of the auth token. And, you know, now you've got that. But now if you rename auth token or change the type of that, every single place where you use those extensible records is going to be causing a compiler error and you have to go and fix that. And it just feels like heavy handed in that way. But they're great for functions. Just not for function return types. Yeah. Yeah. Oh, you're saying they're great as an argument to a function? Extensible records? Yeah. Okay, so you do like using them as an input value. Yeah, definitely. Yeah. Just not as a return value because that means that it's data. Got it. Yep. So you can take in a record and change just one part of it and return that. And if you depend on a particular field, you depend on, you know, you take a session if you wanted a function that performs authentication if needed and it takes a session, but it doesn't know about any of the fields in the session about the auth token. And if it has an auth token, then maybe it checks if it's fresh and make some requests or it fetches it if it needs to. And then it updates the auth token. So it changes the session to update that one field. You could have some type signatures using extensible records where you've got, you know, a session is the only field in that extensible record. So, you know, it's the only thing it depends on and it's the only thing it returns that it can potentially change. So there are cases where that can be convenient, but it's I, yeah, I don't think I have a strong enough opinion as to whether you should avoid them at all costs or use them at every opportunity at this point. Yeah. Well, you'll play with it and then you'll make your own opinion because that's one of the nice things with Elm. Like if he, it's easy to refactor things. So go ahead and play with something, try your way and then make your opinion. And for some reason we usually always come back to the same opinion as experienced vettelberg for some reason. Yeah. Yeah. For most things at least. It is interesting. Like, I wonder if you could use this pattern. You know, we sort of talked about like wanting this uniformity where you always have the same arguments coming in and you always have this like mini Elm architecture. I wonder if you could, I wonder how it would feel if you did that with extensible records. So you say, Hey, if I want to wire in a new piece, although I guess the problem with that would be that the only way you can wire in a command if it's being returned is if you know it's there in the extensible type. So you'd still need to wire it in after the extensible record guarantees that it will be present. So it doesn't really help you much because you can't just like treat it as a maybe and if it's there, do something with it. And also you won't be able to know as easily whether something will return a command. You will need to look at the signature of the implementation. And there you see that it will know it won't return a command somehow, but not at the call site. Yeah. Right. That's a good point. But yeah, so I guess the, I mean, one of the big overall lessons, I think, so we talked about like the core mechanics of narrowing, being able to think more locally, composing rather than deeply nesting things. And I think one of the takeaways too, you know, we've talked about this in the past is this idea of like, what is it that makes code maintainable? I mean, we maintain and read code much more often than we add new features and change things. Add new features. So if you can make it easy to trace where things are coming from, even if it's more verbose, even if it's more difficult to wire in a new thing, that equation just ends up, you know, if you were to weight it as an equation of how maintainable is this Elm code. Right. And you have. So like, let's make it an index like maintainability equals, you know, some constant times readability plus some constant times localized thinking ability plus some constant times the pain of wiring in. If I change things and that constant next to the pain of wiring things into change things is going to be very small compared to the constant in front of localized reasoning. So you want to optimize for that thing, even if it means it's going to be a pain with wiring things. And it's like, is that really the thing that's making you move slowly and code in your cycle slowly? Yeah, I think you're right, because there's not a lot of ways to wire things in an Elm. Right. It's a pain and we really don't like wiring. And so it feels like there's something wrong when we're wiring. But is that really what slows you down? And actually, in practice, it's not it like it feels sleek and it feels like we're really flowing when we don't have to wire things. But the things that we really get stuck on and that really slow us down is like, where is this bug coming from? Where do I change this thing? If I if I touch this code, what other things are potentially going to break? And if you can optimize the heck out of that, then you're going to be moving really fast. That's actually what makes you move fast. I know there's a few packages which try to make the wiring easier, especially for like update functions. Right. Which take like applicative style updates. Yeah. Like and do update and add commands. Those are quite nice. Yeah, I don't agree with that. You're not a fan? No, I feel like that's optimized the wrong thing because wiring is pretty simple to read. And easy to write also. But if you add a new vocabulary for creating your commands and your updates, that makes it more complex because it's less familiar. But I got you. You don't bring a lot of new things to the table. I see. So you're essentially saying that it requires a sort of uniformity that as we're talking about optimizing for that uniformity makes you not optimize for the really important thing, which is localized reasoning. So you don't like those packages because it requires that uniformity? No, because I don't think it impacts local wealth. Yeah. It makes it harder to read and to understand what the update function does in the case of the update function because that's a lot less familiar. And I could learn it, but I don't find the original thing complex. Like returning model and a list of commands is not very complex to me. So yeah, having a package for that just makes things more complex in my head. Yeah, I mean, there are definitely things that you can add in a pipeline that, again, you want things to be composable. There are ways to add things in a pipeline where you're actually making things not compose nicely, even though it feels nice because it's in a pipeline. And I don't know. I think in certain simple cases it can be. So like I've seen some nice patterns in codebases where you have like, you know, whatever you need to refresh this cache and then you need to do this and then you need to do all these different things in the update function. And you'll sort of chain those in and compose them. So it'll be a sort of like specific API for that code base to say, hey, these are the types of things, you know, make sure you're logged in and then do this thing or whatever it may be. And that can be a quite nice way to compose things. So and we've talked about this before, build your own tooling, sometimes like relying on packages for that. Sometimes those things are better as inspiration rather than just using them off the shelf. Just like LMSPA example, use it as an example, but don't reuse the code as it is to start your project with, I'd say. Right. Yeah. Make your own guarantees. Make your own ways of composing things together. All right. Well, what resources can we give people to help them get started with this journey of scaling their Elm applications? I would be remiss if I didn't say Richard Feldman's scaling Elm apps. Yeah. I think we've mentioned it before. Well worth a watch. Yeah. He really... Several watches. Yeah. Yeah. There's a lot of good stuff in there. And he does a really good job sort of giving a lot of concrete examples of this process of narrowing. And so that's worth paying particular attention to. I think just browsing the LMSPA example repo is a really good idea too. If you haven't already spent some time digging into that and looking at it, it's well worth just reading through that code and the accompanying article. I think you can reuse the same patterns for like parent child communication between quotes, which you can... Yeah. I think that's it. Yeah. All right. Well, let us know if you, dear listener, try any of these techniques for scaling your Elm applications or have any stories. Tweet them at us, Elm Radio Podcasts, and drop us a review, iTunes Podcasts, and send us a question at elm.radio.com. All right. Well, until next time. See you next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 2.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 1, "seek": 0, "start": 2.0, "end": 3.0, "text": " Hello, Dylan.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 2, "seek": 0, "start": 3.0, "end": 4.0, "text": " How are you doing today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 3, "seek": 0, "start": 4.0, "end": 5.0, "text": " I'm doing very well.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 4, "seek": 0, "start": 5.0, "end": 6.0, "text": " How about you?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 5, "seek": 0, "start": 6.0, "end": 7.0, "text": " I'm doing well.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 6, "seek": 0, "start": 7.0, "end": 9.0, "text": " And what are we talking about today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 7, "seek": 0, "start": 9.0, "end": 12.0, "text": " Today, we will talk about scaling Elm apps.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 8, "seek": 0, "start": 12.0, "end": 16.0, "text": " Yeah, this sort of turned into another little book club talk, didn't it?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 9, "seek": 0, "start": 16.0, "end": 21.0, "text": " Yeah, we didn't expect it to be like this, but I think we'll do it.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 10, "seek": 0, "start": 21.0, "end": 28.0, "text": " So Richard Fellmann has made an awesome talk called Scaling Elm Apps, Elm Europe 2017.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 588, 731, 13, 50614, 50614, 1012, 466, 291, 30, 50664, 50664, 286, 478, 884, 731, 13, 50714, 50714, 400, 437, 366, 321, 1417, 466, 965, 30, 50814, 50814, 2692, 11, 321, 486, 751, 466, 21589, 2699, 76, 7733, 13, 50964, 50964, 865, 11, 341, 1333, 295, 3574, 666, 1071, 707, 1446, 6482, 751, 11, 994, 380, 309, 30, 51164, 51164, 865, 11, 321, 994, 380, 2066, 309, 281, 312, 411, 341, 11, 457, 286, 519, 321, 603, 360, 309, 13, 51414, 51414, 407, 9809, 29709, 14912, 575, 1027, 364, 3476, 751, 1219, 2747, 4270, 2699, 76, 32231, 11, 2699, 76, 3315, 6591, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.15235437046397815, "compression_ratio": 1.6299212598425197, "no_caption_prob": 0.2869170308113098}, {"id": 11, "seek": 2800, "start": 28.0, "end": 33.0, "text": " And we want to talk about some of the same subjects.", "tokens": [50364, 400, 321, 528, 281, 751, 466, 512, 295, 264, 912, 13066, 13, 50614, 50614, 400, 309, 4523, 484, 321, 528, 281, 751, 466, 264, 1379, 13066, 13, 50814, 50814, 865, 11, 286, 519, 512, 295, 264, 721, 321, 603, 312, 11175, 322, 11, 286, 519, 309, 603, 917, 493, 885, 1333, 295, 257, 37906, 302, 295, 300, 751, 13, 51164, 51164, 1042, 11, 4696, 321, 486, 1565, 746, 281, 264, 3199, 13, 51314, 51314, 865, 11, 1338, 13, 51364, 51364, 407, 472, 295, 264, 955, 1651, 300, 1487, 493, 257, 688, 294, 2699, 76, 5821, 382, 291, 722, 281, 4373, 307, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09549739225855414, "compression_ratio": 1.7387387387387387, "no_caption_prob": 0.00036230578552931547}, {"id": 12, "seek": 2800, "start": 33.0, "end": 37.0, "text": " And it turns out we want to talk about the whole subjects.", "tokens": [50364, 400, 321, 528, 281, 751, 466, 512, 295, 264, 912, 13066, 13, 50614, 50614, 400, 309, 4523, 484, 321, 528, 281, 751, 466, 264, 1379, 13066, 13, 50814, 50814, 865, 11, 286, 519, 512, 295, 264, 721, 321, 603, 312, 11175, 322, 11, 286, 519, 309, 603, 917, 493, 885, 1333, 295, 257, 37906, 302, 295, 300, 751, 13, 51164, 51164, 1042, 11, 4696, 321, 486, 1565, 746, 281, 264, 3199, 13, 51314, 51314, 865, 11, 1338, 13, 51364, 51364, 407, 472, 295, 264, 955, 1651, 300, 1487, 493, 257, 688, 294, 2699, 76, 5821, 382, 291, 722, 281, 4373, 307, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09549739225855414, "compression_ratio": 1.7387387387387387, "no_caption_prob": 0.00036230578552931547}, {"id": 13, "seek": 2800, "start": 37.0, "end": 44.0, "text": " Yeah, I think some of the things we'll be touching on, I think it'll end up being sort of a superset of that talk.", "tokens": [50364, 400, 321, 528, 281, 751, 466, 512, 295, 264, 912, 13066, 13, 50614, 50614, 400, 309, 4523, 484, 321, 528, 281, 751, 466, 264, 1379, 13066, 13, 50814, 50814, 865, 11, 286, 519, 512, 295, 264, 721, 321, 603, 312, 11175, 322, 11, 286, 519, 309, 603, 917, 493, 885, 1333, 295, 257, 37906, 302, 295, 300, 751, 13, 51164, 51164, 1042, 11, 4696, 321, 486, 1565, 746, 281, 264, 3199, 13, 51314, 51314, 865, 11, 1338, 13, 51364, 51364, 407, 472, 295, 264, 955, 1651, 300, 1487, 493, 257, 688, 294, 2699, 76, 5821, 382, 291, 722, 281, 4373, 307, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09549739225855414, "compression_ratio": 1.7387387387387387, "no_caption_prob": 0.00036230578552931547}, {"id": 14, "seek": 2800, "start": 44.0, "end": 47.0, "text": " Well, hopefully we will bring something to the table.", "tokens": [50364, 400, 321, 528, 281, 751, 466, 512, 295, 264, 912, 13066, 13, 50614, 50614, 400, 309, 4523, 484, 321, 528, 281, 751, 466, 264, 1379, 13066, 13, 50814, 50814, 865, 11, 286, 519, 512, 295, 264, 721, 321, 603, 312, 11175, 322, 11, 286, 519, 309, 603, 917, 493, 885, 1333, 295, 257, 37906, 302, 295, 300, 751, 13, 51164, 51164, 1042, 11, 4696, 321, 486, 1565, 746, 281, 264, 3199, 13, 51314, 51314, 865, 11, 1338, 13, 51364, 51364, 407, 472, 295, 264, 955, 1651, 300, 1487, 493, 257, 688, 294, 2699, 76, 5821, 382, 291, 722, 281, 4373, 307, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09549739225855414, "compression_ratio": 1.7387387387387387, "no_caption_prob": 0.00036230578552931547}, {"id": 15, "seek": 2800, "start": 47.0, "end": 48.0, "text": " Yeah, yeah.", "tokens": [50364, 400, 321, 528, 281, 751, 466, 512, 295, 264, 912, 13066, 13, 50614, 50614, 400, 309, 4523, 484, 321, 528, 281, 751, 466, 264, 1379, 13066, 13, 50814, 50814, 865, 11, 286, 519, 512, 295, 264, 721, 321, 603, 312, 11175, 322, 11, 286, 519, 309, 603, 917, 493, 885, 1333, 295, 257, 37906, 302, 295, 300, 751, 13, 51164, 51164, 1042, 11, 4696, 321, 486, 1565, 746, 281, 264, 3199, 13, 51314, 51314, 865, 11, 1338, 13, 51364, 51364, 407, 472, 295, 264, 955, 1651, 300, 1487, 493, 257, 688, 294, 2699, 76, 5821, 382, 291, 722, 281, 4373, 307, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09549739225855414, "compression_ratio": 1.7387387387387387, "no_caption_prob": 0.00036230578552931547}, {"id": 16, "seek": 2800, "start": 48.0, "end": 55.0, "text": " So one of the big questions that comes up a lot in Elm applications as you start to scale is,", "tokens": [50364, 400, 321, 528, 281, 751, 466, 512, 295, 264, 912, 13066, 13, 50614, 50614, 400, 309, 4523, 484, 321, 528, 281, 751, 466, 264, 1379, 13066, 13, 50814, 50814, 865, 11, 286, 519, 512, 295, 264, 721, 321, 603, 312, 11175, 322, 11, 286, 519, 309, 603, 917, 493, 885, 1333, 295, 257, 37906, 302, 295, 300, 751, 13, 51164, 51164, 1042, 11, 4696, 321, 486, 1565, 746, 281, 264, 3199, 13, 51314, 51314, 865, 11, 1338, 13, 51364, 51364, 407, 472, 295, 264, 955, 1651, 300, 1487, 493, 257, 688, 294, 2699, 76, 5821, 382, 291, 722, 281, 4373, 307, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09549739225855414, "compression_ratio": 1.7387387387387387, "no_caption_prob": 0.00036230578552931547}, {"id": 17, "seek": 5500, "start": 55.0, "end": 63.0, "text": " how do I encapsulate these pieces of state that I have into self contained units?", "tokens": [50364, 577, 360, 286, 38745, 5256, 613, 3755, 295, 1785, 300, 286, 362, 666, 2698, 16212, 6815, 30, 50764, 50764, 663, 311, 1009, 264, 1168, 300, 561, 528, 281, 764, 341, 4963, 5102, 295, 257, 6542, 13, 51014, 51014, 509, 848, 309, 13, 51114, 51114, 509, 848, 309, 13, 51164, 51164, 12473, 490, 257, 3678, 884, 30644, 420, 661, 2657, 21841, 13480, 328, 2592, 11, 51414, 51414, 561, 3928, 281, 528, 281, 2524, 337, 746, 300, 311, 257, 6542, 13, 51564, 51564, 400, 300, 2544, 411, 341, 3303, 636, 281, 7472, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07084632913271587, "compression_ratio": 1.6355932203389831, "no_caption_prob": 7.601102697663009e-05}, {"id": 18, "seek": 5500, "start": 63.0, "end": 68.0, "text": " That's always the question that people want to use this familiar pattern of a component.", "tokens": [50364, 577, 360, 286, 38745, 5256, 613, 3755, 295, 1785, 300, 286, 362, 666, 2698, 16212, 6815, 30, 50764, 50764, 663, 311, 1009, 264, 1168, 300, 561, 528, 281, 764, 341, 4963, 5102, 295, 257, 6542, 13, 51014, 51014, 509, 848, 309, 13, 51114, 51114, 509, 848, 309, 13, 51164, 51164, 12473, 490, 257, 3678, 884, 30644, 420, 661, 2657, 21841, 13480, 328, 2592, 11, 51414, 51414, 561, 3928, 281, 528, 281, 2524, 337, 746, 300, 311, 257, 6542, 13, 51564, 51564, 400, 300, 2544, 411, 341, 3303, 636, 281, 7472, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07084632913271587, "compression_ratio": 1.6355932203389831, "no_caption_prob": 7.601102697663009e-05}, {"id": 19, "seek": 5500, "start": 68.0, "end": 70.0, "text": " You said it.", "tokens": [50364, 577, 360, 286, 38745, 5256, 613, 3755, 295, 1785, 300, 286, 362, 666, 2698, 16212, 6815, 30, 50764, 50764, 663, 311, 1009, 264, 1168, 300, 561, 528, 281, 764, 341, 4963, 5102, 295, 257, 6542, 13, 51014, 51014, 509, 848, 309, 13, 51114, 51114, 509, 848, 309, 13, 51164, 51164, 12473, 490, 257, 3678, 884, 30644, 420, 661, 2657, 21841, 13480, 328, 2592, 11, 51414, 51414, 561, 3928, 281, 528, 281, 2524, 337, 746, 300, 311, 257, 6542, 13, 51564, 51564, 400, 300, 2544, 411, 341, 3303, 636, 281, 7472, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07084632913271587, "compression_ratio": 1.6355932203389831, "no_caption_prob": 7.601102697663009e-05}, {"id": 20, "seek": 5500, "start": 70.0, "end": 71.0, "text": " You said it.", "tokens": [50364, 577, 360, 286, 38745, 5256, 613, 3755, 295, 1785, 300, 286, 362, 666, 2698, 16212, 6815, 30, 50764, 50764, 663, 311, 1009, 264, 1168, 300, 561, 528, 281, 764, 341, 4963, 5102, 295, 257, 6542, 13, 51014, 51014, 509, 848, 309, 13, 51114, 51114, 509, 848, 309, 13, 51164, 51164, 12473, 490, 257, 3678, 884, 30644, 420, 661, 2657, 21841, 13480, 328, 2592, 11, 51414, 51414, 561, 3928, 281, 528, 281, 2524, 337, 746, 300, 311, 257, 6542, 13, 51564, 51564, 400, 300, 2544, 411, 341, 3303, 636, 281, 7472, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07084632913271587, "compression_ratio": 1.6355932203389831, "no_caption_prob": 7.601102697663009e-05}, {"id": 21, "seek": 5500, "start": 71.0, "end": 76.0, "text": " Coming from a background doing React or other object oriented paradigms,", "tokens": [50364, 577, 360, 286, 38745, 5256, 613, 3755, 295, 1785, 300, 286, 362, 666, 2698, 16212, 6815, 30, 50764, 50764, 663, 311, 1009, 264, 1168, 300, 561, 528, 281, 764, 341, 4963, 5102, 295, 257, 6542, 13, 51014, 51014, 509, 848, 309, 13, 51114, 51114, 509, 848, 309, 13, 51164, 51164, 12473, 490, 257, 3678, 884, 30644, 420, 661, 2657, 21841, 13480, 328, 2592, 11, 51414, 51414, 561, 3928, 281, 528, 281, 2524, 337, 746, 300, 311, 257, 6542, 13, 51564, 51564, 400, 300, 2544, 411, 341, 3303, 636, 281, 7472, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07084632913271587, "compression_ratio": 1.6355932203389831, "no_caption_prob": 7.601102697663009e-05}, {"id": 22, "seek": 5500, "start": 76.0, "end": 79.0, "text": " people tend to want to reach for something that's a component.", "tokens": [50364, 577, 360, 286, 38745, 5256, 613, 3755, 295, 1785, 300, 286, 362, 666, 2698, 16212, 6815, 30, 50764, 50764, 663, 311, 1009, 264, 1168, 300, 561, 528, 281, 764, 341, 4963, 5102, 295, 257, 6542, 13, 51014, 51014, 509, 848, 309, 13, 51114, 51114, 509, 848, 309, 13, 51164, 51164, 12473, 490, 257, 3678, 884, 30644, 420, 661, 2657, 21841, 13480, 328, 2592, 11, 51414, 51414, 561, 3928, 281, 528, 281, 2524, 337, 746, 300, 311, 257, 6542, 13, 51564, 51564, 400, 300, 2544, 411, 341, 3303, 636, 281, 7472, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07084632913271587, "compression_ratio": 1.6355932203389831, "no_caption_prob": 7.601102697663009e-05}, {"id": 23, "seek": 5500, "start": 79.0, "end": 83.0, "text": " And that seems like this natural way to split things.", "tokens": [50364, 577, 360, 286, 38745, 5256, 613, 3755, 295, 1785, 300, 286, 362, 666, 2698, 16212, 6815, 30, 50764, 50764, 663, 311, 1009, 264, 1168, 300, 561, 528, 281, 764, 341, 4963, 5102, 295, 257, 6542, 13, 51014, 51014, 509, 848, 309, 13, 51114, 51114, 509, 848, 309, 13, 51164, 51164, 12473, 490, 257, 3678, 884, 30644, 420, 661, 2657, 21841, 13480, 328, 2592, 11, 51414, 51414, 561, 3928, 281, 528, 281, 2524, 337, 746, 300, 311, 257, 6542, 13, 51564, 51564, 400, 300, 2544, 411, 341, 3303, 636, 281, 7472, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07084632913271587, "compression_ratio": 1.6355932203389831, "no_caption_prob": 7.601102697663009e-05}, {"id": 24, "seek": 8300, "start": 83.0, "end": 91.0, "text": " And I think that a lot of people who have worked on larger scale Elm apps will have experienced some of the pain", "tokens": [50364, 400, 286, 519, 300, 257, 688, 295, 561, 567, 362, 2732, 322, 4833, 4373, 2699, 76, 7733, 486, 362, 6751, 512, 295, 264, 1822, 50764, 50764, 295, 516, 886, 1400, 281, 1333, 295, 6542, 1125, 264, 636, 300, 291, 2464, 428, 2699, 76, 3089, 13, 51014, 51014, 407, 300, 311, 516, 281, 312, 472, 295, 264, 721, 321, 9192, 666, 965, 13, 51164, 51164, 407, 264, 955, 1168, 337, 385, 307, 11, 577, 360, 291, 2642, 264, 26764, 3876, 30, 51514, 51514, 663, 307, 472, 295, 264, 881, 1880, 1651, 466, 21589, 2699, 76, 7733, 294, 452, 1575, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053318708845712603, "compression_ratio": 1.6694560669456067, "no_caption_prob": 0.00011958536924794316}, {"id": 25, "seek": 8300, "start": 91.0, "end": 96.0, "text": " of going too far to sort of componentize the way that you write your Elm code.", "tokens": [50364, 400, 286, 519, 300, 257, 688, 295, 561, 567, 362, 2732, 322, 4833, 4373, 2699, 76, 7733, 486, 362, 6751, 512, 295, 264, 1822, 50764, 50764, 295, 516, 886, 1400, 281, 1333, 295, 6542, 1125, 264, 636, 300, 291, 2464, 428, 2699, 76, 3089, 13, 51014, 51014, 407, 300, 311, 516, 281, 312, 472, 295, 264, 721, 321, 9192, 666, 965, 13, 51164, 51164, 407, 264, 955, 1168, 337, 385, 307, 11, 577, 360, 291, 2642, 264, 26764, 3876, 30, 51514, 51514, 663, 307, 472, 295, 264, 881, 1880, 1651, 466, 21589, 2699, 76, 7733, 294, 452, 1575, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053318708845712603, "compression_ratio": 1.6694560669456067, "no_caption_prob": 0.00011958536924794316}, {"id": 26, "seek": 8300, "start": 96.0, "end": 99.0, "text": " So that's going to be one of the things we dive into today.", "tokens": [50364, 400, 286, 519, 300, 257, 688, 295, 561, 567, 362, 2732, 322, 4833, 4373, 2699, 76, 7733, 486, 362, 6751, 512, 295, 264, 1822, 50764, 50764, 295, 516, 886, 1400, 281, 1333, 295, 6542, 1125, 264, 636, 300, 291, 2464, 428, 2699, 76, 3089, 13, 51014, 51014, 407, 300, 311, 516, 281, 312, 472, 295, 264, 721, 321, 9192, 666, 965, 13, 51164, 51164, 407, 264, 955, 1168, 337, 385, 307, 11, 577, 360, 291, 2642, 264, 26764, 3876, 30, 51514, 51514, 663, 307, 472, 295, 264, 881, 1880, 1651, 466, 21589, 2699, 76, 7733, 294, 452, 1575, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053318708845712603, "compression_ratio": 1.6694560669456067, "no_caption_prob": 0.00011958536924794316}, {"id": 27, "seek": 8300, "start": 99.0, "end": 106.0, "text": " So the big question for me is, how do you draw the dividing lines?", "tokens": [50364, 400, 286, 519, 300, 257, 688, 295, 561, 567, 362, 2732, 322, 4833, 4373, 2699, 76, 7733, 486, 362, 6751, 512, 295, 264, 1822, 50764, 50764, 295, 516, 886, 1400, 281, 1333, 295, 6542, 1125, 264, 636, 300, 291, 2464, 428, 2699, 76, 3089, 13, 51014, 51014, 407, 300, 311, 516, 281, 312, 472, 295, 264, 721, 321, 9192, 666, 965, 13, 51164, 51164, 407, 264, 955, 1168, 337, 385, 307, 11, 577, 360, 291, 2642, 264, 26764, 3876, 30, 51514, 51514, 663, 307, 472, 295, 264, 881, 1880, 1651, 466, 21589, 2699, 76, 7733, 294, 452, 1575, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053318708845712603, "compression_ratio": 1.6694560669456067, "no_caption_prob": 0.00011958536924794316}, {"id": 28, "seek": 8300, "start": 106.0, "end": 110.0, "text": " That is one of the most interesting questions about scaling Elm apps in my mind.", "tokens": [50364, 400, 286, 519, 300, 257, 688, 295, 561, 567, 362, 2732, 322, 4833, 4373, 2699, 76, 7733, 486, 362, 6751, 512, 295, 264, 1822, 50764, 50764, 295, 516, 886, 1400, 281, 1333, 295, 6542, 1125, 264, 636, 300, 291, 2464, 428, 2699, 76, 3089, 13, 51014, 51014, 407, 300, 311, 516, 281, 312, 472, 295, 264, 721, 321, 9192, 666, 965, 13, 51164, 51164, 407, 264, 955, 1168, 337, 385, 307, 11, 577, 360, 291, 2642, 264, 26764, 3876, 30, 51514, 51514, 663, 307, 472, 295, 264, 881, 1880, 1651, 466, 21589, 2699, 76, 7733, 294, 452, 1575, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053318708845712603, "compression_ratio": 1.6694560669456067, "no_caption_prob": 0.00011958536924794316}, {"id": 29, "seek": 11000, "start": 110.0, "end": 114.0, "text": " What are some of your thoughts about how to draw those dividing lines?", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 30, "seek": 11000, "start": 114.0, "end": 115.0, "text": " There are no dividing lines.", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 31, "seek": 11000, "start": 115.0, "end": 119.0, "text": " Just put everything in one giant main file.", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 32, "seek": 11000, "start": 119.0, "end": 125.0, "text": " And no problems, no parent child communication, no components, and everyone is happy.", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 33, "seek": 11000, "start": 125.0, "end": 126.0, "text": " Right.", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 34, "seek": 11000, "start": 126.0, "end": 130.0, "text": " Now, of course, we did an episode on growing.", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 35, "seek": 11000, "start": 130.0, "end": 135.0, "text": " I know what you're talking about.", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 36, "seek": 11000, "start": 135.0, "end": 138.0, "text": " Well, we did hundreds of episodes right now.", "tokens": [50364, 708, 366, 512, 295, 428, 4598, 466, 577, 281, 2642, 729, 26764, 3876, 30, 50564, 50564, 821, 366, 572, 26764, 3876, 13, 50614, 50614, 1449, 829, 1203, 294, 472, 7410, 2135, 3991, 13, 50814, 50814, 400, 572, 2740, 11, 572, 2596, 1440, 6101, 11, 572, 6677, 11, 293, 1518, 307, 2055, 13, 51114, 51114, 1779, 13, 51164, 51164, 823, 11, 295, 1164, 11, 321, 630, 364, 3500, 322, 4194, 13, 51364, 51364, 286, 458, 437, 291, 434, 1417, 466, 13, 51614, 51614, 1042, 11, 321, 630, 6779, 295, 9313, 558, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10446146130561829, "compression_ratio": 1.5427350427350428, "no_caption_prob": 2.2827580323792063e-05}, {"id": 37, "seek": 13800, "start": 138.0, "end": 144.0, "text": " Oh, yeah. And of course, we did a whole episode on the life of a file, which was another book club episode.", "tokens": [50364, 876, 11, 1338, 13, 400, 295, 1164, 11, 321, 630, 257, 1379, 3500, 322, 264, 993, 295, 257, 3991, 11, 597, 390, 1071, 1446, 6482, 3500, 13, 50664, 50664, 400, 321, 1333, 295, 9828, 322, 341, 4829, 13, 50814, 50814, 583, 286, 519, 456, 311, 920, 544, 281, 584, 466, 341, 294, 2115, 295, 257, 4833, 4373, 724, 300, 575, 281, 360, 6101, 13, 51164, 51164, 407, 300, 311, 1333, 295, 257, 819, 1168, 13, 51264, 51264, 1610, 4317, 309, 311, 534, 264, 912, 1168, 11, 457, 309, 17037, 512, 20767, 1748, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07406193448096207, "compression_ratio": 1.5948275862068966, "no_caption_prob": 4.757355782203376e-05}, {"id": 38, "seek": 13800, "start": 144.0, "end": 147.0, "text": " And we sort of touched on this topic.", "tokens": [50364, 876, 11, 1338, 13, 400, 295, 1164, 11, 321, 630, 257, 1379, 3500, 322, 264, 993, 295, 257, 3991, 11, 597, 390, 1071, 1446, 6482, 3500, 13, 50664, 50664, 400, 321, 1333, 295, 9828, 322, 341, 4829, 13, 50814, 50814, 583, 286, 519, 456, 311, 920, 544, 281, 584, 466, 341, 294, 2115, 295, 257, 4833, 4373, 724, 300, 575, 281, 360, 6101, 13, 51164, 51164, 407, 300, 311, 1333, 295, 257, 819, 1168, 13, 51264, 51264, 1610, 4317, 309, 311, 534, 264, 912, 1168, 11, 457, 309, 17037, 512, 20767, 1748, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07406193448096207, "compression_ratio": 1.5948275862068966, "no_caption_prob": 4.757355782203376e-05}, {"id": 39, "seek": 13800, "start": 147.0, "end": 154.0, "text": " But I think there's still more to say about this in terms of a larger scale app that has to do communication.", "tokens": [50364, 876, 11, 1338, 13, 400, 295, 1164, 11, 321, 630, 257, 1379, 3500, 322, 264, 993, 295, 257, 3991, 11, 597, 390, 1071, 1446, 6482, 3500, 13, 50664, 50664, 400, 321, 1333, 295, 9828, 322, 341, 4829, 13, 50814, 50814, 583, 286, 519, 456, 311, 920, 544, 281, 584, 466, 341, 294, 2115, 295, 257, 4833, 4373, 724, 300, 575, 281, 360, 6101, 13, 51164, 51164, 407, 300, 311, 1333, 295, 257, 819, 1168, 13, 51264, 51264, 1610, 4317, 309, 311, 534, 264, 912, 1168, 11, 457, 309, 17037, 512, 20767, 1748, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07406193448096207, "compression_ratio": 1.5948275862068966, "no_caption_prob": 4.757355782203376e-05}, {"id": 40, "seek": 13800, "start": 154.0, "end": 156.0, "text": " So that's sort of a different question.", "tokens": [50364, 876, 11, 1338, 13, 400, 295, 1164, 11, 321, 630, 257, 1379, 3500, 322, 264, 993, 295, 257, 3991, 11, 597, 390, 1071, 1446, 6482, 3500, 13, 50664, 50664, 400, 321, 1333, 295, 9828, 322, 341, 4829, 13, 50814, 50814, 583, 286, 519, 456, 311, 920, 544, 281, 584, 466, 341, 294, 2115, 295, 257, 4833, 4373, 724, 300, 575, 281, 360, 6101, 13, 51164, 51164, 407, 300, 311, 1333, 295, 257, 819, 1168, 13, 51264, 51264, 1610, 4317, 309, 311, 534, 264, 912, 1168, 11, 457, 309, 17037, 512, 20767, 1748, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07406193448096207, "compression_ratio": 1.5948275862068966, "no_caption_prob": 4.757355782203376e-05}, {"id": 41, "seek": 13800, "start": 156.0, "end": 161.0, "text": " Or perhaps it's really the same question, but it deserves some revisiting.", "tokens": [50364, 876, 11, 1338, 13, 400, 295, 1164, 11, 321, 630, 257, 1379, 3500, 322, 264, 993, 295, 257, 3991, 11, 597, 390, 1071, 1446, 6482, 3500, 13, 50664, 50664, 400, 321, 1333, 295, 9828, 322, 341, 4829, 13, 50814, 50814, 583, 286, 519, 456, 311, 920, 544, 281, 584, 466, 341, 294, 2115, 295, 257, 4833, 4373, 724, 300, 575, 281, 360, 6101, 13, 51164, 51164, 407, 300, 311, 1333, 295, 257, 819, 1168, 13, 51264, 51264, 1610, 4317, 309, 311, 534, 264, 912, 1168, 11, 457, 309, 17037, 512, 20767, 1748, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07406193448096207, "compression_ratio": 1.5948275862068966, "no_caption_prob": 4.757355782203376e-05}, {"id": 42, "seek": 16100, "start": 161.0, "end": 170.0, "text": " So one of the key takeaways from scaling Elm apps, Richard's Elm Europe talk, is narrowing the types.", "tokens": [50364, 407, 472, 295, 264, 2141, 45584, 490, 21589, 2699, 76, 7733, 11, 9809, 311, 2699, 76, 3315, 751, 11, 307, 9432, 278, 264, 3467, 13, 50814, 50814, 865, 13, 583, 337, 257, 1778, 11, 281, 1066, 1570, 721, 294, 527, 9634, 293, 652, 264, 721, 300, 321, 589, 365, 4356, 13, 51264, 51264, 1079, 13, 51314, 51314, 400, 3571, 281, 589, 365, 13, 51364, 51364, 7587, 13, 400, 498, 291, 2642, 729, 3876, 257, 1629, 636, 11, 293, 767, 9809, 41718, 309, 534, 9594, 365, 341, 3256, 295, 264, 1333, 295, 11339, 2142, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1649135278195751, "compression_ratio": 1.606694560669456, "no_caption_prob": 4.683779116021469e-05}, {"id": 43, "seek": 16100, "start": 170.0, "end": 179.0, "text": " Yeah. But for a reason, to keep less things in our minds and make the things that we work with smaller.", "tokens": [50364, 407, 472, 295, 264, 2141, 45584, 490, 21589, 2699, 76, 7733, 11, 9809, 311, 2699, 76, 3315, 751, 11, 307, 9432, 278, 264, 3467, 13, 50814, 50814, 865, 13, 583, 337, 257, 1778, 11, 281, 1066, 1570, 721, 294, 527, 9634, 293, 652, 264, 721, 300, 321, 589, 365, 4356, 13, 51264, 51264, 1079, 13, 51314, 51314, 400, 3571, 281, 589, 365, 13, 51364, 51364, 7587, 13, 400, 498, 291, 2642, 729, 3876, 257, 1629, 636, 11, 293, 767, 9809, 41718, 309, 534, 9594, 365, 341, 3256, 295, 264, 1333, 295, 11339, 2142, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1649135278195751, "compression_ratio": 1.606694560669456, "no_caption_prob": 4.683779116021469e-05}, {"id": 44, "seek": 16100, "start": 179.0, "end": 180.0, "text": " Yes.", "tokens": [50364, 407, 472, 295, 264, 2141, 45584, 490, 21589, 2699, 76, 7733, 11, 9809, 311, 2699, 76, 3315, 751, 11, 307, 9432, 278, 264, 3467, 13, 50814, 50814, 865, 13, 583, 337, 257, 1778, 11, 281, 1066, 1570, 721, 294, 527, 9634, 293, 652, 264, 721, 300, 321, 589, 365, 4356, 13, 51264, 51264, 1079, 13, 51314, 51314, 400, 3571, 281, 589, 365, 13, 51364, 51364, 7587, 13, 400, 498, 291, 2642, 729, 3876, 257, 1629, 636, 11, 293, 767, 9809, 41718, 309, 534, 9594, 365, 341, 3256, 295, 264, 1333, 295, 11339, 2142, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1649135278195751, "compression_ratio": 1.606694560669456, "no_caption_prob": 4.683779116021469e-05}, {"id": 45, "seek": 16100, "start": 180.0, "end": 181.0, "text": " And easier to work with.", "tokens": [50364, 407, 472, 295, 264, 2141, 45584, 490, 21589, 2699, 76, 7733, 11, 9809, 311, 2699, 76, 3315, 751, 11, 307, 9432, 278, 264, 3467, 13, 50814, 50814, 865, 13, 583, 337, 257, 1778, 11, 281, 1066, 1570, 721, 294, 527, 9634, 293, 652, 264, 721, 300, 321, 589, 365, 4356, 13, 51264, 51264, 1079, 13, 51314, 51314, 400, 3571, 281, 589, 365, 13, 51364, 51364, 7587, 13, 400, 498, 291, 2642, 729, 3876, 257, 1629, 636, 11, 293, 767, 9809, 41718, 309, 534, 9594, 365, 341, 3256, 295, 264, 1333, 295, 11339, 2142, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1649135278195751, "compression_ratio": 1.606694560669456, "no_caption_prob": 4.683779116021469e-05}, {"id": 46, "seek": 16100, "start": 181.0, "end": 190.0, "text": " Exactly. And if you draw those lines a certain way, and actually Richard illustrates it really nicely with this image of the sort of farmers market.", "tokens": [50364, 407, 472, 295, 264, 2141, 45584, 490, 21589, 2699, 76, 7733, 11, 9809, 311, 2699, 76, 3315, 751, 11, 307, 9432, 278, 264, 3467, 13, 50814, 50814, 865, 13, 583, 337, 257, 1778, 11, 281, 1066, 1570, 721, 294, 527, 9634, 293, 652, 264, 721, 300, 321, 589, 365, 4356, 13, 51264, 51264, 1079, 13, 51314, 51314, 400, 3571, 281, 589, 365, 13, 51364, 51364, 7587, 13, 400, 498, 291, 2642, 729, 3876, 257, 1629, 636, 11, 293, 767, 9809, 41718, 309, 534, 9594, 365, 341, 3256, 295, 264, 1333, 295, 11339, 2142, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1649135278195751, "compression_ratio": 1.606694560669456, "no_caption_prob": 4.683779116021469e-05}, {"id": 47, "seek": 19000, "start": 190.0, "end": 202.0, "text": " Where he splits some tomatoes and some different vegetables into different regions versus drawing the line and getting all these different seemingly unrelated things in the picture.", "tokens": [50364, 2305, 415, 37741, 512, 15135, 293, 512, 819, 9320, 666, 819, 10682, 5717, 6316, 264, 1622, 293, 1242, 439, 613, 819, 18709, 38967, 721, 294, 264, 3036, 13, 50964, 50964, 400, 370, 286, 519, 300, 534, 41718, 731, 577, 291, 393, 4994, 721, 484, 294, 257, 636, 300, 436, 3212, 380, 43025, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07538864068817674, "compression_ratio": 1.60989010989011, "no_caption_prob": 0.0003980548644904047}, {"id": 48, "seek": 19000, "start": 202.0, "end": 211.0, "text": " And so I think that really illustrates well how you can separate things out in a way that they aren't cohesive.", "tokens": [50364, 2305, 415, 37741, 512, 15135, 293, 512, 819, 9320, 666, 819, 10682, 5717, 6316, 264, 1622, 293, 1242, 439, 613, 819, 18709, 38967, 721, 294, 264, 3036, 13, 50964, 50964, 400, 370, 286, 519, 300, 534, 41718, 731, 577, 291, 393, 4994, 721, 484, 294, 257, 636, 300, 436, 3212, 380, 43025, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07538864068817674, "compression_ratio": 1.60989010989011, "no_caption_prob": 0.0003980548644904047}, {"id": 49, "seek": 21100, "start": 211.0, "end": 220.0, "text": " So like a classic example of this to me is having like a decoders.elm module and putting all your decoders in there.", "tokens": [50364, 407, 411, 257, 7230, 1365, 295, 341, 281, 385, 307, 1419, 411, 257, 979, 378, 433, 13, 338, 76, 10088, 293, 3372, 439, 428, 979, 378, 433, 294, 456, 13, 50814, 50814, 865, 13, 1222, 1365, 576, 312, 30348, 538, 2135, 2316, 1910, 3467, 44951, 11, 597, 307, 611, 286, 519, 746, 300, 11, 1338, 11, 291, 434, 6316, 264, 1622, 4079, 11, 457, 309, 311, 406, 412, 264, 558, 1081, 13, 51464, 51464, 492, 1217, 2825, 466, 341, 365, 264, 993, 295, 2699, 76, 13, 51664, 51664, 663, 311, 558, 13, 663, 307, 577, 291, 4373, 2699, 76, 7733, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11765882401239304, "compression_ratio": 1.5912698412698412, "no_caption_prob": 7.966413249960169e-05}, {"id": 50, "seek": 21100, "start": 220.0, "end": 233.0, "text": " Yeah. My example would be splitting by main model view types subscriptions, which is also I think something that, yeah, you're drawing the line somewhere, but it's not at the right place.", "tokens": [50364, 407, 411, 257, 7230, 1365, 295, 341, 281, 385, 307, 1419, 411, 257, 979, 378, 433, 13, 338, 76, 10088, 293, 3372, 439, 428, 979, 378, 433, 294, 456, 13, 50814, 50814, 865, 13, 1222, 1365, 576, 312, 30348, 538, 2135, 2316, 1910, 3467, 44951, 11, 597, 307, 611, 286, 519, 746, 300, 11, 1338, 11, 291, 434, 6316, 264, 1622, 4079, 11, 457, 309, 311, 406, 412, 264, 558, 1081, 13, 51464, 51464, 492, 1217, 2825, 466, 341, 365, 264, 993, 295, 2699, 76, 13, 51664, 51664, 663, 311, 558, 13, 663, 307, 577, 291, 4373, 2699, 76, 7733, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11765882401239304, "compression_ratio": 1.5912698412698412, "no_caption_prob": 7.966413249960169e-05}, {"id": 51, "seek": 21100, "start": 233.0, "end": 237.0, "text": " We already talked about this with the life of Elm.", "tokens": [50364, 407, 411, 257, 7230, 1365, 295, 341, 281, 385, 307, 1419, 411, 257, 979, 378, 433, 13, 338, 76, 10088, 293, 3372, 439, 428, 979, 378, 433, 294, 456, 13, 50814, 50814, 865, 13, 1222, 1365, 576, 312, 30348, 538, 2135, 2316, 1910, 3467, 44951, 11, 597, 307, 611, 286, 519, 746, 300, 11, 1338, 11, 291, 434, 6316, 264, 1622, 4079, 11, 457, 309, 311, 406, 412, 264, 558, 1081, 13, 51464, 51464, 492, 1217, 2825, 466, 341, 365, 264, 993, 295, 2699, 76, 13, 51664, 51664, 663, 311, 558, 13, 663, 307, 577, 291, 4373, 2699, 76, 7733, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11765882401239304, "compression_ratio": 1.5912698412698412, "no_caption_prob": 7.966413249960169e-05}, {"id": 52, "seek": 21100, "start": 237.0, "end": 239.0, "text": " That's right. That is how you scale Elm apps.", "tokens": [50364, 407, 411, 257, 7230, 1365, 295, 341, 281, 385, 307, 1419, 411, 257, 979, 378, 433, 13, 338, 76, 10088, 293, 3372, 439, 428, 979, 378, 433, 294, 456, 13, 50814, 50814, 865, 13, 1222, 1365, 576, 312, 30348, 538, 2135, 2316, 1910, 3467, 44951, 11, 597, 307, 611, 286, 519, 746, 300, 11, 1338, 11, 291, 434, 6316, 264, 1622, 4079, 11, 457, 309, 311, 406, 412, 264, 558, 1081, 13, 51464, 51464, 492, 1217, 2825, 466, 341, 365, 264, 993, 295, 2699, 76, 13, 51664, 51664, 663, 311, 558, 13, 663, 307, 577, 291, 4373, 2699, 76, 7733, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11765882401239304, "compression_ratio": 1.5912698412698412, "no_caption_prob": 7.966413249960169e-05}, {"id": 53, "seek": 23900, "start": 239.0, "end": 245.0, "text": " But you know that that might be the answer, but that doesn't really give you much about what to do about that.", "tokens": [50364, 583, 291, 458, 300, 300, 1062, 312, 264, 1867, 11, 457, 300, 1177, 380, 534, 976, 291, 709, 466, 437, 281, 360, 466, 300, 13, 50664, 50664, 400, 370, 11, 370, 11, 1392, 11, 291, 600, 658, 11, 291, 600, 658, 746, 300, 575, 257, 979, 19866, 293, 38745, 26192, 257, 1412, 2010, 13, 50964, 50964, 467, 311, 3094, 926, 257, 1412, 2010, 13, 51064, 51064, 492, 2825, 466, 439, 729, 721, 294, 527, 993, 295, 257, 3991, 3500, 13, 51214, 51214, 400, 22613, 6686, 466, 729, 721, 294, 702, 751, 11, 264, 912, 4876, 13, 51414, 51414, 400, 300, 311, 869, 13, 51464, 51464, 583, 550, 437, 466, 562, 291, 362, 281, 767, 4813, 3931, 293, 2845, 7897, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11920915111418694, "compression_ratio": 1.7613636363636365, "no_caption_prob": 0.00010069610289065167}, {"id": 54, "seek": 23900, "start": 245.0, "end": 251.0, "text": " And so, so, okay, you've got, you've got something that has a decoder and encapsulates a data type.", "tokens": [50364, 583, 291, 458, 300, 300, 1062, 312, 264, 1867, 11, 457, 300, 1177, 380, 534, 976, 291, 709, 466, 437, 281, 360, 466, 300, 13, 50664, 50664, 400, 370, 11, 370, 11, 1392, 11, 291, 600, 658, 11, 291, 600, 658, 746, 300, 575, 257, 979, 19866, 293, 38745, 26192, 257, 1412, 2010, 13, 50964, 50964, 467, 311, 3094, 926, 257, 1412, 2010, 13, 51064, 51064, 492, 2825, 466, 439, 729, 721, 294, 527, 993, 295, 257, 3991, 3500, 13, 51214, 51214, 400, 22613, 6686, 466, 729, 721, 294, 702, 751, 11, 264, 912, 4876, 13, 51414, 51414, 400, 300, 311, 869, 13, 51464, 51464, 583, 550, 437, 466, 562, 291, 362, 281, 767, 4813, 3931, 293, 2845, 7897, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11920915111418694, "compression_ratio": 1.7613636363636365, "no_caption_prob": 0.00010069610289065167}, {"id": 55, "seek": 23900, "start": 251.0, "end": 253.0, "text": " It's built around a data type.", "tokens": [50364, 583, 291, 458, 300, 300, 1062, 312, 264, 1867, 11, 457, 300, 1177, 380, 534, 976, 291, 709, 466, 437, 281, 360, 466, 300, 13, 50664, 50664, 400, 370, 11, 370, 11, 1392, 11, 291, 600, 658, 11, 291, 600, 658, 746, 300, 575, 257, 979, 19866, 293, 38745, 26192, 257, 1412, 2010, 13, 50964, 50964, 467, 311, 3094, 926, 257, 1412, 2010, 13, 51064, 51064, 492, 2825, 466, 439, 729, 721, 294, 527, 993, 295, 257, 3991, 3500, 13, 51214, 51214, 400, 22613, 6686, 466, 729, 721, 294, 702, 751, 11, 264, 912, 4876, 13, 51414, 51414, 400, 300, 311, 869, 13, 51464, 51464, 583, 550, 437, 466, 562, 291, 362, 281, 767, 4813, 3931, 293, 2845, 7897, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11920915111418694, "compression_ratio": 1.7613636363636365, "no_caption_prob": 0.00010069610289065167}, {"id": 56, "seek": 23900, "start": 253.0, "end": 256.0, "text": " We talked about all those things in our life of a file episode.", "tokens": [50364, 583, 291, 458, 300, 300, 1062, 312, 264, 1867, 11, 457, 300, 1177, 380, 534, 976, 291, 709, 466, 437, 281, 360, 466, 300, 13, 50664, 50664, 400, 370, 11, 370, 11, 1392, 11, 291, 600, 658, 11, 291, 600, 658, 746, 300, 575, 257, 979, 19866, 293, 38745, 26192, 257, 1412, 2010, 13, 50964, 50964, 467, 311, 3094, 926, 257, 1412, 2010, 13, 51064, 51064, 492, 2825, 466, 439, 729, 721, 294, 527, 993, 295, 257, 3991, 3500, 13, 51214, 51214, 400, 22613, 6686, 466, 729, 721, 294, 702, 751, 11, 264, 912, 4876, 13, 51414, 51414, 400, 300, 311, 869, 13, 51464, 51464, 583, 550, 437, 466, 562, 291, 362, 281, 767, 4813, 3931, 293, 2845, 7897, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11920915111418694, "compression_ratio": 1.7613636363636365, "no_caption_prob": 0.00010069610289065167}, {"id": 57, "seek": 23900, "start": 256.0, "end": 260.0, "text": " And Evan talks about those things in his talk, the same title.", "tokens": [50364, 583, 291, 458, 300, 300, 1062, 312, 264, 1867, 11, 457, 300, 1177, 380, 534, 976, 291, 709, 466, 437, 281, 360, 466, 300, 13, 50664, 50664, 400, 370, 11, 370, 11, 1392, 11, 291, 600, 658, 11, 291, 600, 658, 746, 300, 575, 257, 979, 19866, 293, 38745, 26192, 257, 1412, 2010, 13, 50964, 50964, 467, 311, 3094, 926, 257, 1412, 2010, 13, 51064, 51064, 492, 2825, 466, 439, 729, 721, 294, 527, 993, 295, 257, 3991, 3500, 13, 51214, 51214, 400, 22613, 6686, 466, 729, 721, 294, 702, 751, 11, 264, 912, 4876, 13, 51414, 51414, 400, 300, 311, 869, 13, 51464, 51464, 583, 550, 437, 466, 562, 291, 362, 281, 767, 4813, 3931, 293, 2845, 7897, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11920915111418694, "compression_ratio": 1.7613636363636365, "no_caption_prob": 0.00010069610289065167}, {"id": 58, "seek": 23900, "start": 260.0, "end": 261.0, "text": " And that's great.", "tokens": [50364, 583, 291, 458, 300, 300, 1062, 312, 264, 1867, 11, 457, 300, 1177, 380, 534, 976, 291, 709, 466, 437, 281, 360, 466, 300, 13, 50664, 50664, 400, 370, 11, 370, 11, 1392, 11, 291, 600, 658, 11, 291, 600, 658, 746, 300, 575, 257, 979, 19866, 293, 38745, 26192, 257, 1412, 2010, 13, 50964, 50964, 467, 311, 3094, 926, 257, 1412, 2010, 13, 51064, 51064, 492, 2825, 466, 439, 729, 721, 294, 527, 993, 295, 257, 3991, 3500, 13, 51214, 51214, 400, 22613, 6686, 466, 729, 721, 294, 702, 751, 11, 264, 912, 4876, 13, 51414, 51414, 400, 300, 311, 869, 13, 51464, 51464, 583, 550, 437, 466, 562, 291, 362, 281, 767, 4813, 3931, 293, 2845, 7897, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11920915111418694, "compression_ratio": 1.7613636363636365, "no_caption_prob": 0.00010069610289065167}, {"id": 59, "seek": 23900, "start": 261.0, "end": 265.0, "text": " But then what about when you have to actually handle events and send messages?", "tokens": [50364, 583, 291, 458, 300, 300, 1062, 312, 264, 1867, 11, 457, 300, 1177, 380, 534, 976, 291, 709, 466, 437, 281, 360, 466, 300, 13, 50664, 50664, 400, 370, 11, 370, 11, 1392, 11, 291, 600, 658, 11, 291, 600, 658, 746, 300, 575, 257, 979, 19866, 293, 38745, 26192, 257, 1412, 2010, 13, 50964, 50964, 467, 311, 3094, 926, 257, 1412, 2010, 13, 51064, 51064, 492, 2825, 466, 439, 729, 721, 294, 527, 993, 295, 257, 3991, 3500, 13, 51214, 51214, 400, 22613, 6686, 466, 729, 721, 294, 702, 751, 11, 264, 912, 4876, 13, 51414, 51414, 400, 300, 311, 869, 13, 51464, 51464, 583, 550, 437, 466, 562, 291, 362, 281, 767, 4813, 3931, 293, 2845, 7897, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11920915111418694, "compression_ratio": 1.7613636363636365, "no_caption_prob": 0.00010069610289065167}, {"id": 60, "seek": 26500, "start": 265.0, "end": 269.0, "text": " And how do you slice things when that's the case?", "tokens": [50364, 400, 577, 360, 291, 13153, 721, 562, 300, 311, 264, 1389, 30, 50564, 50564, 400, 370, 341, 1333, 295, 6542, 2361, 12543, 576, 584, 300, 291, 362, 257, 2698, 16212, 1785, 13, 50864, 50864, 400, 4476, 286, 576, 6786, 341, 6542, 2361, 12543, 294, 2699, 76, 11, 597, 307, 5101, 406, 9628, 13, 51214, 51214, 286, 576, 6964, 300, 382, 1382, 281, 6234, 807, 257, 8382, 2699, 76, 9482, 337, 633, 2698, 16212, 2522, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.056276798248291016, "compression_ratio": 1.6698564593301435, "no_caption_prob": 6.604801455978304e-05}, {"id": 61, "seek": 26500, "start": 269.0, "end": 275.0, "text": " And so this sort of component based mindset would say that you have a self contained state.", "tokens": [50364, 400, 577, 360, 291, 13153, 721, 562, 300, 311, 264, 1389, 30, 50564, 50564, 400, 370, 341, 1333, 295, 6542, 2361, 12543, 576, 584, 300, 291, 362, 257, 2698, 16212, 1785, 13, 50864, 50864, 400, 4476, 286, 576, 6786, 341, 6542, 2361, 12543, 294, 2699, 76, 11, 597, 307, 5101, 406, 9628, 13, 51214, 51214, 286, 576, 6964, 300, 382, 1382, 281, 6234, 807, 257, 8382, 2699, 76, 9482, 337, 633, 2698, 16212, 2522, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.056276798248291016, "compression_ratio": 1.6698564593301435, "no_caption_prob": 6.604801455978304e-05}, {"id": 62, "seek": 26500, "start": 275.0, "end": 282.0, "text": " And essentially I would describe this component based mindset in Elm, which is generally not recommended.", "tokens": [50364, 400, 577, 360, 291, 13153, 721, 562, 300, 311, 264, 1389, 30, 50564, 50564, 400, 370, 341, 1333, 295, 6542, 2361, 12543, 576, 584, 300, 291, 362, 257, 2698, 16212, 1785, 13, 50864, 50864, 400, 4476, 286, 576, 6786, 341, 6542, 2361, 12543, 294, 2699, 76, 11, 597, 307, 5101, 406, 9628, 13, 51214, 51214, 286, 576, 6964, 300, 382, 1382, 281, 6234, 807, 257, 8382, 2699, 76, 9482, 337, 633, 2698, 16212, 2522, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.056276798248291016, "compression_ratio": 1.6698564593301435, "no_caption_prob": 6.604801455978304e-05}, {"id": 63, "seek": 26500, "start": 282.0, "end": 291.0, "text": " I would define that as trying to wire through a mini Elm architecture for every self contained piece.", "tokens": [50364, 400, 577, 360, 291, 13153, 721, 562, 300, 311, 264, 1389, 30, 50564, 50564, 400, 370, 341, 1333, 295, 6542, 2361, 12543, 576, 584, 300, 291, 362, 257, 2698, 16212, 1785, 13, 50864, 50864, 400, 4476, 286, 576, 6786, 341, 6542, 2361, 12543, 294, 2699, 76, 11, 597, 307, 5101, 406, 9628, 13, 51214, 51214, 286, 576, 6964, 300, 382, 1382, 281, 6234, 807, 257, 8382, 2699, 76, 9482, 337, 633, 2698, 16212, 2522, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.056276798248291016, "compression_ratio": 1.6698564593301435, "no_caption_prob": 6.604801455978304e-05}, {"id": 64, "seek": 29100, "start": 291.0, "end": 299.0, "text": " So you draw those rectangles throughout your page and then you sort of take each of those rectangles and you say,", "tokens": [50364, 407, 291, 2642, 729, 24077, 904, 3710, 428, 3028, 293, 550, 291, 1333, 295, 747, 1184, 295, 729, 24077, 904, 293, 291, 584, 11, 50764, 50764, 1392, 11, 731, 341, 307, 411, 257, 7220, 2722, 297, 8714, 689, 321, 600, 658, 1184, 295, 729, 16212, 1785, 11, 51064, 51064, 597, 1062, 5304, 661, 9239, 295, 2698, 16212, 1785, 13, 51214, 51214, 407, 729, 11, 300, 311, 264, 1333, 295, 6542, 9482, 13, 51314, 51314, 865, 13, 3013, 1985, 294, 30644, 11, 337, 5197, 13, 51414, 51414, 467, 1985, 588, 731, 294, 30644, 570, 286, 914, 11, 291, 393, 11, 370, 718, 311, 751, 466, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1137872349132191, "compression_ratio": 1.7620967741935485, "no_caption_prob": 3.763580753002316e-05}, {"id": 65, "seek": 29100, "start": 299.0, "end": 305.0, "text": " okay, well this is like a Russian doll nesting where we've got each of those contained state,", "tokens": [50364, 407, 291, 2642, 729, 24077, 904, 3710, 428, 3028, 293, 550, 291, 1333, 295, 747, 1184, 295, 729, 24077, 904, 293, 291, 584, 11, 50764, 50764, 1392, 11, 731, 341, 307, 411, 257, 7220, 2722, 297, 8714, 689, 321, 600, 658, 1184, 295, 729, 16212, 1785, 11, 51064, 51064, 597, 1062, 5304, 661, 9239, 295, 2698, 16212, 1785, 13, 51214, 51214, 407, 729, 11, 300, 311, 264, 1333, 295, 6542, 9482, 13, 51314, 51314, 865, 13, 3013, 1985, 294, 30644, 11, 337, 5197, 13, 51414, 51414, 467, 1985, 588, 731, 294, 30644, 570, 286, 914, 11, 291, 393, 11, 370, 718, 311, 751, 466, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1137872349132191, "compression_ratio": 1.7620967741935485, "no_caption_prob": 3.763580753002316e-05}, {"id": 66, "seek": 29100, "start": 305.0, "end": 308.0, "text": " which might contain other bits of self contained state.", "tokens": [50364, 407, 291, 2642, 729, 24077, 904, 3710, 428, 3028, 293, 550, 291, 1333, 295, 747, 1184, 295, 729, 24077, 904, 293, 291, 584, 11, 50764, 50764, 1392, 11, 731, 341, 307, 411, 257, 7220, 2722, 297, 8714, 689, 321, 600, 658, 1184, 295, 729, 16212, 1785, 11, 51064, 51064, 597, 1062, 5304, 661, 9239, 295, 2698, 16212, 1785, 13, 51214, 51214, 407, 729, 11, 300, 311, 264, 1333, 295, 6542, 9482, 13, 51314, 51314, 865, 13, 3013, 1985, 294, 30644, 11, 337, 5197, 13, 51414, 51414, 467, 1985, 588, 731, 294, 30644, 570, 286, 914, 11, 291, 393, 11, 370, 718, 311, 751, 466, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1137872349132191, "compression_ratio": 1.7620967741935485, "no_caption_prob": 3.763580753002316e-05}, {"id": 67, "seek": 29100, "start": 308.0, "end": 310.0, "text": " So those, that's the sort of component architecture.", "tokens": [50364, 407, 291, 2642, 729, 24077, 904, 3710, 428, 3028, 293, 550, 291, 1333, 295, 747, 1184, 295, 729, 24077, 904, 293, 291, 584, 11, 50764, 50764, 1392, 11, 731, 341, 307, 411, 257, 7220, 2722, 297, 8714, 689, 321, 600, 658, 1184, 295, 729, 16212, 1785, 11, 51064, 51064, 597, 1062, 5304, 661, 9239, 295, 2698, 16212, 1785, 13, 51214, 51214, 407, 729, 11, 300, 311, 264, 1333, 295, 6542, 9482, 13, 51314, 51314, 865, 13, 3013, 1985, 294, 30644, 11, 337, 5197, 13, 51414, 51414, 467, 1985, 588, 731, 294, 30644, 570, 286, 914, 11, 291, 393, 11, 370, 718, 311, 751, 466, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1137872349132191, "compression_ratio": 1.7620967741935485, "no_caption_prob": 3.763580753002316e-05}, {"id": 68, "seek": 29100, "start": 310.0, "end": 312.0, "text": " Yeah. Which works in React, for instance.", "tokens": [50364, 407, 291, 2642, 729, 24077, 904, 3710, 428, 3028, 293, 550, 291, 1333, 295, 747, 1184, 295, 729, 24077, 904, 293, 291, 584, 11, 50764, 50764, 1392, 11, 731, 341, 307, 411, 257, 7220, 2722, 297, 8714, 689, 321, 600, 658, 1184, 295, 729, 16212, 1785, 11, 51064, 51064, 597, 1062, 5304, 661, 9239, 295, 2698, 16212, 1785, 13, 51214, 51214, 407, 729, 11, 300, 311, 264, 1333, 295, 6542, 9482, 13, 51314, 51314, 865, 13, 3013, 1985, 294, 30644, 11, 337, 5197, 13, 51414, 51414, 467, 1985, 588, 731, 294, 30644, 570, 286, 914, 11, 291, 393, 11, 370, 718, 311, 751, 466, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1137872349132191, "compression_ratio": 1.7620967741935485, "no_caption_prob": 3.763580753002316e-05}, {"id": 69, "seek": 29100, "start": 312.0, "end": 318.0, "text": " It works very well in React because I mean, you can, so let's talk about that.", "tokens": [50364, 407, 291, 2642, 729, 24077, 904, 3710, 428, 3028, 293, 550, 291, 1333, 295, 747, 1184, 295, 729, 24077, 904, 293, 291, 584, 11, 50764, 50764, 1392, 11, 731, 341, 307, 411, 257, 7220, 2722, 297, 8714, 689, 321, 600, 658, 1184, 295, 729, 16212, 1785, 11, 51064, 51064, 597, 1062, 5304, 661, 9239, 295, 2698, 16212, 1785, 13, 51214, 51214, 407, 729, 11, 300, 311, 264, 1333, 295, 6542, 9482, 13, 51314, 51314, 865, 13, 3013, 1985, 294, 30644, 11, 337, 5197, 13, 51414, 51414, 467, 1985, 588, 731, 294, 30644, 570, 286, 914, 11, 291, 393, 11, 370, 718, 311, 751, 466, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1137872349132191, "compression_ratio": 1.7620967741935485, "no_caption_prob": 3.763580753002316e-05}, {"id": 70, "seek": 31800, "start": 318.0, "end": 321.0, "text": " Like why does that work well in React and not in Elm?", "tokens": [50364, 1743, 983, 775, 300, 589, 731, 294, 30644, 293, 406, 294, 2699, 76, 30, 50514, 50514, 286, 576, 584, 309, 311, 570, 291, 362, 2105, 281, 721, 411, 4338, 4368, 13, 50764, 50764, 407, 294, 2699, 76, 321, 589, 257, 688, 365, 264, 2167, 4009, 295, 3494, 11, 597, 291, 393, 380, 2105, 490, 604, 6542, 13, 51114, 51114, 509, 643, 281, 1320, 309, 382, 364, 6770, 281, 819, 6828, 13, 51314, 51314, 407, 291, 393, 380, 2105, 309, 294, 257, 1401, 636, 293, 291, 393, 380, 611, 2464, 309, 13, 51514, 51514, 583, 294, 30644, 291, 393, 360, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07009811855497815, "compression_ratio": 1.6196581196581197, "no_caption_prob": 2.8408550861058757e-05}, {"id": 71, "seek": 31800, "start": 321.0, "end": 326.0, "text": " I would say it's because you have access to things like global states.", "tokens": [50364, 1743, 983, 775, 300, 589, 731, 294, 30644, 293, 406, 294, 2699, 76, 30, 50514, 50514, 286, 576, 584, 309, 311, 570, 291, 362, 2105, 281, 721, 411, 4338, 4368, 13, 50764, 50764, 407, 294, 2699, 76, 321, 589, 257, 688, 365, 264, 2167, 4009, 295, 3494, 11, 597, 291, 393, 380, 2105, 490, 604, 6542, 13, 51114, 51114, 509, 643, 281, 1320, 309, 382, 364, 6770, 281, 819, 6828, 13, 51314, 51314, 407, 291, 393, 380, 2105, 309, 294, 257, 1401, 636, 293, 291, 393, 380, 611, 2464, 309, 13, 51514, 51514, 583, 294, 30644, 291, 393, 360, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07009811855497815, "compression_ratio": 1.6196581196581197, "no_caption_prob": 2.8408550861058757e-05}, {"id": 72, "seek": 31800, "start": 326.0, "end": 333.0, "text": " So in Elm we work a lot with the single source of truth, which you can't access from any component.", "tokens": [50364, 1743, 983, 775, 300, 589, 731, 294, 30644, 293, 406, 294, 2699, 76, 30, 50514, 50514, 286, 576, 584, 309, 311, 570, 291, 362, 2105, 281, 721, 411, 4338, 4368, 13, 50764, 50764, 407, 294, 2699, 76, 321, 589, 257, 688, 365, 264, 2167, 4009, 295, 3494, 11, 597, 291, 393, 380, 2105, 490, 604, 6542, 13, 51114, 51114, 509, 643, 281, 1320, 309, 382, 364, 6770, 281, 819, 6828, 13, 51314, 51314, 407, 291, 393, 380, 2105, 309, 294, 257, 1401, 636, 293, 291, 393, 380, 611, 2464, 309, 13, 51514, 51514, 583, 294, 30644, 291, 393, 360, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07009811855497815, "compression_ratio": 1.6196581196581197, "no_caption_prob": 2.8408550861058757e-05}, {"id": 73, "seek": 31800, "start": 333.0, "end": 337.0, "text": " You need to pass it as an argument to different functions.", "tokens": [50364, 1743, 983, 775, 300, 589, 731, 294, 30644, 293, 406, 294, 2699, 76, 30, 50514, 50514, 286, 576, 584, 309, 311, 570, 291, 362, 2105, 281, 721, 411, 4338, 4368, 13, 50764, 50764, 407, 294, 2699, 76, 321, 589, 257, 688, 365, 264, 2167, 4009, 295, 3494, 11, 597, 291, 393, 380, 2105, 490, 604, 6542, 13, 51114, 51114, 509, 643, 281, 1320, 309, 382, 364, 6770, 281, 819, 6828, 13, 51314, 51314, 407, 291, 393, 380, 2105, 309, 294, 257, 1401, 636, 293, 291, 393, 380, 611, 2464, 309, 13, 51514, 51514, 583, 294, 30644, 291, 393, 360, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07009811855497815, "compression_ratio": 1.6196581196581197, "no_caption_prob": 2.8408550861058757e-05}, {"id": 74, "seek": 31800, "start": 337.0, "end": 341.0, "text": " So you can't access it in a read way and you can't also write it.", "tokens": [50364, 1743, 983, 775, 300, 589, 731, 294, 30644, 293, 406, 294, 2699, 76, 30, 50514, 50514, 286, 576, 584, 309, 311, 570, 291, 362, 2105, 281, 721, 411, 4338, 4368, 13, 50764, 50764, 407, 294, 2699, 76, 321, 589, 257, 688, 365, 264, 2167, 4009, 295, 3494, 11, 597, 291, 393, 380, 2105, 490, 604, 6542, 13, 51114, 51114, 509, 643, 281, 1320, 309, 382, 364, 6770, 281, 819, 6828, 13, 51314, 51314, 407, 291, 393, 380, 2105, 309, 294, 257, 1401, 636, 293, 291, 393, 380, 611, 2464, 309, 13, 51514, 51514, 583, 294, 30644, 291, 393, 360, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07009811855497815, "compression_ratio": 1.6196581196581197, "no_caption_prob": 2.8408550861058757e-05}, {"id": 75, "seek": 31800, "start": 341.0, "end": 343.0, "text": " But in React you can do that.", "tokens": [50364, 1743, 983, 775, 300, 589, 731, 294, 30644, 293, 406, 294, 2699, 76, 30, 50514, 50514, 286, 576, 584, 309, 311, 570, 291, 362, 2105, 281, 721, 411, 4338, 4368, 13, 50764, 50764, 407, 294, 2699, 76, 321, 589, 257, 688, 365, 264, 2167, 4009, 295, 3494, 11, 597, 291, 393, 380, 2105, 490, 604, 6542, 13, 51114, 51114, 509, 643, 281, 1320, 309, 382, 364, 6770, 281, 819, 6828, 13, 51314, 51314, 407, 291, 393, 380, 2105, 309, 294, 257, 1401, 636, 293, 291, 393, 380, 611, 2464, 309, 13, 51514, 51514, 583, 294, 30644, 291, 393, 360, 300, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07009811855497815, "compression_ratio": 1.6196581196581197, "no_caption_prob": 2.8408550861058757e-05}, {"id": 76, "seek": 34300, "start": 343.0, "end": 348.0, "text": " Yeah. And you can also just sort of send events and respond to events and...", "tokens": [50364, 865, 13, 400, 291, 393, 611, 445, 1333, 295, 2845, 3931, 293, 4196, 281, 3931, 293, 485, 50614, 50614, 400, 360, 1252, 5065, 13, 50714, 50714, 1779, 13, 50764, 50764, 865, 13, 1743, 2614, 281, 264, 4338, 2316, 498, 291, 362, 472, 11, 307, 472, 1270, 1802, 13, 51064, 51064, 1779, 13, 509, 393, 5839, 473, 721, 18958, 498, 291, 643, 281, 294, 257, 1729, 5197, 13, 51364, 51364, 400, 309, 311, 406, 4725, 516, 281, 3651, 291, 281, 1333, 295, 6234, 493, 7750, 7897, 646, 281, 264, 2596, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12160886602198824, "compression_ratio": 1.6790697674418604, "no_caption_prob": 7.253987860167399e-05}, {"id": 77, "seek": 34300, "start": 348.0, "end": 350.0, "text": " And do side effects.", "tokens": [50364, 865, 13, 400, 291, 393, 611, 445, 1333, 295, 2845, 3931, 293, 4196, 281, 3931, 293, 485, 50614, 50614, 400, 360, 1252, 5065, 13, 50714, 50714, 1779, 13, 50764, 50764, 865, 13, 1743, 2614, 281, 264, 4338, 2316, 498, 291, 362, 472, 11, 307, 472, 1270, 1802, 13, 51064, 51064, 1779, 13, 509, 393, 5839, 473, 721, 18958, 498, 291, 643, 281, 294, 257, 1729, 5197, 13, 51364, 51364, 400, 309, 311, 406, 4725, 516, 281, 3651, 291, 281, 1333, 295, 6234, 493, 7750, 7897, 646, 281, 264, 2596, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12160886602198824, "compression_ratio": 1.6790697674418604, "no_caption_prob": 7.253987860167399e-05}, {"id": 78, "seek": 34300, "start": 350.0, "end": 351.0, "text": " Right.", "tokens": [50364, 865, 13, 400, 291, 393, 611, 445, 1333, 295, 2845, 3931, 293, 4196, 281, 3931, 293, 485, 50614, 50614, 400, 360, 1252, 5065, 13, 50714, 50714, 1779, 13, 50764, 50764, 865, 13, 1743, 2614, 281, 264, 4338, 2316, 498, 291, 362, 472, 11, 307, 472, 1270, 1802, 13, 51064, 51064, 1779, 13, 509, 393, 5839, 473, 721, 18958, 498, 291, 643, 281, 294, 257, 1729, 5197, 13, 51364, 51364, 400, 309, 311, 406, 4725, 516, 281, 3651, 291, 281, 1333, 295, 6234, 493, 7750, 7897, 646, 281, 264, 2596, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12160886602198824, "compression_ratio": 1.6790697674418604, "no_caption_prob": 7.253987860167399e-05}, {"id": 79, "seek": 34300, "start": 351.0, "end": 357.0, "text": " Yeah. Like running to the global model if you have one, is one such effect.", "tokens": [50364, 865, 13, 400, 291, 393, 611, 445, 1333, 295, 2845, 3931, 293, 4196, 281, 3931, 293, 485, 50614, 50614, 400, 360, 1252, 5065, 13, 50714, 50714, 1779, 13, 50764, 50764, 865, 13, 1743, 2614, 281, 264, 4338, 2316, 498, 291, 362, 472, 11, 307, 472, 1270, 1802, 13, 51064, 51064, 1779, 13, 509, 393, 5839, 473, 721, 18958, 498, 291, 643, 281, 294, 257, 1729, 5197, 13, 51364, 51364, 400, 309, 311, 406, 4725, 516, 281, 3651, 291, 281, 1333, 295, 6234, 493, 7750, 7897, 646, 281, 264, 2596, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12160886602198824, "compression_ratio": 1.6790697674418604, "no_caption_prob": 7.253987860167399e-05}, {"id": 80, "seek": 34300, "start": 357.0, "end": 363.0, "text": " Right. You can mutate things globally if you need to in a particular instance.", "tokens": [50364, 865, 13, 400, 291, 393, 611, 445, 1333, 295, 2845, 3931, 293, 4196, 281, 3931, 293, 485, 50614, 50614, 400, 360, 1252, 5065, 13, 50714, 50714, 1779, 13, 50764, 50764, 865, 13, 1743, 2614, 281, 264, 4338, 2316, 498, 291, 362, 472, 11, 307, 472, 1270, 1802, 13, 51064, 51064, 1779, 13, 509, 393, 5839, 473, 721, 18958, 498, 291, 643, 281, 294, 257, 1729, 5197, 13, 51364, 51364, 400, 309, 311, 406, 4725, 516, 281, 3651, 291, 281, 1333, 295, 6234, 493, 7750, 7897, 646, 281, 264, 2596, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12160886602198824, "compression_ratio": 1.6790697674418604, "no_caption_prob": 7.253987860167399e-05}, {"id": 81, "seek": 34300, "start": 363.0, "end": 370.0, "text": " And it's not necessarily going to require you to sort of wire up sending messages back to the parent.", "tokens": [50364, 865, 13, 400, 291, 393, 611, 445, 1333, 295, 2845, 3931, 293, 4196, 281, 3931, 293, 485, 50614, 50614, 400, 360, 1252, 5065, 13, 50714, 50714, 1779, 13, 50764, 50764, 865, 13, 1743, 2614, 281, 264, 4338, 2316, 498, 291, 362, 472, 11, 307, 472, 1270, 1802, 13, 51064, 51064, 1779, 13, 509, 393, 5839, 473, 721, 18958, 498, 291, 643, 281, 294, 257, 1729, 5197, 13, 51364, 51364, 400, 309, 311, 406, 4725, 516, 281, 3651, 291, 281, 1333, 295, 6234, 493, 7750, 7897, 646, 281, 264, 2596, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12160886602198824, "compression_ratio": 1.6790697674418604, "no_caption_prob": 7.253987860167399e-05}, {"id": 82, "seek": 37000, "start": 370.0, "end": 374.0, "text": " So that can be a more natural way to do it in that paradigm.", "tokens": [50364, 407, 300, 393, 312, 257, 544, 3303, 636, 281, 360, 309, 294, 300, 24709, 13, 50564, 50564, 407, 586, 286, 486, 584, 456, 366, 1413, 562, 309, 307, 588, 1481, 281, 1333, 295, 38745, 5256, 300, 2654, 1785, 13, 50864, 50864, 509, 458, 11, 498, 291, 600, 658, 512, 1333, 295, 11, 291, 458, 11, 498, 291, 528, 281, 362, 257, 4002, 1888, 260, 420, 512, 1333, 295, 16950, 15682, 6542, 51314, 51314, 300, 575, 257, 688, 295, 6920, 1785, 293, 291, 445, 528, 281, 1333, 295, 458, 11, 980, 385, 562, 291, 600, 11, 562, 291, 434, 1096, 8867, 257, 4002, 13, 51664, 51664, 1449, 718, 385, 458, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07998561022574441, "compression_ratio": 1.7468879668049793, "no_caption_prob": 4.331656964495778e-05}, {"id": 83, "seek": 37000, "start": 374.0, "end": 380.0, "text": " So now I will say there are times when it is very nice to sort of encapsulate that local state.", "tokens": [50364, 407, 300, 393, 312, 257, 544, 3303, 636, 281, 360, 309, 294, 300, 24709, 13, 50564, 50564, 407, 586, 286, 486, 584, 456, 366, 1413, 562, 309, 307, 588, 1481, 281, 1333, 295, 38745, 5256, 300, 2654, 1785, 13, 50864, 50864, 509, 458, 11, 498, 291, 600, 658, 512, 1333, 295, 11, 291, 458, 11, 498, 291, 528, 281, 362, 257, 4002, 1888, 260, 420, 512, 1333, 295, 16950, 15682, 6542, 51314, 51314, 300, 575, 257, 688, 295, 6920, 1785, 293, 291, 445, 528, 281, 1333, 295, 458, 11, 980, 385, 562, 291, 600, 11, 562, 291, 434, 1096, 8867, 257, 4002, 13, 51664, 51664, 1449, 718, 385, 458, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07998561022574441, "compression_ratio": 1.7468879668049793, "no_caption_prob": 4.331656964495778e-05}, {"id": 84, "seek": 37000, "start": 380.0, "end": 389.0, "text": " You know, if you've got some sort of, you know, if you want to have a date picker or some sort of sophisticated UI component", "tokens": [50364, 407, 300, 393, 312, 257, 544, 3303, 636, 281, 360, 309, 294, 300, 24709, 13, 50564, 50564, 407, 586, 286, 486, 584, 456, 366, 1413, 562, 309, 307, 588, 1481, 281, 1333, 295, 38745, 5256, 300, 2654, 1785, 13, 50864, 50864, 509, 458, 11, 498, 291, 600, 658, 512, 1333, 295, 11, 291, 458, 11, 498, 291, 528, 281, 362, 257, 4002, 1888, 260, 420, 512, 1333, 295, 16950, 15682, 6542, 51314, 51314, 300, 575, 257, 688, 295, 6920, 1785, 293, 291, 445, 528, 281, 1333, 295, 458, 11, 980, 385, 562, 291, 600, 11, 562, 291, 434, 1096, 8867, 257, 4002, 13, 51664, 51664, 1449, 718, 385, 458, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07998561022574441, "compression_ratio": 1.7468879668049793, "no_caption_prob": 4.331656964495778e-05}, {"id": 85, "seek": 37000, "start": 389.0, "end": 396.0, "text": " that has a lot of internal state and you just want to sort of know, tell me when you've, when you're done picking a date.", "tokens": [50364, 407, 300, 393, 312, 257, 544, 3303, 636, 281, 360, 309, 294, 300, 24709, 13, 50564, 50564, 407, 586, 286, 486, 584, 456, 366, 1413, 562, 309, 307, 588, 1481, 281, 1333, 295, 38745, 5256, 300, 2654, 1785, 13, 50864, 50864, 509, 458, 11, 498, 291, 600, 658, 512, 1333, 295, 11, 291, 458, 11, 498, 291, 528, 281, 362, 257, 4002, 1888, 260, 420, 512, 1333, 295, 16950, 15682, 6542, 51314, 51314, 300, 575, 257, 688, 295, 6920, 1785, 293, 291, 445, 528, 281, 1333, 295, 458, 11, 980, 385, 562, 291, 600, 11, 562, 291, 434, 1096, 8867, 257, 4002, 13, 51664, 51664, 1449, 718, 385, 458, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07998561022574441, "compression_ratio": 1.7468879668049793, "no_caption_prob": 4.331656964495778e-05}, {"id": 86, "seek": 37000, "start": 396.0, "end": 397.0, "text": " Just let me know.", "tokens": [50364, 407, 300, 393, 312, 257, 544, 3303, 636, 281, 360, 309, 294, 300, 24709, 13, 50564, 50564, 407, 586, 286, 486, 584, 456, 366, 1413, 562, 309, 307, 588, 1481, 281, 1333, 295, 38745, 5256, 300, 2654, 1785, 13, 50864, 50864, 509, 458, 11, 498, 291, 600, 658, 512, 1333, 295, 11, 291, 458, 11, 498, 291, 528, 281, 362, 257, 4002, 1888, 260, 420, 512, 1333, 295, 16950, 15682, 6542, 51314, 51314, 300, 575, 257, 688, 295, 6920, 1785, 293, 291, 445, 528, 281, 1333, 295, 458, 11, 980, 385, 562, 291, 600, 11, 562, 291, 434, 1096, 8867, 257, 4002, 13, 51664, 51664, 1449, 718, 385, 458, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07998561022574441, "compression_ratio": 1.7468879668049793, "no_caption_prob": 4.331656964495778e-05}, {"id": 87, "seek": 39700, "start": 397.0, "end": 404.0, "text": " And you don't want to wire everything into the model and you know, you've got this in all these different pages and it's a pain to wire it in.", "tokens": [50364, 400, 291, 500, 380, 528, 281, 6234, 1203, 666, 264, 2316, 293, 291, 458, 11, 291, 600, 658, 341, 294, 439, 613, 819, 7183, 293, 309, 311, 257, 1822, 281, 6234, 309, 294, 13, 50714, 50714, 821, 311, 364, 1867, 337, 300, 1154, 13, 50814, 50814, 509, 393, 764, 257, 3670, 6542, 293, 291, 727, 754, 11, 291, 458, 11, 291, 727, 754, 1322, 300, 3670, 6542, 294, 2699, 76, 13, 51064, 51064, 400, 300, 393, 312, 257, 534, 665, 1867, 294, 3331, 411, 300, 13, 51214, 51214, 400, 286, 519, 300, 311, 472, 295, 264, 4759, 295, 2699, 76, 307, 15213, 484, 577, 360, 321, 7472, 4936, 527, 3089, 457, 406, 362, 341, 1333, 295, 485, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.057964340714383715, "compression_ratio": 1.7481203007518797, "no_caption_prob": 6.708585715387017e-05}, {"id": 88, "seek": 39700, "start": 404.0, "end": 406.0, "text": " There's an answer for that problem.", "tokens": [50364, 400, 291, 500, 380, 528, 281, 6234, 1203, 666, 264, 2316, 293, 291, 458, 11, 291, 600, 658, 341, 294, 439, 613, 819, 7183, 293, 309, 311, 257, 1822, 281, 6234, 309, 294, 13, 50714, 50714, 821, 311, 364, 1867, 337, 300, 1154, 13, 50814, 50814, 509, 393, 764, 257, 3670, 6542, 293, 291, 727, 754, 11, 291, 458, 11, 291, 727, 754, 1322, 300, 3670, 6542, 294, 2699, 76, 13, 51064, 51064, 400, 300, 393, 312, 257, 534, 665, 1867, 294, 3331, 411, 300, 13, 51214, 51214, 400, 286, 519, 300, 311, 472, 295, 264, 4759, 295, 2699, 76, 307, 15213, 484, 577, 360, 321, 7472, 4936, 527, 3089, 457, 406, 362, 341, 1333, 295, 485, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.057964340714383715, "compression_ratio": 1.7481203007518797, "no_caption_prob": 6.708585715387017e-05}, {"id": 89, "seek": 39700, "start": 406.0, "end": 411.0, "text": " You can use a web component and you could even, you know, you could even build that web component in Elm.", "tokens": [50364, 400, 291, 500, 380, 528, 281, 6234, 1203, 666, 264, 2316, 293, 291, 458, 11, 291, 600, 658, 341, 294, 439, 613, 819, 7183, 293, 309, 311, 257, 1822, 281, 6234, 309, 294, 13, 50714, 50714, 821, 311, 364, 1867, 337, 300, 1154, 13, 50814, 50814, 509, 393, 764, 257, 3670, 6542, 293, 291, 727, 754, 11, 291, 458, 11, 291, 727, 754, 1322, 300, 3670, 6542, 294, 2699, 76, 13, 51064, 51064, 400, 300, 393, 312, 257, 534, 665, 1867, 294, 3331, 411, 300, 13, 51214, 51214, 400, 286, 519, 300, 311, 472, 295, 264, 4759, 295, 2699, 76, 307, 15213, 484, 577, 360, 321, 7472, 4936, 527, 3089, 457, 406, 362, 341, 1333, 295, 485, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.057964340714383715, "compression_ratio": 1.7481203007518797, "no_caption_prob": 6.708585715387017e-05}, {"id": 90, "seek": 39700, "start": 411.0, "end": 414.0, "text": " And that can be a really good answer in cases like that.", "tokens": [50364, 400, 291, 500, 380, 528, 281, 6234, 1203, 666, 264, 2316, 293, 291, 458, 11, 291, 600, 658, 341, 294, 439, 613, 819, 7183, 293, 309, 311, 257, 1822, 281, 6234, 309, 294, 13, 50714, 50714, 821, 311, 364, 1867, 337, 300, 1154, 13, 50814, 50814, 509, 393, 764, 257, 3670, 6542, 293, 291, 727, 754, 11, 291, 458, 11, 291, 727, 754, 1322, 300, 3670, 6542, 294, 2699, 76, 13, 51064, 51064, 400, 300, 393, 312, 257, 534, 665, 1867, 294, 3331, 411, 300, 13, 51214, 51214, 400, 286, 519, 300, 311, 472, 295, 264, 4759, 295, 2699, 76, 307, 15213, 484, 577, 360, 321, 7472, 4936, 527, 3089, 457, 406, 362, 341, 1333, 295, 485, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.057964340714383715, "compression_ratio": 1.7481203007518797, "no_caption_prob": 6.708585715387017e-05}, {"id": 91, "seek": 39700, "start": 414.0, "end": 424.0, "text": " And I think that's one of the challenges of Elm is figuring out how do we split apart our code but not have this sort of...", "tokens": [50364, 400, 291, 500, 380, 528, 281, 6234, 1203, 666, 264, 2316, 293, 291, 458, 11, 291, 600, 658, 341, 294, 439, 613, 819, 7183, 293, 309, 311, 257, 1822, 281, 6234, 309, 294, 13, 50714, 50714, 821, 311, 364, 1867, 337, 300, 1154, 13, 50814, 50814, 509, 393, 764, 257, 3670, 6542, 293, 291, 727, 754, 11, 291, 458, 11, 291, 727, 754, 1322, 300, 3670, 6542, 294, 2699, 76, 13, 51064, 51064, 400, 300, 393, 312, 257, 534, 665, 1867, 294, 3331, 411, 300, 13, 51214, 51214, 400, 286, 519, 300, 311, 472, 295, 264, 4759, 295, 2699, 76, 307, 15213, 484, 577, 360, 321, 7472, 4936, 527, 3089, 457, 406, 362, 341, 1333, 295, 485, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.057964340714383715, "compression_ratio": 1.7481203007518797, "no_caption_prob": 6.708585715387017e-05}, {"id": 92, "seek": 42400, "start": 424.0, "end": 432.0, "text": " Like we want the explicitness and all the benefits of pure functions and explicitness and all of that and no magic.", "tokens": [50364, 1743, 321, 528, 264, 28021, 6394, 293, 439, 264, 5311, 295, 6075, 6828, 293, 28021, 6394, 293, 439, 295, 300, 293, 572, 5585, 13, 50764, 50764, 583, 321, 611, 528, 264, 19283, 295, 885, 1075, 281, 24745, 746, 294, 293, 406, 362, 281, 16945, 6234, 309, 493, 293, 362, 9595, 541, 3089, 300, 15537, 721, 807, 13, 51314, 51314, 400, 309, 311, 411, 11, 731, 11, 291, 600, 658, 281, 1888, 472, 13, 51414, 51414, 5780, 1228, 257, 3670, 6542, 767, 733, 295, 4045, 291, 281, 360, 1293, 689, 291, 362, 341, 2698, 16212, 551, 300, 575, 1080, 1785, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06448517395899846, "compression_ratio": 1.7364341085271318, "no_caption_prob": 2.1782234398415312e-05}, {"id": 93, "seek": 42400, "start": 432.0, "end": 443.0, "text": " But we also want the convenience of being able to sprinkle something in and not have to manually wire it up and have verbose code that wires things through.", "tokens": [50364, 1743, 321, 528, 264, 28021, 6394, 293, 439, 264, 5311, 295, 6075, 6828, 293, 28021, 6394, 293, 439, 295, 300, 293, 572, 5585, 13, 50764, 50764, 583, 321, 611, 528, 264, 19283, 295, 885, 1075, 281, 24745, 746, 294, 293, 406, 362, 281, 16945, 6234, 309, 493, 293, 362, 9595, 541, 3089, 300, 15537, 721, 807, 13, 51314, 51314, 400, 309, 311, 411, 11, 731, 11, 291, 600, 658, 281, 1888, 472, 13, 51414, 51414, 5780, 1228, 257, 3670, 6542, 767, 733, 295, 4045, 291, 281, 360, 1293, 689, 291, 362, 341, 2698, 16212, 551, 300, 575, 1080, 1785, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06448517395899846, "compression_ratio": 1.7364341085271318, "no_caption_prob": 2.1782234398415312e-05}, {"id": 94, "seek": 42400, "start": 443.0, "end": 445.0, "text": " And it's like, well, you've got to pick one.", "tokens": [50364, 1743, 321, 528, 264, 28021, 6394, 293, 439, 264, 5311, 295, 6075, 6828, 293, 28021, 6394, 293, 439, 295, 300, 293, 572, 5585, 13, 50764, 50764, 583, 321, 611, 528, 264, 19283, 295, 885, 1075, 281, 24745, 746, 294, 293, 406, 362, 281, 16945, 6234, 309, 493, 293, 362, 9595, 541, 3089, 300, 15537, 721, 807, 13, 51314, 51314, 400, 309, 311, 411, 11, 731, 11, 291, 600, 658, 281, 1888, 472, 13, 51414, 51414, 5780, 1228, 257, 3670, 6542, 767, 733, 295, 4045, 291, 281, 360, 1293, 689, 291, 362, 341, 2698, 16212, 551, 300, 575, 1080, 1785, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06448517395899846, "compression_ratio": 1.7364341085271318, "no_caption_prob": 2.1782234398415312e-05}, {"id": 95, "seek": 42400, "start": 445.0, "end": 452.0, "text": " Although using a web component actually kind of allows you to do both where you have this self contained thing that has its state.", "tokens": [50364, 1743, 321, 528, 264, 28021, 6394, 293, 439, 264, 5311, 295, 6075, 6828, 293, 28021, 6394, 293, 439, 295, 300, 293, 572, 5585, 13, 50764, 50764, 583, 321, 611, 528, 264, 19283, 295, 885, 1075, 281, 24745, 746, 294, 293, 406, 362, 281, 16945, 6234, 309, 493, 293, 362, 9595, 541, 3089, 300, 15537, 721, 807, 13, 51314, 51314, 400, 309, 311, 411, 11, 731, 11, 291, 600, 658, 281, 1888, 472, 13, 51414, 51414, 5780, 1228, 257, 3670, 6542, 767, 733, 295, 4045, 291, 281, 360, 1293, 689, 291, 362, 341, 2698, 16212, 551, 300, 575, 1080, 1785, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06448517395899846, "compression_ratio": 1.7364341085271318, "no_caption_prob": 2.1782234398415312e-05}, {"id": 96, "seek": 45200, "start": 452.0, "end": 462.0, "text": " It has an interface, you know, through sending events like actual HTML events that you can listen for in your Elm code that registers it.", "tokens": [50364, 467, 575, 364, 9226, 11, 291, 458, 11, 807, 7750, 3931, 411, 3539, 17995, 3931, 300, 291, 393, 2140, 337, 294, 428, 2699, 76, 3089, 300, 38351, 309, 13, 50864, 50864, 663, 393, 312, 257, 534, 665, 1867, 337, 729, 3467, 295, 1333, 295, 1785, 4676, 15682, 6677, 13, 51164, 51164, 865, 13, 3432, 2673, 500, 380, 411, 300, 570, 550, 436, 362, 281, 2464, 15778, 13, 51364, 51364, 583, 291, 393, 611, 2464, 309, 294, 2699, 76, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06845565589077501, "compression_ratio": 1.5, "no_caption_prob": 3.169271076330915e-05}, {"id": 97, "seek": 45200, "start": 462.0, "end": 468.0, "text": " That can be a really good answer for those types of sort of state heavy UI components.", "tokens": [50364, 467, 575, 364, 9226, 11, 291, 458, 11, 807, 7750, 3931, 411, 3539, 17995, 3931, 300, 291, 393, 2140, 337, 294, 428, 2699, 76, 3089, 300, 38351, 309, 13, 50864, 50864, 663, 393, 312, 257, 534, 665, 1867, 337, 729, 3467, 295, 1333, 295, 1785, 4676, 15682, 6677, 13, 51164, 51164, 865, 13, 3432, 2673, 500, 380, 411, 300, 570, 550, 436, 362, 281, 2464, 15778, 13, 51364, 51364, 583, 291, 393, 611, 2464, 309, 294, 2699, 76, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06845565589077501, "compression_ratio": 1.5, "no_caption_prob": 3.169271076330915e-05}, {"id": 98, "seek": 45200, "start": 468.0, "end": 472.0, "text": " Yeah. People usually don't like that because then they have to write JavaScript.", "tokens": [50364, 467, 575, 364, 9226, 11, 291, 458, 11, 807, 7750, 3931, 411, 3539, 17995, 3931, 300, 291, 393, 2140, 337, 294, 428, 2699, 76, 3089, 300, 38351, 309, 13, 50864, 50864, 663, 393, 312, 257, 534, 665, 1867, 337, 729, 3467, 295, 1333, 295, 1785, 4676, 15682, 6677, 13, 51164, 51164, 865, 13, 3432, 2673, 500, 380, 411, 300, 570, 550, 436, 362, 281, 2464, 15778, 13, 51364, 51364, 583, 291, 393, 611, 2464, 309, 294, 2699, 76, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06845565589077501, "compression_ratio": 1.5, "no_caption_prob": 3.169271076330915e-05}, {"id": 99, "seek": 45200, "start": 472.0, "end": 474.0, "text": " But you can also write it in Elm.", "tokens": [50364, 467, 575, 364, 9226, 11, 291, 458, 11, 807, 7750, 3931, 411, 3539, 17995, 3931, 300, 291, 393, 2140, 337, 294, 428, 2699, 76, 3089, 300, 38351, 309, 13, 50864, 50864, 663, 393, 312, 257, 534, 665, 1867, 337, 729, 3467, 295, 1333, 295, 1785, 4676, 15682, 6677, 13, 51164, 51164, 865, 13, 3432, 2673, 500, 380, 411, 300, 570, 550, 436, 362, 281, 2464, 15778, 13, 51364, 51364, 583, 291, 393, 611, 2464, 309, 294, 2699, 76, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06845565589077501, "compression_ratio": 1.5, "no_caption_prob": 3.169271076330915e-05}, {"id": 100, "seek": 47400, "start": 474.0, "end": 484.0, "text": " Yeah. You do lose all the niceness because you need to work with insurgency and communication through ports or attributes.", "tokens": [50364, 865, 13, 509, 360, 3624, 439, 264, 6201, 15264, 570, 291, 643, 281, 589, 365, 1028, 374, 5595, 293, 6101, 807, 18160, 420, 17212, 13, 50864, 50864, 583, 456, 311, 257, 2808, 2727, 13, 50914, 50914, 865, 13, 50964, 50964, 400, 15778, 307, 2489, 886, 11, 6095, 11, 498, 309, 311, 406, 886, 955, 13, 51114, 51114, 1779, 13, 759, 309, 311, 411, 257, 15682, 6542, 420, 4317, 309, 311, 364, 766, 264, 15222, 15682, 6542, 300, 291, 434, 1228, 13, 51414, 51414, 286, 914, 11, 365, 746, 411, 11, 291, 458, 11, 2527, 15682, 11, 291, 458, 11, 291, 600, 658, 613, 411, 40688, 5065, 562, 291, 20076, 670, 420, 2052, 322, 9905, 293, 721, 411, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07940866113678227, "compression_ratio": 1.6391752577319587, "no_caption_prob": 9.027555643115193e-05}, {"id": 101, "seek": 47400, "start": 484.0, "end": 485.0, "text": " But there's a middle ground.", "tokens": [50364, 865, 13, 509, 360, 3624, 439, 264, 6201, 15264, 570, 291, 643, 281, 589, 365, 1028, 374, 5595, 293, 6101, 807, 18160, 420, 17212, 13, 50864, 50864, 583, 456, 311, 257, 2808, 2727, 13, 50914, 50914, 865, 13, 50964, 50964, 400, 15778, 307, 2489, 886, 11, 6095, 11, 498, 309, 311, 406, 886, 955, 13, 51114, 51114, 1779, 13, 759, 309, 311, 411, 257, 15682, 6542, 420, 4317, 309, 311, 364, 766, 264, 15222, 15682, 6542, 300, 291, 434, 1228, 13, 51414, 51414, 286, 914, 11, 365, 746, 411, 11, 291, 458, 11, 2527, 15682, 11, 291, 458, 11, 291, 600, 658, 613, 411, 40688, 5065, 562, 291, 20076, 670, 420, 2052, 322, 9905, 293, 721, 411, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07940866113678227, "compression_ratio": 1.6391752577319587, "no_caption_prob": 9.027555643115193e-05}, {"id": 102, "seek": 47400, "start": 485.0, "end": 486.0, "text": " Yeah.", "tokens": [50364, 865, 13, 509, 360, 3624, 439, 264, 6201, 15264, 570, 291, 643, 281, 589, 365, 1028, 374, 5595, 293, 6101, 807, 18160, 420, 17212, 13, 50864, 50864, 583, 456, 311, 257, 2808, 2727, 13, 50914, 50914, 865, 13, 50964, 50964, 400, 15778, 307, 2489, 886, 11, 6095, 11, 498, 309, 311, 406, 886, 955, 13, 51114, 51114, 1779, 13, 759, 309, 311, 411, 257, 15682, 6542, 420, 4317, 309, 311, 364, 766, 264, 15222, 15682, 6542, 300, 291, 434, 1228, 13, 51414, 51414, 286, 914, 11, 365, 746, 411, 11, 291, 458, 11, 2527, 15682, 11, 291, 458, 11, 291, 600, 658, 613, 411, 40688, 5065, 562, 291, 20076, 670, 420, 2052, 322, 9905, 293, 721, 411, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07940866113678227, "compression_ratio": 1.6391752577319587, "no_caption_prob": 9.027555643115193e-05}, {"id": 103, "seek": 47400, "start": 486.0, "end": 489.0, "text": " And JavaScript is fine too, honestly, if it's not too big.", "tokens": [50364, 865, 13, 509, 360, 3624, 439, 264, 6201, 15264, 570, 291, 643, 281, 589, 365, 1028, 374, 5595, 293, 6101, 807, 18160, 420, 17212, 13, 50864, 50864, 583, 456, 311, 257, 2808, 2727, 13, 50914, 50914, 865, 13, 50964, 50964, 400, 15778, 307, 2489, 886, 11, 6095, 11, 498, 309, 311, 406, 886, 955, 13, 51114, 51114, 1779, 13, 759, 309, 311, 411, 257, 15682, 6542, 420, 4317, 309, 311, 364, 766, 264, 15222, 15682, 6542, 300, 291, 434, 1228, 13, 51414, 51414, 286, 914, 11, 365, 746, 411, 11, 291, 458, 11, 2527, 15682, 11, 291, 458, 11, 291, 600, 658, 613, 411, 40688, 5065, 562, 291, 20076, 670, 420, 2052, 322, 9905, 293, 721, 411, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07940866113678227, "compression_ratio": 1.6391752577319587, "no_caption_prob": 9.027555643115193e-05}, {"id": 104, "seek": 47400, "start": 489.0, "end": 495.0, "text": " Right. If it's like a UI component or perhaps it's an off the shelf UI component that you're using.", "tokens": [50364, 865, 13, 509, 360, 3624, 439, 264, 6201, 15264, 570, 291, 643, 281, 589, 365, 1028, 374, 5595, 293, 6101, 807, 18160, 420, 17212, 13, 50864, 50864, 583, 456, 311, 257, 2808, 2727, 13, 50914, 50914, 865, 13, 50964, 50964, 400, 15778, 307, 2489, 886, 11, 6095, 11, 498, 309, 311, 406, 886, 955, 13, 51114, 51114, 1779, 13, 759, 309, 311, 411, 257, 15682, 6542, 420, 4317, 309, 311, 364, 766, 264, 15222, 15682, 6542, 300, 291, 434, 1228, 13, 51414, 51414, 286, 914, 11, 365, 746, 411, 11, 291, 458, 11, 2527, 15682, 11, 291, 458, 11, 291, 600, 658, 613, 411, 40688, 5065, 562, 291, 20076, 670, 420, 2052, 322, 9905, 293, 721, 411, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07940866113678227, "compression_ratio": 1.6391752577319587, "no_caption_prob": 9.027555643115193e-05}, {"id": 105, "seek": 47400, "start": 495.0, "end": 503.0, "text": " I mean, with something like, you know, material UI, you know, you've got these like ripple effects when you hover over or click on buttons and things like that.", "tokens": [50364, 865, 13, 509, 360, 3624, 439, 264, 6201, 15264, 570, 291, 643, 281, 589, 365, 1028, 374, 5595, 293, 6101, 807, 18160, 420, 17212, 13, 50864, 50864, 583, 456, 311, 257, 2808, 2727, 13, 50914, 50914, 865, 13, 50964, 50964, 400, 15778, 307, 2489, 886, 11, 6095, 11, 498, 309, 311, 406, 886, 955, 13, 51114, 51114, 1779, 13, 759, 309, 311, 411, 257, 15682, 6542, 420, 4317, 309, 311, 364, 766, 264, 15222, 15682, 6542, 300, 291, 434, 1228, 13, 51414, 51414, 286, 914, 11, 365, 746, 411, 11, 291, 458, 11, 2527, 15682, 11, 291, 458, 11, 291, 600, 658, 613, 411, 40688, 5065, 562, 291, 20076, 670, 420, 2052, 322, 9905, 293, 721, 411, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07940866113678227, "compression_ratio": 1.6391752577319587, "no_caption_prob": 9.027555643115193e-05}, {"id": 106, "seek": 50300, "start": 503.0, "end": 506.0, "text": " And wiring that into an Elm app is really a pain.", "tokens": [50364, 400, 27520, 300, 666, 364, 2699, 76, 724, 307, 534, 257, 1822, 13, 50514, 50514, 400, 884, 300, 733, 295, 551, 11, 3670, 6677, 366, 2293, 24736, 281, 12606, 300, 1154, 294, 257, 8388, 623, 77, 19634, 636, 13, 50864, 50864, 407, 11, 2264, 11, 370, 562, 309, 1487, 281, 767, 11, 291, 458, 11, 456, 366, 1629, 3331, 562, 291, 643, 281, 7890, 1785, 490, 472, 644, 295, 264, 3089, 293, 291, 643, 281, 2845, 257, 3636, 493, 13, 51364, 51364, 509, 458, 11, 257, 2960, 2170, 23370, 11, 512, 4846, 2170, 3105, 11, 257, 24071, 2314, 11, 746, 1487, 646, 490, 264, 7154, 293, 291, 643, 281, 1333, 295, 7875, 309, 490, 613, 819, 3166, 295, 428, 724, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.059933422088623046, "compression_ratio": 1.7475083056478404, "no_caption_prob": 7.601887045893818e-05}, {"id": 107, "seek": 50300, "start": 506.0, "end": 513.0, "text": " And doing that kind of thing, web components are exactly suited to solving that problem in a framework agnostic way.", "tokens": [50364, 400, 27520, 300, 666, 364, 2699, 76, 724, 307, 534, 257, 1822, 13, 50514, 50514, 400, 884, 300, 733, 295, 551, 11, 3670, 6677, 366, 2293, 24736, 281, 12606, 300, 1154, 294, 257, 8388, 623, 77, 19634, 636, 13, 50864, 50864, 407, 11, 2264, 11, 370, 562, 309, 1487, 281, 767, 11, 291, 458, 11, 456, 366, 1629, 3331, 562, 291, 643, 281, 7890, 1785, 490, 472, 644, 295, 264, 3089, 293, 291, 643, 281, 2845, 257, 3636, 493, 13, 51364, 51364, 509, 458, 11, 257, 2960, 2170, 23370, 11, 512, 4846, 2170, 3105, 11, 257, 24071, 2314, 11, 746, 1487, 646, 490, 264, 7154, 293, 291, 643, 281, 1333, 295, 7875, 309, 490, 613, 819, 3166, 295, 428, 724, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.059933422088623046, "compression_ratio": 1.7475083056478404, "no_caption_prob": 7.601887045893818e-05}, {"id": 108, "seek": 50300, "start": 513.0, "end": 523.0, "text": " So, OK, so when it comes to actually, you know, there are certain cases when you need to communicate state from one part of the code and you need to send a message up.", "tokens": [50364, 400, 27520, 300, 666, 364, 2699, 76, 724, 307, 534, 257, 1822, 13, 50514, 50514, 400, 884, 300, 733, 295, 551, 11, 3670, 6677, 366, 2293, 24736, 281, 12606, 300, 1154, 294, 257, 8388, 623, 77, 19634, 636, 13, 50864, 50864, 407, 11, 2264, 11, 370, 562, 309, 1487, 281, 767, 11, 291, 458, 11, 456, 366, 1629, 3331, 562, 291, 643, 281, 7890, 1785, 490, 472, 644, 295, 264, 3089, 293, 291, 643, 281, 2845, 257, 3636, 493, 13, 51364, 51364, 509, 458, 11, 257, 2960, 2170, 23370, 11, 512, 4846, 2170, 3105, 11, 257, 24071, 2314, 11, 746, 1487, 646, 490, 264, 7154, 293, 291, 643, 281, 1333, 295, 7875, 309, 490, 613, 819, 3166, 295, 428, 724, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.059933422088623046, "compression_ratio": 1.7475083056478404, "no_caption_prob": 7.601887045893818e-05}, {"id": 109, "seek": 50300, "start": 523.0, "end": 532.0, "text": " You know, a button gets clicked, some input gets changed, a validation happens, something comes back from the server and you need to sort of trigger it from these different parts of your app.", "tokens": [50364, 400, 27520, 300, 666, 364, 2699, 76, 724, 307, 534, 257, 1822, 13, 50514, 50514, 400, 884, 300, 733, 295, 551, 11, 3670, 6677, 366, 2293, 24736, 281, 12606, 300, 1154, 294, 257, 8388, 623, 77, 19634, 636, 13, 50864, 50864, 407, 11, 2264, 11, 370, 562, 309, 1487, 281, 767, 11, 291, 458, 11, 456, 366, 1629, 3331, 562, 291, 643, 281, 7890, 1785, 490, 472, 644, 295, 264, 3089, 293, 291, 643, 281, 2845, 257, 3636, 493, 13, 51364, 51364, 509, 458, 11, 257, 2960, 2170, 23370, 11, 512, 4846, 2170, 3105, 11, 257, 24071, 2314, 11, 746, 1487, 646, 490, 264, 7154, 293, 291, 643, 281, 1333, 295, 7875, 309, 490, 613, 819, 3166, 295, 428, 724, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.059933422088623046, "compression_ratio": 1.7475083056478404, "no_caption_prob": 7.601887045893818e-05}, {"id": 110, "seek": 53200, "start": 532.0, "end": 538.0, "text": " And so another principle that I think about here is composing things.", "tokens": [50364, 400, 370, 1071, 8665, 300, 286, 519, 466, 510, 307, 715, 6110, 721, 13, 50664, 50664, 400, 2171, 286, 411, 281, 519, 294, 2115, 295, 257, 6328, 13, 50864, 50864, 286, 733, 295, 411, 264, 1433, 6328, 337, 11, 291, 458, 11, 746, 300, 2709, 291, 257, 935, 300, 291, 393, 6328, 666, 300, 291, 584, 11, 562, 341, 2314, 11, 718, 385, 458, 13, 51364, 51364, 400, 286, 528, 281, 360, 613, 661, 721, 13, 467, 311, 411, 257, 11, 291, 458, 11, 309, 311, 411, 257, 2944, 11554, 420, 257, 3089, 17231, 11, 411, 754, 264, 17231, 294, 17995, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10351892687239737, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.204751844052225e-05}, {"id": 111, "seek": 53200, "start": 538.0, "end": 542.0, "text": " And sometimes I like to think in terms of a hook.", "tokens": [50364, 400, 370, 1071, 8665, 300, 286, 519, 466, 510, 307, 715, 6110, 721, 13, 50664, 50664, 400, 2171, 286, 411, 281, 519, 294, 2115, 295, 257, 6328, 13, 50864, 50864, 286, 733, 295, 411, 264, 1433, 6328, 337, 11, 291, 458, 11, 746, 300, 2709, 291, 257, 935, 300, 291, 393, 6328, 666, 300, 291, 584, 11, 562, 341, 2314, 11, 718, 385, 458, 13, 51364, 51364, 400, 286, 528, 281, 360, 613, 661, 721, 13, 467, 311, 411, 257, 11, 291, 458, 11, 309, 311, 411, 257, 2944, 11554, 420, 257, 3089, 17231, 11, 411, 754, 264, 17231, 294, 17995, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10351892687239737, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.204751844052225e-05}, {"id": 112, "seek": 53200, "start": 542.0, "end": 552.0, "text": " I kind of like the term hook for, you know, something that gives you a point that you can hook into that you say, when this happens, let me know.", "tokens": [50364, 400, 370, 1071, 8665, 300, 286, 519, 466, 510, 307, 715, 6110, 721, 13, 50664, 50664, 400, 2171, 286, 411, 281, 519, 294, 2115, 295, 257, 6328, 13, 50864, 50864, 286, 733, 295, 411, 264, 1433, 6328, 337, 11, 291, 458, 11, 746, 300, 2709, 291, 257, 935, 300, 291, 393, 6328, 666, 300, 291, 584, 11, 562, 341, 2314, 11, 718, 385, 458, 13, 51364, 51364, 400, 286, 528, 281, 360, 613, 661, 721, 13, 467, 311, 411, 257, 11, 291, 458, 11, 309, 311, 411, 257, 2944, 11554, 420, 257, 3089, 17231, 11, 411, 754, 264, 17231, 294, 17995, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10351892687239737, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.204751844052225e-05}, {"id": 113, "seek": 53200, "start": 552.0, "end": 561.0, "text": " And I want to do these other things. It's like a, you know, it's like a push notification or a code subscription, like even the subscription in HTML.", "tokens": [50364, 400, 370, 1071, 8665, 300, 286, 519, 466, 510, 307, 715, 6110, 721, 13, 50664, 50664, 400, 2171, 286, 411, 281, 519, 294, 2115, 295, 257, 6328, 13, 50864, 50864, 286, 733, 295, 411, 264, 1433, 6328, 337, 11, 291, 458, 11, 746, 300, 2709, 291, 257, 935, 300, 291, 393, 6328, 666, 300, 291, 584, 11, 562, 341, 2314, 11, 718, 385, 458, 13, 51364, 51364, 400, 286, 528, 281, 360, 613, 661, 721, 13, 467, 311, 411, 257, 11, 291, 458, 11, 309, 311, 411, 257, 2944, 11554, 420, 257, 3089, 17231, 11, 411, 754, 264, 17231, 294, 17995, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10351892687239737, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.204751844052225e-05}, {"id": 114, "seek": 56100, "start": 561.0, "end": 571.0, "text": " Yeah, exactly. And so I think like one thing that I see happening sometimes is that you get this code that just piles on these responsibilities.", "tokens": [50364, 865, 11, 2293, 13, 400, 370, 286, 519, 411, 472, 551, 300, 286, 536, 2737, 2171, 307, 300, 291, 483, 341, 3089, 300, 445, 34861, 322, 613, 16190, 13, 50864, 50864, 400, 300, 311, 264, 551, 281, 574, 484, 337, 13, 509, 458, 11, 286, 519, 300, 411, 21589, 5821, 11, 309, 311, 439, 466, 11, 291, 458, 11, 445, 1382, 281, 915, 729, 26764, 3876, 293, 577, 281, 13859, 721, 13, 51364, 51364, 400, 498, 291, 536, 439, 613, 819, 16190, 885, 7467, 1214, 11, 291, 458, 11, 286, 914, 11, 321, 600, 2825, 466, 341, 13, 821, 311, 364, 1523, 281, 2577, 729, 16190, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03406604560645851, "compression_ratio": 1.825925925925926, "no_caption_prob": 0.00023409507411997765}, {"id": 115, "seek": 56100, "start": 571.0, "end": 581.0, "text": " And that's the thing to look out for. You know, I think that like scaling applications, it's all about, you know, just trying to find those dividing lines and how to organize things.", "tokens": [50364, 865, 11, 2293, 13, 400, 370, 286, 519, 411, 472, 551, 300, 286, 536, 2737, 2171, 307, 300, 291, 483, 341, 3089, 300, 445, 34861, 322, 613, 16190, 13, 50864, 50864, 400, 300, 311, 264, 551, 281, 574, 484, 337, 13, 509, 458, 11, 286, 519, 300, 411, 21589, 5821, 11, 309, 311, 439, 466, 11, 291, 458, 11, 445, 1382, 281, 915, 729, 26764, 3876, 293, 577, 281, 13859, 721, 13, 51364, 51364, 400, 498, 291, 536, 439, 613, 819, 16190, 885, 7467, 1214, 11, 291, 458, 11, 286, 914, 11, 321, 600, 2825, 466, 341, 13, 821, 311, 364, 1523, 281, 2577, 729, 16190, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03406604560645851, "compression_ratio": 1.825925925925926, "no_caption_prob": 0.00023409507411997765}, {"id": 116, "seek": 56100, "start": 581.0, "end": 589.0, "text": " And if you see all these different responsibilities being mixed together, you know, I mean, we've talked about this. There's an art to seeing those responsibilities.", "tokens": [50364, 865, 11, 2293, 13, 400, 370, 286, 519, 411, 472, 551, 300, 286, 536, 2737, 2171, 307, 300, 291, 483, 341, 3089, 300, 445, 34861, 322, 613, 16190, 13, 50864, 50864, 400, 300, 311, 264, 551, 281, 574, 484, 337, 13, 509, 458, 11, 286, 519, 300, 411, 21589, 5821, 11, 309, 311, 439, 466, 11, 291, 458, 11, 445, 1382, 281, 915, 729, 26764, 3876, 293, 577, 281, 13859, 721, 13, 51364, 51364, 400, 498, 291, 536, 439, 613, 819, 16190, 885, 7467, 1214, 11, 291, 458, 11, 286, 914, 11, 321, 600, 2825, 466, 341, 13, 821, 311, 364, 1523, 281, 2577, 729, 16190, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03406604560645851, "compression_ratio": 1.825925925925926, "no_caption_prob": 0.00023409507411997765}, {"id": 117, "seek": 58900, "start": 589.0, "end": 595.0, "text": " If you're looking at JSON decoders, you know, you might be tempted to say, like, oh, that's one responsibility.", "tokens": [50364, 759, 291, 434, 1237, 412, 31828, 979, 378, 433, 11, 291, 458, 11, 291, 1062, 312, 29941, 281, 584, 11, 411, 11, 1954, 11, 300, 311, 472, 6357, 13, 50664, 50664, 639, 307, 428, 6250, 337, 439, 264, 31828, 979, 8616, 13, 509, 434, 6250, 337, 439, 264, 1910, 3089, 13, 50914, 50914, 583, 550, 291, 3624, 428, 3485, 281, 281, 360, 1481, 721, 411, 11, 291, 458, 11, 42687, 3467, 13, 51264, 51264, 509, 362, 291, 362, 281, 3012, 1296, 3089, 294, 439, 613, 819, 3190, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06742291346840236, "compression_ratio": 1.6682242990654206, "no_caption_prob": 3.169179763062857e-05}, {"id": 118, "seek": 58900, "start": 595.0, "end": 600.0, "text": " This is your responsible for all the JSON decoding. You're responsible for all the view code.", "tokens": [50364, 759, 291, 434, 1237, 412, 31828, 979, 378, 433, 11, 291, 458, 11, 291, 1062, 312, 29941, 281, 584, 11, 411, 11, 1954, 11, 300, 311, 472, 6357, 13, 50664, 50664, 639, 307, 428, 6250, 337, 439, 264, 31828, 979, 8616, 13, 509, 434, 6250, 337, 439, 264, 1910, 3089, 13, 50914, 50914, 583, 550, 291, 3624, 428, 3485, 281, 281, 360, 1481, 721, 411, 11, 291, 458, 11, 42687, 3467, 13, 51264, 51264, 509, 362, 291, 362, 281, 3012, 1296, 3089, 294, 439, 613, 819, 3190, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06742291346840236, "compression_ratio": 1.6682242990654206, "no_caption_prob": 3.169179763062857e-05}, {"id": 119, "seek": 58900, "start": 600.0, "end": 607.0, "text": " But then you lose your ability to to do nice things like, you know, opaque types.", "tokens": [50364, 759, 291, 434, 1237, 412, 31828, 979, 378, 433, 11, 291, 458, 11, 291, 1062, 312, 29941, 281, 584, 11, 411, 11, 1954, 11, 300, 311, 472, 6357, 13, 50664, 50664, 639, 307, 428, 6250, 337, 439, 264, 31828, 979, 8616, 13, 509, 434, 6250, 337, 439, 264, 1910, 3089, 13, 50914, 50914, 583, 550, 291, 3624, 428, 3485, 281, 281, 360, 1481, 721, 411, 11, 291, 458, 11, 42687, 3467, 13, 51264, 51264, 509, 362, 291, 362, 281, 3012, 1296, 3089, 294, 439, 613, 819, 3190, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06742291346840236, "compression_ratio": 1.6682242990654206, "no_caption_prob": 3.169179763062857e-05}, {"id": 120, "seek": 58900, "start": 607.0, "end": 612.0, "text": " You have you have to jump between code in all these different places.", "tokens": [50364, 759, 291, 434, 1237, 412, 31828, 979, 378, 433, 11, 291, 458, 11, 291, 1062, 312, 29941, 281, 584, 11, 411, 11, 1954, 11, 300, 311, 472, 6357, 13, 50664, 50664, 639, 307, 428, 6250, 337, 439, 264, 31828, 979, 8616, 13, 509, 434, 6250, 337, 439, 264, 1910, 3089, 13, 50914, 50914, 583, 550, 291, 3624, 428, 3485, 281, 281, 360, 1481, 721, 411, 11, 291, 458, 11, 42687, 3467, 13, 51264, 51264, 509, 362, 291, 362, 281, 3012, 1296, 3089, 294, 439, 613, 819, 3190, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06742291346840236, "compression_ratio": 1.6682242990654206, "no_caption_prob": 3.169179763062857e-05}, {"id": 121, "seek": 61200, "start": 612.0, "end": 619.0, "text": " I think one good heuristic is when you sit down to work on a task, how many different modules do you have to jump around to?", "tokens": [50364, 286, 519, 472, 665, 415, 374, 3142, 307, 562, 291, 1394, 760, 281, 589, 322, 257, 5633, 11, 577, 867, 819, 16679, 360, 291, 362, 281, 3012, 926, 281, 30, 50714, 50714, 865, 11, 2673, 291, 445, 528, 281, 589, 294, 264, 10088, 300, 291, 643, 281, 1319, 293, 1310, 264, 472, 300, 4960, 309, 420, 264, 2306, 13, 51114, 51114, 583, 406, 819, 16679, 300, 366, 9408, 281, 1184, 661, 293, 300, 366, 29482, 281, 1184, 661, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.11134123514933758, "compression_ratio": 1.7040816326530612, "no_caption_prob": 4.908500341116451e-05}, {"id": 122, "seek": 61200, "start": 619.0, "end": 627.0, "text": " Yeah, usually you just want to work in the module that you need to change and maybe the one that uses it or the ones.", "tokens": [50364, 286, 519, 472, 665, 415, 374, 3142, 307, 562, 291, 1394, 760, 281, 589, 322, 257, 5633, 11, 577, 867, 819, 16679, 360, 291, 362, 281, 3012, 926, 281, 30, 50714, 50714, 865, 11, 2673, 291, 445, 528, 281, 589, 294, 264, 10088, 300, 291, 643, 281, 1319, 293, 1310, 264, 472, 300, 4960, 309, 420, 264, 2306, 13, 51114, 51114, 583, 406, 819, 16679, 300, 366, 9408, 281, 1184, 661, 293, 300, 366, 29482, 281, 1184, 661, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.11134123514933758, "compression_ratio": 1.7040816326530612, "no_caption_prob": 4.908500341116451e-05}, {"id": 123, "seek": 61200, "start": 627.0, "end": 634.0, "text": " But not different modules that are linked to each other and that are coupled to each other.", "tokens": [50364, 286, 519, 472, 665, 415, 374, 3142, 307, 562, 291, 1394, 760, 281, 589, 322, 257, 5633, 11, 577, 867, 819, 16679, 360, 291, 362, 281, 3012, 926, 281, 30, 50714, 50714, 865, 11, 2673, 291, 445, 528, 281, 589, 294, 264, 10088, 300, 291, 643, 281, 1319, 293, 1310, 264, 472, 300, 4960, 309, 420, 264, 2306, 13, 51114, 51114, 583, 406, 819, 16679, 300, 366, 9408, 281, 1184, 661, 293, 300, 366, 29482, 281, 1184, 661, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.11134123514933758, "compression_ratio": 1.7040816326530612, "no_caption_prob": 4.908500341116451e-05}, {"id": 124, "seek": 63400, "start": 634.0, "end": 642.0, "text": " Yes. Yeah. Yeah. I mean, if you're if you're changing one thing, then ideally you want to change things in one place.", "tokens": [50364, 1079, 13, 865, 13, 865, 13, 286, 914, 11, 498, 291, 434, 498, 291, 434, 4473, 472, 551, 11, 550, 22915, 291, 528, 281, 1319, 721, 294, 472, 1081, 13, 50764, 50764, 509, 528, 281, 13, 583, 586, 498, 291, 434, 4473, 732, 721, 11, 550, 498, 291, 362, 281, 352, 281, 732, 819, 16679, 11, 550, 300, 1062, 312, 257, 665, 1465, 13, 51114, 51114, 400, 11, 291, 458, 11, 286, 914, 11, 309, 311, 709, 3571, 848, 813, 1096, 13, 51314, 51314, 583, 286, 519, 309, 311, 588, 1858, 281, 14375, 322, 16190, 294, 257, 2167, 10088, 293, 362, 309, 312, 257, 1333, 295, 11838, 337, 439, 613, 16190, 300, 483, 41877, 1214, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0575856884320577, "compression_ratio": 1.8605577689243027, "no_caption_prob": 7.36822112230584e-05}, {"id": 125, "seek": 63400, "start": 642.0, "end": 649.0, "text": " You want to. But now if you're changing two things, then if you have to go to two different modules, then that might be a good sign.", "tokens": [50364, 1079, 13, 865, 13, 865, 13, 286, 914, 11, 498, 291, 434, 498, 291, 434, 4473, 472, 551, 11, 550, 22915, 291, 528, 281, 1319, 721, 294, 472, 1081, 13, 50764, 50764, 509, 528, 281, 13, 583, 586, 498, 291, 434, 4473, 732, 721, 11, 550, 498, 291, 362, 281, 352, 281, 732, 819, 16679, 11, 550, 300, 1062, 312, 257, 665, 1465, 13, 51114, 51114, 400, 11, 291, 458, 11, 286, 914, 11, 309, 311, 709, 3571, 848, 813, 1096, 13, 51314, 51314, 583, 286, 519, 309, 311, 588, 1858, 281, 14375, 322, 16190, 294, 257, 2167, 10088, 293, 362, 309, 312, 257, 1333, 295, 11838, 337, 439, 613, 16190, 300, 483, 41877, 1214, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0575856884320577, "compression_ratio": 1.8605577689243027, "no_caption_prob": 7.36822112230584e-05}, {"id": 126, "seek": 63400, "start": 649.0, "end": 653.0, "text": " And, you know, I mean, it's much easier said than done.", "tokens": [50364, 1079, 13, 865, 13, 865, 13, 286, 914, 11, 498, 291, 434, 498, 291, 434, 4473, 472, 551, 11, 550, 22915, 291, 528, 281, 1319, 721, 294, 472, 1081, 13, 50764, 50764, 509, 528, 281, 13, 583, 586, 498, 291, 434, 4473, 732, 721, 11, 550, 498, 291, 362, 281, 352, 281, 732, 819, 16679, 11, 550, 300, 1062, 312, 257, 665, 1465, 13, 51114, 51114, 400, 11, 291, 458, 11, 286, 914, 11, 309, 311, 709, 3571, 848, 813, 1096, 13, 51314, 51314, 583, 286, 519, 309, 311, 588, 1858, 281, 14375, 322, 16190, 294, 257, 2167, 10088, 293, 362, 309, 312, 257, 1333, 295, 11838, 337, 439, 613, 16190, 300, 483, 41877, 1214, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0575856884320577, "compression_ratio": 1.8605577689243027, "no_caption_prob": 7.36822112230584e-05}, {"id": 127, "seek": 63400, "start": 653.0, "end": 663.0, "text": " But I think it's very easy to pile on responsibilities in a single module and have it be a sort of hub for all these responsibilities that get grouped together.", "tokens": [50364, 1079, 13, 865, 13, 865, 13, 286, 914, 11, 498, 291, 434, 498, 291, 434, 4473, 472, 551, 11, 550, 22915, 291, 528, 281, 1319, 721, 294, 472, 1081, 13, 50764, 50764, 509, 528, 281, 13, 583, 586, 498, 291, 434, 4473, 732, 721, 11, 550, 498, 291, 362, 281, 352, 281, 732, 819, 16679, 11, 550, 300, 1062, 312, 257, 665, 1465, 13, 51114, 51114, 400, 11, 291, 458, 11, 286, 914, 11, 309, 311, 709, 3571, 848, 813, 1096, 13, 51314, 51314, 583, 286, 519, 309, 311, 588, 1858, 281, 14375, 322, 16190, 294, 257, 2167, 10088, 293, 362, 309, 312, 257, 1333, 295, 11838, 337, 439, 613, 16190, 300, 483, 41877, 1214, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0575856884320577, "compression_ratio": 1.8605577689243027, "no_caption_prob": 7.36822112230584e-05}, {"id": 128, "seek": 66300, "start": 663.0, "end": 669.0, "text": " And it can turn into a sort of junk drawer of, oh, this happens and these these events need to occur.", "tokens": [50364, 400, 309, 393, 1261, 666, 257, 1333, 295, 19109, 24039, 295, 11, 1954, 11, 341, 2314, 293, 613, 613, 3931, 643, 281, 5160, 13, 50664, 50664, 400, 11, 291, 458, 11, 286, 643, 281, 1319, 264, 1785, 490, 341, 1823, 281, 341, 1823, 13, 50914, 50914, 400, 550, 562, 300, 2314, 11, 309, 2203, 281, 362, 613, 7363, 763, 293, 309, 2203, 281, 3531, 300, 1296, 7183, 13, 51214, 51214, 400, 5800, 291, 600, 658, 439, 613, 819, 16190, 294, 472, 10088, 13, 51414, 51414, 583, 498, 291, 393, 2602, 35925, 729, 1214, 11, 291, 458, 11, 294, 2657, 21841, 9410, 11, 2171, 561, 751, 466, 4382, 12686, 670, 32122, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.031113452496735947, "compression_ratio": 1.7482758620689656, "no_caption_prob": 4.6837049012538046e-05}, {"id": 129, "seek": 66300, "start": 669.0, "end": 674.0, "text": " And, you know, I need to change the state from this step to this step.", "tokens": [50364, 400, 309, 393, 1261, 666, 257, 1333, 295, 19109, 24039, 295, 11, 1954, 11, 341, 2314, 293, 613, 613, 3931, 643, 281, 5160, 13, 50664, 50664, 400, 11, 291, 458, 11, 286, 643, 281, 1319, 264, 1785, 490, 341, 1823, 281, 341, 1823, 13, 50914, 50914, 400, 550, 562, 300, 2314, 11, 309, 2203, 281, 362, 613, 7363, 763, 293, 309, 2203, 281, 3531, 300, 1296, 7183, 13, 51214, 51214, 400, 5800, 291, 600, 658, 439, 613, 819, 16190, 294, 472, 10088, 13, 51414, 51414, 583, 498, 291, 393, 2602, 35925, 729, 1214, 11, 291, 458, 11, 294, 2657, 21841, 9410, 11, 2171, 561, 751, 466, 4382, 12686, 670, 32122, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.031113452496735947, "compression_ratio": 1.7482758620689656, "no_caption_prob": 4.6837049012538046e-05}, {"id": 130, "seek": 66300, "start": 674.0, "end": 680.0, "text": " And then when that happens, it needs to have these validations and it needs to store that between pages.", "tokens": [50364, 400, 309, 393, 1261, 666, 257, 1333, 295, 19109, 24039, 295, 11, 1954, 11, 341, 2314, 293, 613, 613, 3931, 643, 281, 5160, 13, 50664, 50664, 400, 11, 291, 458, 11, 286, 643, 281, 1319, 264, 1785, 490, 341, 1823, 281, 341, 1823, 13, 50914, 50914, 400, 550, 562, 300, 2314, 11, 309, 2203, 281, 362, 613, 7363, 763, 293, 309, 2203, 281, 3531, 300, 1296, 7183, 13, 51214, 51214, 400, 5800, 291, 600, 658, 439, 613, 819, 16190, 294, 472, 10088, 13, 51414, 51414, 583, 498, 291, 393, 2602, 35925, 729, 1214, 11, 291, 458, 11, 294, 2657, 21841, 9410, 11, 2171, 561, 751, 466, 4382, 12686, 670, 32122, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.031113452496735947, "compression_ratio": 1.7482758620689656, "no_caption_prob": 4.6837049012538046e-05}, {"id": 131, "seek": 66300, "start": 680.0, "end": 684.0, "text": " And suddenly you've got all these different responsibilities in one module.", "tokens": [50364, 400, 309, 393, 1261, 666, 257, 1333, 295, 19109, 24039, 295, 11, 1954, 11, 341, 2314, 293, 613, 613, 3931, 643, 281, 5160, 13, 50664, 50664, 400, 11, 291, 458, 11, 286, 643, 281, 1319, 264, 1785, 490, 341, 1823, 281, 341, 1823, 13, 50914, 50914, 400, 550, 562, 300, 2314, 11, 309, 2203, 281, 362, 613, 7363, 763, 293, 309, 2203, 281, 3531, 300, 1296, 7183, 13, 51214, 51214, 400, 5800, 291, 600, 658, 439, 613, 819, 16190, 294, 472, 10088, 13, 51414, 51414, 583, 498, 291, 393, 2602, 35925, 729, 1214, 11, 291, 458, 11, 294, 2657, 21841, 9410, 11, 2171, 561, 751, 466, 4382, 12686, 670, 32122, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.031113452496735947, "compression_ratio": 1.7482758620689656, "no_caption_prob": 4.6837049012538046e-05}, {"id": 132, "seek": 66300, "start": 684.0, "end": 692.0, "text": " But if you can instead compose those together, you know, in object oriented programming, sometimes people talk about prefer composition over inheritance.", "tokens": [50364, 400, 309, 393, 1261, 666, 257, 1333, 295, 19109, 24039, 295, 11, 1954, 11, 341, 2314, 293, 613, 613, 3931, 643, 281, 5160, 13, 50664, 50664, 400, 11, 291, 458, 11, 286, 643, 281, 1319, 264, 1785, 490, 341, 1823, 281, 341, 1823, 13, 50914, 50914, 400, 550, 562, 300, 2314, 11, 309, 2203, 281, 362, 613, 7363, 763, 293, 309, 2203, 281, 3531, 300, 1296, 7183, 13, 51214, 51214, 400, 5800, 291, 600, 658, 439, 613, 819, 16190, 294, 472, 10088, 13, 51414, 51414, 583, 498, 291, 393, 2602, 35925, 729, 1214, 11, 291, 458, 11, 294, 2657, 21841, 9410, 11, 2171, 561, 751, 466, 4382, 12686, 670, 32122, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.031113452496735947, "compression_ratio": 1.7482758620689656, "no_caption_prob": 4.6837049012538046e-05}, {"id": 133, "seek": 69200, "start": 692.0, "end": 699.0, "text": " And there's a reason for that, because when you compose things together, you can think about them independently.", "tokens": [50364, 400, 456, 311, 257, 1778, 337, 300, 11, 570, 562, 291, 35925, 721, 1214, 11, 291, 393, 519, 466, 552, 21761, 13, 50714, 50714, 1133, 291, 21389, 11, 309, 445, 728, 5814, 8076, 552, 293, 728, 2810, 904, 552, 294, 257, 636, 689, 309, 3643, 588, 2252, 281, 519, 466, 552, 14759, 13, 51114, 51114, 400, 570, 436, 434, 406, 4994, 2935, 13, 1779, 13, 51314, 51314, 509, 600, 29482, 552, 1214, 13, 400, 365, 12686, 11, 291, 393, 534, 519, 466, 721, 21761, 293, 584, 11, 2264, 11, 613, 721, 11, 1293, 295, 613, 721, 643, 281, 1051, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06961356676541842, "compression_ratio": 1.840637450199203, "no_caption_prob": 0.00017398505588062108}, {"id": 134, "seek": 69200, "start": 699.0, "end": 707.0, "text": " When you inherit, it just intermeshes them and intermingles them in a way where it becomes very difficult to think about them separately.", "tokens": [50364, 400, 456, 311, 257, 1778, 337, 300, 11, 570, 562, 291, 35925, 721, 1214, 11, 291, 393, 519, 466, 552, 21761, 13, 50714, 50714, 1133, 291, 21389, 11, 309, 445, 728, 5814, 8076, 552, 293, 728, 2810, 904, 552, 294, 257, 636, 689, 309, 3643, 588, 2252, 281, 519, 466, 552, 14759, 13, 51114, 51114, 400, 570, 436, 434, 406, 4994, 2935, 13, 1779, 13, 51314, 51314, 509, 600, 29482, 552, 1214, 13, 400, 365, 12686, 11, 291, 393, 534, 519, 466, 721, 21761, 293, 584, 11, 2264, 11, 613, 721, 11, 1293, 295, 613, 721, 643, 281, 1051, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06961356676541842, "compression_ratio": 1.840637450199203, "no_caption_prob": 0.00017398505588062108}, {"id": 135, "seek": 69200, "start": 707.0, "end": 711.0, "text": " And because they're not separate simply. Right.", "tokens": [50364, 400, 456, 311, 257, 1778, 337, 300, 11, 570, 562, 291, 35925, 721, 1214, 11, 291, 393, 519, 466, 552, 21761, 13, 50714, 50714, 1133, 291, 21389, 11, 309, 445, 728, 5814, 8076, 552, 293, 728, 2810, 904, 552, 294, 257, 636, 689, 309, 3643, 588, 2252, 281, 519, 466, 552, 14759, 13, 51114, 51114, 400, 570, 436, 434, 406, 4994, 2935, 13, 1779, 13, 51314, 51314, 509, 600, 29482, 552, 1214, 13, 400, 365, 12686, 11, 291, 393, 534, 519, 466, 721, 21761, 293, 584, 11, 2264, 11, 613, 721, 11, 1293, 295, 613, 721, 643, 281, 1051, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06961356676541842, "compression_ratio": 1.840637450199203, "no_caption_prob": 0.00017398505588062108}, {"id": 136, "seek": 69200, "start": 711.0, "end": 719.0, "text": " You've coupled them together. And with composition, you can really think about things independently and say, OK, these things, both of these things need to happen.", "tokens": [50364, 400, 456, 311, 257, 1778, 337, 300, 11, 570, 562, 291, 35925, 721, 1214, 11, 291, 393, 519, 466, 552, 21761, 13, 50714, 50714, 1133, 291, 21389, 11, 309, 445, 728, 5814, 8076, 552, 293, 728, 2810, 904, 552, 294, 257, 636, 689, 309, 3643, 588, 2252, 281, 519, 466, 552, 14759, 13, 51114, 51114, 400, 570, 436, 434, 406, 4994, 2935, 13, 1779, 13, 51314, 51314, 509, 600, 29482, 552, 1214, 13, 400, 365, 12686, 11, 291, 393, 534, 519, 466, 721, 21761, 293, 584, 11, 2264, 11, 613, 721, 11, 1293, 295, 613, 721, 643, 281, 1051, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06961356676541842, "compression_ratio": 1.840637450199203, "no_caption_prob": 0.00017398505588062108}, {"id": 137, "seek": 71900, "start": 719.0, "end": 726.0, "text": " But I can think about them separately and put them together sort of at the edges, not at the center of the system.", "tokens": [50364, 583, 286, 393, 519, 466, 552, 14759, 293, 829, 552, 1214, 1333, 295, 412, 264, 8819, 11, 406, 412, 264, 3056, 295, 264, 1185, 13, 50714, 50714, 865, 13, 407, 1310, 718, 311, 352, 646, 281, 577, 281, 9845, 2199, 721, 13, 50964, 50964, 407, 286, 390, 1922, 17396, 562, 286, 848, 829, 1203, 294, 428, 2135, 3991, 11, 570, 300, 733, 295, 1985, 13, 51264, 51264, 400, 291, 291, 500, 380, 362, 257, 688, 295, 2740, 926, 437, 512, 561, 818, 2596, 1440, 6101, 13, 51564, 51564, 5471, 307, 472, 10088, 293, 1203, 307, 1238, 1858, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05181086297128715, "compression_ratio": 1.6245210727969348, "no_caption_prob": 0.00011234932753723115}, {"id": 138, "seek": 71900, "start": 726.0, "end": 731.0, "text": " Yeah. So maybe let's go back to how to divide simple things.", "tokens": [50364, 583, 286, 393, 519, 466, 552, 14759, 293, 829, 552, 1214, 1333, 295, 412, 264, 8819, 11, 406, 412, 264, 3056, 295, 264, 1185, 13, 50714, 50714, 865, 13, 407, 1310, 718, 311, 352, 646, 281, 577, 281, 9845, 2199, 721, 13, 50964, 50964, 407, 286, 390, 1922, 17396, 562, 286, 848, 829, 1203, 294, 428, 2135, 3991, 11, 570, 300, 733, 295, 1985, 13, 51264, 51264, 400, 291, 291, 500, 380, 362, 257, 688, 295, 2740, 926, 437, 512, 561, 818, 2596, 1440, 6101, 13, 51564, 51564, 5471, 307, 472, 10088, 293, 1203, 307, 1238, 1858, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05181086297128715, "compression_ratio": 1.6245210727969348, "no_caption_prob": 0.00011234932753723115}, {"id": 139, "seek": 71900, "start": 731.0, "end": 737.0, "text": " So I was half joking when I said put everything in your main file, because that kind of works.", "tokens": [50364, 583, 286, 393, 519, 466, 552, 14759, 293, 829, 552, 1214, 1333, 295, 412, 264, 8819, 11, 406, 412, 264, 3056, 295, 264, 1185, 13, 50714, 50714, 865, 13, 407, 1310, 718, 311, 352, 646, 281, 577, 281, 9845, 2199, 721, 13, 50964, 50964, 407, 286, 390, 1922, 17396, 562, 286, 848, 829, 1203, 294, 428, 2135, 3991, 11, 570, 300, 733, 295, 1985, 13, 51264, 51264, 400, 291, 291, 500, 380, 362, 257, 688, 295, 2740, 926, 437, 512, 561, 818, 2596, 1440, 6101, 13, 51564, 51564, 5471, 307, 472, 10088, 293, 1203, 307, 1238, 1858, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05181086297128715, "compression_ratio": 1.6245210727969348, "no_caption_prob": 0.00011234932753723115}, {"id": 140, "seek": 71900, "start": 737.0, "end": 743.0, "text": " And you you don't have a lot of problems around what some people call parent child communication.", "tokens": [50364, 583, 286, 393, 519, 466, 552, 14759, 293, 829, 552, 1214, 1333, 295, 412, 264, 8819, 11, 406, 412, 264, 3056, 295, 264, 1185, 13, 50714, 50714, 865, 13, 407, 1310, 718, 311, 352, 646, 281, 577, 281, 9845, 2199, 721, 13, 50964, 50964, 407, 286, 390, 1922, 17396, 562, 286, 848, 829, 1203, 294, 428, 2135, 3991, 11, 570, 300, 733, 295, 1985, 13, 51264, 51264, 400, 291, 291, 500, 380, 362, 257, 688, 295, 2740, 926, 437, 512, 561, 818, 2596, 1440, 6101, 13, 51564, 51564, 5471, 307, 472, 10088, 293, 1203, 307, 1238, 1858, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05181086297128715, "compression_ratio": 1.6245210727969348, "no_caption_prob": 0.00011234932753723115}, {"id": 141, "seek": 71900, "start": 743.0, "end": 746.0, "text": " Everything is one module and everything is pretty easy.", "tokens": [50364, 583, 286, 393, 519, 466, 552, 14759, 293, 829, 552, 1214, 1333, 295, 412, 264, 8819, 11, 406, 412, 264, 3056, 295, 264, 1185, 13, 50714, 50714, 865, 13, 407, 1310, 718, 311, 352, 646, 281, 577, 281, 9845, 2199, 721, 13, 50964, 50964, 407, 286, 390, 1922, 17396, 562, 286, 848, 829, 1203, 294, 428, 2135, 3991, 11, 570, 300, 733, 295, 1985, 13, 51264, 51264, 400, 291, 291, 500, 380, 362, 257, 688, 295, 2740, 926, 437, 512, 561, 818, 2596, 1440, 6101, 13, 51564, 51564, 5471, 307, 472, 10088, 293, 1203, 307, 1238, 1858, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05181086297128715, "compression_ratio": 1.6245210727969348, "no_caption_prob": 0.00011234932753723115}, {"id": 142, "seek": 74600, "start": 746.0, "end": 755.0, "text": " It's not maintainable because your your update and your view do way too many things, but it's relatively easy.", "tokens": [50364, 467, 311, 406, 6909, 712, 570, 428, 428, 5623, 293, 428, 1910, 360, 636, 886, 867, 721, 11, 457, 309, 311, 7226, 1858, 13, 50814, 50814, 407, 498, 291, 528, 281, 2642, 264, 26764, 3876, 11, 652, 721, 18587, 13, 51014, 51014, 20043, 437, 291, 486, 360, 307, 445, 853, 293, 652, 3801, 6828, 666, 4356, 6828, 13, 51214, 51214, 407, 6781, 311, 1365, 390, 286, 362, 257, 1910, 2445, 11, 4994, 300, 666, 257, 1910, 23117, 11, 1910, 1772, 293, 1910, 2671, 260, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07384458820471602, "compression_ratio": 1.641255605381166, "no_caption_prob": 7.843312050681561e-05}, {"id": 143, "seek": 74600, "start": 755.0, "end": 759.0, "text": " So if you want to draw the dividing lines, make things simpler.", "tokens": [50364, 467, 311, 406, 6909, 712, 570, 428, 428, 5623, 293, 428, 1910, 360, 636, 886, 867, 721, 11, 457, 309, 311, 7226, 1858, 13, 50814, 50814, 407, 498, 291, 528, 281, 2642, 264, 26764, 3876, 11, 652, 721, 18587, 13, 51014, 51014, 20043, 437, 291, 486, 360, 307, 445, 853, 293, 652, 3801, 6828, 666, 4356, 6828, 13, 51214, 51214, 407, 6781, 311, 1365, 390, 286, 362, 257, 1910, 2445, 11, 4994, 300, 666, 257, 1910, 23117, 11, 1910, 1772, 293, 1910, 2671, 260, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07384458820471602, "compression_ratio": 1.641255605381166, "no_caption_prob": 7.843312050681561e-05}, {"id": 144, "seek": 74600, "start": 759.0, "end": 763.0, "text": " Often what you will do is just try and make bigger functions into smaller functions.", "tokens": [50364, 467, 311, 406, 6909, 712, 570, 428, 428, 5623, 293, 428, 1910, 360, 636, 886, 867, 721, 11, 457, 309, 311, 7226, 1858, 13, 50814, 50814, 407, 498, 291, 528, 281, 2642, 264, 26764, 3876, 11, 652, 721, 18587, 13, 51014, 51014, 20043, 437, 291, 486, 360, 307, 445, 853, 293, 652, 3801, 6828, 666, 4356, 6828, 13, 51214, 51214, 407, 6781, 311, 1365, 390, 286, 362, 257, 1910, 2445, 11, 4994, 300, 666, 257, 1910, 23117, 11, 1910, 1772, 293, 1910, 2671, 260, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07384458820471602, "compression_ratio": 1.641255605381166, "no_caption_prob": 7.843312050681561e-05}, {"id": 145, "seek": 74600, "start": 763.0, "end": 772.0, "text": " So Rich's example was I have a view function, separate that into a view header, view body and view footer.", "tokens": [50364, 467, 311, 406, 6909, 712, 570, 428, 428, 5623, 293, 428, 1910, 360, 636, 886, 867, 721, 11, 457, 309, 311, 7226, 1858, 13, 50814, 50814, 407, 498, 291, 528, 281, 2642, 264, 26764, 3876, 11, 652, 721, 18587, 13, 51014, 51014, 20043, 437, 291, 486, 360, 307, 445, 853, 293, 652, 3801, 6828, 666, 4356, 6828, 13, 51214, 51214, 407, 6781, 311, 1365, 390, 286, 362, 257, 1910, 2445, 11, 4994, 300, 666, 257, 1910, 23117, 11, 1910, 1772, 293, 1910, 2671, 260, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07384458820471602, "compression_ratio": 1.641255605381166, "no_caption_prob": 7.843312050681561e-05}, {"id": 146, "seek": 77200, "start": 772.0, "end": 778.0, "text": " And those are just simple view functions. So you don't have to make them separate.", "tokens": [50364, 400, 729, 366, 445, 2199, 1910, 6828, 13, 407, 291, 500, 380, 362, 281, 652, 552, 4994, 13, 50664, 50664, 407, 439, 291, 434, 884, 307, 445, 2684, 3089, 13, 509, 434, 406, 5127, 604, 27520, 412, 439, 3993, 5141, 264, 2445, 13, 50964, 50964, 400, 300, 307, 588, 1858, 1895, 15104, 293, 588, 1858, 9845, 13, 51164, 51164, 865, 11, 558, 13, 3950, 366, 411, 264, 2295, 8345, 6773, 10641, 13, 51314, 51314, 400, 294, 2674, 11, 286, 519, 309, 311, 257, 588, 665, 1558, 281, 722, 365, 2295, 8345, 6773, 11, 886, 11, 570, 291, 445, 1850, 484, 439, 613, 721, 293, 5800, 291, 434, 411, 11, 2264, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07466256514839505, "compression_ratio": 1.7041198501872659, "no_caption_prob": 3.5912169551011175e-05}, {"id": 147, "seek": 77200, "start": 778.0, "end": 784.0, "text": " So all you're doing is just moving code. You're not adding any wiring at all except calling the function.", "tokens": [50364, 400, 729, 366, 445, 2199, 1910, 6828, 13, 407, 291, 500, 380, 362, 281, 652, 552, 4994, 13, 50664, 50664, 407, 439, 291, 434, 884, 307, 445, 2684, 3089, 13, 509, 434, 406, 5127, 604, 27520, 412, 439, 3993, 5141, 264, 2445, 13, 50964, 50964, 400, 300, 307, 588, 1858, 1895, 15104, 293, 588, 1858, 9845, 13, 51164, 51164, 865, 11, 558, 13, 3950, 366, 411, 264, 2295, 8345, 6773, 10641, 13, 51314, 51314, 400, 294, 2674, 11, 286, 519, 309, 311, 257, 588, 665, 1558, 281, 722, 365, 2295, 8345, 6773, 11, 886, 11, 570, 291, 445, 1850, 484, 439, 613, 721, 293, 5800, 291, 434, 411, 11, 2264, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07466256514839505, "compression_ratio": 1.7041198501872659, "no_caption_prob": 3.5912169551011175e-05}, {"id": 148, "seek": 77200, "start": 784.0, "end": 788.0, "text": " And that is very easy refactor and very easy divide.", "tokens": [50364, 400, 729, 366, 445, 2199, 1910, 6828, 13, 407, 291, 500, 380, 362, 281, 652, 552, 4994, 13, 50664, 50664, 407, 439, 291, 434, 884, 307, 445, 2684, 3089, 13, 509, 434, 406, 5127, 604, 27520, 412, 439, 3993, 5141, 264, 2445, 13, 50964, 50964, 400, 300, 307, 588, 1858, 1895, 15104, 293, 588, 1858, 9845, 13, 51164, 51164, 865, 11, 558, 13, 3950, 366, 411, 264, 2295, 8345, 6773, 10641, 13, 51314, 51314, 400, 294, 2674, 11, 286, 519, 309, 311, 257, 588, 665, 1558, 281, 722, 365, 2295, 8345, 6773, 11, 886, 11, 570, 291, 445, 1850, 484, 439, 613, 721, 293, 5800, 291, 434, 411, 11, 2264, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07466256514839505, "compression_ratio": 1.7041198501872659, "no_caption_prob": 3.5912169551011175e-05}, {"id": 149, "seek": 77200, "start": 788.0, "end": 791.0, "text": " Yeah, right. Those are like the low hanging fruit wins.", "tokens": [50364, 400, 729, 366, 445, 2199, 1910, 6828, 13, 407, 291, 500, 380, 362, 281, 652, 552, 4994, 13, 50664, 50664, 407, 439, 291, 434, 884, 307, 445, 2684, 3089, 13, 509, 434, 406, 5127, 604, 27520, 412, 439, 3993, 5141, 264, 2445, 13, 50964, 50964, 400, 300, 307, 588, 1858, 1895, 15104, 293, 588, 1858, 9845, 13, 51164, 51164, 865, 11, 558, 13, 3950, 366, 411, 264, 2295, 8345, 6773, 10641, 13, 51314, 51314, 400, 294, 2674, 11, 286, 519, 309, 311, 257, 588, 665, 1558, 281, 722, 365, 2295, 8345, 6773, 11, 886, 11, 570, 291, 445, 1850, 484, 439, 613, 721, 293, 5800, 291, 434, 411, 11, 2264, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07466256514839505, "compression_ratio": 1.7041198501872659, "no_caption_prob": 3.5912169551011175e-05}, {"id": 150, "seek": 77200, "start": 791.0, "end": 800.0, "text": " And in general, I think it's a very good idea to start with low hanging fruit, too, because you just clear out all these things and suddenly you're like, OK,", "tokens": [50364, 400, 729, 366, 445, 2199, 1910, 6828, 13, 407, 291, 500, 380, 362, 281, 652, 552, 4994, 13, 50664, 50664, 407, 439, 291, 434, 884, 307, 445, 2684, 3089, 13, 509, 434, 406, 5127, 604, 27520, 412, 439, 3993, 5141, 264, 2445, 13, 50964, 50964, 400, 300, 307, 588, 1858, 1895, 15104, 293, 588, 1858, 9845, 13, 51164, 51164, 865, 11, 558, 13, 3950, 366, 411, 264, 2295, 8345, 6773, 10641, 13, 51314, 51314, 400, 294, 2674, 11, 286, 519, 309, 311, 257, 588, 665, 1558, 281, 722, 365, 2295, 8345, 6773, 11, 886, 11, 570, 291, 445, 1850, 484, 439, 613, 721, 293, 5800, 291, 434, 411, 11, 2264, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07466256514839505, "compression_ratio": 1.7041198501872659, "no_caption_prob": 3.5912169551011175e-05}, {"id": 151, "seek": 80000, "start": 800.0, "end": 806.0, "text": " I know this is this is an easy win. This header, I can I can think about it on its own.", "tokens": [50364, 286, 458, 341, 307, 341, 307, 364, 1858, 1942, 13, 639, 23117, 11, 286, 393, 286, 393, 519, 466, 309, 322, 1080, 1065, 13, 50664, 50664, 961, 311, 829, 309, 294, 257, 10088, 13, 400, 550, 5800, 291, 808, 646, 293, 574, 412, 264, 10088, 300, 390, 2891, 281, 483, 14853, 1789, 88, 293, 291, 393, 536, 309, 365, 544, 16992, 13, 51064, 51064, 407, 2891, 365, 729, 6322, 10641, 307, 257, 534, 665, 1081, 281, 722, 13, 51264, 51264, 865, 11, 291, 393, 360, 300, 337, 604, 6828, 11, 604, 1910, 2445, 11, 604, 5623, 2445, 11, 604, 979, 19866, 2445, 11, 36133, 2445, 11, 1340, 13, 51614, 51614, 400, 300, 311, 689, 321, 352, 646, 281, 291, 11, 281, 437, 291, 848, 466, 12686, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326203673850489, "compression_ratio": 1.8056537102473498, "no_caption_prob": 4.133422771701589e-05}, {"id": 152, "seek": 80000, "start": 806.0, "end": 814.0, "text": " Let's put it in a module. And then suddenly you come back and look at the module that was starting to get unwieldy and you can see it with more clarity.", "tokens": [50364, 286, 458, 341, 307, 341, 307, 364, 1858, 1942, 13, 639, 23117, 11, 286, 393, 286, 393, 519, 466, 309, 322, 1080, 1065, 13, 50664, 50664, 961, 311, 829, 309, 294, 257, 10088, 13, 400, 550, 5800, 291, 808, 646, 293, 574, 412, 264, 10088, 300, 390, 2891, 281, 483, 14853, 1789, 88, 293, 291, 393, 536, 309, 365, 544, 16992, 13, 51064, 51064, 407, 2891, 365, 729, 6322, 10641, 307, 257, 534, 665, 1081, 281, 722, 13, 51264, 51264, 865, 11, 291, 393, 360, 300, 337, 604, 6828, 11, 604, 1910, 2445, 11, 604, 5623, 2445, 11, 604, 979, 19866, 2445, 11, 36133, 2445, 11, 1340, 13, 51614, 51614, 400, 300, 311, 689, 321, 352, 646, 281, 291, 11, 281, 437, 291, 848, 466, 12686, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326203673850489, "compression_ratio": 1.8056537102473498, "no_caption_prob": 4.133422771701589e-05}, {"id": 153, "seek": 80000, "start": 814.0, "end": 818.0, "text": " So starting with those obvious wins is a really good place to start.", "tokens": [50364, 286, 458, 341, 307, 341, 307, 364, 1858, 1942, 13, 639, 23117, 11, 286, 393, 286, 393, 519, 466, 309, 322, 1080, 1065, 13, 50664, 50664, 961, 311, 829, 309, 294, 257, 10088, 13, 400, 550, 5800, 291, 808, 646, 293, 574, 412, 264, 10088, 300, 390, 2891, 281, 483, 14853, 1789, 88, 293, 291, 393, 536, 309, 365, 544, 16992, 13, 51064, 51064, 407, 2891, 365, 729, 6322, 10641, 307, 257, 534, 665, 1081, 281, 722, 13, 51264, 51264, 865, 11, 291, 393, 360, 300, 337, 604, 6828, 11, 604, 1910, 2445, 11, 604, 5623, 2445, 11, 604, 979, 19866, 2445, 11, 36133, 2445, 11, 1340, 13, 51614, 51614, 400, 300, 311, 689, 321, 352, 646, 281, 291, 11, 281, 437, 291, 848, 466, 12686, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326203673850489, "compression_ratio": 1.8056537102473498, "no_caption_prob": 4.133422771701589e-05}, {"id": 154, "seek": 80000, "start": 818.0, "end": 825.0, "text": " Yeah, you can do that for any functions, any view function, any update function, any decoder function, helper function, anything.", "tokens": [50364, 286, 458, 341, 307, 341, 307, 364, 1858, 1942, 13, 639, 23117, 11, 286, 393, 286, 393, 519, 466, 309, 322, 1080, 1065, 13, 50664, 50664, 961, 311, 829, 309, 294, 257, 10088, 13, 400, 550, 5800, 291, 808, 646, 293, 574, 412, 264, 10088, 300, 390, 2891, 281, 483, 14853, 1789, 88, 293, 291, 393, 536, 309, 365, 544, 16992, 13, 51064, 51064, 407, 2891, 365, 729, 6322, 10641, 307, 257, 534, 665, 1081, 281, 722, 13, 51264, 51264, 865, 11, 291, 393, 360, 300, 337, 604, 6828, 11, 604, 1910, 2445, 11, 604, 5623, 2445, 11, 604, 979, 19866, 2445, 11, 36133, 2445, 11, 1340, 13, 51614, 51614, 400, 300, 311, 689, 321, 352, 646, 281, 291, 11, 281, 437, 291, 848, 466, 12686, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326203673850489, "compression_ratio": 1.8056537102473498, "no_caption_prob": 4.133422771701589e-05}, {"id": 155, "seek": 80000, "start": 825.0, "end": 829.0, "text": " And that's where we go back to you, to what you said about composition.", "tokens": [50364, 286, 458, 341, 307, 341, 307, 364, 1858, 1942, 13, 639, 23117, 11, 286, 393, 286, 393, 519, 466, 309, 322, 1080, 1065, 13, 50664, 50664, 961, 311, 829, 309, 294, 257, 10088, 13, 400, 550, 5800, 291, 808, 646, 293, 574, 412, 264, 10088, 300, 390, 2891, 281, 483, 14853, 1789, 88, 293, 291, 393, 536, 309, 365, 544, 16992, 13, 51064, 51064, 407, 2891, 365, 729, 6322, 10641, 307, 257, 534, 665, 1081, 281, 722, 13, 51264, 51264, 865, 11, 291, 393, 360, 300, 337, 604, 6828, 11, 604, 1910, 2445, 11, 604, 5623, 2445, 11, 604, 979, 19866, 2445, 11, 36133, 2445, 11, 1340, 13, 51614, 51614, 400, 300, 311, 689, 321, 352, 646, 281, 291, 11, 281, 437, 291, 848, 466, 12686, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326203673850489, "compression_ratio": 1.8056537102473498, "no_caption_prob": 4.133422771701589e-05}, {"id": 156, "seek": 82900, "start": 829.0, "end": 839.0, "text": " Composing functions is pretty easy, but composing components is surprisingly because of the name is complicated.", "tokens": [50364, 6620, 6110, 6828, 307, 1238, 1858, 11, 457, 715, 6110, 6677, 307, 17600, 570, 295, 264, 1315, 307, 6179, 13, 50864, 50864, 865, 11, 558, 13, 41184, 6677, 12686, 13, 51164, 51164, 467, 311, 257, 4525, 906, 13, 467, 311, 257, 665, 10601, 683, 1964, 13, 51314, 51314, 2492, 11, 808, 11, 808, 13, 865, 11, 572, 11, 300, 311, 406, 516, 281, 312, 1075, 406, 516, 281, 584, 300, 797, 11, 286, 519, 13, 51614, 51614, 865, 13, 2754, 6081, 281, 360, 309, 813, 309, 307, 281, 584, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16104998337595086, "compression_ratio": 1.6911764705882353, "no_caption_prob": 8.749643166083843e-05}, {"id": 157, "seek": 82900, "start": 839.0, "end": 845.0, "text": " Yeah, right. Complex components composition.", "tokens": [50364, 6620, 6110, 6828, 307, 1238, 1858, 11, 457, 715, 6110, 6677, 307, 17600, 570, 295, 264, 1315, 307, 6179, 13, 50864, 50864, 865, 11, 558, 13, 41184, 6677, 12686, 13, 51164, 51164, 467, 311, 257, 4525, 906, 13, 467, 311, 257, 665, 10601, 683, 1964, 13, 51314, 51314, 2492, 11, 808, 11, 808, 13, 865, 11, 572, 11, 300, 311, 406, 516, 281, 312, 1075, 406, 516, 281, 584, 300, 797, 11, 286, 519, 13, 51614, 51614, 865, 13, 2754, 6081, 281, 360, 309, 813, 309, 307, 281, 584, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16104998337595086, "compression_ratio": 1.6911764705882353, "no_caption_prob": 8.749643166083843e-05}, {"id": 158, "seek": 82900, "start": 845.0, "end": 848.0, "text": " It's a mouthful. It's a good tongue twister.", "tokens": [50364, 6620, 6110, 6828, 307, 1238, 1858, 11, 457, 715, 6110, 6677, 307, 17600, 570, 295, 264, 1315, 307, 6179, 13, 50864, 50864, 865, 11, 558, 13, 41184, 6677, 12686, 13, 51164, 51164, 467, 311, 257, 4525, 906, 13, 467, 311, 257, 665, 10601, 683, 1964, 13, 51314, 51314, 2492, 11, 808, 11, 808, 13, 865, 11, 572, 11, 300, 311, 406, 516, 281, 312, 1075, 406, 516, 281, 584, 300, 797, 11, 286, 519, 13, 51614, 51614, 865, 13, 2754, 6081, 281, 360, 309, 813, 309, 307, 281, 584, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16104998337595086, "compression_ratio": 1.6911764705882353, "no_caption_prob": 8.749643166083843e-05}, {"id": 159, "seek": 82900, "start": 848.0, "end": 854.0, "text": " Come, come, come. Yeah, no, that's not going to be able not going to say that again, I think.", "tokens": [50364, 6620, 6110, 6828, 307, 1238, 1858, 11, 457, 715, 6110, 6677, 307, 17600, 570, 295, 264, 1315, 307, 6179, 13, 50864, 50864, 865, 11, 558, 13, 41184, 6677, 12686, 13, 51164, 51164, 467, 311, 257, 4525, 906, 13, 467, 311, 257, 665, 10601, 683, 1964, 13, 51314, 51314, 2492, 11, 808, 11, 808, 13, 865, 11, 572, 11, 300, 311, 406, 516, 281, 312, 1075, 406, 516, 281, 584, 300, 797, 11, 286, 519, 13, 51614, 51614, 865, 13, 2754, 6081, 281, 360, 309, 813, 309, 307, 281, 584, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16104998337595086, "compression_ratio": 1.6911764705882353, "no_caption_prob": 8.749643166083843e-05}, {"id": 160, "seek": 82900, "start": 854.0, "end": 857.0, "text": " Yeah. Even harder to do it than it is to say it.", "tokens": [50364, 6620, 6110, 6828, 307, 1238, 1858, 11, 457, 715, 6110, 6677, 307, 17600, 570, 295, 264, 1315, 307, 6179, 13, 50864, 50864, 865, 11, 558, 13, 41184, 6677, 12686, 13, 51164, 51164, 467, 311, 257, 4525, 906, 13, 467, 311, 257, 665, 10601, 683, 1964, 13, 51314, 51314, 2492, 11, 808, 11, 808, 13, 865, 11, 572, 11, 300, 311, 406, 516, 281, 312, 1075, 406, 516, 281, 584, 300, 797, 11, 286, 519, 13, 51614, 51614, 865, 13, 2754, 6081, 281, 360, 309, 813, 309, 307, 281, 584, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16104998337595086, "compression_ratio": 1.6911764705882353, "no_caption_prob": 8.749643166083843e-05}, {"id": 161, "seek": 85700, "start": 857.0, "end": 862.0, "text": " And I think the next step is then to to move things into a new module.", "tokens": [50364, 400, 286, 519, 264, 958, 1823, 307, 550, 281, 281, 1286, 721, 666, 257, 777, 10088, 13, 50614, 50614, 1018, 321, 848, 365, 264, 993, 295, 3991, 11, 291, 362, 746, 300, 11215, 365, 472, 3410, 13, 50814, 50814, 10475, 300, 281, 257, 4994, 3991, 300, 18722, 300, 472, 3410, 11, 300, 472, 6357, 13, 51064, 51064, 400, 562, 291, 434, 6260, 365, 264, 9482, 365, 365, 1910, 293, 439, 300, 11, 300, 307, 437, 561, 2673, 818, 257, 6542, 13, 51514, 51514, 400, 2171, 321, 818, 300, 257, 2316, 1910, 5623, 1376, 31023, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10795076928957544, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.299615779425949e-05}, {"id": 162, "seek": 85700, "start": 862.0, "end": 866.0, "text": " As we said with the life of file, you have something that deals with one concept.", "tokens": [50364, 400, 286, 519, 264, 958, 1823, 307, 550, 281, 281, 1286, 721, 666, 257, 777, 10088, 13, 50614, 50614, 1018, 321, 848, 365, 264, 993, 295, 3991, 11, 291, 362, 746, 300, 11215, 365, 472, 3410, 13, 50814, 50814, 10475, 300, 281, 257, 4994, 3991, 300, 18722, 300, 472, 3410, 11, 300, 472, 6357, 13, 51064, 51064, 400, 562, 291, 434, 6260, 365, 264, 9482, 365, 365, 1910, 293, 439, 300, 11, 300, 307, 437, 561, 2673, 818, 257, 6542, 13, 51514, 51514, 400, 2171, 321, 818, 300, 257, 2316, 1910, 5623, 1376, 31023, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10795076928957544, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.299615779425949e-05}, {"id": 163, "seek": 85700, "start": 866.0, "end": 871.0, "text": " Move that to a separate file that handles that one concept, that one responsibility.", "tokens": [50364, 400, 286, 519, 264, 958, 1823, 307, 550, 281, 281, 1286, 721, 666, 257, 777, 10088, 13, 50614, 50614, 1018, 321, 848, 365, 264, 993, 295, 3991, 11, 291, 362, 746, 300, 11215, 365, 472, 3410, 13, 50814, 50814, 10475, 300, 281, 257, 4994, 3991, 300, 18722, 300, 472, 3410, 11, 300, 472, 6357, 13, 51064, 51064, 400, 562, 291, 434, 6260, 365, 264, 9482, 365, 365, 1910, 293, 439, 300, 11, 300, 307, 437, 561, 2673, 818, 257, 6542, 13, 51514, 51514, 400, 2171, 321, 818, 300, 257, 2316, 1910, 5623, 1376, 31023, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10795076928957544, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.299615779425949e-05}, {"id": 164, "seek": 85700, "start": 871.0, "end": 880.0, "text": " And when you're dealing with the architecture with with view and all that, that is what people usually call a component.", "tokens": [50364, 400, 286, 519, 264, 958, 1823, 307, 550, 281, 281, 1286, 721, 666, 257, 777, 10088, 13, 50614, 50614, 1018, 321, 848, 365, 264, 993, 295, 3991, 11, 291, 362, 746, 300, 11215, 365, 472, 3410, 13, 50814, 50814, 10475, 300, 281, 257, 4994, 3991, 300, 18722, 300, 472, 3410, 11, 300, 472, 6357, 13, 51064, 51064, 400, 562, 291, 434, 6260, 365, 264, 9482, 365, 365, 1910, 293, 439, 300, 11, 300, 307, 437, 561, 2673, 818, 257, 6542, 13, 51514, 51514, 400, 2171, 321, 818, 300, 257, 2316, 1910, 5623, 1376, 31023, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10795076928957544, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.299615779425949e-05}, {"id": 165, "seek": 85700, "start": 880.0, "end": 884.0, "text": " And sometimes we call that a model view update triplets.", "tokens": [50364, 400, 286, 519, 264, 958, 1823, 307, 550, 281, 281, 1286, 721, 666, 257, 777, 10088, 13, 50614, 50614, 1018, 321, 848, 365, 264, 993, 295, 3991, 11, 291, 362, 746, 300, 11215, 365, 472, 3410, 13, 50814, 50814, 10475, 300, 281, 257, 4994, 3991, 300, 18722, 300, 472, 3410, 11, 300, 472, 6357, 13, 51064, 51064, 400, 562, 291, 434, 6260, 365, 264, 9482, 365, 365, 1910, 293, 439, 300, 11, 300, 307, 437, 561, 2673, 818, 257, 6542, 13, 51514, 51514, 400, 2171, 321, 818, 300, 257, 2316, 1910, 5623, 1376, 31023, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10795076928957544, "compression_ratio": 1.7659574468085106, "no_caption_prob": 6.299615779425949e-05}, {"id": 166, "seek": 88400, "start": 884.0, "end": 891.0, "text": " And this is where things become a bit harder because often you will need to create a new message type.", "tokens": [50364, 400, 341, 307, 689, 721, 1813, 257, 857, 6081, 570, 2049, 291, 486, 643, 281, 1884, 257, 777, 3636, 2010, 13, 50714, 50714, 865, 13, 400, 550, 291, 643, 281, 2139, 764, 17995, 5893, 4471, 281, 3318, 729, 7897, 666, 264, 3801, 3036, 420, 35925, 729, 7897, 13, 51214, 51214, 9809, 5498, 309, 264, 2924, 385, 577, 281, 3636, 5102, 281, 1320, 294, 257, 2445, 337, 4084, 264, 3636, 293, 550, 35925, 729, 1214, 365, 365, 21882, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.053394044317850255, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828841676702723e-05}, {"id": 167, "seek": 88400, "start": 891.0, "end": 901.0, "text": " Yeah. And then you need to either use HTML dot map to fit those messages into the bigger picture or compose those messages.", "tokens": [50364, 400, 341, 307, 689, 721, 1813, 257, 857, 6081, 570, 2049, 291, 486, 643, 281, 1884, 257, 777, 3636, 2010, 13, 50714, 50714, 865, 13, 400, 550, 291, 643, 281, 2139, 764, 17995, 5893, 4471, 281, 3318, 729, 7897, 666, 264, 3801, 3036, 420, 35925, 729, 7897, 13, 51214, 51214, 9809, 5498, 309, 264, 2924, 385, 577, 281, 3636, 5102, 281, 1320, 294, 257, 2445, 337, 4084, 264, 3636, 293, 550, 35925, 729, 1214, 365, 365, 21882, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.053394044317850255, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828841676702723e-05}, {"id": 168, "seek": 88400, "start": 901.0, "end": 910.0, "text": " Richard calls it the teach me how to message pattern to pass in a function for creating the message and then compose those together with with pipes.", "tokens": [50364, 400, 341, 307, 689, 721, 1813, 257, 857, 6081, 570, 2049, 291, 486, 643, 281, 1884, 257, 777, 3636, 2010, 13, 50714, 50714, 865, 13, 400, 550, 291, 643, 281, 2139, 764, 17995, 5893, 4471, 281, 3318, 729, 7897, 666, 264, 3801, 3036, 420, 35925, 729, 7897, 13, 51214, 51214, 9809, 5498, 309, 264, 2924, 385, 577, 281, 3636, 5102, 281, 1320, 294, 257, 2445, 337, 4084, 264, 3636, 293, 550, 35925, 729, 1214, 365, 365, 21882, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.053394044317850255, "compression_ratio": 1.7361111111111112, "no_caption_prob": 5.828841676702723e-05}, {"id": 169, "seek": 91000, "start": 910.0, "end": 919.0, "text": " Yeah. This one simpler alternative is you reuse the same kind of message as main has or the parent has because of an import cycle.", "tokens": [50364, 865, 13, 639, 472, 18587, 8535, 307, 291, 26225, 264, 912, 733, 295, 3636, 382, 2135, 575, 420, 264, 2596, 575, 570, 295, 364, 974, 6586, 13, 50814, 50814, 509, 576, 643, 281, 1286, 300, 281, 257, 3636, 10088, 13, 50964, 50964, 400, 300, 311, 689, 561, 722, 30348, 1203, 538, 10088, 1910, 293, 5623, 13, 51164, 51164, 400, 300, 6883, 11221, 294, 472, 636, 11, 457, 1391, 406, 294, 264, 558, 636, 13, 51414, 51414, 1079, 13, 1779, 13, 407, 718, 311, 751, 466, 300, 13, 407, 286, 718, 311, 751, 466, 264, 4965, 12939, 412, 862, 510, 257, 707, 857, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11153239847343659, "compression_ratio": 1.6796875, "no_caption_prob": 6.240869424800621e-06}, {"id": 170, "seek": 91000, "start": 919.0, "end": 922.0, "text": " You would need to move that to a message module.", "tokens": [50364, 865, 13, 639, 472, 18587, 8535, 307, 291, 26225, 264, 912, 733, 295, 3636, 382, 2135, 575, 420, 264, 2596, 575, 570, 295, 364, 974, 6586, 13, 50814, 50814, 509, 576, 643, 281, 1286, 300, 281, 257, 3636, 10088, 13, 50964, 50964, 400, 300, 311, 689, 561, 722, 30348, 1203, 538, 10088, 1910, 293, 5623, 13, 51164, 51164, 400, 300, 6883, 11221, 294, 472, 636, 11, 457, 1391, 406, 294, 264, 558, 636, 13, 51414, 51414, 1079, 13, 1779, 13, 407, 718, 311, 751, 466, 300, 13, 407, 286, 718, 311, 751, 466, 264, 4965, 12939, 412, 862, 510, 257, 707, 857, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11153239847343659, "compression_ratio": 1.6796875, "no_caption_prob": 6.240869424800621e-06}, {"id": 171, "seek": 91000, "start": 922.0, "end": 926.0, "text": " And that's where people start splitting everything by module view and update.", "tokens": [50364, 865, 13, 639, 472, 18587, 8535, 307, 291, 26225, 264, 912, 733, 295, 3636, 382, 2135, 575, 420, 264, 2596, 575, 570, 295, 364, 974, 6586, 13, 50814, 50814, 509, 576, 643, 281, 1286, 300, 281, 257, 3636, 10088, 13, 50964, 50964, 400, 300, 311, 689, 561, 722, 30348, 1203, 538, 10088, 1910, 293, 5623, 13, 51164, 51164, 400, 300, 6883, 11221, 294, 472, 636, 11, 457, 1391, 406, 294, 264, 558, 636, 13, 51414, 51414, 1079, 13, 1779, 13, 407, 718, 311, 751, 466, 300, 13, 407, 286, 718, 311, 751, 466, 264, 4965, 12939, 412, 862, 510, 257, 707, 857, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11153239847343659, "compression_ratio": 1.6796875, "no_caption_prob": 6.240869424800621e-06}, {"id": 172, "seek": 91000, "start": 926.0, "end": 931.0, "text": " And that simplifies in one way, but probably not in the right way.", "tokens": [50364, 865, 13, 639, 472, 18587, 8535, 307, 291, 26225, 264, 912, 733, 295, 3636, 382, 2135, 575, 420, 264, 2596, 575, 570, 295, 364, 974, 6586, 13, 50814, 50814, 509, 576, 643, 281, 1286, 300, 281, 257, 3636, 10088, 13, 50964, 50964, 400, 300, 311, 689, 561, 722, 30348, 1203, 538, 10088, 1910, 293, 5623, 13, 51164, 51164, 400, 300, 6883, 11221, 294, 472, 636, 11, 457, 1391, 406, 294, 264, 558, 636, 13, 51414, 51414, 1079, 13, 1779, 13, 407, 718, 311, 751, 466, 300, 13, 407, 286, 718, 311, 751, 466, 264, 4965, 12939, 412, 862, 510, 257, 707, 857, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11153239847343659, "compression_ratio": 1.6796875, "no_caption_prob": 6.240869424800621e-06}, {"id": 173, "seek": 91000, "start": 931.0, "end": 939.0, "text": " Yes. Right. So let's talk about that. So I let's talk about the core mechanics at play here a little bit.", "tokens": [50364, 865, 13, 639, 472, 18587, 8535, 307, 291, 26225, 264, 912, 733, 295, 3636, 382, 2135, 575, 420, 264, 2596, 575, 570, 295, 364, 974, 6586, 13, 50814, 50814, 509, 576, 643, 281, 1286, 300, 281, 257, 3636, 10088, 13, 50964, 50964, 400, 300, 311, 689, 561, 722, 30348, 1203, 538, 10088, 1910, 293, 5623, 13, 51164, 51164, 400, 300, 6883, 11221, 294, 472, 636, 11, 457, 1391, 406, 294, 264, 558, 636, 13, 51414, 51414, 1079, 13, 1779, 13, 407, 718, 311, 751, 466, 300, 13, 407, 286, 718, 311, 751, 466, 264, 4965, 12939, 412, 862, 510, 257, 707, 857, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11153239847343659, "compression_ratio": 1.6796875, "no_caption_prob": 6.240869424800621e-06}, {"id": 174, "seek": 93900, "start": 939.0, "end": 942.0, "text": " What are the foundational forces at play?", "tokens": [50364, 708, 366, 264, 32195, 5874, 412, 862, 30, 50514, 50514, 509, 458, 11, 411, 321, 600, 658, 527, 527, 12110, 293, 527, 27528, 302, 1434, 293, 439, 613, 819, 291, 458, 11, 437, 366, 613, 5874, 30, 50964, 50964, 400, 286, 519, 286, 519, 472, 295, 264, 2141, 5874, 597, 9809, 6686, 466, 294, 21589, 441, 11317, 307, 9432, 278, 760, 437, 746, 393, 360, 13, 51414, 51414, 407, 562, 562, 538, 7576, 291, 434, 1455, 746, 382, 4152, 382, 1944, 11, 550, 309, 311, 6081, 281, 1778, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0695459667005037, "compression_ratio": 1.6378600823045268, "no_caption_prob": 9.91450942819938e-05}, {"id": 175, "seek": 93900, "start": 942.0, "end": 951.0, "text": " You know, like we've got our our gravity and our electromagnetism and all these different you know, what are these forces?", "tokens": [50364, 708, 366, 264, 32195, 5874, 412, 862, 30, 50514, 50514, 509, 458, 11, 411, 321, 600, 658, 527, 527, 12110, 293, 527, 27528, 302, 1434, 293, 439, 613, 819, 291, 458, 11, 437, 366, 613, 5874, 30, 50964, 50964, 400, 286, 519, 286, 519, 472, 295, 264, 2141, 5874, 597, 9809, 6686, 466, 294, 21589, 441, 11317, 307, 9432, 278, 760, 437, 746, 393, 360, 13, 51414, 51414, 407, 562, 562, 538, 7576, 291, 434, 1455, 746, 382, 4152, 382, 1944, 11, 550, 309, 311, 6081, 281, 1778, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0695459667005037, "compression_ratio": 1.6378600823045268, "no_caption_prob": 9.91450942819938e-05}, {"id": 176, "seek": 93900, "start": 951.0, "end": 960.0, "text": " And I think I think one of the key forces which Richard talks about in scaling L maps is narrowing down what something can do.", "tokens": [50364, 708, 366, 264, 32195, 5874, 412, 862, 30, 50514, 50514, 509, 458, 11, 411, 321, 600, 658, 527, 527, 12110, 293, 527, 27528, 302, 1434, 293, 439, 613, 819, 291, 458, 11, 437, 366, 613, 5874, 30, 50964, 50964, 400, 286, 519, 286, 519, 472, 295, 264, 2141, 5874, 597, 9809, 6686, 466, 294, 21589, 441, 11317, 307, 9432, 278, 760, 437, 746, 393, 360, 13, 51414, 51414, 407, 562, 562, 538, 7576, 291, 434, 1455, 746, 382, 4152, 382, 1944, 11, 550, 309, 311, 6081, 281, 1778, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0695459667005037, "compression_ratio": 1.6378600823045268, "no_caption_prob": 9.91450942819938e-05}, {"id": 177, "seek": 93900, "start": 960.0, "end": 967.0, "text": " So when when by default you're making something as broad as possible, then it's harder to reason about it.", "tokens": [50364, 708, 366, 264, 32195, 5874, 412, 862, 30, 50514, 50514, 509, 458, 11, 411, 321, 600, 658, 527, 527, 12110, 293, 527, 27528, 302, 1434, 293, 439, 613, 819, 291, 458, 11, 437, 366, 613, 5874, 30, 50964, 50964, 400, 286, 519, 286, 519, 472, 295, 264, 2141, 5874, 597, 9809, 6686, 466, 294, 21589, 441, 11317, 307, 9432, 278, 760, 437, 746, 393, 360, 13, 51414, 51414, 407, 562, 562, 538, 7576, 291, 434, 1455, 746, 382, 4152, 382, 1944, 11, 550, 309, 311, 6081, 281, 1778, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0695459667005037, "compression_ratio": 1.6378600823045268, "no_caption_prob": 9.91450942819938e-05}, {"id": 178, "seek": 96700, "start": 967.0, "end": 978.0, "text": " Right. That's that's like a basic operating principle that I think is is an intuition you should listen to for guiding you towards how you how you design your own code and evolve the design.", "tokens": [50364, 1779, 13, 663, 311, 300, 311, 411, 257, 3875, 7447, 8665, 300, 286, 519, 307, 307, 364, 24002, 291, 820, 2140, 281, 337, 25061, 291, 3030, 577, 291, 577, 291, 1715, 428, 1065, 3089, 293, 16693, 264, 1715, 13, 50914, 50914, 407, 9809, 6686, 466, 498, 746, 2203, 281, 2736, 257, 5622, 11, 291, 458, 11, 420, 257, 3636, 11, 309, 2203, 281, 360, 300, 13, 51264, 51264, 400, 456, 311, 456, 311, 1825, 291, 393, 360, 281, 4871, 300, 5969, 291, 5407, 264, 11923, 295, 428, 3539, 3861, 11, 597, 558, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.050446023646089216, "compression_ratio": 1.6614173228346456, "no_caption_prob": 5.5618700571358204e-05}, {"id": 179, "seek": 96700, "start": 978.0, "end": 985.0, "text": " So Richard talks about if something needs to return a command, you know, or a message, it needs to do that.", "tokens": [50364, 1779, 13, 663, 311, 300, 311, 411, 257, 3875, 7447, 8665, 300, 286, 519, 307, 307, 364, 24002, 291, 820, 2140, 281, 337, 25061, 291, 3030, 577, 291, 577, 291, 1715, 428, 1065, 3089, 293, 16693, 264, 1715, 13, 50914, 50914, 407, 9809, 6686, 466, 498, 746, 2203, 281, 2736, 257, 5622, 11, 291, 458, 11, 420, 257, 3636, 11, 309, 2203, 281, 360, 300, 13, 51264, 51264, 400, 456, 311, 456, 311, 1825, 291, 393, 360, 281, 4871, 300, 5969, 291, 5407, 264, 11923, 295, 428, 3539, 3861, 11, 597, 558, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.050446023646089216, "compression_ratio": 1.6614173228346456, "no_caption_prob": 5.5618700571358204e-05}, {"id": 180, "seek": 96700, "start": 985.0, "end": 994.0, "text": " And there's there's nothing you can do to prevent that unless you reduce the scope of your actual application, which right.", "tokens": [50364, 1779, 13, 663, 311, 300, 311, 411, 257, 3875, 7447, 8665, 300, 286, 519, 307, 307, 364, 24002, 291, 820, 2140, 281, 337, 25061, 291, 3030, 577, 291, 577, 291, 1715, 428, 1065, 3089, 293, 16693, 264, 1715, 13, 50914, 50914, 407, 9809, 6686, 466, 498, 746, 2203, 281, 2736, 257, 5622, 11, 291, 458, 11, 420, 257, 3636, 11, 309, 2203, 281, 360, 300, 13, 51264, 51264, 400, 456, 311, 456, 311, 1825, 291, 393, 360, 281, 4871, 300, 5969, 291, 5407, 264, 11923, 295, 428, 3539, 3861, 11, 597, 558, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.050446023646089216, "compression_ratio": 1.6614173228346456, "no_caption_prob": 5.5618700571358204e-05}, {"id": 181, "seek": 99400, "start": 994.0, "end": 997.0, "text": " Now, sometimes that does happen. I wrote an article.", "tokens": [50364, 823, 11, 2171, 300, 775, 1051, 13, 286, 4114, 364, 7222, 13, 50514, 50514, 286, 603, 2073, 264, 2113, 337, 341, 1333, 295, 1715, 1399, 300, 286, 1437, 807, 337, 4295, 1249, 43, 412, 472, 935, 562, 562, 286, 1409, 281, 1322, 4471, 281, 666, 257, 9450, 992, 13, 51014, 51014, 400, 264, 3430, 390, 300, 562, 291, 562, 291, 4471, 732, 9450, 6352, 1214, 13, 51264, 51264, 407, 498, 291, 434, 18182, 732, 819, 7909, 11, 291, 393, 767, 291, 458, 11, 321, 2825, 466, 341, 257, 707, 294, 527, 4295, 1249, 43, 3500, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09115619659423828, "compression_ratio": 1.6586345381526104, "no_caption_prob": 2.8854752599727362e-05}, {"id": 182, "seek": 99400, "start": 997.0, "end": 1007.0, "text": " I'll share the link for this sort of design process that I went through for graph QL at one point when when I started to build map to into a selection set.", "tokens": [50364, 823, 11, 2171, 300, 775, 1051, 13, 286, 4114, 364, 7222, 13, 50514, 50514, 286, 603, 2073, 264, 2113, 337, 341, 1333, 295, 1715, 1399, 300, 286, 1437, 807, 337, 4295, 1249, 43, 412, 472, 935, 562, 562, 286, 1409, 281, 1322, 4471, 281, 666, 257, 9450, 992, 13, 51014, 51014, 400, 264, 3430, 390, 300, 562, 291, 562, 291, 4471, 732, 9450, 6352, 1214, 13, 51264, 51264, 407, 498, 291, 434, 18182, 732, 819, 7909, 11, 291, 393, 767, 291, 458, 11, 321, 2825, 466, 341, 257, 707, 294, 527, 4295, 1249, 43, 3500, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09115619659423828, "compression_ratio": 1.6586345381526104, "no_caption_prob": 2.8854752599727362e-05}, {"id": 183, "seek": 99400, "start": 1007.0, "end": 1012.0, "text": " And the challenge was that when you when you map two selection sets together.", "tokens": [50364, 823, 11, 2171, 300, 775, 1051, 13, 286, 4114, 364, 7222, 13, 50514, 50514, 286, 603, 2073, 264, 2113, 337, 341, 1333, 295, 1715, 1399, 300, 286, 1437, 807, 337, 4295, 1249, 43, 412, 472, 935, 562, 562, 286, 1409, 281, 1322, 4471, 281, 666, 257, 9450, 992, 13, 51014, 51014, 400, 264, 3430, 390, 300, 562, 291, 562, 291, 4471, 732, 9450, 6352, 1214, 13, 51264, 51264, 407, 498, 291, 434, 18182, 732, 819, 7909, 11, 291, 393, 767, 291, 458, 11, 321, 2825, 466, 341, 257, 707, 294, 527, 4295, 1249, 43, 3500, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09115619659423828, "compression_ratio": 1.6586345381526104, "no_caption_prob": 2.8854752599727362e-05}, {"id": 184, "seek": 99400, "start": 1012.0, "end": 1020.0, "text": " So if you're selecting two different fields, you can actually you know, we talked about this a little in our graph QL episode.", "tokens": [50364, 823, 11, 2171, 300, 775, 1051, 13, 286, 4114, 364, 7222, 13, 50514, 50514, 286, 603, 2073, 264, 2113, 337, 341, 1333, 295, 1715, 1399, 300, 286, 1437, 807, 337, 4295, 1249, 43, 412, 472, 935, 562, 562, 286, 1409, 281, 1322, 4471, 281, 666, 257, 9450, 992, 13, 51014, 51014, 400, 264, 3430, 390, 300, 562, 291, 562, 291, 4471, 732, 9450, 6352, 1214, 13, 51264, 51264, 407, 498, 291, 434, 18182, 732, 819, 7909, 11, 291, 393, 767, 291, 458, 11, 321, 2825, 466, 341, 257, 707, 294, 527, 4295, 1249, 43, 3500, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09115619659423828, "compression_ratio": 1.6586345381526104, "no_caption_prob": 2.8854752599727362e-05}, {"id": 185, "seek": 102000, "start": 1020.0, "end": 1024.0, "text": " You can select two fields with the same name, but different arguments.", "tokens": [50364, 509, 393, 3048, 732, 7909, 365, 264, 912, 1315, 11, 457, 819, 12869, 13, 50564, 50564, 509, 727, 3048, 364, 36205, 300, 575, 257, 2416, 2744, 6770, 293, 472, 300, 575, 257, 1359, 2744, 6770, 13, 50864, 50864, 400, 294, 21884, 13695, 11, 729, 643, 364, 419, 4609, 281, 4871, 257, 24644, 456, 13, 51114, 51114, 400, 370, 264, 291, 458, 11, 264, 4906, 3037, 295, 2699, 76, 21884, 13695, 390, 884, 341, 3109, 689, 291, 1322, 493, 257, 9450, 992, 11, 291, 584, 439, 264, 7909, 293, 309, 1333, 295, 2203, 552, 439, 412, 1564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07238395143263411, "compression_ratio": 1.6872427983539096, "no_caption_prob": 9.16926292120479e-05}, {"id": 186, "seek": 102000, "start": 1024.0, "end": 1030.0, "text": " You could select an avatar that has a large size argument and one that has a small size argument.", "tokens": [50364, 509, 393, 3048, 732, 7909, 365, 264, 912, 1315, 11, 457, 819, 12869, 13, 50564, 50564, 509, 727, 3048, 364, 36205, 300, 575, 257, 2416, 2744, 6770, 293, 472, 300, 575, 257, 1359, 2744, 6770, 13, 50864, 50864, 400, 294, 21884, 13695, 11, 729, 643, 364, 419, 4609, 281, 4871, 257, 24644, 456, 13, 51114, 51114, 400, 370, 264, 291, 458, 11, 264, 4906, 3037, 295, 2699, 76, 21884, 13695, 390, 884, 341, 3109, 689, 291, 1322, 493, 257, 9450, 992, 11, 291, 584, 439, 264, 7909, 293, 309, 1333, 295, 2203, 552, 439, 412, 1564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07238395143263411, "compression_ratio": 1.6872427983539096, "no_caption_prob": 9.16926292120479e-05}, {"id": 187, "seek": 102000, "start": 1030.0, "end": 1035.0, "text": " And in GraphQL, those need an alias to prevent a collision there.", "tokens": [50364, 509, 393, 3048, 732, 7909, 365, 264, 912, 1315, 11, 457, 819, 12869, 13, 50564, 50564, 509, 727, 3048, 364, 36205, 300, 575, 257, 2416, 2744, 6770, 293, 472, 300, 575, 257, 1359, 2744, 6770, 13, 50864, 50864, 400, 294, 21884, 13695, 11, 729, 643, 364, 419, 4609, 281, 4871, 257, 24644, 456, 13, 51114, 51114, 400, 370, 264, 291, 458, 11, 264, 4906, 3037, 295, 2699, 76, 21884, 13695, 390, 884, 341, 3109, 689, 291, 1322, 493, 257, 9450, 992, 11, 291, 584, 439, 264, 7909, 293, 309, 1333, 295, 2203, 552, 439, 412, 1564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07238395143263411, "compression_ratio": 1.6872427983539096, "no_caption_prob": 9.16926292120479e-05}, {"id": 188, "seek": 102000, "start": 1035.0, "end": 1045.0, "text": " And so the you know, the older version of Elm GraphQL was doing this approach where you build up a selection set, you say all the fields and it sort of needs them all at once.", "tokens": [50364, 509, 393, 3048, 732, 7909, 365, 264, 912, 1315, 11, 457, 819, 12869, 13, 50564, 50564, 509, 727, 3048, 364, 36205, 300, 575, 257, 2416, 2744, 6770, 293, 472, 300, 575, 257, 1359, 2744, 6770, 13, 50864, 50864, 400, 294, 21884, 13695, 11, 729, 643, 364, 419, 4609, 281, 4871, 257, 24644, 456, 13, 51114, 51114, 400, 370, 264, 291, 458, 11, 264, 4906, 3037, 295, 2699, 76, 21884, 13695, 390, 884, 341, 3109, 689, 291, 1322, 493, 257, 9450, 992, 11, 291, 584, 439, 264, 7909, 293, 309, 1333, 295, 2203, 552, 439, 412, 1564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07238395143263411, "compression_ratio": 1.6872427983539096, "no_caption_prob": 9.16926292120479e-05}, {"id": 189, "seek": 104500, "start": 1045.0, "end": 1050.0, "text": " You can't arbitrarily add selection, add fields to a selection set.", "tokens": [50364, 509, 393, 380, 19071, 3289, 909, 9450, 11, 909, 7909, 281, 257, 9450, 992, 13, 50614, 50614, 509, 362, 281, 909, 309, 294, 472, 1081, 570, 309, 576, 550, 909, 364, 419, 4609, 281, 1184, 295, 729, 7909, 13, 50914, 50914, 583, 550, 498, 291, 3507, 746, 1646, 294, 11, 309, 1177, 380, 309, 576, 643, 341, 2857, 1785, 281, 458, 577, 281, 909, 257, 3845, 419, 4609, 13, 51314, 51314, 759, 309, 311, 5127, 36205, 472, 293, 36205, 732, 293, 550, 291, 4471, 1071, 551, 294, 456, 365, 4471, 732, 300, 1217, 575, 364, 36205, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.043846125649933766, "compression_ratio": 1.7124463519313304, "no_caption_prob": 2.977158328576479e-05}, {"id": 190, "seek": 104500, "start": 1050.0, "end": 1056.0, "text": " You have to add it in one place because it would then add an alias to each of those fields.", "tokens": [50364, 509, 393, 380, 19071, 3289, 909, 9450, 11, 909, 7909, 281, 257, 9450, 992, 13, 50614, 50614, 509, 362, 281, 909, 309, 294, 472, 1081, 570, 309, 576, 550, 909, 364, 419, 4609, 281, 1184, 295, 729, 7909, 13, 50914, 50914, 583, 550, 498, 291, 3507, 746, 1646, 294, 11, 309, 1177, 380, 309, 576, 643, 341, 2857, 1785, 281, 458, 577, 281, 909, 257, 3845, 419, 4609, 13, 51314, 51314, 759, 309, 311, 5127, 36205, 472, 293, 36205, 732, 293, 550, 291, 4471, 1071, 551, 294, 456, 365, 4471, 732, 300, 1217, 575, 364, 36205, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.043846125649933766, "compression_ratio": 1.7124463519313304, "no_caption_prob": 2.977158328576479e-05}, {"id": 191, "seek": 104500, "start": 1056.0, "end": 1064.0, "text": " But then if you throw something else in, it doesn't it would need this extra state to know how to add a unique alias.", "tokens": [50364, 509, 393, 380, 19071, 3289, 909, 9450, 11, 909, 7909, 281, 257, 9450, 992, 13, 50614, 50614, 509, 362, 281, 909, 309, 294, 472, 1081, 570, 309, 576, 550, 909, 364, 419, 4609, 281, 1184, 295, 729, 7909, 13, 50914, 50914, 583, 550, 498, 291, 3507, 746, 1646, 294, 11, 309, 1177, 380, 309, 576, 643, 341, 2857, 1785, 281, 458, 577, 281, 909, 257, 3845, 419, 4609, 13, 51314, 51314, 759, 309, 311, 5127, 36205, 472, 293, 36205, 732, 293, 550, 291, 4471, 1071, 551, 294, 456, 365, 4471, 732, 300, 1217, 575, 364, 36205, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.043846125649933766, "compression_ratio": 1.7124463519313304, "no_caption_prob": 2.977158328576479e-05}, {"id": 192, "seek": 104500, "start": 1064.0, "end": 1072.0, "text": " If it's adding avatar one and avatar two and then you map another thing in there with map two that already has an avatar.", "tokens": [50364, 509, 393, 380, 19071, 3289, 909, 9450, 11, 909, 7909, 281, 257, 9450, 992, 13, 50614, 50614, 509, 362, 281, 909, 309, 294, 472, 1081, 570, 309, 576, 550, 909, 364, 419, 4609, 281, 1184, 295, 729, 7909, 13, 50914, 50914, 583, 550, 498, 291, 3507, 746, 1646, 294, 11, 309, 1177, 380, 309, 576, 643, 341, 2857, 1785, 281, 458, 577, 281, 909, 257, 3845, 419, 4609, 13, 51314, 51314, 759, 309, 311, 5127, 36205, 472, 293, 36205, 732, 293, 550, 291, 4471, 1071, 551, 294, 456, 365, 4471, 732, 300, 1217, 575, 364, 36205, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.043846125649933766, "compression_ratio": 1.7124463519313304, "no_caption_prob": 2.977158328576479e-05}, {"id": 193, "seek": 107200, "start": 1072.0, "end": 1076.0, "text": " Now it needs to track the state of all the aliases it's used.", "tokens": [50364, 823, 309, 2203, 281, 2837, 264, 1785, 295, 439, 264, 10198, 1957, 309, 311, 1143, 13, 50564, 50564, 400, 370, 456, 311, 364, 27993, 26387, 14024, 456, 13, 50764, 50764, 400, 370, 11, 291, 458, 11, 294, 257, 37711, 11, 264, 1715, 11269, 300, 286, 632, 337, 12606, 300, 1154, 390, 300, 286, 727, 31474, 1884, 364, 419, 4609, 337, 257, 2519, 2361, 322, 439, 295, 613, 819, 721, 300, 352, 666, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06992252667744954, "compression_ratio": 1.601010101010101, "no_caption_prob": 2.078461147902999e-05}, {"id": 194, "seek": 107200, "start": 1076.0, "end": 1080.0, "text": " And so there's an inherently inherent complexity there.", "tokens": [50364, 823, 309, 2203, 281, 2837, 264, 1785, 295, 439, 264, 10198, 1957, 309, 311, 1143, 13, 50564, 50564, 400, 370, 456, 311, 364, 27993, 26387, 14024, 456, 13, 50764, 50764, 400, 370, 11, 291, 458, 11, 294, 257, 37711, 11, 264, 1715, 11269, 300, 286, 632, 337, 12606, 300, 1154, 390, 300, 286, 727, 31474, 1884, 364, 419, 4609, 337, 257, 2519, 2361, 322, 439, 295, 613, 819, 721, 300, 352, 666, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06992252667744954, "compression_ratio": 1.601010101010101, "no_caption_prob": 2.078461147902999e-05}, {"id": 195, "seek": 107200, "start": 1080.0, "end": 1095.0, "text": " And so, you know, in a nutshell, the design insight that I had for solving that problem was that I could uniquely create an alias for a field based on all of these different things that go into that.", "tokens": [50364, 823, 309, 2203, 281, 2837, 264, 1785, 295, 439, 264, 10198, 1957, 309, 311, 1143, 13, 50564, 50564, 400, 370, 456, 311, 364, 27993, 26387, 14024, 456, 13, 50764, 50764, 400, 370, 11, 291, 458, 11, 294, 257, 37711, 11, 264, 1715, 11269, 300, 286, 632, 337, 12606, 300, 1154, 390, 300, 286, 727, 31474, 1884, 364, 419, 4609, 337, 257, 2519, 2361, 322, 439, 295, 613, 819, 721, 300, 352, 666, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06992252667744954, "compression_ratio": 1.601010101010101, "no_caption_prob": 2.078461147902999e-05}, {"id": 196, "seek": 109500, "start": 1095.0, "end": 1102.0, "text": " The arguments that it sends, the name of the field, and the it also depends on the type of the field.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 197, "seek": 109500, "start": 1102.0, "end": 1104.0, "text": " So I had to use that information.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 198, "seek": 109500, "start": 1104.0, "end": 1107.0, "text": " But you take all those things together, you create a unique cache.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 199, "seek": 109500, "start": 1107.0, "end": 1109.0, "text": " And now I don't have to think about that.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 200, "seek": 109500, "start": 1109.0, "end": 1112.0, "text": " There's no opportunity for fields to collide.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 201, "seek": 109500, "start": 1112.0, "end": 1117.0, "text": " And I don't need that state in a selection set to make sure they're unique because they're unique by default.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 202, "seek": 109500, "start": 1117.0, "end": 1120.0, "text": " So that is something that happens.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 203, "seek": 109500, "start": 1120.0, "end": 1124.0, "text": " And the name of that article, I think, was how Elm guides towards simplicity.", "tokens": [50364, 440, 12869, 300, 309, 14790, 11, 264, 1315, 295, 264, 2519, 11, 293, 264, 309, 611, 5946, 322, 264, 2010, 295, 264, 2519, 13, 50714, 50714, 407, 286, 632, 281, 764, 300, 1589, 13, 50814, 50814, 583, 291, 747, 439, 729, 721, 1214, 11, 291, 1884, 257, 3845, 19459, 13, 50964, 50964, 400, 586, 286, 500, 380, 362, 281, 519, 466, 300, 13, 51064, 51064, 821, 311, 572, 2650, 337, 7909, 281, 49093, 13, 51214, 51214, 400, 286, 500, 380, 643, 300, 1785, 294, 257, 9450, 992, 281, 652, 988, 436, 434, 3845, 570, 436, 434, 3845, 538, 7576, 13, 51464, 51464, 407, 300, 307, 746, 300, 2314, 13, 51614, 51614, 400, 264, 1315, 295, 300, 7222, 11, 286, 519, 11, 390, 577, 2699, 76, 17007, 3030, 25632, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07757586285583955, "compression_ratio": 1.7750865051903115, "no_caption_prob": 3.219050631741993e-05}, {"id": 204, "seek": 112400, "start": 1124.0, "end": 1134.0, "text": " So that actually is something that can happen, that you realize a simpler way to design something at a sort of architecture level, like at the core of the problem.", "tokens": [50364, 407, 300, 767, 307, 746, 300, 393, 1051, 11, 300, 291, 4325, 257, 18587, 636, 281, 1715, 746, 412, 257, 1333, 295, 9482, 1496, 11, 411, 412, 264, 4965, 295, 264, 1154, 13, 50864, 50864, 1610, 2171, 291, 34595, 264, 636, 300, 291, 434, 2390, 257, 4111, 570, 291, 4325, 456, 311, 364, 26387, 14024, 300, 17007, 291, 3030, 257, 819, 3109, 300, 1062, 312, 445, 382, 4420, 337, 5022, 457, 3571, 281, 1322, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.04666393919836117, "compression_ratio": 1.6946902654867257, "no_caption_prob": 5.6496181059628725e-05}, {"id": 205, "seek": 112400, "start": 1134.0, "end": 1145.0, "text": " Or sometimes you rethink the way that you're building a feature because you realize there's an inherent complexity that guides you towards a different approach that might be just as useful for users but easier to build.", "tokens": [50364, 407, 300, 767, 307, 746, 300, 393, 1051, 11, 300, 291, 4325, 257, 18587, 636, 281, 1715, 746, 412, 257, 1333, 295, 9482, 1496, 11, 411, 412, 264, 4965, 295, 264, 1154, 13, 50864, 50864, 1610, 2171, 291, 34595, 264, 636, 300, 291, 434, 2390, 257, 4111, 570, 291, 4325, 456, 311, 364, 26387, 14024, 300, 17007, 291, 3030, 257, 819, 3109, 300, 1062, 312, 445, 382, 4420, 337, 5022, 457, 3571, 281, 1322, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.04666393919836117, "compression_ratio": 1.6946902654867257, "no_caption_prob": 5.6496181059628725e-05}, {"id": 206, "seek": 114500, "start": 1145.0, "end": 1155.0, "text": " So I don't want to actually discount that because sometimes that's a perfectly valid thing to do, to make something simpler, and Elm reveals the inherent complexity.", "tokens": [50364, 407, 286, 500, 380, 528, 281, 767, 11635, 300, 570, 2171, 300, 311, 257, 6239, 7363, 551, 281, 360, 11, 281, 652, 746, 18587, 11, 293, 2699, 76, 20893, 264, 26387, 14024, 13, 50864, 50864, 2699, 76, 1943, 380, 257, 8753, 11632, 300, 311, 516, 281, 652, 6260, 365, 14024, 1858, 11, 457, 309, 20893, 428, 14024, 281, 291, 13, 51214, 51214, 400, 300, 311, 264, 1347, 295, 309, 307, 291, 393, 536, 437, 311, 3997, 293, 291, 393, 536, 437, 311, 406, 13, 51514, 51514, 407, 439, 300, 848, 11, 498, 291, 393, 652, 746, 27993, 18587, 11, 869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0687009266444615, "compression_ratio": 1.8516949152542372, "no_caption_prob": 9.609514381736517e-05}, {"id": 207, "seek": 114500, "start": 1155.0, "end": 1162.0, "text": " Elm isn't a silver bullet that's going to make dealing with complexity easy, but it reveals your complexity to you.", "tokens": [50364, 407, 286, 500, 380, 528, 281, 767, 11635, 300, 570, 2171, 300, 311, 257, 6239, 7363, 551, 281, 360, 11, 281, 652, 746, 18587, 11, 293, 2699, 76, 20893, 264, 26387, 14024, 13, 50864, 50864, 2699, 76, 1943, 380, 257, 8753, 11632, 300, 311, 516, 281, 652, 6260, 365, 14024, 1858, 11, 457, 309, 20893, 428, 14024, 281, 291, 13, 51214, 51214, 400, 300, 311, 264, 1347, 295, 309, 307, 291, 393, 536, 437, 311, 3997, 293, 291, 393, 536, 437, 311, 406, 13, 51514, 51514, 407, 439, 300, 848, 11, 498, 291, 393, 652, 746, 27993, 18587, 11, 869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0687009266444615, "compression_ratio": 1.8516949152542372, "no_caption_prob": 9.609514381736517e-05}, {"id": 208, "seek": 114500, "start": 1162.0, "end": 1168.0, "text": " And that's the power of it is you can see what's complex and you can see what's not.", "tokens": [50364, 407, 286, 500, 380, 528, 281, 767, 11635, 300, 570, 2171, 300, 311, 257, 6239, 7363, 551, 281, 360, 11, 281, 652, 746, 18587, 11, 293, 2699, 76, 20893, 264, 26387, 14024, 13, 50864, 50864, 2699, 76, 1943, 380, 257, 8753, 11632, 300, 311, 516, 281, 652, 6260, 365, 14024, 1858, 11, 457, 309, 20893, 428, 14024, 281, 291, 13, 51214, 51214, 400, 300, 311, 264, 1347, 295, 309, 307, 291, 393, 536, 437, 311, 3997, 293, 291, 393, 536, 437, 311, 406, 13, 51514, 51514, 407, 439, 300, 848, 11, 498, 291, 393, 652, 746, 27993, 18587, 11, 869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0687009266444615, "compression_ratio": 1.8516949152542372, "no_caption_prob": 9.609514381736517e-05}, {"id": 209, "seek": 114500, "start": 1168.0, "end": 1172.0, "text": " So all that said, if you can make something inherently simpler, great.", "tokens": [50364, 407, 286, 500, 380, 528, 281, 767, 11635, 300, 570, 2171, 300, 311, 257, 6239, 7363, 551, 281, 360, 11, 281, 652, 746, 18587, 11, 293, 2699, 76, 20893, 264, 26387, 14024, 13, 50864, 50864, 2699, 76, 1943, 380, 257, 8753, 11632, 300, 311, 516, 281, 652, 6260, 365, 14024, 1858, 11, 457, 309, 20893, 428, 14024, 281, 291, 13, 51214, 51214, 400, 300, 311, 264, 1347, 295, 309, 307, 291, 393, 536, 437, 311, 3997, 293, 291, 393, 536, 437, 311, 406, 13, 51514, 51514, 407, 439, 300, 848, 11, 498, 291, 393, 652, 746, 27993, 18587, 11, 869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0687009266444615, "compression_ratio": 1.8516949152542372, "no_caption_prob": 9.609514381736517e-05}, {"id": 210, "seek": 117200, "start": 1172.0, "end": 1189.0, "text": " But assuming that you're not going to change the actual problem at hand, if something is, you know, needing to communicate some global state, you click this one, you know, button and then it changes something globally, it closes a modal or whatever it may be.", "tokens": [50364, 583, 11926, 300, 291, 434, 406, 516, 281, 1319, 264, 3539, 1154, 412, 1011, 11, 498, 746, 307, 11, 291, 458, 11, 18006, 281, 7890, 512, 4338, 1785, 11, 291, 2052, 341, 472, 11, 291, 458, 11, 2960, 293, 550, 309, 2962, 746, 18958, 11, 309, 24157, 257, 39745, 420, 2035, 309, 815, 312, 13, 51214, 51214, 663, 311, 364, 26387, 14024, 300, 291, 643, 281, 362, 13, 51364, 51364, 583, 498, 291, 500, 380, 362, 300, 11, 550, 500, 380, 652, 264, 12437, 2689, 20687, 17559, 293, 1455, 439, 1944, 1589, 2435, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04833933771873007, "compression_ratio": 1.7598425196850394, "no_caption_prob": 0.00012338404485490173}, {"id": 211, "seek": 117200, "start": 1189.0, "end": 1192.0, "text": " That's an inherent complexity that you need to have.", "tokens": [50364, 583, 11926, 300, 291, 434, 406, 516, 281, 1319, 264, 3539, 1154, 412, 1011, 11, 498, 746, 307, 11, 291, 458, 11, 18006, 281, 7890, 512, 4338, 1785, 11, 291, 2052, 341, 472, 11, 291, 458, 11, 2960, 293, 550, 309, 2962, 746, 18958, 11, 309, 24157, 257, 39745, 420, 2035, 309, 815, 312, 13, 51214, 51214, 663, 311, 364, 26387, 14024, 300, 291, 643, 281, 362, 13, 51364, 51364, 583, 498, 291, 500, 380, 362, 300, 11, 550, 500, 380, 652, 264, 12437, 2689, 20687, 17559, 293, 1455, 439, 1944, 1589, 2435, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04833933771873007, "compression_ratio": 1.7598425196850394, "no_caption_prob": 0.00012338404485490173}, {"id": 212, "seek": 117200, "start": 1192.0, "end": 1201.0, "text": " But if you don't have that, then don't make the lowest common denominator communicating and making all possible information available.", "tokens": [50364, 583, 11926, 300, 291, 434, 406, 516, 281, 1319, 264, 3539, 1154, 412, 1011, 11, 498, 746, 307, 11, 291, 458, 11, 18006, 281, 7890, 512, 4338, 1785, 11, 291, 2052, 341, 472, 11, 291, 458, 11, 2960, 293, 550, 309, 2962, 746, 18958, 11, 309, 24157, 257, 39745, 420, 2035, 309, 815, 312, 13, 51214, 51214, 663, 311, 364, 26387, 14024, 300, 291, 643, 281, 362, 13, 51364, 51364, 583, 498, 291, 500, 380, 362, 300, 11, 550, 500, 380, 652, 264, 12437, 2689, 20687, 17559, 293, 1455, 439, 1944, 1589, 2435, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04833933771873007, "compression_ratio": 1.7598425196850394, "no_caption_prob": 0.00012338404485490173}, {"id": 213, "seek": 120100, "start": 1201.0, "end": 1209.0, "text": " And so pass in the minimal amount of information you can and interact back to the parent minimally as well.", "tokens": [50364, 400, 370, 1320, 294, 264, 13206, 2372, 295, 1589, 291, 393, 293, 4648, 646, 281, 264, 2596, 4464, 379, 382, 731, 13, 50764, 50764, 9809, 6686, 466, 300, 1558, 295, 1333, 295, 9432, 278, 264, 3467, 293, 264, 1802, 300, 300, 575, 562, 291, 434, 1953, 16143, 13, 51114, 51114, 286, 914, 11, 309, 311, 439, 466, 885, 1075, 281, 519, 16143, 293, 11, 291, 458, 11, 3372, 428, 25571, 2385, 322, 562, 291, 434, 1382, 281, 1223, 257, 7426, 420, 1223, 577, 281, 909, 257, 777, 4111, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.030672111818867344, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.00010070695134345442}, {"id": 214, "seek": 120100, "start": 1209.0, "end": 1216.0, "text": " Richard talks about that idea of sort of narrowing the types and the effect that that has when you're thinking locally.", "tokens": [50364, 400, 370, 1320, 294, 264, 13206, 2372, 295, 1589, 291, 393, 293, 4648, 646, 281, 264, 2596, 4464, 379, 382, 731, 13, 50764, 50764, 9809, 6686, 466, 300, 1558, 295, 1333, 295, 9432, 278, 264, 3467, 293, 264, 1802, 300, 300, 575, 562, 291, 434, 1953, 16143, 13, 51114, 51114, 286, 914, 11, 309, 311, 439, 466, 885, 1075, 281, 519, 16143, 293, 11, 291, 458, 11, 3372, 428, 25571, 2385, 322, 562, 291, 434, 1382, 281, 1223, 257, 7426, 420, 1223, 577, 281, 909, 257, 777, 4111, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.030672111818867344, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.00010070695134345442}, {"id": 215, "seek": 120100, "start": 1216.0, "end": 1226.0, "text": " I mean, it's all about being able to think locally and, you know, putting your detective hat on when you're trying to understand a bug or understand how to add a new feature.", "tokens": [50364, 400, 370, 1320, 294, 264, 13206, 2372, 295, 1589, 291, 393, 293, 4648, 646, 281, 264, 2596, 4464, 379, 382, 731, 13, 50764, 50764, 9809, 6686, 466, 300, 1558, 295, 1333, 295, 9432, 278, 264, 3467, 293, 264, 1802, 300, 300, 575, 562, 291, 434, 1953, 16143, 13, 51114, 51114, 286, 914, 11, 309, 311, 439, 466, 885, 1075, 281, 519, 16143, 293, 11, 291, 458, 11, 3372, 428, 25571, 2385, 322, 562, 291, 434, 1382, 281, 1223, 257, 7426, 420, 1223, 577, 281, 909, 257, 777, 4111, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.030672111818867344, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.00010070695134345442}, {"id": 216, "seek": 122600, "start": 1226.0, "end": 1231.0, "text": " And being able to eliminate options as irrelevant to your investigation.", "tokens": [50364, 400, 885, 1075, 281, 13819, 3956, 382, 28682, 281, 428, 9627, 13, 50614, 50614, 663, 311, 300, 311, 437, 309, 311, 439, 466, 13, 407, 300, 311, 411, 472, 295, 264, 733, 295, 4965, 12939, 295, 11470, 428, 428, 3861, 1715, 13, 51014, 51014, 286, 603, 853, 293, 13691, 437, 291, 4140, 365, 31203, 12178, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.11050749619801839, "compression_ratio": 1.5314285714285714, "no_caption_prob": 0.000112330169940833}, {"id": 217, "seek": 122600, "start": 1231.0, "end": 1239.0, "text": " That's that's what it's all about. So that's like one of the kind of core mechanics of improving your your application design.", "tokens": [50364, 400, 885, 1075, 281, 13819, 3956, 382, 28682, 281, 428, 9627, 13, 50614, 50614, 663, 311, 300, 311, 437, 309, 311, 439, 466, 13, 407, 300, 311, 411, 472, 295, 264, 733, 295, 4965, 12939, 295, 11470, 428, 428, 3861, 1715, 13, 51014, 51014, 286, 603, 853, 293, 13691, 437, 291, 4140, 365, 31203, 12178, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.11050749619801839, "compression_ratio": 1.5314285714285714, "no_caption_prob": 0.000112330169940833}, {"id": 218, "seek": 122600, "start": 1239.0, "end": 1242.0, "text": " I'll try and explicit what you meant with eliminating possibilities.", "tokens": [50364, 400, 885, 1075, 281, 13819, 3956, 382, 28682, 281, 428, 9627, 13, 50614, 50614, 663, 311, 300, 311, 437, 309, 311, 439, 466, 13, 407, 300, 311, 411, 472, 295, 264, 733, 295, 4965, 12939, 295, 11470, 428, 428, 3861, 1715, 13, 51014, 51014, 286, 603, 853, 293, 13691, 437, 291, 4140, 365, 31203, 12178, 13, 51164, 51164], "temperature": 0.0, "avg_logprob": -0.11050749619801839, "compression_ratio": 1.5314285714285714, "no_caption_prob": 0.000112330169940833}, {"id": 219, "seek": 124200, "start": 1242.0, "end": 1257.0, "text": " Like Richard gives the example of I'm looking for a bug somewhere, some HTTP request was made and it shouldn't have. I'm looking for where that could have been created so I can stop it from being created.", "tokens": [50364, 1743, 9809, 2709, 264, 1365, 295, 286, 478, 1237, 337, 257, 7426, 4079, 11, 512, 33283, 5308, 390, 1027, 293, 309, 4659, 380, 362, 13, 286, 478, 1237, 337, 689, 300, 727, 362, 668, 2942, 370, 286, 393, 1590, 309, 490, 885, 2942, 13, 51114, 51114, 400, 550, 291, 352, 807, 439, 264, 6828, 293, 291, 498, 291, 528, 264, 33283, 5308, 11, 291, 643, 746, 300, 11247, 257, 5622, 13, 51414, 51414, 407, 291, 352, 807, 439, 264, 6828, 293, 291, 915, 2306, 300, 2736, 5622, 293, 264, 2306, 300, 500, 380, 291, 393, 445, 11200, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13270843730253332, "compression_ratio": 1.8429752066115703, "no_caption_prob": 0.0001584197161719203}, {"id": 220, "seek": 124200, "start": 1257.0, "end": 1263.0, "text": " And then you go through all the functions and you if you want the HTTP request, you need something that returns a command.", "tokens": [50364, 1743, 9809, 2709, 264, 1365, 295, 286, 478, 1237, 337, 257, 7426, 4079, 11, 512, 33283, 5308, 390, 1027, 293, 309, 4659, 380, 362, 13, 286, 478, 1237, 337, 689, 300, 727, 362, 668, 2942, 370, 286, 393, 1590, 309, 490, 885, 2942, 13, 51114, 51114, 400, 550, 291, 352, 807, 439, 264, 6828, 293, 291, 498, 291, 528, 264, 33283, 5308, 11, 291, 643, 746, 300, 11247, 257, 5622, 13, 51414, 51414, 407, 291, 352, 807, 439, 264, 6828, 293, 291, 915, 2306, 300, 2736, 5622, 293, 264, 2306, 300, 500, 380, 291, 393, 445, 11200, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13270843730253332, "compression_ratio": 1.8429752066115703, "no_caption_prob": 0.0001584197161719203}, {"id": 221, "seek": 124200, "start": 1263.0, "end": 1270.0, "text": " So you go through all the functions and you find ones that return command and the ones that don't you can just ignore.", "tokens": [50364, 1743, 9809, 2709, 264, 1365, 295, 286, 478, 1237, 337, 257, 7426, 4079, 11, 512, 33283, 5308, 390, 1027, 293, 309, 4659, 380, 362, 13, 286, 478, 1237, 337, 689, 300, 727, 362, 668, 2942, 370, 286, 393, 1590, 309, 490, 885, 2942, 13, 51114, 51114, 400, 550, 291, 352, 807, 439, 264, 6828, 293, 291, 498, 291, 528, 264, 33283, 5308, 11, 291, 643, 746, 300, 11247, 257, 5622, 13, 51414, 51414, 407, 291, 352, 807, 439, 264, 6828, 293, 291, 915, 2306, 300, 2736, 5622, 293, 264, 2306, 300, 500, 380, 291, 393, 445, 11200, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13270843730253332, "compression_ratio": 1.8429752066115703, "no_caption_prob": 0.0001584197161719203}, {"id": 222, "seek": 127000, "start": 1270.0, "end": 1275.0, "text": " Exactly. Yeah. Yeah. So you're narrowing down those paths and your search space narrows.", "tokens": [50364, 7587, 13, 865, 13, 865, 13, 407, 291, 434, 9432, 278, 760, 729, 14518, 293, 428, 3164, 1901, 6397, 1509, 13, 50614, 50614, 400, 286, 914, 11, 300, 311, 264, 281, 385, 11, 300, 311, 264, 534, 4651, 551, 466, 2699, 76, 13, 50864, 50864, 400, 370, 300, 311, 286, 519, 472, 295, 264, 4923, 39457, 365, 512, 512, 3109, 411, 11, 291, 458, 11, 4515, 300, 11, 291, 458, 11, 4515, 307, 23842, 294, 512, 2098, 13, 51264, 51264, 400, 257, 688, 295, 561, 534, 959, 309, 13, 440, 551, 300, 286, 959, 466, 2699, 76, 307, 300, 11, 291, 458, 11, 988, 11, 1310, 309, 311, 6081, 281, 445, 24745, 294, 257, 707, 857, 295, 15778, 5585, 4079, 300, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07815716617791228, "compression_ratio": 1.8327137546468402, "no_caption_prob": 7.843082130420953e-05}, {"id": 223, "seek": 127000, "start": 1275.0, "end": 1280.0, "text": " And I mean, that's the to me, that's the really incredible thing about Elm.", "tokens": [50364, 7587, 13, 865, 13, 865, 13, 407, 291, 434, 9432, 278, 760, 729, 14518, 293, 428, 3164, 1901, 6397, 1509, 13, 50614, 50614, 400, 286, 914, 11, 300, 311, 264, 281, 385, 11, 300, 311, 264, 534, 4651, 551, 466, 2699, 76, 13, 50864, 50864, 400, 370, 300, 311, 286, 519, 472, 295, 264, 4923, 39457, 365, 512, 512, 3109, 411, 11, 291, 458, 11, 4515, 300, 11, 291, 458, 11, 4515, 307, 23842, 294, 512, 2098, 13, 51264, 51264, 400, 257, 688, 295, 561, 534, 959, 309, 13, 440, 551, 300, 286, 959, 466, 2699, 76, 307, 300, 11, 291, 458, 11, 988, 11, 1310, 309, 311, 6081, 281, 445, 24745, 294, 257, 707, 857, 295, 15778, 5585, 4079, 300, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07815716617791228, "compression_ratio": 1.8327137546468402, "no_caption_prob": 7.843082130420953e-05}, {"id": 224, "seek": 127000, "start": 1280.0, "end": 1288.0, "text": " And so that's I think one of the trade offs with some some approach like, you know, react that, you know, react is appealing in some ways.", "tokens": [50364, 7587, 13, 865, 13, 865, 13, 407, 291, 434, 9432, 278, 760, 729, 14518, 293, 428, 3164, 1901, 6397, 1509, 13, 50614, 50614, 400, 286, 914, 11, 300, 311, 264, 281, 385, 11, 300, 311, 264, 534, 4651, 551, 466, 2699, 76, 13, 50864, 50864, 400, 370, 300, 311, 286, 519, 472, 295, 264, 4923, 39457, 365, 512, 512, 3109, 411, 11, 291, 458, 11, 4515, 300, 11, 291, 458, 11, 4515, 307, 23842, 294, 512, 2098, 13, 51264, 51264, 400, 257, 688, 295, 561, 534, 959, 309, 13, 440, 551, 300, 286, 959, 466, 2699, 76, 307, 300, 11, 291, 458, 11, 988, 11, 1310, 309, 311, 6081, 281, 445, 24745, 294, 257, 707, 857, 295, 15778, 5585, 4079, 300, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07815716617791228, "compression_ratio": 1.8327137546468402, "no_caption_prob": 7.843082130420953e-05}, {"id": 225, "seek": 127000, "start": 1288.0, "end": 1299.0, "text": " And a lot of people really love it. The thing that I love about Elm is that, you know, sure, maybe it's harder to just sprinkle in a little bit of JavaScript magic somewhere that, you know,", "tokens": [50364, 7587, 13, 865, 13, 865, 13, 407, 291, 434, 9432, 278, 760, 729, 14518, 293, 428, 3164, 1901, 6397, 1509, 13, 50614, 50614, 400, 286, 914, 11, 300, 311, 264, 281, 385, 11, 300, 311, 264, 534, 4651, 551, 466, 2699, 76, 13, 50864, 50864, 400, 370, 300, 311, 286, 519, 472, 295, 264, 4923, 39457, 365, 512, 512, 3109, 411, 11, 291, 458, 11, 4515, 300, 11, 291, 458, 11, 4515, 307, 23842, 294, 512, 2098, 13, 51264, 51264, 400, 257, 688, 295, 561, 534, 959, 309, 13, 440, 551, 300, 286, 959, 466, 2699, 76, 307, 300, 11, 291, 458, 11, 988, 11, 1310, 309, 311, 6081, 281, 445, 24745, 294, 257, 707, 857, 295, 15778, 5585, 4079, 300, 11, 291, 458, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07815716617791228, "compression_ratio": 1.8327137546468402, "no_caption_prob": 7.843082130420953e-05}, {"id": 226, "seek": 129900, "start": 1299.0, "end": 1313.0, "text": " you get this super powerful extra functionality and you have an Apollo caching layer for your GraphQL automatically and you send a mutation and it just automatically stores cached requests.", "tokens": [50364, 291, 483, 341, 1687, 4005, 2857, 14980, 293, 291, 362, 364, 25187, 269, 2834, 4583, 337, 428, 21884, 13695, 6772, 293, 291, 2845, 257, 27960, 293, 309, 445, 6772, 9512, 269, 15095, 12475, 13, 51064, 51064, 583, 550, 562, 300, 311, 406, 1364, 11, 689, 360, 291, 574, 30, 37322, 13, 37322, 13, 51364, 51364, 400, 11, 291, 458, 11, 406, 281, 2152, 264, 5999, 1434, 295, 15778, 382, 257, 2856, 5347, 281, 2699, 76, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08069638609886169, "compression_ratio": 1.5458515283842795, "no_caption_prob": 1.6187223081942648e-05}, {"id": 227, "seek": 129900, "start": 1313.0, "end": 1319.0, "text": " But then when that's not working, where do you look? Everywhere. Everywhere.", "tokens": [50364, 291, 483, 341, 1687, 4005, 2857, 14980, 293, 291, 362, 364, 25187, 269, 2834, 4583, 337, 428, 21884, 13695, 6772, 293, 291, 2845, 257, 27960, 293, 309, 445, 6772, 9512, 269, 15095, 12475, 13, 51064, 51064, 583, 550, 562, 300, 311, 406, 1364, 11, 689, 360, 291, 574, 30, 37322, 13, 37322, 13, 51364, 51364, 400, 11, 291, 458, 11, 406, 281, 2152, 264, 5999, 1434, 295, 15778, 382, 257, 2856, 5347, 281, 2699, 76, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08069638609886169, "compression_ratio": 1.5458515283842795, "no_caption_prob": 1.6187223081942648e-05}, {"id": 228, "seek": 129900, "start": 1319.0, "end": 1325.0, "text": " And, you know, not to mention the dynamism of JavaScript as a language compared to Elm.", "tokens": [50364, 291, 483, 341, 1687, 4005, 2857, 14980, 293, 291, 362, 364, 25187, 269, 2834, 4583, 337, 428, 21884, 13695, 6772, 293, 291, 2845, 257, 27960, 293, 309, 445, 6772, 9512, 269, 15095, 12475, 13, 51064, 51064, 583, 550, 562, 300, 311, 406, 1364, 11, 689, 360, 291, 574, 30, 37322, 13, 37322, 13, 51364, 51364, 400, 11, 291, 458, 11, 406, 281, 2152, 264, 5999, 1434, 295, 15778, 382, 257, 2856, 5347, 281, 2699, 76, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08069638609886169, "compression_ratio": 1.5458515283842795, "no_caption_prob": 1.6187223081942648e-05}, {"id": 229, "seek": 132500, "start": 1325.0, "end": 1331.0, "text": " So that so it just Elm is incredible at narrowing down your search space and being able to think locally.", "tokens": [50364, 407, 300, 370, 309, 445, 2699, 76, 307, 4651, 412, 9432, 278, 760, 428, 3164, 1901, 293, 885, 1075, 281, 519, 16143, 13, 50664, 50664, 400, 286, 519, 300, 311, 370, 2238, 13, 583, 457, 291, 362, 281, 3877, 428, 3861, 294, 257, 636, 300, 12451, 1660, 300, 13, 50964, 50964, 400, 498, 291, 3877, 428, 3861, 689, 291, 362, 613, 867, 2699, 76, 9482, 8294, 11, 613, 1376, 31023, 300, 2736, 2316, 5622, 293, 484, 7897, 439, 670, 428, 724, 11, 51514, 51514, 291, 600, 11732, 300, 5121, 484, 264, 4910, 13, 17764, 3413, 11, 309, 311, 437, 311, 2011, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0791233260676546, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.705066774273291e-05}, {"id": 230, "seek": 132500, "start": 1331.0, "end": 1337.0, "text": " And I think that's so beautiful. But but you have to structure your application in a way that leverages that.", "tokens": [50364, 407, 300, 370, 309, 445, 2699, 76, 307, 4651, 412, 9432, 278, 760, 428, 3164, 1901, 293, 885, 1075, 281, 519, 16143, 13, 50664, 50664, 400, 286, 519, 300, 311, 370, 2238, 13, 583, 457, 291, 362, 281, 3877, 428, 3861, 294, 257, 636, 300, 12451, 1660, 300, 13, 50964, 50964, 400, 498, 291, 3877, 428, 3861, 689, 291, 362, 613, 867, 2699, 76, 9482, 8294, 11, 613, 1376, 31023, 300, 2736, 2316, 5622, 293, 484, 7897, 439, 670, 428, 724, 11, 51514, 51514, 291, 600, 11732, 300, 5121, 484, 264, 4910, 13, 17764, 3413, 11, 309, 311, 437, 311, 2011, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0791233260676546, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.705066774273291e-05}, {"id": 231, "seek": 132500, "start": 1337.0, "end": 1348.0, "text": " And if you structure your application where you have these many Elm architecture patterns, these triplets that return model command and out messages all over your app,", "tokens": [50364, 407, 300, 370, 309, 445, 2699, 76, 307, 4651, 412, 9432, 278, 760, 428, 3164, 1901, 293, 885, 1075, 281, 519, 16143, 13, 50664, 50664, 400, 286, 519, 300, 311, 370, 2238, 13, 583, 457, 291, 362, 281, 3877, 428, 3861, 294, 257, 636, 300, 12451, 1660, 300, 13, 50964, 50964, 400, 498, 291, 3877, 428, 3861, 689, 291, 362, 613, 867, 2699, 76, 9482, 8294, 11, 613, 1376, 31023, 300, 2736, 2316, 5622, 293, 484, 7897, 439, 670, 428, 724, 11, 51514, 51514, 291, 600, 11732, 300, 5121, 484, 264, 4910, 13, 17764, 3413, 11, 309, 311, 437, 311, 2011, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0791233260676546, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.705066774273291e-05}, {"id": 232, "seek": 132500, "start": 1348.0, "end": 1352.0, "text": " you've thrown that benefit out the window. Effectively, it's what's happened.", "tokens": [50364, 407, 300, 370, 309, 445, 2699, 76, 307, 4651, 412, 9432, 278, 760, 428, 3164, 1901, 293, 885, 1075, 281, 519, 16143, 13, 50664, 50664, 400, 286, 519, 300, 311, 370, 2238, 13, 583, 457, 291, 362, 281, 3877, 428, 3861, 294, 257, 636, 300, 12451, 1660, 300, 13, 50964, 50964, 400, 498, 291, 3877, 428, 3861, 689, 291, 362, 613, 867, 2699, 76, 9482, 8294, 11, 613, 1376, 31023, 300, 2736, 2316, 5622, 293, 484, 7897, 439, 670, 428, 724, 11, 51514, 51514, 291, 600, 11732, 300, 5121, 484, 264, 4910, 13, 17764, 3413, 11, 309, 311, 437, 311, 2011, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0791233260676546, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.705066774273291e-05}, {"id": 233, "seek": 135200, "start": 1352.0, "end": 1359.0, "text": " Most modules expose the triplet, the model, the view, the update, sometimes the subscriptions.", "tokens": [50364, 4534, 16679, 19219, 264, 1376, 14657, 11, 264, 2316, 11, 264, 1910, 11, 264, 5623, 11, 2171, 264, 44951, 13, 50714, 50714, 400, 436, 2049, 362, 264, 912, 13397, 411, 2316, 307, 2445, 300, 2516, 257, 3636, 11, 257, 2316, 293, 11247, 257, 2316, 293, 257, 2604, 781, 295, 2316, 293, 5622, 3636, 420, 445, 11247, 257, 2316, 13, 51364, 51364, 583, 309, 393, 2736, 257, 688, 295, 721, 13, 400, 300, 307, 512, 12635, 300, 307, 588, 11, 588, 4420, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1285648124162541, "compression_ratio": 1.7621359223300972, "no_caption_prob": 4.2644580389605835e-05}, {"id": 234, "seek": 135200, "start": 1359.0, "end": 1372.0, "text": " And they often have the same signature like model is function that takes a message, a model and returns a model and a tuple of model and command message or just returns a model.", "tokens": [50364, 4534, 16679, 19219, 264, 1376, 14657, 11, 264, 2316, 11, 264, 1910, 11, 264, 5623, 11, 2171, 264, 44951, 13, 50714, 50714, 400, 436, 2049, 362, 264, 912, 13397, 411, 2316, 307, 2445, 300, 2516, 257, 3636, 11, 257, 2316, 293, 11247, 257, 2316, 293, 257, 2604, 781, 295, 2316, 293, 5622, 3636, 420, 445, 11247, 257, 2316, 13, 51364, 51364, 583, 309, 393, 2736, 257, 688, 295, 721, 13, 400, 300, 307, 512, 12635, 300, 307, 588, 11, 588, 4420, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1285648124162541, "compression_ratio": 1.7621359223300972, "no_caption_prob": 4.2644580389605835e-05}, {"id": 235, "seek": 135200, "start": 1372.0, "end": 1379.0, "text": " But it can return a lot of things. And that is some flexibility that is very, very useful.", "tokens": [50364, 4534, 16679, 19219, 264, 1376, 14657, 11, 264, 2316, 11, 264, 1910, 11, 264, 5623, 11, 2171, 264, 44951, 13, 50714, 50714, 400, 436, 2049, 362, 264, 912, 13397, 411, 2316, 307, 2445, 300, 2516, 257, 3636, 11, 257, 2316, 293, 11247, 257, 2316, 293, 257, 2604, 781, 295, 2316, 293, 5622, 3636, 420, 445, 11247, 257, 2316, 13, 51364, 51364, 583, 309, 393, 2736, 257, 688, 295, 721, 13, 400, 300, 307, 512, 12635, 300, 307, 588, 11, 588, 4420, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1285648124162541, "compression_ratio": 1.7621359223300972, "no_caption_prob": 4.2644580389605835e-05}, {"id": 236, "seek": 137900, "start": 1379.0, "end": 1387.0, "text": " And we have to keep in mind that we can add arguments and we can return more things that than what it's custom to do.", "tokens": [50364, 400, 321, 362, 281, 1066, 294, 1575, 300, 321, 393, 909, 12869, 293, 321, 393, 2736, 544, 721, 300, 813, 437, 309, 311, 2375, 281, 360, 13, 50764, 50764, 663, 293, 300, 307, 689, 39228, 37008, 1487, 294, 570, 321, 362, 281, 2464, 439, 300, 39228, 37008, 13, 51014, 51014, 1042, 11, 321, 393, 1319, 300, 39228, 37008, 4461, 321, 528, 13, 51214, 51214, 400, 300, 307, 472, 295, 264, 16986, 295, 1419, 300, 2171, 11304, 39228, 37008, 300, 257, 688, 295, 561, 11024, 466, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08569524023267958, "compression_ratio": 1.7830188679245282, "no_caption_prob": 0.00013130783918313682}, {"id": 237, "seek": 137900, "start": 1387.0, "end": 1392.0, "text": " That and that is where boilerplate comes in because we have to write all that boilerplate.", "tokens": [50364, 400, 321, 362, 281, 1066, 294, 1575, 300, 321, 393, 909, 12869, 293, 321, 393, 2736, 544, 721, 300, 813, 437, 309, 311, 2375, 281, 360, 13, 50764, 50764, 663, 293, 300, 307, 689, 39228, 37008, 1487, 294, 570, 321, 362, 281, 2464, 439, 300, 39228, 37008, 13, 51014, 51014, 1042, 11, 321, 393, 1319, 300, 39228, 37008, 4461, 321, 528, 13, 51214, 51214, 400, 300, 307, 472, 295, 264, 16986, 295, 1419, 300, 2171, 11304, 39228, 37008, 300, 257, 688, 295, 561, 11024, 466, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08569524023267958, "compression_ratio": 1.7830188679245282, "no_caption_prob": 0.00013130783918313682}, {"id": 238, "seek": 137900, "start": 1392.0, "end": 1396.0, "text": " Well, we can change that boilerplate however we want.", "tokens": [50364, 400, 321, 362, 281, 1066, 294, 1575, 300, 321, 393, 909, 12869, 293, 321, 393, 2736, 544, 721, 300, 813, 437, 309, 311, 2375, 281, 360, 13, 50764, 50764, 663, 293, 300, 307, 689, 39228, 37008, 1487, 294, 570, 321, 362, 281, 2464, 439, 300, 39228, 37008, 13, 51014, 51014, 1042, 11, 321, 393, 1319, 300, 39228, 37008, 4461, 321, 528, 13, 51214, 51214, 400, 300, 307, 472, 295, 264, 16986, 295, 1419, 300, 2171, 11304, 39228, 37008, 300, 257, 688, 295, 561, 11024, 466, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08569524023267958, "compression_ratio": 1.7830188679245282, "no_caption_prob": 0.00013130783918313682}, {"id": 239, "seek": 137900, "start": 1396.0, "end": 1401.0, "text": " And that is one of the strengths of having that sometimes annoying boilerplate that a lot of people complain about.", "tokens": [50364, 400, 321, 362, 281, 1066, 294, 1575, 300, 321, 393, 909, 12869, 293, 321, 393, 2736, 544, 721, 300, 813, 437, 309, 311, 2375, 281, 360, 13, 50764, 50764, 663, 293, 300, 307, 689, 39228, 37008, 1487, 294, 570, 321, 362, 281, 2464, 439, 300, 39228, 37008, 13, 51014, 51014, 1042, 11, 321, 393, 1319, 300, 39228, 37008, 4461, 321, 528, 13, 51214, 51214, 400, 300, 307, 472, 295, 264, 16986, 295, 1419, 300, 2171, 11304, 39228, 37008, 300, 257, 688, 295, 561, 11024, 466, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08569524023267958, "compression_ratio": 1.7830188679245282, "no_caption_prob": 0.00013130783918313682}, {"id": 240, "seek": 140100, "start": 1401.0, "end": 1414.0, "text": " Yeah, I think a nice way to think about this is, you know, I've heard the term used. It's actually from this book, The Goose Book, Growing Object Oriented Software Guided by Tests.", "tokens": [50364, 865, 11, 286, 519, 257, 1481, 636, 281, 519, 466, 341, 307, 11, 291, 458, 11, 286, 600, 2198, 264, 1433, 1143, 13, 467, 311, 767, 490, 341, 1446, 11, 440, 1037, 541, 9476, 11, 32569, 24753, 23621, 6003, 27428, 2694, 2112, 538, 314, 4409, 13, 51014, 51014, 286, 519, 300, 311, 264, 4876, 13, 400, 295, 1164, 11, 309, 311, 1417, 466, 2657, 21841, 1715, 13, 51264, 51264, 583, 436, 611, 751, 466, 1419, 257, 11745, 4965, 293, 436, 751, 466, 2380, 294, 4997, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08778545591566297, "compression_ratio": 1.5803571428571428, "no_caption_prob": 0.00016860920004546642}, {"id": 241, "seek": 140100, "start": 1414.0, "end": 1419.0, "text": " I think that's the title. And of course, it's talking about object oriented design.", "tokens": [50364, 865, 11, 286, 519, 257, 1481, 636, 281, 519, 466, 341, 307, 11, 291, 458, 11, 286, 600, 2198, 264, 1433, 1143, 13, 467, 311, 767, 490, 341, 1446, 11, 440, 1037, 541, 9476, 11, 32569, 24753, 23621, 6003, 27428, 2694, 2112, 538, 314, 4409, 13, 51014, 51014, 286, 519, 300, 311, 264, 4876, 13, 400, 295, 1164, 11, 309, 311, 1417, 466, 2657, 21841, 1715, 13, 51264, 51264, 583, 436, 611, 751, 466, 1419, 257, 11745, 4965, 293, 436, 751, 466, 2380, 294, 4997, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08778545591566297, "compression_ratio": 1.5803571428571428, "no_caption_prob": 0.00016860920004546642}, {"id": 242, "seek": 140100, "start": 1419.0, "end": 1424.0, "text": " But they also talk about having a functional core and they talk about outside in testing.", "tokens": [50364, 865, 11, 286, 519, 257, 1481, 636, 281, 519, 466, 341, 307, 11, 291, 458, 11, 286, 600, 2198, 264, 1433, 1143, 13, 467, 311, 767, 490, 341, 1446, 11, 440, 1037, 541, 9476, 11, 32569, 24753, 23621, 6003, 27428, 2694, 2112, 538, 314, 4409, 13, 51014, 51014, 286, 519, 300, 311, 264, 4876, 13, 400, 295, 1164, 11, 309, 311, 1417, 466, 2657, 21841, 1715, 13, 51264, 51264, 583, 436, 611, 751, 466, 1419, 257, 11745, 4965, 293, 436, 751, 466, 2380, 294, 4997, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08778545591566297, "compression_ratio": 1.5803571428571428, "no_caption_prob": 0.00016860920004546642}, {"id": 243, "seek": 142400, "start": 1424.0, "end": 1432.0, "text": " And it's sort of a well known book for sort of introducing this outside in testing style where you start with the end to end tests and mock things in the middle.", "tokens": [50364, 400, 309, 311, 1333, 295, 257, 731, 2570, 1446, 337, 1333, 295, 15424, 341, 2380, 294, 4997, 3758, 689, 291, 722, 365, 264, 917, 281, 917, 6921, 293, 17362, 721, 294, 264, 2808, 13, 50764, 50764, 286, 478, 406, 988, 286, 3928, 281, 312, 544, 294, 264, 1333, 295, 286, 2041, 264, 20887, 1395, 15843, 19184, 1333, 295, 1854, 484, 4997, 1395, 295, 1194, 456, 13, 51264, 51264, 583, 286, 534, 411, 341, 1558, 300, 436, 362, 295, 1417, 466, 257, 2995, 18821, 293, 1419, 341, 312, 257, 6357, 300, 257, 2995, 18821, 307, 15824, 990, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06738463486775313, "compression_ratio": 1.7590361445783131, "no_caption_prob": 7.965330587467179e-05}, {"id": 244, "seek": 142400, "start": 1432.0, "end": 1442.0, "text": " I'm not sure I tend to be more in the sort of I guess the Detroit school Kent Beck sort of inside out testing school of thought there.", "tokens": [50364, 400, 309, 311, 1333, 295, 257, 731, 2570, 1446, 337, 1333, 295, 15424, 341, 2380, 294, 4997, 3758, 689, 291, 722, 365, 264, 917, 281, 917, 6921, 293, 17362, 721, 294, 264, 2808, 13, 50764, 50764, 286, 478, 406, 988, 286, 3928, 281, 312, 544, 294, 264, 1333, 295, 286, 2041, 264, 20887, 1395, 15843, 19184, 1333, 295, 1854, 484, 4997, 1395, 295, 1194, 456, 13, 51264, 51264, 583, 286, 534, 411, 341, 1558, 300, 436, 362, 295, 1417, 466, 257, 2995, 18821, 293, 1419, 341, 312, 257, 6357, 300, 257, 2995, 18821, 307, 15824, 990, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06738463486775313, "compression_ratio": 1.7590361445783131, "no_caption_prob": 7.965330587467179e-05}, {"id": 245, "seek": 142400, "start": 1442.0, "end": 1452.0, "text": " But I really like this idea that they have of talking about a matchmaker and having this be a responsibility that a matchmaker is delegating.", "tokens": [50364, 400, 309, 311, 1333, 295, 257, 731, 2570, 1446, 337, 1333, 295, 15424, 341, 2380, 294, 4997, 3758, 689, 291, 722, 365, 264, 917, 281, 917, 6921, 293, 17362, 721, 294, 264, 2808, 13, 50764, 50764, 286, 478, 406, 988, 286, 3928, 281, 312, 544, 294, 264, 1333, 295, 286, 2041, 264, 20887, 1395, 15843, 19184, 1333, 295, 1854, 484, 4997, 1395, 295, 1194, 456, 13, 51264, 51264, 583, 286, 534, 411, 341, 1558, 300, 436, 362, 295, 1417, 466, 257, 2995, 18821, 293, 1419, 341, 312, 257, 6357, 300, 257, 2995, 18821, 307, 15824, 990, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06738463486775313, "compression_ratio": 1.7590361445783131, "no_caption_prob": 7.965330587467179e-05}, {"id": 246, "seek": 145200, "start": 1452.0, "end": 1459.0, "text": " It's I often think about like a telephone operator that just a phone call comes in and the operator.", "tokens": [50364, 467, 311, 286, 2049, 519, 466, 411, 257, 19800, 12973, 300, 445, 257, 2593, 818, 1487, 294, 293, 264, 12973, 13, 50714, 50714, 440, 12973, 311, 1691, 307, 406, 281, 14151, 264, 2734, 293, 3191, 264, 1154, 13, 50964, 50964, 440, 12973, 311, 1691, 307, 281, 7955, 309, 281, 264, 558, 954, 13, 663, 311, 439, 641, 1691, 307, 13, 51164, 51164, 1911, 11, 286, 643, 364, 8399, 23860, 13, 2264, 11, 718, 385, 9972, 291, 294, 13, 1911, 11, 286, 643, 393, 291, 13, 286, 478, 1382, 281, 818, 341, 954, 13, 2264, 11, 286, 603, 9972, 291, 294, 13, 51514, 51514, 663, 311, 641, 787, 1691, 13, 663, 311, 641, 787, 6357, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07963953098329175, "compression_ratio": 1.8632478632478633, "no_caption_prob": 9.761014371179044e-05}, {"id": 247, "seek": 145200, "start": 1459.0, "end": 1464.0, "text": " The operator's job is not to resolve the issue and fix the problem.", "tokens": [50364, 467, 311, 286, 2049, 519, 466, 411, 257, 19800, 12973, 300, 445, 257, 2593, 818, 1487, 294, 293, 264, 12973, 13, 50714, 50714, 440, 12973, 311, 1691, 307, 406, 281, 14151, 264, 2734, 293, 3191, 264, 1154, 13, 50964, 50964, 440, 12973, 311, 1691, 307, 281, 7955, 309, 281, 264, 558, 954, 13, 663, 311, 439, 641, 1691, 307, 13, 51164, 51164, 1911, 11, 286, 643, 364, 8399, 23860, 13, 2264, 11, 718, 385, 9972, 291, 294, 13, 1911, 11, 286, 643, 393, 291, 13, 286, 478, 1382, 281, 818, 341, 954, 13, 2264, 11, 286, 603, 9972, 291, 294, 13, 51514, 51514, 663, 311, 641, 787, 1691, 13, 663, 311, 641, 787, 6357, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07963953098329175, "compression_ratio": 1.8632478632478633, "no_caption_prob": 9.761014371179044e-05}, {"id": 248, "seek": 145200, "start": 1464.0, "end": 1468.0, "text": " The operator's job is to route it to the right person. That's all their job is.", "tokens": [50364, 467, 311, 286, 2049, 519, 466, 411, 257, 19800, 12973, 300, 445, 257, 2593, 818, 1487, 294, 293, 264, 12973, 13, 50714, 50714, 440, 12973, 311, 1691, 307, 406, 281, 14151, 264, 2734, 293, 3191, 264, 1154, 13, 50964, 50964, 440, 12973, 311, 1691, 307, 281, 7955, 309, 281, 264, 558, 954, 13, 663, 311, 439, 641, 1691, 307, 13, 51164, 51164, 1911, 11, 286, 643, 364, 8399, 23860, 13, 2264, 11, 718, 385, 9972, 291, 294, 13, 1911, 11, 286, 643, 393, 291, 13, 286, 478, 1382, 281, 818, 341, 954, 13, 2264, 11, 286, 603, 9972, 291, 294, 13, 51514, 51514, 663, 311, 641, 787, 1691, 13, 663, 311, 641, 787, 6357, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07963953098329175, "compression_ratio": 1.8632478632478633, "no_caption_prob": 9.761014371179044e-05}, {"id": 249, "seek": 145200, "start": 1468.0, "end": 1475.0, "text": " Hey, I need an auto mechanic. OK, let me patch you in. Hey, I need can you. I'm trying to call this person. OK, I'll patch you in.", "tokens": [50364, 467, 311, 286, 2049, 519, 466, 411, 257, 19800, 12973, 300, 445, 257, 2593, 818, 1487, 294, 293, 264, 12973, 13, 50714, 50714, 440, 12973, 311, 1691, 307, 406, 281, 14151, 264, 2734, 293, 3191, 264, 1154, 13, 50964, 50964, 440, 12973, 311, 1691, 307, 281, 7955, 309, 281, 264, 558, 954, 13, 663, 311, 439, 641, 1691, 307, 13, 51164, 51164, 1911, 11, 286, 643, 364, 8399, 23860, 13, 2264, 11, 718, 385, 9972, 291, 294, 13, 1911, 11, 286, 643, 393, 291, 13, 286, 478, 1382, 281, 818, 341, 954, 13, 2264, 11, 286, 603, 9972, 291, 294, 13, 51514, 51514, 663, 311, 641, 787, 1691, 13, 663, 311, 641, 787, 6357, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07963953098329175, "compression_ratio": 1.8632478632478633, "no_caption_prob": 9.761014371179044e-05}, {"id": 250, "seek": 145200, "start": 1475.0, "end": 1478.0, "text": " That's their only job. That's their only responsibility.", "tokens": [50364, 467, 311, 286, 2049, 519, 466, 411, 257, 19800, 12973, 300, 445, 257, 2593, 818, 1487, 294, 293, 264, 12973, 13, 50714, 50714, 440, 12973, 311, 1691, 307, 406, 281, 14151, 264, 2734, 293, 3191, 264, 1154, 13, 50964, 50964, 440, 12973, 311, 1691, 307, 281, 7955, 309, 281, 264, 558, 954, 13, 663, 311, 439, 641, 1691, 307, 13, 51164, 51164, 1911, 11, 286, 643, 364, 8399, 23860, 13, 2264, 11, 718, 385, 9972, 291, 294, 13, 1911, 11, 286, 643, 393, 291, 13, 286, 478, 1382, 281, 818, 341, 954, 13, 2264, 11, 286, 603, 9972, 291, 294, 13, 51514, 51514, 663, 311, 641, 787, 1691, 13, 663, 311, 641, 787, 6357, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07963953098329175, "compression_ratio": 1.8632478632478633, "no_caption_prob": 9.761014371179044e-05}, {"id": 251, "seek": 147800, "start": 1478.0, "end": 1483.0, "text": " You know, we kind of talked about how decoding is not a good way to define a responsibility.", "tokens": [50364, 509, 458, 11, 321, 733, 295, 2825, 466, 577, 979, 8616, 307, 406, 257, 665, 636, 281, 6964, 257, 6357, 13, 50614, 50614, 663, 311, 445, 746, 300, 365, 1752, 291, 1466, 300, 11, 4177, 11, 291, 458, 11, 979, 8616, 1943, 380, 767, 456, 311, 6357, 13, 50964, 50964, 663, 311, 411, 472, 295, 264, 472, 295, 264, 721, 300, 364, 7222, 2203, 281, 360, 13, 1107, 7222, 2203, 281, 979, 1429, 13, 51264, 51264, 467, 611, 575, 257, 1412, 2010, 13, 467, 611, 3255, 577, 281, 23673, 364, 7222, 490, 264, 7154, 13, 51514, 51514, 3950, 366, 264, 4134, 13, 663, 311, 264, 6357, 307, 1333, 295, 1203, 3288, 294, 300, 1412, 2010, 295, 364, 7222, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04498149902839971, "compression_ratio": 1.9312977099236641, "no_caption_prob": 7.966737030074e-05}, {"id": 252, "seek": 147800, "start": 1483.0, "end": 1490.0, "text": " That's just something that with experience you learn that, hey, you know, decoding isn't actually there's responsibility.", "tokens": [50364, 509, 458, 11, 321, 733, 295, 2825, 466, 577, 979, 8616, 307, 406, 257, 665, 636, 281, 6964, 257, 6357, 13, 50614, 50614, 663, 311, 445, 746, 300, 365, 1752, 291, 1466, 300, 11, 4177, 11, 291, 458, 11, 979, 8616, 1943, 380, 767, 456, 311, 6357, 13, 50964, 50964, 663, 311, 411, 472, 295, 264, 472, 295, 264, 721, 300, 364, 7222, 2203, 281, 360, 13, 1107, 7222, 2203, 281, 979, 1429, 13, 51264, 51264, 467, 611, 575, 257, 1412, 2010, 13, 467, 611, 3255, 577, 281, 23673, 364, 7222, 490, 264, 7154, 13, 51514, 51514, 3950, 366, 264, 4134, 13, 663, 311, 264, 6357, 307, 1333, 295, 1203, 3288, 294, 300, 1412, 2010, 295, 364, 7222, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04498149902839971, "compression_ratio": 1.9312977099236641, "no_caption_prob": 7.966737030074e-05}, {"id": 253, "seek": 147800, "start": 1490.0, "end": 1496.0, "text": " That's like one of the one of the things that an article needs to do. An article needs to decode.", "tokens": [50364, 509, 458, 11, 321, 733, 295, 2825, 466, 577, 979, 8616, 307, 406, 257, 665, 636, 281, 6964, 257, 6357, 13, 50614, 50614, 663, 311, 445, 746, 300, 365, 1752, 291, 1466, 300, 11, 4177, 11, 291, 458, 11, 979, 8616, 1943, 380, 767, 456, 311, 6357, 13, 50964, 50964, 663, 311, 411, 472, 295, 264, 472, 295, 264, 721, 300, 364, 7222, 2203, 281, 360, 13, 1107, 7222, 2203, 281, 979, 1429, 13, 51264, 51264, 467, 611, 575, 257, 1412, 2010, 13, 467, 611, 3255, 577, 281, 23673, 364, 7222, 490, 264, 7154, 13, 51514, 51514, 3950, 366, 264, 4134, 13, 663, 311, 264, 6357, 307, 1333, 295, 1203, 3288, 294, 300, 1412, 2010, 295, 364, 7222, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04498149902839971, "compression_ratio": 1.9312977099236641, "no_caption_prob": 7.966737030074e-05}, {"id": 254, "seek": 147800, "start": 1496.0, "end": 1501.0, "text": " It also has a data type. It also knows how to fetch an article from the server.", "tokens": [50364, 509, 458, 11, 321, 733, 295, 2825, 466, 577, 979, 8616, 307, 406, 257, 665, 636, 281, 6964, 257, 6357, 13, 50614, 50614, 663, 311, 445, 746, 300, 365, 1752, 291, 1466, 300, 11, 4177, 11, 291, 458, 11, 979, 8616, 1943, 380, 767, 456, 311, 6357, 13, 50964, 50964, 663, 311, 411, 472, 295, 264, 472, 295, 264, 721, 300, 364, 7222, 2203, 281, 360, 13, 1107, 7222, 2203, 281, 979, 1429, 13, 51264, 51264, 467, 611, 575, 257, 1412, 2010, 13, 467, 611, 3255, 577, 281, 23673, 364, 7222, 490, 264, 7154, 13, 51514, 51514, 3950, 366, 264, 4134, 13, 663, 311, 264, 6357, 307, 1333, 295, 1203, 3288, 294, 300, 1412, 2010, 295, 364, 7222, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04498149902839971, "compression_ratio": 1.9312977099236641, "no_caption_prob": 7.966737030074e-05}, {"id": 255, "seek": 147800, "start": 1501.0, "end": 1507.0, "text": " Those are the response. That's the responsibility is sort of everything involved in that data type of an article.", "tokens": [50364, 509, 458, 11, 321, 733, 295, 2825, 466, 577, 979, 8616, 307, 406, 257, 665, 636, 281, 6964, 257, 6357, 13, 50614, 50614, 663, 311, 445, 746, 300, 365, 1752, 291, 1466, 300, 11, 4177, 11, 291, 458, 11, 979, 8616, 1943, 380, 767, 456, 311, 6357, 13, 50964, 50964, 663, 311, 411, 472, 295, 264, 472, 295, 264, 721, 300, 364, 7222, 2203, 281, 360, 13, 1107, 7222, 2203, 281, 979, 1429, 13, 51264, 51264, 467, 611, 575, 257, 1412, 2010, 13, 467, 611, 3255, 577, 281, 23673, 364, 7222, 490, 264, 7154, 13, 51514, 51514, 3950, 366, 264, 4134, 13, 663, 311, 264, 6357, 307, 1333, 295, 1203, 3288, 294, 300, 1412, 2010, 295, 364, 7222, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.04498149902839971, "compression_ratio": 1.9312977099236641, "no_caption_prob": 7.966737030074e-05}, {"id": 256, "seek": 150700, "start": 1507.0, "end": 1516.0, "text": " Well, another thing that I've learned from experiences, I think that a matchmaker is a good responsibility and it's a good thing to think about that.", "tokens": [50364, 1042, 11, 1071, 551, 300, 286, 600, 3264, 490, 5235, 11, 286, 519, 300, 257, 2995, 18821, 307, 257, 665, 6357, 293, 309, 311, 257, 665, 551, 281, 519, 466, 300, 13, 50814, 50814, 1911, 11, 498, 341, 307, 884, 886, 709, 9952, 11, 1310, 264, 1691, 295, 341, 551, 307, 534, 281, 312, 257, 2995, 18821, 293, 281, 40999, 281, 264, 558, 3190, 13, 51164, 51164, 407, 11, 291, 458, 11, 428, 5623, 2445, 11, 498, 291, 536, 257, 688, 295, 9952, 294, 428, 5623, 2445, 11, 300, 311, 257, 869, 2650, 281, 2235, 721, 484, 666, 512, 6828, 293, 281, 8947, 729, 484, 666, 512, 16679, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051118521563774715, "compression_ratio": 1.817490494296578, "no_caption_prob": 4.908537812298164e-05}, {"id": 257, "seek": 150700, "start": 1516.0, "end": 1523.0, "text": " Hey, if this is doing too much logic, maybe the job of this thing is really to be a matchmaker and to delegate to the right places.", "tokens": [50364, 1042, 11, 1071, 551, 300, 286, 600, 3264, 490, 5235, 11, 286, 519, 300, 257, 2995, 18821, 307, 257, 665, 6357, 293, 309, 311, 257, 665, 551, 281, 519, 466, 300, 13, 50814, 50814, 1911, 11, 498, 341, 307, 884, 886, 709, 9952, 11, 1310, 264, 1691, 295, 341, 551, 307, 534, 281, 312, 257, 2995, 18821, 293, 281, 40999, 281, 264, 558, 3190, 13, 51164, 51164, 407, 11, 291, 458, 11, 428, 5623, 2445, 11, 498, 291, 536, 257, 688, 295, 9952, 294, 428, 5623, 2445, 11, 300, 311, 257, 869, 2650, 281, 2235, 721, 484, 666, 512, 6828, 293, 281, 8947, 729, 484, 666, 512, 16679, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051118521563774715, "compression_ratio": 1.817490494296578, "no_caption_prob": 4.908537812298164e-05}, {"id": 258, "seek": 150700, "start": 1523.0, "end": 1534.0, "text": " So, you know, your update function, if you see a lot of logic in your update function, that's a great opportunity to pull things out into some functions and to extract those out into some modules.", "tokens": [50364, 1042, 11, 1071, 551, 300, 286, 600, 3264, 490, 5235, 11, 286, 519, 300, 257, 2995, 18821, 307, 257, 665, 6357, 293, 309, 311, 257, 665, 551, 281, 519, 466, 300, 13, 50814, 50814, 1911, 11, 498, 341, 307, 884, 886, 709, 9952, 11, 1310, 264, 1691, 295, 341, 551, 307, 534, 281, 312, 257, 2995, 18821, 293, 281, 40999, 281, 264, 558, 3190, 13, 51164, 51164, 407, 11, 291, 458, 11, 428, 5623, 2445, 11, 498, 291, 536, 257, 688, 295, 9952, 294, 428, 5623, 2445, 11, 300, 311, 257, 869, 2650, 281, 2235, 721, 484, 666, 512, 6828, 293, 281, 8947, 729, 484, 666, 512, 16679, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051118521563774715, "compression_ratio": 1.817490494296578, "no_caption_prob": 4.908537812298164e-05}, {"id": 259, "seek": 153400, "start": 1534.0, "end": 1541.0, "text": " Usually around some sort of data type. And, you know, this is where you sort of try to narrow that interface.", "tokens": [50364, 11419, 926, 512, 1333, 295, 1412, 2010, 13, 400, 11, 291, 458, 11, 341, 307, 689, 291, 1333, 295, 853, 281, 9432, 300, 9226, 13, 50714, 50714, 407, 498, 746, 2541, 356, 16982, 484, 295, 428, 295, 428, 1333, 295, 3028, 6542, 13, 50964, 50964, 823, 11, 7183, 366, 257, 1081, 689, 291, 528, 281, 362, 341, 1333, 295, 1376, 14657, 300, 291, 393, 7890, 11, 291, 458, 11, 1910, 293, 5623, 281, 2042, 16901, 293, 1507, 13, 51414, 51414, 286, 519, 300, 6677, 589, 534, 9594, 412, 264, 1192, 1496, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05136579771836599, "compression_ratio": 1.7130434782608697, "no_caption_prob": 2.840854722307995e-05}, {"id": 260, "seek": 153400, "start": 1541.0, "end": 1546.0, "text": " So if something cleanly pulls out of your of your sort of page component.", "tokens": [50364, 11419, 926, 512, 1333, 295, 1412, 2010, 13, 400, 11, 291, 458, 11, 341, 307, 689, 291, 1333, 295, 853, 281, 9432, 300, 9226, 13, 50714, 50714, 407, 498, 746, 2541, 356, 16982, 484, 295, 428, 295, 428, 1333, 295, 3028, 6542, 13, 50964, 50964, 823, 11, 7183, 366, 257, 1081, 689, 291, 528, 281, 362, 341, 1333, 295, 1376, 14657, 300, 291, 393, 7890, 11, 291, 458, 11, 1910, 293, 5623, 281, 2042, 16901, 293, 1507, 13, 51414, 51414, 286, 519, 300, 6677, 589, 534, 9594, 412, 264, 1192, 1496, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05136579771836599, "compression_ratio": 1.7130434782608697, "no_caption_prob": 2.840854722307995e-05}, {"id": 261, "seek": 153400, "start": 1546.0, "end": 1555.0, "text": " Now, pages are a place where you want to have this sort of triplet that you can communicate, you know, view and update to perform commands and stuff.", "tokens": [50364, 11419, 926, 512, 1333, 295, 1412, 2010, 13, 400, 11, 291, 458, 11, 341, 307, 689, 291, 1333, 295, 853, 281, 9432, 300, 9226, 13, 50714, 50714, 407, 498, 746, 2541, 356, 16982, 484, 295, 428, 295, 428, 1333, 295, 3028, 6542, 13, 50964, 50964, 823, 11, 7183, 366, 257, 1081, 689, 291, 528, 281, 362, 341, 1333, 295, 1376, 14657, 300, 291, 393, 7890, 11, 291, 458, 11, 1910, 293, 5623, 281, 2042, 16901, 293, 1507, 13, 51414, 51414, 286, 519, 300, 6677, 589, 534, 9594, 412, 264, 1192, 1496, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05136579771836599, "compression_ratio": 1.7130434782608697, "no_caption_prob": 2.840854722307995e-05}, {"id": 262, "seek": 153400, "start": 1555.0, "end": 1559.0, "text": " I think that components work really nicely at the top level.", "tokens": [50364, 11419, 926, 512, 1333, 295, 1412, 2010, 13, 400, 11, 291, 458, 11, 341, 307, 689, 291, 1333, 295, 853, 281, 9432, 300, 9226, 13, 50714, 50714, 407, 498, 746, 2541, 356, 16982, 484, 295, 428, 295, 428, 1333, 295, 3028, 6542, 13, 50964, 50964, 823, 11, 7183, 366, 257, 1081, 689, 291, 528, 281, 362, 341, 1333, 295, 1376, 14657, 300, 291, 393, 7890, 11, 291, 458, 11, 1910, 293, 5623, 281, 2042, 16901, 293, 1507, 13, 51414, 51414, 286, 519, 300, 6677, 589, 534, 9594, 412, 264, 1192, 1496, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05136579771836599, "compression_ratio": 1.7130434782608697, "no_caption_prob": 2.840854722307995e-05}, {"id": 263, "seek": 155900, "start": 1559.0, "end": 1567.0, "text": " There's siblings, these page components in Elm, but they don't work nicely in this sort of nesting hierarchy from the top down.", "tokens": [50364, 821, 311, 20571, 11, 613, 3028, 6677, 294, 2699, 76, 11, 457, 436, 500, 380, 589, 9594, 294, 341, 1333, 295, 297, 8714, 22333, 490, 264, 1192, 760, 13, 50764, 50764, 509, 362, 341, 6542, 597, 8306, 341, 6542, 11, 597, 8306, 341, 6542, 13, 51014, 51014, 286, 576, 584, 436, 589, 731, 562, 291, 534, 458, 437, 307, 1944, 293, 437, 393, 1051, 13, 51364, 51364, 400, 300, 307, 264, 1389, 412, 264, 1192, 1496, 365, 7183, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06080849199409945, "compression_ratio": 1.6859903381642511, "no_caption_prob": 2.7534950277186e-05}, {"id": 264, "seek": 155900, "start": 1567.0, "end": 1572.0, "text": " You have this component which contains this component, which contains this component.", "tokens": [50364, 821, 311, 20571, 11, 613, 3028, 6677, 294, 2699, 76, 11, 457, 436, 500, 380, 589, 9594, 294, 341, 1333, 295, 297, 8714, 22333, 490, 264, 1192, 760, 13, 50764, 50764, 509, 362, 341, 6542, 597, 8306, 341, 6542, 11, 597, 8306, 341, 6542, 13, 51014, 51014, 286, 576, 584, 436, 589, 731, 562, 291, 534, 458, 437, 307, 1944, 293, 437, 393, 1051, 13, 51364, 51364, 400, 300, 307, 264, 1389, 412, 264, 1192, 1496, 365, 7183, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06080849199409945, "compression_ratio": 1.6859903381642511, "no_caption_prob": 2.7534950277186e-05}, {"id": 265, "seek": 155900, "start": 1572.0, "end": 1579.0, "text": " I would say they work well when you really know what is possible and what can happen.", "tokens": [50364, 821, 311, 20571, 11, 613, 3028, 6677, 294, 2699, 76, 11, 457, 436, 500, 380, 589, 9594, 294, 341, 1333, 295, 297, 8714, 22333, 490, 264, 1192, 760, 13, 50764, 50764, 509, 362, 341, 6542, 597, 8306, 341, 6542, 11, 597, 8306, 341, 6542, 13, 51014, 51014, 286, 576, 584, 436, 589, 731, 562, 291, 534, 458, 437, 307, 1944, 293, 437, 393, 1051, 13, 51364, 51364, 400, 300, 307, 264, 1389, 412, 264, 1192, 1496, 365, 7183, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06080849199409945, "compression_ratio": 1.6859903381642511, "no_caption_prob": 2.7534950277186e-05}, {"id": 266, "seek": 155900, "start": 1579.0, "end": 1581.0, "text": " And that is the case at the top level with pages.", "tokens": [50364, 821, 311, 20571, 11, 613, 3028, 6677, 294, 2699, 76, 11, 457, 436, 500, 380, 589, 9594, 294, 341, 1333, 295, 297, 8714, 22333, 490, 264, 1192, 760, 13, 50764, 50764, 509, 362, 341, 6542, 597, 8306, 341, 6542, 11, 597, 8306, 341, 6542, 13, 51014, 51014, 286, 576, 584, 436, 589, 731, 562, 291, 534, 458, 437, 307, 1944, 293, 437, 393, 1051, 13, 51364, 51364, 400, 300, 307, 264, 1389, 412, 264, 1192, 1496, 365, 7183, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06080849199409945, "compression_ratio": 1.6859903381642511, "no_caption_prob": 2.7534950277186e-05}, {"id": 267, "seek": 158100, "start": 1581.0, "end": 1589.0, "text": " So you've got frameworks like Elm S.P.A. which creates page components because we know what can happen.", "tokens": [50364, 407, 291, 600, 658, 29834, 411, 2699, 76, 318, 13, 47, 13, 32, 13, 597, 7829, 3028, 6677, 570, 321, 458, 437, 393, 1051, 13, 50764, 50764, 583, 754, 4084, 300, 3877, 10406, 437, 309, 393, 360, 13, 50964, 50964, 1079, 13, 400, 2699, 76, 318, 13, 47, 13, 32, 13, 767, 307, 257, 534, 665, 1365, 295, 341, 9432, 278, 6532, 570, 754, 1673, 833, 264, 13376, 11, 633, 3028, 307, 257, 6542, 11, 597, 307, 4498, 264, 912, 11, 300, 309, 575, 2105, 281, 264, 5507, 1785, 293, 309, 575, 2105, 281, 1080, 1065, 2654, 1785, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09703631539946621, "compression_ratio": 1.680327868852459, "no_caption_prob": 0.00020340755872894078}, {"id": 268, "seek": 158100, "start": 1589.0, "end": 1593.0, "text": " But even creating that structure limits what it can do.", "tokens": [50364, 407, 291, 600, 658, 29834, 411, 2699, 76, 318, 13, 47, 13, 32, 13, 597, 7829, 3028, 6677, 570, 321, 458, 437, 393, 1051, 13, 50764, 50764, 583, 754, 4084, 300, 3877, 10406, 437, 309, 393, 360, 13, 50964, 50964, 1079, 13, 400, 2699, 76, 318, 13, 47, 13, 32, 13, 767, 307, 257, 534, 665, 1365, 295, 341, 9432, 278, 6532, 570, 754, 1673, 833, 264, 13376, 11, 633, 3028, 307, 257, 6542, 11, 597, 307, 4498, 264, 912, 11, 300, 309, 575, 2105, 281, 264, 5507, 1785, 293, 309, 575, 2105, 281, 1080, 1065, 2654, 1785, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09703631539946621, "compression_ratio": 1.680327868852459, "no_caption_prob": 0.00020340755872894078}, {"id": 269, "seek": 158100, "start": 1593.0, "end": 1609.0, "text": " Yes. And Elm S.P.A. actually is a really good example of this narrowing technique because even though under the hood, every page is a component, which is fully the same, that it has access to the shared state and it has access to its own local state.", "tokens": [50364, 407, 291, 600, 658, 29834, 411, 2699, 76, 318, 13, 47, 13, 32, 13, 597, 7829, 3028, 6677, 570, 321, 458, 437, 393, 1051, 13, 50764, 50764, 583, 754, 4084, 300, 3877, 10406, 437, 309, 393, 360, 13, 50964, 50964, 1079, 13, 400, 2699, 76, 318, 13, 47, 13, 32, 13, 767, 307, 257, 534, 665, 1365, 295, 341, 9432, 278, 6532, 570, 754, 1673, 833, 264, 13376, 11, 633, 3028, 307, 257, 6542, 11, 597, 307, 4498, 264, 912, 11, 300, 309, 575, 2105, 281, 264, 5507, 1785, 293, 309, 575, 2105, 281, 1080, 1065, 2654, 1785, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09703631539946621, "compression_ratio": 1.680327868852459, "no_caption_prob": 0.00020340755872894078}, {"id": 270, "seek": 160900, "start": 1609.0, "end": 1611.0, "text": " And it has an init and it has an update.", "tokens": [50364, 400, 309, 575, 364, 3157, 293, 309, 575, 364, 5623, 13, 50464, 50464, 509, 393, 9432, 309, 538, 1228, 613, 1333, 295, 18587, 7690, 830, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 318, 13, 47, 13, 32, 13, 3500, 300, 291, 393, 584, 11, 4177, 11, 341, 307, 516, 281, 312, 257, 13437, 6542, 13, 51064, 51064, 467, 311, 445, 257, 1910, 13, 467, 1177, 380, 362, 604, 5623, 420, 1340, 13, 51214, 51214, 400, 586, 300, 6397, 1509, 428, 3164, 1901, 498, 291, 434, 1382, 281, 1223, 364, 2734, 420, 1382, 281, 1223, 577, 300, 3028, 1985, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06356292452130999, "compression_ratio": 1.6229508196721312, "no_caption_prob": 3.705100607476197e-05}, {"id": 271, "seek": 160900, "start": 1611.0, "end": 1623.0, "text": " You can narrow it by using these sort of simpler constructors, which we talked about in our Elm S.P.A. episode that you can say, hey, this is going to be a static component.", "tokens": [50364, 400, 309, 575, 364, 3157, 293, 309, 575, 364, 5623, 13, 50464, 50464, 509, 393, 9432, 309, 538, 1228, 613, 1333, 295, 18587, 7690, 830, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 318, 13, 47, 13, 32, 13, 3500, 300, 291, 393, 584, 11, 4177, 11, 341, 307, 516, 281, 312, 257, 13437, 6542, 13, 51064, 51064, 467, 311, 445, 257, 1910, 13, 467, 1177, 380, 362, 604, 5623, 420, 1340, 13, 51214, 51214, 400, 586, 300, 6397, 1509, 428, 3164, 1901, 498, 291, 434, 1382, 281, 1223, 364, 2734, 420, 1382, 281, 1223, 577, 300, 3028, 1985, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06356292452130999, "compression_ratio": 1.6229508196721312, "no_caption_prob": 3.705100607476197e-05}, {"id": 272, "seek": 160900, "start": 1623.0, "end": 1626.0, "text": " It's just a view. It doesn't have any update or anything.", "tokens": [50364, 400, 309, 575, 364, 3157, 293, 309, 575, 364, 5623, 13, 50464, 50464, 509, 393, 9432, 309, 538, 1228, 613, 1333, 295, 18587, 7690, 830, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 318, 13, 47, 13, 32, 13, 3500, 300, 291, 393, 584, 11, 4177, 11, 341, 307, 516, 281, 312, 257, 13437, 6542, 13, 51064, 51064, 467, 311, 445, 257, 1910, 13, 467, 1177, 380, 362, 604, 5623, 420, 1340, 13, 51214, 51214, 400, 586, 300, 6397, 1509, 428, 3164, 1901, 498, 291, 434, 1382, 281, 1223, 364, 2734, 420, 1382, 281, 1223, 577, 300, 3028, 1985, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06356292452130999, "compression_ratio": 1.6229508196721312, "no_caption_prob": 3.705100607476197e-05}, {"id": 273, "seek": 160900, "start": 1626.0, "end": 1633.0, "text": " And now that narrows your search space if you're trying to understand an issue or trying to understand how that page works.", "tokens": [50364, 400, 309, 575, 364, 3157, 293, 309, 575, 364, 5623, 13, 50464, 50464, 509, 393, 9432, 309, 538, 1228, 613, 1333, 295, 18587, 7690, 830, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 318, 13, 47, 13, 32, 13, 3500, 300, 291, 393, 584, 11, 4177, 11, 341, 307, 516, 281, 312, 257, 13437, 6542, 13, 51064, 51064, 467, 311, 445, 257, 1910, 13, 467, 1177, 380, 362, 604, 5623, 420, 1340, 13, 51214, 51214, 400, 586, 300, 6397, 1509, 428, 3164, 1901, 498, 291, 434, 1382, 281, 1223, 364, 2734, 420, 1382, 281, 1223, 577, 300, 3028, 1985, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06356292452130999, "compression_ratio": 1.6229508196721312, "no_caption_prob": 3.705100607476197e-05}, {"id": 274, "seek": 163300, "start": 1633.0, "end": 1639.0, "text": " But so, yeah, this idea of a matchmaker, I think, is very handy.", "tokens": [50364, 583, 370, 11, 1338, 11, 341, 1558, 295, 257, 2995, 18821, 11, 286, 519, 11, 307, 588, 13239, 13, 50664, 50664, 759, 746, 307, 15824, 990, 281, 257, 688, 295, 819, 3190, 11, 550, 309, 4659, 380, 312, 886, 4069, 337, 1080, 1065, 665, 13, 50964, 50964, 400, 498, 309, 307, 11, 550, 300, 311, 364, 2650, 281, 1333, 295, 7472, 3755, 484, 370, 309, 393, 445, 40999, 13, 51314, 51314, 663, 820, 312, 1080, 1691, 13, 51364, 51364, 3996, 551, 286, 536, 2737, 2171, 307, 1419, 613, 1333, 295, 7914, 295, 37765, 337, 613, 15824, 3391, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07079709744920917, "compression_ratio": 1.65, "no_caption_prob": 4.757315764436498e-05}, {"id": 275, "seek": 163300, "start": 1639.0, "end": 1645.0, "text": " If something is delegating to a lot of different places, then it shouldn't be too smart for its own good.", "tokens": [50364, 583, 370, 11, 1338, 11, 341, 1558, 295, 257, 2995, 18821, 11, 286, 519, 11, 307, 588, 13239, 13, 50664, 50664, 759, 746, 307, 15824, 990, 281, 257, 688, 295, 819, 3190, 11, 550, 309, 4659, 380, 312, 886, 4069, 337, 1080, 1065, 665, 13, 50964, 50964, 400, 498, 309, 307, 11, 550, 300, 311, 364, 2650, 281, 1333, 295, 7472, 3755, 484, 370, 309, 393, 445, 40999, 13, 51314, 51314, 663, 820, 312, 1080, 1691, 13, 51364, 51364, 3996, 551, 286, 536, 2737, 2171, 307, 1419, 613, 1333, 295, 7914, 295, 37765, 337, 613, 15824, 3391, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07079709744920917, "compression_ratio": 1.65, "no_caption_prob": 4.757315764436498e-05}, {"id": 276, "seek": 163300, "start": 1645.0, "end": 1652.0, "text": " And if it is, then that's an opportunity to sort of split pieces out so it can just delegate.", "tokens": [50364, 583, 370, 11, 1338, 11, 341, 1558, 295, 257, 2995, 18821, 11, 286, 519, 11, 307, 588, 13239, 13, 50664, 50664, 759, 746, 307, 15824, 990, 281, 257, 688, 295, 819, 3190, 11, 550, 309, 4659, 380, 312, 886, 4069, 337, 1080, 1065, 665, 13, 50964, 50964, 400, 498, 309, 307, 11, 550, 300, 311, 364, 2650, 281, 1333, 295, 7472, 3755, 484, 370, 309, 393, 445, 40999, 13, 51314, 51314, 663, 820, 312, 1080, 1691, 13, 51364, 51364, 3996, 551, 286, 536, 2737, 2171, 307, 1419, 613, 1333, 295, 7914, 295, 37765, 337, 613, 15824, 3391, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07079709744920917, "compression_ratio": 1.65, "no_caption_prob": 4.757315764436498e-05}, {"id": 277, "seek": 163300, "start": 1652.0, "end": 1653.0, "text": " That should be its job.", "tokens": [50364, 583, 370, 11, 1338, 11, 341, 1558, 295, 257, 2995, 18821, 11, 286, 519, 11, 307, 588, 13239, 13, 50664, 50664, 759, 746, 307, 15824, 990, 281, 257, 688, 295, 819, 3190, 11, 550, 309, 4659, 380, 312, 886, 4069, 337, 1080, 1065, 665, 13, 50964, 50964, 400, 498, 309, 307, 11, 550, 300, 311, 364, 2650, 281, 1333, 295, 7472, 3755, 484, 370, 309, 393, 445, 40999, 13, 51314, 51314, 663, 820, 312, 1080, 1691, 13, 51364, 51364, 3996, 551, 286, 536, 2737, 2171, 307, 1419, 613, 1333, 295, 7914, 295, 37765, 337, 613, 15824, 3391, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07079709744920917, "compression_ratio": 1.65, "no_caption_prob": 4.757315764436498e-05}, {"id": 278, "seek": 163300, "start": 1653.0, "end": 1660.0, "text": " Another thing I see happening sometimes is having these sort of layers of abstraction for these delegators.", "tokens": [50364, 583, 370, 11, 1338, 11, 341, 1558, 295, 257, 2995, 18821, 11, 286, 519, 11, 307, 588, 13239, 13, 50664, 50664, 759, 746, 307, 15824, 990, 281, 257, 688, 295, 819, 3190, 11, 550, 309, 4659, 380, 312, 886, 4069, 337, 1080, 1065, 665, 13, 50964, 50964, 400, 498, 309, 307, 11, 550, 300, 311, 364, 2650, 281, 1333, 295, 7472, 3755, 484, 370, 309, 393, 445, 40999, 13, 51314, 51314, 663, 820, 312, 1080, 1691, 13, 51364, 51364, 3996, 551, 286, 536, 2737, 2171, 307, 1419, 613, 1333, 295, 7914, 295, 37765, 337, 613, 15824, 3391, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07079709744920917, "compression_ratio": 1.65, "no_caption_prob": 4.757315764436498e-05}, {"id": 279, "seek": 166000, "start": 1660.0, "end": 1671.0, "text": " So having like a, you know, you've got your page component for the main page, but then you've got some sort of abstraction around handling some part of the state.", "tokens": [50364, 407, 1419, 411, 257, 11, 291, 458, 11, 291, 600, 658, 428, 3028, 6542, 337, 264, 2135, 3028, 11, 457, 550, 291, 600, 658, 512, 1333, 295, 37765, 926, 13175, 512, 644, 295, 264, 1785, 13, 50914, 50914, 400, 309, 311, 658, 1080, 1065, 7897, 293, 9205, 300, 311, 445, 15824, 990, 11, 457, 309, 311, 406, 534, 884, 1340, 2564, 13, 51264, 51264, 467, 311, 1333, 295, 15824, 990, 13, 51364, 51364, 286, 478, 406, 988, 286, 1524, 13, 1664, 291, 976, 385, 364, 1365, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07903093296092945, "compression_ratio": 1.599078341013825, "no_caption_prob": 9.914897236740217e-05}, {"id": 280, "seek": 166000, "start": 1671.0, "end": 1678.0, "text": " And it's got its own messages and updates that's just delegating, but it's not really doing anything itself.", "tokens": [50364, 407, 1419, 411, 257, 11, 291, 458, 11, 291, 600, 658, 428, 3028, 6542, 337, 264, 2135, 3028, 11, 457, 550, 291, 600, 658, 512, 1333, 295, 37765, 926, 13175, 512, 644, 295, 264, 1785, 13, 50914, 50914, 400, 309, 311, 658, 1080, 1065, 7897, 293, 9205, 300, 311, 445, 15824, 990, 11, 457, 309, 311, 406, 534, 884, 1340, 2564, 13, 51264, 51264, 467, 311, 1333, 295, 15824, 990, 13, 51364, 51364, 286, 478, 406, 988, 286, 1524, 13, 1664, 291, 976, 385, 364, 1365, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07903093296092945, "compression_ratio": 1.599078341013825, "no_caption_prob": 9.914897236740217e-05}, {"id": 281, "seek": 166000, "start": 1678.0, "end": 1680.0, "text": " It's sort of delegating.", "tokens": [50364, 407, 1419, 411, 257, 11, 291, 458, 11, 291, 600, 658, 428, 3028, 6542, 337, 264, 2135, 3028, 11, 457, 550, 291, 600, 658, 512, 1333, 295, 37765, 926, 13175, 512, 644, 295, 264, 1785, 13, 50914, 50914, 400, 309, 311, 658, 1080, 1065, 7897, 293, 9205, 300, 311, 445, 15824, 990, 11, 457, 309, 311, 406, 534, 884, 1340, 2564, 13, 51264, 51264, 467, 311, 1333, 295, 15824, 990, 13, 51364, 51364, 286, 478, 406, 988, 286, 1524, 13, 1664, 291, 976, 385, 364, 1365, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07903093296092945, "compression_ratio": 1.599078341013825, "no_caption_prob": 9.914897236740217e-05}, {"id": 282, "seek": 166000, "start": 1680.0, "end": 1684.0, "text": " I'm not sure I follow. Can you give me an example?", "tokens": [50364, 407, 1419, 411, 257, 11, 291, 458, 11, 291, 600, 658, 428, 3028, 6542, 337, 264, 2135, 3028, 11, 457, 550, 291, 600, 658, 512, 1333, 295, 37765, 926, 13175, 512, 644, 295, 264, 1785, 13, 50914, 50914, 400, 309, 311, 658, 1080, 1065, 7897, 293, 9205, 300, 311, 445, 15824, 990, 11, 457, 309, 311, 406, 534, 884, 1340, 2564, 13, 51264, 51264, 467, 311, 1333, 295, 15824, 990, 13, 51364, 51364, 286, 478, 406, 988, 286, 1524, 13, 1664, 291, 976, 385, 364, 1365, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07903093296092945, "compression_ratio": 1.599078341013825, "no_caption_prob": 9.914897236740217e-05}, {"id": 283, "seek": 168400, "start": 1684.0, "end": 1697.0, "text": " So I've seen an example with a sort of page wizard state that that page wizard state has this sort of this flow where these, you know, it's changing to different steps and it's sort of delegating.", "tokens": [50364, 407, 286, 600, 1612, 364, 1365, 365, 257, 1333, 295, 3028, 25807, 1785, 300, 300, 3028, 25807, 1785, 575, 341, 1333, 295, 341, 3095, 689, 613, 11, 291, 458, 11, 309, 311, 4473, 281, 819, 4439, 293, 309, 311, 1333, 295, 15824, 990, 13, 51014, 51014, 583, 309, 311, 1333, 295, 1940, 341, 6357, 337, 411, 644, 295, 264, 1785, 293, 309, 311, 33028, 309, 760, 13, 51314, 51314, 400, 291, 534, 500, 380, 528, 300, 36602, 281, 352, 807, 886, 867, 819, 7914, 13, 51514, 51514, 407, 309, 311, 534, 341, 1333, 295, 12686, 5717, 32122, 1333, 295, 551, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06055521737961542, "compression_ratio": 1.848360655737705, "no_caption_prob": 0.00010554007167229429}, {"id": 284, "seek": 168400, "start": 1697.0, "end": 1703.0, "text": " But it's sort of taking this responsibility for like part of the state and it's watering it down.", "tokens": [50364, 407, 286, 600, 1612, 364, 1365, 365, 257, 1333, 295, 3028, 25807, 1785, 300, 300, 3028, 25807, 1785, 575, 341, 1333, 295, 341, 3095, 689, 613, 11, 291, 458, 11, 309, 311, 4473, 281, 819, 4439, 293, 309, 311, 1333, 295, 15824, 990, 13, 51014, 51014, 583, 309, 311, 1333, 295, 1940, 341, 6357, 337, 411, 644, 295, 264, 1785, 293, 309, 311, 33028, 309, 760, 13, 51314, 51314, 400, 291, 534, 500, 380, 528, 300, 36602, 281, 352, 807, 886, 867, 819, 7914, 13, 51514, 51514, 407, 309, 311, 534, 341, 1333, 295, 12686, 5717, 32122, 1333, 295, 551, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06055521737961542, "compression_ratio": 1.848360655737705, "no_caption_prob": 0.00010554007167229429}, {"id": 285, "seek": 168400, "start": 1703.0, "end": 1707.0, "text": " And you really don't want that delegation to go through too many different layers.", "tokens": [50364, 407, 286, 600, 1612, 364, 1365, 365, 257, 1333, 295, 3028, 25807, 1785, 300, 300, 3028, 25807, 1785, 575, 341, 1333, 295, 341, 3095, 689, 613, 11, 291, 458, 11, 309, 311, 4473, 281, 819, 4439, 293, 309, 311, 1333, 295, 15824, 990, 13, 51014, 51014, 583, 309, 311, 1333, 295, 1940, 341, 6357, 337, 411, 644, 295, 264, 1785, 293, 309, 311, 33028, 309, 760, 13, 51314, 51314, 400, 291, 534, 500, 380, 528, 300, 36602, 281, 352, 807, 886, 867, 819, 7914, 13, 51514, 51514, 407, 309, 311, 534, 341, 1333, 295, 12686, 5717, 32122, 1333, 295, 551, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06055521737961542, "compression_ratio": 1.848360655737705, "no_caption_prob": 0.00010554007167229429}, {"id": 286, "seek": 168400, "start": 1707.0, "end": 1713.0, "text": " So it's really this sort of composition versus inheritance sort of thing.", "tokens": [50364, 407, 286, 600, 1612, 364, 1365, 365, 257, 1333, 295, 3028, 25807, 1785, 300, 300, 3028, 25807, 1785, 575, 341, 1333, 295, 341, 3095, 689, 613, 11, 291, 458, 11, 309, 311, 4473, 281, 819, 4439, 293, 309, 311, 1333, 295, 15824, 990, 13, 51014, 51014, 583, 309, 311, 1333, 295, 1940, 341, 6357, 337, 411, 644, 295, 264, 1785, 293, 309, 311, 33028, 309, 760, 13, 51314, 51314, 400, 291, 534, 500, 380, 528, 300, 36602, 281, 352, 807, 886, 867, 819, 7914, 13, 51514, 51514, 407, 309, 311, 534, 341, 1333, 295, 12686, 5717, 32122, 1333, 295, 551, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06055521737961542, "compression_ratio": 1.848360655737705, "no_caption_prob": 0.00010554007167229429}, {"id": 287, "seek": 171300, "start": 1713.0, "end": 1715.0, "text": " Like you want to compose together.", "tokens": [50364, 1743, 291, 528, 281, 35925, 1214, 13, 50464, 50464, 1743, 562, 291, 40999, 11, 291, 528, 281, 312, 15824, 990, 412, 264, 1333, 295, 1192, 1496, 295, 257, 3028, 13, 50714, 50714, 759, 291, 434, 15824, 990, 1951, 613, 7914, 295, 37765, 11, 550, 437, 2314, 307, 309, 3643, 534, 1152, 281, 13508, 689, 7897, 366, 1348, 490, 13, 51114, 51114, 509, 458, 11, 362, 291, 1562, 1612, 341, 294, 364, 3861, 689, 291, 434, 445, 411, 11, 2264, 11, 1699, 257, 3456, 13, 51314, 51314, 407, 341, 3636, 1361, 490, 510, 11, 457, 689, 630, 300, 808, 490, 293, 577, 307, 300, 1242, 21710, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.04264731840653853, "compression_ratio": 1.7030075187969924, "no_caption_prob": 6.401779683073983e-05}, {"id": 288, "seek": 171300, "start": 1715.0, "end": 1720.0, "text": " Like when you delegate, you want to be delegating at the sort of top level of a page.", "tokens": [50364, 1743, 291, 528, 281, 35925, 1214, 13, 50464, 50464, 1743, 562, 291, 40999, 11, 291, 528, 281, 312, 15824, 990, 412, 264, 1333, 295, 1192, 1496, 295, 257, 3028, 13, 50714, 50714, 759, 291, 434, 15824, 990, 1951, 613, 7914, 295, 37765, 11, 550, 437, 2314, 307, 309, 3643, 534, 1152, 281, 13508, 689, 7897, 366, 1348, 490, 13, 51114, 51114, 509, 458, 11, 362, 291, 1562, 1612, 341, 294, 364, 3861, 689, 291, 434, 445, 411, 11, 2264, 11, 1699, 257, 3456, 13, 51314, 51314, 407, 341, 3636, 1361, 490, 510, 11, 457, 689, 630, 300, 808, 490, 293, 577, 307, 300, 1242, 21710, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.04264731840653853, "compression_ratio": 1.7030075187969924, "no_caption_prob": 6.401779683073983e-05}, {"id": 289, "seek": 171300, "start": 1720.0, "end": 1728.0, "text": " If you're delegating within these layers of abstraction, then what happens is it becomes really hard to trace where messages are coming from.", "tokens": [50364, 1743, 291, 528, 281, 35925, 1214, 13, 50464, 50464, 1743, 562, 291, 40999, 11, 291, 528, 281, 312, 15824, 990, 412, 264, 1333, 295, 1192, 1496, 295, 257, 3028, 13, 50714, 50714, 759, 291, 434, 15824, 990, 1951, 613, 7914, 295, 37765, 11, 550, 437, 2314, 307, 309, 3643, 534, 1152, 281, 13508, 689, 7897, 366, 1348, 490, 13, 51114, 51114, 509, 458, 11, 362, 291, 1562, 1612, 341, 294, 364, 3861, 689, 291, 434, 445, 411, 11, 2264, 11, 1699, 257, 3456, 13, 51314, 51314, 407, 341, 3636, 1361, 490, 510, 11, 457, 689, 630, 300, 808, 490, 293, 577, 307, 300, 1242, 21710, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.04264731840653853, "compression_ratio": 1.7030075187969924, "no_caption_prob": 6.401779683073983e-05}, {"id": 290, "seek": 171300, "start": 1728.0, "end": 1732.0, "text": " You know, have you ever seen this in an application where you're just like, OK, wait a minute.", "tokens": [50364, 1743, 291, 528, 281, 35925, 1214, 13, 50464, 50464, 1743, 562, 291, 40999, 11, 291, 528, 281, 312, 15824, 990, 412, 264, 1333, 295, 1192, 1496, 295, 257, 3028, 13, 50714, 50714, 759, 291, 434, 15824, 990, 1951, 613, 7914, 295, 37765, 11, 550, 437, 2314, 307, 309, 3643, 534, 1152, 281, 13508, 689, 7897, 366, 1348, 490, 13, 51114, 51114, 509, 458, 11, 362, 291, 1562, 1612, 341, 294, 364, 3861, 689, 291, 434, 445, 411, 11, 2264, 11, 1699, 257, 3456, 13, 51314, 51314, 407, 341, 3636, 1361, 490, 510, 11, 457, 689, 630, 300, 808, 490, 293, 577, 307, 300, 1242, 21710, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.04264731840653853, "compression_ratio": 1.7030075187969924, "no_caption_prob": 6.401779683073983e-05}, {"id": 291, "seek": 171300, "start": 1732.0, "end": 1737.0, "text": " So this message came from here, but where did that come from and how is that getting triggered?", "tokens": [50364, 1743, 291, 528, 281, 35925, 1214, 13, 50464, 50464, 1743, 562, 291, 40999, 11, 291, 528, 281, 312, 15824, 990, 412, 264, 1333, 295, 1192, 1496, 295, 257, 3028, 13, 50714, 50714, 759, 291, 434, 15824, 990, 1951, 613, 7914, 295, 37765, 11, 550, 437, 2314, 307, 309, 3643, 534, 1152, 281, 13508, 689, 7897, 366, 1348, 490, 13, 51114, 51114, 509, 458, 11, 362, 291, 1562, 1612, 341, 294, 364, 3861, 689, 291, 434, 445, 411, 11, 2264, 11, 1699, 257, 3456, 13, 51314, 51314, 407, 341, 3636, 1361, 490, 510, 11, 457, 689, 630, 300, 808, 490, 293, 577, 307, 300, 1242, 21710, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.04264731840653853, "compression_ratio": 1.7030075187969924, "no_caption_prob": 6.401779683073983e-05}, {"id": 292, "seek": 173700, "start": 1737.0, "end": 1744.0, "text": " And so you want those sort of connections to be going through as few layers of indirection as possible.", "tokens": [50364, 400, 370, 291, 528, 729, 1333, 295, 9271, 281, 312, 516, 807, 382, 1326, 7914, 295, 1016, 621, 882, 382, 1944, 13, 50714, 50714, 509, 528, 309, 281, 312, 544, 4962, 294, 300, 3843, 13, 50864, 50864, 400, 12686, 3665, 291, 360, 721, 294, 257, 41247, 636, 13, 51014, 51014, 509, 611, 528, 309, 281, 312, 4963, 13, 51164, 51164, 1743, 321, 362, 264, 2699, 76, 9482, 689, 321, 2673, 362, 729, 6828, 300, 362, 264, 912, 32322, 13, 51414, 51414, 400, 562, 436, 360, 11, 300, 311, 869, 570, 436, 434, 4963, 281, 505, 293, 321, 393, 1319, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07943985348656064, "compression_ratio": 1.7195121951219512, "no_caption_prob": 7.031009590718895e-05}, {"id": 293, "seek": 173700, "start": 1744.0, "end": 1747.0, "text": " You want it to be more flat in that regard.", "tokens": [50364, 400, 370, 291, 528, 729, 1333, 295, 9271, 281, 312, 516, 807, 382, 1326, 7914, 295, 1016, 621, 882, 382, 1944, 13, 50714, 50714, 509, 528, 309, 281, 312, 544, 4962, 294, 300, 3843, 13, 50864, 50864, 400, 12686, 3665, 291, 360, 721, 294, 257, 41247, 636, 13, 51014, 51014, 509, 611, 528, 309, 281, 312, 4963, 13, 51164, 51164, 1743, 321, 362, 264, 2699, 76, 9482, 689, 321, 2673, 362, 729, 6828, 300, 362, 264, 912, 32322, 13, 51414, 51414, 400, 562, 436, 360, 11, 300, 311, 869, 570, 436, 434, 4963, 281, 505, 293, 321, 393, 1319, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07943985348656064, "compression_ratio": 1.7195121951219512, "no_caption_prob": 7.031009590718895e-05}, {"id": 294, "seek": 173700, "start": 1747.0, "end": 1750.0, "text": " And composition helps you do things in a flatter way.", "tokens": [50364, 400, 370, 291, 528, 729, 1333, 295, 9271, 281, 312, 516, 807, 382, 1326, 7914, 295, 1016, 621, 882, 382, 1944, 13, 50714, 50714, 509, 528, 309, 281, 312, 544, 4962, 294, 300, 3843, 13, 50864, 50864, 400, 12686, 3665, 291, 360, 721, 294, 257, 41247, 636, 13, 51014, 51014, 509, 611, 528, 309, 281, 312, 4963, 13, 51164, 51164, 1743, 321, 362, 264, 2699, 76, 9482, 689, 321, 2673, 362, 729, 6828, 300, 362, 264, 912, 32322, 13, 51414, 51414, 400, 562, 436, 360, 11, 300, 311, 869, 570, 436, 434, 4963, 281, 505, 293, 321, 393, 1319, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07943985348656064, "compression_ratio": 1.7195121951219512, "no_caption_prob": 7.031009590718895e-05}, {"id": 295, "seek": 173700, "start": 1750.0, "end": 1753.0, "text": " You also want it to be familiar.", "tokens": [50364, 400, 370, 291, 528, 729, 1333, 295, 9271, 281, 312, 516, 807, 382, 1326, 7914, 295, 1016, 621, 882, 382, 1944, 13, 50714, 50714, 509, 528, 309, 281, 312, 544, 4962, 294, 300, 3843, 13, 50864, 50864, 400, 12686, 3665, 291, 360, 721, 294, 257, 41247, 636, 13, 51014, 51014, 509, 611, 528, 309, 281, 312, 4963, 13, 51164, 51164, 1743, 321, 362, 264, 2699, 76, 9482, 689, 321, 2673, 362, 729, 6828, 300, 362, 264, 912, 32322, 13, 51414, 51414, 400, 562, 436, 360, 11, 300, 311, 869, 570, 436, 434, 4963, 281, 505, 293, 321, 393, 1319, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07943985348656064, "compression_ratio": 1.7195121951219512, "no_caption_prob": 7.031009590718895e-05}, {"id": 296, "seek": 173700, "start": 1753.0, "end": 1758.0, "text": " Like we have the Elm architecture where we usually have those functions that have the same signatures.", "tokens": [50364, 400, 370, 291, 528, 729, 1333, 295, 9271, 281, 312, 516, 807, 382, 1326, 7914, 295, 1016, 621, 882, 382, 1944, 13, 50714, 50714, 509, 528, 309, 281, 312, 544, 4962, 294, 300, 3843, 13, 50864, 50864, 400, 12686, 3665, 291, 360, 721, 294, 257, 41247, 636, 13, 51014, 51014, 509, 611, 528, 309, 281, 312, 4963, 13, 51164, 51164, 1743, 321, 362, 264, 2699, 76, 9482, 689, 321, 2673, 362, 729, 6828, 300, 362, 264, 912, 32322, 13, 51414, 51414, 400, 562, 436, 360, 11, 300, 311, 869, 570, 436, 434, 4963, 281, 505, 293, 321, 393, 1319, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07943985348656064, "compression_ratio": 1.7195121951219512, "no_caption_prob": 7.031009590718895e-05}, {"id": 297, "seek": 173700, "start": 1758.0, "end": 1764.0, "text": " And when they do, that's great because they're familiar to us and we can change them.", "tokens": [50364, 400, 370, 291, 528, 729, 1333, 295, 9271, 281, 312, 516, 807, 382, 1326, 7914, 295, 1016, 621, 882, 382, 1944, 13, 50714, 50714, 509, 528, 309, 281, 312, 544, 4962, 294, 300, 3843, 13, 50864, 50864, 400, 12686, 3665, 291, 360, 721, 294, 257, 41247, 636, 13, 51014, 51014, 509, 611, 528, 309, 281, 312, 4963, 13, 51164, 51164, 1743, 321, 362, 264, 2699, 76, 9482, 689, 321, 2673, 362, 729, 6828, 300, 362, 264, 912, 32322, 13, 51414, 51414, 400, 562, 436, 360, 11, 300, 311, 869, 570, 436, 434, 4963, 281, 505, 293, 321, 393, 1319, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07943985348656064, "compression_ratio": 1.7195121951219512, "no_caption_prob": 7.031009590718895e-05}, {"id": 298, "seek": 176400, "start": 1764.0, "end": 1767.0, "text": " If possible, it's nice to avoid that.", "tokens": [50364, 759, 1944, 11, 309, 311, 1481, 281, 5042, 300, 13, 50514, 50514, 1779, 13, 286, 519, 300, 456, 311, 257, 644, 295, 505, 382, 41504, 300, 321, 536, 439, 613, 819, 11, 341, 37277, 9889, 295, 439, 613, 819, 2445, 32322, 13, 50964, 50964, 11495, 10656, 613, 819, 721, 13, 639, 472, 311, 12678, 257, 2316, 13, 51114, 51114, 639, 472, 311, 12678, 257, 2316, 5622, 2604, 781, 13, 51314, 51314, 639, 472, 307, 445, 12678, 364, 3796, 2985, 13, 51464, 51464, 639, 472, 311, 12678, 257, 1874, 3796, 2985, 365, 24071, 13603, 13, 51664, 51664, 492, 434, 411, 11, 341, 1177, 380, 841, 558, 13, 509, 458, 11, 309, 1116, 312, 534, 1481, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08584136321765035, "compression_ratio": 1.9268292682926829, "no_caption_prob": 5.828497160109691e-05}, {"id": 299, "seek": 176400, "start": 1767.0, "end": 1776.0, "text": " Right. I think that there's a part of us as programmers that we see all these different, this asymmetry of all these different function signatures.", "tokens": [50364, 759, 1944, 11, 309, 311, 1481, 281, 5042, 300, 13, 50514, 50514, 1779, 13, 286, 519, 300, 456, 311, 257, 644, 295, 505, 382, 41504, 300, 321, 536, 439, 613, 819, 11, 341, 37277, 9889, 295, 439, 613, 819, 2445, 32322, 13, 50964, 50964, 11495, 10656, 613, 819, 721, 13, 639, 472, 311, 12678, 257, 2316, 13, 51114, 51114, 639, 472, 311, 12678, 257, 2316, 5622, 2604, 781, 13, 51314, 51314, 639, 472, 307, 445, 12678, 364, 3796, 2985, 13, 51464, 51464, 639, 472, 311, 12678, 257, 1874, 3796, 2985, 365, 24071, 13603, 13, 51664, 51664, 492, 434, 411, 11, 341, 1177, 380, 841, 558, 13, 509, 458, 11, 309, 1116, 312, 534, 1481, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08584136321765035, "compression_ratio": 1.9268292682926829, "no_caption_prob": 5.828497160109691e-05}, {"id": 300, "seek": 176400, "start": 1776.0, "end": 1779.0, "text": " Returning these different things. This one's returning a model.", "tokens": [50364, 759, 1944, 11, 309, 311, 1481, 281, 5042, 300, 13, 50514, 50514, 1779, 13, 286, 519, 300, 456, 311, 257, 644, 295, 505, 382, 41504, 300, 321, 536, 439, 613, 819, 11, 341, 37277, 9889, 295, 439, 613, 819, 2445, 32322, 13, 50964, 50964, 11495, 10656, 613, 819, 721, 13, 639, 472, 311, 12678, 257, 2316, 13, 51114, 51114, 639, 472, 311, 12678, 257, 2316, 5622, 2604, 781, 13, 51314, 51314, 639, 472, 307, 445, 12678, 364, 3796, 2985, 13, 51464, 51464, 639, 472, 311, 12678, 257, 1874, 3796, 2985, 365, 24071, 13603, 13, 51664, 51664, 492, 434, 411, 11, 341, 1177, 380, 841, 558, 13, 509, 458, 11, 309, 1116, 312, 534, 1481, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08584136321765035, "compression_ratio": 1.9268292682926829, "no_caption_prob": 5.828497160109691e-05}, {"id": 301, "seek": 176400, "start": 1779.0, "end": 1783.0, "text": " This one's returning a model command tuple.", "tokens": [50364, 759, 1944, 11, 309, 311, 1481, 281, 5042, 300, 13, 50514, 50514, 1779, 13, 286, 519, 300, 456, 311, 257, 644, 295, 505, 382, 41504, 300, 321, 536, 439, 613, 819, 11, 341, 37277, 9889, 295, 439, 613, 819, 2445, 32322, 13, 50964, 50964, 11495, 10656, 613, 819, 721, 13, 639, 472, 311, 12678, 257, 2316, 13, 51114, 51114, 639, 472, 311, 12678, 257, 2316, 5622, 2604, 781, 13, 51314, 51314, 639, 472, 307, 445, 12678, 364, 3796, 2985, 13, 51464, 51464, 639, 472, 311, 12678, 257, 1874, 3796, 2985, 365, 24071, 13603, 13, 51664, 51664, 492, 434, 411, 11, 341, 1177, 380, 841, 558, 13, 509, 458, 11, 309, 1116, 312, 534, 1481, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08584136321765035, "compression_ratio": 1.9268292682926829, "no_caption_prob": 5.828497160109691e-05}, {"id": 302, "seek": 176400, "start": 1783.0, "end": 1786.0, "text": " This one is just returning an email address.", "tokens": [50364, 759, 1944, 11, 309, 311, 1481, 281, 5042, 300, 13, 50514, 50514, 1779, 13, 286, 519, 300, 456, 311, 257, 644, 295, 505, 382, 41504, 300, 321, 536, 439, 613, 819, 11, 341, 37277, 9889, 295, 439, 613, 819, 2445, 32322, 13, 50964, 50964, 11495, 10656, 613, 819, 721, 13, 639, 472, 311, 12678, 257, 2316, 13, 51114, 51114, 639, 472, 311, 12678, 257, 2316, 5622, 2604, 781, 13, 51314, 51314, 639, 472, 307, 445, 12678, 364, 3796, 2985, 13, 51464, 51464, 639, 472, 311, 12678, 257, 1874, 3796, 2985, 365, 24071, 13603, 13, 51664, 51664, 492, 434, 411, 11, 341, 1177, 380, 841, 558, 13, 509, 458, 11, 309, 1116, 312, 534, 1481, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08584136321765035, "compression_ratio": 1.9268292682926829, "no_caption_prob": 5.828497160109691e-05}, {"id": 303, "seek": 176400, "start": 1786.0, "end": 1790.0, "text": " This one's returning a result email address with validation errors.", "tokens": [50364, 759, 1944, 11, 309, 311, 1481, 281, 5042, 300, 13, 50514, 50514, 1779, 13, 286, 519, 300, 456, 311, 257, 644, 295, 505, 382, 41504, 300, 321, 536, 439, 613, 819, 11, 341, 37277, 9889, 295, 439, 613, 819, 2445, 32322, 13, 50964, 50964, 11495, 10656, 613, 819, 721, 13, 639, 472, 311, 12678, 257, 2316, 13, 51114, 51114, 639, 472, 311, 12678, 257, 2316, 5622, 2604, 781, 13, 51314, 51314, 639, 472, 307, 445, 12678, 364, 3796, 2985, 13, 51464, 51464, 639, 472, 311, 12678, 257, 1874, 3796, 2985, 365, 24071, 13603, 13, 51664, 51664, 492, 434, 411, 11, 341, 1177, 380, 841, 558, 13, 509, 458, 11, 309, 1116, 312, 534, 1481, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08584136321765035, "compression_ratio": 1.9268292682926829, "no_caption_prob": 5.828497160109691e-05}, {"id": 304, "seek": 176400, "start": 1790.0, "end": 1792.0, "text": " We're like, this doesn't feel right. You know, it'd be really nice.", "tokens": [50364, 759, 1944, 11, 309, 311, 1481, 281, 5042, 300, 13, 50514, 50514, 1779, 13, 286, 519, 300, 456, 311, 257, 644, 295, 505, 382, 41504, 300, 321, 536, 439, 613, 819, 11, 341, 37277, 9889, 295, 439, 613, 819, 2445, 32322, 13, 50964, 50964, 11495, 10656, 613, 819, 721, 13, 639, 472, 311, 12678, 257, 2316, 13, 51114, 51114, 639, 472, 311, 12678, 257, 2316, 5622, 2604, 781, 13, 51314, 51314, 639, 472, 307, 445, 12678, 364, 3796, 2985, 13, 51464, 51464, 639, 472, 311, 12678, 257, 1874, 3796, 2985, 365, 24071, 13603, 13, 51664, 51664, 492, 434, 411, 11, 341, 1177, 380, 841, 558, 13, 509, 458, 11, 309, 1116, 312, 534, 1481, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08584136321765035, "compression_ratio": 1.9268292682926829, "no_caption_prob": 5.828497160109691e-05}, {"id": 305, "seek": 179200, "start": 1792.0, "end": 1797.0, "text": " What if these were all uniform? What if they all just returned a model command message?", "tokens": [50364, 708, 498, 613, 645, 439, 9452, 30, 708, 498, 436, 439, 445, 8752, 257, 2316, 5622, 3636, 30, 50614, 50614, 26291, 380, 300, 312, 869, 30, 50664, 50664, 1042, 11, 18633, 13, 50764, 50814, 29524, 484, 309, 1062, 406, 312, 300, 869, 13, 50914, 50914, 407, 341, 411, 7516, 281, 362, 9452, 507, 2171, 13451, 505, 731, 13, 51164, 51164, 583, 294, 341, 1729, 1389, 11, 291, 362, 281, 1066, 294, 1575, 341, 8546, 295, 437, 775, 300, 360, 294, 2115, 295, 264, 2063, 295, 2654, 21577, 293, 885, 1075, 281, 13819, 12178, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1009318293357382, "compression_ratio": 1.6032388663967612, "no_caption_prob": 4.683753286371939e-05}, {"id": 306, "seek": 179200, "start": 1797.0, "end": 1798.0, "text": " Wouldn't that be great?", "tokens": [50364, 708, 498, 613, 645, 439, 9452, 30, 708, 498, 436, 439, 445, 8752, 257, 2316, 5622, 3636, 30, 50614, 50614, 26291, 380, 300, 312, 869, 30, 50664, 50664, 1042, 11, 18633, 13, 50764, 50814, 29524, 484, 309, 1062, 406, 312, 300, 869, 13, 50914, 50914, 407, 341, 411, 7516, 281, 362, 9452, 507, 2171, 13451, 505, 731, 13, 51164, 51164, 583, 294, 341, 1729, 1389, 11, 291, 362, 281, 1066, 294, 1575, 341, 8546, 295, 437, 775, 300, 360, 294, 2115, 295, 264, 2063, 295, 2654, 21577, 293, 885, 1075, 281, 13819, 12178, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1009318293357382, "compression_ratio": 1.6032388663967612, "no_caption_prob": 4.683753286371939e-05}, {"id": 307, "seek": 179200, "start": 1798.0, "end": 1800.0, "text": " Well, yep.", "tokens": [50364, 708, 498, 613, 645, 439, 9452, 30, 708, 498, 436, 439, 445, 8752, 257, 2316, 5622, 3636, 30, 50614, 50614, 26291, 380, 300, 312, 869, 30, 50664, 50664, 1042, 11, 18633, 13, 50764, 50814, 29524, 484, 309, 1062, 406, 312, 300, 869, 13, 50914, 50914, 407, 341, 411, 7516, 281, 362, 9452, 507, 2171, 13451, 505, 731, 13, 51164, 51164, 583, 294, 341, 1729, 1389, 11, 291, 362, 281, 1066, 294, 1575, 341, 8546, 295, 437, 775, 300, 360, 294, 2115, 295, 264, 2063, 295, 2654, 21577, 293, 885, 1075, 281, 13819, 12178, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1009318293357382, "compression_ratio": 1.6032388663967612, "no_caption_prob": 4.683753286371939e-05}, {"id": 308, "seek": 179200, "start": 1801.0, "end": 1803.0, "text": " Turns out it might not be that great.", "tokens": [50364, 708, 498, 613, 645, 439, 9452, 30, 708, 498, 436, 439, 445, 8752, 257, 2316, 5622, 3636, 30, 50614, 50614, 26291, 380, 300, 312, 869, 30, 50664, 50664, 1042, 11, 18633, 13, 50764, 50814, 29524, 484, 309, 1062, 406, 312, 300, 869, 13, 50914, 50914, 407, 341, 411, 7516, 281, 362, 9452, 507, 2171, 13451, 505, 731, 13, 51164, 51164, 583, 294, 341, 1729, 1389, 11, 291, 362, 281, 1066, 294, 1575, 341, 8546, 295, 437, 775, 300, 360, 294, 2115, 295, 264, 2063, 295, 2654, 21577, 293, 885, 1075, 281, 13819, 12178, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1009318293357382, "compression_ratio": 1.6032388663967612, "no_caption_prob": 4.683753286371939e-05}, {"id": 309, "seek": 179200, "start": 1803.0, "end": 1808.0, "text": " So this like desire to have uniformity sometimes serves us well.", "tokens": [50364, 708, 498, 613, 645, 439, 9452, 30, 708, 498, 436, 439, 445, 8752, 257, 2316, 5622, 3636, 30, 50614, 50614, 26291, 380, 300, 312, 869, 30, 50664, 50664, 1042, 11, 18633, 13, 50764, 50814, 29524, 484, 309, 1062, 406, 312, 300, 869, 13, 50914, 50914, 407, 341, 411, 7516, 281, 362, 9452, 507, 2171, 13451, 505, 731, 13, 51164, 51164, 583, 294, 341, 1729, 1389, 11, 291, 362, 281, 1066, 294, 1575, 341, 8546, 295, 437, 775, 300, 360, 294, 2115, 295, 264, 2063, 295, 2654, 21577, 293, 885, 1075, 281, 13819, 12178, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1009318293357382, "compression_ratio": 1.6032388663967612, "no_caption_prob": 4.683753286371939e-05}, {"id": 310, "seek": 179200, "start": 1808.0, "end": 1819.0, "text": " But in this particular case, you have to keep in mind this dynamic of what does that do in terms of the cost of local reasoning and being able to eliminate possibilities.", "tokens": [50364, 708, 498, 613, 645, 439, 9452, 30, 708, 498, 436, 439, 445, 8752, 257, 2316, 5622, 3636, 30, 50614, 50614, 26291, 380, 300, 312, 869, 30, 50664, 50664, 1042, 11, 18633, 13, 50764, 50814, 29524, 484, 309, 1062, 406, 312, 300, 869, 13, 50914, 50914, 407, 341, 411, 7516, 281, 362, 9452, 507, 2171, 13451, 505, 731, 13, 51164, 51164, 583, 294, 341, 1729, 1389, 11, 291, 362, 281, 1066, 294, 1575, 341, 8546, 295, 437, 775, 300, 360, 294, 2115, 295, 264, 2063, 295, 2654, 21577, 293, 885, 1075, 281, 13819, 12178, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1009318293357382, "compression_ratio": 1.6032388663967612, "no_caption_prob": 4.683753286371939e-05}, {"id": 311, "seek": 181900, "start": 1819.0, "end": 1823.0, "text": " So there's this trade off between like wiring because it's like it.", "tokens": [50364, 407, 456, 311, 341, 4923, 766, 1296, 411, 27520, 570, 309, 311, 411, 309, 13, 50564, 50564, 407, 11, 2264, 11, 498, 291, 498, 291, 652, 1203, 257, 1333, 295, 11, 291, 458, 11, 2316, 5622, 3636, 6542, 1602, 1333, 295, 420, 652, 309, 257, 1376, 14657, 420, 257, 707, 8382, 9482, 11, 558, 30, 51114, 51114, 759, 291, 652, 1203, 362, 2105, 281, 1203, 293, 885, 1075, 281, 312, 1075, 281, 1319, 1203, 293, 2042, 16901, 13, 51464, 51464, 286, 914, 11, 586, 291, 600, 291, 600, 658, 15778, 13, 509, 393, 2042, 257, 5599, 13, 51664, 51664, 509, 393, 2042, 1252, 5065, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14941750972642812, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.9857273552333936e-05}, {"id": 312, "seek": 181900, "start": 1823.0, "end": 1834.0, "text": " So, OK, if you if you make everything a sort of, you know, model command message componentized sort of or make it a triplet or a little mini architecture, right?", "tokens": [50364, 407, 456, 311, 341, 4923, 766, 1296, 411, 27520, 570, 309, 311, 411, 309, 13, 50564, 50564, 407, 11, 2264, 11, 498, 291, 498, 291, 652, 1203, 257, 1333, 295, 11, 291, 458, 11, 2316, 5622, 3636, 6542, 1602, 1333, 295, 420, 652, 309, 257, 1376, 14657, 420, 257, 707, 8382, 9482, 11, 558, 30, 51114, 51114, 759, 291, 652, 1203, 362, 2105, 281, 1203, 293, 885, 1075, 281, 312, 1075, 281, 1319, 1203, 293, 2042, 16901, 13, 51464, 51464, 286, 914, 11, 586, 291, 600, 291, 600, 658, 15778, 13, 509, 393, 2042, 257, 5599, 13, 51664, 51664, 509, 393, 2042, 1252, 5065, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14941750972642812, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.9857273552333936e-05}, {"id": 313, "seek": 181900, "start": 1834.0, "end": 1841.0, "text": " If you make everything have access to everything and being able to be able to change everything and perform commands.", "tokens": [50364, 407, 456, 311, 341, 4923, 766, 1296, 411, 27520, 570, 309, 311, 411, 309, 13, 50564, 50564, 407, 11, 2264, 11, 498, 291, 498, 291, 652, 1203, 257, 1333, 295, 11, 291, 458, 11, 2316, 5622, 3636, 6542, 1602, 1333, 295, 420, 652, 309, 257, 1376, 14657, 420, 257, 707, 8382, 9482, 11, 558, 30, 51114, 51114, 759, 291, 652, 1203, 362, 2105, 281, 1203, 293, 885, 1075, 281, 312, 1075, 281, 1319, 1203, 293, 2042, 16901, 13, 51464, 51464, 286, 914, 11, 586, 291, 600, 291, 600, 658, 15778, 13, 509, 393, 2042, 257, 5599, 13, 51664, 51664, 509, 393, 2042, 1252, 5065, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14941750972642812, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.9857273552333936e-05}, {"id": 314, "seek": 181900, "start": 1841.0, "end": 1845.0, "text": " I mean, now you've you've got JavaScript. You can perform a commit.", "tokens": [50364, 407, 456, 311, 341, 4923, 766, 1296, 411, 27520, 570, 309, 311, 411, 309, 13, 50564, 50564, 407, 11, 2264, 11, 498, 291, 498, 291, 652, 1203, 257, 1333, 295, 11, 291, 458, 11, 2316, 5622, 3636, 6542, 1602, 1333, 295, 420, 652, 309, 257, 1376, 14657, 420, 257, 707, 8382, 9482, 11, 558, 30, 51114, 51114, 759, 291, 652, 1203, 362, 2105, 281, 1203, 293, 885, 1075, 281, 312, 1075, 281, 1319, 1203, 293, 2042, 16901, 13, 51464, 51464, 286, 914, 11, 586, 291, 600, 291, 600, 658, 15778, 13, 509, 393, 2042, 257, 5599, 13, 51664, 51664, 509, 393, 2042, 1252, 5065, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14941750972642812, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.9857273552333936e-05}, {"id": 315, "seek": 181900, "start": 1845.0, "end": 1847.0, "text": " You can perform side effects.", "tokens": [50364, 407, 456, 311, 341, 4923, 766, 1296, 411, 27520, 570, 309, 311, 411, 309, 13, 50564, 50564, 407, 11, 2264, 11, 498, 291, 498, 291, 652, 1203, 257, 1333, 295, 11, 291, 458, 11, 2316, 5622, 3636, 6542, 1602, 1333, 295, 420, 652, 309, 257, 1376, 14657, 420, 257, 707, 8382, 9482, 11, 558, 30, 51114, 51114, 759, 291, 652, 1203, 362, 2105, 281, 1203, 293, 885, 1075, 281, 312, 1075, 281, 1319, 1203, 293, 2042, 16901, 13, 51464, 51464, 286, 914, 11, 586, 291, 600, 291, 600, 658, 15778, 13, 509, 393, 2042, 257, 5599, 13, 51664, 51664, 509, 393, 2042, 1252, 5065, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14941750972642812, "compression_ratio": 1.7943548387096775, "no_caption_prob": 4.9857273552333936e-05}, {"id": 316, "seek": 184700, "start": 1847.0, "end": 1853.0, "text": " All of you know, of course, it's it's still not not exactly the same as JavaScript, but you don't have runtime exceptions.", "tokens": [50364, 1057, 295, 291, 458, 11, 295, 1164, 11, 309, 311, 309, 311, 920, 406, 406, 2293, 264, 912, 382, 15778, 11, 457, 291, 500, 380, 362, 34474, 22847, 13, 50664, 50664, 407, 300, 311, 364, 10444, 13, 50764, 50764, 1779, 13, 865, 13, 583, 291, 600, 658, 341, 1333, 295, 456, 311, 341, 456, 311, 341, 8980, 1296, 11, 4177, 11, 498, 286, 528, 281, 1319, 341, 294, 264, 2027, 11, 286, 478, 516, 281, 362, 281, 360, 341, 2857, 589, 281, 6234, 300, 294, 293, 1319, 300, 13, 51364, 51364, 400, 321, 528, 281, 5042, 300, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0931557487039005, "compression_ratio": 1.6180257510729614, "no_caption_prob": 0.00011773803271353245}, {"id": 317, "seek": 184700, "start": 1853.0, "end": 1855.0, "text": " So that's an improvement.", "tokens": [50364, 1057, 295, 291, 458, 11, 295, 1164, 11, 309, 311, 309, 311, 920, 406, 406, 2293, 264, 912, 382, 15778, 11, 457, 291, 500, 380, 362, 34474, 22847, 13, 50664, 50664, 407, 300, 311, 364, 10444, 13, 50764, 50764, 1779, 13, 865, 13, 583, 291, 600, 658, 341, 1333, 295, 456, 311, 341, 456, 311, 341, 8980, 1296, 11, 4177, 11, 498, 286, 528, 281, 1319, 341, 294, 264, 2027, 11, 286, 478, 516, 281, 362, 281, 360, 341, 2857, 589, 281, 6234, 300, 294, 293, 1319, 300, 13, 51364, 51364, 400, 321, 528, 281, 5042, 300, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0931557487039005, "compression_ratio": 1.6180257510729614, "no_caption_prob": 0.00011773803271353245}, {"id": 318, "seek": 184700, "start": 1855.0, "end": 1867.0, "text": " Right. Yeah. But you've got this sort of there's this there's this tension between, hey, if I want to change this in the future, I'm going to have to do this extra work to wire that in and change that.", "tokens": [50364, 1057, 295, 291, 458, 11, 295, 1164, 11, 309, 311, 309, 311, 920, 406, 406, 2293, 264, 912, 382, 15778, 11, 457, 291, 500, 380, 362, 34474, 22847, 13, 50664, 50664, 407, 300, 311, 364, 10444, 13, 50764, 50764, 1779, 13, 865, 13, 583, 291, 600, 658, 341, 1333, 295, 456, 311, 341, 456, 311, 341, 8980, 1296, 11, 4177, 11, 498, 286, 528, 281, 1319, 341, 294, 264, 2027, 11, 286, 478, 516, 281, 362, 281, 360, 341, 2857, 589, 281, 6234, 300, 294, 293, 1319, 300, 13, 51364, 51364, 400, 321, 528, 281, 5042, 300, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0931557487039005, "compression_ratio": 1.6180257510729614, "no_caption_prob": 0.00011773803271353245}, {"id": 319, "seek": 184700, "start": 1867.0, "end": 1869.0, "text": " And we want to avoid that.", "tokens": [50364, 1057, 295, 291, 458, 11, 295, 1164, 11, 309, 311, 309, 311, 920, 406, 406, 2293, 264, 912, 382, 15778, 11, 457, 291, 500, 380, 362, 34474, 22847, 13, 50664, 50664, 407, 300, 311, 364, 10444, 13, 50764, 50764, 1779, 13, 865, 13, 583, 291, 600, 658, 341, 1333, 295, 456, 311, 341, 456, 311, 341, 8980, 1296, 11, 4177, 11, 498, 286, 528, 281, 1319, 341, 294, 264, 2027, 11, 286, 478, 516, 281, 362, 281, 360, 341, 2857, 589, 281, 6234, 300, 294, 293, 1319, 300, 13, 51364, 51364, 400, 321, 528, 281, 5042, 300, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0931557487039005, "compression_ratio": 1.6180257510729614, "no_caption_prob": 0.00011773803271353245}, {"id": 320, "seek": 186900, "start": 1869.0, "end": 1880.0, "text": " But what we also want to avoid is diluting what something is doing and making it less clear what something can change, what something depends on.", "tokens": [50364, 583, 437, 321, 611, 528, 281, 5042, 307, 11504, 10861, 437, 746, 307, 884, 293, 1455, 309, 1570, 1850, 437, 746, 393, 1319, 11, 437, 746, 5946, 322, 13, 50914, 50914, 400, 370, 300, 311, 286, 519, 300, 311, 264, 955, 2141, 5192, 307, 300, 16556, 820, 42321, 428, 38997, 293, 428, 7516, 281, 528, 281, 362, 257, 9452, 636, 295, 721, 18017, 293, 406, 1562, 362, 281, 1319, 264, 636, 721, 366, 27415, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.017228274405757082, "compression_ratio": 1.7621359223300972, "no_caption_prob": 3.944184209103696e-05}, {"id": 321, "seek": 186900, "start": 1880.0, "end": 1894.0, "text": " And so that's I think that's the big key advice is that instinct should override your instincts and your desire to want to have a uniform way of things interacting and not ever have to change the way things are wired.", "tokens": [50364, 583, 437, 321, 611, 528, 281, 5042, 307, 11504, 10861, 437, 746, 307, 884, 293, 1455, 309, 1570, 1850, 437, 746, 393, 1319, 11, 437, 746, 5946, 322, 13, 50914, 50914, 400, 370, 300, 311, 286, 519, 300, 311, 264, 955, 2141, 5192, 307, 300, 16556, 820, 42321, 428, 38997, 293, 428, 7516, 281, 528, 281, 362, 257, 9452, 636, 295, 721, 18017, 293, 406, 1562, 362, 281, 1319, 264, 636, 721, 366, 27415, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.017228274405757082, "compression_ratio": 1.7621359223300972, "no_caption_prob": 3.944184209103696e-05}, {"id": 322, "seek": 189400, "start": 1894.0, "end": 1906.0, "text": " If you have like those records or if you have like components which where you specify how to edit, how to update, how to view, they all need to work together.", "tokens": [50364, 759, 291, 362, 411, 729, 7724, 420, 498, 291, 362, 411, 6677, 597, 689, 291, 16500, 577, 281, 8129, 11, 577, 281, 5623, 11, 577, 281, 1910, 11, 436, 439, 643, 281, 589, 1214, 13, 50964, 50964, 814, 439, 643, 281, 312, 264, 912, 11, 1238, 709, 13, 51064, 51064, 407, 498, 291, 362, 257, 588, 1359, 293, 2199, 6542, 597, 787, 775, 362, 364, 6920, 1785, 457, 406, 7875, 16901, 11, 291, 920, 362, 281, 16500, 300, 291, 500, 380, 528, 604, 16901, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10175899977094671, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.00016859681636560708}, {"id": 323, "seek": 189400, "start": 1906.0, "end": 1908.0, "text": " They all need to be the same, pretty much.", "tokens": [50364, 759, 291, 362, 411, 729, 7724, 420, 498, 291, 362, 411, 6677, 597, 689, 291, 16500, 577, 281, 8129, 11, 577, 281, 5623, 11, 577, 281, 1910, 11, 436, 439, 643, 281, 589, 1214, 13, 50964, 50964, 814, 439, 643, 281, 312, 264, 912, 11, 1238, 709, 13, 51064, 51064, 407, 498, 291, 362, 257, 588, 1359, 293, 2199, 6542, 597, 787, 775, 362, 364, 6920, 1785, 457, 406, 7875, 16901, 11, 291, 920, 362, 281, 16500, 300, 291, 500, 380, 528, 604, 16901, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10175899977094671, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.00016859681636560708}, {"id": 324, "seek": 189400, "start": 1908.0, "end": 1919.0, "text": " So if you have a very small and simple component which only does have an internal state but not trigger commands, you still have to specify that you don't want any commands.", "tokens": [50364, 759, 291, 362, 411, 729, 7724, 420, 498, 291, 362, 411, 6677, 597, 689, 291, 16500, 577, 281, 8129, 11, 577, 281, 5623, 11, 577, 281, 1910, 11, 436, 439, 643, 281, 589, 1214, 13, 50964, 50964, 814, 439, 643, 281, 312, 264, 912, 11, 1238, 709, 13, 51064, 51064, 407, 498, 291, 362, 257, 588, 1359, 293, 2199, 6542, 597, 787, 775, 362, 364, 6920, 1785, 457, 406, 7875, 16901, 11, 291, 920, 362, 281, 16500, 300, 291, 500, 380, 528, 604, 16901, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10175899977094671, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.00016859681636560708}, {"id": 325, "seek": 191900, "start": 1919.0, "end": 1924.0, "text": " And you still need to accept arguments that other components might want to have.", "tokens": [50364, 400, 291, 920, 643, 281, 3241, 12869, 300, 661, 6677, 1062, 528, 281, 362, 13, 50614, 50614, 407, 291, 362, 257, 688, 295, 14024, 293, 291, 362, 1825, 300, 307, 9432, 292, 760, 13, 50814, 50814, 400, 1338, 11, 300, 1669, 309, 588, 1152, 281, 915, 437, 746, 393, 360, 293, 437, 307, 19735, 13, 51064, 51064, 583, 498, 291, 498, 291, 652, 1203, 2375, 293, 445, 853, 281, 652, 309, 574, 264, 912, 538, 1419, 5288, 294, 1080, 9205, 293, 44951, 293, 370, 322, 11, 731, 11, 550, 309, 311, 4963, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04475445599900078, "compression_ratio": 1.7058823529411764, "no_caption_prob": 7.253380317706615e-05}, {"id": 326, "seek": 191900, "start": 1924.0, "end": 1928.0, "text": " So you have a lot of complexity and you have nothing that is narrowed down.", "tokens": [50364, 400, 291, 920, 643, 281, 3241, 12869, 300, 661, 6677, 1062, 528, 281, 362, 13, 50614, 50614, 407, 291, 362, 257, 688, 295, 14024, 293, 291, 362, 1825, 300, 307, 9432, 292, 760, 13, 50814, 50814, 400, 1338, 11, 300, 1669, 309, 588, 1152, 281, 915, 437, 746, 393, 360, 293, 437, 307, 19735, 13, 51064, 51064, 583, 498, 291, 498, 291, 652, 1203, 2375, 293, 445, 853, 281, 652, 309, 574, 264, 912, 538, 1419, 5288, 294, 1080, 9205, 293, 44951, 293, 370, 322, 11, 731, 11, 550, 309, 311, 4963, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04475445599900078, "compression_ratio": 1.7058823529411764, "no_caption_prob": 7.253380317706615e-05}, {"id": 327, "seek": 191900, "start": 1928.0, "end": 1933.0, "text": " And yeah, that makes it very hard to find what something can do and what is ignored.", "tokens": [50364, 400, 291, 920, 643, 281, 3241, 12869, 300, 661, 6677, 1062, 528, 281, 362, 13, 50614, 50614, 407, 291, 362, 257, 688, 295, 14024, 293, 291, 362, 1825, 300, 307, 9432, 292, 760, 13, 50814, 50814, 400, 1338, 11, 300, 1669, 309, 588, 1152, 281, 915, 437, 746, 393, 360, 293, 437, 307, 19735, 13, 51064, 51064, 583, 498, 291, 498, 291, 652, 1203, 2375, 293, 445, 853, 281, 652, 309, 574, 264, 912, 538, 1419, 5288, 294, 1080, 9205, 293, 44951, 293, 370, 322, 11, 731, 11, 550, 309, 311, 4963, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04475445599900078, "compression_ratio": 1.7058823529411764, "no_caption_prob": 7.253380317706615e-05}, {"id": 328, "seek": 191900, "start": 1933.0, "end": 1945.0, "text": " But if you if you make everything custom and just try to make it look the same by having names in its updates and subscriptions and so on, well, then it's familiar.", "tokens": [50364, 400, 291, 920, 643, 281, 3241, 12869, 300, 661, 6677, 1062, 528, 281, 362, 13, 50614, 50614, 407, 291, 362, 257, 688, 295, 14024, 293, 291, 362, 1825, 300, 307, 9432, 292, 760, 13, 50814, 50814, 400, 1338, 11, 300, 1669, 309, 588, 1152, 281, 915, 437, 746, 393, 360, 293, 437, 307, 19735, 13, 51064, 51064, 583, 498, 291, 498, 291, 652, 1203, 2375, 293, 445, 853, 281, 652, 309, 574, 264, 912, 538, 1419, 5288, 294, 1080, 9205, 293, 44951, 293, 370, 322, 11, 731, 11, 550, 309, 311, 4963, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04475445599900078, "compression_ratio": 1.7058823529411764, "no_caption_prob": 7.253380317706615e-05}, {"id": 329, "seek": 194500, "start": 1945.0, "end": 1956.0, "text": " But you're not tied to one implementation where if you need to add a new argument, you need to add it to all the components because you've inherited this complexity.", "tokens": [50364, 583, 291, 434, 406, 9601, 281, 472, 11420, 689, 498, 291, 643, 281, 909, 257, 777, 6770, 11, 291, 643, 281, 909, 309, 281, 439, 264, 6677, 570, 291, 600, 27091, 341, 14024, 13, 50914, 50914, 1779, 13, 823, 11, 300, 848, 11, 2171, 309, 393, 312, 1481, 281, 362, 613, 8294, 295, 1419, 411, 257, 5481, 11, 411, 257, 1333, 295, 746, 300, 8855, 257, 4338, 1785, 300, 393, 312, 5507, 293, 4678, 926, 293, 868, 1751, 1296, 3028, 2962, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06187848157660906, "compression_ratio": 1.6810344827586208, "no_caption_prob": 2.7108219001092948e-05}, {"id": 330, "seek": 194500, "start": 1956.0, "end": 1972.0, "text": " Right. Now, that said, sometimes it can be nice to have these patterns of having like a session, like a sort of something that represents a global state that can be shared and passed around and persists between page changes.", "tokens": [50364, 583, 291, 434, 406, 9601, 281, 472, 11420, 689, 498, 291, 643, 281, 909, 257, 777, 6770, 11, 291, 643, 281, 909, 309, 281, 439, 264, 6677, 570, 291, 600, 27091, 341, 14024, 13, 50914, 50914, 1779, 13, 823, 11, 300, 848, 11, 2171, 309, 393, 312, 1481, 281, 362, 613, 8294, 295, 1419, 411, 257, 5481, 11, 411, 257, 1333, 295, 746, 300, 8855, 257, 4338, 1785, 300, 393, 312, 5507, 293, 4678, 926, 293, 868, 1751, 1296, 3028, 2962, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06187848157660906, "compression_ratio": 1.6810344827586208, "no_caption_prob": 2.7108219001092948e-05}, {"id": 331, "seek": 197200, "start": 1972.0, "end": 1988.0, "text": " But, you know, so that's a common pattern. And, you know, I mean, there's a way to sort of find a happy medium where you're not wiring through everything by default, but you can also have this sort of container for, you know, a lot of the sort of core things that are being reused all over the place.", "tokens": [50364, 583, 11, 291, 458, 11, 370, 300, 311, 257, 2689, 5102, 13, 400, 11, 291, 458, 11, 286, 914, 11, 456, 311, 257, 636, 281, 1333, 295, 915, 257, 2055, 6399, 689, 291, 434, 406, 27520, 807, 1203, 538, 7576, 11, 457, 291, 393, 611, 362, 341, 1333, 295, 10129, 337, 11, 291, 458, 11, 257, 688, 295, 264, 1333, 295, 4965, 721, 300, 366, 885, 319, 4717, 439, 670, 264, 1081, 13, 51164, 51164, 865, 13, 400, 286, 519, 300, 341, 1669, 2020, 570, 291, 486, 643, 264, 5481, 294, 411, 881, 3190, 294, 264, 3861, 13, 51514, 51514, 407, 291, 917, 493, 26258, 472, 6770, 2171, 13, 51664, 51664, 1779, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07572195265028211, "compression_ratio": 1.7080291970802919, "no_caption_prob": 2.9310895115486346e-05}, {"id": 332, "seek": 197200, "start": 1988.0, "end": 1995.0, "text": " Yeah. And I think that this makes sense because you will need the session in like most places in the application.", "tokens": [50364, 583, 11, 291, 458, 11, 370, 300, 311, 257, 2689, 5102, 13, 400, 11, 291, 458, 11, 286, 914, 11, 456, 311, 257, 636, 281, 1333, 295, 915, 257, 2055, 6399, 689, 291, 434, 406, 27520, 807, 1203, 538, 7576, 11, 457, 291, 393, 611, 362, 341, 1333, 295, 10129, 337, 11, 291, 458, 11, 257, 688, 295, 264, 1333, 295, 4965, 721, 300, 366, 885, 319, 4717, 439, 670, 264, 1081, 13, 51164, 51164, 865, 13, 400, 286, 519, 300, 341, 1669, 2020, 570, 291, 486, 643, 264, 5481, 294, 411, 881, 3190, 294, 264, 3861, 13, 51514, 51514, 407, 291, 917, 493, 26258, 472, 6770, 2171, 13, 51664, 51664, 1779, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07572195265028211, "compression_ratio": 1.7080291970802919, "no_caption_prob": 2.9310895115486346e-05}, {"id": 333, "seek": 197200, "start": 1995.0, "end": 1998.0, "text": " So you end up ignoring one argument sometimes.", "tokens": [50364, 583, 11, 291, 458, 11, 370, 300, 311, 257, 2689, 5102, 13, 400, 11, 291, 458, 11, 286, 914, 11, 456, 311, 257, 636, 281, 1333, 295, 915, 257, 2055, 6399, 689, 291, 434, 406, 27520, 807, 1203, 538, 7576, 11, 457, 291, 393, 611, 362, 341, 1333, 295, 10129, 337, 11, 291, 458, 11, 257, 688, 295, 264, 1333, 295, 4965, 721, 300, 366, 885, 319, 4717, 439, 670, 264, 1081, 13, 51164, 51164, 865, 13, 400, 286, 519, 300, 341, 1669, 2020, 570, 291, 486, 643, 264, 5481, 294, 411, 881, 3190, 294, 264, 3861, 13, 51514, 51514, 407, 291, 917, 493, 26258, 472, 6770, 2171, 13, 51664, 51664, 1779, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07572195265028211, "compression_ratio": 1.7080291970802919, "no_caption_prob": 2.9310895115486346e-05}, {"id": 334, "seek": 197200, "start": 1998.0, "end": 1999.0, "text": " Right.", "tokens": [50364, 583, 11, 291, 458, 11, 370, 300, 311, 257, 2689, 5102, 13, 400, 11, 291, 458, 11, 286, 914, 11, 456, 311, 257, 636, 281, 1333, 295, 915, 257, 2055, 6399, 689, 291, 434, 406, 27520, 807, 1203, 538, 7576, 11, 457, 291, 393, 611, 362, 341, 1333, 295, 10129, 337, 11, 291, 458, 11, 257, 688, 295, 264, 1333, 295, 4965, 721, 300, 366, 885, 319, 4717, 439, 670, 264, 1081, 13, 51164, 51164, 865, 13, 400, 286, 519, 300, 341, 1669, 2020, 570, 291, 486, 643, 264, 5481, 294, 411, 881, 3190, 294, 264, 3861, 13, 51514, 51514, 407, 291, 917, 493, 26258, 472, 6770, 2171, 13, 51664, 51664, 1779, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.07572195265028211, "compression_ratio": 1.7080291970802919, "no_caption_prob": 2.9310895115486346e-05}, {"id": 335, "seek": 199900, "start": 1999.0, "end": 2011.0, "text": " And in some places you will just not pass it around and where where that argument is ignored, things will be simpler. So, yeah, try to ignore what you can when you can and make the simplest solution.", "tokens": [50364, 400, 294, 512, 3190, 291, 486, 445, 406, 1320, 309, 926, 293, 689, 689, 300, 6770, 307, 19735, 11, 721, 486, 312, 18587, 13, 407, 11, 1338, 11, 853, 281, 11200, 437, 291, 393, 562, 291, 393, 293, 652, 264, 22811, 3827, 13, 50964, 50964, 708, 311, 428, 4800, 322, 1279, 30633, 7724, 11, 508, 2032, 268, 30, 286, 519, 11, 291, 458, 11, 291, 600, 1096, 257, 688, 365, 341, 1333, 295, 411, 1279, 30633, 14980, 365, 903, 25796, 3467, 13, 51464, 51464, 876, 11, 1338, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1256886461506719, "compression_ratio": 1.58008658008658, "no_caption_prob": 6.438940999942133e-06}, {"id": 336, "seek": 199900, "start": 2011.0, "end": 2021.0, "text": " What's your opinion on extensible records, Jeroen? I think, you know, you've done a lot with this sort of like extensible functionality with phantom types.", "tokens": [50364, 400, 294, 512, 3190, 291, 486, 445, 406, 1320, 309, 926, 293, 689, 689, 300, 6770, 307, 19735, 11, 721, 486, 312, 18587, 13, 407, 11, 1338, 11, 853, 281, 11200, 437, 291, 393, 562, 291, 393, 293, 652, 264, 22811, 3827, 13, 50964, 50964, 708, 311, 428, 4800, 322, 1279, 30633, 7724, 11, 508, 2032, 268, 30, 286, 519, 11, 291, 458, 11, 291, 600, 1096, 257, 688, 365, 341, 1333, 295, 411, 1279, 30633, 14980, 365, 903, 25796, 3467, 13, 51464, 51464, 876, 11, 1338, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1256886461506719, "compression_ratio": 1.58008658008658, "no_caption_prob": 6.438940999942133e-06}, {"id": 337, "seek": 199900, "start": 2021.0, "end": 2022.0, "text": " Oh, yeah.", "tokens": [50364, 400, 294, 512, 3190, 291, 486, 445, 406, 1320, 309, 926, 293, 689, 689, 300, 6770, 307, 19735, 11, 721, 486, 312, 18587, 13, 407, 11, 1338, 11, 853, 281, 11200, 437, 291, 393, 562, 291, 393, 293, 652, 264, 22811, 3827, 13, 50964, 50964, 708, 311, 428, 4800, 322, 1279, 30633, 7724, 11, 508, 2032, 268, 30, 286, 519, 11, 291, 458, 11, 291, 600, 1096, 257, 688, 365, 341, 1333, 295, 411, 1279, 30633, 14980, 365, 903, 25796, 3467, 13, 51464, 51464, 876, 11, 1338, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1256886461506719, "compression_ratio": 1.58008658008658, "no_caption_prob": 6.438940999942133e-06}, {"id": 338, "seek": 202200, "start": 2022.0, "end": 2030.0, "text": " And that's a very interesting way to use that sort of part of the compiler. But what do you think about extensible records for data types?", "tokens": [50364, 400, 300, 311, 257, 588, 1880, 636, 281, 764, 300, 1333, 295, 644, 295, 264, 31958, 13, 583, 437, 360, 291, 519, 466, 1279, 30633, 7724, 337, 1412, 3467, 30, 50764, 50764, 286, 534, 500, 380, 411, 309, 13, 286, 600, 1612, 11, 286, 600, 787, 1612, 309, 1143, 412, 452, 2190, 2237, 13, 286, 994, 380, 949, 570, 286, 4114, 881, 295, 264, 3089, 293, 994, 380, 519, 295, 300, 13, 51214, 51214, 400, 309, 20368, 291, 281, 360, 512, 721, 300, 291, 500, 380, 528, 281, 360, 420, 300, 291, 500, 380, 643, 281, 360, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06310572811201506, "compression_ratio": 1.6899563318777293, "no_caption_prob": 9.368483006255701e-06}, {"id": 339, "seek": 202200, "start": 2030.0, "end": 2039.0, "text": " I really don't like it. I've seen, I've only seen it used at my current company. I didn't before because I wrote most of the code and didn't think of that.", "tokens": [50364, 400, 300, 311, 257, 588, 1880, 636, 281, 764, 300, 1333, 295, 644, 295, 264, 31958, 13, 583, 437, 360, 291, 519, 466, 1279, 30633, 7724, 337, 1412, 3467, 30, 50764, 50764, 286, 534, 500, 380, 411, 309, 13, 286, 600, 1612, 11, 286, 600, 787, 1612, 309, 1143, 412, 452, 2190, 2237, 13, 286, 994, 380, 949, 570, 286, 4114, 881, 295, 264, 3089, 293, 994, 380, 519, 295, 300, 13, 51214, 51214, 400, 309, 20368, 291, 281, 360, 512, 721, 300, 291, 500, 380, 528, 281, 360, 420, 300, 291, 500, 380, 643, 281, 360, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06310572811201506, "compression_ratio": 1.6899563318777293, "no_caption_prob": 9.368483006255701e-06}, {"id": 340, "seek": 202200, "start": 2039.0, "end": 2044.0, "text": " And it couples you to do some things that you don't want to do or that you don't need to do.", "tokens": [50364, 400, 300, 311, 257, 588, 1880, 636, 281, 764, 300, 1333, 295, 644, 295, 264, 31958, 13, 583, 437, 360, 291, 519, 466, 1279, 30633, 7724, 337, 1412, 3467, 30, 50764, 50764, 286, 534, 500, 380, 411, 309, 13, 286, 600, 1612, 11, 286, 600, 787, 1612, 309, 1143, 412, 452, 2190, 2237, 13, 286, 994, 380, 949, 570, 286, 4114, 881, 295, 264, 3089, 293, 994, 380, 519, 295, 300, 13, 51214, 51214, 400, 309, 20368, 291, 281, 360, 512, 721, 300, 291, 500, 380, 528, 281, 360, 420, 300, 291, 500, 380, 643, 281, 360, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06310572811201506, "compression_ratio": 1.6899563318777293, "no_caption_prob": 9.368483006255701e-06}, {"id": 341, "seek": 204400, "start": 2044.0, "end": 2054.0, "text": " So an extensible record is type alias records where you have some fields and then some unknown fields and then you specify what those unknown fields are wherever you will use it.", "tokens": [50364, 407, 364, 1279, 30633, 2136, 307, 2010, 419, 4609, 7724, 689, 291, 362, 512, 7909, 293, 550, 512, 9841, 7909, 293, 550, 291, 16500, 437, 729, 9841, 7909, 366, 8660, 291, 486, 764, 309, 13, 50864, 50864, 1779, 13, 407, 291, 727, 362, 411, 257, 935, 2010, 419, 4609, 935, 6915, 2136, 32066, 41537, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.07196911310745498, "compression_ratio": 1.6948051948051948, "no_caption_prob": 5.649462036672048e-05}, {"id": 342, "seek": 204400, "start": 2054.0, "end": 2061.0, "text": " Right. So you could have like a point type alias point equals record curly braces.", "tokens": [50364, 407, 364, 1279, 30633, 2136, 307, 2010, 419, 4609, 7724, 689, 291, 362, 512, 7909, 293, 550, 512, 9841, 7909, 293, 550, 291, 16500, 437, 729, 9841, 7909, 366, 8660, 291, 486, 764, 309, 13, 50864, 50864, 1779, 13, 407, 291, 727, 362, 411, 257, 935, 2010, 419, 4609, 935, 6915, 2136, 32066, 41537, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.07196911310745498, "compression_ratio": 1.6948051948051948, "no_caption_prob": 5.649462036672048e-05}, {"id": 343, "seek": 206100, "start": 2061.0, "end": 2077.0, "text": " And instead of just saying X colon, you know, number and Y colon number, you could say in front of those fields that you declare, you could give a type variable name like point, lowercase p point, and then a vertical bar.", "tokens": [50364, 400, 2602, 295, 445, 1566, 1783, 8255, 11, 291, 458, 11, 1230, 293, 398, 8255, 1230, 11, 291, 727, 584, 294, 1868, 295, 729, 7909, 300, 291, 19710, 11, 291, 727, 976, 257, 2010, 7006, 1315, 411, 935, 11, 3126, 9765, 280, 935, 11, 293, 550, 257, 9429, 2159, 13, 51164, 51164, 4803, 286, 519, 466, 309, 382, 309, 311, 411, 341, 2136, 307, 512, 1333, 295, 935, 2136, 1270, 300, 456, 307, 364, 1783, 597, 307, 257, 1230, 293, 257, 398, 300, 311, 257, 1230, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08073023911360856, "compression_ratio": 1.669683257918552, "no_caption_prob": 0.00010390389070380479}, {"id": 344, "seek": 206100, "start": 2077.0, "end": 2087.0, "text": " Sometimes I think about it as it's like this record is some sort of point record such that there is an X which is a number and a Y that's a number.", "tokens": [50364, 400, 2602, 295, 445, 1566, 1783, 8255, 11, 291, 458, 11, 1230, 293, 398, 8255, 1230, 11, 291, 727, 584, 294, 1868, 295, 729, 7909, 300, 291, 19710, 11, 291, 727, 976, 257, 2010, 7006, 1315, 411, 935, 11, 3126, 9765, 280, 935, 11, 293, 550, 257, 9429, 2159, 13, 51164, 51164, 4803, 286, 519, 466, 309, 382, 309, 311, 411, 341, 2136, 307, 512, 1333, 295, 935, 2136, 1270, 300, 456, 307, 364, 1783, 597, 307, 257, 1230, 293, 257, 398, 300, 311, 257, 1230, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08073023911360856, "compression_ratio": 1.669683257918552, "no_caption_prob": 0.00010390389070380479}, {"id": 345, "seek": 208700, "start": 2087.0, "end": 2096.0, "text": " But now if you pass a 3D point that has a Z as well, it would have access to the X and Y because it knows that it has those.", "tokens": [50364, 583, 586, 498, 291, 1320, 257, 805, 35, 935, 300, 575, 257, 1176, 382, 731, 11, 309, 576, 362, 2105, 281, 264, 1783, 293, 398, 570, 309, 3255, 300, 309, 575, 729, 13, 50814, 50814, 583, 309, 2759, 380, 362, 2105, 281, 264, 1176, 293, 309, 727, 11200, 300, 13, 583, 291, 727, 1320, 257, 568, 35, 935, 420, 257, 805, 35, 935, 30358, 1188, 13, 51114, 51114, 407, 309, 311, 1333, 295, 411, 257, 2010, 295, 6754, 76, 18191, 1434, 294, 2699, 76, 13, 51264, 51264, 865, 11, 733, 295, 13, 286, 1401, 309, 382, 2793, 365, 412, 1935, 1783, 1230, 293, 398, 307, 257, 1230, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07028285946164813, "compression_ratio": 1.6391304347826088, "no_caption_prob": 5.338120899978094e-06}, {"id": 346, "seek": 208700, "start": 2096.0, "end": 2102.0, "text": " But it wouldn't have access to the Z and it could ignore that. But you could pass a 2D point or a 3D point interchangeably.", "tokens": [50364, 583, 586, 498, 291, 1320, 257, 805, 35, 935, 300, 575, 257, 1176, 382, 731, 11, 309, 576, 362, 2105, 281, 264, 1783, 293, 398, 570, 309, 3255, 300, 309, 575, 729, 13, 50814, 50814, 583, 309, 2759, 380, 362, 2105, 281, 264, 1176, 293, 309, 727, 11200, 300, 13, 583, 291, 727, 1320, 257, 568, 35, 935, 420, 257, 805, 35, 935, 30358, 1188, 13, 51114, 51114, 407, 309, 311, 1333, 295, 411, 257, 2010, 295, 6754, 76, 18191, 1434, 294, 2699, 76, 13, 51264, 51264, 865, 11, 733, 295, 13, 286, 1401, 309, 382, 2793, 365, 412, 1935, 1783, 1230, 293, 398, 307, 257, 1230, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07028285946164813, "compression_ratio": 1.6391304347826088, "no_caption_prob": 5.338120899978094e-06}, {"id": 347, "seek": 208700, "start": 2102.0, "end": 2105.0, "text": " So it's sort of like a type of polymorphism in Elm.", "tokens": [50364, 583, 586, 498, 291, 1320, 257, 805, 35, 935, 300, 575, 257, 1176, 382, 731, 11, 309, 576, 362, 2105, 281, 264, 1783, 293, 398, 570, 309, 3255, 300, 309, 575, 729, 13, 50814, 50814, 583, 309, 2759, 380, 362, 2105, 281, 264, 1176, 293, 309, 727, 11200, 300, 13, 583, 291, 727, 1320, 257, 568, 35, 935, 420, 257, 805, 35, 935, 30358, 1188, 13, 51114, 51114, 407, 309, 311, 1333, 295, 411, 257, 2010, 295, 6754, 76, 18191, 1434, 294, 2699, 76, 13, 51264, 51264, 865, 11, 733, 295, 13, 286, 1401, 309, 382, 2793, 365, 412, 1935, 1783, 1230, 293, 398, 307, 257, 1230, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07028285946164813, "compression_ratio": 1.6391304347826088, "no_caption_prob": 5.338120899978094e-06}, {"id": 348, "seek": 208700, "start": 2105.0, "end": 2111.0, "text": " Yeah, kind of. I read it as points with at least X number and Y is a number.", "tokens": [50364, 583, 586, 498, 291, 1320, 257, 805, 35, 935, 300, 575, 257, 1176, 382, 731, 11, 309, 576, 362, 2105, 281, 264, 1783, 293, 398, 570, 309, 3255, 300, 309, 575, 729, 13, 50814, 50814, 583, 309, 2759, 380, 362, 2105, 281, 264, 1176, 293, 309, 727, 11200, 300, 13, 583, 291, 727, 1320, 257, 568, 35, 935, 420, 257, 805, 35, 935, 30358, 1188, 13, 51114, 51114, 407, 309, 311, 1333, 295, 411, 257, 2010, 295, 6754, 76, 18191, 1434, 294, 2699, 76, 13, 51264, 51264, 865, 11, 733, 295, 13, 286, 1401, 309, 382, 2793, 365, 412, 1935, 1783, 1230, 293, 398, 307, 257, 1230, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07028285946164813, "compression_ratio": 1.6391304347826088, "no_caption_prob": 5.338120899978094e-06}, {"id": 349, "seek": 211100, "start": 2111.0, "end": 2119.0, "text": " So those are great for arguments as Richard and apparently Evan says, according to Richard.", "tokens": [50364, 407, 729, 366, 869, 337, 12869, 382, 9809, 293, 7970, 22613, 1619, 11, 4650, 281, 9809, 13, 50764, 50764, 865, 11, 286, 4114, 760, 22613, 311, 6513, 300, 9809, 30047, 294, 341, 751, 13, 51014, 51014, 9881, 30633, 7724, 366, 4420, 281, 7694, 12869, 11, 406, 337, 1412, 15983, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.083255167360659, "compression_ratio": 1.4472049689440993, "no_caption_prob": 1.1842839739983901e-05}, {"id": 350, "seek": 211100, "start": 2119.0, "end": 2124.0, "text": " Yeah, I wrote down Evan's quote that Richard quoted in this talk.", "tokens": [50364, 407, 729, 366, 869, 337, 12869, 382, 9809, 293, 7970, 22613, 1619, 11, 4650, 281, 9809, 13, 50764, 50764, 865, 11, 286, 4114, 760, 22613, 311, 6513, 300, 9809, 30047, 294, 341, 751, 13, 51014, 51014, 9881, 30633, 7724, 366, 4420, 281, 7694, 12869, 11, 406, 337, 1412, 15983, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.083255167360659, "compression_ratio": 1.4472049689440993, "no_caption_prob": 1.1842839739983901e-05}, {"id": 351, "seek": 211100, "start": 2124.0, "end": 2129.0, "text": " Extensible records are useful to restrict arguments, not for data modeling.", "tokens": [50364, 407, 729, 366, 869, 337, 12869, 382, 9809, 293, 7970, 22613, 1619, 11, 4650, 281, 9809, 13, 50764, 50764, 865, 11, 286, 4114, 760, 22613, 311, 6513, 300, 9809, 30047, 294, 341, 751, 13, 51014, 51014, 9881, 30633, 7724, 366, 4420, 281, 7694, 12869, 11, 406, 337, 1412, 15983, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.083255167360659, "compression_ratio": 1.4472049689440993, "no_caption_prob": 1.1842839739983901e-05}, {"id": 352, "seek": 212900, "start": 2129.0, "end": 2143.0, "text": " Yeah, so when they're used in arguments, you say my function colon takes a extensible record. So curly braces, points, vertical slash, X, blah, blah, blah.", "tokens": [50364, 865, 11, 370, 562, 436, 434, 1143, 294, 12869, 11, 291, 584, 452, 2445, 8255, 2516, 257, 1279, 30633, 2136, 13, 407, 32066, 41537, 11, 2793, 11, 9429, 17330, 11, 1783, 11, 12288, 11, 12288, 11, 12288, 13, 51064, 51064, 663, 1619, 341, 2445, 486, 747, 746, 300, 575, 729, 7909, 293, 360, 746, 365, 309, 13, 51414, 51414, 583, 300, 311, 445, 1071, 636, 295, 1566, 309, 2516, 472, 6770, 1783, 293, 472, 6770, 398, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11882621859326775, "compression_ratio": 1.604878048780488, "no_caption_prob": 0.00016601370589341968}, {"id": 353, "seek": 212900, "start": 2143.0, "end": 2150.0, "text": " That says this function will take something that has those fields and do something with it.", "tokens": [50364, 865, 11, 370, 562, 436, 434, 1143, 294, 12869, 11, 291, 584, 452, 2445, 8255, 2516, 257, 1279, 30633, 2136, 13, 407, 32066, 41537, 11, 2793, 11, 9429, 17330, 11, 1783, 11, 12288, 11, 12288, 11, 12288, 13, 51064, 51064, 663, 1619, 341, 2445, 486, 747, 746, 300, 575, 729, 7909, 293, 360, 746, 365, 309, 13, 51414, 51414, 583, 300, 311, 445, 1071, 636, 295, 1566, 309, 2516, 472, 6770, 1783, 293, 472, 6770, 398, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11882621859326775, "compression_ratio": 1.604878048780488, "no_caption_prob": 0.00016601370589341968}, {"id": 354, "seek": 212900, "start": 2150.0, "end": 2156.0, "text": " But that's just another way of saying it takes one argument X and one argument Y.", "tokens": [50364, 865, 11, 370, 562, 436, 434, 1143, 294, 12869, 11, 291, 584, 452, 2445, 8255, 2516, 257, 1279, 30633, 2136, 13, 407, 32066, 41537, 11, 2793, 11, 9429, 17330, 11, 1783, 11, 12288, 11, 12288, 11, 12288, 13, 51064, 51064, 663, 1619, 341, 2445, 486, 747, 746, 300, 575, 729, 7909, 293, 360, 746, 365, 309, 13, 51414, 51414, 583, 300, 311, 445, 1071, 636, 295, 1566, 309, 2516, 472, 6770, 1783, 293, 472, 6770, 398, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11882621859326775, "compression_ratio": 1.604878048780488, "no_caption_prob": 0.00016601370589341968}, {"id": 355, "seek": 215600, "start": 2156.0, "end": 2162.0, "text": " But just as a record and it could be a more complex record, but we don't care about it.", "tokens": [50364, 583, 445, 382, 257, 2136, 293, 309, 727, 312, 257, 544, 3997, 2136, 11, 457, 321, 500, 380, 1127, 466, 309, 13, 50664, 50664, 400, 300, 307, 445, 23980, 19892, 5076, 294, 257, 636, 13, 50914, 50914, 407, 498, 291, 2316, 309, 382, 472, 6770, 365, 364, 1279, 30633, 2136, 11, 309, 311, 572, 819, 490, 257, 2107, 1279, 30633, 2136, 420, 2940, 12869, 13, 51414, 51414, 467, 311, 445, 309, 1542, 819, 11, 457, 309, 311, 294, 3124, 264, 912, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08255115775174873, "compression_ratio": 1.6262626262626263, "no_caption_prob": 6.604690861422569e-05}, {"id": 356, "seek": 215600, "start": 2162.0, "end": 2167.0, "text": " And that is just syntactic sugar in a way.", "tokens": [50364, 583, 445, 382, 257, 2136, 293, 309, 727, 312, 257, 544, 3997, 2136, 11, 457, 321, 500, 380, 1127, 466, 309, 13, 50664, 50664, 400, 300, 307, 445, 23980, 19892, 5076, 294, 257, 636, 13, 50914, 50914, 407, 498, 291, 2316, 309, 382, 472, 6770, 365, 364, 1279, 30633, 2136, 11, 309, 311, 572, 819, 490, 257, 2107, 1279, 30633, 2136, 420, 2940, 12869, 13, 51414, 51414, 467, 311, 445, 309, 1542, 819, 11, 457, 309, 311, 294, 3124, 264, 912, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08255115775174873, "compression_ratio": 1.6262626262626263, "no_caption_prob": 6.604690861422569e-05}, {"id": 357, "seek": 215600, "start": 2167.0, "end": 2177.0, "text": " So if you model it as one argument with an extensible record, it's no different from a non extensible record or several arguments.", "tokens": [50364, 583, 445, 382, 257, 2136, 293, 309, 727, 312, 257, 544, 3997, 2136, 11, 457, 321, 500, 380, 1127, 466, 309, 13, 50664, 50664, 400, 300, 307, 445, 23980, 19892, 5076, 294, 257, 636, 13, 50914, 50914, 407, 498, 291, 2316, 309, 382, 472, 6770, 365, 364, 1279, 30633, 2136, 11, 309, 311, 572, 819, 490, 257, 2107, 1279, 30633, 2136, 420, 2940, 12869, 13, 51414, 51414, 467, 311, 445, 309, 1542, 819, 11, 457, 309, 311, 294, 3124, 264, 912, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08255115775174873, "compression_ratio": 1.6262626262626263, "no_caption_prob": 6.604690861422569e-05}, {"id": 358, "seek": 215600, "start": 2177.0, "end": 2180.0, "text": " It's just it looks different, but it's in practice the same.", "tokens": [50364, 583, 445, 382, 257, 2136, 293, 309, 727, 312, 257, 544, 3997, 2136, 11, 457, 321, 500, 380, 1127, 466, 309, 13, 50664, 50664, 400, 300, 307, 445, 23980, 19892, 5076, 294, 257, 636, 13, 50914, 50914, 407, 498, 291, 2316, 309, 382, 472, 6770, 365, 364, 1279, 30633, 2136, 11, 309, 311, 572, 819, 490, 257, 2107, 1279, 30633, 2136, 420, 2940, 12869, 13, 51414, 51414, 467, 311, 445, 309, 1542, 819, 11, 457, 309, 311, 294, 3124, 264, 912, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08255115775174873, "compression_ratio": 1.6262626262626263, "no_caption_prob": 6.604690861422569e-05}, {"id": 359, "seek": 218000, "start": 2180.0, "end": 2190.0, "text": " But when you do modeling with that, so if you put like if you have a user which is an extensible record, which has a name, for instance, which has at least a name.", "tokens": [50364, 583, 562, 291, 360, 15983, 365, 300, 11, 370, 498, 291, 829, 411, 498, 291, 362, 257, 4195, 597, 307, 364, 1279, 30633, 2136, 11, 597, 575, 257, 1315, 11, 337, 5197, 11, 597, 575, 412, 1935, 257, 1315, 13, 50864, 50864, 400, 550, 291, 764, 300, 382, 4195, 11, 597, 611, 575, 364, 3205, 11, 597, 307, 257, 1230, 13, 51214, 51214, 1042, 11, 550, 498, 291, 722, 1364, 365, 300, 733, 295, 2010, 11, 291, 643, 281, 23673, 5022, 597, 1009, 362, 5288, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08139780362447104, "compression_ratio": 1.766839378238342, "no_caption_prob": 7.483873196179047e-05}, {"id": 360, "seek": 218000, "start": 2190.0, "end": 2197.0, "text": " And then you use that as user, which also has an age, which is a number.", "tokens": [50364, 583, 562, 291, 360, 15983, 365, 300, 11, 370, 498, 291, 829, 411, 498, 291, 362, 257, 4195, 597, 307, 364, 1279, 30633, 2136, 11, 597, 575, 257, 1315, 11, 337, 5197, 11, 597, 575, 412, 1935, 257, 1315, 13, 50864, 50864, 400, 550, 291, 764, 300, 382, 4195, 11, 597, 611, 575, 364, 3205, 11, 597, 307, 257, 1230, 13, 51214, 51214, 1042, 11, 550, 498, 291, 722, 1364, 365, 300, 733, 295, 2010, 11, 291, 643, 281, 23673, 5022, 597, 1009, 362, 5288, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08139780362447104, "compression_ratio": 1.766839378238342, "no_caption_prob": 7.483873196179047e-05}, {"id": 361, "seek": 218000, "start": 2197.0, "end": 2205.0, "text": " Well, then if you start working with that kind of type, you need to fetch users which always have names.", "tokens": [50364, 583, 562, 291, 360, 15983, 365, 300, 11, 370, 498, 291, 829, 411, 498, 291, 362, 257, 4195, 597, 307, 364, 1279, 30633, 2136, 11, 597, 575, 257, 1315, 11, 337, 5197, 11, 597, 575, 412, 1935, 257, 1315, 13, 50864, 50864, 400, 550, 291, 764, 300, 382, 4195, 11, 597, 611, 575, 364, 3205, 11, 597, 307, 257, 1230, 13, 51214, 51214, 1042, 11, 550, 498, 291, 722, 1364, 365, 300, 733, 295, 2010, 11, 291, 643, 281, 23673, 5022, 597, 1009, 362, 5288, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08139780362447104, "compression_ratio": 1.766839378238342, "no_caption_prob": 7.483873196179047e-05}, {"id": 362, "seek": 220500, "start": 2205.0, "end": 2215.0, "text": " And if you have the more fields you have in there, the more likely it will be that it will not be used wherever it is needed, wherever you will use that user.", "tokens": [50364, 400, 498, 291, 362, 264, 544, 7909, 291, 362, 294, 456, 11, 264, 544, 3700, 309, 486, 312, 300, 309, 486, 406, 312, 1143, 8660, 309, 307, 2978, 11, 8660, 291, 486, 764, 300, 4195, 13, 50864, 50864, 400, 300, 445, 1355, 300, 291, 434, 5127, 19350, 14024, 570, 586, 291, 643, 281, 5883, 1125, 729, 44383, 7909, 13, 51264, 51264, 509, 643, 281, 23673, 552, 13, 509, 643, 281, 1884, 552, 294, 257, 636, 300, 307, 3997, 2171, 13, 51514, 51514, 400, 1338, 11, 309, 311, 445, 257, 688, 295, 19350, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05392524660850058, "compression_ratio": 1.8333333333333333, "no_caption_prob": 0.00011589229688979685}, {"id": 363, "seek": 220500, "start": 2215.0, "end": 2223.0, "text": " And that just means that you're adding unnecessary complexity because now you need to initialize those unused fields.", "tokens": [50364, 400, 498, 291, 362, 264, 544, 7909, 291, 362, 294, 456, 11, 264, 544, 3700, 309, 486, 312, 300, 309, 486, 406, 312, 1143, 8660, 309, 307, 2978, 11, 8660, 291, 486, 764, 300, 4195, 13, 50864, 50864, 400, 300, 445, 1355, 300, 291, 434, 5127, 19350, 14024, 570, 586, 291, 643, 281, 5883, 1125, 729, 44383, 7909, 13, 51264, 51264, 509, 643, 281, 23673, 552, 13, 509, 643, 281, 1884, 552, 294, 257, 636, 300, 307, 3997, 2171, 13, 51514, 51514, 400, 1338, 11, 309, 311, 445, 257, 688, 295, 19350, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05392524660850058, "compression_ratio": 1.8333333333333333, "no_caption_prob": 0.00011589229688979685}, {"id": 364, "seek": 220500, "start": 2223.0, "end": 2228.0, "text": " You need to fetch them. You need to create them in a way that is complex sometimes.", "tokens": [50364, 400, 498, 291, 362, 264, 544, 7909, 291, 362, 294, 456, 11, 264, 544, 3700, 309, 486, 312, 300, 309, 486, 406, 312, 1143, 8660, 309, 307, 2978, 11, 8660, 291, 486, 764, 300, 4195, 13, 50864, 50864, 400, 300, 445, 1355, 300, 291, 434, 5127, 19350, 14024, 570, 586, 291, 643, 281, 5883, 1125, 729, 44383, 7909, 13, 51264, 51264, 509, 643, 281, 23673, 552, 13, 509, 643, 281, 1884, 552, 294, 257, 636, 300, 307, 3997, 2171, 13, 51514, 51514, 400, 1338, 11, 309, 311, 445, 257, 688, 295, 19350, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05392524660850058, "compression_ratio": 1.8333333333333333, "no_caption_prob": 0.00011589229688979685}, {"id": 365, "seek": 220500, "start": 2228.0, "end": 2233.0, "text": " And yeah, it's just a lot of unnecessary pain.", "tokens": [50364, 400, 498, 291, 362, 264, 544, 7909, 291, 362, 294, 456, 11, 264, 544, 3700, 309, 486, 312, 300, 309, 486, 406, 312, 1143, 8660, 309, 307, 2978, 11, 8660, 291, 486, 764, 300, 4195, 13, 50864, 50864, 400, 300, 445, 1355, 300, 291, 434, 5127, 19350, 14024, 570, 586, 291, 643, 281, 5883, 1125, 729, 44383, 7909, 13, 51264, 51264, 509, 643, 281, 23673, 552, 13, 509, 643, 281, 1884, 552, 294, 257, 636, 300, 307, 3997, 2171, 13, 51514, 51514, 400, 1338, 11, 309, 311, 445, 257, 688, 295, 19350, 1822, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.05392524660850058, "compression_ratio": 1.8333333333333333, "no_caption_prob": 0.00011589229688979685}, {"id": 366, "seek": 223300, "start": 2233.0, "end": 2244.0, "text": " I think it would be much better to just say to create a new type that happens to contain the names, the same fields with the same names and same types.", "tokens": [50364, 286, 519, 309, 576, 312, 709, 1101, 281, 445, 584, 281, 1884, 257, 777, 2010, 300, 2314, 281, 5304, 264, 5288, 11, 264, 912, 7909, 365, 264, 912, 5288, 293, 912, 3467, 13, 50914, 50914, 509, 611, 362, 281, 1320, 926, 264, 2010, 7006, 5315, 11, 597, 393, 312, 257, 1822, 13, 51114, 51114, 7010, 13, 51164, 51164, 286, 600, 1143, 1279, 30633, 7724, 2171, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.13877515792846679, "compression_ratio": 1.5164835164835164, "no_caption_prob": 8.480821270495653e-05}, {"id": 367, "seek": 223300, "start": 2244.0, "end": 2248.0, "text": " You also have to pass around the type variable everywhere, which can be a pain.", "tokens": [50364, 286, 519, 309, 576, 312, 709, 1101, 281, 445, 584, 281, 1884, 257, 777, 2010, 300, 2314, 281, 5304, 264, 5288, 11, 264, 912, 7909, 365, 264, 912, 5288, 293, 912, 3467, 13, 50914, 50914, 509, 611, 362, 281, 1320, 926, 264, 2010, 7006, 5315, 11, 597, 393, 312, 257, 1822, 13, 51114, 51114, 7010, 13, 51164, 51164, 286, 600, 1143, 1279, 30633, 7724, 2171, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.13877515792846679, "compression_ratio": 1.5164835164835164, "no_caption_prob": 8.480821270495653e-05}, {"id": 368, "seek": 223300, "start": 2248.0, "end": 2249.0, "text": " Yep.", "tokens": [50364, 286, 519, 309, 576, 312, 709, 1101, 281, 445, 584, 281, 1884, 257, 777, 2010, 300, 2314, 281, 5304, 264, 5288, 11, 264, 912, 7909, 365, 264, 912, 5288, 293, 912, 3467, 13, 50914, 50914, 509, 611, 362, 281, 1320, 926, 264, 2010, 7006, 5315, 11, 597, 393, 312, 257, 1822, 13, 51114, 51114, 7010, 13, 51164, 51164, 286, 600, 1143, 1279, 30633, 7724, 2171, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.13877515792846679, "compression_ratio": 1.5164835164835164, "no_caption_prob": 8.480821270495653e-05}, {"id": 369, "seek": 223300, "start": 2249.0, "end": 2252.0, "text": " I've used extensible records sometimes.", "tokens": [50364, 286, 519, 309, 576, 312, 709, 1101, 281, 445, 584, 281, 1884, 257, 777, 2010, 300, 2314, 281, 5304, 264, 5288, 11, 264, 912, 7909, 365, 264, 912, 5288, 293, 912, 3467, 13, 50914, 50914, 509, 611, 362, 281, 1320, 926, 264, 2010, 7006, 5315, 11, 597, 393, 312, 257, 1822, 13, 51114, 51114, 7010, 13, 51164, 51164, 286, 600, 1143, 1279, 30633, 7724, 2171, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.13877515792846679, "compression_ratio": 1.5164835164835164, "no_caption_prob": 8.480821270495653e-05}, {"id": 370, "seek": 225200, "start": 2252.0, "end": 2265.0, "text": " Like sometimes a URL is a record in Elm which has a path and a host and whatever, a protocol and these different data types and values.", "tokens": [50364, 1743, 2171, 257, 12905, 307, 257, 2136, 294, 2699, 76, 597, 575, 257, 3100, 293, 257, 3975, 293, 2035, 11, 257, 10336, 293, 613, 819, 1412, 3467, 293, 4190, 13, 51014, 51014, 400, 2171, 286, 787, 1127, 466, 264, 3100, 13, 51164, 51164, 400, 370, 286, 603, 652, 452, 43267, 364, 1279, 30633, 2136, 597, 787, 2516, 264, 3100, 13, 51414, 51414, 400, 550, 498, 286, 478, 4997, 309, 11, 286, 393, 1320, 294, 257, 2136, 597, 787, 575, 3100, 6915, 512, 3100, 13, 51714, 51714, 400, 286, 393, 764, 300, 294, 264, 1500, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09452017389162622, "compression_ratio": 1.7175925925925926, "no_caption_prob": 0.00011590562644414604}, {"id": 371, "seek": 225200, "start": 2265.0, "end": 2268.0, "text": " And sometimes I only care about the path.", "tokens": [50364, 1743, 2171, 257, 12905, 307, 257, 2136, 294, 2699, 76, 597, 575, 257, 3100, 293, 257, 3975, 293, 2035, 11, 257, 10336, 293, 613, 819, 1412, 3467, 293, 4190, 13, 51014, 51014, 400, 2171, 286, 787, 1127, 466, 264, 3100, 13, 51164, 51164, 400, 370, 286, 603, 652, 452, 43267, 364, 1279, 30633, 2136, 597, 787, 2516, 264, 3100, 13, 51414, 51414, 400, 550, 498, 286, 478, 4997, 309, 11, 286, 393, 1320, 294, 257, 2136, 597, 787, 575, 3100, 6915, 512, 3100, 13, 51714, 51714, 400, 286, 393, 764, 300, 294, 264, 1500, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09452017389162622, "compression_ratio": 1.7175925925925926, "no_caption_prob": 0.00011590562644414604}, {"id": 372, "seek": 225200, "start": 2268.0, "end": 2273.0, "text": " And so I'll make my URLs an extensible record which only takes the path.", "tokens": [50364, 1743, 2171, 257, 12905, 307, 257, 2136, 294, 2699, 76, 597, 575, 257, 3100, 293, 257, 3975, 293, 2035, 11, 257, 10336, 293, 613, 819, 1412, 3467, 293, 4190, 13, 51014, 51014, 400, 2171, 286, 787, 1127, 466, 264, 3100, 13, 51164, 51164, 400, 370, 286, 603, 652, 452, 43267, 364, 1279, 30633, 2136, 597, 787, 2516, 264, 3100, 13, 51414, 51414, 400, 550, 498, 286, 478, 4997, 309, 11, 286, 393, 1320, 294, 257, 2136, 597, 787, 575, 3100, 6915, 512, 3100, 13, 51714, 51714, 400, 286, 393, 764, 300, 294, 264, 1500, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09452017389162622, "compression_ratio": 1.7175925925925926, "no_caption_prob": 0.00011590562644414604}, {"id": 373, "seek": 225200, "start": 2273.0, "end": 2279.0, "text": " And then if I'm testing it, I can pass in a record which only has path equals some path.", "tokens": [50364, 1743, 2171, 257, 12905, 307, 257, 2136, 294, 2699, 76, 597, 575, 257, 3100, 293, 257, 3975, 293, 2035, 11, 257, 10336, 293, 613, 819, 1412, 3467, 293, 4190, 13, 51014, 51014, 400, 2171, 286, 787, 1127, 466, 264, 3100, 13, 51164, 51164, 400, 370, 286, 603, 652, 452, 43267, 364, 1279, 30633, 2136, 597, 787, 2516, 264, 3100, 13, 51414, 51414, 400, 550, 498, 286, 478, 4997, 309, 11, 286, 393, 1320, 294, 257, 2136, 597, 787, 575, 3100, 6915, 512, 3100, 13, 51714, 51714, 400, 286, 393, 764, 300, 294, 264, 1500, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09452017389162622, "compression_ratio": 1.7175925925925926, "no_caption_prob": 0.00011590562644414604}, {"id": 374, "seek": 225200, "start": 2279.0, "end": 2281.0, "text": " And I can use that in the test.", "tokens": [50364, 1743, 2171, 257, 12905, 307, 257, 2136, 294, 2699, 76, 597, 575, 257, 3100, 293, 257, 3975, 293, 2035, 11, 257, 10336, 293, 613, 819, 1412, 3467, 293, 4190, 13, 51014, 51014, 400, 2171, 286, 787, 1127, 466, 264, 3100, 13, 51164, 51164, 400, 370, 286, 603, 652, 452, 43267, 364, 1279, 30633, 2136, 597, 787, 2516, 264, 3100, 13, 51414, 51414, 400, 550, 498, 286, 478, 4997, 309, 11, 286, 393, 1320, 294, 257, 2136, 597, 787, 575, 3100, 6915, 512, 3100, 13, 51714, 51714, 400, 286, 393, 764, 300, 294, 264, 1500, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09452017389162622, "compression_ratio": 1.7175925925925926, "no_caption_prob": 0.00011590562644414604}, {"id": 375, "seek": 228100, "start": 2281.0, "end": 2289.0, "text": " Now, I mean, because I don't want to create like maybe something requires a URL, but other things don't.", "tokens": [50364, 823, 11, 286, 914, 11, 570, 286, 500, 380, 528, 281, 1884, 411, 1310, 746, 7029, 257, 12905, 11, 457, 661, 721, 500, 380, 13, 50764, 50764, 400, 286, 500, 380, 528, 281, 1884, 7592, 1412, 337, 264, 12905, 4725, 11, 457, 286, 445, 528, 281, 652, 309, 1850, 437, 1629, 3755, 5672, 322, 13, 51114, 51114, 823, 11, 291, 727, 445, 747, 264, 3100, 293, 3838, 4444, 300, 13, 51364, 51364, 865, 11, 300, 576, 312, 264, 912, 551, 13, 51414, 51414, 1779, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09322614348336553, "compression_ratio": 1.6067961165048543, "no_caption_prob": 8.397772944590542e-06}, {"id": 376, "seek": 228100, "start": 2289.0, "end": 2296.0, "text": " And I don't want to create fake data for the URL necessarily, but I just want to make it clear what certain pieces depend on.", "tokens": [50364, 823, 11, 286, 914, 11, 570, 286, 500, 380, 528, 281, 1884, 411, 1310, 746, 7029, 257, 12905, 11, 457, 661, 721, 500, 380, 13, 50764, 50764, 400, 286, 500, 380, 528, 281, 1884, 7592, 1412, 337, 264, 12905, 4725, 11, 457, 286, 445, 528, 281, 652, 309, 1850, 437, 1629, 3755, 5672, 322, 13, 51114, 51114, 823, 11, 291, 727, 445, 747, 264, 3100, 293, 3838, 4444, 300, 13, 51364, 51364, 865, 11, 300, 576, 312, 264, 912, 551, 13, 51414, 51414, 1779, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09322614348336553, "compression_ratio": 1.6067961165048543, "no_caption_prob": 8.397772944590542e-06}, {"id": 377, "seek": 228100, "start": 2296.0, "end": 2301.0, "text": " Now, you could just take the path and directly grab that.", "tokens": [50364, 823, 11, 286, 914, 11, 570, 286, 500, 380, 528, 281, 1884, 411, 1310, 746, 7029, 257, 12905, 11, 457, 661, 721, 500, 380, 13, 50764, 50764, 400, 286, 500, 380, 528, 281, 1884, 7592, 1412, 337, 264, 12905, 4725, 11, 457, 286, 445, 528, 281, 652, 309, 1850, 437, 1629, 3755, 5672, 322, 13, 51114, 51114, 823, 11, 291, 727, 445, 747, 264, 3100, 293, 3838, 4444, 300, 13, 51364, 51364, 865, 11, 300, 576, 312, 264, 912, 551, 13, 51414, 51414, 1779, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09322614348336553, "compression_ratio": 1.6067961165048543, "no_caption_prob": 8.397772944590542e-06}, {"id": 378, "seek": 228100, "start": 2301.0, "end": 2302.0, "text": " Yeah, that would be the same thing.", "tokens": [50364, 823, 11, 286, 914, 11, 570, 286, 500, 380, 528, 281, 1884, 411, 1310, 746, 7029, 257, 12905, 11, 457, 661, 721, 500, 380, 13, 50764, 50764, 400, 286, 500, 380, 528, 281, 1884, 7592, 1412, 337, 264, 12905, 4725, 11, 457, 286, 445, 528, 281, 652, 309, 1850, 437, 1629, 3755, 5672, 322, 13, 51114, 51114, 823, 11, 291, 727, 445, 747, 264, 3100, 293, 3838, 4444, 300, 13, 51364, 51364, 865, 11, 300, 576, 312, 264, 912, 551, 13, 51414, 51414, 1779, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09322614348336553, "compression_ratio": 1.6067961165048543, "no_caption_prob": 8.397772944590542e-06}, {"id": 379, "seek": 228100, "start": 2302.0, "end": 2303.0, "text": " Right.", "tokens": [50364, 823, 11, 286, 914, 11, 570, 286, 500, 380, 528, 281, 1884, 411, 1310, 746, 7029, 257, 12905, 11, 457, 661, 721, 500, 380, 13, 50764, 50764, 400, 286, 500, 380, 528, 281, 1884, 7592, 1412, 337, 264, 12905, 4725, 11, 457, 286, 445, 528, 281, 652, 309, 1850, 437, 1629, 3755, 5672, 322, 13, 51114, 51114, 823, 11, 291, 727, 445, 747, 264, 3100, 293, 3838, 4444, 300, 13, 51364, 51364, 865, 11, 300, 576, 312, 264, 912, 551, 13, 51414, 51414, 1779, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09322614348336553, "compression_ratio": 1.6067961165048543, "no_caption_prob": 8.397772944590542e-06}, {"id": 380, "seek": 230300, "start": 2303.0, "end": 2314.0, "text": " And so I guess the, you know, maybe the argument for an extensible record would be that if you wanted to depend on another piece of data, then you could reach for it.", "tokens": [50364, 400, 370, 286, 2041, 264, 11, 291, 458, 11, 1310, 264, 6770, 337, 364, 1279, 30633, 2136, 576, 312, 300, 498, 291, 1415, 281, 5672, 322, 1071, 2522, 295, 1412, 11, 550, 291, 727, 2524, 337, 309, 13, 50914, 50914, 407, 309, 727, 312, 257, 4923, 766, 689, 291, 483, 341, 5121, 321, 434, 1417, 466, 689, 291, 393, 9432, 293, 7694, 3467, 293, 536, 437, 291, 434, 1364, 365, 544, 4448, 11, 51364, 51364, 1339, 412, 264, 912, 565, 291, 366, 1075, 281, 4444, 1071, 2522, 295, 1412, 498, 291, 528, 281, 13, 51614, 51614, 663, 311, 264, 1558, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.061797841389973955, "compression_ratio": 1.7108433734939759, "no_caption_prob": 0.00014200904115568846}, {"id": 381, "seek": 230300, "start": 2314.0, "end": 2323.0, "text": " So it could be a trade off where you get this benefit we're talking about where you can narrow and restrict types and see what you're working with more clearly,", "tokens": [50364, 400, 370, 286, 2041, 264, 11, 291, 458, 11, 1310, 264, 6770, 337, 364, 1279, 30633, 2136, 576, 312, 300, 498, 291, 1415, 281, 5672, 322, 1071, 2522, 295, 1412, 11, 550, 291, 727, 2524, 337, 309, 13, 50914, 50914, 407, 309, 727, 312, 257, 4923, 766, 689, 291, 483, 341, 5121, 321, 434, 1417, 466, 689, 291, 393, 9432, 293, 7694, 3467, 293, 536, 437, 291, 434, 1364, 365, 544, 4448, 11, 51364, 51364, 1339, 412, 264, 912, 565, 291, 366, 1075, 281, 4444, 1071, 2522, 295, 1412, 498, 291, 528, 281, 13, 51614, 51614, 663, 311, 264, 1558, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.061797841389973955, "compression_ratio": 1.7108433734939759, "no_caption_prob": 0.00014200904115568846}, {"id": 382, "seek": 230300, "start": 2323.0, "end": 2328.0, "text": " while at the same time you are able to grab another piece of data if you want to.", "tokens": [50364, 400, 370, 286, 2041, 264, 11, 291, 458, 11, 1310, 264, 6770, 337, 364, 1279, 30633, 2136, 576, 312, 300, 498, 291, 1415, 281, 5672, 322, 1071, 2522, 295, 1412, 11, 550, 291, 727, 2524, 337, 309, 13, 50914, 50914, 407, 309, 727, 312, 257, 4923, 766, 689, 291, 483, 341, 5121, 321, 434, 1417, 466, 689, 291, 393, 9432, 293, 7694, 3467, 293, 536, 437, 291, 434, 1364, 365, 544, 4448, 11, 51364, 51364, 1339, 412, 264, 912, 565, 291, 366, 1075, 281, 4444, 1071, 2522, 295, 1412, 498, 291, 528, 281, 13, 51614, 51614, 663, 311, 264, 1558, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.061797841389973955, "compression_ratio": 1.7108433734939759, "no_caption_prob": 0.00014200904115568846}, {"id": 383, "seek": 230300, "start": 2328.0, "end": 2330.0, "text": " That's the idea.", "tokens": [50364, 400, 370, 286, 2041, 264, 11, 291, 458, 11, 1310, 264, 6770, 337, 364, 1279, 30633, 2136, 576, 312, 300, 498, 291, 1415, 281, 5672, 322, 1071, 2522, 295, 1412, 11, 550, 291, 727, 2524, 337, 309, 13, 50914, 50914, 407, 309, 727, 312, 257, 4923, 766, 689, 291, 483, 341, 5121, 321, 434, 1417, 466, 689, 291, 393, 9432, 293, 7694, 3467, 293, 536, 437, 291, 434, 1364, 365, 544, 4448, 11, 51364, 51364, 1339, 412, 264, 912, 565, 291, 366, 1075, 281, 4444, 1071, 2522, 295, 1412, 498, 291, 528, 281, 13, 51614, 51614, 663, 311, 264, 1558, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.061797841389973955, "compression_ratio": 1.7108433734939759, "no_caption_prob": 0.00014200904115568846}, {"id": 384, "seek": 233000, "start": 2330.0, "end": 2343.0, "text": " In practice, generally I hear, you know, experienced Elm developers complaining about the headache of using extensible records to do that more than saying that it's a pattern that they really like and want to use more.", "tokens": [50364, 682, 3124, 11, 5101, 286, 1568, 11, 291, 458, 11, 6751, 2699, 76, 8849, 20740, 466, 264, 23520, 295, 1228, 1279, 30633, 7724, 281, 360, 300, 544, 813, 1566, 300, 309, 311, 257, 5102, 300, 436, 534, 411, 293, 528, 281, 764, 544, 13, 51014, 51014, 407, 309, 2544, 300, 6063, 294, 3124, 11, 309, 12258, 281, 312, 544, 295, 257, 23520, 281, 6234, 300, 493, 5315, 813, 309, 307, 11, 291, 458, 11, 813, 309, 40923, 13, 51464, 51464, 865, 11, 309, 733, 295, 3417, 411, 544, 411, 32122, 2831, 813, 12686, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08178788788464604, "compression_ratio": 1.7338709677419355, "no_caption_prob": 2.977218355226796e-05}, {"id": 385, "seek": 233000, "start": 2343.0, "end": 2352.0, "text": " So it seems that somehow in practice, it tends to be more of a headache to wire that up everywhere than it is, you know, than it merits.", "tokens": [50364, 682, 3124, 11, 5101, 286, 1568, 11, 291, 458, 11, 6751, 2699, 76, 8849, 20740, 466, 264, 23520, 295, 1228, 1279, 30633, 7724, 281, 360, 300, 544, 813, 1566, 300, 309, 311, 257, 5102, 300, 436, 534, 411, 293, 528, 281, 764, 544, 13, 51014, 51014, 407, 309, 2544, 300, 6063, 294, 3124, 11, 309, 12258, 281, 312, 544, 295, 257, 23520, 281, 6234, 300, 493, 5315, 813, 309, 307, 11, 291, 458, 11, 813, 309, 40923, 13, 51464, 51464, 865, 11, 309, 733, 295, 3417, 411, 544, 411, 32122, 2831, 813, 12686, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08178788788464604, "compression_ratio": 1.7338709677419355, "no_caption_prob": 2.977218355226796e-05}, {"id": 386, "seek": 233000, "start": 2352.0, "end": 2358.0, "text": " Yeah, it kind of feels like more like inheritance rather than composition.", "tokens": [50364, 682, 3124, 11, 5101, 286, 1568, 11, 291, 458, 11, 6751, 2699, 76, 8849, 20740, 466, 264, 23520, 295, 1228, 1279, 30633, 7724, 281, 360, 300, 544, 813, 1566, 300, 309, 311, 257, 5102, 300, 436, 534, 411, 293, 528, 281, 764, 544, 13, 51014, 51014, 407, 309, 2544, 300, 6063, 294, 3124, 11, 309, 12258, 281, 312, 544, 295, 257, 23520, 281, 6234, 300, 493, 5315, 813, 309, 307, 11, 291, 458, 11, 813, 309, 40923, 13, 51464, 51464, 865, 11, 309, 733, 295, 3417, 411, 544, 411, 32122, 2831, 813, 12686, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08178788788464604, "compression_ratio": 1.7338709677419355, "no_caption_prob": 2.977218355226796e-05}, {"id": 387, "seek": 235800, "start": 2358.0, "end": 2360.0, "text": " Yeah, right.", "tokens": [50364, 865, 11, 558, 13, 50464, 50464, 509, 727, 909, 257, 4195, 2519, 281, 428, 7724, 293, 35925, 309, 300, 636, 13, 50714, 50714, 865, 13, 50764, 50764, 16571, 813, 1228, 364, 1279, 30633, 2136, 293, 291, 2759, 380, 362, 264, 912, 2740, 13, 50914, 50914, 1779, 13, 50964, 50964, 865, 11, 286, 914, 11, 309, 611, 20368, 291, 294, 364, 11304, 636, 689, 11, 291, 458, 11, 498, 291, 584, 11, 4177, 11, 286, 600, 658, 257, 5481, 11, 457, 286, 787, 643, 264, 6979, 14862, 337, 341, 3028, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07378419916680519, "compression_ratio": 1.5450236966824644, "no_caption_prob": 2.931070230260957e-05}, {"id": 388, "seek": 235800, "start": 2360.0, "end": 2365.0, "text": " You could add a user field to your records and compose it that way.", "tokens": [50364, 865, 11, 558, 13, 50464, 50464, 509, 727, 909, 257, 4195, 2519, 281, 428, 7724, 293, 35925, 309, 300, 636, 13, 50714, 50714, 865, 13, 50764, 50764, 16571, 813, 1228, 364, 1279, 30633, 2136, 293, 291, 2759, 380, 362, 264, 912, 2740, 13, 50914, 50914, 1779, 13, 50964, 50964, 865, 11, 286, 914, 11, 309, 611, 20368, 291, 294, 364, 11304, 636, 689, 11, 291, 458, 11, 498, 291, 584, 11, 4177, 11, 286, 600, 658, 257, 5481, 11, 457, 286, 787, 643, 264, 6979, 14862, 337, 341, 3028, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07378419916680519, "compression_ratio": 1.5450236966824644, "no_caption_prob": 2.931070230260957e-05}, {"id": 389, "seek": 235800, "start": 2365.0, "end": 2366.0, "text": " Yeah.", "tokens": [50364, 865, 11, 558, 13, 50464, 50464, 509, 727, 909, 257, 4195, 2519, 281, 428, 7724, 293, 35925, 309, 300, 636, 13, 50714, 50714, 865, 13, 50764, 50764, 16571, 813, 1228, 364, 1279, 30633, 2136, 293, 291, 2759, 380, 362, 264, 912, 2740, 13, 50914, 50914, 1779, 13, 50964, 50964, 865, 11, 286, 914, 11, 309, 611, 20368, 291, 294, 364, 11304, 636, 689, 11, 291, 458, 11, 498, 291, 584, 11, 4177, 11, 286, 600, 658, 257, 5481, 11, 457, 286, 787, 643, 264, 6979, 14862, 337, 341, 3028, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07378419916680519, "compression_ratio": 1.5450236966824644, "no_caption_prob": 2.931070230260957e-05}, {"id": 390, "seek": 235800, "start": 2366.0, "end": 2369.0, "text": " Rather than using an extensible record and you wouldn't have the same problems.", "tokens": [50364, 865, 11, 558, 13, 50464, 50464, 509, 727, 909, 257, 4195, 2519, 281, 428, 7724, 293, 35925, 309, 300, 636, 13, 50714, 50714, 865, 13, 50764, 50764, 16571, 813, 1228, 364, 1279, 30633, 2136, 293, 291, 2759, 380, 362, 264, 912, 2740, 13, 50914, 50914, 1779, 13, 50964, 50964, 865, 11, 286, 914, 11, 309, 611, 20368, 291, 294, 364, 11304, 636, 689, 11, 291, 458, 11, 498, 291, 584, 11, 4177, 11, 286, 600, 658, 257, 5481, 11, 457, 286, 787, 643, 264, 6979, 14862, 337, 341, 3028, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07378419916680519, "compression_ratio": 1.5450236966824644, "no_caption_prob": 2.931070230260957e-05}, {"id": 391, "seek": 235800, "start": 2369.0, "end": 2370.0, "text": " Right.", "tokens": [50364, 865, 11, 558, 13, 50464, 50464, 509, 727, 909, 257, 4195, 2519, 281, 428, 7724, 293, 35925, 309, 300, 636, 13, 50714, 50714, 865, 13, 50764, 50764, 16571, 813, 1228, 364, 1279, 30633, 2136, 293, 291, 2759, 380, 362, 264, 912, 2740, 13, 50914, 50914, 1779, 13, 50964, 50964, 865, 11, 286, 914, 11, 309, 611, 20368, 291, 294, 364, 11304, 636, 689, 11, 291, 458, 11, 498, 291, 584, 11, 4177, 11, 286, 600, 658, 257, 5481, 11, 457, 286, 787, 643, 264, 6979, 14862, 337, 341, 3028, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07378419916680519, "compression_ratio": 1.5450236966824644, "no_caption_prob": 2.931070230260957e-05}, {"id": 392, "seek": 235800, "start": 2370.0, "end": 2381.0, "text": " Yeah, I mean, it also couples you in an annoying way where, you know, if you say, hey, I've got a session, but I only need the auth token for this page.", "tokens": [50364, 865, 11, 558, 13, 50464, 50464, 509, 727, 909, 257, 4195, 2519, 281, 428, 7724, 293, 35925, 309, 300, 636, 13, 50714, 50714, 865, 13, 50764, 50764, 16571, 813, 1228, 364, 1279, 30633, 2136, 293, 291, 2759, 380, 362, 264, 912, 2740, 13, 50914, 50914, 1779, 13, 50964, 50964, 865, 11, 286, 914, 11, 309, 611, 20368, 291, 294, 364, 11304, 636, 689, 11, 291, 458, 11, 498, 291, 584, 11, 4177, 11, 286, 600, 658, 257, 5481, 11, 457, 286, 787, 643, 264, 6979, 14862, 337, 341, 3028, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07378419916680519, "compression_ratio": 1.5450236966824644, "no_caption_prob": 2.931070230260957e-05}, {"id": 393, "seek": 238100, "start": 2381.0, "end": 2393.0, "text": " So I'm going to make the type that this page takes be an extensible record, which is only shares this one field in common with the global session type of the auth token.", "tokens": [50364, 407, 286, 478, 516, 281, 652, 264, 2010, 300, 341, 3028, 2516, 312, 364, 1279, 30633, 2136, 11, 597, 307, 787, 12182, 341, 472, 2519, 294, 2689, 365, 264, 4338, 5481, 2010, 295, 264, 6979, 14862, 13, 50964, 50964, 400, 11, 291, 458, 11, 586, 291, 600, 658, 300, 13, 51064, 51064, 583, 586, 498, 291, 36741, 6979, 14862, 420, 1319, 264, 2010, 295, 300, 11, 633, 2167, 1081, 689, 291, 764, 729, 1279, 30633, 7724, 307, 516, 281, 312, 9853, 257, 31958, 6713, 293, 291, 362, 281, 352, 293, 3191, 300, 13, 51614, 51614, 400, 309, 445, 3417, 411, 4676, 16013, 294, 300, 636, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.053630339015613905, "compression_ratio": 1.7088122605363985, "no_caption_prob": 4.2226852201565634e-06}, {"id": 394, "seek": 238100, "start": 2393.0, "end": 2395.0, "text": " And, you know, now you've got that.", "tokens": [50364, 407, 286, 478, 516, 281, 652, 264, 2010, 300, 341, 3028, 2516, 312, 364, 1279, 30633, 2136, 11, 597, 307, 787, 12182, 341, 472, 2519, 294, 2689, 365, 264, 4338, 5481, 2010, 295, 264, 6979, 14862, 13, 50964, 50964, 400, 11, 291, 458, 11, 586, 291, 600, 658, 300, 13, 51064, 51064, 583, 586, 498, 291, 36741, 6979, 14862, 420, 1319, 264, 2010, 295, 300, 11, 633, 2167, 1081, 689, 291, 764, 729, 1279, 30633, 7724, 307, 516, 281, 312, 9853, 257, 31958, 6713, 293, 291, 362, 281, 352, 293, 3191, 300, 13, 51614, 51614, 400, 309, 445, 3417, 411, 4676, 16013, 294, 300, 636, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.053630339015613905, "compression_ratio": 1.7088122605363985, "no_caption_prob": 4.2226852201565634e-06}, {"id": 395, "seek": 238100, "start": 2395.0, "end": 2406.0, "text": " But now if you rename auth token or change the type of that, every single place where you use those extensible records is going to be causing a compiler error and you have to go and fix that.", "tokens": [50364, 407, 286, 478, 516, 281, 652, 264, 2010, 300, 341, 3028, 2516, 312, 364, 1279, 30633, 2136, 11, 597, 307, 787, 12182, 341, 472, 2519, 294, 2689, 365, 264, 4338, 5481, 2010, 295, 264, 6979, 14862, 13, 50964, 50964, 400, 11, 291, 458, 11, 586, 291, 600, 658, 300, 13, 51064, 51064, 583, 586, 498, 291, 36741, 6979, 14862, 420, 1319, 264, 2010, 295, 300, 11, 633, 2167, 1081, 689, 291, 764, 729, 1279, 30633, 7724, 307, 516, 281, 312, 9853, 257, 31958, 6713, 293, 291, 362, 281, 352, 293, 3191, 300, 13, 51614, 51614, 400, 309, 445, 3417, 411, 4676, 16013, 294, 300, 636, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.053630339015613905, "compression_ratio": 1.7088122605363985, "no_caption_prob": 4.2226852201565634e-06}, {"id": 396, "seek": 238100, "start": 2406.0, "end": 2409.0, "text": " And it just feels like heavy handed in that way.", "tokens": [50364, 407, 286, 478, 516, 281, 652, 264, 2010, 300, 341, 3028, 2516, 312, 364, 1279, 30633, 2136, 11, 597, 307, 787, 12182, 341, 472, 2519, 294, 2689, 365, 264, 4338, 5481, 2010, 295, 264, 6979, 14862, 13, 50964, 50964, 400, 11, 291, 458, 11, 586, 291, 600, 658, 300, 13, 51064, 51064, 583, 586, 498, 291, 36741, 6979, 14862, 420, 1319, 264, 2010, 295, 300, 11, 633, 2167, 1081, 689, 291, 764, 729, 1279, 30633, 7724, 307, 516, 281, 312, 9853, 257, 31958, 6713, 293, 291, 362, 281, 352, 293, 3191, 300, 13, 51614, 51614, 400, 309, 445, 3417, 411, 4676, 16013, 294, 300, 636, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.053630339015613905, "compression_ratio": 1.7088122605363985, "no_caption_prob": 4.2226852201565634e-06}, {"id": 397, "seek": 240900, "start": 2409.0, "end": 2412.0, "text": " But they're great for functions.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 398, "seek": 240900, "start": 2412.0, "end": 2415.0, "text": " Just not for function return types.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 399, "seek": 240900, "start": 2415.0, "end": 2416.0, "text": " Yeah.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 400, "seek": 240900, "start": 2416.0, "end": 2417.0, "text": " Yeah.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 401, "seek": 240900, "start": 2417.0, "end": 2419.0, "text": " Oh, you're saying they're great as an argument to a function?", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 402, "seek": 240900, "start": 2419.0, "end": 2420.0, "text": " Extensible records?", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 403, "seek": 240900, "start": 2420.0, "end": 2421.0, "text": " Yeah.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 404, "seek": 240900, "start": 2421.0, "end": 2424.0, "text": " Okay, so you do like using them as an input value.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 405, "seek": 240900, "start": 2424.0, "end": 2425.0, "text": " Yeah, definitely.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 406, "seek": 240900, "start": 2425.0, "end": 2426.0, "text": " Yeah.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 407, "seek": 240900, "start": 2426.0, "end": 2429.0, "text": " Just not as a return value because that means that it's data.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 408, "seek": 240900, "start": 2429.0, "end": 2430.0, "text": " Got it.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 409, "seek": 240900, "start": 2430.0, "end": 2431.0, "text": " Yep.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 410, "seek": 240900, "start": 2431.0, "end": 2436.0, "text": " So you can take in a record and change just one part of it and return that.", "tokens": [50364, 583, 436, 434, 869, 337, 6828, 13, 50514, 50514, 1449, 406, 337, 2445, 2736, 3467, 13, 50664, 50664, 865, 13, 50714, 50714, 865, 13, 50764, 50764, 876, 11, 291, 434, 1566, 436, 434, 869, 382, 364, 6770, 281, 257, 2445, 30, 50864, 50864, 9881, 30633, 7724, 30, 50914, 50914, 865, 13, 50964, 50964, 1033, 11, 370, 291, 360, 411, 1228, 552, 382, 364, 4846, 2158, 13, 51114, 51114, 865, 11, 2138, 13, 51164, 51164, 865, 13, 51214, 51214, 1449, 406, 382, 257, 2736, 2158, 570, 300, 1355, 300, 309, 311, 1412, 13, 51364, 51364, 5803, 309, 13, 51414, 51414, 7010, 13, 51464, 51464, 407, 291, 393, 747, 294, 257, 2136, 293, 1319, 445, 472, 644, 295, 309, 293, 2736, 300, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10216290283203125, "compression_ratio": 1.7130434782608697, "no_caption_prob": 3.763529093703255e-05}, {"id": 411, "seek": 243600, "start": 2436.0, "end": 2450.0, "text": " And if you depend on a particular field, you depend on, you know, you take a session if you wanted a function that performs authentication if needed and it takes a session, but it doesn't know about any of the fields in the session about the auth token.", "tokens": [50364, 400, 498, 291, 5672, 322, 257, 1729, 2519, 11, 291, 5672, 322, 11, 291, 458, 11, 291, 747, 257, 5481, 498, 291, 1415, 257, 2445, 300, 26213, 26643, 498, 2978, 293, 309, 2516, 257, 5481, 11, 457, 309, 1177, 380, 458, 466, 604, 295, 264, 7909, 294, 264, 5481, 466, 264, 6979, 14862, 13, 51064, 51064, 400, 498, 309, 575, 364, 6979, 14862, 11, 550, 1310, 309, 13834, 498, 309, 311, 4451, 293, 652, 512, 12475, 420, 309, 15136, 3781, 309, 498, 309, 2203, 281, 13, 51414, 51414, 400, 550, 309, 9205, 264, 6979, 14862, 13, 51514, 51514, 407, 309, 2962, 264, 5481, 281, 5623, 300, 472, 2519, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06071790762707195, "compression_ratio": 1.9700854700854702, "no_caption_prob": 8.614222315372899e-05}, {"id": 412, "seek": 243600, "start": 2450.0, "end": 2457.0, "text": " And if it has an auth token, then maybe it checks if it's fresh and make some requests or it fetches it if it needs to.", "tokens": [50364, 400, 498, 291, 5672, 322, 257, 1729, 2519, 11, 291, 5672, 322, 11, 291, 458, 11, 291, 747, 257, 5481, 498, 291, 1415, 257, 2445, 300, 26213, 26643, 498, 2978, 293, 309, 2516, 257, 5481, 11, 457, 309, 1177, 380, 458, 466, 604, 295, 264, 7909, 294, 264, 5481, 466, 264, 6979, 14862, 13, 51064, 51064, 400, 498, 309, 575, 364, 6979, 14862, 11, 550, 1310, 309, 13834, 498, 309, 311, 4451, 293, 652, 512, 12475, 420, 309, 15136, 3781, 309, 498, 309, 2203, 281, 13, 51414, 51414, 400, 550, 309, 9205, 264, 6979, 14862, 13, 51514, 51514, 407, 309, 2962, 264, 5481, 281, 5623, 300, 472, 2519, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06071790762707195, "compression_ratio": 1.9700854700854702, "no_caption_prob": 8.614222315372899e-05}, {"id": 413, "seek": 243600, "start": 2457.0, "end": 2459.0, "text": " And then it updates the auth token.", "tokens": [50364, 400, 498, 291, 5672, 322, 257, 1729, 2519, 11, 291, 5672, 322, 11, 291, 458, 11, 291, 747, 257, 5481, 498, 291, 1415, 257, 2445, 300, 26213, 26643, 498, 2978, 293, 309, 2516, 257, 5481, 11, 457, 309, 1177, 380, 458, 466, 604, 295, 264, 7909, 294, 264, 5481, 466, 264, 6979, 14862, 13, 51064, 51064, 400, 498, 309, 575, 364, 6979, 14862, 11, 550, 1310, 309, 13834, 498, 309, 311, 4451, 293, 652, 512, 12475, 420, 309, 15136, 3781, 309, 498, 309, 2203, 281, 13, 51414, 51414, 400, 550, 309, 9205, 264, 6979, 14862, 13, 51514, 51514, 407, 309, 2962, 264, 5481, 281, 5623, 300, 472, 2519, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06071790762707195, "compression_ratio": 1.9700854700854702, "no_caption_prob": 8.614222315372899e-05}, {"id": 414, "seek": 243600, "start": 2459.0, "end": 2462.0, "text": " So it changes the session to update that one field.", "tokens": [50364, 400, 498, 291, 5672, 322, 257, 1729, 2519, 11, 291, 5672, 322, 11, 291, 458, 11, 291, 747, 257, 5481, 498, 291, 1415, 257, 2445, 300, 26213, 26643, 498, 2978, 293, 309, 2516, 257, 5481, 11, 457, 309, 1177, 380, 458, 466, 604, 295, 264, 7909, 294, 264, 5481, 466, 264, 6979, 14862, 13, 51064, 51064, 400, 498, 309, 575, 364, 6979, 14862, 11, 550, 1310, 309, 13834, 498, 309, 311, 4451, 293, 652, 512, 12475, 420, 309, 15136, 3781, 309, 498, 309, 2203, 281, 13, 51414, 51414, 400, 550, 309, 9205, 264, 6979, 14862, 13, 51514, 51514, 407, 309, 2962, 264, 5481, 281, 5623, 300, 472, 2519, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06071790762707195, "compression_ratio": 1.9700854700854702, "no_caption_prob": 8.614222315372899e-05}, {"id": 415, "seek": 246200, "start": 2462.0, "end": 2469.0, "text": " You could have some type signatures using extensible records where you've got, you know, a session is the only field in that extensible record.", "tokens": [50364, 509, 727, 362, 512, 2010, 32322, 1228, 1279, 30633, 7724, 689, 291, 600, 658, 11, 291, 458, 11, 257, 5481, 307, 264, 787, 2519, 294, 300, 1279, 30633, 2136, 13, 50714, 50714, 407, 11, 291, 458, 11, 309, 311, 264, 787, 551, 309, 5946, 322, 293, 309, 311, 264, 787, 551, 309, 11247, 300, 309, 393, 7263, 1319, 13, 50964, 50964, 407, 456, 366, 3331, 689, 300, 393, 312, 10851, 11, 457, 309, 311, 286, 11, 1338, 11, 286, 500, 380, 519, 286, 362, 257, 2068, 1547, 4800, 382, 281, 1968, 291, 820, 5042, 552, 412, 439, 5497, 420, 764, 552, 412, 633, 2650, 412, 341, 935, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07393574714660645, "compression_ratio": 1.7756653992395437, "no_caption_prob": 6.605027738260105e-05}, {"id": 416, "seek": 246200, "start": 2469.0, "end": 2474.0, "text": " So, you know, it's the only thing it depends on and it's the only thing it returns that it can potentially change.", "tokens": [50364, 509, 727, 362, 512, 2010, 32322, 1228, 1279, 30633, 7724, 689, 291, 600, 658, 11, 291, 458, 11, 257, 5481, 307, 264, 787, 2519, 294, 300, 1279, 30633, 2136, 13, 50714, 50714, 407, 11, 291, 458, 11, 309, 311, 264, 787, 551, 309, 5946, 322, 293, 309, 311, 264, 787, 551, 309, 11247, 300, 309, 393, 7263, 1319, 13, 50964, 50964, 407, 456, 366, 3331, 689, 300, 393, 312, 10851, 11, 457, 309, 311, 286, 11, 1338, 11, 286, 500, 380, 519, 286, 362, 257, 2068, 1547, 4800, 382, 281, 1968, 291, 820, 5042, 552, 412, 439, 5497, 420, 764, 552, 412, 633, 2650, 412, 341, 935, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07393574714660645, "compression_ratio": 1.7756653992395437, "no_caption_prob": 6.605027738260105e-05}, {"id": 417, "seek": 246200, "start": 2474.0, "end": 2487.0, "text": " So there are cases where that can be convenient, but it's I, yeah, I don't think I have a strong enough opinion as to whether you should avoid them at all costs or use them at every opportunity at this point.", "tokens": [50364, 509, 727, 362, 512, 2010, 32322, 1228, 1279, 30633, 7724, 689, 291, 600, 658, 11, 291, 458, 11, 257, 5481, 307, 264, 787, 2519, 294, 300, 1279, 30633, 2136, 13, 50714, 50714, 407, 11, 291, 458, 11, 309, 311, 264, 787, 551, 309, 5946, 322, 293, 309, 311, 264, 787, 551, 309, 11247, 300, 309, 393, 7263, 1319, 13, 50964, 50964, 407, 456, 366, 3331, 689, 300, 393, 312, 10851, 11, 457, 309, 311, 286, 11, 1338, 11, 286, 500, 380, 519, 286, 362, 257, 2068, 1547, 4800, 382, 281, 1968, 291, 820, 5042, 552, 412, 439, 5497, 420, 764, 552, 412, 633, 2650, 412, 341, 935, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07393574714660645, "compression_ratio": 1.7756653992395437, "no_caption_prob": 6.605027738260105e-05}, {"id": 418, "seek": 248700, "start": 2487.0, "end": 2493.0, "text": " Yeah. Well, you'll play with it and then you'll make your own opinion because that's one of the nice things with Elm.", "tokens": [50364, 865, 13, 1042, 11, 291, 603, 862, 365, 309, 293, 550, 291, 603, 652, 428, 1065, 4800, 570, 300, 311, 472, 295, 264, 1481, 721, 365, 2699, 76, 13, 50664, 50664, 1743, 498, 415, 11, 309, 311, 1858, 281, 1895, 15104, 721, 13, 50814, 50814, 407, 352, 2286, 293, 862, 365, 746, 11, 853, 428, 636, 293, 550, 652, 428, 4800, 13, 51064, 51064, 400, 337, 512, 1778, 321, 2673, 1009, 808, 646, 281, 264, 912, 4800, 382, 6751, 371, 3093, 338, 6873, 337, 512, 1778, 13, 51414, 51414, 865, 13, 865, 13, 1171, 881, 721, 412, 1935, 13, 51564, 51564, 467, 307, 1880, 13, 1743, 11, 286, 2441, 498, 291, 727, 764, 341, 5102, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20977222124735515, "compression_ratio": 1.7083333333333333, "no_caption_prob": 8.092085045063868e-05}, {"id": 419, "seek": 248700, "start": 2493.0, "end": 2496.0, "text": " Like if he, it's easy to refactor things.", "tokens": [50364, 865, 13, 1042, 11, 291, 603, 862, 365, 309, 293, 550, 291, 603, 652, 428, 1065, 4800, 570, 300, 311, 472, 295, 264, 1481, 721, 365, 2699, 76, 13, 50664, 50664, 1743, 498, 415, 11, 309, 311, 1858, 281, 1895, 15104, 721, 13, 50814, 50814, 407, 352, 2286, 293, 862, 365, 746, 11, 853, 428, 636, 293, 550, 652, 428, 4800, 13, 51064, 51064, 400, 337, 512, 1778, 321, 2673, 1009, 808, 646, 281, 264, 912, 4800, 382, 6751, 371, 3093, 338, 6873, 337, 512, 1778, 13, 51414, 51414, 865, 13, 865, 13, 1171, 881, 721, 412, 1935, 13, 51564, 51564, 467, 307, 1880, 13, 1743, 11, 286, 2441, 498, 291, 727, 764, 341, 5102, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20977222124735515, "compression_ratio": 1.7083333333333333, "no_caption_prob": 8.092085045063868e-05}, {"id": 420, "seek": 248700, "start": 2496.0, "end": 2501.0, "text": " So go ahead and play with something, try your way and then make your opinion.", "tokens": [50364, 865, 13, 1042, 11, 291, 603, 862, 365, 309, 293, 550, 291, 603, 652, 428, 1065, 4800, 570, 300, 311, 472, 295, 264, 1481, 721, 365, 2699, 76, 13, 50664, 50664, 1743, 498, 415, 11, 309, 311, 1858, 281, 1895, 15104, 721, 13, 50814, 50814, 407, 352, 2286, 293, 862, 365, 746, 11, 853, 428, 636, 293, 550, 652, 428, 4800, 13, 51064, 51064, 400, 337, 512, 1778, 321, 2673, 1009, 808, 646, 281, 264, 912, 4800, 382, 6751, 371, 3093, 338, 6873, 337, 512, 1778, 13, 51414, 51414, 865, 13, 865, 13, 1171, 881, 721, 412, 1935, 13, 51564, 51564, 467, 307, 1880, 13, 1743, 11, 286, 2441, 498, 291, 727, 764, 341, 5102, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20977222124735515, "compression_ratio": 1.7083333333333333, "no_caption_prob": 8.092085045063868e-05}, {"id": 421, "seek": 248700, "start": 2501.0, "end": 2508.0, "text": " And for some reason we usually always come back to the same opinion as experienced vettelberg for some reason.", "tokens": [50364, 865, 13, 1042, 11, 291, 603, 862, 365, 309, 293, 550, 291, 603, 652, 428, 1065, 4800, 570, 300, 311, 472, 295, 264, 1481, 721, 365, 2699, 76, 13, 50664, 50664, 1743, 498, 415, 11, 309, 311, 1858, 281, 1895, 15104, 721, 13, 50814, 50814, 407, 352, 2286, 293, 862, 365, 746, 11, 853, 428, 636, 293, 550, 652, 428, 4800, 13, 51064, 51064, 400, 337, 512, 1778, 321, 2673, 1009, 808, 646, 281, 264, 912, 4800, 382, 6751, 371, 3093, 338, 6873, 337, 512, 1778, 13, 51414, 51414, 865, 13, 865, 13, 1171, 881, 721, 412, 1935, 13, 51564, 51564, 467, 307, 1880, 13, 1743, 11, 286, 2441, 498, 291, 727, 764, 341, 5102, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20977222124735515, "compression_ratio": 1.7083333333333333, "no_caption_prob": 8.092085045063868e-05}, {"id": 422, "seek": 248700, "start": 2508.0, "end": 2511.0, "text": " Yeah. Yeah. For most things at least.", "tokens": [50364, 865, 13, 1042, 11, 291, 603, 862, 365, 309, 293, 550, 291, 603, 652, 428, 1065, 4800, 570, 300, 311, 472, 295, 264, 1481, 721, 365, 2699, 76, 13, 50664, 50664, 1743, 498, 415, 11, 309, 311, 1858, 281, 1895, 15104, 721, 13, 50814, 50814, 407, 352, 2286, 293, 862, 365, 746, 11, 853, 428, 636, 293, 550, 652, 428, 4800, 13, 51064, 51064, 400, 337, 512, 1778, 321, 2673, 1009, 808, 646, 281, 264, 912, 4800, 382, 6751, 371, 3093, 338, 6873, 337, 512, 1778, 13, 51414, 51414, 865, 13, 865, 13, 1171, 881, 721, 412, 1935, 13, 51564, 51564, 467, 307, 1880, 13, 1743, 11, 286, 2441, 498, 291, 727, 764, 341, 5102, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20977222124735515, "compression_ratio": 1.7083333333333333, "no_caption_prob": 8.092085045063868e-05}, {"id": 423, "seek": 248700, "start": 2511.0, "end": 2514.0, "text": " It is interesting. Like, I wonder if you could use this pattern.", "tokens": [50364, 865, 13, 1042, 11, 291, 603, 862, 365, 309, 293, 550, 291, 603, 652, 428, 1065, 4800, 570, 300, 311, 472, 295, 264, 1481, 721, 365, 2699, 76, 13, 50664, 50664, 1743, 498, 415, 11, 309, 311, 1858, 281, 1895, 15104, 721, 13, 50814, 50814, 407, 352, 2286, 293, 862, 365, 746, 11, 853, 428, 636, 293, 550, 652, 428, 4800, 13, 51064, 51064, 400, 337, 512, 1778, 321, 2673, 1009, 808, 646, 281, 264, 912, 4800, 382, 6751, 371, 3093, 338, 6873, 337, 512, 1778, 13, 51414, 51414, 865, 13, 865, 13, 1171, 881, 721, 412, 1935, 13, 51564, 51564, 467, 307, 1880, 13, 1743, 11, 286, 2441, 498, 291, 727, 764, 341, 5102, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20977222124735515, "compression_ratio": 1.7083333333333333, "no_caption_prob": 8.092085045063868e-05}, {"id": 424, "seek": 251400, "start": 2514.0, "end": 2524.0, "text": " You know, we sort of talked about like wanting this uniformity where you always have the same arguments coming in and you always have this like mini Elm architecture.", "tokens": [50364, 509, 458, 11, 321, 1333, 295, 2825, 466, 411, 7935, 341, 9452, 507, 689, 291, 1009, 362, 264, 912, 12869, 1348, 294, 293, 291, 1009, 362, 341, 411, 8382, 2699, 76, 9482, 13, 50864, 50864, 286, 2441, 498, 291, 727, 11, 286, 2441, 577, 309, 576, 841, 498, 291, 630, 300, 365, 1279, 30633, 7724, 13, 51114, 51114, 407, 291, 584, 11, 1911, 11, 498, 286, 528, 281, 6234, 294, 257, 777, 2522, 11, 4878, 286, 2041, 264, 1154, 365, 300, 576, 312, 300, 264, 787, 636, 291, 393, 6234, 294, 257, 5622, 498, 309, 311, 885, 8752, 307, 498, 291, 458, 309, 311, 456, 294, 264, 1279, 30633, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04825884777566661, "compression_ratio": 1.7326007326007327, "no_caption_prob": 0.00028232517070136964}, {"id": 425, "seek": 251400, "start": 2524.0, "end": 2529.0, "text": " I wonder if you could, I wonder how it would feel if you did that with extensible records.", "tokens": [50364, 509, 458, 11, 321, 1333, 295, 2825, 466, 411, 7935, 341, 9452, 507, 689, 291, 1009, 362, 264, 912, 12869, 1348, 294, 293, 291, 1009, 362, 341, 411, 8382, 2699, 76, 9482, 13, 50864, 50864, 286, 2441, 498, 291, 727, 11, 286, 2441, 577, 309, 576, 841, 498, 291, 630, 300, 365, 1279, 30633, 7724, 13, 51114, 51114, 407, 291, 584, 11, 1911, 11, 498, 286, 528, 281, 6234, 294, 257, 777, 2522, 11, 4878, 286, 2041, 264, 1154, 365, 300, 576, 312, 300, 264, 787, 636, 291, 393, 6234, 294, 257, 5622, 498, 309, 311, 885, 8752, 307, 498, 291, 458, 309, 311, 456, 294, 264, 1279, 30633, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04825884777566661, "compression_ratio": 1.7326007326007327, "no_caption_prob": 0.00028232517070136964}, {"id": 426, "seek": 251400, "start": 2529.0, "end": 2542.0, "text": " So you say, Hey, if I want to wire in a new piece, although I guess the problem with that would be that the only way you can wire in a command if it's being returned is if you know it's there in the extensible type.", "tokens": [50364, 509, 458, 11, 321, 1333, 295, 2825, 466, 411, 7935, 341, 9452, 507, 689, 291, 1009, 362, 264, 912, 12869, 1348, 294, 293, 291, 1009, 362, 341, 411, 8382, 2699, 76, 9482, 13, 50864, 50864, 286, 2441, 498, 291, 727, 11, 286, 2441, 577, 309, 576, 841, 498, 291, 630, 300, 365, 1279, 30633, 7724, 13, 51114, 51114, 407, 291, 584, 11, 1911, 11, 498, 286, 528, 281, 6234, 294, 257, 777, 2522, 11, 4878, 286, 2041, 264, 1154, 365, 300, 576, 312, 300, 264, 787, 636, 291, 393, 6234, 294, 257, 5622, 498, 309, 311, 885, 8752, 307, 498, 291, 458, 309, 311, 456, 294, 264, 1279, 30633, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04825884777566661, "compression_ratio": 1.7326007326007327, "no_caption_prob": 0.00028232517070136964}, {"id": 427, "seek": 254200, "start": 2542.0, "end": 2548.0, "text": " So you'd still need to wire it in after the extensible record guarantees that it will be present.", "tokens": [50364, 407, 291, 1116, 920, 643, 281, 6234, 309, 294, 934, 264, 1279, 30633, 2136, 32567, 300, 309, 486, 312, 1974, 13, 50664, 50664, 407, 309, 1177, 380, 534, 854, 291, 709, 570, 291, 393, 380, 445, 411, 2387, 309, 382, 257, 1310, 293, 498, 309, 311, 456, 11, 360, 746, 365, 309, 13, 50964, 50964, 400, 611, 291, 1582, 380, 312, 1075, 281, 458, 382, 3612, 1968, 746, 486, 2736, 257, 5622, 13, 51214, 51214, 509, 486, 643, 281, 574, 412, 264, 13397, 295, 264, 11420, 13, 51414, 51414, 400, 456, 291, 536, 300, 309, 486, 458, 309, 1582, 380, 2736, 257, 5622, 6063, 11, 457, 406, 412, 264, 818, 3621, 13, 51764, 51764, 865, 13, 1779, 13, 663, 311, 257, 665, 935, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08414215594530106, "compression_ratio": 1.7482517482517483, "no_caption_prob": 2.046252484433353e-05}, {"id": 428, "seek": 254200, "start": 2548.0, "end": 2554.0, "text": " So it doesn't really help you much because you can't just like treat it as a maybe and if it's there, do something with it.", "tokens": [50364, 407, 291, 1116, 920, 643, 281, 6234, 309, 294, 934, 264, 1279, 30633, 2136, 32567, 300, 309, 486, 312, 1974, 13, 50664, 50664, 407, 309, 1177, 380, 534, 854, 291, 709, 570, 291, 393, 380, 445, 411, 2387, 309, 382, 257, 1310, 293, 498, 309, 311, 456, 11, 360, 746, 365, 309, 13, 50964, 50964, 400, 611, 291, 1582, 380, 312, 1075, 281, 458, 382, 3612, 1968, 746, 486, 2736, 257, 5622, 13, 51214, 51214, 509, 486, 643, 281, 574, 412, 264, 13397, 295, 264, 11420, 13, 51414, 51414, 400, 456, 291, 536, 300, 309, 486, 458, 309, 1582, 380, 2736, 257, 5622, 6063, 11, 457, 406, 412, 264, 818, 3621, 13, 51764, 51764, 865, 13, 1779, 13, 663, 311, 257, 665, 935, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08414215594530106, "compression_ratio": 1.7482517482517483, "no_caption_prob": 2.046252484433353e-05}, {"id": 429, "seek": 254200, "start": 2554.0, "end": 2559.0, "text": " And also you won't be able to know as easily whether something will return a command.", "tokens": [50364, 407, 291, 1116, 920, 643, 281, 6234, 309, 294, 934, 264, 1279, 30633, 2136, 32567, 300, 309, 486, 312, 1974, 13, 50664, 50664, 407, 309, 1177, 380, 534, 854, 291, 709, 570, 291, 393, 380, 445, 411, 2387, 309, 382, 257, 1310, 293, 498, 309, 311, 456, 11, 360, 746, 365, 309, 13, 50964, 50964, 400, 611, 291, 1582, 380, 312, 1075, 281, 458, 382, 3612, 1968, 746, 486, 2736, 257, 5622, 13, 51214, 51214, 509, 486, 643, 281, 574, 412, 264, 13397, 295, 264, 11420, 13, 51414, 51414, 400, 456, 291, 536, 300, 309, 486, 458, 309, 1582, 380, 2736, 257, 5622, 6063, 11, 457, 406, 412, 264, 818, 3621, 13, 51764, 51764, 865, 13, 1779, 13, 663, 311, 257, 665, 935, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08414215594530106, "compression_ratio": 1.7482517482517483, "no_caption_prob": 2.046252484433353e-05}, {"id": 430, "seek": 254200, "start": 2559.0, "end": 2563.0, "text": " You will need to look at the signature of the implementation.", "tokens": [50364, 407, 291, 1116, 920, 643, 281, 6234, 309, 294, 934, 264, 1279, 30633, 2136, 32567, 300, 309, 486, 312, 1974, 13, 50664, 50664, 407, 309, 1177, 380, 534, 854, 291, 709, 570, 291, 393, 380, 445, 411, 2387, 309, 382, 257, 1310, 293, 498, 309, 311, 456, 11, 360, 746, 365, 309, 13, 50964, 50964, 400, 611, 291, 1582, 380, 312, 1075, 281, 458, 382, 3612, 1968, 746, 486, 2736, 257, 5622, 13, 51214, 51214, 509, 486, 643, 281, 574, 412, 264, 13397, 295, 264, 11420, 13, 51414, 51414, 400, 456, 291, 536, 300, 309, 486, 458, 309, 1582, 380, 2736, 257, 5622, 6063, 11, 457, 406, 412, 264, 818, 3621, 13, 51764, 51764, 865, 13, 1779, 13, 663, 311, 257, 665, 935, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08414215594530106, "compression_ratio": 1.7482517482517483, "no_caption_prob": 2.046252484433353e-05}, {"id": 431, "seek": 254200, "start": 2563.0, "end": 2570.0, "text": " And there you see that it will know it won't return a command somehow, but not at the call site.", "tokens": [50364, 407, 291, 1116, 920, 643, 281, 6234, 309, 294, 934, 264, 1279, 30633, 2136, 32567, 300, 309, 486, 312, 1974, 13, 50664, 50664, 407, 309, 1177, 380, 534, 854, 291, 709, 570, 291, 393, 380, 445, 411, 2387, 309, 382, 257, 1310, 293, 498, 309, 311, 456, 11, 360, 746, 365, 309, 13, 50964, 50964, 400, 611, 291, 1582, 380, 312, 1075, 281, 458, 382, 3612, 1968, 746, 486, 2736, 257, 5622, 13, 51214, 51214, 509, 486, 643, 281, 574, 412, 264, 13397, 295, 264, 11420, 13, 51414, 51414, 400, 456, 291, 536, 300, 309, 486, 458, 309, 1582, 380, 2736, 257, 5622, 6063, 11, 457, 406, 412, 264, 818, 3621, 13, 51764, 51764, 865, 13, 1779, 13, 663, 311, 257, 665, 935, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08414215594530106, "compression_ratio": 1.7482517482517483, "no_caption_prob": 2.046252484433353e-05}, {"id": 432, "seek": 254200, "start": 2570.0, "end": 2571.0, "text": " Yeah. Right. That's a good point.", "tokens": [50364, 407, 291, 1116, 920, 643, 281, 6234, 309, 294, 934, 264, 1279, 30633, 2136, 32567, 300, 309, 486, 312, 1974, 13, 50664, 50664, 407, 309, 1177, 380, 534, 854, 291, 709, 570, 291, 393, 380, 445, 411, 2387, 309, 382, 257, 1310, 293, 498, 309, 311, 456, 11, 360, 746, 365, 309, 13, 50964, 50964, 400, 611, 291, 1582, 380, 312, 1075, 281, 458, 382, 3612, 1968, 746, 486, 2736, 257, 5622, 13, 51214, 51214, 509, 486, 643, 281, 574, 412, 264, 13397, 295, 264, 11420, 13, 51414, 51414, 400, 456, 291, 536, 300, 309, 486, 458, 309, 1582, 380, 2736, 257, 5622, 6063, 11, 457, 406, 412, 264, 818, 3621, 13, 51764, 51764, 865, 13, 1779, 13, 663, 311, 257, 665, 935, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08414215594530106, "compression_ratio": 1.7482517482517483, "no_caption_prob": 2.046252484433353e-05}, {"id": 433, "seek": 257100, "start": 2571.0, "end": 2584.0, "text": " But yeah, so I guess the, I mean, one of the big overall lessons, I think, so we talked about like the core mechanics of narrowing, being able to think more locally, composing rather than deeply nesting things.", "tokens": [50364, 583, 1338, 11, 370, 286, 2041, 264, 11, 286, 914, 11, 472, 295, 264, 955, 4787, 8820, 11, 286, 519, 11, 370, 321, 2825, 466, 411, 264, 4965, 12939, 295, 9432, 278, 11, 885, 1075, 281, 519, 544, 16143, 11, 715, 6110, 2831, 813, 8760, 297, 8714, 721, 13, 51014, 51014, 400, 286, 519, 472, 295, 264, 45584, 886, 11, 291, 458, 11, 321, 600, 2825, 466, 341, 294, 264, 1791, 307, 341, 1558, 295, 411, 11, 437, 307, 309, 300, 1669, 3089, 6909, 712, 30, 51414, 51414, 286, 914, 11, 321, 6909, 293, 1401, 3089, 709, 544, 2049, 813, 321, 909, 777, 4122, 293, 1319, 721, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0860771792275565, "compression_ratio": 1.754863813229572, "no_caption_prob": 0.00017398189811501652}, {"id": 434, "seek": 257100, "start": 2584.0, "end": 2592.0, "text": " And I think one of the takeaways too, you know, we've talked about this in the past is this idea of like, what is it that makes code maintainable?", "tokens": [50364, 583, 1338, 11, 370, 286, 2041, 264, 11, 286, 914, 11, 472, 295, 264, 955, 4787, 8820, 11, 286, 519, 11, 370, 321, 2825, 466, 411, 264, 4965, 12939, 295, 9432, 278, 11, 885, 1075, 281, 519, 544, 16143, 11, 715, 6110, 2831, 813, 8760, 297, 8714, 721, 13, 51014, 51014, 400, 286, 519, 472, 295, 264, 45584, 886, 11, 291, 458, 11, 321, 600, 2825, 466, 341, 294, 264, 1791, 307, 341, 1558, 295, 411, 11, 437, 307, 309, 300, 1669, 3089, 6909, 712, 30, 51414, 51414, 286, 914, 11, 321, 6909, 293, 1401, 3089, 709, 544, 2049, 813, 321, 909, 777, 4122, 293, 1319, 721, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0860771792275565, "compression_ratio": 1.754863813229572, "no_caption_prob": 0.00017398189811501652}, {"id": 435, "seek": 257100, "start": 2592.0, "end": 2600.0, "text": " I mean, we maintain and read code much more often than we add new features and change things.", "tokens": [50364, 583, 1338, 11, 370, 286, 2041, 264, 11, 286, 914, 11, 472, 295, 264, 955, 4787, 8820, 11, 286, 519, 11, 370, 321, 2825, 466, 411, 264, 4965, 12939, 295, 9432, 278, 11, 885, 1075, 281, 519, 544, 16143, 11, 715, 6110, 2831, 813, 8760, 297, 8714, 721, 13, 51014, 51014, 400, 286, 519, 472, 295, 264, 45584, 886, 11, 291, 458, 11, 321, 600, 2825, 466, 341, 294, 264, 1791, 307, 341, 1558, 295, 411, 11, 437, 307, 309, 300, 1669, 3089, 6909, 712, 30, 51414, 51414, 286, 914, 11, 321, 6909, 293, 1401, 3089, 709, 544, 2049, 813, 321, 909, 777, 4122, 293, 1319, 721, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0860771792275565, "compression_ratio": 1.754863813229572, "no_caption_prob": 0.00017398189811501652}, {"id": 436, "seek": 260000, "start": 2600.0, "end": 2602.0, "text": " Add new features.", "tokens": [50364, 5349, 777, 4122, 13, 50464, 50464, 407, 498, 291, 393, 652, 309, 1858, 281, 13508, 689, 721, 366, 1348, 490, 11, 754, 498, 309, 311, 544, 9595, 541, 11, 754, 498, 309, 311, 544, 2252, 281, 6234, 294, 257, 777, 551, 11, 300, 5367, 445, 5314, 493, 11, 291, 458, 11, 498, 291, 645, 281, 3364, 309, 382, 364, 5367, 295, 577, 6909, 712, 307, 341, 2699, 76, 3089, 13, 51314, 51314, 1779, 13, 400, 291, 362, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08061030434399116, "compression_ratio": 1.549222797927461, "no_caption_prob": 0.00013340027362573892}, {"id": 437, "seek": 260000, "start": 2602.0, "end": 2619.0, "text": " So if you can make it easy to trace where things are coming from, even if it's more verbose, even if it's more difficult to wire in a new thing, that equation just ends up, you know, if you were to weight it as an equation of how maintainable is this Elm code.", "tokens": [50364, 5349, 777, 4122, 13, 50464, 50464, 407, 498, 291, 393, 652, 309, 1858, 281, 13508, 689, 721, 366, 1348, 490, 11, 754, 498, 309, 311, 544, 9595, 541, 11, 754, 498, 309, 311, 544, 2252, 281, 6234, 294, 257, 777, 551, 11, 300, 5367, 445, 5314, 493, 11, 291, 458, 11, 498, 291, 645, 281, 3364, 309, 382, 364, 5367, 295, 577, 6909, 712, 307, 341, 2699, 76, 3089, 13, 51314, 51314, 1779, 13, 400, 291, 362, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08061030434399116, "compression_ratio": 1.549222797927461, "no_caption_prob": 0.00013340027362573892}, {"id": 438, "seek": 260000, "start": 2619.0, "end": 2620.0, "text": " Right. And you have.", "tokens": [50364, 5349, 777, 4122, 13, 50464, 50464, 407, 498, 291, 393, 652, 309, 1858, 281, 13508, 689, 721, 366, 1348, 490, 11, 754, 498, 309, 311, 544, 9595, 541, 11, 754, 498, 309, 311, 544, 2252, 281, 6234, 294, 257, 777, 551, 11, 300, 5367, 445, 5314, 493, 11, 291, 458, 11, 498, 291, 645, 281, 3364, 309, 382, 364, 5367, 295, 577, 6909, 712, 307, 341, 2699, 76, 3089, 13, 51314, 51314, 1779, 13, 400, 291, 362, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08061030434399116, "compression_ratio": 1.549222797927461, "no_caption_prob": 0.00013340027362573892}, {"id": 439, "seek": 262000, "start": 2620.0, "end": 2637.0, "text": " So like, let's make it an index like maintainability equals, you know, some constant times readability plus some constant times localized thinking ability plus some constant times the pain of wiring in.", "tokens": [50364, 407, 411, 11, 718, 311, 652, 309, 364, 8186, 411, 6909, 2310, 6915, 11, 291, 458, 11, 512, 5754, 1413, 1401, 2310, 1804, 512, 5754, 1413, 44574, 1953, 3485, 1804, 512, 5754, 1413, 264, 1822, 295, 27520, 294, 13, 51214, 51214, 759, 286, 1319, 721, 293, 300, 5754, 958, 281, 264, 1822, 295, 27520, 721, 666, 1319, 721, 307, 516, 281, 312, 588, 1359, 5347, 281, 264, 5754, 294, 1868, 295, 44574, 21577, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08581486726418519, "compression_ratio": 1.9086294416243654, "no_caption_prob": 1.9525428797351196e-05}, {"id": 440, "seek": 262000, "start": 2637.0, "end": 2647.0, "text": " If I change things and that constant next to the pain of wiring things into change things is going to be very small compared to the constant in front of localized reasoning.", "tokens": [50364, 407, 411, 11, 718, 311, 652, 309, 364, 8186, 411, 6909, 2310, 6915, 11, 291, 458, 11, 512, 5754, 1413, 1401, 2310, 1804, 512, 5754, 1413, 44574, 1953, 3485, 1804, 512, 5754, 1413, 264, 1822, 295, 27520, 294, 13, 51214, 51214, 759, 286, 1319, 721, 293, 300, 5754, 958, 281, 264, 1822, 295, 27520, 721, 666, 1319, 721, 307, 516, 281, 312, 588, 1359, 5347, 281, 264, 5754, 294, 1868, 295, 44574, 21577, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08581486726418519, "compression_ratio": 1.9086294416243654, "no_caption_prob": 1.9525428797351196e-05}, {"id": 441, "seek": 264700, "start": 2647.0, "end": 2652.0, "text": " So you want to optimize for that thing, even if it means it's going to be a pain with wiring things.", "tokens": [50364, 407, 291, 528, 281, 19719, 337, 300, 551, 11, 754, 498, 309, 1355, 309, 311, 516, 281, 312, 257, 1822, 365, 27520, 721, 13, 50614, 50614, 400, 309, 311, 411, 11, 307, 300, 534, 264, 551, 300, 311, 1455, 291, 1286, 5692, 293, 3089, 294, 428, 6586, 5692, 30, 50914, 50914, 865, 11, 286, 519, 291, 434, 558, 11, 570, 456, 311, 406, 257, 688, 295, 2098, 281, 6234, 721, 294, 364, 2699, 76, 13, 51214, 51214, 1779, 13, 467, 311, 257, 1822, 293, 321, 534, 500, 380, 411, 27520, 13, 51364, 51364, 400, 370, 309, 3417, 411, 456, 311, 746, 2085, 562, 321, 434, 27520, 13, 51564, 51564, 583, 307, 300, 534, 437, 35789, 291, 760, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06545602689023877, "compression_ratio": 1.73828125, "no_caption_prob": 2.885653157136403e-05}, {"id": 442, "seek": 264700, "start": 2652.0, "end": 2658.0, "text": " And it's like, is that really the thing that's making you move slowly and code in your cycle slowly?", "tokens": [50364, 407, 291, 528, 281, 19719, 337, 300, 551, 11, 754, 498, 309, 1355, 309, 311, 516, 281, 312, 257, 1822, 365, 27520, 721, 13, 50614, 50614, 400, 309, 311, 411, 11, 307, 300, 534, 264, 551, 300, 311, 1455, 291, 1286, 5692, 293, 3089, 294, 428, 6586, 5692, 30, 50914, 50914, 865, 11, 286, 519, 291, 434, 558, 11, 570, 456, 311, 406, 257, 688, 295, 2098, 281, 6234, 721, 294, 364, 2699, 76, 13, 51214, 51214, 1779, 13, 467, 311, 257, 1822, 293, 321, 534, 500, 380, 411, 27520, 13, 51364, 51364, 400, 370, 309, 3417, 411, 456, 311, 746, 2085, 562, 321, 434, 27520, 13, 51564, 51564, 583, 307, 300, 534, 437, 35789, 291, 760, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06545602689023877, "compression_ratio": 1.73828125, "no_caption_prob": 2.885653157136403e-05}, {"id": 443, "seek": 264700, "start": 2658.0, "end": 2664.0, "text": " Yeah, I think you're right, because there's not a lot of ways to wire things in an Elm.", "tokens": [50364, 407, 291, 528, 281, 19719, 337, 300, 551, 11, 754, 498, 309, 1355, 309, 311, 516, 281, 312, 257, 1822, 365, 27520, 721, 13, 50614, 50614, 400, 309, 311, 411, 11, 307, 300, 534, 264, 551, 300, 311, 1455, 291, 1286, 5692, 293, 3089, 294, 428, 6586, 5692, 30, 50914, 50914, 865, 11, 286, 519, 291, 434, 558, 11, 570, 456, 311, 406, 257, 688, 295, 2098, 281, 6234, 721, 294, 364, 2699, 76, 13, 51214, 51214, 1779, 13, 467, 311, 257, 1822, 293, 321, 534, 500, 380, 411, 27520, 13, 51364, 51364, 400, 370, 309, 3417, 411, 456, 311, 746, 2085, 562, 321, 434, 27520, 13, 51564, 51564, 583, 307, 300, 534, 437, 35789, 291, 760, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06545602689023877, "compression_ratio": 1.73828125, "no_caption_prob": 2.885653157136403e-05}, {"id": 444, "seek": 264700, "start": 2664.0, "end": 2667.0, "text": " Right. It's a pain and we really don't like wiring.", "tokens": [50364, 407, 291, 528, 281, 19719, 337, 300, 551, 11, 754, 498, 309, 1355, 309, 311, 516, 281, 312, 257, 1822, 365, 27520, 721, 13, 50614, 50614, 400, 309, 311, 411, 11, 307, 300, 534, 264, 551, 300, 311, 1455, 291, 1286, 5692, 293, 3089, 294, 428, 6586, 5692, 30, 50914, 50914, 865, 11, 286, 519, 291, 434, 558, 11, 570, 456, 311, 406, 257, 688, 295, 2098, 281, 6234, 721, 294, 364, 2699, 76, 13, 51214, 51214, 1779, 13, 467, 311, 257, 1822, 293, 321, 534, 500, 380, 411, 27520, 13, 51364, 51364, 400, 370, 309, 3417, 411, 456, 311, 746, 2085, 562, 321, 434, 27520, 13, 51564, 51564, 583, 307, 300, 534, 437, 35789, 291, 760, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06545602689023877, "compression_ratio": 1.73828125, "no_caption_prob": 2.885653157136403e-05}, {"id": 445, "seek": 264700, "start": 2667.0, "end": 2671.0, "text": " And so it feels like there's something wrong when we're wiring.", "tokens": [50364, 407, 291, 528, 281, 19719, 337, 300, 551, 11, 754, 498, 309, 1355, 309, 311, 516, 281, 312, 257, 1822, 365, 27520, 721, 13, 50614, 50614, 400, 309, 311, 411, 11, 307, 300, 534, 264, 551, 300, 311, 1455, 291, 1286, 5692, 293, 3089, 294, 428, 6586, 5692, 30, 50914, 50914, 865, 11, 286, 519, 291, 434, 558, 11, 570, 456, 311, 406, 257, 688, 295, 2098, 281, 6234, 721, 294, 364, 2699, 76, 13, 51214, 51214, 1779, 13, 467, 311, 257, 1822, 293, 321, 534, 500, 380, 411, 27520, 13, 51364, 51364, 400, 370, 309, 3417, 411, 456, 311, 746, 2085, 562, 321, 434, 27520, 13, 51564, 51564, 583, 307, 300, 534, 437, 35789, 291, 760, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06545602689023877, "compression_ratio": 1.73828125, "no_caption_prob": 2.885653157136403e-05}, {"id": 446, "seek": 264700, "start": 2671.0, "end": 2673.0, "text": " But is that really what slows you down?", "tokens": [50364, 407, 291, 528, 281, 19719, 337, 300, 551, 11, 754, 498, 309, 1355, 309, 311, 516, 281, 312, 257, 1822, 365, 27520, 721, 13, 50614, 50614, 400, 309, 311, 411, 11, 307, 300, 534, 264, 551, 300, 311, 1455, 291, 1286, 5692, 293, 3089, 294, 428, 6586, 5692, 30, 50914, 50914, 865, 11, 286, 519, 291, 434, 558, 11, 570, 456, 311, 406, 257, 688, 295, 2098, 281, 6234, 721, 294, 364, 2699, 76, 13, 51214, 51214, 1779, 13, 467, 311, 257, 1822, 293, 321, 534, 500, 380, 411, 27520, 13, 51364, 51364, 400, 370, 309, 3417, 411, 456, 311, 746, 2085, 562, 321, 434, 27520, 13, 51564, 51564, 583, 307, 300, 534, 437, 35789, 291, 760, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06545602689023877, "compression_ratio": 1.73828125, "no_caption_prob": 2.885653157136403e-05}, {"id": 447, "seek": 267300, "start": 2673.0, "end": 2682.0, "text": " And actually, in practice, it's not it like it feels sleek and it feels like we're really flowing when we don't have to wire things.", "tokens": [50364, 400, 767, 11, 294, 3124, 11, 309, 311, 406, 309, 411, 309, 3417, 43464, 293, 309, 3417, 411, 321, 434, 534, 13974, 562, 321, 500, 380, 362, 281, 6234, 721, 13, 50814, 50814, 583, 264, 721, 300, 321, 534, 483, 5541, 322, 293, 300, 534, 2964, 505, 760, 307, 411, 11, 689, 307, 341, 7426, 1348, 490, 30, 51114, 51114, 2305, 360, 286, 1319, 341, 551, 30, 51164, 51164, 759, 286, 498, 286, 2557, 341, 3089, 11, 437, 661, 721, 366, 7263, 516, 281, 1821, 30, 51414, 51414, 400, 498, 291, 393, 19719, 264, 12872, 484, 295, 300, 11, 550, 291, 434, 516, 281, 312, 2684, 534, 2370, 13, 51664, 51664, 663, 311, 767, 437, 1669, 291, 1286, 2370, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0357227748440158, "compression_ratio": 1.775735294117647, "no_caption_prob": 0.00015116688155103475}, {"id": 448, "seek": 267300, "start": 2682.0, "end": 2688.0, "text": " But the things that we really get stuck on and that really slow us down is like, where is this bug coming from?", "tokens": [50364, 400, 767, 11, 294, 3124, 11, 309, 311, 406, 309, 411, 309, 3417, 43464, 293, 309, 3417, 411, 321, 434, 534, 13974, 562, 321, 500, 380, 362, 281, 6234, 721, 13, 50814, 50814, 583, 264, 721, 300, 321, 534, 483, 5541, 322, 293, 300, 534, 2964, 505, 760, 307, 411, 11, 689, 307, 341, 7426, 1348, 490, 30, 51114, 51114, 2305, 360, 286, 1319, 341, 551, 30, 51164, 51164, 759, 286, 498, 286, 2557, 341, 3089, 11, 437, 661, 721, 366, 7263, 516, 281, 1821, 30, 51414, 51414, 400, 498, 291, 393, 19719, 264, 12872, 484, 295, 300, 11, 550, 291, 434, 516, 281, 312, 2684, 534, 2370, 13, 51664, 51664, 663, 311, 767, 437, 1669, 291, 1286, 2370, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0357227748440158, "compression_ratio": 1.775735294117647, "no_caption_prob": 0.00015116688155103475}, {"id": 449, "seek": 267300, "start": 2688.0, "end": 2689.0, "text": " Where do I change this thing?", "tokens": [50364, 400, 767, 11, 294, 3124, 11, 309, 311, 406, 309, 411, 309, 3417, 43464, 293, 309, 3417, 411, 321, 434, 534, 13974, 562, 321, 500, 380, 362, 281, 6234, 721, 13, 50814, 50814, 583, 264, 721, 300, 321, 534, 483, 5541, 322, 293, 300, 534, 2964, 505, 760, 307, 411, 11, 689, 307, 341, 7426, 1348, 490, 30, 51114, 51114, 2305, 360, 286, 1319, 341, 551, 30, 51164, 51164, 759, 286, 498, 286, 2557, 341, 3089, 11, 437, 661, 721, 366, 7263, 516, 281, 1821, 30, 51414, 51414, 400, 498, 291, 393, 19719, 264, 12872, 484, 295, 300, 11, 550, 291, 434, 516, 281, 312, 2684, 534, 2370, 13, 51664, 51664, 663, 311, 767, 437, 1669, 291, 1286, 2370, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0357227748440158, "compression_ratio": 1.775735294117647, "no_caption_prob": 0.00015116688155103475}, {"id": 450, "seek": 267300, "start": 2689.0, "end": 2694.0, "text": " If I if I touch this code, what other things are potentially going to break?", "tokens": [50364, 400, 767, 11, 294, 3124, 11, 309, 311, 406, 309, 411, 309, 3417, 43464, 293, 309, 3417, 411, 321, 434, 534, 13974, 562, 321, 500, 380, 362, 281, 6234, 721, 13, 50814, 50814, 583, 264, 721, 300, 321, 534, 483, 5541, 322, 293, 300, 534, 2964, 505, 760, 307, 411, 11, 689, 307, 341, 7426, 1348, 490, 30, 51114, 51114, 2305, 360, 286, 1319, 341, 551, 30, 51164, 51164, 759, 286, 498, 286, 2557, 341, 3089, 11, 437, 661, 721, 366, 7263, 516, 281, 1821, 30, 51414, 51414, 400, 498, 291, 393, 19719, 264, 12872, 484, 295, 300, 11, 550, 291, 434, 516, 281, 312, 2684, 534, 2370, 13, 51664, 51664, 663, 311, 767, 437, 1669, 291, 1286, 2370, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0357227748440158, "compression_ratio": 1.775735294117647, "no_caption_prob": 0.00015116688155103475}, {"id": 451, "seek": 267300, "start": 2694.0, "end": 2699.0, "text": " And if you can optimize the heck out of that, then you're going to be moving really fast.", "tokens": [50364, 400, 767, 11, 294, 3124, 11, 309, 311, 406, 309, 411, 309, 3417, 43464, 293, 309, 3417, 411, 321, 434, 534, 13974, 562, 321, 500, 380, 362, 281, 6234, 721, 13, 50814, 50814, 583, 264, 721, 300, 321, 534, 483, 5541, 322, 293, 300, 534, 2964, 505, 760, 307, 411, 11, 689, 307, 341, 7426, 1348, 490, 30, 51114, 51114, 2305, 360, 286, 1319, 341, 551, 30, 51164, 51164, 759, 286, 498, 286, 2557, 341, 3089, 11, 437, 661, 721, 366, 7263, 516, 281, 1821, 30, 51414, 51414, 400, 498, 291, 393, 19719, 264, 12872, 484, 295, 300, 11, 550, 291, 434, 516, 281, 312, 2684, 534, 2370, 13, 51664, 51664, 663, 311, 767, 437, 1669, 291, 1286, 2370, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0357227748440158, "compression_ratio": 1.775735294117647, "no_caption_prob": 0.00015116688155103475}, {"id": 452, "seek": 267300, "start": 2699.0, "end": 2701.0, "text": " That's actually what makes you move fast.", "tokens": [50364, 400, 767, 11, 294, 3124, 11, 309, 311, 406, 309, 411, 309, 3417, 43464, 293, 309, 3417, 411, 321, 434, 534, 13974, 562, 321, 500, 380, 362, 281, 6234, 721, 13, 50814, 50814, 583, 264, 721, 300, 321, 534, 483, 5541, 322, 293, 300, 534, 2964, 505, 760, 307, 411, 11, 689, 307, 341, 7426, 1348, 490, 30, 51114, 51114, 2305, 360, 286, 1319, 341, 551, 30, 51164, 51164, 759, 286, 498, 286, 2557, 341, 3089, 11, 437, 661, 721, 366, 7263, 516, 281, 1821, 30, 51414, 51414, 400, 498, 291, 393, 19719, 264, 12872, 484, 295, 300, 11, 550, 291, 434, 516, 281, 312, 2684, 534, 2370, 13, 51664, 51664, 663, 311, 767, 437, 1669, 291, 1286, 2370, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0357227748440158, "compression_ratio": 1.775735294117647, "no_caption_prob": 0.00015116688155103475}, {"id": 453, "seek": 270100, "start": 2701.0, "end": 2709.0, "text": " I know there's a few packages which try to make the wiring easier, especially for like update functions.", "tokens": [50364, 286, 458, 456, 311, 257, 1326, 17401, 597, 853, 281, 652, 264, 27520, 3571, 11, 2318, 337, 411, 5623, 6828, 13, 50764, 50764, 1779, 13, 3013, 747, 411, 2580, 1166, 3758, 9205, 13, 50964, 50964, 865, 13, 1743, 293, 360, 5623, 293, 909, 16901, 13, 51214, 51214, 3950, 366, 1596, 1481, 13, 51314, 51314, 865, 11, 286, 500, 380, 3986, 365, 300, 13, 51364, 51364, 509, 434, 406, 257, 3429, 30, 51414, 51414, 883, 11, 286, 841, 411, 300, 311, 26941, 264, 2085, 551, 570, 27520, 307, 1238, 2199, 281, 1401, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17701754967371622, "compression_ratio": 1.523404255319149, "no_caption_prob": 0.00011411071318434551}, {"id": 454, "seek": 270100, "start": 2709.0, "end": 2713.0, "text": " Right. Which take like applicative style updates.", "tokens": [50364, 286, 458, 456, 311, 257, 1326, 17401, 597, 853, 281, 652, 264, 27520, 3571, 11, 2318, 337, 411, 5623, 6828, 13, 50764, 50764, 1779, 13, 3013, 747, 411, 2580, 1166, 3758, 9205, 13, 50964, 50964, 865, 13, 1743, 293, 360, 5623, 293, 909, 16901, 13, 51214, 51214, 3950, 366, 1596, 1481, 13, 51314, 51314, 865, 11, 286, 500, 380, 3986, 365, 300, 13, 51364, 51364, 509, 434, 406, 257, 3429, 30, 51414, 51414, 883, 11, 286, 841, 411, 300, 311, 26941, 264, 2085, 551, 570, 27520, 307, 1238, 2199, 281, 1401, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17701754967371622, "compression_ratio": 1.523404255319149, "no_caption_prob": 0.00011411071318434551}, {"id": 455, "seek": 270100, "start": 2713.0, "end": 2718.0, "text": " Yeah. Like and do update and add commands.", "tokens": [50364, 286, 458, 456, 311, 257, 1326, 17401, 597, 853, 281, 652, 264, 27520, 3571, 11, 2318, 337, 411, 5623, 6828, 13, 50764, 50764, 1779, 13, 3013, 747, 411, 2580, 1166, 3758, 9205, 13, 50964, 50964, 865, 13, 1743, 293, 360, 5623, 293, 909, 16901, 13, 51214, 51214, 3950, 366, 1596, 1481, 13, 51314, 51314, 865, 11, 286, 500, 380, 3986, 365, 300, 13, 51364, 51364, 509, 434, 406, 257, 3429, 30, 51414, 51414, 883, 11, 286, 841, 411, 300, 311, 26941, 264, 2085, 551, 570, 27520, 307, 1238, 2199, 281, 1401, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17701754967371622, "compression_ratio": 1.523404255319149, "no_caption_prob": 0.00011411071318434551}, {"id": 456, "seek": 270100, "start": 2718.0, "end": 2720.0, "text": " Those are quite nice.", "tokens": [50364, 286, 458, 456, 311, 257, 1326, 17401, 597, 853, 281, 652, 264, 27520, 3571, 11, 2318, 337, 411, 5623, 6828, 13, 50764, 50764, 1779, 13, 3013, 747, 411, 2580, 1166, 3758, 9205, 13, 50964, 50964, 865, 13, 1743, 293, 360, 5623, 293, 909, 16901, 13, 51214, 51214, 3950, 366, 1596, 1481, 13, 51314, 51314, 865, 11, 286, 500, 380, 3986, 365, 300, 13, 51364, 51364, 509, 434, 406, 257, 3429, 30, 51414, 51414, 883, 11, 286, 841, 411, 300, 311, 26941, 264, 2085, 551, 570, 27520, 307, 1238, 2199, 281, 1401, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17701754967371622, "compression_ratio": 1.523404255319149, "no_caption_prob": 0.00011411071318434551}, {"id": 457, "seek": 270100, "start": 2720.0, "end": 2721.0, "text": " Yeah, I don't agree with that.", "tokens": [50364, 286, 458, 456, 311, 257, 1326, 17401, 597, 853, 281, 652, 264, 27520, 3571, 11, 2318, 337, 411, 5623, 6828, 13, 50764, 50764, 1779, 13, 3013, 747, 411, 2580, 1166, 3758, 9205, 13, 50964, 50964, 865, 13, 1743, 293, 360, 5623, 293, 909, 16901, 13, 51214, 51214, 3950, 366, 1596, 1481, 13, 51314, 51314, 865, 11, 286, 500, 380, 3986, 365, 300, 13, 51364, 51364, 509, 434, 406, 257, 3429, 30, 51414, 51414, 883, 11, 286, 841, 411, 300, 311, 26941, 264, 2085, 551, 570, 27520, 307, 1238, 2199, 281, 1401, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17701754967371622, "compression_ratio": 1.523404255319149, "no_caption_prob": 0.00011411071318434551}, {"id": 458, "seek": 270100, "start": 2721.0, "end": 2722.0, "text": " You're not a fan?", "tokens": [50364, 286, 458, 456, 311, 257, 1326, 17401, 597, 853, 281, 652, 264, 27520, 3571, 11, 2318, 337, 411, 5623, 6828, 13, 50764, 50764, 1779, 13, 3013, 747, 411, 2580, 1166, 3758, 9205, 13, 50964, 50964, 865, 13, 1743, 293, 360, 5623, 293, 909, 16901, 13, 51214, 51214, 3950, 366, 1596, 1481, 13, 51314, 51314, 865, 11, 286, 500, 380, 3986, 365, 300, 13, 51364, 51364, 509, 434, 406, 257, 3429, 30, 51414, 51414, 883, 11, 286, 841, 411, 300, 311, 26941, 264, 2085, 551, 570, 27520, 307, 1238, 2199, 281, 1401, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17701754967371622, "compression_ratio": 1.523404255319149, "no_caption_prob": 0.00011411071318434551}, {"id": 459, "seek": 270100, "start": 2722.0, "end": 2728.0, "text": " No, I feel like that's optimized the wrong thing because wiring is pretty simple to read.", "tokens": [50364, 286, 458, 456, 311, 257, 1326, 17401, 597, 853, 281, 652, 264, 27520, 3571, 11, 2318, 337, 411, 5623, 6828, 13, 50764, 50764, 1779, 13, 3013, 747, 411, 2580, 1166, 3758, 9205, 13, 50964, 50964, 865, 13, 1743, 293, 360, 5623, 293, 909, 16901, 13, 51214, 51214, 3950, 366, 1596, 1481, 13, 51314, 51314, 865, 11, 286, 500, 380, 3986, 365, 300, 13, 51364, 51364, 509, 434, 406, 257, 3429, 30, 51414, 51414, 883, 11, 286, 841, 411, 300, 311, 26941, 264, 2085, 551, 570, 27520, 307, 1238, 2199, 281, 1401, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17701754967371622, "compression_ratio": 1.523404255319149, "no_caption_prob": 0.00011411071318434551}, {"id": 460, "seek": 272800, "start": 2728.0, "end": 2731.0, "text": " And easy to write also.", "tokens": [50364, 400, 1858, 281, 2464, 611, 13, 50514, 50514, 583, 498, 291, 909, 257, 777, 19864, 337, 4084, 428, 16901, 293, 428, 9205, 11, 300, 1669, 309, 544, 3997, 570, 309, 311, 1570, 4963, 13, 51014, 51014, 583, 286, 658, 291, 13, 51064, 51064, 509, 500, 380, 1565, 257, 688, 295, 777, 721, 281, 264, 3199, 13, 51264, 51264, 286, 536, 13, 407, 291, 434, 4476, 1566, 300, 309, 7029, 257, 1333, 295, 9452, 507, 300, 382, 321, 434, 1417, 466, 40425, 337, 300, 9452, 507, 1669, 291, 406, 19719, 337, 264, 534, 1021, 551, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13357437018192175, "compression_ratio": 1.6385542168674698, "no_caption_prob": 1.2805355254386086e-05}, {"id": 461, "seek": 272800, "start": 2731.0, "end": 2741.0, "text": " But if you add a new vocabulary for creating your commands and your updates, that makes it more complex because it's less familiar.", "tokens": [50364, 400, 1858, 281, 2464, 611, 13, 50514, 50514, 583, 498, 291, 909, 257, 777, 19864, 337, 4084, 428, 16901, 293, 428, 9205, 11, 300, 1669, 309, 544, 3997, 570, 309, 311, 1570, 4963, 13, 51014, 51014, 583, 286, 658, 291, 13, 51064, 51064, 509, 500, 380, 1565, 257, 688, 295, 777, 721, 281, 264, 3199, 13, 51264, 51264, 286, 536, 13, 407, 291, 434, 4476, 1566, 300, 309, 7029, 257, 1333, 295, 9452, 507, 300, 382, 321, 434, 1417, 466, 40425, 337, 300, 9452, 507, 1669, 291, 406, 19719, 337, 264, 534, 1021, 551, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13357437018192175, "compression_ratio": 1.6385542168674698, "no_caption_prob": 1.2805355254386086e-05}, {"id": 462, "seek": 272800, "start": 2741.0, "end": 2742.0, "text": " But I got you.", "tokens": [50364, 400, 1858, 281, 2464, 611, 13, 50514, 50514, 583, 498, 291, 909, 257, 777, 19864, 337, 4084, 428, 16901, 293, 428, 9205, 11, 300, 1669, 309, 544, 3997, 570, 309, 311, 1570, 4963, 13, 51014, 51014, 583, 286, 658, 291, 13, 51064, 51064, 509, 500, 380, 1565, 257, 688, 295, 777, 721, 281, 264, 3199, 13, 51264, 51264, 286, 536, 13, 407, 291, 434, 4476, 1566, 300, 309, 7029, 257, 1333, 295, 9452, 507, 300, 382, 321, 434, 1417, 466, 40425, 337, 300, 9452, 507, 1669, 291, 406, 19719, 337, 264, 534, 1021, 551, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13357437018192175, "compression_ratio": 1.6385542168674698, "no_caption_prob": 1.2805355254386086e-05}, {"id": 463, "seek": 272800, "start": 2742.0, "end": 2746.0, "text": " You don't bring a lot of new things to the table.", "tokens": [50364, 400, 1858, 281, 2464, 611, 13, 50514, 50514, 583, 498, 291, 909, 257, 777, 19864, 337, 4084, 428, 16901, 293, 428, 9205, 11, 300, 1669, 309, 544, 3997, 570, 309, 311, 1570, 4963, 13, 51014, 51014, 583, 286, 658, 291, 13, 51064, 51064, 509, 500, 380, 1565, 257, 688, 295, 777, 721, 281, 264, 3199, 13, 51264, 51264, 286, 536, 13, 407, 291, 434, 4476, 1566, 300, 309, 7029, 257, 1333, 295, 9452, 507, 300, 382, 321, 434, 1417, 466, 40425, 337, 300, 9452, 507, 1669, 291, 406, 19719, 337, 264, 534, 1021, 551, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13357437018192175, "compression_ratio": 1.6385542168674698, "no_caption_prob": 1.2805355254386086e-05}, {"id": 464, "seek": 272800, "start": 2746.0, "end": 2757.0, "text": " I see. So you're essentially saying that it requires a sort of uniformity that as we're talking about optimizing for that uniformity makes you not optimize for the really important thing,", "tokens": [50364, 400, 1858, 281, 2464, 611, 13, 50514, 50514, 583, 498, 291, 909, 257, 777, 19864, 337, 4084, 428, 16901, 293, 428, 9205, 11, 300, 1669, 309, 544, 3997, 570, 309, 311, 1570, 4963, 13, 51014, 51014, 583, 286, 658, 291, 13, 51064, 51064, 509, 500, 380, 1565, 257, 688, 295, 777, 721, 281, 264, 3199, 13, 51264, 51264, 286, 536, 13, 407, 291, 434, 4476, 1566, 300, 309, 7029, 257, 1333, 295, 9452, 507, 300, 382, 321, 434, 1417, 466, 40425, 337, 300, 9452, 507, 1669, 291, 406, 19719, 337, 264, 534, 1021, 551, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13357437018192175, "compression_ratio": 1.6385542168674698, "no_caption_prob": 1.2805355254386086e-05}, {"id": 465, "seek": 275700, "start": 2757.0, "end": 2759.0, "text": " which is localized reasoning.", "tokens": [50364, 597, 307, 44574, 21577, 13, 50464, 50464, 407, 291, 500, 380, 411, 729, 17401, 570, 309, 7029, 300, 9452, 507, 30, 50614, 50614, 883, 11, 570, 286, 500, 380, 519, 309, 11606, 2654, 7203, 13, 50764, 50764, 865, 13, 467, 1669, 309, 6081, 281, 1401, 293, 281, 1223, 437, 264, 5623, 2445, 775, 294, 264, 1389, 295, 264, 5623, 2445, 570, 300, 311, 257, 688, 1570, 4963, 13, 51264, 51264, 400, 286, 727, 1466, 309, 11, 457, 286, 500, 380, 915, 264, 3380, 551, 3997, 13, 51514, 51514, 1743, 12678, 2316, 293, 257, 1329, 295, 16901, 307, 406, 588, 3997, 281, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09959495401828089, "compression_ratio": 1.647940074906367, "no_caption_prob": 4.8324469389626756e-05}, {"id": 466, "seek": 275700, "start": 2759.0, "end": 2762.0, "text": " So you don't like those packages because it requires that uniformity?", "tokens": [50364, 597, 307, 44574, 21577, 13, 50464, 50464, 407, 291, 500, 380, 411, 729, 17401, 570, 309, 7029, 300, 9452, 507, 30, 50614, 50614, 883, 11, 570, 286, 500, 380, 519, 309, 11606, 2654, 7203, 13, 50764, 50764, 865, 13, 467, 1669, 309, 6081, 281, 1401, 293, 281, 1223, 437, 264, 5623, 2445, 775, 294, 264, 1389, 295, 264, 5623, 2445, 570, 300, 311, 257, 688, 1570, 4963, 13, 51264, 51264, 400, 286, 727, 1466, 309, 11, 457, 286, 500, 380, 915, 264, 3380, 551, 3997, 13, 51514, 51514, 1743, 12678, 2316, 293, 257, 1329, 295, 16901, 307, 406, 588, 3997, 281, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09959495401828089, "compression_ratio": 1.647940074906367, "no_caption_prob": 4.8324469389626756e-05}, {"id": 467, "seek": 275700, "start": 2762.0, "end": 2765.0, "text": " No, because I don't think it impacts local wealth.", "tokens": [50364, 597, 307, 44574, 21577, 13, 50464, 50464, 407, 291, 500, 380, 411, 729, 17401, 570, 309, 7029, 300, 9452, 507, 30, 50614, 50614, 883, 11, 570, 286, 500, 380, 519, 309, 11606, 2654, 7203, 13, 50764, 50764, 865, 13, 467, 1669, 309, 6081, 281, 1401, 293, 281, 1223, 437, 264, 5623, 2445, 775, 294, 264, 1389, 295, 264, 5623, 2445, 570, 300, 311, 257, 688, 1570, 4963, 13, 51264, 51264, 400, 286, 727, 1466, 309, 11, 457, 286, 500, 380, 915, 264, 3380, 551, 3997, 13, 51514, 51514, 1743, 12678, 2316, 293, 257, 1329, 295, 16901, 307, 406, 588, 3997, 281, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09959495401828089, "compression_ratio": 1.647940074906367, "no_caption_prob": 4.8324469389626756e-05}, {"id": 468, "seek": 275700, "start": 2765.0, "end": 2775.0, "text": " Yeah. It makes it harder to read and to understand what the update function does in the case of the update function because that's a lot less familiar.", "tokens": [50364, 597, 307, 44574, 21577, 13, 50464, 50464, 407, 291, 500, 380, 411, 729, 17401, 570, 309, 7029, 300, 9452, 507, 30, 50614, 50614, 883, 11, 570, 286, 500, 380, 519, 309, 11606, 2654, 7203, 13, 50764, 50764, 865, 13, 467, 1669, 309, 6081, 281, 1401, 293, 281, 1223, 437, 264, 5623, 2445, 775, 294, 264, 1389, 295, 264, 5623, 2445, 570, 300, 311, 257, 688, 1570, 4963, 13, 51264, 51264, 400, 286, 727, 1466, 309, 11, 457, 286, 500, 380, 915, 264, 3380, 551, 3997, 13, 51514, 51514, 1743, 12678, 2316, 293, 257, 1329, 295, 16901, 307, 406, 588, 3997, 281, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09959495401828089, "compression_ratio": 1.647940074906367, "no_caption_prob": 4.8324469389626756e-05}, {"id": 469, "seek": 275700, "start": 2775.0, "end": 2780.0, "text": " And I could learn it, but I don't find the original thing complex.", "tokens": [50364, 597, 307, 44574, 21577, 13, 50464, 50464, 407, 291, 500, 380, 411, 729, 17401, 570, 309, 7029, 300, 9452, 507, 30, 50614, 50614, 883, 11, 570, 286, 500, 380, 519, 309, 11606, 2654, 7203, 13, 50764, 50764, 865, 13, 467, 1669, 309, 6081, 281, 1401, 293, 281, 1223, 437, 264, 5623, 2445, 775, 294, 264, 1389, 295, 264, 5623, 2445, 570, 300, 311, 257, 688, 1570, 4963, 13, 51264, 51264, 400, 286, 727, 1466, 309, 11, 457, 286, 500, 380, 915, 264, 3380, 551, 3997, 13, 51514, 51514, 1743, 12678, 2316, 293, 257, 1329, 295, 16901, 307, 406, 588, 3997, 281, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09959495401828089, "compression_ratio": 1.647940074906367, "no_caption_prob": 4.8324469389626756e-05}, {"id": 470, "seek": 275700, "start": 2780.0, "end": 2784.0, "text": " Like returning model and a list of commands is not very complex to me.", "tokens": [50364, 597, 307, 44574, 21577, 13, 50464, 50464, 407, 291, 500, 380, 411, 729, 17401, 570, 309, 7029, 300, 9452, 507, 30, 50614, 50614, 883, 11, 570, 286, 500, 380, 519, 309, 11606, 2654, 7203, 13, 50764, 50764, 865, 13, 467, 1669, 309, 6081, 281, 1401, 293, 281, 1223, 437, 264, 5623, 2445, 775, 294, 264, 1389, 295, 264, 5623, 2445, 570, 300, 311, 257, 688, 1570, 4963, 13, 51264, 51264, 400, 286, 727, 1466, 309, 11, 457, 286, 500, 380, 915, 264, 3380, 551, 3997, 13, 51514, 51514, 1743, 12678, 2316, 293, 257, 1329, 295, 16901, 307, 406, 588, 3997, 281, 385, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09959495401828089, "compression_ratio": 1.647940074906367, "no_caption_prob": 4.8324469389626756e-05}, {"id": 471, "seek": 278400, "start": 2784.0, "end": 2789.0, "text": " So yeah, having a package for that just makes things more complex in my head.", "tokens": [50364, 407, 1338, 11, 1419, 257, 7372, 337, 300, 445, 1669, 721, 544, 3997, 294, 452, 1378, 13, 50614, 50614, 865, 11, 286, 914, 11, 456, 366, 2138, 721, 300, 291, 393, 909, 294, 257, 15517, 300, 11, 797, 11, 291, 528, 721, 281, 312, 10199, 712, 13, 50964, 50964, 821, 366, 2098, 281, 909, 721, 294, 257, 15517, 689, 291, 434, 767, 1455, 721, 406, 35925, 9594, 11, 754, 1673, 309, 3417, 1481, 570, 309, 311, 294, 257, 15517, 13, 51414, 51414, 400, 286, 500, 380, 458, 13, 286, 519, 294, 1629, 2199, 3331, 309, 393, 312, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10467933205997243, "compression_ratio": 1.7125, "no_caption_prob": 9.910247899824753e-05}, {"id": 472, "seek": 278400, "start": 2789.0, "end": 2796.0, "text": " Yeah, I mean, there are definitely things that you can add in a pipeline that, again, you want things to be composable.", "tokens": [50364, 407, 1338, 11, 1419, 257, 7372, 337, 300, 445, 1669, 721, 544, 3997, 294, 452, 1378, 13, 50614, 50614, 865, 11, 286, 914, 11, 456, 366, 2138, 721, 300, 291, 393, 909, 294, 257, 15517, 300, 11, 797, 11, 291, 528, 721, 281, 312, 10199, 712, 13, 50964, 50964, 821, 366, 2098, 281, 909, 721, 294, 257, 15517, 689, 291, 434, 767, 1455, 721, 406, 35925, 9594, 11, 754, 1673, 309, 3417, 1481, 570, 309, 311, 294, 257, 15517, 13, 51414, 51414, 400, 286, 500, 380, 458, 13, 286, 519, 294, 1629, 2199, 3331, 309, 393, 312, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10467933205997243, "compression_ratio": 1.7125, "no_caption_prob": 9.910247899824753e-05}, {"id": 473, "seek": 278400, "start": 2796.0, "end": 2805.0, "text": " There are ways to add things in a pipeline where you're actually making things not compose nicely, even though it feels nice because it's in a pipeline.", "tokens": [50364, 407, 1338, 11, 1419, 257, 7372, 337, 300, 445, 1669, 721, 544, 3997, 294, 452, 1378, 13, 50614, 50614, 865, 11, 286, 914, 11, 456, 366, 2138, 721, 300, 291, 393, 909, 294, 257, 15517, 300, 11, 797, 11, 291, 528, 721, 281, 312, 10199, 712, 13, 50964, 50964, 821, 366, 2098, 281, 909, 721, 294, 257, 15517, 689, 291, 434, 767, 1455, 721, 406, 35925, 9594, 11, 754, 1673, 309, 3417, 1481, 570, 309, 311, 294, 257, 15517, 13, 51414, 51414, 400, 286, 500, 380, 458, 13, 286, 519, 294, 1629, 2199, 3331, 309, 393, 312, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10467933205997243, "compression_ratio": 1.7125, "no_caption_prob": 9.910247899824753e-05}, {"id": 474, "seek": 278400, "start": 2805.0, "end": 2810.0, "text": " And I don't know. I think in certain simple cases it can be.", "tokens": [50364, 407, 1338, 11, 1419, 257, 7372, 337, 300, 445, 1669, 721, 544, 3997, 294, 452, 1378, 13, 50614, 50614, 865, 11, 286, 914, 11, 456, 366, 2138, 721, 300, 291, 393, 909, 294, 257, 15517, 300, 11, 797, 11, 291, 528, 721, 281, 312, 10199, 712, 13, 50964, 50964, 821, 366, 2098, 281, 909, 721, 294, 257, 15517, 689, 291, 434, 767, 1455, 721, 406, 35925, 9594, 11, 754, 1673, 309, 3417, 1481, 570, 309, 311, 294, 257, 15517, 13, 51414, 51414, 400, 286, 500, 380, 458, 13, 286, 519, 294, 1629, 2199, 3331, 309, 393, 312, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10467933205997243, "compression_ratio": 1.7125, "no_caption_prob": 9.910247899824753e-05}, {"id": 475, "seek": 281000, "start": 2810.0, "end": 2824.0, "text": " So like I've seen some nice patterns in codebases where you have like, you know, whatever you need to refresh this cache and then you need to do this and then you need to do all these different things in the update function.", "tokens": [50364, 407, 411, 286, 600, 1612, 512, 1481, 8294, 294, 3089, 65, 1957, 689, 291, 362, 411, 11, 291, 458, 11, 2035, 291, 643, 281, 15134, 341, 19459, 293, 550, 291, 643, 281, 360, 341, 293, 550, 291, 643, 281, 360, 439, 613, 819, 721, 294, 264, 5623, 2445, 13, 51064, 51064, 400, 291, 603, 1333, 295, 5021, 729, 294, 293, 35925, 552, 13, 51214, 51214, 407, 309, 603, 312, 257, 1333, 295, 411, 2685, 9362, 337, 300, 3089, 3096, 281, 584, 11, 4177, 11, 613, 366, 264, 3467, 295, 721, 11, 291, 458, 11, 652, 988, 291, 434, 27231, 294, 293, 550, 360, 341, 551, 420, 2035, 309, 815, 312, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09324650142503821, "compression_ratio": 1.8046875, "no_caption_prob": 9.91447304841131e-05}, {"id": 476, "seek": 281000, "start": 2824.0, "end": 2827.0, "text": " And you'll sort of chain those in and compose them.", "tokens": [50364, 407, 411, 286, 600, 1612, 512, 1481, 8294, 294, 3089, 65, 1957, 689, 291, 362, 411, 11, 291, 458, 11, 2035, 291, 643, 281, 15134, 341, 19459, 293, 550, 291, 643, 281, 360, 341, 293, 550, 291, 643, 281, 360, 439, 613, 819, 721, 294, 264, 5623, 2445, 13, 51064, 51064, 400, 291, 603, 1333, 295, 5021, 729, 294, 293, 35925, 552, 13, 51214, 51214, 407, 309, 603, 312, 257, 1333, 295, 411, 2685, 9362, 337, 300, 3089, 3096, 281, 584, 11, 4177, 11, 613, 366, 264, 3467, 295, 721, 11, 291, 458, 11, 652, 988, 291, 434, 27231, 294, 293, 550, 360, 341, 551, 420, 2035, 309, 815, 312, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09324650142503821, "compression_ratio": 1.8046875, "no_caption_prob": 9.91447304841131e-05}, {"id": 477, "seek": 281000, "start": 2827.0, "end": 2836.0, "text": " So it'll be a sort of like specific API for that code base to say, hey, these are the types of things, you know, make sure you're logged in and then do this thing or whatever it may be.", "tokens": [50364, 407, 411, 286, 600, 1612, 512, 1481, 8294, 294, 3089, 65, 1957, 689, 291, 362, 411, 11, 291, 458, 11, 2035, 291, 643, 281, 15134, 341, 19459, 293, 550, 291, 643, 281, 360, 341, 293, 550, 291, 643, 281, 360, 439, 613, 819, 721, 294, 264, 5623, 2445, 13, 51064, 51064, 400, 291, 603, 1333, 295, 5021, 729, 294, 293, 35925, 552, 13, 51214, 51214, 407, 309, 603, 312, 257, 1333, 295, 411, 2685, 9362, 337, 300, 3089, 3096, 281, 584, 11, 4177, 11, 613, 366, 264, 3467, 295, 721, 11, 291, 458, 11, 652, 988, 291, 434, 27231, 294, 293, 550, 360, 341, 551, 420, 2035, 309, 815, 312, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09324650142503821, "compression_ratio": 1.8046875, "no_caption_prob": 9.91447304841131e-05}, {"id": 478, "seek": 283600, "start": 2836.0, "end": 2840.0, "text": " And that can be a quite nice way to compose things.", "tokens": [50364, 400, 300, 393, 312, 257, 1596, 1481, 636, 281, 35925, 721, 13, 50564, 50564, 407, 293, 321, 600, 2825, 466, 341, 949, 11, 1322, 428, 1065, 46593, 11, 2171, 411, 24140, 322, 17401, 337, 300, 13, 50864, 50864, 4803, 729, 721, 366, 1101, 382, 10249, 2831, 813, 445, 1228, 552, 766, 264, 15222, 13, 51064, 51064, 1449, 411, 441, 10288, 10297, 1365, 11, 764, 309, 382, 364, 1365, 11, 457, 500, 380, 26225, 264, 3089, 382, 309, 307, 281, 722, 428, 1716, 365, 11, 286, 1116, 584, 13, 51414, 51414, 1779, 13, 865, 13, 4387, 428, 1065, 32567, 13, 4387, 428, 1065, 2098, 295, 715, 6110, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09378959014352443, "compression_ratio": 1.6379928315412187, "no_caption_prob": 0.00011958678078372031}, {"id": 479, "seek": 283600, "start": 2840.0, "end": 2846.0, "text": " So and we've talked about this before, build your own tooling, sometimes like relying on packages for that.", "tokens": [50364, 400, 300, 393, 312, 257, 1596, 1481, 636, 281, 35925, 721, 13, 50564, 50564, 407, 293, 321, 600, 2825, 466, 341, 949, 11, 1322, 428, 1065, 46593, 11, 2171, 411, 24140, 322, 17401, 337, 300, 13, 50864, 50864, 4803, 729, 721, 366, 1101, 382, 10249, 2831, 813, 445, 1228, 552, 766, 264, 15222, 13, 51064, 51064, 1449, 411, 441, 10288, 10297, 1365, 11, 764, 309, 382, 364, 1365, 11, 457, 500, 380, 26225, 264, 3089, 382, 309, 307, 281, 722, 428, 1716, 365, 11, 286, 1116, 584, 13, 51414, 51414, 1779, 13, 865, 13, 4387, 428, 1065, 32567, 13, 4387, 428, 1065, 2098, 295, 715, 6110, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09378959014352443, "compression_ratio": 1.6379928315412187, "no_caption_prob": 0.00011958678078372031}, {"id": 480, "seek": 283600, "start": 2846.0, "end": 2850.0, "text": " Sometimes those things are better as inspiration rather than just using them off the shelf.", "tokens": [50364, 400, 300, 393, 312, 257, 1596, 1481, 636, 281, 35925, 721, 13, 50564, 50564, 407, 293, 321, 600, 2825, 466, 341, 949, 11, 1322, 428, 1065, 46593, 11, 2171, 411, 24140, 322, 17401, 337, 300, 13, 50864, 50864, 4803, 729, 721, 366, 1101, 382, 10249, 2831, 813, 445, 1228, 552, 766, 264, 15222, 13, 51064, 51064, 1449, 411, 441, 10288, 10297, 1365, 11, 764, 309, 382, 364, 1365, 11, 457, 500, 380, 26225, 264, 3089, 382, 309, 307, 281, 722, 428, 1716, 365, 11, 286, 1116, 584, 13, 51414, 51414, 1779, 13, 865, 13, 4387, 428, 1065, 32567, 13, 4387, 428, 1065, 2098, 295, 715, 6110, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09378959014352443, "compression_ratio": 1.6379928315412187, "no_caption_prob": 0.00011958678078372031}, {"id": 481, "seek": 283600, "start": 2850.0, "end": 2857.0, "text": " Just like LMSPA example, use it as an example, but don't reuse the code as it is to start your project with, I'd say.", "tokens": [50364, 400, 300, 393, 312, 257, 1596, 1481, 636, 281, 35925, 721, 13, 50564, 50564, 407, 293, 321, 600, 2825, 466, 341, 949, 11, 1322, 428, 1065, 46593, 11, 2171, 411, 24140, 322, 17401, 337, 300, 13, 50864, 50864, 4803, 729, 721, 366, 1101, 382, 10249, 2831, 813, 445, 1228, 552, 766, 264, 15222, 13, 51064, 51064, 1449, 411, 441, 10288, 10297, 1365, 11, 764, 309, 382, 364, 1365, 11, 457, 500, 380, 26225, 264, 3089, 382, 309, 307, 281, 722, 428, 1716, 365, 11, 286, 1116, 584, 13, 51414, 51414, 1779, 13, 865, 13, 4387, 428, 1065, 32567, 13, 4387, 428, 1065, 2098, 295, 715, 6110, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09378959014352443, "compression_ratio": 1.6379928315412187, "no_caption_prob": 0.00011958678078372031}, {"id": 482, "seek": 283600, "start": 2857.0, "end": 2861.0, "text": " Right. Yeah. Make your own guarantees. Make your own ways of composing things together.", "tokens": [50364, 400, 300, 393, 312, 257, 1596, 1481, 636, 281, 35925, 721, 13, 50564, 50564, 407, 293, 321, 600, 2825, 466, 341, 949, 11, 1322, 428, 1065, 46593, 11, 2171, 411, 24140, 322, 17401, 337, 300, 13, 50864, 50864, 4803, 729, 721, 366, 1101, 382, 10249, 2831, 813, 445, 1228, 552, 766, 264, 15222, 13, 51064, 51064, 1449, 411, 441, 10288, 10297, 1365, 11, 764, 309, 382, 364, 1365, 11, 457, 500, 380, 26225, 264, 3089, 382, 309, 307, 281, 722, 428, 1716, 365, 11, 286, 1116, 584, 13, 51414, 51414, 1779, 13, 865, 13, 4387, 428, 1065, 32567, 13, 4387, 428, 1065, 2098, 295, 715, 6110, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09378959014352443, "compression_ratio": 1.6379928315412187, "no_caption_prob": 0.00011958678078372031}, {"id": 483, "seek": 286100, "start": 2861.0, "end": 2869.0, "text": " All right. Well, what resources can we give people to help them get started with this journey of scaling their Elm applications?", "tokens": [50364, 1057, 558, 13, 1042, 11, 437, 3593, 393, 321, 976, 561, 281, 854, 552, 483, 1409, 365, 341, 4671, 295, 21589, 641, 2699, 76, 5821, 30, 50764, 50764, 286, 576, 312, 890, 891, 498, 286, 994, 380, 584, 9809, 42677, 1601, 311, 21589, 2699, 76, 7733, 13, 51014, 51014, 865, 13, 286, 519, 321, 600, 2835, 309, 949, 13, 51164, 51164, 1042, 3163, 257, 1159, 13, 865, 13, 634, 534, 485, 51264, 51264, 22246, 17062, 13, 51364, 51364, 865, 13, 865, 13, 821, 311, 257, 688, 295, 665, 1507, 294, 456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.141244908173879, "compression_ratio": 1.5065502183406114, "no_caption_prob": 9.460696310270578e-05}, {"id": 484, "seek": 286100, "start": 2869.0, "end": 2874.0, "text": " I would be remiss if I didn't say Richard Feldman's scaling Elm apps.", "tokens": [50364, 1057, 558, 13, 1042, 11, 437, 3593, 393, 321, 976, 561, 281, 854, 552, 483, 1409, 365, 341, 4671, 295, 21589, 641, 2699, 76, 5821, 30, 50764, 50764, 286, 576, 312, 890, 891, 498, 286, 994, 380, 584, 9809, 42677, 1601, 311, 21589, 2699, 76, 7733, 13, 51014, 51014, 865, 13, 286, 519, 321, 600, 2835, 309, 949, 13, 51164, 51164, 1042, 3163, 257, 1159, 13, 865, 13, 634, 534, 485, 51264, 51264, 22246, 17062, 13, 51364, 51364, 865, 13, 865, 13, 821, 311, 257, 688, 295, 665, 1507, 294, 456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.141244908173879, "compression_ratio": 1.5065502183406114, "no_caption_prob": 9.460696310270578e-05}, {"id": 485, "seek": 286100, "start": 2874.0, "end": 2877.0, "text": " Yeah. I think we've mentioned it before.", "tokens": [50364, 1057, 558, 13, 1042, 11, 437, 3593, 393, 321, 976, 561, 281, 854, 552, 483, 1409, 365, 341, 4671, 295, 21589, 641, 2699, 76, 5821, 30, 50764, 50764, 286, 576, 312, 890, 891, 498, 286, 994, 380, 584, 9809, 42677, 1601, 311, 21589, 2699, 76, 7733, 13, 51014, 51014, 865, 13, 286, 519, 321, 600, 2835, 309, 949, 13, 51164, 51164, 1042, 3163, 257, 1159, 13, 865, 13, 634, 534, 485, 51264, 51264, 22246, 17062, 13, 51364, 51364, 865, 13, 865, 13, 821, 311, 257, 688, 295, 665, 1507, 294, 456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.141244908173879, "compression_ratio": 1.5065502183406114, "no_caption_prob": 9.460696310270578e-05}, {"id": 486, "seek": 286100, "start": 2877.0, "end": 2879.0, "text": " Well worth a watch. Yeah. He really...", "tokens": [50364, 1057, 558, 13, 1042, 11, 437, 3593, 393, 321, 976, 561, 281, 854, 552, 483, 1409, 365, 341, 4671, 295, 21589, 641, 2699, 76, 5821, 30, 50764, 50764, 286, 576, 312, 890, 891, 498, 286, 994, 380, 584, 9809, 42677, 1601, 311, 21589, 2699, 76, 7733, 13, 51014, 51014, 865, 13, 286, 519, 321, 600, 2835, 309, 949, 13, 51164, 51164, 1042, 3163, 257, 1159, 13, 865, 13, 634, 534, 485, 51264, 51264, 22246, 17062, 13, 51364, 51364, 865, 13, 865, 13, 821, 311, 257, 688, 295, 665, 1507, 294, 456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.141244908173879, "compression_ratio": 1.5065502183406114, "no_caption_prob": 9.460696310270578e-05}, {"id": 487, "seek": 286100, "start": 2879.0, "end": 2881.0, "text": " Several watches.", "tokens": [50364, 1057, 558, 13, 1042, 11, 437, 3593, 393, 321, 976, 561, 281, 854, 552, 483, 1409, 365, 341, 4671, 295, 21589, 641, 2699, 76, 5821, 30, 50764, 50764, 286, 576, 312, 890, 891, 498, 286, 994, 380, 584, 9809, 42677, 1601, 311, 21589, 2699, 76, 7733, 13, 51014, 51014, 865, 13, 286, 519, 321, 600, 2835, 309, 949, 13, 51164, 51164, 1042, 3163, 257, 1159, 13, 865, 13, 634, 534, 485, 51264, 51264, 22246, 17062, 13, 51364, 51364, 865, 13, 865, 13, 821, 311, 257, 688, 295, 665, 1507, 294, 456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.141244908173879, "compression_ratio": 1.5065502183406114, "no_caption_prob": 9.460696310270578e-05}, {"id": 488, "seek": 286100, "start": 2881.0, "end": 2883.0, "text": " Yeah. Yeah. There's a lot of good stuff in there.", "tokens": [50364, 1057, 558, 13, 1042, 11, 437, 3593, 393, 321, 976, 561, 281, 854, 552, 483, 1409, 365, 341, 4671, 295, 21589, 641, 2699, 76, 5821, 30, 50764, 50764, 286, 576, 312, 890, 891, 498, 286, 994, 380, 584, 9809, 42677, 1601, 311, 21589, 2699, 76, 7733, 13, 51014, 51014, 865, 13, 286, 519, 321, 600, 2835, 309, 949, 13, 51164, 51164, 1042, 3163, 257, 1159, 13, 865, 13, 634, 534, 485, 51264, 51264, 22246, 17062, 13, 51364, 51364, 865, 13, 865, 13, 821, 311, 257, 688, 295, 665, 1507, 294, 456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.141244908173879, "compression_ratio": 1.5065502183406114, "no_caption_prob": 9.460696310270578e-05}, {"id": 489, "seek": 288300, "start": 2883.0, "end": 2891.0, "text": " And he does a really good job sort of giving a lot of concrete examples of this process of narrowing.", "tokens": [50364, 400, 415, 775, 257, 534, 665, 1691, 1333, 295, 2902, 257, 688, 295, 9859, 5110, 295, 341, 1399, 295, 9432, 278, 13, 50764, 50764, 400, 370, 300, 311, 3163, 6229, 1729, 3202, 281, 13, 50964, 50964, 286, 519, 445, 38602, 264, 441, 10288, 10297, 1365, 49040, 307, 257, 534, 665, 1558, 886, 13, 51214, 51214, 759, 291, 2378, 380, 1217, 4418, 512, 565, 17343, 666, 300, 293, 1237, 412, 309, 11, 309, 311, 731, 3163, 445, 3760, 807, 300, 3089, 293, 264, 43648, 7222, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.053306976061188775, "compression_ratio": 1.6085106382978724, "no_caption_prob": 0.00015842581342440099}, {"id": 490, "seek": 288300, "start": 2891.0, "end": 2895.0, "text": " And so that's worth paying particular attention to.", "tokens": [50364, 400, 415, 775, 257, 534, 665, 1691, 1333, 295, 2902, 257, 688, 295, 9859, 5110, 295, 341, 1399, 295, 9432, 278, 13, 50764, 50764, 400, 370, 300, 311, 3163, 6229, 1729, 3202, 281, 13, 50964, 50964, 286, 519, 445, 38602, 264, 441, 10288, 10297, 1365, 49040, 307, 257, 534, 665, 1558, 886, 13, 51214, 51214, 759, 291, 2378, 380, 1217, 4418, 512, 565, 17343, 666, 300, 293, 1237, 412, 309, 11, 309, 311, 731, 3163, 445, 3760, 807, 300, 3089, 293, 264, 43648, 7222, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.053306976061188775, "compression_ratio": 1.6085106382978724, "no_caption_prob": 0.00015842581342440099}, {"id": 491, "seek": 288300, "start": 2895.0, "end": 2900.0, "text": " I think just browsing the LMSPA example repo is a really good idea too.", "tokens": [50364, 400, 415, 775, 257, 534, 665, 1691, 1333, 295, 2902, 257, 688, 295, 9859, 5110, 295, 341, 1399, 295, 9432, 278, 13, 50764, 50764, 400, 370, 300, 311, 3163, 6229, 1729, 3202, 281, 13, 50964, 50964, 286, 519, 445, 38602, 264, 441, 10288, 10297, 1365, 49040, 307, 257, 534, 665, 1558, 886, 13, 51214, 51214, 759, 291, 2378, 380, 1217, 4418, 512, 565, 17343, 666, 300, 293, 1237, 412, 309, 11, 309, 311, 731, 3163, 445, 3760, 807, 300, 3089, 293, 264, 43648, 7222, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.053306976061188775, "compression_ratio": 1.6085106382978724, "no_caption_prob": 0.00015842581342440099}, {"id": 492, "seek": 288300, "start": 2900.0, "end": 2908.0, "text": " If you haven't already spent some time digging into that and looking at it, it's well worth just reading through that code and the accompanying article.", "tokens": [50364, 400, 415, 775, 257, 534, 665, 1691, 1333, 295, 2902, 257, 688, 295, 9859, 5110, 295, 341, 1399, 295, 9432, 278, 13, 50764, 50764, 400, 370, 300, 311, 3163, 6229, 1729, 3202, 281, 13, 50964, 50964, 286, 519, 445, 38602, 264, 441, 10288, 10297, 1365, 49040, 307, 257, 534, 665, 1558, 886, 13, 51214, 51214, 759, 291, 2378, 380, 1217, 4418, 512, 565, 17343, 666, 300, 293, 1237, 412, 309, 11, 309, 311, 731, 3163, 445, 3760, 807, 300, 3089, 293, 264, 43648, 7222, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.053306976061188775, "compression_ratio": 1.6085106382978724, "no_caption_prob": 0.00015842581342440099}, {"id": 493, "seek": 290800, "start": 2908.0, "end": 2916.0, "text": " I think you can reuse the same patterns for like parent child communication between quotes, which you can... Yeah.", "tokens": [50364, 286, 519, 291, 393, 26225, 264, 912, 8294, 337, 411, 2596, 1440, 6101, 1296, 19963, 11, 597, 291, 393, 485, 865, 13, 50764, 50764, 286, 519, 300, 311, 309, 13, 50864, 50864, 865, 13, 1057, 558, 13, 1042, 11, 718, 505, 458, 498, 291, 11, 6875, 31569, 11, 853, 604, 295, 613, 7512, 337, 21589, 428, 2699, 76, 5821, 420, 362, 604, 3676, 13, 51364, 51364, 314, 10354, 552, 412, 505, 11, 2699, 76, 17296, 29972, 82, 11, 293, 3270, 505, 257, 3131, 11, 33017, 29972, 82, 11, 293, 2845, 505, 257, 1168, 412, 806, 76, 13, 6206, 1004, 13, 1112, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15086095737961103, "compression_ratio": 1.5806451612903225, "no_caption_prob": 0.00012928554497193545}, {"id": 494, "seek": 290800, "start": 2916.0, "end": 2918.0, "text": " I think that's it.", "tokens": [50364, 286, 519, 291, 393, 26225, 264, 912, 8294, 337, 411, 2596, 1440, 6101, 1296, 19963, 11, 597, 291, 393, 485, 865, 13, 50764, 50764, 286, 519, 300, 311, 309, 13, 50864, 50864, 865, 13, 1057, 558, 13, 1042, 11, 718, 505, 458, 498, 291, 11, 6875, 31569, 11, 853, 604, 295, 613, 7512, 337, 21589, 428, 2699, 76, 5821, 420, 362, 604, 3676, 13, 51364, 51364, 314, 10354, 552, 412, 505, 11, 2699, 76, 17296, 29972, 82, 11, 293, 3270, 505, 257, 3131, 11, 33017, 29972, 82, 11, 293, 2845, 505, 257, 1168, 412, 806, 76, 13, 6206, 1004, 13, 1112, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15086095737961103, "compression_ratio": 1.5806451612903225, "no_caption_prob": 0.00012928554497193545}, {"id": 495, "seek": 290800, "start": 2918.0, "end": 2928.0, "text": " Yeah. All right. Well, let us know if you, dear listener, try any of these techniques for scaling your Elm applications or have any stories.", "tokens": [50364, 286, 519, 291, 393, 26225, 264, 912, 8294, 337, 411, 2596, 1440, 6101, 1296, 19963, 11, 597, 291, 393, 485, 865, 13, 50764, 50764, 286, 519, 300, 311, 309, 13, 50864, 50864, 865, 13, 1057, 558, 13, 1042, 11, 718, 505, 458, 498, 291, 11, 6875, 31569, 11, 853, 604, 295, 613, 7512, 337, 21589, 428, 2699, 76, 5821, 420, 362, 604, 3676, 13, 51364, 51364, 314, 10354, 552, 412, 505, 11, 2699, 76, 17296, 29972, 82, 11, 293, 3270, 505, 257, 3131, 11, 33017, 29972, 82, 11, 293, 2845, 505, 257, 1168, 412, 806, 76, 13, 6206, 1004, 13, 1112, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15086095737961103, "compression_ratio": 1.5806451612903225, "no_caption_prob": 0.00012928554497193545}, {"id": 496, "seek": 290800, "start": 2928.0, "end": 2937.0, "text": " Tweet them at us, Elm Radio Podcasts, and drop us a review, iTunes Podcasts, and send us a question at elm.radio.com.", "tokens": [50364, 286, 519, 291, 393, 26225, 264, 912, 8294, 337, 411, 2596, 1440, 6101, 1296, 19963, 11, 597, 291, 393, 485, 865, 13, 50764, 50764, 286, 519, 300, 311, 309, 13, 50864, 50864, 865, 13, 1057, 558, 13, 1042, 11, 718, 505, 458, 498, 291, 11, 6875, 31569, 11, 853, 604, 295, 613, 7512, 337, 21589, 428, 2699, 76, 5821, 420, 362, 604, 3676, 13, 51364, 51364, 314, 10354, 552, 412, 505, 11, 2699, 76, 17296, 29972, 82, 11, 293, 3270, 505, 257, 3131, 11, 33017, 29972, 82, 11, 293, 2845, 505, 257, 1168, 412, 806, 76, 13, 6206, 1004, 13, 1112, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15086095737961103, "compression_ratio": 1.5806451612903225, "no_caption_prob": 0.00012928554497193545}, {"id": 497, "seek": 293700, "start": 2937.0, "end": 2939.0, "text": " All right. Well, until next time.", "tokens": [50364, 1057, 558, 13, 1042, 11, 1826, 958, 565, 13, 50464, 50464, 3008, 291, 958, 565, 13, 50514], "temperature": 0.0, "avg_logprob": -0.08396018806256746, "compression_ratio": 1.0196078431372548, "no_caption_prob": 4.066193287144415e-05}, {"id": 498, "seek": 293900, "start": 2939.0, "end": 2967.0, "text": " See you next time.", "tokens": [50364, 3008, 291, 958, 565, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13152213394641876, "compression_ratio": 0.6923076923076923, "no_caption_prob": 8.474522473989055e-05}], "language": "en"}