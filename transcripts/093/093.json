{"text": " Hello, Jeroen. Hello, Dillon. Well, I think we've been plotting to have an episode on this topic for a while, but maybe we just weren't doing a good enough job visualizing the episode happening. But we're finally here. We're finally here to talk about Elm visualization. And joining us, we've got Jakob Humphel. Welcome, Jakob. Thanks. Pleased to be here. Yeah, pleasure to have you. So Jakob, help us visualize this package a little bit. What is Elm visualization in a nutshell? What the heck is it? So Elm visualization in a really small nutshell is a package that allows you to do data visualization, to draw charts, graphs, whatever you want to call it. In a slightly bigger nutshell, you can think of it as a toolbox full of different little pieces that do each a fairly specific job. Usually things like data transformation into different things that you can use to build your own data visualization. So it's not a predefined set of visualizations that you have to pick and somehow customize. It's tools to build whatever it is you want to build. So it's in that sense, I call it a toolbox rather than, you know, a library or something like that. Right. Yeah. You know, a lot of frameworks have this motto to make simple things easy and hard things possible. But in your docs for Elm visualization, which we'll drop a link to this Markdown document you have a little tutorial on, you kind of say something that's almost the opposite. You say that making a simple visualization will have a large amount of code and making a complex or unusual visualization won't really have that much more code than the simple visualization. So it seems like this low level building blocks philosophy is like a really unique part of this package. Yeah, that's right. And that comes somewhat from experience, you know, because I've worked in a bunch of companies where you start, you start building, you know, your MVP, and you take a charting library, and you're going to be like, okay, we're going to do a bar chart. And so you plot the bar chart, and then somebody comes in and like, well, we need to categorize by this other thing. So let's do some colors. And you're like, okay, and the designer comes in and is like, well, I don't want those colors. I want these gradients. And you're like, okay, that's like, suddenly now my config is like 500 lines. And I'm like, but I want December to be like twice as big as the other months. And you're like, Oh, I don't think it supports that. Okay, I just have to monkey patch this thing. And like, suddenly, your chart is like 5000 lines of JSON. And you know, it's still a bar chart. It's not fundamentally more complicated than any bar chart. But after everyone's done their little specific thing they want, you know, you've you've tweaked literally every knob the library you were using exposed. And this is a real story. This totally happened to me in my first job. So the own vision philosophy is more like, look, you're going to build a bar chart, whether you like it or not, from from the smaller blocks. But that means when that guy comes and says we want gradients instead of colors, well, you're controlling the rendering. So you've already wrote the SVG code that renders the colors, you can just as easily switching gradients, you control the sizes. So you can make it twice as big if you want, you can do whatever you want. They will don't want it in a line, they want a circle, just pop in this extra helper that transforms coordinates, and you're ready to go. So that's kind of the that's, that's really behind this philosophy. And it's in some ways, you could say it's not beginner friendly, it has. And that's kind of, that's kind of the downside here, right? Is that like, even that tutorial that you mentioned, it's fairly lengthy. And it sort of has like, oh, by the way, before you start, you should learn these three things. And yeah, all of those three things are kind of big things. So you have to learn Elm and statistics and SVG, which is not a tiny thing to understand. So like, but, you know, I think, once you've done that, you've already paid the price, and then you get this flexibility to do basically anything, you know, suddenly the ceiling isn't there. So it's, I think, for a lot of use cases, it's definitely a worthwhile price to pay, but it's not for necessarily every use case. But then again, we have other packages in the Elm ecosystem that maybe slot better into some of those other use cases. So there's, you know, a bit of a, I think, you know, you can find it, you're not like stuck if you don't want to pay this price. Yeah, you're never gonna go to your boss saying like, oh, that feature they requested for this visualization, like we can't do that this library doesn't support it, we would have to switch to another charting library that that would cost a lot of time and effort. So we're just gonna not gonna do it or spend a few months working on it, or how long that takes. So yeah, that is quite nice. Yeah, I could see myself if I was building something where like data visualization and charts wasn't like a huge core part of the product, but it's like we need a little chart here. It's not like it's just like a little dashboard with a couple of things that we want to make a little more visual. And maybe just throw in Elm charts, Teresa's great package for that. It's gonna look really visually pleasing without you having to fiddle with a lot of stuff. You don't really have to like dig into SVG and all these things, and maybe that's just good enough, because you never really need to customize that much. But if it's like, we're building a product where the backbone of the product is data visualization, maybe you start immediately with Elm visualization, because you know, you're going to need to customize every part of it. Also, I mean, the thing is that learning is, you know, learning some of these skills is a thing that isn't necessarily an investment that is just related to one particular project. Like, if you learn SVG, you're going to benefit from that in this project, but also the next project and the project after that, you know, and you're going to be even able to be hired on a project that maybe if you hadn't learned it, you wouldn't be and so on. So it's just there is also an element there that, you know, because we're, it's not like these skills that are prerequisites are like, some really specific API that you'll never use for anything else. Again, you know, these are good things to know, if you want to have a front end career, let's say, you know, that they'll come in handy. Like, so I think it's, you have to consider it from that perspective as well. Yeah, that's, that's a great way to look at it. So I hadn't used Elm visualization before, but going through this tutorial, I think it's really cool how it does look like SVG with a few high level helpers. And so it makes me think of like, like people sometimes describe a framework as being don't call us, we'll call you like you sort of pass in code for the framework to call and it wires everything together, and then a library is the opposite. It's like you call the function when you want to use it. This is much more that library approach of like, you're making SVG, but then you have a little helper that helps you draw your axes and things like that. So you're really just making SVG and there are a few little helpers that help you do things in a more high level way and give you some abstractions to work with that. That's exactly right. That that's, and I guess that's also one of the big features that I am really, I really insist on is that it's an optional library, which I mean, if you don't like the way Elm visualization does something, you're not locked into it. You can replace like, you don't like the way our axes look out of the box. There's some knobs you can customize, but like, there's nothing, it's just SVGs, or you can just pop in your own implementation, and in fact, you can drop into some lower level functionality we provide to help you build those. And also the modules, and so to get a little bit into some internals, the modules in Elm visualization are also only depend on each other through their public APIs. So that means that if you don't like the way one of the modules work, you can just literally copy paste its code, pop it into your project and mess with it. And you don't have to copy paste the entirety of Elm visualization because there's some like internal package dependencies, there aren't any. So each module is kind of standalone. If it depends on the other ones, it's just through the same API that you as the user have access to. So that's another axis of customization that you can do with this project, I guess. So that's what I mean by it should be always like optional is, you know, if you if these helpers are helpful, by all means use them. If they're not, you can replace them. I have to say actually, like this, this conversation for me is very helpful. Because like in the past, I have to admit, I haven't really had a huge need for visualization tools in the Elm work I've done in the past. So I haven't like deeply researched visualization packages, but just when I've been browsing through packages that pop up and I see Elm visualization, like I've seen your visualization gallery and that I'm like, wow, this is impressive. Like there are a lot of things you can do. It seems very powerful. But then when I look at the API, I just didn't quite know how to how to frame it. So this conversation is really helpful to like, understand why these design decisions were made this way. Yeah, I think I think that was a bit, that was a big piece that we were missing for a while. And it's, it's one of the reasons I released this tutorial recently. Because my one of my aims is a little bit to bridge that gap between the API seems to be these low level things. And then you have the examples which show you often like interesting graphics. And it's a little bit, you know, that meme with how to draw the owl where like the first frame is like an oval and then the third frame is the length thing. You know, the middle says just draw the, draw the, draw the owl, draw the rest. So like, I think we were a little bit in that. So I think the tutorial is trying to like slightly connect how to think about from, you know, these smaller bits, how to get to something bigger. What are the mental models you should have on connecting these things? And what kind of things we, you know, Visual Studio expects you to do, what kind of things it can bring to the table and how that's going to work. So I don't know if it succeeds in that. But that's sort of one of the my motivations for kind of writing it. Because I also felt that there was a little bit of a that disconnect. Yeah, that tutorial is very helpful, I think, because if you as great as as the Elm package docs setup is, and as great as like your galleries, those are two good pieces, like, but the package docs are reference. And for this, I think you really need like a conceptual guide that walks you through how to think about it and how to set up these basic charts. So very helpful. So maybe we can, like walk through like, what would some of those building blocks that you would use to have these sort of higher level helpers that you use within your SVG builder to do something very simple, like a like a bar chart, for example, like, what would be those abstractions that Elm visualization gives you that you would use to make a simple bar chart? I think the most fundamental abstraction that is used extremely commonly, not 100% of the time, but it's sort of the bread and butter of working with Elm visualization is, is what we call the scale. And you can think of the scale as a way of on the one side, you have your data, which is you can think of it as it occupies some abstract space, you know, let's say, it's speed. So you know, it's this actually from like zero kilometers per hour to, you know, whatever, 500 kilometers per hour, if you have really fast cars, I don't know. And like, on the other side, you want to show it on the screen as let's say bars, so they're going to be a certain number of pixels long. And so you need some relationship that can transform between these two different abstract spaces, right? And that's the job of the scale. So the scale encodes is usually most of the scales are bidirectional. So you can go from from one, one space to the other and back. But they also encode in them a lot of the common operation. So like a common operation is you want to show what we call ticks. So you can think of it on an axis. There's those little lines at the bottom with the numbers. That's what we would roughly call ticks. Ticks are funny, because you want them to be roughly evenly spaced, but you also want them to be like human readable. So you don't really want them to have like 25 decimal places. So you would like them to kind of land on nice even values. So there's a fair amount of logic, you know, to do all that stuff. And you kind of get that sort of stuff packaged in this little scale type. And so really what you would do for something like a bar chart is you would pick a scale for the x axis, you would pick a different scale for the y axis. And this gives you kind of an immediate way how to kind of construct a rectangle, right? Because you can then in SVG, you can say a rectangle should have, it has to start at x or x position, it's so much wide, starts at a y position, so much, so much, it has such a height. And both of those numbers you can get from the axes. And then, you know, you just pick some colors and you're mostly, you've got the core of the chart ready. And then you can add extra stuff. So the scales kind of tie on nicely to axes, which is kind of, axes are almost actually in a typical element of visualization, because they're one of the only things that actually gives you, doesn't give you back data, it just gives you actual SVG. But axes are just so common in data visualization that programming them always from scratch is annoying. So then you can take your scale, plop it into the axes, and it will, you know, actually draw the little line with the little ticks and format the little labels and stuff like that. And then just to polish it off, you probably need to put it into actual SVG, add some, maybe some transforms to get stuff aligned nicely, and you're basically done. So that's kind of how those two primitives work to make a very simple chart. Right. And it basically, yeah, and it doesn't necessarily, visualization doesn't really have a strong opinion on how your data is going to be structured. So like, if we were doing a bar chart of Elm Radio episodes, and the popularity of an episode and the date of an episode. So you know, if we have a record that's like, you know, popularity, and episode title and episode date, and that's just a record, a list of records of that type, you know, I mean, or it could be whatever type, Elm visualization doesn't really care because we're going to be the ones writing some code that's going to be doing a list.map and rendering some SVG element for each of those that's going to render the bar. So Elm visualization isn't involved yet, when we're just rendering an SVG element. It's involved when we are rendering SVG attributes. And now it's going to help us for the height of it. To write, yeah, to basically calculate like the pixels, given a scale that we have. Yeah. And that's kind of one of the somewhat, I guess, unusual design philosophies of Elm visualization is that it tries fairly hard, doesn't always succeed, but it generally tries fairly hard to be as unopinionated about the data structure that you want to use, let you do that, which, you know, gives you that flexibility. It's up to you how to deal with how you want to fetch and store and deal with your data. So sometimes it's a tough job for me sometimes as an API designer to actually pull that off because we don't have a huge amount like polymorphism and stuff like that in Elm. So sometimes you have to make a choice and you just get on with it. But in general, the aim is to keep that as flexible as possible. I'm guessing in most cases, you want the user to use their data and to convert them to later lists, Elm lists, or do you take other kinds of types as well? Ideally, we don't care. So for things like scales, we don't really need to see your data at all. We just need to see a datum. I mean, what I mean by that, like if you, for instance, if you want to store your data as a list of records, and then you want to visualize like a particular field in that field, like a scale only cares about that number in that field. It doesn't care if you store a list, store it in an array, if you store it in a record of arrays, it's really up to you how you want to structure your data. If you store it in a tree, it's not really... Now that's not always the case. In some cases, we do need more of that. And in that case, we sort of force your hand into some data structure and then you potentially need to write a conversion function or something like that. But the aim is to not do that if possible. Did you have any influences for this approach? Like one thing that comes to mind for me is D3, which is I think known for like it's extremely popular and yet it's pretty low level, which is kind of interesting, but it's like a powerful set of low level building blocks that gives you a lot of flexibility. And there are like massive books written on D3 and how to plot with that. Yeah, D3 is definitely a massive influence. I acknowledge it even if you look at the readme, it sort of mentions that at the bottom. So yeah, D3 is definitely a big inspiration. We, you know, D3 is a really old library. It predates most of like modern JavaScript. So, you know, there's a lot of like stuff in there that in Elm there's much better ways of solving. So it's not a slavish, you know, re-implementation or something like that. But there's definitely a lot of really good ideas that I think are totally worth stealing. So I did. Could you give an example of something that there are better ways of doing in Elm? Yeah, so like, for instance, D3 has this idea of what they call selections. And so selections are, you can say like, I want to select this DOM node, and then I'll add a handler for when it's associated data changes, I will do this sort of DOM mutation. So it's like, it's kind of a declarative way of doing DOM mutation, but it's a completely different declarative way than the virtual DOM declarative way of doing DOM mutation. It's really like data focused. And in general, I would say it makes things like performant animation quite easy, but on, you know, which is sort of thing virtual DOM, on the other hand, tends to struggle like animation in virtual DOM is often kind of difficult. But it makes a lot of just building stuff the easy way kind of hard. And it's a completely different mental model. So it's again, like adds a lot of a lot of stuff to learn. So for instance, that's something that it's a it's a thing that predates, you know, virtual DOM approaches by probably, I would guess at least five years, but maybe longer, I don't know. So it's so that's a thing that, you know, we could have tried to reimplement, but I see really no point, we have a perfectly nice way of, of dealing with DOM mutation in Elm. So for instance, but also like, a D3 has built in stuff like CSV parsing, it has stuff like timers and dealing with, you know, recurring events, a bunch of stuff that like in Elm, you would just solve completely differently. And of course, it has also a lot of like, completely mutable API's and stuff like that that just are terrible. But you know, yeah. So there's, there's a lot to love about D3, but it's its own world as well, for sure. Right. So with the didn't say that D3 had a lot of books written on on it with the book for Elm visualization, we would it would be a lot smaller? Probably. I don't know. I'm not much one for writing books. The tutorial I think that's, you know, like, whatever, five pages long, I spent like a year writing. So book is not really for me. If someone wants to write a book, I'll be happy to give them some pointers. But you can write the preface or the recommendation. I'll write the blob at the bottom back, which is like one paragraph. Right, right. X is a great author. This is the best book on the subject. And then there's then a second one comes in and like, Oh, no, I have to evaluate it. So the second one can be the newest book on the subject. So I feel like when I read the documentation, I feel like you put a difference between charting and visualization. And I don't know what the difference is. Could you explain that to me? The terminology is kind of isn't great. But there's two fundamental workflows, I think, in data visualization. And one is what we would call exploratory data visualization. And that means you get a data set, you don't know what's in it. Maybe you've got some description about it, but you don't really understand it. And so you want to use some tools to be able to understand this data set. And so you can, you know, a lot of people use Excel for this or Tableau or other tools. But you can sometimes it's much easier to do this in code. And you can have libraries that are really well designed for that task. So in we have Vega, Vega light, our classic examples of this, there's very nice Elm version of that. So I think there's Elm, Elm Vega, Vega, don't really know how it's pronounced, V E G A. And that's really designed for that workflow, like and it does a lot of stuff for you automatically. You know, it can work out a bunch of stuff about your data and render really nice charts based on that data. And then you have the other workflow, which is you usually understand your data set pretty well, but you want to communicate about it to someone else. So it could either be like a journalism kind of aspect where you think you want to tell a story about the data, or you maybe you're building a dashboard in your product, you want to show your customers some specific stuff about data that you produce, other sort of things like that. And there, the it's not so much about speed of constructing the chart. It's more about things like customization, you want to be able to point out specific things about the data, you want to be able to, you know, really emphasize specific relationships in your data set, for instance, you want to make the data set as easy to understand as possible, even if that costs you as the programmer, potentially quite a bit of extra effort. But, but, you know, you, you know, so it's, there's a really different workflow here. And the tools that support these different workflows are, you know, are designed in different ways. So Elm Visualization is definitely on the second side of this divide, you know, where we really emphasize this flexibility. And, you know, you can tell exactly the story that you want with your data. But yeah, you have things like Vega. Elm Charts is a little bit in that more in that camp, maybe as well, where like, it's really easy to get, you know, you throw in some data, you say, like, give me a bar chart, and you have a bar chart. And you know, you didn't have to do almost anything to make that happen. And so you can really right away look at your data and be like, Oh, yeah, there's something interesting going there around, you know, Thursday, 2020. You know, January, like, oh, maybe a pandemic happened or something. I don't know. Like, you can make some sort of influence. It's you know, from that, but but it's a different workflow. And so you get different libraries or a different workflow. And so that's a little bit what I'm trying to talk about there is, is, you know, if you just want to quickly look at some data, this is your turn, kind of taking a, you're killing a mosquito with a bazooka a little bit. So yeah, so you said that with Vega or with Elm charts, you can get to a solution much faster with the downside that you can't customize it as, as much as you possibly may need to in the future. Well, so I should probably mention as well, sorry to interrupt you. It's not just the customization, but it's also the fact that usually these kinds of libraries are built a certain number of predefined chart types, right? So they can, you know, somebody coded in, like, this is a bar chart, this is a column chart, this is a line chart is area chart, you know, and they probably have 20 or 30 or 50 variations. And that's kind of it. And if you want to do something that's outside of that, that you're usually kind of out of luck. So that's, that's the sort of other limitation on that side of things. Sorry, go on, please. No, no worries. So if you were to choose Elm visualization, and you did want a bar chart, but you don't know how it will evolve in the future. So you go with Elm visualization. How would you, how would one go about it? Because there's no built in bar charts module in the library. So that's one of the reasons we have this examples gallery that we mentioned earlier. So kind of my recommendation is go there that you know, I've made it, I've spent some effort making it so that like, even on the home screen, you can see everything visually in pictures. So you don't have to, you know, it's not just a directory of GitHub, there's you can look visually and be like, Oh, that kind of looks like the thing I'm trying to do. And they look awesome, by the way. And you can copy paste the code, throw it in your project, and then start fiddling from there. So you kind of have a starter where you know, it sets up all the all the boilerplate essentially, and then you can adapt it to your own data set, you know, and start start fiddling with stuff to get it to where you actually want it to go. So it helps to understand what I'm doing a little bit before you do that. So read the tutorial maybe. But once once you got a little bit of understanding, you should be able to copy paste these examples and code there. In fact, the examples gallery also has has a little little link there called edit in Ellie. So you can also click that and that will open an editor right away where you can start messing with it. So yeah, that can be a pretty good way how to get started on these sort of things. What is the tool that it uses again, by the way, there's a there's a special like Elm examples tool for compiling these examples, right? Yeah, so it's called Elm examples publisher, which is a horribly hacky piece of JavaScript that you know, does compiles all of these things and take screenshots of them and then mix the website. So on. So yeah, that's that's if you want to do if you're also building on something visual, then you want to publish a website with lots of little pictures of stuff, then I've probably done most of the hard work there for you. So feel free. That's also you can find that just on GitHub on under my awesome. Yeah, it's almost confusing because it has the same look and feel as the Elm package websites and I'm always confused like, which website I'm on? I may on the examples. Oh, no, I'm on the docs. Oh, no, I want the other one. Yeah, it's Yeah, maybe that was a mistake. I don't know. I like it. Originally, it looked slightly different. And then I was like, it's kind of jarring going between the two. Made it look more similar. But no, it's great. And the edit in Ellie is is huge. That's, that's a great feature. So what what motivated you to build this package in the first place? So yeah, it's been going on for a while. So back, I think this was in the Elm 17 days on point 17. So that's 2016. I was trying to build my first thing at work, actually, we're using Elm. And this was supposed to be, we had an API that collected pricing information from all the different cloud instances, from all the different cloud vendors. And so we would scrape all the prices of AWS, all the prices from Google Cloud, or from Azure and so on. And there is a lot of prices. I think AWS has about 10,000 different prices for just instances. So it's actually, it was quite a fun problem to work on. But also that these prices constantly change as well. So we were so what I was doing was just building a little website that you could go into any cut, you could put in a Kenny kind of like instance, and we would show you what it costs. But we will also show you what it costs historically. And I wanted to make that historical price chart. Well the chart. And back then there wasn't any data visualization charts in Elm. There was like a really outdated wrapper around D3, but that didn't work in the current version of Elm. And that was it. So I was like, well, how hard can it be? Right? So, Seven years later. Something like that. So yeah, then I built something to scratch my own itch at that point. And then I was like, well, we might as well, you know, make this open source. And so I started really getting into it. And then at some point later, I published the first version that didn't do a whole lot, but it's been, we've been trying to steadily add features and features over time. So now it's actually fairly feature rich, I would say. Now I'm curious, like, what do you feel is missing from it? Because a lot of things, I look at the examples, I'm like, these examples are so wildly different. I don't know what it can and when, especially what it cannot do. So Yeah, so it's not so much about can't do, you know, because you can just program stuff yourself, but there's, are abstractions missing? I mean, the big topic that we don't cover at all is like geospatial stuff, maps and so on, which is a huge, huge world. And it's very complicated. I made some attempts in that direction. But I think I ran into the limitations of what can be done on a sort of open source budget. So I think, at least for now, I'm not really intending to go there unless something miraculous happens. I can already just imagine having to draw a map of the world with all the borders. And every time they change, you have to release a new version. And just that would be a pain already in itself. Yeah. And like, I mean, I've worked in, you know, mapping and so on. For some period of time, I was maintaining this other library called Elm Mapbox to do kind of like zoomable maps and so on. And so I've got some insight into the complexity there. And it's just like agreeing on how to represent two numbers, i.e. a point on the earth. There's like a very large number of ways people have decided to solve that problem. So like just that, it's a really complicated problem. And then it gets worse from there. So can you explain that one? So what you probably are mostly familiar with sort of people specifying points on the earth as longitude or latitude pairs, right? Have you heard those terms? Yeah. Yeah. So that's what we call like, people call it the GPS coordinates or properly it's called WSG 84 is the specification for that. And essentially the idea is their angle. So you can think of it as one circle is kind of goes through the poles of the earth and the other one, other circle goes around the equator and you can kind of, you know, combining the two angles on those circles, you can kind of come up with a coordinate system that more or less specifies places on the earth. So that's sort of one way you can do it. But even there, you come into trouble because some people like to specify things as latitude then longitude. Other people like to first do longitude then longitude. So like, even though you're not totally out of the weeds, but then there's like lots of other ways you can specify. If you can't agree just on that, then like there are 13 standards on just the ordering. Well, there's only two ways you can do it. But you know, it's, yeah. But like, then you can, you know, part of the problem with that system is that the earth isn't a perfect sphere. So you get some inaccuracy in that system. So there's other systems that try to fix that. Then there's a lot of ways, well, you know, that doesn't allow you to draw a map per se because, you know, that's a sphere, but a map is a rectangle. So then if you try to unwrap a sphere into rectangle, you're always introducing distortion and then you have different systems that can deal with that distortion in different ways. And I could talk about this literally for like days. But yeah, it just goes into, there's a lot of pain in the GIS world. So solving a lot of that in a nice way is tough. Did you also happen to try and solve time zones at the same time? I'm not that suicidal. Which one do you think is more complicated? The maps one or the time zones? I don't know. Time zones are also just horrible. I mean, I think I don't, yeah, I know enough about time zones not to want to know anymore. Fair, fair. No, no, but yeah, I mean, then you have a bunch of other things that are complex layout wise. One thing I'd like to do some point in the near future is what are called Sankey diagrams, which kind of visualize flows between different things. So you could say like, you could think of saying like, if you want to do a chart between countries and some import and other export different commodities between them, you can visualize this in this chart, kind that shows you the quantities of stuff flowing between these different things. It's a really nice, nice way of visualizing stuff. And it's sort of non trivial to compute that layout. So I'd like to do that one. Is it non trivial because every flow impacts how the other flows will show or the order of those things? Yeah, I think that's generally the problem you get with most like complex layout algorithms is that it's just everything affects everything and you have only so much space to put it all into. And so you end up having to shuffle everything around a lot. Actually, you know, so one of the things we had a pretty major release recently, which added this new module that deals with we call it hierarchy, but essentially, you can think of it as dealing mostly with things you could represent in a tree, tree like data structure. And that's all just layout, we don't really do any, as usual, we don't only do any drawing, we just compute where in where would you put stuff if you wanted to do some kind of layout. And so that's been a bunch of layout algorithms I've been working on. So they're, yeah, they're just tend to be pretty complex. Yeah, it's kind of a funny one, because Elm visualization is structured internally by, you know, you often see as the on the API surface, it's like a single function. And usually, that module is just documentation and, and the function, like I almost use like a C like header pattern, where you have like a header file, which has the function signatures and the documentation, and each function is implemented in its own entire module, because that function implementation is probably like 3000 lines. So it's also a little bit atypical, I think, in that regard, is that some of these things are just inherently pretty complicated. So this package only gives small helpers, but each one of those helpers is very complex to compute and takes a lot of most of that some of them are pretty simple, but most of them. So could you walk us through some of these sort of ecosystem of supporting packages that you mentioned in the readme there in the getting started, so there are a few things that come up while using this package. Elm color is a pretty straightforward one. It's just a kind of community standard package for describing a color. But so like typed SVG, I actually wasn't familiar with typed SVG. What is that package for? Yeah, so most people probably are familiar with Elm slash SVG, the sort of, I guess, standard library. But it's, at least in my opinion, not a great package. It has it basically copies is designed from Elm HTML in the sense that every element takes two lists, and every attribute basically takes a string as its one input. And that works pretty okay for HTML. And it's kind of beginner friendly in the sense that, you know, if you know how to type HTML, you probably know how to type Elm HTML, it's, you know, very consistent, which is good. But it's not a great package if you want to actually dynamically compute most of the attributes, because most of the attributes in SVG are just not strings at all. They're either they're usually floating point numbers, typically, or they're just complex structures like things like paths are, it's a fairly complex data structure that ends up being stringified into a string. But if you want to actually compute it, you don't, you know, stringifying it isn't isn't really a core concern, you know, and then you have a bunch of things that are basically just enums. So you can say like, I want, you know, if I make a if I bend a line, like imagine 90 degrees, you can draw the corner there in like three different ways, you can get it kind of like to overshoot, you can kind of rounded a bit or you can kind of do like a 45 degree bend at the edge, right. And so those are like your three options. And, you know, you can specify an attribute that's going to be one of those three. So like, taking an arbitrary string is just a way to shoot yourself in the foot. Because you probably don't remember how to spell I don't know what it's called. Well, and yeah, you don't remember what it's called. So good luck with autocomplete with a string. So doubts and then hope for the editor. Because it's a string, you're not going to get any help from your ID. So you're gonna have to go and Google it. And you know, it's annoying. So type SVG is an attempt to solve some of these problems. I personally am not super happy with that library either. I think it's a move in a better direction, but I still think that like, as the ultimate Elm SVG rendering packages is still waiting to happen. Well, you have a choice between writing a new book and making that the library. So yeah, I started on it once. And then I sort of quickly just looked at the size of the SVG spec. And I was like, yeah, no. Okay, let me let me find a way to generate this from the spec. Yeah, but there's, you could try that. But then then you're not going to end up with a, you know, I think that's a little bit like where type SVG also like falls is that, you know, some of the ergonomics end up not being all that ergonomical, because, like, to give you an example, right, there's certain attributes that like 95% of the time you use them, you use them with, like a number, let's say as an input. But they can also technically take like a straight other value, like something like none, or, you know, something like that, or, you know, so if you just model it as like, oh, well, then we have to wrap the number in, like one tag, so that we can have the other tag, you end up with this spare tag, like literally, or called all over the place, you know, so like, a better API design would be just to make this attribute just take the number and then maybe add an extra attribute that you're going to use in that one situation you needed that has some more awkward name. But you know, it makes the 95% case way nicer. You know, and it's the sort of thing which needs some experience and quite a bit of thought to to really get the sort of developer experience to that level. That's quite a lot of work. Yeah, so it sounds like Elm SVG is similar to Elm HTML, where typed SVG is similar to Elm CSS. But you want Elm UI for SVG? Maybe, yeah. Something, something, something like that. I think as a metaphor, I think that works. Yeah. I think also, because like, Elm CSS has the same some of the same issues you mentioned, like, oh, none can be specified as an attribute to anything, almost. And it also had like, needed to go through some type trickery to make it work. Okay, so one true path, that one, I had also not heard about. And I'm very curious, like, what is the one true path package solving? The one true path, actually, it's funny, because that actually happened at that first Elm Europe conference, where I think we might have met there, I don't know. And I think a bunch of people like myself, Matt Griffith, I think was there, I don't know, Fulgert, who ended up writing this, maybe one or two other people. And we were all like saying, like, well, we all want to do stuff with SVG paths. Like I wanted to generate them from various helpers. And Matt was interested in using them for animation, because he wanted to do animation, you know, on a path. And I'm not sure what Fulgert was trying to do at that time. And so we were like, well, you know, one of the I guess one of the so this goes back to Elm's design, right? And Elm, it's strictly typed with nominal types, which means if I produce a type that's, you know, called something, say, the path, and you want to consume that type path, you have to take me on as a dependency, you know, but you might have nothing at all to do with my package. Like, if you want to do animation, you probably don't need to, you know, depend on a data visualization package, like it doesn't make much sense. And so it's kind of beneficial if the community can organize around, around some of these core types that it would be beneficial to share between a bunch of packages and produce a single package. And so that's how ElmColor was born, for instance, and one true path was supposed to be that for path information. Now I don't think in that case, that totally materialized. I don't think there's other packages that really use it. But that was the idea. There was a way it's called one true path, because it was meant to be the one path package that was going to unite them all. And so that was the intention there to make the ability to take path data from one package to another and, and, and share them. And path data as opposed to like the D element in SVG, which is like, doesn't describe the data, it describes the element directly. So in SVG, you have what's called a path element that takes has an attribute called D, which is super intuitive, which is this, you know, if you look at it, it just looks like a long string of mumbo jumbo. But it's that string is essentially a list, you can think about it as a list of commands. And each command is like, move over to those coordinates, and then move to those other coordinates, but as you move, draw a line, like you can think about it as almost like a logo drawing program, you know, then go in a circular fashion to this other point, and then like, maybe just complete the shape. And so you get these these commands. And so they describe what we call a path. But essentially, it's sort of a generalized geometry. And you can use that for drawing stuff, for instance, but you can also use it as just a path that someone could take, for instance, in an animation. So there's different ways you can interpret it. But conceptually, or mathematical calculation or something. Yeah, you know, and so that's, that's what we call path data. And so Elm visualization has a bunch of different helpers that produce these sort of paths based on, let's say, you have some abstract data, again, when you can use some scales, and you can turn it into path data. And then you can either just render it, but you can also potentially animate up, you know, create something based on that data path. So you know, it's one of the things you, there's a lot of data visualization libraries that have like animation, but it's really like what I would call spurious animation, right? It's like, you open the page and the bars in the bar chart is like, zoom in. And it's like, Oh, like, okay, it's, I guess, cool. But I've seen animations before, like, it doesn't, but it's, it doesn't tell you anything about the data, you didn't wouldn't know if the animation wasn't there. But I think there's a lot of opportunities animation in a way that's much more explanatory and tells you stuff about the data. So I think we have a really cool example about that. If you look at the bar chart race example on visualization, you know, that's an example where it's a bar chart, but it's, it's, it grows as time progresses, and then it reorders itself. And then kind of the motion tells you how the situation changed over time, you know, and so it's the animation and the motion is actually telling you things that you couldn't understand if it was just a picture. And so I think there's a lot of like opportunity to use these sort of techniques to come up with really intuitive ways to explain data that wouldn't be, you know, wouldn't be possible if you just didn't have those animation permitted. So that's my hope with that. It didn't, it didn't totally pan out in the sense that I don't think other packages totally adopted it. But, but, hey, it's still there. So yeah, no, that's, that's great. That's great context. I think, for me, at least it helps. It helps me when I understand like the motivation for why a package came into existence. It helps me when I'm trying to use it to understand that context. So other philosophy we have in on visualization is that, well, you might have noticed it's still on version 2.4 and the major version is only two. And the only reason we made the second major version was that Elm 0.19 came out and broke pretty much everything. And so we had really no choice but to just, you know, redesign a bunch of stuff. Like for instance, you might not remember this, but color used to be in Elm core, you know? And then time worked completely differently. So Elm visualization, those are pretty important types for us. We do a lot with times and colors. So that was, yeah, that was, so that was, and while we're going to do a big breaking change, I fixed a bunch of like design flaws and so on. But you know, the, the main aim here is to keep it as backward compatible as we can. So some of these things, like, I think if I was designing it today, maybe I would have come up with a slightly, maybe it would have made a different package for path or something like that. But, but it's, it works well and it's, it doesn't, I don't feel like we need to break. It's not bad in a way that we should break anyone's code for it. Like it works really well, actually. So. Right. Yeah. And, and you recently released a new version. What are, what are the highlights from the new version? So the main highlight, as I mentioned, is the ability to do these kinds of tree visualizations. So you can really, there's three ways you can lay out trees that we support now. So one is allows you to do kind of what we call sometimes node link diagrams, but you can think of it as somebody told you, like, can you draw me a tree on a, on a whiteboard? That's what you would probably produce. Like you would draw boxes and you would draw lines between them. And that would be how you would visualize the tree. Now to do that, to look nice is actually tricky and there are some aesthetic rules that you can apply to make things, you know, look nice. Like the tree shouldn't be, should be kind of look kind of balanced. Like ideally the root of the tree should sort of be in the middle-ish and so on. And things should be kind of neatly done. One of the cool things we support is there's distinction between layered and non-layered trees. So what that means is if you have the nodes in the trees, I can have different sizes. And so if, if you have, if you have that property, then you have to make a decision. Are you going to make the tree such that every layer of the tree by layer, I mean here, like think of like a rank in an army, right? Like if you have units, then like all the generals, you would want to line them up and all the lieutenants you want to line them up and colonels. And I don't know, I have no actually idea how ranks work. You would want to draw it in that sort of way where they all like end up being, you know, at the same level to show that they're the same rank. But like if you, so then you would say like, I want to draw it layered and that's going to take you more space because you actually have to, you can't squeeze stuff into the gaps otherwise. But if you don't care about this property, then we support the non-layered, which is much more computationally tricky to do, but it allows you to, to, to kind of take, you know, if you have a really tall element, we can squeeze a whole sub tree in the space that it leaves. So you end up with these really compact, but quite nice looking layouts. So that was a lot of fun to build. Then tree maps, tree maps. If you're not familiar with that is basically you take some sort of space, like a rectangle and you start dividing it based on the structure of the tree and some quantitative variables. So like that's great way how to use that is there's tools and there's tools out there that do this. If you are running out of space on your computer, you can use a tool that will produce a tree map of your hard drive. And then you can see which directory is which size. And you immediately see, Oh, there's that weird directory in my downloads file that has like 10, 10 gig films in it that I'm never going to watch. You can immediately see this is, I'm going to like save space. Whereas if you were just looking through some other way of showing your file system, you would never find that. Or JavaScript bundle sizes as well. Yes, that's a perfect, perfect example as well. Yeah. And then the last one is kind of what we call a partition layout, which is kind of like a one dimensional version of the tree map. So it just divides each layer successively into smaller pieces in kind of like a rectangular fashion. And you can like one of the really attractive things you can do with that is what's called a sunburst visualization. So you do that, but you arrange them in a circular fashion. And so the circle is kind of split up and you kind of go into the little branches of the tree going from the center outwards. And so that's quite an attractive layout, I think personally. So you can do stuff like that. And by the way, we'll link to the release notes, which have really good visuals of all these. Yeah, I mean, the other big thing is, is the tutorial that we mentioned that for me, at least personally was the hardest game about this release. And then, yeah, then there's actually some really nice, just new examples. So I always try to release a couple more examples to do some stuff. I really recommend people looking at the weather radio one, which shows you the weather pattern for a whole year in a particular location. And the really fun bit is you can change the location. And so I think when I showed it to my wife, we spent like two hours just looking at different places. I mean, like, oh, what does it look like in Iceland? Oh, what does it look in that desert? Oh, what does it look like in, you know, Siberia? And so it's a really fun example to play with. So if you want to waste some time, I'd recommend that. Yeah, that one looks amazing. So it's actually based on a really famous, really famous poster. And I love that poster so much, but it just has, it's a poster you buy. And so they only pick 30 places. And if you have no relation to those places, it's not that meaningful of a poster. So I always wanted to make this tool to be able to make that poster. But in the places I've like lived to or been, lived in or been to, or, you know, that sort of thing where you have some personal relationship to it. So you can kind of relate to those places specifically. So I'm curious, like, how do you even approach building these visualizations? Like I want to take the example of the weather radial, but I don't know if that one is too complex to ask you, like, how do you go about approaching it? Yeah, so usually you start with some sort of idea, you want to build something. For a lot of these examples, a lot of these are like famous stuff that, you know, people have built or, or like are in newspapers or stuff like that. I'm thinking mostly in terms of implementation rather than designing the visualization. Yeah, so you always start with, you know, on one side, you have your data. And on one hand is what the pixels you want to look like, right. And so fundamentally, you're going to end up with some form of transformation between the two. You know, like we talked earlier with the scales, that's the simplest case. But you know, it usually gets a bit more involved than that. But, but fundamentally, the workflow is pretty similar. Like you come up with, you know, ways to, to do that. And then you, you know, and it's, it's fun, because it's visual programming, right? You're constantly getting visual feedback, like you put something and it just all looks completely horrible. And then you change the parameter, and it rotates the right way around. And you're like, Oh, yeah, that's great. You know, and, and so it's, I find it really like rewarding in that way that front end engineering can be rewarding, where like, you're constantly getting this really nice visual feedback. So it's, it's definitely fun. Sometimes it can be tricky when you don't know how to proceed. But yeah, I would say like, when you have this kind of visual feedback, it's really easy to, to iterate. But when it's visual, then it's really hard to write tests for. And that's, that's going into another tangent that I'm sure that Dillon has a lot of thoughts about. The less visual something is, the easier to test it is. Yeah, well, that's, yeah. Like, so for instance, what I was really pleased about with the, with the tree work in the latest release was that the actual papers that describe the layouts, the sort of aesthetically pleasing layouts that trees should have, they codify them as seven rules. And you hear like, oh, rules, fuss tests, and then something clicks in your head and you're like, oh, I can write fuss tests. So I think I have fuss tests for four of these rules, which were kind of sufficient enough to really like shake up all the bugs I could, I could find. So yeah, it's actually very nice when you end up with this situation where you get this really powerful way to do, you know, something quite abstract. So sometimes, sometimes it isn't like that. Sometimes you end up with a situation where actually you get really nice properties. And it might be hard to test the visualization itself, but the, the data transformations that are, you know, show showing up as the final result of the visualization are easier to test. So that's when the unit tests come in and. It's also like an implementation detail, but yeah, like if that's the closest you get to be able to test something and sure. Right. Which is why it's harder. It's harder to test the final full thing. It's, but it might be pretty easy to just test some of the number crunching along the way. Do you have like, when you make a visualization, do you have tests for it and not for the underlying API? I mean, really for like, Oh, I have a weather radio. I have some tests for them for that. At work sometimes for it, for the example galleries, there's no, no tests. I it's, they're supposed to be kind of like very self-contained examples. So I, you know, it's slightly different emphasis, but at work we've done some, some, but yeah, as you say, it's sometimes it's pretty challenging and just doesn't feel worth it. Totally. You get, you know, you can test it a lot, just manually you get, because it's visual, you can kind of, your eye can notice the defects super fast in a way that I've done. I've done a lot of tests during development when I was doing like data visualization with some map stuff and WebGL just because the development workflow is just really awful. Like the WebGL tooling, at least back then was, was not great. And so I built a bunch of like test stuff and I did a lot of, you know, you can do image comparisons or I would, you know, render to a buffer and then do like an image diff against the reference image and so on, which was quite nice, but it was a lot of work to get that set up. So it depends on whether you feel like that's worth it or not. So in your guide, you, you mentioned like some of the important skills being, you know, understanding statistics and, you know, sort of data modeling and like cleaning your data. Can you talk a little bit about, you know, for somebody maybe who is not super experienced with some of these statistical techniques, like what are the important things to look into and like where might somebody learn more about that? Yeah, it's kind of a good question. I don't think it's like necessary to get like a university degree in statistics or something like that. But like it's, and where exactly to learn everything, I don't really know. Part of what I just mean by that is that like fundamentally, a lot of times your work is going to be understanding things like sometimes a terminology, honestly. So things like what's a dependent and independent variable, you'll hear that a lot. If you don't know what that means, it's not the same thing as in programming, you know, and, you know, or you're going to get things like a quantitative dimension versus, you know, ordinal dimension, for instance. And you know, these things just mean a quantity dimension is like a number and ordinal dimension is something that you can, has a defined order, but doesn't have like a value, let's say. So like, you know, like for instance, if you're doing a count of each, how many times a letter appears in a piece of text, you want to visualize like a histogram of letter frequencies, like letters would be an ordinal thing because they have an order. Like it doesn't make sense to visualize them as like D, Z, X, and V. Like you're going to visualize them A, B, C, D, E, F, G, right. They don't have like, A is not any bigger than C in that sense. So that's what like, you know, quantitative ordinal. And then you have nominal is the like third category, which are just things that are distinct from each other, but don't have any intrinsic order. So that would be like your typical categories, blue and red and green, something like that. So you have a lot of this jargon that it's helpful to understand, and kind of not just the jargon, but some of the concepts, you know, like you, if you understand that, like, look, this is a nominal variable, then you're going to think of like, okay, I'm going to visualize it maybe with this kind of scale rather than some other kind of scale. So it just helps you click these things. You know, there's no point trying to do it in a quantitative way. Data cleaning is just, that's like almost every place I've worked in has had, you know, you get data to visualize and the data is just rubbish one way or the other. You know, like there's just, I don't know, there's duplicates, there's the data isn't adequately sorted, stuff like that. So you're always going to need to do some data transformation work. In Elm particularly, like you want to end up with nice types, it's going to make everything else work better for you, right? So there's always going to be work taking these data sets and making sure that they end up neatly typed. And maybe that's not, you know, it's not necessarily the case for everyone. Like a lot of, if you work at a good software company and you're just trying to write a visualization for what some nice backend API gives you, you might not need to do much of that. If you're working in a lot of other kinds of companies and somebody drops a CSV file on you, you're going to need to do a lot of that. So it depends on your use case. Yeah, I could imagine like the way that you structure your data being important for both being able to visualize something the way you want to and for performance reasons too. Like sometimes the way you order things one way or the other can completely change that. Cool. And you talk about the Rose Tree data structure in the new release, which I have to admit, it sounds really cool, but I don't know what that data structure is. Could you give us an intro to that? It sounds pretty at least. Yeah, I should have. Yeah, it's again, I mean, jargon is just, it's a trap that's hard to escape, isn't it? But a Rose Tree is nothing very fancy. It's just a tree that each node can have any number of children. So like a binary tree is just a tree where each node has exactly two children or it's a leaf, so two or zero, but like in a Rose Tree, you can have any number. That's it. Oh cool. And it has a zipper so you can traverse it. So in some sense, it's just kind of the, I guess the most general kind of tree that gives you the least kind of guarantees in terms of like things like performance of searches or stuff like that. Like it doesn't give you computational benefits, but it can represent sort of any kind of tree you want, as long as you would call it a tree. Yeah, it makes sense. I mean, in Elm, we often, I feel like try to use really high level intuitive terms for things. But then at the same time, when you get into like mathematical things and statistical things and data structures, you sort of, there are certain properties that you convey a lot of information with when you use a particular term, when you use the jargon. So you kind of have to use the jargon in some of these things. But it's good to know. It's just like, it's a good tree. It's a good tree data structure. I don't think I mentioned in the release, but in the docs, I do actually provide the type alias precisely to just show that like, look, this is, it's a pretty mundane data structure. Like there's, you know, it's, but yeah, I guess the main idea of it is like, if you have any other kind of tree, you should be able to fairly trivially transform it into a Roast tree and then be able to visualize it, you know. Right. So, so yeah, that was, that was also one of the recent things we released is a library to deal with those. So that's been, there's been a lot of open source activity lately on that front. Yeah. Amazing. Well, that's great information. And so Jakob, if people want to learn more, what are some good resources? We mentioned the tutorial, which I would highly recommend. Are there any other good resources for people to dive in to Elm visualization? I think basically it's, there's a, the tutorial example gallery, which we mentioned the documentation is also fairly extensive. And then finally there's a Slack channel on the Elm Slack called hashtag visualization, which is one of the perks of being old because back then you could still get channels for your projects. So yeah, so you can ask questions there and I tend to respond reasonably promptly. So that's, that's basically it so far. If somebody wants to write a book, as I said, please, please, you're very welcome to. Is there anything that you would like to see Elm visualization be used for that would get you excited or you just, that would be nice to have somewhere out there? I think one of the things that somebody actually started on, and I think it's fairly productive is you can use Elm visualization as a library to build the other kind of visualization library, right? You can build an explanatory data visualization library, which under the hood is powered by Elm visualization primitives. And so I think that already exists, but what would be really cool, I think in my mind is if you could couple that with some code gen and you would have like, you could have like an eject button where like, you could start with that high level one and then you'd be like, you know what, I just want to go hardcore. You would hit that eject button and it would transform that into like Elm visualization code and then you could, you know, fiddle with it. That would be really cool. Elm visualization land or something like that. Something like that. So that would be pretty fun. Maybe the ejection could be an Elm review rule that automatically scoops out the code. Great stuff. Well, Jakob, it was a pleasure having you on. Thanks so much for coming on. Yeah, thank you. Yeah. Thanks for having me. It was really nice. And Jeroen, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [2425, 11, 508, 2032, 268, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dillon.", "tokens": [2425, 11, 28160, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 2, "seek": 0, "start": 2.0, "end": 8.36, "text": " Well, I think we've been plotting to have an episode on this topic for a while, but", "tokens": [1042, 11, 286, 519, 321, 600, 668, 41178, 281, 362, 364, 3500, 322, 341, 4829, 337, 257, 1339, 11, 457], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 3, "seek": 0, "start": 8.36, "end": 12.68, "text": " maybe we just weren't doing a good enough job visualizing the episode happening.", "tokens": [1310, 321, 445, 4999, 380, 884, 257, 665, 1547, 1691, 5056, 3319, 264, 3500, 2737, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 4, "seek": 0, "start": 12.68, "end": 14.72, "text": " But we're finally here.", "tokens": [583, 321, 434, 2721, 510, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 5, "seek": 0, "start": 14.72, "end": 18.32, "text": " We're finally here to talk about Elm visualization.", "tokens": [492, 434, 2721, 510, 281, 751, 466, 2699, 76, 25801, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 6, "seek": 0, "start": 18.32, "end": 20.240000000000002, "text": " And joining us, we've got Jakob Humphel.", "tokens": [400, 5549, 505, 11, 321, 600, 658, 15029, 996, 12877, 950, 338, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 7, "seek": 0, "start": 20.240000000000002, "end": 21.240000000000002, "text": " Welcome, Jakob.", "tokens": [4027, 11, 15029, 996, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 8, "seek": 0, "start": 21.240000000000002, "end": 22.240000000000002, "text": " Thanks.", "tokens": [2561, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 9, "seek": 0, "start": 22.240000000000002, "end": 23.240000000000002, "text": " Pleased to be here.", "tokens": [25658, 1937, 281, 312, 510, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 10, "seek": 0, "start": 23.240000000000002, "end": 25.36, "text": " Yeah, pleasure to have you.", "tokens": [865, 11, 6834, 281, 362, 291, 13], "temperature": 0.0, "avg_logprob": -0.29829883575439453, "compression_ratio": 1.5591836734693878, "no_speech_prob": 0.14555279910564423}, {"id": 11, "seek": 2536, "start": 25.36, "end": 31.08, "text": " So Jakob, help us visualize this package a little bit.", "tokens": [407, 15029, 996, 11, 854, 505, 23273, 341, 7372, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.18692088383500294, "compression_ratio": 1.6837209302325582, "no_speech_prob": 5.3051775466883555e-05}, {"id": 12, "seek": 2536, "start": 31.08, "end": 34.16, "text": " What is Elm visualization in a nutshell?", "tokens": [708, 307, 2699, 76, 25801, 294, 257, 37711, 30], "temperature": 0.0, "avg_logprob": -0.18692088383500294, "compression_ratio": 1.6837209302325582, "no_speech_prob": 5.3051775466883555e-05}, {"id": 13, "seek": 2536, "start": 34.16, "end": 35.56, "text": " What the heck is it?", "tokens": [708, 264, 12872, 307, 309, 30], "temperature": 0.0, "avg_logprob": -0.18692088383500294, "compression_ratio": 1.6837209302325582, "no_speech_prob": 5.3051775466883555e-05}, {"id": 14, "seek": 2536, "start": 35.56, "end": 42.96, "text": " So Elm visualization in a really small nutshell is a package that allows you to do data visualization,", "tokens": [407, 2699, 76, 25801, 294, 257, 534, 1359, 37711, 307, 257, 7372, 300, 4045, 291, 281, 360, 1412, 25801, 11], "temperature": 0.0, "avg_logprob": -0.18692088383500294, "compression_ratio": 1.6837209302325582, "no_speech_prob": 5.3051775466883555e-05}, {"id": 15, "seek": 2536, "start": 42.96, "end": 45.8, "text": " to draw charts, graphs, whatever you want to call it.", "tokens": [281, 2642, 17767, 11, 24877, 11, 2035, 291, 528, 281, 818, 309, 13], "temperature": 0.0, "avg_logprob": -0.18692088383500294, "compression_ratio": 1.6837209302325582, "no_speech_prob": 5.3051775466883555e-05}, {"id": 16, "seek": 2536, "start": 45.8, "end": 54.08, "text": " In a slightly bigger nutshell, you can think of it as a toolbox full of different little", "tokens": [682, 257, 4748, 3801, 37711, 11, 291, 393, 519, 295, 309, 382, 257, 44593, 1577, 295, 819, 707], "temperature": 0.0, "avg_logprob": -0.18692088383500294, "compression_ratio": 1.6837209302325582, "no_speech_prob": 5.3051775466883555e-05}, {"id": 17, "seek": 5408, "start": 54.08, "end": 59.72, "text": " pieces that do each a fairly specific job.", "tokens": [3755, 300, 360, 1184, 257, 6457, 2685, 1691, 13], "temperature": 0.0, "avg_logprob": -0.19705856547636144, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.5532729094047681e-06}, {"id": 18, "seek": 5408, "start": 59.72, "end": 64.84, "text": " Usually things like data transformation into different things that you can use to build", "tokens": [11419, 721, 411, 1412, 9887, 666, 819, 721, 300, 291, 393, 764, 281, 1322], "temperature": 0.0, "avg_logprob": -0.19705856547636144, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.5532729094047681e-06}, {"id": 19, "seek": 5408, "start": 64.84, "end": 66.75999999999999, "text": " your own data visualization.", "tokens": [428, 1065, 1412, 25801, 13], "temperature": 0.0, "avg_logprob": -0.19705856547636144, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.5532729094047681e-06}, {"id": 20, "seek": 5408, "start": 66.75999999999999, "end": 72.86, "text": " So it's not a predefined set of visualizations that you have to pick and somehow customize.", "tokens": [407, 309, 311, 406, 257, 659, 37716, 992, 295, 5056, 14455, 300, 291, 362, 281, 1888, 293, 6063, 19734, 13], "temperature": 0.0, "avg_logprob": -0.19705856547636144, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.5532729094047681e-06}, {"id": 21, "seek": 5408, "start": 72.86, "end": 77.2, "text": " It's tools to build whatever it is you want to build.", "tokens": [467, 311, 3873, 281, 1322, 2035, 309, 307, 291, 528, 281, 1322, 13], "temperature": 0.0, "avg_logprob": -0.19705856547636144, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.5532729094047681e-06}, {"id": 22, "seek": 5408, "start": 77.2, "end": 82.84, "text": " So it's in that sense, I call it a toolbox rather than, you know, a library or something", "tokens": [407, 309, 311, 294, 300, 2020, 11, 286, 818, 309, 257, 44593, 2831, 813, 11, 291, 458, 11, 257, 6405, 420, 746], "temperature": 0.0, "avg_logprob": -0.19705856547636144, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.5532729094047681e-06}, {"id": 23, "seek": 5408, "start": 82.84, "end": 83.84, "text": " like that.", "tokens": [411, 300, 13], "temperature": 0.0, "avg_logprob": -0.19705856547636144, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.5532729094047681e-06}, {"id": 24, "seek": 8384, "start": 83.84, "end": 84.84, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.20868303420695852, "compression_ratio": 1.6147186147186148, "no_speech_prob": 5.014126600144664e-06}, {"id": 25, "seek": 8384, "start": 84.84, "end": 85.84, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.20868303420695852, "compression_ratio": 1.6147186147186148, "no_speech_prob": 5.014126600144664e-06}, {"id": 26, "seek": 8384, "start": 85.84, "end": 91.48, "text": " You know, a lot of frameworks have this motto to make simple things easy and hard things", "tokens": [509, 458, 11, 257, 688, 295, 29834, 362, 341, 32680, 281, 652, 2199, 721, 1858, 293, 1152, 721], "temperature": 0.0, "avg_logprob": -0.20868303420695852, "compression_ratio": 1.6147186147186148, "no_speech_prob": 5.014126600144664e-06}, {"id": 27, "seek": 8384, "start": 91.48, "end": 92.48, "text": " possible.", "tokens": [1944, 13], "temperature": 0.0, "avg_logprob": -0.20868303420695852, "compression_ratio": 1.6147186147186148, "no_speech_prob": 5.014126600144664e-06}, {"id": 28, "seek": 8384, "start": 92.48, "end": 99.08, "text": " But in your docs for Elm visualization, which we'll drop a link to this Markdown document", "tokens": [583, 294, 428, 45623, 337, 2699, 76, 25801, 11, 597, 321, 603, 3270, 257, 2113, 281, 341, 3934, 5093, 4166], "temperature": 0.0, "avg_logprob": -0.20868303420695852, "compression_ratio": 1.6147186147186148, "no_speech_prob": 5.014126600144664e-06}, {"id": 29, "seek": 8384, "start": 99.08, "end": 103.16, "text": " you have a little tutorial on, you kind of say something that's almost the opposite.", "tokens": [291, 362, 257, 707, 7073, 322, 11, 291, 733, 295, 584, 746, 300, 311, 1920, 264, 6182, 13], "temperature": 0.0, "avg_logprob": -0.20868303420695852, "compression_ratio": 1.6147186147186148, "no_speech_prob": 5.014126600144664e-06}, {"id": 30, "seek": 8384, "start": 103.16, "end": 110.04, "text": " You say that making a simple visualization will have a large amount of code and making", "tokens": [509, 584, 300, 1455, 257, 2199, 25801, 486, 362, 257, 2416, 2372, 295, 3089, 293, 1455], "temperature": 0.0, "avg_logprob": -0.20868303420695852, "compression_ratio": 1.6147186147186148, "no_speech_prob": 5.014126600144664e-06}, {"id": 31, "seek": 11004, "start": 110.04, "end": 116.84, "text": " a complex or unusual visualization won't really have that much more code than the simple visualization.", "tokens": [257, 3997, 420, 10901, 25801, 1582, 380, 534, 362, 300, 709, 544, 3089, 813, 264, 2199, 25801, 13], "temperature": 0.0, "avg_logprob": -0.22527777546584005, "compression_ratio": 1.61328125, "no_speech_prob": 3.3404448913643137e-06}, {"id": 32, "seek": 11004, "start": 116.84, "end": 122.96000000000001, "text": " So it seems like this low level building blocks philosophy is like a really unique part of", "tokens": [407, 309, 2544, 411, 341, 2295, 1496, 2390, 8474, 10675, 307, 411, 257, 534, 3845, 644, 295], "temperature": 0.0, "avg_logprob": -0.22527777546584005, "compression_ratio": 1.61328125, "no_speech_prob": 3.3404448913643137e-06}, {"id": 33, "seek": 11004, "start": 122.96000000000001, "end": 123.96000000000001, "text": " this package.", "tokens": [341, 7372, 13], "temperature": 0.0, "avg_logprob": -0.22527777546584005, "compression_ratio": 1.61328125, "no_speech_prob": 3.3404448913643137e-06}, {"id": 34, "seek": 11004, "start": 123.96000000000001, "end": 124.96000000000001, "text": " Yeah, that's right.", "tokens": [865, 11, 300, 311, 558, 13], "temperature": 0.0, "avg_logprob": -0.22527777546584005, "compression_ratio": 1.61328125, "no_speech_prob": 3.3404448913643137e-06}, {"id": 35, "seek": 11004, "start": 124.96000000000001, "end": 130.12, "text": " And that comes somewhat from experience, you know, because I've worked in a bunch of companies", "tokens": [400, 300, 1487, 8344, 490, 1752, 11, 291, 458, 11, 570, 286, 600, 2732, 294, 257, 3840, 295, 3431], "temperature": 0.0, "avg_logprob": -0.22527777546584005, "compression_ratio": 1.61328125, "no_speech_prob": 3.3404448913643137e-06}, {"id": 36, "seek": 11004, "start": 130.12, "end": 136.52, "text": " where you start, you start building, you know, your MVP, and you take a charting library,", "tokens": [689, 291, 722, 11, 291, 722, 2390, 11, 291, 458, 11, 428, 37151, 11, 293, 291, 747, 257, 6927, 278, 6405, 11], "temperature": 0.0, "avg_logprob": -0.22527777546584005, "compression_ratio": 1.61328125, "no_speech_prob": 3.3404448913643137e-06}, {"id": 37, "seek": 13652, "start": 136.52, "end": 140.04000000000002, "text": " and you're going to be like, okay, we're going to do a bar chart.", "tokens": [293, 291, 434, 516, 281, 312, 411, 11, 1392, 11, 321, 434, 516, 281, 360, 257, 2159, 6927, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 38, "seek": 13652, "start": 140.04000000000002, "end": 143.64000000000001, "text": " And so you plot the bar chart, and then somebody comes in and like, well, we need to categorize", "tokens": [400, 370, 291, 7542, 264, 2159, 6927, 11, 293, 550, 2618, 1487, 294, 293, 411, 11, 731, 11, 321, 643, 281, 19250, 1125], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 39, "seek": 13652, "start": 143.64000000000001, "end": 145.88, "text": " by this other thing.", "tokens": [538, 341, 661, 551, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 40, "seek": 13652, "start": 145.88, "end": 147.44, "text": " So let's do some colors.", "tokens": [407, 718, 311, 360, 512, 4577, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 41, "seek": 13652, "start": 147.44, "end": 151.36, "text": " And you're like, okay, and the designer comes in and is like, well, I don't want those colors.", "tokens": [400, 291, 434, 411, 11, 1392, 11, 293, 264, 11795, 1487, 294, 293, 307, 411, 11, 731, 11, 286, 500, 380, 528, 729, 4577, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 42, "seek": 13652, "start": 151.36, "end": 152.36, "text": " I want these gradients.", "tokens": [286, 528, 613, 2771, 2448, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 43, "seek": 13652, "start": 152.36, "end": 158.12, "text": " And you're like, okay, that's like, suddenly now my config is like 500 lines.", "tokens": [400, 291, 434, 411, 11, 1392, 11, 300, 311, 411, 11, 5800, 586, 452, 6662, 307, 411, 5923, 3876, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 44, "seek": 13652, "start": 158.12, "end": 162.52, "text": " And I'm like, but I want December to be like twice as big as the other months.", "tokens": [400, 286, 478, 411, 11, 457, 286, 528, 7687, 281, 312, 411, 6091, 382, 955, 382, 264, 661, 2493, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 45, "seek": 13652, "start": 162.52, "end": 165.0, "text": " And you're like, Oh, I don't think it supports that.", "tokens": [400, 291, 434, 411, 11, 876, 11, 286, 500, 380, 519, 309, 9346, 300, 13], "temperature": 0.0, "avg_logprob": -0.301293158531189, "compression_ratio": 1.9633699633699633, "no_speech_prob": 1.4970210941100959e-05}, {"id": 46, "seek": 16500, "start": 165.0, "end": 168.0, "text": " Okay, I just have to monkey patch this thing.", "tokens": [1033, 11, 286, 445, 362, 281, 17847, 9972, 341, 551, 13], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 47, "seek": 16500, "start": 168.0, "end": 173.88, "text": " And like, suddenly, your chart is like 5000 lines of JSON.", "tokens": [400, 411, 11, 5800, 11, 428, 6927, 307, 411, 23777, 3876, 295, 31828, 13], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 48, "seek": 16500, "start": 173.88, "end": 176.28, "text": " And you know, it's still a bar chart.", "tokens": [400, 291, 458, 11, 309, 311, 920, 257, 2159, 6927, 13], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 49, "seek": 16500, "start": 176.28, "end": 180.32, "text": " It's not fundamentally more complicated than any bar chart.", "tokens": [467, 311, 406, 17879, 544, 6179, 813, 604, 2159, 6927, 13], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 50, "seek": 16500, "start": 180.32, "end": 186.08, "text": " But after everyone's done their little specific thing they want, you know, you've you've tweaked", "tokens": [583, 934, 1518, 311, 1096, 641, 707, 2685, 551, 436, 528, 11, 291, 458, 11, 291, 600, 291, 600, 6986, 7301], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 51, "seek": 16500, "start": 186.08, "end": 190.84, "text": " literally every knob the library you were using exposed.", "tokens": [3736, 633, 26759, 264, 6405, 291, 645, 1228, 9495, 13], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 52, "seek": 16500, "start": 190.84, "end": 191.84, "text": " And this is a real story.", "tokens": [400, 341, 307, 257, 957, 1657, 13], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 53, "seek": 16500, "start": 191.84, "end": 193.98, "text": " This totally happened to me in my first job.", "tokens": [639, 3879, 2011, 281, 385, 294, 452, 700, 1691, 13], "temperature": 0.0, "avg_logprob": -0.20580619204360828, "compression_ratio": 1.587360594795539, "no_speech_prob": 3.966942131228279e-06}, {"id": 54, "seek": 19398, "start": 193.98, "end": 199.79999999999998, "text": " So the own vision philosophy is more like, look, you're going to build a bar chart, whether", "tokens": [407, 264, 1065, 5201, 10675, 307, 544, 411, 11, 574, 11, 291, 434, 516, 281, 1322, 257, 2159, 6927, 11, 1968], "temperature": 0.0, "avg_logprob": -0.2569259268338563, "compression_ratio": 1.7323420074349443, "no_speech_prob": 1.6027826177378302e-06}, {"id": 55, "seek": 19398, "start": 199.79999999999998, "end": 203.44, "text": " you like it or not, from from the smaller blocks.", "tokens": [291, 411, 309, 420, 406, 11, 490, 490, 264, 4356, 8474, 13], "temperature": 0.0, "avg_logprob": -0.2569259268338563, "compression_ratio": 1.7323420074349443, "no_speech_prob": 1.6027826177378302e-06}, {"id": 56, "seek": 19398, "start": 203.44, "end": 207.64, "text": " But that means when that guy comes and says we want gradients instead of colors, well,", "tokens": [583, 300, 1355, 562, 300, 2146, 1487, 293, 1619, 321, 528, 2771, 2448, 2602, 295, 4577, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.2569259268338563, "compression_ratio": 1.7323420074349443, "no_speech_prob": 1.6027826177378302e-06}, {"id": 57, "seek": 19398, "start": 207.64, "end": 209.72, "text": " you're controlling the rendering.", "tokens": [291, 434, 14905, 264, 22407, 13], "temperature": 0.0, "avg_logprob": -0.2569259268338563, "compression_ratio": 1.7323420074349443, "no_speech_prob": 1.6027826177378302e-06}, {"id": 58, "seek": 19398, "start": 209.72, "end": 214.23999999999998, "text": " So you've already wrote the SVG code that renders the colors, you can just as easily", "tokens": [407, 291, 600, 1217, 4114, 264, 31910, 38, 3089, 300, 6125, 433, 264, 4577, 11, 291, 393, 445, 382, 3612], "temperature": 0.0, "avg_logprob": -0.2569259268338563, "compression_ratio": 1.7323420074349443, "no_speech_prob": 1.6027826177378302e-06}, {"id": 59, "seek": 19398, "start": 214.23999999999998, "end": 217.48, "text": " switching gradients, you control the sizes.", "tokens": [16493, 2771, 2448, 11, 291, 1969, 264, 11602, 13], "temperature": 0.0, "avg_logprob": -0.2569259268338563, "compression_ratio": 1.7323420074349443, "no_speech_prob": 1.6027826177378302e-06}, {"id": 60, "seek": 19398, "start": 217.48, "end": 221.28, "text": " So you can make it twice as big if you want, you can do whatever you want.", "tokens": [407, 291, 393, 652, 309, 6091, 382, 955, 498, 291, 528, 11, 291, 393, 360, 2035, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.2569259268338563, "compression_ratio": 1.7323420074349443, "no_speech_prob": 1.6027826177378302e-06}, {"id": 61, "seek": 22128, "start": 221.28, "end": 226.24, "text": " They will don't want it in a line, they want a circle, just pop in this extra helper that", "tokens": [814, 486, 500, 380, 528, 309, 294, 257, 1622, 11, 436, 528, 257, 6329, 11, 445, 1665, 294, 341, 2857, 36133, 300], "temperature": 0.0, "avg_logprob": -0.23859738037649508, "compression_ratio": 1.6788617886178863, "no_speech_prob": 3.0415531000471674e-06}, {"id": 62, "seek": 22128, "start": 226.24, "end": 228.72, "text": " transforms coordinates, and you're ready to go.", "tokens": [35592, 21056, 11, 293, 291, 434, 1919, 281, 352, 13], "temperature": 0.0, "avg_logprob": -0.23859738037649508, "compression_ratio": 1.6788617886178863, "no_speech_prob": 3.0415531000471674e-06}, {"id": 63, "seek": 22128, "start": 228.72, "end": 232.84, "text": " So that's kind of the that's, that's really behind this philosophy.", "tokens": [407, 300, 311, 733, 295, 264, 300, 311, 11, 300, 311, 534, 2261, 341, 10675, 13], "temperature": 0.0, "avg_logprob": -0.23859738037649508, "compression_ratio": 1.6788617886178863, "no_speech_prob": 3.0415531000471674e-06}, {"id": 64, "seek": 22128, "start": 232.84, "end": 239.24, "text": " And it's in some ways, you could say it's not beginner friendly, it has.", "tokens": [400, 309, 311, 294, 512, 2098, 11, 291, 727, 584, 309, 311, 406, 22080, 9208, 11, 309, 575, 13], "temperature": 0.0, "avg_logprob": -0.23859738037649508, "compression_ratio": 1.6788617886178863, "no_speech_prob": 3.0415531000471674e-06}, {"id": 65, "seek": 22128, "start": 239.24, "end": 241.72, "text": " And that's kind of, that's kind of the downside here, right?", "tokens": [400, 300, 311, 733, 295, 11, 300, 311, 733, 295, 264, 25060, 510, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.23859738037649508, "compression_ratio": 1.6788617886178863, "no_speech_prob": 3.0415531000471674e-06}, {"id": 66, "seek": 22128, "start": 241.72, "end": 246.96, "text": " Is that like, even that tutorial that you mentioned, it's fairly lengthy.", "tokens": [1119, 300, 411, 11, 754, 300, 7073, 300, 291, 2835, 11, 309, 311, 6457, 35374, 13], "temperature": 0.0, "avg_logprob": -0.23859738037649508, "compression_ratio": 1.6788617886178863, "no_speech_prob": 3.0415531000471674e-06}, {"id": 67, "seek": 24696, "start": 246.96, "end": 251.8, "text": " And it sort of has like, oh, by the way, before you start, you should learn these three things.", "tokens": [400, 309, 1333, 295, 575, 411, 11, 1954, 11, 538, 264, 636, 11, 949, 291, 722, 11, 291, 820, 1466, 613, 1045, 721, 13], "temperature": 0.0, "avg_logprob": -0.2684366081943031, "compression_ratio": 1.6964980544747081, "no_speech_prob": 1.0782921890495345e-05}, {"id": 68, "seek": 24696, "start": 251.8, "end": 254.44, "text": " And yeah, all of those three things are kind of big things.", "tokens": [400, 1338, 11, 439, 295, 729, 1045, 721, 366, 733, 295, 955, 721, 13], "temperature": 0.0, "avg_logprob": -0.2684366081943031, "compression_ratio": 1.6964980544747081, "no_speech_prob": 1.0782921890495345e-05}, {"id": 69, "seek": 24696, "start": 254.44, "end": 265.08, "text": " So you have to learn Elm and statistics and SVG, which is not a tiny thing to understand.", "tokens": [407, 291, 362, 281, 1466, 2699, 76, 293, 12523, 293, 31910, 38, 11, 597, 307, 406, 257, 5870, 551, 281, 1223, 13], "temperature": 0.0, "avg_logprob": -0.2684366081943031, "compression_ratio": 1.6964980544747081, "no_speech_prob": 1.0782921890495345e-05}, {"id": 70, "seek": 24696, "start": 265.08, "end": 270.16, "text": " So like, but, you know, I think, once you've done that, you've already paid the price,", "tokens": [407, 411, 11, 457, 11, 291, 458, 11, 286, 519, 11, 1564, 291, 600, 1096, 300, 11, 291, 600, 1217, 4835, 264, 3218, 11], "temperature": 0.0, "avg_logprob": -0.2684366081943031, "compression_ratio": 1.6964980544747081, "no_speech_prob": 1.0782921890495345e-05}, {"id": 71, "seek": 24696, "start": 270.16, "end": 275.52, "text": " and then you get this flexibility to do basically anything, you know, suddenly the ceiling isn't", "tokens": [293, 550, 291, 483, 341, 12635, 281, 360, 1936, 1340, 11, 291, 458, 11, 5800, 264, 13655, 1943, 380], "temperature": 0.0, "avg_logprob": -0.2684366081943031, "compression_ratio": 1.6964980544747081, "no_speech_prob": 1.0782921890495345e-05}, {"id": 72, "seek": 24696, "start": 275.52, "end": 276.52, "text": " there.", "tokens": [456, 13], "temperature": 0.0, "avg_logprob": -0.2684366081943031, "compression_ratio": 1.6964980544747081, "no_speech_prob": 1.0782921890495345e-05}, {"id": 73, "seek": 27652, "start": 276.52, "end": 281.88, "text": " So it's, I think, for a lot of use cases, it's definitely a worthwhile price to pay,", "tokens": [407, 309, 311, 11, 286, 519, 11, 337, 257, 688, 295, 764, 3331, 11, 309, 311, 2138, 257, 28159, 3218, 281, 1689, 11], "temperature": 0.0, "avg_logprob": -0.2225438609267726, "compression_ratio": 1.7043795620437956, "no_speech_prob": 2.9022794478805736e-06}, {"id": 74, "seek": 27652, "start": 281.88, "end": 284.4, "text": " but it's not for necessarily every use case.", "tokens": [457, 309, 311, 406, 337, 4725, 633, 764, 1389, 13], "temperature": 0.0, "avg_logprob": -0.2225438609267726, "compression_ratio": 1.7043795620437956, "no_speech_prob": 2.9022794478805736e-06}, {"id": 75, "seek": 27652, "start": 284.4, "end": 289.59999999999997, "text": " But then again, we have other packages in the Elm ecosystem that maybe slot better into", "tokens": [583, 550, 797, 11, 321, 362, 661, 17401, 294, 264, 2699, 76, 11311, 300, 1310, 14747, 1101, 666], "temperature": 0.0, "avg_logprob": -0.2225438609267726, "compression_ratio": 1.7043795620437956, "no_speech_prob": 2.9022794478805736e-06}, {"id": 76, "seek": 27652, "start": 289.59999999999997, "end": 291.15999999999997, "text": " some of those other use cases.", "tokens": [512, 295, 729, 661, 764, 3331, 13], "temperature": 0.0, "avg_logprob": -0.2225438609267726, "compression_ratio": 1.7043795620437956, "no_speech_prob": 2.9022794478805736e-06}, {"id": 77, "seek": 27652, "start": 291.15999999999997, "end": 297.32, "text": " So there's, you know, a bit of a, I think, you know, you can find it, you're not like", "tokens": [407, 456, 311, 11, 291, 458, 11, 257, 857, 295, 257, 11, 286, 519, 11, 291, 458, 11, 291, 393, 915, 309, 11, 291, 434, 406, 411], "temperature": 0.0, "avg_logprob": -0.2225438609267726, "compression_ratio": 1.7043795620437956, "no_speech_prob": 2.9022794478805736e-06}, {"id": 78, "seek": 27652, "start": 297.32, "end": 299.28, "text": " stuck if you don't want to pay this price.", "tokens": [5541, 498, 291, 500, 380, 528, 281, 1689, 341, 3218, 13], "temperature": 0.0, "avg_logprob": -0.2225438609267726, "compression_ratio": 1.7043795620437956, "no_speech_prob": 2.9022794478805736e-06}, {"id": 79, "seek": 27652, "start": 299.28, "end": 304.44, "text": " Yeah, you're never gonna go to your boss saying like, oh, that feature they requested for", "tokens": [865, 11, 291, 434, 1128, 799, 352, 281, 428, 5741, 1566, 411, 11, 1954, 11, 300, 4111, 436, 16436, 337], "temperature": 0.0, "avg_logprob": -0.2225438609267726, "compression_ratio": 1.7043795620437956, "no_speech_prob": 2.9022794478805736e-06}, {"id": 80, "seek": 30444, "start": 304.44, "end": 309.44, "text": " this visualization, like we can't do that this library doesn't support it, we would", "tokens": [341, 25801, 11, 411, 321, 393, 380, 360, 300, 341, 6405, 1177, 380, 1406, 309, 11, 321, 576], "temperature": 0.0, "avg_logprob": -0.22166169291794902, "compression_ratio": 1.6425531914893616, "no_speech_prob": 3.0894095743860817e-06}, {"id": 81, "seek": 30444, "start": 309.44, "end": 316.32, "text": " have to switch to another charting library that that would cost a lot of time and effort.", "tokens": [362, 281, 3679, 281, 1071, 6927, 278, 6405, 300, 300, 576, 2063, 257, 688, 295, 565, 293, 4630, 13], "temperature": 0.0, "avg_logprob": -0.22166169291794902, "compression_ratio": 1.6425531914893616, "no_speech_prob": 3.0894095743860817e-06}, {"id": 82, "seek": 30444, "start": 316.32, "end": 321.15999999999997, "text": " So we're just gonna not gonna do it or spend a few months working on it, or how long that", "tokens": [407, 321, 434, 445, 799, 406, 799, 360, 309, 420, 3496, 257, 1326, 2493, 1364, 322, 309, 11, 420, 577, 938, 300], "temperature": 0.0, "avg_logprob": -0.22166169291794902, "compression_ratio": 1.6425531914893616, "no_speech_prob": 3.0894095743860817e-06}, {"id": 83, "seek": 30444, "start": 321.15999999999997, "end": 322.15999999999997, "text": " takes.", "tokens": [2516, 13], "temperature": 0.0, "avg_logprob": -0.22166169291794902, "compression_ratio": 1.6425531914893616, "no_speech_prob": 3.0894095743860817e-06}, {"id": 84, "seek": 30444, "start": 322.15999999999997, "end": 323.88, "text": " So yeah, that is quite nice.", "tokens": [407, 1338, 11, 300, 307, 1596, 1481, 13], "temperature": 0.0, "avg_logprob": -0.22166169291794902, "compression_ratio": 1.6425531914893616, "no_speech_prob": 3.0894095743860817e-06}, {"id": 85, "seek": 30444, "start": 323.88, "end": 329.84, "text": " Yeah, I could see myself if I was building something where like data visualization and", "tokens": [865, 11, 286, 727, 536, 2059, 498, 286, 390, 2390, 746, 689, 411, 1412, 25801, 293], "temperature": 0.0, "avg_logprob": -0.22166169291794902, "compression_ratio": 1.6425531914893616, "no_speech_prob": 3.0894095743860817e-06}, {"id": 86, "seek": 32984, "start": 329.84, "end": 337.88, "text": " charts wasn't like a huge core part of the product, but it's like we need a little chart", "tokens": [17767, 2067, 380, 411, 257, 2603, 4965, 644, 295, 264, 1674, 11, 457, 309, 311, 411, 321, 643, 257, 707, 6927], "temperature": 0.0, "avg_logprob": -0.2529108086410834, "compression_ratio": 1.64, "no_speech_prob": 8.800685463938862e-06}, {"id": 87, "seek": 32984, "start": 337.88, "end": 338.88, "text": " here.", "tokens": [510, 13], "temperature": 0.0, "avg_logprob": -0.2529108086410834, "compression_ratio": 1.64, "no_speech_prob": 8.800685463938862e-06}, {"id": 88, "seek": 32984, "start": 338.88, "end": 342.35999999999996, "text": " It's not like it's just like a little dashboard with a couple of things that we want to make", "tokens": [467, 311, 406, 411, 309, 311, 445, 411, 257, 707, 18342, 365, 257, 1916, 295, 721, 300, 321, 528, 281, 652], "temperature": 0.0, "avg_logprob": -0.2529108086410834, "compression_ratio": 1.64, "no_speech_prob": 8.800685463938862e-06}, {"id": 89, "seek": 32984, "start": 342.35999999999996, "end": 344.23999999999995, "text": " a little more visual.", "tokens": [257, 707, 544, 5056, 13], "temperature": 0.0, "avg_logprob": -0.2529108086410834, "compression_ratio": 1.64, "no_speech_prob": 8.800685463938862e-06}, {"id": 90, "seek": 32984, "start": 344.23999999999995, "end": 348.52, "text": " And maybe just throw in Elm charts, Teresa's great package for that.", "tokens": [400, 1310, 445, 3507, 294, 2699, 76, 17767, 11, 35039, 311, 869, 7372, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.2529108086410834, "compression_ratio": 1.64, "no_speech_prob": 8.800685463938862e-06}, {"id": 91, "seek": 32984, "start": 348.52, "end": 354.47999999999996, "text": " It's gonna look really visually pleasing without you having to fiddle with a lot of stuff.", "tokens": [467, 311, 799, 574, 534, 19622, 32798, 1553, 291, 1419, 281, 24553, 2285, 365, 257, 688, 295, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2529108086410834, "compression_ratio": 1.64, "no_speech_prob": 8.800685463938862e-06}, {"id": 92, "seek": 35448, "start": 354.48, "end": 360.08000000000004, "text": " You don't really have to like dig into SVG and all these things, and maybe that's just", "tokens": [509, 500, 380, 534, 362, 281, 411, 2528, 666, 31910, 38, 293, 439, 613, 721, 11, 293, 1310, 300, 311, 445], "temperature": 0.0, "avg_logprob": -0.23436405347741168, "compression_ratio": 1.7406015037593985, "no_speech_prob": 4.785057626577327e-06}, {"id": 93, "seek": 35448, "start": 360.08000000000004, "end": 363.16, "text": " good enough, because you never really need to customize that much.", "tokens": [665, 1547, 11, 570, 291, 1128, 534, 643, 281, 19734, 300, 709, 13], "temperature": 0.0, "avg_logprob": -0.23436405347741168, "compression_ratio": 1.7406015037593985, "no_speech_prob": 4.785057626577327e-06}, {"id": 94, "seek": 35448, "start": 363.16, "end": 368.36, "text": " But if it's like, we're building a product where the backbone of the product is data", "tokens": [583, 498, 309, 311, 411, 11, 321, 434, 2390, 257, 1674, 689, 264, 34889, 295, 264, 1674, 307, 1412], "temperature": 0.0, "avg_logprob": -0.23436405347741168, "compression_ratio": 1.7406015037593985, "no_speech_prob": 4.785057626577327e-06}, {"id": 95, "seek": 35448, "start": 368.36, "end": 373.16, "text": " visualization, maybe you start immediately with Elm visualization, because you know,", "tokens": [25801, 11, 1310, 291, 722, 4258, 365, 2699, 76, 25801, 11, 570, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.23436405347741168, "compression_ratio": 1.7406015037593985, "no_speech_prob": 4.785057626577327e-06}, {"id": 96, "seek": 35448, "start": 373.16, "end": 375.52000000000004, "text": " you're going to need to customize every part of it.", "tokens": [291, 434, 516, 281, 643, 281, 19734, 633, 644, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.23436405347741168, "compression_ratio": 1.7406015037593985, "no_speech_prob": 4.785057626577327e-06}, {"id": 97, "seek": 35448, "start": 375.52000000000004, "end": 381.68, "text": " Also, I mean, the thing is that learning is, you know, learning some of these skills is", "tokens": [2743, 11, 286, 914, 11, 264, 551, 307, 300, 2539, 307, 11, 291, 458, 11, 2539, 512, 295, 613, 3942, 307], "temperature": 0.0, "avg_logprob": -0.23436405347741168, "compression_ratio": 1.7406015037593985, "no_speech_prob": 4.785057626577327e-06}, {"id": 98, "seek": 38168, "start": 381.68, "end": 388.04, "text": " a thing that isn't necessarily an investment that is just related to one particular project.", "tokens": [257, 551, 300, 1943, 380, 4725, 364, 6078, 300, 307, 445, 4077, 281, 472, 1729, 1716, 13], "temperature": 0.0, "avg_logprob": -0.22312697048844962, "compression_ratio": 1.8416666666666666, "no_speech_prob": 1.4593439345844672e-06}, {"id": 99, "seek": 38168, "start": 388.04, "end": 395.28000000000003, "text": " Like, if you learn SVG, you're going to benefit from that in this project, but also the next", "tokens": [1743, 11, 498, 291, 1466, 31910, 38, 11, 291, 434, 516, 281, 5121, 490, 300, 294, 341, 1716, 11, 457, 611, 264, 958], "temperature": 0.0, "avg_logprob": -0.22312697048844962, "compression_ratio": 1.8416666666666666, "no_speech_prob": 1.4593439345844672e-06}, {"id": 100, "seek": 38168, "start": 395.28000000000003, "end": 400.1, "text": " project and the project after that, you know, and you're going to be even able to be hired", "tokens": [1716, 293, 264, 1716, 934, 300, 11, 291, 458, 11, 293, 291, 434, 516, 281, 312, 754, 1075, 281, 312, 13144], "temperature": 0.0, "avg_logprob": -0.22312697048844962, "compression_ratio": 1.8416666666666666, "no_speech_prob": 1.4593439345844672e-06}, {"id": 101, "seek": 38168, "start": 400.1, "end": 404.84000000000003, "text": " on a project that maybe if you hadn't learned it, you wouldn't be and so on.", "tokens": [322, 257, 1716, 300, 1310, 498, 291, 8782, 380, 3264, 309, 11, 291, 2759, 380, 312, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.22312697048844962, "compression_ratio": 1.8416666666666666, "no_speech_prob": 1.4593439345844672e-06}, {"id": 102, "seek": 38168, "start": 404.84000000000003, "end": 409.84000000000003, "text": " So it's just there is also an element there that, you know, because we're, it's not like", "tokens": [407, 309, 311, 445, 456, 307, 611, 364, 4478, 456, 300, 11, 291, 458, 11, 570, 321, 434, 11, 309, 311, 406, 411], "temperature": 0.0, "avg_logprob": -0.22312697048844962, "compression_ratio": 1.8416666666666666, "no_speech_prob": 1.4593439345844672e-06}, {"id": 103, "seek": 40984, "start": 409.84, "end": 415.46, "text": " these skills that are prerequisites are like, some really specific API that you'll never", "tokens": [613, 3942, 300, 366, 38333, 15398, 3324, 366, 411, 11, 512, 534, 2685, 9362, 300, 291, 603, 1128], "temperature": 0.0, "avg_logprob": -0.279809773525345, "compression_ratio": 1.6331877729257642, "no_speech_prob": 9.080413292394951e-06}, {"id": 104, "seek": 40984, "start": 415.46, "end": 417.11999999999995, "text": " use for anything else.", "tokens": [764, 337, 1340, 1646, 13], "temperature": 0.0, "avg_logprob": -0.279809773525345, "compression_ratio": 1.6331877729257642, "no_speech_prob": 9.080413292394951e-06}, {"id": 105, "seek": 40984, "start": 417.11999999999995, "end": 422.12, "text": " Again, you know, these are good things to know, if you want to have a front end career,", "tokens": [3764, 11, 291, 458, 11, 613, 366, 665, 721, 281, 458, 11, 498, 291, 528, 281, 362, 257, 1868, 917, 3988, 11], "temperature": 0.0, "avg_logprob": -0.279809773525345, "compression_ratio": 1.6331877729257642, "no_speech_prob": 9.080413292394951e-06}, {"id": 106, "seek": 40984, "start": 422.12, "end": 424.44, "text": " let's say, you know, that they'll come in handy.", "tokens": [718, 311, 584, 11, 291, 458, 11, 300, 436, 603, 808, 294, 13239, 13], "temperature": 0.0, "avg_logprob": -0.279809773525345, "compression_ratio": 1.6331877729257642, "no_speech_prob": 9.080413292394951e-06}, {"id": 107, "seek": 40984, "start": 424.44, "end": 429.52, "text": " Like, so I think it's, you have to consider it from that perspective as well.", "tokens": [1743, 11, 370, 286, 519, 309, 311, 11, 291, 362, 281, 1949, 309, 490, 300, 4585, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.279809773525345, "compression_ratio": 1.6331877729257642, "no_speech_prob": 9.080413292394951e-06}, {"id": 108, "seek": 40984, "start": 429.52, "end": 433.15999999999997, "text": " Yeah, that's, that's a great way to look at it.", "tokens": [865, 11, 300, 311, 11, 300, 311, 257, 869, 636, 281, 574, 412, 309, 13], "temperature": 0.0, "avg_logprob": -0.279809773525345, "compression_ratio": 1.6331877729257642, "no_speech_prob": 9.080413292394951e-06}, {"id": 109, "seek": 43316, "start": 433.16, "end": 440.88000000000005, "text": " So I hadn't used Elm visualization before, but going through this tutorial, I think it's", "tokens": [407, 286, 8782, 380, 1143, 2699, 76, 25801, 949, 11, 457, 516, 807, 341, 7073, 11, 286, 519, 309, 311], "temperature": 0.0, "avg_logprob": -0.21623715487393466, "compression_ratio": 1.5132743362831858, "no_speech_prob": 7.295870091184042e-06}, {"id": 110, "seek": 43316, "start": 440.88000000000005, "end": 447.84000000000003, "text": " really cool how it does look like SVG with a few high level helpers.", "tokens": [534, 1627, 577, 309, 775, 574, 411, 31910, 38, 365, 257, 1326, 1090, 1496, 854, 433, 13], "temperature": 0.0, "avg_logprob": -0.21623715487393466, "compression_ratio": 1.5132743362831858, "no_speech_prob": 7.295870091184042e-06}, {"id": 111, "seek": 43316, "start": 447.84000000000003, "end": 454.16, "text": " And so it makes me think of like, like people sometimes describe a framework as being don't", "tokens": [400, 370, 309, 1669, 385, 519, 295, 411, 11, 411, 561, 2171, 6786, 257, 8388, 382, 885, 500, 380], "temperature": 0.0, "avg_logprob": -0.21623715487393466, "compression_ratio": 1.5132743362831858, "no_speech_prob": 7.295870091184042e-06}, {"id": 112, "seek": 43316, "start": 454.16, "end": 460.96000000000004, "text": " call us, we'll call you like you sort of pass in code for the framework to call and it wires", "tokens": [818, 505, 11, 321, 603, 818, 291, 411, 291, 1333, 295, 1320, 294, 3089, 337, 264, 8388, 281, 818, 293, 309, 15537], "temperature": 0.0, "avg_logprob": -0.21623715487393466, "compression_ratio": 1.5132743362831858, "no_speech_prob": 7.295870091184042e-06}, {"id": 113, "seek": 46096, "start": 460.96, "end": 464.52, "text": " everything together, and then a library is the opposite.", "tokens": [1203, 1214, 11, 293, 550, 257, 6405, 307, 264, 6182, 13], "temperature": 0.0, "avg_logprob": -0.20448396973690744, "compression_ratio": 1.7743190661478598, "no_speech_prob": 2.123352942362544e-06}, {"id": 114, "seek": 46096, "start": 464.52, "end": 467.91999999999996, "text": " It's like you call the function when you want to use it.", "tokens": [467, 311, 411, 291, 818, 264, 2445, 562, 291, 528, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.20448396973690744, "compression_ratio": 1.7743190661478598, "no_speech_prob": 2.123352942362544e-06}, {"id": 115, "seek": 46096, "start": 467.91999999999996, "end": 473.24, "text": " This is much more that library approach of like, you're making SVG, but then you have", "tokens": [639, 307, 709, 544, 300, 6405, 3109, 295, 411, 11, 291, 434, 1455, 31910, 38, 11, 457, 550, 291, 362], "temperature": 0.0, "avg_logprob": -0.20448396973690744, "compression_ratio": 1.7743190661478598, "no_speech_prob": 2.123352942362544e-06}, {"id": 116, "seek": 46096, "start": 473.24, "end": 477.76, "text": " a little helper that helps you draw your axes and things like that.", "tokens": [257, 707, 36133, 300, 3665, 291, 2642, 428, 35387, 293, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.20448396973690744, "compression_ratio": 1.7743190661478598, "no_speech_prob": 2.123352942362544e-06}, {"id": 117, "seek": 46096, "start": 477.76, "end": 483.12, "text": " So you're really just making SVG and there are a few little helpers that help you do", "tokens": [407, 291, 434, 534, 445, 1455, 31910, 38, 293, 456, 366, 257, 1326, 707, 854, 433, 300, 854, 291, 360], "temperature": 0.0, "avg_logprob": -0.20448396973690744, "compression_ratio": 1.7743190661478598, "no_speech_prob": 2.123352942362544e-06}, {"id": 118, "seek": 46096, "start": 483.12, "end": 487.96, "text": " things in a more high level way and give you some abstractions to work with that.", "tokens": [721, 294, 257, 544, 1090, 1496, 636, 293, 976, 291, 512, 12649, 626, 281, 589, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.20448396973690744, "compression_ratio": 1.7743190661478598, "no_speech_prob": 2.123352942362544e-06}, {"id": 119, "seek": 46096, "start": 487.96, "end": 488.96, "text": " That's exactly right.", "tokens": [663, 311, 2293, 558, 13], "temperature": 0.0, "avg_logprob": -0.20448396973690744, "compression_ratio": 1.7743190661478598, "no_speech_prob": 2.123352942362544e-06}, {"id": 120, "seek": 48896, "start": 488.96, "end": 494.84, "text": " That that's, and I guess that's also one of the big features that I am really, I really", "tokens": [663, 300, 311, 11, 293, 286, 2041, 300, 311, 611, 472, 295, 264, 955, 4122, 300, 286, 669, 534, 11, 286, 534], "temperature": 0.0, "avg_logprob": -0.24067474505223266, "compression_ratio": 1.6567796610169492, "no_speech_prob": 6.893332624713366e-07}, {"id": 121, "seek": 48896, "start": 494.84, "end": 501.08, "text": " insist on is that it's an optional library, which I mean, if you don't like the way Elm", "tokens": [13466, 322, 307, 300, 309, 311, 364, 17312, 6405, 11, 597, 286, 914, 11, 498, 291, 500, 380, 411, 264, 636, 2699, 76], "temperature": 0.0, "avg_logprob": -0.24067474505223266, "compression_ratio": 1.6567796610169492, "no_speech_prob": 6.893332624713366e-07}, {"id": 122, "seek": 48896, "start": 501.08, "end": 504.85999999999996, "text": " visualization does something, you're not locked into it.", "tokens": [25801, 775, 746, 11, 291, 434, 406, 9376, 666, 309, 13], "temperature": 0.0, "avg_logprob": -0.24067474505223266, "compression_ratio": 1.6567796610169492, "no_speech_prob": 6.893332624713366e-07}, {"id": 123, "seek": 48896, "start": 504.85999999999996, "end": 509.15999999999997, "text": " You can replace like, you don't like the way our axes look out of the box.", "tokens": [509, 393, 7406, 411, 11, 291, 500, 380, 411, 264, 636, 527, 35387, 574, 484, 295, 264, 2424, 13], "temperature": 0.0, "avg_logprob": -0.24067474505223266, "compression_ratio": 1.6567796610169492, "no_speech_prob": 6.893332624713366e-07}, {"id": 124, "seek": 48896, "start": 509.15999999999997, "end": 514.4, "text": " There's some knobs you can customize, but like, there's nothing, it's just SVGs, or", "tokens": [821, 311, 512, 46999, 291, 393, 19734, 11, 457, 411, 11, 456, 311, 1825, 11, 309, 311, 445, 31910, 33715, 11, 420], "temperature": 0.0, "avg_logprob": -0.24067474505223266, "compression_ratio": 1.6567796610169492, "no_speech_prob": 6.893332624713366e-07}, {"id": 125, "seek": 51440, "start": 514.4, "end": 519.04, "text": " you can just pop in your own implementation, and in fact, you can drop into some lower", "tokens": [291, 393, 445, 1665, 294, 428, 1065, 11420, 11, 293, 294, 1186, 11, 291, 393, 3270, 666, 512, 3126], "temperature": 0.0, "avg_logprob": -0.2220362043872322, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.5558734907681355e-06}, {"id": 126, "seek": 51440, "start": 519.04, "end": 523.68, "text": " level functionality we provide to help you build those.", "tokens": [1496, 14980, 321, 2893, 281, 854, 291, 1322, 729, 13], "temperature": 0.0, "avg_logprob": -0.2220362043872322, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.5558734907681355e-06}, {"id": 127, "seek": 51440, "start": 523.68, "end": 530.9599999999999, "text": " And also the modules, and so to get a little bit into some internals, the modules in Elm", "tokens": [400, 611, 264, 16679, 11, 293, 370, 281, 483, 257, 707, 857, 666, 512, 2154, 1124, 11, 264, 16679, 294, 2699, 76], "temperature": 0.0, "avg_logprob": -0.2220362043872322, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.5558734907681355e-06}, {"id": 128, "seek": 51440, "start": 530.9599999999999, "end": 537.3199999999999, "text": " visualization are also only depend on each other through their public APIs.", "tokens": [25801, 366, 611, 787, 5672, 322, 1184, 661, 807, 641, 1908, 21445, 13], "temperature": 0.0, "avg_logprob": -0.2220362043872322, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.5558734907681355e-06}, {"id": 129, "seek": 51440, "start": 537.3199999999999, "end": 543.12, "text": " So that means that if you don't like the way one of the modules work, you can just literally", "tokens": [407, 300, 1355, 300, 498, 291, 500, 380, 411, 264, 636, 472, 295, 264, 16679, 589, 11, 291, 393, 445, 3736], "temperature": 0.0, "avg_logprob": -0.2220362043872322, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.5558734907681355e-06}, {"id": 130, "seek": 54312, "start": 543.12, "end": 547.38, "text": " copy paste its code, pop it into your project and mess with it.", "tokens": [5055, 9163, 1080, 3089, 11, 1665, 309, 666, 428, 1716, 293, 2082, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.26310736979913274, "compression_ratio": 1.6398467432950192, "no_speech_prob": 9.223344022757374e-06}, {"id": 131, "seek": 54312, "start": 547.38, "end": 551.84, "text": " And you don't have to copy paste the entirety of Elm visualization because there's some", "tokens": [400, 291, 500, 380, 362, 281, 5055, 9163, 264, 31557, 295, 2699, 76, 25801, 570, 456, 311, 512], "temperature": 0.0, "avg_logprob": -0.26310736979913274, "compression_ratio": 1.6398467432950192, "no_speech_prob": 9.223344022757374e-06}, {"id": 132, "seek": 54312, "start": 551.84, "end": 555.32, "text": " like internal package dependencies, there aren't any.", "tokens": [411, 6920, 7372, 36606, 11, 456, 3212, 380, 604, 13], "temperature": 0.0, "avg_logprob": -0.26310736979913274, "compression_ratio": 1.6398467432950192, "no_speech_prob": 9.223344022757374e-06}, {"id": 133, "seek": 54312, "start": 555.32, "end": 558.0, "text": " So each module is kind of standalone.", "tokens": [407, 1184, 10088, 307, 733, 295, 37454, 13], "temperature": 0.0, "avg_logprob": -0.26310736979913274, "compression_ratio": 1.6398467432950192, "no_speech_prob": 9.223344022757374e-06}, {"id": 134, "seek": 54312, "start": 558.0, "end": 562.64, "text": " If it depends on the other ones, it's just through the same API that you as the user", "tokens": [759, 309, 5946, 322, 264, 661, 2306, 11, 309, 311, 445, 807, 264, 912, 9362, 300, 291, 382, 264, 4195], "temperature": 0.0, "avg_logprob": -0.26310736979913274, "compression_ratio": 1.6398467432950192, "no_speech_prob": 9.223344022757374e-06}, {"id": 135, "seek": 54312, "start": 562.64, "end": 563.94, "text": " have access to.", "tokens": [362, 2105, 281, 13], "temperature": 0.0, "avg_logprob": -0.26310736979913274, "compression_ratio": 1.6398467432950192, "no_speech_prob": 9.223344022757374e-06}, {"id": 136, "seek": 54312, "start": 563.94, "end": 569.12, "text": " So that's another axis of customization that you can do with this project, I guess.", "tokens": [407, 300, 311, 1071, 10298, 295, 39387, 300, 291, 393, 360, 365, 341, 1716, 11, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.26310736979913274, "compression_ratio": 1.6398467432950192, "no_speech_prob": 9.223344022757374e-06}, {"id": 137, "seek": 56912, "start": 569.12, "end": 574.6, "text": " So that's what I mean by it should be always like optional is, you know, if you if these", "tokens": [407, 300, 311, 437, 286, 914, 538, 309, 820, 312, 1009, 411, 17312, 307, 11, 291, 458, 11, 498, 291, 498, 613], "temperature": 0.0, "avg_logprob": -0.25861379835340714, "compression_ratio": 1.7004405286343611, "no_speech_prob": 3.966956228396157e-06}, {"id": 138, "seek": 56912, "start": 574.6, "end": 577.36, "text": " helpers are helpful, by all means use them.", "tokens": [854, 433, 366, 4961, 11, 538, 439, 1355, 764, 552, 13], "temperature": 0.0, "avg_logprob": -0.25861379835340714, "compression_ratio": 1.7004405286343611, "no_speech_prob": 3.966956228396157e-06}, {"id": 139, "seek": 56912, "start": 577.36, "end": 579.08, "text": " If they're not, you can replace them.", "tokens": [759, 436, 434, 406, 11, 291, 393, 7406, 552, 13], "temperature": 0.0, "avg_logprob": -0.25861379835340714, "compression_ratio": 1.7004405286343611, "no_speech_prob": 3.966956228396157e-06}, {"id": 140, "seek": 56912, "start": 579.08, "end": 584.4, "text": " I have to say actually, like this, this conversation for me is very helpful.", "tokens": [286, 362, 281, 584, 767, 11, 411, 341, 11, 341, 3761, 337, 385, 307, 588, 4961, 13], "temperature": 0.0, "avg_logprob": -0.25861379835340714, "compression_ratio": 1.7004405286343611, "no_speech_prob": 3.966956228396157e-06}, {"id": 141, "seek": 56912, "start": 584.4, "end": 591.48, "text": " Because like in the past, I have to admit, I haven't really had a huge need for visualization", "tokens": [1436, 411, 294, 264, 1791, 11, 286, 362, 281, 9796, 11, 286, 2378, 380, 534, 632, 257, 2603, 643, 337, 25801], "temperature": 0.0, "avg_logprob": -0.25861379835340714, "compression_ratio": 1.7004405286343611, "no_speech_prob": 3.966956228396157e-06}, {"id": 142, "seek": 56912, "start": 591.48, "end": 593.84, "text": " tools in the Elm work I've done in the past.", "tokens": [3873, 294, 264, 2699, 76, 589, 286, 600, 1096, 294, 264, 1791, 13], "temperature": 0.0, "avg_logprob": -0.25861379835340714, "compression_ratio": 1.7004405286343611, "no_speech_prob": 3.966956228396157e-06}, {"id": 143, "seek": 59384, "start": 593.84, "end": 601.52, "text": " So I haven't like deeply researched visualization packages, but just when I've been browsing", "tokens": [407, 286, 2378, 380, 411, 8760, 37098, 25801, 17401, 11, 457, 445, 562, 286, 600, 668, 38602], "temperature": 0.0, "avg_logprob": -0.18169818878173827, "compression_ratio": 1.5975103734439835, "no_speech_prob": 8.139531018969137e-06}, {"id": 144, "seek": 59384, "start": 601.52, "end": 606.72, "text": " through packages that pop up and I see Elm visualization, like I've seen your visualization", "tokens": [807, 17401, 300, 1665, 493, 293, 286, 536, 2699, 76, 25801, 11, 411, 286, 600, 1612, 428, 25801], "temperature": 0.0, "avg_logprob": -0.18169818878173827, "compression_ratio": 1.5975103734439835, "no_speech_prob": 8.139531018969137e-06}, {"id": 145, "seek": 59384, "start": 606.72, "end": 611.0400000000001, "text": " gallery and that I'm like, wow, this is impressive.", "tokens": [18378, 293, 300, 286, 478, 411, 11, 6076, 11, 341, 307, 8992, 13], "temperature": 0.0, "avg_logprob": -0.18169818878173827, "compression_ratio": 1.5975103734439835, "no_speech_prob": 8.139531018969137e-06}, {"id": 146, "seek": 59384, "start": 611.0400000000001, "end": 613.6800000000001, "text": " Like there are a lot of things you can do.", "tokens": [1743, 456, 366, 257, 688, 295, 721, 291, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.18169818878173827, "compression_ratio": 1.5975103734439835, "no_speech_prob": 8.139531018969137e-06}, {"id": 147, "seek": 59384, "start": 613.6800000000001, "end": 616.12, "text": " It seems very powerful.", "tokens": [467, 2544, 588, 4005, 13], "temperature": 0.0, "avg_logprob": -0.18169818878173827, "compression_ratio": 1.5975103734439835, "no_speech_prob": 8.139531018969137e-06}, {"id": 148, "seek": 59384, "start": 616.12, "end": 622.44, "text": " But then when I look at the API, I just didn't quite know how to how to frame it.", "tokens": [583, 550, 562, 286, 574, 412, 264, 9362, 11, 286, 445, 994, 380, 1596, 458, 577, 281, 577, 281, 3920, 309, 13], "temperature": 0.0, "avg_logprob": -0.18169818878173827, "compression_ratio": 1.5975103734439835, "no_speech_prob": 8.139531018969137e-06}, {"id": 149, "seek": 62244, "start": 622.44, "end": 627.7600000000001, "text": " So this conversation is really helpful to like, understand why these design decisions", "tokens": [407, 341, 3761, 307, 534, 4961, 281, 411, 11, 1223, 983, 613, 1715, 5327], "temperature": 0.0, "avg_logprob": -0.2346283721923828, "compression_ratio": 1.623931623931624, "no_speech_prob": 2.8572799237736035e-06}, {"id": 150, "seek": 62244, "start": 627.7600000000001, "end": 628.7600000000001, "text": " were made this way.", "tokens": [645, 1027, 341, 636, 13], "temperature": 0.0, "avg_logprob": -0.2346283721923828, "compression_ratio": 1.623931623931624, "no_speech_prob": 2.8572799237736035e-06}, {"id": 151, "seek": 62244, "start": 628.7600000000001, "end": 633.6400000000001, "text": " Yeah, I think I think that was a bit, that was a big piece that we were missing for a", "tokens": [865, 11, 286, 519, 286, 519, 300, 390, 257, 857, 11, 300, 390, 257, 955, 2522, 300, 321, 645, 5361, 337, 257], "temperature": 0.0, "avg_logprob": -0.2346283721923828, "compression_ratio": 1.623931623931624, "no_speech_prob": 2.8572799237736035e-06}, {"id": 152, "seek": 62244, "start": 633.6400000000001, "end": 634.6400000000001, "text": " while.", "tokens": [1339, 13], "temperature": 0.0, "avg_logprob": -0.2346283721923828, "compression_ratio": 1.623931623931624, "no_speech_prob": 2.8572799237736035e-06}, {"id": 153, "seek": 62244, "start": 634.6400000000001, "end": 639.1400000000001, "text": " And it's, it's one of the reasons I released this tutorial recently.", "tokens": [400, 309, 311, 11, 309, 311, 472, 295, 264, 4112, 286, 4736, 341, 7073, 3938, 13], "temperature": 0.0, "avg_logprob": -0.2346283721923828, "compression_ratio": 1.623931623931624, "no_speech_prob": 2.8572799237736035e-06}, {"id": 154, "seek": 62244, "start": 639.1400000000001, "end": 645.6, "text": " Because my one of my aims is a little bit to bridge that gap between the API seems to", "tokens": [1436, 452, 472, 295, 452, 24683, 307, 257, 707, 857, 281, 7283, 300, 7417, 1296, 264, 9362, 2544, 281], "temperature": 0.0, "avg_logprob": -0.2346283721923828, "compression_ratio": 1.623931623931624, "no_speech_prob": 2.8572799237736035e-06}, {"id": 155, "seek": 62244, "start": 645.6, "end": 648.36, "text": " be these low level things.", "tokens": [312, 613, 2295, 1496, 721, 13], "temperature": 0.0, "avg_logprob": -0.2346283721923828, "compression_ratio": 1.623931623931624, "no_speech_prob": 2.8572799237736035e-06}, {"id": 156, "seek": 64836, "start": 648.36, "end": 653.48, "text": " And then you have the examples which show you often like interesting graphics.", "tokens": [400, 550, 291, 362, 264, 5110, 597, 855, 291, 2049, 411, 1880, 11837, 13], "temperature": 0.0, "avg_logprob": -0.31627171615074423, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.4059577299340162e-06}, {"id": 157, "seek": 64836, "start": 653.48, "end": 658.28, "text": " And it's a little bit, you know, that meme with how to draw the owl where like the first", "tokens": [400, 309, 311, 257, 707, 857, 11, 291, 458, 11, 300, 21701, 365, 577, 281, 2642, 264, 34488, 689, 411, 264, 700], "temperature": 0.0, "avg_logprob": -0.31627171615074423, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.4059577299340162e-06}, {"id": 158, "seek": 64836, "start": 658.28, "end": 662.88, "text": " frame is like an oval and then the third frame is the length thing.", "tokens": [3920, 307, 411, 364, 37175, 293, 550, 264, 2636, 3920, 307, 264, 4641, 551, 13], "temperature": 0.0, "avg_logprob": -0.31627171615074423, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.4059577299340162e-06}, {"id": 159, "seek": 64836, "start": 662.88, "end": 667.84, "text": " You know, the middle says just draw the, draw the, draw the owl, draw the rest.", "tokens": [509, 458, 11, 264, 2808, 1619, 445, 2642, 264, 11, 2642, 264, 11, 2642, 264, 34488, 11, 2642, 264, 1472, 13], "temperature": 0.0, "avg_logprob": -0.31627171615074423, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.4059577299340162e-06}, {"id": 160, "seek": 64836, "start": 667.84, "end": 670.2, "text": " So like, I think we were a little bit in that.", "tokens": [407, 411, 11, 286, 519, 321, 645, 257, 707, 857, 294, 300, 13], "temperature": 0.0, "avg_logprob": -0.31627171615074423, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.4059577299340162e-06}, {"id": 161, "seek": 64836, "start": 670.2, "end": 676.22, "text": " So I think the tutorial is trying to like slightly connect how to think about from,", "tokens": [407, 286, 519, 264, 7073, 307, 1382, 281, 411, 4748, 1745, 577, 281, 519, 466, 490, 11], "temperature": 0.0, "avg_logprob": -0.31627171615074423, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.4059577299340162e-06}, {"id": 162, "seek": 67622, "start": 676.22, "end": 679.52, "text": " you know, these smaller bits, how to get to something bigger.", "tokens": [291, 458, 11, 613, 4356, 9239, 11, 577, 281, 483, 281, 746, 3801, 13], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 163, "seek": 67622, "start": 679.52, "end": 682.44, "text": " What are the mental models you should have on connecting these things?", "tokens": [708, 366, 264, 4973, 5245, 291, 820, 362, 322, 11015, 613, 721, 30], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 164, "seek": 67622, "start": 682.44, "end": 686.6800000000001, "text": " And what kind of things we, you know, Visual Studio expects you to do, what kind of things", "tokens": [400, 437, 733, 295, 721, 321, 11, 291, 458, 11, 23187, 13500, 33280, 291, 281, 360, 11, 437, 733, 295, 721], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 165, "seek": 67622, "start": 686.6800000000001, "end": 690.0400000000001, "text": " it can bring to the table and how that's going to work.", "tokens": [309, 393, 1565, 281, 264, 3199, 293, 577, 300, 311, 516, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 166, "seek": 67622, "start": 690.0400000000001, "end": 691.5600000000001, "text": " So I don't know if it succeeds in that.", "tokens": [407, 286, 500, 380, 458, 498, 309, 49263, 294, 300, 13], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 167, "seek": 67622, "start": 691.5600000000001, "end": 695.44, "text": " But that's sort of one of the my motivations for kind of writing it.", "tokens": [583, 300, 311, 1333, 295, 472, 295, 264, 452, 39034, 337, 733, 295, 3579, 309, 13], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 168, "seek": 67622, "start": 695.44, "end": 698.6800000000001, "text": " Because I also felt that there was a little bit of a that disconnect.", "tokens": [1436, 286, 611, 2762, 300, 456, 390, 257, 707, 857, 295, 257, 300, 14299, 13], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 169, "seek": 67622, "start": 698.6800000000001, "end": 704.32, "text": " Yeah, that tutorial is very helpful, I think, because if you as great as as the Elm package", "tokens": [865, 11, 300, 7073, 307, 588, 4961, 11, 286, 519, 11, 570, 498, 291, 382, 869, 382, 382, 264, 2699, 76, 7372], "temperature": 0.0, "avg_logprob": -0.2773275110456679, "compression_ratio": 1.729559748427673, "no_speech_prob": 1.750272531353403e-05}, {"id": 170, "seek": 70432, "start": 704.32, "end": 710.6800000000001, "text": " docs setup is, and as great as like your galleries, those are two good pieces, like, but the package", "tokens": [45623, 8657, 307, 11, 293, 382, 869, 382, 411, 428, 40141, 11, 729, 366, 732, 665, 3755, 11, 411, 11, 457, 264, 7372], "temperature": 0.0, "avg_logprob": -0.24804026955052427, "compression_ratio": 1.6431718061674008, "no_speech_prob": 2.9020388865319546e-06}, {"id": 171, "seek": 70432, "start": 710.6800000000001, "end": 712.32, "text": " docs are reference.", "tokens": [45623, 366, 6408, 13], "temperature": 0.0, "avg_logprob": -0.24804026955052427, "compression_ratio": 1.6431718061674008, "no_speech_prob": 2.9020388865319546e-06}, {"id": 172, "seek": 70432, "start": 712.32, "end": 717.32, "text": " And for this, I think you really need like a conceptual guide that walks you through", "tokens": [400, 337, 341, 11, 286, 519, 291, 534, 643, 411, 257, 24106, 5934, 300, 12896, 291, 807], "temperature": 0.0, "avg_logprob": -0.24804026955052427, "compression_ratio": 1.6431718061674008, "no_speech_prob": 2.9020388865319546e-06}, {"id": 173, "seek": 70432, "start": 717.32, "end": 720.96, "text": " how to think about it and how to set up these basic charts.", "tokens": [577, 281, 519, 466, 309, 293, 577, 281, 992, 493, 613, 3875, 17767, 13], "temperature": 0.0, "avg_logprob": -0.24804026955052427, "compression_ratio": 1.6431718061674008, "no_speech_prob": 2.9020388865319546e-06}, {"id": 174, "seek": 70432, "start": 720.96, "end": 722.9000000000001, "text": " So very helpful.", "tokens": [407, 588, 4961, 13], "temperature": 0.0, "avg_logprob": -0.24804026955052427, "compression_ratio": 1.6431718061674008, "no_speech_prob": 2.9020388865319546e-06}, {"id": 175, "seek": 70432, "start": 722.9000000000001, "end": 729.1600000000001, "text": " So maybe we can, like walk through like, what would some of those building blocks that you", "tokens": [407, 1310, 321, 393, 11, 411, 1792, 807, 411, 11, 437, 576, 512, 295, 729, 2390, 8474, 300, 291], "temperature": 0.0, "avg_logprob": -0.24804026955052427, "compression_ratio": 1.6431718061674008, "no_speech_prob": 2.9020388865319546e-06}, {"id": 176, "seek": 72916, "start": 729.16, "end": 736.8, "text": " would use to have these sort of higher level helpers that you use within your SVG builder", "tokens": [576, 764, 281, 362, 613, 1333, 295, 2946, 1496, 854, 433, 300, 291, 764, 1951, 428, 31910, 38, 27377], "temperature": 0.0, "avg_logprob": -0.2194932016094079, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.034835236168874e-06}, {"id": 177, "seek": 72916, "start": 736.8, "end": 742.4399999999999, "text": " to do something very simple, like a like a bar chart, for example, like, what would be", "tokens": [281, 360, 746, 588, 2199, 11, 411, 257, 411, 257, 2159, 6927, 11, 337, 1365, 11, 411, 11, 437, 576, 312], "temperature": 0.0, "avg_logprob": -0.2194932016094079, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.034835236168874e-06}, {"id": 178, "seek": 72916, "start": 742.4399999999999, "end": 747.1999999999999, "text": " those abstractions that Elm visualization gives you that you would use to make a simple", "tokens": [729, 12649, 626, 300, 2699, 76, 25801, 2709, 291, 300, 291, 576, 764, 281, 652, 257, 2199], "temperature": 0.0, "avg_logprob": -0.2194932016094079, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.034835236168874e-06}, {"id": 179, "seek": 72916, "start": 747.1999999999999, "end": 748.1999999999999, "text": " bar chart?", "tokens": [2159, 6927, 30], "temperature": 0.0, "avg_logprob": -0.2194932016094079, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.034835236168874e-06}, {"id": 180, "seek": 72916, "start": 748.1999999999999, "end": 756.3199999999999, "text": " I think the most fundamental abstraction that is used extremely commonly, not 100% of the", "tokens": [286, 519, 264, 881, 8088, 37765, 300, 307, 1143, 4664, 12719, 11, 406, 2319, 4, 295, 264], "temperature": 0.0, "avg_logprob": -0.2194932016094079, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.034835236168874e-06}, {"id": 181, "seek": 75632, "start": 756.32, "end": 761.32, "text": " time, but it's sort of the bread and butter of working with Elm visualization is, is what", "tokens": [565, 11, 457, 309, 311, 1333, 295, 264, 5961, 293, 5517, 295, 1364, 365, 2699, 76, 25801, 307, 11, 307, 437], "temperature": 0.0, "avg_logprob": -0.2625394205408772, "compression_ratio": 1.7286821705426356, "no_speech_prob": 1.5779160094098188e-06}, {"id": 182, "seek": 75632, "start": 761.32, "end": 763.08, "text": " we call the scale.", "tokens": [321, 818, 264, 4373, 13], "temperature": 0.0, "avg_logprob": -0.2625394205408772, "compression_ratio": 1.7286821705426356, "no_speech_prob": 1.5779160094098188e-06}, {"id": 183, "seek": 75632, "start": 763.08, "end": 769.24, "text": " And you can think of the scale as a way of on the one side, you have your data, which", "tokens": [400, 291, 393, 519, 295, 264, 4373, 382, 257, 636, 295, 322, 264, 472, 1252, 11, 291, 362, 428, 1412, 11, 597], "temperature": 0.0, "avg_logprob": -0.2625394205408772, "compression_ratio": 1.7286821705426356, "no_speech_prob": 1.5779160094098188e-06}, {"id": 184, "seek": 75632, "start": 769.24, "end": 775.0, "text": " is you can think of it as it occupies some abstract space, you know, let's say, it's", "tokens": [307, 291, 393, 519, 295, 309, 382, 309, 8073, 530, 512, 12649, 1901, 11, 291, 458, 11, 718, 311, 584, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.2625394205408772, "compression_ratio": 1.7286821705426356, "no_speech_prob": 1.5779160094098188e-06}, {"id": 185, "seek": 75632, "start": 775.0, "end": 776.6800000000001, "text": " speed.", "tokens": [3073, 13], "temperature": 0.0, "avg_logprob": -0.2625394205408772, "compression_ratio": 1.7286821705426356, "no_speech_prob": 1.5779160094098188e-06}, {"id": 186, "seek": 75632, "start": 776.6800000000001, "end": 781.5600000000001, "text": " So you know, it's this actually from like zero kilometers per hour to, you know, whatever,", "tokens": [407, 291, 458, 11, 309, 311, 341, 767, 490, 411, 4018, 13904, 680, 1773, 281, 11, 291, 458, 11, 2035, 11], "temperature": 0.0, "avg_logprob": -0.2625394205408772, "compression_ratio": 1.7286821705426356, "no_speech_prob": 1.5779160094098188e-06}, {"id": 187, "seek": 75632, "start": 781.5600000000001, "end": 785.36, "text": " 500 kilometers per hour, if you have really fast cars, I don't know.", "tokens": [5923, 13904, 680, 1773, 11, 498, 291, 362, 534, 2370, 5163, 11, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.2625394205408772, "compression_ratio": 1.7286821705426356, "no_speech_prob": 1.5779160094098188e-06}, {"id": 188, "seek": 78536, "start": 785.36, "end": 790.8000000000001, "text": " And like, on the other side, you want to show it on the screen as let's say bars, so they're", "tokens": [400, 411, 11, 322, 264, 661, 1252, 11, 291, 528, 281, 855, 309, 322, 264, 2568, 382, 718, 311, 584, 10228, 11, 370, 436, 434], "temperature": 0.0, "avg_logprob": -0.24159608320756393, "compression_ratio": 1.6544715447154472, "no_speech_prob": 1.4367240055435104e-06}, {"id": 189, "seek": 78536, "start": 790.8000000000001, "end": 794.04, "text": " going to be a certain number of pixels long.", "tokens": [516, 281, 312, 257, 1629, 1230, 295, 18668, 938, 13], "temperature": 0.0, "avg_logprob": -0.24159608320756393, "compression_ratio": 1.6544715447154472, "no_speech_prob": 1.4367240055435104e-06}, {"id": 190, "seek": 78536, "start": 794.04, "end": 801.08, "text": " And so you need some relationship that can transform between these two different abstract", "tokens": [400, 370, 291, 643, 512, 2480, 300, 393, 4088, 1296, 613, 732, 819, 12649], "temperature": 0.0, "avg_logprob": -0.24159608320756393, "compression_ratio": 1.6544715447154472, "no_speech_prob": 1.4367240055435104e-06}, {"id": 191, "seek": 78536, "start": 801.08, "end": 802.44, "text": " spaces, right?", "tokens": [7673, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.24159608320756393, "compression_ratio": 1.6544715447154472, "no_speech_prob": 1.4367240055435104e-06}, {"id": 192, "seek": 78536, "start": 802.44, "end": 803.98, "text": " And that's the job of the scale.", "tokens": [400, 300, 311, 264, 1691, 295, 264, 4373, 13], "temperature": 0.0, "avg_logprob": -0.24159608320756393, "compression_ratio": 1.6544715447154472, "no_speech_prob": 1.4367240055435104e-06}, {"id": 193, "seek": 78536, "start": 803.98, "end": 808.76, "text": " So the scale encodes is usually most of the scales are bidirectional.", "tokens": [407, 264, 4373, 2058, 4789, 307, 2673, 881, 295, 264, 17408, 366, 12957, 621, 41048, 13], "temperature": 0.0, "avg_logprob": -0.24159608320756393, "compression_ratio": 1.6544715447154472, "no_speech_prob": 1.4367240055435104e-06}, {"id": 194, "seek": 78536, "start": 808.76, "end": 813.24, "text": " So you can go from from one, one space to the other and back.", "tokens": [407, 291, 393, 352, 490, 490, 472, 11, 472, 1901, 281, 264, 661, 293, 646, 13], "temperature": 0.0, "avg_logprob": -0.24159608320756393, "compression_ratio": 1.6544715447154472, "no_speech_prob": 1.4367240055435104e-06}, {"id": 195, "seek": 81324, "start": 813.24, "end": 816.96, "text": " But they also encode in them a lot of the common operation.", "tokens": [583, 436, 611, 2058, 1429, 294, 552, 257, 688, 295, 264, 2689, 6916, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 196, "seek": 81324, "start": 816.96, "end": 821.16, "text": " So like a common operation is you want to show what we call ticks.", "tokens": [407, 411, 257, 2689, 6916, 307, 291, 528, 281, 855, 437, 321, 818, 42475, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 197, "seek": 81324, "start": 821.16, "end": 823.52, "text": " So you can think of it on an axis.", "tokens": [407, 291, 393, 519, 295, 309, 322, 364, 10298, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 198, "seek": 81324, "start": 823.52, "end": 826.16, "text": " There's those little lines at the bottom with the numbers.", "tokens": [821, 311, 729, 707, 3876, 412, 264, 2767, 365, 264, 3547, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 199, "seek": 81324, "start": 826.16, "end": 828.6800000000001, "text": " That's what we would roughly call ticks.", "tokens": [663, 311, 437, 321, 576, 9810, 818, 42475, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 200, "seek": 81324, "start": 828.6800000000001, "end": 833.72, "text": " Ticks are funny, because you want them to be roughly evenly spaced, but you also want", "tokens": [314, 7663, 366, 4074, 11, 570, 291, 528, 552, 281, 312, 9810, 17658, 43766, 11, 457, 291, 611, 528], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 201, "seek": 81324, "start": 833.72, "end": 835.88, "text": " them to be like human readable.", "tokens": [552, 281, 312, 411, 1952, 49857, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 202, "seek": 81324, "start": 835.88, "end": 839.0, "text": " So you don't really want them to have like 25 decimal places.", "tokens": [407, 291, 500, 380, 534, 528, 552, 281, 362, 411, 3552, 26601, 3190, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 203, "seek": 81324, "start": 839.0, "end": 842.58, "text": " So you would like them to kind of land on nice even values.", "tokens": [407, 291, 576, 411, 552, 281, 733, 295, 2117, 322, 1481, 754, 4190, 13], "temperature": 0.0, "avg_logprob": -0.2582323729102291, "compression_ratio": 1.8694029850746268, "no_speech_prob": 1.392513240716653e-06}, {"id": 204, "seek": 84258, "start": 842.58, "end": 846.4200000000001, "text": " So there's a fair amount of logic, you know, to do all that stuff.", "tokens": [407, 456, 311, 257, 3143, 2372, 295, 9952, 11, 291, 458, 11, 281, 360, 439, 300, 1507, 13], "temperature": 0.0, "avg_logprob": -0.24821182188948965, "compression_ratio": 1.7765151515151516, "no_speech_prob": 1.1300639926048461e-05}, {"id": 205, "seek": 84258, "start": 846.4200000000001, "end": 851.12, "text": " And you kind of get that sort of stuff packaged in this little scale type.", "tokens": [400, 291, 733, 295, 483, 300, 1333, 295, 1507, 38162, 294, 341, 707, 4373, 2010, 13], "temperature": 0.0, "avg_logprob": -0.24821182188948965, "compression_ratio": 1.7765151515151516, "no_speech_prob": 1.1300639926048461e-05}, {"id": 206, "seek": 84258, "start": 851.12, "end": 855.76, "text": " And so really what you would do for something like a bar chart is you would pick a scale", "tokens": [400, 370, 534, 437, 291, 576, 360, 337, 746, 411, 257, 2159, 6927, 307, 291, 576, 1888, 257, 4373], "temperature": 0.0, "avg_logprob": -0.24821182188948965, "compression_ratio": 1.7765151515151516, "no_speech_prob": 1.1300639926048461e-05}, {"id": 207, "seek": 84258, "start": 855.76, "end": 860.76, "text": " for the x axis, you would pick a different scale for the y axis.", "tokens": [337, 264, 2031, 10298, 11, 291, 576, 1888, 257, 819, 4373, 337, 264, 288, 10298, 13], "temperature": 0.0, "avg_logprob": -0.24821182188948965, "compression_ratio": 1.7765151515151516, "no_speech_prob": 1.1300639926048461e-05}, {"id": 208, "seek": 84258, "start": 860.76, "end": 865.5200000000001, "text": " And this gives you kind of an immediate way how to kind of construct a rectangle, right?", "tokens": [400, 341, 2709, 291, 733, 295, 364, 11629, 636, 577, 281, 733, 295, 7690, 257, 21930, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.24821182188948965, "compression_ratio": 1.7765151515151516, "no_speech_prob": 1.1300639926048461e-05}, {"id": 209, "seek": 84258, "start": 865.5200000000001, "end": 869.88, "text": " Because you can then in SVG, you can say a rectangle should have, it has to start at", "tokens": [1436, 291, 393, 550, 294, 31910, 38, 11, 291, 393, 584, 257, 21930, 820, 362, 11, 309, 575, 281, 722, 412], "temperature": 0.0, "avg_logprob": -0.24821182188948965, "compression_ratio": 1.7765151515151516, "no_speech_prob": 1.1300639926048461e-05}, {"id": 210, "seek": 86988, "start": 869.88, "end": 875.72, "text": " x or x position, it's so much wide, starts at a y position, so much, so much, it has", "tokens": [2031, 420, 2031, 2535, 11, 309, 311, 370, 709, 4874, 11, 3719, 412, 257, 288, 2535, 11, 370, 709, 11, 370, 709, 11, 309, 575], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 211, "seek": 86988, "start": 875.72, "end": 877.6, "text": " such a height.", "tokens": [1270, 257, 6681, 13], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 212, "seek": 86988, "start": 877.6, "end": 880.32, "text": " And both of those numbers you can get from the axes.", "tokens": [400, 1293, 295, 729, 3547, 291, 393, 483, 490, 264, 35387, 13], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 213, "seek": 86988, "start": 880.32, "end": 885.08, "text": " And then, you know, you just pick some colors and you're mostly, you've got the core of", "tokens": [400, 550, 11, 291, 458, 11, 291, 445, 1888, 512, 4577, 293, 291, 434, 5240, 11, 291, 600, 658, 264, 4965, 295], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 214, "seek": 86988, "start": 885.08, "end": 886.08, "text": " the chart ready.", "tokens": [264, 6927, 1919, 13], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 215, "seek": 86988, "start": 886.08, "end": 887.72, "text": " And then you can add extra stuff.", "tokens": [400, 550, 291, 393, 909, 2857, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 216, "seek": 86988, "start": 887.72, "end": 893.4399999999999, "text": " So the scales kind of tie on nicely to axes, which is kind of, axes are almost actually", "tokens": [407, 264, 17408, 733, 295, 7582, 322, 9594, 281, 35387, 11, 597, 307, 733, 295, 11, 35387, 366, 1920, 767], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 217, "seek": 86988, "start": 893.4399999999999, "end": 898.04, "text": " in a typical element of visualization, because they're one of the only things that actually", "tokens": [294, 257, 7476, 4478, 295, 25801, 11, 570, 436, 434, 472, 295, 264, 787, 721, 300, 767], "temperature": 0.0, "avg_logprob": -0.2675281231219952, "compression_ratio": 1.7773584905660378, "no_speech_prob": 2.156781420126208e-06}, {"id": 218, "seek": 89804, "start": 898.04, "end": 902.76, "text": " gives you, doesn't give you back data, it just gives you actual SVG.", "tokens": [2709, 291, 11, 1177, 380, 976, 291, 646, 1412, 11, 309, 445, 2709, 291, 3539, 31910, 38, 13], "temperature": 0.0, "avg_logprob": -0.26160643204398776, "compression_ratio": 1.7093023255813953, "no_speech_prob": 2.521550641176873e-06}, {"id": 219, "seek": 89804, "start": 902.76, "end": 907.9599999999999, "text": " But axes are just so common in data visualization that programming them always from scratch", "tokens": [583, 35387, 366, 445, 370, 2689, 294, 1412, 25801, 300, 9410, 552, 1009, 490, 8459], "temperature": 0.0, "avg_logprob": -0.26160643204398776, "compression_ratio": 1.7093023255813953, "no_speech_prob": 2.521550641176873e-06}, {"id": 220, "seek": 89804, "start": 907.9599999999999, "end": 909.16, "text": " is annoying.", "tokens": [307, 11304, 13], "temperature": 0.0, "avg_logprob": -0.26160643204398776, "compression_ratio": 1.7093023255813953, "no_speech_prob": 2.521550641176873e-06}, {"id": 221, "seek": 89804, "start": 909.16, "end": 913.36, "text": " So then you can take your scale, plop it into the axes, and it will, you know, actually", "tokens": [407, 550, 291, 393, 747, 428, 4373, 11, 499, 404, 309, 666, 264, 35387, 11, 293, 309, 486, 11, 291, 458, 11, 767], "temperature": 0.0, "avg_logprob": -0.26160643204398776, "compression_ratio": 1.7093023255813953, "no_speech_prob": 2.521550641176873e-06}, {"id": 222, "seek": 89804, "start": 913.36, "end": 918.88, "text": " draw the little line with the little ticks and format the little labels and stuff like", "tokens": [2642, 264, 707, 1622, 365, 264, 707, 42475, 293, 7877, 264, 707, 16949, 293, 1507, 411], "temperature": 0.0, "avg_logprob": -0.26160643204398776, "compression_ratio": 1.7093023255813953, "no_speech_prob": 2.521550641176873e-06}, {"id": 223, "seek": 89804, "start": 918.88, "end": 920.0, "text": " that.", "tokens": [300, 13], "temperature": 0.0, "avg_logprob": -0.26160643204398776, "compression_ratio": 1.7093023255813953, "no_speech_prob": 2.521550641176873e-06}, {"id": 224, "seek": 89804, "start": 920.0, "end": 924.68, "text": " And then just to polish it off, you probably need to put it into actual SVG, add some,", "tokens": [400, 550, 445, 281, 20452, 309, 766, 11, 291, 1391, 643, 281, 829, 309, 666, 3539, 31910, 38, 11, 909, 512, 11], "temperature": 0.0, "avg_logprob": -0.26160643204398776, "compression_ratio": 1.7093023255813953, "no_speech_prob": 2.521550641176873e-06}, {"id": 225, "seek": 92468, "start": 924.68, "end": 929.8399999999999, "text": " maybe some transforms to get stuff aligned nicely, and you're basically done.", "tokens": [1310, 512, 35592, 281, 483, 1507, 17962, 9594, 11, 293, 291, 434, 1936, 1096, 13], "temperature": 0.0, "avg_logprob": -0.2060520814196898, "compression_ratio": 1.5889328063241106, "no_speech_prob": 3.3405265185137978e-06}, {"id": 226, "seek": 92468, "start": 929.8399999999999, "end": 935.0799999999999, "text": " So that's kind of how those two primitives work to make a very simple chart.", "tokens": [407, 300, 311, 733, 295, 577, 729, 732, 2886, 38970, 589, 281, 652, 257, 588, 2199, 6927, 13], "temperature": 0.0, "avg_logprob": -0.2060520814196898, "compression_ratio": 1.5889328063241106, "no_speech_prob": 3.3405265185137978e-06}, {"id": 227, "seek": 92468, "start": 935.0799999999999, "end": 936.0799999999999, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2060520814196898, "compression_ratio": 1.5889328063241106, "no_speech_prob": 3.3405265185137978e-06}, {"id": 228, "seek": 92468, "start": 936.0799999999999, "end": 942.28, "text": " And it basically, yeah, and it doesn't necessarily, visualization doesn't really have a strong", "tokens": [400, 309, 1936, 11, 1338, 11, 293, 309, 1177, 380, 4725, 11, 25801, 1177, 380, 534, 362, 257, 2068], "temperature": 0.0, "avg_logprob": -0.2060520814196898, "compression_ratio": 1.5889328063241106, "no_speech_prob": 3.3405265185137978e-06}, {"id": 229, "seek": 92468, "start": 942.28, "end": 945.88, "text": " opinion on how your data is going to be structured.", "tokens": [4800, 322, 577, 428, 1412, 307, 516, 281, 312, 18519, 13], "temperature": 0.0, "avg_logprob": -0.2060520814196898, "compression_ratio": 1.5889328063241106, "no_speech_prob": 3.3405265185137978e-06}, {"id": 230, "seek": 92468, "start": 945.88, "end": 954.4, "text": " So like, if we were doing a bar chart of Elm Radio episodes, and the popularity of an episode", "tokens": [407, 411, 11, 498, 321, 645, 884, 257, 2159, 6927, 295, 2699, 76, 17296, 9313, 11, 293, 264, 19301, 295, 364, 3500], "temperature": 0.0, "avg_logprob": -0.2060520814196898, "compression_ratio": 1.5889328063241106, "no_speech_prob": 3.3405265185137978e-06}, {"id": 231, "seek": 95440, "start": 954.4, "end": 955.88, "text": " and the date of an episode.", "tokens": [293, 264, 4002, 295, 364, 3500, 13], "temperature": 0.0, "avg_logprob": -0.24675013718095798, "compression_ratio": 1.7649769585253456, "no_speech_prob": 5.25524546901579e-06}, {"id": 232, "seek": 95440, "start": 955.88, "end": 962.4, "text": " So you know, if we have a record that's like, you know, popularity, and episode title and", "tokens": [407, 291, 458, 11, 498, 321, 362, 257, 2136, 300, 311, 411, 11, 291, 458, 11, 19301, 11, 293, 3500, 4876, 293], "temperature": 0.0, "avg_logprob": -0.24675013718095798, "compression_ratio": 1.7649769585253456, "no_speech_prob": 5.25524546901579e-06}, {"id": 233, "seek": 95440, "start": 962.4, "end": 968.9599999999999, "text": " episode date, and that's just a record, a list of records of that type, you know, I", "tokens": [3500, 4002, 11, 293, 300, 311, 445, 257, 2136, 11, 257, 1329, 295, 7724, 295, 300, 2010, 11, 291, 458, 11, 286], "temperature": 0.0, "avg_logprob": -0.24675013718095798, "compression_ratio": 1.7649769585253456, "no_speech_prob": 5.25524546901579e-06}, {"id": 234, "seek": 95440, "start": 968.9599999999999, "end": 974.52, "text": " mean, or it could be whatever type, Elm visualization doesn't really care because we're going to", "tokens": [914, 11, 420, 309, 727, 312, 2035, 2010, 11, 2699, 76, 25801, 1177, 380, 534, 1127, 570, 321, 434, 516, 281], "temperature": 0.0, "avg_logprob": -0.24675013718095798, "compression_ratio": 1.7649769585253456, "no_speech_prob": 5.25524546901579e-06}, {"id": 235, "seek": 95440, "start": 974.52, "end": 980.52, "text": " be the ones writing some code that's going to be doing a list.map and rendering some", "tokens": [312, 264, 2306, 3579, 512, 3089, 300, 311, 516, 281, 312, 884, 257, 1329, 13, 24223, 293, 22407, 512], "temperature": 0.0, "avg_logprob": -0.24675013718095798, "compression_ratio": 1.7649769585253456, "no_speech_prob": 5.25524546901579e-06}, {"id": 236, "seek": 98052, "start": 980.52, "end": 985.04, "text": " SVG element for each of those that's going to render the bar.", "tokens": [31910, 38, 4478, 337, 1184, 295, 729, 300, 311, 516, 281, 15529, 264, 2159, 13], "temperature": 0.0, "avg_logprob": -0.2711926724048371, "compression_ratio": 1.5648148148148149, "no_speech_prob": 1.9947256078012288e-06}, {"id": 237, "seek": 98052, "start": 985.04, "end": 991.84, "text": " So Elm visualization isn't involved yet, when we're just rendering an SVG element.", "tokens": [407, 2699, 76, 25801, 1943, 380, 3288, 1939, 11, 562, 321, 434, 445, 22407, 364, 31910, 38, 4478, 13], "temperature": 0.0, "avg_logprob": -0.2711926724048371, "compression_ratio": 1.5648148148148149, "no_speech_prob": 1.9947256078012288e-06}, {"id": 238, "seek": 98052, "start": 991.84, "end": 995.92, "text": " It's involved when we are rendering SVG attributes.", "tokens": [467, 311, 3288, 562, 321, 366, 22407, 31910, 38, 17212, 13], "temperature": 0.0, "avg_logprob": -0.2711926724048371, "compression_ratio": 1.5648148148148149, "no_speech_prob": 1.9947256078012288e-06}, {"id": 239, "seek": 98052, "start": 995.92, "end": 1000.56, "text": " And now it's going to help us for the height of it.", "tokens": [400, 586, 309, 311, 516, 281, 854, 505, 337, 264, 6681, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.2711926724048371, "compression_ratio": 1.5648148148148149, "no_speech_prob": 1.9947256078012288e-06}, {"id": 240, "seek": 98052, "start": 1000.56, "end": 1007.56, "text": " To write, yeah, to basically calculate like the pixels, given a scale that we have.", "tokens": [1407, 2464, 11, 1338, 11, 281, 1936, 8873, 411, 264, 18668, 11, 2212, 257, 4373, 300, 321, 362, 13], "temperature": 0.0, "avg_logprob": -0.2711926724048371, "compression_ratio": 1.5648148148148149, "no_speech_prob": 1.9947256078012288e-06}, {"id": 241, "seek": 98052, "start": 1007.56, "end": 1008.56, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2711926724048371, "compression_ratio": 1.5648148148148149, "no_speech_prob": 1.9947256078012288e-06}, {"id": 242, "seek": 100856, "start": 1008.56, "end": 1014.1199999999999, "text": " And that's kind of one of the somewhat, I guess, unusual design philosophies of Elm", "tokens": [400, 300, 311, 733, 295, 472, 295, 264, 8344, 11, 286, 2041, 11, 10901, 1715, 14529, 530, 295, 2699, 76], "temperature": 0.0, "avg_logprob": -0.2281016583712596, "compression_ratio": 1.6818181818181819, "no_speech_prob": 7.337988563449471e-07}, {"id": 243, "seek": 100856, "start": 1014.1199999999999, "end": 1020.4799999999999, "text": " visualization is that it tries fairly hard, doesn't always succeed, but it generally tries", "tokens": [25801, 307, 300, 309, 9898, 6457, 1152, 11, 1177, 380, 1009, 7754, 11, 457, 309, 5101, 9898], "temperature": 0.0, "avg_logprob": -0.2281016583712596, "compression_ratio": 1.6818181818181819, "no_speech_prob": 7.337988563449471e-07}, {"id": 244, "seek": 100856, "start": 1020.4799999999999, "end": 1027.52, "text": " fairly hard to be as unopinionated about the data structure that you want to use, let you", "tokens": [6457, 1152, 281, 312, 382, 517, 404, 259, 313, 770, 466, 264, 1412, 3877, 300, 291, 528, 281, 764, 11, 718, 291], "temperature": 0.0, "avg_logprob": -0.2281016583712596, "compression_ratio": 1.6818181818181819, "no_speech_prob": 7.337988563449471e-07}, {"id": 245, "seek": 100856, "start": 1027.52, "end": 1031.9199999999998, "text": " do that, which, you know, gives you that flexibility.", "tokens": [360, 300, 11, 597, 11, 291, 458, 11, 2709, 291, 300, 12635, 13], "temperature": 0.0, "avg_logprob": -0.2281016583712596, "compression_ratio": 1.6818181818181819, "no_speech_prob": 7.337988563449471e-07}, {"id": 246, "seek": 100856, "start": 1031.9199999999998, "end": 1036.52, "text": " It's up to you how to deal with how you want to fetch and store and deal with your data.", "tokens": [467, 311, 493, 281, 291, 577, 281, 2028, 365, 577, 291, 528, 281, 23673, 293, 3531, 293, 2028, 365, 428, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2281016583712596, "compression_ratio": 1.6818181818181819, "no_speech_prob": 7.337988563449471e-07}, {"id": 247, "seek": 103652, "start": 1036.52, "end": 1045.0, "text": " So sometimes it's a tough job for me sometimes as an API designer to actually pull that off", "tokens": [407, 2171, 309, 311, 257, 4930, 1691, 337, 385, 2171, 382, 364, 9362, 11795, 281, 767, 2235, 300, 766], "temperature": 0.0, "avg_logprob": -0.2460030775803786, "compression_ratio": 1.5896414342629481, "no_speech_prob": 2.0579448118951404e-06}, {"id": 248, "seek": 103652, "start": 1045.0, "end": 1049.84, "text": " because we don't have a huge amount like polymorphism and stuff like that in Elm.", "tokens": [570, 321, 500, 380, 362, 257, 2603, 2372, 411, 6754, 76, 18191, 1434, 293, 1507, 411, 300, 294, 2699, 76, 13], "temperature": 0.0, "avg_logprob": -0.2460030775803786, "compression_ratio": 1.5896414342629481, "no_speech_prob": 2.0579448118951404e-06}, {"id": 249, "seek": 103652, "start": 1049.84, "end": 1055.12, "text": " So sometimes you have to make a choice and you just get on with it.", "tokens": [407, 2171, 291, 362, 281, 652, 257, 3922, 293, 291, 445, 483, 322, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.2460030775803786, "compression_ratio": 1.5896414342629481, "no_speech_prob": 2.0579448118951404e-06}, {"id": 250, "seek": 103652, "start": 1055.12, "end": 1060.52, "text": " But in general, the aim is to keep that as flexible as possible.", "tokens": [583, 294, 2674, 11, 264, 5939, 307, 281, 1066, 300, 382, 11358, 382, 1944, 13], "temperature": 0.0, "avg_logprob": -0.2460030775803786, "compression_ratio": 1.5896414342629481, "no_speech_prob": 2.0579448118951404e-06}, {"id": 251, "seek": 103652, "start": 1060.52, "end": 1066.48, "text": " I'm guessing in most cases, you want the user to use their data and to convert them to later", "tokens": [286, 478, 17939, 294, 881, 3331, 11, 291, 528, 264, 4195, 281, 764, 641, 1412, 293, 281, 7620, 552, 281, 1780], "temperature": 0.0, "avg_logprob": -0.2460030775803786, "compression_ratio": 1.5896414342629481, "no_speech_prob": 2.0579448118951404e-06}, {"id": 252, "seek": 106648, "start": 1066.48, "end": 1072.92, "text": " lists, Elm lists, or do you take other kinds of types as well?", "tokens": [14511, 11, 2699, 76, 14511, 11, 420, 360, 291, 747, 661, 3685, 295, 3467, 382, 731, 30], "temperature": 0.0, "avg_logprob": -0.28582454177568545, "compression_ratio": 1.6822429906542056, "no_speech_prob": 8.267522389360238e-06}, {"id": 253, "seek": 106648, "start": 1072.92, "end": 1074.8, "text": " Ideally, we don't care.", "tokens": [40817, 11, 321, 500, 380, 1127, 13], "temperature": 0.0, "avg_logprob": -0.28582454177568545, "compression_ratio": 1.6822429906542056, "no_speech_prob": 8.267522389360238e-06}, {"id": 254, "seek": 106648, "start": 1074.8, "end": 1081.1200000000001, "text": " So for things like scales, we don't really need to see your data at all.", "tokens": [407, 337, 721, 411, 17408, 11, 321, 500, 380, 534, 643, 281, 536, 428, 1412, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.28582454177568545, "compression_ratio": 1.6822429906542056, "no_speech_prob": 8.267522389360238e-06}, {"id": 255, "seek": 106648, "start": 1081.1200000000001, "end": 1083.08, "text": " We just need to see a datum.", "tokens": [492, 445, 643, 281, 536, 257, 1137, 449, 13], "temperature": 0.0, "avg_logprob": -0.28582454177568545, "compression_ratio": 1.6822429906542056, "no_speech_prob": 8.267522389360238e-06}, {"id": 256, "seek": 106648, "start": 1083.08, "end": 1087.44, "text": " I mean, what I mean by that, like if you, for instance, if you want to store your data", "tokens": [286, 914, 11, 437, 286, 914, 538, 300, 11, 411, 498, 291, 11, 337, 5197, 11, 498, 291, 528, 281, 3531, 428, 1412], "temperature": 0.0, "avg_logprob": -0.28582454177568545, "compression_ratio": 1.6822429906542056, "no_speech_prob": 8.267522389360238e-06}, {"id": 257, "seek": 106648, "start": 1087.44, "end": 1092.92, "text": " as a list of records, and then you want to visualize like a particular field in that", "tokens": [382, 257, 1329, 295, 7724, 11, 293, 550, 291, 528, 281, 23273, 411, 257, 1729, 2519, 294, 300], "temperature": 0.0, "avg_logprob": -0.28582454177568545, "compression_ratio": 1.6822429906542056, "no_speech_prob": 8.267522389360238e-06}, {"id": 258, "seek": 109292, "start": 1092.92, "end": 1096.68, "text": " field, like a scale only cares about that number in that field.", "tokens": [2519, 11, 411, 257, 4373, 787, 12310, 466, 300, 1230, 294, 300, 2519, 13], "temperature": 0.0, "avg_logprob": -0.27741389629269436, "compression_ratio": 1.8663793103448276, "no_speech_prob": 4.637543042917969e-06}, {"id": 259, "seek": 109292, "start": 1096.68, "end": 1101.1200000000001, "text": " It doesn't care if you store a list, store it in an array, if you store it in a record", "tokens": [467, 1177, 380, 1127, 498, 291, 3531, 257, 1329, 11, 3531, 309, 294, 364, 10225, 11, 498, 291, 3531, 309, 294, 257, 2136], "temperature": 0.0, "avg_logprob": -0.27741389629269436, "compression_ratio": 1.8663793103448276, "no_speech_prob": 4.637543042917969e-06}, {"id": 260, "seek": 109292, "start": 1101.1200000000001, "end": 1105.8000000000002, "text": " of arrays, it's really up to you how you want to structure your data.", "tokens": [295, 41011, 11, 309, 311, 534, 493, 281, 291, 577, 291, 528, 281, 3877, 428, 1412, 13], "temperature": 0.0, "avg_logprob": -0.27741389629269436, "compression_ratio": 1.8663793103448276, "no_speech_prob": 4.637543042917969e-06}, {"id": 261, "seek": 109292, "start": 1105.8000000000002, "end": 1109.68, "text": " If you store it in a tree, it's not really...", "tokens": [759, 291, 3531, 309, 294, 257, 4230, 11, 309, 311, 406, 534, 485], "temperature": 0.0, "avg_logprob": -0.27741389629269436, "compression_ratio": 1.8663793103448276, "no_speech_prob": 4.637543042917969e-06}, {"id": 262, "seek": 109292, "start": 1109.68, "end": 1112.28, "text": " Now that's not always the case.", "tokens": [823, 300, 311, 406, 1009, 264, 1389, 13], "temperature": 0.0, "avg_logprob": -0.27741389629269436, "compression_ratio": 1.8663793103448276, "no_speech_prob": 4.637543042917969e-06}, {"id": 263, "seek": 109292, "start": 1112.28, "end": 1117.04, "text": " In some cases, we do need more of that.", "tokens": [682, 512, 3331, 11, 321, 360, 643, 544, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.27741389629269436, "compression_ratio": 1.8663793103448276, "no_speech_prob": 4.637543042917969e-06}, {"id": 264, "seek": 109292, "start": 1117.04, "end": 1122.52, "text": " And in that case, we sort of force your hand into some data structure and then you potentially", "tokens": [400, 294, 300, 1389, 11, 321, 1333, 295, 3464, 428, 1011, 666, 512, 1412, 3877, 293, 550, 291, 7263], "temperature": 0.0, "avg_logprob": -0.27741389629269436, "compression_ratio": 1.8663793103448276, "no_speech_prob": 4.637543042917969e-06}, {"id": 265, "seek": 112252, "start": 1122.52, "end": 1125.2, "text": " need to write a conversion function or something like that.", "tokens": [643, 281, 2464, 257, 14298, 2445, 420, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.20924736689595344, "compression_ratio": 1.6062992125984252, "no_speech_prob": 7.411220849462552e-06}, {"id": 266, "seek": 112252, "start": 1125.2, "end": 1128.6399999999999, "text": " But the aim is to not do that if possible.", "tokens": [583, 264, 5939, 307, 281, 406, 360, 300, 498, 1944, 13], "temperature": 0.0, "avg_logprob": -0.20924736689595344, "compression_ratio": 1.6062992125984252, "no_speech_prob": 7.411220849462552e-06}, {"id": 267, "seek": 112252, "start": 1128.6399999999999, "end": 1131.96, "text": " Did you have any influences for this approach?", "tokens": [2589, 291, 362, 604, 21222, 337, 341, 3109, 30], "temperature": 0.0, "avg_logprob": -0.20924736689595344, "compression_ratio": 1.6062992125984252, "no_speech_prob": 7.411220849462552e-06}, {"id": 268, "seek": 112252, "start": 1131.96, "end": 1140.0, "text": " Like one thing that comes to mind for me is D3, which is I think known for like it's extremely", "tokens": [1743, 472, 551, 300, 1487, 281, 1575, 337, 385, 307, 413, 18, 11, 597, 307, 286, 519, 2570, 337, 411, 309, 311, 4664], "temperature": 0.0, "avg_logprob": -0.20924736689595344, "compression_ratio": 1.6062992125984252, "no_speech_prob": 7.411220849462552e-06}, {"id": 269, "seek": 112252, "start": 1140.0, "end": 1145.92, "text": " popular and yet it's pretty low level, which is kind of interesting, but it's like a powerful", "tokens": [3743, 293, 1939, 309, 311, 1238, 2295, 1496, 11, 597, 307, 733, 295, 1880, 11, 457, 309, 311, 411, 257, 4005], "temperature": 0.0, "avg_logprob": -0.20924736689595344, "compression_ratio": 1.6062992125984252, "no_speech_prob": 7.411220849462552e-06}, {"id": 270, "seek": 112252, "start": 1145.92, "end": 1149.72, "text": " set of low level building blocks that gives you a lot of flexibility.", "tokens": [992, 295, 2295, 1496, 2390, 8474, 300, 2709, 291, 257, 688, 295, 12635, 13], "temperature": 0.0, "avg_logprob": -0.20924736689595344, "compression_ratio": 1.6062992125984252, "no_speech_prob": 7.411220849462552e-06}, {"id": 271, "seek": 114972, "start": 1149.72, "end": 1155.6000000000001, "text": " And there are like massive books written on D3 and how to plot with that.", "tokens": [400, 456, 366, 411, 5994, 3642, 3720, 322, 413, 18, 293, 577, 281, 7542, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.27518097726922286, "compression_ratio": 1.5821596244131455, "no_speech_prob": 2.8130104965384817e-06}, {"id": 272, "seek": 114972, "start": 1155.6000000000001, "end": 1159.52, "text": " Yeah, D3 is definitely a massive influence.", "tokens": [865, 11, 413, 18, 307, 2138, 257, 5994, 6503, 13], "temperature": 0.0, "avg_logprob": -0.27518097726922286, "compression_ratio": 1.5821596244131455, "no_speech_prob": 2.8130104965384817e-06}, {"id": 273, "seek": 114972, "start": 1159.52, "end": 1165.76, "text": " I acknowledge it even if you look at the readme, it sort of mentions that at the bottom.", "tokens": [286, 10692, 309, 754, 498, 291, 574, 412, 264, 1401, 1398, 11, 309, 1333, 295, 23844, 300, 412, 264, 2767, 13], "temperature": 0.0, "avg_logprob": -0.27518097726922286, "compression_ratio": 1.5821596244131455, "no_speech_prob": 2.8130104965384817e-06}, {"id": 274, "seek": 114972, "start": 1165.76, "end": 1169.4, "text": " So yeah, D3 is definitely a big inspiration.", "tokens": [407, 1338, 11, 413, 18, 307, 2138, 257, 955, 10249, 13], "temperature": 0.0, "avg_logprob": -0.27518097726922286, "compression_ratio": 1.5821596244131455, "no_speech_prob": 2.8130104965384817e-06}, {"id": 275, "seek": 114972, "start": 1169.4, "end": 1175.08, "text": " We, you know, D3 is a really old library.", "tokens": [492, 11, 291, 458, 11, 413, 18, 307, 257, 534, 1331, 6405, 13], "temperature": 0.0, "avg_logprob": -0.27518097726922286, "compression_ratio": 1.5821596244131455, "no_speech_prob": 2.8130104965384817e-06}, {"id": 276, "seek": 114972, "start": 1175.08, "end": 1179.52, "text": " It predates most of like modern JavaScript.", "tokens": [467, 3852, 1024, 881, 295, 411, 4363, 15778, 13], "temperature": 0.0, "avg_logprob": -0.27518097726922286, "compression_ratio": 1.5821596244131455, "no_speech_prob": 2.8130104965384817e-06}, {"id": 277, "seek": 117952, "start": 1179.52, "end": 1186.36, "text": " So, you know, there's a lot of like stuff in there that in Elm there's much better ways", "tokens": [407, 11, 291, 458, 11, 456, 311, 257, 688, 295, 411, 1507, 294, 456, 300, 294, 2699, 76, 456, 311, 709, 1101, 2098], "temperature": 0.0, "avg_logprob": -0.22915095908969058, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.0580048385454575e-06}, {"id": 278, "seek": 117952, "start": 1186.36, "end": 1187.36, "text": " of solving.", "tokens": [295, 12606, 13], "temperature": 0.0, "avg_logprob": -0.22915095908969058, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.0580048385454575e-06}, {"id": 279, "seek": 117952, "start": 1187.36, "end": 1192.52, "text": " So it's not a slavish, you know, re-implementation or something like that.", "tokens": [407, 309, 311, 406, 257, 1061, 706, 742, 11, 291, 458, 11, 319, 12, 332, 781, 19631, 420, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.22915095908969058, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.0580048385454575e-06}, {"id": 280, "seek": 117952, "start": 1192.52, "end": 1197.32, "text": " But there's definitely a lot of really good ideas that I think are totally worth stealing.", "tokens": [583, 456, 311, 2138, 257, 688, 295, 534, 665, 3487, 300, 286, 519, 366, 3879, 3163, 19757, 13], "temperature": 0.0, "avg_logprob": -0.22915095908969058, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.0580048385454575e-06}, {"id": 281, "seek": 117952, "start": 1197.32, "end": 1199.58, "text": " So I did.", "tokens": [407, 286, 630, 13], "temperature": 0.0, "avg_logprob": -0.22915095908969058, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.0580048385454575e-06}, {"id": 282, "seek": 117952, "start": 1199.58, "end": 1203.52, "text": " Could you give an example of something that there are better ways of doing in Elm?", "tokens": [7497, 291, 976, 364, 1365, 295, 746, 300, 456, 366, 1101, 2098, 295, 884, 294, 2699, 76, 30], "temperature": 0.0, "avg_logprob": -0.22915095908969058, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.0580048385454575e-06}, {"id": 283, "seek": 120352, "start": 1203.52, "end": 1211.76, "text": " Yeah, so like, for instance, D3 has this idea of what they call selections.", "tokens": [865, 11, 370, 411, 11, 337, 5197, 11, 413, 18, 575, 341, 1558, 295, 437, 436, 818, 47829, 13], "temperature": 0.0, "avg_logprob": -0.19055512610902178, "compression_ratio": 1.6056338028169015, "no_speech_prob": 9.720148455016897e-07}, {"id": 284, "seek": 120352, "start": 1211.76, "end": 1218.96, "text": " And so selections are, you can say like, I want to select this DOM node, and then I'll", "tokens": [400, 370, 47829, 366, 11, 291, 393, 584, 411, 11, 286, 528, 281, 3048, 341, 35727, 9984, 11, 293, 550, 286, 603], "temperature": 0.0, "avg_logprob": -0.19055512610902178, "compression_ratio": 1.6056338028169015, "no_speech_prob": 9.720148455016897e-07}, {"id": 285, "seek": 120352, "start": 1218.96, "end": 1227.32, "text": " add a handler for when it's associated data changes, I will do this sort of DOM mutation.", "tokens": [909, 257, 41967, 337, 562, 309, 311, 6615, 1412, 2962, 11, 286, 486, 360, 341, 1333, 295, 35727, 27960, 13], "temperature": 0.0, "avg_logprob": -0.19055512610902178, "compression_ratio": 1.6056338028169015, "no_speech_prob": 9.720148455016897e-07}, {"id": 286, "seek": 120352, "start": 1227.32, "end": 1232.92, "text": " So it's like, it's kind of a declarative way of doing DOM mutation, but it's a completely", "tokens": [407, 309, 311, 411, 11, 309, 311, 733, 295, 257, 16694, 1166, 636, 295, 884, 35727, 27960, 11, 457, 309, 311, 257, 2584], "temperature": 0.0, "avg_logprob": -0.19055512610902178, "compression_ratio": 1.6056338028169015, "no_speech_prob": 9.720148455016897e-07}, {"id": 287, "seek": 123292, "start": 1232.92, "end": 1239.1200000000001, "text": " different declarative way than the virtual DOM declarative way of doing DOM mutation.", "tokens": [819, 16694, 1166, 636, 813, 264, 6374, 35727, 16694, 1166, 636, 295, 884, 35727, 27960, 13], "temperature": 0.0, "avg_logprob": -0.2761733560001149, "compression_ratio": 1.6214953271028036, "no_speech_prob": 2.2124962924863212e-05}, {"id": 288, "seek": 123292, "start": 1239.1200000000001, "end": 1241.44, "text": " It's really like data focused.", "tokens": [467, 311, 534, 411, 1412, 5178, 13], "temperature": 0.0, "avg_logprob": -0.2761733560001149, "compression_ratio": 1.6214953271028036, "no_speech_prob": 2.2124962924863212e-05}, {"id": 289, "seek": 123292, "start": 1241.44, "end": 1247.48, "text": " And in general, I would say it makes things like performant animation quite easy, but", "tokens": [400, 294, 2674, 11, 286, 576, 584, 309, 1669, 721, 411, 2042, 394, 9603, 1596, 1858, 11, 457], "temperature": 0.0, "avg_logprob": -0.2761733560001149, "compression_ratio": 1.6214953271028036, "no_speech_prob": 2.2124962924863212e-05}, {"id": 290, "seek": 123292, "start": 1247.48, "end": 1251.2, "text": " on, you know, which is sort of thing virtual DOM, on the other hand, tends to struggle", "tokens": [322, 11, 291, 458, 11, 597, 307, 1333, 295, 551, 6374, 35727, 11, 322, 264, 661, 1011, 11, 12258, 281, 7799], "temperature": 0.0, "avg_logprob": -0.2761733560001149, "compression_ratio": 1.6214953271028036, "no_speech_prob": 2.2124962924863212e-05}, {"id": 291, "seek": 123292, "start": 1251.2, "end": 1256.4, "text": " like animation in virtual DOM is often kind of difficult.", "tokens": [411, 9603, 294, 6374, 35727, 307, 2049, 733, 295, 2252, 13], "temperature": 0.0, "avg_logprob": -0.2761733560001149, "compression_ratio": 1.6214953271028036, "no_speech_prob": 2.2124962924863212e-05}, {"id": 292, "seek": 125640, "start": 1256.4, "end": 1263.68, "text": " But it makes a lot of just building stuff the easy way kind of hard.", "tokens": [583, 309, 1669, 257, 688, 295, 445, 2390, 1507, 264, 1858, 636, 733, 295, 1152, 13], "temperature": 0.0, "avg_logprob": -0.2189534819952332, "compression_ratio": 1.565217391304348, "no_speech_prob": 1.2410813724272884e-05}, {"id": 293, "seek": 125640, "start": 1263.68, "end": 1265.52, "text": " And it's a completely different mental model.", "tokens": [400, 309, 311, 257, 2584, 819, 4973, 2316, 13], "temperature": 0.0, "avg_logprob": -0.2189534819952332, "compression_ratio": 1.565217391304348, "no_speech_prob": 1.2410813724272884e-05}, {"id": 294, "seek": 125640, "start": 1265.52, "end": 1269.88, "text": " So it's again, like adds a lot of a lot of stuff to learn.", "tokens": [407, 309, 311, 797, 11, 411, 10860, 257, 688, 295, 257, 688, 295, 1507, 281, 1466, 13], "temperature": 0.0, "avg_logprob": -0.2189534819952332, "compression_ratio": 1.565217391304348, "no_speech_prob": 1.2410813724272884e-05}, {"id": 295, "seek": 125640, "start": 1269.88, "end": 1275.0800000000002, "text": " So for instance, that's something that it's a it's a thing that predates, you know, virtual", "tokens": [407, 337, 5197, 11, 300, 311, 746, 300, 309, 311, 257, 309, 311, 257, 551, 300, 3852, 1024, 11, 291, 458, 11, 6374], "temperature": 0.0, "avg_logprob": -0.2189534819952332, "compression_ratio": 1.565217391304348, "no_speech_prob": 1.2410813724272884e-05}, {"id": 296, "seek": 125640, "start": 1275.0800000000002, "end": 1279.8000000000002, "text": " DOM approaches by probably, I would guess at least five years, but maybe longer, I don't", "tokens": [35727, 11587, 538, 1391, 11, 286, 576, 2041, 412, 1935, 1732, 924, 11, 457, 1310, 2854, 11, 286, 500, 380], "temperature": 0.0, "avg_logprob": -0.2189534819952332, "compression_ratio": 1.565217391304348, "no_speech_prob": 1.2410813724272884e-05}, {"id": 297, "seek": 125640, "start": 1279.8000000000002, "end": 1280.8400000000001, "text": " know.", "tokens": [458, 13], "temperature": 0.0, "avg_logprob": -0.2189534819952332, "compression_ratio": 1.565217391304348, "no_speech_prob": 1.2410813724272884e-05}, {"id": 298, "seek": 128084, "start": 1280.84, "end": 1286.52, "text": " So it's so that's a thing that, you know, we could have tried to reimplement, but I", "tokens": [407, 309, 311, 370, 300, 311, 257, 551, 300, 11, 291, 458, 11, 321, 727, 362, 3031, 281, 33433, 43704, 11, 457, 286], "temperature": 0.0, "avg_logprob": -0.28479451344425516, "compression_ratio": 1.7357142857142858, "no_speech_prob": 4.710612302005757e-06}, {"id": 299, "seek": 128084, "start": 1286.52, "end": 1291.1999999999998, "text": " see really no point, we have a perfectly nice way of, of dealing with DOM mutation in Elm.", "tokens": [536, 534, 572, 935, 11, 321, 362, 257, 6239, 1481, 636, 295, 11, 295, 6260, 365, 35727, 27960, 294, 2699, 76, 13], "temperature": 0.0, "avg_logprob": -0.28479451344425516, "compression_ratio": 1.7357142857142858, "no_speech_prob": 4.710612302005757e-06}, {"id": 300, "seek": 128084, "start": 1291.1999999999998, "end": 1297.76, "text": " So for instance, but also like, a D3 has built in stuff like CSV parsing, it has stuff like", "tokens": [407, 337, 5197, 11, 457, 611, 411, 11, 257, 413, 18, 575, 3094, 294, 1507, 411, 48814, 21156, 278, 11, 309, 575, 1507, 411], "temperature": 0.0, "avg_logprob": -0.28479451344425516, "compression_ratio": 1.7357142857142858, "no_speech_prob": 4.710612302005757e-06}, {"id": 301, "seek": 128084, "start": 1297.76, "end": 1303.12, "text": " timers and dealing with, you know, recurring events, a bunch of stuff that like in Elm,", "tokens": [524, 433, 293, 6260, 365, 11, 291, 458, 11, 32279, 3931, 11, 257, 3840, 295, 1507, 300, 411, 294, 2699, 76, 11], "temperature": 0.0, "avg_logprob": -0.28479451344425516, "compression_ratio": 1.7357142857142858, "no_speech_prob": 4.710612302005757e-06}, {"id": 302, "seek": 128084, "start": 1303.12, "end": 1305.48, "text": " you would just solve completely differently.", "tokens": [291, 576, 445, 5039, 2584, 7614, 13], "temperature": 0.0, "avg_logprob": -0.28479451344425516, "compression_ratio": 1.7357142857142858, "no_speech_prob": 4.710612302005757e-06}, {"id": 303, "seek": 128084, "start": 1305.48, "end": 1309.24, "text": " And of course, it has also a lot of like, completely mutable API's and stuff like that", "tokens": [400, 295, 1164, 11, 309, 575, 611, 257, 688, 295, 411, 11, 2584, 5839, 712, 9362, 311, 293, 1507, 411, 300], "temperature": 0.0, "avg_logprob": -0.28479451344425516, "compression_ratio": 1.7357142857142858, "no_speech_prob": 4.710612302005757e-06}, {"id": 304, "seek": 130924, "start": 1309.24, "end": 1311.4, "text": " that just are terrible.", "tokens": [300, 445, 366, 6237, 13], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 305, "seek": 130924, "start": 1311.4, "end": 1314.68, "text": " But you know, yeah.", "tokens": [583, 291, 458, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 306, "seek": 130924, "start": 1314.68, "end": 1320.6, "text": " So there's, there's a lot to love about D3, but it's its own world as well, for sure.", "tokens": [407, 456, 311, 11, 456, 311, 257, 688, 281, 959, 466, 413, 18, 11, 457, 309, 311, 1080, 1065, 1002, 382, 731, 11, 337, 988, 13], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 307, "seek": 130924, "start": 1320.6, "end": 1321.6, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 308, "seek": 130924, "start": 1321.6, "end": 1327.4, "text": " So with the didn't say that D3 had a lot of books written on on it with the book for Elm", "tokens": [407, 365, 264, 994, 380, 584, 300, 413, 18, 632, 257, 688, 295, 3642, 3720, 322, 322, 309, 365, 264, 1446, 337, 2699, 76], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 309, "seek": 130924, "start": 1327.4, "end": 1330.32, "text": " visualization, we would it would be a lot smaller?", "tokens": [25801, 11, 321, 576, 309, 576, 312, 257, 688, 4356, 30], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 310, "seek": 130924, "start": 1330.32, "end": 1331.32, "text": " Probably.", "tokens": [9210, 13], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 311, "seek": 130924, "start": 1331.32, "end": 1332.76, "text": " I don't know.", "tokens": [286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 312, "seek": 130924, "start": 1332.76, "end": 1336.64, "text": " I'm not much one for writing books.", "tokens": [286, 478, 406, 709, 472, 337, 3579, 3642, 13], "temperature": 0.0, "avg_logprob": -0.370130781693892, "compression_ratio": 1.5203619909502262, "no_speech_prob": 6.339168521662941e-06}, {"id": 313, "seek": 133664, "start": 1336.64, "end": 1342.5200000000002, "text": " The tutorial I think that's, you know, like, whatever, five pages long, I spent like a", "tokens": [440, 7073, 286, 519, 300, 311, 11, 291, 458, 11, 411, 11, 2035, 11, 1732, 7183, 938, 11, 286, 4418, 411, 257], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 314, "seek": 133664, "start": 1342.5200000000002, "end": 1343.5200000000002, "text": " year writing.", "tokens": [1064, 3579, 13], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 315, "seek": 133664, "start": 1343.5200000000002, "end": 1347.0800000000002, "text": " So book is not really for me.", "tokens": [407, 1446, 307, 406, 534, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 316, "seek": 133664, "start": 1347.0800000000002, "end": 1351.24, "text": " If someone wants to write a book, I'll be happy to give them some pointers.", "tokens": [759, 1580, 2738, 281, 2464, 257, 1446, 11, 286, 603, 312, 2055, 281, 976, 552, 512, 44548, 13], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 317, "seek": 133664, "start": 1351.24, "end": 1355.68, "text": " But you can write the preface or the recommendation.", "tokens": [583, 291, 393, 2464, 264, 659, 2868, 420, 264, 11879, 13], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 318, "seek": 133664, "start": 1355.68, "end": 1360.76, "text": " I'll write the blob at the bottom back, which is like one paragraph.", "tokens": [286, 603, 2464, 264, 46115, 412, 264, 2767, 646, 11, 597, 307, 411, 472, 18865, 13], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 319, "seek": 133664, "start": 1360.76, "end": 1361.76, "text": " Right, right.", "tokens": [1779, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 320, "seek": 133664, "start": 1361.76, "end": 1362.76, "text": " X is a great author.", "tokens": [1783, 307, 257, 869, 3793, 13], "temperature": 0.0, "avg_logprob": -0.4383344830207105, "compression_ratio": 1.5714285714285714, "no_speech_prob": 4.425451606948627e-06}, {"id": 321, "seek": 136276, "start": 1362.76, "end": 1374.6, "text": " This is the best book on the subject.", "tokens": [639, 307, 264, 1151, 1446, 322, 264, 3983, 13], "temperature": 0.0, "avg_logprob": -0.43777814901100015, "compression_ratio": 1.504201680672269, "no_speech_prob": 2.6015629828179954e-06}, {"id": 322, "seek": 136276, "start": 1374.6, "end": 1382.76, "text": " And then there's then a second one comes in and like, Oh, no, I have to evaluate it.", "tokens": [400, 550, 456, 311, 550, 257, 1150, 472, 1487, 294, 293, 411, 11, 876, 11, 572, 11, 286, 362, 281, 13059, 309, 13], "temperature": 0.0, "avg_logprob": -0.43777814901100015, "compression_ratio": 1.504201680672269, "no_speech_prob": 2.6015629828179954e-06}, {"id": 323, "seek": 136276, "start": 1382.76, "end": 1389.16, "text": " So the second one can be the newest book on the subject.", "tokens": [407, 264, 1150, 472, 393, 312, 264, 17569, 1446, 322, 264, 3983, 13], "temperature": 0.0, "avg_logprob": -0.43777814901100015, "compression_ratio": 1.504201680672269, "no_speech_prob": 2.6015629828179954e-06}, {"id": 324, "seek": 138916, "start": 1389.16, "end": 1399.6000000000001, "text": " So I feel like when I read the documentation, I feel like you put a difference between charting", "tokens": [407, 286, 841, 411, 562, 286, 1401, 264, 14333, 11, 286, 841, 411, 291, 829, 257, 2649, 1296, 6927, 278], "temperature": 0.0, "avg_logprob": -0.26355950910966475, "compression_ratio": 1.6574074074074074, "no_speech_prob": 2.5612698664190248e-06}, {"id": 325, "seek": 138916, "start": 1399.6000000000001, "end": 1401.48, "text": " and visualization.", "tokens": [293, 25801, 13], "temperature": 0.0, "avg_logprob": -0.26355950910966475, "compression_ratio": 1.6574074074074074, "no_speech_prob": 2.5612698664190248e-06}, {"id": 326, "seek": 138916, "start": 1401.48, "end": 1403.2, "text": " And I don't know what the difference is.", "tokens": [400, 286, 500, 380, 458, 437, 264, 2649, 307, 13], "temperature": 0.0, "avg_logprob": -0.26355950910966475, "compression_ratio": 1.6574074074074074, "no_speech_prob": 2.5612698664190248e-06}, {"id": 327, "seek": 138916, "start": 1403.2, "end": 1405.52, "text": " Could you explain that to me?", "tokens": [7497, 291, 2903, 300, 281, 385, 30], "temperature": 0.0, "avg_logprob": -0.26355950910966475, "compression_ratio": 1.6574074074074074, "no_speech_prob": 2.5612698664190248e-06}, {"id": 328, "seek": 138916, "start": 1405.52, "end": 1409.72, "text": " The terminology is kind of isn't great.", "tokens": [440, 27575, 307, 733, 295, 1943, 380, 869, 13], "temperature": 0.0, "avg_logprob": -0.26355950910966475, "compression_ratio": 1.6574074074074074, "no_speech_prob": 2.5612698664190248e-06}, {"id": 329, "seek": 138916, "start": 1409.72, "end": 1414.24, "text": " But there's two fundamental workflows, I think, in data visualization.", "tokens": [583, 456, 311, 732, 8088, 43461, 11, 286, 519, 11, 294, 1412, 25801, 13], "temperature": 0.0, "avg_logprob": -0.26355950910966475, "compression_ratio": 1.6574074074074074, "no_speech_prob": 2.5612698664190248e-06}, {"id": 330, "seek": 138916, "start": 1414.24, "end": 1418.16, "text": " And one is what we would call exploratory data visualization.", "tokens": [400, 472, 307, 437, 321, 576, 818, 24765, 4745, 1412, 25801, 13], "temperature": 0.0, "avg_logprob": -0.26355950910966475, "compression_ratio": 1.6574074074074074, "no_speech_prob": 2.5612698664190248e-06}, {"id": 331, "seek": 141816, "start": 1418.16, "end": 1423.92, "text": " And that means you get a data set, you don't know what's in it.", "tokens": [400, 300, 1355, 291, 483, 257, 1412, 992, 11, 291, 500, 380, 458, 437, 311, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.17278805345591933, "compression_ratio": 1.6697247706422018, "no_speech_prob": 6.8542408371286e-06}, {"id": 332, "seek": 141816, "start": 1423.92, "end": 1427.92, "text": " Maybe you've got some description about it, but you don't really understand it.", "tokens": [2704, 291, 600, 658, 512, 3855, 466, 309, 11, 457, 291, 500, 380, 534, 1223, 309, 13], "temperature": 0.0, "avg_logprob": -0.17278805345591933, "compression_ratio": 1.6697247706422018, "no_speech_prob": 6.8542408371286e-06}, {"id": 333, "seek": 141816, "start": 1427.92, "end": 1433.6000000000001, "text": " And so you want to use some tools to be able to understand this data set.", "tokens": [400, 370, 291, 528, 281, 764, 512, 3873, 281, 312, 1075, 281, 1223, 341, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.17278805345591933, "compression_ratio": 1.6697247706422018, "no_speech_prob": 6.8542408371286e-06}, {"id": 334, "seek": 141816, "start": 1433.6000000000001, "end": 1438.88, "text": " And so you can, you know, a lot of people use Excel for this or Tableau or other tools.", "tokens": [400, 370, 291, 393, 11, 291, 458, 11, 257, 688, 295, 561, 764, 19060, 337, 341, 420, 25535, 1459, 420, 661, 3873, 13], "temperature": 0.0, "avg_logprob": -0.17278805345591933, "compression_ratio": 1.6697247706422018, "no_speech_prob": 6.8542408371286e-06}, {"id": 335, "seek": 141816, "start": 1438.88, "end": 1442.8400000000001, "text": " But you can sometimes it's much easier to do this in code.", "tokens": [583, 291, 393, 2171, 309, 311, 709, 3571, 281, 360, 341, 294, 3089, 13], "temperature": 0.0, "avg_logprob": -0.17278805345591933, "compression_ratio": 1.6697247706422018, "no_speech_prob": 6.8542408371286e-06}, {"id": 336, "seek": 144284, "start": 1442.84, "end": 1449.6799999999998, "text": " And you can have libraries that are really well designed for that task.", "tokens": [400, 291, 393, 362, 15148, 300, 366, 534, 731, 4761, 337, 300, 5633, 13], "temperature": 0.0, "avg_logprob": -0.29760210037231444, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.136543801294465e-06}, {"id": 337, "seek": 144284, "start": 1449.6799999999998, "end": 1457.3999999999999, "text": " So in we have Vega, Vega light, our classic examples of this, there's very nice Elm version", "tokens": [407, 294, 321, 362, 48796, 11, 48796, 1442, 11, 527, 7230, 5110, 295, 341, 11, 456, 311, 588, 1481, 2699, 76, 3037], "temperature": 0.0, "avg_logprob": -0.29760210037231444, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.136543801294465e-06}, {"id": 338, "seek": 144284, "start": 1457.3999999999999, "end": 1458.3999999999999, "text": " of that.", "tokens": [295, 300, 13], "temperature": 0.0, "avg_logprob": -0.29760210037231444, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.136543801294465e-06}, {"id": 339, "seek": 144284, "start": 1458.3999999999999, "end": 1464.84, "text": " So I think there's Elm, Elm Vega, Vega, don't really know how it's pronounced, V E G A.", "tokens": [407, 286, 519, 456, 311, 2699, 76, 11, 2699, 76, 48796, 11, 48796, 11, 500, 380, 534, 458, 577, 309, 311, 23155, 11, 691, 462, 460, 316, 13], "temperature": 0.0, "avg_logprob": -0.29760210037231444, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.136543801294465e-06}, {"id": 340, "seek": 144284, "start": 1464.84, "end": 1470.52, "text": " And that's really designed for that workflow, like and it does a lot of stuff for you automatically.", "tokens": [400, 300, 311, 534, 4761, 337, 300, 20993, 11, 411, 293, 309, 775, 257, 688, 295, 1507, 337, 291, 6772, 13], "temperature": 0.0, "avg_logprob": -0.29760210037231444, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.136543801294465e-06}, {"id": 341, "seek": 147052, "start": 1470.52, "end": 1475.6399999999999, "text": " You know, it can work out a bunch of stuff about your data and render really nice charts", "tokens": [509, 458, 11, 309, 393, 589, 484, 257, 3840, 295, 1507, 466, 428, 1412, 293, 15529, 534, 1481, 17767], "temperature": 0.0, "avg_logprob": -0.2505637940906343, "compression_ratio": 1.6848249027237354, "no_speech_prob": 8.397917554248124e-06}, {"id": 342, "seek": 147052, "start": 1475.6399999999999, "end": 1477.6399999999999, "text": " based on that data.", "tokens": [2361, 322, 300, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2505637940906343, "compression_ratio": 1.6848249027237354, "no_speech_prob": 8.397917554248124e-06}, {"id": 343, "seek": 147052, "start": 1477.6399999999999, "end": 1483.32, "text": " And then you have the other workflow, which is you usually understand your data set pretty", "tokens": [400, 550, 291, 362, 264, 661, 20993, 11, 597, 307, 291, 2673, 1223, 428, 1412, 992, 1238], "temperature": 0.0, "avg_logprob": -0.2505637940906343, "compression_ratio": 1.6848249027237354, "no_speech_prob": 8.397917554248124e-06}, {"id": 344, "seek": 147052, "start": 1483.32, "end": 1487.3799999999999, "text": " well, but you want to communicate about it to someone else.", "tokens": [731, 11, 457, 291, 528, 281, 7890, 466, 309, 281, 1580, 1646, 13], "temperature": 0.0, "avg_logprob": -0.2505637940906343, "compression_ratio": 1.6848249027237354, "no_speech_prob": 8.397917554248124e-06}, {"id": 345, "seek": 147052, "start": 1487.3799999999999, "end": 1491.28, "text": " So it could either be like a journalism kind of aspect where you think you want to tell", "tokens": [407, 309, 727, 2139, 312, 411, 257, 23191, 733, 295, 4171, 689, 291, 519, 291, 528, 281, 980], "temperature": 0.0, "avg_logprob": -0.2505637940906343, "compression_ratio": 1.6848249027237354, "no_speech_prob": 8.397917554248124e-06}, {"id": 346, "seek": 147052, "start": 1491.28, "end": 1495.72, "text": " a story about the data, or you maybe you're building a dashboard in your product, you", "tokens": [257, 1657, 466, 264, 1412, 11, 420, 291, 1310, 291, 434, 2390, 257, 18342, 294, 428, 1674, 11, 291], "temperature": 0.0, "avg_logprob": -0.2505637940906343, "compression_ratio": 1.6848249027237354, "no_speech_prob": 8.397917554248124e-06}, {"id": 347, "seek": 149572, "start": 1495.72, "end": 1500.92, "text": " want to show your customers some specific stuff about data that you produce, other sort", "tokens": [528, 281, 855, 428, 4581, 512, 2685, 1507, 466, 1412, 300, 291, 5258, 11, 661, 1333], "temperature": 0.0, "avg_logprob": -0.24541751469407125, "compression_ratio": 1.8823529411764706, "no_speech_prob": 9.818228136282414e-06}, {"id": 348, "seek": 149572, "start": 1500.92, "end": 1502.32, "text": " of things like that.", "tokens": [295, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.24541751469407125, "compression_ratio": 1.8823529411764706, "no_speech_prob": 9.818228136282414e-06}, {"id": 349, "seek": 149572, "start": 1502.32, "end": 1508.6000000000001, "text": " And there, the it's not so much about speed of constructing the chart.", "tokens": [400, 456, 11, 264, 309, 311, 406, 370, 709, 466, 3073, 295, 39969, 264, 6927, 13], "temperature": 0.0, "avg_logprob": -0.24541751469407125, "compression_ratio": 1.8823529411764706, "no_speech_prob": 9.818228136282414e-06}, {"id": 350, "seek": 149572, "start": 1508.6000000000001, "end": 1512.82, "text": " It's more about things like customization, you want to be able to point out specific", "tokens": [467, 311, 544, 466, 721, 411, 39387, 11, 291, 528, 281, 312, 1075, 281, 935, 484, 2685], "temperature": 0.0, "avg_logprob": -0.24541751469407125, "compression_ratio": 1.8823529411764706, "no_speech_prob": 9.818228136282414e-06}, {"id": 351, "seek": 149572, "start": 1512.82, "end": 1518.04, "text": " things about the data, you want to be able to, you know, really emphasize specific relationships", "tokens": [721, 466, 264, 1412, 11, 291, 528, 281, 312, 1075, 281, 11, 291, 458, 11, 534, 16078, 2685, 6159], "temperature": 0.0, "avg_logprob": -0.24541751469407125, "compression_ratio": 1.8823529411764706, "no_speech_prob": 9.818228136282414e-06}, {"id": 352, "seek": 149572, "start": 1518.04, "end": 1522.88, "text": " in your data set, for instance, you want to make the data set as easy to understand as", "tokens": [294, 428, 1412, 992, 11, 337, 5197, 11, 291, 528, 281, 652, 264, 1412, 992, 382, 1858, 281, 1223, 382], "temperature": 0.0, "avg_logprob": -0.24541751469407125, "compression_ratio": 1.8823529411764706, "no_speech_prob": 9.818228136282414e-06}, {"id": 353, "seek": 152288, "start": 1522.88, "end": 1529.44, "text": " possible, even if that costs you as the programmer, potentially quite a bit of extra effort.", "tokens": [1944, 11, 754, 498, 300, 5497, 291, 382, 264, 32116, 11, 7263, 1596, 257, 857, 295, 2857, 4630, 13], "temperature": 0.0, "avg_logprob": -0.2668902331059522, "compression_ratio": 1.7033898305084745, "no_speech_prob": 6.74772854836192e-06}, {"id": 354, "seek": 152288, "start": 1529.44, "end": 1533.88, "text": " But, but, you know, you, you know, so it's, there's a really different workflow here.", "tokens": [583, 11, 457, 11, 291, 458, 11, 291, 11, 291, 458, 11, 370, 309, 311, 11, 456, 311, 257, 534, 819, 20993, 510, 13], "temperature": 0.0, "avg_logprob": -0.2668902331059522, "compression_ratio": 1.7033898305084745, "no_speech_prob": 6.74772854836192e-06}, {"id": 355, "seek": 152288, "start": 1533.88, "end": 1540.6000000000001, "text": " And the tools that support these different workflows are, you know, are designed in different", "tokens": [400, 264, 3873, 300, 1406, 613, 819, 43461, 366, 11, 291, 458, 11, 366, 4761, 294, 819], "temperature": 0.0, "avg_logprob": -0.2668902331059522, "compression_ratio": 1.7033898305084745, "no_speech_prob": 6.74772854836192e-06}, {"id": 356, "seek": 152288, "start": 1540.6000000000001, "end": 1541.6000000000001, "text": " ways.", "tokens": [2098, 13], "temperature": 0.0, "avg_logprob": -0.2668902331059522, "compression_ratio": 1.7033898305084745, "no_speech_prob": 6.74772854836192e-06}, {"id": 357, "seek": 152288, "start": 1541.6000000000001, "end": 1546.0800000000002, "text": " So Elm Visualization is definitely on the second side of this divide, you know, where", "tokens": [407, 2699, 76, 23187, 2144, 307, 2138, 322, 264, 1150, 1252, 295, 341, 9845, 11, 291, 458, 11, 689], "temperature": 0.0, "avg_logprob": -0.2668902331059522, "compression_ratio": 1.7033898305084745, "no_speech_prob": 6.74772854836192e-06}, {"id": 358, "seek": 152288, "start": 1546.0800000000002, "end": 1548.2, "text": " we really emphasize this flexibility.", "tokens": [321, 534, 16078, 341, 12635, 13], "temperature": 0.0, "avg_logprob": -0.2668902331059522, "compression_ratio": 1.7033898305084745, "no_speech_prob": 6.74772854836192e-06}, {"id": 359, "seek": 154820, "start": 1548.2, "end": 1553.48, "text": " And, you know, you can tell exactly the story that you want with your data.", "tokens": [400, 11, 291, 458, 11, 291, 393, 980, 2293, 264, 1657, 300, 291, 528, 365, 428, 1412, 13], "temperature": 0.0, "avg_logprob": -0.23571957021519757, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.373514118720777e-05}, {"id": 360, "seek": 154820, "start": 1553.48, "end": 1556.92, "text": " But yeah, you have things like Vega.", "tokens": [583, 1338, 11, 291, 362, 721, 411, 48796, 13], "temperature": 0.0, "avg_logprob": -0.23571957021519757, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.373514118720777e-05}, {"id": 361, "seek": 154820, "start": 1556.92, "end": 1560.76, "text": " Elm Charts is a little bit in that more in that camp, maybe as well, where like, it's", "tokens": [2699, 76, 761, 11814, 307, 257, 707, 857, 294, 300, 544, 294, 300, 2255, 11, 1310, 382, 731, 11, 689, 411, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.23571957021519757, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.373514118720777e-05}, {"id": 362, "seek": 154820, "start": 1560.76, "end": 1565.0800000000002, "text": " really easy to get, you know, you throw in some data, you say, like, give me a bar chart,", "tokens": [534, 1858, 281, 483, 11, 291, 458, 11, 291, 3507, 294, 512, 1412, 11, 291, 584, 11, 411, 11, 976, 385, 257, 2159, 6927, 11], "temperature": 0.0, "avg_logprob": -0.23571957021519757, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.373514118720777e-05}, {"id": 363, "seek": 154820, "start": 1565.0800000000002, "end": 1568.16, "text": " and you have a bar chart.", "tokens": [293, 291, 362, 257, 2159, 6927, 13], "temperature": 0.0, "avg_logprob": -0.23571957021519757, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.373514118720777e-05}, {"id": 364, "seek": 154820, "start": 1568.16, "end": 1571.7, "text": " And you know, you didn't have to do almost anything to make that happen.", "tokens": [400, 291, 458, 11, 291, 994, 380, 362, 281, 360, 1920, 1340, 281, 652, 300, 1051, 13], "temperature": 0.0, "avg_logprob": -0.23571957021519757, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.373514118720777e-05}, {"id": 365, "seek": 154820, "start": 1571.7, "end": 1575.28, "text": " And so you can really right away look at your data and be like, Oh, yeah, there's something", "tokens": [400, 370, 291, 393, 534, 558, 1314, 574, 412, 428, 1412, 293, 312, 411, 11, 876, 11, 1338, 11, 456, 311, 746], "temperature": 0.0, "avg_logprob": -0.23571957021519757, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.373514118720777e-05}, {"id": 366, "seek": 157528, "start": 1575.28, "end": 1580.12, "text": " interesting going there around, you know, Thursday, 2020.", "tokens": [1880, 516, 456, 926, 11, 291, 458, 11, 10383, 11, 4808, 13], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 367, "seek": 157528, "start": 1580.12, "end": 1583.44, "text": " You know, January, like, oh, maybe a pandemic happened or something.", "tokens": [509, 458, 11, 7061, 11, 411, 11, 1954, 11, 1310, 257, 5388, 2011, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 368, "seek": 157528, "start": 1583.44, "end": 1584.44, "text": " I don't know.", "tokens": [286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 369, "seek": 157528, "start": 1584.44, "end": 1587.56, "text": " Like, you can make some sort of influence.", "tokens": [1743, 11, 291, 393, 652, 512, 1333, 295, 6503, 13], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 370, "seek": 157528, "start": 1587.56, "end": 1591.2, "text": " It's you know, from that, but but it's a different workflow.", "tokens": [467, 311, 291, 458, 11, 490, 300, 11, 457, 457, 309, 311, 257, 819, 20993, 13], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 371, "seek": 157528, "start": 1591.2, "end": 1594.04, "text": " And so you get different libraries or a different workflow.", "tokens": [400, 370, 291, 483, 819, 15148, 420, 257, 819, 20993, 13], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 372, "seek": 157528, "start": 1594.04, "end": 1598.3999999999999, "text": " And so that's a little bit what I'm trying to talk about there is, is, you know, if you", "tokens": [400, 370, 300, 311, 257, 707, 857, 437, 286, 478, 1382, 281, 751, 466, 456, 307, 11, 307, 11, 291, 458, 11, 498, 291], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 373, "seek": 157528, "start": 1598.3999999999999, "end": 1603.48, "text": " just want to quickly look at some data, this is your turn, kind of taking a, you're killing", "tokens": [445, 528, 281, 2661, 574, 412, 512, 1412, 11, 341, 307, 428, 1261, 11, 733, 295, 1940, 257, 11, 291, 434, 8011], "temperature": 0.0, "avg_logprob": -0.3239721611364564, "compression_ratio": 1.7285714285714286, "no_speech_prob": 1.873789074124943e-06}, {"id": 374, "seek": 160348, "start": 1603.48, "end": 1607.64, "text": " a mosquito with a bazooka a little bit.", "tokens": [257, 23970, 365, 257, 27147, 1212, 64, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.2639799118041992, "compression_ratio": 1.6495726495726495, "no_speech_prob": 9.665927791502327e-06}, {"id": 375, "seek": 160348, "start": 1607.64, "end": 1614.44, "text": " So yeah, so you said that with Vega or with Elm charts, you can get to a solution much", "tokens": [407, 1338, 11, 370, 291, 848, 300, 365, 48796, 420, 365, 2699, 76, 17767, 11, 291, 393, 483, 281, 257, 3827, 709], "temperature": 0.0, "avg_logprob": -0.2639799118041992, "compression_ratio": 1.6495726495726495, "no_speech_prob": 9.665927791502327e-06}, {"id": 376, "seek": 160348, "start": 1614.44, "end": 1622.2, "text": " faster with the downside that you can't customize it as, as much as you possibly may need to", "tokens": [4663, 365, 264, 25060, 300, 291, 393, 380, 19734, 309, 382, 11, 382, 709, 382, 291, 6264, 815, 643, 281], "temperature": 0.0, "avg_logprob": -0.2639799118041992, "compression_ratio": 1.6495726495726495, "no_speech_prob": 9.665927791502327e-06}, {"id": 377, "seek": 160348, "start": 1622.2, "end": 1623.2, "text": " in the future.", "tokens": [294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.2639799118041992, "compression_ratio": 1.6495726495726495, "no_speech_prob": 9.665927791502327e-06}, {"id": 378, "seek": 160348, "start": 1623.2, "end": 1627.1200000000001, "text": " Well, so I should probably mention as well, sorry to interrupt you.", "tokens": [1042, 11, 370, 286, 820, 1391, 2152, 382, 731, 11, 2597, 281, 12729, 291, 13], "temperature": 0.0, "avg_logprob": -0.2639799118041992, "compression_ratio": 1.6495726495726495, "no_speech_prob": 9.665927791502327e-06}, {"id": 379, "seek": 160348, "start": 1627.1200000000001, "end": 1632.08, "text": " It's not just the customization, but it's also the fact that usually these kinds of", "tokens": [467, 311, 406, 445, 264, 39387, 11, 457, 309, 311, 611, 264, 1186, 300, 2673, 613, 3685, 295], "temperature": 0.0, "avg_logprob": -0.2639799118041992, "compression_ratio": 1.6495726495726495, "no_speech_prob": 9.665927791502327e-06}, {"id": 380, "seek": 163208, "start": 1632.08, "end": 1638.04, "text": " libraries are built a certain number of predefined chart types, right?", "tokens": [15148, 366, 3094, 257, 1629, 1230, 295, 659, 37716, 6927, 3467, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.25953827963935006, "compression_ratio": 1.6844444444444444, "no_speech_prob": 4.936885943607194e-06}, {"id": 381, "seek": 163208, "start": 1638.04, "end": 1643.3999999999999, "text": " So they can, you know, somebody coded in, like, this is a bar chart, this is a column", "tokens": [407, 436, 393, 11, 291, 458, 11, 2618, 34874, 294, 11, 411, 11, 341, 307, 257, 2159, 6927, 11, 341, 307, 257, 7738], "temperature": 0.0, "avg_logprob": -0.25953827963935006, "compression_ratio": 1.6844444444444444, "no_speech_prob": 4.936885943607194e-06}, {"id": 382, "seek": 163208, "start": 1643.3999999999999, "end": 1648.8, "text": " chart, this is a line chart is area chart, you know, and they probably have 20 or 30", "tokens": [6927, 11, 341, 307, 257, 1622, 6927, 307, 1859, 6927, 11, 291, 458, 11, 293, 436, 1391, 362, 945, 420, 2217], "temperature": 0.0, "avg_logprob": -0.25953827963935006, "compression_ratio": 1.6844444444444444, "no_speech_prob": 4.936885943607194e-06}, {"id": 383, "seek": 163208, "start": 1648.8, "end": 1651.28, "text": " or 50 variations.", "tokens": [420, 2625, 17840, 13], "temperature": 0.0, "avg_logprob": -0.25953827963935006, "compression_ratio": 1.6844444444444444, "no_speech_prob": 4.936885943607194e-06}, {"id": 384, "seek": 163208, "start": 1651.28, "end": 1654.0, "text": " And that's kind of it.", "tokens": [400, 300, 311, 733, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.25953827963935006, "compression_ratio": 1.6844444444444444, "no_speech_prob": 4.936885943607194e-06}, {"id": 385, "seek": 163208, "start": 1654.0, "end": 1657.9199999999998, "text": " And if you want to do something that's outside of that, that you're usually kind of out of", "tokens": [400, 498, 291, 528, 281, 360, 746, 300, 311, 2380, 295, 300, 11, 300, 291, 434, 2673, 733, 295, 484, 295], "temperature": 0.0, "avg_logprob": -0.25953827963935006, "compression_ratio": 1.6844444444444444, "no_speech_prob": 4.936885943607194e-06}, {"id": 386, "seek": 163208, "start": 1657.9199999999998, "end": 1658.9199999999998, "text": " luck.", "tokens": [3668, 13], "temperature": 0.0, "avg_logprob": -0.25953827963935006, "compression_ratio": 1.6844444444444444, "no_speech_prob": 4.936885943607194e-06}, {"id": 387, "seek": 165892, "start": 1658.92, "end": 1662.28, "text": " So that's, that's the sort of other limitation on that side of things.", "tokens": [407, 300, 311, 11, 300, 311, 264, 1333, 295, 661, 27432, 322, 300, 1252, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 388, "seek": 165892, "start": 1662.28, "end": 1663.96, "text": " Sorry, go on, please.", "tokens": [4919, 11, 352, 322, 11, 1767, 13], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 389, "seek": 165892, "start": 1663.96, "end": 1665.44, "text": " No, no worries.", "tokens": [883, 11, 572, 16340, 13], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 390, "seek": 165892, "start": 1665.44, "end": 1671.52, "text": " So if you were to choose Elm visualization, and you did want a bar chart, but you don't", "tokens": [407, 498, 291, 645, 281, 2826, 2699, 76, 25801, 11, 293, 291, 630, 528, 257, 2159, 6927, 11, 457, 291, 500, 380], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 391, "seek": 165892, "start": 1671.52, "end": 1673.28, "text": " know how it will evolve in the future.", "tokens": [458, 577, 309, 486, 16693, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 392, "seek": 165892, "start": 1673.28, "end": 1676.24, "text": " So you go with Elm visualization.", "tokens": [407, 291, 352, 365, 2699, 76, 25801, 13], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 393, "seek": 165892, "start": 1676.24, "end": 1678.8000000000002, "text": " How would you, how would one go about it?", "tokens": [1012, 576, 291, 11, 577, 576, 472, 352, 466, 309, 30], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 394, "seek": 165892, "start": 1678.8000000000002, "end": 1683.92, "text": " Because there's no built in bar charts module in the library.", "tokens": [1436, 456, 311, 572, 3094, 294, 2159, 17767, 10088, 294, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.25320186614990237, "compression_ratio": 1.6217391304347826, "no_speech_prob": 8.579103223382845e-07}, {"id": 395, "seek": 168392, "start": 1683.92, "end": 1689.44, "text": " So that's one of the reasons we have this examples gallery that we mentioned earlier.", "tokens": [407, 300, 311, 472, 295, 264, 4112, 321, 362, 341, 5110, 18378, 300, 321, 2835, 3071, 13], "temperature": 0.0, "avg_logprob": -0.20706218221913214, "compression_ratio": 1.7054263565891472, "no_speech_prob": 5.507430159923388e-06}, {"id": 396, "seek": 168392, "start": 1689.44, "end": 1695.92, "text": " So kind of my recommendation is go there that you know, I've made it, I've spent some effort", "tokens": [407, 733, 295, 452, 11879, 307, 352, 456, 300, 291, 458, 11, 286, 600, 1027, 309, 11, 286, 600, 4418, 512, 4630], "temperature": 0.0, "avg_logprob": -0.20706218221913214, "compression_ratio": 1.7054263565891472, "no_speech_prob": 5.507430159923388e-06}, {"id": 397, "seek": 168392, "start": 1695.92, "end": 1700.88, "text": " making it so that like, even on the home screen, you can see everything visually in pictures.", "tokens": [1455, 309, 370, 300, 411, 11, 754, 322, 264, 1280, 2568, 11, 291, 393, 536, 1203, 19622, 294, 5242, 13], "temperature": 0.0, "avg_logprob": -0.20706218221913214, "compression_ratio": 1.7054263565891472, "no_speech_prob": 5.507430159923388e-06}, {"id": 398, "seek": 168392, "start": 1700.88, "end": 1706.88, "text": " So you don't have to, you know, it's not just a directory of GitHub, there's you can look", "tokens": [407, 291, 500, 380, 362, 281, 11, 291, 458, 11, 309, 311, 406, 445, 257, 21120, 295, 23331, 11, 456, 311, 291, 393, 574], "temperature": 0.0, "avg_logprob": -0.20706218221913214, "compression_ratio": 1.7054263565891472, "no_speech_prob": 5.507430159923388e-06}, {"id": 399, "seek": 168392, "start": 1706.88, "end": 1711.64, "text": " visually and be like, Oh, that kind of looks like the thing I'm trying to do.", "tokens": [19622, 293, 312, 411, 11, 876, 11, 300, 733, 295, 1542, 411, 264, 551, 286, 478, 1382, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.20706218221913214, "compression_ratio": 1.7054263565891472, "no_speech_prob": 5.507430159923388e-06}, {"id": 400, "seek": 171164, "start": 1711.64, "end": 1715.72, "text": " And they look awesome, by the way.", "tokens": [400, 436, 574, 3476, 11, 538, 264, 636, 13], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 401, "seek": 171164, "start": 1715.72, "end": 1720.64, "text": " And you can copy paste the code, throw it in your project, and then start fiddling from", "tokens": [400, 291, 393, 5055, 9163, 264, 3089, 11, 3507, 309, 294, 428, 1716, 11, 293, 550, 722, 283, 14273, 1688, 490], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 402, "seek": 171164, "start": 1720.64, "end": 1721.64, "text": " there.", "tokens": [456, 13], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 403, "seek": 171164, "start": 1721.64, "end": 1726.0, "text": " So you kind of have a starter where you know, it sets up all the all the boilerplate essentially,", "tokens": [407, 291, 733, 295, 362, 257, 22465, 689, 291, 458, 11, 309, 6352, 493, 439, 264, 439, 264, 39228, 37008, 4476, 11], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 404, "seek": 171164, "start": 1726.0, "end": 1729.76, "text": " and then you can adapt it to your own data set, you know, and start start fiddling with", "tokens": [293, 550, 291, 393, 6231, 309, 281, 428, 1065, 1412, 992, 11, 291, 458, 11, 293, 722, 722, 283, 14273, 1688, 365], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 405, "seek": 171164, "start": 1729.76, "end": 1732.64, "text": " stuff to get it to where you actually want it to go.", "tokens": [1507, 281, 483, 309, 281, 689, 291, 767, 528, 309, 281, 352, 13], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 406, "seek": 171164, "start": 1732.64, "end": 1736.64, "text": " So it helps to understand what I'm doing a little bit before you do that.", "tokens": [407, 309, 3665, 281, 1223, 437, 286, 478, 884, 257, 707, 857, 949, 291, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 407, "seek": 171164, "start": 1736.64, "end": 1738.5200000000002, "text": " So read the tutorial maybe.", "tokens": [407, 1401, 264, 7073, 1310, 13], "temperature": 0.0, "avg_logprob": -0.21471095451941857, "compression_ratio": 1.8076923076923077, "no_speech_prob": 2.443856374156894e-06}, {"id": 408, "seek": 173852, "start": 1738.52, "end": 1742.96, "text": " But once once you got a little bit of understanding, you should be able to copy paste these examples", "tokens": [583, 1564, 1564, 291, 658, 257, 707, 857, 295, 3701, 11, 291, 820, 312, 1075, 281, 5055, 9163, 613, 5110], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 409, "seek": 173852, "start": 1742.96, "end": 1744.24, "text": " and code there.", "tokens": [293, 3089, 456, 13], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 410, "seek": 173852, "start": 1744.24, "end": 1750.16, "text": " In fact, the examples gallery also has has a little little link there called edit in", "tokens": [682, 1186, 11, 264, 5110, 18378, 611, 575, 575, 257, 707, 707, 2113, 456, 1219, 8129, 294], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 411, "seek": 173852, "start": 1750.16, "end": 1751.16, "text": " Ellie.", "tokens": [27151, 13], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 412, "seek": 173852, "start": 1751.16, "end": 1756.2, "text": " So you can also click that and that will open an editor right away where you can start messing", "tokens": [407, 291, 393, 611, 2052, 300, 293, 300, 486, 1269, 364, 9839, 558, 1314, 689, 291, 393, 722, 23258], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 413, "seek": 173852, "start": 1756.2, "end": 1757.2, "text": " with it.", "tokens": [365, 309, 13], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 414, "seek": 173852, "start": 1757.2, "end": 1761.56, "text": " So yeah, that can be a pretty good way how to get started on these sort of things.", "tokens": [407, 1338, 11, 300, 393, 312, 257, 1238, 665, 636, 577, 281, 483, 1409, 322, 613, 1333, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 415, "seek": 173852, "start": 1761.56, "end": 1765.16, "text": " What is the tool that it uses again, by the way, there's a there's a special like Elm", "tokens": [708, 307, 264, 2290, 300, 309, 4960, 797, 11, 538, 264, 636, 11, 456, 311, 257, 456, 311, 257, 2121, 411, 2699, 76], "temperature": 0.0, "avg_logprob": -0.23400704822843038, "compression_ratio": 1.7749077490774907, "no_speech_prob": 1.1544494782356196e-06}, {"id": 416, "seek": 176516, "start": 1765.16, "end": 1768.8400000000001, "text": " examples tool for compiling these examples, right?", "tokens": [5110, 2290, 337, 715, 4883, 613, 5110, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.303300531060846, "compression_ratio": 1.68359375, "no_speech_prob": 2.642562549226568e-06}, {"id": 417, "seek": 176516, "start": 1768.8400000000001, "end": 1775.76, "text": " Yeah, so it's called Elm examples publisher, which is a horribly hacky piece of JavaScript", "tokens": [865, 11, 370, 309, 311, 1219, 2699, 76, 5110, 25088, 11, 597, 307, 257, 45028, 10339, 88, 2522, 295, 15778], "temperature": 0.0, "avg_logprob": -0.303300531060846, "compression_ratio": 1.68359375, "no_speech_prob": 2.642562549226568e-06}, {"id": 418, "seek": 176516, "start": 1775.76, "end": 1780.76, "text": " that you know, does compiles all of these things and take screenshots of them and then", "tokens": [300, 291, 458, 11, 775, 715, 4680, 439, 295, 613, 721, 293, 747, 40661, 295, 552, 293, 550], "temperature": 0.0, "avg_logprob": -0.303300531060846, "compression_ratio": 1.68359375, "no_speech_prob": 2.642562549226568e-06}, {"id": 419, "seek": 176516, "start": 1780.76, "end": 1782.0400000000002, "text": " mix the website.", "tokens": [2890, 264, 3144, 13], "temperature": 0.0, "avg_logprob": -0.303300531060846, "compression_ratio": 1.68359375, "no_speech_prob": 2.642562549226568e-06}, {"id": 420, "seek": 176516, "start": 1782.0400000000002, "end": 1783.0400000000002, "text": " So on.", "tokens": [407, 322, 13], "temperature": 0.0, "avg_logprob": -0.303300531060846, "compression_ratio": 1.68359375, "no_speech_prob": 2.642562549226568e-06}, {"id": 421, "seek": 176516, "start": 1783.0400000000002, "end": 1787.24, "text": " So yeah, that's that's if you want to do if you're also building on something visual,", "tokens": [407, 1338, 11, 300, 311, 300, 311, 498, 291, 528, 281, 360, 498, 291, 434, 611, 2390, 322, 746, 5056, 11], "temperature": 0.0, "avg_logprob": -0.303300531060846, "compression_ratio": 1.68359375, "no_speech_prob": 2.642562549226568e-06}, {"id": 422, "seek": 176516, "start": 1787.24, "end": 1793.64, "text": " then you want to publish a website with lots of little pictures of stuff, then I've probably", "tokens": [550, 291, 528, 281, 11374, 257, 3144, 365, 3195, 295, 707, 5242, 295, 1507, 11, 550, 286, 600, 1391], "temperature": 0.0, "avg_logprob": -0.303300531060846, "compression_ratio": 1.68359375, "no_speech_prob": 2.642562549226568e-06}, {"id": 423, "seek": 179364, "start": 1793.64, "end": 1795.8400000000001, "text": " done most of the hard work there for you.", "tokens": [1096, 881, 295, 264, 1152, 589, 456, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 424, "seek": 179364, "start": 1795.8400000000001, "end": 1797.0, "text": " So feel free.", "tokens": [407, 841, 1737, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 425, "seek": 179364, "start": 1797.0, "end": 1801.2, "text": " That's also you can find that just on GitHub on under my awesome.", "tokens": [663, 311, 611, 291, 393, 915, 300, 445, 322, 23331, 322, 833, 452, 3476, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 426, "seek": 179364, "start": 1801.2, "end": 1807.5600000000002, "text": " Yeah, it's almost confusing because it has the same look and feel as the Elm package", "tokens": [865, 11, 309, 311, 1920, 13181, 570, 309, 575, 264, 912, 574, 293, 841, 382, 264, 2699, 76, 7372], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 427, "seek": 179364, "start": 1807.5600000000002, "end": 1812.0400000000002, "text": " websites and I'm always confused like, which website I'm on?", "tokens": [12891, 293, 286, 478, 1009, 9019, 411, 11, 597, 3144, 286, 478, 322, 30], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 428, "seek": 179364, "start": 1812.0400000000002, "end": 1813.0400000000002, "text": " I may on the examples.", "tokens": [286, 815, 322, 264, 5110, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 429, "seek": 179364, "start": 1813.0400000000002, "end": 1814.8000000000002, "text": " Oh, no, I'm on the docs.", "tokens": [876, 11, 572, 11, 286, 478, 322, 264, 45623, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 430, "seek": 179364, "start": 1814.8000000000002, "end": 1817.24, "text": " Oh, no, I want the other one.", "tokens": [876, 11, 572, 11, 286, 528, 264, 661, 472, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 431, "seek": 179364, "start": 1817.24, "end": 1821.2800000000002, "text": " Yeah, it's Yeah, maybe that was a mistake.", "tokens": [865, 11, 309, 311, 865, 11, 1310, 300, 390, 257, 6146, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 432, "seek": 179364, "start": 1821.2800000000002, "end": 1822.2800000000002, "text": " I don't know.", "tokens": [286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.4076991644431287, "compression_ratio": 1.6475409836065573, "no_speech_prob": 1.4285198631114326e-05}, {"id": 433, "seek": 182228, "start": 1822.28, "end": 1823.72, "text": " I like it.", "tokens": [286, 411, 309, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 434, "seek": 182228, "start": 1823.72, "end": 1825.24, "text": " Originally, it looked slightly different.", "tokens": [28696, 11, 309, 2956, 4748, 819, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 435, "seek": 182228, "start": 1825.24, "end": 1828.32, "text": " And then I was like, it's kind of jarring going between the two.", "tokens": [400, 550, 286, 390, 411, 11, 309, 311, 733, 295, 361, 18285, 516, 1296, 264, 732, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 436, "seek": 182228, "start": 1828.32, "end": 1830.44, "text": " Made it look more similar.", "tokens": [18330, 309, 574, 544, 2531, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 437, "seek": 182228, "start": 1830.44, "end": 1832.36, "text": " But no, it's great.", "tokens": [583, 572, 11, 309, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 438, "seek": 182228, "start": 1832.36, "end": 1834.84, "text": " And the edit in Ellie is is huge.", "tokens": [400, 264, 8129, 294, 27151, 307, 307, 2603, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 439, "seek": 182228, "start": 1834.84, "end": 1836.8, "text": " That's, that's a great feature.", "tokens": [663, 311, 11, 300, 311, 257, 869, 4111, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 440, "seek": 182228, "start": 1836.8, "end": 1840.96, "text": " So what what motivated you to build this package in the first place?", "tokens": [407, 437, 437, 14515, 291, 281, 1322, 341, 7372, 294, 264, 700, 1081, 30], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 441, "seek": 182228, "start": 1840.96, "end": 1844.36, "text": " So yeah, it's been going on for a while.", "tokens": [407, 1338, 11, 309, 311, 668, 516, 322, 337, 257, 1339, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 442, "seek": 182228, "start": 1844.36, "end": 1850.3999999999999, "text": " So back, I think this was in the Elm 17 days on point 17.", "tokens": [407, 646, 11, 286, 519, 341, 390, 294, 264, 2699, 76, 3282, 1708, 322, 935, 3282, 13], "temperature": 0.0, "avg_logprob": -0.3682291584630166, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.2098538491045474e-06}, {"id": 443, "seek": 185040, "start": 1850.4, "end": 1853.76, "text": " So that's 2016.", "tokens": [407, 300, 311, 6549, 13], "temperature": 0.0, "avg_logprob": -0.27494575666344684, "compression_ratio": 1.608294930875576, "no_speech_prob": 2.1567918793152785e-06}, {"id": 444, "seek": 185040, "start": 1853.76, "end": 1861.0400000000002, "text": " I was trying to build my first thing at work, actually, we're using Elm.", "tokens": [286, 390, 1382, 281, 1322, 452, 700, 551, 412, 589, 11, 767, 11, 321, 434, 1228, 2699, 76, 13], "temperature": 0.0, "avg_logprob": -0.27494575666344684, "compression_ratio": 1.608294930875576, "no_speech_prob": 2.1567918793152785e-06}, {"id": 445, "seek": 185040, "start": 1861.0400000000002, "end": 1866.44, "text": " And this was supposed to be, we had an API that collected pricing information from all", "tokens": [400, 341, 390, 3442, 281, 312, 11, 321, 632, 364, 9362, 300, 11087, 17621, 1589, 490, 439], "temperature": 0.0, "avg_logprob": -0.27494575666344684, "compression_ratio": 1.608294930875576, "no_speech_prob": 2.1567918793152785e-06}, {"id": 446, "seek": 185040, "start": 1866.44, "end": 1870.96, "text": " the different cloud instances, from all the different cloud vendors.", "tokens": [264, 819, 4588, 14519, 11, 490, 439, 264, 819, 4588, 22056, 13], "temperature": 0.0, "avg_logprob": -0.27494575666344684, "compression_ratio": 1.608294930875576, "no_speech_prob": 2.1567918793152785e-06}, {"id": 447, "seek": 185040, "start": 1870.96, "end": 1876.3200000000002, "text": " And so we would scrape all the prices of AWS, all the prices from Google Cloud, or from", "tokens": [400, 370, 321, 576, 32827, 439, 264, 7901, 295, 17650, 11, 439, 264, 7901, 490, 3329, 8061, 11, 420, 490], "temperature": 0.0, "avg_logprob": -0.27494575666344684, "compression_ratio": 1.608294930875576, "no_speech_prob": 2.1567918793152785e-06}, {"id": 448, "seek": 185040, "start": 1876.3200000000002, "end": 1878.16, "text": " Azure and so on.", "tokens": [11969, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.27494575666344684, "compression_ratio": 1.608294930875576, "no_speech_prob": 2.1567918793152785e-06}, {"id": 449, "seek": 187816, "start": 1878.16, "end": 1880.88, "text": " And there is a lot of prices.", "tokens": [400, 456, 307, 257, 688, 295, 7901, 13], "temperature": 0.0, "avg_logprob": -0.2750647314663591, "compression_ratio": 1.7038461538461538, "no_speech_prob": 6.8540389293048065e-06}, {"id": 450, "seek": 187816, "start": 1880.88, "end": 1887.0800000000002, "text": " I think AWS has about 10,000 different prices for just instances.", "tokens": [286, 519, 17650, 575, 466, 1266, 11, 1360, 819, 7901, 337, 445, 14519, 13], "temperature": 0.0, "avg_logprob": -0.2750647314663591, "compression_ratio": 1.7038461538461538, "no_speech_prob": 6.8540389293048065e-06}, {"id": 451, "seek": 187816, "start": 1887.0800000000002, "end": 1889.96, "text": " So it's actually, it was quite a fun problem to work on.", "tokens": [407, 309, 311, 767, 11, 309, 390, 1596, 257, 1019, 1154, 281, 589, 322, 13], "temperature": 0.0, "avg_logprob": -0.2750647314663591, "compression_ratio": 1.7038461538461538, "no_speech_prob": 6.8540389293048065e-06}, {"id": 452, "seek": 187816, "start": 1889.96, "end": 1892.72, "text": " But also that these prices constantly change as well.", "tokens": [583, 611, 300, 613, 7901, 6460, 1319, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2750647314663591, "compression_ratio": 1.7038461538461538, "no_speech_prob": 6.8540389293048065e-06}, {"id": 453, "seek": 187816, "start": 1892.72, "end": 1898.6000000000001, "text": " So we were so what I was doing was just building a little website that you could go into any", "tokens": [407, 321, 645, 370, 437, 286, 390, 884, 390, 445, 2390, 257, 707, 3144, 300, 291, 727, 352, 666, 604], "temperature": 0.0, "avg_logprob": -0.2750647314663591, "compression_ratio": 1.7038461538461538, "no_speech_prob": 6.8540389293048065e-06}, {"id": 454, "seek": 187816, "start": 1898.6000000000001, "end": 1903.2, "text": " cut, you could put in a Kenny kind of like instance, and we would show you what it costs.", "tokens": [1723, 11, 291, 727, 829, 294, 257, 33681, 733, 295, 411, 5197, 11, 293, 321, 576, 855, 291, 437, 309, 5497, 13], "temperature": 0.0, "avg_logprob": -0.2750647314663591, "compression_ratio": 1.7038461538461538, "no_speech_prob": 6.8540389293048065e-06}, {"id": 455, "seek": 187816, "start": 1903.2, "end": 1907.1200000000001, "text": " But we will also show you what it costs historically.", "tokens": [583, 321, 486, 611, 855, 291, 437, 309, 5497, 16180, 13], "temperature": 0.0, "avg_logprob": -0.2750647314663591, "compression_ratio": 1.7038461538461538, "no_speech_prob": 6.8540389293048065e-06}, {"id": 456, "seek": 190712, "start": 1907.12, "end": 1910.2399999999998, "text": " And I wanted to make that historical price chart.", "tokens": [400, 286, 1415, 281, 652, 300, 8584, 3218, 6927, 13], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 457, "seek": 190712, "start": 1910.2399999999998, "end": 1911.8, "text": " Well the chart.", "tokens": [1042, 264, 6927, 13], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 458, "seek": 190712, "start": 1911.8, "end": 1915.9599999999998, "text": " And back then there wasn't any data visualization charts in Elm.", "tokens": [400, 646, 550, 456, 2067, 380, 604, 1412, 25801, 17767, 294, 2699, 76, 13], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 459, "seek": 190712, "start": 1915.9599999999998, "end": 1920.04, "text": " There was like a really outdated wrapper around D3, but that didn't work in the current version", "tokens": [821, 390, 411, 257, 534, 36313, 46906, 926, 413, 18, 11, 457, 300, 994, 380, 589, 294, 264, 2190, 3037], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 460, "seek": 190712, "start": 1920.04, "end": 1921.04, "text": " of Elm.", "tokens": [295, 2699, 76, 13], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 461, "seek": 190712, "start": 1921.04, "end": 1922.12, "text": " And that was it.", "tokens": [400, 300, 390, 309, 13], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 462, "seek": 190712, "start": 1922.12, "end": 1925.8, "text": " So I was like, well, how hard can it be?", "tokens": [407, 286, 390, 411, 11, 731, 11, 577, 1152, 393, 309, 312, 30], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 463, "seek": 190712, "start": 1925.8, "end": 1926.8, "text": " Right?", "tokens": [1779, 30], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 464, "seek": 190712, "start": 1926.8, "end": 1927.8, "text": " So,", "tokens": [407, 11], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 465, "seek": 190712, "start": 1927.8, "end": 1932.6, "text": " Seven years later.", "tokens": [14868, 924, 1780, 13], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 466, "seek": 190712, "start": 1932.6, "end": 1933.6, "text": " Something like that.", "tokens": [6595, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.3596742737968013, "compression_ratio": 1.5244444444444445, "no_speech_prob": 8.139615601976402e-06}, {"id": 467, "seek": 193360, "start": 1933.6, "end": 1938.0, "text": " So yeah, then I built something to scratch my own itch at that point.", "tokens": [407, 1338, 11, 550, 286, 3094, 746, 281, 8459, 452, 1065, 309, 339, 412, 300, 935, 13], "temperature": 0.0, "avg_logprob": -0.2563938140869141, "compression_ratio": 1.6892857142857143, "no_speech_prob": 5.093568688607775e-06}, {"id": 468, "seek": 193360, "start": 1938.0, "end": 1942.1599999999999, "text": " And then I was like, well, we might as well, you know, make this open source.", "tokens": [400, 550, 286, 390, 411, 11, 731, 11, 321, 1062, 382, 731, 11, 291, 458, 11, 652, 341, 1269, 4009, 13], "temperature": 0.0, "avg_logprob": -0.2563938140869141, "compression_ratio": 1.6892857142857143, "no_speech_prob": 5.093568688607775e-06}, {"id": 469, "seek": 193360, "start": 1942.1599999999999, "end": 1944.48, "text": " And so I started really getting into it.", "tokens": [400, 370, 286, 1409, 534, 1242, 666, 309, 13], "temperature": 0.0, "avg_logprob": -0.2563938140869141, "compression_ratio": 1.6892857142857143, "no_speech_prob": 5.093568688607775e-06}, {"id": 470, "seek": 193360, "start": 1944.48, "end": 1950.9599999999998, "text": " And then at some point later, I published the first version that didn't do a whole lot,", "tokens": [400, 550, 412, 512, 935, 1780, 11, 286, 6572, 264, 700, 3037, 300, 994, 380, 360, 257, 1379, 688, 11], "temperature": 0.0, "avg_logprob": -0.2563938140869141, "compression_ratio": 1.6892857142857143, "no_speech_prob": 5.093568688607775e-06}, {"id": 471, "seek": 193360, "start": 1950.9599999999998, "end": 1956.1599999999999, "text": " but it's been, we've been trying to steadily add features and features over time.", "tokens": [457, 309, 311, 668, 11, 321, 600, 668, 1382, 281, 36129, 909, 4122, 293, 4122, 670, 565, 13], "temperature": 0.0, "avg_logprob": -0.2563938140869141, "compression_ratio": 1.6892857142857143, "no_speech_prob": 5.093568688607775e-06}, {"id": 472, "seek": 193360, "start": 1956.1599999999999, "end": 1958.76, "text": " So now it's actually fairly feature rich, I would say.", "tokens": [407, 586, 309, 311, 767, 6457, 4111, 4593, 11, 286, 576, 584, 13], "temperature": 0.0, "avg_logprob": -0.2563938140869141, "compression_ratio": 1.6892857142857143, "no_speech_prob": 5.093568688607775e-06}, {"id": 473, "seek": 193360, "start": 1958.76, "end": 1961.9599999999998, "text": " Now I'm curious, like, what do you feel is missing from it?", "tokens": [823, 286, 478, 6369, 11, 411, 11, 437, 360, 291, 841, 307, 5361, 490, 309, 30], "temperature": 0.0, "avg_logprob": -0.2563938140869141, "compression_ratio": 1.6892857142857143, "no_speech_prob": 5.093568688607775e-06}, {"id": 474, "seek": 196196, "start": 1961.96, "end": 1963.96, "text": " Because a lot of things,", "tokens": [1436, 257, 688, 295, 721, 11], "temperature": 0.0, "avg_logprob": -0.30791466576712473, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.7693483843904687e-06}, {"id": 475, "seek": 196196, "start": 1963.96, "end": 1969.96, "text": " I look at the examples, I'm like, these examples are so wildly different.", "tokens": [286, 574, 412, 264, 5110, 11, 286, 478, 411, 11, 613, 5110, 366, 370, 34731, 819, 13], "temperature": 0.0, "avg_logprob": -0.30791466576712473, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.7693483843904687e-06}, {"id": 476, "seek": 196196, "start": 1969.96, "end": 1974.3600000000001, "text": " I don't know what it can and when, especially what it cannot do.", "tokens": [286, 500, 380, 458, 437, 309, 393, 293, 562, 11, 2318, 437, 309, 2644, 360, 13], "temperature": 0.0, "avg_logprob": -0.30791466576712473, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.7693483843904687e-06}, {"id": 477, "seek": 196196, "start": 1974.3600000000001, "end": 1975.3600000000001, "text": " So", "tokens": [407], "temperature": 0.0, "avg_logprob": -0.30791466576712473, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.7693483843904687e-06}, {"id": 478, "seek": 196196, "start": 1975.3600000000001, "end": 1980.28, "text": " Yeah, so it's not so much about can't do, you know, because you can just program stuff", "tokens": [865, 11, 370, 309, 311, 406, 370, 709, 466, 393, 380, 360, 11, 291, 458, 11, 570, 291, 393, 445, 1461, 1507], "temperature": 0.0, "avg_logprob": -0.30791466576712473, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.7693483843904687e-06}, {"id": 479, "seek": 196196, "start": 1980.28, "end": 1982.96, "text": " yourself, but there's, are abstractions missing?", "tokens": [1803, 11, 457, 456, 311, 11, 366, 12649, 626, 5361, 30], "temperature": 0.0, "avg_logprob": -0.30791466576712473, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.7693483843904687e-06}, {"id": 480, "seek": 196196, "start": 1982.96, "end": 1989.3600000000001, "text": " I mean, the big topic that we don't cover at all is like geospatial stuff, maps and", "tokens": [286, 914, 11, 264, 955, 4829, 300, 321, 500, 380, 2060, 412, 439, 307, 411, 1519, 2763, 267, 831, 1507, 11, 11317, 293], "temperature": 0.0, "avg_logprob": -0.30791466576712473, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.7693483843904687e-06}, {"id": 481, "seek": 198936, "start": 1989.36, "end": 1993.1999999999998, "text": " so on, which is a huge, huge world.", "tokens": [370, 322, 11, 597, 307, 257, 2603, 11, 2603, 1002, 13], "temperature": 0.0, "avg_logprob": -0.2648318795596852, "compression_ratio": 1.4679802955665024, "no_speech_prob": 1.7777292669052258e-05}, {"id": 482, "seek": 198936, "start": 1993.1999999999998, "end": 1994.84, "text": " And it's very complicated.", "tokens": [400, 309, 311, 588, 6179, 13], "temperature": 0.0, "avg_logprob": -0.2648318795596852, "compression_ratio": 1.4679802955665024, "no_speech_prob": 1.7777292669052258e-05}, {"id": 483, "seek": 198936, "start": 1994.84, "end": 1997.1999999999998, "text": " I made some attempts in that direction.", "tokens": [286, 1027, 512, 15257, 294, 300, 3513, 13], "temperature": 0.0, "avg_logprob": -0.2648318795596852, "compression_ratio": 1.4679802955665024, "no_speech_prob": 1.7777292669052258e-05}, {"id": 484, "seek": 198936, "start": 1997.1999999999998, "end": 2003.6799999999998, "text": " But I think I ran into the limitations of what can be done on a sort of open source", "tokens": [583, 286, 519, 286, 5872, 666, 264, 15705, 295, 437, 393, 312, 1096, 322, 257, 1333, 295, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.2648318795596852, "compression_ratio": 1.4679802955665024, "no_speech_prob": 1.7777292669052258e-05}, {"id": 485, "seek": 198936, "start": 2003.6799999999998, "end": 2004.6799999999998, "text": " budget.", "tokens": [4706, 13], "temperature": 0.0, "avg_logprob": -0.2648318795596852, "compression_ratio": 1.4679802955665024, "no_speech_prob": 1.7777292669052258e-05}, {"id": 486, "seek": 198936, "start": 2004.6799999999998, "end": 2014.8, "text": " So I think, at least for now, I'm not really intending to go there unless something miraculous", "tokens": [407, 286, 519, 11, 412, 1935, 337, 586, 11, 286, 478, 406, 534, 560, 2029, 281, 352, 456, 5969, 746, 41101], "temperature": 0.0, "avg_logprob": -0.2648318795596852, "compression_ratio": 1.4679802955665024, "no_speech_prob": 1.7777292669052258e-05}, {"id": 487, "seek": 198936, "start": 2014.8, "end": 2015.8, "text": " happens.", "tokens": [2314, 13], "temperature": 0.0, "avg_logprob": -0.2648318795596852, "compression_ratio": 1.4679802955665024, "no_speech_prob": 1.7777292669052258e-05}, {"id": 488, "seek": 201580, "start": 2015.8, "end": 2023.48, "text": " I can already just imagine having to draw a map of the world with all the borders.", "tokens": [286, 393, 1217, 445, 3811, 1419, 281, 2642, 257, 4471, 295, 264, 1002, 365, 439, 264, 16287, 13], "temperature": 0.0, "avg_logprob": -0.29022710257713946, "compression_ratio": 1.5860655737704918, "no_speech_prob": 1.1658579751383513e-05}, {"id": 489, "seek": 201580, "start": 2023.48, "end": 2026.12, "text": " And every time they change, you have to release a new version.", "tokens": [400, 633, 565, 436, 1319, 11, 291, 362, 281, 4374, 257, 777, 3037, 13], "temperature": 0.0, "avg_logprob": -0.29022710257713946, "compression_ratio": 1.5860655737704918, "no_speech_prob": 1.1658579751383513e-05}, {"id": 490, "seek": 201580, "start": 2026.12, "end": 2029.8, "text": " And just that would be a pain already in itself.", "tokens": [400, 445, 300, 576, 312, 257, 1822, 1217, 294, 2564, 13], "temperature": 0.0, "avg_logprob": -0.29022710257713946, "compression_ratio": 1.5860655737704918, "no_speech_prob": 1.1658579751383513e-05}, {"id": 491, "seek": 201580, "start": 2029.8, "end": 2030.8, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.29022710257713946, "compression_ratio": 1.5860655737704918, "no_speech_prob": 1.1658579751383513e-05}, {"id": 492, "seek": 201580, "start": 2030.8, "end": 2036.52, "text": " And like, I mean, I've worked in, you know, mapping and so on.", "tokens": [400, 411, 11, 286, 914, 11, 286, 600, 2732, 294, 11, 291, 458, 11, 18350, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.29022710257713946, "compression_ratio": 1.5860655737704918, "no_speech_prob": 1.1658579751383513e-05}, {"id": 493, "seek": 201580, "start": 2036.52, "end": 2042.0, "text": " For some period of time, I was maintaining this other library called Elm Mapbox to do", "tokens": [1171, 512, 2896, 295, 565, 11, 286, 390, 14916, 341, 661, 6405, 1219, 2699, 76, 22053, 4995, 281, 360], "temperature": 0.0, "avg_logprob": -0.29022710257713946, "compression_ratio": 1.5860655737704918, "no_speech_prob": 1.1658579751383513e-05}, {"id": 494, "seek": 201580, "start": 2042.0, "end": 2045.3999999999999, "text": " kind of like zoomable maps and so on.", "tokens": [733, 295, 411, 8863, 712, 11317, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.29022710257713946, "compression_ratio": 1.5860655737704918, "no_speech_prob": 1.1658579751383513e-05}, {"id": 495, "seek": 204540, "start": 2045.4, "end": 2049.2400000000002, "text": " And so I've got some insight into the complexity there.", "tokens": [400, 370, 286, 600, 658, 512, 11269, 666, 264, 14024, 456, 13], "temperature": 0.0, "avg_logprob": -0.31859844987110425, "compression_ratio": 1.5610859728506787, "no_speech_prob": 2.9287728466442786e-05}, {"id": 496, "seek": 204540, "start": 2049.2400000000002, "end": 2057.6800000000003, "text": " And it's just like agreeing on how to represent two numbers, i.e. a point on the earth.", "tokens": [400, 309, 311, 445, 411, 36900, 322, 577, 281, 2906, 732, 3547, 11, 741, 13, 68, 13, 257, 935, 322, 264, 4120, 13], "temperature": 0.0, "avg_logprob": -0.31859844987110425, "compression_ratio": 1.5610859728506787, "no_speech_prob": 2.9287728466442786e-05}, {"id": 497, "seek": 204540, "start": 2057.6800000000003, "end": 2063.48, "text": " There's like a very large number of ways people have decided to solve that problem.", "tokens": [821, 311, 411, 257, 588, 2416, 1230, 295, 2098, 561, 362, 3047, 281, 5039, 300, 1154, 13], "temperature": 0.0, "avg_logprob": -0.31859844987110425, "compression_ratio": 1.5610859728506787, "no_speech_prob": 2.9287728466442786e-05}, {"id": 498, "seek": 204540, "start": 2063.48, "end": 2067.0, "text": " So like just that, it's a really complicated problem.", "tokens": [407, 411, 445, 300, 11, 309, 311, 257, 534, 6179, 1154, 13], "temperature": 0.0, "avg_logprob": -0.31859844987110425, "compression_ratio": 1.5610859728506787, "no_speech_prob": 2.9287728466442786e-05}, {"id": 499, "seek": 204540, "start": 2067.0, "end": 2069.36, "text": " And then it gets worse from there.", "tokens": [400, 550, 309, 2170, 5324, 490, 456, 13], "temperature": 0.0, "avg_logprob": -0.31859844987110425, "compression_ratio": 1.5610859728506787, "no_speech_prob": 2.9287728466442786e-05}, {"id": 500, "seek": 204540, "start": 2069.36, "end": 2074.52, "text": " So can you explain that one?", "tokens": [407, 393, 291, 2903, 300, 472, 30], "temperature": 0.0, "avg_logprob": -0.31859844987110425, "compression_ratio": 1.5610859728506787, "no_speech_prob": 2.9287728466442786e-05}, {"id": 501, "seek": 207452, "start": 2074.52, "end": 2080.4, "text": " So what you probably are mostly familiar with sort of people specifying points on the earth", "tokens": [407, 437, 291, 1391, 366, 5240, 4963, 365, 1333, 295, 561, 1608, 5489, 2793, 322, 264, 4120], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 502, "seek": 207452, "start": 2080.4, "end": 2083.2, "text": " as longitude or latitude pairs, right?", "tokens": [382, 938, 4377, 420, 45436, 15494, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 503, "seek": 207452, "start": 2083.2, "end": 2084.68, "text": " Have you heard those terms?", "tokens": [3560, 291, 2198, 729, 2115, 30], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 504, "seek": 207452, "start": 2084.68, "end": 2085.68, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 505, "seek": 207452, "start": 2085.68, "end": 2086.68, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 506, "seek": 207452, "start": 2086.68, "end": 2091.12, "text": " So that's what we call like, people call it the GPS coordinates or properly it's called", "tokens": [407, 300, 311, 437, 321, 818, 411, 11, 561, 818, 309, 264, 19462, 21056, 420, 6108, 309, 311, 1219], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 507, "seek": 207452, "start": 2091.12, "end": 2095.44, "text": " WSG 84 is the specification for that.", "tokens": [343, 50, 38, 29018, 307, 264, 31256, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 508, "seek": 207452, "start": 2095.44, "end": 2097.68, "text": " And essentially the idea is their angle.", "tokens": [400, 4476, 264, 1558, 307, 641, 5802, 13], "temperature": 0.0, "avg_logprob": -0.34223927508343704, "compression_ratio": 1.5112107623318385, "no_speech_prob": 4.222507413942367e-06}, {"id": 509, "seek": 209768, "start": 2097.68, "end": 2105.9199999999996, "text": " So you can think of it as one circle is kind of goes through the poles of the earth and", "tokens": [407, 291, 393, 519, 295, 309, 382, 472, 6329, 307, 733, 295, 1709, 807, 264, 24760, 295, 264, 4120, 293], "temperature": 0.0, "avg_logprob": -0.2256128269693126, "compression_ratio": 1.7868020304568528, "no_speech_prob": 3.500763796182582e-06}, {"id": 510, "seek": 209768, "start": 2105.9199999999996, "end": 2111.12, "text": " the other one, other circle goes around the equator and you can kind of, you know, combining", "tokens": [264, 661, 472, 11, 661, 6329, 1709, 926, 264, 45544, 293, 291, 393, 733, 295, 11, 291, 458, 11, 21928], "temperature": 0.0, "avg_logprob": -0.2256128269693126, "compression_ratio": 1.7868020304568528, "no_speech_prob": 3.500763796182582e-06}, {"id": 511, "seek": 209768, "start": 2111.12, "end": 2116.8799999999997, "text": " the two angles on those circles, you can kind of come up with a coordinate system that more", "tokens": [264, 732, 14708, 322, 729, 13040, 11, 291, 393, 733, 295, 808, 493, 365, 257, 15670, 1185, 300, 544], "temperature": 0.0, "avg_logprob": -0.2256128269693126, "compression_ratio": 1.7868020304568528, "no_speech_prob": 3.500763796182582e-06}, {"id": 512, "seek": 209768, "start": 2116.8799999999997, "end": 2119.9199999999996, "text": " or less specifies places on the earth.", "tokens": [420, 1570, 1608, 11221, 3190, 322, 264, 4120, 13], "temperature": 0.0, "avg_logprob": -0.2256128269693126, "compression_ratio": 1.7868020304568528, "no_speech_prob": 3.500763796182582e-06}, {"id": 513, "seek": 209768, "start": 2119.9199999999996, "end": 2123.2799999999997, "text": " So that's sort of one way you can do it.", "tokens": [407, 300, 311, 1333, 295, 472, 636, 291, 393, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.2256128269693126, "compression_ratio": 1.7868020304568528, "no_speech_prob": 3.500763796182582e-06}, {"id": 514, "seek": 212328, "start": 2123.28, "end": 2128.96, "text": " But even there, you come into trouble because some people like to specify things as latitude", "tokens": [583, 754, 456, 11, 291, 808, 666, 5253, 570, 512, 561, 411, 281, 16500, 721, 382, 45436], "temperature": 0.0, "avg_logprob": -0.3317288743688705, "compression_ratio": 1.7116279069767442, "no_speech_prob": 5.453230755847471e-07}, {"id": 515, "seek": 212328, "start": 2128.96, "end": 2129.96, "text": " then longitude.", "tokens": [550, 938, 4377, 13], "temperature": 0.0, "avg_logprob": -0.3317288743688705, "compression_ratio": 1.7116279069767442, "no_speech_prob": 5.453230755847471e-07}, {"id": 516, "seek": 212328, "start": 2129.96, "end": 2132.96, "text": " Other people like to first do longitude then longitude.", "tokens": [5358, 561, 411, 281, 700, 360, 938, 4377, 550, 938, 4377, 13], "temperature": 0.0, "avg_logprob": -0.3317288743688705, "compression_ratio": 1.7116279069767442, "no_speech_prob": 5.453230755847471e-07}, {"id": 517, "seek": 212328, "start": 2132.96, "end": 2138.44, "text": " So like, even though you're not totally out of the weeds, but then there's like lots of", "tokens": [407, 411, 11, 754, 1673, 291, 434, 406, 3879, 484, 295, 264, 26370, 11, 457, 550, 456, 311, 411, 3195, 295], "temperature": 0.0, "avg_logprob": -0.3317288743688705, "compression_ratio": 1.7116279069767442, "no_speech_prob": 5.453230755847471e-07}, {"id": 518, "seek": 212328, "start": 2138.44, "end": 2140.96, "text": " other ways you can specify.", "tokens": [661, 2098, 291, 393, 16500, 13], "temperature": 0.0, "avg_logprob": -0.3317288743688705, "compression_ratio": 1.7116279069767442, "no_speech_prob": 5.453230755847471e-07}, {"id": 519, "seek": 212328, "start": 2140.96, "end": 2148.92, "text": " If you can't agree just on that, then like there are 13 standards on just the ordering.", "tokens": [759, 291, 393, 380, 3986, 445, 322, 300, 11, 550, 411, 456, 366, 3705, 7787, 322, 445, 264, 21739, 13], "temperature": 0.0, "avg_logprob": -0.3317288743688705, "compression_ratio": 1.7116279069767442, "no_speech_prob": 5.453230755847471e-07}, {"id": 520, "seek": 214892, "start": 2148.92, "end": 2155.04, "text": " Well, there's only two ways you can do it.", "tokens": [1042, 11, 456, 311, 787, 732, 2098, 291, 393, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.26520110043612394, "compression_ratio": 1.7772277227722773, "no_speech_prob": 9.131468914347352e-07}, {"id": 521, "seek": 214892, "start": 2155.04, "end": 2158.8, "text": " But you know, it's, yeah.", "tokens": [583, 291, 458, 11, 309, 311, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.26520110043612394, "compression_ratio": 1.7772277227722773, "no_speech_prob": 9.131468914347352e-07}, {"id": 522, "seek": 214892, "start": 2158.8, "end": 2164.56, "text": " But like, then you can, you know, part of the problem with that system is that the earth", "tokens": [583, 411, 11, 550, 291, 393, 11, 291, 458, 11, 644, 295, 264, 1154, 365, 300, 1185, 307, 300, 264, 4120], "temperature": 0.0, "avg_logprob": -0.26520110043612394, "compression_ratio": 1.7772277227722773, "no_speech_prob": 9.131468914347352e-07}, {"id": 523, "seek": 214892, "start": 2164.56, "end": 2166.2400000000002, "text": " isn't a perfect sphere.", "tokens": [1943, 380, 257, 2176, 16687, 13], "temperature": 0.0, "avg_logprob": -0.26520110043612394, "compression_ratio": 1.7772277227722773, "no_speech_prob": 9.131468914347352e-07}, {"id": 524, "seek": 214892, "start": 2166.2400000000002, "end": 2168.48, "text": " So you get some inaccuracy in that system.", "tokens": [407, 291, 483, 512, 37957, 374, 2551, 294, 300, 1185, 13], "temperature": 0.0, "avg_logprob": -0.26520110043612394, "compression_ratio": 1.7772277227722773, "no_speech_prob": 9.131468914347352e-07}, {"id": 525, "seek": 214892, "start": 2168.48, "end": 2171.52, "text": " So there's other systems that try to fix that.", "tokens": [407, 456, 311, 661, 3652, 300, 853, 281, 3191, 300, 13], "temperature": 0.0, "avg_logprob": -0.26520110043612394, "compression_ratio": 1.7772277227722773, "no_speech_prob": 9.131468914347352e-07}, {"id": 526, "seek": 214892, "start": 2171.52, "end": 2176.4, "text": " Then there's a lot of ways, well, you know, that doesn't allow you to draw a map per se", "tokens": [1396, 456, 311, 257, 688, 295, 2098, 11, 731, 11, 291, 458, 11, 300, 1177, 380, 2089, 291, 281, 2642, 257, 4471, 680, 369], "temperature": 0.0, "avg_logprob": -0.26520110043612394, "compression_ratio": 1.7772277227722773, "no_speech_prob": 9.131468914347352e-07}, {"id": 527, "seek": 217640, "start": 2176.4, "end": 2183.0, "text": " because, you know, that's a sphere, but a map is a rectangle.", "tokens": [570, 11, 291, 458, 11, 300, 311, 257, 16687, 11, 457, 257, 4471, 307, 257, 21930, 13], "temperature": 0.0, "avg_logprob": -0.2554686761671497, "compression_ratio": 1.6322869955156951, "no_speech_prob": 4.888038347417023e-07}, {"id": 528, "seek": 217640, "start": 2183.0, "end": 2187.48, "text": " So then if you try to unwrap a sphere into rectangle, you're always introducing distortion", "tokens": [407, 550, 498, 291, 853, 281, 14853, 4007, 257, 16687, 666, 21930, 11, 291, 434, 1009, 15424, 28426], "temperature": 0.0, "avg_logprob": -0.2554686761671497, "compression_ratio": 1.6322869955156951, "no_speech_prob": 4.888038347417023e-07}, {"id": 529, "seek": 217640, "start": 2187.48, "end": 2192.56, "text": " and then you have different systems that can deal with that distortion in different ways.", "tokens": [293, 550, 291, 362, 819, 3652, 300, 393, 2028, 365, 300, 28426, 294, 819, 2098, 13], "temperature": 0.0, "avg_logprob": -0.2554686761671497, "compression_ratio": 1.6322869955156951, "no_speech_prob": 4.888038347417023e-07}, {"id": 530, "seek": 217640, "start": 2192.56, "end": 2198.8, "text": " And I could talk about this literally for like days.", "tokens": [400, 286, 727, 751, 466, 341, 3736, 337, 411, 1708, 13], "temperature": 0.0, "avg_logprob": -0.2554686761671497, "compression_ratio": 1.6322869955156951, "no_speech_prob": 4.888038347417023e-07}, {"id": 531, "seek": 217640, "start": 2198.8, "end": 2205.88, "text": " But yeah, it just goes into, there's a lot of pain in the GIS world.", "tokens": [583, 1338, 11, 309, 445, 1709, 666, 11, 456, 311, 257, 688, 295, 1822, 294, 264, 47860, 1002, 13], "temperature": 0.0, "avg_logprob": -0.2554686761671497, "compression_ratio": 1.6322869955156951, "no_speech_prob": 4.888038347417023e-07}, {"id": 532, "seek": 220588, "start": 2205.88, "end": 2209.76, "text": " So solving a lot of that in a nice way is tough.", "tokens": [407, 12606, 257, 688, 295, 300, 294, 257, 1481, 636, 307, 4930, 13], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 533, "seek": 220588, "start": 2209.76, "end": 2214.0, "text": " Did you also happen to try and solve time zones at the same time?", "tokens": [2589, 291, 611, 1051, 281, 853, 293, 5039, 565, 16025, 412, 264, 912, 565, 30], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 534, "seek": 220588, "start": 2214.0, "end": 2216.0, "text": " I'm not that suicidal.", "tokens": [286, 478, 406, 300, 43243, 13], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 535, "seek": 220588, "start": 2216.0, "end": 2220.76, "text": " Which one do you think is more complicated?", "tokens": [3013, 472, 360, 291, 519, 307, 544, 6179, 30], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 536, "seek": 220588, "start": 2220.76, "end": 2222.92, "text": " The maps one or the time zones?", "tokens": [440, 11317, 472, 420, 264, 565, 16025, 30], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 537, "seek": 220588, "start": 2222.92, "end": 2223.92, "text": " I don't know.", "tokens": [286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 538, "seek": 220588, "start": 2223.92, "end": 2225.92, "text": " Time zones are also just horrible.", "tokens": [6161, 16025, 366, 611, 445, 9263, 13], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 539, "seek": 220588, "start": 2225.92, "end": 2232.2400000000002, "text": " I mean, I think I don't, yeah, I know enough about time zones not to want to know anymore.", "tokens": [286, 914, 11, 286, 519, 286, 500, 380, 11, 1338, 11, 286, 458, 1547, 466, 565, 16025, 406, 281, 528, 281, 458, 3602, 13], "temperature": 0.0, "avg_logprob": -0.32634706043061756, "compression_ratio": 1.6267281105990783, "no_speech_prob": 5.093635081721004e-06}, {"id": 540, "seek": 223224, "start": 2232.24, "end": 2235.9199999999996, "text": " Fair, fair.", "tokens": [12157, 11, 3143, 13], "temperature": 0.0, "avg_logprob": -0.3336699077061244, "compression_ratio": 1.4157303370786516, "no_speech_prob": 3.1379224765260005e-06}, {"id": 541, "seek": 223224, "start": 2235.9199999999996, "end": 2243.12, "text": " No, no, but yeah, I mean, then you have a bunch of other things that are complex layout", "tokens": [883, 11, 572, 11, 457, 1338, 11, 286, 914, 11, 550, 291, 362, 257, 3840, 295, 661, 721, 300, 366, 3997, 13333], "temperature": 0.0, "avg_logprob": -0.3336699077061244, "compression_ratio": 1.4157303370786516, "no_speech_prob": 3.1379224765260005e-06}, {"id": 542, "seek": 223224, "start": 2243.12, "end": 2244.7999999999997, "text": " wise.", "tokens": [10829, 13], "temperature": 0.0, "avg_logprob": -0.3336699077061244, "compression_ratio": 1.4157303370786516, "no_speech_prob": 3.1379224765260005e-06}, {"id": 543, "seek": 223224, "start": 2244.7999999999997, "end": 2251.3199999999997, "text": " One thing I'd like to do some point in the near future is what are called Sankey diagrams,", "tokens": [1485, 551, 286, 1116, 411, 281, 360, 512, 935, 294, 264, 2651, 2027, 307, 437, 366, 1219, 5271, 4119, 36709, 11], "temperature": 0.0, "avg_logprob": -0.3336699077061244, "compression_ratio": 1.4157303370786516, "no_speech_prob": 3.1379224765260005e-06}, {"id": 544, "seek": 223224, "start": 2251.3199999999997, "end": 2257.04, "text": " which kind of visualize flows between different things.", "tokens": [597, 733, 295, 23273, 12867, 1296, 819, 721, 13], "temperature": 0.0, "avg_logprob": -0.3336699077061244, "compression_ratio": 1.4157303370786516, "no_speech_prob": 3.1379224765260005e-06}, {"id": 545, "seek": 225704, "start": 2257.04, "end": 2262.36, "text": " So you could say like, you could think of saying like, if you want to do a chart between", "tokens": [407, 291, 727, 584, 411, 11, 291, 727, 519, 295, 1566, 411, 11, 498, 291, 528, 281, 360, 257, 6927, 1296], "temperature": 0.0, "avg_logprob": -0.283999997093564, "compression_ratio": 1.7468879668049793, "no_speech_prob": 5.5932209761522245e-06}, {"id": 546, "seek": 225704, "start": 2262.36, "end": 2265.52, "text": " countries and some import and other export different commodities between them, you can", "tokens": [3517, 293, 512, 974, 293, 661, 10725, 819, 40777, 1296, 552, 11, 291, 393], "temperature": 0.0, "avg_logprob": -0.283999997093564, "compression_ratio": 1.7468879668049793, "no_speech_prob": 5.5932209761522245e-06}, {"id": 547, "seek": 225704, "start": 2265.52, "end": 2271.16, "text": " visualize this in this chart, kind that shows you the quantities of stuff flowing between", "tokens": [23273, 341, 294, 341, 6927, 11, 733, 300, 3110, 291, 264, 22927, 295, 1507, 13974, 1296], "temperature": 0.0, "avg_logprob": -0.283999997093564, "compression_ratio": 1.7468879668049793, "no_speech_prob": 5.5932209761522245e-06}, {"id": 548, "seek": 225704, "start": 2271.16, "end": 2272.16, "text": " these different things.", "tokens": [613, 819, 721, 13], "temperature": 0.0, "avg_logprob": -0.283999997093564, "compression_ratio": 1.7468879668049793, "no_speech_prob": 5.5932209761522245e-06}, {"id": 549, "seek": 225704, "start": 2272.16, "end": 2276.16, "text": " It's a really nice, nice way of visualizing stuff.", "tokens": [467, 311, 257, 534, 1481, 11, 1481, 636, 295, 5056, 3319, 1507, 13], "temperature": 0.0, "avg_logprob": -0.283999997093564, "compression_ratio": 1.7468879668049793, "no_speech_prob": 5.5932209761522245e-06}, {"id": 550, "seek": 225704, "start": 2276.16, "end": 2279.6, "text": " And it's sort of non trivial to compute that layout.", "tokens": [400, 309, 311, 1333, 295, 2107, 26703, 281, 14722, 300, 13333, 13], "temperature": 0.0, "avg_logprob": -0.283999997093564, "compression_ratio": 1.7468879668049793, "no_speech_prob": 5.5932209761522245e-06}, {"id": 551, "seek": 225704, "start": 2279.6, "end": 2281.36, "text": " So I'd like to do that one.", "tokens": [407, 286, 1116, 411, 281, 360, 300, 472, 13], "temperature": 0.0, "avg_logprob": -0.283999997093564, "compression_ratio": 1.7468879668049793, "no_speech_prob": 5.5932209761522245e-06}, {"id": 552, "seek": 228136, "start": 2281.36, "end": 2288.04, "text": " Is it non trivial because every flow impacts how the other flows will show or the order", "tokens": [1119, 309, 2107, 26703, 570, 633, 3095, 11606, 577, 264, 661, 12867, 486, 855, 420, 264, 1668], "temperature": 0.0, "avg_logprob": -0.24262993834739507, "compression_ratio": 1.63013698630137, "no_speech_prob": 5.2551922635757364e-06}, {"id": 553, "seek": 228136, "start": 2288.04, "end": 2289.04, "text": " of those things?", "tokens": [295, 729, 721, 30], "temperature": 0.0, "avg_logprob": -0.24262993834739507, "compression_ratio": 1.63013698630137, "no_speech_prob": 5.2551922635757364e-06}, {"id": 554, "seek": 228136, "start": 2289.04, "end": 2294.08, "text": " Yeah, I think that's generally the problem you get with most like complex layout algorithms", "tokens": [865, 11, 286, 519, 300, 311, 5101, 264, 1154, 291, 483, 365, 881, 411, 3997, 13333, 14642], "temperature": 0.0, "avg_logprob": -0.24262993834739507, "compression_ratio": 1.63013698630137, "no_speech_prob": 5.2551922635757364e-06}, {"id": 555, "seek": 228136, "start": 2294.08, "end": 2298.6400000000003, "text": " is that it's just everything affects everything and you have only so much space to put it", "tokens": [307, 300, 309, 311, 445, 1203, 11807, 1203, 293, 291, 362, 787, 370, 709, 1901, 281, 829, 309], "temperature": 0.0, "avg_logprob": -0.24262993834739507, "compression_ratio": 1.63013698630137, "no_speech_prob": 5.2551922635757364e-06}, {"id": 556, "seek": 228136, "start": 2298.6400000000003, "end": 2299.6800000000003, "text": " all into.", "tokens": [439, 666, 13], "temperature": 0.0, "avg_logprob": -0.24262993834739507, "compression_ratio": 1.63013698630137, "no_speech_prob": 5.2551922635757364e-06}, {"id": 557, "seek": 228136, "start": 2299.6800000000003, "end": 2304.56, "text": " And so you end up having to shuffle everything around a lot.", "tokens": [400, 370, 291, 917, 493, 1419, 281, 39426, 1203, 926, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.24262993834739507, "compression_ratio": 1.63013698630137, "no_speech_prob": 5.2551922635757364e-06}, {"id": 558, "seek": 230456, "start": 2304.56, "end": 2312.16, "text": " Actually, you know, so one of the things we had a pretty major release recently, which", "tokens": [5135, 11, 291, 458, 11, 370, 472, 295, 264, 721, 321, 632, 257, 1238, 2563, 4374, 3938, 11, 597], "temperature": 0.0, "avg_logprob": -0.22076497035743917, "compression_ratio": 1.7596899224806202, "no_speech_prob": 1.903202360153955e-06}, {"id": 559, "seek": 230456, "start": 2312.16, "end": 2317.2, "text": " added this new module that deals with we call it hierarchy, but essentially, you can think", "tokens": [3869, 341, 777, 10088, 300, 11215, 365, 321, 818, 309, 22333, 11, 457, 4476, 11, 291, 393, 519], "temperature": 0.0, "avg_logprob": -0.22076497035743917, "compression_ratio": 1.7596899224806202, "no_speech_prob": 1.903202360153955e-06}, {"id": 560, "seek": 230456, "start": 2317.2, "end": 2322.52, "text": " of it as dealing mostly with things you could represent in a tree, tree like data structure.", "tokens": [295, 309, 382, 6260, 5240, 365, 721, 291, 727, 2906, 294, 257, 4230, 11, 4230, 411, 1412, 3877, 13], "temperature": 0.0, "avg_logprob": -0.22076497035743917, "compression_ratio": 1.7596899224806202, "no_speech_prob": 1.903202360153955e-06}, {"id": 561, "seek": 230456, "start": 2322.52, "end": 2327.6, "text": " And that's all just layout, we don't really do any, as usual, we don't only do any drawing,", "tokens": [400, 300, 311, 439, 445, 13333, 11, 321, 500, 380, 534, 360, 604, 11, 382, 7713, 11, 321, 500, 380, 787, 360, 604, 6316, 11], "temperature": 0.0, "avg_logprob": -0.22076497035743917, "compression_ratio": 1.7596899224806202, "no_speech_prob": 1.903202360153955e-06}, {"id": 562, "seek": 230456, "start": 2327.6, "end": 2333.96, "text": " we just compute where in where would you put stuff if you wanted to do some kind of layout.", "tokens": [321, 445, 14722, 689, 294, 689, 576, 291, 829, 1507, 498, 291, 1415, 281, 360, 512, 733, 295, 13333, 13], "temperature": 0.0, "avg_logprob": -0.22076497035743917, "compression_ratio": 1.7596899224806202, "no_speech_prob": 1.903202360153955e-06}, {"id": 563, "seek": 233396, "start": 2333.96, "end": 2338.6, "text": " And so that's been a bunch of layout algorithms I've been working on.", "tokens": [400, 370, 300, 311, 668, 257, 3840, 295, 13333, 14642, 286, 600, 668, 1364, 322, 13], "temperature": 0.0, "avg_logprob": -0.3105274238208733, "compression_ratio": 1.560483870967742, "no_speech_prob": 4.425389761308907e-06}, {"id": 564, "seek": 233396, "start": 2338.6, "end": 2341.7200000000003, "text": " So they're, yeah, they're just tend to be pretty complex.", "tokens": [407, 436, 434, 11, 1338, 11, 436, 434, 445, 3928, 281, 312, 1238, 3997, 13], "temperature": 0.0, "avg_logprob": -0.3105274238208733, "compression_ratio": 1.560483870967742, "no_speech_prob": 4.425389761308907e-06}, {"id": 565, "seek": 233396, "start": 2341.7200000000003, "end": 2346.4, "text": " Yeah, it's kind of a funny one, because Elm visualization is structured internally by,", "tokens": [865, 11, 309, 311, 733, 295, 257, 4074, 472, 11, 570, 2699, 76, 25801, 307, 18519, 19501, 538, 11], "temperature": 0.0, "avg_logprob": -0.3105274238208733, "compression_ratio": 1.560483870967742, "no_speech_prob": 4.425389761308907e-06}, {"id": 566, "seek": 233396, "start": 2346.4, "end": 2352.36, "text": " you know, you often see as the on the API surface, it's like a single function.", "tokens": [291, 458, 11, 291, 2049, 536, 382, 264, 322, 264, 9362, 3753, 11, 309, 311, 411, 257, 2167, 2445, 13], "temperature": 0.0, "avg_logprob": -0.3105274238208733, "compression_ratio": 1.560483870967742, "no_speech_prob": 4.425389761308907e-06}, {"id": 567, "seek": 233396, "start": 2352.36, "end": 2359.2400000000002, "text": " And usually, that module is just documentation and, and the function, like I almost use like", "tokens": [400, 2673, 11, 300, 10088, 307, 445, 14333, 293, 11, 293, 264, 2445, 11, 411, 286, 1920, 764, 411], "temperature": 0.0, "avg_logprob": -0.3105274238208733, "compression_ratio": 1.560483870967742, "no_speech_prob": 4.425389761308907e-06}, {"id": 568, "seek": 235924, "start": 2359.24, "end": 2366.3199999999997, "text": " a C like header pattern, where you have like a header file, which has the function signatures", "tokens": [257, 383, 411, 23117, 5102, 11, 689, 291, 362, 411, 257, 23117, 3991, 11, 597, 575, 264, 2445, 32322], "temperature": 0.0, "avg_logprob": -0.25008532058360966, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.028939732350409e-05}, {"id": 569, "seek": 235924, "start": 2366.3199999999997, "end": 2371.64, "text": " and the documentation, and each function is implemented in its own entire module, because", "tokens": [293, 264, 14333, 11, 293, 1184, 2445, 307, 12270, 294, 1080, 1065, 2302, 10088, 11, 570], "temperature": 0.0, "avg_logprob": -0.25008532058360966, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.028939732350409e-05}, {"id": 570, "seek": 235924, "start": 2371.64, "end": 2377.3599999999997, "text": " that function implementation is probably like 3000 lines.", "tokens": [300, 2445, 11420, 307, 1391, 411, 20984, 3876, 13], "temperature": 0.0, "avg_logprob": -0.25008532058360966, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.028939732350409e-05}, {"id": 571, "seek": 235924, "start": 2377.3599999999997, "end": 2382.4399999999996, "text": " So it's also a little bit atypical, I think, in that regard, is that some of these things", "tokens": [407, 309, 311, 611, 257, 707, 857, 412, 88, 34061, 11, 286, 519, 11, 294, 300, 3843, 11, 307, 300, 512, 295, 613, 721], "temperature": 0.0, "avg_logprob": -0.25008532058360966, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.028939732350409e-05}, {"id": 572, "seek": 235924, "start": 2382.4399999999996, "end": 2386.52, "text": " are just inherently pretty complicated.", "tokens": [366, 445, 27993, 1238, 6179, 13], "temperature": 0.0, "avg_logprob": -0.25008532058360966, "compression_ratio": 1.6130434782608696, "no_speech_prob": 1.028939732350409e-05}, {"id": 573, "seek": 238652, "start": 2386.52, "end": 2393.8, "text": " So this package only gives small helpers, but each one of those helpers is very complex", "tokens": [407, 341, 7372, 787, 2709, 1359, 854, 433, 11, 457, 1184, 472, 295, 729, 854, 433, 307, 588, 3997], "temperature": 0.0, "avg_logprob": -0.3063908266217521, "compression_ratio": 1.736842105263158, "no_speech_prob": 3.288715106464224e-06}, {"id": 574, "seek": 238652, "start": 2393.8, "end": 2398.88, "text": " to compute and takes a lot of most of that some of them are pretty simple, but most of", "tokens": [281, 14722, 293, 2516, 257, 688, 295, 881, 295, 300, 512, 295, 552, 366, 1238, 2199, 11, 457, 881, 295], "temperature": 0.0, "avg_logprob": -0.3063908266217521, "compression_ratio": 1.736842105263158, "no_speech_prob": 3.288715106464224e-06}, {"id": 575, "seek": 238652, "start": 2398.88, "end": 2399.88, "text": " them.", "tokens": [552, 13], "temperature": 0.0, "avg_logprob": -0.3063908266217521, "compression_ratio": 1.736842105263158, "no_speech_prob": 3.288715106464224e-06}, {"id": 576, "seek": 238652, "start": 2399.88, "end": 2409.68, "text": " So could you walk us through some of these sort of ecosystem of supporting packages that", "tokens": [407, 727, 291, 1792, 505, 807, 512, 295, 613, 1333, 295, 11311, 295, 7231, 17401, 300], "temperature": 0.0, "avg_logprob": -0.3063908266217521, "compression_ratio": 1.736842105263158, "no_speech_prob": 3.288715106464224e-06}, {"id": 577, "seek": 238652, "start": 2409.68, "end": 2413.92, "text": " you mentioned in the readme there in the getting started, so there are a few things that come", "tokens": [291, 2835, 294, 264, 1401, 1398, 456, 294, 264, 1242, 1409, 11, 370, 456, 366, 257, 1326, 721, 300, 808], "temperature": 0.0, "avg_logprob": -0.3063908266217521, "compression_ratio": 1.736842105263158, "no_speech_prob": 3.288715106464224e-06}, {"id": 578, "seek": 241392, "start": 2413.92, "end": 2418.2000000000003, "text": " up while using this package.", "tokens": [493, 1339, 1228, 341, 7372, 13], "temperature": 0.0, "avg_logprob": -0.2877915905367944, "compression_ratio": 1.5601851851851851, "no_speech_prob": 1.4823519904894056e-06}, {"id": 579, "seek": 241392, "start": 2418.2000000000003, "end": 2421.04, "text": " Elm color is a pretty straightforward one.", "tokens": [2699, 76, 2017, 307, 257, 1238, 15325, 472, 13], "temperature": 0.0, "avg_logprob": -0.2877915905367944, "compression_ratio": 1.5601851851851851, "no_speech_prob": 1.4823519904894056e-06}, {"id": 580, "seek": 241392, "start": 2421.04, "end": 2427.44, "text": " It's just a kind of community standard package for describing a color.", "tokens": [467, 311, 445, 257, 733, 295, 1768, 3832, 7372, 337, 16141, 257, 2017, 13], "temperature": 0.0, "avg_logprob": -0.2877915905367944, "compression_ratio": 1.5601851851851851, "no_speech_prob": 1.4823519904894056e-06}, {"id": 581, "seek": 241392, "start": 2427.44, "end": 2431.98, "text": " But so like typed SVG, I actually wasn't familiar with typed SVG.", "tokens": [583, 370, 411, 33941, 31910, 38, 11, 286, 767, 2067, 380, 4963, 365, 33941, 31910, 38, 13], "temperature": 0.0, "avg_logprob": -0.2877915905367944, "compression_ratio": 1.5601851851851851, "no_speech_prob": 1.4823519904894056e-06}, {"id": 582, "seek": 241392, "start": 2431.98, "end": 2433.44, "text": " What is that package for?", "tokens": [708, 307, 300, 7372, 337, 30], "temperature": 0.0, "avg_logprob": -0.2877915905367944, "compression_ratio": 1.5601851851851851, "no_speech_prob": 1.4823519904894056e-06}, {"id": 583, "seek": 241392, "start": 2433.44, "end": 2441.48, "text": " Yeah, so most people probably are familiar with Elm slash SVG, the sort of, I guess,", "tokens": [865, 11, 370, 881, 561, 1391, 366, 4963, 365, 2699, 76, 17330, 31910, 38, 11, 264, 1333, 295, 11, 286, 2041, 11], "temperature": 0.0, "avg_logprob": -0.2877915905367944, "compression_ratio": 1.5601851851851851, "no_speech_prob": 1.4823519904894056e-06}, {"id": 584, "seek": 241392, "start": 2441.48, "end": 2442.48, "text": " standard library.", "tokens": [3832, 6405, 13], "temperature": 0.0, "avg_logprob": -0.2877915905367944, "compression_ratio": 1.5601851851851851, "no_speech_prob": 1.4823519904894056e-06}, {"id": 585, "seek": 244248, "start": 2442.48, "end": 2447.88, "text": " But it's, at least in my opinion, not a great package.", "tokens": [583, 309, 311, 11, 412, 1935, 294, 452, 4800, 11, 406, 257, 869, 7372, 13], "temperature": 0.0, "avg_logprob": -0.299907898635007, "compression_ratio": 1.5707762557077625, "no_speech_prob": 7.411135356960585e-06}, {"id": 586, "seek": 244248, "start": 2447.88, "end": 2455.08, "text": " It has it basically copies is designed from Elm HTML in the sense that every element takes", "tokens": [467, 575, 309, 1936, 14341, 307, 4761, 490, 2699, 76, 17995, 294, 264, 2020, 300, 633, 4478, 2516], "temperature": 0.0, "avg_logprob": -0.299907898635007, "compression_ratio": 1.5707762557077625, "no_speech_prob": 7.411135356960585e-06}, {"id": 587, "seek": 244248, "start": 2455.08, "end": 2460.76, "text": " two lists, and every attribute basically takes a string as its one input.", "tokens": [732, 14511, 11, 293, 633, 19667, 1936, 2516, 257, 6798, 382, 1080, 472, 4846, 13], "temperature": 0.0, "avg_logprob": -0.299907898635007, "compression_ratio": 1.5707762557077625, "no_speech_prob": 7.411135356960585e-06}, {"id": 588, "seek": 244248, "start": 2460.76, "end": 2463.2, "text": " And that works pretty okay for HTML.", "tokens": [400, 300, 1985, 1238, 1392, 337, 17995, 13], "temperature": 0.0, "avg_logprob": -0.299907898635007, "compression_ratio": 1.5707762557077625, "no_speech_prob": 7.411135356960585e-06}, {"id": 589, "seek": 244248, "start": 2463.2, "end": 2467.2400000000002, "text": " And it's kind of beginner friendly in the sense that, you know, if you know how to type", "tokens": [400, 309, 311, 733, 295, 22080, 9208, 294, 264, 2020, 300, 11, 291, 458, 11, 498, 291, 458, 577, 281, 2010], "temperature": 0.0, "avg_logprob": -0.299907898635007, "compression_ratio": 1.5707762557077625, "no_speech_prob": 7.411135356960585e-06}, {"id": 590, "seek": 246724, "start": 2467.24, "end": 2473.2799999999997, "text": " HTML, you probably know how to type Elm HTML, it's, you know, very consistent, which is", "tokens": [17995, 11, 291, 1391, 458, 577, 281, 2010, 2699, 76, 17995, 11, 309, 311, 11, 291, 458, 11, 588, 8398, 11, 597, 307], "temperature": 0.0, "avg_logprob": -0.22030398530780143, "compression_ratio": 1.6718146718146718, "no_speech_prob": 1.1726295952030341e-06}, {"id": 591, "seek": 246724, "start": 2473.2799999999997, "end": 2474.2799999999997, "text": " good.", "tokens": [665, 13], "temperature": 0.0, "avg_logprob": -0.22030398530780143, "compression_ratio": 1.6718146718146718, "no_speech_prob": 1.1726295952030341e-06}, {"id": 592, "seek": 246724, "start": 2474.2799999999997, "end": 2479.64, "text": " But it's not a great package if you want to actually dynamically compute most of the attributes,", "tokens": [583, 309, 311, 406, 257, 869, 7372, 498, 291, 528, 281, 767, 43492, 14722, 881, 295, 264, 17212, 11], "temperature": 0.0, "avg_logprob": -0.22030398530780143, "compression_ratio": 1.6718146718146718, "no_speech_prob": 1.1726295952030341e-06}, {"id": 593, "seek": 246724, "start": 2479.64, "end": 2484.9199999999996, "text": " because most of the attributes in SVG are just not strings at all.", "tokens": [570, 881, 295, 264, 17212, 294, 31910, 38, 366, 445, 406, 13985, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.22030398530780143, "compression_ratio": 1.6718146718146718, "no_speech_prob": 1.1726295952030341e-06}, {"id": 594, "seek": 246724, "start": 2484.9199999999996, "end": 2490.3199999999997, "text": " They're either they're usually floating point numbers, typically, or they're just complex", "tokens": [814, 434, 2139, 436, 434, 2673, 12607, 935, 3547, 11, 5850, 11, 420, 436, 434, 445, 3997], "temperature": 0.0, "avg_logprob": -0.22030398530780143, "compression_ratio": 1.6718146718146718, "no_speech_prob": 1.1726295952030341e-06}, {"id": 595, "seek": 246724, "start": 2490.3199999999997, "end": 2495.52, "text": " structures like things like paths are, it's a fairly complex data structure that ends", "tokens": [9227, 411, 721, 411, 14518, 366, 11, 309, 311, 257, 6457, 3997, 1412, 3877, 300, 5314], "temperature": 0.0, "avg_logprob": -0.22030398530780143, "compression_ratio": 1.6718146718146718, "no_speech_prob": 1.1726295952030341e-06}, {"id": 596, "seek": 249552, "start": 2495.52, "end": 2498.36, "text": " up being stringified into a string.", "tokens": [493, 885, 6798, 2587, 666, 257, 6798, 13], "temperature": 0.0, "avg_logprob": -0.22664803398980035, "compression_ratio": 1.8494208494208495, "no_speech_prob": 6.438981017709011e-06}, {"id": 597, "seek": 249552, "start": 2498.36, "end": 2503.24, "text": " But if you want to actually compute it, you don't, you know, stringifying it isn't isn't", "tokens": [583, 498, 291, 528, 281, 767, 14722, 309, 11, 291, 500, 380, 11, 291, 458, 11, 6798, 5489, 309, 1943, 380, 1943, 380], "temperature": 0.0, "avg_logprob": -0.22664803398980035, "compression_ratio": 1.8494208494208495, "no_speech_prob": 6.438981017709011e-06}, {"id": 598, "seek": 249552, "start": 2503.24, "end": 2507.0, "text": " really a core concern, you know, and then you have a bunch of things that are basically", "tokens": [534, 257, 4965, 3136, 11, 291, 458, 11, 293, 550, 291, 362, 257, 3840, 295, 721, 300, 366, 1936], "temperature": 0.0, "avg_logprob": -0.22664803398980035, "compression_ratio": 1.8494208494208495, "no_speech_prob": 6.438981017709011e-06}, {"id": 599, "seek": 249552, "start": 2507.0, "end": 2508.48, "text": " just enums.", "tokens": [445, 465, 8099, 13], "temperature": 0.0, "avg_logprob": -0.22664803398980035, "compression_ratio": 1.8494208494208495, "no_speech_prob": 6.438981017709011e-06}, {"id": 600, "seek": 249552, "start": 2508.48, "end": 2514.28, "text": " So you can say like, I want, you know, if I make a if I bend a line, like imagine 90", "tokens": [407, 291, 393, 584, 411, 11, 286, 528, 11, 291, 458, 11, 498, 286, 652, 257, 498, 286, 11229, 257, 1622, 11, 411, 3811, 4289], "temperature": 0.0, "avg_logprob": -0.22664803398980035, "compression_ratio": 1.8494208494208495, "no_speech_prob": 6.438981017709011e-06}, {"id": 601, "seek": 249552, "start": 2514.28, "end": 2519.36, "text": " degrees, you can draw the corner there in like three different ways, you can get it", "tokens": [5310, 11, 291, 393, 2642, 264, 4538, 456, 294, 411, 1045, 819, 2098, 11, 291, 393, 483, 309], "temperature": 0.0, "avg_logprob": -0.22664803398980035, "compression_ratio": 1.8494208494208495, "no_speech_prob": 6.438981017709011e-06}, {"id": 602, "seek": 249552, "start": 2519.36, "end": 2523.8, "text": " kind of like to overshoot, you can kind of rounded a bit or you can kind of do like a", "tokens": [733, 295, 411, 281, 15488, 24467, 11, 291, 393, 733, 295, 23382, 257, 857, 420, 291, 393, 733, 295, 360, 411, 257], "temperature": 0.0, "avg_logprob": -0.22664803398980035, "compression_ratio": 1.8494208494208495, "no_speech_prob": 6.438981017709011e-06}, {"id": 603, "seek": 252380, "start": 2523.8, "end": 2527.04, "text": " 45 degree bend at the edge, right.", "tokens": [6905, 4314, 11229, 412, 264, 4691, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 604, "seek": 252380, "start": 2527.04, "end": 2528.76, "text": " And so those are like your three options.", "tokens": [400, 370, 729, 366, 411, 428, 1045, 3956, 13], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 605, "seek": 252380, "start": 2528.76, "end": 2533.4, "text": " And, you know, you can specify an attribute that's going to be one of those three.", "tokens": [400, 11, 291, 458, 11, 291, 393, 16500, 364, 19667, 300, 311, 516, 281, 312, 472, 295, 729, 1045, 13], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 606, "seek": 252380, "start": 2533.4, "end": 2538.6000000000004, "text": " So like, taking an arbitrary string is just a way to shoot yourself in the foot.", "tokens": [407, 411, 11, 1940, 364, 23211, 6798, 307, 445, 257, 636, 281, 3076, 1803, 294, 264, 2671, 13], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 607, "seek": 252380, "start": 2538.6000000000004, "end": 2542.96, "text": " Because you probably don't remember how to spell I don't know what it's called.", "tokens": [1436, 291, 1391, 500, 380, 1604, 577, 281, 9827, 286, 500, 380, 458, 437, 309, 311, 1219, 13], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 608, "seek": 252380, "start": 2542.96, "end": 2545.5600000000004, "text": " Well, and yeah, you don't remember what it's called.", "tokens": [1042, 11, 293, 1338, 11, 291, 500, 380, 1604, 437, 309, 311, 1219, 13], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 609, "seek": 252380, "start": 2545.5600000000004, "end": 2549.32, "text": " So good luck with autocomplete with a string.", "tokens": [407, 665, 3668, 365, 45833, 298, 17220, 365, 257, 6798, 13], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 610, "seek": 252380, "start": 2549.32, "end": 2550.32, "text": " So", "tokens": [407], "temperature": 0.0, "avg_logprob": -0.30300906553106793, "compression_ratio": 1.688, "no_speech_prob": 4.133471520617604e-05}, {"id": 611, "seek": 255032, "start": 2550.32, "end": 2555.32, "text": " doubts and then hope for the editor.", "tokens": [22618, 293, 550, 1454, 337, 264, 9839, 13], "temperature": 0.0, "avg_logprob": -0.39090951283772785, "compression_ratio": 1.4848484848484849, "no_speech_prob": 3.4465510907466523e-06}, {"id": 612, "seek": 255032, "start": 2555.32, "end": 2560.92, "text": " Because it's a string, you're not going to get any help from your ID.", "tokens": [1436, 309, 311, 257, 6798, 11, 291, 434, 406, 516, 281, 483, 604, 854, 490, 428, 7348, 13], "temperature": 0.0, "avg_logprob": -0.39090951283772785, "compression_ratio": 1.4848484848484849, "no_speech_prob": 3.4465510907466523e-06}, {"id": 613, "seek": 255032, "start": 2560.92, "end": 2562.6000000000004, "text": " So you're gonna have to go and Google it.", "tokens": [407, 291, 434, 799, 362, 281, 352, 293, 3329, 309, 13], "temperature": 0.0, "avg_logprob": -0.39090951283772785, "compression_ratio": 1.4848484848484849, "no_speech_prob": 3.4465510907466523e-06}, {"id": 614, "seek": 255032, "start": 2562.6000000000004, "end": 2564.96, "text": " And you know, it's annoying.", "tokens": [400, 291, 458, 11, 309, 311, 11304, 13], "temperature": 0.0, "avg_logprob": -0.39090951283772785, "compression_ratio": 1.4848484848484849, "no_speech_prob": 3.4465510907466523e-06}, {"id": 615, "seek": 255032, "start": 2564.96, "end": 2569.92, "text": " So type SVG is an attempt to solve some of these problems.", "tokens": [407, 2010, 31910, 38, 307, 364, 5217, 281, 5039, 512, 295, 613, 2740, 13], "temperature": 0.0, "avg_logprob": -0.39090951283772785, "compression_ratio": 1.4848484848484849, "no_speech_prob": 3.4465510907466523e-06}, {"id": 616, "seek": 255032, "start": 2569.92, "end": 2574.7200000000003, "text": " I personally am not super happy with that library either.", "tokens": [286, 5665, 669, 406, 1687, 2055, 365, 300, 6405, 2139, 13], "temperature": 0.0, "avg_logprob": -0.39090951283772785, "compression_ratio": 1.4848484848484849, "no_speech_prob": 3.4465510907466523e-06}, {"id": 617, "seek": 257472, "start": 2574.72, "end": 2580.68, "text": " I think it's a move in a better direction, but I still think that like, as the ultimate", "tokens": [286, 519, 309, 311, 257, 1286, 294, 257, 1101, 3513, 11, 457, 286, 920, 519, 300, 411, 11, 382, 264, 9705], "temperature": 0.0, "avg_logprob": -0.3533705123747238, "compression_ratio": 1.5422222222222222, "no_speech_prob": 1.7330369246337796e-06}, {"id": 618, "seek": 257472, "start": 2580.68, "end": 2585.0, "text": " Elm SVG rendering packages is still waiting to happen.", "tokens": [2699, 76, 31910, 38, 22407, 17401, 307, 920, 3806, 281, 1051, 13], "temperature": 0.0, "avg_logprob": -0.3533705123747238, "compression_ratio": 1.5422222222222222, "no_speech_prob": 1.7330369246337796e-06}, {"id": 619, "seek": 257472, "start": 2585.0, "end": 2590.8799999999997, "text": " Well, you have a choice between writing a new book and making that the library.", "tokens": [1042, 11, 291, 362, 257, 3922, 1296, 3579, 257, 777, 1446, 293, 1455, 300, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.3533705123747238, "compression_ratio": 1.5422222222222222, "no_speech_prob": 1.7330369246337796e-06}, {"id": 620, "seek": 257472, "start": 2590.8799999999997, "end": 2594.7999999999997, "text": " So yeah, I started on it once.", "tokens": [407, 1338, 11, 286, 1409, 322, 309, 1564, 13], "temperature": 0.0, "avg_logprob": -0.3533705123747238, "compression_ratio": 1.5422222222222222, "no_speech_prob": 1.7330369246337796e-06}, {"id": 621, "seek": 257472, "start": 2594.7999999999997, "end": 2598.0, "text": " And then I sort of quickly just looked at the size of the SVG spec.", "tokens": [400, 550, 286, 1333, 295, 2661, 445, 2956, 412, 264, 2744, 295, 264, 31910, 38, 1608, 13], "temperature": 0.0, "avg_logprob": -0.3533705123747238, "compression_ratio": 1.5422222222222222, "no_speech_prob": 1.7330369246337796e-06}, {"id": 622, "seek": 257472, "start": 2598.0, "end": 2601.04, "text": " And I was like, yeah, no.", "tokens": [400, 286, 390, 411, 11, 1338, 11, 572, 13], "temperature": 0.0, "avg_logprob": -0.3533705123747238, "compression_ratio": 1.5422222222222222, "no_speech_prob": 1.7330369246337796e-06}, {"id": 623, "seek": 260104, "start": 2601.04, "end": 2605.72, "text": " Okay, let me let me find a way to generate this from the spec.", "tokens": [1033, 11, 718, 385, 718, 385, 915, 257, 636, 281, 8460, 341, 490, 264, 1608, 13], "temperature": 0.0, "avg_logprob": -0.24362575559687794, "compression_ratio": 1.7095588235294117, "no_speech_prob": 1.3496942301571835e-06}, {"id": 624, "seek": 260104, "start": 2605.72, "end": 2608.7599999999998, "text": " Yeah, but there's, you could try that.", "tokens": [865, 11, 457, 456, 311, 11, 291, 727, 853, 300, 13], "temperature": 0.0, "avg_logprob": -0.24362575559687794, "compression_ratio": 1.7095588235294117, "no_speech_prob": 1.3496942301571835e-06}, {"id": 625, "seek": 260104, "start": 2608.7599999999998, "end": 2613.68, "text": " But then then you're not going to end up with a, you know, I think that's a little bit like", "tokens": [583, 550, 550, 291, 434, 406, 516, 281, 917, 493, 365, 257, 11, 291, 458, 11, 286, 519, 300, 311, 257, 707, 857, 411], "temperature": 0.0, "avg_logprob": -0.24362575559687794, "compression_ratio": 1.7095588235294117, "no_speech_prob": 1.3496942301571835e-06}, {"id": 626, "seek": 260104, "start": 2613.68, "end": 2618.64, "text": " where type SVG also like falls is that, you know, some of the ergonomics end up not being", "tokens": [689, 2010, 31910, 38, 611, 411, 8804, 307, 300, 11, 291, 458, 11, 512, 295, 264, 42735, 29884, 917, 493, 406, 885], "temperature": 0.0, "avg_logprob": -0.24362575559687794, "compression_ratio": 1.7095588235294117, "no_speech_prob": 1.3496942301571835e-06}, {"id": 627, "seek": 260104, "start": 2618.64, "end": 2624.32, "text": " all that ergonomical, because, like, to give you an example, right, there's certain attributes", "tokens": [439, 300, 42735, 298, 804, 11, 570, 11, 411, 11, 281, 976, 291, 364, 1365, 11, 558, 11, 456, 311, 1629, 17212], "temperature": 0.0, "avg_logprob": -0.24362575559687794, "compression_ratio": 1.7095588235294117, "no_speech_prob": 1.3496942301571835e-06}, {"id": 628, "seek": 260104, "start": 2624.32, "end": 2630.8, "text": " that like 95% of the time you use them, you use them with, like a number, let's say as", "tokens": [300, 411, 13420, 4, 295, 264, 565, 291, 764, 552, 11, 291, 764, 552, 365, 11, 411, 257, 1230, 11, 718, 311, 584, 382], "temperature": 0.0, "avg_logprob": -0.24362575559687794, "compression_ratio": 1.7095588235294117, "no_speech_prob": 1.3496942301571835e-06}, {"id": 629, "seek": 263080, "start": 2630.8, "end": 2631.96, "text": " an input.", "tokens": [364, 4846, 13], "temperature": 0.0, "avg_logprob": -0.26406560850537514, "compression_ratio": 1.8271604938271604, "no_speech_prob": 1.130044984165579e-05}, {"id": 630, "seek": 263080, "start": 2631.96, "end": 2637.32, "text": " But they can also technically take like a straight other value, like something like", "tokens": [583, 436, 393, 611, 12120, 747, 411, 257, 2997, 661, 2158, 11, 411, 746, 411], "temperature": 0.0, "avg_logprob": -0.26406560850537514, "compression_ratio": 1.8271604938271604, "no_speech_prob": 1.130044984165579e-05}, {"id": 631, "seek": 263080, "start": 2637.32, "end": 2644.0800000000004, "text": " none, or, you know, something like that, or, you know, so if you just model it as like,", "tokens": [6022, 11, 420, 11, 291, 458, 11, 746, 411, 300, 11, 420, 11, 291, 458, 11, 370, 498, 291, 445, 2316, 309, 382, 411, 11], "temperature": 0.0, "avg_logprob": -0.26406560850537514, "compression_ratio": 1.8271604938271604, "no_speech_prob": 1.130044984165579e-05}, {"id": 632, "seek": 263080, "start": 2644.0800000000004, "end": 2649.6400000000003, "text": " oh, well, then we have to wrap the number in, like one tag, so that we can have the", "tokens": [1954, 11, 731, 11, 550, 321, 362, 281, 7019, 264, 1230, 294, 11, 411, 472, 6162, 11, 370, 300, 321, 393, 362, 264], "temperature": 0.0, "avg_logprob": -0.26406560850537514, "compression_ratio": 1.8271604938271604, "no_speech_prob": 1.130044984165579e-05}, {"id": 633, "seek": 263080, "start": 2649.6400000000003, "end": 2655.1600000000003, "text": " other tag, you end up with this spare tag, like literally, or called all over the place,", "tokens": [661, 6162, 11, 291, 917, 493, 365, 341, 13798, 6162, 11, 411, 3736, 11, 420, 1219, 439, 670, 264, 1081, 11], "temperature": 0.0, "avg_logprob": -0.26406560850537514, "compression_ratio": 1.8271604938271604, "no_speech_prob": 1.130044984165579e-05}, {"id": 634, "seek": 263080, "start": 2655.1600000000003, "end": 2660.0800000000004, "text": " you know, so like, a better API design would be just to make this attribute just take the", "tokens": [291, 458, 11, 370, 411, 11, 257, 1101, 9362, 1715, 576, 312, 445, 281, 652, 341, 19667, 445, 747, 264], "temperature": 0.0, "avg_logprob": -0.26406560850537514, "compression_ratio": 1.8271604938271604, "no_speech_prob": 1.130044984165579e-05}, {"id": 635, "seek": 266008, "start": 2660.08, "end": 2664.96, "text": " number and then maybe add an extra attribute that you're going to use in that one situation", "tokens": [1230, 293, 550, 1310, 909, 364, 2857, 19667, 300, 291, 434, 516, 281, 764, 294, 300, 472, 2590], "temperature": 0.0, "avg_logprob": -0.27275448849326683, "compression_ratio": 1.6457399103139014, "no_speech_prob": 2.9311224352568388e-05}, {"id": 636, "seek": 266008, "start": 2664.96, "end": 2668.36, "text": " you needed that has some more awkward name.", "tokens": [291, 2978, 300, 575, 512, 544, 11411, 1315, 13], "temperature": 0.0, "avg_logprob": -0.27275448849326683, "compression_ratio": 1.6457399103139014, "no_speech_prob": 2.9311224352568388e-05}, {"id": 637, "seek": 266008, "start": 2668.36, "end": 2674.12, "text": " But you know, it makes the 95% case way nicer.", "tokens": [583, 291, 458, 11, 309, 1669, 264, 13420, 4, 1389, 636, 22842, 13], "temperature": 0.0, "avg_logprob": -0.27275448849326683, "compression_ratio": 1.6457399103139014, "no_speech_prob": 2.9311224352568388e-05}, {"id": 638, "seek": 266008, "start": 2674.12, "end": 2677.6, "text": " You know, and it's the sort of thing which needs some experience and quite a bit of thought", "tokens": [509, 458, 11, 293, 309, 311, 264, 1333, 295, 551, 597, 2203, 512, 1752, 293, 1596, 257, 857, 295, 1194], "temperature": 0.0, "avg_logprob": -0.27275448849326683, "compression_ratio": 1.6457399103139014, "no_speech_prob": 2.9311224352568388e-05}, {"id": 639, "seek": 266008, "start": 2677.6, "end": 2683.68, "text": " to to really get the sort of developer experience to that level.", "tokens": [281, 281, 534, 483, 264, 1333, 295, 10754, 1752, 281, 300, 1496, 13], "temperature": 0.0, "avg_logprob": -0.27275448849326683, "compression_ratio": 1.6457399103139014, "no_speech_prob": 2.9311224352568388e-05}, {"id": 640, "seek": 266008, "start": 2683.68, "end": 2685.0, "text": " That's quite a lot of work.", "tokens": [663, 311, 1596, 257, 688, 295, 589, 13], "temperature": 0.0, "avg_logprob": -0.27275448849326683, "compression_ratio": 1.6457399103139014, "no_speech_prob": 2.9311224352568388e-05}, {"id": 641, "seek": 268500, "start": 2685.0, "end": 2693.2, "text": " Yeah, so it sounds like Elm SVG is similar to Elm HTML, where typed SVG is similar to", "tokens": [865, 11, 370, 309, 3263, 411, 2699, 76, 31910, 38, 307, 2531, 281, 2699, 76, 17995, 11, 689, 33941, 31910, 38, 307, 2531, 281], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 642, "seek": 268500, "start": 2693.2, "end": 2694.2, "text": " Elm CSS.", "tokens": [2699, 76, 24387, 13], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 643, "seek": 268500, "start": 2694.2, "end": 2697.56, "text": " But you want Elm UI for SVG?", "tokens": [583, 291, 528, 2699, 76, 15682, 337, 31910, 38, 30], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 644, "seek": 268500, "start": 2697.56, "end": 2699.52, "text": " Maybe, yeah.", "tokens": [2704, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 645, "seek": 268500, "start": 2699.52, "end": 2703.04, "text": " Something, something, something like that.", "tokens": [6595, 11, 746, 11, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 646, "seek": 268500, "start": 2703.04, "end": 2705.92, "text": " I think as a metaphor, I think that works.", "tokens": [286, 519, 382, 257, 19157, 11, 286, 519, 300, 1985, 13], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 647, "seek": 268500, "start": 2705.92, "end": 2706.92, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 648, "seek": 268500, "start": 2706.92, "end": 2710.68, "text": " I think also, because like, Elm CSS has the same some of the same issues you mentioned,", "tokens": [286, 519, 611, 11, 570, 411, 11, 2699, 76, 24387, 575, 264, 912, 512, 295, 264, 912, 2663, 291, 2835, 11], "temperature": 0.0, "avg_logprob": -0.3847509271958295, "compression_ratio": 1.6373056994818653, "no_speech_prob": 7.889133485150523e-06}, {"id": 649, "seek": 271068, "start": 2710.68, "end": 2716.7999999999997, "text": " like, oh, none can be specified as an attribute to anything, almost.", "tokens": [411, 11, 1954, 11, 6022, 393, 312, 22206, 382, 364, 19667, 281, 1340, 11, 1920, 13], "temperature": 0.0, "avg_logprob": -0.2952884722359573, "compression_ratio": 1.5053763440860215, "no_speech_prob": 6.854246294096811e-06}, {"id": 650, "seek": 271068, "start": 2716.7999999999997, "end": 2722.44, "text": " And it also had like, needed to go through some type trickery to make it work.", "tokens": [400, 309, 611, 632, 411, 11, 2978, 281, 352, 807, 512, 2010, 4282, 2109, 281, 652, 309, 589, 13], "temperature": 0.0, "avg_logprob": -0.2952884722359573, "compression_ratio": 1.5053763440860215, "no_speech_prob": 6.854246294096811e-06}, {"id": 651, "seek": 271068, "start": 2722.44, "end": 2727.52, "text": " Okay, so one true path, that one, I had also not heard about.", "tokens": [1033, 11, 370, 472, 2074, 3100, 11, 300, 472, 11, 286, 632, 611, 406, 2198, 466, 13], "temperature": 0.0, "avg_logprob": -0.2952884722359573, "compression_ratio": 1.5053763440860215, "no_speech_prob": 6.854246294096811e-06}, {"id": 652, "seek": 271068, "start": 2727.52, "end": 2734.96, "text": " And I'm very curious, like, what is the one true path package solving?", "tokens": [400, 286, 478, 588, 6369, 11, 411, 11, 437, 307, 264, 472, 2074, 3100, 7372, 12606, 30], "temperature": 0.0, "avg_logprob": -0.2952884722359573, "compression_ratio": 1.5053763440860215, "no_speech_prob": 6.854246294096811e-06}, {"id": 653, "seek": 273496, "start": 2734.96, "end": 2743.2, "text": " The one true path, actually, it's funny, because that actually happened at that first Elm Europe", "tokens": [440, 472, 2074, 3100, 11, 767, 11, 309, 311, 4074, 11, 570, 300, 767, 2011, 412, 300, 700, 2699, 76, 3315], "temperature": 0.0, "avg_logprob": -0.2952787011070589, "compression_ratio": 1.6260162601626016, "no_speech_prob": 3.7849733871553326e-06}, {"id": 654, "seek": 273496, "start": 2743.2, "end": 2747.84, "text": " conference, where I think we might have met there, I don't know.", "tokens": [7586, 11, 689, 286, 519, 321, 1062, 362, 1131, 456, 11, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.2952787011070589, "compression_ratio": 1.6260162601626016, "no_speech_prob": 3.7849733871553326e-06}, {"id": 655, "seek": 273496, "start": 2747.84, "end": 2754.12, "text": " And I think a bunch of people like myself, Matt Griffith, I think was there, I don't", "tokens": [400, 286, 519, 257, 3840, 295, 561, 411, 2059, 11, 7397, 23765, 355, 11, 286, 519, 390, 456, 11, 286, 500, 380], "temperature": 0.0, "avg_logprob": -0.2952787011070589, "compression_ratio": 1.6260162601626016, "no_speech_prob": 3.7849733871553326e-06}, {"id": 656, "seek": 273496, "start": 2754.12, "end": 2757.84, "text": " know, Fulgert, who ended up writing this, maybe one or two other people.", "tokens": [458, 11, 479, 425, 70, 911, 11, 567, 4590, 493, 3579, 341, 11, 1310, 472, 420, 732, 661, 561, 13], "temperature": 0.0, "avg_logprob": -0.2952787011070589, "compression_ratio": 1.6260162601626016, "no_speech_prob": 3.7849733871553326e-06}, {"id": 657, "seek": 273496, "start": 2757.84, "end": 2763.64, "text": " And we were all like saying, like, well, we all want to do stuff with SVG paths.", "tokens": [400, 321, 645, 439, 411, 1566, 11, 411, 11, 731, 11, 321, 439, 528, 281, 360, 1507, 365, 31910, 38, 14518, 13], "temperature": 0.0, "avg_logprob": -0.2952787011070589, "compression_ratio": 1.6260162601626016, "no_speech_prob": 3.7849733871553326e-06}, {"id": 658, "seek": 276364, "start": 2763.64, "end": 2768.56, "text": " Like I wanted to generate them from various helpers.", "tokens": [1743, 286, 1415, 281, 8460, 552, 490, 3683, 854, 433, 13], "temperature": 0.0, "avg_logprob": -0.2450741783517306, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.13944552646717e-06}, {"id": 659, "seek": 276364, "start": 2768.56, "end": 2773.3599999999997, "text": " And Matt was interested in using them for animation, because he wanted to do animation,", "tokens": [400, 7397, 390, 3102, 294, 1228, 552, 337, 9603, 11, 570, 415, 1415, 281, 360, 9603, 11], "temperature": 0.0, "avg_logprob": -0.2450741783517306, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.13944552646717e-06}, {"id": 660, "seek": 276364, "start": 2773.3599999999997, "end": 2775.04, "text": " you know, on a path.", "tokens": [291, 458, 11, 322, 257, 3100, 13], "temperature": 0.0, "avg_logprob": -0.2450741783517306, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.13944552646717e-06}, {"id": 661, "seek": 276364, "start": 2775.04, "end": 2779.3199999999997, "text": " And I'm not sure what Fulgert was trying to do at that time.", "tokens": [400, 286, 478, 406, 988, 437, 479, 425, 70, 911, 390, 1382, 281, 360, 412, 300, 565, 13], "temperature": 0.0, "avg_logprob": -0.2450741783517306, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.13944552646717e-06}, {"id": 662, "seek": 276364, "start": 2779.3199999999997, "end": 2783.2799999999997, "text": " And so we were like, well, you know, one of the I guess one of the so this goes back to", "tokens": [400, 370, 321, 645, 411, 11, 731, 11, 291, 458, 11, 472, 295, 264, 286, 2041, 472, 295, 264, 370, 341, 1709, 646, 281], "temperature": 0.0, "avg_logprob": -0.2450741783517306, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.13944552646717e-06}, {"id": 663, "seek": 276364, "start": 2783.2799999999997, "end": 2784.2799999999997, "text": " Elm's design, right?", "tokens": [2699, 76, 311, 1715, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2450741783517306, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.13944552646717e-06}, {"id": 664, "seek": 276364, "start": 2784.2799999999997, "end": 2791.68, "text": " And Elm, it's strictly typed with nominal types, which means if I produce a type that's,", "tokens": [400, 2699, 76, 11, 309, 311, 20792, 33941, 365, 41641, 3467, 11, 597, 1355, 498, 286, 5258, 257, 2010, 300, 311, 11], "temperature": 0.0, "avg_logprob": -0.2450741783517306, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.13944552646717e-06}, {"id": 665, "seek": 279168, "start": 2791.68, "end": 2797.44, "text": " you know, called something, say, the path, and you want to consume that type path, you", "tokens": [291, 458, 11, 1219, 746, 11, 584, 11, 264, 3100, 11, 293, 291, 528, 281, 14732, 300, 2010, 3100, 11, 291], "temperature": 0.0, "avg_logprob": -0.20200785568782262, "compression_ratio": 1.7068273092369477, "no_speech_prob": 5.255186351860175e-06}, {"id": 666, "seek": 279168, "start": 2797.44, "end": 2802.16, "text": " have to take me on as a dependency, you know, but you might have nothing at all to do with", "tokens": [362, 281, 747, 385, 322, 382, 257, 33621, 11, 291, 458, 11, 457, 291, 1062, 362, 1825, 412, 439, 281, 360, 365], "temperature": 0.0, "avg_logprob": -0.20200785568782262, "compression_ratio": 1.7068273092369477, "no_speech_prob": 5.255186351860175e-06}, {"id": 667, "seek": 279168, "start": 2802.16, "end": 2803.16, "text": " my package.", "tokens": [452, 7372, 13], "temperature": 0.0, "avg_logprob": -0.20200785568782262, "compression_ratio": 1.7068273092369477, "no_speech_prob": 5.255186351860175e-06}, {"id": 668, "seek": 279168, "start": 2803.16, "end": 2807.48, "text": " Like, if you want to do animation, you probably don't need to, you know, depend on a data", "tokens": [1743, 11, 498, 291, 528, 281, 360, 9603, 11, 291, 1391, 500, 380, 643, 281, 11, 291, 458, 11, 5672, 322, 257, 1412], "temperature": 0.0, "avg_logprob": -0.20200785568782262, "compression_ratio": 1.7068273092369477, "no_speech_prob": 5.255186351860175e-06}, {"id": 669, "seek": 279168, "start": 2807.48, "end": 2811.7599999999998, "text": " visualization package, like it doesn't make much sense.", "tokens": [25801, 7372, 11, 411, 309, 1177, 380, 652, 709, 2020, 13], "temperature": 0.0, "avg_logprob": -0.20200785568782262, "compression_ratio": 1.7068273092369477, "no_speech_prob": 5.255186351860175e-06}, {"id": 670, "seek": 279168, "start": 2811.7599999999998, "end": 2817.3599999999997, "text": " And so it's kind of beneficial if the community can organize around, around some of these", "tokens": [400, 370, 309, 311, 733, 295, 14072, 498, 264, 1768, 393, 13859, 926, 11, 926, 512, 295, 613], "temperature": 0.0, "avg_logprob": -0.20200785568782262, "compression_ratio": 1.7068273092369477, "no_speech_prob": 5.255186351860175e-06}, {"id": 671, "seek": 281736, "start": 2817.36, "end": 2823.08, "text": " core types that it would be beneficial to share between a bunch of packages and produce", "tokens": [4965, 3467, 300, 309, 576, 312, 14072, 281, 2073, 1296, 257, 3840, 295, 17401, 293, 5258], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 672, "seek": 281736, "start": 2823.08, "end": 2824.7200000000003, "text": " a single package.", "tokens": [257, 2167, 7372, 13], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 673, "seek": 281736, "start": 2824.7200000000003, "end": 2829.84, "text": " And so that's how ElmColor was born, for instance, and one true path was supposed to be that", "tokens": [400, 370, 300, 311, 577, 2699, 76, 34, 36182, 390, 4232, 11, 337, 5197, 11, 293, 472, 2074, 3100, 390, 3442, 281, 312, 300], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 674, "seek": 281736, "start": 2829.84, "end": 2832.2400000000002, "text": " for path information.", "tokens": [337, 3100, 1589, 13], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 675, "seek": 281736, "start": 2832.2400000000002, "end": 2835.1200000000003, "text": " Now I don't think in that case, that totally materialized.", "tokens": [823, 286, 500, 380, 519, 294, 300, 1389, 11, 300, 3879, 2527, 1602, 13], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 676, "seek": 281736, "start": 2835.1200000000003, "end": 2839.28, "text": " I don't think there's other packages that really use it.", "tokens": [286, 500, 380, 519, 456, 311, 661, 17401, 300, 534, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 677, "seek": 281736, "start": 2839.28, "end": 2840.28, "text": " But that was the idea.", "tokens": [583, 300, 390, 264, 1558, 13], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 678, "seek": 281736, "start": 2840.28, "end": 2845.56, "text": " There was a way it's called one true path, because it was meant to be the one path package", "tokens": [821, 390, 257, 636, 309, 311, 1219, 472, 2074, 3100, 11, 570, 309, 390, 4140, 281, 312, 264, 472, 3100, 7372], "temperature": 0.0, "avg_logprob": -0.2802633285522461, "compression_ratio": 1.7509727626459144, "no_speech_prob": 2.225226126029156e-06}, {"id": 679, "seek": 284556, "start": 2845.56, "end": 2849.12, "text": " that was going to unite them all.", "tokens": [300, 390, 516, 281, 29320, 552, 439, 13], "temperature": 0.0, "avg_logprob": -0.25583925002660507, "compression_ratio": 1.646067415730337, "no_speech_prob": 8.315267336911347e-07}, {"id": 680, "seek": 284556, "start": 2849.12, "end": 2853.88, "text": " And so that was the intention there to make the ability to take path data from one package", "tokens": [400, 370, 300, 390, 264, 7789, 456, 281, 652, 264, 3485, 281, 747, 3100, 1412, 490, 472, 7372], "temperature": 0.0, "avg_logprob": -0.25583925002660507, "compression_ratio": 1.646067415730337, "no_speech_prob": 8.315267336911347e-07}, {"id": 681, "seek": 284556, "start": 2853.88, "end": 2857.6, "text": " to another and, and, and share them.", "tokens": [281, 1071, 293, 11, 293, 11, 293, 2073, 552, 13], "temperature": 0.0, "avg_logprob": -0.25583925002660507, "compression_ratio": 1.646067415730337, "no_speech_prob": 8.315267336911347e-07}, {"id": 682, "seek": 284556, "start": 2857.6, "end": 2865.96, "text": " And path data as opposed to like the D element in SVG, which is like, doesn't describe the", "tokens": [400, 3100, 1412, 382, 8851, 281, 411, 264, 413, 4478, 294, 31910, 38, 11, 597, 307, 411, 11, 1177, 380, 6786, 264], "temperature": 0.0, "avg_logprob": -0.25583925002660507, "compression_ratio": 1.646067415730337, "no_speech_prob": 8.315267336911347e-07}, {"id": 683, "seek": 284556, "start": 2865.96, "end": 2869.52, "text": " data, it describes the element directly.", "tokens": [1412, 11, 309, 15626, 264, 4478, 3838, 13], "temperature": 0.0, "avg_logprob": -0.25583925002660507, "compression_ratio": 1.646067415730337, "no_speech_prob": 8.315267336911347e-07}, {"id": 684, "seek": 286952, "start": 2869.52, "end": 2876.92, "text": " So in SVG, you have what's called a path element that takes has an attribute called D, which", "tokens": [407, 294, 31910, 38, 11, 291, 362, 437, 311, 1219, 257, 3100, 4478, 300, 2516, 575, 364, 19667, 1219, 413, 11, 597], "temperature": 0.0, "avg_logprob": -0.2134780143071147, "compression_ratio": 1.646551724137931, "no_speech_prob": 2.964878831335227e-07}, {"id": 685, "seek": 286952, "start": 2876.92, "end": 2882.92, "text": " is super intuitive, which is this, you know, if you look at it, it just looks like a long", "tokens": [307, 1687, 21769, 11, 597, 307, 341, 11, 291, 458, 11, 498, 291, 574, 412, 309, 11, 309, 445, 1542, 411, 257, 938], "temperature": 0.0, "avg_logprob": -0.2134780143071147, "compression_ratio": 1.646551724137931, "no_speech_prob": 2.964878831335227e-07}, {"id": 686, "seek": 286952, "start": 2882.92, "end": 2884.84, "text": " string of mumbo jumbo.", "tokens": [6798, 295, 14697, 1763, 29067, 1763, 13], "temperature": 0.0, "avg_logprob": -0.2134780143071147, "compression_ratio": 1.646551724137931, "no_speech_prob": 2.964878831335227e-07}, {"id": 687, "seek": 286952, "start": 2884.84, "end": 2891.72, "text": " But it's that string is essentially a list, you can think about it as a list of commands.", "tokens": [583, 309, 311, 300, 6798, 307, 4476, 257, 1329, 11, 291, 393, 519, 466, 309, 382, 257, 1329, 295, 16901, 13], "temperature": 0.0, "avg_logprob": -0.2134780143071147, "compression_ratio": 1.646551724137931, "no_speech_prob": 2.964878831335227e-07}, {"id": 688, "seek": 286952, "start": 2891.72, "end": 2896.08, "text": " And each command is like, move over to those coordinates, and then move to those other", "tokens": [400, 1184, 5622, 307, 411, 11, 1286, 670, 281, 729, 21056, 11, 293, 550, 1286, 281, 729, 661], "temperature": 0.0, "avg_logprob": -0.2134780143071147, "compression_ratio": 1.646551724137931, "no_speech_prob": 2.964878831335227e-07}, {"id": 689, "seek": 289608, "start": 2896.08, "end": 2899.7599999999998, "text": " coordinates, but as you move, draw a line, like you can think about it as almost like", "tokens": [21056, 11, 457, 382, 291, 1286, 11, 2642, 257, 1622, 11, 411, 291, 393, 519, 466, 309, 382, 1920, 411], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 690, "seek": 289608, "start": 2899.7599999999998, "end": 2905.92, "text": " a logo drawing program, you know, then go in a circular fashion to this other point,", "tokens": [257, 9699, 6316, 1461, 11, 291, 458, 11, 550, 352, 294, 257, 16476, 6700, 281, 341, 661, 935, 11], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 691, "seek": 289608, "start": 2905.92, "end": 2909.04, "text": " and then like, maybe just complete the shape.", "tokens": [293, 550, 411, 11, 1310, 445, 3566, 264, 3909, 13], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 692, "seek": 289608, "start": 2909.04, "end": 2911.2, "text": " And so you get these these commands.", "tokens": [400, 370, 291, 483, 613, 613, 16901, 13], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 693, "seek": 289608, "start": 2911.2, "end": 2914.4, "text": " And so they describe what we call a path.", "tokens": [400, 370, 436, 6786, 437, 321, 818, 257, 3100, 13], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 694, "seek": 289608, "start": 2914.4, "end": 2917.64, "text": " But essentially, it's sort of a generalized geometry.", "tokens": [583, 4476, 11, 309, 311, 1333, 295, 257, 44498, 18426, 13], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 695, "seek": 289608, "start": 2917.64, "end": 2922.2, "text": " And you can use that for drawing stuff, for instance, but you can also use it as just", "tokens": [400, 291, 393, 764, 300, 337, 6316, 1507, 11, 337, 5197, 11, 457, 291, 393, 611, 764, 309, 382, 445], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 696, "seek": 289608, "start": 2922.2, "end": 2925.94, "text": " a path that someone could take, for instance, in an animation.", "tokens": [257, 3100, 300, 1580, 727, 747, 11, 337, 5197, 11, 294, 364, 9603, 13], "temperature": 0.0, "avg_logprob": -0.24343323340782752, "compression_ratio": 1.7722419928825623, "no_speech_prob": 1.2878851975983707e-06}, {"id": 697, "seek": 292594, "start": 2925.94, "end": 2928.36, "text": " So there's different ways you can interpret it.", "tokens": [407, 456, 311, 819, 2098, 291, 393, 7302, 309, 13], "temperature": 0.0, "avg_logprob": -0.2626543742854421, "compression_ratio": 1.7555555555555555, "no_speech_prob": 4.710897883342113e-06}, {"id": 698, "seek": 292594, "start": 2928.36, "end": 2932.28, "text": " But conceptually, or mathematical calculation or something.", "tokens": [583, 3410, 671, 11, 420, 18894, 17108, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.2626543742854421, "compression_ratio": 1.7555555555555555, "no_speech_prob": 4.710897883342113e-06}, {"id": 699, "seek": 292594, "start": 2932.28, "end": 2935.82, "text": " Yeah, you know, and so that's, that's what we call path data.", "tokens": [865, 11, 291, 458, 11, 293, 370, 300, 311, 11, 300, 311, 437, 321, 818, 3100, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2626543742854421, "compression_ratio": 1.7555555555555555, "no_speech_prob": 4.710897883342113e-06}, {"id": 700, "seek": 292594, "start": 2935.82, "end": 2941.84, "text": " And so Elm visualization has a bunch of different helpers that produce these sort of paths based", "tokens": [400, 370, 2699, 76, 25801, 575, 257, 3840, 295, 819, 854, 433, 300, 5258, 613, 1333, 295, 14518, 2361], "temperature": 0.0, "avg_logprob": -0.2626543742854421, "compression_ratio": 1.7555555555555555, "no_speech_prob": 4.710897883342113e-06}, {"id": 701, "seek": 292594, "start": 2941.84, "end": 2946.68, "text": " on, let's say, you have some abstract data, again, when you can use some scales, and you", "tokens": [322, 11, 718, 311, 584, 11, 291, 362, 512, 12649, 1412, 11, 797, 11, 562, 291, 393, 764, 512, 17408, 11, 293, 291], "temperature": 0.0, "avg_logprob": -0.2626543742854421, "compression_ratio": 1.7555555555555555, "no_speech_prob": 4.710897883342113e-06}, {"id": 702, "seek": 292594, "start": 2946.68, "end": 2948.88, "text": " can turn it into path data.", "tokens": [393, 1261, 309, 666, 3100, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2626543742854421, "compression_ratio": 1.7555555555555555, "no_speech_prob": 4.710897883342113e-06}, {"id": 703, "seek": 292594, "start": 2948.88, "end": 2953.7200000000003, "text": " And then you can either just render it, but you can also potentially animate up, you know,", "tokens": [400, 550, 291, 393, 2139, 445, 15529, 309, 11, 457, 291, 393, 611, 7263, 36439, 493, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.2626543742854421, "compression_ratio": 1.7555555555555555, "no_speech_prob": 4.710897883342113e-06}, {"id": 704, "seek": 295372, "start": 2953.72, "end": 2956.0, "text": " create something based on that data path.", "tokens": [1884, 746, 2361, 322, 300, 1412, 3100, 13], "temperature": 0.0, "avg_logprob": -0.240987548828125, "compression_ratio": 1.756, "no_speech_prob": 5.338109076546971e-06}, {"id": 705, "seek": 295372, "start": 2956.0, "end": 2960.7999999999997, "text": " So you know, it's one of the things you, there's a lot of data visualization libraries that", "tokens": [407, 291, 458, 11, 309, 311, 472, 295, 264, 721, 291, 11, 456, 311, 257, 688, 295, 1412, 25801, 15148, 300], "temperature": 0.0, "avg_logprob": -0.240987548828125, "compression_ratio": 1.756, "no_speech_prob": 5.338109076546971e-06}, {"id": 706, "seek": 295372, "start": 2960.7999999999997, "end": 2965.7599999999998, "text": " have like animation, but it's really like what I would call spurious animation, right?", "tokens": [362, 411, 9603, 11, 457, 309, 311, 534, 411, 437, 286, 576, 818, 637, 24274, 9603, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.240987548828125, "compression_ratio": 1.756, "no_speech_prob": 5.338109076546971e-06}, {"id": 707, "seek": 295372, "start": 2965.7599999999998, "end": 2971.08, "text": " It's like, you open the page and the bars in the bar chart is like, zoom in.", "tokens": [467, 311, 411, 11, 291, 1269, 264, 3028, 293, 264, 10228, 294, 264, 2159, 6927, 307, 411, 11, 8863, 294, 13], "temperature": 0.0, "avg_logprob": -0.240987548828125, "compression_ratio": 1.756, "no_speech_prob": 5.338109076546971e-06}, {"id": 708, "seek": 295372, "start": 2971.08, "end": 2974.9599999999996, "text": " And it's like, Oh, like, okay, it's, I guess, cool.", "tokens": [400, 309, 311, 411, 11, 876, 11, 411, 11, 1392, 11, 309, 311, 11, 286, 2041, 11, 1627, 13], "temperature": 0.0, "avg_logprob": -0.240987548828125, "compression_ratio": 1.756, "no_speech_prob": 5.338109076546971e-06}, {"id": 709, "seek": 295372, "start": 2974.9599999999996, "end": 2979.52, "text": " But I've seen animations before, like, it doesn't, but it's, it doesn't tell you anything", "tokens": [583, 286, 600, 1612, 22868, 949, 11, 411, 11, 309, 1177, 380, 11, 457, 309, 311, 11, 309, 1177, 380, 980, 291, 1340], "temperature": 0.0, "avg_logprob": -0.240987548828125, "compression_ratio": 1.756, "no_speech_prob": 5.338109076546971e-06}, {"id": 710, "seek": 297952, "start": 2979.52, "end": 2984.08, "text": " about the data, you didn't wouldn't know if the animation wasn't there.", "tokens": [466, 264, 1412, 11, 291, 994, 380, 2759, 380, 458, 498, 264, 9603, 2067, 380, 456, 13], "temperature": 0.0, "avg_logprob": -0.21526128154689983, "compression_ratio": 1.7692307692307692, "no_speech_prob": 4.289258868084289e-06}, {"id": 711, "seek": 297952, "start": 2984.08, "end": 2990.72, "text": " But I think there's a lot of opportunities animation in a way that's much more explanatory", "tokens": [583, 286, 519, 456, 311, 257, 688, 295, 4786, 9603, 294, 257, 636, 300, 311, 709, 544, 9045, 4745], "temperature": 0.0, "avg_logprob": -0.21526128154689983, "compression_ratio": 1.7692307692307692, "no_speech_prob": 4.289258868084289e-06}, {"id": 712, "seek": 297952, "start": 2990.72, "end": 2992.52, "text": " and tells you stuff about the data.", "tokens": [293, 5112, 291, 1507, 466, 264, 1412, 13], "temperature": 0.0, "avg_logprob": -0.21526128154689983, "compression_ratio": 1.7692307692307692, "no_speech_prob": 4.289258868084289e-06}, {"id": 713, "seek": 297952, "start": 2992.52, "end": 2994.92, "text": " So I think we have a really cool example about that.", "tokens": [407, 286, 519, 321, 362, 257, 534, 1627, 1365, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.21526128154689983, "compression_ratio": 1.7692307692307692, "no_speech_prob": 4.289258868084289e-06}, {"id": 714, "seek": 297952, "start": 2994.92, "end": 3000.52, "text": " If you look at the bar chart race example on visualization, you know, that's an example", "tokens": [759, 291, 574, 412, 264, 2159, 6927, 4569, 1365, 322, 25801, 11, 291, 458, 11, 300, 311, 364, 1365], "temperature": 0.0, "avg_logprob": -0.21526128154689983, "compression_ratio": 1.7692307692307692, "no_speech_prob": 4.289258868084289e-06}, {"id": 715, "seek": 297952, "start": 3000.52, "end": 3007.7599999999998, "text": " where it's a bar chart, but it's, it's, it grows as time progresses, and then it reorders", "tokens": [689, 309, 311, 257, 2159, 6927, 11, 457, 309, 311, 11, 309, 311, 11, 309, 13156, 382, 565, 41929, 11, 293, 550, 309, 319, 10400], "temperature": 0.0, "avg_logprob": -0.21526128154689983, "compression_ratio": 1.7692307692307692, "no_speech_prob": 4.289258868084289e-06}, {"id": 716, "seek": 297952, "start": 3007.7599999999998, "end": 3008.7599999999998, "text": " itself.", "tokens": [2564, 13], "temperature": 0.0, "avg_logprob": -0.21526128154689983, "compression_ratio": 1.7692307692307692, "no_speech_prob": 4.289258868084289e-06}, {"id": 717, "seek": 300876, "start": 3008.76, "end": 3015.36, "text": " And then kind of the motion tells you how the situation changed over time, you know,", "tokens": [400, 550, 733, 295, 264, 5394, 5112, 291, 577, 264, 2590, 3105, 670, 565, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.2551336048030052, "compression_ratio": 1.7790262172284643, "no_speech_prob": 1.1544485687409178e-06}, {"id": 718, "seek": 300876, "start": 3015.36, "end": 3019.84, "text": " and so it's the animation and the motion is actually telling you things that you couldn't", "tokens": [293, 370, 309, 311, 264, 9603, 293, 264, 5394, 307, 767, 3585, 291, 721, 300, 291, 2809, 380], "temperature": 0.0, "avg_logprob": -0.2551336048030052, "compression_ratio": 1.7790262172284643, "no_speech_prob": 1.1544485687409178e-06}, {"id": 719, "seek": 300876, "start": 3019.84, "end": 3022.0200000000004, "text": " understand if it was just a picture.", "tokens": [1223, 498, 309, 390, 445, 257, 3036, 13], "temperature": 0.0, "avg_logprob": -0.2551336048030052, "compression_ratio": 1.7790262172284643, "no_speech_prob": 1.1544485687409178e-06}, {"id": 720, "seek": 300876, "start": 3022.0200000000004, "end": 3026.5600000000004, "text": " And so I think there's a lot of like opportunity to use these sort of techniques to come up", "tokens": [400, 370, 286, 519, 456, 311, 257, 688, 295, 411, 2650, 281, 764, 613, 1333, 295, 7512, 281, 808, 493], "temperature": 0.0, "avg_logprob": -0.2551336048030052, "compression_ratio": 1.7790262172284643, "no_speech_prob": 1.1544485687409178e-06}, {"id": 721, "seek": 300876, "start": 3026.5600000000004, "end": 3032.0800000000004, "text": " with really intuitive ways to explain data that wouldn't be, you know, wouldn't be possible", "tokens": [365, 534, 21769, 2098, 281, 2903, 1412, 300, 2759, 380, 312, 11, 291, 458, 11, 2759, 380, 312, 1944], "temperature": 0.0, "avg_logprob": -0.2551336048030052, "compression_ratio": 1.7790262172284643, "no_speech_prob": 1.1544485687409178e-06}, {"id": 722, "seek": 300876, "start": 3032.0800000000004, "end": 3035.1600000000003, "text": " if you just didn't have those animation permitted.", "tokens": [498, 291, 445, 994, 380, 362, 729, 9603, 680, 76, 3944, 13], "temperature": 0.0, "avg_logprob": -0.2551336048030052, "compression_ratio": 1.7790262172284643, "no_speech_prob": 1.1544485687409178e-06}, {"id": 723, "seek": 300876, "start": 3035.1600000000003, "end": 3036.28, "text": " So that's my hope with that.", "tokens": [407, 300, 311, 452, 1454, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.2551336048030052, "compression_ratio": 1.7790262172284643, "no_speech_prob": 1.1544485687409178e-06}, {"id": 724, "seek": 303628, "start": 3036.28, "end": 3040.4, "text": " It didn't, it didn't totally pan out in the sense that I don't think other packages totally", "tokens": [467, 994, 380, 11, 309, 994, 380, 3879, 2462, 484, 294, 264, 2020, 300, 286, 500, 380, 519, 661, 17401, 3879], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 725, "seek": 303628, "start": 3040.4, "end": 3041.4, "text": " adopted it.", "tokens": [12175, 309, 13], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 726, "seek": 303628, "start": 3041.4, "end": 3044.6000000000004, "text": " But, but, hey, it's still there.", "tokens": [583, 11, 457, 11, 4177, 11, 309, 311, 920, 456, 13], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 727, "seek": 303628, "start": 3044.6000000000004, "end": 3047.0, "text": " So yeah, no, that's, that's great.", "tokens": [407, 1338, 11, 572, 11, 300, 311, 11, 300, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 728, "seek": 303628, "start": 3047.0, "end": 3048.0, "text": " That's great context.", "tokens": [663, 311, 869, 4319, 13], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 729, "seek": 303628, "start": 3048.0, "end": 3050.5600000000004, "text": " I think, for me, at least it helps.", "tokens": [286, 519, 11, 337, 385, 11, 412, 1935, 309, 3665, 13], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 730, "seek": 303628, "start": 3050.5600000000004, "end": 3054.84, "text": " It helps me when I understand like the motivation for why a package came into existence.", "tokens": [467, 3665, 385, 562, 286, 1223, 411, 264, 12335, 337, 983, 257, 7372, 1361, 666, 9123, 13], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 731, "seek": 303628, "start": 3054.84, "end": 3058.28, "text": " It helps me when I'm trying to use it to understand that context.", "tokens": [467, 3665, 385, 562, 286, 478, 1382, 281, 764, 309, 281, 1223, 300, 4319, 13], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 732, "seek": 303628, "start": 3058.28, "end": 3064.4, "text": " So other philosophy we have in on visualization is that, well, you might have noticed it's", "tokens": [407, 661, 10675, 321, 362, 294, 322, 25801, 307, 300, 11, 731, 11, 291, 1062, 362, 5694, 309, 311], "temperature": 0.0, "avg_logprob": -0.2881369519589552, "compression_ratio": 1.7857142857142858, "no_speech_prob": 2.994414217027952e-06}, {"id": 733, "seek": 306440, "start": 3064.4, "end": 3070.52, "text": " still on version 2.4 and the major version is only two.", "tokens": [920, 322, 3037, 568, 13, 19, 293, 264, 2563, 3037, 307, 787, 732, 13], "temperature": 0.0, "avg_logprob": -0.2381675442059835, "compression_ratio": 1.576036866359447, "no_speech_prob": 2.9478817396011436e-06}, {"id": 734, "seek": 306440, "start": 3070.52, "end": 3077.0, "text": " And the only reason we made the second major version was that Elm 0.19 came out and broke", "tokens": [400, 264, 787, 1778, 321, 1027, 264, 1150, 2563, 3037, 390, 300, 2699, 76, 1958, 13, 3405, 1361, 484, 293, 6902], "temperature": 0.0, "avg_logprob": -0.2381675442059835, "compression_ratio": 1.576036866359447, "no_speech_prob": 2.9478817396011436e-06}, {"id": 735, "seek": 306440, "start": 3077.0, "end": 3080.36, "text": " pretty much everything.", "tokens": [1238, 709, 1203, 13], "temperature": 0.0, "avg_logprob": -0.2381675442059835, "compression_ratio": 1.576036866359447, "no_speech_prob": 2.9478817396011436e-06}, {"id": 736, "seek": 306440, "start": 3080.36, "end": 3085.96, "text": " And so we had really no choice but to just, you know, redesign a bunch of stuff.", "tokens": [400, 370, 321, 632, 534, 572, 3922, 457, 281, 445, 11, 291, 458, 11, 39853, 257, 3840, 295, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2381675442059835, "compression_ratio": 1.576036866359447, "no_speech_prob": 2.9478817396011436e-06}, {"id": 737, "seek": 306440, "start": 3085.96, "end": 3091.48, "text": " Like for instance, you might not remember this, but color used to be in Elm core, you", "tokens": [1743, 337, 5197, 11, 291, 1062, 406, 1604, 341, 11, 457, 2017, 1143, 281, 312, 294, 2699, 76, 4965, 11, 291], "temperature": 0.0, "avg_logprob": -0.2381675442059835, "compression_ratio": 1.576036866359447, "no_speech_prob": 2.9478817396011436e-06}, {"id": 738, "seek": 306440, "start": 3091.48, "end": 3092.48, "text": " know?", "tokens": [458, 30], "temperature": 0.0, "avg_logprob": -0.2381675442059835, "compression_ratio": 1.576036866359447, "no_speech_prob": 2.9478817396011436e-06}, {"id": 739, "seek": 309248, "start": 3092.48, "end": 3095.16, "text": " And then time worked completely differently.", "tokens": [400, 550, 565, 2732, 2584, 7614, 13], "temperature": 0.0, "avg_logprob": -0.2472637084222609, "compression_ratio": 1.6134751773049645, "no_speech_prob": 7.810780857653299e-07}, {"id": 740, "seek": 309248, "start": 3095.16, "end": 3098.2400000000002, "text": " So Elm visualization, those are pretty important types for us.", "tokens": [407, 2699, 76, 25801, 11, 729, 366, 1238, 1021, 3467, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.2472637084222609, "compression_ratio": 1.6134751773049645, "no_speech_prob": 7.810780857653299e-07}, {"id": 741, "seek": 309248, "start": 3098.2400000000002, "end": 3100.32, "text": " We do a lot with times and colors.", "tokens": [492, 360, 257, 688, 365, 1413, 293, 4577, 13], "temperature": 0.0, "avg_logprob": -0.2472637084222609, "compression_ratio": 1.6134751773049645, "no_speech_prob": 7.810780857653299e-07}, {"id": 742, "seek": 309248, "start": 3100.32, "end": 3105.64, "text": " So that was, yeah, that was, so that was, and while we're going to do a big breaking", "tokens": [407, 300, 390, 11, 1338, 11, 300, 390, 11, 370, 300, 390, 11, 293, 1339, 321, 434, 516, 281, 360, 257, 955, 7697], "temperature": 0.0, "avg_logprob": -0.2472637084222609, "compression_ratio": 1.6134751773049645, "no_speech_prob": 7.810780857653299e-07}, {"id": 743, "seek": 309248, "start": 3105.64, "end": 3108.96, "text": " change, I fixed a bunch of like design flaws and so on.", "tokens": [1319, 11, 286, 6806, 257, 3840, 295, 411, 1715, 27108, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.2472637084222609, "compression_ratio": 1.6134751773049645, "no_speech_prob": 7.810780857653299e-07}, {"id": 744, "seek": 309248, "start": 3108.96, "end": 3114.46, "text": " But you know, the, the main aim here is to keep it as backward compatible as we can.", "tokens": [583, 291, 458, 11, 264, 11, 264, 2135, 5939, 510, 307, 281, 1066, 309, 382, 23897, 18218, 382, 321, 393, 13], "temperature": 0.0, "avg_logprob": -0.2472637084222609, "compression_ratio": 1.6134751773049645, "no_speech_prob": 7.810780857653299e-07}, {"id": 745, "seek": 309248, "start": 3114.46, "end": 3119.68, "text": " So some of these things, like, I think if I was designing it today, maybe I would have", "tokens": [407, 512, 295, 613, 721, 11, 411, 11, 286, 519, 498, 286, 390, 14685, 309, 965, 11, 1310, 286, 576, 362], "temperature": 0.0, "avg_logprob": -0.2472637084222609, "compression_ratio": 1.6134751773049645, "no_speech_prob": 7.810780857653299e-07}, {"id": 746, "seek": 311968, "start": 3119.68, "end": 3123.48, "text": " come up with a slightly, maybe it would have made a different package for path or something", "tokens": [808, 493, 365, 257, 4748, 11, 1310, 309, 576, 362, 1027, 257, 819, 7372, 337, 3100, 420, 746], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 747, "seek": 311968, "start": 3123.48, "end": 3124.48, "text": " like that.", "tokens": [411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 748, "seek": 311968, "start": 3124.48, "end": 3130.6, "text": " But, but it's, it works well and it's, it doesn't, I don't feel like we need to break.", "tokens": [583, 11, 457, 309, 311, 11, 309, 1985, 731, 293, 309, 311, 11, 309, 1177, 380, 11, 286, 500, 380, 841, 411, 321, 643, 281, 1821, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 749, "seek": 311968, "start": 3130.6, "end": 3134.56, "text": " It's not bad in a way that we should break anyone's code for it.", "tokens": [467, 311, 406, 1578, 294, 257, 636, 300, 321, 820, 1821, 2878, 311, 3089, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 750, "seek": 311968, "start": 3134.56, "end": 3136.56, "text": " Like it works really well, actually.", "tokens": [1743, 309, 1985, 534, 731, 11, 767, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 751, "seek": 311968, "start": 3136.56, "end": 3137.56, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 752, "seek": 311968, "start": 3137.56, "end": 3138.56, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 753, "seek": 311968, "start": 3138.56, "end": 3139.56, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 754, "seek": 311968, "start": 3139.56, "end": 3141.3999999999996, "text": " And, and you recently released a new version.", "tokens": [400, 11, 293, 291, 3938, 4736, 257, 777, 3037, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 755, "seek": 311968, "start": 3141.3999999999996, "end": 3143.7999999999997, "text": " What are, what are the highlights from the new version?", "tokens": [708, 366, 11, 437, 366, 264, 14254, 490, 264, 777, 3037, 30], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 756, "seek": 311968, "start": 3143.7999999999997, "end": 3149.3999999999996, "text": " So the main highlight, as I mentioned, is the ability to do these kinds of tree visualizations.", "tokens": [407, 264, 2135, 5078, 11, 382, 286, 2835, 11, 307, 264, 3485, 281, 360, 613, 3685, 295, 4230, 5056, 14455, 13], "temperature": 0.0, "avg_logprob": -0.2377327696917808, "compression_ratio": 1.681063122923588, "no_speech_prob": 8.446117476523796e-07}, {"id": 757, "seek": 314940, "start": 3149.4, "end": 3155.6, "text": " So you can really, there's three ways you can lay out trees that we support now.", "tokens": [407, 291, 393, 534, 11, 456, 311, 1045, 2098, 291, 393, 2360, 484, 5852, 300, 321, 1406, 586, 13], "temperature": 0.0, "avg_logprob": -0.24615847736323646, "compression_ratio": 1.7280334728033473, "no_speech_prob": 2.2602712306252215e-06}, {"id": 758, "seek": 314940, "start": 3155.6, "end": 3161.2400000000002, "text": " So one is allows you to do kind of what we call sometimes node link diagrams, but you", "tokens": [407, 472, 307, 4045, 291, 281, 360, 733, 295, 437, 321, 818, 2171, 9984, 2113, 36709, 11, 457, 291], "temperature": 0.0, "avg_logprob": -0.24615847736323646, "compression_ratio": 1.7280334728033473, "no_speech_prob": 2.2602712306252215e-06}, {"id": 759, "seek": 314940, "start": 3161.2400000000002, "end": 3167.6800000000003, "text": " can think of it as somebody told you, like, can you draw me a tree on a, on a whiteboard?", "tokens": [393, 519, 295, 309, 382, 2618, 1907, 291, 11, 411, 11, 393, 291, 2642, 385, 257, 4230, 322, 257, 11, 322, 257, 2418, 3787, 30], "temperature": 0.0, "avg_logprob": -0.24615847736323646, "compression_ratio": 1.7280334728033473, "no_speech_prob": 2.2602712306252215e-06}, {"id": 760, "seek": 314940, "start": 3167.6800000000003, "end": 3169.36, "text": " That's what you would probably produce.", "tokens": [663, 311, 437, 291, 576, 1391, 5258, 13], "temperature": 0.0, "avg_logprob": -0.24615847736323646, "compression_ratio": 1.7280334728033473, "no_speech_prob": 2.2602712306252215e-06}, {"id": 761, "seek": 314940, "start": 3169.36, "end": 3172.2400000000002, "text": " Like you would draw boxes and you would draw lines between them.", "tokens": [1743, 291, 576, 2642, 9002, 293, 291, 576, 2642, 3876, 1296, 552, 13], "temperature": 0.0, "avg_logprob": -0.24615847736323646, "compression_ratio": 1.7280334728033473, "no_speech_prob": 2.2602712306252215e-06}, {"id": 762, "seek": 314940, "start": 3172.2400000000002, "end": 3174.84, "text": " And that would be how you would visualize the tree.", "tokens": [400, 300, 576, 312, 577, 291, 576, 23273, 264, 4230, 13], "temperature": 0.0, "avg_logprob": -0.24615847736323646, "compression_ratio": 1.7280334728033473, "no_speech_prob": 2.2602712306252215e-06}, {"id": 763, "seek": 317484, "start": 3174.84, "end": 3179.56, "text": " Now to do that, to look nice is actually tricky and there are some aesthetic rules that you", "tokens": [823, 281, 360, 300, 11, 281, 574, 1481, 307, 767, 12414, 293, 456, 366, 512, 20092, 4474, 300, 291], "temperature": 0.0, "avg_logprob": -0.23452859265463694, "compression_ratio": 1.8127659574468085, "no_speech_prob": 1.4144386568659684e-06}, {"id": 764, "seek": 317484, "start": 3179.56, "end": 3182.8, "text": " can apply to make things, you know, look nice.", "tokens": [393, 3079, 281, 652, 721, 11, 291, 458, 11, 574, 1481, 13], "temperature": 0.0, "avg_logprob": -0.23452859265463694, "compression_ratio": 1.8127659574468085, "no_speech_prob": 1.4144386568659684e-06}, {"id": 765, "seek": 317484, "start": 3182.8, "end": 3186.48, "text": " Like the tree shouldn't be, should be kind of look kind of balanced.", "tokens": [1743, 264, 4230, 4659, 380, 312, 11, 820, 312, 733, 295, 574, 733, 295, 13902, 13], "temperature": 0.0, "avg_logprob": -0.23452859265463694, "compression_ratio": 1.8127659574468085, "no_speech_prob": 1.4144386568659684e-06}, {"id": 766, "seek": 317484, "start": 3186.48, "end": 3191.28, "text": " Like ideally the root of the tree should sort of be in the middle-ish and so on.", "tokens": [1743, 22915, 264, 5593, 295, 264, 4230, 820, 1333, 295, 312, 294, 264, 2808, 12, 742, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.23452859265463694, "compression_ratio": 1.8127659574468085, "no_speech_prob": 1.4144386568659684e-06}, {"id": 767, "seek": 317484, "start": 3191.28, "end": 3195.28, "text": " And things should be kind of neatly done.", "tokens": [400, 721, 820, 312, 733, 295, 36634, 1096, 13], "temperature": 0.0, "avg_logprob": -0.23452859265463694, "compression_ratio": 1.8127659574468085, "no_speech_prob": 1.4144386568659684e-06}, {"id": 768, "seek": 317484, "start": 3195.28, "end": 3201.8, "text": " One of the cool things we support is there's distinction between layered and non-layered", "tokens": [1485, 295, 264, 1627, 721, 321, 1406, 307, 456, 311, 16844, 1296, 34666, 293, 2107, 12, 8376, 4073], "temperature": 0.0, "avg_logprob": -0.23452859265463694, "compression_ratio": 1.8127659574468085, "no_speech_prob": 1.4144386568659684e-06}, {"id": 769, "seek": 317484, "start": 3201.8, "end": 3202.88, "text": " trees.", "tokens": [5852, 13], "temperature": 0.0, "avg_logprob": -0.23452859265463694, "compression_ratio": 1.8127659574468085, "no_speech_prob": 1.4144386568659684e-06}, {"id": 770, "seek": 320288, "start": 3202.88, "end": 3210.28, "text": " So what that means is if you have the nodes in the trees, I can have different sizes.", "tokens": [407, 437, 300, 1355, 307, 498, 291, 362, 264, 13891, 294, 264, 5852, 11, 286, 393, 362, 819, 11602, 13], "temperature": 0.0, "avg_logprob": -0.2783366805272745, "compression_ratio": 1.8917910447761195, "no_speech_prob": 1.0348155683459481e-06}, {"id": 771, "seek": 320288, "start": 3210.28, "end": 3214.84, "text": " And so if, if you have, if you have that property, then you have to make a decision.", "tokens": [400, 370, 498, 11, 498, 291, 362, 11, 498, 291, 362, 300, 4707, 11, 550, 291, 362, 281, 652, 257, 3537, 13], "temperature": 0.0, "avg_logprob": -0.2783366805272745, "compression_ratio": 1.8917910447761195, "no_speech_prob": 1.0348155683459481e-06}, {"id": 772, "seek": 320288, "start": 3214.84, "end": 3221.12, "text": " Are you going to make the tree such that every layer of the tree by layer, I mean here, like", "tokens": [2014, 291, 516, 281, 652, 264, 4230, 1270, 300, 633, 4583, 295, 264, 4230, 538, 4583, 11, 286, 914, 510, 11, 411], "temperature": 0.0, "avg_logprob": -0.2783366805272745, "compression_ratio": 1.8917910447761195, "no_speech_prob": 1.0348155683459481e-06}, {"id": 773, "seek": 320288, "start": 3221.12, "end": 3223.12, "text": " think of like a rank in an army, right?", "tokens": [519, 295, 411, 257, 6181, 294, 364, 7267, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2783366805272745, "compression_ratio": 1.8917910447761195, "no_speech_prob": 1.0348155683459481e-06}, {"id": 774, "seek": 320288, "start": 3223.12, "end": 3226.52, "text": " Like if you have units, then like all the generals, you would want to line them up and", "tokens": [1743, 498, 291, 362, 6815, 11, 550, 411, 439, 264, 41346, 11, 291, 576, 528, 281, 1622, 552, 493, 293], "temperature": 0.0, "avg_logprob": -0.2783366805272745, "compression_ratio": 1.8917910447761195, "no_speech_prob": 1.0348155683459481e-06}, {"id": 775, "seek": 320288, "start": 3226.52, "end": 3229.52, "text": " all the lieutenants you want to line them up and colonels.", "tokens": [439, 264, 4544, 7886, 1719, 291, 528, 281, 1622, 552, 493, 293, 8255, 1625, 13], "temperature": 0.0, "avg_logprob": -0.2783366805272745, "compression_ratio": 1.8917910447761195, "no_speech_prob": 1.0348155683459481e-06}, {"id": 776, "seek": 320288, "start": 3229.52, "end": 3232.6400000000003, "text": " And I don't know, I have no actually idea how ranks work.", "tokens": [400, 286, 500, 380, 458, 11, 286, 362, 572, 767, 1558, 577, 21406, 589, 13], "temperature": 0.0, "avg_logprob": -0.2783366805272745, "compression_ratio": 1.8917910447761195, "no_speech_prob": 1.0348155683459481e-06}, {"id": 777, "seek": 323264, "start": 3232.64, "end": 3239.3199999999997, "text": " You would want to draw it in that sort of way where they all like end up being, you", "tokens": [509, 576, 528, 281, 2642, 309, 294, 300, 1333, 295, 636, 689, 436, 439, 411, 917, 493, 885, 11, 291], "temperature": 0.0, "avg_logprob": -0.23564774450594492, "compression_ratio": 1.7413793103448276, "no_speech_prob": 1.6027719311750843e-06}, {"id": 778, "seek": 323264, "start": 3239.3199999999997, "end": 3242.92, "text": " know, at the same level to show that they're the same rank.", "tokens": [458, 11, 412, 264, 912, 1496, 281, 855, 300, 436, 434, 264, 912, 6181, 13], "temperature": 0.0, "avg_logprob": -0.23564774450594492, "compression_ratio": 1.7413793103448276, "no_speech_prob": 1.6027719311750843e-06}, {"id": 779, "seek": 323264, "start": 3242.92, "end": 3246.16, "text": " But like if you, so then you would say like, I want to draw it layered and that's going", "tokens": [583, 411, 498, 291, 11, 370, 550, 291, 576, 584, 411, 11, 286, 528, 281, 2642, 309, 34666, 293, 300, 311, 516], "temperature": 0.0, "avg_logprob": -0.23564774450594492, "compression_ratio": 1.7413793103448276, "no_speech_prob": 1.6027719311750843e-06}, {"id": 780, "seek": 323264, "start": 3246.16, "end": 3250.68, "text": " to take you more space because you actually have to, you can't squeeze stuff into the", "tokens": [281, 747, 291, 544, 1901, 570, 291, 767, 362, 281, 11, 291, 393, 380, 13578, 1507, 666, 264], "temperature": 0.0, "avg_logprob": -0.23564774450594492, "compression_ratio": 1.7413793103448276, "no_speech_prob": 1.6027719311750843e-06}, {"id": 781, "seek": 323264, "start": 3250.68, "end": 3251.7999999999997, "text": " gaps otherwise.", "tokens": [15031, 5911, 13], "temperature": 0.0, "avg_logprob": -0.23564774450594492, "compression_ratio": 1.7413793103448276, "no_speech_prob": 1.6027719311750843e-06}, {"id": 782, "seek": 323264, "start": 3251.7999999999997, "end": 3255.7599999999998, "text": " But if you don't care about this property, then we support the non-layered, which is", "tokens": [583, 498, 291, 500, 380, 1127, 466, 341, 4707, 11, 550, 321, 1406, 264, 2107, 12, 8376, 4073, 11, 597, 307], "temperature": 0.0, "avg_logprob": -0.23564774450594492, "compression_ratio": 1.7413793103448276, "no_speech_prob": 1.6027719311750843e-06}, {"id": 783, "seek": 323264, "start": 3255.7599999999998, "end": 3261.16, "text": " much more computationally tricky to do, but it allows you to, to, to kind of take, you", "tokens": [709, 544, 24903, 379, 12414, 281, 360, 11, 457, 309, 4045, 291, 281, 11, 281, 11, 281, 733, 295, 747, 11, 291], "temperature": 0.0, "avg_logprob": -0.23564774450594492, "compression_ratio": 1.7413793103448276, "no_speech_prob": 1.6027719311750843e-06}, {"id": 784, "seek": 326116, "start": 3261.16, "end": 3264.96, "text": " know, if you have a really tall element, we can squeeze a whole sub tree in the space", "tokens": [458, 11, 498, 291, 362, 257, 534, 6764, 4478, 11, 321, 393, 13578, 257, 1379, 1422, 4230, 294, 264, 1901], "temperature": 0.0, "avg_logprob": -0.24163940217759874, "compression_ratio": 1.6549019607843136, "no_speech_prob": 8.99086785466352e-07}, {"id": 785, "seek": 326116, "start": 3264.96, "end": 3265.96, "text": " that it leaves.", "tokens": [300, 309, 5510, 13], "temperature": 0.0, "avg_logprob": -0.24163940217759874, "compression_ratio": 1.6549019607843136, "no_speech_prob": 8.99086785466352e-07}, {"id": 786, "seek": 326116, "start": 3265.96, "end": 3269.8399999999997, "text": " So you end up with these really compact, but quite nice looking layouts.", "tokens": [407, 291, 917, 493, 365, 613, 534, 14679, 11, 457, 1596, 1481, 1237, 46100, 13], "temperature": 0.0, "avg_logprob": -0.24163940217759874, "compression_ratio": 1.6549019607843136, "no_speech_prob": 8.99086785466352e-07}, {"id": 787, "seek": 326116, "start": 3269.8399999999997, "end": 3273.7999999999997, "text": " So that was a lot of fun to build.", "tokens": [407, 300, 390, 257, 688, 295, 1019, 281, 1322, 13], "temperature": 0.0, "avg_logprob": -0.24163940217759874, "compression_ratio": 1.6549019607843136, "no_speech_prob": 8.99086785466352e-07}, {"id": 788, "seek": 326116, "start": 3273.7999999999997, "end": 3277.68, "text": " Then tree maps, tree maps.", "tokens": [1396, 4230, 11317, 11, 4230, 11317, 13], "temperature": 0.0, "avg_logprob": -0.24163940217759874, "compression_ratio": 1.6549019607843136, "no_speech_prob": 8.99086785466352e-07}, {"id": 789, "seek": 326116, "start": 3277.68, "end": 3283.64, "text": " If you're not familiar with that is basically you take some sort of space, like a rectangle", "tokens": [759, 291, 434, 406, 4963, 365, 300, 307, 1936, 291, 747, 512, 1333, 295, 1901, 11, 411, 257, 21930], "temperature": 0.0, "avg_logprob": -0.24163940217759874, "compression_ratio": 1.6549019607843136, "no_speech_prob": 8.99086785466352e-07}, {"id": 790, "seek": 326116, "start": 3283.64, "end": 3288.8799999999997, "text": " and you start dividing it based on the structure of the tree and some quantitative variables.", "tokens": [293, 291, 722, 26764, 309, 2361, 322, 264, 3877, 295, 264, 4230, 293, 512, 27778, 9102, 13], "temperature": 0.0, "avg_logprob": -0.24163940217759874, "compression_ratio": 1.6549019607843136, "no_speech_prob": 8.99086785466352e-07}, {"id": 791, "seek": 328888, "start": 3288.88, "end": 3293.56, "text": " So like that's great way how to use that is there's tools and there's tools out there", "tokens": [407, 411, 300, 311, 869, 636, 577, 281, 764, 300, 307, 456, 311, 3873, 293, 456, 311, 3873, 484, 456], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 792, "seek": 328888, "start": 3293.56, "end": 3294.56, "text": " that do this.", "tokens": [300, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 793, "seek": 328888, "start": 3294.56, "end": 3299.32, "text": " If you are running out of space on your computer, you can use a tool that will produce a tree", "tokens": [759, 291, 366, 2614, 484, 295, 1901, 322, 428, 3820, 11, 291, 393, 764, 257, 2290, 300, 486, 5258, 257, 4230], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 794, "seek": 328888, "start": 3299.32, "end": 3301.1600000000003, "text": " map of your hard drive.", "tokens": [4471, 295, 428, 1152, 3332, 13], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 795, "seek": 328888, "start": 3301.1600000000003, "end": 3304.04, "text": " And then you can see which directory is which size.", "tokens": [400, 550, 291, 393, 536, 597, 21120, 307, 597, 2744, 13], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 796, "seek": 328888, "start": 3304.04, "end": 3308.08, "text": " And you immediately see, Oh, there's that weird directory in my downloads file that", "tokens": [400, 291, 4258, 536, 11, 876, 11, 456, 311, 300, 3657, 21120, 294, 452, 36553, 3991, 300], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 797, "seek": 328888, "start": 3308.08, "end": 3313.7200000000003, "text": " has like 10, 10 gig films in it that I'm never going to watch.", "tokens": [575, 411, 1266, 11, 1266, 8741, 7796, 294, 309, 300, 286, 478, 1128, 516, 281, 1159, 13], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 798, "seek": 328888, "start": 3313.7200000000003, "end": 3317.28, "text": " You can immediately see this is, I'm going to like save space.", "tokens": [509, 393, 4258, 536, 341, 307, 11, 286, 478, 516, 281, 411, 3155, 1901, 13], "temperature": 0.0, "avg_logprob": -0.2409356287283491, "compression_ratio": 1.8352490421455938, "no_speech_prob": 2.225248181275674e-06}, {"id": 799, "seek": 331728, "start": 3317.28, "end": 3321.7200000000003, "text": " Whereas if you were just looking through some other way of showing your file system, you", "tokens": [13813, 498, 291, 645, 445, 1237, 807, 512, 661, 636, 295, 4099, 428, 3991, 1185, 11, 291], "temperature": 0.0, "avg_logprob": -0.288529786196622, "compression_ratio": 1.5514018691588785, "no_speech_prob": 5.804971578982077e-07}, {"id": 800, "seek": 331728, "start": 3321.7200000000003, "end": 3324.5600000000004, "text": " would never find that.", "tokens": [576, 1128, 915, 300, 13], "temperature": 0.0, "avg_logprob": -0.288529786196622, "compression_ratio": 1.5514018691588785, "no_speech_prob": 5.804971578982077e-07}, {"id": 801, "seek": 331728, "start": 3324.5600000000004, "end": 3326.84, "text": " Or JavaScript bundle sizes as well.", "tokens": [1610, 15778, 24438, 11602, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.288529786196622, "compression_ratio": 1.5514018691588785, "no_speech_prob": 5.804971578982077e-07}, {"id": 802, "seek": 331728, "start": 3326.84, "end": 3332.4, "text": " Yes, that's a perfect, perfect example as well.", "tokens": [1079, 11, 300, 311, 257, 2176, 11, 2176, 1365, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.288529786196622, "compression_ratio": 1.5514018691588785, "no_speech_prob": 5.804971578982077e-07}, {"id": 803, "seek": 331728, "start": 3332.4, "end": 3333.4, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.288529786196622, "compression_ratio": 1.5514018691588785, "no_speech_prob": 5.804971578982077e-07}, {"id": 804, "seek": 331728, "start": 3333.4, "end": 3339.44, "text": " And then the last one is kind of what we call a partition layout, which is kind of like", "tokens": [400, 550, 264, 1036, 472, 307, 733, 295, 437, 321, 818, 257, 24808, 13333, 11, 597, 307, 733, 295, 411], "temperature": 0.0, "avg_logprob": -0.288529786196622, "compression_ratio": 1.5514018691588785, "no_speech_prob": 5.804971578982077e-07}, {"id": 805, "seek": 331728, "start": 3339.44, "end": 3341.7000000000003, "text": " a one dimensional version of the tree map.", "tokens": [257, 472, 18795, 3037, 295, 264, 4230, 4471, 13], "temperature": 0.0, "avg_logprob": -0.288529786196622, "compression_ratio": 1.5514018691588785, "no_speech_prob": 5.804971578982077e-07}, {"id": 806, "seek": 334170, "start": 3341.7, "end": 3348.3199999999997, "text": " So it just divides each layer successively into smaller pieces in kind of like a rectangular", "tokens": [407, 309, 445, 41347, 1184, 4583, 2245, 3413, 666, 4356, 3755, 294, 733, 295, 411, 257, 31167], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 807, "seek": 334170, "start": 3348.3199999999997, "end": 3349.8799999999997, "text": " fashion.", "tokens": [6700, 13], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 808, "seek": 334170, "start": 3349.8799999999997, "end": 3353.52, "text": " And you can like one of the really attractive things you can do with that is what's called", "tokens": [400, 291, 393, 411, 472, 295, 264, 534, 12609, 721, 291, 393, 360, 365, 300, 307, 437, 311, 1219], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 809, "seek": 334170, "start": 3353.52, "end": 3355.6, "text": " a sunburst visualization.", "tokens": [257, 3295, 46239, 25801, 13], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 810, "seek": 334170, "start": 3355.6, "end": 3358.6, "text": " So you do that, but you arrange them in a circular fashion.", "tokens": [407, 291, 360, 300, 11, 457, 291, 9424, 552, 294, 257, 16476, 6700, 13], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 811, "seek": 334170, "start": 3358.6, "end": 3363.96, "text": " And so the circle is kind of split up and you kind of go into the little branches of", "tokens": [400, 370, 264, 6329, 307, 733, 295, 7472, 493, 293, 291, 733, 295, 352, 666, 264, 707, 14770, 295], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 812, "seek": 334170, "start": 3363.96, "end": 3367.4399999999996, "text": " the tree going from the center outwards.", "tokens": [264, 4230, 516, 490, 264, 3056, 484, 2015, 13], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 813, "seek": 334170, "start": 3367.4399999999996, "end": 3371.3999999999996, "text": " And so that's quite an attractive layout, I think personally.", "tokens": [400, 370, 300, 311, 1596, 364, 12609, 13333, 11, 286, 519, 5665, 13], "temperature": 0.0, "avg_logprob": -0.2406566882955617, "compression_ratio": 1.7518796992481203, "no_speech_prob": 4.936922323395265e-06}, {"id": 814, "seek": 337140, "start": 3371.4, "end": 3373.2000000000003, "text": " So you can do stuff like that.", "tokens": [407, 291, 393, 360, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.26948061856356537, "compression_ratio": 1.6586345381526104, "no_speech_prob": 3.3931314646906685e-06}, {"id": 815, "seek": 337140, "start": 3373.2000000000003, "end": 3377.64, "text": " And by the way, we'll link to the release notes, which have really good visuals of all", "tokens": [400, 538, 264, 636, 11, 321, 603, 2113, 281, 264, 4374, 5570, 11, 597, 362, 534, 665, 26035, 295, 439], "temperature": 0.0, "avg_logprob": -0.26948061856356537, "compression_ratio": 1.6586345381526104, "no_speech_prob": 3.3931314646906685e-06}, {"id": 816, "seek": 337140, "start": 3377.64, "end": 3378.64, "text": " these.", "tokens": [613, 13], "temperature": 0.0, "avg_logprob": -0.26948061856356537, "compression_ratio": 1.6586345381526104, "no_speech_prob": 3.3931314646906685e-06}, {"id": 817, "seek": 337140, "start": 3378.64, "end": 3383.1600000000003, "text": " Yeah, I mean, the other big thing is, is the tutorial that we mentioned that for me, at", "tokens": [865, 11, 286, 914, 11, 264, 661, 955, 551, 307, 11, 307, 264, 7073, 300, 321, 2835, 300, 337, 385, 11, 412], "temperature": 0.0, "avg_logprob": -0.26948061856356537, "compression_ratio": 1.6586345381526104, "no_speech_prob": 3.3931314646906685e-06}, {"id": 818, "seek": 337140, "start": 3383.1600000000003, "end": 3389.36, "text": " least personally was the hardest game about this release.", "tokens": [1935, 5665, 390, 264, 13158, 1216, 466, 341, 4374, 13], "temperature": 0.0, "avg_logprob": -0.26948061856356537, "compression_ratio": 1.6586345381526104, "no_speech_prob": 3.3931314646906685e-06}, {"id": 819, "seek": 337140, "start": 3389.36, "end": 3393.48, "text": " And then, yeah, then there's actually some really nice, just new examples.", "tokens": [400, 550, 11, 1338, 11, 550, 456, 311, 767, 512, 534, 1481, 11, 445, 777, 5110, 13], "temperature": 0.0, "avg_logprob": -0.26948061856356537, "compression_ratio": 1.6586345381526104, "no_speech_prob": 3.3931314646906685e-06}, {"id": 820, "seek": 337140, "start": 3393.48, "end": 3397.32, "text": " So I always try to release a couple more examples to do some stuff.", "tokens": [407, 286, 1009, 853, 281, 4374, 257, 1916, 544, 5110, 281, 360, 512, 1507, 13], "temperature": 0.0, "avg_logprob": -0.26948061856356537, "compression_ratio": 1.6586345381526104, "no_speech_prob": 3.3931314646906685e-06}, {"id": 821, "seek": 339732, "start": 3397.32, "end": 3406.0, "text": " I really recommend people looking at the weather radio one, which shows you the weather pattern", "tokens": [286, 534, 2748, 561, 1237, 412, 264, 5503, 6477, 472, 11, 597, 3110, 291, 264, 5503, 5102], "temperature": 0.0, "avg_logprob": -0.2876630109899184, "compression_ratio": 1.7309417040358743, "no_speech_prob": 3.9667493183515035e-06}, {"id": 822, "seek": 339732, "start": 3406.0, "end": 3408.92, "text": " for a whole year in a particular location.", "tokens": [337, 257, 1379, 1064, 294, 257, 1729, 4914, 13], "temperature": 0.0, "avg_logprob": -0.2876630109899184, "compression_ratio": 1.7309417040358743, "no_speech_prob": 3.9667493183515035e-06}, {"id": 823, "seek": 339732, "start": 3408.92, "end": 3412.4, "text": " And the really fun bit is you can change the location.", "tokens": [400, 264, 534, 1019, 857, 307, 291, 393, 1319, 264, 4914, 13], "temperature": 0.0, "avg_logprob": -0.2876630109899184, "compression_ratio": 1.7309417040358743, "no_speech_prob": 3.9667493183515035e-06}, {"id": 824, "seek": 339732, "start": 3412.4, "end": 3416.76, "text": " And so I think when I showed it to my wife, we spent like two hours just looking at different", "tokens": [400, 370, 286, 519, 562, 286, 4712, 309, 281, 452, 3836, 11, 321, 4418, 411, 732, 2496, 445, 1237, 412, 819], "temperature": 0.0, "avg_logprob": -0.2876630109899184, "compression_ratio": 1.7309417040358743, "no_speech_prob": 3.9667493183515035e-06}, {"id": 825, "seek": 339732, "start": 3416.76, "end": 3417.76, "text": " places.", "tokens": [3190, 13], "temperature": 0.0, "avg_logprob": -0.2876630109899184, "compression_ratio": 1.7309417040358743, "no_speech_prob": 3.9667493183515035e-06}, {"id": 826, "seek": 339732, "start": 3417.76, "end": 3420.6800000000003, "text": " I mean, like, oh, what does it look like in Iceland?", "tokens": [286, 914, 11, 411, 11, 1954, 11, 437, 775, 309, 574, 411, 294, 28004, 30], "temperature": 0.0, "avg_logprob": -0.2876630109899184, "compression_ratio": 1.7309417040358743, "no_speech_prob": 3.9667493183515035e-06}, {"id": 827, "seek": 339732, "start": 3420.6800000000003, "end": 3422.6000000000004, "text": " Oh, what does it look in that desert?", "tokens": [876, 11, 437, 775, 309, 574, 294, 300, 11029, 30], "temperature": 0.0, "avg_logprob": -0.2876630109899184, "compression_ratio": 1.7309417040358743, "no_speech_prob": 3.9667493183515035e-06}, {"id": 828, "seek": 342260, "start": 3422.6, "end": 3427.96, "text": " Oh, what does it look like in, you know, Siberia?", "tokens": [876, 11, 437, 775, 309, 574, 411, 294, 11, 291, 458, 11, 42608, 654, 30], "temperature": 0.0, "avg_logprob": -0.2829422500898253, "compression_ratio": 1.56, "no_speech_prob": 8.664535016578157e-06}, {"id": 829, "seek": 342260, "start": 3427.96, "end": 3430.7999999999997, "text": " And so it's a really fun example to play with.", "tokens": [400, 370, 309, 311, 257, 534, 1019, 1365, 281, 862, 365, 13], "temperature": 0.0, "avg_logprob": -0.2829422500898253, "compression_ratio": 1.56, "no_speech_prob": 8.664535016578157e-06}, {"id": 830, "seek": 342260, "start": 3430.7999999999997, "end": 3434.7599999999998, "text": " So if you want to waste some time, I'd recommend that.", "tokens": [407, 498, 291, 528, 281, 5964, 512, 565, 11, 286, 1116, 2748, 300, 13], "temperature": 0.0, "avg_logprob": -0.2829422500898253, "compression_ratio": 1.56, "no_speech_prob": 8.664535016578157e-06}, {"id": 831, "seek": 342260, "start": 3434.7599999999998, "end": 3437.3199999999997, "text": " Yeah, that one looks amazing.", "tokens": [865, 11, 300, 472, 1542, 2243, 13], "temperature": 0.0, "avg_logprob": -0.2829422500898253, "compression_ratio": 1.56, "no_speech_prob": 8.664535016578157e-06}, {"id": 832, "seek": 342260, "start": 3437.3199999999997, "end": 3442.12, "text": " So it's actually based on a really famous, really famous poster.", "tokens": [407, 309, 311, 767, 2361, 322, 257, 534, 4618, 11, 534, 4618, 17171, 13], "temperature": 0.0, "avg_logprob": -0.2829422500898253, "compression_ratio": 1.56, "no_speech_prob": 8.664535016578157e-06}, {"id": 833, "seek": 342260, "start": 3442.12, "end": 3445.88, "text": " And I love that poster so much, but it just has, it's a poster you buy.", "tokens": [400, 286, 959, 300, 17171, 370, 709, 11, 457, 309, 445, 575, 11, 309, 311, 257, 17171, 291, 2256, 13], "temperature": 0.0, "avg_logprob": -0.2829422500898253, "compression_ratio": 1.56, "no_speech_prob": 8.664535016578157e-06}, {"id": 834, "seek": 342260, "start": 3445.88, "end": 3447.88, "text": " And so they only pick 30 places.", "tokens": [400, 370, 436, 787, 1888, 2217, 3190, 13], "temperature": 0.0, "avg_logprob": -0.2829422500898253, "compression_ratio": 1.56, "no_speech_prob": 8.664535016578157e-06}, {"id": 835, "seek": 344788, "start": 3447.88, "end": 3452.6800000000003, "text": " And if you have no relation to those places, it's not that meaningful of a poster.", "tokens": [400, 498, 291, 362, 572, 9721, 281, 729, 3190, 11, 309, 311, 406, 300, 10995, 295, 257, 17171, 13], "temperature": 0.0, "avg_logprob": -0.2561610567886218, "compression_ratio": 1.7019607843137254, "no_speech_prob": 1.1300319783913437e-05}, {"id": 836, "seek": 344788, "start": 3452.6800000000003, "end": 3456.0, "text": " So I always wanted to make this tool to be able to make that poster.", "tokens": [407, 286, 1009, 1415, 281, 652, 341, 2290, 281, 312, 1075, 281, 652, 300, 17171, 13], "temperature": 0.0, "avg_logprob": -0.2561610567886218, "compression_ratio": 1.7019607843137254, "no_speech_prob": 1.1300319783913437e-05}, {"id": 837, "seek": 344788, "start": 3456.0, "end": 3461.52, "text": " But in the places I've like lived to or been, lived in or been to, or, you know, that sort", "tokens": [583, 294, 264, 3190, 286, 600, 411, 5152, 281, 420, 668, 11, 5152, 294, 420, 668, 281, 11, 420, 11, 291, 458, 11, 300, 1333], "temperature": 0.0, "avg_logprob": -0.2561610567886218, "compression_ratio": 1.7019607843137254, "no_speech_prob": 1.1300319783913437e-05}, {"id": 838, "seek": 344788, "start": 3461.52, "end": 3464.2000000000003, "text": " of thing where you have some personal relationship to it.", "tokens": [295, 551, 689, 291, 362, 512, 2973, 2480, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.2561610567886218, "compression_ratio": 1.7019607843137254, "no_speech_prob": 1.1300319783913437e-05}, {"id": 839, "seek": 344788, "start": 3464.2000000000003, "end": 3468.2000000000003, "text": " So you can kind of relate to those places specifically.", "tokens": [407, 291, 393, 733, 295, 10961, 281, 729, 3190, 4682, 13], "temperature": 0.0, "avg_logprob": -0.2561610567886218, "compression_ratio": 1.7019607843137254, "no_speech_prob": 1.1300319783913437e-05}, {"id": 840, "seek": 344788, "start": 3468.2000000000003, "end": 3474.1600000000003, "text": " So I'm curious, like, how do you even approach building these visualizations?", "tokens": [407, 286, 478, 6369, 11, 411, 11, 577, 360, 291, 754, 3109, 2390, 613, 5056, 14455, 30], "temperature": 0.0, "avg_logprob": -0.2561610567886218, "compression_ratio": 1.7019607843137254, "no_speech_prob": 1.1300319783913437e-05}, {"id": 841, "seek": 347416, "start": 3474.16, "end": 3479.2799999999997, "text": " Like I want to take the example of the weather radial, but I don't know if that one is too", "tokens": [1743, 286, 528, 281, 747, 264, 1365, 295, 264, 5503, 38783, 11, 457, 286, 500, 380, 458, 498, 300, 472, 307, 886], "temperature": 0.0, "avg_logprob": -0.2840821864241261, "compression_ratio": 1.709090909090909, "no_speech_prob": 6.048578597983578e-06}, {"id": 842, "seek": 347416, "start": 3479.2799999999997, "end": 3483.48, "text": " complex to ask you, like, how do you go about approaching it?", "tokens": [3997, 281, 1029, 291, 11, 411, 11, 577, 360, 291, 352, 466, 14908, 309, 30], "temperature": 0.0, "avg_logprob": -0.2840821864241261, "compression_ratio": 1.709090909090909, "no_speech_prob": 6.048578597983578e-06}, {"id": 843, "seek": 347416, "start": 3483.48, "end": 3488.7999999999997, "text": " Yeah, so usually you start with some sort of idea, you want to build something.", "tokens": [865, 11, 370, 2673, 291, 722, 365, 512, 1333, 295, 1558, 11, 291, 528, 281, 1322, 746, 13], "temperature": 0.0, "avg_logprob": -0.2840821864241261, "compression_ratio": 1.709090909090909, "no_speech_prob": 6.048578597983578e-06}, {"id": 844, "seek": 347416, "start": 3488.7999999999997, "end": 3494.0, "text": " For a lot of these examples, a lot of these are like famous stuff that, you know, people", "tokens": [1171, 257, 688, 295, 613, 5110, 11, 257, 688, 295, 613, 366, 411, 4618, 1507, 300, 11, 291, 458, 11, 561], "temperature": 0.0, "avg_logprob": -0.2840821864241261, "compression_ratio": 1.709090909090909, "no_speech_prob": 6.048578597983578e-06}, {"id": 845, "seek": 347416, "start": 3494.0, "end": 3498.12, "text": " have built or, or like are in newspapers or stuff like that.", "tokens": [362, 3094, 420, 11, 420, 411, 366, 294, 20781, 420, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2840821864241261, "compression_ratio": 1.709090909090909, "no_speech_prob": 6.048578597983578e-06}, {"id": 846, "seek": 347416, "start": 3498.12, "end": 3502.8799999999997, "text": " I'm thinking mostly in terms of implementation rather than designing the visualization.", "tokens": [286, 478, 1953, 5240, 294, 2115, 295, 11420, 2831, 813, 14685, 264, 25801, 13], "temperature": 0.0, "avg_logprob": -0.2840821864241261, "compression_ratio": 1.709090909090909, "no_speech_prob": 6.048578597983578e-06}, {"id": 847, "seek": 350288, "start": 3502.88, "end": 3509.4, "text": " Yeah, so you always start with, you know, on one side, you have your data.", "tokens": [865, 11, 370, 291, 1009, 722, 365, 11, 291, 458, 11, 322, 472, 1252, 11, 291, 362, 428, 1412, 13], "temperature": 0.0, "avg_logprob": -0.25732842166866876, "compression_ratio": 1.701195219123506, "no_speech_prob": 3.6117723993811524e-06}, {"id": 848, "seek": 350288, "start": 3509.4, "end": 3513.84, "text": " And on one hand is what the pixels you want to look like, right.", "tokens": [400, 322, 472, 1011, 307, 437, 264, 18668, 291, 528, 281, 574, 411, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.25732842166866876, "compression_ratio": 1.701195219123506, "no_speech_prob": 3.6117723993811524e-06}, {"id": 849, "seek": 350288, "start": 3513.84, "end": 3518.6800000000003, "text": " And so fundamentally, you're going to end up with some form of transformation between", "tokens": [400, 370, 17879, 11, 291, 434, 516, 281, 917, 493, 365, 512, 1254, 295, 9887, 1296], "temperature": 0.0, "avg_logprob": -0.25732842166866876, "compression_ratio": 1.701195219123506, "no_speech_prob": 3.6117723993811524e-06}, {"id": 850, "seek": 350288, "start": 3518.6800000000003, "end": 3519.6800000000003, "text": " the two.", "tokens": [264, 732, 13], "temperature": 0.0, "avg_logprob": -0.25732842166866876, "compression_ratio": 1.701195219123506, "no_speech_prob": 3.6117723993811524e-06}, {"id": 851, "seek": 350288, "start": 3519.6800000000003, "end": 3523.12, "text": " You know, like we talked earlier with the scales, that's the simplest case.", "tokens": [509, 458, 11, 411, 321, 2825, 3071, 365, 264, 17408, 11, 300, 311, 264, 22811, 1389, 13], "temperature": 0.0, "avg_logprob": -0.25732842166866876, "compression_ratio": 1.701195219123506, "no_speech_prob": 3.6117723993811524e-06}, {"id": 852, "seek": 350288, "start": 3523.12, "end": 3526.2400000000002, "text": " But you know, it usually gets a bit more involved than that.", "tokens": [583, 291, 458, 11, 309, 2673, 2170, 257, 857, 544, 3288, 813, 300, 13], "temperature": 0.0, "avg_logprob": -0.25732842166866876, "compression_ratio": 1.701195219123506, "no_speech_prob": 3.6117723993811524e-06}, {"id": 853, "seek": 350288, "start": 3526.2400000000002, "end": 3529.44, "text": " But, but fundamentally, the workflow is pretty similar.", "tokens": [583, 11, 457, 17879, 11, 264, 20993, 307, 1238, 2531, 13], "temperature": 0.0, "avg_logprob": -0.25732842166866876, "compression_ratio": 1.701195219123506, "no_speech_prob": 3.6117723993811524e-06}, {"id": 854, "seek": 352944, "start": 3529.44, "end": 3533.52, "text": " Like you come up with, you know, ways to, to do that.", "tokens": [1743, 291, 808, 493, 365, 11, 291, 458, 11, 2098, 281, 11, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.24915484459169449, "compression_ratio": 1.7490196078431373, "no_speech_prob": 9.515957572148181e-06}, {"id": 855, "seek": 352944, "start": 3533.52, "end": 3538.36, "text": " And then you, you know, and it's, it's fun, because it's visual programming, right?", "tokens": [400, 550, 291, 11, 291, 458, 11, 293, 309, 311, 11, 309, 311, 1019, 11, 570, 309, 311, 5056, 9410, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.24915484459169449, "compression_ratio": 1.7490196078431373, "no_speech_prob": 9.515957572148181e-06}, {"id": 856, "seek": 352944, "start": 3538.36, "end": 3542.52, "text": " You're constantly getting visual feedback, like you put something and it just all looks", "tokens": [509, 434, 6460, 1242, 5056, 5824, 11, 411, 291, 829, 746, 293, 309, 445, 439, 1542], "temperature": 0.0, "avg_logprob": -0.24915484459169449, "compression_ratio": 1.7490196078431373, "no_speech_prob": 9.515957572148181e-06}, {"id": 857, "seek": 352944, "start": 3542.52, "end": 3543.76, "text": " completely horrible.", "tokens": [2584, 9263, 13], "temperature": 0.0, "avg_logprob": -0.24915484459169449, "compression_ratio": 1.7490196078431373, "no_speech_prob": 9.515957572148181e-06}, {"id": 858, "seek": 352944, "start": 3543.76, "end": 3546.92, "text": " And then you change the parameter, and it rotates the right way around.", "tokens": [400, 550, 291, 1319, 264, 13075, 11, 293, 309, 42133, 264, 558, 636, 926, 13], "temperature": 0.0, "avg_logprob": -0.24915484459169449, "compression_ratio": 1.7490196078431373, "no_speech_prob": 9.515957572148181e-06}, {"id": 859, "seek": 352944, "start": 3546.92, "end": 3548.84, "text": " And you're like, Oh, yeah, that's great.", "tokens": [400, 291, 434, 411, 11, 876, 11, 1338, 11, 300, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.24915484459169449, "compression_ratio": 1.7490196078431373, "no_speech_prob": 9.515957572148181e-06}, {"id": 860, "seek": 352944, "start": 3548.84, "end": 3554.52, "text": " You know, and, and so it's, I find it really like rewarding in that way that front end", "tokens": [509, 458, 11, 293, 11, 293, 370, 309, 311, 11, 286, 915, 309, 534, 411, 20063, 294, 300, 636, 300, 1868, 917], "temperature": 0.0, "avg_logprob": -0.24915484459169449, "compression_ratio": 1.7490196078431373, "no_speech_prob": 9.515957572148181e-06}, {"id": 861, "seek": 355452, "start": 3554.52, "end": 3559.8, "text": " engineering can be rewarding, where like, you're constantly getting this really nice", "tokens": [7043, 393, 312, 20063, 11, 689, 411, 11, 291, 434, 6460, 1242, 341, 534, 1481], "temperature": 0.0, "avg_logprob": -0.23520330949263138, "compression_ratio": 1.6805555555555556, "no_speech_prob": 3.9054398257576395e-06}, {"id": 862, "seek": 355452, "start": 3559.8, "end": 3561.54, "text": " visual feedback.", "tokens": [5056, 5824, 13], "temperature": 0.0, "avg_logprob": -0.23520330949263138, "compression_ratio": 1.6805555555555556, "no_speech_prob": 3.9054398257576395e-06}, {"id": 863, "seek": 355452, "start": 3561.54, "end": 3564.16, "text": " So it's, it's definitely fun.", "tokens": [407, 309, 311, 11, 309, 311, 2138, 1019, 13], "temperature": 0.0, "avg_logprob": -0.23520330949263138, "compression_ratio": 1.6805555555555556, "no_speech_prob": 3.9054398257576395e-06}, {"id": 864, "seek": 355452, "start": 3564.16, "end": 3566.72, "text": " Sometimes it can be tricky when you don't know how to proceed.", "tokens": [4803, 309, 393, 312, 12414, 562, 291, 500, 380, 458, 577, 281, 8991, 13], "temperature": 0.0, "avg_logprob": -0.23520330949263138, "compression_ratio": 1.6805555555555556, "no_speech_prob": 3.9054398257576395e-06}, {"id": 865, "seek": 355452, "start": 3566.72, "end": 3572.52, "text": " But yeah, I would say like, when you have this kind of visual feedback, it's really", "tokens": [583, 1338, 11, 286, 576, 584, 411, 11, 562, 291, 362, 341, 733, 295, 5056, 5824, 11, 309, 311, 534], "temperature": 0.0, "avg_logprob": -0.23520330949263138, "compression_ratio": 1.6805555555555556, "no_speech_prob": 3.9054398257576395e-06}, {"id": 866, "seek": 355452, "start": 3572.52, "end": 3576.16, "text": " easy to, to iterate.", "tokens": [1858, 281, 11, 281, 44497, 13], "temperature": 0.0, "avg_logprob": -0.23520330949263138, "compression_ratio": 1.6805555555555556, "no_speech_prob": 3.9054398257576395e-06}, {"id": 867, "seek": 355452, "start": 3576.16, "end": 3581.2, "text": " But when it's visual, then it's really hard to write tests for.", "tokens": [583, 562, 309, 311, 5056, 11, 550, 309, 311, 534, 1152, 281, 2464, 6921, 337, 13], "temperature": 0.0, "avg_logprob": -0.23520330949263138, "compression_ratio": 1.6805555555555556, "no_speech_prob": 3.9054398257576395e-06}, {"id": 868, "seek": 358120, "start": 3581.2, "end": 3586.04, "text": " And that's, that's going into another tangent that I'm sure that Dillon has a lot of thoughts", "tokens": [400, 300, 311, 11, 300, 311, 516, 666, 1071, 27747, 300, 286, 478, 988, 300, 28160, 575, 257, 688, 295, 4598], "temperature": 0.0, "avg_logprob": -0.31923685368803356, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.4738840036443435e-05}, {"id": 869, "seek": 358120, "start": 3586.04, "end": 3587.04, "text": " about.", "tokens": [466, 13], "temperature": 0.0, "avg_logprob": -0.31923685368803356, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.4738840036443435e-05}, {"id": 870, "seek": 358120, "start": 3587.04, "end": 3591.04, "text": " The less visual something is, the easier to test it is.", "tokens": [440, 1570, 5056, 746, 307, 11, 264, 3571, 281, 1500, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.31923685368803356, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.4738840036443435e-05}, {"id": 871, "seek": 358120, "start": 3591.04, "end": 3593.4399999999996, "text": " Yeah, well, that's, yeah.", "tokens": [865, 11, 731, 11, 300, 311, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.31923685368803356, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.4738840036443435e-05}, {"id": 872, "seek": 358120, "start": 3593.4399999999996, "end": 3600.6, "text": " Like, so for instance, what I was really pleased about with the, with the tree work in the", "tokens": [1743, 11, 370, 337, 5197, 11, 437, 286, 390, 534, 10587, 466, 365, 264, 11, 365, 264, 4230, 589, 294, 264], "temperature": 0.0, "avg_logprob": -0.31923685368803356, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.4738840036443435e-05}, {"id": 873, "seek": 358120, "start": 3600.6, "end": 3607.7599999999998, "text": " latest release was that the actual papers that describe the layouts, the sort of aesthetically", "tokens": [6792, 4374, 390, 300, 264, 3539, 10577, 300, 6786, 264, 46100, 11, 264, 1333, 295, 27837, 984], "temperature": 0.0, "avg_logprob": -0.31923685368803356, "compression_ratio": 1.6457399103139014, "no_speech_prob": 1.4738840036443435e-05}, {"id": 874, "seek": 360776, "start": 3607.76, "end": 3616.1200000000003, "text": " pleasing layouts that trees should have, they codify them as seven rules.", "tokens": [32798, 46100, 300, 5852, 820, 362, 11, 436, 17656, 2505, 552, 382, 3407, 4474, 13], "temperature": 0.0, "avg_logprob": -0.2933292183824765, "compression_ratio": 1.6431924882629108, "no_speech_prob": 1.7061119024219806e-06}, {"id": 875, "seek": 360776, "start": 3616.1200000000003, "end": 3622.92, "text": " And you hear like, oh, rules, fuss tests, and then something clicks in your head and", "tokens": [400, 291, 1568, 411, 11, 1954, 11, 4474, 11, 34792, 6921, 11, 293, 550, 746, 18521, 294, 428, 1378, 293], "temperature": 0.0, "avg_logprob": -0.2933292183824765, "compression_ratio": 1.6431924882629108, "no_speech_prob": 1.7061119024219806e-06}, {"id": 876, "seek": 360776, "start": 3622.92, "end": 3624.5600000000004, "text": " you're like, oh, I can write fuss tests.", "tokens": [291, 434, 411, 11, 1954, 11, 286, 393, 2464, 34792, 6921, 13], "temperature": 0.0, "avg_logprob": -0.2933292183824765, "compression_ratio": 1.6431924882629108, "no_speech_prob": 1.7061119024219806e-06}, {"id": 877, "seek": 360776, "start": 3624.5600000000004, "end": 3630.2200000000003, "text": " So I think I have fuss tests for four of these rules, which were kind of sufficient enough", "tokens": [407, 286, 519, 286, 362, 34792, 6921, 337, 1451, 295, 613, 4474, 11, 597, 645, 733, 295, 11563, 1547], "temperature": 0.0, "avg_logprob": -0.2933292183824765, "compression_ratio": 1.6431924882629108, "no_speech_prob": 1.7061119024219806e-06}, {"id": 878, "seek": 360776, "start": 3630.2200000000003, "end": 3635.1600000000003, "text": " to really like shake up all the bugs I could, I could find.", "tokens": [281, 534, 411, 10283, 493, 439, 264, 15120, 286, 727, 11, 286, 727, 915, 13], "temperature": 0.0, "avg_logprob": -0.2933292183824765, "compression_ratio": 1.6431924882629108, "no_speech_prob": 1.7061119024219806e-06}, {"id": 879, "seek": 363516, "start": 3635.16, "end": 3640.6, "text": " So yeah, it's actually very nice when you end up with this situation where you get this", "tokens": [407, 1338, 11, 309, 311, 767, 588, 1481, 562, 291, 917, 493, 365, 341, 2590, 689, 291, 483, 341], "temperature": 0.0, "avg_logprob": -0.2673744379087936, "compression_ratio": 1.7523809523809524, "no_speech_prob": 2.2959029593039304e-06}, {"id": 880, "seek": 363516, "start": 3640.6, "end": 3646.68, "text": " really powerful way to do, you know, something quite abstract.", "tokens": [534, 4005, 636, 281, 360, 11, 291, 458, 11, 746, 1596, 12649, 13], "temperature": 0.0, "avg_logprob": -0.2673744379087936, "compression_ratio": 1.7523809523809524, "no_speech_prob": 2.2959029593039304e-06}, {"id": 881, "seek": 363516, "start": 3646.68, "end": 3650.24, "text": " So sometimes, sometimes it isn't like that.", "tokens": [407, 2171, 11, 2171, 309, 1943, 380, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2673744379087936, "compression_ratio": 1.7523809523809524, "no_speech_prob": 2.2959029593039304e-06}, {"id": 882, "seek": 363516, "start": 3650.24, "end": 3654.16, "text": " Sometimes you end up with a situation where actually you get really nice properties.", "tokens": [4803, 291, 917, 493, 365, 257, 2590, 689, 767, 291, 483, 534, 1481, 7221, 13], "temperature": 0.0, "avg_logprob": -0.2673744379087936, "compression_ratio": 1.7523809523809524, "no_speech_prob": 2.2959029593039304e-06}, {"id": 883, "seek": 363516, "start": 3654.16, "end": 3662.3999999999996, "text": " And it might be hard to test the visualization itself, but the, the data transformations", "tokens": [400, 309, 1062, 312, 1152, 281, 1500, 264, 25801, 2564, 11, 457, 264, 11, 264, 1412, 34852], "temperature": 0.0, "avg_logprob": -0.2673744379087936, "compression_ratio": 1.7523809523809524, "no_speech_prob": 2.2959029593039304e-06}, {"id": 884, "seek": 366240, "start": 3662.4, "end": 3668.0, "text": " that are, you know, show showing up as the final result of the visualization are easier", "tokens": [300, 366, 11, 291, 458, 11, 855, 4099, 493, 382, 264, 2572, 1874, 295, 264, 25801, 366, 3571], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 885, "seek": 366240, "start": 3668.0, "end": 3669.0, "text": " to test.", "tokens": [281, 1500, 13], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 886, "seek": 366240, "start": 3669.0, "end": 3672.56, "text": " So that's when the unit tests come in and.", "tokens": [407, 300, 311, 562, 264, 4985, 6921, 808, 294, 293, 13], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 887, "seek": 366240, "start": 3672.56, "end": 3677.92, "text": " It's also like an implementation detail, but yeah, like if that's the closest you get to", "tokens": [467, 311, 611, 411, 364, 11420, 2607, 11, 457, 1338, 11, 411, 498, 300, 311, 264, 13699, 291, 483, 281], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 888, "seek": 366240, "start": 3677.92, "end": 3680.56, "text": " be able to test something and sure.", "tokens": [312, 1075, 281, 1500, 746, 293, 988, 13], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 889, "seek": 366240, "start": 3680.56, "end": 3681.56, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 890, "seek": 366240, "start": 3681.56, "end": 3682.56, "text": " Which is why it's harder.", "tokens": [3013, 307, 983, 309, 311, 6081, 13], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 891, "seek": 366240, "start": 3682.56, "end": 3686.04, "text": " It's harder to test the final full thing.", "tokens": [467, 311, 6081, 281, 1500, 264, 2572, 1577, 551, 13], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 892, "seek": 366240, "start": 3686.04, "end": 3690.4, "text": " It's, but it might be pretty easy to just test some of the number crunching along the", "tokens": [467, 311, 11, 457, 309, 1062, 312, 1238, 1858, 281, 445, 1500, 512, 295, 264, 1230, 13386, 278, 2051, 264], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 893, "seek": 366240, "start": 3690.4, "end": 3691.4, "text": " way.", "tokens": [636, 13], "temperature": 0.0, "avg_logprob": -0.25669567759444073, "compression_ratio": 1.7408906882591093, "no_speech_prob": 1.2288820698813652e-06}, {"id": 894, "seek": 369140, "start": 3691.4, "end": 3699.6, "text": " Do you have like, when you make a visualization, do you have tests for it and not for the underlying", "tokens": [1144, 291, 362, 411, 11, 562, 291, 652, 257, 25801, 11, 360, 291, 362, 6921, 337, 309, 293, 406, 337, 264, 14217], "temperature": 0.0, "avg_logprob": -0.31994434318157156, "compression_ratio": 1.6150234741784038, "no_speech_prob": 9.570378551870817e-07}, {"id": 895, "seek": 369140, "start": 3699.6, "end": 3700.6, "text": " API?", "tokens": [9362, 30], "temperature": 0.0, "avg_logprob": -0.31994434318157156, "compression_ratio": 1.6150234741784038, "no_speech_prob": 9.570378551870817e-07}, {"id": 896, "seek": 369140, "start": 3700.6, "end": 3703.6800000000003, "text": " I mean, really for like, Oh, I have a weather radio.", "tokens": [286, 914, 11, 534, 337, 411, 11, 876, 11, 286, 362, 257, 5503, 6477, 13], "temperature": 0.0, "avg_logprob": -0.31994434318157156, "compression_ratio": 1.6150234741784038, "no_speech_prob": 9.570378551870817e-07}, {"id": 897, "seek": 369140, "start": 3703.6800000000003, "end": 3708.0, "text": " I have some tests for them for that.", "tokens": [286, 362, 512, 6921, 337, 552, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.31994434318157156, "compression_ratio": 1.6150234741784038, "no_speech_prob": 9.570378551870817e-07}, {"id": 898, "seek": 369140, "start": 3708.0, "end": 3713.76, "text": " At work sometimes for it, for the example galleries, there's no, no tests.", "tokens": [1711, 589, 2171, 337, 309, 11, 337, 264, 1365, 40141, 11, 456, 311, 572, 11, 572, 6921, 13], "temperature": 0.0, "avg_logprob": -0.31994434318157156, "compression_ratio": 1.6150234741784038, "no_speech_prob": 9.570378551870817e-07}, {"id": 899, "seek": 369140, "start": 3713.76, "end": 3718.4, "text": " I it's, they're supposed to be kind of like very self-contained examples.", "tokens": [286, 309, 311, 11, 436, 434, 3442, 281, 312, 733, 295, 411, 588, 2698, 12, 9000, 3563, 5110, 13], "temperature": 0.0, "avg_logprob": -0.31994434318157156, "compression_ratio": 1.6150234741784038, "no_speech_prob": 9.570378551870817e-07}, {"id": 900, "seek": 371840, "start": 3718.4, "end": 3725.4, "text": " So I, you know, it's slightly different emphasis, but at work we've done some, some, but yeah,", "tokens": [407, 286, 11, 291, 458, 11, 309, 311, 4748, 819, 16271, 11, 457, 412, 589, 321, 600, 1096, 512, 11, 512, 11, 457, 1338, 11], "temperature": 0.0, "avg_logprob": -0.23501835617364622, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.706061084405519e-06}, {"id": 901, "seek": 371840, "start": 3725.4, "end": 3730.36, "text": " as you say, it's sometimes it's pretty challenging and just doesn't feel worth it.", "tokens": [382, 291, 584, 11, 309, 311, 2171, 309, 311, 1238, 7595, 293, 445, 1177, 380, 841, 3163, 309, 13], "temperature": 0.0, "avg_logprob": -0.23501835617364622, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.706061084405519e-06}, {"id": 902, "seek": 371840, "start": 3730.36, "end": 3731.36, "text": " Totally.", "tokens": [22837, 13], "temperature": 0.0, "avg_logprob": -0.23501835617364622, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.706061084405519e-06}, {"id": 903, "seek": 371840, "start": 3731.36, "end": 3736.48, "text": " You get, you know, you can test it a lot, just manually you get, because it's visual,", "tokens": [509, 483, 11, 291, 458, 11, 291, 393, 1500, 309, 257, 688, 11, 445, 16945, 291, 483, 11, 570, 309, 311, 5056, 11], "temperature": 0.0, "avg_logprob": -0.23501835617364622, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.706061084405519e-06}, {"id": 904, "seek": 371840, "start": 3736.48, "end": 3743.76, "text": " you can kind of, your eye can notice the defects super fast in a way that I've done.", "tokens": [291, 393, 733, 295, 11, 428, 3313, 393, 3449, 264, 32655, 1687, 2370, 294, 257, 636, 300, 286, 600, 1096, 13], "temperature": 0.0, "avg_logprob": -0.23501835617364622, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.706061084405519e-06}, {"id": 905, "seek": 374376, "start": 3743.76, "end": 3749.8, "text": " I've done a lot of tests during development when I was doing like data visualization with", "tokens": [286, 600, 1096, 257, 688, 295, 6921, 1830, 3250, 562, 286, 390, 884, 411, 1412, 25801, 365], "temperature": 0.0, "avg_logprob": -0.2752032682120082, "compression_ratio": 1.5523809523809524, "no_speech_prob": 1.2878554116468877e-06}, {"id": 906, "seek": 374376, "start": 3749.8, "end": 3758.2400000000002, "text": " some map stuff and WebGL just because the development workflow is just really awful.", "tokens": [512, 4471, 1507, 293, 9573, 19440, 445, 570, 264, 3250, 20993, 307, 445, 534, 11232, 13], "temperature": 0.0, "avg_logprob": -0.2752032682120082, "compression_ratio": 1.5523809523809524, "no_speech_prob": 1.2878554116468877e-06}, {"id": 907, "seek": 374376, "start": 3758.2400000000002, "end": 3764.96, "text": " Like the WebGL tooling, at least back then was, was not great.", "tokens": [1743, 264, 9573, 19440, 46593, 11, 412, 1935, 646, 550, 390, 11, 390, 406, 869, 13], "temperature": 0.0, "avg_logprob": -0.2752032682120082, "compression_ratio": 1.5523809523809524, "no_speech_prob": 1.2878554116468877e-06}, {"id": 908, "seek": 374376, "start": 3764.96, "end": 3770.2000000000003, "text": " And so I built a bunch of like test stuff and I did a lot of, you know, you can do image", "tokens": [400, 370, 286, 3094, 257, 3840, 295, 411, 1500, 1507, 293, 286, 630, 257, 688, 295, 11, 291, 458, 11, 291, 393, 360, 3256], "temperature": 0.0, "avg_logprob": -0.2752032682120082, "compression_ratio": 1.5523809523809524, "no_speech_prob": 1.2878554116468877e-06}, {"id": 909, "seek": 377020, "start": 3770.2, "end": 3775.68, "text": " comparisons or I would, you know, render to a buffer and then do like an image diff against", "tokens": [33157, 420, 286, 576, 11, 291, 458, 11, 15529, 281, 257, 21762, 293, 550, 360, 411, 364, 3256, 7593, 1970], "temperature": 0.0, "avg_logprob": -0.21731822387031888, "compression_ratio": 1.619047619047619, "no_speech_prob": 8.579153245591442e-07}, {"id": 910, "seek": 377020, "start": 3775.68, "end": 3781.2, "text": " the reference image and so on, which was quite nice, but it was a lot of work to get that", "tokens": [264, 6408, 3256, 293, 370, 322, 11, 597, 390, 1596, 1481, 11, 457, 309, 390, 257, 688, 295, 589, 281, 483, 300], "temperature": 0.0, "avg_logprob": -0.21731822387031888, "compression_ratio": 1.619047619047619, "no_speech_prob": 8.579153245591442e-07}, {"id": 911, "seek": 377020, "start": 3781.2, "end": 3782.2, "text": " set up.", "tokens": [992, 493, 13], "temperature": 0.0, "avg_logprob": -0.21731822387031888, "compression_ratio": 1.619047619047619, "no_speech_prob": 8.579153245591442e-07}, {"id": 912, "seek": 377020, "start": 3782.2, "end": 3785.96, "text": " So it depends on whether you feel like that's worth it or not.", "tokens": [407, 309, 5946, 322, 1968, 291, 841, 411, 300, 311, 3163, 309, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.21731822387031888, "compression_ratio": 1.619047619047619, "no_speech_prob": 8.579153245591442e-07}, {"id": 913, "seek": 377020, "start": 3785.96, "end": 3792.68, "text": " So in your guide, you, you mentioned like some of the important skills being, you know,", "tokens": [407, 294, 428, 5934, 11, 291, 11, 291, 2835, 411, 512, 295, 264, 1021, 3942, 885, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.21731822387031888, "compression_ratio": 1.619047619047619, "no_speech_prob": 8.579153245591442e-07}, {"id": 914, "seek": 379268, "start": 3792.68, "end": 3801.48, "text": " understanding statistics and, you know, sort of data modeling and like cleaning your data.", "tokens": [3701, 12523, 293, 11, 291, 458, 11, 1333, 295, 1412, 15983, 293, 411, 8924, 428, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2560494513738723, "compression_ratio": 1.6261261261261262, "no_speech_prob": 1.4144619626677013e-06}, {"id": 915, "seek": 379268, "start": 3801.48, "end": 3807.8399999999997, "text": " Can you talk a little bit about, you know, for somebody maybe who is not super experienced", "tokens": [1664, 291, 751, 257, 707, 857, 466, 11, 291, 458, 11, 337, 2618, 1310, 567, 307, 406, 1687, 6751], "temperature": 0.0, "avg_logprob": -0.2560494513738723, "compression_ratio": 1.6261261261261262, "no_speech_prob": 1.4144619626677013e-06}, {"id": 916, "seek": 379268, "start": 3807.8399999999997, "end": 3813.44, "text": " with some of these statistical techniques, like what are the important things to look", "tokens": [365, 512, 295, 613, 22820, 7512, 11, 411, 437, 366, 264, 1021, 721, 281, 574], "temperature": 0.0, "avg_logprob": -0.2560494513738723, "compression_ratio": 1.6261261261261262, "no_speech_prob": 1.4144619626677013e-06}, {"id": 917, "seek": 379268, "start": 3813.44, "end": 3816.52, "text": " into and like where might somebody learn more about that?", "tokens": [666, 293, 411, 689, 1062, 2618, 1466, 544, 466, 300, 30], "temperature": 0.0, "avg_logprob": -0.2560494513738723, "compression_ratio": 1.6261261261261262, "no_speech_prob": 1.4144619626677013e-06}, {"id": 918, "seek": 379268, "start": 3816.52, "end": 3819.12, "text": " Yeah, it's kind of a good question.", "tokens": [865, 11, 309, 311, 733, 295, 257, 665, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2560494513738723, "compression_ratio": 1.6261261261261262, "no_speech_prob": 1.4144619626677013e-06}, {"id": 919, "seek": 381912, "start": 3819.12, "end": 3823.4, "text": " I don't think it's like necessary to get like a university degree in statistics or something", "tokens": [286, 500, 380, 519, 309, 311, 411, 4818, 281, 483, 411, 257, 5454, 4314, 294, 12523, 420, 746], "temperature": 0.0, "avg_logprob": -0.2597252003197531, "compression_ratio": 1.696, "no_speech_prob": 5.507200057763839e-06}, {"id": 920, "seek": 381912, "start": 3823.4, "end": 3824.4, "text": " like that.", "tokens": [411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2597252003197531, "compression_ratio": 1.696, "no_speech_prob": 5.507200057763839e-06}, {"id": 921, "seek": 381912, "start": 3824.4, "end": 3831.2, "text": " But like it's, and where exactly to learn everything, I don't really know.", "tokens": [583, 411, 309, 311, 11, 293, 689, 2293, 281, 1466, 1203, 11, 286, 500, 380, 534, 458, 13], "temperature": 0.0, "avg_logprob": -0.2597252003197531, "compression_ratio": 1.696, "no_speech_prob": 5.507200057763839e-06}, {"id": 922, "seek": 381912, "start": 3831.2, "end": 3835.42, "text": " Part of what I just mean by that is that like fundamentally, a lot of times your work is", "tokens": [4100, 295, 437, 286, 445, 914, 538, 300, 307, 300, 411, 17879, 11, 257, 688, 295, 1413, 428, 589, 307], "temperature": 0.0, "avg_logprob": -0.2597252003197531, "compression_ratio": 1.696, "no_speech_prob": 5.507200057763839e-06}, {"id": 923, "seek": 381912, "start": 3835.42, "end": 3841.24, "text": " going to be understanding things like sometimes a terminology, honestly.", "tokens": [516, 281, 312, 3701, 721, 411, 2171, 257, 27575, 11, 6095, 13], "temperature": 0.0, "avg_logprob": -0.2597252003197531, "compression_ratio": 1.696, "no_speech_prob": 5.507200057763839e-06}, {"id": 924, "seek": 381912, "start": 3841.24, "end": 3845.6, "text": " So things like what's a dependent and independent variable, you'll hear that a lot.", "tokens": [407, 721, 411, 437, 311, 257, 12334, 293, 6695, 7006, 11, 291, 603, 1568, 300, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.2597252003197531, "compression_ratio": 1.696, "no_speech_prob": 5.507200057763839e-06}, {"id": 925, "seek": 384560, "start": 3845.6, "end": 3851.7599999999998, "text": " If you don't know what that means, it's not the same thing as in programming, you know,", "tokens": [759, 291, 500, 380, 458, 437, 300, 1355, 11, 309, 311, 406, 264, 912, 551, 382, 294, 9410, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.2906849200908954, "compression_ratio": 1.834862385321101, "no_speech_prob": 3.0414239517995156e-06}, {"id": 926, "seek": 384560, "start": 3851.7599999999998, "end": 3857.44, "text": " and, you know, or you're going to get things like a quantitative dimension versus, you", "tokens": [293, 11, 291, 458, 11, 420, 291, 434, 516, 281, 483, 721, 411, 257, 27778, 10139, 5717, 11, 291], "temperature": 0.0, "avg_logprob": -0.2906849200908954, "compression_ratio": 1.834862385321101, "no_speech_prob": 3.0414239517995156e-06}, {"id": 927, "seek": 384560, "start": 3857.44, "end": 3860.64, "text": " know, ordinal dimension, for instance.", "tokens": [458, 11, 4792, 2071, 10139, 11, 337, 5197, 13], "temperature": 0.0, "avg_logprob": -0.2906849200908954, "compression_ratio": 1.834862385321101, "no_speech_prob": 3.0414239517995156e-06}, {"id": 928, "seek": 384560, "start": 3860.64, "end": 3865.36, "text": " And you know, these things just mean a quantity dimension is like a number and ordinal dimension", "tokens": [400, 291, 458, 11, 613, 721, 445, 914, 257, 11275, 10139, 307, 411, 257, 1230, 293, 4792, 2071, 10139], "temperature": 0.0, "avg_logprob": -0.2906849200908954, "compression_ratio": 1.834862385321101, "no_speech_prob": 3.0414239517995156e-06}, {"id": 929, "seek": 384560, "start": 3865.36, "end": 3871.2, "text": " is something that you can, has a defined order, but doesn't have like a value, let's say.", "tokens": [307, 746, 300, 291, 393, 11, 575, 257, 7642, 1668, 11, 457, 1177, 380, 362, 411, 257, 2158, 11, 718, 311, 584, 13], "temperature": 0.0, "avg_logprob": -0.2906849200908954, "compression_ratio": 1.834862385321101, "no_speech_prob": 3.0414239517995156e-06}, {"id": 930, "seek": 387120, "start": 3871.2, "end": 3878.56, "text": " So like, you know, like for instance, if you're doing a count of each, how many times a letter", "tokens": [407, 411, 11, 291, 458, 11, 411, 337, 5197, 11, 498, 291, 434, 884, 257, 1207, 295, 1184, 11, 577, 867, 1413, 257, 5063], "temperature": 0.0, "avg_logprob": -0.22531987095738318, "compression_ratio": 1.6340425531914893, "no_speech_prob": 1.3287246929394314e-06}, {"id": 931, "seek": 387120, "start": 3878.56, "end": 3883.12, "text": " appears in a piece of text, you want to visualize like a histogram of letter frequencies, like", "tokens": [7038, 294, 257, 2522, 295, 2487, 11, 291, 528, 281, 23273, 411, 257, 49816, 295, 5063, 20250, 11, 411], "temperature": 0.0, "avg_logprob": -0.22531987095738318, "compression_ratio": 1.6340425531914893, "no_speech_prob": 1.3287246929394314e-06}, {"id": 932, "seek": 387120, "start": 3883.12, "end": 3887.72, "text": " letters would be an ordinal thing because they have an order.", "tokens": [7825, 576, 312, 364, 4792, 2071, 551, 570, 436, 362, 364, 1668, 13], "temperature": 0.0, "avg_logprob": -0.22531987095738318, "compression_ratio": 1.6340425531914893, "no_speech_prob": 1.3287246929394314e-06}, {"id": 933, "seek": 387120, "start": 3887.72, "end": 3893.68, "text": " Like it doesn't make sense to visualize them as like D, Z, X, and V. Like you're going", "tokens": [1743, 309, 1177, 380, 652, 2020, 281, 23273, 552, 382, 411, 413, 11, 1176, 11, 1783, 11, 293, 691, 13, 1743, 291, 434, 516], "temperature": 0.0, "avg_logprob": -0.22531987095738318, "compression_ratio": 1.6340425531914893, "no_speech_prob": 1.3287246929394314e-06}, {"id": 934, "seek": 387120, "start": 3893.68, "end": 3896.58, "text": " to visualize them A, B, C, D, E, F, G, right.", "tokens": [281, 23273, 552, 316, 11, 363, 11, 383, 11, 413, 11, 462, 11, 479, 11, 460, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.22531987095738318, "compression_ratio": 1.6340425531914893, "no_speech_prob": 1.3287246929394314e-06}, {"id": 935, "seek": 389658, "start": 3896.58, "end": 3901.88, "text": " They don't have like, A is not any bigger than C in that sense.", "tokens": [814, 500, 380, 362, 411, 11, 316, 307, 406, 604, 3801, 813, 383, 294, 300, 2020, 13], "temperature": 0.0, "avg_logprob": -0.2508401034171121, "compression_ratio": 1.7, "no_speech_prob": 7.934254995234369e-07}, {"id": 936, "seek": 389658, "start": 3901.88, "end": 3903.96, "text": " So that's what like, you know, quantitative ordinal.", "tokens": [407, 300, 311, 437, 411, 11, 291, 458, 11, 27778, 4792, 2071, 13], "temperature": 0.0, "avg_logprob": -0.2508401034171121, "compression_ratio": 1.7, "no_speech_prob": 7.934254995234369e-07}, {"id": 937, "seek": 389658, "start": 3903.96, "end": 3907.8199999999997, "text": " And then you have nominal is the like third category, which are just things that are distinct", "tokens": [400, 550, 291, 362, 41641, 307, 264, 411, 2636, 7719, 11, 597, 366, 445, 721, 300, 366, 10644], "temperature": 0.0, "avg_logprob": -0.2508401034171121, "compression_ratio": 1.7, "no_speech_prob": 7.934254995234369e-07}, {"id": 938, "seek": 389658, "start": 3907.8199999999997, "end": 3911.2, "text": " from each other, but don't have any intrinsic order.", "tokens": [490, 1184, 661, 11, 457, 500, 380, 362, 604, 35698, 1668, 13], "temperature": 0.0, "avg_logprob": -0.2508401034171121, "compression_ratio": 1.7, "no_speech_prob": 7.934254995234369e-07}, {"id": 939, "seek": 389658, "start": 3911.2, "end": 3918.68, "text": " So that would be like your typical categories, blue and red and green, something like that.", "tokens": [407, 300, 576, 312, 411, 428, 7476, 10479, 11, 3344, 293, 2182, 293, 3092, 11, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2508401034171121, "compression_ratio": 1.7, "no_speech_prob": 7.934254995234369e-07}, {"id": 940, "seek": 389658, "start": 3918.68, "end": 3924.3199999999997, "text": " So you have a lot of this jargon that it's helpful to understand, and kind of not just", "tokens": [407, 291, 362, 257, 688, 295, 341, 15181, 10660, 300, 309, 311, 4961, 281, 1223, 11, 293, 733, 295, 406, 445], "temperature": 0.0, "avg_logprob": -0.2508401034171121, "compression_ratio": 1.7, "no_speech_prob": 7.934254995234369e-07}, {"id": 941, "seek": 392432, "start": 3924.32, "end": 3928.56, "text": " the jargon, but some of the concepts, you know, like you, if you understand that, like,", "tokens": [264, 15181, 10660, 11, 457, 512, 295, 264, 10392, 11, 291, 458, 11, 411, 291, 11, 498, 291, 1223, 300, 11, 411, 11], "temperature": 0.0, "avg_logprob": -0.24572616327004354, "compression_ratio": 1.6802973977695168, "no_speech_prob": 2.812977299981867e-06}, {"id": 942, "seek": 392432, "start": 3928.56, "end": 3934.6800000000003, "text": " look, this is a nominal variable, then you're going to think of like, okay, I'm going to", "tokens": [574, 11, 341, 307, 257, 41641, 7006, 11, 550, 291, 434, 516, 281, 519, 295, 411, 11, 1392, 11, 286, 478, 516, 281], "temperature": 0.0, "avg_logprob": -0.24572616327004354, "compression_ratio": 1.6802973977695168, "no_speech_prob": 2.812977299981867e-06}, {"id": 943, "seek": 392432, "start": 3934.6800000000003, "end": 3938.6800000000003, "text": " visualize it maybe with this kind of scale rather than some other kind of scale.", "tokens": [23273, 309, 1310, 365, 341, 733, 295, 4373, 2831, 813, 512, 661, 733, 295, 4373, 13], "temperature": 0.0, "avg_logprob": -0.24572616327004354, "compression_ratio": 1.6802973977695168, "no_speech_prob": 2.812977299981867e-06}, {"id": 944, "seek": 392432, "start": 3938.6800000000003, "end": 3940.6000000000004, "text": " So it just helps you click these things.", "tokens": [407, 309, 445, 3665, 291, 2052, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.24572616327004354, "compression_ratio": 1.6802973977695168, "no_speech_prob": 2.812977299981867e-06}, {"id": 945, "seek": 392432, "start": 3940.6000000000004, "end": 3945.2400000000002, "text": " You know, there's no point trying to do it in a quantitative way.", "tokens": [509, 458, 11, 456, 311, 572, 935, 1382, 281, 360, 309, 294, 257, 27778, 636, 13], "temperature": 0.0, "avg_logprob": -0.24572616327004354, "compression_ratio": 1.6802973977695168, "no_speech_prob": 2.812977299981867e-06}, {"id": 946, "seek": 392432, "start": 3945.2400000000002, "end": 3951.88, "text": " Data cleaning is just, that's like almost every place I've worked in has had, you know,", "tokens": [11888, 8924, 307, 445, 11, 300, 311, 411, 1920, 633, 1081, 286, 600, 2732, 294, 575, 632, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.24572616327004354, "compression_ratio": 1.6802973977695168, "no_speech_prob": 2.812977299981867e-06}, {"id": 947, "seek": 395188, "start": 3951.88, "end": 3957.88, "text": " you get data to visualize and the data is just rubbish one way or the other.", "tokens": [291, 483, 1412, 281, 23273, 293, 264, 1412, 307, 445, 29978, 472, 636, 420, 264, 661, 13], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 948, "seek": 395188, "start": 3957.88, "end": 3962.36, "text": " You know, like there's just, I don't know, there's duplicates, there's the data isn't", "tokens": [509, 458, 11, 411, 456, 311, 445, 11, 286, 500, 380, 458, 11, 456, 311, 17154, 1024, 11, 456, 311, 264, 1412, 1943, 380], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 949, "seek": 395188, "start": 3962.36, "end": 3964.6600000000003, "text": " adequately sorted, stuff like that.", "tokens": [41822, 25462, 11, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 950, "seek": 395188, "start": 3964.6600000000003, "end": 3967.92, "text": " So you're always going to need to do some data transformation work.", "tokens": [407, 291, 434, 1009, 516, 281, 643, 281, 360, 512, 1412, 9887, 589, 13], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 951, "seek": 395188, "start": 3967.92, "end": 3972.9, "text": " In Elm particularly, like you want to end up with nice types, it's going to make everything", "tokens": [682, 2699, 76, 4098, 11, 411, 291, 528, 281, 917, 493, 365, 1481, 3467, 11, 309, 311, 516, 281, 652, 1203], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 952, "seek": 395188, "start": 3972.9, "end": 3975.08, "text": " else work better for you, right?", "tokens": [1646, 589, 1101, 337, 291, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 953, "seek": 395188, "start": 3975.08, "end": 3978.48, "text": " So there's always going to be work taking these data sets and making sure that they", "tokens": [407, 456, 311, 1009, 516, 281, 312, 589, 1940, 613, 1412, 6352, 293, 1455, 988, 300, 436], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 954, "seek": 395188, "start": 3978.48, "end": 3980.44, "text": " end up neatly typed.", "tokens": [917, 493, 36634, 33941, 13], "temperature": 0.0, "avg_logprob": -0.24215500227367606, "compression_ratio": 1.7906137184115523, "no_speech_prob": 1.5779177147123846e-06}, {"id": 955, "seek": 398044, "start": 3980.44, "end": 3984.36, "text": " And maybe that's not, you know, it's not necessarily the case for everyone.", "tokens": [400, 1310, 300, 311, 406, 11, 291, 458, 11, 309, 311, 406, 4725, 264, 1389, 337, 1518, 13], "temperature": 0.0, "avg_logprob": -0.2298185578707991, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.1567984731518663e-06}, {"id": 956, "seek": 398044, "start": 3984.36, "end": 3988.44, "text": " Like a lot of, if you work at a good software company and you're just trying to write a", "tokens": [1743, 257, 688, 295, 11, 498, 291, 589, 412, 257, 665, 4722, 2237, 293, 291, 434, 445, 1382, 281, 2464, 257], "temperature": 0.0, "avg_logprob": -0.2298185578707991, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.1567984731518663e-06}, {"id": 957, "seek": 398044, "start": 3988.44, "end": 3993.08, "text": " visualization for what some nice backend API gives you, you might not need to do much of", "tokens": [25801, 337, 437, 512, 1481, 38087, 9362, 2709, 291, 11, 291, 1062, 406, 643, 281, 360, 709, 295], "temperature": 0.0, "avg_logprob": -0.2298185578707991, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.1567984731518663e-06}, {"id": 958, "seek": 398044, "start": 3993.08, "end": 3994.08, "text": " that.", "tokens": [300, 13], "temperature": 0.0, "avg_logprob": -0.2298185578707991, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.1567984731518663e-06}, {"id": 959, "seek": 398044, "start": 3994.08, "end": 3998.64, "text": " If you're working in a lot of other kinds of companies and somebody drops a CSV file", "tokens": [759, 291, 434, 1364, 294, 257, 688, 295, 661, 3685, 295, 3431, 293, 2618, 11438, 257, 48814, 3991], "temperature": 0.0, "avg_logprob": -0.2298185578707991, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.1567984731518663e-06}, {"id": 960, "seek": 398044, "start": 3998.64, "end": 4002.68, "text": " on you, you're going to need to do a lot of that.", "tokens": [322, 291, 11, 291, 434, 516, 281, 643, 281, 360, 257, 688, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.2298185578707991, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.1567984731518663e-06}, {"id": 961, "seek": 398044, "start": 4002.68, "end": 4005.88, "text": " So it depends on your use case.", "tokens": [407, 309, 5946, 322, 428, 764, 1389, 13], "temperature": 0.0, "avg_logprob": -0.2298185578707991, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.1567984731518663e-06}, {"id": 962, "seek": 400588, "start": 4005.88, "end": 4013.2000000000003, "text": " Yeah, I could imagine like the way that you structure your data being important for both", "tokens": [865, 11, 286, 727, 3811, 411, 264, 636, 300, 291, 3877, 428, 1412, 885, 1021, 337, 1293], "temperature": 0.0, "avg_logprob": -0.2866543361118862, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.4823447145317914e-06}, {"id": 963, "seek": 400588, "start": 4013.2000000000003, "end": 4018.2000000000003, "text": " being able to visualize something the way you want to and for performance reasons too.", "tokens": [885, 1075, 281, 23273, 746, 264, 636, 291, 528, 281, 293, 337, 3389, 4112, 886, 13], "temperature": 0.0, "avg_logprob": -0.2866543361118862, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.4823447145317914e-06}, {"id": 964, "seek": 400588, "start": 4018.2000000000003, "end": 4025.2400000000002, "text": " Like sometimes the way you order things one way or the other can completely change that.", "tokens": [1743, 2171, 264, 636, 291, 1668, 721, 472, 636, 420, 264, 661, 393, 2584, 1319, 300, 13], "temperature": 0.0, "avg_logprob": -0.2866543361118862, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.4823447145317914e-06}, {"id": 965, "seek": 400588, "start": 4025.2400000000002, "end": 4026.2400000000002, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.2866543361118862, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.4823447145317914e-06}, {"id": 966, "seek": 400588, "start": 4026.2400000000002, "end": 4033.6400000000003, "text": " And you talk about the Rose Tree data structure in the new release, which I have to admit,", "tokens": [400, 291, 751, 466, 264, 12765, 22291, 1412, 3877, 294, 264, 777, 4374, 11, 597, 286, 362, 281, 9796, 11], "temperature": 0.0, "avg_logprob": -0.2866543361118862, "compression_ratio": 1.6116071428571428, "no_speech_prob": 1.4823447145317914e-06}, {"id": 967, "seek": 403364, "start": 4033.64, "end": 4036.96, "text": " it sounds really cool, but I don't know what that data structure is.", "tokens": [309, 3263, 534, 1627, 11, 457, 286, 500, 380, 458, 437, 300, 1412, 3877, 307, 13], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 968, "seek": 403364, "start": 4036.96, "end": 4039.44, "text": " Could you give us an intro to that?", "tokens": [7497, 291, 976, 505, 364, 12897, 281, 300, 30], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 969, "seek": 403364, "start": 4039.44, "end": 4041.44, "text": " It sounds pretty at least.", "tokens": [467, 3263, 1238, 412, 1935, 13], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 970, "seek": 403364, "start": 4041.44, "end": 4043.44, "text": " Yeah, I should have.", "tokens": [865, 11, 286, 820, 362, 13], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 971, "seek": 403364, "start": 4043.44, "end": 4048.64, "text": " Yeah, it's again, I mean, jargon is just, it's a trap that's hard to escape, isn't it?", "tokens": [865, 11, 309, 311, 797, 11, 286, 914, 11, 15181, 10660, 307, 445, 11, 309, 311, 257, 11487, 300, 311, 1152, 281, 7615, 11, 1943, 380, 309, 30], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 972, "seek": 403364, "start": 4048.64, "end": 4052.04, "text": " But a Rose Tree is nothing very fancy.", "tokens": [583, 257, 12765, 22291, 307, 1825, 588, 10247, 13], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 973, "seek": 403364, "start": 4052.04, "end": 4056.9, "text": " It's just a tree that each node can have any number of children.", "tokens": [467, 311, 445, 257, 4230, 300, 1184, 9984, 393, 362, 604, 1230, 295, 2227, 13], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 974, "seek": 403364, "start": 4056.9, "end": 4062.2799999999997, "text": " So like a binary tree is just a tree where each node has exactly two children or it's", "tokens": [407, 411, 257, 17434, 4230, 307, 445, 257, 4230, 689, 1184, 9984, 575, 2293, 732, 2227, 420, 309, 311], "temperature": 0.0, "avg_logprob": -0.28726777576264884, "compression_ratio": 1.6436781609195403, "no_speech_prob": 1.3287686897456297e-06}, {"id": 975, "seek": 406228, "start": 4062.28, "end": 4066.4, "text": " a leaf, so two or zero, but like in a Rose Tree, you can have any number.", "tokens": [257, 10871, 11, 370, 732, 420, 4018, 11, 457, 411, 294, 257, 12765, 22291, 11, 291, 393, 362, 604, 1230, 13], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 976, "seek": 406228, "start": 4066.4, "end": 4067.4, "text": " That's it.", "tokens": [663, 311, 309, 13], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 977, "seek": 406228, "start": 4067.4, "end": 4068.4, "text": " Oh cool.", "tokens": [876, 1627, 13], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 978, "seek": 406228, "start": 4068.4, "end": 4071.44, "text": " And it has a zipper so you can traverse it.", "tokens": [400, 309, 575, 257, 29887, 370, 291, 393, 45674, 309, 13], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 979, "seek": 406228, "start": 4071.44, "end": 4076.48, "text": " So in some sense, it's just kind of the, I guess the most general kind of tree that gives", "tokens": [407, 294, 512, 2020, 11, 309, 311, 445, 733, 295, 264, 11, 286, 2041, 264, 881, 2674, 733, 295, 4230, 300, 2709], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 980, "seek": 406228, "start": 4076.48, "end": 4081.2200000000003, "text": " you the least kind of guarantees in terms of like things like performance of searches", "tokens": [291, 264, 1935, 733, 295, 32567, 294, 2115, 295, 411, 721, 411, 3389, 295, 26701], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 981, "seek": 406228, "start": 4081.2200000000003, "end": 4082.2200000000003, "text": " or stuff like that.", "tokens": [420, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 982, "seek": 406228, "start": 4082.2200000000003, "end": 4086.4, "text": " Like it doesn't give you computational benefits, but it can represent sort of any kind of tree", "tokens": [1743, 309, 1177, 380, 976, 291, 28270, 5311, 11, 457, 309, 393, 2906, 1333, 295, 604, 733, 295, 4230], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 983, "seek": 406228, "start": 4086.4, "end": 4089.1200000000003, "text": " you want, as long as you would call it a tree.", "tokens": [291, 528, 11, 382, 938, 382, 291, 576, 818, 309, 257, 4230, 13], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 984, "seek": 406228, "start": 4089.1200000000003, "end": 4090.1200000000003, "text": " Yeah, it makes sense.", "tokens": [865, 11, 309, 1669, 2020, 13], "temperature": 0.0, "avg_logprob": -0.2673370685983211, "compression_ratio": 1.702054794520548, "no_speech_prob": 2.948002020275453e-06}, {"id": 985, "seek": 409012, "start": 4090.12, "end": 4097.16, "text": " I mean, in Elm, we often, I feel like try to use really high level intuitive terms for", "tokens": [286, 914, 11, 294, 2699, 76, 11, 321, 2049, 11, 286, 841, 411, 853, 281, 764, 534, 1090, 1496, 21769, 2115, 337], "temperature": 0.0, "avg_logprob": -0.24361456008184523, "compression_ratio": 1.7457627118644068, "no_speech_prob": 1.8161686057283077e-06}, {"id": 986, "seek": 409012, "start": 4097.16, "end": 4098.16, "text": " things.", "tokens": [721, 13], "temperature": 0.0, "avg_logprob": -0.24361456008184523, "compression_ratio": 1.7457627118644068, "no_speech_prob": 1.8161686057283077e-06}, {"id": 987, "seek": 409012, "start": 4098.16, "end": 4102.12, "text": " But then at the same time, when you get into like mathematical things and statistical things", "tokens": [583, 550, 412, 264, 912, 565, 11, 562, 291, 483, 666, 411, 18894, 721, 293, 22820, 721], "temperature": 0.0, "avg_logprob": -0.24361456008184523, "compression_ratio": 1.7457627118644068, "no_speech_prob": 1.8161686057283077e-06}, {"id": 988, "seek": 409012, "start": 4102.12, "end": 4108.4, "text": " and data structures, you sort of, there are certain properties that you convey a lot of", "tokens": [293, 1412, 9227, 11, 291, 1333, 295, 11, 456, 366, 1629, 7221, 300, 291, 16965, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.24361456008184523, "compression_ratio": 1.7457627118644068, "no_speech_prob": 1.8161686057283077e-06}, {"id": 989, "seek": 409012, "start": 4108.4, "end": 4113.96, "text": " information with when you use a particular term, when you use the jargon.", "tokens": [1589, 365, 562, 291, 764, 257, 1729, 1433, 11, 562, 291, 764, 264, 15181, 10660, 13], "temperature": 0.0, "avg_logprob": -0.24361456008184523, "compression_ratio": 1.7457627118644068, "no_speech_prob": 1.8161686057283077e-06}, {"id": 990, "seek": 409012, "start": 4113.96, "end": 4119.48, "text": " So you kind of have to use the jargon in some of these things.", "tokens": [407, 291, 733, 295, 362, 281, 764, 264, 15181, 10660, 294, 512, 295, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.24361456008184523, "compression_ratio": 1.7457627118644068, "no_speech_prob": 1.8161686057283077e-06}, {"id": 991, "seek": 411948, "start": 4119.48, "end": 4120.48, "text": " But it's good to know.", "tokens": [583, 309, 311, 665, 281, 458, 13], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 992, "seek": 411948, "start": 4120.48, "end": 4121.919999999999, "text": " It's just like, it's a good tree.", "tokens": [467, 311, 445, 411, 11, 309, 311, 257, 665, 4230, 13], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 993, "seek": 411948, "start": 4121.919999999999, "end": 4123.2, "text": " It's a good tree data structure.", "tokens": [467, 311, 257, 665, 4230, 1412, 3877, 13], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 994, "seek": 411948, "start": 4123.2, "end": 4126.879999999999, "text": " I don't think I mentioned in the release, but in the docs, I do actually provide the", "tokens": [286, 500, 380, 519, 286, 2835, 294, 264, 4374, 11, 457, 294, 264, 45623, 11, 286, 360, 767, 2893, 264], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 995, "seek": 411948, "start": 4126.879999999999, "end": 4132.66, "text": " type alias precisely to just show that like, look, this is, it's a pretty mundane data", "tokens": [2010, 419, 4609, 13402, 281, 445, 855, 300, 411, 11, 574, 11, 341, 307, 11, 309, 311, 257, 1238, 43497, 1412], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 996, "seek": 411948, "start": 4132.66, "end": 4133.66, "text": " structure.", "tokens": [3877, 13], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 997, "seek": 411948, "start": 4133.66, "end": 4138.679999999999, "text": " Like there's, you know, it's, but yeah, I guess the main idea of it is like, if you", "tokens": [1743, 456, 311, 11, 291, 458, 11, 309, 311, 11, 457, 1338, 11, 286, 2041, 264, 2135, 1558, 295, 309, 307, 411, 11, 498, 291], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 998, "seek": 411948, "start": 4138.679999999999, "end": 4143.44, "text": " have any other kind of tree, you should be able to fairly trivially transform it into", "tokens": [362, 604, 661, 733, 295, 4230, 11, 291, 820, 312, 1075, 281, 6457, 1376, 85, 2270, 4088, 309, 666], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 999, "seek": 411948, "start": 4143.44, "end": 4147.48, "text": " a Roast tree and then be able to visualize it, you know.", "tokens": [257, 3101, 525, 4230, 293, 550, 312, 1075, 281, 23273, 309, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 1000, "seek": 411948, "start": 4147.48, "end": 4148.48, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.26120798211348684, "compression_ratio": 1.8136200716845878, "no_speech_prob": 9.080216841539368e-06}, {"id": 1001, "seek": 414848, "start": 4148.48, "end": 4154.44, "text": " So, so yeah, that was, that was also one of the recent things we released is a library", "tokens": [407, 11, 370, 1338, 11, 300, 390, 11, 300, 390, 611, 472, 295, 264, 5162, 721, 321, 4736, 307, 257, 6405], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1002, "seek": 414848, "start": 4154.44, "end": 4155.66, "text": " to deal with those.", "tokens": [281, 2028, 365, 729, 13], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1003, "seek": 414848, "start": 4155.66, "end": 4161.799999999999, "text": " So that's been, there's been a lot of open source activity lately on that front.", "tokens": [407, 300, 311, 668, 11, 456, 311, 668, 257, 688, 295, 1269, 4009, 5191, 12881, 322, 300, 1868, 13], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1004, "seek": 414848, "start": 4161.799999999999, "end": 4162.799999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1005, "seek": 414848, "start": 4162.799999999999, "end": 4163.799999999999, "text": " Amazing.", "tokens": [14165, 13], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1006, "seek": 414848, "start": 4163.799999999999, "end": 4165.58, "text": " Well, that's great information.", "tokens": [1042, 11, 300, 311, 869, 1589, 13], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1007, "seek": 414848, "start": 4165.58, "end": 4171.16, "text": " And so Jakob, if people want to learn more, what are some good resources?", "tokens": [400, 370, 15029, 996, 11, 498, 561, 528, 281, 1466, 544, 11, 437, 366, 512, 665, 3593, 30], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1008, "seek": 414848, "start": 4171.16, "end": 4174.12, "text": " We mentioned the tutorial, which I would highly recommend.", "tokens": [492, 2835, 264, 7073, 11, 597, 286, 576, 5405, 2748, 13], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1009, "seek": 414848, "start": 4174.12, "end": 4178.4, "text": " Are there any other good resources for people to dive in to Elm visualization?", "tokens": [2014, 456, 604, 661, 665, 3593, 337, 561, 281, 9192, 294, 281, 2699, 76, 25801, 30], "temperature": 0.0, "avg_logprob": -0.27381950567576513, "compression_ratio": 1.6277372262773722, "no_speech_prob": 1.963760041689966e-06}, {"id": 1010, "seek": 417840, "start": 4178.4, "end": 4186.74, "text": " I think basically it's, there's a, the tutorial example gallery, which we mentioned the documentation", "tokens": [286, 519, 1936, 309, 311, 11, 456, 311, 257, 11, 264, 7073, 1365, 18378, 11, 597, 321, 2835, 264, 14333], "temperature": 0.0, "avg_logprob": -0.2786334482828776, "compression_ratio": 1.5533980582524272, "no_speech_prob": 2.947616621895577e-06}, {"id": 1011, "seek": 417840, "start": 4186.74, "end": 4189.4, "text": " is also fairly extensive.", "tokens": [307, 611, 6457, 13246, 13], "temperature": 0.0, "avg_logprob": -0.2786334482828776, "compression_ratio": 1.5533980582524272, "no_speech_prob": 2.947616621895577e-06}, {"id": 1012, "seek": 417840, "start": 4189.4, "end": 4196.0, "text": " And then finally there's a Slack channel on the Elm Slack called hashtag visualization,", "tokens": [400, 550, 2721, 456, 311, 257, 37211, 2269, 322, 264, 2699, 76, 37211, 1219, 20379, 25801, 11], "temperature": 0.0, "avg_logprob": -0.2786334482828776, "compression_ratio": 1.5533980582524272, "no_speech_prob": 2.947616621895577e-06}, {"id": 1013, "seek": 417840, "start": 4196.0, "end": 4200.679999999999, "text": " which is one of the perks of being old because back then you could still get channels for", "tokens": [597, 307, 472, 295, 264, 36991, 295, 885, 1331, 570, 646, 550, 291, 727, 920, 483, 9235, 337], "temperature": 0.0, "avg_logprob": -0.2786334482828776, "compression_ratio": 1.5533980582524272, "no_speech_prob": 2.947616621895577e-06}, {"id": 1014, "seek": 417840, "start": 4200.679999999999, "end": 4204.799999999999, "text": " your projects.", "tokens": [428, 4455, 13], "temperature": 0.0, "avg_logprob": -0.2786334482828776, "compression_ratio": 1.5533980582524272, "no_speech_prob": 2.947616621895577e-06}, {"id": 1015, "seek": 420480, "start": 4204.8, "end": 4211.16, "text": " So yeah, so you can ask questions there and I tend to respond reasonably promptly.", "tokens": [407, 1338, 11, 370, 291, 393, 1029, 1651, 456, 293, 286, 3928, 281, 4196, 23551, 48594, 13], "temperature": 0.0, "avg_logprob": -0.20023852586746216, "compression_ratio": 1.6157205240174672, "no_speech_prob": 5.626234269584529e-07}, {"id": 1016, "seek": 420480, "start": 4211.16, "end": 4214.24, "text": " So that's, that's basically it so far.", "tokens": [407, 300, 311, 11, 300, 311, 1936, 309, 370, 1400, 13], "temperature": 0.0, "avg_logprob": -0.20023852586746216, "compression_ratio": 1.6157205240174672, "no_speech_prob": 5.626234269584529e-07}, {"id": 1017, "seek": 420480, "start": 4214.24, "end": 4219.9800000000005, "text": " If somebody wants to write a book, as I said, please, please, you're very welcome to.", "tokens": [759, 2618, 2738, 281, 2464, 257, 1446, 11, 382, 286, 848, 11, 1767, 11, 1767, 11, 291, 434, 588, 2928, 281, 13], "temperature": 0.0, "avg_logprob": -0.20023852586746216, "compression_ratio": 1.6157205240174672, "no_speech_prob": 5.626234269584529e-07}, {"id": 1018, "seek": 420480, "start": 4219.9800000000005, "end": 4225.58, "text": " Is there anything that you would like to see Elm visualization be used for that would get", "tokens": [1119, 456, 1340, 300, 291, 576, 411, 281, 536, 2699, 76, 25801, 312, 1143, 337, 300, 576, 483], "temperature": 0.0, "avg_logprob": -0.20023852586746216, "compression_ratio": 1.6157205240174672, "no_speech_prob": 5.626234269584529e-07}, {"id": 1019, "seek": 420480, "start": 4225.58, "end": 4230.84, "text": " you excited or you just, that would be nice to have somewhere out there?", "tokens": [291, 2919, 420, 291, 445, 11, 300, 576, 312, 1481, 281, 362, 4079, 484, 456, 30], "temperature": 0.0, "avg_logprob": -0.20023852586746216, "compression_ratio": 1.6157205240174672, "no_speech_prob": 5.626234269584529e-07}, {"id": 1020, "seek": 423084, "start": 4230.84, "end": 4235.64, "text": " I think one of the things that somebody actually started on, and I think it's fairly productive", "tokens": [286, 519, 472, 295, 264, 721, 300, 2618, 767, 1409, 322, 11, 293, 286, 519, 309, 311, 6457, 13304], "temperature": 0.0, "avg_logprob": -0.2509848730904715, "compression_ratio": 1.7257383966244726, "no_speech_prob": 1.0028742281065206e-06}, {"id": 1021, "seek": 423084, "start": 4235.64, "end": 4242.28, "text": " is you can use Elm visualization as a library to build the other kind of visualization library,", "tokens": [307, 291, 393, 764, 2699, 76, 25801, 382, 257, 6405, 281, 1322, 264, 661, 733, 295, 25801, 6405, 11], "temperature": 0.0, "avg_logprob": -0.2509848730904715, "compression_ratio": 1.7257383966244726, "no_speech_prob": 1.0028742281065206e-06}, {"id": 1022, "seek": 423084, "start": 4242.28, "end": 4243.28, "text": " right?", "tokens": [558, 30], "temperature": 0.0, "avg_logprob": -0.2509848730904715, "compression_ratio": 1.7257383966244726, "no_speech_prob": 1.0028742281065206e-06}, {"id": 1023, "seek": 423084, "start": 4243.28, "end": 4248.400000000001, "text": " You can build an explanatory data visualization library, which under the hood is powered by", "tokens": [509, 393, 1322, 364, 9045, 4745, 1412, 25801, 6405, 11, 597, 833, 264, 13376, 307, 17786, 538], "temperature": 0.0, "avg_logprob": -0.2509848730904715, "compression_ratio": 1.7257383966244726, "no_speech_prob": 1.0028742281065206e-06}, {"id": 1024, "seek": 423084, "start": 4248.400000000001, "end": 4250.8, "text": " Elm visualization primitives.", "tokens": [2699, 76, 25801, 2886, 38970, 13], "temperature": 0.0, "avg_logprob": -0.2509848730904715, "compression_ratio": 1.7257383966244726, "no_speech_prob": 1.0028742281065206e-06}, {"id": 1025, "seek": 423084, "start": 4250.8, "end": 4256.12, "text": " And so I think that already exists, but what would be really cool, I think in my mind is", "tokens": [400, 370, 286, 519, 300, 1217, 8198, 11, 457, 437, 576, 312, 534, 1627, 11, 286, 519, 294, 452, 1575, 307], "temperature": 0.0, "avg_logprob": -0.2509848730904715, "compression_ratio": 1.7257383966244726, "no_speech_prob": 1.0028742281065206e-06}, {"id": 1026, "seek": 425612, "start": 4256.12, "end": 4260.88, "text": " if you could couple that with some code gen and you would have like, you could have like", "tokens": [498, 291, 727, 1916, 300, 365, 512, 3089, 1049, 293, 291, 576, 362, 411, 11, 291, 727, 362, 411], "temperature": 0.0, "avg_logprob": -0.3113646847861154, "compression_ratio": 1.9, "no_speech_prob": 1.1015748668796732e-06}, {"id": 1027, "seek": 425612, "start": 4260.88, "end": 4266.0, "text": " an eject button where like, you could start with that high level one and then you'd be", "tokens": [364, 32520, 2960, 689, 411, 11, 291, 727, 722, 365, 300, 1090, 1496, 472, 293, 550, 291, 1116, 312], "temperature": 0.0, "avg_logprob": -0.3113646847861154, "compression_ratio": 1.9, "no_speech_prob": 1.1015748668796732e-06}, {"id": 1028, "seek": 425612, "start": 4266.0, "end": 4269.2, "text": " like, you know what, I just want to go hardcore.", "tokens": [411, 11, 291, 458, 437, 11, 286, 445, 528, 281, 352, 28196, 13], "temperature": 0.0, "avg_logprob": -0.3113646847861154, "compression_ratio": 1.9, "no_speech_prob": 1.1015748668796732e-06}, {"id": 1029, "seek": 425612, "start": 4269.2, "end": 4273.08, "text": " You would hit that eject button and it would transform that into like Elm visualization", "tokens": [509, 576, 2045, 300, 32520, 2960, 293, 309, 576, 4088, 300, 666, 411, 2699, 76, 25801], "temperature": 0.0, "avg_logprob": -0.3113646847861154, "compression_ratio": 1.9, "no_speech_prob": 1.1015748668796732e-06}, {"id": 1030, "seek": 425612, "start": 4273.08, "end": 4276.04, "text": " code and then you could, you know, fiddle with it.", "tokens": [3089, 293, 550, 291, 727, 11, 291, 458, 11, 24553, 2285, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.3113646847861154, "compression_ratio": 1.9, "no_speech_prob": 1.1015748668796732e-06}, {"id": 1031, "seek": 425612, "start": 4276.04, "end": 4277.4, "text": " That would be really cool.", "tokens": [663, 576, 312, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.3113646847861154, "compression_ratio": 1.9, "no_speech_prob": 1.1015748668796732e-06}, {"id": 1032, "seek": 425612, "start": 4277.4, "end": 4284.2, "text": " Elm visualization land or something like that.", "tokens": [2699, 76, 25801, 2117, 420, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.3113646847861154, "compression_ratio": 1.9, "no_speech_prob": 1.1015748668796732e-06}, {"id": 1033, "seek": 428420, "start": 4284.2, "end": 4286.2, "text": " Something like that.", "tokens": [6595, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1034, "seek": 428420, "start": 4286.2, "end": 4288.08, "text": " So that would be pretty fun.", "tokens": [407, 300, 576, 312, 1238, 1019, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1035, "seek": 428420, "start": 4288.08, "end": 4295.72, "text": " Maybe the ejection could be an Elm review rule that automatically scoops out the code.", "tokens": [2704, 264, 32520, 313, 727, 312, 364, 2699, 76, 3131, 4978, 300, 6772, 795, 78, 3370, 484, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1036, "seek": 428420, "start": 4295.72, "end": 4296.72, "text": " Great stuff.", "tokens": [3769, 1507, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1037, "seek": 428420, "start": 4296.72, "end": 4298.2, "text": " Well, Jakob, it was a pleasure having you on.", "tokens": [1042, 11, 15029, 996, 11, 309, 390, 257, 6834, 1419, 291, 322, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1038, "seek": 428420, "start": 4298.2, "end": 4299.2, "text": " Thanks so much for coming on.", "tokens": [2561, 370, 709, 337, 1348, 322, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1039, "seek": 428420, "start": 4299.2, "end": 4300.2, "text": " Yeah, thank you.", "tokens": [865, 11, 1309, 291, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1040, "seek": 428420, "start": 4300.2, "end": 4301.2, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1041, "seek": 428420, "start": 4301.2, "end": 4302.2, "text": " Thanks for having me.", "tokens": [2561, 337, 1419, 385, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1042, "seek": 428420, "start": 4302.2, "end": 4303.2, "text": " It was really nice.", "tokens": [467, 390, 534, 1481, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1043, "seek": 428420, "start": 4303.2, "end": 4304.2, "text": " And Jeroen, until next time.", "tokens": [400, 508, 2032, 268, 11, 1826, 958, 565, 13], "temperature": 0.0, "avg_logprob": -0.30069592677125145, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.2482308875405579e-06}, {"id": 1044, "seek": 430420, "start": 4304.2, "end": 4315.2, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 50914], "temperature": 0.0, "avg_logprob": -0.6485004425048828, "compression_ratio": 0.6666666666666666, "no_speech_prob": 6.375573320838157e-06}], "language": "en"}