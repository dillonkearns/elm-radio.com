{"text": " Hello, Jeroen. Hello, Dillon. How are you doing today? I'm doing great. How are you? Very good. I'm ready to dive into this topic. What are we talking about? We're talking about opaque types today. Since we're going to talk about types a lot during this podcast, I think we need to set up a good baseline with talking about opaque types. Yeah. That's a great point. It's a big topic and I don't think we're going to be able to cover everything about opaque types. I think this is really just setting it up for many future episodes to explore this topic further. This is going to be opaque types episode one out of some amount of episodes. Yeah. I think this is like a whole... There's going to be a whole college curriculum where this is opaque types 101, but hopefully we can get a 201 and a 301. Or more specified episodes. Yes. Yeah. Opaque types about phantom types, opaque types about validation, for instance. Exactly. Yeah. Opaque types is really just one of the core tools in your design toolkit as an API designer in Elm. When I say API designer, I don't just mean designing packages. Of course you're using your API design toolkit more than any other time when you're designing an Elm package. But really if you're just building something at your workplace or something in a small project that you're maintaining, you still use API design to make your code easier to work with. Yeah. You use API design a lot when writing an application. Definitely. Yes. Exactly. So how about a definition? What is an opaque type? What I would say is an opaque type is a custom type or a union type in other languages where the constructors are not exposed to other modules. Exactly. That's it. That's exactly how I think of it. It's just a really fancy sounding term for saying that it is a private constructor. Yeah. So fancy. The private constructor for a custom type. There you go. It's not that mouthful but less mysterious. Yeah, exactly. So what would be the most basic example of an opaque type? I've got a go to example that I use. So one thing I use is there are certain constraints that you can't do simply using an Elm type by itself. You need a type that is private and therefore you can ensure certain constraints about that type through the module API. Yes, definitely. So for example, let's say that you wanted to have a positive integer. Elm has no way to enforce that an integer is positive because you don't have dependent types or any fancy stuff that checks the values through the type system. Yes, exactly. So you can say something is an int but you can't say that it's a positive int. So how would you do that using Elm? How would you enforce that constraint? You would make an opaque type. So you would create a new type positive integer. You would put it in a different module and you would not expose the constructors. And then you would expose one function or at least one function that would be able to create one such positive integer. And then one would check whether the number is positive. And if it isn't, it doesn't return a positive integer, it returns something else. So you could have a maybe positive integer or a result with a more precise error. Right. Now, okay, so this is bringing up an interesting point because there are different patterns for using opaque types to model these constraints. So the one you're talking about is sort of like modeling. It's modeling a constraint through a type that represents a runtime check. So there's this runtime check if n is greater than zero or greater than or equal to zero, depending on how you want to define positive. Let's just say greater than zero. Okay, so you can check if n is greater than zero, then you give just positive integer n. Yes. Otherwise, you return nothing. That's one pattern that you can do to use a runtime check that you could validate something. You could say, is something a valid email address and do some runtime check or things like that. Right. You can do any sort of validation. Is something a strong password? Exactly. Right. And so if you have that type, you know that it has met the validation that you define in that module. And you know, the only place to look to see what the constraints are is within the boundaries of that module. So it makes it easier to reason about the code because you don't have to think about every place that's calling that module. You don't have to think about every place that might in the future call that module. You only think about the code in that module because it's the gatekeeper for that constraint. Yes, you don't have to think about is the age of the user above zero in the user admin panel, for instance. Yeah. You only have to think about it in one location, which is the positive integer module. Right. So this is a great technique for taking a runtime check and turning it into typed data. And there's this sort of process when you're working with Elm in general that you're always sort of refining down a type as you go along. You're proving more and more qualities about that data. And so keeping track of a certain constraint or validation is really useful with a type. You could also say, you know, this is a non empty string and you could represent that using this sort of technique of keeping track of a runtime validation through a type that is returned conditionally. So you will only return that type on the condition that that validation passes. Yes. There's another way to do it. So let's take the positive integer example. We talked about doing this runtime validation where we conditionally return that type. And so if we have that type, we know that condition was met. There's another way to do it where you don't have to return that type conditionally using a maybe or a result. The way you do that is you say positive integer, you define a constructor one that gives you a positive integer one and within the API for that positive model, you know that one is a positive int. Yes. And then you could you could expose whatever API you want. And of course, it depends on your domain. It depends on the problem you're trying to solve. But for example, you could have an increment function that increments it by one. Now you still are guaranteeing that it's a positive int. So you're not doing a validation at runtime that will conditionally return you a type. You are proving through the API that it's impossible to not meet that constraint because of the API you expose. Right. So you still need some validation to ensure that the integer is within acceptable bounds. So it needs to be between zero and two billion, which is the upper limit for integers, for instance. So if you go past that, you still need to validate within the positive integer module that is correct. Interesting. Yeah, I mean, that that's something that you kind of need to look at the particular needs of your domain and figure out the way to model that. And, you know, there's there's no one solution. It's really an exercise in thinking about your constraints and thinking about how the API you expose enables those constraints and rules out anything else. Yeah, exactly. So another example I think of sometimes is money. You know, let's say you've got a dollar amount and maybe you're representing it in cents. So I've actually run into this before where you have a dollar amount. And if you expose the constructor, maybe maybe you really want to make sure that that money is non negative, right? Or maybe if you're representing that money in a negative way, maybe the internals of how you represent that money might change over time. So maybe you could represent it as a negative int, or you could represent that with a particular value that says whether the money is negative or not. And those API design decisions, those things evolve over time as your API evolves, as your domain evolves and the problems you're trying to solve. And so I think this leads us to another point about opaque types, which is that it allows you to hide the implementation details and make it so that users aren't depending on those implementation details. And so downstream, you don't make breaking changes because you've hidden the internals and so you can freely change them as long as the public API remains the same. Yes, that's something that I noticed a lot of when writing applications is that you start with the type, which is a record type, an alias to record type. And then because the internals are exposed to the other modules, the other modules start depending on them. And then when you want to make changes to the API, to the internal structure, then you get into troubles because lots of other modules depend on how that works. And you need to, even for simple changes like adding a new field to the record, that's very tedious work. Whereas if it was a pig to start with, it would be very easy. You only have to change it in one place, maybe also in tests and that's it. Well, probably not even in tests. Right, right. Because the tests also depend on the public API that you've exposed. Exactly. And that's also a good point. People often ask the question, should I test my internals with the pig types? You can't. It's a problem solved. Right. Now, okay, so this leads to perhaps a more advanced topic, but I just want to put it out there to make people aware of this. There are some cases, so I think of these things, you can have a module opaque value or a module opaque type, or you can have a package opaque type. And when I say package opaque type, I'm talking about having an Elm package that you're building and that Elm package can have a type that's internal to the package, meaning anything, any code within that package can use that type and see the type and anything outside of the package cannot use the internals of that type. So there are a lot of packages that use this technique. For example, in Elm UI, the element type is internal. It's got some data. It's not just a record. If it was a record, then you wouldn't be able to hide the details of that constructor from the outside world. But it's some internal type that's got whatever data that custom type has. Maybe it's got variants you don't care or know as a consumer of that type of that package. And all of the code in that package is able to use those internal details. And it's protecting those constraints and those validations to anybody who's using the package. But it can be used anywhere. Those internals can be directly used anywhere within that package. Yes, because that package still enforces all the constraints on a package level. Sometimes you use a pick types on the module level to ensure guarantees inside it. But when you have a package and that is well built, you don't need to have them inside the package. You can just enforce them at the whole level, the package level. Exactly. Exactly. So that could really be a whole topic for an episode. But just to get people aware of that pattern, if you're browsing through the documentation in an Elm package, and you see type alias element equals element, you're like, what? What's that? It's some voodoo magic that is using this package opaque type. So should we talk a little bit about how to organize code in opaque modules and what that looks like? Yes, let's do that. Okay, so this is this is a really interesting topic. Sometimes I see people organizing their code with update helpers, view helpers. They have like a module that has their types defined. And I think there are times, there are plenty of times when having a module that just has some view logic is a great idea. There's sometimes when you might want to have some utility helpers, maybe some update function helpers. But I think that just as a general rule, organizing your modules according to this is view related stuff, this is update related stuff, you miss out on some of these opportunities of constraints that you can use opaque types to help you enforce. So for example, let's say that we had a money module, and we define the money type in one module and we define something that shows you how to display money in another module. Well, okay, let's say we start off with a representation of money is dollars and cents. And we move that over to representing money as just cents, the lowest denomination. Now since since we had a types module that had our money type, as well as several other types for our application, that module can't be opaque because the way to present money, the function that gives you a string form of the money, the function that gives you an HTML form of the money, the function that allows you to add together to money values, those things all live in separate modules. And because they live in separate modules, you can't make it opaque, because the only way to do an opaque type is if the type lives with the functions that deal with that type. And so that's a general pattern that there's a type at the center of an opaque module or just a module in general. Now that doesn't mean that there can't be modules that just have helpers that are here are some view helpers. That's that's reasonable, but just be aware of, of that. Trade off. Yeah, beyond the lookout for when am I spreading the type and the things that deal with this type in different places, I'd say that that is a code smell. Yeah, potentially you lose some guarantees. Yes. Because if you do that, potentially you lose some guarantees because you can use the money type in other modules, you can use, you can look at and use the internals. And that's not what you want to have. Exactly. So you've now started depending on the internals of that implementation throughout your entire code base. And so now if that changes, you have to think about, okay, was anybody depending on these internals in a way that I'm going to break if I change them? Whereas if you surely surely, surely no one, if I leak details, no one will use them. Exactly. Exactly. I mean, you're going to get money showing up where, you know, the you're showing a hundred times more money than you had because somebody was presenting it in some way or sending it off to some API depending on your internals. And you don't want to worry about that. So for critical parts of your domain, it's, it's even more important to use these opaque types because you want to be careful about the internals and you don't want there to be bugs, right? So in cases where it's very important not to have bugs, you want to hide the internals and an opaque type of how you do that. Well, the thing is, it's not necessarily about hiding the internals. Sure. That's a good point. But when you want to have the guarantees, it's not because you want to hide the details, it's because you want to limit what people can do with it. So you want an API to limit what are the operations that you can do with the type. So for money, you could display it in some ways, in some formats, you could add it, you could make it so you don't add money of different currencies, but it doesn't make sense to divide money by money, for instance. So you would not have the API allow that possibility. And that's why what an opaque type allows you to do. It limits what you can do with a type. Right. That's a great point. Yeah. And it also allows you to protect certain constraints about that. So for example, I've got a blog post I wrote about this thing I use the term exit gatekeepers. And so I like I use the example of a social security number. So if you have a social security number, you want to be very careful with what you do with that. If you have a sort of logging service, if you get some sort of error log and it just takes some data and presents it and if it has access to the internal representation of that type, you could imagine that the error logs are going to show up with people's social security numbers, which is not great. Yep. Don't do it. Don't do it. For their sake, don't do it. Right. The take module is a great way to be confident about protecting constraints. And in cases of security, you want to be confident about protecting certain constraints. In the case of things related to money, you want to be confident about protecting certain constraints. So I wanted to touch on one point, which is I think that sometimes it makes people uncomfortable to organize a module that has like, okay, how do I present this money as a string? What's the HTML look like for this money? How do I perform an HTTP request and encode this? So like, so you might have a JSON decoder for money. You might have a JSON encoder for money. You might have a function that returns HTML or that returns a string. In addition to just the functions that add them together. I think that that can make some people uncomfortable because it feels like that's a different concern. Like that's, that's how you display money. That's how you turn it into HTML. The thing is, I find that when I'm trying to understand what's going on with the code, I often like to have it organized in that way. It's very natural to say something's off with how this money is being formatted. Where do I look for that? The money module. It's very natural, but it also has this added benefit that you can enforce all the constraints in this one place where you have access to the internals and you have the responsibility to enforce those constraints. And that responsibility doesn't leak outside of that module. So if anything is wrong with the constraints being enforced or the, or the way that that's being presented, you know where to look. I don't know if I would put the view inside the money module. The reason why I would probably do that is if the view needs to contain something that I do not want to be used somewhere else, then I would probably do that. Like for instance, if I, if there was some, if there were some internal details that I needed to show, but that would be dangerous to leak out, then I would make the view be inside the money module. Otherwise I think it's fine to have it outside the money module. Right. You're saying that you would define the two string function for the money inside the money module and then anything that wanted to present the HTML would call the two string. Exactly. What if you have some special way to display it where you know you display like, I don't know, you have some special HTML class that is applied. So if it's negative, then you show it in red with parentheses around it, or if it's positive, you show it in green. And if it's zero, you show it in gray. I guess you could create a new custom type. Yeah. Yeah, that's a good, that's a good way to approach that problem. I guess the, the general sensibility is what you have to develop, which is I'm trying to protect these constraints. I don't want to leak these constraints outside of the module. And so yeah, as you say, you can create a new custom type, which is the public interface that describes is this, you know, maybe it's a custom type with three variants. So it's money that's either positive, zero or negative. And you ask for money and it gives you this custom type. And then you have another module, or maybe you can depend on those details of those variants of that custom type in directly in your view function or wherever it's appropriate. Yeah. But I guess the general thought process is what constraints do I want to protect? What are the internals that I want to use to enforce those constraints and that I want to protect the outside world from depending on? Yes, exactly. So as long as you're doing that, that's what leads you in the right direction. And it may take many different forms, but I do find that often the things that belong in a particular module might be more than what somebody would expect. So for example, how do you make an HTTP request to, you know, maybe you need to fetch an auth token and you've got, you know, you might think like, well, I've got my HTTP requests module and this performs all my HTTP requests. So here's how I do an HTTP, like here are all the HTTP requests that I do to my server and I store it in this module or I store it in the module for this page or something. Yeah. Well, in a way the details about how you perform the authentication request and how you decode that value, they kind of belong with that authentication token type. So there's this type, it's opaque. You don't want somebody to be able to just construct an auth token with a string to just fake it and pass in an auth token. Like you're either authenticated or you're not. If you're not authenticated, just be honest with me, you're not authenticated and I'll let you access what you can, not being authenticated, but don't just give me an empty string. And so the only way you can get an auth token type is by performing an HTTP request, which is exposed from that auth token module. Yeah. And maybe that one needs to be configured, but just the function that will make that HTTP request will take the needed parameters. Right. So for example, perhaps you inject the dependency from the outside of what is the base URL for the API. So if it's like a staging server or a dev server or a production server, you inject that. So those details are not coupled to your auth token module. So I think that this is, I just want people to be aware that it's okay to have these different types within a module kind of living together. It can actually work quite elegantly and just do what it takes to protect your constraints. That's the first and foremost thing. And nice design will follow from protecting those constraints. Yeah. I think that's a question always with when you write an Elm type is what constraints do I want? So when you try to, when you start to leak out details, what guarantees do you lose? Exactly. So I think that, I think that if somebody wants to get started applying this technique of using opaque types, I think that the very first thing to start doing is to start with that mindset of thinking about the constraints and actually stepping back from that even, what is the problem you want to solve? Exactly. And how could a type or an API and hiding some of those types in an opaque module, in an opaque type, how would that help you enforce those constraints or solve that problem? Yeah. So any parting wisdom on how people can get started using opaque types? Yeah. I've got one very good piece of advice. Put your type into a separate module and make it opaque. There you go. Just do it. And you can, you can take an existing module. Let's say that you've taken, you've had a money module that exposed the constructor. Well the good news is with Elm, I don't know if you know this, but if you start breaking things, then the compiler will tell you what you broke. Is that true? Yeah. It's a pretty cool feature. It's like a linter or something. It's really powerful. Oh, nice. So if you want to get started, a good first step is to take a type, maybe it's like a business critical type, like money or something that's core to your domain. Maybe it's something you've been having bugs in this area. I had an example in Elm GraphQL in the generator code for the CLI where I generate the Elm GraphQL code. I had some bugs that I, bugs kept coming up around the way I was normalizing values where in some cases I need to normalize something to be a valid Elm name so I can have an Elm function that's based on some value from a GraphQL schema. So sometimes I need to normalize it, but sometimes I need to use the actual name as far as the GraphQL schema is concerned. For example, if I'm performing the request, I need to use the name GraphQL knows, the unnormalized name. If I'm generating a function or a type, I need to normalize it according to certain rules. So I had bugs coming up in this area a few times and I'm like, you know what? I need to use the type system and module design to protect these constraints. Because in both cases you were using strings, I'm guessing. Exactly. The strings were getting passed down. Exactly, so I just wrapped it in a custom type. I made that custom type hidden in a module so it's a private constructor so it's an opaque type. You know, I think I called it like a camel cased name. So then I know this represents a camel cased name and I can get, I had basically a getter that allows me to either get the raw unnormalized value or a valid Elm identifier. And then what happened is I, so this is a trick that I like to use is to, you want to hold on to the type that represents like the purest form and the constraints as long as possible. Yeah. So I think of this as wrap early, unwrap late. I agree. So as soon as something comes in, you want to wrap the type in this type that represents something or as we kind of talked about, in some cases it may perform a validation and it may conditionally return that if that validation succeeds. Or in some cases like an auth token, you have an HTTP request and the only way to get that auth token type is through the HTTP request function that's exposed in that module. And so you want at the earliest possible moment, you want something to have this type which represents the constraints about it. And then at the latest possible moment, you want to turn that into a primitive or a side effect or whatever it may be. So in the case of a normalized or unnormalized name in my Elm GraphQL CLI, at the very last possible moment, when I turn something into a GraphQL request or when I turn something into a function name that I'm going to generate in the generated code, that's the moment that I do it and no sooner because otherwise I'm just passing strings around. I don't know what they represent. I can't use it to enforce those constraints and those semantics. And you got the same problem over again. Exactly. So now that brings up another thing which is that opaque types are a great way to enforce semantics. Just passing something around, you know what it represents. And as you said before, you know what the valid operations are to do with it. So the API design, that's the only thing that allows you to protect what can I do with this type of thing. Because often what people do is they make a type alias. Like type alias, user equals some records with a lot of details. So the semantics are there, but you have no guarantees. Exactly. Exactly. Okay. So if you want to get started with opaque types, then pick a module, pick something that's been causing problems, creating bugs, or just been difficult to maintain. Maybe you have to make breaking changes often because some of your code downstream that depends on it is directly using internals. And then you can just try one small step. You can just make that constructor private, see what happens, see what breaks, and then try changing those areas that break. And then in fact, you can even expose the constructor directly as a function. At least to start with. At least to start with. Exactly. That's one small step that gets you in the right direction and then start playing around with it and massaging in those constraints. Yeah. And while you do that, you will notice you will need access to certain details of the type and some of them may look odd. Like why do you need that information at that location? And maybe you'll notice some smells with that. Right. Right. So yeah, get good at noticing those smells. Get good at noticing when you're depending on internals, when you're using a type that's defined in one module, using functions defined in another module. Be on the lookout for those types of smells. Be on the lookout for primitive obsession, having these primitives that you're depending on everywhere and you lose track of the semantics and the valid operations. So you're performing operations on them that shouldn't be valid, but they're just a primitive, so there's nothing keeping you from doing that. Yeah. I'd love to learn more about that technique. Just get used to doing it myself. Yeah. Yeah. I actually gave a talk at a conference last year that I showed this technique for, I called it this technique of wrapping something in a semantic type. And it's actually quite cool because you can wrap something in a type, kind of like I described for this type that represents a value that represents a name in a GraphQL schema. You wrap it in that type and then instead of having primitives, a string that you're passing to this function, passing to this function, then returning in this function, you just say, oh, actually this is no longer a string. This is this opaque type. And then you change all these type signatures everywhere. Instead of saying it takes a string and it returns this, you say it takes this opaque type and then it returns this. And you keep doing that all the way until you get to the very end. And then at the very end, you call some function that takes that opaque type and gives you a primitive. And all the way through, all you've done is change some type annotations so that it says, instead of passing a primitive, you're passing an opaque type. And then at the very end, at the very edge, you return that primitive at the last possible moment. You wrap early and you unwrap late. It's very easy. It's a very safe refactoring. And it's a great way to have nice semantics that ensure that you're using things with the appropriate actions. Yeah. It's very safe. Yes. Because you only need some wiring. You don't change business logic. Exactly. I mean, really it's the kind of thing that IDE tooling would be really good at because it's a very tedious, mindless wiring exercise. But it's powerful because it opens up these constraints that you can model through the API design. Yeah. So one other way of starting with opaque types is to create a new module, new opaque type. I think we would both advise people to start making the types opaque by default. Right? It's a really interesting question and it's one I've thought about. I think at the very least, play around with it, try it, see how it feels. Try making some things opaque by default. You know, I mean, there are times when using a record is appropriate, right? I mean, can your model in your application be a record? Yeah, that's absolutely fine. That's a great representation for that, for example. So just I would say that try that. Try making something opaque as a starting point. Try creating a new module for something you're trying to represent. I think that it does take some judgment and I think that you, because if you try to make everything an opaque type, it does introduce an overhead. Obviously. And I think that for you saying just use an opaque type right away, I think that you have the judgment and the experience to know this is probably going to be a good idea. So it feels natural. But I think that if somebody who's new to opaque modules were to try to do that, they might say, oh, OK, well, here's my model for my application. So I'll put that in a module and I'll make that an opaque type or I'll make that a custom type. Yeah, right. Well, there are two reasons why I would do it. Is one, it's much easier to turn an opaque type into a non opaque type than the other way around. Right. So if you have a type and you need to make it opaque, that will be tedious. So as you said, an IDE would be great for that, but we don't have any IDE that does that. Not yet. Crossing my fingers. Crossing my fingers. Me too. Yeah. So I think that what I would recommend is that push yourself out of your comfort zone a little bit. So if it feels like a stretch to start with an opaque module, maybe don't do it all the time, always, but try doing it for a day and see how that goes and see what you learn. When was it not working well and why was that not working well and when did it work surprisingly well? You can't learn something new unless you push yourself to try a different way of working. And with opaque modules, it's a different mindset. And so you have to push yourself to try something new and think of it as an experiment, see how it goes. Film is great for refactoring and changing things and telling you where you need to fix things. So just try something. And then above all, experiment to try new ways of working with that mindset of what problem am I trying to solve and how can types help me do that? How can I enforce constraints using types and module design, API design? Yeah. Basically, if you don't gain any guarantees from using a big type, don't use it. That's my baseline. But as you said, you probably need some experience with that. So try making it opaque to start with. Don't mind the boilerplate. When you're used to boilerplates in Elm, it feels all for us first. It's not that bad. Yes. And when you use boilerplates, it's usually for something good like getting new guarantees. Exactly. And one micro tip, when you're doing this technique, I think a lot of people don't know this trick that if you have a custom type with a single variant, you can destructure that custom type variant directly in your function signature. So if I have type money equals money int where int is the sense. In the money module, I can have a two string function that takes money and returns a string. So I could say two string and then in parentheses, I can do capital money. So that's destructuring my money just like I would do in a case statement. But it's not in a case statement. It's two string parentheses money. And then I destructure that int in some variable name money value. And now I don't have to do a case statement. It's just one little trick that will make your life a little bit easier. Yeah, I think we're all very happy when we learn that technique. Yeah, absolutely. Yeah, this single variant custom type ends up happening a lot when you're using opaque types. Yeah, it removes like half of the boilerplate. Yeah, exactly. All right. Well, I think there's a lot more to discuss in the episode, but hopefully this is a good starting point. Yeah, we hope you understand the big types now and that you won't be lost when we talk about them in future episodes. Yeah, hopefully if people just give these a try, take them for a spin and start taking a step in this direction of experimenting, then that's a success. So take them for a spin. See what you think. Yeah. All right, Jeroen. Well, I'll talk to you next time. Have a good day. Have a good day.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 2.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 1, "seek": 0, "start": 2.0, "end": 3.0, "text": " Hello, Dillon.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 2, "seek": 0, "start": 3.0, "end": 4.0, "text": " How are you doing today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 3, "seek": 0, "start": 4.0, "end": 5.0, "text": " I'm doing great.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 4, "seek": 0, "start": 5.0, "end": 6.0, "text": " How are you?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 5, "seek": 0, "start": 6.0, "end": 7.0, "text": " Very good.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 6, "seek": 0, "start": 7.0, "end": 8.0, "text": " I'm ready to dive into this topic.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 7, "seek": 0, "start": 8.0, "end": 9.0, "text": " What are we talking about?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 8, "seek": 0, "start": 9.0, "end": 10.0, "text": " We're talking about opaque types today.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 9, "seek": 0, "start": 10.0, "end": 19.240000000000002, "text": " Since we're going to talk about types a lot during this podcast, I think we need to set", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 10, "seek": 0, "start": 19.240000000000002, "end": 23.0, "text": " up a good baseline with talking about opaque types.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 11, "seek": 0, "start": 23.0, "end": 24.0, "text": " Yeah.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 12, "seek": 0, "start": 24.0, "end": 25.560000000000002, "text": " That's a great point.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50464, 50464, 2425, 11, 28160, 13, 50514, 50514, 1012, 366, 291, 884, 965, 30, 50564, 50564, 286, 478, 884, 869, 13, 50614, 50614, 1012, 366, 291, 30, 50664, 50664, 4372, 665, 13, 50714, 50714, 286, 478, 1919, 281, 9192, 666, 341, 4829, 13, 50764, 50764, 708, 366, 321, 1417, 466, 30, 50814, 50814, 492, 434, 1417, 466, 42687, 3467, 965, 13, 50864, 50864, 4162, 321, 434, 516, 281, 751, 466, 3467, 257, 688, 1830, 341, 7367, 11, 286, 519, 321, 643, 281, 992, 51326, 51326, 493, 257, 665, 20518, 365, 1417, 466, 42687, 3467, 13, 51514, 51514, 865, 13, 51564, 51564, 663, 311, 257, 869, 935, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.19151371360844016, "compression_ratio": 1.7089201877934272, "no_caption_prob": 0.41356736421585083}, {"id": 13, "seek": 2556, "start": 25.56, "end": 30.24, "text": " It's a big topic and I don't think we're going to be able to cover everything about opaque", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 14, "seek": 2556, "start": 30.24, "end": 31.24, "text": " types.", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 15, "seek": 2556, "start": 31.24, "end": 36.239999999999995, "text": " I think this is really just setting it up for many future episodes to explore this topic", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 16, "seek": 2556, "start": 36.239999999999995, "end": 37.239999999999995, "text": " further.", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 17, "seek": 2556, "start": 37.239999999999995, "end": 43.36, "text": " This is going to be opaque types episode one out of some amount of episodes.", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 18, "seek": 2556, "start": 43.36, "end": 44.36, "text": " Yeah.", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 19, "seek": 2556, "start": 44.36, "end": 46.8, "text": " I think this is like a whole...", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 20, "seek": 2556, "start": 46.8, "end": 51.7, "text": " There's going to be a whole college curriculum where this is opaque types 101, but hopefully", "tokens": [50364, 467, 311, 257, 955, 4829, 293, 286, 500, 380, 519, 321, 434, 516, 281, 312, 1075, 281, 2060, 1203, 466, 42687, 50598, 50598, 3467, 13, 50648, 50648, 286, 519, 341, 307, 534, 445, 3287, 309, 493, 337, 867, 2027, 9313, 281, 6839, 341, 4829, 50898, 50898, 3052, 13, 50948, 50948, 639, 307, 516, 281, 312, 42687, 3467, 3500, 472, 484, 295, 512, 2372, 295, 9313, 13, 51254, 51254, 865, 13, 51304, 51304, 286, 519, 341, 307, 411, 257, 1379, 485, 51426, 51426, 821, 311, 516, 281, 312, 257, 1379, 3859, 14302, 689, 341, 307, 42687, 3467, 21055, 11, 457, 4696, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.13578141652620757, "compression_ratio": 1.7675438596491229, "no_caption_prob": 0.00043691645259968936}, {"id": 21, "seek": 5170, "start": 51.7, "end": 55.68, "text": " we can get a 201 and a 301.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 22, "seek": 5170, "start": 55.68, "end": 57.84, "text": " Or more specified episodes.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 23, "seek": 5170, "start": 57.84, "end": 58.84, "text": " Yes.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 24, "seek": 5170, "start": 58.84, "end": 59.84, "text": " Yeah.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 25, "seek": 5170, "start": 59.84, "end": 65.28, "text": " Opaque types about phantom types, opaque types about validation, for instance.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 26, "seek": 5170, "start": 65.28, "end": 66.28, "text": " Exactly.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 27, "seek": 5170, "start": 66.28, "end": 67.28, "text": " Yeah.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 28, "seek": 5170, "start": 67.28, "end": 74.68, "text": " Opaque types is really just one of the core tools in your design toolkit as an API designer", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 29, "seek": 5170, "start": 74.68, "end": 75.68, "text": " in Elm.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 30, "seek": 5170, "start": 75.68, "end": 81.60000000000001, "text": " When I say API designer, I don't just mean designing packages.", "tokens": [50364, 321, 393, 483, 257, 1525, 293, 257, 2217, 16, 13, 50563, 50563, 1610, 544, 22206, 9313, 13, 50671, 50671, 1079, 13, 50721, 50721, 865, 13, 50771, 50771, 422, 4306, 1077, 3467, 466, 903, 25796, 3467, 11, 42687, 3467, 466, 24071, 11, 337, 5197, 13, 51043, 51043, 7587, 13, 51093, 51093, 865, 13, 51143, 51143, 422, 4306, 1077, 3467, 307, 534, 445, 472, 295, 264, 4965, 3873, 294, 428, 1715, 40167, 382, 364, 9362, 11795, 51513, 51513, 294, 2699, 76, 13, 51563, 51563, 1133, 286, 584, 9362, 11795, 11, 286, 500, 380, 445, 914, 14685, 17401, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.17030132293701172, "compression_ratio": 1.5911330049261083, "no_caption_prob": 4.539529254543595e-05}, {"id": 31, "seek": 8160, "start": 81.6, "end": 85.96, "text": " Of course you're using your API design toolkit more than any other time when you're designing", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 32, "seek": 8160, "start": 85.96, "end": 87.44, "text": " an Elm package.", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 33, "seek": 8160, "start": 87.44, "end": 94.47999999999999, "text": " But really if you're just building something at your workplace or something in a small", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 34, "seek": 8160, "start": 94.47999999999999, "end": 98.94, "text": " project that you're maintaining, you still use API design to make your code easier to", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 35, "seek": 8160, "start": 98.94, "end": 99.94, "text": " work with.", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 36, "seek": 8160, "start": 99.94, "end": 100.94, "text": " Yeah.", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 37, "seek": 8160, "start": 100.94, "end": 103.91999999999999, "text": " You use API design a lot when writing an application.", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 38, "seek": 8160, "start": 103.91999999999999, "end": 104.91999999999999, "text": " Definitely.", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 39, "seek": 8160, "start": 104.91999999999999, "end": 105.91999999999999, "text": " Yes.", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 40, "seek": 8160, "start": 105.91999999999999, "end": 106.91999999999999, "text": " Exactly.", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 41, "seek": 8160, "start": 106.91999999999999, "end": 108.88, "text": " So how about a definition?", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 42, "seek": 8160, "start": 108.88, "end": 111.24, "text": " What is an opaque type?", "tokens": [50364, 2720, 1164, 291, 434, 1228, 428, 9362, 1715, 40167, 544, 813, 604, 661, 565, 562, 291, 434, 14685, 50582, 50582, 364, 2699, 76, 7372, 13, 50656, 50656, 583, 534, 498, 291, 434, 445, 2390, 746, 412, 428, 15328, 420, 746, 294, 257, 1359, 51008, 51008, 1716, 300, 291, 434, 14916, 11, 291, 920, 764, 9362, 1715, 281, 652, 428, 3089, 3571, 281, 51231, 51231, 589, 365, 13, 51281, 51281, 865, 13, 51331, 51331, 509, 764, 9362, 1715, 257, 688, 562, 3579, 364, 3861, 13, 51480, 51480, 12151, 13, 51530, 51530, 1079, 13, 51580, 51580, 7587, 13, 51630, 51630, 407, 577, 466, 257, 7123, 30, 51728, 51728, 708, 307, 364, 42687, 2010, 30, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.13099654789628654, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.8924522009911016e-05}, {"id": 43, "seek": 11124, "start": 111.24, "end": 116.83999999999999, "text": " What I would say is an opaque type is a custom type or a union type in other languages where", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 44, "seek": 11124, "start": 116.83999999999999, "end": 120.67999999999999, "text": " the constructors are not exposed to other modules.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 45, "seek": 11124, "start": 120.67999999999999, "end": 122.0, "text": " Exactly.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 46, "seek": 11124, "start": 122.0, "end": 125.52, "text": " That's it.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 47, "seek": 11124, "start": 125.52, "end": 129.24, "text": " That's exactly how I think of it.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 48, "seek": 11124, "start": 129.24, "end": 134.16, "text": " It's just a really fancy sounding term for saying that it is a private constructor.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 49, "seek": 11124, "start": 134.16, "end": 135.16, "text": " Yeah.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 50, "seek": 11124, "start": 135.16, "end": 136.16, "text": " So fancy.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 51, "seek": 11124, "start": 136.16, "end": 138.8, "text": " The private constructor for a custom type.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 52, "seek": 11124, "start": 138.8, "end": 139.8, "text": " There you go.", "tokens": [50364, 708, 286, 576, 584, 307, 364, 42687, 2010, 307, 257, 2375, 2010, 420, 257, 11671, 2010, 294, 661, 8650, 689, 50644, 50644, 264, 7690, 830, 366, 406, 9495, 281, 661, 16679, 13, 50836, 50836, 7587, 13, 50902, 50902, 663, 311, 309, 13, 51078, 51078, 663, 311, 2293, 577, 286, 519, 295, 309, 13, 51264, 51264, 467, 311, 445, 257, 534, 10247, 24931, 1433, 337, 1566, 300, 309, 307, 257, 4551, 47479, 13, 51510, 51510, 865, 13, 51560, 51560, 407, 10247, 13, 51610, 51610, 440, 4551, 47479, 337, 257, 2375, 2010, 13, 51742, 51742, 821, 291, 352, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15664484005163212, "compression_ratio": 1.7019230769230769, "no_caption_prob": 2.1782270778203383e-05}, {"id": 53, "seek": 13980, "start": 139.8, "end": 143.0, "text": " It's not that mouthful but less mysterious.", "tokens": [50364, 467, 311, 406, 300, 4525, 906, 457, 1570, 13831, 13, 50524, 50524, 865, 11, 2293, 13, 50672, 50672, 407, 437, 576, 312, 264, 881, 3875, 1365, 295, 364, 42687, 2010, 30, 51102, 51102, 286, 600, 658, 257, 352, 281, 1365, 300, 286, 764, 13, 51224, 51224, 407, 472, 551, 286, 764, 307, 456, 366, 1629, 18491, 300, 291, 393, 380, 360, 2935, 1228, 364, 2699, 76, 2010, 51592, 51592, 538, 2564, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.21715043720446134, "compression_ratio": 1.4606741573033708, "no_caption_prob": 8.48073250381276e-05}, {"id": 54, "seek": 13980, "start": 143.0, "end": 145.96, "text": " Yeah, exactly.", "tokens": [50364, 467, 311, 406, 300, 4525, 906, 457, 1570, 13831, 13, 50524, 50524, 865, 11, 2293, 13, 50672, 50672, 407, 437, 576, 312, 264, 881, 3875, 1365, 295, 364, 42687, 2010, 30, 51102, 51102, 286, 600, 658, 257, 352, 281, 1365, 300, 286, 764, 13, 51224, 51224, 407, 472, 551, 286, 764, 307, 456, 366, 1629, 18491, 300, 291, 393, 380, 360, 2935, 1228, 364, 2699, 76, 2010, 51592, 51592, 538, 2564, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.21715043720446134, "compression_ratio": 1.4606741573033708, "no_caption_prob": 8.48073250381276e-05}, {"id": 55, "seek": 13980, "start": 145.96, "end": 154.56, "text": " So what would be the most basic example of an opaque type?", "tokens": [50364, 467, 311, 406, 300, 4525, 906, 457, 1570, 13831, 13, 50524, 50524, 865, 11, 2293, 13, 50672, 50672, 407, 437, 576, 312, 264, 881, 3875, 1365, 295, 364, 42687, 2010, 30, 51102, 51102, 286, 600, 658, 257, 352, 281, 1365, 300, 286, 764, 13, 51224, 51224, 407, 472, 551, 286, 764, 307, 456, 366, 1629, 18491, 300, 291, 393, 380, 360, 2935, 1228, 364, 2699, 76, 2010, 51592, 51592, 538, 2564, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.21715043720446134, "compression_ratio": 1.4606741573033708, "no_caption_prob": 8.48073250381276e-05}, {"id": 56, "seek": 13980, "start": 154.56, "end": 157.0, "text": " I've got a go to example that I use.", "tokens": [50364, 467, 311, 406, 300, 4525, 906, 457, 1570, 13831, 13, 50524, 50524, 865, 11, 2293, 13, 50672, 50672, 407, 437, 576, 312, 264, 881, 3875, 1365, 295, 364, 42687, 2010, 30, 51102, 51102, 286, 600, 658, 257, 352, 281, 1365, 300, 286, 764, 13, 51224, 51224, 407, 472, 551, 286, 764, 307, 456, 366, 1629, 18491, 300, 291, 393, 380, 360, 2935, 1228, 364, 2699, 76, 2010, 51592, 51592, 538, 2564, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.21715043720446134, "compression_ratio": 1.4606741573033708, "no_caption_prob": 8.48073250381276e-05}, {"id": 57, "seek": 13980, "start": 157.0, "end": 164.36, "text": " So one thing I use is there are certain constraints that you can't do simply using an Elm type", "tokens": [50364, 467, 311, 406, 300, 4525, 906, 457, 1570, 13831, 13, 50524, 50524, 865, 11, 2293, 13, 50672, 50672, 407, 437, 576, 312, 264, 881, 3875, 1365, 295, 364, 42687, 2010, 30, 51102, 51102, 286, 600, 658, 257, 352, 281, 1365, 300, 286, 764, 13, 51224, 51224, 407, 472, 551, 286, 764, 307, 456, 366, 1629, 18491, 300, 291, 393, 380, 360, 2935, 1228, 364, 2699, 76, 2010, 51592, 51592, 538, 2564, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.21715043720446134, "compression_ratio": 1.4606741573033708, "no_caption_prob": 8.48073250381276e-05}, {"id": 58, "seek": 13980, "start": 164.36, "end": 165.36, "text": " by itself.", "tokens": [50364, 467, 311, 406, 300, 4525, 906, 457, 1570, 13831, 13, 50524, 50524, 865, 11, 2293, 13, 50672, 50672, 407, 437, 576, 312, 264, 881, 3875, 1365, 295, 364, 42687, 2010, 30, 51102, 51102, 286, 600, 658, 257, 352, 281, 1365, 300, 286, 764, 13, 51224, 51224, 407, 472, 551, 286, 764, 307, 456, 366, 1629, 18491, 300, 291, 393, 380, 360, 2935, 1228, 364, 2699, 76, 2010, 51592, 51592, 538, 2564, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.21715043720446134, "compression_ratio": 1.4606741573033708, "no_caption_prob": 8.48073250381276e-05}, {"id": 59, "seek": 16536, "start": 165.36, "end": 172.64000000000001, "text": " You need a type that is private and therefore you can ensure certain constraints about that", "tokens": [50364, 509, 643, 257, 2010, 300, 307, 4551, 293, 4412, 291, 393, 5586, 1629, 18491, 466, 300, 50728, 50728, 2010, 807, 264, 10088, 9362, 13, 50850, 50850, 1079, 11, 2138, 13, 50940, 50940, 407, 337, 1365, 11, 718, 311, 584, 300, 291, 1415, 281, 362, 257, 3353, 24922, 13, 51324, 51324, 2699, 76, 575, 572, 636, 281, 24825, 300, 364, 24922, 307, 3353, 570, 291, 500, 380, 362, 12334, 51532, 51532, 3467, 420, 604, 10247, 1507, 300, 13834, 264, 4190, 807, 264, 2010, 1185, 13, 51802, 51802, 1079, 11, 2293, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14829827369527615, "compression_ratio": 1.6351931330472103, "no_caption_prob": 2.5865678253467195e-05}, {"id": 60, "seek": 16536, "start": 172.64000000000001, "end": 175.08, "text": " type through the module API.", "tokens": [50364, 509, 643, 257, 2010, 300, 307, 4551, 293, 4412, 291, 393, 5586, 1629, 18491, 466, 300, 50728, 50728, 2010, 807, 264, 10088, 9362, 13, 50850, 50850, 1079, 11, 2138, 13, 50940, 50940, 407, 337, 1365, 11, 718, 311, 584, 300, 291, 1415, 281, 362, 257, 3353, 24922, 13, 51324, 51324, 2699, 76, 575, 572, 636, 281, 24825, 300, 364, 24922, 307, 3353, 570, 291, 500, 380, 362, 12334, 51532, 51532, 3467, 420, 604, 10247, 1507, 300, 13834, 264, 4190, 807, 264, 2010, 1185, 13, 51802, 51802, 1079, 11, 2293, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14829827369527615, "compression_ratio": 1.6351931330472103, "no_caption_prob": 2.5865678253467195e-05}, {"id": 61, "seek": 16536, "start": 175.08, "end": 176.88000000000002, "text": " Yes, definitely.", "tokens": [50364, 509, 643, 257, 2010, 300, 307, 4551, 293, 4412, 291, 393, 5586, 1629, 18491, 466, 300, 50728, 50728, 2010, 807, 264, 10088, 9362, 13, 50850, 50850, 1079, 11, 2138, 13, 50940, 50940, 407, 337, 1365, 11, 718, 311, 584, 300, 291, 1415, 281, 362, 257, 3353, 24922, 13, 51324, 51324, 2699, 76, 575, 572, 636, 281, 24825, 300, 364, 24922, 307, 3353, 570, 291, 500, 380, 362, 12334, 51532, 51532, 3467, 420, 604, 10247, 1507, 300, 13834, 264, 4190, 807, 264, 2010, 1185, 13, 51802, 51802, 1079, 11, 2293, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14829827369527615, "compression_ratio": 1.6351931330472103, "no_caption_prob": 2.5865678253467195e-05}, {"id": 62, "seek": 16536, "start": 176.88000000000002, "end": 184.56, "text": " So for example, let's say that you wanted to have a positive integer.", "tokens": [50364, 509, 643, 257, 2010, 300, 307, 4551, 293, 4412, 291, 393, 5586, 1629, 18491, 466, 300, 50728, 50728, 2010, 807, 264, 10088, 9362, 13, 50850, 50850, 1079, 11, 2138, 13, 50940, 50940, 407, 337, 1365, 11, 718, 311, 584, 300, 291, 1415, 281, 362, 257, 3353, 24922, 13, 51324, 51324, 2699, 76, 575, 572, 636, 281, 24825, 300, 364, 24922, 307, 3353, 570, 291, 500, 380, 362, 12334, 51532, 51532, 3467, 420, 604, 10247, 1507, 300, 13834, 264, 4190, 807, 264, 2010, 1185, 13, 51802, 51802, 1079, 11, 2293, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14829827369527615, "compression_ratio": 1.6351931330472103, "no_caption_prob": 2.5865678253467195e-05}, {"id": 63, "seek": 16536, "start": 184.56, "end": 188.72000000000003, "text": " Elm has no way to enforce that an integer is positive because you don't have dependent", "tokens": [50364, 509, 643, 257, 2010, 300, 307, 4551, 293, 4412, 291, 393, 5586, 1629, 18491, 466, 300, 50728, 50728, 2010, 807, 264, 10088, 9362, 13, 50850, 50850, 1079, 11, 2138, 13, 50940, 50940, 407, 337, 1365, 11, 718, 311, 584, 300, 291, 1415, 281, 362, 257, 3353, 24922, 13, 51324, 51324, 2699, 76, 575, 572, 636, 281, 24825, 300, 364, 24922, 307, 3353, 570, 291, 500, 380, 362, 12334, 51532, 51532, 3467, 420, 604, 10247, 1507, 300, 13834, 264, 4190, 807, 264, 2010, 1185, 13, 51802, 51802, 1079, 11, 2293, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14829827369527615, "compression_ratio": 1.6351931330472103, "no_caption_prob": 2.5865678253467195e-05}, {"id": 64, "seek": 16536, "start": 188.72000000000003, "end": 194.12, "text": " types or any fancy stuff that checks the values through the type system.", "tokens": [50364, 509, 643, 257, 2010, 300, 307, 4551, 293, 4412, 291, 393, 5586, 1629, 18491, 466, 300, 50728, 50728, 2010, 807, 264, 10088, 9362, 13, 50850, 50850, 1079, 11, 2138, 13, 50940, 50940, 407, 337, 1365, 11, 718, 311, 584, 300, 291, 1415, 281, 362, 257, 3353, 24922, 13, 51324, 51324, 2699, 76, 575, 572, 636, 281, 24825, 300, 364, 24922, 307, 3353, 570, 291, 500, 380, 362, 12334, 51532, 51532, 3467, 420, 604, 10247, 1507, 300, 13834, 264, 4190, 807, 264, 2010, 1185, 13, 51802, 51802, 1079, 11, 2293, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14829827369527615, "compression_ratio": 1.6351931330472103, "no_caption_prob": 2.5865678253467195e-05}, {"id": 65, "seek": 16536, "start": 194.12, "end": 195.12, "text": " Yes, exactly.", "tokens": [50364, 509, 643, 257, 2010, 300, 307, 4551, 293, 4412, 291, 393, 5586, 1629, 18491, 466, 300, 50728, 50728, 2010, 807, 264, 10088, 9362, 13, 50850, 50850, 1079, 11, 2138, 13, 50940, 50940, 407, 337, 1365, 11, 718, 311, 584, 300, 291, 1415, 281, 362, 257, 3353, 24922, 13, 51324, 51324, 2699, 76, 575, 572, 636, 281, 24825, 300, 364, 24922, 307, 3353, 570, 291, 500, 380, 362, 12334, 51532, 51532, 3467, 420, 604, 10247, 1507, 300, 13834, 264, 4190, 807, 264, 2010, 1185, 13, 51802, 51802, 1079, 11, 2293, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14829827369527615, "compression_ratio": 1.6351931330472103, "no_caption_prob": 2.5865678253467195e-05}, {"id": 66, "seek": 19512, "start": 195.12, "end": 199.12, "text": " So you can say something is an int but you can't say that it's a positive int.", "tokens": [50364, 407, 291, 393, 584, 746, 307, 364, 560, 457, 291, 393, 380, 584, 300, 309, 311, 257, 3353, 560, 13, 50564, 50564, 407, 577, 576, 291, 360, 300, 1228, 2699, 76, 30, 50774, 50774, 1012, 576, 291, 24825, 300, 25534, 30, 50932, 50932, 509, 576, 652, 364, 42687, 2010, 13, 51010, 51010, 407, 291, 576, 1884, 257, 777, 2010, 3353, 24922, 13, 51206, 51206, 509, 576, 829, 309, 294, 257, 819, 10088, 293, 291, 576, 406, 19219, 264, 7690, 830, 13, 51464, 51464, 400, 550, 291, 576, 19219, 472, 2445, 420, 412, 1935, 472, 2445, 300, 576, 312, 1075, 281, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11174586186042199, "compression_ratio": 1.8394495412844036, "no_caption_prob": 8.5301535364124e-06}, {"id": 67, "seek": 19512, "start": 199.12, "end": 203.32, "text": " So how would you do that using Elm?", "tokens": [50364, 407, 291, 393, 584, 746, 307, 364, 560, 457, 291, 393, 380, 584, 300, 309, 311, 257, 3353, 560, 13, 50564, 50564, 407, 577, 576, 291, 360, 300, 1228, 2699, 76, 30, 50774, 50774, 1012, 576, 291, 24825, 300, 25534, 30, 50932, 50932, 509, 576, 652, 364, 42687, 2010, 13, 51010, 51010, 407, 291, 576, 1884, 257, 777, 2010, 3353, 24922, 13, 51206, 51206, 509, 576, 829, 309, 294, 257, 819, 10088, 293, 291, 576, 406, 19219, 264, 7690, 830, 13, 51464, 51464, 400, 550, 291, 576, 19219, 472, 2445, 420, 412, 1935, 472, 2445, 300, 576, 312, 1075, 281, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11174586186042199, "compression_ratio": 1.8394495412844036, "no_caption_prob": 8.5301535364124e-06}, {"id": 68, "seek": 19512, "start": 203.32, "end": 206.48000000000002, "text": " How would you enforce that constraint?", "tokens": [50364, 407, 291, 393, 584, 746, 307, 364, 560, 457, 291, 393, 380, 584, 300, 309, 311, 257, 3353, 560, 13, 50564, 50564, 407, 577, 576, 291, 360, 300, 1228, 2699, 76, 30, 50774, 50774, 1012, 576, 291, 24825, 300, 25534, 30, 50932, 50932, 509, 576, 652, 364, 42687, 2010, 13, 51010, 51010, 407, 291, 576, 1884, 257, 777, 2010, 3353, 24922, 13, 51206, 51206, 509, 576, 829, 309, 294, 257, 819, 10088, 293, 291, 576, 406, 19219, 264, 7690, 830, 13, 51464, 51464, 400, 550, 291, 576, 19219, 472, 2445, 420, 412, 1935, 472, 2445, 300, 576, 312, 1075, 281, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11174586186042199, "compression_ratio": 1.8394495412844036, "no_caption_prob": 8.5301535364124e-06}, {"id": 69, "seek": 19512, "start": 206.48000000000002, "end": 208.04, "text": " You would make an opaque type.", "tokens": [50364, 407, 291, 393, 584, 746, 307, 364, 560, 457, 291, 393, 380, 584, 300, 309, 311, 257, 3353, 560, 13, 50564, 50564, 407, 577, 576, 291, 360, 300, 1228, 2699, 76, 30, 50774, 50774, 1012, 576, 291, 24825, 300, 25534, 30, 50932, 50932, 509, 576, 652, 364, 42687, 2010, 13, 51010, 51010, 407, 291, 576, 1884, 257, 777, 2010, 3353, 24922, 13, 51206, 51206, 509, 576, 829, 309, 294, 257, 819, 10088, 293, 291, 576, 406, 19219, 264, 7690, 830, 13, 51464, 51464, 400, 550, 291, 576, 19219, 472, 2445, 420, 412, 1935, 472, 2445, 300, 576, 312, 1075, 281, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11174586186042199, "compression_ratio": 1.8394495412844036, "no_caption_prob": 8.5301535364124e-06}, {"id": 70, "seek": 19512, "start": 208.04, "end": 211.96, "text": " So you would create a new type positive integer.", "tokens": [50364, 407, 291, 393, 584, 746, 307, 364, 560, 457, 291, 393, 380, 584, 300, 309, 311, 257, 3353, 560, 13, 50564, 50564, 407, 577, 576, 291, 360, 300, 1228, 2699, 76, 30, 50774, 50774, 1012, 576, 291, 24825, 300, 25534, 30, 50932, 50932, 509, 576, 652, 364, 42687, 2010, 13, 51010, 51010, 407, 291, 576, 1884, 257, 777, 2010, 3353, 24922, 13, 51206, 51206, 509, 576, 829, 309, 294, 257, 819, 10088, 293, 291, 576, 406, 19219, 264, 7690, 830, 13, 51464, 51464, 400, 550, 291, 576, 19219, 472, 2445, 420, 412, 1935, 472, 2445, 300, 576, 312, 1075, 281, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11174586186042199, "compression_ratio": 1.8394495412844036, "no_caption_prob": 8.5301535364124e-06}, {"id": 71, "seek": 19512, "start": 211.96, "end": 217.12, "text": " You would put it in a different module and you would not expose the constructors.", "tokens": [50364, 407, 291, 393, 584, 746, 307, 364, 560, 457, 291, 393, 380, 584, 300, 309, 311, 257, 3353, 560, 13, 50564, 50564, 407, 577, 576, 291, 360, 300, 1228, 2699, 76, 30, 50774, 50774, 1012, 576, 291, 24825, 300, 25534, 30, 50932, 50932, 509, 576, 652, 364, 42687, 2010, 13, 51010, 51010, 407, 291, 576, 1884, 257, 777, 2010, 3353, 24922, 13, 51206, 51206, 509, 576, 829, 309, 294, 257, 819, 10088, 293, 291, 576, 406, 19219, 264, 7690, 830, 13, 51464, 51464, 400, 550, 291, 576, 19219, 472, 2445, 420, 412, 1935, 472, 2445, 300, 576, 312, 1075, 281, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11174586186042199, "compression_ratio": 1.8394495412844036, "no_caption_prob": 8.5301535364124e-06}, {"id": 72, "seek": 19512, "start": 217.12, "end": 222.72, "text": " And then you would expose one function or at least one function that would be able to", "tokens": [50364, 407, 291, 393, 584, 746, 307, 364, 560, 457, 291, 393, 380, 584, 300, 309, 311, 257, 3353, 560, 13, 50564, 50564, 407, 577, 576, 291, 360, 300, 1228, 2699, 76, 30, 50774, 50774, 1012, 576, 291, 24825, 300, 25534, 30, 50932, 50932, 509, 576, 652, 364, 42687, 2010, 13, 51010, 51010, 407, 291, 576, 1884, 257, 777, 2010, 3353, 24922, 13, 51206, 51206, 509, 576, 829, 309, 294, 257, 819, 10088, 293, 291, 576, 406, 19219, 264, 7690, 830, 13, 51464, 51464, 400, 550, 291, 576, 19219, 472, 2445, 420, 412, 1935, 472, 2445, 300, 576, 312, 1075, 281, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11174586186042199, "compression_ratio": 1.8394495412844036, "no_caption_prob": 8.5301535364124e-06}, {"id": 73, "seek": 22272, "start": 222.72, "end": 226.76, "text": " create one such positive integer.", "tokens": [50364, 1884, 472, 1270, 3353, 24922, 13, 50566, 50566, 400, 550, 472, 576, 1520, 1968, 264, 1230, 307, 3353, 13, 50806, 50806, 400, 498, 309, 1943, 380, 11, 309, 1177, 380, 2736, 257, 3353, 24922, 11, 309, 11247, 746, 1646, 13, 51010, 51010, 407, 291, 727, 362, 257, 1310, 3353, 24922, 420, 257, 1874, 365, 257, 544, 13600, 6713, 13, 51412, 51412, 1779, 13, 51462, 51462, 823, 11, 1392, 11, 370, 341, 307, 5062, 493, 364, 1880, 935, 570, 456, 366, 819, 8294, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.12913339082584824, "compression_ratio": 1.6650943396226414, "no_caption_prob": 3.0241426429711282e-05}, {"id": 74, "seek": 22272, "start": 226.76, "end": 231.56, "text": " And then one would check whether the number is positive.", "tokens": [50364, 1884, 472, 1270, 3353, 24922, 13, 50566, 50566, 400, 550, 472, 576, 1520, 1968, 264, 1230, 307, 3353, 13, 50806, 50806, 400, 498, 309, 1943, 380, 11, 309, 1177, 380, 2736, 257, 3353, 24922, 11, 309, 11247, 746, 1646, 13, 51010, 51010, 407, 291, 727, 362, 257, 1310, 3353, 24922, 420, 257, 1874, 365, 257, 544, 13600, 6713, 13, 51412, 51412, 1779, 13, 51462, 51462, 823, 11, 1392, 11, 370, 341, 307, 5062, 493, 364, 1880, 935, 570, 456, 366, 819, 8294, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.12913339082584824, "compression_ratio": 1.6650943396226414, "no_caption_prob": 3.0241426429711282e-05}, {"id": 75, "seek": 22272, "start": 231.56, "end": 235.64, "text": " And if it isn't, it doesn't return a positive integer, it returns something else.", "tokens": [50364, 1884, 472, 1270, 3353, 24922, 13, 50566, 50566, 400, 550, 472, 576, 1520, 1968, 264, 1230, 307, 3353, 13, 50806, 50806, 400, 498, 309, 1943, 380, 11, 309, 1177, 380, 2736, 257, 3353, 24922, 11, 309, 11247, 746, 1646, 13, 51010, 51010, 407, 291, 727, 362, 257, 1310, 3353, 24922, 420, 257, 1874, 365, 257, 544, 13600, 6713, 13, 51412, 51412, 1779, 13, 51462, 51462, 823, 11, 1392, 11, 370, 341, 307, 5062, 493, 364, 1880, 935, 570, 456, 366, 819, 8294, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.12913339082584824, "compression_ratio": 1.6650943396226414, "no_caption_prob": 3.0241426429711282e-05}, {"id": 76, "seek": 22272, "start": 235.64, "end": 243.68, "text": " So you could have a maybe positive integer or a result with a more precise error.", "tokens": [50364, 1884, 472, 1270, 3353, 24922, 13, 50566, 50566, 400, 550, 472, 576, 1520, 1968, 264, 1230, 307, 3353, 13, 50806, 50806, 400, 498, 309, 1943, 380, 11, 309, 1177, 380, 2736, 257, 3353, 24922, 11, 309, 11247, 746, 1646, 13, 51010, 51010, 407, 291, 727, 362, 257, 1310, 3353, 24922, 420, 257, 1874, 365, 257, 544, 13600, 6713, 13, 51412, 51412, 1779, 13, 51462, 51462, 823, 11, 1392, 11, 370, 341, 307, 5062, 493, 364, 1880, 935, 570, 456, 366, 819, 8294, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.12913339082584824, "compression_ratio": 1.6650943396226414, "no_caption_prob": 3.0241426429711282e-05}, {"id": 77, "seek": 22272, "start": 243.68, "end": 244.68, "text": " Right.", "tokens": [50364, 1884, 472, 1270, 3353, 24922, 13, 50566, 50566, 400, 550, 472, 576, 1520, 1968, 264, 1230, 307, 3353, 13, 50806, 50806, 400, 498, 309, 1943, 380, 11, 309, 1177, 380, 2736, 257, 3353, 24922, 11, 309, 11247, 746, 1646, 13, 51010, 51010, 407, 291, 727, 362, 257, 1310, 3353, 24922, 420, 257, 1874, 365, 257, 544, 13600, 6713, 13, 51412, 51412, 1779, 13, 51462, 51462, 823, 11, 1392, 11, 370, 341, 307, 5062, 493, 364, 1880, 935, 570, 456, 366, 819, 8294, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.12913339082584824, "compression_ratio": 1.6650943396226414, "no_caption_prob": 3.0241426429711282e-05}, {"id": 78, "seek": 22272, "start": 244.68, "end": 250.2, "text": " Now, okay, so this is bringing up an interesting point because there are different patterns", "tokens": [50364, 1884, 472, 1270, 3353, 24922, 13, 50566, 50566, 400, 550, 472, 576, 1520, 1968, 264, 1230, 307, 3353, 13, 50806, 50806, 400, 498, 309, 1943, 380, 11, 309, 1177, 380, 2736, 257, 3353, 24922, 11, 309, 11247, 746, 1646, 13, 51010, 51010, 407, 291, 727, 362, 257, 1310, 3353, 24922, 420, 257, 1874, 365, 257, 544, 13600, 6713, 13, 51412, 51412, 1779, 13, 51462, 51462, 823, 11, 1392, 11, 370, 341, 307, 5062, 493, 364, 1880, 935, 570, 456, 366, 819, 8294, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.12913339082584824, "compression_ratio": 1.6650943396226414, "no_caption_prob": 3.0241426429711282e-05}, {"id": 79, "seek": 25020, "start": 250.2, "end": 253.92, "text": " for using opaque types to model these constraints.", "tokens": [50364, 337, 1228, 42687, 3467, 281, 2316, 613, 18491, 13, 50550, 50550, 407, 264, 472, 291, 434, 1417, 466, 307, 1333, 295, 411, 15983, 13, 50803, 50803, 467, 311, 15983, 257, 25534, 807, 257, 2010, 300, 8855, 257, 34474, 1520, 13, 51124, 51124, 407, 456, 311, 341, 34474, 1520, 498, 297, 307, 5044, 813, 4018, 420, 5044, 813, 420, 2681, 281, 4018, 11, 51420, 51420, 5413, 322, 577, 291, 528, 281, 6964, 3353, 13, 51564, 51564, 961, 311, 445, 584, 5044, 813, 4018, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1524963598141725, "compression_ratio": 1.7135922330097086, "no_caption_prob": 2.4682503863004968e-05}, {"id": 80, "seek": 25020, "start": 253.92, "end": 258.97999999999996, "text": " So the one you're talking about is sort of like modeling.", "tokens": [50364, 337, 1228, 42687, 3467, 281, 2316, 613, 18491, 13, 50550, 50550, 407, 264, 472, 291, 434, 1417, 466, 307, 1333, 295, 411, 15983, 13, 50803, 50803, 467, 311, 15983, 257, 25534, 807, 257, 2010, 300, 8855, 257, 34474, 1520, 13, 51124, 51124, 407, 456, 311, 341, 34474, 1520, 498, 297, 307, 5044, 813, 4018, 420, 5044, 813, 420, 2681, 281, 4018, 11, 51420, 51420, 5413, 322, 577, 291, 528, 281, 6964, 3353, 13, 51564, 51564, 961, 311, 445, 584, 5044, 813, 4018, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1524963598141725, "compression_ratio": 1.7135922330097086, "no_caption_prob": 2.4682503863004968e-05}, {"id": 81, "seek": 25020, "start": 258.97999999999996, "end": 265.4, "text": " It's modeling a constraint through a type that represents a runtime check.", "tokens": [50364, 337, 1228, 42687, 3467, 281, 2316, 613, 18491, 13, 50550, 50550, 407, 264, 472, 291, 434, 1417, 466, 307, 1333, 295, 411, 15983, 13, 50803, 50803, 467, 311, 15983, 257, 25534, 807, 257, 2010, 300, 8855, 257, 34474, 1520, 13, 51124, 51124, 407, 456, 311, 341, 34474, 1520, 498, 297, 307, 5044, 813, 4018, 420, 5044, 813, 420, 2681, 281, 4018, 11, 51420, 51420, 5413, 322, 577, 291, 528, 281, 6964, 3353, 13, 51564, 51564, 961, 311, 445, 584, 5044, 813, 4018, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1524963598141725, "compression_ratio": 1.7135922330097086, "no_caption_prob": 2.4682503863004968e-05}, {"id": 82, "seek": 25020, "start": 265.4, "end": 271.32, "text": " So there's this runtime check if n is greater than zero or greater than or equal to zero,", "tokens": [50364, 337, 1228, 42687, 3467, 281, 2316, 613, 18491, 13, 50550, 50550, 407, 264, 472, 291, 434, 1417, 466, 307, 1333, 295, 411, 15983, 13, 50803, 50803, 467, 311, 15983, 257, 25534, 807, 257, 2010, 300, 8855, 257, 34474, 1520, 13, 51124, 51124, 407, 456, 311, 341, 34474, 1520, 498, 297, 307, 5044, 813, 4018, 420, 5044, 813, 420, 2681, 281, 4018, 11, 51420, 51420, 5413, 322, 577, 291, 528, 281, 6964, 3353, 13, 51564, 51564, 961, 311, 445, 584, 5044, 813, 4018, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1524963598141725, "compression_ratio": 1.7135922330097086, "no_caption_prob": 2.4682503863004968e-05}, {"id": 83, "seek": 25020, "start": 271.32, "end": 274.2, "text": " depending on how you want to define positive.", "tokens": [50364, 337, 1228, 42687, 3467, 281, 2316, 613, 18491, 13, 50550, 50550, 407, 264, 472, 291, 434, 1417, 466, 307, 1333, 295, 411, 15983, 13, 50803, 50803, 467, 311, 15983, 257, 25534, 807, 257, 2010, 300, 8855, 257, 34474, 1520, 13, 51124, 51124, 407, 456, 311, 341, 34474, 1520, 498, 297, 307, 5044, 813, 4018, 420, 5044, 813, 420, 2681, 281, 4018, 11, 51420, 51420, 5413, 322, 577, 291, 528, 281, 6964, 3353, 13, 51564, 51564, 961, 311, 445, 584, 5044, 813, 4018, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1524963598141725, "compression_ratio": 1.7135922330097086, "no_caption_prob": 2.4682503863004968e-05}, {"id": 84, "seek": 25020, "start": 274.2, "end": 277.88, "text": " Let's just say greater than zero.", "tokens": [50364, 337, 1228, 42687, 3467, 281, 2316, 613, 18491, 13, 50550, 50550, 407, 264, 472, 291, 434, 1417, 466, 307, 1333, 295, 411, 15983, 13, 50803, 50803, 467, 311, 15983, 257, 25534, 807, 257, 2010, 300, 8855, 257, 34474, 1520, 13, 51124, 51124, 407, 456, 311, 341, 34474, 1520, 498, 297, 307, 5044, 813, 4018, 420, 5044, 813, 420, 2681, 281, 4018, 11, 51420, 51420, 5413, 322, 577, 291, 528, 281, 6964, 3353, 13, 51564, 51564, 961, 311, 445, 584, 5044, 813, 4018, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.1524963598141725, "compression_ratio": 1.7135922330097086, "no_caption_prob": 2.4682503863004968e-05}, {"id": 85, "seek": 27788, "start": 277.88, "end": 286.32, "text": " Okay, so you can check if n is greater than zero, then you give just positive integer", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 86, "seek": 27788, "start": 286.32, "end": 287.32, "text": " n.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 87, "seek": 27788, "start": 287.32, "end": 288.32, "text": " Yes.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 88, "seek": 27788, "start": 288.32, "end": 291.3, "text": " Otherwise, you return nothing.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 89, "seek": 27788, "start": 291.3, "end": 295.9, "text": " That's one pattern that you can do to use a runtime check that you could validate something.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 90, "seek": 27788, "start": 295.9, "end": 300.36, "text": " You could say, is something a valid email address and do some runtime check or things", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 91, "seek": 27788, "start": 300.36, "end": 301.36, "text": " like that.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 92, "seek": 27788, "start": 301.36, "end": 302.36, "text": " Right.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 93, "seek": 27788, "start": 302.36, "end": 303.36, "text": " You can do any sort of validation.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 94, "seek": 27788, "start": 303.36, "end": 304.36, "text": " Is something a strong password?", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 95, "seek": 27788, "start": 304.36, "end": 305.36, "text": " Exactly.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 96, "seek": 27788, "start": 305.36, "end": 306.36, "text": " Right.", "tokens": [50364, 1033, 11, 370, 291, 393, 1520, 498, 297, 307, 5044, 813, 4018, 11, 550, 291, 976, 445, 3353, 24922, 50786, 50786, 297, 13, 50836, 50836, 1079, 13, 50886, 50886, 10328, 11, 291, 2736, 1825, 13, 51035, 51035, 663, 311, 472, 5102, 300, 291, 393, 360, 281, 764, 257, 34474, 1520, 300, 291, 727, 29562, 746, 13, 51265, 51265, 509, 727, 584, 11, 307, 746, 257, 7363, 3796, 2985, 293, 360, 512, 34474, 1520, 420, 721, 51488, 51488, 411, 300, 13, 51538, 51538, 1779, 13, 51588, 51588, 509, 393, 360, 604, 1333, 295, 24071, 13, 51638, 51638, 1119, 746, 257, 2068, 11524, 30, 51688, 51688, 7587, 13, 51738, 51738, 1779, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13741988466497054, "compression_ratio": 1.7264957264957266, "no_caption_prob": 2.1112260583322495e-05}, {"id": 97, "seek": 30636, "start": 306.36, "end": 312.88, "text": " And so if you have that type, you know that it has met the validation that you define", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 98, "seek": 30636, "start": 312.88, "end": 313.88, "text": " in that module.", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 99, "seek": 30636, "start": 313.88, "end": 319.28000000000003, "text": " And you know, the only place to look to see what the constraints are is within the boundaries", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 100, "seek": 30636, "start": 319.28000000000003, "end": 320.28000000000003, "text": " of that module.", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 101, "seek": 30636, "start": 320.28000000000003, "end": 323.48, "text": " So it makes it easier to reason about the code because you don't have to think about", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 102, "seek": 30636, "start": 323.48, "end": 326.12, "text": " every place that's calling that module.", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 103, "seek": 30636, "start": 326.12, "end": 330.48, "text": " You don't have to think about every place that might in the future call that module.", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 104, "seek": 30636, "start": 330.48, "end": 335.40000000000003, "text": " You only think about the code in that module because it's the gatekeeper for that constraint.", "tokens": [50364, 400, 370, 498, 291, 362, 300, 2010, 11, 291, 458, 300, 309, 575, 1131, 264, 24071, 300, 291, 6964, 50690, 50690, 294, 300, 10088, 13, 50740, 50740, 400, 291, 458, 11, 264, 787, 1081, 281, 574, 281, 536, 437, 264, 18491, 366, 307, 1951, 264, 13180, 51010, 51010, 295, 300, 10088, 13, 51060, 51060, 407, 309, 1669, 309, 3571, 281, 1778, 466, 264, 3089, 570, 291, 500, 380, 362, 281, 519, 466, 51220, 51220, 633, 1081, 300, 311, 5141, 300, 10088, 13, 51352, 51352, 509, 500, 380, 362, 281, 519, 466, 633, 1081, 300, 1062, 294, 264, 2027, 818, 300, 10088, 13, 51570, 51570, 509, 787, 519, 466, 264, 3089, 294, 300, 10088, 570, 309, 311, 264, 8539, 23083, 337, 300, 25534, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.08805761562557671, "compression_ratio": 2.128099173553719, "no_caption_prob": 6.401676364475861e-05}, {"id": 105, "seek": 33540, "start": 335.4, "end": 341.79999999999995, "text": " Yes, you don't have to think about is the age of the user above zero in the user admin", "tokens": [50364, 1079, 11, 291, 500, 380, 362, 281, 519, 466, 307, 264, 3205, 295, 264, 4195, 3673, 4018, 294, 264, 4195, 24236, 50684, 50684, 4831, 11, 337, 5197, 13, 50812, 50812, 865, 13, 50862, 50862, 509, 787, 362, 281, 519, 466, 309, 294, 472, 4914, 11, 597, 307, 264, 3353, 24922, 10088, 13, 51110, 51110, 1779, 13, 51186, 51186, 407, 341, 307, 257, 869, 6532, 337, 1940, 257, 34474, 1520, 293, 6246, 309, 666, 33941, 1412, 13, 51571, 51571, 400, 456, 311, 341, 1333, 295, 1399, 562, 291, 434, 1364, 365, 2699, 76, 294, 2674, 300, 291, 434, 1009, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.1493694174523447, "compression_ratio": 1.6260504201680672, "no_caption_prob": 1.8058077330351807e-05}, {"id": 106, "seek": 33540, "start": 341.79999999999995, "end": 344.35999999999996, "text": " panel, for instance.", "tokens": [50364, 1079, 11, 291, 500, 380, 362, 281, 519, 466, 307, 264, 3205, 295, 264, 4195, 3673, 4018, 294, 264, 4195, 24236, 50684, 50684, 4831, 11, 337, 5197, 13, 50812, 50812, 865, 13, 50862, 50862, 509, 787, 362, 281, 519, 466, 309, 294, 472, 4914, 11, 597, 307, 264, 3353, 24922, 10088, 13, 51110, 51110, 1779, 13, 51186, 51186, 407, 341, 307, 257, 869, 6532, 337, 1940, 257, 34474, 1520, 293, 6246, 309, 666, 33941, 1412, 13, 51571, 51571, 400, 456, 311, 341, 1333, 295, 1399, 562, 291, 434, 1364, 365, 2699, 76, 294, 2674, 300, 291, 434, 1009, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.1493694174523447, "compression_ratio": 1.6260504201680672, "no_caption_prob": 1.8058077330351807e-05}, {"id": 107, "seek": 33540, "start": 344.35999999999996, "end": 345.35999999999996, "text": " Yeah.", "tokens": [50364, 1079, 11, 291, 500, 380, 362, 281, 519, 466, 307, 264, 3205, 295, 264, 4195, 3673, 4018, 294, 264, 4195, 24236, 50684, 50684, 4831, 11, 337, 5197, 13, 50812, 50812, 865, 13, 50862, 50862, 509, 787, 362, 281, 519, 466, 309, 294, 472, 4914, 11, 597, 307, 264, 3353, 24922, 10088, 13, 51110, 51110, 1779, 13, 51186, 51186, 407, 341, 307, 257, 869, 6532, 337, 1940, 257, 34474, 1520, 293, 6246, 309, 666, 33941, 1412, 13, 51571, 51571, 400, 456, 311, 341, 1333, 295, 1399, 562, 291, 434, 1364, 365, 2699, 76, 294, 2674, 300, 291, 434, 1009, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.1493694174523447, "compression_ratio": 1.6260504201680672, "no_caption_prob": 1.8058077330351807e-05}, {"id": 108, "seek": 33540, "start": 345.35999999999996, "end": 350.32, "text": " You only have to think about it in one location, which is the positive integer module.", "tokens": [50364, 1079, 11, 291, 500, 380, 362, 281, 519, 466, 307, 264, 3205, 295, 264, 4195, 3673, 4018, 294, 264, 4195, 24236, 50684, 50684, 4831, 11, 337, 5197, 13, 50812, 50812, 865, 13, 50862, 50862, 509, 787, 362, 281, 519, 466, 309, 294, 472, 4914, 11, 597, 307, 264, 3353, 24922, 10088, 13, 51110, 51110, 1779, 13, 51186, 51186, 407, 341, 307, 257, 869, 6532, 337, 1940, 257, 34474, 1520, 293, 6246, 309, 666, 33941, 1412, 13, 51571, 51571, 400, 456, 311, 341, 1333, 295, 1399, 562, 291, 434, 1364, 365, 2699, 76, 294, 2674, 300, 291, 434, 1009, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.1493694174523447, "compression_ratio": 1.6260504201680672, "no_caption_prob": 1.8058077330351807e-05}, {"id": 109, "seek": 33540, "start": 350.32, "end": 351.84, "text": " Right.", "tokens": [50364, 1079, 11, 291, 500, 380, 362, 281, 519, 466, 307, 264, 3205, 295, 264, 4195, 3673, 4018, 294, 264, 4195, 24236, 50684, 50684, 4831, 11, 337, 5197, 13, 50812, 50812, 865, 13, 50862, 50862, 509, 787, 362, 281, 519, 466, 309, 294, 472, 4914, 11, 597, 307, 264, 3353, 24922, 10088, 13, 51110, 51110, 1779, 13, 51186, 51186, 407, 341, 307, 257, 869, 6532, 337, 1940, 257, 34474, 1520, 293, 6246, 309, 666, 33941, 1412, 13, 51571, 51571, 400, 456, 311, 341, 1333, 295, 1399, 562, 291, 434, 1364, 365, 2699, 76, 294, 2674, 300, 291, 434, 1009, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.1493694174523447, "compression_ratio": 1.6260504201680672, "no_caption_prob": 1.8058077330351807e-05}, {"id": 110, "seek": 33540, "start": 351.84, "end": 359.53999999999996, "text": " So this is a great technique for taking a runtime check and turning it into typed data.", "tokens": [50364, 1079, 11, 291, 500, 380, 362, 281, 519, 466, 307, 264, 3205, 295, 264, 4195, 3673, 4018, 294, 264, 4195, 24236, 50684, 50684, 4831, 11, 337, 5197, 13, 50812, 50812, 865, 13, 50862, 50862, 509, 787, 362, 281, 519, 466, 309, 294, 472, 4914, 11, 597, 307, 264, 3353, 24922, 10088, 13, 51110, 51110, 1779, 13, 51186, 51186, 407, 341, 307, 257, 869, 6532, 337, 1940, 257, 34474, 1520, 293, 6246, 309, 666, 33941, 1412, 13, 51571, 51571, 400, 456, 311, 341, 1333, 295, 1399, 562, 291, 434, 1364, 365, 2699, 76, 294, 2674, 300, 291, 434, 1009, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.1493694174523447, "compression_ratio": 1.6260504201680672, "no_caption_prob": 1.8058077330351807e-05}, {"id": 111, "seek": 33540, "start": 359.53999999999996, "end": 364.85999999999996, "text": " And there's this sort of process when you're working with Elm in general that you're always", "tokens": [50364, 1079, 11, 291, 500, 380, 362, 281, 519, 466, 307, 264, 3205, 295, 264, 4195, 3673, 4018, 294, 264, 4195, 24236, 50684, 50684, 4831, 11, 337, 5197, 13, 50812, 50812, 865, 13, 50862, 50862, 509, 787, 362, 281, 519, 466, 309, 294, 472, 4914, 11, 597, 307, 264, 3353, 24922, 10088, 13, 51110, 51110, 1779, 13, 51186, 51186, 407, 341, 307, 257, 869, 6532, 337, 1940, 257, 34474, 1520, 293, 6246, 309, 666, 33941, 1412, 13, 51571, 51571, 400, 456, 311, 341, 1333, 295, 1399, 562, 291, 434, 1364, 365, 2699, 76, 294, 2674, 300, 291, 434, 1009, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.1493694174523447, "compression_ratio": 1.6260504201680672, "no_caption_prob": 1.8058077330351807e-05}, {"id": 112, "seek": 36486, "start": 364.86, "end": 368.92, "text": " sort of refining down a type as you go along.", "tokens": [50364, 1333, 295, 1895, 1760, 760, 257, 2010, 382, 291, 352, 2051, 13, 50567, 50567, 509, 434, 27221, 544, 293, 544, 16477, 466, 300, 1412, 13, 50741, 50741, 400, 370, 5145, 2837, 295, 257, 1629, 25534, 420, 24071, 307, 534, 4420, 365, 257, 2010, 13, 51093, 51093, 509, 727, 611, 584, 11, 291, 458, 11, 341, 307, 257, 2107, 6707, 6798, 293, 291, 727, 2906, 300, 51386, 51386, 1228, 341, 1333, 295, 6532, 295, 5145, 2837, 295, 257, 34474, 24071, 807, 257, 2010, 300, 51697, 51697, 307, 8752, 4188, 379, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07401338536688622, "compression_ratio": 1.708695652173913, "no_caption_prob": 2.6274279662175104e-05}, {"id": 113, "seek": 36486, "start": 368.92, "end": 372.40000000000003, "text": " You're proving more and more qualities about that data.", "tokens": [50364, 1333, 295, 1895, 1760, 760, 257, 2010, 382, 291, 352, 2051, 13, 50567, 50567, 509, 434, 27221, 544, 293, 544, 16477, 466, 300, 1412, 13, 50741, 50741, 400, 370, 5145, 2837, 295, 257, 1629, 25534, 420, 24071, 307, 534, 4420, 365, 257, 2010, 13, 51093, 51093, 509, 727, 611, 584, 11, 291, 458, 11, 341, 307, 257, 2107, 6707, 6798, 293, 291, 727, 2906, 300, 51386, 51386, 1228, 341, 1333, 295, 6532, 295, 5145, 2837, 295, 257, 34474, 24071, 807, 257, 2010, 300, 51697, 51697, 307, 8752, 4188, 379, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07401338536688622, "compression_ratio": 1.708695652173913, "no_caption_prob": 2.6274279662175104e-05}, {"id": 114, "seek": 36486, "start": 372.40000000000003, "end": 379.44, "text": " And so keeping track of a certain constraint or validation is really useful with a type.", "tokens": [50364, 1333, 295, 1895, 1760, 760, 257, 2010, 382, 291, 352, 2051, 13, 50567, 50567, 509, 434, 27221, 544, 293, 544, 16477, 466, 300, 1412, 13, 50741, 50741, 400, 370, 5145, 2837, 295, 257, 1629, 25534, 420, 24071, 307, 534, 4420, 365, 257, 2010, 13, 51093, 51093, 509, 727, 611, 584, 11, 291, 458, 11, 341, 307, 257, 2107, 6707, 6798, 293, 291, 727, 2906, 300, 51386, 51386, 1228, 341, 1333, 295, 6532, 295, 5145, 2837, 295, 257, 34474, 24071, 807, 257, 2010, 300, 51697, 51697, 307, 8752, 4188, 379, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07401338536688622, "compression_ratio": 1.708695652173913, "no_caption_prob": 2.6274279662175104e-05}, {"id": 115, "seek": 36486, "start": 379.44, "end": 385.3, "text": " You could also say, you know, this is a non empty string and you could represent that", "tokens": [50364, 1333, 295, 1895, 1760, 760, 257, 2010, 382, 291, 352, 2051, 13, 50567, 50567, 509, 434, 27221, 544, 293, 544, 16477, 466, 300, 1412, 13, 50741, 50741, 400, 370, 5145, 2837, 295, 257, 1629, 25534, 420, 24071, 307, 534, 4420, 365, 257, 2010, 13, 51093, 51093, 509, 727, 611, 584, 11, 291, 458, 11, 341, 307, 257, 2107, 6707, 6798, 293, 291, 727, 2906, 300, 51386, 51386, 1228, 341, 1333, 295, 6532, 295, 5145, 2837, 295, 257, 34474, 24071, 807, 257, 2010, 300, 51697, 51697, 307, 8752, 4188, 379, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07401338536688622, "compression_ratio": 1.708695652173913, "no_caption_prob": 2.6274279662175104e-05}, {"id": 116, "seek": 36486, "start": 385.3, "end": 391.52000000000004, "text": " using this sort of technique of keeping track of a runtime validation through a type that", "tokens": [50364, 1333, 295, 1895, 1760, 760, 257, 2010, 382, 291, 352, 2051, 13, 50567, 50567, 509, 434, 27221, 544, 293, 544, 16477, 466, 300, 1412, 13, 50741, 50741, 400, 370, 5145, 2837, 295, 257, 1629, 25534, 420, 24071, 307, 534, 4420, 365, 257, 2010, 13, 51093, 51093, 509, 727, 611, 584, 11, 291, 458, 11, 341, 307, 257, 2107, 6707, 6798, 293, 291, 727, 2906, 300, 51386, 51386, 1228, 341, 1333, 295, 6532, 295, 5145, 2837, 295, 257, 34474, 24071, 807, 257, 2010, 300, 51697, 51697, 307, 8752, 4188, 379, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07401338536688622, "compression_ratio": 1.708695652173913, "no_caption_prob": 2.6274279662175104e-05}, {"id": 117, "seek": 36486, "start": 391.52000000000004, "end": 393.74, "text": " is returned conditionally.", "tokens": [50364, 1333, 295, 1895, 1760, 760, 257, 2010, 382, 291, 352, 2051, 13, 50567, 50567, 509, 434, 27221, 544, 293, 544, 16477, 466, 300, 1412, 13, 50741, 50741, 400, 370, 5145, 2837, 295, 257, 1629, 25534, 420, 24071, 307, 534, 4420, 365, 257, 2010, 13, 51093, 51093, 509, 727, 611, 584, 11, 291, 458, 11, 341, 307, 257, 2107, 6707, 6798, 293, 291, 727, 2906, 300, 51386, 51386, 1228, 341, 1333, 295, 6532, 295, 5145, 2837, 295, 257, 34474, 24071, 807, 257, 2010, 300, 51697, 51697, 307, 8752, 4188, 379, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07401338536688622, "compression_ratio": 1.708695652173913, "no_caption_prob": 2.6274279662175104e-05}, {"id": 118, "seek": 39374, "start": 393.74, "end": 397.72, "text": " So you will only return that type on the condition that that validation passes.", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 119, "seek": 39374, "start": 397.72, "end": 398.72, "text": " Yes.", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 120, "seek": 39374, "start": 398.72, "end": 401.02, "text": " There's another way to do it.", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 121, "seek": 39374, "start": 401.02, "end": 403.84000000000003, "text": " So let's take the positive integer example.", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 122, "seek": 39374, "start": 403.84000000000003, "end": 408.28000000000003, "text": " We talked about doing this runtime validation where we conditionally return that type.", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 123, "seek": 39374, "start": 408.28000000000003, "end": 411.66, "text": " And so if we have that type, we know that condition was met.", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 124, "seek": 39374, "start": 411.66, "end": 416.46000000000004, "text": " There's another way to do it where you don't have to return that type conditionally using", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 125, "seek": 39374, "start": 416.46000000000004, "end": 419.06, "text": " a maybe or a result.", "tokens": [50364, 407, 291, 486, 787, 2736, 300, 2010, 322, 264, 4188, 300, 300, 24071, 11335, 13, 50563, 50563, 1079, 13, 50613, 50613, 821, 311, 1071, 636, 281, 360, 309, 13, 50728, 50728, 407, 718, 311, 747, 264, 3353, 24922, 1365, 13, 50869, 50869, 492, 2825, 466, 884, 341, 34474, 24071, 689, 321, 4188, 379, 2736, 300, 2010, 13, 51091, 51091, 400, 370, 498, 321, 362, 300, 2010, 11, 321, 458, 300, 4188, 390, 1131, 13, 51260, 51260, 821, 311, 1071, 636, 281, 360, 309, 689, 291, 500, 380, 362, 281, 2736, 300, 2010, 4188, 379, 1228, 51500, 51500, 257, 1310, 420, 257, 1874, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.07643216569847036, "compression_ratio": 1.9128440366972477, "no_caption_prob": 7.071776508382754e-06}, {"id": 126, "seek": 41906, "start": 419.06, "end": 427.78000000000003, "text": " The way you do that is you say positive integer, you define a constructor one that gives you", "tokens": [50364, 440, 636, 291, 360, 300, 307, 291, 584, 3353, 24922, 11, 291, 6964, 257, 47479, 472, 300, 2709, 291, 50800, 50800, 257, 3353, 24922, 472, 293, 1951, 264, 9362, 337, 300, 3353, 2316, 11, 291, 458, 300, 472, 51216, 51216, 307, 257, 3353, 560, 13, 51290, 51290, 1079, 13, 51340, 51340, 400, 550, 291, 727, 291, 727, 19219, 2035, 9362, 291, 528, 13, 51542, 51542, 400, 295, 1164, 11, 309, 5946, 322, 428, 9274, 13, 51631, 51631, 467, 5946, 322, 264, 1154, 291, 434, 1382, 281, 5039, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.17156525280164636, "compression_ratio": 1.7254901960784315, "no_caption_prob": 2.406068460913957e-06}, {"id": 127, "seek": 41906, "start": 427.78000000000003, "end": 436.1, "text": " a positive integer one and within the API for that positive model, you know that one", "tokens": [50364, 440, 636, 291, 360, 300, 307, 291, 584, 3353, 24922, 11, 291, 6964, 257, 47479, 472, 300, 2709, 291, 50800, 50800, 257, 3353, 24922, 472, 293, 1951, 264, 9362, 337, 300, 3353, 2316, 11, 291, 458, 300, 472, 51216, 51216, 307, 257, 3353, 560, 13, 51290, 51290, 1079, 13, 51340, 51340, 400, 550, 291, 727, 291, 727, 19219, 2035, 9362, 291, 528, 13, 51542, 51542, 400, 295, 1164, 11, 309, 5946, 322, 428, 9274, 13, 51631, 51631, 467, 5946, 322, 264, 1154, 291, 434, 1382, 281, 5039, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.17156525280164636, "compression_ratio": 1.7254901960784315, "no_caption_prob": 2.406068460913957e-06}, {"id": 128, "seek": 41906, "start": 436.1, "end": 437.58, "text": " is a positive int.", "tokens": [50364, 440, 636, 291, 360, 300, 307, 291, 584, 3353, 24922, 11, 291, 6964, 257, 47479, 472, 300, 2709, 291, 50800, 50800, 257, 3353, 24922, 472, 293, 1951, 264, 9362, 337, 300, 3353, 2316, 11, 291, 458, 300, 472, 51216, 51216, 307, 257, 3353, 560, 13, 51290, 51290, 1079, 13, 51340, 51340, 400, 550, 291, 727, 291, 727, 19219, 2035, 9362, 291, 528, 13, 51542, 51542, 400, 295, 1164, 11, 309, 5946, 322, 428, 9274, 13, 51631, 51631, 467, 5946, 322, 264, 1154, 291, 434, 1382, 281, 5039, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.17156525280164636, "compression_ratio": 1.7254901960784315, "no_caption_prob": 2.406068460913957e-06}, {"id": 129, "seek": 41906, "start": 437.58, "end": 438.58, "text": " Yes.", "tokens": [50364, 440, 636, 291, 360, 300, 307, 291, 584, 3353, 24922, 11, 291, 6964, 257, 47479, 472, 300, 2709, 291, 50800, 50800, 257, 3353, 24922, 472, 293, 1951, 264, 9362, 337, 300, 3353, 2316, 11, 291, 458, 300, 472, 51216, 51216, 307, 257, 3353, 560, 13, 51290, 51290, 1079, 13, 51340, 51340, 400, 550, 291, 727, 291, 727, 19219, 2035, 9362, 291, 528, 13, 51542, 51542, 400, 295, 1164, 11, 309, 5946, 322, 428, 9274, 13, 51631, 51631, 467, 5946, 322, 264, 1154, 291, 434, 1382, 281, 5039, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.17156525280164636, "compression_ratio": 1.7254901960784315, "no_caption_prob": 2.406068460913957e-06}, {"id": 130, "seek": 41906, "start": 438.58, "end": 442.62, "text": " And then you could you could expose whatever API you want.", "tokens": [50364, 440, 636, 291, 360, 300, 307, 291, 584, 3353, 24922, 11, 291, 6964, 257, 47479, 472, 300, 2709, 291, 50800, 50800, 257, 3353, 24922, 472, 293, 1951, 264, 9362, 337, 300, 3353, 2316, 11, 291, 458, 300, 472, 51216, 51216, 307, 257, 3353, 560, 13, 51290, 51290, 1079, 13, 51340, 51340, 400, 550, 291, 727, 291, 727, 19219, 2035, 9362, 291, 528, 13, 51542, 51542, 400, 295, 1164, 11, 309, 5946, 322, 428, 9274, 13, 51631, 51631, 467, 5946, 322, 264, 1154, 291, 434, 1382, 281, 5039, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.17156525280164636, "compression_ratio": 1.7254901960784315, "no_caption_prob": 2.406068460913957e-06}, {"id": 131, "seek": 41906, "start": 442.62, "end": 444.4, "text": " And of course, it depends on your domain.", "tokens": [50364, 440, 636, 291, 360, 300, 307, 291, 584, 3353, 24922, 11, 291, 6964, 257, 47479, 472, 300, 2709, 291, 50800, 50800, 257, 3353, 24922, 472, 293, 1951, 264, 9362, 337, 300, 3353, 2316, 11, 291, 458, 300, 472, 51216, 51216, 307, 257, 3353, 560, 13, 51290, 51290, 1079, 13, 51340, 51340, 400, 550, 291, 727, 291, 727, 19219, 2035, 9362, 291, 528, 13, 51542, 51542, 400, 295, 1164, 11, 309, 5946, 322, 428, 9274, 13, 51631, 51631, 467, 5946, 322, 264, 1154, 291, 434, 1382, 281, 5039, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.17156525280164636, "compression_ratio": 1.7254901960784315, "no_caption_prob": 2.406068460913957e-06}, {"id": 132, "seek": 41906, "start": 444.4, "end": 446.86, "text": " It depends on the problem you're trying to solve.", "tokens": [50364, 440, 636, 291, 360, 300, 307, 291, 584, 3353, 24922, 11, 291, 6964, 257, 47479, 472, 300, 2709, 291, 50800, 50800, 257, 3353, 24922, 472, 293, 1951, 264, 9362, 337, 300, 3353, 2316, 11, 291, 458, 300, 472, 51216, 51216, 307, 257, 3353, 560, 13, 51290, 51290, 1079, 13, 51340, 51340, 400, 550, 291, 727, 291, 727, 19219, 2035, 9362, 291, 528, 13, 51542, 51542, 400, 295, 1164, 11, 309, 5946, 322, 428, 9274, 13, 51631, 51631, 467, 5946, 322, 264, 1154, 291, 434, 1382, 281, 5039, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.17156525280164636, "compression_ratio": 1.7254901960784315, "no_caption_prob": 2.406068460913957e-06}, {"id": 133, "seek": 44686, "start": 446.86, "end": 452.18, "text": " But for example, you could have an increment function that increments it by one.", "tokens": [50364, 583, 337, 1365, 11, 291, 727, 362, 364, 26200, 2445, 300, 1946, 1117, 309, 538, 472, 13, 50630, 50630, 823, 291, 920, 366, 10815, 278, 300, 309, 311, 257, 3353, 560, 13, 50837, 50837, 407, 291, 434, 406, 884, 257, 24071, 412, 34474, 300, 486, 4188, 379, 2736, 291, 257, 2010, 13, 51128, 51128, 509, 366, 27221, 807, 264, 9362, 300, 309, 311, 6243, 281, 406, 1677, 300, 25534, 570, 51480, 51480, 295, 264, 9362, 291, 19219, 13, 51550, 51550, 1779, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.10610788921977199, "compression_ratio": 1.5806451612903225, "no_caption_prob": 1.0289370038663037e-05}, {"id": 134, "seek": 44686, "start": 452.18, "end": 456.32, "text": " Now you still are guaranteeing that it's a positive int.", "tokens": [50364, 583, 337, 1365, 11, 291, 727, 362, 364, 26200, 2445, 300, 1946, 1117, 309, 538, 472, 13, 50630, 50630, 823, 291, 920, 366, 10815, 278, 300, 309, 311, 257, 3353, 560, 13, 50837, 50837, 407, 291, 434, 406, 884, 257, 24071, 412, 34474, 300, 486, 4188, 379, 2736, 291, 257, 2010, 13, 51128, 51128, 509, 366, 27221, 807, 264, 9362, 300, 309, 311, 6243, 281, 406, 1677, 300, 25534, 570, 51480, 51480, 295, 264, 9362, 291, 19219, 13, 51550, 51550, 1779, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.10610788921977199, "compression_ratio": 1.5806451612903225, "no_caption_prob": 1.0289370038663037e-05}, {"id": 135, "seek": 44686, "start": 456.32, "end": 462.14, "text": " So you're not doing a validation at runtime that will conditionally return you a type.", "tokens": [50364, 583, 337, 1365, 11, 291, 727, 362, 364, 26200, 2445, 300, 1946, 1117, 309, 538, 472, 13, 50630, 50630, 823, 291, 920, 366, 10815, 278, 300, 309, 311, 257, 3353, 560, 13, 50837, 50837, 407, 291, 434, 406, 884, 257, 24071, 412, 34474, 300, 486, 4188, 379, 2736, 291, 257, 2010, 13, 51128, 51128, 509, 366, 27221, 807, 264, 9362, 300, 309, 311, 6243, 281, 406, 1677, 300, 25534, 570, 51480, 51480, 295, 264, 9362, 291, 19219, 13, 51550, 51550, 1779, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.10610788921977199, "compression_ratio": 1.5806451612903225, "no_caption_prob": 1.0289370038663037e-05}, {"id": 136, "seek": 44686, "start": 462.14, "end": 469.18, "text": " You are proving through the API that it's impossible to not meet that constraint because", "tokens": [50364, 583, 337, 1365, 11, 291, 727, 362, 364, 26200, 2445, 300, 1946, 1117, 309, 538, 472, 13, 50630, 50630, 823, 291, 920, 366, 10815, 278, 300, 309, 311, 257, 3353, 560, 13, 50837, 50837, 407, 291, 434, 406, 884, 257, 24071, 412, 34474, 300, 486, 4188, 379, 2736, 291, 257, 2010, 13, 51128, 51128, 509, 366, 27221, 807, 264, 9362, 300, 309, 311, 6243, 281, 406, 1677, 300, 25534, 570, 51480, 51480, 295, 264, 9362, 291, 19219, 13, 51550, 51550, 1779, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.10610788921977199, "compression_ratio": 1.5806451612903225, "no_caption_prob": 1.0289370038663037e-05}, {"id": 137, "seek": 44686, "start": 469.18, "end": 470.58000000000004, "text": " of the API you expose.", "tokens": [50364, 583, 337, 1365, 11, 291, 727, 362, 364, 26200, 2445, 300, 1946, 1117, 309, 538, 472, 13, 50630, 50630, 823, 291, 920, 366, 10815, 278, 300, 309, 311, 257, 3353, 560, 13, 50837, 50837, 407, 291, 434, 406, 884, 257, 24071, 412, 34474, 300, 486, 4188, 379, 2736, 291, 257, 2010, 13, 51128, 51128, 509, 366, 27221, 807, 264, 9362, 300, 309, 311, 6243, 281, 406, 1677, 300, 25534, 570, 51480, 51480, 295, 264, 9362, 291, 19219, 13, 51550, 51550, 1779, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.10610788921977199, "compression_ratio": 1.5806451612903225, "no_caption_prob": 1.0289370038663037e-05}, {"id": 138, "seek": 44686, "start": 470.58000000000004, "end": 471.58000000000004, "text": " Right.", "tokens": [50364, 583, 337, 1365, 11, 291, 727, 362, 364, 26200, 2445, 300, 1946, 1117, 309, 538, 472, 13, 50630, 50630, 823, 291, 920, 366, 10815, 278, 300, 309, 311, 257, 3353, 560, 13, 50837, 50837, 407, 291, 434, 406, 884, 257, 24071, 412, 34474, 300, 486, 4188, 379, 2736, 291, 257, 2010, 13, 51128, 51128, 509, 366, 27221, 807, 264, 9362, 300, 309, 311, 6243, 281, 406, 1677, 300, 25534, 570, 51480, 51480, 295, 264, 9362, 291, 19219, 13, 51550, 51550, 1779, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.10610788921977199, "compression_ratio": 1.5806451612903225, "no_caption_prob": 1.0289370038663037e-05}, {"id": 139, "seek": 47158, "start": 471.58, "end": 478.21999999999997, "text": " So you still need some validation to ensure that the integer is within acceptable bounds.", "tokens": [50364, 407, 291, 920, 643, 512, 24071, 281, 5586, 300, 264, 24922, 307, 1951, 15513, 29905, 13, 50696, 50696, 407, 309, 2203, 281, 312, 1296, 4018, 293, 732, 5218, 11, 597, 307, 264, 6597, 4948, 337, 41674, 11, 337, 50974, 50974, 5197, 13, 51024, 51024, 407, 498, 291, 352, 1791, 300, 11, 291, 920, 643, 281, 29562, 1951, 264, 3353, 24922, 10088, 51315, 51315, 300, 307, 3006, 13, 51386, 51386, 14711, 13, 51436, 51436, 865, 11, 286, 914, 11, 300, 300, 311, 746, 300, 291, 733, 295, 643, 281, 574, 412, 264, 1729, 2203, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14169250566934802, "compression_ratio": 1.7142857142857142, "no_caption_prob": 2.2473463104688562e-05}, {"id": 140, "seek": 47158, "start": 478.21999999999997, "end": 483.78, "text": " So it needs to be between zero and two billion, which is the upper limit for integers, for", "tokens": [50364, 407, 291, 920, 643, 512, 24071, 281, 5586, 300, 264, 24922, 307, 1951, 15513, 29905, 13, 50696, 50696, 407, 309, 2203, 281, 312, 1296, 4018, 293, 732, 5218, 11, 597, 307, 264, 6597, 4948, 337, 41674, 11, 337, 50974, 50974, 5197, 13, 51024, 51024, 407, 498, 291, 352, 1791, 300, 11, 291, 920, 643, 281, 29562, 1951, 264, 3353, 24922, 10088, 51315, 51315, 300, 307, 3006, 13, 51386, 51386, 14711, 13, 51436, 51436, 865, 11, 286, 914, 11, 300, 300, 311, 746, 300, 291, 733, 295, 643, 281, 574, 412, 264, 1729, 2203, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14169250566934802, "compression_ratio": 1.7142857142857142, "no_caption_prob": 2.2473463104688562e-05}, {"id": 141, "seek": 47158, "start": 483.78, "end": 484.78, "text": " instance.", "tokens": [50364, 407, 291, 920, 643, 512, 24071, 281, 5586, 300, 264, 24922, 307, 1951, 15513, 29905, 13, 50696, 50696, 407, 309, 2203, 281, 312, 1296, 4018, 293, 732, 5218, 11, 597, 307, 264, 6597, 4948, 337, 41674, 11, 337, 50974, 50974, 5197, 13, 51024, 51024, 407, 498, 291, 352, 1791, 300, 11, 291, 920, 643, 281, 29562, 1951, 264, 3353, 24922, 10088, 51315, 51315, 300, 307, 3006, 13, 51386, 51386, 14711, 13, 51436, 51436, 865, 11, 286, 914, 11, 300, 300, 311, 746, 300, 291, 733, 295, 643, 281, 574, 412, 264, 1729, 2203, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14169250566934802, "compression_ratio": 1.7142857142857142, "no_caption_prob": 2.2473463104688562e-05}, {"id": 142, "seek": 47158, "start": 484.78, "end": 490.59999999999997, "text": " So if you go past that, you still need to validate within the positive integer module", "tokens": [50364, 407, 291, 920, 643, 512, 24071, 281, 5586, 300, 264, 24922, 307, 1951, 15513, 29905, 13, 50696, 50696, 407, 309, 2203, 281, 312, 1296, 4018, 293, 732, 5218, 11, 597, 307, 264, 6597, 4948, 337, 41674, 11, 337, 50974, 50974, 5197, 13, 51024, 51024, 407, 498, 291, 352, 1791, 300, 11, 291, 920, 643, 281, 29562, 1951, 264, 3353, 24922, 10088, 51315, 51315, 300, 307, 3006, 13, 51386, 51386, 14711, 13, 51436, 51436, 865, 11, 286, 914, 11, 300, 300, 311, 746, 300, 291, 733, 295, 643, 281, 574, 412, 264, 1729, 2203, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14169250566934802, "compression_ratio": 1.7142857142857142, "no_caption_prob": 2.2473463104688562e-05}, {"id": 143, "seek": 47158, "start": 490.59999999999997, "end": 492.02, "text": " that is correct.", "tokens": [50364, 407, 291, 920, 643, 512, 24071, 281, 5586, 300, 264, 24922, 307, 1951, 15513, 29905, 13, 50696, 50696, 407, 309, 2203, 281, 312, 1296, 4018, 293, 732, 5218, 11, 597, 307, 264, 6597, 4948, 337, 41674, 11, 337, 50974, 50974, 5197, 13, 51024, 51024, 407, 498, 291, 352, 1791, 300, 11, 291, 920, 643, 281, 29562, 1951, 264, 3353, 24922, 10088, 51315, 51315, 300, 307, 3006, 13, 51386, 51386, 14711, 13, 51436, 51436, 865, 11, 286, 914, 11, 300, 300, 311, 746, 300, 291, 733, 295, 643, 281, 574, 412, 264, 1729, 2203, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14169250566934802, "compression_ratio": 1.7142857142857142, "no_caption_prob": 2.2473463104688562e-05}, {"id": 144, "seek": 47158, "start": 492.02, "end": 493.02, "text": " Interesting.", "tokens": [50364, 407, 291, 920, 643, 512, 24071, 281, 5586, 300, 264, 24922, 307, 1951, 15513, 29905, 13, 50696, 50696, 407, 309, 2203, 281, 312, 1296, 4018, 293, 732, 5218, 11, 597, 307, 264, 6597, 4948, 337, 41674, 11, 337, 50974, 50974, 5197, 13, 51024, 51024, 407, 498, 291, 352, 1791, 300, 11, 291, 920, 643, 281, 29562, 1951, 264, 3353, 24922, 10088, 51315, 51315, 300, 307, 3006, 13, 51386, 51386, 14711, 13, 51436, 51436, 865, 11, 286, 914, 11, 300, 300, 311, 746, 300, 291, 733, 295, 643, 281, 574, 412, 264, 1729, 2203, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14169250566934802, "compression_ratio": 1.7142857142857142, "no_caption_prob": 2.2473463104688562e-05}, {"id": 145, "seek": 47158, "start": 493.02, "end": 500.06, "text": " Yeah, I mean, that that's something that you kind of need to look at the particular needs", "tokens": [50364, 407, 291, 920, 643, 512, 24071, 281, 5586, 300, 264, 24922, 307, 1951, 15513, 29905, 13, 50696, 50696, 407, 309, 2203, 281, 312, 1296, 4018, 293, 732, 5218, 11, 597, 307, 264, 6597, 4948, 337, 41674, 11, 337, 50974, 50974, 5197, 13, 51024, 51024, 407, 498, 291, 352, 1791, 300, 11, 291, 920, 643, 281, 29562, 1951, 264, 3353, 24922, 10088, 51315, 51315, 300, 307, 3006, 13, 51386, 51386, 14711, 13, 51436, 51436, 865, 11, 286, 914, 11, 300, 300, 311, 746, 300, 291, 733, 295, 643, 281, 574, 412, 264, 1729, 2203, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.14169250566934802, "compression_ratio": 1.7142857142857142, "no_caption_prob": 2.2473463104688562e-05}, {"id": 146, "seek": 50006, "start": 500.06, "end": 503.38, "text": " of your domain and figure out the way to model that.", "tokens": [50364, 295, 428, 9274, 293, 2573, 484, 264, 636, 281, 2316, 300, 13, 50530, 50530, 400, 11, 291, 458, 11, 456, 311, 456, 311, 572, 472, 3827, 13, 50692, 50692, 467, 311, 534, 364, 5380, 294, 1953, 466, 428, 18491, 293, 1953, 466, 577, 264, 50908, 50908, 9362, 291, 19219, 17077, 729, 18491, 293, 4474, 484, 1340, 1646, 13, 51188, 51188, 865, 11, 2293, 13, 51281, 51281, 407, 1071, 1365, 286, 519, 295, 2171, 307, 1460, 13, 51416, 51416, 509, 458, 11, 718, 311, 584, 291, 600, 658, 257, 7241, 2372, 293, 1310, 291, 434, 13460, 309, 294, 14941, 13, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.13510171649525465, "compression_ratio": 1.657258064516129, "no_caption_prob": 8.01340866019018e-06}, {"id": 147, "seek": 50006, "start": 503.38, "end": 506.62, "text": " And, you know, there's there's no one solution.", "tokens": [50364, 295, 428, 9274, 293, 2573, 484, 264, 636, 281, 2316, 300, 13, 50530, 50530, 400, 11, 291, 458, 11, 456, 311, 456, 311, 572, 472, 3827, 13, 50692, 50692, 467, 311, 534, 364, 5380, 294, 1953, 466, 428, 18491, 293, 1953, 466, 577, 264, 50908, 50908, 9362, 291, 19219, 17077, 729, 18491, 293, 4474, 484, 1340, 1646, 13, 51188, 51188, 865, 11, 2293, 13, 51281, 51281, 407, 1071, 1365, 286, 519, 295, 2171, 307, 1460, 13, 51416, 51416, 509, 458, 11, 718, 311, 584, 291, 600, 658, 257, 7241, 2372, 293, 1310, 291, 434, 13460, 309, 294, 14941, 13, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.13510171649525465, "compression_ratio": 1.657258064516129, "no_caption_prob": 8.01340866019018e-06}, {"id": 148, "seek": 50006, "start": 506.62, "end": 510.94, "text": " It's really an exercise in thinking about your constraints and thinking about how the", "tokens": [50364, 295, 428, 9274, 293, 2573, 484, 264, 636, 281, 2316, 300, 13, 50530, 50530, 400, 11, 291, 458, 11, 456, 311, 456, 311, 572, 472, 3827, 13, 50692, 50692, 467, 311, 534, 364, 5380, 294, 1953, 466, 428, 18491, 293, 1953, 466, 577, 264, 50908, 50908, 9362, 291, 19219, 17077, 729, 18491, 293, 4474, 484, 1340, 1646, 13, 51188, 51188, 865, 11, 2293, 13, 51281, 51281, 407, 1071, 1365, 286, 519, 295, 2171, 307, 1460, 13, 51416, 51416, 509, 458, 11, 718, 311, 584, 291, 600, 658, 257, 7241, 2372, 293, 1310, 291, 434, 13460, 309, 294, 14941, 13, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.13510171649525465, "compression_ratio": 1.657258064516129, "no_caption_prob": 8.01340866019018e-06}, {"id": 149, "seek": 50006, "start": 510.94, "end": 516.54, "text": " API you expose enables those constraints and rules out anything else.", "tokens": [50364, 295, 428, 9274, 293, 2573, 484, 264, 636, 281, 2316, 300, 13, 50530, 50530, 400, 11, 291, 458, 11, 456, 311, 456, 311, 572, 472, 3827, 13, 50692, 50692, 467, 311, 534, 364, 5380, 294, 1953, 466, 428, 18491, 293, 1953, 466, 577, 264, 50908, 50908, 9362, 291, 19219, 17077, 729, 18491, 293, 4474, 484, 1340, 1646, 13, 51188, 51188, 865, 11, 2293, 13, 51281, 51281, 407, 1071, 1365, 286, 519, 295, 2171, 307, 1460, 13, 51416, 51416, 509, 458, 11, 718, 311, 584, 291, 600, 658, 257, 7241, 2372, 293, 1310, 291, 434, 13460, 309, 294, 14941, 13, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.13510171649525465, "compression_ratio": 1.657258064516129, "no_caption_prob": 8.01340866019018e-06}, {"id": 150, "seek": 50006, "start": 516.54, "end": 518.4, "text": " Yeah, exactly.", "tokens": [50364, 295, 428, 9274, 293, 2573, 484, 264, 636, 281, 2316, 300, 13, 50530, 50530, 400, 11, 291, 458, 11, 456, 311, 456, 311, 572, 472, 3827, 13, 50692, 50692, 467, 311, 534, 364, 5380, 294, 1953, 466, 428, 18491, 293, 1953, 466, 577, 264, 50908, 50908, 9362, 291, 19219, 17077, 729, 18491, 293, 4474, 484, 1340, 1646, 13, 51188, 51188, 865, 11, 2293, 13, 51281, 51281, 407, 1071, 1365, 286, 519, 295, 2171, 307, 1460, 13, 51416, 51416, 509, 458, 11, 718, 311, 584, 291, 600, 658, 257, 7241, 2372, 293, 1310, 291, 434, 13460, 309, 294, 14941, 13, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.13510171649525465, "compression_ratio": 1.657258064516129, "no_caption_prob": 8.01340866019018e-06}, {"id": 151, "seek": 50006, "start": 518.4, "end": 521.1, "text": " So another example I think of sometimes is money.", "tokens": [50364, 295, 428, 9274, 293, 2573, 484, 264, 636, 281, 2316, 300, 13, 50530, 50530, 400, 11, 291, 458, 11, 456, 311, 456, 311, 572, 472, 3827, 13, 50692, 50692, 467, 311, 534, 364, 5380, 294, 1953, 466, 428, 18491, 293, 1953, 466, 577, 264, 50908, 50908, 9362, 291, 19219, 17077, 729, 18491, 293, 4474, 484, 1340, 1646, 13, 51188, 51188, 865, 11, 2293, 13, 51281, 51281, 407, 1071, 1365, 286, 519, 295, 2171, 307, 1460, 13, 51416, 51416, 509, 458, 11, 718, 311, 584, 291, 600, 658, 257, 7241, 2372, 293, 1310, 291, 434, 13460, 309, 294, 14941, 13, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.13510171649525465, "compression_ratio": 1.657258064516129, "no_caption_prob": 8.01340866019018e-06}, {"id": 152, "seek": 50006, "start": 521.1, "end": 527.72, "text": " You know, let's say you've got a dollar amount and maybe you're representing it in cents.", "tokens": [50364, 295, 428, 9274, 293, 2573, 484, 264, 636, 281, 2316, 300, 13, 50530, 50530, 400, 11, 291, 458, 11, 456, 311, 456, 311, 572, 472, 3827, 13, 50692, 50692, 467, 311, 534, 364, 5380, 294, 1953, 466, 428, 18491, 293, 1953, 466, 577, 264, 50908, 50908, 9362, 291, 19219, 17077, 729, 18491, 293, 4474, 484, 1340, 1646, 13, 51188, 51188, 865, 11, 2293, 13, 51281, 51281, 407, 1071, 1365, 286, 519, 295, 2171, 307, 1460, 13, 51416, 51416, 509, 458, 11, 718, 311, 584, 291, 600, 658, 257, 7241, 2372, 293, 1310, 291, 434, 13460, 309, 294, 14941, 13, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.13510171649525465, "compression_ratio": 1.657258064516129, "no_caption_prob": 8.01340866019018e-06}, {"id": 153, "seek": 52772, "start": 527.72, "end": 535.0600000000001, "text": " So I've actually run into this before where you have a dollar amount.", "tokens": [50364, 407, 286, 600, 767, 1190, 666, 341, 949, 689, 291, 362, 257, 7241, 2372, 13, 50731, 50731, 400, 498, 291, 19219, 264, 47479, 11, 1310, 1310, 291, 534, 528, 281, 652, 988, 300, 300, 1460, 50977, 50977, 307, 2107, 3671, 11, 558, 30, 51156, 51156, 1610, 1310, 498, 291, 434, 13460, 300, 1460, 294, 257, 3671, 636, 11, 1310, 264, 2154, 1124, 295, 51392, 51392, 577, 291, 2906, 300, 1460, 1062, 1319, 670, 565, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.07837174210367323, "compression_ratio": 1.6395939086294415, "no_caption_prob": 1.3631074580189306e-05}, {"id": 154, "seek": 52772, "start": 535.0600000000001, "end": 539.98, "text": " And if you expose the constructor, maybe maybe you really want to make sure that that money", "tokens": [50364, 407, 286, 600, 767, 1190, 666, 341, 949, 689, 291, 362, 257, 7241, 2372, 13, 50731, 50731, 400, 498, 291, 19219, 264, 47479, 11, 1310, 1310, 291, 534, 528, 281, 652, 988, 300, 300, 1460, 50977, 50977, 307, 2107, 3671, 11, 558, 30, 51156, 51156, 1610, 1310, 498, 291, 434, 13460, 300, 1460, 294, 257, 3671, 636, 11, 1310, 264, 2154, 1124, 295, 51392, 51392, 577, 291, 2906, 300, 1460, 1062, 1319, 670, 565, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.07837174210367323, "compression_ratio": 1.6395939086294415, "no_caption_prob": 1.3631074580189306e-05}, {"id": 155, "seek": 52772, "start": 539.98, "end": 543.5600000000001, "text": " is non negative, right?", "tokens": [50364, 407, 286, 600, 767, 1190, 666, 341, 949, 689, 291, 362, 257, 7241, 2372, 13, 50731, 50731, 400, 498, 291, 19219, 264, 47479, 11, 1310, 1310, 291, 534, 528, 281, 652, 988, 300, 300, 1460, 50977, 50977, 307, 2107, 3671, 11, 558, 30, 51156, 51156, 1610, 1310, 498, 291, 434, 13460, 300, 1460, 294, 257, 3671, 636, 11, 1310, 264, 2154, 1124, 295, 51392, 51392, 577, 291, 2906, 300, 1460, 1062, 1319, 670, 565, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.07837174210367323, "compression_ratio": 1.6395939086294415, "no_caption_prob": 1.3631074580189306e-05}, {"id": 156, "seek": 52772, "start": 543.5600000000001, "end": 548.28, "text": " Or maybe if you're representing that money in a negative way, maybe the internals of", "tokens": [50364, 407, 286, 600, 767, 1190, 666, 341, 949, 689, 291, 362, 257, 7241, 2372, 13, 50731, 50731, 400, 498, 291, 19219, 264, 47479, 11, 1310, 1310, 291, 534, 528, 281, 652, 988, 300, 300, 1460, 50977, 50977, 307, 2107, 3671, 11, 558, 30, 51156, 51156, 1610, 1310, 498, 291, 434, 13460, 300, 1460, 294, 257, 3671, 636, 11, 1310, 264, 2154, 1124, 295, 51392, 51392, 577, 291, 2906, 300, 1460, 1062, 1319, 670, 565, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.07837174210367323, "compression_ratio": 1.6395939086294415, "no_caption_prob": 1.3631074580189306e-05}, {"id": 157, "seek": 52772, "start": 548.28, "end": 551.14, "text": " how you represent that money might change over time.", "tokens": [50364, 407, 286, 600, 767, 1190, 666, 341, 949, 689, 291, 362, 257, 7241, 2372, 13, 50731, 50731, 400, 498, 291, 19219, 264, 47479, 11, 1310, 1310, 291, 534, 528, 281, 652, 988, 300, 300, 1460, 50977, 50977, 307, 2107, 3671, 11, 558, 30, 51156, 51156, 1610, 1310, 498, 291, 434, 13460, 300, 1460, 294, 257, 3671, 636, 11, 1310, 264, 2154, 1124, 295, 51392, 51392, 577, 291, 2906, 300, 1460, 1062, 1319, 670, 565, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.07837174210367323, "compression_ratio": 1.6395939086294415, "no_caption_prob": 1.3631074580189306e-05}, {"id": 158, "seek": 55114, "start": 551.14, "end": 558.58, "text": " So maybe you could represent it as a negative int, or you could represent that with a particular", "tokens": [50364, 407, 1310, 291, 727, 2906, 309, 382, 257, 3671, 560, 11, 420, 291, 727, 2906, 300, 365, 257, 1729, 50736, 50736, 2158, 300, 1619, 1968, 264, 1460, 307, 3671, 420, 406, 13, 50923, 50923, 400, 729, 9362, 1715, 5327, 11, 729, 721, 16693, 670, 565, 382, 428, 9362, 43737, 11, 382, 428, 51306, 51306, 9274, 43737, 293, 264, 2740, 291, 434, 1382, 281, 5039, 13, 51445, 51445, 400, 370, 286, 519, 341, 6689, 505, 281, 1071, 935, 466, 42687, 3467, 11, 597, 307, 300, 309, 4045, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.08728913201226128, "compression_ratio": 1.6899563318777293, "no_caption_prob": 1.863096076704096e-05}, {"id": 159, "seek": 55114, "start": 558.58, "end": 562.3199999999999, "text": " value that says whether the money is negative or not.", "tokens": [50364, 407, 1310, 291, 727, 2906, 309, 382, 257, 3671, 560, 11, 420, 291, 727, 2906, 300, 365, 257, 1729, 50736, 50736, 2158, 300, 1619, 1968, 264, 1460, 307, 3671, 420, 406, 13, 50923, 50923, 400, 729, 9362, 1715, 5327, 11, 729, 721, 16693, 670, 565, 382, 428, 9362, 43737, 11, 382, 428, 51306, 51306, 9274, 43737, 293, 264, 2740, 291, 434, 1382, 281, 5039, 13, 51445, 51445, 400, 370, 286, 519, 341, 6689, 505, 281, 1071, 935, 466, 42687, 3467, 11, 597, 307, 300, 309, 4045, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.08728913201226128, "compression_ratio": 1.6899563318777293, "no_caption_prob": 1.863096076704096e-05}, {"id": 160, "seek": 55114, "start": 562.3199999999999, "end": 569.98, "text": " And those API design decisions, those things evolve over time as your API evolves, as your", "tokens": [50364, 407, 1310, 291, 727, 2906, 309, 382, 257, 3671, 560, 11, 420, 291, 727, 2906, 300, 365, 257, 1729, 50736, 50736, 2158, 300, 1619, 1968, 264, 1460, 307, 3671, 420, 406, 13, 50923, 50923, 400, 729, 9362, 1715, 5327, 11, 729, 721, 16693, 670, 565, 382, 428, 9362, 43737, 11, 382, 428, 51306, 51306, 9274, 43737, 293, 264, 2740, 291, 434, 1382, 281, 5039, 13, 51445, 51445, 400, 370, 286, 519, 341, 6689, 505, 281, 1071, 935, 466, 42687, 3467, 11, 597, 307, 300, 309, 4045, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.08728913201226128, "compression_ratio": 1.6899563318777293, "no_caption_prob": 1.863096076704096e-05}, {"id": 161, "seek": 55114, "start": 569.98, "end": 572.76, "text": " domain evolves and the problems you're trying to solve.", "tokens": [50364, 407, 1310, 291, 727, 2906, 309, 382, 257, 3671, 560, 11, 420, 291, 727, 2906, 300, 365, 257, 1729, 50736, 50736, 2158, 300, 1619, 1968, 264, 1460, 307, 3671, 420, 406, 13, 50923, 50923, 400, 729, 9362, 1715, 5327, 11, 729, 721, 16693, 670, 565, 382, 428, 9362, 43737, 11, 382, 428, 51306, 51306, 9274, 43737, 293, 264, 2740, 291, 434, 1382, 281, 5039, 13, 51445, 51445, 400, 370, 286, 519, 341, 6689, 505, 281, 1071, 935, 466, 42687, 3467, 11, 597, 307, 300, 309, 4045, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.08728913201226128, "compression_ratio": 1.6899563318777293, "no_caption_prob": 1.863096076704096e-05}, {"id": 162, "seek": 55114, "start": 572.76, "end": 579.54, "text": " And so I think this leads us to another point about opaque types, which is that it allows", "tokens": [50364, 407, 1310, 291, 727, 2906, 309, 382, 257, 3671, 560, 11, 420, 291, 727, 2906, 300, 365, 257, 1729, 50736, 50736, 2158, 300, 1619, 1968, 264, 1460, 307, 3671, 420, 406, 13, 50923, 50923, 400, 729, 9362, 1715, 5327, 11, 729, 721, 16693, 670, 565, 382, 428, 9362, 43737, 11, 382, 428, 51306, 51306, 9274, 43737, 293, 264, 2740, 291, 434, 1382, 281, 5039, 13, 51445, 51445, 400, 370, 286, 519, 341, 6689, 505, 281, 1071, 935, 466, 42687, 3467, 11, 597, 307, 300, 309, 4045, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.08728913201226128, "compression_ratio": 1.6899563318777293, "no_caption_prob": 1.863096076704096e-05}, {"id": 163, "seek": 57954, "start": 579.54, "end": 586.04, "text": " you to hide the implementation details and make it so that users aren't depending on", "tokens": [50364, 291, 281, 6479, 264, 11420, 4365, 293, 652, 309, 370, 300, 5022, 3212, 380, 5413, 322, 50689, 50689, 729, 11420, 4365, 13, 50810, 50810, 400, 370, 30621, 11, 291, 500, 380, 652, 7697, 2962, 570, 291, 600, 7633, 264, 2154, 1124, 51022, 51022, 293, 370, 291, 393, 16433, 1319, 552, 382, 938, 382, 264, 1908, 9362, 7023, 264, 912, 13, 51248, 51248, 1079, 11, 300, 311, 746, 300, 286, 5694, 257, 688, 295, 562, 3579, 5821, 307, 300, 291, 722, 51552, 51552, 365, 264, 2010, 11, 597, 307, 257, 2136, 2010, 11, 364, 419, 4609, 281, 2136, 2010, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1354541130436277, "compression_ratio": 1.732, "no_caption_prob": 1.4510123946820386e-05}, {"id": 164, "seek": 57954, "start": 586.04, "end": 588.4599999999999, "text": " those implementation details.", "tokens": [50364, 291, 281, 6479, 264, 11420, 4365, 293, 652, 309, 370, 300, 5022, 3212, 380, 5413, 322, 50689, 50689, 729, 11420, 4365, 13, 50810, 50810, 400, 370, 30621, 11, 291, 500, 380, 652, 7697, 2962, 570, 291, 600, 7633, 264, 2154, 1124, 51022, 51022, 293, 370, 291, 393, 16433, 1319, 552, 382, 938, 382, 264, 1908, 9362, 7023, 264, 912, 13, 51248, 51248, 1079, 11, 300, 311, 746, 300, 286, 5694, 257, 688, 295, 562, 3579, 5821, 307, 300, 291, 722, 51552, 51552, 365, 264, 2010, 11, 597, 307, 257, 2136, 2010, 11, 364, 419, 4609, 281, 2136, 2010, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1354541130436277, "compression_ratio": 1.732, "no_caption_prob": 1.4510123946820386e-05}, {"id": 165, "seek": 57954, "start": 588.4599999999999, "end": 592.6999999999999, "text": " And so downstream, you don't make breaking changes because you've hidden the internals", "tokens": [50364, 291, 281, 6479, 264, 11420, 4365, 293, 652, 309, 370, 300, 5022, 3212, 380, 5413, 322, 50689, 50689, 729, 11420, 4365, 13, 50810, 50810, 400, 370, 30621, 11, 291, 500, 380, 652, 7697, 2962, 570, 291, 600, 7633, 264, 2154, 1124, 51022, 51022, 293, 370, 291, 393, 16433, 1319, 552, 382, 938, 382, 264, 1908, 9362, 7023, 264, 912, 13, 51248, 51248, 1079, 11, 300, 311, 746, 300, 286, 5694, 257, 688, 295, 562, 3579, 5821, 307, 300, 291, 722, 51552, 51552, 365, 264, 2010, 11, 597, 307, 257, 2136, 2010, 11, 364, 419, 4609, 281, 2136, 2010, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1354541130436277, "compression_ratio": 1.732, "no_caption_prob": 1.4510123946820386e-05}, {"id": 166, "seek": 57954, "start": 592.6999999999999, "end": 597.2199999999999, "text": " and so you can freely change them as long as the public API remains the same.", "tokens": [50364, 291, 281, 6479, 264, 11420, 4365, 293, 652, 309, 370, 300, 5022, 3212, 380, 5413, 322, 50689, 50689, 729, 11420, 4365, 13, 50810, 50810, 400, 370, 30621, 11, 291, 500, 380, 652, 7697, 2962, 570, 291, 600, 7633, 264, 2154, 1124, 51022, 51022, 293, 370, 291, 393, 16433, 1319, 552, 382, 938, 382, 264, 1908, 9362, 7023, 264, 912, 13, 51248, 51248, 1079, 11, 300, 311, 746, 300, 286, 5694, 257, 688, 295, 562, 3579, 5821, 307, 300, 291, 722, 51552, 51552, 365, 264, 2010, 11, 597, 307, 257, 2136, 2010, 11, 364, 419, 4609, 281, 2136, 2010, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1354541130436277, "compression_ratio": 1.732, "no_caption_prob": 1.4510123946820386e-05}, {"id": 167, "seek": 57954, "start": 597.2199999999999, "end": 603.3, "text": " Yes, that's something that I noticed a lot of when writing applications is that you start", "tokens": [50364, 291, 281, 6479, 264, 11420, 4365, 293, 652, 309, 370, 300, 5022, 3212, 380, 5413, 322, 50689, 50689, 729, 11420, 4365, 13, 50810, 50810, 400, 370, 30621, 11, 291, 500, 380, 652, 7697, 2962, 570, 291, 600, 7633, 264, 2154, 1124, 51022, 51022, 293, 370, 291, 393, 16433, 1319, 552, 382, 938, 382, 264, 1908, 9362, 7023, 264, 912, 13, 51248, 51248, 1079, 11, 300, 311, 746, 300, 286, 5694, 257, 688, 295, 562, 3579, 5821, 307, 300, 291, 722, 51552, 51552, 365, 264, 2010, 11, 597, 307, 257, 2136, 2010, 11, 364, 419, 4609, 281, 2136, 2010, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1354541130436277, "compression_ratio": 1.732, "no_caption_prob": 1.4510123946820386e-05}, {"id": 168, "seek": 57954, "start": 603.3, "end": 608.38, "text": " with the type, which is a record type, an alias to record type.", "tokens": [50364, 291, 281, 6479, 264, 11420, 4365, 293, 652, 309, 370, 300, 5022, 3212, 380, 5413, 322, 50689, 50689, 729, 11420, 4365, 13, 50810, 50810, 400, 370, 30621, 11, 291, 500, 380, 652, 7697, 2962, 570, 291, 600, 7633, 264, 2154, 1124, 51022, 51022, 293, 370, 291, 393, 16433, 1319, 552, 382, 938, 382, 264, 1908, 9362, 7023, 264, 912, 13, 51248, 51248, 1079, 11, 300, 311, 746, 300, 286, 5694, 257, 688, 295, 562, 3579, 5821, 307, 300, 291, 722, 51552, 51552, 365, 264, 2010, 11, 597, 307, 257, 2136, 2010, 11, 364, 419, 4609, 281, 2136, 2010, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.1354541130436277, "compression_ratio": 1.732, "no_caption_prob": 1.4510123946820386e-05}, {"id": 169, "seek": 60838, "start": 608.38, "end": 614.52, "text": " And then because the internals are exposed to the other modules, the other modules start", "tokens": [50364, 400, 550, 570, 264, 2154, 1124, 366, 9495, 281, 264, 661, 16679, 11, 264, 661, 16679, 722, 50671, 50671, 5413, 322, 552, 13, 50850, 50850, 400, 550, 562, 291, 528, 281, 652, 2962, 281, 264, 9362, 11, 281, 264, 6920, 3877, 11, 550, 291, 51164, 51164, 483, 666, 15379, 570, 3195, 295, 661, 16679, 5672, 322, 577, 300, 1985, 13, 51402, 51402, 400, 291, 643, 281, 11, 754, 337, 2199, 2962, 411, 5127, 257, 777, 2519, 281, 264, 2136, 11, 300, 311, 588, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.09383537029397898, "compression_ratio": 1.7647058823529411, "no_caption_prob": 7.766797352815047e-06}, {"id": 170, "seek": 60838, "start": 614.52, "end": 618.1, "text": " depending on them.", "tokens": [50364, 400, 550, 570, 264, 2154, 1124, 366, 9495, 281, 264, 661, 16679, 11, 264, 661, 16679, 722, 50671, 50671, 5413, 322, 552, 13, 50850, 50850, 400, 550, 562, 291, 528, 281, 652, 2962, 281, 264, 9362, 11, 281, 264, 6920, 3877, 11, 550, 291, 51164, 51164, 483, 666, 15379, 570, 3195, 295, 661, 16679, 5672, 322, 577, 300, 1985, 13, 51402, 51402, 400, 291, 643, 281, 11, 754, 337, 2199, 2962, 411, 5127, 257, 777, 2519, 281, 264, 2136, 11, 300, 311, 588, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.09383537029397898, "compression_ratio": 1.7647058823529411, "no_caption_prob": 7.766797352815047e-06}, {"id": 171, "seek": 60838, "start": 618.1, "end": 624.38, "text": " And then when you want to make changes to the API, to the internal structure, then you", "tokens": [50364, 400, 550, 570, 264, 2154, 1124, 366, 9495, 281, 264, 661, 16679, 11, 264, 661, 16679, 722, 50671, 50671, 5413, 322, 552, 13, 50850, 50850, 400, 550, 562, 291, 528, 281, 652, 2962, 281, 264, 9362, 11, 281, 264, 6920, 3877, 11, 550, 291, 51164, 51164, 483, 666, 15379, 570, 3195, 295, 661, 16679, 5672, 322, 577, 300, 1985, 13, 51402, 51402, 400, 291, 643, 281, 11, 754, 337, 2199, 2962, 411, 5127, 257, 777, 2519, 281, 264, 2136, 11, 300, 311, 588, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.09383537029397898, "compression_ratio": 1.7647058823529411, "no_caption_prob": 7.766797352815047e-06}, {"id": 172, "seek": 60838, "start": 624.38, "end": 629.14, "text": " get into troubles because lots of other modules depend on how that works.", "tokens": [50364, 400, 550, 570, 264, 2154, 1124, 366, 9495, 281, 264, 661, 16679, 11, 264, 661, 16679, 722, 50671, 50671, 5413, 322, 552, 13, 50850, 50850, 400, 550, 562, 291, 528, 281, 652, 2962, 281, 264, 9362, 11, 281, 264, 6920, 3877, 11, 550, 291, 51164, 51164, 483, 666, 15379, 570, 3195, 295, 661, 16679, 5672, 322, 577, 300, 1985, 13, 51402, 51402, 400, 291, 643, 281, 11, 754, 337, 2199, 2962, 411, 5127, 257, 777, 2519, 281, 264, 2136, 11, 300, 311, 588, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.09383537029397898, "compression_ratio": 1.7647058823529411, "no_caption_prob": 7.766797352815047e-06}, {"id": 173, "seek": 60838, "start": 629.14, "end": 637.4, "text": " And you need to, even for simple changes like adding a new field to the record, that's very", "tokens": [50364, 400, 550, 570, 264, 2154, 1124, 366, 9495, 281, 264, 661, 16679, 11, 264, 661, 16679, 722, 50671, 50671, 5413, 322, 552, 13, 50850, 50850, 400, 550, 562, 291, 528, 281, 652, 2962, 281, 264, 9362, 11, 281, 264, 6920, 3877, 11, 550, 291, 51164, 51164, 483, 666, 15379, 570, 3195, 295, 661, 16679, 5672, 322, 577, 300, 1985, 13, 51402, 51402, 400, 291, 643, 281, 11, 754, 337, 2199, 2962, 411, 5127, 257, 777, 2519, 281, 264, 2136, 11, 300, 311, 588, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.09383537029397898, "compression_ratio": 1.7647058823529411, "no_caption_prob": 7.766797352815047e-06}, {"id": 174, "seek": 63740, "start": 637.4, "end": 639.42, "text": " tedious work.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 175, "seek": 63740, "start": 639.42, "end": 644.9399999999999, "text": " Whereas if it was a pig to start with, it would be very easy.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 176, "seek": 63740, "start": 644.9399999999999, "end": 649.4599999999999, "text": " You only have to change it in one place, maybe also in tests and that's it.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 177, "seek": 63740, "start": 649.4599999999999, "end": 652.5, "text": " Well, probably not even in tests.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 178, "seek": 63740, "start": 652.5, "end": 653.54, "text": " Right, right.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 179, "seek": 63740, "start": 653.54, "end": 656.98, "text": " Because the tests also depend on the public API that you've exposed.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 180, "seek": 63740, "start": 656.98, "end": 657.98, "text": " Exactly.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 181, "seek": 63740, "start": 657.98, "end": 660.18, "text": " And that's also a good point.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 182, "seek": 63740, "start": 660.18, "end": 664.1, "text": " People often ask the question, should I test my internals with the pig types?", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 183, "seek": 63740, "start": 664.1, "end": 665.1, "text": " You can't.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 184, "seek": 63740, "start": 665.1, "end": 667.1, "text": " It's a problem solved.", "tokens": [50364, 38284, 589, 13, 50465, 50465, 13813, 498, 309, 390, 257, 8120, 281, 722, 365, 11, 309, 576, 312, 588, 1858, 13, 50741, 50741, 509, 787, 362, 281, 1319, 309, 294, 472, 1081, 11, 1310, 611, 294, 6921, 293, 300, 311, 309, 13, 50967, 50967, 1042, 11, 1391, 406, 754, 294, 6921, 13, 51119, 51119, 1779, 11, 558, 13, 51171, 51171, 1436, 264, 6921, 611, 5672, 322, 264, 1908, 9362, 300, 291, 600, 9495, 13, 51343, 51343, 7587, 13, 51393, 51393, 400, 300, 311, 611, 257, 665, 935, 13, 51503, 51503, 3432, 2049, 1029, 264, 1168, 11, 820, 286, 1500, 452, 2154, 1124, 365, 264, 8120, 3467, 30, 51699, 51699, 509, 393, 380, 13, 51749, 51749, 467, 311, 257, 1154, 13041, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.21962025451660155, "compression_ratio": 1.5692883895131087, "no_caption_prob": 3.321302210679278e-05}, {"id": 185, "seek": 66710, "start": 667.1, "end": 668.1, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 823, 11, 1392, 11, 370, 341, 6689, 281, 4317, 257, 544, 7339, 4829, 11, 457, 286, 445, 528, 281, 829, 309, 50748, 50748, 484, 456, 281, 652, 561, 3650, 295, 341, 13, 50998, 50998, 821, 366, 512, 3331, 11, 370, 286, 519, 295, 613, 721, 11, 291, 393, 362, 257, 10088, 42687, 2158, 51384, 51384, 420, 257, 10088, 42687, 2010, 11, 420, 291, 393, 362, 257, 7372, 42687, 2010, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17196902250632262, "compression_ratio": 1.6374269005847952, "no_caption_prob": 2.8856102289864793e-05}, {"id": 186, "seek": 66710, "start": 668.1, "end": 674.78, "text": " Now, okay, so this leads to perhaps a more advanced topic, but I just want to put it", "tokens": [50364, 1779, 13, 50414, 50414, 823, 11, 1392, 11, 370, 341, 6689, 281, 4317, 257, 544, 7339, 4829, 11, 457, 286, 445, 528, 281, 829, 309, 50748, 50748, 484, 456, 281, 652, 561, 3650, 295, 341, 13, 50998, 50998, 821, 366, 512, 3331, 11, 370, 286, 519, 295, 613, 721, 11, 291, 393, 362, 257, 10088, 42687, 2158, 51384, 51384, 420, 257, 10088, 42687, 2010, 11, 420, 291, 393, 362, 257, 7372, 42687, 2010, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17196902250632262, "compression_ratio": 1.6374269005847952, "no_caption_prob": 2.8856102289864793e-05}, {"id": 187, "seek": 66710, "start": 674.78, "end": 679.78, "text": " out there to make people aware of this.", "tokens": [50364, 1779, 13, 50414, 50414, 823, 11, 1392, 11, 370, 341, 6689, 281, 4317, 257, 544, 7339, 4829, 11, 457, 286, 445, 528, 281, 829, 309, 50748, 50748, 484, 456, 281, 652, 561, 3650, 295, 341, 13, 50998, 50998, 821, 366, 512, 3331, 11, 370, 286, 519, 295, 613, 721, 11, 291, 393, 362, 257, 10088, 42687, 2158, 51384, 51384, 420, 257, 10088, 42687, 2010, 11, 420, 291, 393, 362, 257, 7372, 42687, 2010, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17196902250632262, "compression_ratio": 1.6374269005847952, "no_caption_prob": 2.8856102289864793e-05}, {"id": 188, "seek": 66710, "start": 679.78, "end": 687.5, "text": " There are some cases, so I think of these things, you can have a module opaque value", "tokens": [50364, 1779, 13, 50414, 50414, 823, 11, 1392, 11, 370, 341, 6689, 281, 4317, 257, 544, 7339, 4829, 11, 457, 286, 445, 528, 281, 829, 309, 50748, 50748, 484, 456, 281, 652, 561, 3650, 295, 341, 13, 50998, 50998, 821, 366, 512, 3331, 11, 370, 286, 519, 295, 613, 721, 11, 291, 393, 362, 257, 10088, 42687, 2158, 51384, 51384, 420, 257, 10088, 42687, 2010, 11, 420, 291, 393, 362, 257, 7372, 42687, 2010, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17196902250632262, "compression_ratio": 1.6374269005847952, "no_caption_prob": 2.8856102289864793e-05}, {"id": 189, "seek": 66710, "start": 687.5, "end": 690.98, "text": " or a module opaque type, or you can have a package opaque type.", "tokens": [50364, 1779, 13, 50414, 50414, 823, 11, 1392, 11, 370, 341, 6689, 281, 4317, 257, 544, 7339, 4829, 11, 457, 286, 445, 528, 281, 829, 309, 50748, 50748, 484, 456, 281, 652, 561, 3650, 295, 341, 13, 50998, 50998, 821, 366, 512, 3331, 11, 370, 286, 519, 295, 613, 721, 11, 291, 393, 362, 257, 10088, 42687, 2158, 51384, 51384, 420, 257, 10088, 42687, 2010, 11, 420, 291, 393, 362, 257, 7372, 42687, 2010, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17196902250632262, "compression_ratio": 1.6374269005847952, "no_caption_prob": 2.8856102289864793e-05}, {"id": 190, "seek": 69098, "start": 690.98, "end": 697.82, "text": " And when I say package opaque type, I'm talking about having an Elm package that you're building", "tokens": [50364, 400, 562, 286, 584, 7372, 42687, 2010, 11, 286, 478, 1417, 466, 1419, 364, 2699, 76, 7372, 300, 291, 434, 2390, 50706, 50706, 293, 300, 2699, 76, 7372, 393, 362, 257, 2010, 300, 311, 6920, 281, 264, 7372, 11, 3620, 1340, 11, 51028, 51028, 604, 3089, 1951, 300, 7372, 393, 764, 300, 2010, 293, 536, 264, 2010, 293, 1340, 2380, 51332, 51332, 295, 264, 7372, 2644, 764, 264, 2154, 1124, 295, 300, 2010, 13, 51520, 51520, 407, 456, 366, 257, 688, 295, 17401, 300, 764, 341, 6532, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.06961936017741328, "compression_ratio": 1.89, "no_caption_prob": 0.00011410821025492623}, {"id": 191, "seek": 69098, "start": 697.82, "end": 704.26, "text": " and that Elm package can have a type that's internal to the package, meaning anything,", "tokens": [50364, 400, 562, 286, 584, 7372, 42687, 2010, 11, 286, 478, 1417, 466, 1419, 364, 2699, 76, 7372, 300, 291, 434, 2390, 50706, 50706, 293, 300, 2699, 76, 7372, 393, 362, 257, 2010, 300, 311, 6920, 281, 264, 7372, 11, 3620, 1340, 11, 51028, 51028, 604, 3089, 1951, 300, 7372, 393, 764, 300, 2010, 293, 536, 264, 2010, 293, 1340, 2380, 51332, 51332, 295, 264, 7372, 2644, 764, 264, 2154, 1124, 295, 300, 2010, 13, 51520, 51520, 407, 456, 366, 257, 688, 295, 17401, 300, 764, 341, 6532, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.06961936017741328, "compression_ratio": 1.89, "no_caption_prob": 0.00011410821025492623}, {"id": 192, "seek": 69098, "start": 704.26, "end": 710.34, "text": " any code within that package can use that type and see the type and anything outside", "tokens": [50364, 400, 562, 286, 584, 7372, 42687, 2010, 11, 286, 478, 1417, 466, 1419, 364, 2699, 76, 7372, 300, 291, 434, 2390, 50706, 50706, 293, 300, 2699, 76, 7372, 393, 362, 257, 2010, 300, 311, 6920, 281, 264, 7372, 11, 3620, 1340, 11, 51028, 51028, 604, 3089, 1951, 300, 7372, 393, 764, 300, 2010, 293, 536, 264, 2010, 293, 1340, 2380, 51332, 51332, 295, 264, 7372, 2644, 764, 264, 2154, 1124, 295, 300, 2010, 13, 51520, 51520, 407, 456, 366, 257, 688, 295, 17401, 300, 764, 341, 6532, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.06961936017741328, "compression_ratio": 1.89, "no_caption_prob": 0.00011410821025492623}, {"id": 193, "seek": 69098, "start": 710.34, "end": 714.1, "text": " of the package cannot use the internals of that type.", "tokens": [50364, 400, 562, 286, 584, 7372, 42687, 2010, 11, 286, 478, 1417, 466, 1419, 364, 2699, 76, 7372, 300, 291, 434, 2390, 50706, 50706, 293, 300, 2699, 76, 7372, 393, 362, 257, 2010, 300, 311, 6920, 281, 264, 7372, 11, 3620, 1340, 11, 51028, 51028, 604, 3089, 1951, 300, 7372, 393, 764, 300, 2010, 293, 536, 264, 2010, 293, 1340, 2380, 51332, 51332, 295, 264, 7372, 2644, 764, 264, 2154, 1124, 295, 300, 2010, 13, 51520, 51520, 407, 456, 366, 257, 688, 295, 17401, 300, 764, 341, 6532, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.06961936017741328, "compression_ratio": 1.89, "no_caption_prob": 0.00011410821025492623}, {"id": 194, "seek": 69098, "start": 714.1, "end": 716.58, "text": " So there are a lot of packages that use this technique.", "tokens": [50364, 400, 562, 286, 584, 7372, 42687, 2010, 11, 286, 478, 1417, 466, 1419, 364, 2699, 76, 7372, 300, 291, 434, 2390, 50706, 50706, 293, 300, 2699, 76, 7372, 393, 362, 257, 2010, 300, 311, 6920, 281, 264, 7372, 11, 3620, 1340, 11, 51028, 51028, 604, 3089, 1951, 300, 7372, 393, 764, 300, 2010, 293, 536, 264, 2010, 293, 1340, 2380, 51332, 51332, 295, 264, 7372, 2644, 764, 264, 2154, 1124, 295, 300, 2010, 13, 51520, 51520, 407, 456, 366, 257, 688, 295, 17401, 300, 764, 341, 6532, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.06961936017741328, "compression_ratio": 1.89, "no_caption_prob": 0.00011410821025492623}, {"id": 195, "seek": 71658, "start": 716.58, "end": 721.74, "text": " For example, in Elm UI, the element type is internal.", "tokens": [50364, 1171, 1365, 11, 294, 2699, 76, 15682, 11, 264, 4478, 2010, 307, 6920, 13, 50622, 50622, 467, 311, 658, 512, 1412, 13, 50696, 50696, 467, 311, 406, 445, 257, 2136, 13, 50746, 50746, 759, 309, 390, 257, 2136, 11, 550, 291, 2759, 380, 312, 1075, 281, 6479, 264, 4365, 295, 300, 47479, 490, 51002, 51002, 264, 2380, 1002, 13, 51076, 51076, 583, 309, 311, 512, 6920, 2010, 300, 311, 658, 2035, 1412, 300, 2375, 2010, 575, 13, 51309, 51309, 2704, 309, 311, 658, 21669, 291, 500, 380, 1127, 420, 458, 382, 257, 9711, 295, 300, 2010, 295, 300, 7372, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.08222362628349891, "compression_ratio": 1.6651785714285714, "no_caption_prob": 1.0615862265694886e-05}, {"id": 196, "seek": 71658, "start": 721.74, "end": 723.22, "text": " It's got some data.", "tokens": [50364, 1171, 1365, 11, 294, 2699, 76, 15682, 11, 264, 4478, 2010, 307, 6920, 13, 50622, 50622, 467, 311, 658, 512, 1412, 13, 50696, 50696, 467, 311, 406, 445, 257, 2136, 13, 50746, 50746, 759, 309, 390, 257, 2136, 11, 550, 291, 2759, 380, 312, 1075, 281, 6479, 264, 4365, 295, 300, 47479, 490, 51002, 51002, 264, 2380, 1002, 13, 51076, 51076, 583, 309, 311, 512, 6920, 2010, 300, 311, 658, 2035, 1412, 300, 2375, 2010, 575, 13, 51309, 51309, 2704, 309, 311, 658, 21669, 291, 500, 380, 1127, 420, 458, 382, 257, 9711, 295, 300, 2010, 295, 300, 7372, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.08222362628349891, "compression_ratio": 1.6651785714285714, "no_caption_prob": 1.0615862265694886e-05}, {"id": 197, "seek": 71658, "start": 723.22, "end": 724.22, "text": " It's not just a record.", "tokens": [50364, 1171, 1365, 11, 294, 2699, 76, 15682, 11, 264, 4478, 2010, 307, 6920, 13, 50622, 50622, 467, 311, 658, 512, 1412, 13, 50696, 50696, 467, 311, 406, 445, 257, 2136, 13, 50746, 50746, 759, 309, 390, 257, 2136, 11, 550, 291, 2759, 380, 312, 1075, 281, 6479, 264, 4365, 295, 300, 47479, 490, 51002, 51002, 264, 2380, 1002, 13, 51076, 51076, 583, 309, 311, 512, 6920, 2010, 300, 311, 658, 2035, 1412, 300, 2375, 2010, 575, 13, 51309, 51309, 2704, 309, 311, 658, 21669, 291, 500, 380, 1127, 420, 458, 382, 257, 9711, 295, 300, 2010, 295, 300, 7372, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.08222362628349891, "compression_ratio": 1.6651785714285714, "no_caption_prob": 1.0615862265694886e-05}, {"id": 198, "seek": 71658, "start": 724.22, "end": 729.34, "text": " If it was a record, then you wouldn't be able to hide the details of that constructor from", "tokens": [50364, 1171, 1365, 11, 294, 2699, 76, 15682, 11, 264, 4478, 2010, 307, 6920, 13, 50622, 50622, 467, 311, 658, 512, 1412, 13, 50696, 50696, 467, 311, 406, 445, 257, 2136, 13, 50746, 50746, 759, 309, 390, 257, 2136, 11, 550, 291, 2759, 380, 312, 1075, 281, 6479, 264, 4365, 295, 300, 47479, 490, 51002, 51002, 264, 2380, 1002, 13, 51076, 51076, 583, 309, 311, 512, 6920, 2010, 300, 311, 658, 2035, 1412, 300, 2375, 2010, 575, 13, 51309, 51309, 2704, 309, 311, 658, 21669, 291, 500, 380, 1127, 420, 458, 382, 257, 9711, 295, 300, 2010, 295, 300, 7372, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.08222362628349891, "compression_ratio": 1.6651785714285714, "no_caption_prob": 1.0615862265694886e-05}, {"id": 199, "seek": 71658, "start": 729.34, "end": 730.82, "text": " the outside world.", "tokens": [50364, 1171, 1365, 11, 294, 2699, 76, 15682, 11, 264, 4478, 2010, 307, 6920, 13, 50622, 50622, 467, 311, 658, 512, 1412, 13, 50696, 50696, 467, 311, 406, 445, 257, 2136, 13, 50746, 50746, 759, 309, 390, 257, 2136, 11, 550, 291, 2759, 380, 312, 1075, 281, 6479, 264, 4365, 295, 300, 47479, 490, 51002, 51002, 264, 2380, 1002, 13, 51076, 51076, 583, 309, 311, 512, 6920, 2010, 300, 311, 658, 2035, 1412, 300, 2375, 2010, 575, 13, 51309, 51309, 2704, 309, 311, 658, 21669, 291, 500, 380, 1127, 420, 458, 382, 257, 9711, 295, 300, 2010, 295, 300, 7372, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.08222362628349891, "compression_ratio": 1.6651785714285714, "no_caption_prob": 1.0615862265694886e-05}, {"id": 200, "seek": 71658, "start": 730.82, "end": 735.48, "text": " But it's some internal type that's got whatever data that custom type has.", "tokens": [50364, 1171, 1365, 11, 294, 2699, 76, 15682, 11, 264, 4478, 2010, 307, 6920, 13, 50622, 50622, 467, 311, 658, 512, 1412, 13, 50696, 50696, 467, 311, 406, 445, 257, 2136, 13, 50746, 50746, 759, 309, 390, 257, 2136, 11, 550, 291, 2759, 380, 312, 1075, 281, 6479, 264, 4365, 295, 300, 47479, 490, 51002, 51002, 264, 2380, 1002, 13, 51076, 51076, 583, 309, 311, 512, 6920, 2010, 300, 311, 658, 2035, 1412, 300, 2375, 2010, 575, 13, 51309, 51309, 2704, 309, 311, 658, 21669, 291, 500, 380, 1127, 420, 458, 382, 257, 9711, 295, 300, 2010, 295, 300, 7372, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.08222362628349891, "compression_ratio": 1.6651785714285714, "no_caption_prob": 1.0615862265694886e-05}, {"id": 201, "seek": 71658, "start": 735.48, "end": 742.08, "text": " Maybe it's got variants you don't care or know as a consumer of that type of that package.", "tokens": [50364, 1171, 1365, 11, 294, 2699, 76, 15682, 11, 264, 4478, 2010, 307, 6920, 13, 50622, 50622, 467, 311, 658, 512, 1412, 13, 50696, 50696, 467, 311, 406, 445, 257, 2136, 13, 50746, 50746, 759, 309, 390, 257, 2136, 11, 550, 291, 2759, 380, 312, 1075, 281, 6479, 264, 4365, 295, 300, 47479, 490, 51002, 51002, 264, 2380, 1002, 13, 51076, 51076, 583, 309, 311, 512, 6920, 2010, 300, 311, 658, 2035, 1412, 300, 2375, 2010, 575, 13, 51309, 51309, 2704, 309, 311, 658, 21669, 291, 500, 380, 1127, 420, 458, 382, 257, 9711, 295, 300, 2010, 295, 300, 7372, 13, 51639, 51639], "temperature": 0.0, "avg_logprob": -0.08222362628349891, "compression_ratio": 1.6651785714285714, "no_caption_prob": 1.0615862265694886e-05}, {"id": 202, "seek": 74208, "start": 742.08, "end": 748.9000000000001, "text": " And all of the code in that package is able to use those internal details.", "tokens": [50364, 400, 439, 295, 264, 3089, 294, 300, 7372, 307, 1075, 281, 764, 729, 6920, 4365, 13, 50705, 50705, 400, 309, 311, 12316, 729, 18491, 293, 729, 7363, 763, 281, 4472, 567, 311, 1228, 264, 51027, 51027, 7372, 13, 51077, 51077, 583, 309, 393, 312, 1143, 4992, 13, 51136, 51136, 3950, 2154, 1124, 393, 312, 3838, 1143, 4992, 1951, 300, 7372, 13, 51325, 51325, 1079, 11, 570, 300, 7372, 920, 25495, 887, 439, 264, 18491, 322, 257, 7372, 1496, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.10890990567494588, "compression_ratio": 1.7614213197969544, "no_caption_prob": 5.33806769453804e-06}, {"id": 203, "seek": 74208, "start": 748.9000000000001, "end": 755.34, "text": " And it's protecting those constraints and those validations to anybody who's using the", "tokens": [50364, 400, 439, 295, 264, 3089, 294, 300, 7372, 307, 1075, 281, 764, 729, 6920, 4365, 13, 50705, 50705, 400, 309, 311, 12316, 729, 18491, 293, 729, 7363, 763, 281, 4472, 567, 311, 1228, 264, 51027, 51027, 7372, 13, 51077, 51077, 583, 309, 393, 312, 1143, 4992, 13, 51136, 51136, 3950, 2154, 1124, 393, 312, 3838, 1143, 4992, 1951, 300, 7372, 13, 51325, 51325, 1079, 11, 570, 300, 7372, 920, 25495, 887, 439, 264, 18491, 322, 257, 7372, 1496, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.10890990567494588, "compression_ratio": 1.7614213197969544, "no_caption_prob": 5.33806769453804e-06}, {"id": 204, "seek": 74208, "start": 755.34, "end": 756.34, "text": " package.", "tokens": [50364, 400, 439, 295, 264, 3089, 294, 300, 7372, 307, 1075, 281, 764, 729, 6920, 4365, 13, 50705, 50705, 400, 309, 311, 12316, 729, 18491, 293, 729, 7363, 763, 281, 4472, 567, 311, 1228, 264, 51027, 51027, 7372, 13, 51077, 51077, 583, 309, 393, 312, 1143, 4992, 13, 51136, 51136, 3950, 2154, 1124, 393, 312, 3838, 1143, 4992, 1951, 300, 7372, 13, 51325, 51325, 1079, 11, 570, 300, 7372, 920, 25495, 887, 439, 264, 18491, 322, 257, 7372, 1496, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.10890990567494588, "compression_ratio": 1.7614213197969544, "no_caption_prob": 5.33806769453804e-06}, {"id": 205, "seek": 74208, "start": 756.34, "end": 757.5200000000001, "text": " But it can be used anywhere.", "tokens": [50364, 400, 439, 295, 264, 3089, 294, 300, 7372, 307, 1075, 281, 764, 729, 6920, 4365, 13, 50705, 50705, 400, 309, 311, 12316, 729, 18491, 293, 729, 7363, 763, 281, 4472, 567, 311, 1228, 264, 51027, 51027, 7372, 13, 51077, 51077, 583, 309, 393, 312, 1143, 4992, 13, 51136, 51136, 3950, 2154, 1124, 393, 312, 3838, 1143, 4992, 1951, 300, 7372, 13, 51325, 51325, 1079, 11, 570, 300, 7372, 920, 25495, 887, 439, 264, 18491, 322, 257, 7372, 1496, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.10890990567494588, "compression_ratio": 1.7614213197969544, "no_caption_prob": 5.33806769453804e-06}, {"id": 206, "seek": 74208, "start": 757.5200000000001, "end": 761.3000000000001, "text": " Those internals can be directly used anywhere within that package.", "tokens": [50364, 400, 439, 295, 264, 3089, 294, 300, 7372, 307, 1075, 281, 764, 729, 6920, 4365, 13, 50705, 50705, 400, 309, 311, 12316, 729, 18491, 293, 729, 7363, 763, 281, 4472, 567, 311, 1228, 264, 51027, 51027, 7372, 13, 51077, 51077, 583, 309, 393, 312, 1143, 4992, 13, 51136, 51136, 3950, 2154, 1124, 393, 312, 3838, 1143, 4992, 1951, 300, 7372, 13, 51325, 51325, 1079, 11, 570, 300, 7372, 920, 25495, 887, 439, 264, 18491, 322, 257, 7372, 1496, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.10890990567494588, "compression_ratio": 1.7614213197969544, "no_caption_prob": 5.33806769453804e-06}, {"id": 207, "seek": 74208, "start": 761.3000000000001, "end": 768.1800000000001, "text": " Yes, because that package still enforces all the constraints on a package level.", "tokens": [50364, 400, 439, 295, 264, 3089, 294, 300, 7372, 307, 1075, 281, 764, 729, 6920, 4365, 13, 50705, 50705, 400, 309, 311, 12316, 729, 18491, 293, 729, 7363, 763, 281, 4472, 567, 311, 1228, 264, 51027, 51027, 7372, 13, 51077, 51077, 583, 309, 393, 312, 1143, 4992, 13, 51136, 51136, 3950, 2154, 1124, 393, 312, 3838, 1143, 4992, 1951, 300, 7372, 13, 51325, 51325, 1079, 11, 570, 300, 7372, 920, 25495, 887, 439, 264, 18491, 322, 257, 7372, 1496, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.10890990567494588, "compression_ratio": 1.7614213197969544, "no_caption_prob": 5.33806769453804e-06}, {"id": 208, "seek": 76818, "start": 768.18, "end": 774.8199999999999, "text": " Sometimes you use a pick types on the module level to ensure guarantees inside it.", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 209, "seek": 76818, "start": 774.8199999999999, "end": 781.0799999999999, "text": " But when you have a package and that is well built, you don't need to have them inside", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 210, "seek": 76818, "start": 781.0799999999999, "end": 782.0799999999999, "text": " the package.", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 211, "seek": 76818, "start": 782.0799999999999, "end": 785.9799999999999, "text": " You can just enforce them at the whole level, the package level.", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 212, "seek": 76818, "start": 785.9799999999999, "end": 786.9799999999999, "text": " Exactly.", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 213, "seek": 76818, "start": 786.9799999999999, "end": 787.9799999999999, "text": " Exactly.", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 214, "seek": 76818, "start": 787.9799999999999, "end": 791.2199999999999, "text": " So that could really be a whole topic for an episode.", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 215, "seek": 76818, "start": 791.2199999999999, "end": 796.42, "text": " But just to get people aware of that pattern, if you're browsing through the documentation", "tokens": [50364, 4803, 291, 764, 257, 1888, 3467, 322, 264, 10088, 1496, 281, 5586, 32567, 1854, 309, 13, 50696, 50696, 583, 562, 291, 362, 257, 7372, 293, 300, 307, 731, 3094, 11, 291, 500, 380, 643, 281, 362, 552, 1854, 51009, 51009, 264, 7372, 13, 51059, 51059, 509, 393, 445, 24825, 552, 412, 264, 1379, 1496, 11, 264, 7372, 1496, 13, 51254, 51254, 7587, 13, 51304, 51304, 7587, 13, 51354, 51354, 407, 300, 727, 534, 312, 257, 1379, 4829, 337, 364, 3500, 13, 51516, 51516, 583, 445, 281, 483, 561, 3650, 295, 300, 5102, 11, 498, 291, 434, 38602, 807, 264, 14333, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11912988699399508, "compression_ratio": 1.6734693877551021, "no_caption_prob": 1.2029317986161914e-05}, {"id": 216, "seek": 79642, "start": 796.42, "end": 803.78, "text": " in an Elm package, and you see type alias element equals element, you're like, what?", "tokens": [50364, 294, 364, 2699, 76, 7372, 11, 293, 291, 536, 2010, 419, 4609, 4478, 6915, 4478, 11, 291, 434, 411, 11, 437, 30, 50732, 50732, 708, 311, 300, 30, 50810, 50810, 467, 311, 512, 1650, 378, 1986, 5585, 300, 307, 1228, 341, 7372, 42687, 2010, 13, 51109, 51109, 407, 820, 321, 751, 257, 707, 857, 466, 577, 281, 13859, 3089, 294, 42687, 16679, 293, 437, 300, 51314, 51314, 1542, 411, 30, 51364, 51364, 1079, 11, 718, 311, 360, 300, 13, 51478, 51478, 1033, 11, 370, 341, 307, 341, 307, 257, 534, 1880, 4829, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14716048093186213, "compression_ratio": 1.5654205607476634, "no_caption_prob": 6.1440723584382795e-06}, {"id": 217, "seek": 79642, "start": 803.78, "end": 805.3399999999999, "text": " What's that?", "tokens": [50364, 294, 364, 2699, 76, 7372, 11, 293, 291, 536, 2010, 419, 4609, 4478, 6915, 4478, 11, 291, 434, 411, 11, 437, 30, 50732, 50732, 708, 311, 300, 30, 50810, 50810, 467, 311, 512, 1650, 378, 1986, 5585, 300, 307, 1228, 341, 7372, 42687, 2010, 13, 51109, 51109, 407, 820, 321, 751, 257, 707, 857, 466, 577, 281, 13859, 3089, 294, 42687, 16679, 293, 437, 300, 51314, 51314, 1542, 411, 30, 51364, 51364, 1079, 11, 718, 311, 360, 300, 13, 51478, 51478, 1033, 11, 370, 341, 307, 341, 307, 257, 534, 1880, 4829, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14716048093186213, "compression_ratio": 1.5654205607476634, "no_caption_prob": 6.1440723584382795e-06}, {"id": 218, "seek": 79642, "start": 805.3399999999999, "end": 811.3199999999999, "text": " It's some voodoo magic that is using this package opaque type.", "tokens": [50364, 294, 364, 2699, 76, 7372, 11, 293, 291, 536, 2010, 419, 4609, 4478, 6915, 4478, 11, 291, 434, 411, 11, 437, 30, 50732, 50732, 708, 311, 300, 30, 50810, 50810, 467, 311, 512, 1650, 378, 1986, 5585, 300, 307, 1228, 341, 7372, 42687, 2010, 13, 51109, 51109, 407, 820, 321, 751, 257, 707, 857, 466, 577, 281, 13859, 3089, 294, 42687, 16679, 293, 437, 300, 51314, 51314, 1542, 411, 30, 51364, 51364, 1079, 11, 718, 311, 360, 300, 13, 51478, 51478, 1033, 11, 370, 341, 307, 341, 307, 257, 534, 1880, 4829, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14716048093186213, "compression_ratio": 1.5654205607476634, "no_caption_prob": 6.1440723584382795e-06}, {"id": 219, "seek": 79642, "start": 811.3199999999999, "end": 815.42, "text": " So should we talk a little bit about how to organize code in opaque modules and what that", "tokens": [50364, 294, 364, 2699, 76, 7372, 11, 293, 291, 536, 2010, 419, 4609, 4478, 6915, 4478, 11, 291, 434, 411, 11, 437, 30, 50732, 50732, 708, 311, 300, 30, 50810, 50810, 467, 311, 512, 1650, 378, 1986, 5585, 300, 307, 1228, 341, 7372, 42687, 2010, 13, 51109, 51109, 407, 820, 321, 751, 257, 707, 857, 466, 577, 281, 13859, 3089, 294, 42687, 16679, 293, 437, 300, 51314, 51314, 1542, 411, 30, 51364, 51364, 1079, 11, 718, 311, 360, 300, 13, 51478, 51478, 1033, 11, 370, 341, 307, 341, 307, 257, 534, 1880, 4829, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14716048093186213, "compression_ratio": 1.5654205607476634, "no_caption_prob": 6.1440723584382795e-06}, {"id": 220, "seek": 79642, "start": 815.42, "end": 816.42, "text": " looks like?", "tokens": [50364, 294, 364, 2699, 76, 7372, 11, 293, 291, 536, 2010, 419, 4609, 4478, 6915, 4478, 11, 291, 434, 411, 11, 437, 30, 50732, 50732, 708, 311, 300, 30, 50810, 50810, 467, 311, 512, 1650, 378, 1986, 5585, 300, 307, 1228, 341, 7372, 42687, 2010, 13, 51109, 51109, 407, 820, 321, 751, 257, 707, 857, 466, 577, 281, 13859, 3089, 294, 42687, 16679, 293, 437, 300, 51314, 51314, 1542, 411, 30, 51364, 51364, 1079, 11, 718, 311, 360, 300, 13, 51478, 51478, 1033, 11, 370, 341, 307, 341, 307, 257, 534, 1880, 4829, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14716048093186213, "compression_ratio": 1.5654205607476634, "no_caption_prob": 6.1440723584382795e-06}, {"id": 221, "seek": 79642, "start": 816.42, "end": 818.6999999999999, "text": " Yes, let's do that.", "tokens": [50364, 294, 364, 2699, 76, 7372, 11, 293, 291, 536, 2010, 419, 4609, 4478, 6915, 4478, 11, 291, 434, 411, 11, 437, 30, 50732, 50732, 708, 311, 300, 30, 50810, 50810, 467, 311, 512, 1650, 378, 1986, 5585, 300, 307, 1228, 341, 7372, 42687, 2010, 13, 51109, 51109, 407, 820, 321, 751, 257, 707, 857, 466, 577, 281, 13859, 3089, 294, 42687, 16679, 293, 437, 300, 51314, 51314, 1542, 411, 30, 51364, 51364, 1079, 11, 718, 311, 360, 300, 13, 51478, 51478, 1033, 11, 370, 341, 307, 341, 307, 257, 534, 1880, 4829, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14716048093186213, "compression_ratio": 1.5654205607476634, "no_caption_prob": 6.1440723584382795e-06}, {"id": 222, "seek": 79642, "start": 818.6999999999999, "end": 822.5, "text": " Okay, so this is this is a really interesting topic.", "tokens": [50364, 294, 364, 2699, 76, 7372, 11, 293, 291, 536, 2010, 419, 4609, 4478, 6915, 4478, 11, 291, 434, 411, 11, 437, 30, 50732, 50732, 708, 311, 300, 30, 50810, 50810, 467, 311, 512, 1650, 378, 1986, 5585, 300, 307, 1228, 341, 7372, 42687, 2010, 13, 51109, 51109, 407, 820, 321, 751, 257, 707, 857, 466, 577, 281, 13859, 3089, 294, 42687, 16679, 293, 437, 300, 51314, 51314, 1542, 411, 30, 51364, 51364, 1079, 11, 718, 311, 360, 300, 13, 51478, 51478, 1033, 11, 370, 341, 307, 341, 307, 257, 534, 1880, 4829, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14716048093186213, "compression_ratio": 1.5654205607476634, "no_caption_prob": 6.1440723584382795e-06}, {"id": 223, "seek": 82250, "start": 822.5, "end": 829.74, "text": " Sometimes I see people organizing their code with update helpers, view helpers.", "tokens": [50364, 4803, 286, 536, 561, 17608, 641, 3089, 365, 5623, 854, 433, 11, 1910, 854, 433, 13, 50726, 50726, 814, 362, 411, 257, 10088, 300, 575, 641, 3467, 7642, 13, 51005, 51005, 400, 286, 519, 456, 366, 1413, 11, 456, 366, 7140, 295, 1413, 562, 1419, 257, 10088, 300, 445, 575, 51302, 51302, 512, 1910, 9952, 307, 257, 869, 1558, 13, 51466, 51466, 821, 311, 2171, 562, 291, 1062, 528, 281, 362, 512, 14877, 854, 433, 11, 1310, 512, 5623, 2445, 51666, 51666, 854, 433, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.07722566904646627, "compression_ratio": 1.7061611374407584, "no_caption_prob": 1.3006815606786404e-05}, {"id": 224, "seek": 82250, "start": 829.74, "end": 835.32, "text": " They have like a module that has their types defined.", "tokens": [50364, 4803, 286, 536, 561, 17608, 641, 3089, 365, 5623, 854, 433, 11, 1910, 854, 433, 13, 50726, 50726, 814, 362, 411, 257, 10088, 300, 575, 641, 3467, 7642, 13, 51005, 51005, 400, 286, 519, 456, 366, 1413, 11, 456, 366, 7140, 295, 1413, 562, 1419, 257, 10088, 300, 445, 575, 51302, 51302, 512, 1910, 9952, 307, 257, 869, 1558, 13, 51466, 51466, 821, 311, 2171, 562, 291, 1062, 528, 281, 362, 512, 14877, 854, 433, 11, 1310, 512, 5623, 2445, 51666, 51666, 854, 433, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.07722566904646627, "compression_ratio": 1.7061611374407584, "no_caption_prob": 1.3006815606786404e-05}, {"id": 225, "seek": 82250, "start": 835.32, "end": 841.26, "text": " And I think there are times, there are plenty of times when having a module that just has", "tokens": [50364, 4803, 286, 536, 561, 17608, 641, 3089, 365, 5623, 854, 433, 11, 1910, 854, 433, 13, 50726, 50726, 814, 362, 411, 257, 10088, 300, 575, 641, 3467, 7642, 13, 51005, 51005, 400, 286, 519, 456, 366, 1413, 11, 456, 366, 7140, 295, 1413, 562, 1419, 257, 10088, 300, 445, 575, 51302, 51302, 512, 1910, 9952, 307, 257, 869, 1558, 13, 51466, 51466, 821, 311, 2171, 562, 291, 1062, 528, 281, 362, 512, 14877, 854, 433, 11, 1310, 512, 5623, 2445, 51666, 51666, 854, 433, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.07722566904646627, "compression_ratio": 1.7061611374407584, "no_caption_prob": 1.3006815606786404e-05}, {"id": 226, "seek": 82250, "start": 841.26, "end": 844.54, "text": " some view logic is a great idea.", "tokens": [50364, 4803, 286, 536, 561, 17608, 641, 3089, 365, 5623, 854, 433, 11, 1910, 854, 433, 13, 50726, 50726, 814, 362, 411, 257, 10088, 300, 575, 641, 3467, 7642, 13, 51005, 51005, 400, 286, 519, 456, 366, 1413, 11, 456, 366, 7140, 295, 1413, 562, 1419, 257, 10088, 300, 445, 575, 51302, 51302, 512, 1910, 9952, 307, 257, 869, 1558, 13, 51466, 51466, 821, 311, 2171, 562, 291, 1062, 528, 281, 362, 512, 14877, 854, 433, 11, 1310, 512, 5623, 2445, 51666, 51666, 854, 433, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.07722566904646627, "compression_ratio": 1.7061611374407584, "no_caption_prob": 1.3006815606786404e-05}, {"id": 227, "seek": 82250, "start": 844.54, "end": 848.54, "text": " There's sometimes when you might want to have some utility helpers, maybe some update function", "tokens": [50364, 4803, 286, 536, 561, 17608, 641, 3089, 365, 5623, 854, 433, 11, 1910, 854, 433, 13, 50726, 50726, 814, 362, 411, 257, 10088, 300, 575, 641, 3467, 7642, 13, 51005, 51005, 400, 286, 519, 456, 366, 1413, 11, 456, 366, 7140, 295, 1413, 562, 1419, 257, 10088, 300, 445, 575, 51302, 51302, 512, 1910, 9952, 307, 257, 869, 1558, 13, 51466, 51466, 821, 311, 2171, 562, 291, 1062, 528, 281, 362, 512, 14877, 854, 433, 11, 1310, 512, 5623, 2445, 51666, 51666, 854, 433, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.07722566904646627, "compression_ratio": 1.7061611374407584, "no_caption_prob": 1.3006815606786404e-05}, {"id": 228, "seek": 82250, "start": 848.54, "end": 849.82, "text": " helpers.", "tokens": [50364, 4803, 286, 536, 561, 17608, 641, 3089, 365, 5623, 854, 433, 11, 1910, 854, 433, 13, 50726, 50726, 814, 362, 411, 257, 10088, 300, 575, 641, 3467, 7642, 13, 51005, 51005, 400, 286, 519, 456, 366, 1413, 11, 456, 366, 7140, 295, 1413, 562, 1419, 257, 10088, 300, 445, 575, 51302, 51302, 512, 1910, 9952, 307, 257, 869, 1558, 13, 51466, 51466, 821, 311, 2171, 562, 291, 1062, 528, 281, 362, 512, 14877, 854, 433, 11, 1310, 512, 5623, 2445, 51666, 51666, 854, 433, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.07722566904646627, "compression_ratio": 1.7061611374407584, "no_caption_prob": 1.3006815606786404e-05}, {"id": 229, "seek": 84982, "start": 849.82, "end": 858.38, "text": " But I think that just as a general rule, organizing your modules according to this is view related", "tokens": [50364, 583, 286, 519, 300, 445, 382, 257, 2674, 4978, 11, 17608, 428, 16679, 4650, 281, 341, 307, 1910, 4077, 50792, 50792, 1507, 11, 341, 307, 5623, 4077, 1507, 11, 291, 1713, 484, 322, 512, 295, 613, 4786, 295, 18491, 51086, 51086, 300, 291, 393, 764, 42687, 3467, 281, 854, 291, 24825, 13, 51276, 51276, 407, 337, 1365, 11, 718, 311, 584, 300, 321, 632, 257, 1460, 10088, 11, 293, 321, 6964, 264, 1460, 2010, 294, 472, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.11409069299697876, "compression_ratio": 1.5952380952380953, "no_caption_prob": 2.406080739092431e-06}, {"id": 230, "seek": 84982, "start": 858.38, "end": 864.2600000000001, "text": " stuff, this is update related stuff, you miss out on some of these opportunities of constraints", "tokens": [50364, 583, 286, 519, 300, 445, 382, 257, 2674, 4978, 11, 17608, 428, 16679, 4650, 281, 341, 307, 1910, 4077, 50792, 50792, 1507, 11, 341, 307, 5623, 4077, 1507, 11, 291, 1713, 484, 322, 512, 295, 613, 4786, 295, 18491, 51086, 51086, 300, 291, 393, 764, 42687, 3467, 281, 854, 291, 24825, 13, 51276, 51276, 407, 337, 1365, 11, 718, 311, 584, 300, 321, 632, 257, 1460, 10088, 11, 293, 321, 6964, 264, 1460, 2010, 294, 472, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.11409069299697876, "compression_ratio": 1.5952380952380953, "no_caption_prob": 2.406080739092431e-06}, {"id": 231, "seek": 84982, "start": 864.2600000000001, "end": 868.0600000000001, "text": " that you can use opaque types to help you enforce.", "tokens": [50364, 583, 286, 519, 300, 445, 382, 257, 2674, 4978, 11, 17608, 428, 16679, 4650, 281, 341, 307, 1910, 4077, 50792, 50792, 1507, 11, 341, 307, 5623, 4077, 1507, 11, 291, 1713, 484, 322, 512, 295, 613, 4786, 295, 18491, 51086, 51086, 300, 291, 393, 764, 42687, 3467, 281, 854, 291, 24825, 13, 51276, 51276, 407, 337, 1365, 11, 718, 311, 584, 300, 321, 632, 257, 1460, 10088, 11, 293, 321, 6964, 264, 1460, 2010, 294, 472, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.11409069299697876, "compression_ratio": 1.5952380952380953, "no_caption_prob": 2.406080739092431e-06}, {"id": 232, "seek": 84982, "start": 868.0600000000001, "end": 877.7800000000001, "text": " So for example, let's say that we had a money module, and we define the money type in one", "tokens": [50364, 583, 286, 519, 300, 445, 382, 257, 2674, 4978, 11, 17608, 428, 16679, 4650, 281, 341, 307, 1910, 4077, 50792, 50792, 1507, 11, 341, 307, 5623, 4077, 1507, 11, 291, 1713, 484, 322, 512, 295, 613, 4786, 295, 18491, 51086, 51086, 300, 291, 393, 764, 42687, 3467, 281, 854, 291, 24825, 13, 51276, 51276, 407, 337, 1365, 11, 718, 311, 584, 300, 321, 632, 257, 1460, 10088, 11, 293, 321, 6964, 264, 1460, 2010, 294, 472, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.11409069299697876, "compression_ratio": 1.5952380952380953, "no_caption_prob": 2.406080739092431e-06}, {"id": 233, "seek": 87778, "start": 877.78, "end": 883.9, "text": " module and we define something that shows you how to display money in another module.", "tokens": [50364, 10088, 293, 321, 6964, 746, 300, 3110, 291, 577, 281, 4674, 1460, 294, 1071, 10088, 13, 50670, 50670, 1042, 11, 1392, 11, 718, 311, 584, 321, 722, 766, 365, 257, 10290, 295, 1460, 307, 3808, 293, 14941, 13, 51098, 51098, 400, 321, 1286, 300, 670, 281, 13460, 1460, 382, 445, 14941, 11, 264, 12437, 1441, 46970, 13, 51384, 51384, 823, 1670, 1670, 321, 632, 257, 3467, 10088, 300, 632, 527, 1460, 2010, 11, 382, 731, 382, 2940, 661, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13219513544222203, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.2125164832687005e-05}, {"id": 234, "seek": 87778, "start": 883.9, "end": 892.4599999999999, "text": " Well, okay, let's say we start off with a representation of money is dollars and cents.", "tokens": [50364, 10088, 293, 321, 6964, 746, 300, 3110, 291, 577, 281, 4674, 1460, 294, 1071, 10088, 13, 50670, 50670, 1042, 11, 1392, 11, 718, 311, 584, 321, 722, 766, 365, 257, 10290, 295, 1460, 307, 3808, 293, 14941, 13, 51098, 51098, 400, 321, 1286, 300, 670, 281, 13460, 1460, 382, 445, 14941, 11, 264, 12437, 1441, 46970, 13, 51384, 51384, 823, 1670, 1670, 321, 632, 257, 3467, 10088, 300, 632, 527, 1460, 2010, 11, 382, 731, 382, 2940, 661, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13219513544222203, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.2125164832687005e-05}, {"id": 235, "seek": 87778, "start": 892.4599999999999, "end": 898.18, "text": " And we move that over to representing money as just cents, the lowest denomination.", "tokens": [50364, 10088, 293, 321, 6964, 746, 300, 3110, 291, 577, 281, 4674, 1460, 294, 1071, 10088, 13, 50670, 50670, 1042, 11, 1392, 11, 718, 311, 584, 321, 722, 766, 365, 257, 10290, 295, 1460, 307, 3808, 293, 14941, 13, 51098, 51098, 400, 321, 1286, 300, 670, 281, 13460, 1460, 382, 445, 14941, 11, 264, 12437, 1441, 46970, 13, 51384, 51384, 823, 1670, 1670, 321, 632, 257, 3467, 10088, 300, 632, 527, 1460, 2010, 11, 382, 731, 382, 2940, 661, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13219513544222203, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.2125164832687005e-05}, {"id": 236, "seek": 87778, "start": 898.18, "end": 904.22, "text": " Now since since we had a types module that had our money type, as well as several other", "tokens": [50364, 10088, 293, 321, 6964, 746, 300, 3110, 291, 577, 281, 4674, 1460, 294, 1071, 10088, 13, 50670, 50670, 1042, 11, 1392, 11, 718, 311, 584, 321, 722, 766, 365, 257, 10290, 295, 1460, 307, 3808, 293, 14941, 13, 51098, 51098, 400, 321, 1286, 300, 670, 281, 13460, 1460, 382, 445, 14941, 11, 264, 12437, 1441, 46970, 13, 51384, 51384, 823, 1670, 1670, 321, 632, 257, 3467, 10088, 300, 632, 527, 1460, 2010, 11, 382, 731, 382, 2940, 661, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13219513544222203, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.2125164832687005e-05}, {"id": 237, "seek": 90422, "start": 904.22, "end": 910.38, "text": " types for our application, that module can't be opaque because the way to present money,", "tokens": [50364, 3467, 337, 527, 3861, 11, 300, 10088, 393, 380, 312, 42687, 570, 264, 636, 281, 1974, 1460, 11, 50672, 50672, 264, 2445, 300, 2709, 291, 257, 6798, 1254, 295, 264, 1460, 11, 264, 2445, 300, 2709, 291, 50918, 50918, 364, 17995, 1254, 295, 264, 1460, 11, 264, 2445, 300, 4045, 291, 281, 909, 1214, 281, 1460, 4190, 11, 51283, 51283, 729, 721, 439, 1621, 294, 4994, 16679, 13, 51376, 51376, 400, 570, 436, 1621, 294, 4994, 16679, 11, 291, 393, 380, 652, 309, 42687, 11, 570, 264, 787, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.08203414212102475, "compression_ratio": 2.0, "no_caption_prob": 2.046249392151367e-05}, {"id": 238, "seek": 90422, "start": 910.38, "end": 915.3000000000001, "text": " the function that gives you a string form of the money, the function that gives you", "tokens": [50364, 3467, 337, 527, 3861, 11, 300, 10088, 393, 380, 312, 42687, 570, 264, 636, 281, 1974, 1460, 11, 50672, 50672, 264, 2445, 300, 2709, 291, 257, 6798, 1254, 295, 264, 1460, 11, 264, 2445, 300, 2709, 291, 50918, 50918, 364, 17995, 1254, 295, 264, 1460, 11, 264, 2445, 300, 4045, 291, 281, 909, 1214, 281, 1460, 4190, 11, 51283, 51283, 729, 721, 439, 1621, 294, 4994, 16679, 13, 51376, 51376, 400, 570, 436, 1621, 294, 4994, 16679, 11, 291, 393, 380, 652, 309, 42687, 11, 570, 264, 787, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.08203414212102475, "compression_ratio": 2.0, "no_caption_prob": 2.046249392151367e-05}, {"id": 239, "seek": 90422, "start": 915.3000000000001, "end": 922.6, "text": " an HTML form of the money, the function that allows you to add together to money values,", "tokens": [50364, 3467, 337, 527, 3861, 11, 300, 10088, 393, 380, 312, 42687, 570, 264, 636, 281, 1974, 1460, 11, 50672, 50672, 264, 2445, 300, 2709, 291, 257, 6798, 1254, 295, 264, 1460, 11, 264, 2445, 300, 2709, 291, 50918, 50918, 364, 17995, 1254, 295, 264, 1460, 11, 264, 2445, 300, 4045, 291, 281, 909, 1214, 281, 1460, 4190, 11, 51283, 51283, 729, 721, 439, 1621, 294, 4994, 16679, 13, 51376, 51376, 400, 570, 436, 1621, 294, 4994, 16679, 11, 291, 393, 380, 652, 309, 42687, 11, 570, 264, 787, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.08203414212102475, "compression_ratio": 2.0, "no_caption_prob": 2.046249392151367e-05}, {"id": 240, "seek": 90422, "start": 922.6, "end": 924.46, "text": " those things all live in separate modules.", "tokens": [50364, 3467, 337, 527, 3861, 11, 300, 10088, 393, 380, 312, 42687, 570, 264, 636, 281, 1974, 1460, 11, 50672, 50672, 264, 2445, 300, 2709, 291, 257, 6798, 1254, 295, 264, 1460, 11, 264, 2445, 300, 2709, 291, 50918, 50918, 364, 17995, 1254, 295, 264, 1460, 11, 264, 2445, 300, 4045, 291, 281, 909, 1214, 281, 1460, 4190, 11, 51283, 51283, 729, 721, 439, 1621, 294, 4994, 16679, 13, 51376, 51376, 400, 570, 436, 1621, 294, 4994, 16679, 11, 291, 393, 380, 652, 309, 42687, 11, 570, 264, 787, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.08203414212102475, "compression_ratio": 2.0, "no_caption_prob": 2.046249392151367e-05}, {"id": 241, "seek": 90422, "start": 924.46, "end": 928.5, "text": " And because they live in separate modules, you can't make it opaque, because the only", "tokens": [50364, 3467, 337, 527, 3861, 11, 300, 10088, 393, 380, 312, 42687, 570, 264, 636, 281, 1974, 1460, 11, 50672, 50672, 264, 2445, 300, 2709, 291, 257, 6798, 1254, 295, 264, 1460, 11, 264, 2445, 300, 2709, 291, 50918, 50918, 364, 17995, 1254, 295, 264, 1460, 11, 264, 2445, 300, 4045, 291, 281, 909, 1214, 281, 1460, 4190, 11, 51283, 51283, 729, 721, 439, 1621, 294, 4994, 16679, 13, 51376, 51376, 400, 570, 436, 1621, 294, 4994, 16679, 11, 291, 393, 380, 652, 309, 42687, 11, 570, 264, 787, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.08203414212102475, "compression_ratio": 2.0, "no_caption_prob": 2.046249392151367e-05}, {"id": 242, "seek": 92850, "start": 928.5, "end": 935.06, "text": " way to do an opaque type is if the type lives with the functions that deal with that type.", "tokens": [50364, 636, 281, 360, 364, 42687, 2010, 307, 498, 264, 2010, 2909, 365, 264, 6828, 300, 2028, 365, 300, 2010, 13, 50692, 50692, 400, 370, 300, 311, 257, 2674, 5102, 300, 456, 311, 257, 2010, 412, 264, 3056, 295, 364, 42687, 10088, 420, 50992, 50992, 445, 257, 10088, 294, 2674, 13, 51124, 51124, 823, 300, 1177, 380, 914, 300, 456, 393, 380, 312, 16679, 300, 445, 362, 854, 433, 300, 366, 510, 51340, 51340, 366, 512, 1910, 854, 433, 13, 51434, 51434, 663, 311, 300, 311, 10585, 11, 457, 445, 312, 3650, 295, 11, 295, 300, 13, 51716, 51716, 23923, 766, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1250679197765532, "compression_ratio": 1.832535885167464, "no_caption_prob": 9.460665023652837e-05}, {"id": 243, "seek": 92850, "start": 935.06, "end": 941.06, "text": " And so that's a general pattern that there's a type at the center of an opaque module or", "tokens": [50364, 636, 281, 360, 364, 42687, 2010, 307, 498, 264, 2010, 2909, 365, 264, 6828, 300, 2028, 365, 300, 2010, 13, 50692, 50692, 400, 370, 300, 311, 257, 2674, 5102, 300, 456, 311, 257, 2010, 412, 264, 3056, 295, 364, 42687, 10088, 420, 50992, 50992, 445, 257, 10088, 294, 2674, 13, 51124, 51124, 823, 300, 1177, 380, 914, 300, 456, 393, 380, 312, 16679, 300, 445, 362, 854, 433, 300, 366, 510, 51340, 51340, 366, 512, 1910, 854, 433, 13, 51434, 51434, 663, 311, 300, 311, 10585, 11, 457, 445, 312, 3650, 295, 11, 295, 300, 13, 51716, 51716, 23923, 766, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1250679197765532, "compression_ratio": 1.832535885167464, "no_caption_prob": 9.460665023652837e-05}, {"id": 244, "seek": 92850, "start": 941.06, "end": 943.7, "text": " just a module in general.", "tokens": [50364, 636, 281, 360, 364, 42687, 2010, 307, 498, 264, 2010, 2909, 365, 264, 6828, 300, 2028, 365, 300, 2010, 13, 50692, 50692, 400, 370, 300, 311, 257, 2674, 5102, 300, 456, 311, 257, 2010, 412, 264, 3056, 295, 364, 42687, 10088, 420, 50992, 50992, 445, 257, 10088, 294, 2674, 13, 51124, 51124, 823, 300, 1177, 380, 914, 300, 456, 393, 380, 312, 16679, 300, 445, 362, 854, 433, 300, 366, 510, 51340, 51340, 366, 512, 1910, 854, 433, 13, 51434, 51434, 663, 311, 300, 311, 10585, 11, 457, 445, 312, 3650, 295, 11, 295, 300, 13, 51716, 51716, 23923, 766, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1250679197765532, "compression_ratio": 1.832535885167464, "no_caption_prob": 9.460665023652837e-05}, {"id": 245, "seek": 92850, "start": 943.7, "end": 948.02, "text": " Now that doesn't mean that there can't be modules that just have helpers that are here", "tokens": [50364, 636, 281, 360, 364, 42687, 2010, 307, 498, 264, 2010, 2909, 365, 264, 6828, 300, 2028, 365, 300, 2010, 13, 50692, 50692, 400, 370, 300, 311, 257, 2674, 5102, 300, 456, 311, 257, 2010, 412, 264, 3056, 295, 364, 42687, 10088, 420, 50992, 50992, 445, 257, 10088, 294, 2674, 13, 51124, 51124, 823, 300, 1177, 380, 914, 300, 456, 393, 380, 312, 16679, 300, 445, 362, 854, 433, 300, 366, 510, 51340, 51340, 366, 512, 1910, 854, 433, 13, 51434, 51434, 663, 311, 300, 311, 10585, 11, 457, 445, 312, 3650, 295, 11, 295, 300, 13, 51716, 51716, 23923, 766, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1250679197765532, "compression_ratio": 1.832535885167464, "no_caption_prob": 9.460665023652837e-05}, {"id": 246, "seek": 92850, "start": 948.02, "end": 949.9, "text": " are some view helpers.", "tokens": [50364, 636, 281, 360, 364, 42687, 2010, 307, 498, 264, 2010, 2909, 365, 264, 6828, 300, 2028, 365, 300, 2010, 13, 50692, 50692, 400, 370, 300, 311, 257, 2674, 5102, 300, 456, 311, 257, 2010, 412, 264, 3056, 295, 364, 42687, 10088, 420, 50992, 50992, 445, 257, 10088, 294, 2674, 13, 51124, 51124, 823, 300, 1177, 380, 914, 300, 456, 393, 380, 312, 16679, 300, 445, 362, 854, 433, 300, 366, 510, 51340, 51340, 366, 512, 1910, 854, 433, 13, 51434, 51434, 663, 311, 300, 311, 10585, 11, 457, 445, 312, 3650, 295, 11, 295, 300, 13, 51716, 51716, 23923, 766, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1250679197765532, "compression_ratio": 1.832535885167464, "no_caption_prob": 9.460665023652837e-05}, {"id": 247, "seek": 92850, "start": 949.9, "end": 955.54, "text": " That's that's reasonable, but just be aware of, of that.", "tokens": [50364, 636, 281, 360, 364, 42687, 2010, 307, 498, 264, 2010, 2909, 365, 264, 6828, 300, 2028, 365, 300, 2010, 13, 50692, 50692, 400, 370, 300, 311, 257, 2674, 5102, 300, 456, 311, 257, 2010, 412, 264, 3056, 295, 364, 42687, 10088, 420, 50992, 50992, 445, 257, 10088, 294, 2674, 13, 51124, 51124, 823, 300, 1177, 380, 914, 300, 456, 393, 380, 312, 16679, 300, 445, 362, 854, 433, 300, 366, 510, 51340, 51340, 366, 512, 1910, 854, 433, 13, 51434, 51434, 663, 311, 300, 311, 10585, 11, 457, 445, 312, 3650, 295, 11, 295, 300, 13, 51716, 51716, 23923, 766, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1250679197765532, "compression_ratio": 1.832535885167464, "no_caption_prob": 9.460665023652837e-05}, {"id": 248, "seek": 92850, "start": 955.54, "end": 956.54, "text": " Trade off.", "tokens": [50364, 636, 281, 360, 364, 42687, 2010, 307, 498, 264, 2010, 2909, 365, 264, 6828, 300, 2028, 365, 300, 2010, 13, 50692, 50692, 400, 370, 300, 311, 257, 2674, 5102, 300, 456, 311, 257, 2010, 412, 264, 3056, 295, 364, 42687, 10088, 420, 50992, 50992, 445, 257, 10088, 294, 2674, 13, 51124, 51124, 823, 300, 1177, 380, 914, 300, 456, 393, 380, 312, 16679, 300, 445, 362, 854, 433, 300, 366, 510, 51340, 51340, 366, 512, 1910, 854, 433, 13, 51434, 51434, 663, 311, 300, 311, 10585, 11, 457, 445, 312, 3650, 295, 11, 295, 300, 13, 51716, 51716, 23923, 766, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1250679197765532, "compression_ratio": 1.832535885167464, "no_caption_prob": 9.460665023652837e-05}, {"id": 249, "seek": 95654, "start": 956.54, "end": 962.2199999999999, "text": " Yeah, beyond the lookout for when am I spreading the type and the things that deal with this", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 250, "seek": 95654, "start": 962.2199999999999, "end": 965.4599999999999, "text": " type in different places, I'd say that that is a code smell.", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 251, "seek": 95654, "start": 965.4599999999999, "end": 968.74, "text": " Yeah, potentially you lose some guarantees.", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 252, "seek": 95654, "start": 968.74, "end": 969.74, "text": " Yes.", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 253, "seek": 95654, "start": 969.74, "end": 975.24, "text": " Because if you do that, potentially you lose some guarantees because you can use the money", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 254, "seek": 95654, "start": 975.24, "end": 980.18, "text": " type in other modules, you can use, you can look at and use the internals.", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 255, "seek": 95654, "start": 980.18, "end": 982.4599999999999, "text": " And that's not what you want to have.", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 256, "seek": 95654, "start": 982.4599999999999, "end": 983.4599999999999, "text": " Exactly.", "tokens": [50364, 865, 11, 4399, 264, 41025, 337, 562, 669, 286, 15232, 264, 2010, 293, 264, 721, 300, 2028, 365, 341, 50648, 50648, 2010, 294, 819, 3190, 11, 286, 1116, 584, 300, 300, 307, 257, 3089, 4316, 13, 50810, 50810, 865, 11, 7263, 291, 3624, 512, 32567, 13, 50974, 50974, 1079, 13, 51024, 51024, 1436, 498, 291, 360, 300, 11, 7263, 291, 3624, 512, 32567, 570, 291, 393, 764, 264, 1460, 51299, 51299, 2010, 294, 661, 16679, 11, 291, 393, 764, 11, 291, 393, 574, 412, 293, 764, 264, 2154, 1124, 13, 51546, 51546, 400, 300, 311, 406, 437, 291, 528, 281, 362, 13, 51660, 51660, 7587, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.18073368072509766, "compression_ratio": 1.7965367965367964, "no_caption_prob": 3.426757757551968e-05}, {"id": 257, "seek": 98346, "start": 983.46, "end": 989.86, "text": " So you've now started depending on the internals of that implementation throughout your entire", "tokens": [50364, 407, 291, 600, 586, 1409, 5413, 322, 264, 2154, 1124, 295, 300, 11420, 3710, 428, 2302, 50684, 50684, 3089, 3096, 13, 50734, 50734, 400, 370, 586, 498, 300, 2962, 11, 291, 362, 281, 519, 466, 11, 1392, 11, 390, 4472, 5413, 322, 613, 50994, 50994, 2154, 1124, 294, 257, 636, 300, 286, 478, 516, 281, 1821, 498, 286, 1319, 552, 30, 51156, 51156, 13813, 498, 291, 11468, 11468, 11, 11468, 572, 472, 11, 498, 286, 17143, 4365, 11, 572, 472, 486, 764, 552, 13, 51520, 51520, 7587, 13, 51570, 51570, 7587, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.18929572900136313, "compression_ratio": 1.6744186046511629, "no_caption_prob": 1.669955781835597e-05}, {"id": 258, "seek": 98346, "start": 989.86, "end": 990.86, "text": " code base.", "tokens": [50364, 407, 291, 600, 586, 1409, 5413, 322, 264, 2154, 1124, 295, 300, 11420, 3710, 428, 2302, 50684, 50684, 3089, 3096, 13, 50734, 50734, 400, 370, 586, 498, 300, 2962, 11, 291, 362, 281, 519, 466, 11, 1392, 11, 390, 4472, 5413, 322, 613, 50994, 50994, 2154, 1124, 294, 257, 636, 300, 286, 478, 516, 281, 1821, 498, 286, 1319, 552, 30, 51156, 51156, 13813, 498, 291, 11468, 11468, 11, 11468, 572, 472, 11, 498, 286, 17143, 4365, 11, 572, 472, 486, 764, 552, 13, 51520, 51520, 7587, 13, 51570, 51570, 7587, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.18929572900136313, "compression_ratio": 1.6744186046511629, "no_caption_prob": 1.669955781835597e-05}, {"id": 259, "seek": 98346, "start": 990.86, "end": 996.0600000000001, "text": " And so now if that changes, you have to think about, okay, was anybody depending on these", "tokens": [50364, 407, 291, 600, 586, 1409, 5413, 322, 264, 2154, 1124, 295, 300, 11420, 3710, 428, 2302, 50684, 50684, 3089, 3096, 13, 50734, 50734, 400, 370, 586, 498, 300, 2962, 11, 291, 362, 281, 519, 466, 11, 1392, 11, 390, 4472, 5413, 322, 613, 50994, 50994, 2154, 1124, 294, 257, 636, 300, 286, 478, 516, 281, 1821, 498, 286, 1319, 552, 30, 51156, 51156, 13813, 498, 291, 11468, 11468, 11, 11468, 572, 472, 11, 498, 286, 17143, 4365, 11, 572, 472, 486, 764, 552, 13, 51520, 51520, 7587, 13, 51570, 51570, 7587, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.18929572900136313, "compression_ratio": 1.6744186046511629, "no_caption_prob": 1.669955781835597e-05}, {"id": 260, "seek": 98346, "start": 996.0600000000001, "end": 999.3000000000001, "text": " internals in a way that I'm going to break if I change them?", "tokens": [50364, 407, 291, 600, 586, 1409, 5413, 322, 264, 2154, 1124, 295, 300, 11420, 3710, 428, 2302, 50684, 50684, 3089, 3096, 13, 50734, 50734, 400, 370, 586, 498, 300, 2962, 11, 291, 362, 281, 519, 466, 11, 1392, 11, 390, 4472, 5413, 322, 613, 50994, 50994, 2154, 1124, 294, 257, 636, 300, 286, 478, 516, 281, 1821, 498, 286, 1319, 552, 30, 51156, 51156, 13813, 498, 291, 11468, 11468, 11, 11468, 572, 472, 11, 498, 286, 17143, 4365, 11, 572, 472, 486, 764, 552, 13, 51520, 51520, 7587, 13, 51570, 51570, 7587, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.18929572900136313, "compression_ratio": 1.6744186046511629, "no_caption_prob": 1.669955781835597e-05}, {"id": 261, "seek": 98346, "start": 999.3000000000001, "end": 1006.58, "text": " Whereas if you surely surely, surely no one, if I leak details, no one will use them.", "tokens": [50364, 407, 291, 600, 586, 1409, 5413, 322, 264, 2154, 1124, 295, 300, 11420, 3710, 428, 2302, 50684, 50684, 3089, 3096, 13, 50734, 50734, 400, 370, 586, 498, 300, 2962, 11, 291, 362, 281, 519, 466, 11, 1392, 11, 390, 4472, 5413, 322, 613, 50994, 50994, 2154, 1124, 294, 257, 636, 300, 286, 478, 516, 281, 1821, 498, 286, 1319, 552, 30, 51156, 51156, 13813, 498, 291, 11468, 11468, 11, 11468, 572, 472, 11, 498, 286, 17143, 4365, 11, 572, 472, 486, 764, 552, 13, 51520, 51520, 7587, 13, 51570, 51570, 7587, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.18929572900136313, "compression_ratio": 1.6744186046511629, "no_caption_prob": 1.669955781835597e-05}, {"id": 262, "seek": 98346, "start": 1006.58, "end": 1007.58, "text": " Exactly.", "tokens": [50364, 407, 291, 600, 586, 1409, 5413, 322, 264, 2154, 1124, 295, 300, 11420, 3710, 428, 2302, 50684, 50684, 3089, 3096, 13, 50734, 50734, 400, 370, 586, 498, 300, 2962, 11, 291, 362, 281, 519, 466, 11, 1392, 11, 390, 4472, 5413, 322, 613, 50994, 50994, 2154, 1124, 294, 257, 636, 300, 286, 478, 516, 281, 1821, 498, 286, 1319, 552, 30, 51156, 51156, 13813, 498, 291, 11468, 11468, 11, 11468, 572, 472, 11, 498, 286, 17143, 4365, 11, 572, 472, 486, 764, 552, 13, 51520, 51520, 7587, 13, 51570, 51570, 7587, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.18929572900136313, "compression_ratio": 1.6744186046511629, "no_caption_prob": 1.669955781835597e-05}, {"id": 263, "seek": 98346, "start": 1007.58, "end": 1008.58, "text": " Exactly.", "tokens": [50364, 407, 291, 600, 586, 1409, 5413, 322, 264, 2154, 1124, 295, 300, 11420, 3710, 428, 2302, 50684, 50684, 3089, 3096, 13, 50734, 50734, 400, 370, 586, 498, 300, 2962, 11, 291, 362, 281, 519, 466, 11, 1392, 11, 390, 4472, 5413, 322, 613, 50994, 50994, 2154, 1124, 294, 257, 636, 300, 286, 478, 516, 281, 1821, 498, 286, 1319, 552, 30, 51156, 51156, 13813, 498, 291, 11468, 11468, 11, 11468, 572, 472, 11, 498, 286, 17143, 4365, 11, 572, 472, 486, 764, 552, 13, 51520, 51520, 7587, 13, 51570, 51570, 7587, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.18929572900136313, "compression_ratio": 1.6744186046511629, "no_caption_prob": 1.669955781835597e-05}, {"id": 264, "seek": 100858, "start": 1008.58, "end": 1014.26, "text": " I mean, you're going to get money showing up where, you know, the you're showing a hundred", "tokens": [50364, 286, 914, 11, 291, 434, 516, 281, 483, 1460, 4099, 493, 689, 11, 291, 458, 11, 264, 291, 434, 4099, 257, 3262, 50648, 50648, 1413, 544, 1460, 813, 291, 632, 570, 2618, 390, 15578, 309, 294, 512, 636, 420, 7750, 309, 50840, 50840, 766, 281, 512, 9362, 5413, 322, 428, 2154, 1124, 13, 50978, 50978, 400, 291, 500, 380, 528, 281, 3292, 466, 300, 13, 51076, 51076, 407, 337, 4924, 3166, 295, 428, 9274, 11, 309, 311, 11, 309, 311, 754, 544, 1021, 281, 764, 613, 42687, 51362, 51362, 3467, 570, 291, 528, 281, 312, 5026, 466, 264, 2154, 1124, 293, 291, 500, 380, 528, 456, 281, 51612, 51612, 312, 15120, 11, 558, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08963046639652575, "compression_ratio": 1.7674418604651163, "no_caption_prob": 2.247301017632708e-05}, {"id": 265, "seek": 100858, "start": 1014.26, "end": 1018.1, "text": " times more money than you had because somebody was presenting it in some way or sending it", "tokens": [50364, 286, 914, 11, 291, 434, 516, 281, 483, 1460, 4099, 493, 689, 11, 291, 458, 11, 264, 291, 434, 4099, 257, 3262, 50648, 50648, 1413, 544, 1460, 813, 291, 632, 570, 2618, 390, 15578, 309, 294, 512, 636, 420, 7750, 309, 50840, 50840, 766, 281, 512, 9362, 5413, 322, 428, 2154, 1124, 13, 50978, 50978, 400, 291, 500, 380, 528, 281, 3292, 466, 300, 13, 51076, 51076, 407, 337, 4924, 3166, 295, 428, 9274, 11, 309, 311, 11, 309, 311, 754, 544, 1021, 281, 764, 613, 42687, 51362, 51362, 3467, 570, 291, 528, 281, 312, 5026, 466, 264, 2154, 1124, 293, 291, 500, 380, 528, 456, 281, 51612, 51612, 312, 15120, 11, 558, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08963046639652575, "compression_ratio": 1.7674418604651163, "no_caption_prob": 2.247301017632708e-05}, {"id": 266, "seek": 100858, "start": 1018.1, "end": 1020.86, "text": " off to some API depending on your internals.", "tokens": [50364, 286, 914, 11, 291, 434, 516, 281, 483, 1460, 4099, 493, 689, 11, 291, 458, 11, 264, 291, 434, 4099, 257, 3262, 50648, 50648, 1413, 544, 1460, 813, 291, 632, 570, 2618, 390, 15578, 309, 294, 512, 636, 420, 7750, 309, 50840, 50840, 766, 281, 512, 9362, 5413, 322, 428, 2154, 1124, 13, 50978, 50978, 400, 291, 500, 380, 528, 281, 3292, 466, 300, 13, 51076, 51076, 407, 337, 4924, 3166, 295, 428, 9274, 11, 309, 311, 11, 309, 311, 754, 544, 1021, 281, 764, 613, 42687, 51362, 51362, 3467, 570, 291, 528, 281, 312, 5026, 466, 264, 2154, 1124, 293, 291, 500, 380, 528, 456, 281, 51612, 51612, 312, 15120, 11, 558, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08963046639652575, "compression_ratio": 1.7674418604651163, "no_caption_prob": 2.247301017632708e-05}, {"id": 267, "seek": 100858, "start": 1020.86, "end": 1022.82, "text": " And you don't want to worry about that.", "tokens": [50364, 286, 914, 11, 291, 434, 516, 281, 483, 1460, 4099, 493, 689, 11, 291, 458, 11, 264, 291, 434, 4099, 257, 3262, 50648, 50648, 1413, 544, 1460, 813, 291, 632, 570, 2618, 390, 15578, 309, 294, 512, 636, 420, 7750, 309, 50840, 50840, 766, 281, 512, 9362, 5413, 322, 428, 2154, 1124, 13, 50978, 50978, 400, 291, 500, 380, 528, 281, 3292, 466, 300, 13, 51076, 51076, 407, 337, 4924, 3166, 295, 428, 9274, 11, 309, 311, 11, 309, 311, 754, 544, 1021, 281, 764, 613, 42687, 51362, 51362, 3467, 570, 291, 528, 281, 312, 5026, 466, 264, 2154, 1124, 293, 291, 500, 380, 528, 456, 281, 51612, 51612, 312, 15120, 11, 558, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08963046639652575, "compression_ratio": 1.7674418604651163, "no_caption_prob": 2.247301017632708e-05}, {"id": 268, "seek": 100858, "start": 1022.82, "end": 1028.54, "text": " So for critical parts of your domain, it's, it's even more important to use these opaque", "tokens": [50364, 286, 914, 11, 291, 434, 516, 281, 483, 1460, 4099, 493, 689, 11, 291, 458, 11, 264, 291, 434, 4099, 257, 3262, 50648, 50648, 1413, 544, 1460, 813, 291, 632, 570, 2618, 390, 15578, 309, 294, 512, 636, 420, 7750, 309, 50840, 50840, 766, 281, 512, 9362, 5413, 322, 428, 2154, 1124, 13, 50978, 50978, 400, 291, 500, 380, 528, 281, 3292, 466, 300, 13, 51076, 51076, 407, 337, 4924, 3166, 295, 428, 9274, 11, 309, 311, 11, 309, 311, 754, 544, 1021, 281, 764, 613, 42687, 51362, 51362, 3467, 570, 291, 528, 281, 312, 5026, 466, 264, 2154, 1124, 293, 291, 500, 380, 528, 456, 281, 51612, 51612, 312, 15120, 11, 558, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08963046639652575, "compression_ratio": 1.7674418604651163, "no_caption_prob": 2.247301017632708e-05}, {"id": 269, "seek": 100858, "start": 1028.54, "end": 1033.54, "text": " types because you want to be careful about the internals and you don't want there to", "tokens": [50364, 286, 914, 11, 291, 434, 516, 281, 483, 1460, 4099, 493, 689, 11, 291, 458, 11, 264, 291, 434, 4099, 257, 3262, 50648, 50648, 1413, 544, 1460, 813, 291, 632, 570, 2618, 390, 15578, 309, 294, 512, 636, 420, 7750, 309, 50840, 50840, 766, 281, 512, 9362, 5413, 322, 428, 2154, 1124, 13, 50978, 50978, 400, 291, 500, 380, 528, 281, 3292, 466, 300, 13, 51076, 51076, 407, 337, 4924, 3166, 295, 428, 9274, 11, 309, 311, 11, 309, 311, 754, 544, 1021, 281, 764, 613, 42687, 51362, 51362, 3467, 570, 291, 528, 281, 312, 5026, 466, 264, 2154, 1124, 293, 291, 500, 380, 528, 456, 281, 51612, 51612, 312, 15120, 11, 558, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08963046639652575, "compression_ratio": 1.7674418604651163, "no_caption_prob": 2.247301017632708e-05}, {"id": 270, "seek": 100858, "start": 1033.54, "end": 1034.58, "text": " be bugs, right?", "tokens": [50364, 286, 914, 11, 291, 434, 516, 281, 483, 1460, 4099, 493, 689, 11, 291, 458, 11, 264, 291, 434, 4099, 257, 3262, 50648, 50648, 1413, 544, 1460, 813, 291, 632, 570, 2618, 390, 15578, 309, 294, 512, 636, 420, 7750, 309, 50840, 50840, 766, 281, 512, 9362, 5413, 322, 428, 2154, 1124, 13, 50978, 50978, 400, 291, 500, 380, 528, 281, 3292, 466, 300, 13, 51076, 51076, 407, 337, 4924, 3166, 295, 428, 9274, 11, 309, 311, 11, 309, 311, 754, 544, 1021, 281, 764, 613, 42687, 51362, 51362, 3467, 570, 291, 528, 281, 312, 5026, 466, 264, 2154, 1124, 293, 291, 500, 380, 528, 456, 281, 51612, 51612, 312, 15120, 11, 558, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08963046639652575, "compression_ratio": 1.7674418604651163, "no_caption_prob": 2.247301017632708e-05}, {"id": 271, "seek": 103458, "start": 1034.58, "end": 1039.46, "text": " So in cases where it's very important not to have bugs, you want to hide the internals", "tokens": [50364, 407, 294, 3331, 689, 309, 311, 588, 1021, 406, 281, 362, 15120, 11, 291, 528, 281, 6479, 264, 2154, 1124, 50608, 50608, 293, 364, 42687, 2010, 295, 577, 291, 360, 300, 13, 50744, 50744, 1042, 11, 264, 551, 307, 11, 309, 311, 406, 4725, 466, 10596, 264, 2154, 1124, 13, 50938, 50938, 4894, 13, 50988, 50988, 663, 311, 257, 665, 935, 13, 51060, 51060, 583, 562, 291, 528, 281, 362, 264, 32567, 11, 309, 311, 406, 570, 291, 528, 281, 6479, 264, 4365, 11, 51364, 51364, 309, 311, 570, 291, 528, 281, 4948, 437, 561, 393, 360, 365, 309, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.14684756902547982, "compression_ratio": 1.7740384615384615, "no_caption_prob": 1.3630756257043686e-05}, {"id": 272, "seek": 103458, "start": 1039.46, "end": 1042.1799999999998, "text": " and an opaque type of how you do that.", "tokens": [50364, 407, 294, 3331, 689, 309, 311, 588, 1021, 406, 281, 362, 15120, 11, 291, 528, 281, 6479, 264, 2154, 1124, 50608, 50608, 293, 364, 42687, 2010, 295, 577, 291, 360, 300, 13, 50744, 50744, 1042, 11, 264, 551, 307, 11, 309, 311, 406, 4725, 466, 10596, 264, 2154, 1124, 13, 50938, 50938, 4894, 13, 50988, 50988, 663, 311, 257, 665, 935, 13, 51060, 51060, 583, 562, 291, 528, 281, 362, 264, 32567, 11, 309, 311, 406, 570, 291, 528, 281, 6479, 264, 4365, 11, 51364, 51364, 309, 311, 570, 291, 528, 281, 4948, 437, 561, 393, 360, 365, 309, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.14684756902547982, "compression_ratio": 1.7740384615384615, "no_caption_prob": 1.3630756257043686e-05}, {"id": 273, "seek": 103458, "start": 1042.1799999999998, "end": 1046.06, "text": " Well, the thing is, it's not necessarily about hiding the internals.", "tokens": [50364, 407, 294, 3331, 689, 309, 311, 588, 1021, 406, 281, 362, 15120, 11, 291, 528, 281, 6479, 264, 2154, 1124, 50608, 50608, 293, 364, 42687, 2010, 295, 577, 291, 360, 300, 13, 50744, 50744, 1042, 11, 264, 551, 307, 11, 309, 311, 406, 4725, 466, 10596, 264, 2154, 1124, 13, 50938, 50938, 4894, 13, 50988, 50988, 663, 311, 257, 665, 935, 13, 51060, 51060, 583, 562, 291, 528, 281, 362, 264, 32567, 11, 309, 311, 406, 570, 291, 528, 281, 6479, 264, 4365, 11, 51364, 51364, 309, 311, 570, 291, 528, 281, 4948, 437, 561, 393, 360, 365, 309, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.14684756902547982, "compression_ratio": 1.7740384615384615, "no_caption_prob": 1.3630756257043686e-05}, {"id": 274, "seek": 103458, "start": 1046.06, "end": 1047.06, "text": " Sure.", "tokens": [50364, 407, 294, 3331, 689, 309, 311, 588, 1021, 406, 281, 362, 15120, 11, 291, 528, 281, 6479, 264, 2154, 1124, 50608, 50608, 293, 364, 42687, 2010, 295, 577, 291, 360, 300, 13, 50744, 50744, 1042, 11, 264, 551, 307, 11, 309, 311, 406, 4725, 466, 10596, 264, 2154, 1124, 13, 50938, 50938, 4894, 13, 50988, 50988, 663, 311, 257, 665, 935, 13, 51060, 51060, 583, 562, 291, 528, 281, 362, 264, 32567, 11, 309, 311, 406, 570, 291, 528, 281, 6479, 264, 4365, 11, 51364, 51364, 309, 311, 570, 291, 528, 281, 4948, 437, 561, 393, 360, 365, 309, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.14684756902547982, "compression_ratio": 1.7740384615384615, "no_caption_prob": 1.3630756257043686e-05}, {"id": 275, "seek": 103458, "start": 1047.06, "end": 1048.5, "text": " That's a good point.", "tokens": [50364, 407, 294, 3331, 689, 309, 311, 588, 1021, 406, 281, 362, 15120, 11, 291, 528, 281, 6479, 264, 2154, 1124, 50608, 50608, 293, 364, 42687, 2010, 295, 577, 291, 360, 300, 13, 50744, 50744, 1042, 11, 264, 551, 307, 11, 309, 311, 406, 4725, 466, 10596, 264, 2154, 1124, 13, 50938, 50938, 4894, 13, 50988, 50988, 663, 311, 257, 665, 935, 13, 51060, 51060, 583, 562, 291, 528, 281, 362, 264, 32567, 11, 309, 311, 406, 570, 291, 528, 281, 6479, 264, 4365, 11, 51364, 51364, 309, 311, 570, 291, 528, 281, 4948, 437, 561, 393, 360, 365, 309, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.14684756902547982, "compression_ratio": 1.7740384615384615, "no_caption_prob": 1.3630756257043686e-05}, {"id": 276, "seek": 103458, "start": 1048.5, "end": 1054.58, "text": " But when you want to have the guarantees, it's not because you want to hide the details,", "tokens": [50364, 407, 294, 3331, 689, 309, 311, 588, 1021, 406, 281, 362, 15120, 11, 291, 528, 281, 6479, 264, 2154, 1124, 50608, 50608, 293, 364, 42687, 2010, 295, 577, 291, 360, 300, 13, 50744, 50744, 1042, 11, 264, 551, 307, 11, 309, 311, 406, 4725, 466, 10596, 264, 2154, 1124, 13, 50938, 50938, 4894, 13, 50988, 50988, 663, 311, 257, 665, 935, 13, 51060, 51060, 583, 562, 291, 528, 281, 362, 264, 32567, 11, 309, 311, 406, 570, 291, 528, 281, 6479, 264, 4365, 11, 51364, 51364, 309, 311, 570, 291, 528, 281, 4948, 437, 561, 393, 360, 365, 309, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.14684756902547982, "compression_ratio": 1.7740384615384615, "no_caption_prob": 1.3630756257043686e-05}, {"id": 277, "seek": 103458, "start": 1054.58, "end": 1058.74, "text": " it's because you want to limit what people can do with it.", "tokens": [50364, 407, 294, 3331, 689, 309, 311, 588, 1021, 406, 281, 362, 15120, 11, 291, 528, 281, 6479, 264, 2154, 1124, 50608, 50608, 293, 364, 42687, 2010, 295, 577, 291, 360, 300, 13, 50744, 50744, 1042, 11, 264, 551, 307, 11, 309, 311, 406, 4725, 466, 10596, 264, 2154, 1124, 13, 50938, 50938, 4894, 13, 50988, 50988, 663, 311, 257, 665, 935, 13, 51060, 51060, 583, 562, 291, 528, 281, 362, 264, 32567, 11, 309, 311, 406, 570, 291, 528, 281, 6479, 264, 4365, 11, 51364, 51364, 309, 311, 570, 291, 528, 281, 4948, 437, 561, 393, 360, 365, 309, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.14684756902547982, "compression_ratio": 1.7740384615384615, "no_caption_prob": 1.3630756257043686e-05}, {"id": 278, "seek": 105874, "start": 1058.74, "end": 1064.74, "text": " So you want an API to limit what are the operations that you can do with the type.", "tokens": [50364, 407, 291, 528, 364, 9362, 281, 4948, 437, 366, 264, 7705, 300, 291, 393, 360, 365, 264, 2010, 13, 50664, 50664, 407, 337, 1460, 11, 291, 727, 4674, 309, 294, 512, 2098, 11, 294, 512, 25879, 11, 291, 727, 909, 309, 11, 291, 51046, 51046, 727, 652, 309, 370, 291, 500, 380, 909, 1460, 295, 819, 36886, 11, 457, 309, 1177, 380, 652, 2020, 281, 9845, 51334, 51334, 1460, 538, 1460, 11, 337, 5197, 13, 51464, 51464, 407, 291, 576, 406, 362, 264, 9362, 2089, 300, 7959, 13, 51636, 51636, 400, 300, 311, 983, 437, 364, 42687, 2010, 4045, 291, 281, 360, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08814342890944436, "compression_ratio": 1.738197424892704, "no_caption_prob": 5.594144568021875e-06}, {"id": 279, "seek": 105874, "start": 1064.74, "end": 1072.38, "text": " So for money, you could display it in some ways, in some formats, you could add it, you", "tokens": [50364, 407, 291, 528, 364, 9362, 281, 4948, 437, 366, 264, 7705, 300, 291, 393, 360, 365, 264, 2010, 13, 50664, 50664, 407, 337, 1460, 11, 291, 727, 4674, 309, 294, 512, 2098, 11, 294, 512, 25879, 11, 291, 727, 909, 309, 11, 291, 51046, 51046, 727, 652, 309, 370, 291, 500, 380, 909, 1460, 295, 819, 36886, 11, 457, 309, 1177, 380, 652, 2020, 281, 9845, 51334, 51334, 1460, 538, 1460, 11, 337, 5197, 13, 51464, 51464, 407, 291, 576, 406, 362, 264, 9362, 2089, 300, 7959, 13, 51636, 51636, 400, 300, 311, 983, 437, 364, 42687, 2010, 4045, 291, 281, 360, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08814342890944436, "compression_ratio": 1.738197424892704, "no_caption_prob": 5.594144568021875e-06}, {"id": 280, "seek": 105874, "start": 1072.38, "end": 1078.14, "text": " could make it so you don't add money of different currencies, but it doesn't make sense to divide", "tokens": [50364, 407, 291, 528, 364, 9362, 281, 4948, 437, 366, 264, 7705, 300, 291, 393, 360, 365, 264, 2010, 13, 50664, 50664, 407, 337, 1460, 11, 291, 727, 4674, 309, 294, 512, 2098, 11, 294, 512, 25879, 11, 291, 727, 909, 309, 11, 291, 51046, 51046, 727, 652, 309, 370, 291, 500, 380, 909, 1460, 295, 819, 36886, 11, 457, 309, 1177, 380, 652, 2020, 281, 9845, 51334, 51334, 1460, 538, 1460, 11, 337, 5197, 13, 51464, 51464, 407, 291, 576, 406, 362, 264, 9362, 2089, 300, 7959, 13, 51636, 51636, 400, 300, 311, 983, 437, 364, 42687, 2010, 4045, 291, 281, 360, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08814342890944436, "compression_ratio": 1.738197424892704, "no_caption_prob": 5.594144568021875e-06}, {"id": 281, "seek": 105874, "start": 1078.14, "end": 1080.74, "text": " money by money, for instance.", "tokens": [50364, 407, 291, 528, 364, 9362, 281, 4948, 437, 366, 264, 7705, 300, 291, 393, 360, 365, 264, 2010, 13, 50664, 50664, 407, 337, 1460, 11, 291, 727, 4674, 309, 294, 512, 2098, 11, 294, 512, 25879, 11, 291, 727, 909, 309, 11, 291, 51046, 51046, 727, 652, 309, 370, 291, 500, 380, 909, 1460, 295, 819, 36886, 11, 457, 309, 1177, 380, 652, 2020, 281, 9845, 51334, 51334, 1460, 538, 1460, 11, 337, 5197, 13, 51464, 51464, 407, 291, 576, 406, 362, 264, 9362, 2089, 300, 7959, 13, 51636, 51636, 400, 300, 311, 983, 437, 364, 42687, 2010, 4045, 291, 281, 360, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08814342890944436, "compression_ratio": 1.738197424892704, "no_caption_prob": 5.594144568021875e-06}, {"id": 282, "seek": 105874, "start": 1080.74, "end": 1084.18, "text": " So you would not have the API allow that possibility.", "tokens": [50364, 407, 291, 528, 364, 9362, 281, 4948, 437, 366, 264, 7705, 300, 291, 393, 360, 365, 264, 2010, 13, 50664, 50664, 407, 337, 1460, 11, 291, 727, 4674, 309, 294, 512, 2098, 11, 294, 512, 25879, 11, 291, 727, 909, 309, 11, 291, 51046, 51046, 727, 652, 309, 370, 291, 500, 380, 909, 1460, 295, 819, 36886, 11, 457, 309, 1177, 380, 652, 2020, 281, 9845, 51334, 51334, 1460, 538, 1460, 11, 337, 5197, 13, 51464, 51464, 407, 291, 576, 406, 362, 264, 9362, 2089, 300, 7959, 13, 51636, 51636, 400, 300, 311, 983, 437, 364, 42687, 2010, 4045, 291, 281, 360, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08814342890944436, "compression_ratio": 1.738197424892704, "no_caption_prob": 5.594144568021875e-06}, {"id": 283, "seek": 105874, "start": 1084.18, "end": 1087.38, "text": " And that's why what an opaque type allows you to do.", "tokens": [50364, 407, 291, 528, 364, 9362, 281, 4948, 437, 366, 264, 7705, 300, 291, 393, 360, 365, 264, 2010, 13, 50664, 50664, 407, 337, 1460, 11, 291, 727, 4674, 309, 294, 512, 2098, 11, 294, 512, 25879, 11, 291, 727, 909, 309, 11, 291, 51046, 51046, 727, 652, 309, 370, 291, 500, 380, 909, 1460, 295, 819, 36886, 11, 457, 309, 1177, 380, 652, 2020, 281, 9845, 51334, 51334, 1460, 538, 1460, 11, 337, 5197, 13, 51464, 51464, 407, 291, 576, 406, 362, 264, 9362, 2089, 300, 7959, 13, 51636, 51636, 400, 300, 311, 983, 437, 364, 42687, 2010, 4045, 291, 281, 360, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08814342890944436, "compression_ratio": 1.738197424892704, "no_caption_prob": 5.594144568021875e-06}, {"id": 284, "seek": 108738, "start": 1087.38, "end": 1091.18, "text": " It limits what you can do with a type.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 285, "seek": 108738, "start": 1091.18, "end": 1092.18, "text": " Right.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 286, "seek": 108738, "start": 1092.18, "end": 1094.14, "text": " That's a great point.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 287, "seek": 108738, "start": 1094.14, "end": 1095.14, "text": " Yeah.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 288, "seek": 108738, "start": 1095.14, "end": 1097.98, "text": " And it also allows you to protect certain constraints about that.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 289, "seek": 108738, "start": 1097.98, "end": 1105.74, "text": " So for example, I've got a blog post I wrote about this thing I use the term exit gatekeepers.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 290, "seek": 108738, "start": 1105.74, "end": 1109.5800000000002, "text": " And so I like I use the example of a social security number.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 291, "seek": 108738, "start": 1109.5800000000002, "end": 1114.18, "text": " So if you have a social security number, you want to be very careful with what you do with", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 292, "seek": 108738, "start": 1114.18, "end": 1115.18, "text": " that.", "tokens": [50364, 467, 10406, 437, 291, 393, 360, 365, 257, 2010, 13, 50554, 50554, 1779, 13, 50604, 50604, 663, 311, 257, 869, 935, 13, 50702, 50702, 865, 13, 50752, 50752, 400, 309, 611, 4045, 291, 281, 2371, 1629, 18491, 466, 300, 13, 50894, 50894, 407, 337, 1365, 11, 286, 600, 658, 257, 6968, 2183, 286, 4114, 466, 341, 551, 286, 764, 264, 1433, 11043, 8539, 43153, 13, 51282, 51282, 400, 370, 286, 411, 286, 764, 264, 1365, 295, 257, 2093, 3825, 1230, 13, 51474, 51474, 407, 498, 291, 362, 257, 2093, 3825, 1230, 11, 291, 528, 281, 312, 588, 5026, 365, 437, 291, 360, 365, 51704, 51704, 300, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1460810996390678, "compression_ratio": 1.6680851063829787, "no_caption_prob": 1.7228179785888642e-05}, {"id": 293, "seek": 111518, "start": 1115.18, "end": 1118.8600000000001, "text": " If you have a sort of logging service, if you get some sort of error log and it just", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 294, "seek": 111518, "start": 1118.8600000000001, "end": 1124.02, "text": " takes some data and presents it and if it has access to the internal representation", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 295, "seek": 111518, "start": 1124.02, "end": 1128.78, "text": " of that type, you could imagine that the error logs are going to show up with people's social", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 296, "seek": 111518, "start": 1128.78, "end": 1131.3, "text": " security numbers, which is not great.", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 297, "seek": 111518, "start": 1131.3, "end": 1132.3, "text": " Yep.", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 298, "seek": 111518, "start": 1132.3, "end": 1134.66, "text": " Don't do it.", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 299, "seek": 111518, "start": 1134.66, "end": 1135.66, "text": " Don't do it.", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 300, "seek": 111518, "start": 1135.66, "end": 1137.74, "text": " For their sake, don't do it.", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 301, "seek": 111518, "start": 1137.74, "end": 1138.74, "text": " Right.", "tokens": [50364, 759, 291, 362, 257, 1333, 295, 27991, 2643, 11, 498, 291, 483, 512, 1333, 295, 6713, 3565, 293, 309, 445, 50548, 50548, 2516, 512, 1412, 293, 13533, 309, 293, 498, 309, 575, 2105, 281, 264, 6920, 10290, 50806, 50806, 295, 300, 2010, 11, 291, 727, 3811, 300, 264, 6713, 20820, 366, 516, 281, 855, 493, 365, 561, 311, 2093, 51044, 51044, 3825, 3547, 11, 597, 307, 406, 869, 13, 51170, 51170, 7010, 13, 51220, 51220, 1468, 380, 360, 309, 13, 51338, 51338, 1468, 380, 360, 309, 13, 51388, 51388, 1171, 641, 9717, 11, 500, 380, 360, 309, 13, 51492, 51492, 1779, 13, 51542, 51542], "temperature": 0.0, "avg_logprob": -0.20259043855487174, "compression_ratio": 1.6457399103139014, "no_caption_prob": 2.8409082005964592e-05}, {"id": 302, "seek": 113874, "start": 1138.74, "end": 1145.74, "text": " The take module is a great way to be confident about protecting constraints.", "tokens": [50364, 440, 747, 10088, 307, 257, 869, 636, 281, 312, 6679, 466, 12316, 18491, 13, 50714, 50714, 400, 294, 3331, 295, 3825, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 18491, 13, 50960, 50960, 682, 264, 1389, 295, 721, 4077, 281, 1460, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 51222, 51222, 18491, 13, 51317, 51317, 407, 286, 1415, 281, 2557, 322, 472, 935, 11, 597, 307, 286, 519, 300, 2171, 309, 1669, 561, 10532, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.094312185049057, "compression_ratio": 1.9414893617021276, "no_caption_prob": 4.2644882341846824e-05}, {"id": 303, "seek": 113874, "start": 1145.74, "end": 1150.66, "text": " And in cases of security, you want to be confident about protecting certain constraints.", "tokens": [50364, 440, 747, 10088, 307, 257, 869, 636, 281, 312, 6679, 466, 12316, 18491, 13, 50714, 50714, 400, 294, 3331, 295, 3825, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 18491, 13, 50960, 50960, 682, 264, 1389, 295, 721, 4077, 281, 1460, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 51222, 51222, 18491, 13, 51317, 51317, 407, 286, 1415, 281, 2557, 322, 472, 935, 11, 597, 307, 286, 519, 300, 2171, 309, 1669, 561, 10532, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.094312185049057, "compression_ratio": 1.9414893617021276, "no_caption_prob": 4.2644882341846824e-05}, {"id": 304, "seek": 113874, "start": 1150.66, "end": 1155.9, "text": " In the case of things related to money, you want to be confident about protecting certain", "tokens": [50364, 440, 747, 10088, 307, 257, 869, 636, 281, 312, 6679, 466, 12316, 18491, 13, 50714, 50714, 400, 294, 3331, 295, 3825, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 18491, 13, 50960, 50960, 682, 264, 1389, 295, 721, 4077, 281, 1460, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 51222, 51222, 18491, 13, 51317, 51317, 407, 286, 1415, 281, 2557, 322, 472, 935, 11, 597, 307, 286, 519, 300, 2171, 309, 1669, 561, 10532, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.094312185049057, "compression_ratio": 1.9414893617021276, "no_caption_prob": 4.2644882341846824e-05}, {"id": 305, "seek": 113874, "start": 1155.9, "end": 1157.8, "text": " constraints.", "tokens": [50364, 440, 747, 10088, 307, 257, 869, 636, 281, 312, 6679, 466, 12316, 18491, 13, 50714, 50714, 400, 294, 3331, 295, 3825, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 18491, 13, 50960, 50960, 682, 264, 1389, 295, 721, 4077, 281, 1460, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 51222, 51222, 18491, 13, 51317, 51317, 407, 286, 1415, 281, 2557, 322, 472, 935, 11, 597, 307, 286, 519, 300, 2171, 309, 1669, 561, 10532, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.094312185049057, "compression_ratio": 1.9414893617021276, "no_caption_prob": 4.2644882341846824e-05}, {"id": 306, "seek": 113874, "start": 1157.8, "end": 1163.3, "text": " So I wanted to touch on one point, which is I think that sometimes it makes people uncomfortable", "tokens": [50364, 440, 747, 10088, 307, 257, 869, 636, 281, 312, 6679, 466, 12316, 18491, 13, 50714, 50714, 400, 294, 3331, 295, 3825, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 18491, 13, 50960, 50960, 682, 264, 1389, 295, 721, 4077, 281, 1460, 11, 291, 528, 281, 312, 6679, 466, 12316, 1629, 51222, 51222, 18491, 13, 51317, 51317, 407, 286, 1415, 281, 2557, 322, 472, 935, 11, 597, 307, 286, 519, 300, 2171, 309, 1669, 561, 10532, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.094312185049057, "compression_ratio": 1.9414893617021276, "no_caption_prob": 4.2644882341846824e-05}, {"id": 307, "seek": 116330, "start": 1163.3, "end": 1172.7, "text": " to organize a module that has like, okay, how do I present this money as a string?", "tokens": [50364, 281, 13859, 257, 10088, 300, 575, 411, 11, 1392, 11, 577, 360, 286, 1974, 341, 1460, 382, 257, 6798, 30, 50834, 50834, 708, 311, 264, 17995, 574, 411, 337, 341, 1460, 30, 50980, 50980, 1012, 360, 286, 2042, 364, 33283, 5308, 293, 2058, 1429, 341, 30, 51162, 51162, 407, 411, 11, 370, 291, 1062, 362, 257, 31828, 979, 19866, 337, 1460, 13, 51344, 51344, 509, 1062, 362, 257, 31828, 2058, 19866, 337, 1460, 13, 51470, 51470, 509, 1062, 362, 257, 2445, 300, 11247, 17995, 420, 300, 11247, 257, 6798, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07578103593055238, "compression_ratio": 1.7512953367875648, "no_caption_prob": 5.306982347974554e-05}, {"id": 308, "seek": 116330, "start": 1172.7, "end": 1175.62, "text": " What's the HTML look like for this money?", "tokens": [50364, 281, 13859, 257, 10088, 300, 575, 411, 11, 1392, 11, 577, 360, 286, 1974, 341, 1460, 382, 257, 6798, 30, 50834, 50834, 708, 311, 264, 17995, 574, 411, 337, 341, 1460, 30, 50980, 50980, 1012, 360, 286, 2042, 364, 33283, 5308, 293, 2058, 1429, 341, 30, 51162, 51162, 407, 411, 11, 370, 291, 1062, 362, 257, 31828, 979, 19866, 337, 1460, 13, 51344, 51344, 509, 1062, 362, 257, 31828, 2058, 19866, 337, 1460, 13, 51470, 51470, 509, 1062, 362, 257, 2445, 300, 11247, 17995, 420, 300, 11247, 257, 6798, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07578103593055238, "compression_ratio": 1.7512953367875648, "no_caption_prob": 5.306982347974554e-05}, {"id": 309, "seek": 116330, "start": 1175.62, "end": 1179.26, "text": " How do I perform an HTTP request and encode this?", "tokens": [50364, 281, 13859, 257, 10088, 300, 575, 411, 11, 1392, 11, 577, 360, 286, 1974, 341, 1460, 382, 257, 6798, 30, 50834, 50834, 708, 311, 264, 17995, 574, 411, 337, 341, 1460, 30, 50980, 50980, 1012, 360, 286, 2042, 364, 33283, 5308, 293, 2058, 1429, 341, 30, 51162, 51162, 407, 411, 11, 370, 291, 1062, 362, 257, 31828, 979, 19866, 337, 1460, 13, 51344, 51344, 509, 1062, 362, 257, 31828, 2058, 19866, 337, 1460, 13, 51470, 51470, 509, 1062, 362, 257, 2445, 300, 11247, 17995, 420, 300, 11247, 257, 6798, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07578103593055238, "compression_ratio": 1.7512953367875648, "no_caption_prob": 5.306982347974554e-05}, {"id": 310, "seek": 116330, "start": 1179.26, "end": 1182.8999999999999, "text": " So like, so you might have a JSON decoder for money.", "tokens": [50364, 281, 13859, 257, 10088, 300, 575, 411, 11, 1392, 11, 577, 360, 286, 1974, 341, 1460, 382, 257, 6798, 30, 50834, 50834, 708, 311, 264, 17995, 574, 411, 337, 341, 1460, 30, 50980, 50980, 1012, 360, 286, 2042, 364, 33283, 5308, 293, 2058, 1429, 341, 30, 51162, 51162, 407, 411, 11, 370, 291, 1062, 362, 257, 31828, 979, 19866, 337, 1460, 13, 51344, 51344, 509, 1062, 362, 257, 31828, 2058, 19866, 337, 1460, 13, 51470, 51470, 509, 1062, 362, 257, 2445, 300, 11247, 17995, 420, 300, 11247, 257, 6798, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07578103593055238, "compression_ratio": 1.7512953367875648, "no_caption_prob": 5.306982347974554e-05}, {"id": 311, "seek": 116330, "start": 1182.8999999999999, "end": 1185.4199999999998, "text": " You might have a JSON encoder for money.", "tokens": [50364, 281, 13859, 257, 10088, 300, 575, 411, 11, 1392, 11, 577, 360, 286, 1974, 341, 1460, 382, 257, 6798, 30, 50834, 50834, 708, 311, 264, 17995, 574, 411, 337, 341, 1460, 30, 50980, 50980, 1012, 360, 286, 2042, 364, 33283, 5308, 293, 2058, 1429, 341, 30, 51162, 51162, 407, 411, 11, 370, 291, 1062, 362, 257, 31828, 979, 19866, 337, 1460, 13, 51344, 51344, 509, 1062, 362, 257, 31828, 2058, 19866, 337, 1460, 13, 51470, 51470, 509, 1062, 362, 257, 2445, 300, 11247, 17995, 420, 300, 11247, 257, 6798, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07578103593055238, "compression_ratio": 1.7512953367875648, "no_caption_prob": 5.306982347974554e-05}, {"id": 312, "seek": 116330, "start": 1185.4199999999998, "end": 1190.6599999999999, "text": " You might have a function that returns HTML or that returns a string.", "tokens": [50364, 281, 13859, 257, 10088, 300, 575, 411, 11, 1392, 11, 577, 360, 286, 1974, 341, 1460, 382, 257, 6798, 30, 50834, 50834, 708, 311, 264, 17995, 574, 411, 337, 341, 1460, 30, 50980, 50980, 1012, 360, 286, 2042, 364, 33283, 5308, 293, 2058, 1429, 341, 30, 51162, 51162, 407, 411, 11, 370, 291, 1062, 362, 257, 31828, 979, 19866, 337, 1460, 13, 51344, 51344, 509, 1062, 362, 257, 31828, 2058, 19866, 337, 1460, 13, 51470, 51470, 509, 1062, 362, 257, 2445, 300, 11247, 17995, 420, 300, 11247, 257, 6798, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07578103593055238, "compression_ratio": 1.7512953367875648, "no_caption_prob": 5.306982347974554e-05}, {"id": 313, "seek": 119066, "start": 1190.66, "end": 1193.9, "text": " In addition to just the functions that add them together.", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 314, "seek": 119066, "start": 1193.9, "end": 1198.24, "text": " I think that that can make some people uncomfortable because it feels like that's a different concern.", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 315, "seek": 119066, "start": 1198.24, "end": 1202.16, "text": " Like that's, that's how you display money.", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 316, "seek": 119066, "start": 1202.16, "end": 1204.22, "text": " That's how you turn it into HTML.", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 317, "seek": 119066, "start": 1204.22, "end": 1209.8600000000001, "text": " The thing is, I find that when I'm trying to understand what's going on with the code,", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 318, "seek": 119066, "start": 1209.8600000000001, "end": 1212.46, "text": " I often like to have it organized in that way.", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 319, "seek": 119066, "start": 1212.46, "end": 1218.5600000000002, "text": " It's very natural to say something's off with how this money is being formatted.", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 320, "seek": 119066, "start": 1218.5600000000002, "end": 1220.2, "text": " Where do I look for that?", "tokens": [50364, 682, 4500, 281, 445, 264, 6828, 300, 909, 552, 1214, 13, 50526, 50526, 286, 519, 300, 300, 393, 652, 512, 561, 10532, 570, 309, 3417, 411, 300, 311, 257, 819, 3136, 13, 50743, 50743, 1743, 300, 311, 11, 300, 311, 577, 291, 4674, 1460, 13, 50939, 50939, 663, 311, 577, 291, 1261, 309, 666, 17995, 13, 51042, 51042, 440, 551, 307, 11, 286, 915, 300, 562, 286, 478, 1382, 281, 1223, 437, 311, 516, 322, 365, 264, 3089, 11, 51324, 51324, 286, 2049, 411, 281, 362, 309, 9983, 294, 300, 636, 13, 51454, 51454, 467, 311, 588, 3303, 281, 584, 746, 311, 766, 365, 577, 341, 1460, 307, 885, 1254, 32509, 13, 51759, 51759, 2305, 360, 286, 574, 337, 300, 30, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.09817085266113282, "compression_ratio": 1.6830985915492958, "no_caption_prob": 2.2124944734969176e-05}, {"id": 321, "seek": 122020, "start": 1220.2, "end": 1222.0, "text": " The money module.", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 322, "seek": 122020, "start": 1222.0, "end": 1227.46, "text": " It's very natural, but it also has this added benefit that you can enforce all the constraints", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 323, "seek": 122020, "start": 1227.46, "end": 1233.18, "text": " in this one place where you have access to the internals and you have the responsibility", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 324, "seek": 122020, "start": 1233.18, "end": 1235.76, "text": " to enforce those constraints.", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 325, "seek": 122020, "start": 1235.76, "end": 1238.6200000000001, "text": " And that responsibility doesn't leak outside of that module.", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 326, "seek": 122020, "start": 1238.6200000000001, "end": 1242.94, "text": " So if anything is wrong with the constraints being enforced or the, or the way that that's", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 327, "seek": 122020, "start": 1242.94, "end": 1246.02, "text": " being presented, you know where to look.", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 328, "seek": 122020, "start": 1246.02, "end": 1250.14, "text": " I don't know if I would put the view inside the money module.", "tokens": [50364, 440, 1460, 10088, 13, 50454, 50454, 467, 311, 588, 3303, 11, 457, 309, 611, 575, 341, 3869, 5121, 300, 291, 393, 24825, 439, 264, 18491, 50727, 50727, 294, 341, 472, 1081, 689, 291, 362, 2105, 281, 264, 2154, 1124, 293, 291, 362, 264, 6357, 51013, 51013, 281, 24825, 729, 18491, 13, 51142, 51142, 400, 300, 6357, 1177, 380, 17143, 2380, 295, 300, 10088, 13, 51285, 51285, 407, 498, 1340, 307, 2085, 365, 264, 18491, 885, 40953, 420, 264, 11, 420, 264, 636, 300, 300, 311, 51501, 51501, 885, 8212, 11, 291, 458, 689, 281, 574, 13, 51655, 51655, 286, 500, 380, 458, 498, 286, 576, 829, 264, 1910, 1854, 264, 1460, 10088, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.10411401080270098, "compression_ratio": 1.8479087452471483, "no_caption_prob": 3.763540735235438e-05}, {"id": 329, "seek": 125014, "start": 1250.14, "end": 1255.66, "text": " The reason why I would probably do that is if the view needs to contain something that", "tokens": [50364, 440, 1778, 983, 286, 576, 1391, 360, 300, 307, 498, 264, 1910, 2203, 281, 5304, 746, 300, 50640, 50640, 286, 360, 406, 528, 281, 312, 1143, 4079, 1646, 11, 550, 286, 576, 1391, 360, 300, 13, 50954, 50954, 1743, 337, 5197, 11, 498, 286, 11, 498, 456, 390, 512, 11, 498, 456, 645, 512, 6920, 4365, 300, 286, 51262, 51262, 2978, 281, 855, 11, 457, 300, 576, 312, 5795, 281, 17143, 484, 11, 550, 286, 576, 652, 264, 1910, 312, 51560, 51560, 1854, 264, 1460, 10088, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14437448061429536, "compression_ratio": 1.7586206896551724, "no_caption_prob": 2.8855558412033133e-05}, {"id": 330, "seek": 125014, "start": 1255.66, "end": 1261.94, "text": " I do not want to be used somewhere else, then I would probably do that.", "tokens": [50364, 440, 1778, 983, 286, 576, 1391, 360, 300, 307, 498, 264, 1910, 2203, 281, 5304, 746, 300, 50640, 50640, 286, 360, 406, 528, 281, 312, 1143, 4079, 1646, 11, 550, 286, 576, 1391, 360, 300, 13, 50954, 50954, 1743, 337, 5197, 11, 498, 286, 11, 498, 456, 390, 512, 11, 498, 456, 645, 512, 6920, 4365, 300, 286, 51262, 51262, 2978, 281, 855, 11, 457, 300, 576, 312, 5795, 281, 17143, 484, 11, 550, 286, 576, 652, 264, 1910, 312, 51560, 51560, 1854, 264, 1460, 10088, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14437448061429536, "compression_ratio": 1.7586206896551724, "no_caption_prob": 2.8855558412033133e-05}, {"id": 331, "seek": 125014, "start": 1261.94, "end": 1268.1000000000001, "text": " Like for instance, if I, if there was some, if there were some internal details that I", "tokens": [50364, 440, 1778, 983, 286, 576, 1391, 360, 300, 307, 498, 264, 1910, 2203, 281, 5304, 746, 300, 50640, 50640, 286, 360, 406, 528, 281, 312, 1143, 4079, 1646, 11, 550, 286, 576, 1391, 360, 300, 13, 50954, 50954, 1743, 337, 5197, 11, 498, 286, 11, 498, 456, 390, 512, 11, 498, 456, 645, 512, 6920, 4365, 300, 286, 51262, 51262, 2978, 281, 855, 11, 457, 300, 576, 312, 5795, 281, 17143, 484, 11, 550, 286, 576, 652, 264, 1910, 312, 51560, 51560, 1854, 264, 1460, 10088, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14437448061429536, "compression_ratio": 1.7586206896551724, "no_caption_prob": 2.8855558412033133e-05}, {"id": 332, "seek": 125014, "start": 1268.1000000000001, "end": 1274.0600000000002, "text": " needed to show, but that would be dangerous to leak out, then I would make the view be", "tokens": [50364, 440, 1778, 983, 286, 576, 1391, 360, 300, 307, 498, 264, 1910, 2203, 281, 5304, 746, 300, 50640, 50640, 286, 360, 406, 528, 281, 312, 1143, 4079, 1646, 11, 550, 286, 576, 1391, 360, 300, 13, 50954, 50954, 1743, 337, 5197, 11, 498, 286, 11, 498, 456, 390, 512, 11, 498, 456, 645, 512, 6920, 4365, 300, 286, 51262, 51262, 2978, 281, 855, 11, 457, 300, 576, 312, 5795, 281, 17143, 484, 11, 550, 286, 576, 652, 264, 1910, 312, 51560, 51560, 1854, 264, 1460, 10088, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14437448061429536, "compression_ratio": 1.7586206896551724, "no_caption_prob": 2.8855558412033133e-05}, {"id": 333, "seek": 125014, "start": 1274.0600000000002, "end": 1276.26, "text": " inside the money module.", "tokens": [50364, 440, 1778, 983, 286, 576, 1391, 360, 300, 307, 498, 264, 1910, 2203, 281, 5304, 746, 300, 50640, 50640, 286, 360, 406, 528, 281, 312, 1143, 4079, 1646, 11, 550, 286, 576, 1391, 360, 300, 13, 50954, 50954, 1743, 337, 5197, 11, 498, 286, 11, 498, 456, 390, 512, 11, 498, 456, 645, 512, 6920, 4365, 300, 286, 51262, 51262, 2978, 281, 855, 11, 457, 300, 576, 312, 5795, 281, 17143, 484, 11, 550, 286, 576, 652, 264, 1910, 312, 51560, 51560, 1854, 264, 1460, 10088, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14437448061429536, "compression_ratio": 1.7586206896551724, "no_caption_prob": 2.8855558412033133e-05}, {"id": 334, "seek": 127626, "start": 1276.26, "end": 1280.3799999999999, "text": " Otherwise I think it's fine to have it outside the money module.", "tokens": [50364, 10328, 286, 519, 309, 311, 2489, 281, 362, 309, 2380, 264, 1460, 10088, 13, 50570, 50570, 1779, 13, 50620, 50620, 509, 434, 1566, 300, 291, 576, 6964, 264, 732, 6798, 2445, 337, 264, 1460, 1854, 264, 1460, 50844, 50844, 10088, 293, 550, 1340, 300, 1415, 281, 1974, 264, 17995, 576, 818, 264, 732, 6798, 13, 51088, 51088, 7587, 13, 51138, 51138, 708, 498, 291, 362, 512, 2121, 636, 281, 4674, 309, 689, 291, 458, 291, 4674, 411, 11, 286, 500, 380, 51434, 51434, 458, 11, 291, 362, 512, 2121, 17995, 1508, 300, 307, 6456, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.1762240631411774, "compression_ratio": 1.7391304347826086, "no_caption_prob": 2.5070434276130982e-05}, {"id": 335, "seek": 127626, "start": 1280.3799999999999, "end": 1281.3799999999999, "text": " Right.", "tokens": [50364, 10328, 286, 519, 309, 311, 2489, 281, 362, 309, 2380, 264, 1460, 10088, 13, 50570, 50570, 1779, 13, 50620, 50620, 509, 434, 1566, 300, 291, 576, 6964, 264, 732, 6798, 2445, 337, 264, 1460, 1854, 264, 1460, 50844, 50844, 10088, 293, 550, 1340, 300, 1415, 281, 1974, 264, 17995, 576, 818, 264, 732, 6798, 13, 51088, 51088, 7587, 13, 51138, 51138, 708, 498, 291, 362, 512, 2121, 636, 281, 4674, 309, 689, 291, 458, 291, 4674, 411, 11, 286, 500, 380, 51434, 51434, 458, 11, 291, 362, 512, 2121, 17995, 1508, 300, 307, 6456, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.1762240631411774, "compression_ratio": 1.7391304347826086, "no_caption_prob": 2.5070434276130982e-05}, {"id": 336, "seek": 127626, "start": 1281.3799999999999, "end": 1285.86, "text": " You're saying that you would define the two string function for the money inside the money", "tokens": [50364, 10328, 286, 519, 309, 311, 2489, 281, 362, 309, 2380, 264, 1460, 10088, 13, 50570, 50570, 1779, 13, 50620, 50620, 509, 434, 1566, 300, 291, 576, 6964, 264, 732, 6798, 2445, 337, 264, 1460, 1854, 264, 1460, 50844, 50844, 10088, 293, 550, 1340, 300, 1415, 281, 1974, 264, 17995, 576, 818, 264, 732, 6798, 13, 51088, 51088, 7587, 13, 51138, 51138, 708, 498, 291, 362, 512, 2121, 636, 281, 4674, 309, 689, 291, 458, 291, 4674, 411, 11, 286, 500, 380, 51434, 51434, 458, 11, 291, 362, 512, 2121, 17995, 1508, 300, 307, 6456, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.1762240631411774, "compression_ratio": 1.7391304347826086, "no_caption_prob": 2.5070434276130982e-05}, {"id": 337, "seek": 127626, "start": 1285.86, "end": 1290.74, "text": " module and then anything that wanted to present the HTML would call the two string.", "tokens": [50364, 10328, 286, 519, 309, 311, 2489, 281, 362, 309, 2380, 264, 1460, 10088, 13, 50570, 50570, 1779, 13, 50620, 50620, 509, 434, 1566, 300, 291, 576, 6964, 264, 732, 6798, 2445, 337, 264, 1460, 1854, 264, 1460, 50844, 50844, 10088, 293, 550, 1340, 300, 1415, 281, 1974, 264, 17995, 576, 818, 264, 732, 6798, 13, 51088, 51088, 7587, 13, 51138, 51138, 708, 498, 291, 362, 512, 2121, 636, 281, 4674, 309, 689, 291, 458, 291, 4674, 411, 11, 286, 500, 380, 51434, 51434, 458, 11, 291, 362, 512, 2121, 17995, 1508, 300, 307, 6456, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.1762240631411774, "compression_ratio": 1.7391304347826086, "no_caption_prob": 2.5070434276130982e-05}, {"id": 338, "seek": 127626, "start": 1290.74, "end": 1291.74, "text": " Exactly.", "tokens": [50364, 10328, 286, 519, 309, 311, 2489, 281, 362, 309, 2380, 264, 1460, 10088, 13, 50570, 50570, 1779, 13, 50620, 50620, 509, 434, 1566, 300, 291, 576, 6964, 264, 732, 6798, 2445, 337, 264, 1460, 1854, 264, 1460, 50844, 50844, 10088, 293, 550, 1340, 300, 1415, 281, 1974, 264, 17995, 576, 818, 264, 732, 6798, 13, 51088, 51088, 7587, 13, 51138, 51138, 708, 498, 291, 362, 512, 2121, 636, 281, 4674, 309, 689, 291, 458, 291, 4674, 411, 11, 286, 500, 380, 51434, 51434, 458, 11, 291, 362, 512, 2121, 17995, 1508, 300, 307, 6456, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.1762240631411774, "compression_ratio": 1.7391304347826086, "no_caption_prob": 2.5070434276130982e-05}, {"id": 339, "seek": 127626, "start": 1291.74, "end": 1297.66, "text": " What if you have some special way to display it where you know you display like, I don't", "tokens": [50364, 10328, 286, 519, 309, 311, 2489, 281, 362, 309, 2380, 264, 1460, 10088, 13, 50570, 50570, 1779, 13, 50620, 50620, 509, 434, 1566, 300, 291, 576, 6964, 264, 732, 6798, 2445, 337, 264, 1460, 1854, 264, 1460, 50844, 50844, 10088, 293, 550, 1340, 300, 1415, 281, 1974, 264, 17995, 576, 818, 264, 732, 6798, 13, 51088, 51088, 7587, 13, 51138, 51138, 708, 498, 291, 362, 512, 2121, 636, 281, 4674, 309, 689, 291, 458, 291, 4674, 411, 11, 286, 500, 380, 51434, 51434, 458, 11, 291, 362, 512, 2121, 17995, 1508, 300, 307, 6456, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.1762240631411774, "compression_ratio": 1.7391304347826086, "no_caption_prob": 2.5070434276130982e-05}, {"id": 340, "seek": 127626, "start": 1297.66, "end": 1300.42, "text": " know, you have some special HTML class that is applied.", "tokens": [50364, 10328, 286, 519, 309, 311, 2489, 281, 362, 309, 2380, 264, 1460, 10088, 13, 50570, 50570, 1779, 13, 50620, 50620, 509, 434, 1566, 300, 291, 576, 6964, 264, 732, 6798, 2445, 337, 264, 1460, 1854, 264, 1460, 50844, 50844, 10088, 293, 550, 1340, 300, 1415, 281, 1974, 264, 17995, 576, 818, 264, 732, 6798, 13, 51088, 51088, 7587, 13, 51138, 51138, 708, 498, 291, 362, 512, 2121, 636, 281, 4674, 309, 689, 291, 458, 291, 4674, 411, 11, 286, 500, 380, 51434, 51434, 458, 11, 291, 362, 512, 2121, 17995, 1508, 300, 307, 6456, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.1762240631411774, "compression_ratio": 1.7391304347826086, "no_caption_prob": 2.5070434276130982e-05}, {"id": 341, "seek": 130042, "start": 1300.42, "end": 1307.1000000000001, "text": " So if it's negative, then you show it in red with parentheses around it, or if it's positive,", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 342, "seek": 130042, "start": 1307.1000000000001, "end": 1308.3000000000002, "text": " you show it in green.", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 343, "seek": 130042, "start": 1308.3000000000002, "end": 1313.46, "text": " And if it's zero, you show it in gray.", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 344, "seek": 130042, "start": 1313.46, "end": 1316.7, "text": " I guess you could create a new custom type.", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 345, "seek": 130042, "start": 1316.7, "end": 1317.7, "text": " Yeah.", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 346, "seek": 130042, "start": 1317.7, "end": 1320.6200000000001, "text": " Yeah, that's a good, that's a good way to approach that problem.", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 347, "seek": 130042, "start": 1320.6200000000001, "end": 1327.3000000000002, "text": " I guess the, the general sensibility is what you have to develop, which is I'm trying to", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 348, "seek": 130042, "start": 1327.3000000000002, "end": 1328.6200000000001, "text": " protect these constraints.", "tokens": [50364, 407, 498, 309, 311, 3671, 11, 550, 291, 855, 309, 294, 2182, 365, 34153, 926, 309, 11, 420, 498, 309, 311, 3353, 11, 50698, 50698, 291, 855, 309, 294, 3092, 13, 50758, 50758, 400, 498, 309, 311, 4018, 11, 291, 855, 309, 294, 10855, 13, 51016, 51016, 286, 2041, 291, 727, 1884, 257, 777, 2375, 2010, 13, 51178, 51178, 865, 13, 51228, 51228, 865, 11, 300, 311, 257, 665, 11, 300, 311, 257, 665, 636, 281, 3109, 300, 1154, 13, 51374, 51374, 286, 2041, 264, 11, 264, 2674, 2923, 2841, 307, 437, 291, 362, 281, 1499, 11, 597, 307, 286, 478, 1382, 281, 51708, 51708, 2371, 613, 18491, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.11061829592274354, "compression_ratio": 1.71875, "no_caption_prob": 2.1444355297717266e-05}, {"id": 349, "seek": 132862, "start": 1328.62, "end": 1331.6999999999998, "text": " I don't want to leak these constraints outside of the module.", "tokens": [50364, 286, 500, 380, 528, 281, 17143, 613, 18491, 2380, 295, 264, 10088, 13, 50518, 50518, 400, 370, 1338, 11, 382, 291, 584, 11, 291, 393, 1884, 257, 777, 2375, 2010, 11, 597, 307, 264, 1908, 9226, 50828, 50828, 300, 15626, 307, 341, 11, 291, 458, 11, 1310, 309, 311, 257, 2375, 2010, 365, 1045, 21669, 13, 51136, 51136, 407, 309, 311, 1460, 300, 311, 2139, 3353, 11, 4018, 420, 3671, 13, 51408, 51408, 400, 291, 1029, 337, 1460, 293, 309, 2709, 291, 341, 2375, 2010, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1008157624138726, "compression_ratio": 1.6255924170616114, "no_caption_prob": 4.0928725866251625e-06}, {"id": 350, "seek": 132862, "start": 1331.6999999999998, "end": 1337.8999999999999, "text": " And so yeah, as you say, you can create a new custom type, which is the public interface", "tokens": [50364, 286, 500, 380, 528, 281, 17143, 613, 18491, 2380, 295, 264, 10088, 13, 50518, 50518, 400, 370, 1338, 11, 382, 291, 584, 11, 291, 393, 1884, 257, 777, 2375, 2010, 11, 597, 307, 264, 1908, 9226, 50828, 50828, 300, 15626, 307, 341, 11, 291, 458, 11, 1310, 309, 311, 257, 2375, 2010, 365, 1045, 21669, 13, 51136, 51136, 407, 309, 311, 1460, 300, 311, 2139, 3353, 11, 4018, 420, 3671, 13, 51408, 51408, 400, 291, 1029, 337, 1460, 293, 309, 2709, 291, 341, 2375, 2010, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1008157624138726, "compression_ratio": 1.6255924170616114, "no_caption_prob": 4.0928725866251625e-06}, {"id": 351, "seek": 132862, "start": 1337.8999999999999, "end": 1344.06, "text": " that describes is this, you know, maybe it's a custom type with three variants.", "tokens": [50364, 286, 500, 380, 528, 281, 17143, 613, 18491, 2380, 295, 264, 10088, 13, 50518, 50518, 400, 370, 1338, 11, 382, 291, 584, 11, 291, 393, 1884, 257, 777, 2375, 2010, 11, 597, 307, 264, 1908, 9226, 50828, 50828, 300, 15626, 307, 341, 11, 291, 458, 11, 1310, 309, 311, 257, 2375, 2010, 365, 1045, 21669, 13, 51136, 51136, 407, 309, 311, 1460, 300, 311, 2139, 3353, 11, 4018, 420, 3671, 13, 51408, 51408, 400, 291, 1029, 337, 1460, 293, 309, 2709, 291, 341, 2375, 2010, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1008157624138726, "compression_ratio": 1.6255924170616114, "no_caption_prob": 4.0928725866251625e-06}, {"id": 352, "seek": 132862, "start": 1344.06, "end": 1349.5, "text": " So it's money that's either positive, zero or negative.", "tokens": [50364, 286, 500, 380, 528, 281, 17143, 613, 18491, 2380, 295, 264, 10088, 13, 50518, 50518, 400, 370, 1338, 11, 382, 291, 584, 11, 291, 393, 1884, 257, 777, 2375, 2010, 11, 597, 307, 264, 1908, 9226, 50828, 50828, 300, 15626, 307, 341, 11, 291, 458, 11, 1310, 309, 311, 257, 2375, 2010, 365, 1045, 21669, 13, 51136, 51136, 407, 309, 311, 1460, 300, 311, 2139, 3353, 11, 4018, 420, 3671, 13, 51408, 51408, 400, 291, 1029, 337, 1460, 293, 309, 2709, 291, 341, 2375, 2010, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1008157624138726, "compression_ratio": 1.6255924170616114, "no_caption_prob": 4.0928725866251625e-06}, {"id": 353, "seek": 132862, "start": 1349.5, "end": 1352.86, "text": " And you ask for money and it gives you this custom type.", "tokens": [50364, 286, 500, 380, 528, 281, 17143, 613, 18491, 2380, 295, 264, 10088, 13, 50518, 50518, 400, 370, 1338, 11, 382, 291, 584, 11, 291, 393, 1884, 257, 777, 2375, 2010, 11, 597, 307, 264, 1908, 9226, 50828, 50828, 300, 15626, 307, 341, 11, 291, 458, 11, 1310, 309, 311, 257, 2375, 2010, 365, 1045, 21669, 13, 51136, 51136, 407, 309, 311, 1460, 300, 311, 2139, 3353, 11, 4018, 420, 3671, 13, 51408, 51408, 400, 291, 1029, 337, 1460, 293, 309, 2709, 291, 341, 2375, 2010, 13, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.1008157624138726, "compression_ratio": 1.6255924170616114, "no_caption_prob": 4.0928725866251625e-06}, {"id": 354, "seek": 135286, "start": 1352.86, "end": 1359.1, "text": " And then you have another module, or maybe you can depend on those details of those variants", "tokens": [50364, 400, 550, 291, 362, 1071, 10088, 11, 420, 1310, 291, 393, 5672, 322, 729, 4365, 295, 729, 21669, 50676, 50676, 295, 300, 2375, 2010, 294, 3838, 294, 428, 1910, 2445, 420, 8660, 309, 311, 6854, 13, 50974, 50974, 865, 13, 51024, 51024, 583, 286, 2041, 264, 2674, 1194, 1399, 307, 437, 18491, 360, 286, 528, 281, 2371, 30, 51382, 51382, 708, 366, 264, 2154, 1124, 300, 286, 528, 281, 764, 281, 24825, 729, 18491, 293, 300, 286, 528, 51616, 51616, 281, 2371, 264, 2380, 1002, 490, 5413, 322, 30, 51760, 51760, 1079, 11, 2293, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16616015964084202, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.3630970897793304e-05}, {"id": 355, "seek": 135286, "start": 1359.1, "end": 1365.06, "text": " of that custom type in directly in your view function or wherever it's appropriate.", "tokens": [50364, 400, 550, 291, 362, 1071, 10088, 11, 420, 1310, 291, 393, 5672, 322, 729, 4365, 295, 729, 21669, 50676, 50676, 295, 300, 2375, 2010, 294, 3838, 294, 428, 1910, 2445, 420, 8660, 309, 311, 6854, 13, 50974, 50974, 865, 13, 51024, 51024, 583, 286, 2041, 264, 2674, 1194, 1399, 307, 437, 18491, 360, 286, 528, 281, 2371, 30, 51382, 51382, 708, 366, 264, 2154, 1124, 300, 286, 528, 281, 764, 281, 24825, 729, 18491, 293, 300, 286, 528, 51616, 51616, 281, 2371, 264, 2380, 1002, 490, 5413, 322, 30, 51760, 51760, 1079, 11, 2293, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16616015964084202, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.3630970897793304e-05}, {"id": 356, "seek": 135286, "start": 1365.06, "end": 1366.06, "text": " Yeah.", "tokens": [50364, 400, 550, 291, 362, 1071, 10088, 11, 420, 1310, 291, 393, 5672, 322, 729, 4365, 295, 729, 21669, 50676, 50676, 295, 300, 2375, 2010, 294, 3838, 294, 428, 1910, 2445, 420, 8660, 309, 311, 6854, 13, 50974, 50974, 865, 13, 51024, 51024, 583, 286, 2041, 264, 2674, 1194, 1399, 307, 437, 18491, 360, 286, 528, 281, 2371, 30, 51382, 51382, 708, 366, 264, 2154, 1124, 300, 286, 528, 281, 764, 281, 24825, 729, 18491, 293, 300, 286, 528, 51616, 51616, 281, 2371, 264, 2380, 1002, 490, 5413, 322, 30, 51760, 51760, 1079, 11, 2293, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16616015964084202, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.3630970897793304e-05}, {"id": 357, "seek": 135286, "start": 1366.06, "end": 1373.2199999999998, "text": " But I guess the general thought process is what constraints do I want to protect?", "tokens": [50364, 400, 550, 291, 362, 1071, 10088, 11, 420, 1310, 291, 393, 5672, 322, 729, 4365, 295, 729, 21669, 50676, 50676, 295, 300, 2375, 2010, 294, 3838, 294, 428, 1910, 2445, 420, 8660, 309, 311, 6854, 13, 50974, 50974, 865, 13, 51024, 51024, 583, 286, 2041, 264, 2674, 1194, 1399, 307, 437, 18491, 360, 286, 528, 281, 2371, 30, 51382, 51382, 708, 366, 264, 2154, 1124, 300, 286, 528, 281, 764, 281, 24825, 729, 18491, 293, 300, 286, 528, 51616, 51616, 281, 2371, 264, 2380, 1002, 490, 5413, 322, 30, 51760, 51760, 1079, 11, 2293, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16616015964084202, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.3630970897793304e-05}, {"id": 358, "seek": 135286, "start": 1373.2199999999998, "end": 1377.8999999999999, "text": " What are the internals that I want to use to enforce those constraints and that I want", "tokens": [50364, 400, 550, 291, 362, 1071, 10088, 11, 420, 1310, 291, 393, 5672, 322, 729, 4365, 295, 729, 21669, 50676, 50676, 295, 300, 2375, 2010, 294, 3838, 294, 428, 1910, 2445, 420, 8660, 309, 311, 6854, 13, 50974, 50974, 865, 13, 51024, 51024, 583, 286, 2041, 264, 2674, 1194, 1399, 307, 437, 18491, 360, 286, 528, 281, 2371, 30, 51382, 51382, 708, 366, 264, 2154, 1124, 300, 286, 528, 281, 764, 281, 24825, 729, 18491, 293, 300, 286, 528, 51616, 51616, 281, 2371, 264, 2380, 1002, 490, 5413, 322, 30, 51760, 51760, 1079, 11, 2293, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16616015964084202, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.3630970897793304e-05}, {"id": 359, "seek": 135286, "start": 1377.8999999999999, "end": 1380.78, "text": " to protect the outside world from depending on?", "tokens": [50364, 400, 550, 291, 362, 1071, 10088, 11, 420, 1310, 291, 393, 5672, 322, 729, 4365, 295, 729, 21669, 50676, 50676, 295, 300, 2375, 2010, 294, 3838, 294, 428, 1910, 2445, 420, 8660, 309, 311, 6854, 13, 50974, 50974, 865, 13, 51024, 51024, 583, 286, 2041, 264, 2674, 1194, 1399, 307, 437, 18491, 360, 286, 528, 281, 2371, 30, 51382, 51382, 708, 366, 264, 2154, 1124, 300, 286, 528, 281, 764, 281, 24825, 729, 18491, 293, 300, 286, 528, 51616, 51616, 281, 2371, 264, 2380, 1002, 490, 5413, 322, 30, 51760, 51760, 1079, 11, 2293, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16616015964084202, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.3630970897793304e-05}, {"id": 360, "seek": 135286, "start": 1380.78, "end": 1382.3799999999999, "text": " Yes, exactly.", "tokens": [50364, 400, 550, 291, 362, 1071, 10088, 11, 420, 1310, 291, 393, 5672, 322, 729, 4365, 295, 729, 21669, 50676, 50676, 295, 300, 2375, 2010, 294, 3838, 294, 428, 1910, 2445, 420, 8660, 309, 311, 6854, 13, 50974, 50974, 865, 13, 51024, 51024, 583, 286, 2041, 264, 2674, 1194, 1399, 307, 437, 18491, 360, 286, 528, 281, 2371, 30, 51382, 51382, 708, 366, 264, 2154, 1124, 300, 286, 528, 281, 764, 281, 24825, 729, 18491, 293, 300, 286, 528, 51616, 51616, 281, 2371, 264, 2380, 1002, 490, 5413, 322, 30, 51760, 51760, 1079, 11, 2293, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.16616015964084202, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.3630970897793304e-05}, {"id": 361, "seek": 138238, "start": 1382.38, "end": 1386.5800000000002, "text": " So as long as you're doing that, that's what leads you in the right direction.", "tokens": [50364, 407, 382, 938, 382, 291, 434, 884, 300, 11, 300, 311, 437, 6689, 291, 294, 264, 558, 3513, 13, 50574, 50574, 400, 309, 815, 747, 867, 819, 6422, 11, 457, 286, 360, 915, 300, 2049, 264, 721, 300, 5784, 50812, 50812, 294, 257, 1729, 10088, 1062, 312, 544, 813, 437, 2618, 576, 2066, 13, 51054, 51054, 407, 337, 1365, 11, 577, 360, 291, 652, 364, 33283, 5308, 281, 11, 291, 458, 11, 1310, 291, 643, 281, 23673, 364, 6979, 51372, 51372, 14862, 293, 291, 600, 658, 11, 291, 458, 11, 291, 1062, 519, 411, 11, 731, 11, 286, 600, 658, 452, 33283, 12475, 51676, 51676, 10088, 293, 341, 26213, 439, 452, 33283, 12475, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11822644734786729, "compression_ratio": 1.7074074074074075, "no_caption_prob": 3.6477464163908735e-05}, {"id": 362, "seek": 138238, "start": 1386.5800000000002, "end": 1391.3400000000001, "text": " And it may take many different forms, but I do find that often the things that belong", "tokens": [50364, 407, 382, 938, 382, 291, 434, 884, 300, 11, 300, 311, 437, 6689, 291, 294, 264, 558, 3513, 13, 50574, 50574, 400, 309, 815, 747, 867, 819, 6422, 11, 457, 286, 360, 915, 300, 2049, 264, 721, 300, 5784, 50812, 50812, 294, 257, 1729, 10088, 1062, 312, 544, 813, 437, 2618, 576, 2066, 13, 51054, 51054, 407, 337, 1365, 11, 577, 360, 291, 652, 364, 33283, 5308, 281, 11, 291, 458, 11, 1310, 291, 643, 281, 23673, 364, 6979, 51372, 51372, 14862, 293, 291, 600, 658, 11, 291, 458, 11, 291, 1062, 519, 411, 11, 731, 11, 286, 600, 658, 452, 33283, 12475, 51676, 51676, 10088, 293, 341, 26213, 439, 452, 33283, 12475, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11822644734786729, "compression_ratio": 1.7074074074074075, "no_caption_prob": 3.6477464163908735e-05}, {"id": 363, "seek": 138238, "start": 1391.3400000000001, "end": 1396.18, "text": " in a particular module might be more than what somebody would expect.", "tokens": [50364, 407, 382, 938, 382, 291, 434, 884, 300, 11, 300, 311, 437, 6689, 291, 294, 264, 558, 3513, 13, 50574, 50574, 400, 309, 815, 747, 867, 819, 6422, 11, 457, 286, 360, 915, 300, 2049, 264, 721, 300, 5784, 50812, 50812, 294, 257, 1729, 10088, 1062, 312, 544, 813, 437, 2618, 576, 2066, 13, 51054, 51054, 407, 337, 1365, 11, 577, 360, 291, 652, 364, 33283, 5308, 281, 11, 291, 458, 11, 1310, 291, 643, 281, 23673, 364, 6979, 51372, 51372, 14862, 293, 291, 600, 658, 11, 291, 458, 11, 291, 1062, 519, 411, 11, 731, 11, 286, 600, 658, 452, 33283, 12475, 51676, 51676, 10088, 293, 341, 26213, 439, 452, 33283, 12475, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11822644734786729, "compression_ratio": 1.7074074074074075, "no_caption_prob": 3.6477464163908735e-05}, {"id": 364, "seek": 138238, "start": 1396.18, "end": 1402.5400000000002, "text": " So for example, how do you make an HTTP request to, you know, maybe you need to fetch an auth", "tokens": [50364, 407, 382, 938, 382, 291, 434, 884, 300, 11, 300, 311, 437, 6689, 291, 294, 264, 558, 3513, 13, 50574, 50574, 400, 309, 815, 747, 867, 819, 6422, 11, 457, 286, 360, 915, 300, 2049, 264, 721, 300, 5784, 50812, 50812, 294, 257, 1729, 10088, 1062, 312, 544, 813, 437, 2618, 576, 2066, 13, 51054, 51054, 407, 337, 1365, 11, 577, 360, 291, 652, 364, 33283, 5308, 281, 11, 291, 458, 11, 1310, 291, 643, 281, 23673, 364, 6979, 51372, 51372, 14862, 293, 291, 600, 658, 11, 291, 458, 11, 291, 1062, 519, 411, 11, 731, 11, 286, 600, 658, 452, 33283, 12475, 51676, 51676, 10088, 293, 341, 26213, 439, 452, 33283, 12475, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11822644734786729, "compression_ratio": 1.7074074074074075, "no_caption_prob": 3.6477464163908735e-05}, {"id": 365, "seek": 138238, "start": 1402.5400000000002, "end": 1408.6200000000001, "text": " token and you've got, you know, you might think like, well, I've got my HTTP requests", "tokens": [50364, 407, 382, 938, 382, 291, 434, 884, 300, 11, 300, 311, 437, 6689, 291, 294, 264, 558, 3513, 13, 50574, 50574, 400, 309, 815, 747, 867, 819, 6422, 11, 457, 286, 360, 915, 300, 2049, 264, 721, 300, 5784, 50812, 50812, 294, 257, 1729, 10088, 1062, 312, 544, 813, 437, 2618, 576, 2066, 13, 51054, 51054, 407, 337, 1365, 11, 577, 360, 291, 652, 364, 33283, 5308, 281, 11, 291, 458, 11, 1310, 291, 643, 281, 23673, 364, 6979, 51372, 51372, 14862, 293, 291, 600, 658, 11, 291, 458, 11, 291, 1062, 519, 411, 11, 731, 11, 286, 600, 658, 452, 33283, 12475, 51676, 51676, 10088, 293, 341, 26213, 439, 452, 33283, 12475, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11822644734786729, "compression_ratio": 1.7074074074074075, "no_caption_prob": 3.6477464163908735e-05}, {"id": 366, "seek": 138238, "start": 1408.6200000000001, "end": 1411.98, "text": " module and this performs all my HTTP requests.", "tokens": [50364, 407, 382, 938, 382, 291, 434, 884, 300, 11, 300, 311, 437, 6689, 291, 294, 264, 558, 3513, 13, 50574, 50574, 400, 309, 815, 747, 867, 819, 6422, 11, 457, 286, 360, 915, 300, 2049, 264, 721, 300, 5784, 50812, 50812, 294, 257, 1729, 10088, 1062, 312, 544, 813, 437, 2618, 576, 2066, 13, 51054, 51054, 407, 337, 1365, 11, 577, 360, 291, 652, 364, 33283, 5308, 281, 11, 291, 458, 11, 1310, 291, 643, 281, 23673, 364, 6979, 51372, 51372, 14862, 293, 291, 600, 658, 11, 291, 458, 11, 291, 1062, 519, 411, 11, 731, 11, 286, 600, 658, 452, 33283, 12475, 51676, 51676, 10088, 293, 341, 26213, 439, 452, 33283, 12475, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11822644734786729, "compression_ratio": 1.7074074074074075, "no_caption_prob": 3.6477464163908735e-05}, {"id": 367, "seek": 141198, "start": 1411.98, "end": 1419.22, "text": " So here's how I do an HTTP, like here are all the HTTP requests that I do to my server", "tokens": [50364, 407, 510, 311, 577, 286, 360, 364, 33283, 11, 411, 510, 366, 439, 264, 33283, 12475, 300, 286, 360, 281, 452, 7154, 50726, 50726, 293, 286, 3531, 309, 294, 341, 10088, 420, 286, 3531, 309, 294, 264, 10088, 337, 341, 3028, 420, 746, 13, 51026, 51026, 865, 13, 51076, 51076, 1042, 11, 294, 257, 636, 264, 4365, 466, 577, 291, 2042, 264, 26643, 5308, 293, 577, 291, 979, 1429, 51408, 51408, 300, 2158, 11, 436, 733, 295, 5784, 365, 300, 26643, 14862, 2010, 13, 51712, 51712, 407, 456, 311, 341, 2010, 11, 309, 311, 42687, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13400708198547362, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.4510334949591197e-05}, {"id": 368, "seek": 141198, "start": 1419.22, "end": 1425.22, "text": " and I store it in this module or I store it in the module for this page or something.", "tokens": [50364, 407, 510, 311, 577, 286, 360, 364, 33283, 11, 411, 510, 366, 439, 264, 33283, 12475, 300, 286, 360, 281, 452, 7154, 50726, 50726, 293, 286, 3531, 309, 294, 341, 10088, 420, 286, 3531, 309, 294, 264, 10088, 337, 341, 3028, 420, 746, 13, 51026, 51026, 865, 13, 51076, 51076, 1042, 11, 294, 257, 636, 264, 4365, 466, 577, 291, 2042, 264, 26643, 5308, 293, 577, 291, 979, 1429, 51408, 51408, 300, 2158, 11, 436, 733, 295, 5784, 365, 300, 26643, 14862, 2010, 13, 51712, 51712, 407, 456, 311, 341, 2010, 11, 309, 311, 42687, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13400708198547362, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.4510334949591197e-05}, {"id": 369, "seek": 141198, "start": 1425.22, "end": 1426.22, "text": " Yeah.", "tokens": [50364, 407, 510, 311, 577, 286, 360, 364, 33283, 11, 411, 510, 366, 439, 264, 33283, 12475, 300, 286, 360, 281, 452, 7154, 50726, 50726, 293, 286, 3531, 309, 294, 341, 10088, 420, 286, 3531, 309, 294, 264, 10088, 337, 341, 3028, 420, 746, 13, 51026, 51026, 865, 13, 51076, 51076, 1042, 11, 294, 257, 636, 264, 4365, 466, 577, 291, 2042, 264, 26643, 5308, 293, 577, 291, 979, 1429, 51408, 51408, 300, 2158, 11, 436, 733, 295, 5784, 365, 300, 26643, 14862, 2010, 13, 51712, 51712, 407, 456, 311, 341, 2010, 11, 309, 311, 42687, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13400708198547362, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.4510334949591197e-05}, {"id": 370, "seek": 141198, "start": 1426.22, "end": 1432.8600000000001, "text": " Well, in a way the details about how you perform the authentication request and how you decode", "tokens": [50364, 407, 510, 311, 577, 286, 360, 364, 33283, 11, 411, 510, 366, 439, 264, 33283, 12475, 300, 286, 360, 281, 452, 7154, 50726, 50726, 293, 286, 3531, 309, 294, 341, 10088, 420, 286, 3531, 309, 294, 264, 10088, 337, 341, 3028, 420, 746, 13, 51026, 51026, 865, 13, 51076, 51076, 1042, 11, 294, 257, 636, 264, 4365, 466, 577, 291, 2042, 264, 26643, 5308, 293, 577, 291, 979, 1429, 51408, 51408, 300, 2158, 11, 436, 733, 295, 5784, 365, 300, 26643, 14862, 2010, 13, 51712, 51712, 407, 456, 311, 341, 2010, 11, 309, 311, 42687, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13400708198547362, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.4510334949591197e-05}, {"id": 371, "seek": 141198, "start": 1432.8600000000001, "end": 1438.94, "text": " that value, they kind of belong with that authentication token type.", "tokens": [50364, 407, 510, 311, 577, 286, 360, 364, 33283, 11, 411, 510, 366, 439, 264, 33283, 12475, 300, 286, 360, 281, 452, 7154, 50726, 50726, 293, 286, 3531, 309, 294, 341, 10088, 420, 286, 3531, 309, 294, 264, 10088, 337, 341, 3028, 420, 746, 13, 51026, 51026, 865, 13, 51076, 51076, 1042, 11, 294, 257, 636, 264, 4365, 466, 577, 291, 2042, 264, 26643, 5308, 293, 577, 291, 979, 1429, 51408, 51408, 300, 2158, 11, 436, 733, 295, 5784, 365, 300, 26643, 14862, 2010, 13, 51712, 51712, 407, 456, 311, 341, 2010, 11, 309, 311, 42687, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13400708198547362, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.4510334949591197e-05}, {"id": 372, "seek": 141198, "start": 1438.94, "end": 1441.02, "text": " So there's this type, it's opaque.", "tokens": [50364, 407, 510, 311, 577, 286, 360, 364, 33283, 11, 411, 510, 366, 439, 264, 33283, 12475, 300, 286, 360, 281, 452, 7154, 50726, 50726, 293, 286, 3531, 309, 294, 341, 10088, 420, 286, 3531, 309, 294, 264, 10088, 337, 341, 3028, 420, 746, 13, 51026, 51026, 865, 13, 51076, 51076, 1042, 11, 294, 257, 636, 264, 4365, 466, 577, 291, 2042, 264, 26643, 5308, 293, 577, 291, 979, 1429, 51408, 51408, 300, 2158, 11, 436, 733, 295, 5784, 365, 300, 26643, 14862, 2010, 13, 51712, 51712, 407, 456, 311, 341, 2010, 11, 309, 311, 42687, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.13400708198547362, "compression_ratio": 1.7058823529411764, "no_caption_prob": 1.4510334949591197e-05}, {"id": 373, "seek": 144102, "start": 1441.02, "end": 1446.3799999999999, "text": " You don't want somebody to be able to just construct an auth token with a string to just", "tokens": [50364, 509, 500, 380, 528, 2618, 281, 312, 1075, 281, 445, 7690, 364, 6979, 14862, 365, 257, 6798, 281, 445, 50632, 50632, 7592, 309, 293, 1320, 294, 364, 6979, 14862, 13, 50738, 50738, 1743, 291, 434, 2139, 9214, 3587, 420, 291, 434, 406, 13, 50842, 50842, 759, 291, 434, 406, 9214, 3587, 11, 445, 312, 3245, 365, 385, 11, 291, 434, 406, 9214, 3587, 293, 286, 603, 51080, 51080, 718, 291, 2105, 437, 291, 393, 11, 406, 885, 9214, 3587, 11, 457, 500, 380, 445, 976, 385, 364, 6707, 6798, 13, 51368, 51368, 400, 370, 264, 787, 636, 291, 393, 483, 364, 6979, 14862, 2010, 307, 538, 10205, 364, 33283, 5308, 11, 597, 51677, 51677, 307, 9495, 490, 300, 6979, 14862, 10088, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.12285491398402623, "compression_ratio": 1.8793774319066148, "no_caption_prob": 5.1438324589980766e-05}, {"id": 374, "seek": 144102, "start": 1446.3799999999999, "end": 1448.5, "text": " fake it and pass in an auth token.", "tokens": [50364, 509, 500, 380, 528, 2618, 281, 312, 1075, 281, 445, 7690, 364, 6979, 14862, 365, 257, 6798, 281, 445, 50632, 50632, 7592, 309, 293, 1320, 294, 364, 6979, 14862, 13, 50738, 50738, 1743, 291, 434, 2139, 9214, 3587, 420, 291, 434, 406, 13, 50842, 50842, 759, 291, 434, 406, 9214, 3587, 11, 445, 312, 3245, 365, 385, 11, 291, 434, 406, 9214, 3587, 293, 286, 603, 51080, 51080, 718, 291, 2105, 437, 291, 393, 11, 406, 885, 9214, 3587, 11, 457, 500, 380, 445, 976, 385, 364, 6707, 6798, 13, 51368, 51368, 400, 370, 264, 787, 636, 291, 393, 483, 364, 6979, 14862, 2010, 307, 538, 10205, 364, 33283, 5308, 11, 597, 51677, 51677, 307, 9495, 490, 300, 6979, 14862, 10088, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.12285491398402623, "compression_ratio": 1.8793774319066148, "no_caption_prob": 5.1438324589980766e-05}, {"id": 375, "seek": 144102, "start": 1448.5, "end": 1450.58, "text": " Like you're either authenticated or you're not.", "tokens": [50364, 509, 500, 380, 528, 2618, 281, 312, 1075, 281, 445, 7690, 364, 6979, 14862, 365, 257, 6798, 281, 445, 50632, 50632, 7592, 309, 293, 1320, 294, 364, 6979, 14862, 13, 50738, 50738, 1743, 291, 434, 2139, 9214, 3587, 420, 291, 434, 406, 13, 50842, 50842, 759, 291, 434, 406, 9214, 3587, 11, 445, 312, 3245, 365, 385, 11, 291, 434, 406, 9214, 3587, 293, 286, 603, 51080, 51080, 718, 291, 2105, 437, 291, 393, 11, 406, 885, 9214, 3587, 11, 457, 500, 380, 445, 976, 385, 364, 6707, 6798, 13, 51368, 51368, 400, 370, 264, 787, 636, 291, 393, 483, 364, 6979, 14862, 2010, 307, 538, 10205, 364, 33283, 5308, 11, 597, 51677, 51677, 307, 9495, 490, 300, 6979, 14862, 10088, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.12285491398402623, "compression_ratio": 1.8793774319066148, "no_caption_prob": 5.1438324589980766e-05}, {"id": 376, "seek": 144102, "start": 1450.58, "end": 1455.34, "text": " If you're not authenticated, just be honest with me, you're not authenticated and I'll", "tokens": [50364, 509, 500, 380, 528, 2618, 281, 312, 1075, 281, 445, 7690, 364, 6979, 14862, 365, 257, 6798, 281, 445, 50632, 50632, 7592, 309, 293, 1320, 294, 364, 6979, 14862, 13, 50738, 50738, 1743, 291, 434, 2139, 9214, 3587, 420, 291, 434, 406, 13, 50842, 50842, 759, 291, 434, 406, 9214, 3587, 11, 445, 312, 3245, 365, 385, 11, 291, 434, 406, 9214, 3587, 293, 286, 603, 51080, 51080, 718, 291, 2105, 437, 291, 393, 11, 406, 885, 9214, 3587, 11, 457, 500, 380, 445, 976, 385, 364, 6707, 6798, 13, 51368, 51368, 400, 370, 264, 787, 636, 291, 393, 483, 364, 6979, 14862, 2010, 307, 538, 10205, 364, 33283, 5308, 11, 597, 51677, 51677, 307, 9495, 490, 300, 6979, 14862, 10088, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.12285491398402623, "compression_ratio": 1.8793774319066148, "no_caption_prob": 5.1438324589980766e-05}, {"id": 377, "seek": 144102, "start": 1455.34, "end": 1461.1, "text": " let you access what you can, not being authenticated, but don't just give me an empty string.", "tokens": [50364, 509, 500, 380, 528, 2618, 281, 312, 1075, 281, 445, 7690, 364, 6979, 14862, 365, 257, 6798, 281, 445, 50632, 50632, 7592, 309, 293, 1320, 294, 364, 6979, 14862, 13, 50738, 50738, 1743, 291, 434, 2139, 9214, 3587, 420, 291, 434, 406, 13, 50842, 50842, 759, 291, 434, 406, 9214, 3587, 11, 445, 312, 3245, 365, 385, 11, 291, 434, 406, 9214, 3587, 293, 286, 603, 51080, 51080, 718, 291, 2105, 437, 291, 393, 11, 406, 885, 9214, 3587, 11, 457, 500, 380, 445, 976, 385, 364, 6707, 6798, 13, 51368, 51368, 400, 370, 264, 787, 636, 291, 393, 483, 364, 6979, 14862, 2010, 307, 538, 10205, 364, 33283, 5308, 11, 597, 51677, 51677, 307, 9495, 490, 300, 6979, 14862, 10088, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.12285491398402623, "compression_ratio": 1.8793774319066148, "no_caption_prob": 5.1438324589980766e-05}, {"id": 378, "seek": 144102, "start": 1461.1, "end": 1467.28, "text": " And so the only way you can get an auth token type is by performing an HTTP request, which", "tokens": [50364, 509, 500, 380, 528, 2618, 281, 312, 1075, 281, 445, 7690, 364, 6979, 14862, 365, 257, 6798, 281, 445, 50632, 50632, 7592, 309, 293, 1320, 294, 364, 6979, 14862, 13, 50738, 50738, 1743, 291, 434, 2139, 9214, 3587, 420, 291, 434, 406, 13, 50842, 50842, 759, 291, 434, 406, 9214, 3587, 11, 445, 312, 3245, 365, 385, 11, 291, 434, 406, 9214, 3587, 293, 286, 603, 51080, 51080, 718, 291, 2105, 437, 291, 393, 11, 406, 885, 9214, 3587, 11, 457, 500, 380, 445, 976, 385, 364, 6707, 6798, 13, 51368, 51368, 400, 370, 264, 787, 636, 291, 393, 483, 364, 6979, 14862, 2010, 307, 538, 10205, 364, 33283, 5308, 11, 597, 51677, 51677, 307, 9495, 490, 300, 6979, 14862, 10088, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.12285491398402623, "compression_ratio": 1.8793774319066148, "no_caption_prob": 5.1438324589980766e-05}, {"id": 379, "seek": 144102, "start": 1467.28, "end": 1470.54, "text": " is exposed from that auth token module.", "tokens": [50364, 509, 500, 380, 528, 2618, 281, 312, 1075, 281, 445, 7690, 364, 6979, 14862, 365, 257, 6798, 281, 445, 50632, 50632, 7592, 309, 293, 1320, 294, 364, 6979, 14862, 13, 50738, 50738, 1743, 291, 434, 2139, 9214, 3587, 420, 291, 434, 406, 13, 50842, 50842, 759, 291, 434, 406, 9214, 3587, 11, 445, 312, 3245, 365, 385, 11, 291, 434, 406, 9214, 3587, 293, 286, 603, 51080, 51080, 718, 291, 2105, 437, 291, 393, 11, 406, 885, 9214, 3587, 11, 457, 500, 380, 445, 976, 385, 364, 6707, 6798, 13, 51368, 51368, 400, 370, 264, 787, 636, 291, 393, 483, 364, 6979, 14862, 2010, 307, 538, 10205, 364, 33283, 5308, 11, 597, 51677, 51677, 307, 9495, 490, 300, 6979, 14862, 10088, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.12285491398402623, "compression_ratio": 1.8793774319066148, "no_caption_prob": 5.1438324589980766e-05}, {"id": 380, "seek": 147054, "start": 1470.54, "end": 1471.54, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 381, "seek": 147054, "start": 1471.54, "end": 1476.22, "text": " And maybe that one needs to be configured, but just the function that will make that", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 382, "seek": 147054, "start": 1476.22, "end": 1479.1, "text": " HTTP request will take the needed parameters.", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 383, "seek": 147054, "start": 1479.1, "end": 1480.1, "text": " Right.", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 384, "seek": 147054, "start": 1480.1, "end": 1486.86, "text": " So for example, perhaps you inject the dependency from the outside of what is the base URL for", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 385, "seek": 147054, "start": 1486.86, "end": 1487.86, "text": " the API.", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 386, "seek": 147054, "start": 1487.86, "end": 1494.18, "text": " So if it's like a staging server or a dev server or a production server, you inject", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 387, "seek": 147054, "start": 1494.18, "end": 1495.18, "text": " that.", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 388, "seek": 147054, "start": 1495.18, "end": 1500.3799999999999, "text": " So those details are not coupled to your auth token module.", "tokens": [50364, 865, 13, 50414, 50414, 400, 1310, 300, 472, 2203, 281, 312, 30538, 11, 457, 445, 264, 2445, 300, 486, 652, 300, 50648, 50648, 33283, 5308, 486, 747, 264, 2978, 9834, 13, 50792, 50792, 1779, 13, 50842, 50842, 407, 337, 1365, 11, 4317, 291, 10711, 264, 33621, 490, 264, 2380, 295, 437, 307, 264, 3096, 12905, 337, 51180, 51180, 264, 9362, 13, 51230, 51230, 407, 498, 309, 311, 411, 257, 41085, 7154, 420, 257, 1905, 7154, 420, 257, 4265, 7154, 11, 291, 10711, 51546, 51546, 300, 13, 51596, 51596, 407, 729, 4365, 366, 406, 29482, 281, 428, 6979, 14862, 10088, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1418007337130033, "compression_ratio": 1.613821138211382, "no_caption_prob": 1.5206595890049357e-05}, {"id": 389, "seek": 150038, "start": 1500.38, "end": 1506.3400000000001, "text": " So I think that this is, I just want people to be aware that it's okay to have these different", "tokens": [50364, 407, 286, 519, 300, 341, 307, 11, 286, 445, 528, 561, 281, 312, 3650, 300, 309, 311, 1392, 281, 362, 613, 819, 50662, 50662, 3467, 1951, 257, 10088, 733, 295, 2647, 1214, 13, 50848, 50848, 467, 393, 767, 589, 1596, 14459, 3627, 293, 445, 360, 437, 309, 2516, 281, 2371, 428, 18491, 13, 51194, 51194, 663, 311, 264, 700, 293, 18864, 551, 13, 51298, 51298, 400, 1481, 1715, 486, 1524, 490, 12316, 729, 18491, 13, 51446, 51446, 865, 13, 51496, 51496, 286, 519, 300, 311, 257, 1168, 1009, 365, 562, 291, 2464, 364, 2699, 76, 2010, 307, 437, 18491, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.14297295542596614, "compression_ratio": 1.6434108527131783, "no_caption_prob": 1.3211302757554222e-05}, {"id": 390, "seek": 150038, "start": 1506.3400000000001, "end": 1510.0600000000002, "text": " types within a module kind of living together.", "tokens": [50364, 407, 286, 519, 300, 341, 307, 11, 286, 445, 528, 561, 281, 312, 3650, 300, 309, 311, 1392, 281, 362, 613, 819, 50662, 50662, 3467, 1951, 257, 10088, 733, 295, 2647, 1214, 13, 50848, 50848, 467, 393, 767, 589, 1596, 14459, 3627, 293, 445, 360, 437, 309, 2516, 281, 2371, 428, 18491, 13, 51194, 51194, 663, 311, 264, 700, 293, 18864, 551, 13, 51298, 51298, 400, 1481, 1715, 486, 1524, 490, 12316, 729, 18491, 13, 51446, 51446, 865, 13, 51496, 51496, 286, 519, 300, 311, 257, 1168, 1009, 365, 562, 291, 2464, 364, 2699, 76, 2010, 307, 437, 18491, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.14297295542596614, "compression_ratio": 1.6434108527131783, "no_caption_prob": 1.3211302757554222e-05}, {"id": 391, "seek": 150038, "start": 1510.0600000000002, "end": 1516.98, "text": " It can actually work quite elegantly and just do what it takes to protect your constraints.", "tokens": [50364, 407, 286, 519, 300, 341, 307, 11, 286, 445, 528, 561, 281, 312, 3650, 300, 309, 311, 1392, 281, 362, 613, 819, 50662, 50662, 3467, 1951, 257, 10088, 733, 295, 2647, 1214, 13, 50848, 50848, 467, 393, 767, 589, 1596, 14459, 3627, 293, 445, 360, 437, 309, 2516, 281, 2371, 428, 18491, 13, 51194, 51194, 663, 311, 264, 700, 293, 18864, 551, 13, 51298, 51298, 400, 1481, 1715, 486, 1524, 490, 12316, 729, 18491, 13, 51446, 51446, 865, 13, 51496, 51496, 286, 519, 300, 311, 257, 1168, 1009, 365, 562, 291, 2464, 364, 2699, 76, 2010, 307, 437, 18491, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.14297295542596614, "compression_ratio": 1.6434108527131783, "no_caption_prob": 1.3211302757554222e-05}, {"id": 392, "seek": 150038, "start": 1516.98, "end": 1519.0600000000002, "text": " That's the first and foremost thing.", "tokens": [50364, 407, 286, 519, 300, 341, 307, 11, 286, 445, 528, 561, 281, 312, 3650, 300, 309, 311, 1392, 281, 362, 613, 819, 50662, 50662, 3467, 1951, 257, 10088, 733, 295, 2647, 1214, 13, 50848, 50848, 467, 393, 767, 589, 1596, 14459, 3627, 293, 445, 360, 437, 309, 2516, 281, 2371, 428, 18491, 13, 51194, 51194, 663, 311, 264, 700, 293, 18864, 551, 13, 51298, 51298, 400, 1481, 1715, 486, 1524, 490, 12316, 729, 18491, 13, 51446, 51446, 865, 13, 51496, 51496, 286, 519, 300, 311, 257, 1168, 1009, 365, 562, 291, 2464, 364, 2699, 76, 2010, 307, 437, 18491, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.14297295542596614, "compression_ratio": 1.6434108527131783, "no_caption_prob": 1.3211302757554222e-05}, {"id": 393, "seek": 150038, "start": 1519.0600000000002, "end": 1522.0200000000002, "text": " And nice design will follow from protecting those constraints.", "tokens": [50364, 407, 286, 519, 300, 341, 307, 11, 286, 445, 528, 561, 281, 312, 3650, 300, 309, 311, 1392, 281, 362, 613, 819, 50662, 50662, 3467, 1951, 257, 10088, 733, 295, 2647, 1214, 13, 50848, 50848, 467, 393, 767, 589, 1596, 14459, 3627, 293, 445, 360, 437, 309, 2516, 281, 2371, 428, 18491, 13, 51194, 51194, 663, 311, 264, 700, 293, 18864, 551, 13, 51298, 51298, 400, 1481, 1715, 486, 1524, 490, 12316, 729, 18491, 13, 51446, 51446, 865, 13, 51496, 51496, 286, 519, 300, 311, 257, 1168, 1009, 365, 562, 291, 2464, 364, 2699, 76, 2010, 307, 437, 18491, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.14297295542596614, "compression_ratio": 1.6434108527131783, "no_caption_prob": 1.3211302757554222e-05}, {"id": 394, "seek": 150038, "start": 1522.0200000000002, "end": 1523.0200000000002, "text": " Yeah.", "tokens": [50364, 407, 286, 519, 300, 341, 307, 11, 286, 445, 528, 561, 281, 312, 3650, 300, 309, 311, 1392, 281, 362, 613, 819, 50662, 50662, 3467, 1951, 257, 10088, 733, 295, 2647, 1214, 13, 50848, 50848, 467, 393, 767, 589, 1596, 14459, 3627, 293, 445, 360, 437, 309, 2516, 281, 2371, 428, 18491, 13, 51194, 51194, 663, 311, 264, 700, 293, 18864, 551, 13, 51298, 51298, 400, 1481, 1715, 486, 1524, 490, 12316, 729, 18491, 13, 51446, 51446, 865, 13, 51496, 51496, 286, 519, 300, 311, 257, 1168, 1009, 365, 562, 291, 2464, 364, 2699, 76, 2010, 307, 437, 18491, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.14297295542596614, "compression_ratio": 1.6434108527131783, "no_caption_prob": 1.3211302757554222e-05}, {"id": 395, "seek": 150038, "start": 1523.0200000000002, "end": 1528.66, "text": " I think that's a question always with when you write an Elm type is what constraints", "tokens": [50364, 407, 286, 519, 300, 341, 307, 11, 286, 445, 528, 561, 281, 312, 3650, 300, 309, 311, 1392, 281, 362, 613, 819, 50662, 50662, 3467, 1951, 257, 10088, 733, 295, 2647, 1214, 13, 50848, 50848, 467, 393, 767, 589, 1596, 14459, 3627, 293, 445, 360, 437, 309, 2516, 281, 2371, 428, 18491, 13, 51194, 51194, 663, 311, 264, 700, 293, 18864, 551, 13, 51298, 51298, 400, 1481, 1715, 486, 1524, 490, 12316, 729, 18491, 13, 51446, 51446, 865, 13, 51496, 51496, 286, 519, 300, 311, 257, 1168, 1009, 365, 562, 291, 2464, 364, 2699, 76, 2010, 307, 437, 18491, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.14297295542596614, "compression_ratio": 1.6434108527131783, "no_caption_prob": 1.3211302757554222e-05}, {"id": 396, "seek": 152866, "start": 1528.66, "end": 1530.7, "text": " do I want?", "tokens": [50364, 360, 286, 528, 30, 50466, 50466, 407, 562, 291, 853, 281, 11, 562, 291, 722, 281, 17143, 484, 4365, 11, 437, 32567, 360, 291, 3624, 30, 50762, 50762, 7587, 13, 50812, 50812, 407, 286, 519, 300, 11, 286, 519, 300, 498, 2618, 2738, 281, 483, 1409, 9275, 341, 6532, 51042, 51042, 295, 1228, 42687, 3467, 11, 286, 519, 300, 264, 588, 700, 551, 281, 722, 884, 307, 281, 722, 365, 51412, 51412, 300, 12543, 295, 1953, 466, 264, 18491, 293, 767, 16821, 646, 490, 300, 754, 11, 51753, 51753, 437, 307, 264, 1154, 291, 528, 281, 5039, 30, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.14310712440341128, "compression_ratio": 1.718487394957983, "no_caption_prob": 2.8854045012849383e-05}, {"id": 397, "seek": 152866, "start": 1530.7, "end": 1536.6200000000001, "text": " So when you try to, when you start to leak out details, what guarantees do you lose?", "tokens": [50364, 360, 286, 528, 30, 50466, 50466, 407, 562, 291, 853, 281, 11, 562, 291, 722, 281, 17143, 484, 4365, 11, 437, 32567, 360, 291, 3624, 30, 50762, 50762, 7587, 13, 50812, 50812, 407, 286, 519, 300, 11, 286, 519, 300, 498, 2618, 2738, 281, 483, 1409, 9275, 341, 6532, 51042, 51042, 295, 1228, 42687, 3467, 11, 286, 519, 300, 264, 588, 700, 551, 281, 722, 884, 307, 281, 722, 365, 51412, 51412, 300, 12543, 295, 1953, 466, 264, 18491, 293, 767, 16821, 646, 490, 300, 754, 11, 51753, 51753, 437, 307, 264, 1154, 291, 528, 281, 5039, 30, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.14310712440341128, "compression_ratio": 1.718487394957983, "no_caption_prob": 2.8854045012849383e-05}, {"id": 398, "seek": 152866, "start": 1536.6200000000001, "end": 1537.6200000000001, "text": " Exactly.", "tokens": [50364, 360, 286, 528, 30, 50466, 50466, 407, 562, 291, 853, 281, 11, 562, 291, 722, 281, 17143, 484, 4365, 11, 437, 32567, 360, 291, 3624, 30, 50762, 50762, 7587, 13, 50812, 50812, 407, 286, 519, 300, 11, 286, 519, 300, 498, 2618, 2738, 281, 483, 1409, 9275, 341, 6532, 51042, 51042, 295, 1228, 42687, 3467, 11, 286, 519, 300, 264, 588, 700, 551, 281, 722, 884, 307, 281, 722, 365, 51412, 51412, 300, 12543, 295, 1953, 466, 264, 18491, 293, 767, 16821, 646, 490, 300, 754, 11, 51753, 51753, 437, 307, 264, 1154, 291, 528, 281, 5039, 30, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.14310712440341128, "compression_ratio": 1.718487394957983, "no_caption_prob": 2.8854045012849383e-05}, {"id": 399, "seek": 152866, "start": 1537.6200000000001, "end": 1542.22, "text": " So I think that, I think that if somebody wants to get started applying this technique", "tokens": [50364, 360, 286, 528, 30, 50466, 50466, 407, 562, 291, 853, 281, 11, 562, 291, 722, 281, 17143, 484, 4365, 11, 437, 32567, 360, 291, 3624, 30, 50762, 50762, 7587, 13, 50812, 50812, 407, 286, 519, 300, 11, 286, 519, 300, 498, 2618, 2738, 281, 483, 1409, 9275, 341, 6532, 51042, 51042, 295, 1228, 42687, 3467, 11, 286, 519, 300, 264, 588, 700, 551, 281, 722, 884, 307, 281, 722, 365, 51412, 51412, 300, 12543, 295, 1953, 466, 264, 18491, 293, 767, 16821, 646, 490, 300, 754, 11, 51753, 51753, 437, 307, 264, 1154, 291, 528, 281, 5039, 30, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.14310712440341128, "compression_ratio": 1.718487394957983, "no_caption_prob": 2.8854045012849383e-05}, {"id": 400, "seek": 152866, "start": 1542.22, "end": 1549.6200000000001, "text": " of using opaque types, I think that the very first thing to start doing is to start with", "tokens": [50364, 360, 286, 528, 30, 50466, 50466, 407, 562, 291, 853, 281, 11, 562, 291, 722, 281, 17143, 484, 4365, 11, 437, 32567, 360, 291, 3624, 30, 50762, 50762, 7587, 13, 50812, 50812, 407, 286, 519, 300, 11, 286, 519, 300, 498, 2618, 2738, 281, 483, 1409, 9275, 341, 6532, 51042, 51042, 295, 1228, 42687, 3467, 11, 286, 519, 300, 264, 588, 700, 551, 281, 722, 884, 307, 281, 722, 365, 51412, 51412, 300, 12543, 295, 1953, 466, 264, 18491, 293, 767, 16821, 646, 490, 300, 754, 11, 51753, 51753, 437, 307, 264, 1154, 291, 528, 281, 5039, 30, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.14310712440341128, "compression_ratio": 1.718487394957983, "no_caption_prob": 2.8854045012849383e-05}, {"id": 401, "seek": 152866, "start": 1549.6200000000001, "end": 1556.44, "text": " that mindset of thinking about the constraints and actually stepping back from that even,", "tokens": [50364, 360, 286, 528, 30, 50466, 50466, 407, 562, 291, 853, 281, 11, 562, 291, 722, 281, 17143, 484, 4365, 11, 437, 32567, 360, 291, 3624, 30, 50762, 50762, 7587, 13, 50812, 50812, 407, 286, 519, 300, 11, 286, 519, 300, 498, 2618, 2738, 281, 483, 1409, 9275, 341, 6532, 51042, 51042, 295, 1228, 42687, 3467, 11, 286, 519, 300, 264, 588, 700, 551, 281, 722, 884, 307, 281, 722, 365, 51412, 51412, 300, 12543, 295, 1953, 466, 264, 18491, 293, 767, 16821, 646, 490, 300, 754, 11, 51753, 51753, 437, 307, 264, 1154, 291, 528, 281, 5039, 30, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.14310712440341128, "compression_ratio": 1.718487394957983, "no_caption_prob": 2.8854045012849383e-05}, {"id": 402, "seek": 152866, "start": 1556.44, "end": 1558.1000000000001, "text": " what is the problem you want to solve?", "tokens": [50364, 360, 286, 528, 30, 50466, 50466, 407, 562, 291, 853, 281, 11, 562, 291, 722, 281, 17143, 484, 4365, 11, 437, 32567, 360, 291, 3624, 30, 50762, 50762, 7587, 13, 50812, 50812, 407, 286, 519, 300, 11, 286, 519, 300, 498, 2618, 2738, 281, 483, 1409, 9275, 341, 6532, 51042, 51042, 295, 1228, 42687, 3467, 11, 286, 519, 300, 264, 588, 700, 551, 281, 722, 884, 307, 281, 722, 365, 51412, 51412, 300, 12543, 295, 1953, 466, 264, 18491, 293, 767, 16821, 646, 490, 300, 754, 11, 51753, 51753, 437, 307, 264, 1154, 291, 528, 281, 5039, 30, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.14310712440341128, "compression_ratio": 1.718487394957983, "no_caption_prob": 2.8854045012849383e-05}, {"id": 403, "seek": 155810, "start": 1558.1, "end": 1559.1, "text": " Exactly.", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 404, "seek": 155810, "start": 1559.1, "end": 1564.4199999999998, "text": " And how could a type or an API and hiding some of those types in an opaque module, in", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 405, "seek": 155810, "start": 1564.4199999999998, "end": 1569.34, "text": " an opaque type, how would that help you enforce those constraints or solve that problem?", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 406, "seek": 155810, "start": 1569.34, "end": 1570.74, "text": " Yeah.", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 407, "seek": 155810, "start": 1570.74, "end": 1575.78, "text": " So any parting wisdom on how people can get started using opaque types?", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 408, "seek": 155810, "start": 1575.78, "end": 1576.78, "text": " Yeah.", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 409, "seek": 155810, "start": 1576.78, "end": 1581.02, "text": " I've got one very good piece of advice.", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 410, "seek": 155810, "start": 1581.02, "end": 1586.54, "text": " Put your type into a separate module and make it opaque.", "tokens": [50364, 7587, 13, 50414, 50414, 400, 577, 727, 257, 2010, 420, 364, 9362, 293, 10596, 512, 295, 729, 3467, 294, 364, 42687, 10088, 11, 294, 50680, 50680, 364, 42687, 2010, 11, 577, 576, 300, 854, 291, 24825, 729, 18491, 420, 5039, 300, 1154, 30, 50926, 50926, 865, 13, 50996, 50996, 407, 604, 46607, 10712, 322, 577, 561, 393, 483, 1409, 1228, 42687, 3467, 30, 51248, 51248, 865, 13, 51298, 51298, 286, 600, 658, 472, 588, 665, 2522, 295, 5192, 13, 51510, 51510, 4935, 428, 2010, 666, 257, 4994, 10088, 293, 652, 309, 42687, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.20383465167173406, "compression_ratio": 1.60352422907489, "no_caption_prob": 1.7330331729681347e-06}, {"id": 411, "seek": 158654, "start": 1586.54, "end": 1588.3, "text": " There you go.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 412, "seek": 158654, "start": 1588.3, "end": 1589.3, "text": " Just do it.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 413, "seek": 158654, "start": 1589.3, "end": 1591.94, "text": " And you can, you can take an existing module.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 414, "seek": 158654, "start": 1591.94, "end": 1599.06, "text": " Let's say that you've taken, you've had a money module that exposed the constructor.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 415, "seek": 158654, "start": 1599.06, "end": 1605.34, "text": " Well the good news is with Elm, I don't know if you know this, but if you start breaking", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 416, "seek": 158654, "start": 1605.34, "end": 1607.74, "text": " things, then the compiler will tell you what you broke.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 417, "seek": 158654, "start": 1607.74, "end": 1608.74, "text": " Is that true?", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 418, "seek": 158654, "start": 1608.74, "end": 1609.74, "text": " Yeah.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 419, "seek": 158654, "start": 1609.74, "end": 1611.02, "text": " It's a pretty cool feature.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 420, "seek": 158654, "start": 1611.02, "end": 1612.34, "text": " It's like a linter or something.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 421, "seek": 158654, "start": 1612.34, "end": 1613.34, "text": " It's really powerful.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 422, "seek": 158654, "start": 1613.34, "end": 1614.34, "text": " Oh, nice.", "tokens": [50364, 821, 291, 352, 13, 50452, 50452, 1449, 360, 309, 13, 50502, 50502, 400, 291, 393, 11, 291, 393, 747, 364, 6741, 10088, 13, 50634, 50634, 961, 311, 584, 300, 291, 600, 2726, 11, 291, 600, 632, 257, 1460, 10088, 300, 9495, 264, 47479, 13, 50990, 50990, 1042, 264, 665, 2583, 307, 365, 2699, 76, 11, 286, 500, 380, 458, 498, 291, 458, 341, 11, 457, 498, 291, 722, 7697, 51304, 51304, 721, 11, 550, 264, 31958, 486, 980, 291, 437, 291, 6902, 13, 51424, 51424, 1119, 300, 2074, 30, 51474, 51474, 865, 13, 51524, 51524, 467, 311, 257, 1238, 1627, 4111, 13, 51588, 51588, 467, 311, 411, 257, 287, 5106, 420, 746, 13, 51654, 51654, 467, 311, 534, 4005, 13, 51704, 51704, 876, 11, 1481, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.13098655113807092, "compression_ratio": 1.6235294117647059, "no_caption_prob": 4.264575181878172e-05}, {"id": 423, "seek": 161434, "start": 1614.34, "end": 1624.82, "text": " So if you want to get started, a good first step is to take a type, maybe it's like a", "tokens": [50364, 407, 498, 291, 528, 281, 483, 1409, 11, 257, 665, 700, 1823, 307, 281, 747, 257, 2010, 11, 1310, 309, 311, 411, 257, 50888, 50888, 1606, 4924, 2010, 11, 411, 1460, 420, 746, 300, 311, 4965, 281, 428, 9274, 13, 51140, 51140, 2704, 309, 311, 746, 291, 600, 668, 1419, 15120, 294, 341, 1859, 13, 51306, 51306, 286, 632, 364, 1365, 294, 2699, 76, 21884, 13695, 294, 264, 19265, 3089, 337, 264, 12855, 40, 689, 286, 8460, 264, 2699, 76, 51672, 51672, 21884, 13695, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11721631156073677, "compression_ratio": 1.570048309178744, "no_caption_prob": 7.030695996945724e-05}, {"id": 424, "seek": 161434, "start": 1624.82, "end": 1629.86, "text": " business critical type, like money or something that's core to your domain.", "tokens": [50364, 407, 498, 291, 528, 281, 483, 1409, 11, 257, 665, 700, 1823, 307, 281, 747, 257, 2010, 11, 1310, 309, 311, 411, 257, 50888, 50888, 1606, 4924, 2010, 11, 411, 1460, 420, 746, 300, 311, 4965, 281, 428, 9274, 13, 51140, 51140, 2704, 309, 311, 746, 291, 600, 668, 1419, 15120, 294, 341, 1859, 13, 51306, 51306, 286, 632, 364, 1365, 294, 2699, 76, 21884, 13695, 294, 264, 19265, 3089, 337, 264, 12855, 40, 689, 286, 8460, 264, 2699, 76, 51672, 51672, 21884, 13695, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11721631156073677, "compression_ratio": 1.570048309178744, "no_caption_prob": 7.030695996945724e-05}, {"id": 425, "seek": 161434, "start": 1629.86, "end": 1633.1799999999998, "text": " Maybe it's something you've been having bugs in this area.", "tokens": [50364, 407, 498, 291, 528, 281, 483, 1409, 11, 257, 665, 700, 1823, 307, 281, 747, 257, 2010, 11, 1310, 309, 311, 411, 257, 50888, 50888, 1606, 4924, 2010, 11, 411, 1460, 420, 746, 300, 311, 4965, 281, 428, 9274, 13, 51140, 51140, 2704, 309, 311, 746, 291, 600, 668, 1419, 15120, 294, 341, 1859, 13, 51306, 51306, 286, 632, 364, 1365, 294, 2699, 76, 21884, 13695, 294, 264, 19265, 3089, 337, 264, 12855, 40, 689, 286, 8460, 264, 2699, 76, 51672, 51672, 21884, 13695, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11721631156073677, "compression_ratio": 1.570048309178744, "no_caption_prob": 7.030695996945724e-05}, {"id": 426, "seek": 161434, "start": 1633.1799999999998, "end": 1640.5, "text": " I had an example in Elm GraphQL in the generator code for the CLI where I generate the Elm", "tokens": [50364, 407, 498, 291, 528, 281, 483, 1409, 11, 257, 665, 700, 1823, 307, 281, 747, 257, 2010, 11, 1310, 309, 311, 411, 257, 50888, 50888, 1606, 4924, 2010, 11, 411, 1460, 420, 746, 300, 311, 4965, 281, 428, 9274, 13, 51140, 51140, 2704, 309, 311, 746, 291, 600, 668, 1419, 15120, 294, 341, 1859, 13, 51306, 51306, 286, 632, 364, 1365, 294, 2699, 76, 21884, 13695, 294, 264, 19265, 3089, 337, 264, 12855, 40, 689, 286, 8460, 264, 2699, 76, 51672, 51672, 21884, 13695, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11721631156073677, "compression_ratio": 1.570048309178744, "no_caption_prob": 7.030695996945724e-05}, {"id": 427, "seek": 161434, "start": 1640.5, "end": 1641.9399999999998, "text": " GraphQL code.", "tokens": [50364, 407, 498, 291, 528, 281, 483, 1409, 11, 257, 665, 700, 1823, 307, 281, 747, 257, 2010, 11, 1310, 309, 311, 411, 257, 50888, 50888, 1606, 4924, 2010, 11, 411, 1460, 420, 746, 300, 311, 4965, 281, 428, 9274, 13, 51140, 51140, 2704, 309, 311, 746, 291, 600, 668, 1419, 15120, 294, 341, 1859, 13, 51306, 51306, 286, 632, 364, 1365, 294, 2699, 76, 21884, 13695, 294, 264, 19265, 3089, 337, 264, 12855, 40, 689, 286, 8460, 264, 2699, 76, 51672, 51672, 21884, 13695, 3089, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.11721631156073677, "compression_ratio": 1.570048309178744, "no_caption_prob": 7.030695996945724e-05}, {"id": 428, "seek": 164194, "start": 1641.94, "end": 1650.02, "text": " I had some bugs that I, bugs kept coming up around the way I was normalizing values where", "tokens": [50364, 286, 632, 512, 15120, 300, 286, 11, 15120, 4305, 1348, 493, 926, 264, 636, 286, 390, 2710, 3319, 4190, 689, 50768, 50768, 294, 512, 3331, 286, 643, 281, 2710, 1125, 746, 281, 312, 257, 7363, 2699, 76, 1315, 370, 286, 393, 362, 364, 2699, 76, 51084, 51084, 2445, 300, 311, 2361, 322, 512, 2158, 490, 257, 21884, 13695, 34078, 13, 51374, 51374, 407, 2171, 286, 643, 281, 2710, 1125, 309, 11, 457, 2171, 286, 643, 281, 764, 264, 3539, 1315, 382, 1400, 382, 264, 51656, 51656, 21884, 13695, 34078, 307, 5922, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.08931689461072286, "compression_ratio": 1.7560975609756098, "no_caption_prob": 8.397939382120967e-06}, {"id": 429, "seek": 164194, "start": 1650.02, "end": 1656.3400000000001, "text": " in some cases I need to normalize something to be a valid Elm name so I can have an Elm", "tokens": [50364, 286, 632, 512, 15120, 300, 286, 11, 15120, 4305, 1348, 493, 926, 264, 636, 286, 390, 2710, 3319, 4190, 689, 50768, 50768, 294, 512, 3331, 286, 643, 281, 2710, 1125, 746, 281, 312, 257, 7363, 2699, 76, 1315, 370, 286, 393, 362, 364, 2699, 76, 51084, 51084, 2445, 300, 311, 2361, 322, 512, 2158, 490, 257, 21884, 13695, 34078, 13, 51374, 51374, 407, 2171, 286, 643, 281, 2710, 1125, 309, 11, 457, 2171, 286, 643, 281, 764, 264, 3539, 1315, 382, 1400, 382, 264, 51656, 51656, 21884, 13695, 34078, 307, 5922, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.08931689461072286, "compression_ratio": 1.7560975609756098, "no_caption_prob": 8.397939382120967e-06}, {"id": 430, "seek": 164194, "start": 1656.3400000000001, "end": 1662.14, "text": " function that's based on some value from a GraphQL schema.", "tokens": [50364, 286, 632, 512, 15120, 300, 286, 11, 15120, 4305, 1348, 493, 926, 264, 636, 286, 390, 2710, 3319, 4190, 689, 50768, 50768, 294, 512, 3331, 286, 643, 281, 2710, 1125, 746, 281, 312, 257, 7363, 2699, 76, 1315, 370, 286, 393, 362, 364, 2699, 76, 51084, 51084, 2445, 300, 311, 2361, 322, 512, 2158, 490, 257, 21884, 13695, 34078, 13, 51374, 51374, 407, 2171, 286, 643, 281, 2710, 1125, 309, 11, 457, 2171, 286, 643, 281, 764, 264, 3539, 1315, 382, 1400, 382, 264, 51656, 51656, 21884, 13695, 34078, 307, 5922, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.08931689461072286, "compression_ratio": 1.7560975609756098, "no_caption_prob": 8.397939382120967e-06}, {"id": 431, "seek": 164194, "start": 1662.14, "end": 1667.78, "text": " So sometimes I need to normalize it, but sometimes I need to use the actual name as far as the", "tokens": [50364, 286, 632, 512, 15120, 300, 286, 11, 15120, 4305, 1348, 493, 926, 264, 636, 286, 390, 2710, 3319, 4190, 689, 50768, 50768, 294, 512, 3331, 286, 643, 281, 2710, 1125, 746, 281, 312, 257, 7363, 2699, 76, 1315, 370, 286, 393, 362, 364, 2699, 76, 51084, 51084, 2445, 300, 311, 2361, 322, 512, 2158, 490, 257, 21884, 13695, 34078, 13, 51374, 51374, 407, 2171, 286, 643, 281, 2710, 1125, 309, 11, 457, 2171, 286, 643, 281, 764, 264, 3539, 1315, 382, 1400, 382, 264, 51656, 51656, 21884, 13695, 34078, 307, 5922, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.08931689461072286, "compression_ratio": 1.7560975609756098, "no_caption_prob": 8.397939382120967e-06}, {"id": 432, "seek": 164194, "start": 1667.78, "end": 1669.3, "text": " GraphQL schema is concerned.", "tokens": [50364, 286, 632, 512, 15120, 300, 286, 11, 15120, 4305, 1348, 493, 926, 264, 636, 286, 390, 2710, 3319, 4190, 689, 50768, 50768, 294, 512, 3331, 286, 643, 281, 2710, 1125, 746, 281, 312, 257, 7363, 2699, 76, 1315, 370, 286, 393, 362, 364, 2699, 76, 51084, 51084, 2445, 300, 311, 2361, 322, 512, 2158, 490, 257, 21884, 13695, 34078, 13, 51374, 51374, 407, 2171, 286, 643, 281, 2710, 1125, 309, 11, 457, 2171, 286, 643, 281, 764, 264, 3539, 1315, 382, 1400, 382, 264, 51656, 51656, 21884, 13695, 34078, 307, 5922, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.08931689461072286, "compression_ratio": 1.7560975609756098, "no_caption_prob": 8.397939382120967e-06}, {"id": 433, "seek": 166930, "start": 1669.3, "end": 1673.6599999999999, "text": " For example, if I'm performing the request, I need to use the name GraphQL knows, the", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 434, "seek": 166930, "start": 1673.6599999999999, "end": 1675.18, "text": " unnormalized name.", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 435, "seek": 166930, "start": 1675.18, "end": 1679.54, "text": " If I'm generating a function or a type, I need to normalize it according to certain", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 436, "seek": 166930, "start": 1679.54, "end": 1680.78, "text": " rules.", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 437, "seek": 166930, "start": 1680.78, "end": 1686.02, "text": " So I had bugs coming up in this area a few times and I'm like, you know what?", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 438, "seek": 166930, "start": 1686.02, "end": 1692.62, "text": " I need to use the type system and module design to protect these constraints.", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 439, "seek": 166930, "start": 1692.62, "end": 1696.02, "text": " Because in both cases you were using strings, I'm guessing.", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 440, "seek": 166930, "start": 1696.02, "end": 1697.02, "text": " Exactly.", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 441, "seek": 166930, "start": 1697.02, "end": 1698.3, "text": " The strings were getting passed down.", "tokens": [50364, 1171, 1365, 11, 498, 286, 478, 10205, 264, 5308, 11, 286, 643, 281, 764, 264, 1315, 21884, 13695, 3255, 11, 264, 50582, 50582, 517, 23157, 1602, 1315, 13, 50658, 50658, 759, 286, 478, 17746, 257, 2445, 420, 257, 2010, 11, 286, 643, 281, 2710, 1125, 309, 4650, 281, 1629, 50876, 50876, 4474, 13, 50938, 50938, 407, 286, 632, 15120, 1348, 493, 294, 341, 1859, 257, 1326, 1413, 293, 286, 478, 411, 11, 291, 458, 437, 30, 51200, 51200, 286, 643, 281, 764, 264, 2010, 1185, 293, 10088, 1715, 281, 2371, 613, 18491, 13, 51530, 51530, 1436, 294, 1293, 3331, 291, 645, 1228, 13985, 11, 286, 478, 17939, 13, 51700, 51700, 7587, 13, 51750, 51750, 440, 13985, 645, 1242, 4678, 760, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1624903564453125, "compression_ratio": 1.6474820143884892, "no_caption_prob": 1.4063884009374306e-05}, {"id": 442, "seek": 169830, "start": 1698.3, "end": 1701.82, "text": " Exactly, so I just wrapped it in a custom type.", "tokens": [50364, 7587, 11, 370, 286, 445, 14226, 309, 294, 257, 2375, 2010, 13, 50540, 50540, 286, 1027, 300, 2375, 2010, 7633, 294, 257, 10088, 370, 309, 311, 257, 4551, 47479, 370, 309, 311, 364, 42687, 50794, 50794, 2010, 13, 50872, 50872, 509, 458, 11, 286, 519, 286, 1219, 309, 411, 257, 37755, 269, 1937, 1315, 13, 51040, 51040, 407, 550, 286, 458, 341, 8855, 257, 37755, 269, 1937, 1315, 293, 286, 393, 483, 11, 286, 632, 1936, 257, 483, 391, 51412, 51412, 300, 4045, 385, 281, 2139, 483, 264, 8936, 517, 23157, 1602, 2158, 420, 257, 7363, 2699, 76, 45690, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.105430740576524, "compression_ratio": 1.6387665198237886, "no_caption_prob": 2.1112213289598003e-05}, {"id": 443, "seek": 169830, "start": 1701.82, "end": 1706.8999999999999, "text": " I made that custom type hidden in a module so it's a private constructor so it's an opaque", "tokens": [50364, 7587, 11, 370, 286, 445, 14226, 309, 294, 257, 2375, 2010, 13, 50540, 50540, 286, 1027, 300, 2375, 2010, 7633, 294, 257, 10088, 370, 309, 311, 257, 4551, 47479, 370, 309, 311, 364, 42687, 50794, 50794, 2010, 13, 50872, 50872, 509, 458, 11, 286, 519, 286, 1219, 309, 411, 257, 37755, 269, 1937, 1315, 13, 51040, 51040, 407, 550, 286, 458, 341, 8855, 257, 37755, 269, 1937, 1315, 293, 286, 393, 483, 11, 286, 632, 1936, 257, 483, 391, 51412, 51412, 300, 4045, 385, 281, 2139, 483, 264, 8936, 517, 23157, 1602, 2158, 420, 257, 7363, 2699, 76, 45690, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.105430740576524, "compression_ratio": 1.6387665198237886, "no_caption_prob": 2.1112213289598003e-05}, {"id": 444, "seek": 169830, "start": 1706.8999999999999, "end": 1708.46, "text": " type.", "tokens": [50364, 7587, 11, 370, 286, 445, 14226, 309, 294, 257, 2375, 2010, 13, 50540, 50540, 286, 1027, 300, 2375, 2010, 7633, 294, 257, 10088, 370, 309, 311, 257, 4551, 47479, 370, 309, 311, 364, 42687, 50794, 50794, 2010, 13, 50872, 50872, 509, 458, 11, 286, 519, 286, 1219, 309, 411, 257, 37755, 269, 1937, 1315, 13, 51040, 51040, 407, 550, 286, 458, 341, 8855, 257, 37755, 269, 1937, 1315, 293, 286, 393, 483, 11, 286, 632, 1936, 257, 483, 391, 51412, 51412, 300, 4045, 385, 281, 2139, 483, 264, 8936, 517, 23157, 1602, 2158, 420, 257, 7363, 2699, 76, 45690, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.105430740576524, "compression_ratio": 1.6387665198237886, "no_caption_prob": 2.1112213289598003e-05}, {"id": 445, "seek": 169830, "start": 1708.46, "end": 1711.82, "text": " You know, I think I called it like a camel cased name.", "tokens": [50364, 7587, 11, 370, 286, 445, 14226, 309, 294, 257, 2375, 2010, 13, 50540, 50540, 286, 1027, 300, 2375, 2010, 7633, 294, 257, 10088, 370, 309, 311, 257, 4551, 47479, 370, 309, 311, 364, 42687, 50794, 50794, 2010, 13, 50872, 50872, 509, 458, 11, 286, 519, 286, 1219, 309, 411, 257, 37755, 269, 1937, 1315, 13, 51040, 51040, 407, 550, 286, 458, 341, 8855, 257, 37755, 269, 1937, 1315, 293, 286, 393, 483, 11, 286, 632, 1936, 257, 483, 391, 51412, 51412, 300, 4045, 385, 281, 2139, 483, 264, 8936, 517, 23157, 1602, 2158, 420, 257, 7363, 2699, 76, 45690, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.105430740576524, "compression_ratio": 1.6387665198237886, "no_caption_prob": 2.1112213289598003e-05}, {"id": 446, "seek": 169830, "start": 1711.82, "end": 1719.26, "text": " So then I know this represents a camel cased name and I can get, I had basically a getter", "tokens": [50364, 7587, 11, 370, 286, 445, 14226, 309, 294, 257, 2375, 2010, 13, 50540, 50540, 286, 1027, 300, 2375, 2010, 7633, 294, 257, 10088, 370, 309, 311, 257, 4551, 47479, 370, 309, 311, 364, 42687, 50794, 50794, 2010, 13, 50872, 50872, 509, 458, 11, 286, 519, 286, 1219, 309, 411, 257, 37755, 269, 1937, 1315, 13, 51040, 51040, 407, 550, 286, 458, 341, 8855, 257, 37755, 269, 1937, 1315, 293, 286, 393, 483, 11, 286, 632, 1936, 257, 483, 391, 51412, 51412, 300, 4045, 385, 281, 2139, 483, 264, 8936, 517, 23157, 1602, 2158, 420, 257, 7363, 2699, 76, 45690, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.105430740576524, "compression_ratio": 1.6387665198237886, "no_caption_prob": 2.1112213289598003e-05}, {"id": 447, "seek": 169830, "start": 1719.26, "end": 1727.8999999999999, "text": " that allows me to either get the raw unnormalized value or a valid Elm identifier.", "tokens": [50364, 7587, 11, 370, 286, 445, 14226, 309, 294, 257, 2375, 2010, 13, 50540, 50540, 286, 1027, 300, 2375, 2010, 7633, 294, 257, 10088, 370, 309, 311, 257, 4551, 47479, 370, 309, 311, 364, 42687, 50794, 50794, 2010, 13, 50872, 50872, 509, 458, 11, 286, 519, 286, 1219, 309, 411, 257, 37755, 269, 1937, 1315, 13, 51040, 51040, 407, 550, 286, 458, 341, 8855, 257, 37755, 269, 1937, 1315, 293, 286, 393, 483, 11, 286, 632, 1936, 257, 483, 391, 51412, 51412, 300, 4045, 385, 281, 2139, 483, 264, 8936, 517, 23157, 1602, 2158, 420, 257, 7363, 2699, 76, 45690, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.105430740576524, "compression_ratio": 1.6387665198237886, "no_caption_prob": 2.1112213289598003e-05}, {"id": 448, "seek": 172790, "start": 1727.9, "end": 1735.5400000000002, "text": " And then what happened is I, so this is a trick that I like to use is to, you want to", "tokens": [50364, 400, 550, 437, 2011, 307, 286, 11, 370, 341, 307, 257, 4282, 300, 286, 411, 281, 764, 307, 281, 11, 291, 528, 281, 50746, 50746, 1797, 322, 281, 264, 2010, 300, 8855, 411, 264, 6075, 372, 1254, 293, 264, 18491, 382, 938, 382, 51084, 51084, 1944, 13, 51134, 51134, 865, 13, 51184, 51184, 407, 286, 519, 295, 341, 382, 7019, 2440, 11, 14853, 4007, 3469, 13, 51380, 51380, 286, 3986, 13, 51452, 51452, 407, 382, 2321, 382, 746, 1487, 294, 11, 291, 528, 281, 7019, 264, 2010, 294, 341, 2010, 300, 8855, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17020122210184732, "compression_ratio": 1.7040816326530612, "no_caption_prob": 1.6187310393434018e-05}, {"id": 449, "seek": 172790, "start": 1735.5400000000002, "end": 1742.3000000000002, "text": " hold on to the type that represents like the purest form and the constraints as long as", "tokens": [50364, 400, 550, 437, 2011, 307, 286, 11, 370, 341, 307, 257, 4282, 300, 286, 411, 281, 764, 307, 281, 11, 291, 528, 281, 50746, 50746, 1797, 322, 281, 264, 2010, 300, 8855, 411, 264, 6075, 372, 1254, 293, 264, 18491, 382, 938, 382, 51084, 51084, 1944, 13, 51134, 51134, 865, 13, 51184, 51184, 407, 286, 519, 295, 341, 382, 7019, 2440, 11, 14853, 4007, 3469, 13, 51380, 51380, 286, 3986, 13, 51452, 51452, 407, 382, 2321, 382, 746, 1487, 294, 11, 291, 528, 281, 7019, 264, 2010, 294, 341, 2010, 300, 8855, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17020122210184732, "compression_ratio": 1.7040816326530612, "no_caption_prob": 1.6187310393434018e-05}, {"id": 450, "seek": 172790, "start": 1742.3000000000002, "end": 1743.3000000000002, "text": " possible.", "tokens": [50364, 400, 550, 437, 2011, 307, 286, 11, 370, 341, 307, 257, 4282, 300, 286, 411, 281, 764, 307, 281, 11, 291, 528, 281, 50746, 50746, 1797, 322, 281, 264, 2010, 300, 8855, 411, 264, 6075, 372, 1254, 293, 264, 18491, 382, 938, 382, 51084, 51084, 1944, 13, 51134, 51134, 865, 13, 51184, 51184, 407, 286, 519, 295, 341, 382, 7019, 2440, 11, 14853, 4007, 3469, 13, 51380, 51380, 286, 3986, 13, 51452, 51452, 407, 382, 2321, 382, 746, 1487, 294, 11, 291, 528, 281, 7019, 264, 2010, 294, 341, 2010, 300, 8855, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17020122210184732, "compression_ratio": 1.7040816326530612, "no_caption_prob": 1.6187310393434018e-05}, {"id": 451, "seek": 172790, "start": 1743.3000000000002, "end": 1744.3000000000002, "text": " Yeah.", "tokens": [50364, 400, 550, 437, 2011, 307, 286, 11, 370, 341, 307, 257, 4282, 300, 286, 411, 281, 764, 307, 281, 11, 291, 528, 281, 50746, 50746, 1797, 322, 281, 264, 2010, 300, 8855, 411, 264, 6075, 372, 1254, 293, 264, 18491, 382, 938, 382, 51084, 51084, 1944, 13, 51134, 51134, 865, 13, 51184, 51184, 407, 286, 519, 295, 341, 382, 7019, 2440, 11, 14853, 4007, 3469, 13, 51380, 51380, 286, 3986, 13, 51452, 51452, 407, 382, 2321, 382, 746, 1487, 294, 11, 291, 528, 281, 7019, 264, 2010, 294, 341, 2010, 300, 8855, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17020122210184732, "compression_ratio": 1.7040816326530612, "no_caption_prob": 1.6187310393434018e-05}, {"id": 452, "seek": 172790, "start": 1744.3000000000002, "end": 1748.22, "text": " So I think of this as wrap early, unwrap late.", "tokens": [50364, 400, 550, 437, 2011, 307, 286, 11, 370, 341, 307, 257, 4282, 300, 286, 411, 281, 764, 307, 281, 11, 291, 528, 281, 50746, 50746, 1797, 322, 281, 264, 2010, 300, 8855, 411, 264, 6075, 372, 1254, 293, 264, 18491, 382, 938, 382, 51084, 51084, 1944, 13, 51134, 51134, 865, 13, 51184, 51184, 407, 286, 519, 295, 341, 382, 7019, 2440, 11, 14853, 4007, 3469, 13, 51380, 51380, 286, 3986, 13, 51452, 51452, 407, 382, 2321, 382, 746, 1487, 294, 11, 291, 528, 281, 7019, 264, 2010, 294, 341, 2010, 300, 8855, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17020122210184732, "compression_ratio": 1.7040816326530612, "no_caption_prob": 1.6187310393434018e-05}, {"id": 453, "seek": 172790, "start": 1748.22, "end": 1749.66, "text": " I agree.", "tokens": [50364, 400, 550, 437, 2011, 307, 286, 11, 370, 341, 307, 257, 4282, 300, 286, 411, 281, 764, 307, 281, 11, 291, 528, 281, 50746, 50746, 1797, 322, 281, 264, 2010, 300, 8855, 411, 264, 6075, 372, 1254, 293, 264, 18491, 382, 938, 382, 51084, 51084, 1944, 13, 51134, 51134, 865, 13, 51184, 51184, 407, 286, 519, 295, 341, 382, 7019, 2440, 11, 14853, 4007, 3469, 13, 51380, 51380, 286, 3986, 13, 51452, 51452, 407, 382, 2321, 382, 746, 1487, 294, 11, 291, 528, 281, 7019, 264, 2010, 294, 341, 2010, 300, 8855, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17020122210184732, "compression_ratio": 1.7040816326530612, "no_caption_prob": 1.6187310393434018e-05}, {"id": 454, "seek": 172790, "start": 1749.66, "end": 1757.4, "text": " So as soon as something comes in, you want to wrap the type in this type that represents", "tokens": [50364, 400, 550, 437, 2011, 307, 286, 11, 370, 341, 307, 257, 4282, 300, 286, 411, 281, 764, 307, 281, 11, 291, 528, 281, 50746, 50746, 1797, 322, 281, 264, 2010, 300, 8855, 411, 264, 6075, 372, 1254, 293, 264, 18491, 382, 938, 382, 51084, 51084, 1944, 13, 51134, 51134, 865, 13, 51184, 51184, 407, 286, 519, 295, 341, 382, 7019, 2440, 11, 14853, 4007, 3469, 13, 51380, 51380, 286, 3986, 13, 51452, 51452, 407, 382, 2321, 382, 746, 1487, 294, 11, 291, 528, 281, 7019, 264, 2010, 294, 341, 2010, 300, 8855, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17020122210184732, "compression_ratio": 1.7040816326530612, "no_caption_prob": 1.6187310393434018e-05}, {"id": 455, "seek": 175740, "start": 1757.4, "end": 1761.74, "text": " something or as we kind of talked about, in some cases it may perform a validation and", "tokens": [50364, 746, 420, 382, 321, 733, 295, 2825, 466, 11, 294, 512, 3331, 309, 815, 2042, 257, 24071, 293, 50581, 50581, 309, 815, 4188, 379, 2736, 300, 498, 300, 24071, 49263, 13, 50849, 50849, 1610, 294, 512, 3331, 411, 364, 6979, 14862, 11, 291, 362, 364, 33283, 5308, 293, 264, 787, 636, 281, 483, 300, 51235, 51235, 6979, 14862, 2010, 307, 807, 264, 33283, 5308, 2445, 300, 311, 9495, 294, 300, 10088, 13, 51560, 51560, 400, 370, 291, 528, 412, 264, 20573, 1944, 1623, 11, 291, 528, 746, 281, 362, 341, 2010, 597, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.0802970826625824, "compression_ratio": 1.7291666666666667, "no_caption_prob": 3.763590575545095e-05}, {"id": 456, "seek": 175740, "start": 1761.74, "end": 1767.1000000000001, "text": " it may conditionally return that if that validation succeeds.", "tokens": [50364, 746, 420, 382, 321, 733, 295, 2825, 466, 11, 294, 512, 3331, 309, 815, 2042, 257, 24071, 293, 50581, 50581, 309, 815, 4188, 379, 2736, 300, 498, 300, 24071, 49263, 13, 50849, 50849, 1610, 294, 512, 3331, 411, 364, 6979, 14862, 11, 291, 362, 364, 33283, 5308, 293, 264, 787, 636, 281, 483, 300, 51235, 51235, 6979, 14862, 2010, 307, 807, 264, 33283, 5308, 2445, 300, 311, 9495, 294, 300, 10088, 13, 51560, 51560, 400, 370, 291, 528, 412, 264, 20573, 1944, 1623, 11, 291, 528, 746, 281, 362, 341, 2010, 597, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.0802970826625824, "compression_ratio": 1.7291666666666667, "no_caption_prob": 3.763590575545095e-05}, {"id": 457, "seek": 175740, "start": 1767.1000000000001, "end": 1774.8200000000002, "text": " Or in some cases like an auth token, you have an HTTP request and the only way to get that", "tokens": [50364, 746, 420, 382, 321, 733, 295, 2825, 466, 11, 294, 512, 3331, 309, 815, 2042, 257, 24071, 293, 50581, 50581, 309, 815, 4188, 379, 2736, 300, 498, 300, 24071, 49263, 13, 50849, 50849, 1610, 294, 512, 3331, 411, 364, 6979, 14862, 11, 291, 362, 364, 33283, 5308, 293, 264, 787, 636, 281, 483, 300, 51235, 51235, 6979, 14862, 2010, 307, 807, 264, 33283, 5308, 2445, 300, 311, 9495, 294, 300, 10088, 13, 51560, 51560, 400, 370, 291, 528, 412, 264, 20573, 1944, 1623, 11, 291, 528, 746, 281, 362, 341, 2010, 597, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.0802970826625824, "compression_ratio": 1.7291666666666667, "no_caption_prob": 3.763590575545095e-05}, {"id": 458, "seek": 175740, "start": 1774.8200000000002, "end": 1781.3200000000002, "text": " auth token type is through the HTTP request function that's exposed in that module.", "tokens": [50364, 746, 420, 382, 321, 733, 295, 2825, 466, 11, 294, 512, 3331, 309, 815, 2042, 257, 24071, 293, 50581, 50581, 309, 815, 4188, 379, 2736, 300, 498, 300, 24071, 49263, 13, 50849, 50849, 1610, 294, 512, 3331, 411, 364, 6979, 14862, 11, 291, 362, 364, 33283, 5308, 293, 264, 787, 636, 281, 483, 300, 51235, 51235, 6979, 14862, 2010, 307, 807, 264, 33283, 5308, 2445, 300, 311, 9495, 294, 300, 10088, 13, 51560, 51560, 400, 370, 291, 528, 412, 264, 20573, 1944, 1623, 11, 291, 528, 746, 281, 362, 341, 2010, 597, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.0802970826625824, "compression_ratio": 1.7291666666666667, "no_caption_prob": 3.763590575545095e-05}, {"id": 459, "seek": 175740, "start": 1781.3200000000002, "end": 1786.5, "text": " And so you want at the earliest possible moment, you want something to have this type which", "tokens": [50364, 746, 420, 382, 321, 733, 295, 2825, 466, 11, 294, 512, 3331, 309, 815, 2042, 257, 24071, 293, 50581, 50581, 309, 815, 4188, 379, 2736, 300, 498, 300, 24071, 49263, 13, 50849, 50849, 1610, 294, 512, 3331, 411, 364, 6979, 14862, 11, 291, 362, 364, 33283, 5308, 293, 264, 787, 636, 281, 483, 300, 51235, 51235, 6979, 14862, 2010, 307, 807, 264, 33283, 5308, 2445, 300, 311, 9495, 294, 300, 10088, 13, 51560, 51560, 400, 370, 291, 528, 412, 264, 20573, 1944, 1623, 11, 291, 528, 746, 281, 362, 341, 2010, 597, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.0802970826625824, "compression_ratio": 1.7291666666666667, "no_caption_prob": 3.763590575545095e-05}, {"id": 460, "seek": 178650, "start": 1786.5, "end": 1789.24, "text": " represents the constraints about it.", "tokens": [50364, 8855, 264, 18491, 466, 309, 13, 50501, 50501, 400, 550, 412, 264, 6792, 1944, 1623, 11, 291, 528, 281, 1261, 300, 666, 257, 28540, 420, 257, 1252, 50777, 50777, 1802, 420, 2035, 309, 815, 312, 13, 50854, 50854, 407, 294, 264, 1389, 295, 257, 48704, 420, 517, 23157, 1602, 1315, 294, 452, 2699, 76, 21884, 13695, 12855, 40, 11, 412, 264, 588, 1036, 51286, 51286, 1944, 1623, 11, 562, 286, 1261, 746, 666, 257, 21884, 13695, 5308, 420, 562, 286, 1261, 746, 51532, 51532, 666, 257, 2445, 1315, 300, 286, 478, 516, 281, 8460, 294, 264, 10833, 3089, 11, 300, 311, 264, 1623, 300, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07184339011157001, "compression_ratio": 1.7983193277310925, "no_caption_prob": 1.4738810023118276e-05}, {"id": 461, "seek": 178650, "start": 1789.24, "end": 1794.76, "text": " And then at the latest possible moment, you want to turn that into a primitive or a side", "tokens": [50364, 8855, 264, 18491, 466, 309, 13, 50501, 50501, 400, 550, 412, 264, 6792, 1944, 1623, 11, 291, 528, 281, 1261, 300, 666, 257, 28540, 420, 257, 1252, 50777, 50777, 1802, 420, 2035, 309, 815, 312, 13, 50854, 50854, 407, 294, 264, 1389, 295, 257, 48704, 420, 517, 23157, 1602, 1315, 294, 452, 2699, 76, 21884, 13695, 12855, 40, 11, 412, 264, 588, 1036, 51286, 51286, 1944, 1623, 11, 562, 286, 1261, 746, 666, 257, 21884, 13695, 5308, 420, 562, 286, 1261, 746, 51532, 51532, 666, 257, 2445, 1315, 300, 286, 478, 516, 281, 8460, 294, 264, 10833, 3089, 11, 300, 311, 264, 1623, 300, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07184339011157001, "compression_ratio": 1.7983193277310925, "no_caption_prob": 1.4738810023118276e-05}, {"id": 462, "seek": 178650, "start": 1794.76, "end": 1796.3, "text": " effect or whatever it may be.", "tokens": [50364, 8855, 264, 18491, 466, 309, 13, 50501, 50501, 400, 550, 412, 264, 6792, 1944, 1623, 11, 291, 528, 281, 1261, 300, 666, 257, 28540, 420, 257, 1252, 50777, 50777, 1802, 420, 2035, 309, 815, 312, 13, 50854, 50854, 407, 294, 264, 1389, 295, 257, 48704, 420, 517, 23157, 1602, 1315, 294, 452, 2699, 76, 21884, 13695, 12855, 40, 11, 412, 264, 588, 1036, 51286, 51286, 1944, 1623, 11, 562, 286, 1261, 746, 666, 257, 21884, 13695, 5308, 420, 562, 286, 1261, 746, 51532, 51532, 666, 257, 2445, 1315, 300, 286, 478, 516, 281, 8460, 294, 264, 10833, 3089, 11, 300, 311, 264, 1623, 300, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07184339011157001, "compression_ratio": 1.7983193277310925, "no_caption_prob": 1.4738810023118276e-05}, {"id": 463, "seek": 178650, "start": 1796.3, "end": 1804.94, "text": " So in the case of a normalized or unnormalized name in my Elm GraphQL CLI, at the very last", "tokens": [50364, 8855, 264, 18491, 466, 309, 13, 50501, 50501, 400, 550, 412, 264, 6792, 1944, 1623, 11, 291, 528, 281, 1261, 300, 666, 257, 28540, 420, 257, 1252, 50777, 50777, 1802, 420, 2035, 309, 815, 312, 13, 50854, 50854, 407, 294, 264, 1389, 295, 257, 48704, 420, 517, 23157, 1602, 1315, 294, 452, 2699, 76, 21884, 13695, 12855, 40, 11, 412, 264, 588, 1036, 51286, 51286, 1944, 1623, 11, 562, 286, 1261, 746, 666, 257, 21884, 13695, 5308, 420, 562, 286, 1261, 746, 51532, 51532, 666, 257, 2445, 1315, 300, 286, 478, 516, 281, 8460, 294, 264, 10833, 3089, 11, 300, 311, 264, 1623, 300, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07184339011157001, "compression_ratio": 1.7983193277310925, "no_caption_prob": 1.4738810023118276e-05}, {"id": 464, "seek": 178650, "start": 1804.94, "end": 1809.86, "text": " possible moment, when I turn something into a GraphQL request or when I turn something", "tokens": [50364, 8855, 264, 18491, 466, 309, 13, 50501, 50501, 400, 550, 412, 264, 6792, 1944, 1623, 11, 291, 528, 281, 1261, 300, 666, 257, 28540, 420, 257, 1252, 50777, 50777, 1802, 420, 2035, 309, 815, 312, 13, 50854, 50854, 407, 294, 264, 1389, 295, 257, 48704, 420, 517, 23157, 1602, 1315, 294, 452, 2699, 76, 21884, 13695, 12855, 40, 11, 412, 264, 588, 1036, 51286, 51286, 1944, 1623, 11, 562, 286, 1261, 746, 666, 257, 21884, 13695, 5308, 420, 562, 286, 1261, 746, 51532, 51532, 666, 257, 2445, 1315, 300, 286, 478, 516, 281, 8460, 294, 264, 10833, 3089, 11, 300, 311, 264, 1623, 300, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07184339011157001, "compression_ratio": 1.7983193277310925, "no_caption_prob": 1.4738810023118276e-05}, {"id": 465, "seek": 178650, "start": 1809.86, "end": 1814.46, "text": " into a function name that I'm going to generate in the generated code, that's the moment that", "tokens": [50364, 8855, 264, 18491, 466, 309, 13, 50501, 50501, 400, 550, 412, 264, 6792, 1944, 1623, 11, 291, 528, 281, 1261, 300, 666, 257, 28540, 420, 257, 1252, 50777, 50777, 1802, 420, 2035, 309, 815, 312, 13, 50854, 50854, 407, 294, 264, 1389, 295, 257, 48704, 420, 517, 23157, 1602, 1315, 294, 452, 2699, 76, 21884, 13695, 12855, 40, 11, 412, 264, 588, 1036, 51286, 51286, 1944, 1623, 11, 562, 286, 1261, 746, 666, 257, 21884, 13695, 5308, 420, 562, 286, 1261, 746, 51532, 51532, 666, 257, 2445, 1315, 300, 286, 478, 516, 281, 8460, 294, 264, 10833, 3089, 11, 300, 311, 264, 1623, 300, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07184339011157001, "compression_ratio": 1.7983193277310925, "no_caption_prob": 1.4738810023118276e-05}, {"id": 466, "seek": 181446, "start": 1814.46, "end": 1817.78, "text": " I do it and no sooner because otherwise I'm just passing strings around.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 467, "seek": 181446, "start": 1817.78, "end": 1818.98, "text": " I don't know what they represent.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 468, "seek": 181446, "start": 1818.98, "end": 1822.58, "text": " I can't use it to enforce those constraints and those semantics.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 469, "seek": 181446, "start": 1822.58, "end": 1824.58, "text": " And you got the same problem over again.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 470, "seek": 181446, "start": 1824.58, "end": 1825.64, "text": " Exactly.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 471, "seek": 181446, "start": 1825.64, "end": 1830.14, "text": " So now that brings up another thing which is that opaque types are a great way to enforce", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 472, "seek": 181446, "start": 1830.14, "end": 1831.28, "text": " semantics.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 473, "seek": 181446, "start": 1831.28, "end": 1834.44, "text": " Just passing something around, you know what it represents.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 474, "seek": 181446, "start": 1834.44, "end": 1838.9, "text": " And as you said before, you know what the valid operations are to do with it.", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 475, "seek": 181446, "start": 1838.9, "end": 1843.52, "text": " So the API design, that's the only thing that allows you to protect what can I do with this", "tokens": [50364, 286, 360, 309, 293, 572, 15324, 570, 5911, 286, 478, 445, 8437, 13985, 926, 13, 50530, 50530, 286, 500, 380, 458, 437, 436, 2906, 13, 50590, 50590, 286, 393, 380, 764, 309, 281, 24825, 729, 18491, 293, 729, 4361, 45298, 13, 50770, 50770, 400, 291, 658, 264, 912, 1154, 670, 797, 13, 50870, 50870, 7587, 13, 50923, 50923, 407, 586, 300, 5607, 493, 1071, 551, 597, 307, 300, 42687, 3467, 366, 257, 869, 636, 281, 24825, 51148, 51148, 4361, 45298, 13, 51205, 51205, 1449, 8437, 746, 926, 11, 291, 458, 437, 309, 8855, 13, 51363, 51363, 400, 382, 291, 848, 949, 11, 291, 458, 437, 264, 7363, 7705, 366, 281, 360, 365, 309, 13, 51586, 51586, 407, 264, 9362, 1715, 11, 300, 311, 264, 787, 551, 300, 4045, 291, 281, 2371, 437, 393, 286, 360, 365, 341, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13561861565772523, "compression_ratio": 1.8157894736842106, "no_caption_prob": 4.198574970359914e-05}, {"id": 476, "seek": 184352, "start": 1843.52, "end": 1845.34, "text": " type of thing.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 477, "seek": 184352, "start": 1845.34, "end": 1847.94, "text": " Because often what people do is they make a type alias.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 478, "seek": 184352, "start": 1847.94, "end": 1853.36, "text": " Like type alias, user equals some records with a lot of details.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 479, "seek": 184352, "start": 1853.36, "end": 1857.78, "text": " So the semantics are there, but you have no guarantees.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 480, "seek": 184352, "start": 1857.78, "end": 1858.78, "text": " Exactly.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 481, "seek": 184352, "start": 1858.78, "end": 1859.78, "text": " Exactly.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 482, "seek": 184352, "start": 1859.78, "end": 1860.78, "text": " Okay.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 483, "seek": 184352, "start": 1860.78, "end": 1866.3799999999999, "text": " So if you want to get started with opaque types, then pick a module, pick something", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 484, "seek": 184352, "start": 1866.3799999999999, "end": 1872.22, "text": " that's been causing problems, creating bugs, or just been difficult to maintain.", "tokens": [50364, 2010, 295, 551, 13, 50455, 50455, 1436, 2049, 437, 561, 360, 307, 436, 652, 257, 2010, 419, 4609, 13, 50585, 50585, 1743, 2010, 419, 4609, 11, 4195, 6915, 512, 7724, 365, 257, 688, 295, 4365, 13, 50856, 50856, 407, 264, 4361, 45298, 366, 456, 11, 457, 291, 362, 572, 32567, 13, 51077, 51077, 7587, 13, 51127, 51127, 7587, 13, 51177, 51177, 1033, 13, 51227, 51227, 407, 498, 291, 528, 281, 483, 1409, 365, 42687, 3467, 11, 550, 1888, 257, 10088, 11, 1888, 746, 51507, 51507, 300, 311, 668, 9853, 2740, 11, 4084, 15120, 11, 420, 445, 668, 2252, 281, 6909, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.1585229964483352, "compression_ratio": 1.596638655462185, "no_caption_prob": 3.480700252112001e-05}, {"id": 485, "seek": 187222, "start": 1872.22, "end": 1876.7, "text": " Maybe you have to make breaking changes often because some of your code downstream that", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 486, "seek": 187222, "start": 1876.7, "end": 1880.14, "text": " depends on it is directly using internals.", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 487, "seek": 187222, "start": 1880.14, "end": 1884.02, "text": " And then you can just try one small step.", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 488, "seek": 187222, "start": 1884.02, "end": 1889.7, "text": " You can just make that constructor private, see what happens, see what breaks, and then", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 489, "seek": 187222, "start": 1889.7, "end": 1892.02, "text": " try changing those areas that break.", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 490, "seek": 187222, "start": 1892.02, "end": 1899.02, "text": " And then in fact, you can even expose the constructor directly as a function.", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 491, "seek": 187222, "start": 1899.02, "end": 1900.6000000000001, "text": " At least to start with.", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 492, "seek": 187222, "start": 1900.6000000000001, "end": 1901.6000000000001, "text": " At least to start with.", "tokens": [50364, 2704, 291, 362, 281, 652, 7697, 2962, 2049, 570, 512, 295, 428, 3089, 30621, 300, 50588, 50588, 5946, 322, 309, 307, 3838, 1228, 2154, 1124, 13, 50760, 50760, 400, 550, 291, 393, 445, 853, 472, 1359, 1823, 13, 50954, 50954, 509, 393, 445, 652, 300, 47479, 4551, 11, 536, 437, 2314, 11, 536, 437, 9857, 11, 293, 550, 51238, 51238, 853, 4473, 729, 3179, 300, 1821, 13, 51354, 51354, 400, 550, 294, 1186, 11, 291, 393, 754, 19219, 264, 47479, 3838, 382, 257, 2445, 13, 51704, 51704, 1711, 1935, 281, 722, 365, 13, 51783, 51783, 1711, 1935, 281, 722, 365, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.09405873616536459, "compression_ratio": 1.8311688311688312, "no_caption_prob": 0.0001006730308290571}, {"id": 493, "seek": 190160, "start": 1901.6, "end": 1902.6, "text": " Exactly.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 494, "seek": 190160, "start": 1902.6, "end": 1905.06, "text": " That's one small step that gets you in the right direction and then start playing around", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 495, "seek": 190160, "start": 1905.06, "end": 1907.4599999999998, "text": " with it and massaging in those constraints.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 496, "seek": 190160, "start": 1907.4599999999998, "end": 1908.4599999999998, "text": " Yeah.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 497, "seek": 190160, "start": 1908.4599999999998, "end": 1913.62, "text": " And while you do that, you will notice you will need access to certain details of the", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 498, "seek": 190160, "start": 1913.62, "end": 1915.98, "text": " type and some of them may look odd.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 499, "seek": 190160, "start": 1915.98, "end": 1919.58, "text": " Like why do you need that information at that location?", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 500, "seek": 190160, "start": 1919.58, "end": 1923.74, "text": " And maybe you'll notice some smells with that.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 501, "seek": 190160, "start": 1923.74, "end": 1924.74, "text": " Right.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 502, "seek": 190160, "start": 1924.74, "end": 1925.74, "text": " Right.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 503, "seek": 190160, "start": 1925.74, "end": 1928.1399999999999, "text": " So yeah, get good at noticing those smells.", "tokens": [50364, 7587, 13, 50414, 50414, 663, 311, 472, 1359, 1823, 300, 2170, 291, 294, 264, 558, 3513, 293, 550, 722, 2433, 926, 50537, 50537, 365, 309, 293, 2758, 3568, 294, 729, 18491, 13, 50657, 50657, 865, 13, 50707, 50707, 400, 1339, 291, 360, 300, 11, 291, 486, 3449, 291, 486, 643, 2105, 281, 1629, 4365, 295, 264, 50965, 50965, 2010, 293, 512, 295, 552, 815, 574, 7401, 13, 51083, 51083, 1743, 983, 360, 291, 643, 300, 1589, 412, 300, 4914, 30, 51263, 51263, 400, 1310, 291, 603, 3449, 512, 10036, 365, 300, 13, 51471, 51471, 1779, 13, 51521, 51521, 1779, 13, 51571, 51571, 407, 1338, 11, 483, 665, 412, 21814, 729, 10036, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.15245077527802567, "compression_ratio": 1.7063492063492063, "no_caption_prob": 0.00010554188338574022}, {"id": 504, "seek": 192814, "start": 1928.14, "end": 1933.8200000000002, "text": " Get good at noticing when you're depending on internals, when you're using a type that's", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 505, "seek": 192814, "start": 1933.8200000000002, "end": 1938.74, "text": " defined in one module, using functions defined in another module.", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 506, "seek": 192814, "start": 1938.74, "end": 1940.5, "text": " Be on the lookout for those types of smells.", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 507, "seek": 192814, "start": 1940.5, "end": 1944.66, "text": " Be on the lookout for primitive obsession, having these primitives that you're depending", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 508, "seek": 192814, "start": 1944.66, "end": 1948.8200000000002, "text": " on everywhere and you lose track of the semantics and the valid operations.", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 509, "seek": 192814, "start": 1948.8200000000002, "end": 1954.0200000000002, "text": " So you're performing operations on them that shouldn't be valid, but they're just a primitive,", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 510, "seek": 192814, "start": 1954.0200000000002, "end": 1956.3000000000002, "text": " so there's nothing keeping you from doing that.", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 511, "seek": 192814, "start": 1956.3000000000002, "end": 1957.3000000000002, "text": " Yeah.", "tokens": [50364, 3240, 665, 412, 21814, 562, 291, 434, 5413, 322, 2154, 1124, 11, 562, 291, 434, 1228, 257, 2010, 300, 311, 50648, 50648, 7642, 294, 472, 10088, 11, 1228, 6828, 7642, 294, 1071, 10088, 13, 50894, 50894, 879, 322, 264, 41025, 337, 729, 3467, 295, 10036, 13, 50982, 50982, 879, 322, 264, 41025, 337, 28540, 30521, 11, 1419, 613, 2886, 38970, 300, 291, 434, 5413, 51190, 51190, 322, 5315, 293, 291, 3624, 2837, 295, 264, 4361, 45298, 293, 264, 7363, 7705, 13, 51398, 51398, 407, 291, 434, 10205, 7705, 322, 552, 300, 4659, 380, 312, 7363, 11, 457, 436, 434, 445, 257, 28540, 11, 51658, 51658, 370, 456, 311, 1825, 5145, 291, 490, 884, 300, 13, 51772, 51772, 865, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.10982608019821043, "compression_ratio": 1.9, "no_caption_prob": 8.349353447556496e-05}, {"id": 512, "seek": 195730, "start": 1957.3, "end": 1959.1399999999999, "text": " I'd love to learn more about that technique.", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 513, "seek": 195730, "start": 1959.1399999999999, "end": 1961.78, "text": " Just get used to doing it myself.", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 514, "seek": 195730, "start": 1961.78, "end": 1962.78, "text": " Yeah.", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 515, "seek": 195730, "start": 1962.78, "end": 1963.78, "text": " Yeah.", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 516, "seek": 195730, "start": 1963.78, "end": 1970.3, "text": " I actually gave a talk at a conference last year that I showed this technique for, I called", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 517, "seek": 195730, "start": 1970.3, "end": 1974.1, "text": " it this technique of wrapping something in a semantic type.", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 518, "seek": 195730, "start": 1974.1, "end": 1979.46, "text": " And it's actually quite cool because you can wrap something in a type, kind of like I described", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 519, "seek": 195730, "start": 1979.46, "end": 1987.1, "text": " for this type that represents a value that represents a name in a GraphQL schema.", "tokens": [50364, 286, 1116, 959, 281, 1466, 544, 466, 300, 6532, 13, 50456, 50456, 1449, 483, 1143, 281, 884, 309, 2059, 13, 50588, 50588, 865, 13, 50638, 50638, 865, 13, 50688, 50688, 286, 767, 2729, 257, 751, 412, 257, 7586, 1036, 1064, 300, 286, 4712, 341, 6532, 337, 11, 286, 1219, 51014, 51014, 309, 341, 6532, 295, 21993, 746, 294, 257, 47982, 2010, 13, 51204, 51204, 400, 309, 311, 767, 1596, 1627, 570, 291, 393, 7019, 746, 294, 257, 2010, 11, 733, 295, 411, 286, 7619, 51472, 51472, 337, 341, 2010, 300, 8855, 257, 2158, 300, 8855, 257, 1315, 294, 257, 21884, 13695, 34078, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.16082569371874086, "compression_ratio": 1.721311475409836, "no_caption_prob": 0.0001055383327184245}, {"id": 520, "seek": 198710, "start": 1987.1, "end": 1992.34, "text": " You wrap it in that type and then instead of having primitives, a string that you're", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 521, "seek": 198710, "start": 1992.34, "end": 1998.06, "text": " passing to this function, passing to this function, then returning in this function,", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 522, "seek": 198710, "start": 1998.06, "end": 2001.1599999999999, "text": " you just say, oh, actually this is no longer a string.", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 523, "seek": 198710, "start": 2001.1599999999999, "end": 2004.1, "text": " This is this opaque type.", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 524, "seek": 198710, "start": 2004.1, "end": 2006.82, "text": " And then you change all these type signatures everywhere.", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 525, "seek": 198710, "start": 2006.82, "end": 2010.6399999999999, "text": " Instead of saying it takes a string and it returns this, you say it takes this opaque", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 526, "seek": 198710, "start": 2010.6399999999999, "end": 2013.4199999999998, "text": " type and then it returns this.", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 527, "seek": 198710, "start": 2013.4199999999998, "end": 2015.8999999999999, "text": " And you keep doing that all the way until you get to the very end.", "tokens": [50364, 509, 7019, 309, 294, 300, 2010, 293, 550, 2602, 295, 1419, 2886, 38970, 11, 257, 6798, 300, 291, 434, 50626, 50626, 8437, 281, 341, 2445, 11, 8437, 281, 341, 2445, 11, 550, 12678, 294, 341, 2445, 11, 50912, 50912, 291, 445, 584, 11, 1954, 11, 767, 341, 307, 572, 2854, 257, 6798, 13, 51067, 51067, 639, 307, 341, 42687, 2010, 13, 51214, 51214, 400, 550, 291, 1319, 439, 613, 2010, 32322, 5315, 13, 51350, 51350, 7156, 295, 1566, 309, 2516, 257, 6798, 293, 309, 11247, 341, 11, 291, 584, 309, 2516, 341, 42687, 51541, 51541, 2010, 293, 550, 309, 11247, 341, 13, 51680, 51680, 400, 291, 1066, 884, 300, 439, 264, 636, 1826, 291, 483, 281, 264, 588, 917, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0963378414030998, "compression_ratio": 2.0163934426229506, "no_caption_prob": 5.6495118769817054e-05}, {"id": 528, "seek": 201590, "start": 2015.9, "end": 2020.3600000000001, "text": " And then at the very end, you call some function that takes that opaque type and gives you", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 529, "seek": 201590, "start": 2020.3600000000001, "end": 2022.22, "text": " a primitive.", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 530, "seek": 201590, "start": 2022.22, "end": 2027.7, "text": " And all the way through, all you've done is change some type annotations so that it says,", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 531, "seek": 201590, "start": 2027.7, "end": 2030.3600000000001, "text": " instead of passing a primitive, you're passing an opaque type.", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 532, "seek": 201590, "start": 2030.3600000000001, "end": 2035.5, "text": " And then at the very end, at the very edge, you return that primitive at the last possible", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 533, "seek": 201590, "start": 2035.5, "end": 2036.5, "text": " moment.", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 534, "seek": 201590, "start": 2036.5, "end": 2038.26, "text": " You wrap early and you unwrap late.", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 535, "seek": 201590, "start": 2038.26, "end": 2039.26, "text": " It's very easy.", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 536, "seek": 201590, "start": 2039.26, "end": 2041.16, "text": " It's a very safe refactoring.", "tokens": [50364, 400, 550, 412, 264, 588, 917, 11, 291, 818, 512, 2445, 300, 2516, 300, 42687, 2010, 293, 2709, 291, 50587, 50587, 257, 28540, 13, 50680, 50680, 400, 439, 264, 636, 807, 11, 439, 291, 600, 1096, 307, 1319, 512, 2010, 25339, 763, 370, 300, 309, 1619, 11, 50954, 50954, 2602, 295, 8437, 257, 28540, 11, 291, 434, 8437, 364, 42687, 2010, 13, 51087, 51087, 400, 550, 412, 264, 588, 917, 11, 412, 264, 588, 4691, 11, 291, 2736, 300, 28540, 412, 264, 1036, 1944, 51344, 51344, 1623, 13, 51394, 51394, 509, 7019, 2440, 293, 291, 14853, 4007, 3469, 13, 51482, 51482, 467, 311, 588, 1858, 13, 51532, 51532, 467, 311, 257, 588, 3273, 1895, 578, 3662, 13, 51627, 51627], "temperature": 0.0, "avg_logprob": -0.10823927635003712, "compression_ratio": 1.8755364806866952, "no_caption_prob": 2.078459510812536e-05}, {"id": 537, "seek": 204116, "start": 2041.16, "end": 2047.1000000000001, "text": " And it's a great way to have nice semantics that ensure that you're using things with", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 538, "seek": 204116, "start": 2047.1000000000001, "end": 2048.34, "text": " the appropriate actions.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 539, "seek": 204116, "start": 2048.34, "end": 2049.34, "text": " Yeah.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 540, "seek": 204116, "start": 2049.34, "end": 2050.34, "text": " It's very safe.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 541, "seek": 204116, "start": 2050.34, "end": 2051.34, "text": " Yes.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 542, "seek": 204116, "start": 2051.34, "end": 2052.9, "text": " Because you only need some wiring.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 543, "seek": 204116, "start": 2052.9, "end": 2055.14, "text": " You don't change business logic.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 544, "seek": 204116, "start": 2055.14, "end": 2056.14, "text": " Exactly.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 545, "seek": 204116, "start": 2056.14, "end": 2060.38, "text": " I mean, really it's the kind of thing that IDE tooling would be really good at because", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 546, "seek": 204116, "start": 2060.38, "end": 2065.7400000000002, "text": " it's a very tedious, mindless wiring exercise.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 547, "seek": 204116, "start": 2065.7400000000002, "end": 2069.42, "text": " But it's powerful because it opens up these constraints that you can model through the", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 548, "seek": 204116, "start": 2069.42, "end": 2070.42, "text": " API design.", "tokens": [50364, 400, 309, 311, 257, 869, 636, 281, 362, 1481, 4361, 45298, 300, 5586, 300, 291, 434, 1228, 721, 365, 50661, 50661, 264, 6854, 5909, 13, 50723, 50723, 865, 13, 50773, 50773, 467, 311, 588, 3273, 13, 50823, 50823, 1079, 13, 50873, 50873, 1436, 291, 787, 643, 512, 27520, 13, 50951, 50951, 509, 500, 380, 1319, 1606, 9952, 13, 51063, 51063, 7587, 13, 51113, 51113, 286, 914, 11, 534, 309, 311, 264, 733, 295, 551, 300, 40930, 46593, 576, 312, 534, 665, 412, 570, 51325, 51325, 309, 311, 257, 588, 38284, 11, 1575, 1832, 27520, 5380, 13, 51593, 51593, 583, 309, 311, 4005, 570, 309, 9870, 493, 613, 18491, 300, 291, 393, 2316, 807, 264, 51777, 51777, 9362, 1715, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.1496555204313945, "compression_ratio": 1.6373626373626373, "no_caption_prob": 9.080347808776423e-06}, {"id": 549, "seek": 207042, "start": 2070.42, "end": 2071.42, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 407, 472, 661, 636, 295, 2891, 365, 42687, 3467, 307, 281, 1884, 257, 777, 10088, 11, 777, 42687, 2010, 13, 50730, 50730, 286, 519, 321, 576, 1293, 18312, 561, 281, 722, 1455, 264, 3467, 42687, 538, 7576, 13, 51024, 51024, 1779, 30, 51106, 51106, 467, 311, 257, 534, 1880, 1168, 293, 309, 311, 472, 286, 600, 1194, 466, 13, 51414, 51414, 286, 519, 412, 264, 588, 1935, 11, 862, 926, 365, 309, 11, 853, 309, 11, 536, 577, 309, 3417, 13, 51632, 51632, 6526, 1455, 512, 721, 42687, 538, 7576, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.17321164680249762, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.985714258509688e-05}, {"id": 550, "seek": 207042, "start": 2071.42, "end": 2077.7400000000002, "text": " So one other way of starting with opaque types is to create a new module, new opaque type.", "tokens": [50364, 865, 13, 50414, 50414, 407, 472, 661, 636, 295, 2891, 365, 42687, 3467, 307, 281, 1884, 257, 777, 10088, 11, 777, 42687, 2010, 13, 50730, 50730, 286, 519, 321, 576, 1293, 18312, 561, 281, 722, 1455, 264, 3467, 42687, 538, 7576, 13, 51024, 51024, 1779, 30, 51106, 51106, 467, 311, 257, 534, 1880, 1168, 293, 309, 311, 472, 286, 600, 1194, 466, 13, 51414, 51414, 286, 519, 412, 264, 588, 1935, 11, 862, 926, 365, 309, 11, 853, 309, 11, 536, 577, 309, 3417, 13, 51632, 51632, 6526, 1455, 512, 721, 42687, 538, 7576, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.17321164680249762, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.985714258509688e-05}, {"id": 551, "seek": 207042, "start": 2077.7400000000002, "end": 2083.62, "text": " I think we would both advise people to start making the types opaque by default.", "tokens": [50364, 865, 13, 50414, 50414, 407, 472, 661, 636, 295, 2891, 365, 42687, 3467, 307, 281, 1884, 257, 777, 10088, 11, 777, 42687, 2010, 13, 50730, 50730, 286, 519, 321, 576, 1293, 18312, 561, 281, 722, 1455, 264, 3467, 42687, 538, 7576, 13, 51024, 51024, 1779, 30, 51106, 51106, 467, 311, 257, 534, 1880, 1168, 293, 309, 311, 472, 286, 600, 1194, 466, 13, 51414, 51414, 286, 519, 412, 264, 588, 1935, 11, 862, 926, 365, 309, 11, 853, 309, 11, 536, 577, 309, 3417, 13, 51632, 51632, 6526, 1455, 512, 721, 42687, 538, 7576, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.17321164680249762, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.985714258509688e-05}, {"id": 552, "seek": 207042, "start": 2083.62, "end": 2085.26, "text": " Right?", "tokens": [50364, 865, 13, 50414, 50414, 407, 472, 661, 636, 295, 2891, 365, 42687, 3467, 307, 281, 1884, 257, 777, 10088, 11, 777, 42687, 2010, 13, 50730, 50730, 286, 519, 321, 576, 1293, 18312, 561, 281, 722, 1455, 264, 3467, 42687, 538, 7576, 13, 51024, 51024, 1779, 30, 51106, 51106, 467, 311, 257, 534, 1880, 1168, 293, 309, 311, 472, 286, 600, 1194, 466, 13, 51414, 51414, 286, 519, 412, 264, 588, 1935, 11, 862, 926, 365, 309, 11, 853, 309, 11, 536, 577, 309, 3417, 13, 51632, 51632, 6526, 1455, 512, 721, 42687, 538, 7576, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.17321164680249762, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.985714258509688e-05}, {"id": 553, "seek": 207042, "start": 2085.26, "end": 2091.42, "text": " It's a really interesting question and it's one I've thought about.", "tokens": [50364, 865, 13, 50414, 50414, 407, 472, 661, 636, 295, 2891, 365, 42687, 3467, 307, 281, 1884, 257, 777, 10088, 11, 777, 42687, 2010, 13, 50730, 50730, 286, 519, 321, 576, 1293, 18312, 561, 281, 722, 1455, 264, 3467, 42687, 538, 7576, 13, 51024, 51024, 1779, 30, 51106, 51106, 467, 311, 257, 534, 1880, 1168, 293, 309, 311, 472, 286, 600, 1194, 466, 13, 51414, 51414, 286, 519, 412, 264, 588, 1935, 11, 862, 926, 365, 309, 11, 853, 309, 11, 536, 577, 309, 3417, 13, 51632, 51632, 6526, 1455, 512, 721, 42687, 538, 7576, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.17321164680249762, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.985714258509688e-05}, {"id": 554, "seek": 207042, "start": 2091.42, "end": 2095.78, "text": " I think at the very least, play around with it, try it, see how it feels.", "tokens": [50364, 865, 13, 50414, 50414, 407, 472, 661, 636, 295, 2891, 365, 42687, 3467, 307, 281, 1884, 257, 777, 10088, 11, 777, 42687, 2010, 13, 50730, 50730, 286, 519, 321, 576, 1293, 18312, 561, 281, 722, 1455, 264, 3467, 42687, 538, 7576, 13, 51024, 51024, 1779, 30, 51106, 51106, 467, 311, 257, 534, 1880, 1168, 293, 309, 311, 472, 286, 600, 1194, 466, 13, 51414, 51414, 286, 519, 412, 264, 588, 1935, 11, 862, 926, 365, 309, 11, 853, 309, 11, 536, 577, 309, 3417, 13, 51632, 51632, 6526, 1455, 512, 721, 42687, 538, 7576, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.17321164680249762, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.985714258509688e-05}, {"id": 555, "seek": 207042, "start": 2095.78, "end": 2098.46, "text": " Try making some things opaque by default.", "tokens": [50364, 865, 13, 50414, 50414, 407, 472, 661, 636, 295, 2891, 365, 42687, 3467, 307, 281, 1884, 257, 777, 10088, 11, 777, 42687, 2010, 13, 50730, 50730, 286, 519, 321, 576, 1293, 18312, 561, 281, 722, 1455, 264, 3467, 42687, 538, 7576, 13, 51024, 51024, 1779, 30, 51106, 51106, 467, 311, 257, 534, 1880, 1168, 293, 309, 311, 472, 286, 600, 1194, 466, 13, 51414, 51414, 286, 519, 412, 264, 588, 1935, 11, 862, 926, 365, 309, 11, 853, 309, 11, 536, 577, 309, 3417, 13, 51632, 51632, 6526, 1455, 512, 721, 42687, 538, 7576, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.17321164680249762, "compression_ratio": 1.6428571428571428, "no_caption_prob": 4.985714258509688e-05}, {"id": 556, "seek": 209846, "start": 2098.46, "end": 2103.5, "text": " You know, I mean, there are times when using a record is appropriate, right?", "tokens": [50364, 509, 458, 11, 286, 914, 11, 456, 366, 1413, 562, 1228, 257, 2136, 307, 6854, 11, 558, 30, 50616, 50616, 286, 914, 11, 393, 428, 2316, 294, 428, 3861, 312, 257, 2136, 30, 50834, 50834, 865, 11, 300, 311, 3122, 2489, 13, 50900, 50900, 663, 311, 257, 869, 10290, 337, 300, 11, 337, 1365, 13, 51008, 51008, 407, 445, 286, 576, 584, 300, 853, 300, 13, 51260, 51260, 6526, 1455, 746, 42687, 382, 257, 2891, 935, 13, 51388, 51388, 6526, 4084, 257, 777, 10088, 337, 746, 291, 434, 1382, 281, 2906, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.1516823669274648, "compression_ratio": 1.6681818181818182, "no_caption_prob": 5.561982106883079e-05}, {"id": 557, "seek": 209846, "start": 2103.5, "end": 2107.86, "text": " I mean, can your model in your application be a record?", "tokens": [50364, 509, 458, 11, 286, 914, 11, 456, 366, 1413, 562, 1228, 257, 2136, 307, 6854, 11, 558, 30, 50616, 50616, 286, 914, 11, 393, 428, 2316, 294, 428, 3861, 312, 257, 2136, 30, 50834, 50834, 865, 11, 300, 311, 3122, 2489, 13, 50900, 50900, 663, 311, 257, 869, 10290, 337, 300, 11, 337, 1365, 13, 51008, 51008, 407, 445, 286, 576, 584, 300, 853, 300, 13, 51260, 51260, 6526, 1455, 746, 42687, 382, 257, 2891, 935, 13, 51388, 51388, 6526, 4084, 257, 777, 10088, 337, 746, 291, 434, 1382, 281, 2906, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.1516823669274648, "compression_ratio": 1.6681818181818182, "no_caption_prob": 5.561982106883079e-05}, {"id": 558, "seek": 209846, "start": 2107.86, "end": 2109.18, "text": " Yeah, that's absolutely fine.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 456, 366, 1413, 562, 1228, 257, 2136, 307, 6854, 11, 558, 30, 50616, 50616, 286, 914, 11, 393, 428, 2316, 294, 428, 3861, 312, 257, 2136, 30, 50834, 50834, 865, 11, 300, 311, 3122, 2489, 13, 50900, 50900, 663, 311, 257, 869, 10290, 337, 300, 11, 337, 1365, 13, 51008, 51008, 407, 445, 286, 576, 584, 300, 853, 300, 13, 51260, 51260, 6526, 1455, 746, 42687, 382, 257, 2891, 935, 13, 51388, 51388, 6526, 4084, 257, 777, 10088, 337, 746, 291, 434, 1382, 281, 2906, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.1516823669274648, "compression_ratio": 1.6681818181818182, "no_caption_prob": 5.561982106883079e-05}, {"id": 559, "seek": 209846, "start": 2109.18, "end": 2111.34, "text": " That's a great representation for that, for example.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 456, 366, 1413, 562, 1228, 257, 2136, 307, 6854, 11, 558, 30, 50616, 50616, 286, 914, 11, 393, 428, 2316, 294, 428, 3861, 312, 257, 2136, 30, 50834, 50834, 865, 11, 300, 311, 3122, 2489, 13, 50900, 50900, 663, 311, 257, 869, 10290, 337, 300, 11, 337, 1365, 13, 51008, 51008, 407, 445, 286, 576, 584, 300, 853, 300, 13, 51260, 51260, 6526, 1455, 746, 42687, 382, 257, 2891, 935, 13, 51388, 51388, 6526, 4084, 257, 777, 10088, 337, 746, 291, 434, 1382, 281, 2906, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.1516823669274648, "compression_ratio": 1.6681818181818182, "no_caption_prob": 5.561982106883079e-05}, {"id": 560, "seek": 209846, "start": 2111.34, "end": 2116.38, "text": " So just I would say that try that.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 456, 366, 1413, 562, 1228, 257, 2136, 307, 6854, 11, 558, 30, 50616, 50616, 286, 914, 11, 393, 428, 2316, 294, 428, 3861, 312, 257, 2136, 30, 50834, 50834, 865, 11, 300, 311, 3122, 2489, 13, 50900, 50900, 663, 311, 257, 869, 10290, 337, 300, 11, 337, 1365, 13, 51008, 51008, 407, 445, 286, 576, 584, 300, 853, 300, 13, 51260, 51260, 6526, 1455, 746, 42687, 382, 257, 2891, 935, 13, 51388, 51388, 6526, 4084, 257, 777, 10088, 337, 746, 291, 434, 1382, 281, 2906, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.1516823669274648, "compression_ratio": 1.6681818181818182, "no_caption_prob": 5.561982106883079e-05}, {"id": 561, "seek": 209846, "start": 2116.38, "end": 2118.94, "text": " Try making something opaque as a starting point.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 456, 366, 1413, 562, 1228, 257, 2136, 307, 6854, 11, 558, 30, 50616, 50616, 286, 914, 11, 393, 428, 2316, 294, 428, 3861, 312, 257, 2136, 30, 50834, 50834, 865, 11, 300, 311, 3122, 2489, 13, 50900, 50900, 663, 311, 257, 869, 10290, 337, 300, 11, 337, 1365, 13, 51008, 51008, 407, 445, 286, 576, 584, 300, 853, 300, 13, 51260, 51260, 6526, 1455, 746, 42687, 382, 257, 2891, 935, 13, 51388, 51388, 6526, 4084, 257, 777, 10088, 337, 746, 291, 434, 1382, 281, 2906, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.1516823669274648, "compression_ratio": 1.6681818181818182, "no_caption_prob": 5.561982106883079e-05}, {"id": 562, "seek": 209846, "start": 2118.94, "end": 2123.9, "text": " Try creating a new module for something you're trying to represent.", "tokens": [50364, 509, 458, 11, 286, 914, 11, 456, 366, 1413, 562, 1228, 257, 2136, 307, 6854, 11, 558, 30, 50616, 50616, 286, 914, 11, 393, 428, 2316, 294, 428, 3861, 312, 257, 2136, 30, 50834, 50834, 865, 11, 300, 311, 3122, 2489, 13, 50900, 50900, 663, 311, 257, 869, 10290, 337, 300, 11, 337, 1365, 13, 51008, 51008, 407, 445, 286, 576, 584, 300, 853, 300, 13, 51260, 51260, 6526, 1455, 746, 42687, 382, 257, 2891, 935, 13, 51388, 51388, 6526, 4084, 257, 777, 10088, 337, 746, 291, 434, 1382, 281, 2906, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.1516823669274648, "compression_ratio": 1.6681818181818182, "no_caption_prob": 5.561982106883079e-05}, {"id": 563, "seek": 212390, "start": 2123.9, "end": 2128.82, "text": " I think that it does take some judgment and I think that you, because if you try to make", "tokens": [50364, 286, 519, 300, 309, 775, 747, 512, 12216, 293, 286, 519, 300, 291, 11, 570, 498, 291, 853, 281, 652, 50610, 50610, 1203, 364, 42687, 2010, 11, 309, 775, 5366, 364, 19922, 13, 50834, 50834, 7580, 13, 50894, 50894, 400, 286, 519, 300, 337, 291, 1566, 445, 764, 364, 42687, 2010, 558, 1314, 11, 286, 519, 300, 291, 362, 51208, 51208, 264, 12216, 293, 264, 1752, 281, 458, 341, 307, 1391, 516, 281, 312, 257, 665, 1558, 13, 51440, 51440, 407, 309, 3417, 3303, 13, 51520, 51520, 583, 286, 519, 300, 498, 2618, 567, 311, 777, 281, 42687, 16679, 645, 281, 853, 281, 360, 300, 11, 436, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.11331836597339527, "compression_ratio": 1.779591836734694, "no_caption_prob": 5.9196827351115644e-05}, {"id": 564, "seek": 212390, "start": 2128.82, "end": 2133.3, "text": " everything an opaque type, it does introduce an overhead.", "tokens": [50364, 286, 519, 300, 309, 775, 747, 512, 12216, 293, 286, 519, 300, 291, 11, 570, 498, 291, 853, 281, 652, 50610, 50610, 1203, 364, 42687, 2010, 11, 309, 775, 5366, 364, 19922, 13, 50834, 50834, 7580, 13, 50894, 50894, 400, 286, 519, 300, 337, 291, 1566, 445, 764, 364, 42687, 2010, 558, 1314, 11, 286, 519, 300, 291, 362, 51208, 51208, 264, 12216, 293, 264, 1752, 281, 458, 341, 307, 1391, 516, 281, 312, 257, 665, 1558, 13, 51440, 51440, 407, 309, 3417, 3303, 13, 51520, 51520, 583, 286, 519, 300, 498, 2618, 567, 311, 777, 281, 42687, 16679, 645, 281, 853, 281, 360, 300, 11, 436, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.11331836597339527, "compression_ratio": 1.779591836734694, "no_caption_prob": 5.9196827351115644e-05}, {"id": 565, "seek": 212390, "start": 2133.3, "end": 2134.5, "text": " Obviously.", "tokens": [50364, 286, 519, 300, 309, 775, 747, 512, 12216, 293, 286, 519, 300, 291, 11, 570, 498, 291, 853, 281, 652, 50610, 50610, 1203, 364, 42687, 2010, 11, 309, 775, 5366, 364, 19922, 13, 50834, 50834, 7580, 13, 50894, 50894, 400, 286, 519, 300, 337, 291, 1566, 445, 764, 364, 42687, 2010, 558, 1314, 11, 286, 519, 300, 291, 362, 51208, 51208, 264, 12216, 293, 264, 1752, 281, 458, 341, 307, 1391, 516, 281, 312, 257, 665, 1558, 13, 51440, 51440, 407, 309, 3417, 3303, 13, 51520, 51520, 583, 286, 519, 300, 498, 2618, 567, 311, 777, 281, 42687, 16679, 645, 281, 853, 281, 360, 300, 11, 436, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.11331836597339527, "compression_ratio": 1.779591836734694, "no_caption_prob": 5.9196827351115644e-05}, {"id": 566, "seek": 212390, "start": 2134.5, "end": 2140.78, "text": " And I think that for you saying just use an opaque type right away, I think that you have", "tokens": [50364, 286, 519, 300, 309, 775, 747, 512, 12216, 293, 286, 519, 300, 291, 11, 570, 498, 291, 853, 281, 652, 50610, 50610, 1203, 364, 42687, 2010, 11, 309, 775, 5366, 364, 19922, 13, 50834, 50834, 7580, 13, 50894, 50894, 400, 286, 519, 300, 337, 291, 1566, 445, 764, 364, 42687, 2010, 558, 1314, 11, 286, 519, 300, 291, 362, 51208, 51208, 264, 12216, 293, 264, 1752, 281, 458, 341, 307, 1391, 516, 281, 312, 257, 665, 1558, 13, 51440, 51440, 407, 309, 3417, 3303, 13, 51520, 51520, 583, 286, 519, 300, 498, 2618, 567, 311, 777, 281, 42687, 16679, 645, 281, 853, 281, 360, 300, 11, 436, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.11331836597339527, "compression_ratio": 1.779591836734694, "no_caption_prob": 5.9196827351115644e-05}, {"id": 567, "seek": 212390, "start": 2140.78, "end": 2145.42, "text": " the judgment and the experience to know this is probably going to be a good idea.", "tokens": [50364, 286, 519, 300, 309, 775, 747, 512, 12216, 293, 286, 519, 300, 291, 11, 570, 498, 291, 853, 281, 652, 50610, 50610, 1203, 364, 42687, 2010, 11, 309, 775, 5366, 364, 19922, 13, 50834, 50834, 7580, 13, 50894, 50894, 400, 286, 519, 300, 337, 291, 1566, 445, 764, 364, 42687, 2010, 558, 1314, 11, 286, 519, 300, 291, 362, 51208, 51208, 264, 12216, 293, 264, 1752, 281, 458, 341, 307, 1391, 516, 281, 312, 257, 665, 1558, 13, 51440, 51440, 407, 309, 3417, 3303, 13, 51520, 51520, 583, 286, 519, 300, 498, 2618, 567, 311, 777, 281, 42687, 16679, 645, 281, 853, 281, 360, 300, 11, 436, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.11331836597339527, "compression_ratio": 1.779591836734694, "no_caption_prob": 5.9196827351115644e-05}, {"id": 568, "seek": 212390, "start": 2145.42, "end": 2147.02, "text": " So it feels natural.", "tokens": [50364, 286, 519, 300, 309, 775, 747, 512, 12216, 293, 286, 519, 300, 291, 11, 570, 498, 291, 853, 281, 652, 50610, 50610, 1203, 364, 42687, 2010, 11, 309, 775, 5366, 364, 19922, 13, 50834, 50834, 7580, 13, 50894, 50894, 400, 286, 519, 300, 337, 291, 1566, 445, 764, 364, 42687, 2010, 558, 1314, 11, 286, 519, 300, 291, 362, 51208, 51208, 264, 12216, 293, 264, 1752, 281, 458, 341, 307, 1391, 516, 281, 312, 257, 665, 1558, 13, 51440, 51440, 407, 309, 3417, 3303, 13, 51520, 51520, 583, 286, 519, 300, 498, 2618, 567, 311, 777, 281, 42687, 16679, 645, 281, 853, 281, 360, 300, 11, 436, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.11331836597339527, "compression_ratio": 1.779591836734694, "no_caption_prob": 5.9196827351115644e-05}, {"id": 569, "seek": 212390, "start": 2147.02, "end": 2151.7400000000002, "text": " But I think that if somebody who's new to opaque modules were to try to do that, they", "tokens": [50364, 286, 519, 300, 309, 775, 747, 512, 12216, 293, 286, 519, 300, 291, 11, 570, 498, 291, 853, 281, 652, 50610, 50610, 1203, 364, 42687, 2010, 11, 309, 775, 5366, 364, 19922, 13, 50834, 50834, 7580, 13, 50894, 50894, 400, 286, 519, 300, 337, 291, 1566, 445, 764, 364, 42687, 2010, 558, 1314, 11, 286, 519, 300, 291, 362, 51208, 51208, 264, 12216, 293, 264, 1752, 281, 458, 341, 307, 1391, 516, 281, 312, 257, 665, 1558, 13, 51440, 51440, 407, 309, 3417, 3303, 13, 51520, 51520, 583, 286, 519, 300, 498, 2618, 567, 311, 777, 281, 42687, 16679, 645, 281, 853, 281, 360, 300, 11, 436, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.11331836597339527, "compression_ratio": 1.779591836734694, "no_caption_prob": 5.9196827351115644e-05}, {"id": 570, "seek": 215174, "start": 2151.74, "end": 2155.2599999999998, "text": " might say, oh, OK, well, here's my model for my application.", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 571, "seek": 215174, "start": 2155.2599999999998, "end": 2159.4199999999996, "text": " So I'll put that in a module and I'll make that an opaque type or I'll make that a custom", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 572, "seek": 215174, "start": 2159.4199999999996, "end": 2160.4199999999996, "text": " type.", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 573, "seek": 215174, "start": 2160.4199999999996, "end": 2161.4199999999996, "text": " Yeah, right.", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 574, "seek": 215174, "start": 2161.4199999999996, "end": 2164.74, "text": " Well, there are two reasons why I would do it.", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 575, "seek": 215174, "start": 2164.74, "end": 2169.9799999999996, "text": " Is one, it's much easier to turn an opaque type into a non opaque type than the other", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 576, "seek": 215174, "start": 2169.9799999999996, "end": 2170.9799999999996, "text": " way around.", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 577, "seek": 215174, "start": 2170.9799999999996, "end": 2171.9799999999996, "text": " Right.", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 578, "seek": 215174, "start": 2171.9799999999996, "end": 2177.9799999999996, "text": " So if you have a type and you need to make it opaque, that will be tedious.", "tokens": [50364, 1062, 584, 11, 1954, 11, 2264, 11, 731, 11, 510, 311, 452, 2316, 337, 452, 3861, 13, 50540, 50540, 407, 286, 603, 829, 300, 294, 257, 10088, 293, 286, 603, 652, 300, 364, 42687, 2010, 420, 286, 603, 652, 300, 257, 2375, 50748, 50748, 2010, 13, 50798, 50798, 865, 11, 558, 13, 50848, 50848, 1042, 11, 456, 366, 732, 4112, 983, 286, 576, 360, 309, 13, 51014, 51014, 1119, 472, 11, 309, 311, 709, 3571, 281, 1261, 364, 42687, 2010, 666, 257, 2107, 42687, 2010, 813, 264, 661, 51276, 51276, 636, 926, 13, 51326, 51326, 1779, 13, 51376, 51376, 407, 498, 291, 362, 257, 2010, 293, 291, 643, 281, 652, 309, 42687, 11, 300, 486, 312, 38284, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10371960968267722, "compression_ratio": 1.6893617021276597, "no_caption_prob": 3.48074063367676e-05}, {"id": 579, "seek": 217798, "start": 2177.98, "end": 2183.06, "text": " So as you said, an IDE would be great for that, but we don't have any IDE that does", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 580, "seek": 217798, "start": 2183.06, "end": 2184.06, "text": " that.", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 581, "seek": 217798, "start": 2184.06, "end": 2185.06, "text": " Not yet.", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 582, "seek": 217798, "start": 2185.06, "end": 2186.06, "text": " Crossing my fingers.", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 583, "seek": 217798, "start": 2186.06, "end": 2187.22, "text": " Crossing my fingers.", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 584, "seek": 217798, "start": 2187.22, "end": 2188.78, "text": " Me too.", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 585, "seek": 217798, "start": 2188.78, "end": 2190.26, "text": " Yeah.", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 586, "seek": 217798, "start": 2190.26, "end": 2197.5, "text": " So I think that what I would recommend is that push yourself out of your comfort zone", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 587, "seek": 217798, "start": 2197.5, "end": 2198.6, "text": " a little bit.", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 588, "seek": 217798, "start": 2198.6, "end": 2205.5, "text": " So if it feels like a stretch to start with an opaque module, maybe don't do it all the", "tokens": [50364, 407, 382, 291, 848, 11, 364, 40930, 576, 312, 869, 337, 300, 11, 457, 321, 500, 380, 362, 604, 40930, 300, 775, 50618, 50618, 300, 13, 50668, 50668, 1726, 1939, 13, 50718, 50718, 41675, 452, 7350, 13, 50768, 50768, 41675, 452, 7350, 13, 50826, 50826, 1923, 886, 13, 50904, 50904, 865, 13, 50978, 50978, 407, 286, 519, 300, 437, 286, 576, 2748, 307, 300, 2944, 1803, 484, 295, 428, 3400, 6668, 51340, 51340, 257, 707, 857, 13, 51395, 51395, 407, 498, 309, 3417, 411, 257, 5985, 281, 722, 365, 364, 42687, 10088, 11, 1310, 500, 380, 360, 309, 439, 264, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.17203501554635856, "compression_ratio": 1.576036866359447, "no_caption_prob": 2.9309410820133053e-05}, {"id": 589, "seek": 220550, "start": 2205.5, "end": 2212.7, "text": " time, always, but try doing it for a day and see how that goes and see what you learn.", "tokens": [50364, 565, 11, 1009, 11, 457, 853, 884, 309, 337, 257, 786, 293, 536, 577, 300, 1709, 293, 536, 437, 291, 1466, 13, 50724, 50724, 1133, 390, 309, 406, 1364, 731, 293, 983, 390, 300, 406, 1364, 731, 293, 562, 630, 309, 589, 17600, 50996, 50996, 731, 30, 51046, 51046, 509, 393, 380, 1466, 746, 777, 5969, 291, 2944, 1803, 281, 853, 257, 819, 636, 295, 1364, 13, 51248, 51248, 400, 365, 42687, 16679, 11, 309, 311, 257, 819, 12543, 13, 51437, 51437, 400, 370, 291, 362, 281, 2944, 1803, 281, 853, 746, 777, 293, 519, 295, 309, 382, 364, 5120, 11, 536, 51677, 51677, 577, 309, 1709, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13129700081689016, "compression_ratio": 1.8354430379746836, "no_caption_prob": 4.331713353167288e-05}, {"id": 590, "seek": 220550, "start": 2212.7, "end": 2218.14, "text": " When was it not working well and why was that not working well and when did it work surprisingly", "tokens": [50364, 565, 11, 1009, 11, 457, 853, 884, 309, 337, 257, 786, 293, 536, 577, 300, 1709, 293, 536, 437, 291, 1466, 13, 50724, 50724, 1133, 390, 309, 406, 1364, 731, 293, 983, 390, 300, 406, 1364, 731, 293, 562, 630, 309, 589, 17600, 50996, 50996, 731, 30, 51046, 51046, 509, 393, 380, 1466, 746, 777, 5969, 291, 2944, 1803, 281, 853, 257, 819, 636, 295, 1364, 13, 51248, 51248, 400, 365, 42687, 16679, 11, 309, 311, 257, 819, 12543, 13, 51437, 51437, 400, 370, 291, 362, 281, 2944, 1803, 281, 853, 746, 777, 293, 519, 295, 309, 382, 364, 5120, 11, 536, 51677, 51677, 577, 309, 1709, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13129700081689016, "compression_ratio": 1.8354430379746836, "no_caption_prob": 4.331713353167288e-05}, {"id": 591, "seek": 220550, "start": 2218.14, "end": 2219.14, "text": " well?", "tokens": [50364, 565, 11, 1009, 11, 457, 853, 884, 309, 337, 257, 786, 293, 536, 577, 300, 1709, 293, 536, 437, 291, 1466, 13, 50724, 50724, 1133, 390, 309, 406, 1364, 731, 293, 983, 390, 300, 406, 1364, 731, 293, 562, 630, 309, 589, 17600, 50996, 50996, 731, 30, 51046, 51046, 509, 393, 380, 1466, 746, 777, 5969, 291, 2944, 1803, 281, 853, 257, 819, 636, 295, 1364, 13, 51248, 51248, 400, 365, 42687, 16679, 11, 309, 311, 257, 819, 12543, 13, 51437, 51437, 400, 370, 291, 362, 281, 2944, 1803, 281, 853, 746, 777, 293, 519, 295, 309, 382, 364, 5120, 11, 536, 51677, 51677, 577, 309, 1709, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13129700081689016, "compression_ratio": 1.8354430379746836, "no_caption_prob": 4.331713353167288e-05}, {"id": 592, "seek": 220550, "start": 2219.14, "end": 2223.18, "text": " You can't learn something new unless you push yourself to try a different way of working.", "tokens": [50364, 565, 11, 1009, 11, 457, 853, 884, 309, 337, 257, 786, 293, 536, 577, 300, 1709, 293, 536, 437, 291, 1466, 13, 50724, 50724, 1133, 390, 309, 406, 1364, 731, 293, 983, 390, 300, 406, 1364, 731, 293, 562, 630, 309, 589, 17600, 50996, 50996, 731, 30, 51046, 51046, 509, 393, 380, 1466, 746, 777, 5969, 291, 2944, 1803, 281, 853, 257, 819, 636, 295, 1364, 13, 51248, 51248, 400, 365, 42687, 16679, 11, 309, 311, 257, 819, 12543, 13, 51437, 51437, 400, 370, 291, 362, 281, 2944, 1803, 281, 853, 746, 777, 293, 519, 295, 309, 382, 364, 5120, 11, 536, 51677, 51677, 577, 309, 1709, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13129700081689016, "compression_ratio": 1.8354430379746836, "no_caption_prob": 4.331713353167288e-05}, {"id": 593, "seek": 220550, "start": 2223.18, "end": 2226.96, "text": " And with opaque modules, it's a different mindset.", "tokens": [50364, 565, 11, 1009, 11, 457, 853, 884, 309, 337, 257, 786, 293, 536, 577, 300, 1709, 293, 536, 437, 291, 1466, 13, 50724, 50724, 1133, 390, 309, 406, 1364, 731, 293, 983, 390, 300, 406, 1364, 731, 293, 562, 630, 309, 589, 17600, 50996, 50996, 731, 30, 51046, 51046, 509, 393, 380, 1466, 746, 777, 5969, 291, 2944, 1803, 281, 853, 257, 819, 636, 295, 1364, 13, 51248, 51248, 400, 365, 42687, 16679, 11, 309, 311, 257, 819, 12543, 13, 51437, 51437, 400, 370, 291, 362, 281, 2944, 1803, 281, 853, 746, 777, 293, 519, 295, 309, 382, 364, 5120, 11, 536, 51677, 51677, 577, 309, 1709, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13129700081689016, "compression_ratio": 1.8354430379746836, "no_caption_prob": 4.331713353167288e-05}, {"id": 594, "seek": 220550, "start": 2226.96, "end": 2231.76, "text": " And so you have to push yourself to try something new and think of it as an experiment, see", "tokens": [50364, 565, 11, 1009, 11, 457, 853, 884, 309, 337, 257, 786, 293, 536, 577, 300, 1709, 293, 536, 437, 291, 1466, 13, 50724, 50724, 1133, 390, 309, 406, 1364, 731, 293, 983, 390, 300, 406, 1364, 731, 293, 562, 630, 309, 589, 17600, 50996, 50996, 731, 30, 51046, 51046, 509, 393, 380, 1466, 746, 777, 5969, 291, 2944, 1803, 281, 853, 257, 819, 636, 295, 1364, 13, 51248, 51248, 400, 365, 42687, 16679, 11, 309, 311, 257, 819, 12543, 13, 51437, 51437, 400, 370, 291, 362, 281, 2944, 1803, 281, 853, 746, 777, 293, 519, 295, 309, 382, 364, 5120, 11, 536, 51677, 51677, 577, 309, 1709, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13129700081689016, "compression_ratio": 1.8354430379746836, "no_caption_prob": 4.331713353167288e-05}, {"id": 595, "seek": 220550, "start": 2231.76, "end": 2233.26, "text": " how it goes.", "tokens": [50364, 565, 11, 1009, 11, 457, 853, 884, 309, 337, 257, 786, 293, 536, 577, 300, 1709, 293, 536, 437, 291, 1466, 13, 50724, 50724, 1133, 390, 309, 406, 1364, 731, 293, 983, 390, 300, 406, 1364, 731, 293, 562, 630, 309, 589, 17600, 50996, 50996, 731, 30, 51046, 51046, 509, 393, 380, 1466, 746, 777, 5969, 291, 2944, 1803, 281, 853, 257, 819, 636, 295, 1364, 13, 51248, 51248, 400, 365, 42687, 16679, 11, 309, 311, 257, 819, 12543, 13, 51437, 51437, 400, 370, 291, 362, 281, 2944, 1803, 281, 853, 746, 777, 293, 519, 295, 309, 382, 364, 5120, 11, 536, 51677, 51677, 577, 309, 1709, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.13129700081689016, "compression_ratio": 1.8354430379746836, "no_caption_prob": 4.331713353167288e-05}, {"id": 596, "seek": 223326, "start": 2233.26, "end": 2236.7000000000003, "text": " Film is great for refactoring and changing things and telling you where you need to fix", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 597, "seek": 223326, "start": 2236.7000000000003, "end": 2237.7000000000003, "text": " things.", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 598, "seek": 223326, "start": 2237.7000000000003, "end": 2238.7000000000003, "text": " So just try something.", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 599, "seek": 223326, "start": 2238.7000000000003, "end": 2245.7000000000003, "text": " And then above all, experiment to try new ways of working with that mindset of what", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 600, "seek": 223326, "start": 2245.7000000000003, "end": 2249.3, "text": " problem am I trying to solve and how can types help me do that?", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 601, "seek": 223326, "start": 2249.3, "end": 2255.1800000000003, "text": " How can I enforce constraints using types and module design, API design?", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 602, "seek": 223326, "start": 2255.1800000000003, "end": 2256.1800000000003, "text": " Yeah.", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 603, "seek": 223326, "start": 2256.1800000000003, "end": 2261.1000000000004, "text": " Basically, if you don't gain any guarantees from using a big type, don't use it.", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 604, "seek": 223326, "start": 2261.1000000000004, "end": 2262.1000000000004, "text": " That's my baseline.", "tokens": [50364, 13801, 307, 869, 337, 1895, 578, 3662, 293, 4473, 721, 293, 3585, 291, 689, 291, 643, 281, 3191, 50536, 50536, 721, 13, 50586, 50586, 407, 445, 853, 746, 13, 50636, 50636, 400, 550, 3673, 439, 11, 5120, 281, 853, 777, 2098, 295, 1364, 365, 300, 12543, 295, 437, 50986, 50986, 1154, 669, 286, 1382, 281, 5039, 293, 577, 393, 3467, 854, 385, 360, 300, 30, 51166, 51166, 1012, 393, 286, 24825, 18491, 1228, 3467, 293, 10088, 1715, 11, 9362, 1715, 30, 51460, 51460, 865, 13, 51510, 51510, 8537, 11, 498, 291, 500, 380, 6052, 604, 32567, 490, 1228, 257, 955, 2010, 11, 500, 380, 764, 309, 13, 51756, 51756, 663, 311, 452, 20518, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.13228954703120863, "compression_ratio": 1.60431654676259, "no_caption_prob": 1.4510127584799193e-05}, {"id": 605, "seek": 226210, "start": 2262.1, "end": 2265.66, "text": " But as you said, you probably need some experience with that.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 606, "seek": 226210, "start": 2265.66, "end": 2269.86, "text": " So try making it opaque to start with.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 607, "seek": 226210, "start": 2269.86, "end": 2270.86, "text": " Don't mind the boilerplate.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 608, "seek": 226210, "start": 2270.86, "end": 2276.2999999999997, "text": " When you're used to boilerplates in Elm, it feels all for us first.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 609, "seek": 226210, "start": 2276.2999999999997, "end": 2277.2999999999997, "text": " It's not that bad.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 610, "seek": 226210, "start": 2277.2999999999997, "end": 2278.2999999999997, "text": " Yes.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 611, "seek": 226210, "start": 2278.2999999999997, "end": 2284.3399999999997, "text": " And when you use boilerplates, it's usually for something good like getting new guarantees.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 612, "seek": 226210, "start": 2284.3399999999997, "end": 2285.54, "text": " Exactly.", "tokens": [50364, 583, 382, 291, 848, 11, 291, 1391, 643, 512, 1752, 365, 300, 13, 50542, 50542, 407, 853, 1455, 309, 42687, 281, 722, 365, 13, 50752, 50752, 1468, 380, 1575, 264, 39228, 37008, 13, 50802, 50802, 1133, 291, 434, 1143, 281, 39228, 564, 1024, 294, 2699, 76, 11, 309, 3417, 439, 337, 505, 700, 13, 51074, 51074, 467, 311, 406, 300, 1578, 13, 51124, 51124, 1079, 13, 51174, 51174, 400, 562, 291, 764, 39228, 564, 1024, 11, 309, 311, 2673, 337, 746, 665, 411, 1242, 777, 32567, 13, 51476, 51476, 7587, 13, 51536, 51536], "temperature": 0.0, "avg_logprob": -0.21174826371042352, "compression_ratio": 1.5213270142180095, "no_caption_prob": 6.921527528902516e-05}, {"id": 613, "seek": 228554, "start": 2285.54, "end": 2292.34, "text": " And one micro tip, when you're doing this technique, I think a lot of people don't know", "tokens": [50364, 400, 472, 4532, 4125, 11, 562, 291, 434, 884, 341, 6532, 11, 286, 519, 257, 688, 295, 561, 500, 380, 458, 50704, 50704, 341, 4282, 300, 498, 291, 362, 257, 2375, 2010, 365, 257, 2167, 17501, 11, 291, 393, 2677, 2885, 51090, 51090, 300, 2375, 2010, 17501, 3838, 294, 428, 2445, 13397, 13, 51348, 51348, 407, 498, 286, 362, 2010, 1460, 6915, 1460, 560, 689, 560, 307, 264, 2020, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10979403676213445, "compression_ratio": 1.5654450261780104, "no_caption_prob": 4.006158633274026e-05}, {"id": 614, "seek": 228554, "start": 2292.34, "end": 2300.06, "text": " this trick that if you have a custom type with a single variant, you can destructure", "tokens": [50364, 400, 472, 4532, 4125, 11, 562, 291, 434, 884, 341, 6532, 11, 286, 519, 257, 688, 295, 561, 500, 380, 458, 50704, 50704, 341, 4282, 300, 498, 291, 362, 257, 2375, 2010, 365, 257, 2167, 17501, 11, 291, 393, 2677, 2885, 51090, 51090, 300, 2375, 2010, 17501, 3838, 294, 428, 2445, 13397, 13, 51348, 51348, 407, 498, 286, 362, 2010, 1460, 6915, 1460, 560, 689, 560, 307, 264, 2020, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10979403676213445, "compression_ratio": 1.5654450261780104, "no_caption_prob": 4.006158633274026e-05}, {"id": 615, "seek": 228554, "start": 2300.06, "end": 2305.22, "text": " that custom type variant directly in your function signature.", "tokens": [50364, 400, 472, 4532, 4125, 11, 562, 291, 434, 884, 341, 6532, 11, 286, 519, 257, 688, 295, 561, 500, 380, 458, 50704, 50704, 341, 4282, 300, 498, 291, 362, 257, 2375, 2010, 365, 257, 2167, 17501, 11, 291, 393, 2677, 2885, 51090, 51090, 300, 2375, 2010, 17501, 3838, 294, 428, 2445, 13397, 13, 51348, 51348, 407, 498, 286, 362, 2010, 1460, 6915, 1460, 560, 689, 560, 307, 264, 2020, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10979403676213445, "compression_ratio": 1.5654450261780104, "no_caption_prob": 4.006158633274026e-05}, {"id": 616, "seek": 228554, "start": 2305.22, "end": 2311.82, "text": " So if I have type money equals money int where int is the sense.", "tokens": [50364, 400, 472, 4532, 4125, 11, 562, 291, 434, 884, 341, 6532, 11, 286, 519, 257, 688, 295, 561, 500, 380, 458, 50704, 50704, 341, 4282, 300, 498, 291, 362, 257, 2375, 2010, 365, 257, 2167, 17501, 11, 291, 393, 2677, 2885, 51090, 51090, 300, 2375, 2010, 17501, 3838, 294, 428, 2445, 13397, 13, 51348, 51348, 407, 498, 286, 362, 2010, 1460, 6915, 1460, 560, 689, 560, 307, 264, 2020, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10979403676213445, "compression_ratio": 1.5654450261780104, "no_caption_prob": 4.006158633274026e-05}, {"id": 617, "seek": 231182, "start": 2311.82, "end": 2316.2000000000003, "text": " In the money module, I can have a two string function that takes money and returns a string.", "tokens": [50364, 682, 264, 1460, 10088, 11, 286, 393, 362, 257, 732, 6798, 2445, 300, 2516, 1460, 293, 11247, 257, 6798, 13, 50583, 50583, 407, 286, 727, 584, 732, 6798, 293, 550, 294, 34153, 11, 286, 393, 360, 4238, 1460, 13, 50882, 50882, 407, 300, 311, 2677, 1757, 1345, 452, 1460, 445, 411, 286, 576, 360, 294, 257, 1389, 5629, 13, 51117, 51117, 583, 309, 311, 406, 294, 257, 1389, 5629, 13, 51184, 51184, 467, 311, 732, 6798, 34153, 1460, 13, 51368, 51368, 400, 550, 286, 2677, 2885, 300, 560, 294, 512, 7006, 1315, 1460, 2158, 13, 51662, 51662, 400, 586, 286, 500, 380, 362, 281, 360, 257, 1389, 5629, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.09887037024033808, "compression_ratio": 1.9315068493150684, "no_caption_prob": 3.071715764235705e-05}, {"id": 618, "seek": 231182, "start": 2316.2000000000003, "end": 2322.1800000000003, "text": " So I could say two string and then in parentheses, I can do capital money.", "tokens": [50364, 682, 264, 1460, 10088, 11, 286, 393, 362, 257, 732, 6798, 2445, 300, 2516, 1460, 293, 11247, 257, 6798, 13, 50583, 50583, 407, 286, 727, 584, 732, 6798, 293, 550, 294, 34153, 11, 286, 393, 360, 4238, 1460, 13, 50882, 50882, 407, 300, 311, 2677, 1757, 1345, 452, 1460, 445, 411, 286, 576, 360, 294, 257, 1389, 5629, 13, 51117, 51117, 583, 309, 311, 406, 294, 257, 1389, 5629, 13, 51184, 51184, 467, 311, 732, 6798, 34153, 1460, 13, 51368, 51368, 400, 550, 286, 2677, 2885, 300, 560, 294, 512, 7006, 1315, 1460, 2158, 13, 51662, 51662, 400, 586, 286, 500, 380, 362, 281, 360, 257, 1389, 5629, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.09887037024033808, "compression_ratio": 1.9315068493150684, "no_caption_prob": 3.071715764235705e-05}, {"id": 619, "seek": 231182, "start": 2322.1800000000003, "end": 2326.88, "text": " So that's destructuring my money just like I would do in a case statement.", "tokens": [50364, 682, 264, 1460, 10088, 11, 286, 393, 362, 257, 732, 6798, 2445, 300, 2516, 1460, 293, 11247, 257, 6798, 13, 50583, 50583, 407, 286, 727, 584, 732, 6798, 293, 550, 294, 34153, 11, 286, 393, 360, 4238, 1460, 13, 50882, 50882, 407, 300, 311, 2677, 1757, 1345, 452, 1460, 445, 411, 286, 576, 360, 294, 257, 1389, 5629, 13, 51117, 51117, 583, 309, 311, 406, 294, 257, 1389, 5629, 13, 51184, 51184, 467, 311, 732, 6798, 34153, 1460, 13, 51368, 51368, 400, 550, 286, 2677, 2885, 300, 560, 294, 512, 7006, 1315, 1460, 2158, 13, 51662, 51662, 400, 586, 286, 500, 380, 362, 281, 360, 257, 1389, 5629, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.09887037024033808, "compression_ratio": 1.9315068493150684, "no_caption_prob": 3.071715764235705e-05}, {"id": 620, "seek": 231182, "start": 2326.88, "end": 2328.2200000000003, "text": " But it's not in a case statement.", "tokens": [50364, 682, 264, 1460, 10088, 11, 286, 393, 362, 257, 732, 6798, 2445, 300, 2516, 1460, 293, 11247, 257, 6798, 13, 50583, 50583, 407, 286, 727, 584, 732, 6798, 293, 550, 294, 34153, 11, 286, 393, 360, 4238, 1460, 13, 50882, 50882, 407, 300, 311, 2677, 1757, 1345, 452, 1460, 445, 411, 286, 576, 360, 294, 257, 1389, 5629, 13, 51117, 51117, 583, 309, 311, 406, 294, 257, 1389, 5629, 13, 51184, 51184, 467, 311, 732, 6798, 34153, 1460, 13, 51368, 51368, 400, 550, 286, 2677, 2885, 300, 560, 294, 512, 7006, 1315, 1460, 2158, 13, 51662, 51662, 400, 586, 286, 500, 380, 362, 281, 360, 257, 1389, 5629, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.09887037024033808, "compression_ratio": 1.9315068493150684, "no_caption_prob": 3.071715764235705e-05}, {"id": 621, "seek": 231182, "start": 2328.2200000000003, "end": 2331.9, "text": " It's two string parentheses money.", "tokens": [50364, 682, 264, 1460, 10088, 11, 286, 393, 362, 257, 732, 6798, 2445, 300, 2516, 1460, 293, 11247, 257, 6798, 13, 50583, 50583, 407, 286, 727, 584, 732, 6798, 293, 550, 294, 34153, 11, 286, 393, 360, 4238, 1460, 13, 50882, 50882, 407, 300, 311, 2677, 1757, 1345, 452, 1460, 445, 411, 286, 576, 360, 294, 257, 1389, 5629, 13, 51117, 51117, 583, 309, 311, 406, 294, 257, 1389, 5629, 13, 51184, 51184, 467, 311, 732, 6798, 34153, 1460, 13, 51368, 51368, 400, 550, 286, 2677, 2885, 300, 560, 294, 512, 7006, 1315, 1460, 2158, 13, 51662, 51662, 400, 586, 286, 500, 380, 362, 281, 360, 257, 1389, 5629, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.09887037024033808, "compression_ratio": 1.9315068493150684, "no_caption_prob": 3.071715764235705e-05}, {"id": 622, "seek": 231182, "start": 2331.9, "end": 2337.78, "text": " And then I destructure that int in some variable name money value.", "tokens": [50364, 682, 264, 1460, 10088, 11, 286, 393, 362, 257, 732, 6798, 2445, 300, 2516, 1460, 293, 11247, 257, 6798, 13, 50583, 50583, 407, 286, 727, 584, 732, 6798, 293, 550, 294, 34153, 11, 286, 393, 360, 4238, 1460, 13, 50882, 50882, 407, 300, 311, 2677, 1757, 1345, 452, 1460, 445, 411, 286, 576, 360, 294, 257, 1389, 5629, 13, 51117, 51117, 583, 309, 311, 406, 294, 257, 1389, 5629, 13, 51184, 51184, 467, 311, 732, 6798, 34153, 1460, 13, 51368, 51368, 400, 550, 286, 2677, 2885, 300, 560, 294, 512, 7006, 1315, 1460, 2158, 13, 51662, 51662, 400, 586, 286, 500, 380, 362, 281, 360, 257, 1389, 5629, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.09887037024033808, "compression_ratio": 1.9315068493150684, "no_caption_prob": 3.071715764235705e-05}, {"id": 623, "seek": 231182, "start": 2337.78, "end": 2339.54, "text": " And now I don't have to do a case statement.", "tokens": [50364, 682, 264, 1460, 10088, 11, 286, 393, 362, 257, 732, 6798, 2445, 300, 2516, 1460, 293, 11247, 257, 6798, 13, 50583, 50583, 407, 286, 727, 584, 732, 6798, 293, 550, 294, 34153, 11, 286, 393, 360, 4238, 1460, 13, 50882, 50882, 407, 300, 311, 2677, 1757, 1345, 452, 1460, 445, 411, 286, 576, 360, 294, 257, 1389, 5629, 13, 51117, 51117, 583, 309, 311, 406, 294, 257, 1389, 5629, 13, 51184, 51184, 467, 311, 732, 6798, 34153, 1460, 13, 51368, 51368, 400, 550, 286, 2677, 2885, 300, 560, 294, 512, 7006, 1315, 1460, 2158, 13, 51662, 51662, 400, 586, 286, 500, 380, 362, 281, 360, 257, 1389, 5629, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.09887037024033808, "compression_ratio": 1.9315068493150684, "no_caption_prob": 3.071715764235705e-05}, {"id": 624, "seek": 233954, "start": 2339.54, "end": 2342.38, "text": " It's just one little trick that will make your life a little bit easier.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 625, "seek": 233954, "start": 2342.38, "end": 2346.22, "text": " Yeah, I think we're all very happy when we learn that technique.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 626, "seek": 233954, "start": 2346.22, "end": 2347.22, "text": " Yeah, absolutely.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 627, "seek": 233954, "start": 2347.22, "end": 2353.02, "text": " Yeah, this single variant custom type ends up happening a lot when you're using opaque", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 628, "seek": 233954, "start": 2353.02, "end": 2354.02, "text": " types.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 629, "seek": 233954, "start": 2354.02, "end": 2356.38, "text": " Yeah, it removes like half of the boilerplate.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 630, "seek": 233954, "start": 2356.38, "end": 2358.38, "text": " Yeah, exactly.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 631, "seek": 233954, "start": 2358.38, "end": 2359.86, "text": " All right.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 632, "seek": 233954, "start": 2359.86, "end": 2364.18, "text": " Well, I think there's a lot more to discuss in the episode, but hopefully this is a good", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 633, "seek": 233954, "start": 2364.18, "end": 2365.18, "text": " starting point.", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 634, "seek": 233954, "start": 2365.18, "end": 2369.32, "text": " Yeah, we hope you understand the big types now and that you won't be lost when we talk", "tokens": [50364, 467, 311, 445, 472, 707, 4282, 300, 486, 652, 428, 993, 257, 707, 857, 3571, 13, 50506, 50506, 865, 11, 286, 519, 321, 434, 439, 588, 2055, 562, 321, 1466, 300, 6532, 13, 50698, 50698, 865, 11, 3122, 13, 50748, 50748, 865, 11, 341, 2167, 17501, 2375, 2010, 5314, 493, 2737, 257, 688, 562, 291, 434, 1228, 42687, 51038, 51038, 3467, 13, 51088, 51088, 865, 11, 309, 30445, 411, 1922, 295, 264, 39228, 37008, 13, 51206, 51206, 865, 11, 2293, 13, 51306, 51306, 1057, 558, 13, 51380, 51380, 1042, 11, 286, 519, 456, 311, 257, 688, 544, 281, 2248, 294, 264, 3500, 11, 457, 4696, 341, 307, 257, 665, 51596, 51596, 2891, 935, 13, 51646, 51646, 865, 11, 321, 1454, 291, 1223, 264, 955, 3467, 586, 293, 300, 291, 1582, 380, 312, 2731, 562, 321, 751, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.20472233636038645, "compression_ratio": 1.7423728813559323, "no_caption_prob": 6.204802775755525e-05}, {"id": 635, "seek": 236932, "start": 2369.32, "end": 2371.46, "text": " about them in future episodes.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 636, "seek": 236932, "start": 2371.46, "end": 2377.06, "text": " Yeah, hopefully if people just give these a try, take them for a spin and start taking", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 637, "seek": 236932, "start": 2377.06, "end": 2380.3, "text": " a step in this direction of experimenting, then that's a success.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 638, "seek": 236932, "start": 2380.3, "end": 2381.3, "text": " So take them for a spin.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 639, "seek": 236932, "start": 2381.3, "end": 2382.3, "text": " See what you think.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 640, "seek": 236932, "start": 2382.3, "end": 2383.3, "text": " Yeah.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 641, "seek": 236932, "start": 2383.3, "end": 2384.3, "text": " All right, Jeroen.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 642, "seek": 236932, "start": 2384.3, "end": 2385.3, "text": " Well, I'll talk to you next time.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 643, "seek": 236932, "start": 2385.3, "end": 2386.3, "text": " Have a good day.", "tokens": [50364, 466, 552, 294, 2027, 9313, 13, 50471, 50471, 865, 11, 4696, 498, 561, 445, 976, 613, 257, 853, 11, 747, 552, 337, 257, 6060, 293, 722, 1940, 50751, 50751, 257, 1823, 294, 341, 3513, 295, 29070, 11, 550, 300, 311, 257, 2245, 13, 50913, 50913, 407, 747, 552, 337, 257, 6060, 13, 50963, 50963, 3008, 437, 291, 519, 13, 51013, 51013, 865, 13, 51063, 51063, 1057, 558, 11, 508, 2032, 268, 13, 51113, 51113, 1042, 11, 286, 603, 751, 281, 291, 958, 565, 13, 51163, 51163, 3560, 257, 665, 786, 13, 51213, 51213, 3560, 257, 665, 786, 13, 51213], "temperature": 0.0, "avg_logprob": -0.1597122343459932, "compression_ratio": 1.621212121212121, "no_caption_prob": 0.00016090441204141825}, {"id": 644, "seek": 238630, "start": 2386.3, "end": 2399.78, "text": " Have a good day.", "tokens": [50364, 3560, 257, 665, 786, 13, 51038], "temperature": 0.0, "avg_logprob": -0.5165389776229858, "compression_ratio": 0.6666666666666666, "no_caption_prob": 7.013027061475441e-05}], "language": "en"}