{"text": " Hello, Jeroen. Hello, Dylan. Well, what are we talking about today? Today we're talking about code generation. Uh huh. Well, have you ever done code generation? I have done my fair share. Uh huh. I'm guessing you too. I've done a lot of code generation, and I really enjoy it. It's very cool. So like code generation, well, as is our tradition, let's lay out some definitions. So what is code generation in the context of Elm? Well, code generation is just writing Elm code. So you are a code generator, Dylan. That's true. You are a very good code generator. I'm a code generation machine. And if you want to become even more productive at generating code, what if you wrote code that could write code? Wouldn't that be cool? I thought you were going to say, oh, what if you want to become even better just by my book? Maybe. Yeah, no, I mean, I mean really, uh, you know, Elm is a code generator. A compiler is a code generator. When we're talking about code generation right now, what we're really talking about is doing things that you wouldn't be able to do just by writing some simple Elm code or, you know, perhaps adding some safety mechanisms. So like, yeah, basically generating code through automated scripts or tools and for different purposes that we will go through. Right. So it's like, I mean, one of, um, you know, obviously one of, one of the examples that is top of mind for me would be Elm GraphQL. And I think that that's a pretty good, pretty simple example in a way, because, so like one of the things that I think is really interesting to think about for code generation is what is the source of truth and what's the mental model. And so for, for Elm GraphQL, what's the purpose of the code generation? What is it giving you that just writing code by itself couldn't give you? Why not just use a plain old API, right? Like if you can write an API without code generation, that's far better. You shouldn't reach for code generation unless you really need it. So first of all, why would you go through for code generation and not write the code yourself? Right. So if you take the example of Elm GraphQL, you've got this external thing, the schema and Elm doesn't know about that at compile time. At runtime, you can teach Elm about your schema, but you want compiler guarantees. So that's one of the really cool things you can do with code generation is you can sort of bring this information so that not only is Elm aware of it at runtime when your code is running, but the compiler that you can teach the Elm compiler about external things because the Elm compiler, you can't just tell the Elm compiler. Now with, with certain fancy magical languages, you can do this, but Elm is not a fancy magical compiler. It's a very simple, predictable, boring compiler, which is really one of the things we like about it. But we also like our compiler to know about the types in our GraphQL API. That's very nice. Right. So you can try to get a field and the compiler says, uh, there's no such field, or, uh, you're treating this as if it was an int, but it's actually a string. We like that. We like the compiler to know that external information. So that's one reason that you would do code generation is to bring in information about some external source of truth. And well, you know, types without borders, you're erasing the borders between the type system of the Elm compiler and your GraphQL schema. Yeah. If you were to write it yourself, then you have a potential bug because you're saying that this field is an integer and actually it's a float or something like that. So at runtime you would have some kind of error, an HTTP error or... Right. It's a good way to keep two sources of data in sync with the Elm compiler because you can, you know, you can figure stuff out by running Elm code, but we like to do better. So that's one thing that like some languages have macros and other metaprogramming tools. And now, so like, let's talk about that a little bit. So like, like what is a macro? Which Elm doesn't have macros. Yeah. It doesn't have any macros out of the box. And there's, I don't think there's a tool out there at the moment that has macro support or something. Basically your macros are a way of changing your code. Probably at compile time or maybe at runtime in some cases, depending on, yeah, I don't know, like configuration. I think that's a good way of defining it. It's basically like a way of programmatically changing code. So you like essentially take, I mean, sometimes people talk about it as like code as data. So like a lot of Lisp variants are known for being able to use a macro where you say this function is going to take this code as an argument. So whatever code you pass to it, you can sort of go in and tweak the abstract syntax tree or inspect it, which is quite handy, but it can make it difficult to understand things and it can make it harder to predict like buckle script slash rescript, whatever they're calling it these days. What was the old name? Reason ML was the old name. Now they call it rescript. They've got a feature, these PPX macros. And I mean, that's extremely powerful. You can basically like go do whatever side effects you want to make code available. But if there's a problem, how do you go figure out what the problem is? Or if you're trying to understand what your code can do, where do you go to figure that out? Whereas if you're just using vanilla code generation, which is what Elm gives us, then you can go and you can look at that generated code. It's in the folder somewhere. Your IDE will even help you command click into the code and see exactly what the code does. Yeah. Most of my experience with macros are from C from a very long time ago where you basically just replace constants with other values, like for enums, mostly. That's what I use it for. I'm guessing it's way more powerful than that, but not to my knowledge. Yeah. I guess the word macro is used and it can mean very different things. So I think C macros are precompiler, like a compiler preprocessor macros, which is very different than like a Lisp macro, which is arbitrarily allowing you to modify the code. And the other one is Babel. So Babel has, that's for JavaScript. You configure Babel with a bunch of plugins and you tell it what transformations to do. And basically it allows you to write a new JavaScript version code and transform it to ES5 or something. Or it can allow you to do pretty much anything. Like if you want to add a macro that says all the strings in the source code, make them uppercase, that could work. And it can be very powerful, but as you said, it can be a big pain to debug when something goes wrong. Right. And that's actually something that I think it's quite nice to embrace as Elm users that this is a benefit of Elm that it doesn't have this complexity to deal with. If something goes wrong, we don't have to dig through some cryptic messages or just not have any way to understand what's going on. We can see exactly the code that was generated and that's quite useful. Because what you have in mind is generating Elm files, right? Exactly. That's all it is. It's writing an Elm file to a disk. So one of the things that, I mean, we're recording this episode about code generation and I want to emphasize, I don't think that this concept is only useful to library authors. I think that this concept is useful. It's extremely useful for library authors and sure, code generation sounds scary, but I would like to make it sound less scary. And I think that code generation should feel like something, again, you don't want to, if you can do something, if you can accomplish a goal without code generation, you by all means should. And it does add complexity. It's funny what you said, because to me, code generation is mostly for applications. I would have almost said, you know what, code generation can also be useful for libraries. That's interesting. Well, then I guess you're already thinking the way that I'm hoping people will. I always get the feeling that code generation feels intimidating to people, but maybe, I mean, I don't know, maybe that's not. I guess it's something that you have to get used to, because people who have used ElmGraphQL or similar projects, they've already bought in the idea of, I have my Elm project and I have a set of build tools that generate the code that I need to run before I run Elm make or before I need to push something to production. I think that's most of the upfront cost that you have or most of the setup costs that you have. So once you've bought into that, you're free to do a lot more code generation. Yes, absolutely. And it is extremely useful for applications, as you say. And I think that code generation seems very intimidating. One of the things that I always like to say about code generation is that code generation makes it sound like such a difficult, complicated thing. But you could do a code generation script that is, you know, like code generation could be as simple as what is the build time? Like you want a timestamp for when you build a script and you want that available as a value in Elm. So it's going to be like just a POSIX time value, right? Yeah. Or a string like for the build version or something. Yeah. Right. Exactly. Exactly. So that's going to be some little piece of metadata that you have that, you know, that timestamp represents your build. So every time you do a new build, you have a new timestamp. So how would you go about that? It's a very simple example. So let's go through all the steps together. That sounds great. Yeah. So what I always like to say about code generation is that really it's just a type of templating. And you can use different tools to template. If you want to get really fancy, you can pull in some abstract syntax trees and output those to strings. But why would you do that if you're just generating a module, you know, build module build, exposing timestamp and then timestamp colon POSIX dot time timestamp equals one, two, three, four, five from POSIX time or something like that. Right. That's the code we're generating. Why wouldn't you just do string templating? So what I would say is just templating. It's just templating. Just write a little node JS script. So just write like generate build module dot JS. And then, you know, you're just going to you know, if you're not familiar with node, you've got a couple of things to learn. You can use whatever your preferred tool is. If you prefer to use Ruby or Python, you're not going to do it in Elm because how are you going to write to a file with vanilla Elm? That's not really going to help you out. Well then you use node.js. Oh, yeah. Right. Exactly. So at the end of the day, all you're trying to do is write out this file. In fact, if you want, just use bash. That that would be fine, too. That's not what I would reach for. But let's just say we're using node.js. So we're just going to, you know, say just write a little string template and we're just going to do exactly that string I mentioned, except the one, two, three, four, five part. We're going to do, you know, date dot whatever. Turn it into POSIX time using some fancy JavaScript thing. And then we're going to do Fs dot write file sync, probably. And that's it. Now we've done some code generation and then we're going to hook that into our build. And every time we run a build, we run that code generation thing. And then we're probably going to want to get a little bit of extra confidence that it's a fresh generated file. And therefore we'll probably get ignore our build dot elm module or put it in like a gen folder. Maybe we'll output it to a gen folder, which is ignored. Which is usually what I go for. Yeah, because that's very nice, because then you know that you're not accidentally forgetting to to generate it on on your build server and it's going to fail to compile. If you do elm make, it's going to say, what is build dot elm? And you say, oh, whoops, I forgot to run my build script. That's it. Now we've just done your first code generation. You do need to change your project's source directories to include that new folder. Yes. If you generated it in a gen folder or if you, you know, you could just generate it right in the source directory and add source slash build dot elm to your to your get ignore. But in general, it's I think it's a nice practice to have a separate source directory for generated code. I don't even see what a drawback for that could be. No, I think that's that's a great practice. So that's it. We just did code generation. Yeah, I think my biggest drawback for or I think my biggest pain point for code generation would be having to set up a new kind of dev server. Like when you are developing with this project, you need to run the code generation before every compile before every before you start developing whatever, whichever makes sense for your use case. And you probably won't use like vanilla elm make might use Webpack to trigger the code generation or it's just like post install scripts, whatever makes more sense. But you have to set something up so that people in your team don't clone the repo and do elm make and then they get a compiler error. You need to make it easy for them to to get started with the project. Yes. Right. So, yeah, there's sort of like the lifecycle of these generated files because so like there's a particular like conceptually pretty much any any I'm going to go ahead and say any generated code has a source of truth. There's some that's sort of the point of generating code. There's some source of truth that you're mirroring. And depending on what that source of truth is, you that's going to influence when you want to generate it. So like in the example of like a sort of build timestamp, that one is the lifecycle is simpler because you just want to generate a unique one for every build. So, you know, maybe for your dev server, you say, OK, fine, the file needs to exist. But the important thing is just that the file exists and that every time I ship a new thing to production, it gives me unique build ID or timestamp. That's that's the only thing that matters. So for that source of truth, the for that mental model, you just need to be sure that you're generating a fresh one for each build, which the gitignore sort of takes care of. If the source of truth is like, let's say, for example, a GraphQL schema, then in order to mirror that source of truth, you want to rerun the code generation. You want to make sure that it's generated initially upon starting up a dev server or running your production build. But you also want to make sure in dev mode that it's being regenerated as needed ideally. So that does get a little bit trickier in cases like that where you're mirroring a source of truth. You can you know, you could make a ChalkiDAR. You know, ChalkiDAR is like a an NPM tool which gives you a file watcher. They provide there's a ChalkiDAR CLI, which we'll link to in the show notes. That can be a handy way to just say, hey, anytime these files change, like these files are the source of truth. These GraphQL schemas falls. Exactly. Maybe you've got your, you know, your server of choice set up to output a new GraphQL schema file every time that changes. So then that's your source of truth. And you set up the ChalkiDAR watcher to watch that schema file. Anytime that schema file is touched, it's going to rerun your code generation. So that definitely is a challenge. But what you can also do is just have either NPM scripts or make file scripts that every time you rerun the, you start your dev server, it recompiles or regenerates the code that is needed. And then you just tell your teammates that every time your GraphQL schema changes, you need to rerun the dev server. And as long as everyone is aware of these, I guess it's a fine trade off. Right. Right. And yeah, I mean, even with like a GraphQL schema, if it's not changing that frequently or for whatever reason, it's, you know, or maybe you typically make non breaking changes or, you know, in that, in that case, you could say, you know, we're not even going to bother with a file watcher. We're just going to leave it to the individual developer to manually run the generate script. And we're going to guarantee that it's generating it from scratch for every production build. So it's always up to date for production. And if something were to go wrong, we would know because it wouldn't compile. So worst case scenario, it doesn't compile, then the build fails, the developer goes and fixes the problem. So in some cases, you might not need to go to the trouble of, or you could start with something simple. Yeah, but at least consider your teammates and your own productivity. So just like you don't want to make mistakes because your GraphQL schema is out of date with your generated code. So make it easy for all of you. Right. And if you're not going to get a compiler error, if something goes wrong, but instead you're going to have some different values at runtime that weren't what you were testing against when you were developing locally, you know, that's something considered too, that that could cause cause bugs because you're looking at something different in your development. So then what you're shipping to production. So these are things to keep in mind. One of the biggest challenges that I've seen with like doing code generation for LM applications, not libraries is just like coming up with the right mental model. So I think one of the most important things is you really want to have a very simple mental model as much as possible. I think it's really valuable to piggyback on other mental models. So like, like with, with a GraphQL schema, you know, it, it, it seems, it seems obvious if you're not like designing the source of truth, but GraphQL is a very simple mapping. You've got this concept, there's a GraphQL schema, you can make requests to it. And you know, the developers already have a mental model of this GraphQL schema that they can make queries against. And so they can take those concepts and they can map those concepts into a slightly modified concept of, okay, there's this GraphQL schema. I can make HTTP requests like this. And they map that concept to, okay, there's this Elm code and it maps onto the GraphQL schema in this clear one to one mapping like this, right? So that is, um, they do have to sort of map their mental model there, but it's a clear mapping. Another example would be with, um, with Elm SPA, you know, you've got like this file based routing and there's a clear mapping between the wiring that you would do for a single page app in Elm and, uh, the, the module, uh, module names on the file system. Yeah. Elm SPA is a very different story though, uh, because it's not a matter of a source of truth. It's a matter of boilerplate mostly and maybe conventional or making it easy to, to develop it, but it's not a matter of source of truth in this case. I mean, in a sense it is a source of truth as well because it, it enforces the mapping where if you have, yeah, but just like any Elm code in any way, it's like normally in a single page app, the source of truth is whatever you do in your top level main.elm, not your like pages main.elm. But with Elm SPA, you can, you can map what's happening in your file system to, to know, okay, this is going to map to a page that's going to get wired in in this way with this URL routing and you can map all of those concepts to what would actually be happening. So normally in a single page app, the source of truth is what happens in main.elm, which could or could not follow convention. And you don't know until you, until you look at the code and you could make a mistake there. But if you have a code generation tool, it helps keep you honest about that source of truth. So it can actually simplify the mental model because it can express a certain concept more concisely. Yeah. But to me, that is point of tools like Elm SPA is like removing potential failures, potential bugs because you've, yeah, because you forgot to wire things, a page with the main or you did it wrong. And code generation is a pretty good tool for making sure that something that is very similar for plenty of things is done in a very consistent and well done way. Right, right, right. So I think we're, I think we're talking about two different sources of truth here because, you know, my assertion was that anytime you're doing code generation, there is a source of truth and what you pick as the source of truth is going to be important for like understanding like how people using that code generator are going to map that source of truth onto what's actually happening. They need to create a mental map. And what you're talking about is what is the value where Elm GraphQL has the value of like taking the source of truth and letting the Elm compiler know about it and Elm SPA, it's more convenient than keeping these two things in sync. Yeah, exactly. Like Elm SPA, you have a source of truth, which is all the different files in the file system, but they are not a source of truth in themselves. You make them into a source of truth. Whereas GraphQL schema is the source of truth. It is something that can be made out of sync with the Elm project. Right, right. Yes. So there's this book, I actually have to admit, I sort of read half of it and didn't finish it. I really liked the principles in this book, the design of everyday things. It's a really cool book. Are you familiar with it at all? You've read 50% more than I did. And one of the things, like I think about this sometimes when I'm using everyday things, the author, Don Norman talks about sort of the mappings of these mental models. So like, you know, how you can have like a door, basically, he says, if you have a door that, like, have you ever gone into a door and you try pushing it and then you realize you have to pull it? Yeah, like, is it something like, if a door has no handle, then you are expected to push? Right. So those are like the affordances of the door. So there are these like clear physical cues that show how to interact with it. And like, they're not even conventions. They're like, just here's what exists. And so what are you going to try to do with a door with no handle? You're going to push it. Yeah. It's like, what will your instincts tell you? Right. Exactly. Exactly. Because just looking at it, you're like, what are the possible interactions I can do with this? Well, I'm not going to touch the handle because there's no handle. Yeah, there's nothing that you can pull. And so that's, there are these affordances that give cues to how something can be used. If something has a handle, then naturally you want to pull it. If something has like a little metal bar, then you're like, oh, push on the metal bar. And I think it's important to consider like what people's intuition will be interacting with your sort of code generation interface. And that's the source of truth, right? So like consider how your source of truth is giving cues that make it easy for people to understand how to interact with something and what the implications are going to be. Another thing he talks about is like sort of these mappings. Like if you have like two different lights on two different sides and one switch is on the right side and one switch is on the left side and one light is on the right side and one light is on the left side, you could map either switch to either light. But if there's a clear physical mapping, it's going to be easier to interact with that and intuit what the behavior is going to be. So you can create a clear mental model. And I think that that's like I think about this with my with my garage door opener. I always walk into the garage door to the garage to open the door and I want to open the door. I'm looking on the right and there's a button on the left and a button on the right. And I have to always flip it in my head. I'm like, oh, it's the opposite of the intuitive one. I press the left button and I do and my brain always goes through that process. So if you can avoid having, you know, the consumers of your code generation interface go through that mental mapping by creating like my point is just like you are you are creating a mental model that users are going to have to learn and interact with. So be aware of that that mental model that people are going to have to interact with and what the affordances are, what what cues you show how to use something, you know, make impossible states impossible. But make the source of truth have a very clear mapping so that users don't have more concepts to learn. And so it's predictable what it's going to do. It's easier said than done. But ideally, if you can try piggybacking on a mental model that people already have. For instance, for GraphQL, we already have something like decoders. Is that what you're thinking? Yeah, yeah, we have we have decoders and and we have the you know, I mean, also, like, you know, with Elm GraphQL, it's not a perfect one to one mapping of GraphQL. You know, there are certain concepts like field aliases that don't exist in Elm GraphQL because it abstracts those away. But there are other concepts, you know, like objects, interfaces, unions in GraphQL that have a predictable mapping in ways that you know, objects, the interfaces, you know, the APIs for objects are generated in a specific way. And so there are certain conventions that I'm sort of configuring the right switch with the right light and the left switch with the left light where I'm trying to like find a clear mapping to make it intuitive for these concepts to go together. So what are other approachable usages of code generation? So one that I can think of is like generation for images. Like static assets sort of static assets. So often you have like images, logos, icons that are in your file system, your assets folder or something, and you want to reference them in your Elm code. So what you can do is just have a have a string pointing to their location, which you can also do in order to make it more type safe and prevent errors from typos is to create an API for it using code generation. So you create a script which loads the source of truth, which is listing all the icons in your assets folder and then generating a Elm file using that. And then one nice thing that you can do is when you say icon.add button or whatever, you have a code completion with your editor and you have something a lot more type safe. Right. You can even get inline documentation in your IDE if you generate doc comments, which is pretty cool. Yeah. I often think of like code generation is really just you're instead of like writing an API, you're writing something that generates an API for a very specific thing. Yeah. Yeah. I saw on Twitter if people have like small in house code generation tools that they use and there were a lot of interesting use cases people mentioned like internationalization is a cool one to and you can actually you can enforce certain things in in your code generation as well. So you can make impossible states impossible. You can say, you know, if there's a certain like key for your internationalization dictionary, you can say, well, if that key is missing in a particular translation dictionary, then that should be an error. For example, build error or right. Exactly. You can actually write because code generation introduces a build step. So you can actually introduce not just compiler errors, but builders, which is so I get, you know, the concept of making possible states impossible applies not only within the code that you generate, but the process of, well, I'm only going to generate code with a certain known valid structure. And if I can't produce that, I'll give a builder. Yeah. Another common one seems to be just taking like you're describing sort of mapping assets to a particular URL. I think, you know, another common one is environment variables. Yeah. Mm hmm. Like secrets that are injected as a build time in the CI. Although you shouldn't inject secrets because it's going to be in your bundle. That is true. Well, not secrets, but it's production. Everything else. Yes. Mm hmm. Yeah. Wait, I should probably go back to work and remove a few things. You should go remove those secrets. So we've already covered a few projects that use code generation. So we've covered LMSPA. We've covered LMS tailwind modules. Yeah. I've seen a few other libraries which do code generation as you are probably familiar with because that's your primary intents for code generation apparently. So chat tech has an Elm vector package, which is a vector is like a list or an array of a fixed size. And it has a package which has vector one, vector two, vector three, up until vector 50. So all of those are modules with functions that go well with each of those. Sorry, until 60. And they're using the same code for every one of those. And it would be tedious and error prone to write them by hand. So what Chad did there is write a script that generates those modules. And then he stopped at arbitrarily 60 modules. So Rupert Smith created a few packages for working with AWS. So he uses Elm, sorry, he uses Elm AWS code gen, which in turn uses one of his packages, which is called Salix, which I don't know much about it, but he seems pretty excited about it, which takes the, not the documentation, but the API definitions from AWS services, and then creates packages to work with that. So he has one to work with S, no, not with S3, with authentication, with the Cognito service and Elastin containers. So you can, he did a good job apparently from, for generating APIs that work well with those services. I don't know if it's well made in the sense like it has the Elm philosophy of preventing impossible states or if it's just a type safe way to create AWS service APIs. But I think at least as a base tool, which allows you to do anything, it's very interesting. Interesting. Yeah, I haven't used that one. So another code generation tool, I've done so much code generation, I'm like losing track of all the code generation I've done. But Elm TS Interop is a code generation tool. It happens to generate, rather than generating Elm code, it's actually generating TypeScript declaration files. But it's that same sort of principle of having a common source of truth and keeping those in sync. It's just that it works the other way around. Instead of taking some external schema and making the Elm compiler aware of it through generating Elm code, it's taking your Elm decoders and encoders and it's making TypeScript aware of those so you can use those ports. It actually, the pro version uses some code generation to make it a little bit more convenient so you can have a module where you just declare these top level values in your sort of port definitions file and then it takes those and for every top level exposed encoder, it generates a port from Elm to JavaScript and for every top level decoder, it generates from JavaScript to Elm ports unless its name is Flags, in which case it generates your Flags decoder. So now there's another type of code generation which we haven't gotten into yet, which is for scaffolding. I was expecting that one. Yeah. So these are like, there's like, what's the mental model? And then there's like, what is the purpose of the code generation? So we've talked about keeping your sources of truth in sync, but scaffolding is another really interesting area. So you've got some examples written down of scaffolding here. Yeah. So Elm SPA is one of those. It creates a new project with a bunch of predefined pages and files and Elm JSON. So a lot of things already. Elm review also has a new rule and a new package command or commands. So a new package creates a new project entirely. It's not just a git clone. It's really generation because you are giving an information and then it generates a project based on that. And same thing for the new rule, you give it a rule name and generates some scaffold, some base files with the information that you gave it and changes the rest of the files that are expected to be there. So yeah, scaffolding in this case is more about getting started rather than having a source of truth, I think. Yes, right. It gives you a convenient starting point, but it's for the scaffolding approach, you're generally using it, like you said, to get started, but you're not going to rerun it every time to keep it in sync. So the source of truth, like, so like html to elm.com, which we talked about in our Elm Tailwind Modules episode, it's this tool that I built that generates Elm code from HTML and it also can parse out your Tailwind Modules to generate code for that. So it's a code generator for a code gen tool. Because why not, turtles all the way down. But yeah, that's, you know, the source of truth for that, you know, the mental model is here's this HTML, it's got a clear mapping to Elm code and my Elm review rule as well, it's sort of, you know, able to hook in even more to the source of truth of your, like your imports in a particular module and take that context, which is cool. But it's not something that you're generally going to keep around that starting HTML and then edit the HTML anytime you want to change your templates. It's like, hey, let me help you get started with this view. But then you own it from there, rather than, hey, let me keep around this HTML file. I'm going to run the code generator on that every time to get this Elm code. And I actually never touch that Elm code. If I want to change the view, I go change the HTML file, which is the source of truth. That's something different. That's not the scaffolding approach. So when would you go for the scaffolding and when would you go for code generation? That's a good question. I think it's really like, if you can accomplish a task without human intervention, then you may as well just code generate it. But like with a view, you know, if you were to just like, you couldn't just say, here's some HTML, please map this into Elm code, it would defeat the purpose. Because the point is like, you want Elm code. So you can say list.map over these things to create a list item for each of these things from the model or whatever. And well, so what are you going to do? Create like a templating language within your HTML code? I mean, you could if you wanted to. But in that case, most of the time, you're just going to want something to help you out and say, oh, here's some HTML that I'm copying from this handy online template. It's like tailwindui.com. You've got a nice template I want to use, I want to copy paste it as my starting point, and then take ownership of the code. So at Humia, we also used code generation, kind of like Elm SPA to generate all the boilerplate for linking the main file with the individual pages. And one reason for that was sure to remove any errors that could be made because you forgot to wire something. But mostly because it was much more performant in a sense. When you add a file, you had to add a new constructor to a custom type, which was like type page equal homepage, etc. And that was actually pattern match in 2030. I don't know how many pattern matches. So you would have to add a constructor and then spend 10, 20 minutes just fixing compiler errors because, hey, you forgot to handle this constructor here and there and there. For code that was very similar to what was next to it. So you would pretty much copy paste some code, go to another place, copy paste some code and adapt it to use the constructor. And that 20 or 30 times. If you were well versed with the code base, that would take you 10 minutes. If you weren't, then it would take longer. And that was just a lot of time not well spent. So by refactoring and making it work with code generation, now adding new pages just takes a few seconds. We even have like a script that creates the file and now we can focus on more important things. Cool. Yeah. When you do code generation, you can abstract certain details. So again, it's an important distinction if you have code that a human is then modifying versus the human never touches this code. It's generated and machine maintained. I think it's very important to have a clear distinction between those. So for example, the code that Elm GraphQL generates for your GraphQL schema, I even put like auto generated code, don't modify. And in fact, I think I have an error there. If you somehow went in and tweaked it, it would say, looks like a human changed this. So delete the file and then I'll go regenerate it. But I'm not going to touch this file because it looks like a human modified it. Wait, how do you do that? Like when you regenerate, you say, oh, this file has been changed? I can't remember exactly what I did. I mean, obviously it's sort of like a heuristic, but I don't know. If the file doesn't have that comment that I generate on top of every file or something like that, then I say, it looks like this isn't the file I created. And I don't want to touch, like I just am going to blow away anything. So make sure that this folder is a clean working space for me before I do my job, because I'm just going to blow everything away with disregard for everything that a human touched. But I think that's very important that there should be a clear separation. Now, obviously humans use that code, but they shouldn't touch the generated code. You should either have code generated that's entirely maintained by the code generator, or you should have code that's scaffolded and then you take ownership over it. Or parts of it. Like you can generate part of it, scaffold another, and then use those together. What would be an example? I don't know. I haven't encountered that. I mean, like if there's something, if there are parts of it that you, that could make use of code generation and parts of it that need to be changed by someone, then you generate the one. I see. Right, right, right. You generate the former and scaffold the latter. Yes, you can certainly mix them within a project. But it's good to be clear about like a file should either be generated or not. Like it should either be maintained by a code generator or not. And it's good to not mix those up. Now it is, and another interesting thing that can happen is you can use actual Elm code, like parsing the AST as the source of truth. But that can definitely get complicated, but that can be a good way to keep the, that can be a good way to piggyback on top of a certain mental model. Cause you say, okay, well I know when I, when I write a decoder that does this, I expect it to work this way. And then you write some code generation that generates something to in support of that. But that can definitely get messy because now it's starting to feel more like metaprogramming where you change some Elm code and you're like, Oh, I can rename this. I can change this and things start to break and unexpected ways. So it can remove some of the guarantees in a certain way, which is why the mental model is really important because you, you, if you can, if you can make it so you can map very directly onto an existing concept, then somebody could say, well, if I make this change, I expect it to not break. If I make this change, I expect it to break. And you could actually retain that property, that guarantee because you've mapped onto that mental model. So what are your tips and tricks that you've learned with code generation? One of my favorite tips, which I've probably talked about it some, actually maybe I haven't talked about it on Elm radio yet. My biggest tip is end to end testing your generated code. It's awesome. Um, I've definitely, you know, given, given you my rant on this before, but, um, I love it. Uh, it's so easy to get confidence about your generated code. Basically the workflow is, you know, write an end to end test, which is some sort of snapshot test. So somehow you're saying, um, like with Elm GraphQL, for example, you've got this, this is the code it generates given this schema. And so in your, you know, in your build, you, you have like a test schema. You say, you know, I mean, with Elm GraphQL, I started with like the, the GitHub schema, the simple Star Wars example that they use for all the GraphQL stuff. I had a few schemas and I said, okay, I'm going to actually run on my build server. Um, I'm going to generate these schemas and I'm gonna, I'm gonna compare the code that was generated before with the code that's generated for this build. So every time it changes, I need to check in the changes. That's kind of the snapshot testing approach. And you're also running actual tests with the generated code, I'm guessing. Sometimes, uh, yeah, sometimes I do that as well. And do you generate the code and do you generate the test code? Well, I do that sometimes. With the Elm GraphQL generated code, I essentially just, uh, what I do is I, when, when I was initially building it, I started by first, I would manually generate the code, quote unquote, generate, uh, that I wanted it to look like. So that was sort of the code gen target and then use that. And then I, what I did is I wrote examples in the examples folder and those were sort of manual tests. So you know, every time I'm like adding a new feature or changing something, I go through and make sure all the examples are working as expected. And not only does, am I testing the behavior, but I'm testing the, I'm testing the user experience. So I'm making sure that interacting with it feels nice. The types look good. Could I get it any simpler? Is it intuitive? And then once I've got that working with the hand generated code, I check that in as my snapshot and then I iterate on that failing test until I get, I get it green with the actual code generation target being what I'm generating. So approval testing or snapshot testing is awesome for, for code generation. Right. Yeah. I also really like, so this is almost like a whole separate type of code generation, but as you were hinting at testing generated code is really nice. Like for, for LMTS Interop, I've got, I've got this tool for the pro version, which is, you know, you, you write some TypeScript type definitions in a little sort of VS code TypeScript embedded editor in the browser. And it generates LMTS Interop, you know, encoders and decoders based on that, that are going to yield the same TypeScript types. And you know, there's a lot going on there. It's non trivial, like that project is non trivial and it would be really easy to mess something up. So I, I generate a test suite. So I for, for, I have some like sample input, which is like TypeScript files and I generate a test. So I actually generate like an Elm test test suite for each of those examples. So I just have an examples folder. I write it, you know, I write a dot TS file and it actually takes that code. It feeds it into this code, which is, you know, Elm code to generate this stuff. Make sure that it, make sure that it runs, it does a reversible test and feeds input in and it says that if you run the encoder and the decoder, you get the same value. So it's generating an Elm test test suite for each of those. So, so generating Elm test test suites is awesome. That's that's a technique I like to use. I do that for HTML to Elm.com as well. I'll put a link to the source code for that example. So I what I do is I, I generate for a bunch of different HTML inputs. I generate a test suite and I, and I make sure that it's compiling. So the generated code should be compiling with the Elm tailwind modules default published package. So that's pretty handy. And I mean, we should point out like Elm test itself is just a code gen tool actually. Yeah. People don't, people don't think about it, but. Yeah, it generates a an Elm file and then compiles it. Yeah. Right. Yeah. They're like Elm explorations tests does have some kernel code, I think, but a lot of it is just using code generation. Yeah. Which is the same for like for Elm verify examples, which I think we've talked about. It's a really handy package that lets you write your, your examples in your Elm doc comments that it will actually execute and compare your expected output that you write with a little comment notation in the docs. It creates a test for each of those, right? Yeah, exactly. That's all it does. You can go in and look at it and then it just runs it with, with Elm tests. So you know, that's, I would definitely recommend considering, considering that technique if, if an opportunity presents itself, like I've, I've used that both in libraries I maintain and applications. It's a really handy technique sometimes. Yeah. I've wondered about doing something like very similar to that for Elm review, like give it, give us a set of examples and then compare the error that you get with what you would really get. Yeah. But it's a bit more tricky than I think like, do you really want to compare the errors? Yeah. Interesting. Code generation can be really nice for end to end testing things. So for for Elm pages 2.0, I've been considering taking the, the routes. So I'm trying to, I've gotten rid of routes in this generated code. I used to have generated code that had all of the routes, but then if you have a thousand routes, then you've got something in your generated code that would you, if you ever refer to it anywhere, now you've pulled all that into your bundle. So it's quite nice if you can avoid pulling that into your bundle and instead avoid incurring that cost at runtime and in your bundle size and incur that cost at build time. Well, it's a minimal cost to having a thought, you know, reference to a thousand files by using Elm review. So I've been thinking about adding some sort of hook that basically gives here's what I've been thinking about. Actually, tell me what you think of this. What I've been considering is, so there's like, there's a route type that's generated. So Elm pages 2.0 similar to Elm SPA has this file based routing. It generates a route dot Elm module, which enumerates, you know, you've got your blog route, you've got your index route. You know, some of the routes have route parameters. Some of them don't have route parameters. If it's a single page for the ones that have route parameters like blog, well, if you've got blog, slug, post one, slug, post two, that are your valid static routes. And you want to say, well, I don't want to link to post negative one because that doesn't exist or post zero that doesn't exist. So I want to use an Elm review rule to check all of the static routes. If they're static pages, then I want to check if, if it exists. Right. So, well, I, before with Elm pages 1.0, I was generating, you know, I was generating a record that referenced all of those URLs and you could use that to in a type safe way refer to static routes. Now I just have these route variants. So the blog route is going to be a single route and it's not going to, if you have a hundred blog posts, it's not going to generate something for each of those. So what I'm thinking is generate, uh, like have some sort of, um, CLI command for Elm pages where I can generate a module that, that you can use in an Elm review rule to verify that the routes are static. So it would be, so basically before running Elm review, you would first have to run this generated code because the Elm review rule would depend on that generated code. Yeah. I think that's a, that's a good idea. I actually did something very similar recently to, for, for work where I basically detect unused CSS project. So we have a bunch of CSS files and we have a lot of dead code in there because it's CSS. So what I did is I go through all of those, find all the classes and then generate an Elm file. And then I use that as a source of truth for a rule that I called no unused CSS classes. Boring. And then wherever it would find a class, it was marked as used and the ones that it couldn't find marked as unused. So using that and another rule where I disallow dynamic classes like homepage dash dash plus plus modifier, like homepage constructing CSS classes, I disallow. So with those two, two rules in place, I was able to remove all the unused CSS classes from the project, which was about 4,000 lines of code. So that was nice. Wow. Oh, that's fascinating. Okay. Yeah, that's cool. That's a, that's a good use case for, for code generation. So yeah, I mean, basically like Elm review could get arbitrary access to files and look at those and parse the, but I mean, honestly, then you'd have to write like a CSS parser in Elm and et cetera, et cetera, which you could probably easily find an NPM package that parses CSS and does all those things. So yeah. And then the watch mode can be a bit different, like, Oh, when this, which files should I check? Right. Yeah. Yeah. But th th those are questions that I have, uh, at the top of my mind, but yeah. Yeah. I'll also, I also want to like generate files using Elm review so that you can like, yeah. Like you say, this is a safe, unsafe value type of thing. Yeah. For instance, or I can auto fix the CSS files, like give me the CSS files. I will parse them and look at the ones that the classes that have been, that are not used and I will remove them for you. And I just write those back to a file to the original file. But that has a lot of challenges, but, um, it's something that I am interested in exploring. So a few tips that I have for when you do code generation is one, I would move all the generated files to a generated folder, like source gen or generated slash, whatever with Elm review. Uh, since we're on the topic, a lot of people don't include the generated codes in the files that Elm review should look at. So they do Elm review source slash and test slash through that. It only looks at those files because they don't want errors for the, for the generated code. And that makes sense. But the problem is that you, you're then limiting the amount of information that Elm review has. So it will not know the contents of some generated files, which it will need for some rules. So what I recommend is never calling Elm review with arguments like source or tests, but instead to use ignore errors for directories in your review config and ignoring the generated code, same for vendor code. Like you don't want to report errors for those. And this is like almost half of the bug reports that I get are false positives because they didn't, they limited the amount of information that the rules could have access to. Another thing that I would really recommend is like at the top of every file that you generate, add a comment saying, this is how I generated the file. Like to generate this file, I used this script or this file. That way people who will look at the generated file will know, Oh, if I need to change something, I need to go there because sometimes like it is not obvious where it comes from. If you can indicate the source of truth as even better. So if you are generating like icons for your, that are in your assets, you can add a comments or documentation for each of the functions that you generate that says, Hey, this represents icon, blah, blah, blah, which is at assets slash whatever. So I think that's always pretty nice to have and it really doesn't cut costs a lot. Right. Yeah. It's just, it's just one of those things that's sort of a habit because while, while you're in there, you've got the context, you've got the data you need, just output it in the generated code in a comment. Also like do you format your generated code? What I try to do usually is to make the generator code look kind of like Elm format and that is usually enough. I find. Yeah. That's usually the first thing I reach for, but it, it, it, it depends on the, on the use case. Sometimes I, I format it. I mean, you can get pretty close to Elm format. Right. Well, depending on how simple it is, if it's like our build timestamp, then it would be overkill to run Elm format because you just, you know, you're just generating a simple hard coded thing. Just use your Elm format target. It is fine to run Elm format, but it's, it is not as fast as just not running it. Yeah. And it's another moving part. And yeah. Yeah. What do you think about things like, you know, if you wanted to generate an enum, so you've got like an Elm custom type and you want to have access to, you know, let's say like colors and you want to have all colors is a list of that enum, which is like the colors in your app. And then you want to have from string to string. What do you think about using that for, for code generation? You mean generating that, that file or? Generating that file. And what would you use for the source of truth for that? Well, it really depends on what your source of truth is. Like if your source of truth is what your designer gives you, like a Figma file or, or similar, then if you can get the source of truth as a file or as an API call, I guess, then sure. That sounds like a good idea. When you have something like all colors, like a list of all colors, I would worry about the order. Like it, does the order matter? If so, in which order should you put it? And yeah. Right. Yeah. That's a good reminder of just like, it really does depend on the use case. And, and that, I think that's all the more reason to, you know, take advantage of this for your own use cases to do code generation, because if you're just relying on community code generation tools only, they don't know about your data source and your specific domain and you do, and you can build in those, that understanding of those constraints. So take advantage of that. And you know, I mean, build simple abstractions reach for non code generated solutions first, but if there's some source of truth, you can keep in sync with, if there's some helpful scaffolding tool you can build for yourself, go build it and, you know, take advantage. Okay. So there's one more thing we didn't touch on. We sort of hinted at, you know, doing simple string templating to generate, you know, our, our build timestamp. So you know, you can do that with a simple node script. Yeah. Like if I write it in, in Elm, I even just go for string concatenation. Like I don't even go, I don't even go for like a string where I replace things. I just go for string concatenation. It's just very easy because Elm is a simple language, so it's easy to generate also. Right. Well, yeah. And that, you know what I find extremely helpful. This is going to shock you, Jeroen. But what I find very helpful for keeping myself honest about using the simplest thing that could work is starting with hard coding. Oh, I'm not surprised. I was teasing. Yeah. I'm sure, I'm sure our listeners are bored of me saying this at this point, but I find hard coding extremely useful for code generation as well. Just because validate that the thing you're generating, I mean, first of all, don't even generate something, just write a module. Does it work the way you want? Oh, nice. It would be great if I had this module generated. Okay, well, write a JS file, generate it. Or if you're going into Elm to do it, set up something that runs some Elm code, generate it from Elm just as a single hard coded string, and then pull out the pieces that you need to remove the hard coding from. And well, do that the simplest way you can. If that's with string concatenation, great. If you want to use string interpolation with a library for that, like Luke's string interpolation library, great. If you want to get really fancy, you can use Rupert's Elm syntax DSL to generate code, but it really shouldn't be the first thing you reach for. At least that's not how I like to do it. I like to do the simplest thing that could possibly work. If the particular problem you're solving, it would be helpful to generate it through an AST DSL, then pull that abstraction in when you need it. And if you've got approval tests helping you, you can tweak the way you're generating your code and if you haven't changed your generation output, it doesn't matter how you arrived at it. You just rerun your approval, your snapshot test, and it tells you nothing's changed and you're good to go. I'd like to touch on one last thing. So a lot of people want to use Elm review to forbid writing code one way. For instance, the page boilerplate that you have in your main code. Sometimes I hear people saying, oh, it would be useful to have an Elm review rule that checks whether the boilerplate is well written and does not have an error that you didn't forget to do this and that you did this exactly that way. And this is one instance where code generation can be useful, as I explained before, because like Elm review rules are very good at finding things that are wrong, but you need to specify which ones you're expecting. Like it needs to look for one specific thing, another specific thing, but it cannot tell you whether things are okay as a general thing. Maybe if you multiply the number of rules or the number of checks, but if you want your code to be written in one very specific way or maybe a few, but a limited number of ways, then code generation is probably a better bet. Right, because it can enforce consistency in a different way, in a simpler way. And also it will be less painful to write. It's easier to just run a script that generates a code rather than writing the code yourself, which takes time, as I mentioned before, and then have Elm review tell you, oh, you did this wrong. Oh, you did that wrong. Oh, and then you got a compiler errors. Oh, well, yeah, just run the script and you're done. If you can do that, I think that's a good idea. Right, right. And if you have to remember to do one thing, one place, another thing, another place, another thing, another place, that might be a cue to consider code generation. Although there's certainly a cost and we should reiterate, code generation does add complexity. It does add moving parts. It does make it harder to trace why something's behaving a certain way. If something goes wrong, do we remember to generate this code? Is the source of truth being pulled in correctly? Or just more things, more moving parts? Also, it works really well for things that are very similar. When I did the code generation for the pages, one problem is that a lot of pages were working slightly differently. Their update function took another argument. Their view function didn't take that argument. And I had to do a lot of refactoring work to make them all consistent, to have them all use the same abstraction. But once I got that, generating the code was very easy. But it didn't work. I couldn't have made that code generation work until I got to a place where all the pages were using the same abstraction, where they were very similar to each other. Yeah. And I think it takes experience to be able to see, number one, where you could make those things become similar first. And number two, when they won't then later start diverging and needing to be different again. Because if you start doing code generation and now you're like, oh, well, yeah, the code generation worked really well for this simple case. But for this more nuanced case, there's not a clear source of truth. So I can no longer generate this thing. You can run into problems there. Sure. But the thing is, if you want to opt out of code generating, well, you have Elm code. So you just move it and you check it in your Git repo. True. Yeah. And probably the biggest thing to watch out for is if your code generation is creating a whole set of abstractions that people have to learn, that's a red flag. Because now you're getting bound to this other abstraction. Unless it's a better abstraction. If it's a better abstraction. But I've seen code where there's code generation happening from something where you have to piece things together just right. And if they don't get pieced together just right, the generated code is not going to be happy. Oh, yeah. And that's a bad time. And now, well, how do you back out of that and eject that? Well, you're depending on this extremely complex generated code that you're not going to go maintain by hand. And actually, that's another tip too, is try to keep the generated code as simple as possible, ideally, if you can. You don't want to have to go and debug generated code. Because that would mean that you have to debug the code generation scripts, which is not as easy as debugging Elm code. Right. And oftentimes, if you can, generate intermediary little helper functions or APIs for the generated code to use. So that doesn't vary. So you can just say, here's some code that's only used by the generated code, but it reduces the actual code that we're generating, because it can leverage those APIs. All right. So you covered everything about code generation? Well, we've certainly covered a lot. And yeah, hopefully people will give it a try and let us know how it goes.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dylan.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 2, "seek": 0, "start": 2.0, "end": 3.0, "text": " Well, what are we talking about today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 3, "seek": 0, "start": 3.0, "end": 4.0, "text": " Today we're talking about code generation.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 4, "seek": 0, "start": 4.0, "end": 5.0, "text": " Uh huh.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 5, "seek": 0, "start": 5.0, "end": 6.0, "text": " Well, have you ever done code generation?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 6, "seek": 0, "start": 6.0, "end": 7.0, "text": " I have done my fair share.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 7, "seek": 0, "start": 7.0, "end": 8.0, "text": " Uh huh.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 8, "seek": 0, "start": 8.0, "end": 9.0, "text": " I'm guessing you too.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 9, "seek": 0, "start": 9.0, "end": 10.0, "text": " I've done a lot of code generation, and I really enjoy it.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 10, "seek": 0, "start": 10.0, "end": 11.0, "text": " It's very cool.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 11, "seek": 0, "start": 11.0, "end": 26.2, "text": " So like code generation, well, as is our tradition, let's lay out some definitions.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 1042, 11, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3089, 5125, 13, 50564, 50564, 4019, 7020, 13, 50614, 50614, 1042, 11, 362, 291, 1562, 1096, 3089, 5125, 30, 50664, 50664, 286, 362, 1096, 452, 3143, 2073, 13, 50714, 50714, 4019, 7020, 13, 50764, 50764, 286, 478, 17939, 291, 886, 13, 50814, 50814, 286, 600, 1096, 257, 688, 295, 3089, 5125, 11, 293, 286, 534, 2103, 309, 13, 50864, 50864, 467, 311, 588, 1627, 13, 50914, 50914, 407, 411, 3089, 5125, 11, 731, 11, 382, 307, 527, 6994, 11, 718, 311, 2360, 484, 512, 21988, 13, 51674, 51674], "temperature": 0.2, "avg_logprob": -0.2183017412821452, "compression_ratio": 1.7570093457943925, "no_caption_prob": 0.09390288591384888}, {"id": 12, "seek": 2620, "start": 26.2, "end": 30.32, "text": " So what is code generation in the context of Elm?", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 13, "seek": 2620, "start": 30.32, "end": 33.8, "text": " Well, code generation is just writing Elm code.", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 14, "seek": 2620, "start": 33.8, "end": 36.68, "text": " So you are a code generator, Dylan.", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 15, "seek": 2620, "start": 36.68, "end": 37.68, "text": " That's true.", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 16, "seek": 2620, "start": 37.68, "end": 38.68, "text": " You are a very good code generator.", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 17, "seek": 2620, "start": 38.68, "end": 41.480000000000004, "text": " I'm a code generation machine.", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 18, "seek": 2620, "start": 41.480000000000004, "end": 47.519999999999996, "text": " And if you want to become even more productive at generating code, what if you wrote code", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 19, "seek": 2620, "start": 47.519999999999996, "end": 49.0, "text": " that could write code?", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 20, "seek": 2620, "start": 49.0, "end": 50.0, "text": " Wouldn't that be cool?", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 21, "seek": 2620, "start": 50.0, "end": 55.06, "text": " I thought you were going to say, oh, what if you want to become even better just by", "tokens": [50364, 407, 437, 307, 3089, 5125, 294, 264, 4319, 295, 2699, 76, 30, 50570, 50570, 1042, 11, 3089, 5125, 307, 445, 3579, 2699, 76, 3089, 13, 50744, 50744, 407, 291, 366, 257, 3089, 19265, 11, 28160, 13, 50888, 50888, 663, 311, 2074, 13, 50938, 50938, 509, 366, 257, 588, 665, 3089, 19265, 13, 50988, 50988, 286, 478, 257, 3089, 5125, 3479, 13, 51128, 51128, 400, 498, 291, 528, 281, 1813, 754, 544, 13304, 412, 17746, 3089, 11, 437, 498, 291, 4114, 3089, 51430, 51430, 300, 727, 2464, 3089, 30, 51504, 51504, 26291, 380, 300, 312, 1627, 30, 51554, 51554, 286, 1194, 291, 645, 516, 281, 584, 11, 1954, 11, 437, 498, 291, 528, 281, 1813, 754, 1101, 445, 538, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.1471485544423588, "compression_ratio": 1.8583690987124464, "no_caption_prob": 2.281584238517098e-05}, {"id": 22, "seek": 5506, "start": 55.06, "end": 56.6, "text": " my book?", "tokens": [50364, 452, 1446, 30, 50441, 50441, 2704, 13, 50491, 50491, 865, 11, 572, 11, 286, 914, 11, 286, 914, 534, 11, 2232, 11, 291, 458, 11, 2699, 76, 307, 257, 3089, 19265, 13, 50857, 50857, 316, 31958, 307, 257, 3089, 19265, 13, 50964, 50964, 1133, 321, 434, 1417, 466, 3089, 5125, 558, 586, 11, 437, 321, 434, 534, 1417, 466, 307, 884, 51230, 51230, 721, 300, 291, 2759, 380, 312, 1075, 281, 360, 445, 538, 3579, 512, 2199, 2699, 76, 3089, 420, 11, 291, 458, 11, 51527, 51527, 4317, 5127, 512, 4514, 15902, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.14720340610779437, "compression_ratio": 1.6715686274509804, "no_caption_prob": 8.939440704125445e-06}, {"id": 23, "seek": 5506, "start": 56.6, "end": 57.6, "text": " Maybe.", "tokens": [50364, 452, 1446, 30, 50441, 50441, 2704, 13, 50491, 50491, 865, 11, 572, 11, 286, 914, 11, 286, 914, 534, 11, 2232, 11, 291, 458, 11, 2699, 76, 307, 257, 3089, 19265, 13, 50857, 50857, 316, 31958, 307, 257, 3089, 19265, 13, 50964, 50964, 1133, 321, 434, 1417, 466, 3089, 5125, 558, 586, 11, 437, 321, 434, 534, 1417, 466, 307, 884, 51230, 51230, 721, 300, 291, 2759, 380, 312, 1075, 281, 360, 445, 538, 3579, 512, 2199, 2699, 76, 3089, 420, 11, 291, 458, 11, 51527, 51527, 4317, 5127, 512, 4514, 15902, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.14720340610779437, "compression_ratio": 1.6715686274509804, "no_caption_prob": 8.939440704125445e-06}, {"id": 24, "seek": 5506, "start": 57.6, "end": 64.92, "text": " Yeah, no, I mean, I mean really, uh, you know, Elm is a code generator.", "tokens": [50364, 452, 1446, 30, 50441, 50441, 2704, 13, 50491, 50491, 865, 11, 572, 11, 286, 914, 11, 286, 914, 534, 11, 2232, 11, 291, 458, 11, 2699, 76, 307, 257, 3089, 19265, 13, 50857, 50857, 316, 31958, 307, 257, 3089, 19265, 13, 50964, 50964, 1133, 321, 434, 1417, 466, 3089, 5125, 558, 586, 11, 437, 321, 434, 534, 1417, 466, 307, 884, 51230, 51230, 721, 300, 291, 2759, 380, 312, 1075, 281, 360, 445, 538, 3579, 512, 2199, 2699, 76, 3089, 420, 11, 291, 458, 11, 51527, 51527, 4317, 5127, 512, 4514, 15902, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.14720340610779437, "compression_ratio": 1.6715686274509804, "no_caption_prob": 8.939440704125445e-06}, {"id": 25, "seek": 5506, "start": 64.92, "end": 67.06, "text": " A compiler is a code generator.", "tokens": [50364, 452, 1446, 30, 50441, 50441, 2704, 13, 50491, 50491, 865, 11, 572, 11, 286, 914, 11, 286, 914, 534, 11, 2232, 11, 291, 458, 11, 2699, 76, 307, 257, 3089, 19265, 13, 50857, 50857, 316, 31958, 307, 257, 3089, 19265, 13, 50964, 50964, 1133, 321, 434, 1417, 466, 3089, 5125, 558, 586, 11, 437, 321, 434, 534, 1417, 466, 307, 884, 51230, 51230, 721, 300, 291, 2759, 380, 312, 1075, 281, 360, 445, 538, 3579, 512, 2199, 2699, 76, 3089, 420, 11, 291, 458, 11, 51527, 51527, 4317, 5127, 512, 4514, 15902, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.14720340610779437, "compression_ratio": 1.6715686274509804, "no_caption_prob": 8.939440704125445e-06}, {"id": 26, "seek": 5506, "start": 67.06, "end": 72.38, "text": " When we're talking about code generation right now, what we're really talking about is doing", "tokens": [50364, 452, 1446, 30, 50441, 50441, 2704, 13, 50491, 50491, 865, 11, 572, 11, 286, 914, 11, 286, 914, 534, 11, 2232, 11, 291, 458, 11, 2699, 76, 307, 257, 3089, 19265, 13, 50857, 50857, 316, 31958, 307, 257, 3089, 19265, 13, 50964, 50964, 1133, 321, 434, 1417, 466, 3089, 5125, 558, 586, 11, 437, 321, 434, 534, 1417, 466, 307, 884, 51230, 51230, 721, 300, 291, 2759, 380, 312, 1075, 281, 360, 445, 538, 3579, 512, 2199, 2699, 76, 3089, 420, 11, 291, 458, 11, 51527, 51527, 4317, 5127, 512, 4514, 15902, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.14720340610779437, "compression_ratio": 1.6715686274509804, "no_caption_prob": 8.939440704125445e-06}, {"id": 27, "seek": 5506, "start": 72.38, "end": 78.32000000000001, "text": " things that you wouldn't be able to do just by writing some simple Elm code or, you know,", "tokens": [50364, 452, 1446, 30, 50441, 50441, 2704, 13, 50491, 50491, 865, 11, 572, 11, 286, 914, 11, 286, 914, 534, 11, 2232, 11, 291, 458, 11, 2699, 76, 307, 257, 3089, 19265, 13, 50857, 50857, 316, 31958, 307, 257, 3089, 19265, 13, 50964, 50964, 1133, 321, 434, 1417, 466, 3089, 5125, 558, 586, 11, 437, 321, 434, 534, 1417, 466, 307, 884, 51230, 51230, 721, 300, 291, 2759, 380, 312, 1075, 281, 360, 445, 538, 3579, 512, 2199, 2699, 76, 3089, 420, 11, 291, 458, 11, 51527, 51527, 4317, 5127, 512, 4514, 15902, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.14720340610779437, "compression_ratio": 1.6715686274509804, "no_caption_prob": 8.939440704125445e-06}, {"id": 28, "seek": 5506, "start": 78.32000000000001, "end": 80.52000000000001, "text": " perhaps adding some safety mechanisms.", "tokens": [50364, 452, 1446, 30, 50441, 50441, 2704, 13, 50491, 50491, 865, 11, 572, 11, 286, 914, 11, 286, 914, 534, 11, 2232, 11, 291, 458, 11, 2699, 76, 307, 257, 3089, 19265, 13, 50857, 50857, 316, 31958, 307, 257, 3089, 19265, 13, 50964, 50964, 1133, 321, 434, 1417, 466, 3089, 5125, 558, 586, 11, 437, 321, 434, 534, 1417, 466, 307, 884, 51230, 51230, 721, 300, 291, 2759, 380, 312, 1075, 281, 360, 445, 538, 3579, 512, 2199, 2699, 76, 3089, 420, 11, 291, 458, 11, 51527, 51527, 4317, 5127, 512, 4514, 15902, 13, 51637, 51637], "temperature": 0.0, "avg_logprob": -0.14720340610779437, "compression_ratio": 1.6715686274509804, "no_caption_prob": 8.939440704125445e-06}, {"id": 29, "seek": 8052, "start": 80.52, "end": 87.03999999999999, "text": " So like, yeah, basically generating code through automated scripts or tools and for different", "tokens": [50364, 407, 411, 11, 1338, 11, 1936, 17746, 3089, 807, 18473, 23294, 420, 3873, 293, 337, 819, 50690, 50690, 9932, 300, 321, 486, 352, 807, 13, 50770, 50770, 1779, 13, 50820, 50820, 407, 309, 311, 411, 11, 286, 914, 11, 472, 295, 11, 1105, 11, 291, 458, 11, 2745, 472, 295, 11, 472, 295, 264, 5110, 300, 51050, 51050, 307, 1192, 295, 1575, 337, 385, 576, 312, 2699, 76, 21884, 13695, 13, 51186, 51186, 400, 286, 519, 300, 300, 311, 257, 1238, 665, 11, 1238, 2199, 1365, 294, 257, 636, 11, 570, 11, 370, 411, 51468, 51468, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 281, 519, 466, 337, 3089, 5125, 307, 437, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1118671449564271, "compression_ratio": 1.6943396226415095, "no_caption_prob": 1.0952943739539478e-05}, {"id": 30, "seek": 8052, "start": 87.03999999999999, "end": 88.64, "text": " purposes that we will go through.", "tokens": [50364, 407, 411, 11, 1338, 11, 1936, 17746, 3089, 807, 18473, 23294, 420, 3873, 293, 337, 819, 50690, 50690, 9932, 300, 321, 486, 352, 807, 13, 50770, 50770, 1779, 13, 50820, 50820, 407, 309, 311, 411, 11, 286, 914, 11, 472, 295, 11, 1105, 11, 291, 458, 11, 2745, 472, 295, 11, 472, 295, 264, 5110, 300, 51050, 51050, 307, 1192, 295, 1575, 337, 385, 576, 312, 2699, 76, 21884, 13695, 13, 51186, 51186, 400, 286, 519, 300, 300, 311, 257, 1238, 665, 11, 1238, 2199, 1365, 294, 257, 636, 11, 570, 11, 370, 411, 51468, 51468, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 281, 519, 466, 337, 3089, 5125, 307, 437, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1118671449564271, "compression_ratio": 1.6943396226415095, "no_caption_prob": 1.0952943739539478e-05}, {"id": 31, "seek": 8052, "start": 88.64, "end": 89.64, "text": " Right.", "tokens": [50364, 407, 411, 11, 1338, 11, 1936, 17746, 3089, 807, 18473, 23294, 420, 3873, 293, 337, 819, 50690, 50690, 9932, 300, 321, 486, 352, 807, 13, 50770, 50770, 1779, 13, 50820, 50820, 407, 309, 311, 411, 11, 286, 914, 11, 472, 295, 11, 1105, 11, 291, 458, 11, 2745, 472, 295, 11, 472, 295, 264, 5110, 300, 51050, 51050, 307, 1192, 295, 1575, 337, 385, 576, 312, 2699, 76, 21884, 13695, 13, 51186, 51186, 400, 286, 519, 300, 300, 311, 257, 1238, 665, 11, 1238, 2199, 1365, 294, 257, 636, 11, 570, 11, 370, 411, 51468, 51468, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 281, 519, 466, 337, 3089, 5125, 307, 437, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1118671449564271, "compression_ratio": 1.6943396226415095, "no_caption_prob": 1.0952943739539478e-05}, {"id": 32, "seek": 8052, "start": 89.64, "end": 94.24, "text": " So it's like, I mean, one of, um, you know, obviously one of, one of the examples that", "tokens": [50364, 407, 411, 11, 1338, 11, 1936, 17746, 3089, 807, 18473, 23294, 420, 3873, 293, 337, 819, 50690, 50690, 9932, 300, 321, 486, 352, 807, 13, 50770, 50770, 1779, 13, 50820, 50820, 407, 309, 311, 411, 11, 286, 914, 11, 472, 295, 11, 1105, 11, 291, 458, 11, 2745, 472, 295, 11, 472, 295, 264, 5110, 300, 51050, 51050, 307, 1192, 295, 1575, 337, 385, 576, 312, 2699, 76, 21884, 13695, 13, 51186, 51186, 400, 286, 519, 300, 300, 311, 257, 1238, 665, 11, 1238, 2199, 1365, 294, 257, 636, 11, 570, 11, 370, 411, 51468, 51468, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 281, 519, 466, 337, 3089, 5125, 307, 437, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1118671449564271, "compression_ratio": 1.6943396226415095, "no_caption_prob": 1.0952943739539478e-05}, {"id": 33, "seek": 8052, "start": 94.24, "end": 96.96, "text": " is top of mind for me would be Elm GraphQL.", "tokens": [50364, 407, 411, 11, 1338, 11, 1936, 17746, 3089, 807, 18473, 23294, 420, 3873, 293, 337, 819, 50690, 50690, 9932, 300, 321, 486, 352, 807, 13, 50770, 50770, 1779, 13, 50820, 50820, 407, 309, 311, 411, 11, 286, 914, 11, 472, 295, 11, 1105, 11, 291, 458, 11, 2745, 472, 295, 11, 472, 295, 264, 5110, 300, 51050, 51050, 307, 1192, 295, 1575, 337, 385, 576, 312, 2699, 76, 21884, 13695, 13, 51186, 51186, 400, 286, 519, 300, 300, 311, 257, 1238, 665, 11, 1238, 2199, 1365, 294, 257, 636, 11, 570, 11, 370, 411, 51468, 51468, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 281, 519, 466, 337, 3089, 5125, 307, 437, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1118671449564271, "compression_ratio": 1.6943396226415095, "no_caption_prob": 1.0952943739539478e-05}, {"id": 34, "seek": 8052, "start": 96.96, "end": 102.6, "text": " And I think that that's a pretty good, pretty simple example in a way, because, so like", "tokens": [50364, 407, 411, 11, 1338, 11, 1936, 17746, 3089, 807, 18473, 23294, 420, 3873, 293, 337, 819, 50690, 50690, 9932, 300, 321, 486, 352, 807, 13, 50770, 50770, 1779, 13, 50820, 50820, 407, 309, 311, 411, 11, 286, 914, 11, 472, 295, 11, 1105, 11, 291, 458, 11, 2745, 472, 295, 11, 472, 295, 264, 5110, 300, 51050, 51050, 307, 1192, 295, 1575, 337, 385, 576, 312, 2699, 76, 21884, 13695, 13, 51186, 51186, 400, 286, 519, 300, 300, 311, 257, 1238, 665, 11, 1238, 2199, 1365, 294, 257, 636, 11, 570, 11, 370, 411, 51468, 51468, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 281, 519, 466, 337, 3089, 5125, 307, 437, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1118671449564271, "compression_ratio": 1.6943396226415095, "no_caption_prob": 1.0952943739539478e-05}, {"id": 35, "seek": 8052, "start": 102.6, "end": 108.12, "text": " one of the things that I think is really interesting to think about for code generation is what", "tokens": [50364, 407, 411, 11, 1338, 11, 1936, 17746, 3089, 807, 18473, 23294, 420, 3873, 293, 337, 819, 50690, 50690, 9932, 300, 321, 486, 352, 807, 13, 50770, 50770, 1779, 13, 50820, 50820, 407, 309, 311, 411, 11, 286, 914, 11, 472, 295, 11, 1105, 11, 291, 458, 11, 2745, 472, 295, 11, 472, 295, 264, 5110, 300, 51050, 51050, 307, 1192, 295, 1575, 337, 385, 576, 312, 2699, 76, 21884, 13695, 13, 51186, 51186, 400, 286, 519, 300, 300, 311, 257, 1238, 665, 11, 1238, 2199, 1365, 294, 257, 636, 11, 570, 11, 370, 411, 51468, 51468, 472, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 281, 519, 466, 337, 3089, 5125, 307, 437, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.1118671449564271, "compression_ratio": 1.6943396226415095, "no_caption_prob": 1.0952943739539478e-05}, {"id": 36, "seek": 10812, "start": 108.12, "end": 111.64, "text": " is the source of truth and what's the mental model.", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 37, "seek": 10812, "start": 111.64, "end": 116.4, "text": " And so for, for Elm GraphQL, what's the purpose of the code generation?", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 38, "seek": 10812, "start": 116.4, "end": 121.72, "text": " What is it giving you that just writing code by itself couldn't give you?", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 39, "seek": 10812, "start": 121.72, "end": 123.76, "text": " Why not just use a plain old API, right?", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 40, "seek": 10812, "start": 123.76, "end": 128.16, "text": " Like if you can write an API without code generation, that's far better.", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 41, "seek": 10812, "start": 128.16, "end": 130.84, "text": " You shouldn't reach for code generation unless you really need it.", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 42, "seek": 10812, "start": 130.84, "end": 135.52, "text": " So first of all, why would you go through for code generation and not write the code", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 43, "seek": 10812, "start": 135.52, "end": 136.52, "text": " yourself?", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 44, "seek": 10812, "start": 136.52, "end": 137.52, "text": " Right.", "tokens": [50364, 307, 264, 4009, 295, 3494, 293, 437, 311, 264, 4973, 2316, 13, 50540, 50540, 400, 370, 337, 11, 337, 2699, 76, 21884, 13695, 11, 437, 311, 264, 4334, 295, 264, 3089, 5125, 30, 50778, 50778, 708, 307, 309, 2902, 291, 300, 445, 3579, 3089, 538, 2564, 2809, 380, 976, 291, 30, 51044, 51044, 1545, 406, 445, 764, 257, 11121, 1331, 9362, 11, 558, 30, 51146, 51146, 1743, 498, 291, 393, 2464, 364, 9362, 1553, 3089, 5125, 11, 300, 311, 1400, 1101, 13, 51366, 51366, 509, 4659, 380, 2524, 337, 3089, 5125, 5969, 291, 534, 643, 309, 13, 51500, 51500, 407, 700, 295, 439, 11, 983, 576, 291, 352, 807, 337, 3089, 5125, 293, 406, 2464, 264, 3089, 51734, 51734, 1803, 30, 51784, 51784, 1779, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.09181805544121321, "compression_ratio": 1.7454545454545454, "no_caption_prob": 3.340509692861815e-06}, {"id": 45, "seek": 13752, "start": 137.52, "end": 142.68, "text": " So if you take the example of Elm GraphQL, you've got this external thing, the schema", "tokens": [50364, 407, 498, 291, 747, 264, 1365, 295, 2699, 76, 21884, 13695, 11, 291, 600, 658, 341, 8320, 551, 11, 264, 34078, 50622, 50622, 293, 2699, 76, 1177, 380, 458, 466, 300, 412, 31413, 565, 13, 50824, 50824, 1711, 34474, 11, 291, 393, 2924, 2699, 76, 466, 428, 34078, 11, 457, 291, 528, 31958, 32567, 13, 51150, 51150, 407, 300, 311, 472, 295, 264, 534, 1627, 721, 291, 393, 360, 365, 3089, 5125, 307, 291, 393, 1333, 51332, 51332, 295, 1565, 341, 1589, 370, 300, 406, 787, 307, 2699, 76, 3650, 295, 309, 412, 34474, 562, 428, 3089, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08412057102316677, "compression_ratio": 1.6939655172413792, "no_caption_prob": 3.611958391047665e-06}, {"id": 46, "seek": 13752, "start": 142.68, "end": 146.72, "text": " and Elm doesn't know about that at compile time.", "tokens": [50364, 407, 498, 291, 747, 264, 1365, 295, 2699, 76, 21884, 13695, 11, 291, 600, 658, 341, 8320, 551, 11, 264, 34078, 50622, 50622, 293, 2699, 76, 1177, 380, 458, 466, 300, 412, 31413, 565, 13, 50824, 50824, 1711, 34474, 11, 291, 393, 2924, 2699, 76, 466, 428, 34078, 11, 457, 291, 528, 31958, 32567, 13, 51150, 51150, 407, 300, 311, 472, 295, 264, 534, 1627, 721, 291, 393, 360, 365, 3089, 5125, 307, 291, 393, 1333, 51332, 51332, 295, 1565, 341, 1589, 370, 300, 406, 787, 307, 2699, 76, 3650, 295, 309, 412, 34474, 562, 428, 3089, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08412057102316677, "compression_ratio": 1.6939655172413792, "no_caption_prob": 3.611958391047665e-06}, {"id": 47, "seek": 13752, "start": 146.72, "end": 153.24, "text": " At runtime, you can teach Elm about your schema, but you want compiler guarantees.", "tokens": [50364, 407, 498, 291, 747, 264, 1365, 295, 2699, 76, 21884, 13695, 11, 291, 600, 658, 341, 8320, 551, 11, 264, 34078, 50622, 50622, 293, 2699, 76, 1177, 380, 458, 466, 300, 412, 31413, 565, 13, 50824, 50824, 1711, 34474, 11, 291, 393, 2924, 2699, 76, 466, 428, 34078, 11, 457, 291, 528, 31958, 32567, 13, 51150, 51150, 407, 300, 311, 472, 295, 264, 534, 1627, 721, 291, 393, 360, 365, 3089, 5125, 307, 291, 393, 1333, 51332, 51332, 295, 1565, 341, 1589, 370, 300, 406, 787, 307, 2699, 76, 3650, 295, 309, 412, 34474, 562, 428, 3089, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08412057102316677, "compression_ratio": 1.6939655172413792, "no_caption_prob": 3.611958391047665e-06}, {"id": 48, "seek": 13752, "start": 153.24, "end": 156.88, "text": " So that's one of the really cool things you can do with code generation is you can sort", "tokens": [50364, 407, 498, 291, 747, 264, 1365, 295, 2699, 76, 21884, 13695, 11, 291, 600, 658, 341, 8320, 551, 11, 264, 34078, 50622, 50622, 293, 2699, 76, 1177, 380, 458, 466, 300, 412, 31413, 565, 13, 50824, 50824, 1711, 34474, 11, 291, 393, 2924, 2699, 76, 466, 428, 34078, 11, 457, 291, 528, 31958, 32567, 13, 51150, 51150, 407, 300, 311, 472, 295, 264, 534, 1627, 721, 291, 393, 360, 365, 3089, 5125, 307, 291, 393, 1333, 51332, 51332, 295, 1565, 341, 1589, 370, 300, 406, 787, 307, 2699, 76, 3650, 295, 309, 412, 34474, 562, 428, 3089, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08412057102316677, "compression_ratio": 1.6939655172413792, "no_caption_prob": 3.611958391047665e-06}, {"id": 49, "seek": 13752, "start": 156.88, "end": 162.48000000000002, "text": " of bring this information so that not only is Elm aware of it at runtime when your code", "tokens": [50364, 407, 498, 291, 747, 264, 1365, 295, 2699, 76, 21884, 13695, 11, 291, 600, 658, 341, 8320, 551, 11, 264, 34078, 50622, 50622, 293, 2699, 76, 1177, 380, 458, 466, 300, 412, 31413, 565, 13, 50824, 50824, 1711, 34474, 11, 291, 393, 2924, 2699, 76, 466, 428, 34078, 11, 457, 291, 528, 31958, 32567, 13, 51150, 51150, 407, 300, 311, 472, 295, 264, 534, 1627, 721, 291, 393, 360, 365, 3089, 5125, 307, 291, 393, 1333, 51332, 51332, 295, 1565, 341, 1589, 370, 300, 406, 787, 307, 2699, 76, 3650, 295, 309, 412, 34474, 562, 428, 3089, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08412057102316677, "compression_ratio": 1.6939655172413792, "no_caption_prob": 3.611958391047665e-06}, {"id": 50, "seek": 16248, "start": 162.48, "end": 168.16, "text": " is running, but the compiler that you can teach the Elm compiler about external things", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 51, "seek": 16248, "start": 168.16, "end": 172.56, "text": " because the Elm compiler, you can't just tell the Elm compiler.", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 52, "seek": 16248, "start": 172.56, "end": 179.12, "text": " Now with, with certain fancy magical languages, you can do this, but Elm is not a fancy magical", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 53, "seek": 16248, "start": 179.12, "end": 180.12, "text": " compiler.", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 54, "seek": 16248, "start": 180.12, "end": 184.39999999999998, "text": " It's a very simple, predictable, boring compiler, which is really one of the things we like", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 55, "seek": 16248, "start": 184.39999999999998, "end": 185.39999999999998, "text": " about it.", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 56, "seek": 16248, "start": 185.39999999999998, "end": 190.23999999999998, "text": " But we also like our compiler to know about the types in our GraphQL API.", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 57, "seek": 16248, "start": 190.23999999999998, "end": 191.23999999999998, "text": " That's very nice.", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 58, "seek": 16248, "start": 191.23999999999998, "end": 192.23999999999998, "text": " Right.", "tokens": [50364, 307, 2614, 11, 457, 264, 31958, 300, 291, 393, 2924, 264, 2699, 76, 31958, 466, 8320, 721, 50648, 50648, 570, 264, 2699, 76, 31958, 11, 291, 393, 380, 445, 980, 264, 2699, 76, 31958, 13, 50868, 50868, 823, 365, 11, 365, 1629, 10247, 12066, 8650, 11, 291, 393, 360, 341, 11, 457, 2699, 76, 307, 406, 257, 10247, 12066, 51196, 51196, 31958, 13, 51246, 51246, 467, 311, 257, 588, 2199, 11, 27737, 11, 9989, 31958, 11, 597, 307, 534, 472, 295, 264, 721, 321, 411, 51460, 51460, 466, 309, 13, 51510, 51510, 583, 321, 611, 411, 527, 31958, 281, 458, 466, 264, 3467, 294, 527, 21884, 13695, 9362, 13, 51752, 51752, 663, 311, 588, 1481, 13, 51802, 51802, 1779, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.08448913789564563, "compression_ratio": 1.7713178294573644, "no_caption_prob": 1.4970817574067041e-05}, {"id": 59, "seek": 19224, "start": 192.24, "end": 198.56, "text": " So you can try to get a field and the compiler says, uh, there's no such field, or, uh, you're", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 60, "seek": 19224, "start": 198.56, "end": 201.48000000000002, "text": " treating this as if it was an int, but it's actually a string.", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 61, "seek": 19224, "start": 201.48000000000002, "end": 202.48000000000002, "text": " We like that.", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 62, "seek": 19224, "start": 202.48000000000002, "end": 204.88, "text": " We like the compiler to know that external information.", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 63, "seek": 19224, "start": 204.88, "end": 210.88, "text": " So that's one reason that you would do code generation is to bring in information about", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 64, "seek": 19224, "start": 210.88, "end": 213.28, "text": " some external source of truth.", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 65, "seek": 19224, "start": 213.28, "end": 217.8, "text": " And well, you know, types without borders, you're erasing the borders between the type", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 66, "seek": 19224, "start": 217.8, "end": 220.8, "text": " system of the Elm compiler and your GraphQL schema.", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 67, "seek": 19224, "start": 220.8, "end": 221.8, "text": " Yeah.", "tokens": [50364, 407, 291, 393, 853, 281, 483, 257, 2519, 293, 264, 31958, 1619, 11, 2232, 11, 456, 311, 572, 1270, 2519, 11, 420, 11, 2232, 11, 291, 434, 50680, 50680, 15083, 341, 382, 498, 309, 390, 364, 560, 11, 457, 309, 311, 767, 257, 6798, 13, 50826, 50826, 492, 411, 300, 13, 50876, 50876, 492, 411, 264, 31958, 281, 458, 300, 8320, 1589, 13, 50996, 50996, 407, 300, 311, 472, 1778, 300, 291, 576, 360, 3089, 5125, 307, 281, 1565, 294, 1589, 466, 51296, 51296, 512, 8320, 4009, 295, 3494, 13, 51416, 51416, 400, 731, 11, 291, 458, 11, 3467, 1553, 16287, 11, 291, 434, 1189, 3349, 264, 16287, 1296, 264, 2010, 51642, 51642, 1185, 295, 264, 2699, 76, 31958, 293, 428, 21884, 13695, 34078, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.11829438603910289, "compression_ratio": 1.7228070175438597, "no_caption_prob": 1.1125491255370434e-05}, {"id": 68, "seek": 22180, "start": 221.8, "end": 228.08, "text": " If you were to write it yourself, then you have a potential bug because you're saying", "tokens": [50364, 759, 291, 645, 281, 2464, 309, 1803, 11, 550, 291, 362, 257, 3995, 7426, 570, 291, 434, 1566, 50678, 50678, 300, 341, 2519, 307, 364, 24922, 293, 767, 309, 311, 257, 15706, 420, 746, 411, 300, 13, 50930, 50930, 407, 412, 34474, 291, 576, 362, 512, 733, 295, 6713, 11, 364, 33283, 6713, 420, 485, 51176, 51176, 1779, 13, 51226, 51226, 467, 311, 257, 665, 636, 281, 1066, 732, 7139, 295, 1412, 294, 20271, 365, 264, 2699, 76, 31958, 570, 291, 51530, 51530, 393, 11, 291, 458, 11, 291, 393, 2573, 1507, 484, 538, 2614, 2699, 76, 3089, 11, 457, 321, 411, 281, 360, 1101, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13836419365622782, "compression_ratio": 1.5923076923076922, "no_caption_prob": 1.0952943739539478e-05}, {"id": 69, "seek": 22180, "start": 228.08, "end": 233.12, "text": " that this field is an integer and actually it's a float or something like that.", "tokens": [50364, 759, 291, 645, 281, 2464, 309, 1803, 11, 550, 291, 362, 257, 3995, 7426, 570, 291, 434, 1566, 50678, 50678, 300, 341, 2519, 307, 364, 24922, 293, 767, 309, 311, 257, 15706, 420, 746, 411, 300, 13, 50930, 50930, 407, 412, 34474, 291, 576, 362, 512, 733, 295, 6713, 11, 364, 33283, 6713, 420, 485, 51176, 51176, 1779, 13, 51226, 51226, 467, 311, 257, 665, 636, 281, 1066, 732, 7139, 295, 1412, 294, 20271, 365, 264, 2699, 76, 31958, 570, 291, 51530, 51530, 393, 11, 291, 458, 11, 291, 393, 2573, 1507, 484, 538, 2614, 2699, 76, 3089, 11, 457, 321, 411, 281, 360, 1101, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13836419365622782, "compression_ratio": 1.5923076923076922, "no_caption_prob": 1.0952943739539478e-05}, {"id": 70, "seek": 22180, "start": 233.12, "end": 238.04000000000002, "text": " So at runtime you would have some kind of error, an HTTP error or...", "tokens": [50364, 759, 291, 645, 281, 2464, 309, 1803, 11, 550, 291, 362, 257, 3995, 7426, 570, 291, 434, 1566, 50678, 50678, 300, 341, 2519, 307, 364, 24922, 293, 767, 309, 311, 257, 15706, 420, 746, 411, 300, 13, 50930, 50930, 407, 412, 34474, 291, 576, 362, 512, 733, 295, 6713, 11, 364, 33283, 6713, 420, 485, 51176, 51176, 1779, 13, 51226, 51226, 467, 311, 257, 665, 636, 281, 1066, 732, 7139, 295, 1412, 294, 20271, 365, 264, 2699, 76, 31958, 570, 291, 51530, 51530, 393, 11, 291, 458, 11, 291, 393, 2573, 1507, 484, 538, 2614, 2699, 76, 3089, 11, 457, 321, 411, 281, 360, 1101, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13836419365622782, "compression_ratio": 1.5923076923076922, "no_caption_prob": 1.0952943739539478e-05}, {"id": 71, "seek": 22180, "start": 238.04000000000002, "end": 239.04000000000002, "text": " Right.", "tokens": [50364, 759, 291, 645, 281, 2464, 309, 1803, 11, 550, 291, 362, 257, 3995, 7426, 570, 291, 434, 1566, 50678, 50678, 300, 341, 2519, 307, 364, 24922, 293, 767, 309, 311, 257, 15706, 420, 746, 411, 300, 13, 50930, 50930, 407, 412, 34474, 291, 576, 362, 512, 733, 295, 6713, 11, 364, 33283, 6713, 420, 485, 51176, 51176, 1779, 13, 51226, 51226, 467, 311, 257, 665, 636, 281, 1066, 732, 7139, 295, 1412, 294, 20271, 365, 264, 2699, 76, 31958, 570, 291, 51530, 51530, 393, 11, 291, 458, 11, 291, 393, 2573, 1507, 484, 538, 2614, 2699, 76, 3089, 11, 457, 321, 411, 281, 360, 1101, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13836419365622782, "compression_ratio": 1.5923076923076922, "no_caption_prob": 1.0952943739539478e-05}, {"id": 72, "seek": 22180, "start": 239.04000000000002, "end": 245.12, "text": " It's a good way to keep two sources of data in sync with the Elm compiler because you", "tokens": [50364, 759, 291, 645, 281, 2464, 309, 1803, 11, 550, 291, 362, 257, 3995, 7426, 570, 291, 434, 1566, 50678, 50678, 300, 341, 2519, 307, 364, 24922, 293, 767, 309, 311, 257, 15706, 420, 746, 411, 300, 13, 50930, 50930, 407, 412, 34474, 291, 576, 362, 512, 733, 295, 6713, 11, 364, 33283, 6713, 420, 485, 51176, 51176, 1779, 13, 51226, 51226, 467, 311, 257, 665, 636, 281, 1066, 732, 7139, 295, 1412, 294, 20271, 365, 264, 2699, 76, 31958, 570, 291, 51530, 51530, 393, 11, 291, 458, 11, 291, 393, 2573, 1507, 484, 538, 2614, 2699, 76, 3089, 11, 457, 321, 411, 281, 360, 1101, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13836419365622782, "compression_ratio": 1.5923076923076922, "no_caption_prob": 1.0952943739539478e-05}, {"id": 73, "seek": 22180, "start": 245.12, "end": 250.82000000000002, "text": " can, you know, you can figure stuff out by running Elm code, but we like to do better.", "tokens": [50364, 759, 291, 645, 281, 2464, 309, 1803, 11, 550, 291, 362, 257, 3995, 7426, 570, 291, 434, 1566, 50678, 50678, 300, 341, 2519, 307, 364, 24922, 293, 767, 309, 311, 257, 15706, 420, 746, 411, 300, 13, 50930, 50930, 407, 412, 34474, 291, 576, 362, 512, 733, 295, 6713, 11, 364, 33283, 6713, 420, 485, 51176, 51176, 1779, 13, 51226, 51226, 467, 311, 257, 665, 636, 281, 1066, 732, 7139, 295, 1412, 294, 20271, 365, 264, 2699, 76, 31958, 570, 291, 51530, 51530, 393, 11, 291, 458, 11, 291, 393, 2573, 1507, 484, 538, 2614, 2699, 76, 3089, 11, 457, 321, 411, 281, 360, 1101, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13836419365622782, "compression_ratio": 1.5923076923076922, "no_caption_prob": 1.0952943739539478e-05}, {"id": 74, "seek": 25082, "start": 250.82, "end": 257.8, "text": " So that's one thing that like some languages have macros and other metaprogramming tools.", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 75, "seek": 25082, "start": 257.8, "end": 261.24, "text": " And now, so like, let's talk about that a little bit.", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 76, "seek": 25082, "start": 261.24, "end": 264.32, "text": " So like, like what is a macro?", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 77, "seek": 25082, "start": 264.32, "end": 265.6, "text": " Which Elm doesn't have macros.", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 78, "seek": 25082, "start": 265.6, "end": 266.6, "text": " Yeah.", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 79, "seek": 25082, "start": 266.6, "end": 269.03999999999996, "text": " It doesn't have any macros out of the box.", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 80, "seek": 25082, "start": 269.03999999999996, "end": 274.26, "text": " And there's, I don't think there's a tool out there at the moment that has macro support", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 81, "seek": 25082, "start": 274.26, "end": 275.76, "text": " or something.", "tokens": [50364, 407, 300, 311, 472, 551, 300, 411, 512, 8650, 362, 7912, 2635, 293, 661, 1131, 569, 340, 1342, 2810, 3873, 13, 50713, 50713, 400, 586, 11, 370, 411, 11, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50885, 50885, 407, 411, 11, 411, 437, 307, 257, 18887, 30, 51039, 51039, 3013, 2699, 76, 1177, 380, 362, 7912, 2635, 13, 51103, 51103, 865, 13, 51153, 51153, 467, 1177, 380, 362, 604, 7912, 2635, 484, 295, 264, 2424, 13, 51275, 51275, 400, 456, 311, 11, 286, 500, 380, 519, 456, 311, 257, 2290, 484, 456, 412, 264, 1623, 300, 575, 18887, 1406, 51536, 51536, 420, 746, 13, 51611, 51611], "temperature": 0.0, "avg_logprob": -0.16744787042791193, "compression_ratio": 1.676056338028169, "no_caption_prob": 9.223344022757374e-06}, {"id": 82, "seek": 27576, "start": 275.76, "end": 281.59999999999997, "text": " Basically your macros are a way of changing your code.", "tokens": [50364, 8537, 428, 7912, 2635, 366, 257, 636, 295, 4473, 428, 3089, 13, 50656, 50656, 9210, 412, 31413, 565, 420, 1310, 412, 34474, 294, 512, 3331, 11, 5413, 322, 11, 1338, 11, 286, 500, 380, 50992, 50992, 458, 11, 411, 11694, 13, 51084, 51084, 286, 519, 300, 311, 257, 665, 636, 295, 17827, 309, 13, 51160, 51160, 467, 311, 1936, 411, 257, 636, 295, 37648, 5030, 4473, 3089, 13, 51367, 51367, 407, 291, 411, 4476, 747, 11, 286, 914, 11, 2171, 561, 751, 466, 309, 382, 411, 3089, 382, 1412, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.17934267571631898, "compression_ratio": 1.6529680365296804, "no_caption_prob": 3.37363344442565e-05}, {"id": 83, "seek": 27576, "start": 281.59999999999997, "end": 288.32, "text": " Probably at compile time or maybe at runtime in some cases, depending on, yeah, I don't", "tokens": [50364, 8537, 428, 7912, 2635, 366, 257, 636, 295, 4473, 428, 3089, 13, 50656, 50656, 9210, 412, 31413, 565, 420, 1310, 412, 34474, 294, 512, 3331, 11, 5413, 322, 11, 1338, 11, 286, 500, 380, 50992, 50992, 458, 11, 411, 11694, 13, 51084, 51084, 286, 519, 300, 311, 257, 665, 636, 295, 17827, 309, 13, 51160, 51160, 467, 311, 1936, 411, 257, 636, 295, 37648, 5030, 4473, 3089, 13, 51367, 51367, 407, 291, 411, 4476, 747, 11, 286, 914, 11, 2171, 561, 751, 466, 309, 382, 411, 3089, 382, 1412, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.17934267571631898, "compression_ratio": 1.6529680365296804, "no_caption_prob": 3.37363344442565e-05}, {"id": 84, "seek": 27576, "start": 288.32, "end": 290.15999999999997, "text": " know, like configuration.", "tokens": [50364, 8537, 428, 7912, 2635, 366, 257, 636, 295, 4473, 428, 3089, 13, 50656, 50656, 9210, 412, 31413, 565, 420, 1310, 412, 34474, 294, 512, 3331, 11, 5413, 322, 11, 1338, 11, 286, 500, 380, 50992, 50992, 458, 11, 411, 11694, 13, 51084, 51084, 286, 519, 300, 311, 257, 665, 636, 295, 17827, 309, 13, 51160, 51160, 467, 311, 1936, 411, 257, 636, 295, 37648, 5030, 4473, 3089, 13, 51367, 51367, 407, 291, 411, 4476, 747, 11, 286, 914, 11, 2171, 561, 751, 466, 309, 382, 411, 3089, 382, 1412, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.17934267571631898, "compression_ratio": 1.6529680365296804, "no_caption_prob": 3.37363344442565e-05}, {"id": 85, "seek": 27576, "start": 290.15999999999997, "end": 291.68, "text": " I think that's a good way of defining it.", "tokens": [50364, 8537, 428, 7912, 2635, 366, 257, 636, 295, 4473, 428, 3089, 13, 50656, 50656, 9210, 412, 31413, 565, 420, 1310, 412, 34474, 294, 512, 3331, 11, 5413, 322, 11, 1338, 11, 286, 500, 380, 50992, 50992, 458, 11, 411, 11694, 13, 51084, 51084, 286, 519, 300, 311, 257, 665, 636, 295, 17827, 309, 13, 51160, 51160, 467, 311, 1936, 411, 257, 636, 295, 37648, 5030, 4473, 3089, 13, 51367, 51367, 407, 291, 411, 4476, 747, 11, 286, 914, 11, 2171, 561, 751, 466, 309, 382, 411, 3089, 382, 1412, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.17934267571631898, "compression_ratio": 1.6529680365296804, "no_caption_prob": 3.37363344442565e-05}, {"id": 86, "seek": 27576, "start": 291.68, "end": 295.82, "text": " It's basically like a way of programmatically changing code.", "tokens": [50364, 8537, 428, 7912, 2635, 366, 257, 636, 295, 4473, 428, 3089, 13, 50656, 50656, 9210, 412, 31413, 565, 420, 1310, 412, 34474, 294, 512, 3331, 11, 5413, 322, 11, 1338, 11, 286, 500, 380, 50992, 50992, 458, 11, 411, 11694, 13, 51084, 51084, 286, 519, 300, 311, 257, 665, 636, 295, 17827, 309, 13, 51160, 51160, 467, 311, 1936, 411, 257, 636, 295, 37648, 5030, 4473, 3089, 13, 51367, 51367, 407, 291, 411, 4476, 747, 11, 286, 914, 11, 2171, 561, 751, 466, 309, 382, 411, 3089, 382, 1412, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.17934267571631898, "compression_ratio": 1.6529680365296804, "no_caption_prob": 3.37363344442565e-05}, {"id": 87, "seek": 27576, "start": 295.82, "end": 302.36, "text": " So you like essentially take, I mean, sometimes people talk about it as like code as data.", "tokens": [50364, 8537, 428, 7912, 2635, 366, 257, 636, 295, 4473, 428, 3089, 13, 50656, 50656, 9210, 412, 31413, 565, 420, 1310, 412, 34474, 294, 512, 3331, 11, 5413, 322, 11, 1338, 11, 286, 500, 380, 50992, 50992, 458, 11, 411, 11694, 13, 51084, 51084, 286, 519, 300, 311, 257, 665, 636, 295, 17827, 309, 13, 51160, 51160, 467, 311, 1936, 411, 257, 636, 295, 37648, 5030, 4473, 3089, 13, 51367, 51367, 407, 291, 411, 4476, 747, 11, 286, 914, 11, 2171, 561, 751, 466, 309, 382, 411, 3089, 382, 1412, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.17934267571631898, "compression_ratio": 1.6529680365296804, "no_caption_prob": 3.37363344442565e-05}, {"id": 88, "seek": 30236, "start": 302.36, "end": 310.48, "text": " So like a lot of Lisp variants are known for being able to use a macro where you say this", "tokens": [50364, 407, 411, 257, 688, 295, 441, 7631, 21669, 366, 2570, 337, 885, 1075, 281, 764, 257, 18887, 689, 291, 584, 341, 50770, 50770, 2445, 307, 516, 281, 747, 341, 3089, 382, 364, 6770, 13, 50930, 50930, 407, 2035, 3089, 291, 1320, 281, 309, 11, 291, 393, 1333, 295, 352, 294, 293, 29879, 264, 12649, 28431, 4230, 51216, 51216, 420, 15018, 309, 11, 597, 307, 1596, 13239, 11, 457, 309, 393, 652, 309, 2252, 281, 1223, 721, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08994587063789368, "compression_ratio": 1.5665024630541873, "no_caption_prob": 1.1544567541932338e-06}, {"id": 89, "seek": 30236, "start": 310.48, "end": 313.68, "text": " function is going to take this code as an argument.", "tokens": [50364, 407, 411, 257, 688, 295, 441, 7631, 21669, 366, 2570, 337, 885, 1075, 281, 764, 257, 18887, 689, 291, 584, 341, 50770, 50770, 2445, 307, 516, 281, 747, 341, 3089, 382, 364, 6770, 13, 50930, 50930, 407, 2035, 3089, 291, 1320, 281, 309, 11, 291, 393, 1333, 295, 352, 294, 293, 29879, 264, 12649, 28431, 4230, 51216, 51216, 420, 15018, 309, 11, 597, 307, 1596, 13239, 11, 457, 309, 393, 652, 309, 2252, 281, 1223, 721, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08994587063789368, "compression_ratio": 1.5665024630541873, "no_caption_prob": 1.1544567541932338e-06}, {"id": 90, "seek": 30236, "start": 313.68, "end": 319.40000000000003, "text": " So whatever code you pass to it, you can sort of go in and tweak the abstract syntax tree", "tokens": [50364, 407, 411, 257, 688, 295, 441, 7631, 21669, 366, 2570, 337, 885, 1075, 281, 764, 257, 18887, 689, 291, 584, 341, 50770, 50770, 2445, 307, 516, 281, 747, 341, 3089, 382, 364, 6770, 13, 50930, 50930, 407, 2035, 3089, 291, 1320, 281, 309, 11, 291, 393, 1333, 295, 352, 294, 293, 29879, 264, 12649, 28431, 4230, 51216, 51216, 420, 15018, 309, 11, 597, 307, 1596, 13239, 11, 457, 309, 393, 652, 309, 2252, 281, 1223, 721, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08994587063789368, "compression_ratio": 1.5665024630541873, "no_caption_prob": 1.1544567541932338e-06}, {"id": 91, "seek": 30236, "start": 319.40000000000003, "end": 324.92, "text": " or inspect it, which is quite handy, but it can make it difficult to understand things", "tokens": [50364, 407, 411, 257, 688, 295, 441, 7631, 21669, 366, 2570, 337, 885, 1075, 281, 764, 257, 18887, 689, 291, 584, 341, 50770, 50770, 2445, 307, 516, 281, 747, 341, 3089, 382, 364, 6770, 13, 50930, 50930, 407, 2035, 3089, 291, 1320, 281, 309, 11, 291, 393, 1333, 295, 352, 294, 293, 29879, 264, 12649, 28431, 4230, 51216, 51216, 420, 15018, 309, 11, 597, 307, 1596, 13239, 11, 457, 309, 393, 652, 309, 2252, 281, 1223, 721, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.08994587063789368, "compression_ratio": 1.5665024630541873, "no_caption_prob": 1.1544567541932338e-06}, {"id": 92, "seek": 32492, "start": 324.92, "end": 332.36, "text": " and it can make it harder to predict like buckle script slash rescript, whatever they're", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 93, "seek": 32492, "start": 332.36, "end": 333.36, "text": " calling it these days.", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 94, "seek": 32492, "start": 333.36, "end": 335.32, "text": " What was the old name?", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 95, "seek": 32492, "start": 335.32, "end": 336.82, "text": " Reason ML was the old name.", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 96, "seek": 32492, "start": 336.82, "end": 338.24, "text": " Now they call it rescript.", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 97, "seek": 32492, "start": 338.24, "end": 342.04, "text": " They've got a feature, these PPX macros.", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 98, "seek": 32492, "start": 342.04, "end": 344.84000000000003, "text": " And I mean, that's extremely powerful.", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 99, "seek": 32492, "start": 344.84000000000003, "end": 351.42, "text": " You can basically like go do whatever side effects you want to make code available.", "tokens": [50364, 293, 309, 393, 652, 309, 6081, 281, 6069, 411, 37686, 5755, 17330, 725, 5944, 11, 2035, 436, 434, 50736, 50736, 5141, 309, 613, 1708, 13, 50786, 50786, 708, 390, 264, 1331, 1315, 30, 50884, 50884, 39693, 21601, 390, 264, 1331, 1315, 13, 50959, 50959, 823, 436, 818, 309, 725, 5944, 13, 51030, 51030, 814, 600, 658, 257, 4111, 11, 613, 37369, 55, 7912, 2635, 13, 51220, 51220, 400, 286, 914, 11, 300, 311, 4664, 4005, 13, 51360, 51360, 509, 393, 1936, 411, 352, 360, 2035, 1252, 5065, 291, 528, 281, 652, 3089, 2435, 13, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.15262172660049128, "compression_ratio": 1.5482456140350878, "no_caption_prob": 2.7534830223885365e-05}, {"id": 100, "seek": 35142, "start": 351.42, "end": 355.44, "text": " But if there's a problem, how do you go figure out what the problem is?", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 101, "seek": 35142, "start": 355.44, "end": 359.16, "text": " Or if you're trying to understand what your code can do, where do you go to figure that", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 102, "seek": 35142, "start": 359.16, "end": 360.16, "text": " out?", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 103, "seek": 35142, "start": 360.16, "end": 363.68, "text": " Whereas if you're just using vanilla code generation, which is what Elm gives us, then", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 104, "seek": 35142, "start": 363.68, "end": 366.58000000000004, "text": " you can go and you can look at that generated code.", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 105, "seek": 35142, "start": 366.58000000000004, "end": 367.58000000000004, "text": " It's in the folder somewhere.", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 106, "seek": 35142, "start": 367.58000000000004, "end": 372.32, "text": " Your IDE will even help you command click into the code and see exactly what the code", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 107, "seek": 35142, "start": 372.32, "end": 373.32, "text": " does.", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 108, "seek": 35142, "start": 373.32, "end": 374.32, "text": " Yeah.", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 109, "seek": 35142, "start": 374.32, "end": 378.8, "text": " Most of my experience with macros are from C from a very long time ago where you basically", "tokens": [50364, 583, 498, 456, 311, 257, 1154, 11, 577, 360, 291, 352, 2573, 484, 437, 264, 1154, 307, 30, 50565, 50565, 1610, 498, 291, 434, 1382, 281, 1223, 437, 428, 3089, 393, 360, 11, 689, 360, 291, 352, 281, 2573, 300, 50751, 50751, 484, 30, 50801, 50801, 13813, 498, 291, 434, 445, 1228, 17528, 3089, 5125, 11, 597, 307, 437, 2699, 76, 2709, 505, 11, 550, 50977, 50977, 291, 393, 352, 293, 291, 393, 574, 412, 300, 10833, 3089, 13, 51122, 51122, 467, 311, 294, 264, 10820, 4079, 13, 51172, 51172, 2260, 40930, 486, 754, 854, 291, 5622, 2052, 666, 264, 3089, 293, 536, 2293, 437, 264, 3089, 51409, 51409, 775, 13, 51459, 51459, 865, 13, 51509, 51509, 4534, 295, 452, 1752, 365, 7912, 2635, 366, 490, 383, 490, 257, 588, 938, 565, 2057, 689, 291, 1936, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08309732845851353, "compression_ratio": 1.7114754098360656, "no_caption_prob": 1.8631508282851428e-05}, {"id": 110, "seek": 37880, "start": 378.8, "end": 384.2, "text": " just replace constants with other values, like for enums, mostly.", "tokens": [50364, 445, 7406, 35870, 365, 661, 4190, 11, 411, 337, 465, 8099, 11, 5240, 13, 50634, 50634, 663, 311, 437, 286, 764, 309, 337, 13, 50694, 50694, 286, 478, 17939, 309, 311, 636, 544, 4005, 813, 300, 11, 457, 406, 281, 452, 3601, 13, 50918, 50918, 865, 13, 50968, 50968, 286, 2041, 264, 1349, 18887, 307, 1143, 293, 309, 393, 914, 588, 819, 721, 13, 51160, 51160, 407, 286, 519, 383, 7912, 2635, 366, 659, 21541, 5441, 11, 411, 257, 31958, 2666, 340, 25432, 7912, 2635, 11, 597, 307, 588, 51558, 51558, 819, 813, 411, 257, 441, 7631, 18887, 11, 597, 307, 19071, 3289, 8293, 291, 281, 16927, 264, 3089, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15311430211652788, "compression_ratio": 1.640316205533597, "no_caption_prob": 2.7968857466476038e-05}, {"id": 111, "seek": 37880, "start": 384.2, "end": 385.40000000000003, "text": " That's what I use it for.", "tokens": [50364, 445, 7406, 35870, 365, 661, 4190, 11, 411, 337, 465, 8099, 11, 5240, 13, 50634, 50634, 663, 311, 437, 286, 764, 309, 337, 13, 50694, 50694, 286, 478, 17939, 309, 311, 636, 544, 4005, 813, 300, 11, 457, 406, 281, 452, 3601, 13, 50918, 50918, 865, 13, 50968, 50968, 286, 2041, 264, 1349, 18887, 307, 1143, 293, 309, 393, 914, 588, 819, 721, 13, 51160, 51160, 407, 286, 519, 383, 7912, 2635, 366, 659, 21541, 5441, 11, 411, 257, 31958, 2666, 340, 25432, 7912, 2635, 11, 597, 307, 588, 51558, 51558, 819, 813, 411, 257, 441, 7631, 18887, 11, 597, 307, 19071, 3289, 8293, 291, 281, 16927, 264, 3089, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15311430211652788, "compression_ratio": 1.640316205533597, "no_caption_prob": 2.7968857466476038e-05}, {"id": 112, "seek": 37880, "start": 385.40000000000003, "end": 389.88, "text": " I'm guessing it's way more powerful than that, but not to my knowledge.", "tokens": [50364, 445, 7406, 35870, 365, 661, 4190, 11, 411, 337, 465, 8099, 11, 5240, 13, 50634, 50634, 663, 311, 437, 286, 764, 309, 337, 13, 50694, 50694, 286, 478, 17939, 309, 311, 636, 544, 4005, 813, 300, 11, 457, 406, 281, 452, 3601, 13, 50918, 50918, 865, 13, 50968, 50968, 286, 2041, 264, 1349, 18887, 307, 1143, 293, 309, 393, 914, 588, 819, 721, 13, 51160, 51160, 407, 286, 519, 383, 7912, 2635, 366, 659, 21541, 5441, 11, 411, 257, 31958, 2666, 340, 25432, 7912, 2635, 11, 597, 307, 588, 51558, 51558, 819, 813, 411, 257, 441, 7631, 18887, 11, 597, 307, 19071, 3289, 8293, 291, 281, 16927, 264, 3089, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15311430211652788, "compression_ratio": 1.640316205533597, "no_caption_prob": 2.7968857466476038e-05}, {"id": 113, "seek": 37880, "start": 389.88, "end": 390.88, "text": " Yeah.", "tokens": [50364, 445, 7406, 35870, 365, 661, 4190, 11, 411, 337, 465, 8099, 11, 5240, 13, 50634, 50634, 663, 311, 437, 286, 764, 309, 337, 13, 50694, 50694, 286, 478, 17939, 309, 311, 636, 544, 4005, 813, 300, 11, 457, 406, 281, 452, 3601, 13, 50918, 50918, 865, 13, 50968, 50968, 286, 2041, 264, 1349, 18887, 307, 1143, 293, 309, 393, 914, 588, 819, 721, 13, 51160, 51160, 407, 286, 519, 383, 7912, 2635, 366, 659, 21541, 5441, 11, 411, 257, 31958, 2666, 340, 25432, 7912, 2635, 11, 597, 307, 588, 51558, 51558, 819, 813, 411, 257, 441, 7631, 18887, 11, 597, 307, 19071, 3289, 8293, 291, 281, 16927, 264, 3089, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15311430211652788, "compression_ratio": 1.640316205533597, "no_caption_prob": 2.7968857466476038e-05}, {"id": 114, "seek": 37880, "start": 390.88, "end": 394.72, "text": " I guess the word macro is used and it can mean very different things.", "tokens": [50364, 445, 7406, 35870, 365, 661, 4190, 11, 411, 337, 465, 8099, 11, 5240, 13, 50634, 50634, 663, 311, 437, 286, 764, 309, 337, 13, 50694, 50694, 286, 478, 17939, 309, 311, 636, 544, 4005, 813, 300, 11, 457, 406, 281, 452, 3601, 13, 50918, 50918, 865, 13, 50968, 50968, 286, 2041, 264, 1349, 18887, 307, 1143, 293, 309, 393, 914, 588, 819, 721, 13, 51160, 51160, 407, 286, 519, 383, 7912, 2635, 366, 659, 21541, 5441, 11, 411, 257, 31958, 2666, 340, 25432, 7912, 2635, 11, 597, 307, 588, 51558, 51558, 819, 813, 411, 257, 441, 7631, 18887, 11, 597, 307, 19071, 3289, 8293, 291, 281, 16927, 264, 3089, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15311430211652788, "compression_ratio": 1.640316205533597, "no_caption_prob": 2.7968857466476038e-05}, {"id": 115, "seek": 37880, "start": 394.72, "end": 402.68, "text": " So I think C macros are precompiler, like a compiler preprocessor macros, which is very", "tokens": [50364, 445, 7406, 35870, 365, 661, 4190, 11, 411, 337, 465, 8099, 11, 5240, 13, 50634, 50634, 663, 311, 437, 286, 764, 309, 337, 13, 50694, 50694, 286, 478, 17939, 309, 311, 636, 544, 4005, 813, 300, 11, 457, 406, 281, 452, 3601, 13, 50918, 50918, 865, 13, 50968, 50968, 286, 2041, 264, 1349, 18887, 307, 1143, 293, 309, 393, 914, 588, 819, 721, 13, 51160, 51160, 407, 286, 519, 383, 7912, 2635, 366, 659, 21541, 5441, 11, 411, 257, 31958, 2666, 340, 25432, 7912, 2635, 11, 597, 307, 588, 51558, 51558, 819, 813, 411, 257, 441, 7631, 18887, 11, 597, 307, 19071, 3289, 8293, 291, 281, 16927, 264, 3089, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15311430211652788, "compression_ratio": 1.640316205533597, "no_caption_prob": 2.7968857466476038e-05}, {"id": 116, "seek": 37880, "start": 402.68, "end": 408.76, "text": " different than like a Lisp macro, which is arbitrarily allowing you to modify the code.", "tokens": [50364, 445, 7406, 35870, 365, 661, 4190, 11, 411, 337, 465, 8099, 11, 5240, 13, 50634, 50634, 663, 311, 437, 286, 764, 309, 337, 13, 50694, 50694, 286, 478, 17939, 309, 311, 636, 544, 4005, 813, 300, 11, 457, 406, 281, 452, 3601, 13, 50918, 50918, 865, 13, 50968, 50968, 286, 2041, 264, 1349, 18887, 307, 1143, 293, 309, 393, 914, 588, 819, 721, 13, 51160, 51160, 407, 286, 519, 383, 7912, 2635, 366, 659, 21541, 5441, 11, 411, 257, 31958, 2666, 340, 25432, 7912, 2635, 11, 597, 307, 588, 51558, 51558, 819, 813, 411, 257, 441, 7631, 18887, 11, 597, 307, 19071, 3289, 8293, 291, 281, 16927, 264, 3089, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.15311430211652788, "compression_ratio": 1.640316205533597, "no_caption_prob": 2.7968857466476038e-05}, {"id": 117, "seek": 40876, "start": 408.76, "end": 410.88, "text": " And the other one is Babel.", "tokens": [50364, 400, 264, 661, 472, 307, 15820, 338, 13, 50470, 50470, 407, 15820, 338, 575, 11, 300, 311, 337, 15778, 13, 50604, 50604, 509, 22162, 15820, 338, 365, 257, 3840, 295, 33759, 293, 291, 980, 309, 437, 34852, 281, 360, 13, 50892, 50892, 400, 1936, 309, 4045, 291, 281, 2464, 257, 777, 15778, 3037, 3089, 293, 4088, 309, 281, 51210, 51210, 12564, 20, 420, 746, 13, 51316, 51316, 1610, 309, 393, 2089, 291, 281, 360, 1238, 709, 1340, 13, 51436, 51436, 1743, 498, 291, 528, 281, 909, 257, 18887, 300, 1619, 439, 264, 13985, 294, 264, 4009, 3089, 11, 652, 552, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1660149097442627, "compression_ratio": 1.591093117408907, "no_caption_prob": 9.368583050672896e-06}, {"id": 118, "seek": 40876, "start": 410.88, "end": 413.56, "text": " So Babel has, that's for JavaScript.", "tokens": [50364, 400, 264, 661, 472, 307, 15820, 338, 13, 50470, 50470, 407, 15820, 338, 575, 11, 300, 311, 337, 15778, 13, 50604, 50604, 509, 22162, 15820, 338, 365, 257, 3840, 295, 33759, 293, 291, 980, 309, 437, 34852, 281, 360, 13, 50892, 50892, 400, 1936, 309, 4045, 291, 281, 2464, 257, 777, 15778, 3037, 3089, 293, 4088, 309, 281, 51210, 51210, 12564, 20, 420, 746, 13, 51316, 51316, 1610, 309, 393, 2089, 291, 281, 360, 1238, 709, 1340, 13, 51436, 51436, 1743, 498, 291, 528, 281, 909, 257, 18887, 300, 1619, 439, 264, 13985, 294, 264, 4009, 3089, 11, 652, 552, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1660149097442627, "compression_ratio": 1.591093117408907, "no_caption_prob": 9.368583050672896e-06}, {"id": 119, "seek": 40876, "start": 413.56, "end": 419.32, "text": " You configure Babel with a bunch of plugins and you tell it what transformations to do.", "tokens": [50364, 400, 264, 661, 472, 307, 15820, 338, 13, 50470, 50470, 407, 15820, 338, 575, 11, 300, 311, 337, 15778, 13, 50604, 50604, 509, 22162, 15820, 338, 365, 257, 3840, 295, 33759, 293, 291, 980, 309, 437, 34852, 281, 360, 13, 50892, 50892, 400, 1936, 309, 4045, 291, 281, 2464, 257, 777, 15778, 3037, 3089, 293, 4088, 309, 281, 51210, 51210, 12564, 20, 420, 746, 13, 51316, 51316, 1610, 309, 393, 2089, 291, 281, 360, 1238, 709, 1340, 13, 51436, 51436, 1743, 498, 291, 528, 281, 909, 257, 18887, 300, 1619, 439, 264, 13985, 294, 264, 4009, 3089, 11, 652, 552, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1660149097442627, "compression_ratio": 1.591093117408907, "no_caption_prob": 9.368583050672896e-06}, {"id": 120, "seek": 40876, "start": 419.32, "end": 425.68, "text": " And basically it allows you to write a new JavaScript version code and transform it to", "tokens": [50364, 400, 264, 661, 472, 307, 15820, 338, 13, 50470, 50470, 407, 15820, 338, 575, 11, 300, 311, 337, 15778, 13, 50604, 50604, 509, 22162, 15820, 338, 365, 257, 3840, 295, 33759, 293, 291, 980, 309, 437, 34852, 281, 360, 13, 50892, 50892, 400, 1936, 309, 4045, 291, 281, 2464, 257, 777, 15778, 3037, 3089, 293, 4088, 309, 281, 51210, 51210, 12564, 20, 420, 746, 13, 51316, 51316, 1610, 309, 393, 2089, 291, 281, 360, 1238, 709, 1340, 13, 51436, 51436, 1743, 498, 291, 528, 281, 909, 257, 18887, 300, 1619, 439, 264, 13985, 294, 264, 4009, 3089, 11, 652, 552, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1660149097442627, "compression_ratio": 1.591093117408907, "no_caption_prob": 9.368583050672896e-06}, {"id": 121, "seek": 40876, "start": 425.68, "end": 427.8, "text": " ES5 or something.", "tokens": [50364, 400, 264, 661, 472, 307, 15820, 338, 13, 50470, 50470, 407, 15820, 338, 575, 11, 300, 311, 337, 15778, 13, 50604, 50604, 509, 22162, 15820, 338, 365, 257, 3840, 295, 33759, 293, 291, 980, 309, 437, 34852, 281, 360, 13, 50892, 50892, 400, 1936, 309, 4045, 291, 281, 2464, 257, 777, 15778, 3037, 3089, 293, 4088, 309, 281, 51210, 51210, 12564, 20, 420, 746, 13, 51316, 51316, 1610, 309, 393, 2089, 291, 281, 360, 1238, 709, 1340, 13, 51436, 51436, 1743, 498, 291, 528, 281, 909, 257, 18887, 300, 1619, 439, 264, 13985, 294, 264, 4009, 3089, 11, 652, 552, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1660149097442627, "compression_ratio": 1.591093117408907, "no_caption_prob": 9.368583050672896e-06}, {"id": 122, "seek": 40876, "start": 427.8, "end": 430.2, "text": " Or it can allow you to do pretty much anything.", "tokens": [50364, 400, 264, 661, 472, 307, 15820, 338, 13, 50470, 50470, 407, 15820, 338, 575, 11, 300, 311, 337, 15778, 13, 50604, 50604, 509, 22162, 15820, 338, 365, 257, 3840, 295, 33759, 293, 291, 980, 309, 437, 34852, 281, 360, 13, 50892, 50892, 400, 1936, 309, 4045, 291, 281, 2464, 257, 777, 15778, 3037, 3089, 293, 4088, 309, 281, 51210, 51210, 12564, 20, 420, 746, 13, 51316, 51316, 1610, 309, 393, 2089, 291, 281, 360, 1238, 709, 1340, 13, 51436, 51436, 1743, 498, 291, 528, 281, 909, 257, 18887, 300, 1619, 439, 264, 13985, 294, 264, 4009, 3089, 11, 652, 552, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1660149097442627, "compression_ratio": 1.591093117408907, "no_caption_prob": 9.368583050672896e-06}, {"id": 123, "seek": 40876, "start": 430.2, "end": 437.0, "text": " Like if you want to add a macro that says all the strings in the source code, make them", "tokens": [50364, 400, 264, 661, 472, 307, 15820, 338, 13, 50470, 50470, 407, 15820, 338, 575, 11, 300, 311, 337, 15778, 13, 50604, 50604, 509, 22162, 15820, 338, 365, 257, 3840, 295, 33759, 293, 291, 980, 309, 437, 34852, 281, 360, 13, 50892, 50892, 400, 1936, 309, 4045, 291, 281, 2464, 257, 777, 15778, 3037, 3089, 293, 4088, 309, 281, 51210, 51210, 12564, 20, 420, 746, 13, 51316, 51316, 1610, 309, 393, 2089, 291, 281, 360, 1238, 709, 1340, 13, 51436, 51436, 1743, 498, 291, 528, 281, 909, 257, 18887, 300, 1619, 439, 264, 13985, 294, 264, 4009, 3089, 11, 652, 552, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1660149097442627, "compression_ratio": 1.591093117408907, "no_caption_prob": 9.368583050672896e-06}, {"id": 124, "seek": 43700, "start": 437.0, "end": 439.24, "text": " uppercase, that could work.", "tokens": [50364, 11775, 2869, 651, 11, 300, 727, 589, 13, 50476, 50476, 400, 309, 393, 312, 588, 4005, 11, 457, 382, 291, 848, 11, 309, 393, 312, 257, 955, 1822, 281, 24083, 562, 746, 50754, 50754, 1709, 2085, 13, 50804, 50804, 1779, 13, 50854, 50854, 400, 300, 311, 767, 746, 300, 286, 519, 309, 311, 1596, 1481, 281, 14038, 382, 2699, 76, 5022, 300, 51298, 51298, 341, 307, 257, 5121, 295, 2699, 76, 300, 309, 1177, 380, 362, 341, 14024, 281, 2028, 365, 13, 51530, 51530, 759, 746, 1709, 2085, 11, 321, 500, 380, 362, 281, 2528, 807, 512, 9844, 299, 7897, 420, 445, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1309313954047437, "compression_ratio": 1.6452991452991452, "no_caption_prob": 1.0952993761748075e-05}, {"id": 125, "seek": 43700, "start": 439.24, "end": 444.8, "text": " And it can be very powerful, but as you said, it can be a big pain to debug when something", "tokens": [50364, 11775, 2869, 651, 11, 300, 727, 589, 13, 50476, 50476, 400, 309, 393, 312, 588, 4005, 11, 457, 382, 291, 848, 11, 309, 393, 312, 257, 955, 1822, 281, 24083, 562, 746, 50754, 50754, 1709, 2085, 13, 50804, 50804, 1779, 13, 50854, 50854, 400, 300, 311, 767, 746, 300, 286, 519, 309, 311, 1596, 1481, 281, 14038, 382, 2699, 76, 5022, 300, 51298, 51298, 341, 307, 257, 5121, 295, 2699, 76, 300, 309, 1177, 380, 362, 341, 14024, 281, 2028, 365, 13, 51530, 51530, 759, 746, 1709, 2085, 11, 321, 500, 380, 362, 281, 2528, 807, 512, 9844, 299, 7897, 420, 445, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1309313954047437, "compression_ratio": 1.6452991452991452, "no_caption_prob": 1.0952993761748075e-05}, {"id": 126, "seek": 43700, "start": 444.8, "end": 445.8, "text": " goes wrong.", "tokens": [50364, 11775, 2869, 651, 11, 300, 727, 589, 13, 50476, 50476, 400, 309, 393, 312, 588, 4005, 11, 457, 382, 291, 848, 11, 309, 393, 312, 257, 955, 1822, 281, 24083, 562, 746, 50754, 50754, 1709, 2085, 13, 50804, 50804, 1779, 13, 50854, 50854, 400, 300, 311, 767, 746, 300, 286, 519, 309, 311, 1596, 1481, 281, 14038, 382, 2699, 76, 5022, 300, 51298, 51298, 341, 307, 257, 5121, 295, 2699, 76, 300, 309, 1177, 380, 362, 341, 14024, 281, 2028, 365, 13, 51530, 51530, 759, 746, 1709, 2085, 11, 321, 500, 380, 362, 281, 2528, 807, 512, 9844, 299, 7897, 420, 445, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1309313954047437, "compression_ratio": 1.6452991452991452, "no_caption_prob": 1.0952993761748075e-05}, {"id": 127, "seek": 43700, "start": 445.8, "end": 446.8, "text": " Right.", "tokens": [50364, 11775, 2869, 651, 11, 300, 727, 589, 13, 50476, 50476, 400, 309, 393, 312, 588, 4005, 11, 457, 382, 291, 848, 11, 309, 393, 312, 257, 955, 1822, 281, 24083, 562, 746, 50754, 50754, 1709, 2085, 13, 50804, 50804, 1779, 13, 50854, 50854, 400, 300, 311, 767, 746, 300, 286, 519, 309, 311, 1596, 1481, 281, 14038, 382, 2699, 76, 5022, 300, 51298, 51298, 341, 307, 257, 5121, 295, 2699, 76, 300, 309, 1177, 380, 362, 341, 14024, 281, 2028, 365, 13, 51530, 51530, 759, 746, 1709, 2085, 11, 321, 500, 380, 362, 281, 2528, 807, 512, 9844, 299, 7897, 420, 445, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1309313954047437, "compression_ratio": 1.6452991452991452, "no_caption_prob": 1.0952993761748075e-05}, {"id": 128, "seek": 43700, "start": 446.8, "end": 455.68, "text": " And that's actually something that I think it's quite nice to embrace as Elm users that", "tokens": [50364, 11775, 2869, 651, 11, 300, 727, 589, 13, 50476, 50476, 400, 309, 393, 312, 588, 4005, 11, 457, 382, 291, 848, 11, 309, 393, 312, 257, 955, 1822, 281, 24083, 562, 746, 50754, 50754, 1709, 2085, 13, 50804, 50804, 1779, 13, 50854, 50854, 400, 300, 311, 767, 746, 300, 286, 519, 309, 311, 1596, 1481, 281, 14038, 382, 2699, 76, 5022, 300, 51298, 51298, 341, 307, 257, 5121, 295, 2699, 76, 300, 309, 1177, 380, 362, 341, 14024, 281, 2028, 365, 13, 51530, 51530, 759, 746, 1709, 2085, 11, 321, 500, 380, 362, 281, 2528, 807, 512, 9844, 299, 7897, 420, 445, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1309313954047437, "compression_ratio": 1.6452991452991452, "no_caption_prob": 1.0952993761748075e-05}, {"id": 129, "seek": 43700, "start": 455.68, "end": 460.32, "text": " this is a benefit of Elm that it doesn't have this complexity to deal with.", "tokens": [50364, 11775, 2869, 651, 11, 300, 727, 589, 13, 50476, 50476, 400, 309, 393, 312, 588, 4005, 11, 457, 382, 291, 848, 11, 309, 393, 312, 257, 955, 1822, 281, 24083, 562, 746, 50754, 50754, 1709, 2085, 13, 50804, 50804, 1779, 13, 50854, 50854, 400, 300, 311, 767, 746, 300, 286, 519, 309, 311, 1596, 1481, 281, 14038, 382, 2699, 76, 5022, 300, 51298, 51298, 341, 307, 257, 5121, 295, 2699, 76, 300, 309, 1177, 380, 362, 341, 14024, 281, 2028, 365, 13, 51530, 51530, 759, 746, 1709, 2085, 11, 321, 500, 380, 362, 281, 2528, 807, 512, 9844, 299, 7897, 420, 445, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1309313954047437, "compression_ratio": 1.6452991452991452, "no_caption_prob": 1.0952993761748075e-05}, {"id": 130, "seek": 43700, "start": 460.32, "end": 466.44, "text": " If something goes wrong, we don't have to dig through some cryptic messages or just", "tokens": [50364, 11775, 2869, 651, 11, 300, 727, 589, 13, 50476, 50476, 400, 309, 393, 312, 588, 4005, 11, 457, 382, 291, 848, 11, 309, 393, 312, 257, 955, 1822, 281, 24083, 562, 746, 50754, 50754, 1709, 2085, 13, 50804, 50804, 1779, 13, 50854, 50854, 400, 300, 311, 767, 746, 300, 286, 519, 309, 311, 1596, 1481, 281, 14038, 382, 2699, 76, 5022, 300, 51298, 51298, 341, 307, 257, 5121, 295, 2699, 76, 300, 309, 1177, 380, 362, 341, 14024, 281, 2028, 365, 13, 51530, 51530, 759, 746, 1709, 2085, 11, 321, 500, 380, 362, 281, 2528, 807, 512, 9844, 299, 7897, 420, 445, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1309313954047437, "compression_ratio": 1.6452991452991452, "no_caption_prob": 1.0952993761748075e-05}, {"id": 131, "seek": 46644, "start": 466.44, "end": 468.6, "text": " not have any way to understand what's going on.", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 132, "seek": 46644, "start": 468.6, "end": 473.68, "text": " We can see exactly the code that was generated and that's quite useful.", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 133, "seek": 46644, "start": 473.68, "end": 477.56, "text": " Because what you have in mind is generating Elm files, right?", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 134, "seek": 46644, "start": 477.56, "end": 478.56, "text": " Exactly.", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 135, "seek": 46644, "start": 478.56, "end": 479.56, "text": " That's all it is.", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 136, "seek": 46644, "start": 479.56, "end": 481.52, "text": " It's writing an Elm file to a disk.", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 137, "seek": 46644, "start": 481.52, "end": 488.52, "text": " So one of the things that, I mean, we're recording this episode about code generation and I want", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 138, "seek": 46644, "start": 488.52, "end": 494.84, "text": " to emphasize, I don't think that this concept is only useful to library authors.", "tokens": [50364, 406, 362, 604, 636, 281, 1223, 437, 311, 516, 322, 13, 50472, 50472, 492, 393, 536, 2293, 264, 3089, 300, 390, 10833, 293, 300, 311, 1596, 4420, 13, 50726, 50726, 1436, 437, 291, 362, 294, 1575, 307, 17746, 2699, 76, 7098, 11, 558, 30, 50920, 50920, 7587, 13, 50970, 50970, 663, 311, 439, 309, 307, 13, 51020, 51020, 467, 311, 3579, 364, 2699, 76, 3991, 281, 257, 12355, 13, 51118, 51118, 407, 472, 295, 264, 721, 300, 11, 286, 914, 11, 321, 434, 6613, 341, 3500, 466, 3089, 5125, 293, 286, 528, 51468, 51468, 281, 16078, 11, 286, 500, 380, 519, 300, 341, 3410, 307, 787, 4420, 281, 6405, 16552, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10588262806768002, "compression_ratio": 1.6356589147286822, "no_caption_prob": 1.4738790923729539e-05}, {"id": 139, "seek": 49484, "start": 494.84, "end": 497.56, "text": " I think that this concept is useful.", "tokens": [50364, 286, 519, 300, 341, 3410, 307, 4420, 13, 50500, 50500, 467, 311, 4664, 4420, 337, 6405, 16552, 293, 988, 11, 3089, 5125, 3263, 6958, 11, 457, 50866, 50866, 286, 576, 411, 281, 652, 309, 1626, 1570, 6958, 13, 51048, 51048, 400, 286, 519, 300, 3089, 5125, 820, 841, 411, 746, 11, 797, 11, 291, 500, 380, 528, 281, 11, 51292, 51292, 498, 291, 393, 360, 746, 11, 498, 291, 393, 9021, 257, 3387, 1553, 3089, 5125, 11, 291, 538, 439, 51488, 51488, 1355, 820, 13, 51538, 51538, 400, 309, 775, 909, 14024, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.12411615037426506, "compression_ratio": 1.7813953488372094, "no_caption_prob": 1.3419567949313205e-05}, {"id": 140, "seek": 49484, "start": 497.56, "end": 504.88, "text": " It's extremely useful for library authors and sure, code generation sounds scary, but", "tokens": [50364, 286, 519, 300, 341, 3410, 307, 4420, 13, 50500, 50500, 467, 311, 4664, 4420, 337, 6405, 16552, 293, 988, 11, 3089, 5125, 3263, 6958, 11, 457, 50866, 50866, 286, 576, 411, 281, 652, 309, 1626, 1570, 6958, 13, 51048, 51048, 400, 286, 519, 300, 3089, 5125, 820, 841, 411, 746, 11, 797, 11, 291, 500, 380, 528, 281, 11, 51292, 51292, 498, 291, 393, 360, 746, 11, 498, 291, 393, 9021, 257, 3387, 1553, 3089, 5125, 11, 291, 538, 439, 51488, 51488, 1355, 820, 13, 51538, 51538, 400, 309, 775, 909, 14024, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.12411615037426506, "compression_ratio": 1.7813953488372094, "no_caption_prob": 1.3419567949313205e-05}, {"id": 141, "seek": 49484, "start": 504.88, "end": 508.52, "text": " I would like to make it sound less scary.", "tokens": [50364, 286, 519, 300, 341, 3410, 307, 4420, 13, 50500, 50500, 467, 311, 4664, 4420, 337, 6405, 16552, 293, 988, 11, 3089, 5125, 3263, 6958, 11, 457, 50866, 50866, 286, 576, 411, 281, 652, 309, 1626, 1570, 6958, 13, 51048, 51048, 400, 286, 519, 300, 3089, 5125, 820, 841, 411, 746, 11, 797, 11, 291, 500, 380, 528, 281, 11, 51292, 51292, 498, 291, 393, 360, 746, 11, 498, 291, 393, 9021, 257, 3387, 1553, 3089, 5125, 11, 291, 538, 439, 51488, 51488, 1355, 820, 13, 51538, 51538, 400, 309, 775, 909, 14024, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.12411615037426506, "compression_ratio": 1.7813953488372094, "no_caption_prob": 1.3419567949313205e-05}, {"id": 142, "seek": 49484, "start": 508.52, "end": 513.4, "text": " And I think that code generation should feel like something, again, you don't want to,", "tokens": [50364, 286, 519, 300, 341, 3410, 307, 4420, 13, 50500, 50500, 467, 311, 4664, 4420, 337, 6405, 16552, 293, 988, 11, 3089, 5125, 3263, 6958, 11, 457, 50866, 50866, 286, 576, 411, 281, 652, 309, 1626, 1570, 6958, 13, 51048, 51048, 400, 286, 519, 300, 3089, 5125, 820, 841, 411, 746, 11, 797, 11, 291, 500, 380, 528, 281, 11, 51292, 51292, 498, 291, 393, 360, 746, 11, 498, 291, 393, 9021, 257, 3387, 1553, 3089, 5125, 11, 291, 538, 439, 51488, 51488, 1355, 820, 13, 51538, 51538, 400, 309, 775, 909, 14024, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.12411615037426506, "compression_ratio": 1.7813953488372094, "no_caption_prob": 1.3419567949313205e-05}, {"id": 143, "seek": 49484, "start": 513.4, "end": 517.3199999999999, "text": " if you can do something, if you can accomplish a goal without code generation, you by all", "tokens": [50364, 286, 519, 300, 341, 3410, 307, 4420, 13, 50500, 50500, 467, 311, 4664, 4420, 337, 6405, 16552, 293, 988, 11, 3089, 5125, 3263, 6958, 11, 457, 50866, 50866, 286, 576, 411, 281, 652, 309, 1626, 1570, 6958, 13, 51048, 51048, 400, 286, 519, 300, 3089, 5125, 820, 841, 411, 746, 11, 797, 11, 291, 500, 380, 528, 281, 11, 51292, 51292, 498, 291, 393, 360, 746, 11, 498, 291, 393, 9021, 257, 3387, 1553, 3089, 5125, 11, 291, 538, 439, 51488, 51488, 1355, 820, 13, 51538, 51538, 400, 309, 775, 909, 14024, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.12411615037426506, "compression_ratio": 1.7813953488372094, "no_caption_prob": 1.3419567949313205e-05}, {"id": 144, "seek": 49484, "start": 517.3199999999999, "end": 518.3199999999999, "text": " means should.", "tokens": [50364, 286, 519, 300, 341, 3410, 307, 4420, 13, 50500, 50500, 467, 311, 4664, 4420, 337, 6405, 16552, 293, 988, 11, 3089, 5125, 3263, 6958, 11, 457, 50866, 50866, 286, 576, 411, 281, 652, 309, 1626, 1570, 6958, 13, 51048, 51048, 400, 286, 519, 300, 3089, 5125, 820, 841, 411, 746, 11, 797, 11, 291, 500, 380, 528, 281, 11, 51292, 51292, 498, 291, 393, 360, 746, 11, 498, 291, 393, 9021, 257, 3387, 1553, 3089, 5125, 11, 291, 538, 439, 51488, 51488, 1355, 820, 13, 51538, 51538, 400, 309, 775, 909, 14024, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.12411615037426506, "compression_ratio": 1.7813953488372094, "no_caption_prob": 1.3419567949313205e-05}, {"id": 145, "seek": 49484, "start": 518.3199999999999, "end": 520.1999999999999, "text": " And it does add complexity.", "tokens": [50364, 286, 519, 300, 341, 3410, 307, 4420, 13, 50500, 50500, 467, 311, 4664, 4420, 337, 6405, 16552, 293, 988, 11, 3089, 5125, 3263, 6958, 11, 457, 50866, 50866, 286, 576, 411, 281, 652, 309, 1626, 1570, 6958, 13, 51048, 51048, 400, 286, 519, 300, 3089, 5125, 820, 841, 411, 746, 11, 797, 11, 291, 500, 380, 528, 281, 11, 51292, 51292, 498, 291, 393, 360, 746, 11, 498, 291, 393, 9021, 257, 3387, 1553, 3089, 5125, 11, 291, 538, 439, 51488, 51488, 1355, 820, 13, 51538, 51538, 400, 309, 775, 909, 14024, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.12411615037426506, "compression_ratio": 1.7813953488372094, "no_caption_prob": 1.3419567949313205e-05}, {"id": 146, "seek": 52020, "start": 520.2, "end": 525.5200000000001, "text": " It's funny what you said, because to me, code generation is mostly for applications.", "tokens": [50364, 467, 311, 4074, 437, 291, 848, 11, 570, 281, 385, 11, 3089, 5125, 307, 5240, 337, 5821, 13, 50630, 50630, 286, 576, 362, 1920, 848, 11, 291, 458, 437, 11, 3089, 5125, 393, 611, 312, 4420, 337, 15148, 13, 50926, 50926, 663, 311, 1880, 13, 50976, 50976, 1042, 11, 550, 286, 2041, 291, 434, 1217, 1953, 264, 636, 300, 286, 478, 7159, 561, 486, 13, 51322, 51322, 286, 1009, 483, 264, 2633, 300, 3089, 5125, 3417, 29714, 281, 561, 11, 457, 1310, 11, 286, 51552, 51552, 914, 11, 286, 500, 380, 458, 11, 1310, 300, 311, 406, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1681799608118394, "compression_ratio": 1.7253218884120172, "no_caption_prob": 5.649279410135932e-05}, {"id": 147, "seek": 52020, "start": 525.5200000000001, "end": 531.44, "text": " I would have almost said, you know what, code generation can also be useful for libraries.", "tokens": [50364, 467, 311, 4074, 437, 291, 848, 11, 570, 281, 385, 11, 3089, 5125, 307, 5240, 337, 5821, 13, 50630, 50630, 286, 576, 362, 1920, 848, 11, 291, 458, 437, 11, 3089, 5125, 393, 611, 312, 4420, 337, 15148, 13, 50926, 50926, 663, 311, 1880, 13, 50976, 50976, 1042, 11, 550, 286, 2041, 291, 434, 1217, 1953, 264, 636, 300, 286, 478, 7159, 561, 486, 13, 51322, 51322, 286, 1009, 483, 264, 2633, 300, 3089, 5125, 3417, 29714, 281, 561, 11, 457, 1310, 11, 286, 51552, 51552, 914, 11, 286, 500, 380, 458, 11, 1310, 300, 311, 406, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1681799608118394, "compression_ratio": 1.7253218884120172, "no_caption_prob": 5.649279410135932e-05}, {"id": 148, "seek": 52020, "start": 531.44, "end": 532.44, "text": " That's interesting.", "tokens": [50364, 467, 311, 4074, 437, 291, 848, 11, 570, 281, 385, 11, 3089, 5125, 307, 5240, 337, 5821, 13, 50630, 50630, 286, 576, 362, 1920, 848, 11, 291, 458, 437, 11, 3089, 5125, 393, 611, 312, 4420, 337, 15148, 13, 50926, 50926, 663, 311, 1880, 13, 50976, 50976, 1042, 11, 550, 286, 2041, 291, 434, 1217, 1953, 264, 636, 300, 286, 478, 7159, 561, 486, 13, 51322, 51322, 286, 1009, 483, 264, 2633, 300, 3089, 5125, 3417, 29714, 281, 561, 11, 457, 1310, 11, 286, 51552, 51552, 914, 11, 286, 500, 380, 458, 11, 1310, 300, 311, 406, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1681799608118394, "compression_ratio": 1.7253218884120172, "no_caption_prob": 5.649279410135932e-05}, {"id": 149, "seek": 52020, "start": 532.44, "end": 539.36, "text": " Well, then I guess you're already thinking the way that I'm hoping people will.", "tokens": [50364, 467, 311, 4074, 437, 291, 848, 11, 570, 281, 385, 11, 3089, 5125, 307, 5240, 337, 5821, 13, 50630, 50630, 286, 576, 362, 1920, 848, 11, 291, 458, 437, 11, 3089, 5125, 393, 611, 312, 4420, 337, 15148, 13, 50926, 50926, 663, 311, 1880, 13, 50976, 50976, 1042, 11, 550, 286, 2041, 291, 434, 1217, 1953, 264, 636, 300, 286, 478, 7159, 561, 486, 13, 51322, 51322, 286, 1009, 483, 264, 2633, 300, 3089, 5125, 3417, 29714, 281, 561, 11, 457, 1310, 11, 286, 51552, 51552, 914, 11, 286, 500, 380, 458, 11, 1310, 300, 311, 406, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1681799608118394, "compression_ratio": 1.7253218884120172, "no_caption_prob": 5.649279410135932e-05}, {"id": 150, "seek": 52020, "start": 539.36, "end": 543.96, "text": " I always get the feeling that code generation feels intimidating to people, but maybe, I", "tokens": [50364, 467, 311, 4074, 437, 291, 848, 11, 570, 281, 385, 11, 3089, 5125, 307, 5240, 337, 5821, 13, 50630, 50630, 286, 576, 362, 1920, 848, 11, 291, 458, 437, 11, 3089, 5125, 393, 611, 312, 4420, 337, 15148, 13, 50926, 50926, 663, 311, 1880, 13, 50976, 50976, 1042, 11, 550, 286, 2041, 291, 434, 1217, 1953, 264, 636, 300, 286, 478, 7159, 561, 486, 13, 51322, 51322, 286, 1009, 483, 264, 2633, 300, 3089, 5125, 3417, 29714, 281, 561, 11, 457, 1310, 11, 286, 51552, 51552, 914, 11, 286, 500, 380, 458, 11, 1310, 300, 311, 406, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1681799608118394, "compression_ratio": 1.7253218884120172, "no_caption_prob": 5.649279410135932e-05}, {"id": 151, "seek": 52020, "start": 543.96, "end": 546.2800000000001, "text": " mean, I don't know, maybe that's not.", "tokens": [50364, 467, 311, 4074, 437, 291, 848, 11, 570, 281, 385, 11, 3089, 5125, 307, 5240, 337, 5821, 13, 50630, 50630, 286, 576, 362, 1920, 848, 11, 291, 458, 437, 11, 3089, 5125, 393, 611, 312, 4420, 337, 15148, 13, 50926, 50926, 663, 311, 1880, 13, 50976, 50976, 1042, 11, 550, 286, 2041, 291, 434, 1217, 1953, 264, 636, 300, 286, 478, 7159, 561, 486, 13, 51322, 51322, 286, 1009, 483, 264, 2633, 300, 3089, 5125, 3417, 29714, 281, 561, 11, 457, 1310, 11, 286, 51552, 51552, 914, 11, 286, 500, 380, 458, 11, 1310, 300, 311, 406, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1681799608118394, "compression_ratio": 1.7253218884120172, "no_caption_prob": 5.649279410135932e-05}, {"id": 152, "seek": 54628, "start": 546.28, "end": 552.16, "text": " I guess it's something that you have to get used to, because people who have used ElmGraphQL", "tokens": [50364, 286, 2041, 309, 311, 746, 300, 291, 362, 281, 483, 1143, 281, 11, 570, 561, 567, 362, 1143, 2699, 76, 38, 2662, 13695, 50658, 50658, 420, 2531, 4455, 11, 436, 600, 1217, 4243, 294, 264, 1558, 295, 11, 286, 362, 452, 2699, 76, 1716, 293, 51004, 51004, 286, 362, 257, 992, 295, 1322, 3873, 300, 8460, 264, 3089, 300, 286, 643, 281, 1190, 949, 286, 1190, 2699, 76, 51276, 51276, 652, 420, 949, 286, 643, 281, 2944, 746, 281, 4265, 13, 51486, 51486, 286, 519, 300, 311, 881, 295, 264, 30264, 2063, 300, 291, 362, 420, 881, 295, 264, 8657, 5497, 300, 291, 51752, 51752, 362, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13810732557966904, "compression_ratio": 1.7702127659574467, "no_caption_prob": 5.594155027210945e-06}, {"id": 153, "seek": 54628, "start": 552.16, "end": 559.0799999999999, "text": " or similar projects, they've already bought in the idea of, I have my Elm project and", "tokens": [50364, 286, 2041, 309, 311, 746, 300, 291, 362, 281, 483, 1143, 281, 11, 570, 561, 567, 362, 1143, 2699, 76, 38, 2662, 13695, 50658, 50658, 420, 2531, 4455, 11, 436, 600, 1217, 4243, 294, 264, 1558, 295, 11, 286, 362, 452, 2699, 76, 1716, 293, 51004, 51004, 286, 362, 257, 992, 295, 1322, 3873, 300, 8460, 264, 3089, 300, 286, 643, 281, 1190, 949, 286, 1190, 2699, 76, 51276, 51276, 652, 420, 949, 286, 643, 281, 2944, 746, 281, 4265, 13, 51486, 51486, 286, 519, 300, 311, 881, 295, 264, 30264, 2063, 300, 291, 362, 420, 881, 295, 264, 8657, 5497, 300, 291, 51752, 51752, 362, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13810732557966904, "compression_ratio": 1.7702127659574467, "no_caption_prob": 5.594155027210945e-06}, {"id": 154, "seek": 54628, "start": 559.0799999999999, "end": 564.52, "text": " I have a set of build tools that generate the code that I need to run before I run Elm", "tokens": [50364, 286, 2041, 309, 311, 746, 300, 291, 362, 281, 483, 1143, 281, 11, 570, 561, 567, 362, 1143, 2699, 76, 38, 2662, 13695, 50658, 50658, 420, 2531, 4455, 11, 436, 600, 1217, 4243, 294, 264, 1558, 295, 11, 286, 362, 452, 2699, 76, 1716, 293, 51004, 51004, 286, 362, 257, 992, 295, 1322, 3873, 300, 8460, 264, 3089, 300, 286, 643, 281, 1190, 949, 286, 1190, 2699, 76, 51276, 51276, 652, 420, 949, 286, 643, 281, 2944, 746, 281, 4265, 13, 51486, 51486, 286, 519, 300, 311, 881, 295, 264, 30264, 2063, 300, 291, 362, 420, 881, 295, 264, 8657, 5497, 300, 291, 51752, 51752, 362, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13810732557966904, "compression_ratio": 1.7702127659574467, "no_caption_prob": 5.594155027210945e-06}, {"id": 155, "seek": 54628, "start": 564.52, "end": 568.72, "text": " make or before I need to push something to production.", "tokens": [50364, 286, 2041, 309, 311, 746, 300, 291, 362, 281, 483, 1143, 281, 11, 570, 561, 567, 362, 1143, 2699, 76, 38, 2662, 13695, 50658, 50658, 420, 2531, 4455, 11, 436, 600, 1217, 4243, 294, 264, 1558, 295, 11, 286, 362, 452, 2699, 76, 1716, 293, 51004, 51004, 286, 362, 257, 992, 295, 1322, 3873, 300, 8460, 264, 3089, 300, 286, 643, 281, 1190, 949, 286, 1190, 2699, 76, 51276, 51276, 652, 420, 949, 286, 643, 281, 2944, 746, 281, 4265, 13, 51486, 51486, 286, 519, 300, 311, 881, 295, 264, 30264, 2063, 300, 291, 362, 420, 881, 295, 264, 8657, 5497, 300, 291, 51752, 51752, 362, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13810732557966904, "compression_ratio": 1.7702127659574467, "no_caption_prob": 5.594155027210945e-06}, {"id": 156, "seek": 54628, "start": 568.72, "end": 574.04, "text": " I think that's most of the upfront cost that you have or most of the setup costs that you", "tokens": [50364, 286, 2041, 309, 311, 746, 300, 291, 362, 281, 483, 1143, 281, 11, 570, 561, 567, 362, 1143, 2699, 76, 38, 2662, 13695, 50658, 50658, 420, 2531, 4455, 11, 436, 600, 1217, 4243, 294, 264, 1558, 295, 11, 286, 362, 452, 2699, 76, 1716, 293, 51004, 51004, 286, 362, 257, 992, 295, 1322, 3873, 300, 8460, 264, 3089, 300, 286, 643, 281, 1190, 949, 286, 1190, 2699, 76, 51276, 51276, 652, 420, 949, 286, 643, 281, 2944, 746, 281, 4265, 13, 51486, 51486, 286, 519, 300, 311, 881, 295, 264, 30264, 2063, 300, 291, 362, 420, 881, 295, 264, 8657, 5497, 300, 291, 51752, 51752, 362, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13810732557966904, "compression_ratio": 1.7702127659574467, "no_caption_prob": 5.594155027210945e-06}, {"id": 157, "seek": 54628, "start": 574.04, "end": 575.04, "text": " have.", "tokens": [50364, 286, 2041, 309, 311, 746, 300, 291, 362, 281, 483, 1143, 281, 11, 570, 561, 567, 362, 1143, 2699, 76, 38, 2662, 13695, 50658, 50658, 420, 2531, 4455, 11, 436, 600, 1217, 4243, 294, 264, 1558, 295, 11, 286, 362, 452, 2699, 76, 1716, 293, 51004, 51004, 286, 362, 257, 992, 295, 1322, 3873, 300, 8460, 264, 3089, 300, 286, 643, 281, 1190, 949, 286, 1190, 2699, 76, 51276, 51276, 652, 420, 949, 286, 643, 281, 2944, 746, 281, 4265, 13, 51486, 51486, 286, 519, 300, 311, 881, 295, 264, 30264, 2063, 300, 291, 362, 420, 881, 295, 264, 8657, 5497, 300, 291, 51752, 51752, 362, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13810732557966904, "compression_ratio": 1.7702127659574467, "no_caption_prob": 5.594155027210945e-06}, {"id": 158, "seek": 57504, "start": 575.04, "end": 579.9599999999999, "text": " So once you've bought into that, you're free to do a lot more code generation.", "tokens": [50364, 407, 1564, 291, 600, 4243, 666, 300, 11, 291, 434, 1737, 281, 360, 257, 688, 544, 3089, 5125, 13, 50610, 50610, 1079, 11, 3122, 13, 50726, 50726, 400, 309, 307, 4664, 4420, 337, 5821, 11, 382, 291, 584, 13, 50992, 50992, 400, 286, 519, 300, 3089, 5125, 2544, 588, 29714, 13, 51370, 51370, 1485, 295, 264, 721, 300, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 3089, 5125, 51604, 51604, 1669, 309, 1626, 411, 1270, 257, 2252, 11, 6179, 551, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.17001005150805945, "compression_ratio": 1.708133971291866, "no_caption_prob": 8.139566489262506e-06}, {"id": 159, "seek": 57504, "start": 579.9599999999999, "end": 582.28, "text": " Yes, absolutely.", "tokens": [50364, 407, 1564, 291, 600, 4243, 666, 300, 11, 291, 434, 1737, 281, 360, 257, 688, 544, 3089, 5125, 13, 50610, 50610, 1079, 11, 3122, 13, 50726, 50726, 400, 309, 307, 4664, 4420, 337, 5821, 11, 382, 291, 584, 13, 50992, 50992, 400, 286, 519, 300, 3089, 5125, 2544, 588, 29714, 13, 51370, 51370, 1485, 295, 264, 721, 300, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 3089, 5125, 51604, 51604, 1669, 309, 1626, 411, 1270, 257, 2252, 11, 6179, 551, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.17001005150805945, "compression_ratio": 1.708133971291866, "no_caption_prob": 8.139566489262506e-06}, {"id": 160, "seek": 57504, "start": 582.28, "end": 587.5999999999999, "text": " And it is extremely useful for applications, as you say.", "tokens": [50364, 407, 1564, 291, 600, 4243, 666, 300, 11, 291, 434, 1737, 281, 360, 257, 688, 544, 3089, 5125, 13, 50610, 50610, 1079, 11, 3122, 13, 50726, 50726, 400, 309, 307, 4664, 4420, 337, 5821, 11, 382, 291, 584, 13, 50992, 50992, 400, 286, 519, 300, 3089, 5125, 2544, 588, 29714, 13, 51370, 51370, 1485, 295, 264, 721, 300, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 3089, 5125, 51604, 51604, 1669, 309, 1626, 411, 1270, 257, 2252, 11, 6179, 551, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.17001005150805945, "compression_ratio": 1.708133971291866, "no_caption_prob": 8.139566489262506e-06}, {"id": 161, "seek": 57504, "start": 587.5999999999999, "end": 595.16, "text": " And I think that code generation seems very intimidating.", "tokens": [50364, 407, 1564, 291, 600, 4243, 666, 300, 11, 291, 434, 1737, 281, 360, 257, 688, 544, 3089, 5125, 13, 50610, 50610, 1079, 11, 3122, 13, 50726, 50726, 400, 309, 307, 4664, 4420, 337, 5821, 11, 382, 291, 584, 13, 50992, 50992, 400, 286, 519, 300, 3089, 5125, 2544, 588, 29714, 13, 51370, 51370, 1485, 295, 264, 721, 300, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 3089, 5125, 51604, 51604, 1669, 309, 1626, 411, 1270, 257, 2252, 11, 6179, 551, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.17001005150805945, "compression_ratio": 1.708133971291866, "no_caption_prob": 8.139566489262506e-06}, {"id": 162, "seek": 57504, "start": 595.16, "end": 599.8399999999999, "text": " One of the things that I always like to say about code generation is that code generation", "tokens": [50364, 407, 1564, 291, 600, 4243, 666, 300, 11, 291, 434, 1737, 281, 360, 257, 688, 544, 3089, 5125, 13, 50610, 50610, 1079, 11, 3122, 13, 50726, 50726, 400, 309, 307, 4664, 4420, 337, 5821, 11, 382, 291, 584, 13, 50992, 50992, 400, 286, 519, 300, 3089, 5125, 2544, 588, 29714, 13, 51370, 51370, 1485, 295, 264, 721, 300, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 3089, 5125, 51604, 51604, 1669, 309, 1626, 411, 1270, 257, 2252, 11, 6179, 551, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.17001005150805945, "compression_ratio": 1.708133971291866, "no_caption_prob": 8.139566489262506e-06}, {"id": 163, "seek": 57504, "start": 599.8399999999999, "end": 603.64, "text": " makes it sound like such a difficult, complicated thing.", "tokens": [50364, 407, 1564, 291, 600, 4243, 666, 300, 11, 291, 434, 1737, 281, 360, 257, 688, 544, 3089, 5125, 13, 50610, 50610, 1079, 11, 3122, 13, 50726, 50726, 400, 309, 307, 4664, 4420, 337, 5821, 11, 382, 291, 584, 13, 50992, 50992, 400, 286, 519, 300, 3089, 5125, 2544, 588, 29714, 13, 51370, 51370, 1485, 295, 264, 721, 300, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 3089, 5125, 51604, 51604, 1669, 309, 1626, 411, 1270, 257, 2252, 11, 6179, 551, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.17001005150805945, "compression_ratio": 1.708133971291866, "no_caption_prob": 8.139566489262506e-06}, {"id": 164, "seek": 60364, "start": 603.64, "end": 609.26, "text": " But you could do a code generation script that is, you know, like code generation could", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 165, "seek": 60364, "start": 609.26, "end": 611.92, "text": " be as simple as what is the build time?", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 166, "seek": 60364, "start": 611.92, "end": 617.88, "text": " Like you want a timestamp for when you build a script and you want that available as a", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 167, "seek": 60364, "start": 617.88, "end": 619.3, "text": " value in Elm.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 168, "seek": 60364, "start": 619.3, "end": 623.04, "text": " So it's going to be like just a POSIX time value, right?", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 169, "seek": 60364, "start": 623.04, "end": 624.04, "text": " Yeah.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 170, "seek": 60364, "start": 624.04, "end": 626.3199999999999, "text": " Or a string like for the build version or something.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 171, "seek": 60364, "start": 626.3199999999999, "end": 627.3199999999999, "text": " Yeah.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 172, "seek": 60364, "start": 627.3199999999999, "end": 628.3199999999999, "text": " Right.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 173, "seek": 60364, "start": 628.3199999999999, "end": 629.3199999999999, "text": " Exactly.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 174, "seek": 60364, "start": 629.3199999999999, "end": 630.3199999999999, "text": " Exactly.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 175, "seek": 60364, "start": 630.3199999999999, "end": 631.48, "text": " So that's going to be some little piece of metadata that you have that, you know, that", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 176, "seek": 60364, "start": 631.48, "end": 633.52, "text": " timestamp represents your build.", "tokens": [50364, 583, 291, 727, 360, 257, 3089, 5125, 5755, 300, 307, 11, 291, 458, 11, 411, 3089, 5125, 727, 50645, 50645, 312, 382, 2199, 382, 437, 307, 264, 1322, 565, 30, 50778, 50778, 1743, 291, 528, 257, 49108, 1215, 337, 562, 291, 1322, 257, 5755, 293, 291, 528, 300, 2435, 382, 257, 51076, 51076, 2158, 294, 2699, 76, 13, 51147, 51147, 407, 309, 311, 516, 281, 312, 411, 445, 257, 430, 4367, 21124, 565, 2158, 11, 558, 30, 51334, 51334, 865, 13, 51384, 51384, 1610, 257, 6798, 411, 337, 264, 1322, 3037, 420, 746, 13, 51498, 51498, 865, 13, 51548, 51548, 1779, 13, 51598, 51598, 7587, 13, 51648, 51648, 7587, 13, 51698, 51698, 407, 300, 311, 516, 281, 312, 512, 707, 2522, 295, 26603, 300, 291, 362, 300, 11, 291, 458, 11, 300, 51756, 51756, 49108, 1215, 8855, 428, 1322, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13828888204362658, "compression_ratio": 1.8401486988847584, "no_caption_prob": 2.8408252546796575e-05}, {"id": 177, "seek": 63352, "start": 633.52, "end": 636.52, "text": " So every time you do a new build, you have a new timestamp.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 178, "seek": 63352, "start": 636.52, "end": 638.4399999999999, "text": " So how would you go about that?", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 179, "seek": 63352, "start": 638.4399999999999, "end": 640.28, "text": " It's a very simple example.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 180, "seek": 63352, "start": 640.28, "end": 643.4399999999999, "text": " So let's go through all the steps together.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 181, "seek": 63352, "start": 643.4399999999999, "end": 644.4399999999999, "text": " That sounds great.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 182, "seek": 63352, "start": 644.4399999999999, "end": 645.4399999999999, "text": " Yeah.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 183, "seek": 63352, "start": 645.4399999999999, "end": 650.76, "text": " So what I always like to say about code generation is that really it's just a type of templating.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 184, "seek": 63352, "start": 650.76, "end": 652.8199999999999, "text": " And you can use different tools to template.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 185, "seek": 63352, "start": 652.8199999999999, "end": 658.12, "text": " If you want to get really fancy, you can pull in some abstract syntax trees and output those", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 186, "seek": 63352, "start": 658.12, "end": 659.12, "text": " to strings.", "tokens": [50364, 407, 633, 565, 291, 360, 257, 777, 1322, 11, 291, 362, 257, 777, 49108, 1215, 13, 50514, 50514, 407, 577, 576, 291, 352, 466, 300, 30, 50610, 50610, 467, 311, 257, 588, 2199, 1365, 13, 50702, 50702, 407, 718, 311, 352, 807, 439, 264, 4439, 1214, 13, 50860, 50860, 663, 3263, 869, 13, 50910, 50910, 865, 13, 50960, 50960, 407, 437, 286, 1009, 411, 281, 584, 466, 3089, 5125, 307, 300, 534, 309, 311, 445, 257, 2010, 295, 9100, 990, 13, 51226, 51226, 400, 291, 393, 764, 819, 3873, 281, 12379, 13, 51329, 51329, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 2235, 294, 512, 12649, 28431, 5852, 293, 5598, 729, 51594, 51594, 281, 13985, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08341385888271645, "compression_ratio": 1.6452830188679246, "no_caption_prob": 1.983305992325768e-05}, {"id": 187, "seek": 65912, "start": 659.12, "end": 666.44, "text": " But why would you do that if you're just generating a module, you know, build module build, exposing", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 188, "seek": 65912, "start": 666.44, "end": 673.6, "text": " timestamp and then timestamp colon POSIX dot time timestamp equals one, two, three, four,", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 189, "seek": 65912, "start": 673.6, "end": 675.68, "text": " five from POSIX time or something like that.", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 190, "seek": 65912, "start": 675.68, "end": 676.68, "text": " Right.", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 191, "seek": 65912, "start": 676.68, "end": 677.68, "text": " That's the code we're generating.", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 192, "seek": 65912, "start": 677.68, "end": 679.68, "text": " Why wouldn't you just do string templating?", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 193, "seek": 65912, "start": 679.68, "end": 683.44, "text": " So what I would say is just templating.", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 194, "seek": 65912, "start": 683.44, "end": 684.5600000000001, "text": " It's just templating.", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 195, "seek": 65912, "start": 684.5600000000001, "end": 686.6800000000001, "text": " Just write a little node JS script.", "tokens": [50364, 583, 983, 576, 291, 360, 300, 498, 291, 434, 445, 17746, 257, 10088, 11, 291, 458, 11, 1322, 10088, 1322, 11, 33178, 50730, 50730, 49108, 1215, 293, 550, 49108, 1215, 8255, 430, 4367, 21124, 5893, 565, 49108, 1215, 6915, 472, 11, 732, 11, 1045, 11, 1451, 11, 51088, 51088, 1732, 490, 430, 4367, 21124, 565, 420, 746, 411, 300, 13, 51192, 51192, 1779, 13, 51242, 51242, 663, 311, 264, 3089, 321, 434, 17746, 13, 51292, 51292, 1545, 2759, 380, 291, 445, 360, 6798, 9100, 990, 30, 51392, 51392, 407, 437, 286, 576, 584, 307, 445, 9100, 990, 13, 51580, 51580, 467, 311, 445, 9100, 990, 13, 51636, 51636, 1449, 2464, 257, 707, 9984, 33063, 5755, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.18464864095052083, "compression_ratio": 1.6923076923076923, "no_caption_prob": 1.892437103379052e-05}, {"id": 196, "seek": 68668, "start": 686.68, "end": 693.0799999999999, "text": " So just write like generate build module dot JS.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 197, "seek": 68668, "start": 693.0799999999999, "end": 696.92, "text": " And then, you know, you're just going to you know, if you're not familiar with node, you've", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 198, "seek": 68668, "start": 696.92, "end": 698.12, "text": " got a couple of things to learn.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 199, "seek": 68668, "start": 698.12, "end": 700.56, "text": " You can use whatever your preferred tool is.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 200, "seek": 68668, "start": 700.56, "end": 705.7199999999999, "text": " If you prefer to use Ruby or Python, you're not going to do it in Elm because how are", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 201, "seek": 68668, "start": 705.7199999999999, "end": 707.4799999999999, "text": " you going to write to a file with vanilla Elm?", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 202, "seek": 68668, "start": 707.4799999999999, "end": 708.8, "text": " That's not really going to help you out.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 203, "seek": 68668, "start": 708.8, "end": 709.8, "text": " Well then you use node.js.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 204, "seek": 68668, "start": 709.8, "end": 710.8, "text": " Oh, yeah.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 205, "seek": 68668, "start": 710.8, "end": 711.8, "text": " Right.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 206, "seek": 68668, "start": 711.8, "end": 712.8, "text": " Exactly.", "tokens": [50364, 407, 445, 2464, 411, 8460, 1322, 10088, 5893, 33063, 13, 50684, 50684, 400, 550, 11, 291, 458, 11, 291, 434, 445, 516, 281, 291, 458, 11, 498, 291, 434, 406, 4963, 365, 9984, 11, 291, 600, 50876, 50876, 658, 257, 1916, 295, 721, 281, 1466, 13, 50936, 50936, 509, 393, 764, 2035, 428, 16494, 2290, 307, 13, 51058, 51058, 759, 291, 4382, 281, 764, 19907, 420, 15329, 11, 291, 434, 406, 516, 281, 360, 309, 294, 2699, 76, 570, 577, 366, 51316, 51316, 291, 516, 281, 2464, 281, 257, 3991, 365, 17528, 2699, 76, 30, 51404, 51404, 663, 311, 406, 534, 516, 281, 854, 291, 484, 13, 51470, 51470, 1042, 550, 291, 764, 9984, 13, 25530, 13, 51520, 51520, 876, 11, 1338, 13, 51570, 51570, 1779, 13, 51620, 51620, 7587, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.14960122285065827, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4285362340160646e-05}, {"id": 207, "seek": 71280, "start": 712.8, "end": 717.28, "text": " So at the end of the day, all you're trying to do is write out this file.", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 208, "seek": 71280, "start": 717.28, "end": 720.0, "text": " In fact, if you want, just use bash.", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 209, "seek": 71280, "start": 720.0, "end": 722.0799999999999, "text": " That that would be fine, too.", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 210, "seek": 71280, "start": 722.0799999999999, "end": 723.3599999999999, "text": " That's not what I would reach for.", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 211, "seek": 71280, "start": 723.3599999999999, "end": 725.5799999999999, "text": " But let's just say we're using node.js.", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 212, "seek": 71280, "start": 725.5799999999999, "end": 730.56, "text": " So we're just going to, you know, say just write a little string template and we're just", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 213, "seek": 71280, "start": 730.56, "end": 735.4599999999999, "text": " going to do exactly that string I mentioned, except the one, two, three, four, five part.", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 214, "seek": 71280, "start": 735.4599999999999, "end": 739.7199999999999, "text": " We're going to do, you know, date dot whatever.", "tokens": [50364, 407, 412, 264, 917, 295, 264, 786, 11, 439, 291, 434, 1382, 281, 360, 307, 2464, 484, 341, 3991, 13, 50588, 50588, 682, 1186, 11, 498, 291, 528, 11, 445, 764, 46183, 13, 50724, 50724, 663, 300, 576, 312, 2489, 11, 886, 13, 50828, 50828, 663, 311, 406, 437, 286, 576, 2524, 337, 13, 50892, 50892, 583, 718, 311, 445, 584, 321, 434, 1228, 9984, 13, 25530, 13, 51003, 51003, 407, 321, 434, 445, 516, 281, 11, 291, 458, 11, 584, 445, 2464, 257, 707, 6798, 12379, 293, 321, 434, 445, 51252, 51252, 516, 281, 360, 2293, 300, 6798, 286, 2835, 11, 3993, 264, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 644, 13, 51497, 51497, 492, 434, 516, 281, 360, 11, 291, 458, 11, 4002, 5893, 2035, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.11491632461547852, "compression_ratio": 1.7751004016064258, "no_caption_prob": 2.2473417629953474e-05}, {"id": 215, "seek": 73972, "start": 739.72, "end": 743.4200000000001, "text": " Turn it into POSIX time using some fancy JavaScript thing.", "tokens": [50364, 7956, 309, 666, 430, 4367, 21124, 565, 1228, 512, 10247, 15778, 551, 13, 50549, 50549, 400, 550, 321, 434, 516, 281, 360, 479, 82, 5893, 2464, 3991, 20271, 11, 1391, 13, 50751, 50751, 400, 300, 311, 309, 13, 50801, 50801, 823, 321, 600, 1096, 512, 3089, 5125, 293, 550, 321, 434, 516, 281, 6328, 300, 666, 527, 1322, 13, 50993, 50993, 400, 633, 565, 321, 1190, 257, 1322, 11, 321, 1190, 300, 3089, 5125, 551, 13, 51176, 51176, 400, 550, 321, 434, 1391, 516, 281, 528, 281, 483, 257, 707, 857, 295, 2857, 6687, 300, 309, 311, 51518, 51518, 257, 4451, 10833, 3991, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.11578588132505063, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631070032715797e-05}, {"id": 216, "seek": 73972, "start": 743.4200000000001, "end": 747.46, "text": " And then we're going to do Fs dot write file sync, probably.", "tokens": [50364, 7956, 309, 666, 430, 4367, 21124, 565, 1228, 512, 10247, 15778, 551, 13, 50549, 50549, 400, 550, 321, 434, 516, 281, 360, 479, 82, 5893, 2464, 3991, 20271, 11, 1391, 13, 50751, 50751, 400, 300, 311, 309, 13, 50801, 50801, 823, 321, 600, 1096, 512, 3089, 5125, 293, 550, 321, 434, 516, 281, 6328, 300, 666, 527, 1322, 13, 50993, 50993, 400, 633, 565, 321, 1190, 257, 1322, 11, 321, 1190, 300, 3089, 5125, 551, 13, 51176, 51176, 400, 550, 321, 434, 1391, 516, 281, 528, 281, 483, 257, 707, 857, 295, 2857, 6687, 300, 309, 311, 51518, 51518, 257, 4451, 10833, 3991, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.11578588132505063, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631070032715797e-05}, {"id": 217, "seek": 73972, "start": 747.46, "end": 748.46, "text": " And that's it.", "tokens": [50364, 7956, 309, 666, 430, 4367, 21124, 565, 1228, 512, 10247, 15778, 551, 13, 50549, 50549, 400, 550, 321, 434, 516, 281, 360, 479, 82, 5893, 2464, 3991, 20271, 11, 1391, 13, 50751, 50751, 400, 300, 311, 309, 13, 50801, 50801, 823, 321, 600, 1096, 512, 3089, 5125, 293, 550, 321, 434, 516, 281, 6328, 300, 666, 527, 1322, 13, 50993, 50993, 400, 633, 565, 321, 1190, 257, 1322, 11, 321, 1190, 300, 3089, 5125, 551, 13, 51176, 51176, 400, 550, 321, 434, 1391, 516, 281, 528, 281, 483, 257, 707, 857, 295, 2857, 6687, 300, 309, 311, 51518, 51518, 257, 4451, 10833, 3991, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.11578588132505063, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631070032715797e-05}, {"id": 218, "seek": 73972, "start": 748.46, "end": 752.3000000000001, "text": " Now we've done some code generation and then we're going to hook that into our build.", "tokens": [50364, 7956, 309, 666, 430, 4367, 21124, 565, 1228, 512, 10247, 15778, 551, 13, 50549, 50549, 400, 550, 321, 434, 516, 281, 360, 479, 82, 5893, 2464, 3991, 20271, 11, 1391, 13, 50751, 50751, 400, 300, 311, 309, 13, 50801, 50801, 823, 321, 600, 1096, 512, 3089, 5125, 293, 550, 321, 434, 516, 281, 6328, 300, 666, 527, 1322, 13, 50993, 50993, 400, 633, 565, 321, 1190, 257, 1322, 11, 321, 1190, 300, 3089, 5125, 551, 13, 51176, 51176, 400, 550, 321, 434, 1391, 516, 281, 528, 281, 483, 257, 707, 857, 295, 2857, 6687, 300, 309, 311, 51518, 51518, 257, 4451, 10833, 3991, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.11578588132505063, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631070032715797e-05}, {"id": 219, "seek": 73972, "start": 752.3000000000001, "end": 755.96, "text": " And every time we run a build, we run that code generation thing.", "tokens": [50364, 7956, 309, 666, 430, 4367, 21124, 565, 1228, 512, 10247, 15778, 551, 13, 50549, 50549, 400, 550, 321, 434, 516, 281, 360, 479, 82, 5893, 2464, 3991, 20271, 11, 1391, 13, 50751, 50751, 400, 300, 311, 309, 13, 50801, 50801, 823, 321, 600, 1096, 512, 3089, 5125, 293, 550, 321, 434, 516, 281, 6328, 300, 666, 527, 1322, 13, 50993, 50993, 400, 633, 565, 321, 1190, 257, 1322, 11, 321, 1190, 300, 3089, 5125, 551, 13, 51176, 51176, 400, 550, 321, 434, 1391, 516, 281, 528, 281, 483, 257, 707, 857, 295, 2857, 6687, 300, 309, 311, 51518, 51518, 257, 4451, 10833, 3991, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.11578588132505063, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631070032715797e-05}, {"id": 220, "seek": 73972, "start": 755.96, "end": 762.8000000000001, "text": " And then we're probably going to want to get a little bit of extra confidence that it's", "tokens": [50364, 7956, 309, 666, 430, 4367, 21124, 565, 1228, 512, 10247, 15778, 551, 13, 50549, 50549, 400, 550, 321, 434, 516, 281, 360, 479, 82, 5893, 2464, 3991, 20271, 11, 1391, 13, 50751, 50751, 400, 300, 311, 309, 13, 50801, 50801, 823, 321, 600, 1096, 512, 3089, 5125, 293, 550, 321, 434, 516, 281, 6328, 300, 666, 527, 1322, 13, 50993, 50993, 400, 633, 565, 321, 1190, 257, 1322, 11, 321, 1190, 300, 3089, 5125, 551, 13, 51176, 51176, 400, 550, 321, 434, 1391, 516, 281, 528, 281, 483, 257, 707, 857, 295, 2857, 6687, 300, 309, 311, 51518, 51518, 257, 4451, 10833, 3991, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.11578588132505063, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631070032715797e-05}, {"id": 221, "seek": 73972, "start": 762.8000000000001, "end": 765.28, "text": " a fresh generated file.", "tokens": [50364, 7956, 309, 666, 430, 4367, 21124, 565, 1228, 512, 10247, 15778, 551, 13, 50549, 50549, 400, 550, 321, 434, 516, 281, 360, 479, 82, 5893, 2464, 3991, 20271, 11, 1391, 13, 50751, 50751, 400, 300, 311, 309, 13, 50801, 50801, 823, 321, 600, 1096, 512, 3089, 5125, 293, 550, 321, 434, 516, 281, 6328, 300, 666, 527, 1322, 13, 50993, 50993, 400, 633, 565, 321, 1190, 257, 1322, 11, 321, 1190, 300, 3089, 5125, 551, 13, 51176, 51176, 400, 550, 321, 434, 1391, 516, 281, 528, 281, 483, 257, 707, 857, 295, 2857, 6687, 300, 309, 311, 51518, 51518, 257, 4451, 10833, 3991, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.11578588132505063, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631070032715797e-05}, {"id": 222, "seek": 76528, "start": 765.28, "end": 770.8199999999999, "text": " And therefore we'll probably get ignore our build dot elm module or put it in like a gen", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 223, "seek": 76528, "start": 770.8199999999999, "end": 771.8199999999999, "text": " folder.", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 224, "seek": 76528, "start": 771.8199999999999, "end": 775.6, "text": " Maybe we'll output it to a gen folder, which is ignored.", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 225, "seek": 76528, "start": 775.6, "end": 777.28, "text": " Which is usually what I go for.", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 226, "seek": 76528, "start": 777.28, "end": 781.88, "text": " Yeah, because that's very nice, because then you know that you're not accidentally forgetting", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 227, "seek": 76528, "start": 781.88, "end": 787.88, "text": " to to generate it on on your build server and it's going to fail to compile.", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 228, "seek": 76528, "start": 787.88, "end": 791.72, "text": " If you do elm make, it's going to say, what is build dot elm?", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 229, "seek": 76528, "start": 791.72, "end": 794.9599999999999, "text": " And you say, oh, whoops, I forgot to run my build script.", "tokens": [50364, 400, 4412, 321, 603, 1391, 483, 11200, 527, 1322, 5893, 806, 76, 10088, 420, 829, 309, 294, 411, 257, 1049, 50641, 50641, 10820, 13, 50691, 50691, 2704, 321, 603, 5598, 309, 281, 257, 1049, 10820, 11, 597, 307, 19735, 13, 50880, 50880, 3013, 307, 2673, 437, 286, 352, 337, 13, 50964, 50964, 865, 11, 570, 300, 311, 588, 1481, 11, 570, 550, 291, 458, 300, 291, 434, 406, 15715, 25428, 51194, 51194, 281, 281, 8460, 309, 322, 322, 428, 1322, 7154, 293, 309, 311, 516, 281, 3061, 281, 31413, 13, 51494, 51494, 759, 291, 360, 806, 76, 652, 11, 309, 311, 516, 281, 584, 11, 437, 307, 1322, 5893, 806, 76, 30, 51686, 51686, 400, 291, 584, 11, 1954, 11, 567, 3370, 11, 286, 5298, 281, 1190, 452, 1322, 5755, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15328958299424914, "compression_ratio": 1.7761194029850746, "no_caption_prob": 8.939502549765166e-06}, {"id": 230, "seek": 79496, "start": 794.96, "end": 795.96, "text": " That's it.", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 231, "seek": 79496, "start": 795.96, "end": 797.96, "text": " Now we've just done your first code generation.", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 232, "seek": 79496, "start": 797.96, "end": 804.0400000000001, "text": " You do need to change your project's source directories to include that new folder.", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 233, "seek": 79496, "start": 804.0400000000001, "end": 805.0400000000001, "text": " Yes.", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 234, "seek": 79496, "start": 805.0400000000001, "end": 808.2800000000001, "text": " If you generated it in a gen folder or if you, you know, you could just generate it", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 235, "seek": 79496, "start": 808.2800000000001, "end": 815.96, "text": " right in the source directory and add source slash build dot elm to your to your get ignore.", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 236, "seek": 79496, "start": 815.96, "end": 821.2800000000001, "text": " But in general, it's I think it's a nice practice to have a separate source directory for generated", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 237, "seek": 79496, "start": 821.2800000000001, "end": 822.2800000000001, "text": " code.", "tokens": [50364, 663, 311, 309, 13, 50414, 50414, 823, 321, 600, 445, 1096, 428, 700, 3089, 5125, 13, 50514, 50514, 509, 360, 643, 281, 1319, 428, 1716, 311, 4009, 5391, 530, 281, 4090, 300, 777, 10820, 13, 50818, 50818, 1079, 13, 50868, 50868, 759, 291, 10833, 309, 294, 257, 1049, 10820, 420, 498, 291, 11, 291, 458, 11, 291, 727, 445, 8460, 309, 51030, 51030, 558, 294, 264, 4009, 21120, 293, 909, 4009, 17330, 1322, 5893, 806, 76, 281, 428, 281, 428, 483, 11200, 13, 51414, 51414, 583, 294, 2674, 11, 309, 311, 286, 519, 309, 311, 257, 1481, 3124, 281, 362, 257, 4994, 4009, 21120, 337, 10833, 51680, 51680, 3089, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.13669799503527189, "compression_ratio": 1.7842323651452283, "no_caption_prob": 1.1300714504614007e-05}, {"id": 238, "seek": 82228, "start": 822.28, "end": 825.4, "text": " I don't even see what a drawback for that could be.", "tokens": [50364, 286, 500, 380, 754, 536, 437, 257, 2642, 3207, 337, 300, 727, 312, 13, 50520, 50520, 883, 11, 286, 519, 300, 311, 300, 311, 257, 869, 3124, 13, 50700, 50700, 407, 300, 311, 309, 13, 50750, 50750, 492, 445, 630, 3089, 5125, 13, 50800, 50800, 865, 11, 286, 519, 452, 3880, 2642, 3207, 337, 420, 286, 519, 452, 3880, 1822, 935, 337, 3089, 5125, 51107, 51107, 576, 312, 1419, 281, 992, 493, 257, 777, 733, 295, 1905, 7154, 13, 51336, 51336, 1743, 562, 291, 366, 6416, 365, 341, 1716, 11, 291, 643, 281, 1190, 264, 3089, 5125, 949, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1421350217333027, "compression_ratio": 1.7302325581395348, "no_caption_prob": 7.411099886667216e-06}, {"id": 239, "seek": 82228, "start": 825.4, "end": 829.0, "text": " No, I think that's that's a great practice.", "tokens": [50364, 286, 500, 380, 754, 536, 437, 257, 2642, 3207, 337, 300, 727, 312, 13, 50520, 50520, 883, 11, 286, 519, 300, 311, 300, 311, 257, 869, 3124, 13, 50700, 50700, 407, 300, 311, 309, 13, 50750, 50750, 492, 445, 630, 3089, 5125, 13, 50800, 50800, 865, 11, 286, 519, 452, 3880, 2642, 3207, 337, 420, 286, 519, 452, 3880, 1822, 935, 337, 3089, 5125, 51107, 51107, 576, 312, 1419, 281, 992, 493, 257, 777, 733, 295, 1905, 7154, 13, 51336, 51336, 1743, 562, 291, 366, 6416, 365, 341, 1716, 11, 291, 643, 281, 1190, 264, 3089, 5125, 949, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1421350217333027, "compression_ratio": 1.7302325581395348, "no_caption_prob": 7.411099886667216e-06}, {"id": 240, "seek": 82228, "start": 829.0, "end": 830.0, "text": " So that's it.", "tokens": [50364, 286, 500, 380, 754, 536, 437, 257, 2642, 3207, 337, 300, 727, 312, 13, 50520, 50520, 883, 11, 286, 519, 300, 311, 300, 311, 257, 869, 3124, 13, 50700, 50700, 407, 300, 311, 309, 13, 50750, 50750, 492, 445, 630, 3089, 5125, 13, 50800, 50800, 865, 11, 286, 519, 452, 3880, 2642, 3207, 337, 420, 286, 519, 452, 3880, 1822, 935, 337, 3089, 5125, 51107, 51107, 576, 312, 1419, 281, 992, 493, 257, 777, 733, 295, 1905, 7154, 13, 51336, 51336, 1743, 562, 291, 366, 6416, 365, 341, 1716, 11, 291, 643, 281, 1190, 264, 3089, 5125, 949, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1421350217333027, "compression_ratio": 1.7302325581395348, "no_caption_prob": 7.411099886667216e-06}, {"id": 241, "seek": 82228, "start": 830.0, "end": 831.0, "text": " We just did code generation.", "tokens": [50364, 286, 500, 380, 754, 536, 437, 257, 2642, 3207, 337, 300, 727, 312, 13, 50520, 50520, 883, 11, 286, 519, 300, 311, 300, 311, 257, 869, 3124, 13, 50700, 50700, 407, 300, 311, 309, 13, 50750, 50750, 492, 445, 630, 3089, 5125, 13, 50800, 50800, 865, 11, 286, 519, 452, 3880, 2642, 3207, 337, 420, 286, 519, 452, 3880, 1822, 935, 337, 3089, 5125, 51107, 51107, 576, 312, 1419, 281, 992, 493, 257, 777, 733, 295, 1905, 7154, 13, 51336, 51336, 1743, 562, 291, 366, 6416, 365, 341, 1716, 11, 291, 643, 281, 1190, 264, 3089, 5125, 949, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1421350217333027, "compression_ratio": 1.7302325581395348, "no_caption_prob": 7.411099886667216e-06}, {"id": 242, "seek": 82228, "start": 831.0, "end": 837.14, "text": " Yeah, I think my biggest drawback for or I think my biggest pain point for code generation", "tokens": [50364, 286, 500, 380, 754, 536, 437, 257, 2642, 3207, 337, 300, 727, 312, 13, 50520, 50520, 883, 11, 286, 519, 300, 311, 300, 311, 257, 869, 3124, 13, 50700, 50700, 407, 300, 311, 309, 13, 50750, 50750, 492, 445, 630, 3089, 5125, 13, 50800, 50800, 865, 11, 286, 519, 452, 3880, 2642, 3207, 337, 420, 286, 519, 452, 3880, 1822, 935, 337, 3089, 5125, 51107, 51107, 576, 312, 1419, 281, 992, 493, 257, 777, 733, 295, 1905, 7154, 13, 51336, 51336, 1743, 562, 291, 366, 6416, 365, 341, 1716, 11, 291, 643, 281, 1190, 264, 3089, 5125, 949, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1421350217333027, "compression_ratio": 1.7302325581395348, "no_caption_prob": 7.411099886667216e-06}, {"id": 243, "seek": 82228, "start": 837.14, "end": 841.72, "text": " would be having to set up a new kind of dev server.", "tokens": [50364, 286, 500, 380, 754, 536, 437, 257, 2642, 3207, 337, 300, 727, 312, 13, 50520, 50520, 883, 11, 286, 519, 300, 311, 300, 311, 257, 869, 3124, 13, 50700, 50700, 407, 300, 311, 309, 13, 50750, 50750, 492, 445, 630, 3089, 5125, 13, 50800, 50800, 865, 11, 286, 519, 452, 3880, 2642, 3207, 337, 420, 286, 519, 452, 3880, 1822, 935, 337, 3089, 5125, 51107, 51107, 576, 312, 1419, 281, 992, 493, 257, 777, 733, 295, 1905, 7154, 13, 51336, 51336, 1743, 562, 291, 366, 6416, 365, 341, 1716, 11, 291, 643, 281, 1190, 264, 3089, 5125, 949, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1421350217333027, "compression_ratio": 1.7302325581395348, "no_caption_prob": 7.411099886667216e-06}, {"id": 244, "seek": 82228, "start": 841.72, "end": 847.06, "text": " Like when you are developing with this project, you need to run the code generation before", "tokens": [50364, 286, 500, 380, 754, 536, 437, 257, 2642, 3207, 337, 300, 727, 312, 13, 50520, 50520, 883, 11, 286, 519, 300, 311, 300, 311, 257, 869, 3124, 13, 50700, 50700, 407, 300, 311, 309, 13, 50750, 50750, 492, 445, 630, 3089, 5125, 13, 50800, 50800, 865, 11, 286, 519, 452, 3880, 2642, 3207, 337, 420, 286, 519, 452, 3880, 1822, 935, 337, 3089, 5125, 51107, 51107, 576, 312, 1419, 281, 992, 493, 257, 777, 733, 295, 1905, 7154, 13, 51336, 51336, 1743, 562, 291, 366, 6416, 365, 341, 1716, 11, 291, 643, 281, 1190, 264, 3089, 5125, 949, 51603, 51603], "temperature": 0.0, "avg_logprob": -0.1421350217333027, "compression_ratio": 1.7302325581395348, "no_caption_prob": 7.411099886667216e-06}, {"id": 245, "seek": 84706, "start": 847.06, "end": 852.8, "text": " every compile before every before you start developing whatever, whichever makes sense", "tokens": [50364, 633, 31413, 949, 633, 949, 291, 722, 6416, 2035, 11, 24123, 1669, 2020, 50651, 50651, 337, 428, 764, 1389, 13, 50725, 50725, 400, 291, 1391, 1582, 380, 764, 411, 17528, 806, 76, 652, 1062, 764, 9573, 9539, 281, 7875, 264, 3089, 51045, 51045, 5125, 420, 309, 311, 445, 411, 2183, 3625, 23294, 11, 2035, 1669, 544, 2020, 13, 51295, 51295, 583, 291, 362, 281, 992, 746, 493, 370, 300, 561, 294, 428, 1469, 500, 380, 26506, 264, 49040, 293, 360, 806, 76, 51689, 51689, 652, 293, 550, 436, 483, 257, 31958, 6713, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17520112106480548, "compression_ratio": 1.6833333333333333, "no_caption_prob": 1.6963354937615804e-05}, {"id": 246, "seek": 84706, "start": 852.8, "end": 854.28, "text": " for your use case.", "tokens": [50364, 633, 31413, 949, 633, 949, 291, 722, 6416, 2035, 11, 24123, 1669, 2020, 50651, 50651, 337, 428, 764, 1389, 13, 50725, 50725, 400, 291, 1391, 1582, 380, 764, 411, 17528, 806, 76, 652, 1062, 764, 9573, 9539, 281, 7875, 264, 3089, 51045, 51045, 5125, 420, 309, 311, 445, 411, 2183, 3625, 23294, 11, 2035, 1669, 544, 2020, 13, 51295, 51295, 583, 291, 362, 281, 992, 746, 493, 370, 300, 561, 294, 428, 1469, 500, 380, 26506, 264, 49040, 293, 360, 806, 76, 51689, 51689, 652, 293, 550, 436, 483, 257, 31958, 6713, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17520112106480548, "compression_ratio": 1.6833333333333333, "no_caption_prob": 1.6963354937615804e-05}, {"id": 247, "seek": 84706, "start": 854.28, "end": 860.68, "text": " And you probably won't use like vanilla elm make might use Webpack to trigger the code", "tokens": [50364, 633, 31413, 949, 633, 949, 291, 722, 6416, 2035, 11, 24123, 1669, 2020, 50651, 50651, 337, 428, 764, 1389, 13, 50725, 50725, 400, 291, 1391, 1582, 380, 764, 411, 17528, 806, 76, 652, 1062, 764, 9573, 9539, 281, 7875, 264, 3089, 51045, 51045, 5125, 420, 309, 311, 445, 411, 2183, 3625, 23294, 11, 2035, 1669, 544, 2020, 13, 51295, 51295, 583, 291, 362, 281, 992, 746, 493, 370, 300, 561, 294, 428, 1469, 500, 380, 26506, 264, 49040, 293, 360, 806, 76, 51689, 51689, 652, 293, 550, 436, 483, 257, 31958, 6713, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17520112106480548, "compression_ratio": 1.6833333333333333, "no_caption_prob": 1.6963354937615804e-05}, {"id": 248, "seek": 84706, "start": 860.68, "end": 865.68, "text": " generation or it's just like post install scripts, whatever makes more sense.", "tokens": [50364, 633, 31413, 949, 633, 949, 291, 722, 6416, 2035, 11, 24123, 1669, 2020, 50651, 50651, 337, 428, 764, 1389, 13, 50725, 50725, 400, 291, 1391, 1582, 380, 764, 411, 17528, 806, 76, 652, 1062, 764, 9573, 9539, 281, 7875, 264, 3089, 51045, 51045, 5125, 420, 309, 311, 445, 411, 2183, 3625, 23294, 11, 2035, 1669, 544, 2020, 13, 51295, 51295, 583, 291, 362, 281, 992, 746, 493, 370, 300, 561, 294, 428, 1469, 500, 380, 26506, 264, 49040, 293, 360, 806, 76, 51689, 51689, 652, 293, 550, 436, 483, 257, 31958, 6713, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17520112106480548, "compression_ratio": 1.6833333333333333, "no_caption_prob": 1.6963354937615804e-05}, {"id": 249, "seek": 84706, "start": 865.68, "end": 873.56, "text": " But you have to set something up so that people in your team don't clone the repo and do elm", "tokens": [50364, 633, 31413, 949, 633, 949, 291, 722, 6416, 2035, 11, 24123, 1669, 2020, 50651, 50651, 337, 428, 764, 1389, 13, 50725, 50725, 400, 291, 1391, 1582, 380, 764, 411, 17528, 806, 76, 652, 1062, 764, 9573, 9539, 281, 7875, 264, 3089, 51045, 51045, 5125, 420, 309, 311, 445, 411, 2183, 3625, 23294, 11, 2035, 1669, 544, 2020, 13, 51295, 51295, 583, 291, 362, 281, 992, 746, 493, 370, 300, 561, 294, 428, 1469, 500, 380, 26506, 264, 49040, 293, 360, 806, 76, 51689, 51689, 652, 293, 550, 436, 483, 257, 31958, 6713, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17520112106480548, "compression_ratio": 1.6833333333333333, "no_caption_prob": 1.6963354937615804e-05}, {"id": 250, "seek": 84706, "start": 873.56, "end": 876.56, "text": " make and then they get a compiler error.", "tokens": [50364, 633, 31413, 949, 633, 949, 291, 722, 6416, 2035, 11, 24123, 1669, 2020, 50651, 50651, 337, 428, 764, 1389, 13, 50725, 50725, 400, 291, 1391, 1582, 380, 764, 411, 17528, 806, 76, 652, 1062, 764, 9573, 9539, 281, 7875, 264, 3089, 51045, 51045, 5125, 420, 309, 311, 445, 411, 2183, 3625, 23294, 11, 2035, 1669, 544, 2020, 13, 51295, 51295, 583, 291, 362, 281, 992, 746, 493, 370, 300, 561, 294, 428, 1469, 500, 380, 26506, 264, 49040, 293, 360, 806, 76, 51689, 51689, 652, 293, 550, 436, 483, 257, 31958, 6713, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.17520112106480548, "compression_ratio": 1.6833333333333333, "no_caption_prob": 1.6963354937615804e-05}, {"id": 251, "seek": 87656, "start": 876.56, "end": 879.56, "text": " You need to make it easy for them to to get started with the project.", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 252, "seek": 87656, "start": 879.56, "end": 880.56, "text": " Yes.", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 253, "seek": 87656, "start": 880.56, "end": 881.56, "text": " Right.", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 254, "seek": 87656, "start": 881.56, "end": 887.4799999999999, "text": " So, yeah, there's sort of like the lifecycle of these generated files because so like there's", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 255, "seek": 87656, "start": 887.4799999999999, "end": 893.02, "text": " a particular like conceptually pretty much any any I'm going to go ahead and say any", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 256, "seek": 87656, "start": 893.02, "end": 895.52, "text": " generated code has a source of truth.", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 257, "seek": 87656, "start": 895.52, "end": 898.7399999999999, "text": " There's some that's sort of the point of generating code.", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 258, "seek": 87656, "start": 898.7399999999999, "end": 901.06, "text": " There's some source of truth that you're mirroring.", "tokens": [50364, 509, 643, 281, 652, 309, 1858, 337, 552, 281, 281, 483, 1409, 365, 264, 1716, 13, 50514, 50514, 1079, 13, 50564, 50564, 1779, 13, 50614, 50614, 407, 11, 1338, 11, 456, 311, 1333, 295, 411, 264, 45722, 295, 613, 10833, 7098, 570, 370, 411, 456, 311, 50910, 50910, 257, 1729, 411, 3410, 671, 1238, 709, 604, 604, 286, 478, 516, 281, 352, 2286, 293, 584, 604, 51187, 51187, 10833, 3089, 575, 257, 4009, 295, 3494, 13, 51312, 51312, 821, 311, 512, 300, 311, 1333, 295, 264, 935, 295, 17746, 3089, 13, 51473, 51473, 821, 311, 512, 4009, 295, 3494, 300, 291, 434, 8013, 278, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.16720022848986704, "compression_ratio": 1.7586206896551724, "no_caption_prob": 5.144077294971794e-05}, {"id": 259, "seek": 90106, "start": 901.06, "end": 906.52, "text": " And depending on what that source of truth is, you that's going to influence when you", "tokens": [50364, 400, 5413, 322, 437, 300, 4009, 295, 3494, 307, 11, 291, 300, 311, 516, 281, 6503, 562, 291, 50637, 50637, 528, 281, 8460, 309, 13, 50699, 50699, 407, 411, 294, 264, 1365, 295, 411, 257, 1333, 295, 1322, 49108, 1215, 11, 300, 472, 307, 264, 45722, 307, 18587, 50963, 50963, 570, 291, 445, 528, 281, 8460, 257, 3845, 472, 337, 633, 1322, 13, 51173, 51173, 407, 11, 291, 458, 11, 1310, 337, 428, 1905, 7154, 11, 291, 584, 11, 2264, 11, 2489, 11, 264, 3991, 2203, 281, 2514, 13, 51419, 51419, 583, 264, 1021, 551, 307, 445, 300, 264, 3991, 8198, 293, 300, 633, 565, 286, 5374, 257, 777, 551, 51662, 51662, 281, 4265, 11, 309, 2709, 385, 3845, 1322, 7348, 420, 49108, 1215, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.09201038715451262, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.586645496194251e-05}, {"id": 260, "seek": 90106, "start": 906.52, "end": 907.76, "text": " want to generate it.", "tokens": [50364, 400, 5413, 322, 437, 300, 4009, 295, 3494, 307, 11, 291, 300, 311, 516, 281, 6503, 562, 291, 50637, 50637, 528, 281, 8460, 309, 13, 50699, 50699, 407, 411, 294, 264, 1365, 295, 411, 257, 1333, 295, 1322, 49108, 1215, 11, 300, 472, 307, 264, 45722, 307, 18587, 50963, 50963, 570, 291, 445, 528, 281, 8460, 257, 3845, 472, 337, 633, 1322, 13, 51173, 51173, 407, 11, 291, 458, 11, 1310, 337, 428, 1905, 7154, 11, 291, 584, 11, 2264, 11, 2489, 11, 264, 3991, 2203, 281, 2514, 13, 51419, 51419, 583, 264, 1021, 551, 307, 445, 300, 264, 3991, 8198, 293, 300, 633, 565, 286, 5374, 257, 777, 551, 51662, 51662, 281, 4265, 11, 309, 2709, 385, 3845, 1322, 7348, 420, 49108, 1215, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.09201038715451262, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.586645496194251e-05}, {"id": 261, "seek": 90106, "start": 907.76, "end": 913.04, "text": " So like in the example of like a sort of build timestamp, that one is the lifecycle is simpler", "tokens": [50364, 400, 5413, 322, 437, 300, 4009, 295, 3494, 307, 11, 291, 300, 311, 516, 281, 6503, 562, 291, 50637, 50637, 528, 281, 8460, 309, 13, 50699, 50699, 407, 411, 294, 264, 1365, 295, 411, 257, 1333, 295, 1322, 49108, 1215, 11, 300, 472, 307, 264, 45722, 307, 18587, 50963, 50963, 570, 291, 445, 528, 281, 8460, 257, 3845, 472, 337, 633, 1322, 13, 51173, 51173, 407, 11, 291, 458, 11, 1310, 337, 428, 1905, 7154, 11, 291, 584, 11, 2264, 11, 2489, 11, 264, 3991, 2203, 281, 2514, 13, 51419, 51419, 583, 264, 1021, 551, 307, 445, 300, 264, 3991, 8198, 293, 300, 633, 565, 286, 5374, 257, 777, 551, 51662, 51662, 281, 4265, 11, 309, 2709, 385, 3845, 1322, 7348, 420, 49108, 1215, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.09201038715451262, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.586645496194251e-05}, {"id": 262, "seek": 90106, "start": 913.04, "end": 917.2399999999999, "text": " because you just want to generate a unique one for every build.", "tokens": [50364, 400, 5413, 322, 437, 300, 4009, 295, 3494, 307, 11, 291, 300, 311, 516, 281, 6503, 562, 291, 50637, 50637, 528, 281, 8460, 309, 13, 50699, 50699, 407, 411, 294, 264, 1365, 295, 411, 257, 1333, 295, 1322, 49108, 1215, 11, 300, 472, 307, 264, 45722, 307, 18587, 50963, 50963, 570, 291, 445, 528, 281, 8460, 257, 3845, 472, 337, 633, 1322, 13, 51173, 51173, 407, 11, 291, 458, 11, 1310, 337, 428, 1905, 7154, 11, 291, 584, 11, 2264, 11, 2489, 11, 264, 3991, 2203, 281, 2514, 13, 51419, 51419, 583, 264, 1021, 551, 307, 445, 300, 264, 3991, 8198, 293, 300, 633, 565, 286, 5374, 257, 777, 551, 51662, 51662, 281, 4265, 11, 309, 2709, 385, 3845, 1322, 7348, 420, 49108, 1215, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.09201038715451262, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.586645496194251e-05}, {"id": 263, "seek": 90106, "start": 917.2399999999999, "end": 922.16, "text": " So, you know, maybe for your dev server, you say, OK, fine, the file needs to exist.", "tokens": [50364, 400, 5413, 322, 437, 300, 4009, 295, 3494, 307, 11, 291, 300, 311, 516, 281, 6503, 562, 291, 50637, 50637, 528, 281, 8460, 309, 13, 50699, 50699, 407, 411, 294, 264, 1365, 295, 411, 257, 1333, 295, 1322, 49108, 1215, 11, 300, 472, 307, 264, 45722, 307, 18587, 50963, 50963, 570, 291, 445, 528, 281, 8460, 257, 3845, 472, 337, 633, 1322, 13, 51173, 51173, 407, 11, 291, 458, 11, 1310, 337, 428, 1905, 7154, 11, 291, 584, 11, 2264, 11, 2489, 11, 264, 3991, 2203, 281, 2514, 13, 51419, 51419, 583, 264, 1021, 551, 307, 445, 300, 264, 3991, 8198, 293, 300, 633, 565, 286, 5374, 257, 777, 551, 51662, 51662, 281, 4265, 11, 309, 2709, 385, 3845, 1322, 7348, 420, 49108, 1215, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.09201038715451262, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.586645496194251e-05}, {"id": 264, "seek": 90106, "start": 922.16, "end": 927.02, "text": " But the important thing is just that the file exists and that every time I ship a new thing", "tokens": [50364, 400, 5413, 322, 437, 300, 4009, 295, 3494, 307, 11, 291, 300, 311, 516, 281, 6503, 562, 291, 50637, 50637, 528, 281, 8460, 309, 13, 50699, 50699, 407, 411, 294, 264, 1365, 295, 411, 257, 1333, 295, 1322, 49108, 1215, 11, 300, 472, 307, 264, 45722, 307, 18587, 50963, 50963, 570, 291, 445, 528, 281, 8460, 257, 3845, 472, 337, 633, 1322, 13, 51173, 51173, 407, 11, 291, 458, 11, 1310, 337, 428, 1905, 7154, 11, 291, 584, 11, 2264, 11, 2489, 11, 264, 3991, 2203, 281, 2514, 13, 51419, 51419, 583, 264, 1021, 551, 307, 445, 300, 264, 3991, 8198, 293, 300, 633, 565, 286, 5374, 257, 777, 551, 51662, 51662, 281, 4265, 11, 309, 2709, 385, 3845, 1322, 7348, 420, 49108, 1215, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.09201038715451262, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.586645496194251e-05}, {"id": 265, "seek": 90106, "start": 927.02, "end": 930.9599999999999, "text": " to production, it gives me unique build ID or timestamp.", "tokens": [50364, 400, 5413, 322, 437, 300, 4009, 295, 3494, 307, 11, 291, 300, 311, 516, 281, 6503, 562, 291, 50637, 50637, 528, 281, 8460, 309, 13, 50699, 50699, 407, 411, 294, 264, 1365, 295, 411, 257, 1333, 295, 1322, 49108, 1215, 11, 300, 472, 307, 264, 45722, 307, 18587, 50963, 50963, 570, 291, 445, 528, 281, 8460, 257, 3845, 472, 337, 633, 1322, 13, 51173, 51173, 407, 11, 291, 458, 11, 1310, 337, 428, 1905, 7154, 11, 291, 584, 11, 2264, 11, 2489, 11, 264, 3991, 2203, 281, 2514, 13, 51419, 51419, 583, 264, 1021, 551, 307, 445, 300, 264, 3991, 8198, 293, 300, 633, 565, 286, 5374, 257, 777, 551, 51662, 51662, 281, 4265, 11, 309, 2709, 385, 3845, 1322, 7348, 420, 49108, 1215, 13, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.09201038715451262, "compression_ratio": 1.750877192982456, "no_caption_prob": 2.586645496194251e-05}, {"id": 266, "seek": 93096, "start": 930.96, "end": 932.94, "text": " That's that's the only thing that matters.", "tokens": [50364, 663, 311, 300, 311, 264, 787, 551, 300, 7001, 13, 50463, 50463, 407, 337, 300, 4009, 295, 3494, 11, 264, 337, 300, 4973, 2316, 11, 291, 445, 643, 281, 312, 988, 300, 50696, 50696, 291, 434, 17746, 257, 4451, 472, 337, 1184, 1322, 11, 597, 264, 18331, 788, 418, 1333, 295, 2516, 1127, 295, 13, 50961, 50961, 759, 264, 4009, 295, 3494, 307, 411, 11, 718, 311, 584, 11, 337, 1365, 11, 257, 21884, 13695, 34078, 11, 550, 294, 1668, 51250, 51250, 281, 8013, 300, 4009, 295, 3494, 11, 291, 528, 281, 43819, 409, 264, 3089, 5125, 13, 51488, 51488, 509, 528, 281, 652, 988, 300, 309, 311, 10833, 9105, 3564, 2891, 493, 257, 1905, 7154, 420, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.09558962987474173, "compression_ratio": 1.7662835249042146, "no_caption_prob": 2.507121826056391e-05}, {"id": 267, "seek": 93096, "start": 932.94, "end": 937.6, "text": " So for that source of truth, the for that mental model, you just need to be sure that", "tokens": [50364, 663, 311, 300, 311, 264, 787, 551, 300, 7001, 13, 50463, 50463, 407, 337, 300, 4009, 295, 3494, 11, 264, 337, 300, 4973, 2316, 11, 291, 445, 643, 281, 312, 988, 300, 50696, 50696, 291, 434, 17746, 257, 4451, 472, 337, 1184, 1322, 11, 597, 264, 18331, 788, 418, 1333, 295, 2516, 1127, 295, 13, 50961, 50961, 759, 264, 4009, 295, 3494, 307, 411, 11, 718, 311, 584, 11, 337, 1365, 11, 257, 21884, 13695, 34078, 11, 550, 294, 1668, 51250, 51250, 281, 8013, 300, 4009, 295, 3494, 11, 291, 528, 281, 43819, 409, 264, 3089, 5125, 13, 51488, 51488, 509, 528, 281, 652, 988, 300, 309, 311, 10833, 9105, 3564, 2891, 493, 257, 1905, 7154, 420, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.09558962987474173, "compression_ratio": 1.7662835249042146, "no_caption_prob": 2.507121826056391e-05}, {"id": 268, "seek": 93096, "start": 937.6, "end": 942.9000000000001, "text": " you're generating a fresh one for each build, which the gitignore sort of takes care of.", "tokens": [50364, 663, 311, 300, 311, 264, 787, 551, 300, 7001, 13, 50463, 50463, 407, 337, 300, 4009, 295, 3494, 11, 264, 337, 300, 4973, 2316, 11, 291, 445, 643, 281, 312, 988, 300, 50696, 50696, 291, 434, 17746, 257, 4451, 472, 337, 1184, 1322, 11, 597, 264, 18331, 788, 418, 1333, 295, 2516, 1127, 295, 13, 50961, 50961, 759, 264, 4009, 295, 3494, 307, 411, 11, 718, 311, 584, 11, 337, 1365, 11, 257, 21884, 13695, 34078, 11, 550, 294, 1668, 51250, 51250, 281, 8013, 300, 4009, 295, 3494, 11, 291, 528, 281, 43819, 409, 264, 3089, 5125, 13, 51488, 51488, 509, 528, 281, 652, 988, 300, 309, 311, 10833, 9105, 3564, 2891, 493, 257, 1905, 7154, 420, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.09558962987474173, "compression_ratio": 1.7662835249042146, "no_caption_prob": 2.507121826056391e-05}, {"id": 269, "seek": 93096, "start": 942.9000000000001, "end": 948.6800000000001, "text": " If the source of truth is like, let's say, for example, a GraphQL schema, then in order", "tokens": [50364, 663, 311, 300, 311, 264, 787, 551, 300, 7001, 13, 50463, 50463, 407, 337, 300, 4009, 295, 3494, 11, 264, 337, 300, 4973, 2316, 11, 291, 445, 643, 281, 312, 988, 300, 50696, 50696, 291, 434, 17746, 257, 4451, 472, 337, 1184, 1322, 11, 597, 264, 18331, 788, 418, 1333, 295, 2516, 1127, 295, 13, 50961, 50961, 759, 264, 4009, 295, 3494, 307, 411, 11, 718, 311, 584, 11, 337, 1365, 11, 257, 21884, 13695, 34078, 11, 550, 294, 1668, 51250, 51250, 281, 8013, 300, 4009, 295, 3494, 11, 291, 528, 281, 43819, 409, 264, 3089, 5125, 13, 51488, 51488, 509, 528, 281, 652, 988, 300, 309, 311, 10833, 9105, 3564, 2891, 493, 257, 1905, 7154, 420, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.09558962987474173, "compression_ratio": 1.7662835249042146, "no_caption_prob": 2.507121826056391e-05}, {"id": 270, "seek": 93096, "start": 948.6800000000001, "end": 953.44, "text": " to mirror that source of truth, you want to rerun the code generation.", "tokens": [50364, 663, 311, 300, 311, 264, 787, 551, 300, 7001, 13, 50463, 50463, 407, 337, 300, 4009, 295, 3494, 11, 264, 337, 300, 4973, 2316, 11, 291, 445, 643, 281, 312, 988, 300, 50696, 50696, 291, 434, 17746, 257, 4451, 472, 337, 1184, 1322, 11, 597, 264, 18331, 788, 418, 1333, 295, 2516, 1127, 295, 13, 50961, 50961, 759, 264, 4009, 295, 3494, 307, 411, 11, 718, 311, 584, 11, 337, 1365, 11, 257, 21884, 13695, 34078, 11, 550, 294, 1668, 51250, 51250, 281, 8013, 300, 4009, 295, 3494, 11, 291, 528, 281, 43819, 409, 264, 3089, 5125, 13, 51488, 51488, 509, 528, 281, 652, 988, 300, 309, 311, 10833, 9105, 3564, 2891, 493, 257, 1905, 7154, 420, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.09558962987474173, "compression_ratio": 1.7662835249042146, "no_caption_prob": 2.507121826056391e-05}, {"id": 271, "seek": 93096, "start": 953.44, "end": 960.0400000000001, "text": " You want to make sure that it's generated initially upon starting up a dev server or", "tokens": [50364, 663, 311, 300, 311, 264, 787, 551, 300, 7001, 13, 50463, 50463, 407, 337, 300, 4009, 295, 3494, 11, 264, 337, 300, 4973, 2316, 11, 291, 445, 643, 281, 312, 988, 300, 50696, 50696, 291, 434, 17746, 257, 4451, 472, 337, 1184, 1322, 11, 597, 264, 18331, 788, 418, 1333, 295, 2516, 1127, 295, 13, 50961, 50961, 759, 264, 4009, 295, 3494, 307, 411, 11, 718, 311, 584, 11, 337, 1365, 11, 257, 21884, 13695, 34078, 11, 550, 294, 1668, 51250, 51250, 281, 8013, 300, 4009, 295, 3494, 11, 291, 528, 281, 43819, 409, 264, 3089, 5125, 13, 51488, 51488, 509, 528, 281, 652, 988, 300, 309, 311, 10833, 9105, 3564, 2891, 493, 257, 1905, 7154, 420, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.09558962987474173, "compression_ratio": 1.7662835249042146, "no_caption_prob": 2.507121826056391e-05}, {"id": 272, "seek": 96004, "start": 960.04, "end": 961.52, "text": " running your production build.", "tokens": [50364, 2614, 428, 4265, 1322, 13, 50438, 50438, 583, 291, 611, 528, 281, 652, 988, 294, 1905, 4391, 300, 309, 311, 885, 26358, 770, 382, 2978, 22915, 13, 50806, 50806, 407, 300, 775, 483, 257, 707, 857, 4282, 811, 294, 3331, 411, 300, 689, 291, 434, 8013, 278, 257, 4009, 50988, 50988, 295, 3494, 13, 51038, 51038, 509, 393, 291, 458, 11, 291, 727, 652, 257, 761, 667, 72, 35, 1899, 13, 51178, 51178, 509, 458, 11, 761, 667, 72, 35, 1899, 307, 411, 257, 364, 426, 18819, 2290, 597, 2709, 291, 257, 3991, 1159, 260, 13, 51414, 51414, 814, 2893, 456, 311, 257, 761, 667, 72, 35, 1899, 12855, 40, 11, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13966514587402343, "compression_ratio": 1.5735849056603775, "no_caption_prob": 2.178204340452794e-05}, {"id": 273, "seek": 96004, "start": 961.52, "end": 968.88, "text": " But you also want to make sure in dev mode that it's being regenerated as needed ideally.", "tokens": [50364, 2614, 428, 4265, 1322, 13, 50438, 50438, 583, 291, 611, 528, 281, 652, 988, 294, 1905, 4391, 300, 309, 311, 885, 26358, 770, 382, 2978, 22915, 13, 50806, 50806, 407, 300, 775, 483, 257, 707, 857, 4282, 811, 294, 3331, 411, 300, 689, 291, 434, 8013, 278, 257, 4009, 50988, 50988, 295, 3494, 13, 51038, 51038, 509, 393, 291, 458, 11, 291, 727, 652, 257, 761, 667, 72, 35, 1899, 13, 51178, 51178, 509, 458, 11, 761, 667, 72, 35, 1899, 307, 411, 257, 364, 426, 18819, 2290, 597, 2709, 291, 257, 3991, 1159, 260, 13, 51414, 51414, 814, 2893, 456, 311, 257, 761, 667, 72, 35, 1899, 12855, 40, 11, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13966514587402343, "compression_ratio": 1.5735849056603775, "no_caption_prob": 2.178204340452794e-05}, {"id": 274, "seek": 96004, "start": 968.88, "end": 972.52, "text": " So that does get a little bit trickier in cases like that where you're mirroring a source", "tokens": [50364, 2614, 428, 4265, 1322, 13, 50438, 50438, 583, 291, 611, 528, 281, 652, 988, 294, 1905, 4391, 300, 309, 311, 885, 26358, 770, 382, 2978, 22915, 13, 50806, 50806, 407, 300, 775, 483, 257, 707, 857, 4282, 811, 294, 3331, 411, 300, 689, 291, 434, 8013, 278, 257, 4009, 50988, 50988, 295, 3494, 13, 51038, 51038, 509, 393, 291, 458, 11, 291, 727, 652, 257, 761, 667, 72, 35, 1899, 13, 51178, 51178, 509, 458, 11, 761, 667, 72, 35, 1899, 307, 411, 257, 364, 426, 18819, 2290, 597, 2709, 291, 257, 3991, 1159, 260, 13, 51414, 51414, 814, 2893, 456, 311, 257, 761, 667, 72, 35, 1899, 12855, 40, 11, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13966514587402343, "compression_ratio": 1.5735849056603775, "no_caption_prob": 2.178204340452794e-05}, {"id": 275, "seek": 96004, "start": 972.52, "end": 973.52, "text": " of truth.", "tokens": [50364, 2614, 428, 4265, 1322, 13, 50438, 50438, 583, 291, 611, 528, 281, 652, 988, 294, 1905, 4391, 300, 309, 311, 885, 26358, 770, 382, 2978, 22915, 13, 50806, 50806, 407, 300, 775, 483, 257, 707, 857, 4282, 811, 294, 3331, 411, 300, 689, 291, 434, 8013, 278, 257, 4009, 50988, 50988, 295, 3494, 13, 51038, 51038, 509, 393, 291, 458, 11, 291, 727, 652, 257, 761, 667, 72, 35, 1899, 13, 51178, 51178, 509, 458, 11, 761, 667, 72, 35, 1899, 307, 411, 257, 364, 426, 18819, 2290, 597, 2709, 291, 257, 3991, 1159, 260, 13, 51414, 51414, 814, 2893, 456, 311, 257, 761, 667, 72, 35, 1899, 12855, 40, 11, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13966514587402343, "compression_ratio": 1.5735849056603775, "no_caption_prob": 2.178204340452794e-05}, {"id": 276, "seek": 96004, "start": 973.52, "end": 976.3199999999999, "text": " You can you know, you could make a ChalkiDAR.", "tokens": [50364, 2614, 428, 4265, 1322, 13, 50438, 50438, 583, 291, 611, 528, 281, 652, 988, 294, 1905, 4391, 300, 309, 311, 885, 26358, 770, 382, 2978, 22915, 13, 50806, 50806, 407, 300, 775, 483, 257, 707, 857, 4282, 811, 294, 3331, 411, 300, 689, 291, 434, 8013, 278, 257, 4009, 50988, 50988, 295, 3494, 13, 51038, 51038, 509, 393, 291, 458, 11, 291, 727, 652, 257, 761, 667, 72, 35, 1899, 13, 51178, 51178, 509, 458, 11, 761, 667, 72, 35, 1899, 307, 411, 257, 364, 426, 18819, 2290, 597, 2709, 291, 257, 3991, 1159, 260, 13, 51414, 51414, 814, 2893, 456, 311, 257, 761, 667, 72, 35, 1899, 12855, 40, 11, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13966514587402343, "compression_ratio": 1.5735849056603775, "no_caption_prob": 2.178204340452794e-05}, {"id": 277, "seek": 96004, "start": 976.3199999999999, "end": 981.04, "text": " You know, ChalkiDAR is like a an NPM tool which gives you a file watcher.", "tokens": [50364, 2614, 428, 4265, 1322, 13, 50438, 50438, 583, 291, 611, 528, 281, 652, 988, 294, 1905, 4391, 300, 309, 311, 885, 26358, 770, 382, 2978, 22915, 13, 50806, 50806, 407, 300, 775, 483, 257, 707, 857, 4282, 811, 294, 3331, 411, 300, 689, 291, 434, 8013, 278, 257, 4009, 50988, 50988, 295, 3494, 13, 51038, 51038, 509, 393, 291, 458, 11, 291, 727, 652, 257, 761, 667, 72, 35, 1899, 13, 51178, 51178, 509, 458, 11, 761, 667, 72, 35, 1899, 307, 411, 257, 364, 426, 18819, 2290, 597, 2709, 291, 257, 3991, 1159, 260, 13, 51414, 51414, 814, 2893, 456, 311, 257, 761, 667, 72, 35, 1899, 12855, 40, 11, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13966514587402343, "compression_ratio": 1.5735849056603775, "no_caption_prob": 2.178204340452794e-05}, {"id": 278, "seek": 96004, "start": 981.04, "end": 985.16, "text": " They provide there's a ChalkiDAR CLI, which we'll link to in the show notes.", "tokens": [50364, 2614, 428, 4265, 1322, 13, 50438, 50438, 583, 291, 611, 528, 281, 652, 988, 294, 1905, 4391, 300, 309, 311, 885, 26358, 770, 382, 2978, 22915, 13, 50806, 50806, 407, 300, 775, 483, 257, 707, 857, 4282, 811, 294, 3331, 411, 300, 689, 291, 434, 8013, 278, 257, 4009, 50988, 50988, 295, 3494, 13, 51038, 51038, 509, 393, 291, 458, 11, 291, 727, 652, 257, 761, 667, 72, 35, 1899, 13, 51178, 51178, 509, 458, 11, 761, 667, 72, 35, 1899, 307, 411, 257, 364, 426, 18819, 2290, 597, 2709, 291, 257, 3991, 1159, 260, 13, 51414, 51414, 814, 2893, 456, 311, 257, 761, 667, 72, 35, 1899, 12855, 40, 11, 597, 321, 603, 2113, 281, 294, 264, 855, 5570, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13966514587402343, "compression_ratio": 1.5735849056603775, "no_caption_prob": 2.178204340452794e-05}, {"id": 279, "seek": 98516, "start": 985.16, "end": 990.64, "text": " That can be a handy way to just say, hey, anytime these files change, like these files", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 280, "seek": 98516, "start": 990.64, "end": 991.8, "text": " are the source of truth.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 281, "seek": 98516, "start": 991.8, "end": 993.48, "text": " These GraphQL schemas falls.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 282, "seek": 98516, "start": 993.48, "end": 994.48, "text": " Exactly.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 283, "seek": 98516, "start": 994.48, "end": 1000.54, "text": " Maybe you've got your, you know, your server of choice set up to output a new GraphQL schema", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 284, "seek": 98516, "start": 1000.54, "end": 1002.1999999999999, "text": " file every time that changes.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 285, "seek": 98516, "start": 1002.1999999999999, "end": 1003.48, "text": " So then that's your source of truth.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 286, "seek": 98516, "start": 1003.48, "end": 1008.0799999999999, "text": " And you set up the ChalkiDAR watcher to watch that schema file.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 287, "seek": 98516, "start": 1008.0799999999999, "end": 1011.38, "text": " Anytime that schema file is touched, it's going to rerun your code generation.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 288, "seek": 98516, "start": 1011.38, "end": 1013.48, "text": " So that definitely is a challenge.", "tokens": [50364, 663, 393, 312, 257, 13239, 636, 281, 445, 584, 11, 4177, 11, 13038, 613, 7098, 1319, 11, 411, 613, 7098, 50638, 50638, 366, 264, 4009, 295, 3494, 13, 50696, 50696, 1981, 21884, 13695, 22627, 296, 8804, 13, 50780, 50780, 7587, 13, 50830, 50830, 2704, 291, 600, 658, 428, 11, 291, 458, 11, 428, 7154, 295, 3922, 992, 493, 281, 5598, 257, 777, 21884, 13695, 34078, 51133, 51133, 3991, 633, 565, 300, 2962, 13, 51216, 51216, 407, 550, 300, 311, 428, 4009, 295, 3494, 13, 51280, 51280, 400, 291, 992, 493, 264, 761, 667, 72, 35, 1899, 1159, 260, 281, 1159, 300, 34078, 3991, 13, 51510, 51510, 39401, 300, 34078, 3991, 307, 9828, 11, 309, 311, 516, 281, 43819, 409, 428, 3089, 5125, 13, 51675, 51675, 407, 300, 2138, 307, 257, 3430, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.12668020585004022, "compression_ratio": 1.770909090909091, "no_caption_prob": 3.3735588658601046e-05}, {"id": 289, "seek": 101348, "start": 1013.48, "end": 1019.2, "text": " But what you can also do is just have either NPM scripts or make file scripts that every", "tokens": [50364, 583, 437, 291, 393, 611, 360, 307, 445, 362, 2139, 426, 18819, 23294, 420, 652, 3991, 23294, 300, 633, 50650, 50650, 565, 291, 43819, 409, 264, 11, 291, 722, 428, 1905, 7154, 11, 309, 48000, 4680, 420, 26358, 1024, 264, 3089, 300, 51056, 51056, 307, 2978, 13, 51106, 51106, 400, 550, 291, 445, 980, 428, 20461, 300, 633, 565, 428, 21884, 13695, 34078, 2962, 11, 291, 51394, 51394, 643, 281, 43819, 409, 264, 1905, 7154, 13, 51512, 51512, 400, 382, 938, 382, 1518, 307, 3650, 295, 613, 11, 286, 2041, 309, 311, 257, 2489, 4923, 766, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15089123791987352, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.0782066055980977e-05}, {"id": 290, "seek": 101348, "start": 1019.2, "end": 1027.32, "text": " time you rerun the, you start your dev server, it recompiles or regenerates the code that", "tokens": [50364, 583, 437, 291, 393, 611, 360, 307, 445, 362, 2139, 426, 18819, 23294, 420, 652, 3991, 23294, 300, 633, 50650, 50650, 565, 291, 43819, 409, 264, 11, 291, 722, 428, 1905, 7154, 11, 309, 48000, 4680, 420, 26358, 1024, 264, 3089, 300, 51056, 51056, 307, 2978, 13, 51106, 51106, 400, 550, 291, 445, 980, 428, 20461, 300, 633, 565, 428, 21884, 13695, 34078, 2962, 11, 291, 51394, 51394, 643, 281, 43819, 409, 264, 1905, 7154, 13, 51512, 51512, 400, 382, 938, 382, 1518, 307, 3650, 295, 613, 11, 286, 2041, 309, 311, 257, 2489, 4923, 766, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15089123791987352, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.0782066055980977e-05}, {"id": 291, "seek": 101348, "start": 1027.32, "end": 1028.32, "text": " is needed.", "tokens": [50364, 583, 437, 291, 393, 611, 360, 307, 445, 362, 2139, 426, 18819, 23294, 420, 652, 3991, 23294, 300, 633, 50650, 50650, 565, 291, 43819, 409, 264, 11, 291, 722, 428, 1905, 7154, 11, 309, 48000, 4680, 420, 26358, 1024, 264, 3089, 300, 51056, 51056, 307, 2978, 13, 51106, 51106, 400, 550, 291, 445, 980, 428, 20461, 300, 633, 565, 428, 21884, 13695, 34078, 2962, 11, 291, 51394, 51394, 643, 281, 43819, 409, 264, 1905, 7154, 13, 51512, 51512, 400, 382, 938, 382, 1518, 307, 3650, 295, 613, 11, 286, 2041, 309, 311, 257, 2489, 4923, 766, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15089123791987352, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.0782066055980977e-05}, {"id": 292, "seek": 101348, "start": 1028.32, "end": 1034.08, "text": " And then you just tell your teammates that every time your GraphQL schema changes, you", "tokens": [50364, 583, 437, 291, 393, 611, 360, 307, 445, 362, 2139, 426, 18819, 23294, 420, 652, 3991, 23294, 300, 633, 50650, 50650, 565, 291, 43819, 409, 264, 11, 291, 722, 428, 1905, 7154, 11, 309, 48000, 4680, 420, 26358, 1024, 264, 3089, 300, 51056, 51056, 307, 2978, 13, 51106, 51106, 400, 550, 291, 445, 980, 428, 20461, 300, 633, 565, 428, 21884, 13695, 34078, 2962, 11, 291, 51394, 51394, 643, 281, 43819, 409, 264, 1905, 7154, 13, 51512, 51512, 400, 382, 938, 382, 1518, 307, 3650, 295, 613, 11, 286, 2041, 309, 311, 257, 2489, 4923, 766, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15089123791987352, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.0782066055980977e-05}, {"id": 293, "seek": 101348, "start": 1034.08, "end": 1036.44, "text": " need to rerun the dev server.", "tokens": [50364, 583, 437, 291, 393, 611, 360, 307, 445, 362, 2139, 426, 18819, 23294, 420, 652, 3991, 23294, 300, 633, 50650, 50650, 565, 291, 43819, 409, 264, 11, 291, 722, 428, 1905, 7154, 11, 309, 48000, 4680, 420, 26358, 1024, 264, 3089, 300, 51056, 51056, 307, 2978, 13, 51106, 51106, 400, 550, 291, 445, 980, 428, 20461, 300, 633, 565, 428, 21884, 13695, 34078, 2962, 11, 291, 51394, 51394, 643, 281, 43819, 409, 264, 1905, 7154, 13, 51512, 51512, 400, 382, 938, 382, 1518, 307, 3650, 295, 613, 11, 286, 2041, 309, 311, 257, 2489, 4923, 766, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15089123791987352, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.0782066055980977e-05}, {"id": 294, "seek": 101348, "start": 1036.44, "end": 1043.0, "text": " And as long as everyone is aware of these, I guess it's a fine trade off.", "tokens": [50364, 583, 437, 291, 393, 611, 360, 307, 445, 362, 2139, 426, 18819, 23294, 420, 652, 3991, 23294, 300, 633, 50650, 50650, 565, 291, 43819, 409, 264, 11, 291, 722, 428, 1905, 7154, 11, 309, 48000, 4680, 420, 26358, 1024, 264, 3089, 300, 51056, 51056, 307, 2978, 13, 51106, 51106, 400, 550, 291, 445, 980, 428, 20461, 300, 633, 565, 428, 21884, 13695, 34078, 2962, 11, 291, 51394, 51394, 643, 281, 43819, 409, 264, 1905, 7154, 13, 51512, 51512, 400, 382, 938, 382, 1518, 307, 3650, 295, 613, 11, 286, 2041, 309, 311, 257, 2489, 4923, 766, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15089123791987352, "compression_ratio": 1.6964285714285714, "no_caption_prob": 1.0782066055980977e-05}, {"id": 295, "seek": 104300, "start": 1043.0, "end": 1044.0, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 1779, 13, 50464, 50464, 400, 1338, 11, 286, 914, 11, 754, 365, 411, 257, 21884, 13695, 34078, 11, 498, 309, 311, 406, 4473, 300, 10374, 50746, 50746, 420, 337, 2035, 1778, 11, 309, 311, 11, 291, 458, 11, 420, 1310, 291, 5850, 652, 2107, 7697, 2962, 51010, 51010, 420, 11, 291, 458, 11, 294, 300, 11, 294, 300, 1389, 11, 291, 727, 584, 11, 291, 458, 11, 321, 434, 406, 754, 516, 281, 8677, 51247, 51247, 365, 257, 3991, 1159, 260, 13, 51308, 51308, 492, 434, 445, 516, 281, 1856, 309, 281, 264, 2609, 10754, 281, 16945, 1190, 264, 8460, 5755, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10272230668501421, "compression_ratio": 1.6311475409836065, "no_caption_prob": 7.14154084562324e-05}, {"id": 296, "seek": 104300, "start": 1044.0, "end": 1045.0, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 1779, 13, 50464, 50464, 400, 1338, 11, 286, 914, 11, 754, 365, 411, 257, 21884, 13695, 34078, 11, 498, 309, 311, 406, 4473, 300, 10374, 50746, 50746, 420, 337, 2035, 1778, 11, 309, 311, 11, 291, 458, 11, 420, 1310, 291, 5850, 652, 2107, 7697, 2962, 51010, 51010, 420, 11, 291, 458, 11, 294, 300, 11, 294, 300, 1389, 11, 291, 727, 584, 11, 291, 458, 11, 321, 434, 406, 754, 516, 281, 8677, 51247, 51247, 365, 257, 3991, 1159, 260, 13, 51308, 51308, 492, 434, 445, 516, 281, 1856, 309, 281, 264, 2609, 10754, 281, 16945, 1190, 264, 8460, 5755, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10272230668501421, "compression_ratio": 1.6311475409836065, "no_caption_prob": 7.14154084562324e-05}, {"id": 297, "seek": 104300, "start": 1045.0, "end": 1050.64, "text": " And yeah, I mean, even with like a GraphQL schema, if it's not changing that frequently", "tokens": [50364, 1779, 13, 50414, 50414, 1779, 13, 50464, 50464, 400, 1338, 11, 286, 914, 11, 754, 365, 411, 257, 21884, 13695, 34078, 11, 498, 309, 311, 406, 4473, 300, 10374, 50746, 50746, 420, 337, 2035, 1778, 11, 309, 311, 11, 291, 458, 11, 420, 1310, 291, 5850, 652, 2107, 7697, 2962, 51010, 51010, 420, 11, 291, 458, 11, 294, 300, 11, 294, 300, 1389, 11, 291, 727, 584, 11, 291, 458, 11, 321, 434, 406, 754, 516, 281, 8677, 51247, 51247, 365, 257, 3991, 1159, 260, 13, 51308, 51308, 492, 434, 445, 516, 281, 1856, 309, 281, 264, 2609, 10754, 281, 16945, 1190, 264, 8460, 5755, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10272230668501421, "compression_ratio": 1.6311475409836065, "no_caption_prob": 7.14154084562324e-05}, {"id": 298, "seek": 104300, "start": 1050.64, "end": 1055.92, "text": " or for whatever reason, it's, you know, or maybe you typically make non breaking changes", "tokens": [50364, 1779, 13, 50414, 50414, 1779, 13, 50464, 50464, 400, 1338, 11, 286, 914, 11, 754, 365, 411, 257, 21884, 13695, 34078, 11, 498, 309, 311, 406, 4473, 300, 10374, 50746, 50746, 420, 337, 2035, 1778, 11, 309, 311, 11, 291, 458, 11, 420, 1310, 291, 5850, 652, 2107, 7697, 2962, 51010, 51010, 420, 11, 291, 458, 11, 294, 300, 11, 294, 300, 1389, 11, 291, 727, 584, 11, 291, 458, 11, 321, 434, 406, 754, 516, 281, 8677, 51247, 51247, 365, 257, 3991, 1159, 260, 13, 51308, 51308, 492, 434, 445, 516, 281, 1856, 309, 281, 264, 2609, 10754, 281, 16945, 1190, 264, 8460, 5755, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10272230668501421, "compression_ratio": 1.6311475409836065, "no_caption_prob": 7.14154084562324e-05}, {"id": 299, "seek": 104300, "start": 1055.92, "end": 1060.66, "text": " or, you know, in that, in that case, you could say, you know, we're not even going to bother", "tokens": [50364, 1779, 13, 50414, 50414, 1779, 13, 50464, 50464, 400, 1338, 11, 286, 914, 11, 754, 365, 411, 257, 21884, 13695, 34078, 11, 498, 309, 311, 406, 4473, 300, 10374, 50746, 50746, 420, 337, 2035, 1778, 11, 309, 311, 11, 291, 458, 11, 420, 1310, 291, 5850, 652, 2107, 7697, 2962, 51010, 51010, 420, 11, 291, 458, 11, 294, 300, 11, 294, 300, 1389, 11, 291, 727, 584, 11, 291, 458, 11, 321, 434, 406, 754, 516, 281, 8677, 51247, 51247, 365, 257, 3991, 1159, 260, 13, 51308, 51308, 492, 434, 445, 516, 281, 1856, 309, 281, 264, 2609, 10754, 281, 16945, 1190, 264, 8460, 5755, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10272230668501421, "compression_ratio": 1.6311475409836065, "no_caption_prob": 7.14154084562324e-05}, {"id": 300, "seek": 104300, "start": 1060.66, "end": 1061.88, "text": " with a file watcher.", "tokens": [50364, 1779, 13, 50414, 50414, 1779, 13, 50464, 50464, 400, 1338, 11, 286, 914, 11, 754, 365, 411, 257, 21884, 13695, 34078, 11, 498, 309, 311, 406, 4473, 300, 10374, 50746, 50746, 420, 337, 2035, 1778, 11, 309, 311, 11, 291, 458, 11, 420, 1310, 291, 5850, 652, 2107, 7697, 2962, 51010, 51010, 420, 11, 291, 458, 11, 294, 300, 11, 294, 300, 1389, 11, 291, 727, 584, 11, 291, 458, 11, 321, 434, 406, 754, 516, 281, 8677, 51247, 51247, 365, 257, 3991, 1159, 260, 13, 51308, 51308, 492, 434, 445, 516, 281, 1856, 309, 281, 264, 2609, 10754, 281, 16945, 1190, 264, 8460, 5755, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10272230668501421, "compression_ratio": 1.6311475409836065, "no_caption_prob": 7.14154084562324e-05}, {"id": 301, "seek": 104300, "start": 1061.88, "end": 1069.08, "text": " We're just going to leave it to the individual developer to manually run the generate script.", "tokens": [50364, 1779, 13, 50414, 50414, 1779, 13, 50464, 50464, 400, 1338, 11, 286, 914, 11, 754, 365, 411, 257, 21884, 13695, 34078, 11, 498, 309, 311, 406, 4473, 300, 10374, 50746, 50746, 420, 337, 2035, 1778, 11, 309, 311, 11, 291, 458, 11, 420, 1310, 291, 5850, 652, 2107, 7697, 2962, 51010, 51010, 420, 11, 291, 458, 11, 294, 300, 11, 294, 300, 1389, 11, 291, 727, 584, 11, 291, 458, 11, 321, 434, 406, 754, 516, 281, 8677, 51247, 51247, 365, 257, 3991, 1159, 260, 13, 51308, 51308, 492, 434, 445, 516, 281, 1856, 309, 281, 264, 2609, 10754, 281, 16945, 1190, 264, 8460, 5755, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.10272230668501421, "compression_ratio": 1.6311475409836065, "no_caption_prob": 7.14154084562324e-05}, {"id": 302, "seek": 106908, "start": 1069.08, "end": 1073.9199999999998, "text": " And we're going to guarantee that it's generating it from scratch for every production build.", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 303, "seek": 106908, "start": 1073.9199999999998, "end": 1075.9199999999998, "text": " So it's always up to date for production.", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 304, "seek": 106908, "start": 1075.9199999999998, "end": 1079.1399999999999, "text": " And if something were to go wrong, we would know because it wouldn't compile.", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 305, "seek": 106908, "start": 1079.1399999999999, "end": 1085.0, "text": " So worst case scenario, it doesn't compile, then the build fails, the developer goes and", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 306, "seek": 106908, "start": 1085.0, "end": 1086.34, "text": " fixes the problem.", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 307, "seek": 106908, "start": 1086.34, "end": 1091.1799999999998, "text": " So in some cases, you might not need to go to the trouble of, or you could start with", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 308, "seek": 106908, "start": 1091.1799999999998, "end": 1092.1799999999998, "text": " something simple.", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 309, "seek": 106908, "start": 1092.1799999999998, "end": 1096.52, "text": " Yeah, but at least consider your teammates and your own productivity.", "tokens": [50364, 400, 321, 434, 516, 281, 10815, 300, 309, 311, 17746, 309, 490, 8459, 337, 633, 4265, 1322, 13, 50606, 50606, 407, 309, 311, 1009, 493, 281, 4002, 337, 4265, 13, 50706, 50706, 400, 498, 746, 645, 281, 352, 2085, 11, 321, 576, 458, 570, 309, 2759, 380, 31413, 13, 50867, 50867, 407, 5855, 1389, 9005, 11, 309, 1177, 380, 31413, 11, 550, 264, 1322, 18199, 11, 264, 10754, 1709, 293, 51160, 51160, 32539, 264, 1154, 13, 51227, 51227, 407, 294, 512, 3331, 11, 291, 1062, 406, 643, 281, 352, 281, 264, 5253, 295, 11, 420, 291, 727, 722, 365, 51469, 51469, 746, 2199, 13, 51519, 51519, 865, 11, 457, 412, 1935, 1949, 428, 20461, 293, 428, 1065, 15604, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09749096195872237, "compression_ratio": 1.71875, "no_caption_prob": 1.4285319593909662e-05}, {"id": 310, "seek": 109652, "start": 1096.52, "end": 1102.76, "text": " So just like you don't want to make mistakes because your GraphQL schema is out of date", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 311, "seek": 109652, "start": 1102.76, "end": 1104.8, "text": " with your generated code.", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 312, "seek": 109652, "start": 1104.8, "end": 1107.36, "text": " So make it easy for all of you.", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 313, "seek": 109652, "start": 1107.36, "end": 1108.36, "text": " Right.", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 314, "seek": 109652, "start": 1108.36, "end": 1111.72, "text": " And if you're not going to get a compiler error, if something goes wrong, but instead", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 315, "seek": 109652, "start": 1111.72, "end": 1116.8, "text": " you're going to have some different values at runtime that weren't what you were testing", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 316, "seek": 109652, "start": 1116.8, "end": 1120.8799999999999, "text": " against when you were developing locally, you know, that's something considered too,", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 317, "seek": 109652, "start": 1120.8799999999999, "end": 1126.48, "text": " that that could cause cause bugs because you're looking at something different in your development.", "tokens": [50364, 407, 445, 411, 291, 500, 380, 528, 281, 652, 8038, 570, 428, 21884, 13695, 34078, 307, 484, 295, 4002, 50676, 50676, 365, 428, 10833, 3089, 13, 50778, 50778, 407, 652, 309, 1858, 337, 439, 295, 291, 13, 50906, 50906, 1779, 13, 50956, 50956, 400, 498, 291, 434, 406, 516, 281, 483, 257, 31958, 6713, 11, 498, 746, 1709, 2085, 11, 457, 2602, 51124, 51124, 291, 434, 516, 281, 362, 512, 819, 4190, 412, 34474, 300, 4999, 380, 437, 291, 645, 4997, 51378, 51378, 1970, 562, 291, 645, 6416, 16143, 11, 291, 458, 11, 300, 311, 746, 4888, 886, 11, 51582, 51582, 300, 300, 727, 3082, 3082, 15120, 570, 291, 434, 1237, 412, 746, 819, 294, 428, 3250, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.16083561006139535, "compression_ratio": 1.78397212543554, "no_caption_prob": 9.36859487410402e-06}, {"id": 318, "seek": 112648, "start": 1126.48, "end": 1128.96, "text": " So then what you're shipping to production.", "tokens": [50364, 407, 550, 437, 291, 434, 14122, 281, 4265, 13, 50488, 50488, 407, 613, 366, 721, 281, 1066, 294, 1575, 13, 50592, 50592, 1485, 295, 264, 3880, 4759, 300, 286, 600, 1612, 365, 411, 884, 3089, 5125, 337, 46529, 5821, 11, 50894, 50894, 406, 15148, 307, 445, 411, 1348, 493, 365, 264, 558, 4973, 2316, 13, 51179, 51179, 407, 286, 519, 472, 295, 264, 881, 1021, 721, 307, 291, 534, 528, 281, 362, 257, 588, 2199, 4973, 51462, 51462, 2316, 382, 709, 382, 1944, 13, 51548, 51548, 286, 519, 309, 311, 534, 8263, 281, 39349, 3207, 322, 661, 4973, 5245, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14748806219834548, "compression_ratio": 1.6823529411764706, "no_caption_prob": 7.484272646252066e-05}, {"id": 319, "seek": 112648, "start": 1128.96, "end": 1131.04, "text": " So these are things to keep in mind.", "tokens": [50364, 407, 550, 437, 291, 434, 14122, 281, 4265, 13, 50488, 50488, 407, 613, 366, 721, 281, 1066, 294, 1575, 13, 50592, 50592, 1485, 295, 264, 3880, 4759, 300, 286, 600, 1612, 365, 411, 884, 3089, 5125, 337, 46529, 5821, 11, 50894, 50894, 406, 15148, 307, 445, 411, 1348, 493, 365, 264, 558, 4973, 2316, 13, 51179, 51179, 407, 286, 519, 472, 295, 264, 881, 1021, 721, 307, 291, 534, 528, 281, 362, 257, 588, 2199, 4973, 51462, 51462, 2316, 382, 709, 382, 1944, 13, 51548, 51548, 286, 519, 309, 311, 534, 8263, 281, 39349, 3207, 322, 661, 4973, 5245, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14748806219834548, "compression_ratio": 1.6823529411764706, "no_caption_prob": 7.484272646252066e-05}, {"id": 320, "seek": 112648, "start": 1131.04, "end": 1137.08, "text": " One of the biggest challenges that I've seen with like doing code generation for LM applications,", "tokens": [50364, 407, 550, 437, 291, 434, 14122, 281, 4265, 13, 50488, 50488, 407, 613, 366, 721, 281, 1066, 294, 1575, 13, 50592, 50592, 1485, 295, 264, 3880, 4759, 300, 286, 600, 1612, 365, 411, 884, 3089, 5125, 337, 46529, 5821, 11, 50894, 50894, 406, 15148, 307, 445, 411, 1348, 493, 365, 264, 558, 4973, 2316, 13, 51179, 51179, 407, 286, 519, 472, 295, 264, 881, 1021, 721, 307, 291, 534, 528, 281, 362, 257, 588, 2199, 4973, 51462, 51462, 2316, 382, 709, 382, 1944, 13, 51548, 51548, 286, 519, 309, 311, 534, 8263, 281, 39349, 3207, 322, 661, 4973, 5245, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14748806219834548, "compression_ratio": 1.6823529411764706, "no_caption_prob": 7.484272646252066e-05}, {"id": 321, "seek": 112648, "start": 1137.08, "end": 1142.78, "text": " not libraries is just like coming up with the right mental model.", "tokens": [50364, 407, 550, 437, 291, 434, 14122, 281, 4265, 13, 50488, 50488, 407, 613, 366, 721, 281, 1066, 294, 1575, 13, 50592, 50592, 1485, 295, 264, 3880, 4759, 300, 286, 600, 1612, 365, 411, 884, 3089, 5125, 337, 46529, 5821, 11, 50894, 50894, 406, 15148, 307, 445, 411, 1348, 493, 365, 264, 558, 4973, 2316, 13, 51179, 51179, 407, 286, 519, 472, 295, 264, 881, 1021, 721, 307, 291, 534, 528, 281, 362, 257, 588, 2199, 4973, 51462, 51462, 2316, 382, 709, 382, 1944, 13, 51548, 51548, 286, 519, 309, 311, 534, 8263, 281, 39349, 3207, 322, 661, 4973, 5245, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14748806219834548, "compression_ratio": 1.6823529411764706, "no_caption_prob": 7.484272646252066e-05}, {"id": 322, "seek": 112648, "start": 1142.78, "end": 1148.44, "text": " So I think one of the most important things is you really want to have a very simple mental", "tokens": [50364, 407, 550, 437, 291, 434, 14122, 281, 4265, 13, 50488, 50488, 407, 613, 366, 721, 281, 1066, 294, 1575, 13, 50592, 50592, 1485, 295, 264, 3880, 4759, 300, 286, 600, 1612, 365, 411, 884, 3089, 5125, 337, 46529, 5821, 11, 50894, 50894, 406, 15148, 307, 445, 411, 1348, 493, 365, 264, 558, 4973, 2316, 13, 51179, 51179, 407, 286, 519, 472, 295, 264, 881, 1021, 721, 307, 291, 534, 528, 281, 362, 257, 588, 2199, 4973, 51462, 51462, 2316, 382, 709, 382, 1944, 13, 51548, 51548, 286, 519, 309, 311, 534, 8263, 281, 39349, 3207, 322, 661, 4973, 5245, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14748806219834548, "compression_ratio": 1.6823529411764706, "no_caption_prob": 7.484272646252066e-05}, {"id": 323, "seek": 112648, "start": 1148.44, "end": 1150.16, "text": " model as much as possible.", "tokens": [50364, 407, 550, 437, 291, 434, 14122, 281, 4265, 13, 50488, 50488, 407, 613, 366, 721, 281, 1066, 294, 1575, 13, 50592, 50592, 1485, 295, 264, 3880, 4759, 300, 286, 600, 1612, 365, 411, 884, 3089, 5125, 337, 46529, 5821, 11, 50894, 50894, 406, 15148, 307, 445, 411, 1348, 493, 365, 264, 558, 4973, 2316, 13, 51179, 51179, 407, 286, 519, 472, 295, 264, 881, 1021, 721, 307, 291, 534, 528, 281, 362, 257, 588, 2199, 4973, 51462, 51462, 2316, 382, 709, 382, 1944, 13, 51548, 51548, 286, 519, 309, 311, 534, 8263, 281, 39349, 3207, 322, 661, 4973, 5245, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14748806219834548, "compression_ratio": 1.6823529411764706, "no_caption_prob": 7.484272646252066e-05}, {"id": 324, "seek": 112648, "start": 1150.16, "end": 1155.16, "text": " I think it's really valuable to piggyback on other mental models.", "tokens": [50364, 407, 550, 437, 291, 434, 14122, 281, 4265, 13, 50488, 50488, 407, 613, 366, 721, 281, 1066, 294, 1575, 13, 50592, 50592, 1485, 295, 264, 3880, 4759, 300, 286, 600, 1612, 365, 411, 884, 3089, 5125, 337, 46529, 5821, 11, 50894, 50894, 406, 15148, 307, 445, 411, 1348, 493, 365, 264, 558, 4973, 2316, 13, 51179, 51179, 407, 286, 519, 472, 295, 264, 881, 1021, 721, 307, 291, 534, 528, 281, 362, 257, 588, 2199, 4973, 51462, 51462, 2316, 382, 709, 382, 1944, 13, 51548, 51548, 286, 519, 309, 311, 534, 8263, 281, 39349, 3207, 322, 661, 4973, 5245, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14748806219834548, "compression_ratio": 1.6823529411764706, "no_caption_prob": 7.484272646252066e-05}, {"id": 325, "seek": 115516, "start": 1155.16, "end": 1162.1200000000001, "text": " So like, like with, with a GraphQL schema, you know, it, it, it seems, it seems obvious", "tokens": [50364, 407, 411, 11, 411, 365, 11, 365, 257, 21884, 13695, 34078, 11, 291, 458, 11, 309, 11, 309, 11, 309, 2544, 11, 309, 2544, 6322, 50712, 50712, 498, 291, 434, 406, 411, 14685, 264, 4009, 295, 3494, 11, 457, 21884, 13695, 307, 257, 588, 2199, 18350, 13, 51074, 51074, 509, 600, 658, 341, 3410, 11, 456, 311, 257, 21884, 13695, 34078, 11, 291, 393, 652, 12475, 281, 309, 13, 51290, 51290, 400, 291, 458, 11, 264, 8849, 1217, 362, 257, 4973, 2316, 295, 341, 21884, 13695, 34078, 300, 51499, 51499, 436, 393, 652, 24109, 1970, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09957180976867676, "compression_ratio": 1.6940639269406392, "no_caption_prob": 2.857264234989998e-06}, {"id": 326, "seek": 115516, "start": 1162.1200000000001, "end": 1169.3600000000001, "text": " if you're not like designing the source of truth, but GraphQL is a very simple mapping.", "tokens": [50364, 407, 411, 11, 411, 365, 11, 365, 257, 21884, 13695, 34078, 11, 291, 458, 11, 309, 11, 309, 11, 309, 2544, 11, 309, 2544, 6322, 50712, 50712, 498, 291, 434, 406, 411, 14685, 264, 4009, 295, 3494, 11, 457, 21884, 13695, 307, 257, 588, 2199, 18350, 13, 51074, 51074, 509, 600, 658, 341, 3410, 11, 456, 311, 257, 21884, 13695, 34078, 11, 291, 393, 652, 12475, 281, 309, 13, 51290, 51290, 400, 291, 458, 11, 264, 8849, 1217, 362, 257, 4973, 2316, 295, 341, 21884, 13695, 34078, 300, 51499, 51499, 436, 393, 652, 24109, 1970, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09957180976867676, "compression_ratio": 1.6940639269406392, "no_caption_prob": 2.857264234989998e-06}, {"id": 327, "seek": 115516, "start": 1169.3600000000001, "end": 1173.68, "text": " You've got this concept, there's a GraphQL schema, you can make requests to it.", "tokens": [50364, 407, 411, 11, 411, 365, 11, 365, 257, 21884, 13695, 34078, 11, 291, 458, 11, 309, 11, 309, 11, 309, 2544, 11, 309, 2544, 6322, 50712, 50712, 498, 291, 434, 406, 411, 14685, 264, 4009, 295, 3494, 11, 457, 21884, 13695, 307, 257, 588, 2199, 18350, 13, 51074, 51074, 509, 600, 658, 341, 3410, 11, 456, 311, 257, 21884, 13695, 34078, 11, 291, 393, 652, 12475, 281, 309, 13, 51290, 51290, 400, 291, 458, 11, 264, 8849, 1217, 362, 257, 4973, 2316, 295, 341, 21884, 13695, 34078, 300, 51499, 51499, 436, 393, 652, 24109, 1970, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09957180976867676, "compression_ratio": 1.6940639269406392, "no_caption_prob": 2.857264234989998e-06}, {"id": 328, "seek": 115516, "start": 1173.68, "end": 1177.8600000000001, "text": " And you know, the developers already have a mental model of this GraphQL schema that", "tokens": [50364, 407, 411, 11, 411, 365, 11, 365, 257, 21884, 13695, 34078, 11, 291, 458, 11, 309, 11, 309, 11, 309, 2544, 11, 309, 2544, 6322, 50712, 50712, 498, 291, 434, 406, 411, 14685, 264, 4009, 295, 3494, 11, 457, 21884, 13695, 307, 257, 588, 2199, 18350, 13, 51074, 51074, 509, 600, 658, 341, 3410, 11, 456, 311, 257, 21884, 13695, 34078, 11, 291, 393, 652, 12475, 281, 309, 13, 51290, 51290, 400, 291, 458, 11, 264, 8849, 1217, 362, 257, 4973, 2316, 295, 341, 21884, 13695, 34078, 300, 51499, 51499, 436, 393, 652, 24109, 1970, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09957180976867676, "compression_ratio": 1.6940639269406392, "no_caption_prob": 2.857264234989998e-06}, {"id": 329, "seek": 115516, "start": 1177.8600000000001, "end": 1179.52, "text": " they can make queries against.", "tokens": [50364, 407, 411, 11, 411, 365, 11, 365, 257, 21884, 13695, 34078, 11, 291, 458, 11, 309, 11, 309, 11, 309, 2544, 11, 309, 2544, 6322, 50712, 50712, 498, 291, 434, 406, 411, 14685, 264, 4009, 295, 3494, 11, 457, 21884, 13695, 307, 257, 588, 2199, 18350, 13, 51074, 51074, 509, 600, 658, 341, 3410, 11, 456, 311, 257, 21884, 13695, 34078, 11, 291, 393, 652, 12475, 281, 309, 13, 51290, 51290, 400, 291, 458, 11, 264, 8849, 1217, 362, 257, 4973, 2316, 295, 341, 21884, 13695, 34078, 300, 51499, 51499, 436, 393, 652, 24109, 1970, 13, 51582, 51582], "temperature": 0.0, "avg_logprob": -0.09957180976867676, "compression_ratio": 1.6940639269406392, "no_caption_prob": 2.857264234989998e-06}, {"id": 330, "seek": 117952, "start": 1179.52, "end": 1185.96, "text": " And so they can take those concepts and they can map those concepts into a slightly modified", "tokens": [50364, 400, 370, 436, 393, 747, 729, 10392, 293, 436, 393, 4471, 729, 10392, 666, 257, 4748, 15873, 50686, 50686, 3410, 295, 11, 1392, 11, 456, 311, 341, 21884, 13695, 34078, 13, 50848, 50848, 286, 393, 652, 33283, 12475, 411, 341, 13, 50992, 50992, 400, 436, 4471, 300, 3410, 281, 11, 1392, 11, 456, 311, 341, 2699, 76, 3089, 293, 309, 11317, 3911, 264, 21884, 13695, 51288, 51288, 34078, 294, 341, 1850, 472, 281, 472, 18350, 411, 341, 11, 558, 30, 51476, 51476, 407, 300, 307, 11, 1105, 11, 436, 360, 362, 281, 1333, 295, 4471, 641, 4973, 2316, 456, 11, 457, 309, 311, 257, 1850, 51758, 51758, 18350, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10140543068404746, "compression_ratio": 1.8165938864628821, "no_caption_prob": 9.972776751965284e-06}, {"id": 331, "seek": 117952, "start": 1185.96, "end": 1189.2, "text": " concept of, okay, there's this GraphQL schema.", "tokens": [50364, 400, 370, 436, 393, 747, 729, 10392, 293, 436, 393, 4471, 729, 10392, 666, 257, 4748, 15873, 50686, 50686, 3410, 295, 11, 1392, 11, 456, 311, 341, 21884, 13695, 34078, 13, 50848, 50848, 286, 393, 652, 33283, 12475, 411, 341, 13, 50992, 50992, 400, 436, 4471, 300, 3410, 281, 11, 1392, 11, 456, 311, 341, 2699, 76, 3089, 293, 309, 11317, 3911, 264, 21884, 13695, 51288, 51288, 34078, 294, 341, 1850, 472, 281, 472, 18350, 411, 341, 11, 558, 30, 51476, 51476, 407, 300, 307, 11, 1105, 11, 436, 360, 362, 281, 1333, 295, 4471, 641, 4973, 2316, 456, 11, 457, 309, 311, 257, 1850, 51758, 51758, 18350, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10140543068404746, "compression_ratio": 1.8165938864628821, "no_caption_prob": 9.972776751965284e-06}, {"id": 332, "seek": 117952, "start": 1189.2, "end": 1192.08, "text": " I can make HTTP requests like this.", "tokens": [50364, 400, 370, 436, 393, 747, 729, 10392, 293, 436, 393, 4471, 729, 10392, 666, 257, 4748, 15873, 50686, 50686, 3410, 295, 11, 1392, 11, 456, 311, 341, 21884, 13695, 34078, 13, 50848, 50848, 286, 393, 652, 33283, 12475, 411, 341, 13, 50992, 50992, 400, 436, 4471, 300, 3410, 281, 11, 1392, 11, 456, 311, 341, 2699, 76, 3089, 293, 309, 11317, 3911, 264, 21884, 13695, 51288, 51288, 34078, 294, 341, 1850, 472, 281, 472, 18350, 411, 341, 11, 558, 30, 51476, 51476, 407, 300, 307, 11, 1105, 11, 436, 360, 362, 281, 1333, 295, 4471, 641, 4973, 2316, 456, 11, 457, 309, 311, 257, 1850, 51758, 51758, 18350, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10140543068404746, "compression_ratio": 1.8165938864628821, "no_caption_prob": 9.972776751965284e-06}, {"id": 333, "seek": 117952, "start": 1192.08, "end": 1198.0, "text": " And they map that concept to, okay, there's this Elm code and it maps onto the GraphQL", "tokens": [50364, 400, 370, 436, 393, 747, 729, 10392, 293, 436, 393, 4471, 729, 10392, 666, 257, 4748, 15873, 50686, 50686, 3410, 295, 11, 1392, 11, 456, 311, 341, 21884, 13695, 34078, 13, 50848, 50848, 286, 393, 652, 33283, 12475, 411, 341, 13, 50992, 50992, 400, 436, 4471, 300, 3410, 281, 11, 1392, 11, 456, 311, 341, 2699, 76, 3089, 293, 309, 11317, 3911, 264, 21884, 13695, 51288, 51288, 34078, 294, 341, 1850, 472, 281, 472, 18350, 411, 341, 11, 558, 30, 51476, 51476, 407, 300, 307, 11, 1105, 11, 436, 360, 362, 281, 1333, 295, 4471, 641, 4973, 2316, 456, 11, 457, 309, 311, 257, 1850, 51758, 51758, 18350, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10140543068404746, "compression_ratio": 1.8165938864628821, "no_caption_prob": 9.972776751965284e-06}, {"id": 334, "seek": 117952, "start": 1198.0, "end": 1201.76, "text": " schema in this clear one to one mapping like this, right?", "tokens": [50364, 400, 370, 436, 393, 747, 729, 10392, 293, 436, 393, 4471, 729, 10392, 666, 257, 4748, 15873, 50686, 50686, 3410, 295, 11, 1392, 11, 456, 311, 341, 21884, 13695, 34078, 13, 50848, 50848, 286, 393, 652, 33283, 12475, 411, 341, 13, 50992, 50992, 400, 436, 4471, 300, 3410, 281, 11, 1392, 11, 456, 311, 341, 2699, 76, 3089, 293, 309, 11317, 3911, 264, 21884, 13695, 51288, 51288, 34078, 294, 341, 1850, 472, 281, 472, 18350, 411, 341, 11, 558, 30, 51476, 51476, 407, 300, 307, 11, 1105, 11, 436, 360, 362, 281, 1333, 295, 4471, 641, 4973, 2316, 456, 11, 457, 309, 311, 257, 1850, 51758, 51758, 18350, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10140543068404746, "compression_ratio": 1.8165938864628821, "no_caption_prob": 9.972776751965284e-06}, {"id": 335, "seek": 117952, "start": 1201.76, "end": 1207.4, "text": " So that is, um, they do have to sort of map their mental model there, but it's a clear", "tokens": [50364, 400, 370, 436, 393, 747, 729, 10392, 293, 436, 393, 4471, 729, 10392, 666, 257, 4748, 15873, 50686, 50686, 3410, 295, 11, 1392, 11, 456, 311, 341, 21884, 13695, 34078, 13, 50848, 50848, 286, 393, 652, 33283, 12475, 411, 341, 13, 50992, 50992, 400, 436, 4471, 300, 3410, 281, 11, 1392, 11, 456, 311, 341, 2699, 76, 3089, 293, 309, 11317, 3911, 264, 21884, 13695, 51288, 51288, 34078, 294, 341, 1850, 472, 281, 472, 18350, 411, 341, 11, 558, 30, 51476, 51476, 407, 300, 307, 11, 1105, 11, 436, 360, 362, 281, 1333, 295, 4471, 641, 4973, 2316, 456, 11, 457, 309, 311, 257, 1850, 51758, 51758, 18350, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10140543068404746, "compression_ratio": 1.8165938864628821, "no_caption_prob": 9.972776751965284e-06}, {"id": 336, "seek": 117952, "start": 1207.4, "end": 1208.4, "text": " mapping.", "tokens": [50364, 400, 370, 436, 393, 747, 729, 10392, 293, 436, 393, 4471, 729, 10392, 666, 257, 4748, 15873, 50686, 50686, 3410, 295, 11, 1392, 11, 456, 311, 341, 21884, 13695, 34078, 13, 50848, 50848, 286, 393, 652, 33283, 12475, 411, 341, 13, 50992, 50992, 400, 436, 4471, 300, 3410, 281, 11, 1392, 11, 456, 311, 341, 2699, 76, 3089, 293, 309, 11317, 3911, 264, 21884, 13695, 51288, 51288, 34078, 294, 341, 1850, 472, 281, 472, 18350, 411, 341, 11, 558, 30, 51476, 51476, 407, 300, 307, 11, 1105, 11, 436, 360, 362, 281, 1333, 295, 4471, 641, 4973, 2316, 456, 11, 457, 309, 311, 257, 1850, 51758, 51758, 18350, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10140543068404746, "compression_ratio": 1.8165938864628821, "no_caption_prob": 9.972776751965284e-06}, {"id": 337, "seek": 120840, "start": 1208.4, "end": 1214.44, "text": " Another example would be with, um, with Elm SPA, you know, you've got like this file based", "tokens": [50364, 3996, 1365, 576, 312, 365, 11, 1105, 11, 365, 2699, 76, 318, 10297, 11, 291, 458, 11, 291, 600, 658, 411, 341, 3991, 2361, 50666, 50666, 32722, 293, 456, 311, 257, 1850, 18350, 1296, 264, 27520, 300, 291, 576, 360, 337, 257, 2167, 50930, 50930, 3028, 724, 294, 2699, 76, 293, 11, 2232, 11, 264, 11, 264, 10088, 11, 2232, 11, 10088, 5288, 322, 264, 3991, 1185, 13, 51238, 51238, 865, 13, 51288, 51288, 2699, 76, 318, 10297, 307, 257, 588, 819, 1657, 1673, 11, 2232, 11, 570, 309, 311, 406, 257, 1871, 295, 257, 4009, 51518, 51518, 295, 3494, 13, 51568, 51568, 467, 311, 257, 1871, 295, 39228, 37008, 5240, 293, 1310, 16011, 420, 1455, 309, 1858, 281, 11, 281, 1499, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13630073789566283, "compression_ratio": 1.6313868613138687, "no_caption_prob": 4.637827260012273e-06}, {"id": 338, "seek": 120840, "start": 1214.44, "end": 1219.72, "text": " routing and there's a clear mapping between the wiring that you would do for a single", "tokens": [50364, 3996, 1365, 576, 312, 365, 11, 1105, 11, 365, 2699, 76, 318, 10297, 11, 291, 458, 11, 291, 600, 658, 411, 341, 3991, 2361, 50666, 50666, 32722, 293, 456, 311, 257, 1850, 18350, 1296, 264, 27520, 300, 291, 576, 360, 337, 257, 2167, 50930, 50930, 3028, 724, 294, 2699, 76, 293, 11, 2232, 11, 264, 11, 264, 10088, 11, 2232, 11, 10088, 5288, 322, 264, 3991, 1185, 13, 51238, 51238, 865, 13, 51288, 51288, 2699, 76, 318, 10297, 307, 257, 588, 819, 1657, 1673, 11, 2232, 11, 570, 309, 311, 406, 257, 1871, 295, 257, 4009, 51518, 51518, 295, 3494, 13, 51568, 51568, 467, 311, 257, 1871, 295, 39228, 37008, 5240, 293, 1310, 16011, 420, 1455, 309, 1858, 281, 11, 281, 1499, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13630073789566283, "compression_ratio": 1.6313868613138687, "no_caption_prob": 4.637827260012273e-06}, {"id": 339, "seek": 120840, "start": 1219.72, "end": 1225.88, "text": " page app in Elm and, uh, the, the module, uh, module names on the file system.", "tokens": [50364, 3996, 1365, 576, 312, 365, 11, 1105, 11, 365, 2699, 76, 318, 10297, 11, 291, 458, 11, 291, 600, 658, 411, 341, 3991, 2361, 50666, 50666, 32722, 293, 456, 311, 257, 1850, 18350, 1296, 264, 27520, 300, 291, 576, 360, 337, 257, 2167, 50930, 50930, 3028, 724, 294, 2699, 76, 293, 11, 2232, 11, 264, 11, 264, 10088, 11, 2232, 11, 10088, 5288, 322, 264, 3991, 1185, 13, 51238, 51238, 865, 13, 51288, 51288, 2699, 76, 318, 10297, 307, 257, 588, 819, 1657, 1673, 11, 2232, 11, 570, 309, 311, 406, 257, 1871, 295, 257, 4009, 51518, 51518, 295, 3494, 13, 51568, 51568, 467, 311, 257, 1871, 295, 39228, 37008, 5240, 293, 1310, 16011, 420, 1455, 309, 1858, 281, 11, 281, 1499, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13630073789566283, "compression_ratio": 1.6313868613138687, "no_caption_prob": 4.637827260012273e-06}, {"id": 340, "seek": 120840, "start": 1225.88, "end": 1226.88, "text": " Yeah.", "tokens": [50364, 3996, 1365, 576, 312, 365, 11, 1105, 11, 365, 2699, 76, 318, 10297, 11, 291, 458, 11, 291, 600, 658, 411, 341, 3991, 2361, 50666, 50666, 32722, 293, 456, 311, 257, 1850, 18350, 1296, 264, 27520, 300, 291, 576, 360, 337, 257, 2167, 50930, 50930, 3028, 724, 294, 2699, 76, 293, 11, 2232, 11, 264, 11, 264, 10088, 11, 2232, 11, 10088, 5288, 322, 264, 3991, 1185, 13, 51238, 51238, 865, 13, 51288, 51288, 2699, 76, 318, 10297, 307, 257, 588, 819, 1657, 1673, 11, 2232, 11, 570, 309, 311, 406, 257, 1871, 295, 257, 4009, 51518, 51518, 295, 3494, 13, 51568, 51568, 467, 311, 257, 1871, 295, 39228, 37008, 5240, 293, 1310, 16011, 420, 1455, 309, 1858, 281, 11, 281, 1499, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13630073789566283, "compression_ratio": 1.6313868613138687, "no_caption_prob": 4.637827260012273e-06}, {"id": 341, "seek": 120840, "start": 1226.88, "end": 1231.48, "text": " Elm SPA is a very different story though, uh, because it's not a matter of a source", "tokens": [50364, 3996, 1365, 576, 312, 365, 11, 1105, 11, 365, 2699, 76, 318, 10297, 11, 291, 458, 11, 291, 600, 658, 411, 341, 3991, 2361, 50666, 50666, 32722, 293, 456, 311, 257, 1850, 18350, 1296, 264, 27520, 300, 291, 576, 360, 337, 257, 2167, 50930, 50930, 3028, 724, 294, 2699, 76, 293, 11, 2232, 11, 264, 11, 264, 10088, 11, 2232, 11, 10088, 5288, 322, 264, 3991, 1185, 13, 51238, 51238, 865, 13, 51288, 51288, 2699, 76, 318, 10297, 307, 257, 588, 819, 1657, 1673, 11, 2232, 11, 570, 309, 311, 406, 257, 1871, 295, 257, 4009, 51518, 51518, 295, 3494, 13, 51568, 51568, 467, 311, 257, 1871, 295, 39228, 37008, 5240, 293, 1310, 16011, 420, 1455, 309, 1858, 281, 11, 281, 1499, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13630073789566283, "compression_ratio": 1.6313868613138687, "no_caption_prob": 4.637827260012273e-06}, {"id": 342, "seek": 120840, "start": 1231.48, "end": 1232.48, "text": " of truth.", "tokens": [50364, 3996, 1365, 576, 312, 365, 11, 1105, 11, 365, 2699, 76, 318, 10297, 11, 291, 458, 11, 291, 600, 658, 411, 341, 3991, 2361, 50666, 50666, 32722, 293, 456, 311, 257, 1850, 18350, 1296, 264, 27520, 300, 291, 576, 360, 337, 257, 2167, 50930, 50930, 3028, 724, 294, 2699, 76, 293, 11, 2232, 11, 264, 11, 264, 10088, 11, 2232, 11, 10088, 5288, 322, 264, 3991, 1185, 13, 51238, 51238, 865, 13, 51288, 51288, 2699, 76, 318, 10297, 307, 257, 588, 819, 1657, 1673, 11, 2232, 11, 570, 309, 311, 406, 257, 1871, 295, 257, 4009, 51518, 51518, 295, 3494, 13, 51568, 51568, 467, 311, 257, 1871, 295, 39228, 37008, 5240, 293, 1310, 16011, 420, 1455, 309, 1858, 281, 11, 281, 1499, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13630073789566283, "compression_ratio": 1.6313868613138687, "no_caption_prob": 4.637827260012273e-06}, {"id": 343, "seek": 120840, "start": 1232.48, "end": 1238.3600000000001, "text": " It's a matter of boilerplate mostly and maybe conventional or making it easy to, to develop", "tokens": [50364, 3996, 1365, 576, 312, 365, 11, 1105, 11, 365, 2699, 76, 318, 10297, 11, 291, 458, 11, 291, 600, 658, 411, 341, 3991, 2361, 50666, 50666, 32722, 293, 456, 311, 257, 1850, 18350, 1296, 264, 27520, 300, 291, 576, 360, 337, 257, 2167, 50930, 50930, 3028, 724, 294, 2699, 76, 293, 11, 2232, 11, 264, 11, 264, 10088, 11, 2232, 11, 10088, 5288, 322, 264, 3991, 1185, 13, 51238, 51238, 865, 13, 51288, 51288, 2699, 76, 318, 10297, 307, 257, 588, 819, 1657, 1673, 11, 2232, 11, 570, 309, 311, 406, 257, 1871, 295, 257, 4009, 51518, 51518, 295, 3494, 13, 51568, 51568, 467, 311, 257, 1871, 295, 39228, 37008, 5240, 293, 1310, 16011, 420, 1455, 309, 1858, 281, 11, 281, 1499, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.13630073789566283, "compression_ratio": 1.6313868613138687, "no_caption_prob": 4.637827260012273e-06}, {"id": 344, "seek": 123836, "start": 1238.36, "end": 1241.1999999999998, "text": " it, but it's not a matter of source of truth in this case.", "tokens": [50364, 309, 11, 457, 309, 311, 406, 257, 1871, 295, 4009, 295, 3494, 294, 341, 1389, 13, 50506, 50506, 286, 914, 11, 294, 257, 2020, 309, 307, 257, 4009, 295, 3494, 382, 731, 570, 309, 11, 309, 25495, 887, 264, 18350, 50774, 50774, 689, 498, 291, 362, 11, 1338, 11, 457, 445, 411, 604, 2699, 76, 3089, 294, 604, 636, 11, 309, 311, 411, 5646, 294, 51144, 51144, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 2035, 291, 360, 294, 428, 1192, 1496, 2135, 13, 338, 76, 11, 51380, 51380, 406, 428, 411, 7183, 2135, 13, 338, 76, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.17933724476740912, "compression_ratio": 1.7178217821782178, "no_caption_prob": 2.7968968424829654e-05}, {"id": 345, "seek": 123836, "start": 1241.1999999999998, "end": 1246.56, "text": " I mean, in a sense it is a source of truth as well because it, it enforces the mapping", "tokens": [50364, 309, 11, 457, 309, 311, 406, 257, 1871, 295, 4009, 295, 3494, 294, 341, 1389, 13, 50506, 50506, 286, 914, 11, 294, 257, 2020, 309, 307, 257, 4009, 295, 3494, 382, 731, 570, 309, 11, 309, 25495, 887, 264, 18350, 50774, 50774, 689, 498, 291, 362, 11, 1338, 11, 457, 445, 411, 604, 2699, 76, 3089, 294, 604, 636, 11, 309, 311, 411, 5646, 294, 51144, 51144, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 2035, 291, 360, 294, 428, 1192, 1496, 2135, 13, 338, 76, 11, 51380, 51380, 406, 428, 411, 7183, 2135, 13, 338, 76, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.17933724476740912, "compression_ratio": 1.7178217821782178, "no_caption_prob": 2.7968968424829654e-05}, {"id": 346, "seek": 123836, "start": 1246.56, "end": 1253.9599999999998, "text": " where if you have, yeah, but just like any Elm code in any way, it's like normally in", "tokens": [50364, 309, 11, 457, 309, 311, 406, 257, 1871, 295, 4009, 295, 3494, 294, 341, 1389, 13, 50506, 50506, 286, 914, 11, 294, 257, 2020, 309, 307, 257, 4009, 295, 3494, 382, 731, 570, 309, 11, 309, 25495, 887, 264, 18350, 50774, 50774, 689, 498, 291, 362, 11, 1338, 11, 457, 445, 411, 604, 2699, 76, 3089, 294, 604, 636, 11, 309, 311, 411, 5646, 294, 51144, 51144, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 2035, 291, 360, 294, 428, 1192, 1496, 2135, 13, 338, 76, 11, 51380, 51380, 406, 428, 411, 7183, 2135, 13, 338, 76, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.17933724476740912, "compression_ratio": 1.7178217821782178, "no_caption_prob": 2.7968968424829654e-05}, {"id": 347, "seek": 123836, "start": 1253.9599999999998, "end": 1258.6799999999998, "text": " a single page app, the source of truth is whatever you do in your top level main.elm,", "tokens": [50364, 309, 11, 457, 309, 311, 406, 257, 1871, 295, 4009, 295, 3494, 294, 341, 1389, 13, 50506, 50506, 286, 914, 11, 294, 257, 2020, 309, 307, 257, 4009, 295, 3494, 382, 731, 570, 309, 11, 309, 25495, 887, 264, 18350, 50774, 50774, 689, 498, 291, 362, 11, 1338, 11, 457, 445, 411, 604, 2699, 76, 3089, 294, 604, 636, 11, 309, 311, 411, 5646, 294, 51144, 51144, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 2035, 291, 360, 294, 428, 1192, 1496, 2135, 13, 338, 76, 11, 51380, 51380, 406, 428, 411, 7183, 2135, 13, 338, 76, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.17933724476740912, "compression_ratio": 1.7178217821782178, "no_caption_prob": 2.7968968424829654e-05}, {"id": 348, "seek": 123836, "start": 1258.6799999999998, "end": 1262.0, "text": " not your like pages main.elm.", "tokens": [50364, 309, 11, 457, 309, 311, 406, 257, 1871, 295, 4009, 295, 3494, 294, 341, 1389, 13, 50506, 50506, 286, 914, 11, 294, 257, 2020, 309, 307, 257, 4009, 295, 3494, 382, 731, 570, 309, 11, 309, 25495, 887, 264, 18350, 50774, 50774, 689, 498, 291, 362, 11, 1338, 11, 457, 445, 411, 604, 2699, 76, 3089, 294, 604, 636, 11, 309, 311, 411, 5646, 294, 51144, 51144, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 2035, 291, 360, 294, 428, 1192, 1496, 2135, 13, 338, 76, 11, 51380, 51380, 406, 428, 411, 7183, 2135, 13, 338, 76, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.17933724476740912, "compression_ratio": 1.7178217821782178, "no_caption_prob": 2.7968968424829654e-05}, {"id": 349, "seek": 126200, "start": 1262.0, "end": 1268.64, "text": " But with Elm SPA, you can, you can map what's happening in your file system to, to know,", "tokens": [50364, 583, 365, 2699, 76, 318, 10297, 11, 291, 393, 11, 291, 393, 4471, 437, 311, 2737, 294, 428, 3991, 1185, 281, 11, 281, 458, 11, 50696, 50696, 1392, 11, 341, 307, 516, 281, 4471, 281, 257, 3028, 300, 311, 516, 281, 483, 27415, 294, 294, 341, 636, 365, 341, 50916, 50916, 12905, 32722, 293, 291, 393, 4471, 439, 295, 729, 10392, 281, 437, 576, 767, 312, 2737, 13, 51170, 51170, 407, 5646, 294, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 437, 2314, 294, 2135, 13, 338, 76, 11, 597, 51403, 51403, 727, 420, 727, 406, 1524, 10286, 13, 51515, 51515, 400, 291, 500, 380, 458, 1826, 291, 11, 1826, 291, 574, 412, 264, 3089, 293, 291, 727, 652, 257, 6146, 456, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11239709040915319, "compression_ratio": 1.7627737226277371, "no_caption_prob": 3.321293479530141e-05}, {"id": 350, "seek": 126200, "start": 1268.64, "end": 1273.04, "text": " okay, this is going to map to a page that's going to get wired in in this way with this", "tokens": [50364, 583, 365, 2699, 76, 318, 10297, 11, 291, 393, 11, 291, 393, 4471, 437, 311, 2737, 294, 428, 3991, 1185, 281, 11, 281, 458, 11, 50696, 50696, 1392, 11, 341, 307, 516, 281, 4471, 281, 257, 3028, 300, 311, 516, 281, 483, 27415, 294, 294, 341, 636, 365, 341, 50916, 50916, 12905, 32722, 293, 291, 393, 4471, 439, 295, 729, 10392, 281, 437, 576, 767, 312, 2737, 13, 51170, 51170, 407, 5646, 294, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 437, 2314, 294, 2135, 13, 338, 76, 11, 597, 51403, 51403, 727, 420, 727, 406, 1524, 10286, 13, 51515, 51515, 400, 291, 500, 380, 458, 1826, 291, 11, 1826, 291, 574, 412, 264, 3089, 293, 291, 727, 652, 257, 6146, 456, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11239709040915319, "compression_ratio": 1.7627737226277371, "no_caption_prob": 3.321293479530141e-05}, {"id": 351, "seek": 126200, "start": 1273.04, "end": 1278.12, "text": " URL routing and you can map all of those concepts to what would actually be happening.", "tokens": [50364, 583, 365, 2699, 76, 318, 10297, 11, 291, 393, 11, 291, 393, 4471, 437, 311, 2737, 294, 428, 3991, 1185, 281, 11, 281, 458, 11, 50696, 50696, 1392, 11, 341, 307, 516, 281, 4471, 281, 257, 3028, 300, 311, 516, 281, 483, 27415, 294, 294, 341, 636, 365, 341, 50916, 50916, 12905, 32722, 293, 291, 393, 4471, 439, 295, 729, 10392, 281, 437, 576, 767, 312, 2737, 13, 51170, 51170, 407, 5646, 294, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 437, 2314, 294, 2135, 13, 338, 76, 11, 597, 51403, 51403, 727, 420, 727, 406, 1524, 10286, 13, 51515, 51515, 400, 291, 500, 380, 458, 1826, 291, 11, 1826, 291, 574, 412, 264, 3089, 293, 291, 727, 652, 257, 6146, 456, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11239709040915319, "compression_ratio": 1.7627737226277371, "no_caption_prob": 3.321293479530141e-05}, {"id": 352, "seek": 126200, "start": 1278.12, "end": 1282.78, "text": " So normally in a single page app, the source of truth is what happens in main.elm, which", "tokens": [50364, 583, 365, 2699, 76, 318, 10297, 11, 291, 393, 11, 291, 393, 4471, 437, 311, 2737, 294, 428, 3991, 1185, 281, 11, 281, 458, 11, 50696, 50696, 1392, 11, 341, 307, 516, 281, 4471, 281, 257, 3028, 300, 311, 516, 281, 483, 27415, 294, 294, 341, 636, 365, 341, 50916, 50916, 12905, 32722, 293, 291, 393, 4471, 439, 295, 729, 10392, 281, 437, 576, 767, 312, 2737, 13, 51170, 51170, 407, 5646, 294, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 437, 2314, 294, 2135, 13, 338, 76, 11, 597, 51403, 51403, 727, 420, 727, 406, 1524, 10286, 13, 51515, 51515, 400, 291, 500, 380, 458, 1826, 291, 11, 1826, 291, 574, 412, 264, 3089, 293, 291, 727, 652, 257, 6146, 456, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11239709040915319, "compression_ratio": 1.7627737226277371, "no_caption_prob": 3.321293479530141e-05}, {"id": 353, "seek": 126200, "start": 1282.78, "end": 1285.02, "text": " could or could not follow convention.", "tokens": [50364, 583, 365, 2699, 76, 318, 10297, 11, 291, 393, 11, 291, 393, 4471, 437, 311, 2737, 294, 428, 3991, 1185, 281, 11, 281, 458, 11, 50696, 50696, 1392, 11, 341, 307, 516, 281, 4471, 281, 257, 3028, 300, 311, 516, 281, 483, 27415, 294, 294, 341, 636, 365, 341, 50916, 50916, 12905, 32722, 293, 291, 393, 4471, 439, 295, 729, 10392, 281, 437, 576, 767, 312, 2737, 13, 51170, 51170, 407, 5646, 294, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 437, 2314, 294, 2135, 13, 338, 76, 11, 597, 51403, 51403, 727, 420, 727, 406, 1524, 10286, 13, 51515, 51515, 400, 291, 500, 380, 458, 1826, 291, 11, 1826, 291, 574, 412, 264, 3089, 293, 291, 727, 652, 257, 6146, 456, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11239709040915319, "compression_ratio": 1.7627737226277371, "no_caption_prob": 3.321293479530141e-05}, {"id": 354, "seek": 126200, "start": 1285.02, "end": 1289.68, "text": " And you don't know until you, until you look at the code and you could make a mistake there.", "tokens": [50364, 583, 365, 2699, 76, 318, 10297, 11, 291, 393, 11, 291, 393, 4471, 437, 311, 2737, 294, 428, 3991, 1185, 281, 11, 281, 458, 11, 50696, 50696, 1392, 11, 341, 307, 516, 281, 4471, 281, 257, 3028, 300, 311, 516, 281, 483, 27415, 294, 294, 341, 636, 365, 341, 50916, 50916, 12905, 32722, 293, 291, 393, 4471, 439, 295, 729, 10392, 281, 437, 576, 767, 312, 2737, 13, 51170, 51170, 407, 5646, 294, 257, 2167, 3028, 724, 11, 264, 4009, 295, 3494, 307, 437, 2314, 294, 2135, 13, 338, 76, 11, 597, 51403, 51403, 727, 420, 727, 406, 1524, 10286, 13, 51515, 51515, 400, 291, 500, 380, 458, 1826, 291, 11, 1826, 291, 574, 412, 264, 3089, 293, 291, 727, 652, 257, 6146, 456, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11239709040915319, "compression_ratio": 1.7627737226277371, "no_caption_prob": 3.321293479530141e-05}, {"id": 355, "seek": 128968, "start": 1289.68, "end": 1293.76, "text": " But if you have a code generation tool, it helps keep you honest about that source of", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 356, "seek": 128968, "start": 1293.76, "end": 1294.76, "text": " truth.", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 357, "seek": 128968, "start": 1294.76, "end": 1300.24, "text": " So it can actually simplify the mental model because it can express a certain concept more", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 358, "seek": 128968, "start": 1300.24, "end": 1301.24, "text": " concisely.", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 359, "seek": 128968, "start": 1301.24, "end": 1302.24, "text": " Yeah.", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 360, "seek": 128968, "start": 1302.24, "end": 1307.72, "text": " But to me, that is point of tools like Elm SPA is like removing potential failures, potential", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 361, "seek": 128968, "start": 1307.72, "end": 1314.8400000000001, "text": " bugs because you've, yeah, because you forgot to wire things, a page with the main or you", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 362, "seek": 128968, "start": 1314.8400000000001, "end": 1316.24, "text": " did it wrong.", "tokens": [50364, 583, 498, 291, 362, 257, 3089, 5125, 2290, 11, 309, 3665, 1066, 291, 3245, 466, 300, 4009, 295, 50568, 50568, 3494, 13, 50618, 50618, 407, 309, 393, 767, 20460, 264, 4973, 2316, 570, 309, 393, 5109, 257, 1629, 3410, 544, 50892, 50892, 1588, 271, 736, 13, 50942, 50942, 865, 13, 50992, 50992, 583, 281, 385, 11, 300, 307, 935, 295, 3873, 411, 2699, 76, 318, 10297, 307, 411, 12720, 3995, 20774, 11, 3995, 51266, 51266, 15120, 570, 291, 600, 11, 1338, 11, 570, 291, 5298, 281, 6234, 721, 11, 257, 3028, 365, 264, 2135, 420, 291, 51622, 51622, 630, 309, 2085, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.14267303358833744, "compression_ratio": 1.6178861788617886, "no_caption_prob": 3.1692368793301284e-05}, {"id": 363, "seek": 131624, "start": 1316.24, "end": 1320.32, "text": " And code generation is a pretty good tool for making sure that something that is very", "tokens": [50364, 400, 3089, 5125, 307, 257, 1238, 665, 2290, 337, 1455, 988, 300, 746, 300, 307, 588, 50568, 50568, 2531, 337, 7140, 295, 721, 307, 1096, 294, 257, 588, 8398, 293, 731, 1096, 636, 13, 50880, 50880, 1779, 11, 558, 11, 558, 13, 50961, 50961, 407, 286, 519, 321, 434, 11, 286, 519, 321, 434, 1417, 466, 732, 819, 7139, 295, 3494, 510, 570, 11, 51150, 51150, 291, 458, 11, 452, 19810, 313, 390, 300, 13038, 291, 434, 884, 3089, 5125, 11, 456, 307, 257, 4009, 295, 51371, 51371, 3494, 293, 437, 291, 1888, 382, 264, 4009, 295, 3494, 307, 516, 281, 312, 1021, 337, 411, 3701, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.1178080905567516, "compression_ratio": 1.811023622047244, "no_caption_prob": 1.112549944082275e-05}, {"id": 364, "seek": 131624, "start": 1320.32, "end": 1326.56, "text": " similar for plenty of things is done in a very consistent and well done way.", "tokens": [50364, 400, 3089, 5125, 307, 257, 1238, 665, 2290, 337, 1455, 988, 300, 746, 300, 307, 588, 50568, 50568, 2531, 337, 7140, 295, 721, 307, 1096, 294, 257, 588, 8398, 293, 731, 1096, 636, 13, 50880, 50880, 1779, 11, 558, 11, 558, 13, 50961, 50961, 407, 286, 519, 321, 434, 11, 286, 519, 321, 434, 1417, 466, 732, 819, 7139, 295, 3494, 510, 570, 11, 51150, 51150, 291, 458, 11, 452, 19810, 313, 390, 300, 13038, 291, 434, 884, 3089, 5125, 11, 456, 307, 257, 4009, 295, 51371, 51371, 3494, 293, 437, 291, 1888, 382, 264, 4009, 295, 3494, 307, 516, 281, 312, 1021, 337, 411, 3701, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.1178080905567516, "compression_ratio": 1.811023622047244, "no_caption_prob": 1.112549944082275e-05}, {"id": 365, "seek": 131624, "start": 1326.56, "end": 1328.18, "text": " Right, right, right.", "tokens": [50364, 400, 3089, 5125, 307, 257, 1238, 665, 2290, 337, 1455, 988, 300, 746, 300, 307, 588, 50568, 50568, 2531, 337, 7140, 295, 721, 307, 1096, 294, 257, 588, 8398, 293, 731, 1096, 636, 13, 50880, 50880, 1779, 11, 558, 11, 558, 13, 50961, 50961, 407, 286, 519, 321, 434, 11, 286, 519, 321, 434, 1417, 466, 732, 819, 7139, 295, 3494, 510, 570, 11, 51150, 51150, 291, 458, 11, 452, 19810, 313, 390, 300, 13038, 291, 434, 884, 3089, 5125, 11, 456, 307, 257, 4009, 295, 51371, 51371, 3494, 293, 437, 291, 1888, 382, 264, 4009, 295, 3494, 307, 516, 281, 312, 1021, 337, 411, 3701, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.1178080905567516, "compression_ratio": 1.811023622047244, "no_caption_prob": 1.112549944082275e-05}, {"id": 366, "seek": 131624, "start": 1328.18, "end": 1331.96, "text": " So I think we're, I think we're talking about two different sources of truth here because,", "tokens": [50364, 400, 3089, 5125, 307, 257, 1238, 665, 2290, 337, 1455, 988, 300, 746, 300, 307, 588, 50568, 50568, 2531, 337, 7140, 295, 721, 307, 1096, 294, 257, 588, 8398, 293, 731, 1096, 636, 13, 50880, 50880, 1779, 11, 558, 11, 558, 13, 50961, 50961, 407, 286, 519, 321, 434, 11, 286, 519, 321, 434, 1417, 466, 732, 819, 7139, 295, 3494, 510, 570, 11, 51150, 51150, 291, 458, 11, 452, 19810, 313, 390, 300, 13038, 291, 434, 884, 3089, 5125, 11, 456, 307, 257, 4009, 295, 51371, 51371, 3494, 293, 437, 291, 1888, 382, 264, 4009, 295, 3494, 307, 516, 281, 312, 1021, 337, 411, 3701, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.1178080905567516, "compression_ratio": 1.811023622047244, "no_caption_prob": 1.112549944082275e-05}, {"id": 367, "seek": 131624, "start": 1331.96, "end": 1336.38, "text": " you know, my assertion was that anytime you're doing code generation, there is a source of", "tokens": [50364, 400, 3089, 5125, 307, 257, 1238, 665, 2290, 337, 1455, 988, 300, 746, 300, 307, 588, 50568, 50568, 2531, 337, 7140, 295, 721, 307, 1096, 294, 257, 588, 8398, 293, 731, 1096, 636, 13, 50880, 50880, 1779, 11, 558, 11, 558, 13, 50961, 50961, 407, 286, 519, 321, 434, 11, 286, 519, 321, 434, 1417, 466, 732, 819, 7139, 295, 3494, 510, 570, 11, 51150, 51150, 291, 458, 11, 452, 19810, 313, 390, 300, 13038, 291, 434, 884, 3089, 5125, 11, 456, 307, 257, 4009, 295, 51371, 51371, 3494, 293, 437, 291, 1888, 382, 264, 4009, 295, 3494, 307, 516, 281, 312, 1021, 337, 411, 3701, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.1178080905567516, "compression_ratio": 1.811023622047244, "no_caption_prob": 1.112549944082275e-05}, {"id": 368, "seek": 131624, "start": 1336.38, "end": 1342.08, "text": " truth and what you pick as the source of truth is going to be important for like understanding", "tokens": [50364, 400, 3089, 5125, 307, 257, 1238, 665, 2290, 337, 1455, 988, 300, 746, 300, 307, 588, 50568, 50568, 2531, 337, 7140, 295, 721, 307, 1096, 294, 257, 588, 8398, 293, 731, 1096, 636, 13, 50880, 50880, 1779, 11, 558, 11, 558, 13, 50961, 50961, 407, 286, 519, 321, 434, 11, 286, 519, 321, 434, 1417, 466, 732, 819, 7139, 295, 3494, 510, 570, 11, 51150, 51150, 291, 458, 11, 452, 19810, 313, 390, 300, 13038, 291, 434, 884, 3089, 5125, 11, 456, 307, 257, 4009, 295, 51371, 51371, 3494, 293, 437, 291, 1888, 382, 264, 4009, 295, 3494, 307, 516, 281, 312, 1021, 337, 411, 3701, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.1178080905567516, "compression_ratio": 1.811023622047244, "no_caption_prob": 1.112549944082275e-05}, {"id": 369, "seek": 134208, "start": 1342.08, "end": 1347.32, "text": " like how people using that code generator are going to map that source of truth onto", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 370, "seek": 134208, "start": 1347.32, "end": 1348.36, "text": " what's actually happening.", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 371, "seek": 134208, "start": 1348.36, "end": 1349.74, "text": " They need to create a mental map.", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 372, "seek": 134208, "start": 1349.74, "end": 1354.6999999999998, "text": " And what you're talking about is what is the value where Elm GraphQL has the value of like", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 373, "seek": 134208, "start": 1354.6999999999998, "end": 1359.36, "text": " taking the source of truth and letting the Elm compiler know about it and Elm SPA, it's", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 374, "seek": 134208, "start": 1359.36, "end": 1362.8799999999999, "text": " more convenient than keeping these two things in sync.", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 375, "seek": 134208, "start": 1362.8799999999999, "end": 1363.8799999999999, "text": " Yeah, exactly.", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 376, "seek": 134208, "start": 1363.8799999999999, "end": 1369.48, "text": " Like Elm SPA, you have a source of truth, which is all the different files in the file", "tokens": [50364, 411, 577, 561, 1228, 300, 3089, 19265, 366, 516, 281, 4471, 300, 4009, 295, 3494, 3911, 50626, 50626, 437, 311, 767, 2737, 13, 50678, 50678, 814, 643, 281, 1884, 257, 4973, 4471, 13, 50747, 50747, 400, 437, 291, 434, 1417, 466, 307, 437, 307, 264, 2158, 689, 2699, 76, 21884, 13695, 575, 264, 2158, 295, 411, 50995, 50995, 1940, 264, 4009, 295, 3494, 293, 8295, 264, 2699, 76, 31958, 458, 466, 309, 293, 2699, 76, 318, 10297, 11, 309, 311, 51228, 51228, 544, 10851, 813, 5145, 613, 732, 721, 294, 20271, 13, 51404, 51404, 865, 11, 2293, 13, 51454, 51454, 1743, 2699, 76, 318, 10297, 11, 291, 362, 257, 4009, 295, 3494, 11, 597, 307, 439, 264, 819, 7098, 294, 264, 3991, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.13175037928989955, "compression_ratio": 1.7302158273381294, "no_caption_prob": 2.3187201804830693e-05}, {"id": 377, "seek": 136948, "start": 1369.48, "end": 1374.64, "text": " system, but they are not a source of truth in themselves.", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 378, "seek": 136948, "start": 1374.64, "end": 1376.92, "text": " You make them into a source of truth.", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 379, "seek": 136948, "start": 1376.92, "end": 1379.8600000000001, "text": " Whereas GraphQL schema is the source of truth.", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 380, "seek": 136948, "start": 1379.8600000000001, "end": 1385.24, "text": " It is something that can be made out of sync with the Elm project.", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 381, "seek": 136948, "start": 1385.24, "end": 1386.8, "text": " Right, right.", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 382, "seek": 136948, "start": 1386.8, "end": 1387.8, "text": " Yes.", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 383, "seek": 136948, "start": 1387.8, "end": 1393.64, "text": " So there's this book, I actually have to admit, I sort of read half of it and didn't finish", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 384, "seek": 136948, "start": 1393.64, "end": 1394.64, "text": " it.", "tokens": [50364, 1185, 11, 457, 436, 366, 406, 257, 4009, 295, 3494, 294, 2969, 13, 50622, 50622, 509, 652, 552, 666, 257, 4009, 295, 3494, 13, 50736, 50736, 13813, 21884, 13695, 34078, 307, 264, 4009, 295, 3494, 13, 50883, 50883, 467, 307, 746, 300, 393, 312, 1027, 484, 295, 20271, 365, 264, 2699, 76, 1716, 13, 51152, 51152, 1779, 11, 558, 13, 51230, 51230, 1079, 13, 51280, 51280, 407, 456, 311, 341, 1446, 11, 286, 767, 362, 281, 9796, 11, 286, 1333, 295, 1401, 1922, 295, 309, 293, 994, 380, 2413, 51572, 51572, 309, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.17336117852594435, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.0616044164635241e-05}, {"id": 385, "seek": 139464, "start": 1394.64, "end": 1399.8000000000002, "text": " I really liked the principles in this book, the design of everyday things.", "tokens": [50364, 286, 534, 4501, 264, 9156, 294, 341, 1446, 11, 264, 1715, 295, 7429, 721, 13, 50622, 50622, 467, 311, 257, 534, 1627, 1446, 13, 50672, 50672, 2014, 291, 4963, 365, 309, 412, 439, 30, 50770, 50770, 509, 600, 1401, 2625, 4, 544, 813, 286, 630, 13, 51046, 51046, 400, 472, 295, 264, 721, 11, 411, 286, 519, 466, 341, 2171, 562, 286, 478, 1228, 7429, 721, 11, 51384, 51384, 264, 3793, 11, 1468, 30475, 6686, 466, 1333, 295, 264, 463, 28968, 295, 613, 4973, 5245, 13, 51699, 51699], "temperature": 0.0, "avg_logprob": -0.16021024915907117, "compression_ratio": 1.5534883720930233, "no_caption_prob": 4.425428414833732e-06}, {"id": 386, "seek": 139464, "start": 1399.8000000000002, "end": 1400.8000000000002, "text": " It's a really cool book.", "tokens": [50364, 286, 534, 4501, 264, 9156, 294, 341, 1446, 11, 264, 1715, 295, 7429, 721, 13, 50622, 50622, 467, 311, 257, 534, 1627, 1446, 13, 50672, 50672, 2014, 291, 4963, 365, 309, 412, 439, 30, 50770, 50770, 509, 600, 1401, 2625, 4, 544, 813, 286, 630, 13, 51046, 51046, 400, 472, 295, 264, 721, 11, 411, 286, 519, 466, 341, 2171, 562, 286, 478, 1228, 7429, 721, 11, 51384, 51384, 264, 3793, 11, 1468, 30475, 6686, 466, 1333, 295, 264, 463, 28968, 295, 613, 4973, 5245, 13, 51699, 51699], "temperature": 0.0, "avg_logprob": -0.16021024915907117, "compression_ratio": 1.5534883720930233, "no_caption_prob": 4.425428414833732e-06}, {"id": 387, "seek": 139464, "start": 1400.8000000000002, "end": 1402.76, "text": " Are you familiar with it at all?", "tokens": [50364, 286, 534, 4501, 264, 9156, 294, 341, 1446, 11, 264, 1715, 295, 7429, 721, 13, 50622, 50622, 467, 311, 257, 534, 1627, 1446, 13, 50672, 50672, 2014, 291, 4963, 365, 309, 412, 439, 30, 50770, 50770, 509, 600, 1401, 2625, 4, 544, 813, 286, 630, 13, 51046, 51046, 400, 472, 295, 264, 721, 11, 411, 286, 519, 466, 341, 2171, 562, 286, 478, 1228, 7429, 721, 11, 51384, 51384, 264, 3793, 11, 1468, 30475, 6686, 466, 1333, 295, 264, 463, 28968, 295, 613, 4973, 5245, 13, 51699, 51699], "temperature": 0.0, "avg_logprob": -0.16021024915907117, "compression_ratio": 1.5534883720930233, "no_caption_prob": 4.425428414833732e-06}, {"id": 388, "seek": 139464, "start": 1402.76, "end": 1408.2800000000002, "text": " You've read 50% more than I did.", "tokens": [50364, 286, 534, 4501, 264, 9156, 294, 341, 1446, 11, 264, 1715, 295, 7429, 721, 13, 50622, 50622, 467, 311, 257, 534, 1627, 1446, 13, 50672, 50672, 2014, 291, 4963, 365, 309, 412, 439, 30, 50770, 50770, 509, 600, 1401, 2625, 4, 544, 813, 286, 630, 13, 51046, 51046, 400, 472, 295, 264, 721, 11, 411, 286, 519, 466, 341, 2171, 562, 286, 478, 1228, 7429, 721, 11, 51384, 51384, 264, 3793, 11, 1468, 30475, 6686, 466, 1333, 295, 264, 463, 28968, 295, 613, 4973, 5245, 13, 51699, 51699], "temperature": 0.0, "avg_logprob": -0.16021024915907117, "compression_ratio": 1.5534883720930233, "no_caption_prob": 4.425428414833732e-06}, {"id": 389, "seek": 139464, "start": 1408.2800000000002, "end": 1415.0400000000002, "text": " And one of the things, like I think about this sometimes when I'm using everyday things,", "tokens": [50364, 286, 534, 4501, 264, 9156, 294, 341, 1446, 11, 264, 1715, 295, 7429, 721, 13, 50622, 50622, 467, 311, 257, 534, 1627, 1446, 13, 50672, 50672, 2014, 291, 4963, 365, 309, 412, 439, 30, 50770, 50770, 509, 600, 1401, 2625, 4, 544, 813, 286, 630, 13, 51046, 51046, 400, 472, 295, 264, 721, 11, 411, 286, 519, 466, 341, 2171, 562, 286, 478, 1228, 7429, 721, 11, 51384, 51384, 264, 3793, 11, 1468, 30475, 6686, 466, 1333, 295, 264, 463, 28968, 295, 613, 4973, 5245, 13, 51699, 51699], "temperature": 0.0, "avg_logprob": -0.16021024915907117, "compression_ratio": 1.5534883720930233, "no_caption_prob": 4.425428414833732e-06}, {"id": 390, "seek": 139464, "start": 1415.0400000000002, "end": 1421.3400000000001, "text": " the author, Don Norman talks about sort of the mappings of these mental models.", "tokens": [50364, 286, 534, 4501, 264, 9156, 294, 341, 1446, 11, 264, 1715, 295, 7429, 721, 13, 50622, 50622, 467, 311, 257, 534, 1627, 1446, 13, 50672, 50672, 2014, 291, 4963, 365, 309, 412, 439, 30, 50770, 50770, 509, 600, 1401, 2625, 4, 544, 813, 286, 630, 13, 51046, 51046, 400, 472, 295, 264, 721, 11, 411, 286, 519, 466, 341, 2171, 562, 286, 478, 1228, 7429, 721, 11, 51384, 51384, 264, 3793, 11, 1468, 30475, 6686, 466, 1333, 295, 264, 463, 28968, 295, 613, 4973, 5245, 13, 51699, 51699], "temperature": 0.0, "avg_logprob": -0.16021024915907117, "compression_ratio": 1.5534883720930233, "no_caption_prob": 4.425428414833732e-06}, {"id": 391, "seek": 142134, "start": 1421.34, "end": 1426.3999999999999, "text": " So like, you know, how you can have like a door, basically, he says, if you have a door", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 392, "seek": 142134, "start": 1426.3999999999999, "end": 1431.08, "text": " that, like, have you ever gone into a door and you try pushing it and then you realize", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 393, "seek": 142134, "start": 1431.08, "end": 1432.32, "text": " you have to pull it?", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 394, "seek": 142134, "start": 1432.32, "end": 1438.56, "text": " Yeah, like, is it something like, if a door has no handle, then you are expected to push?", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 395, "seek": 142134, "start": 1438.56, "end": 1439.56, "text": " Right.", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 396, "seek": 142134, "start": 1439.56, "end": 1441.6, "text": " So those are like the affordances of the door.", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 397, "seek": 142134, "start": 1441.6, "end": 1447.76, "text": " So there are these like clear physical cues that show how to interact with it.", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 398, "seek": 142134, "start": 1447.76, "end": 1450.3999999999999, "text": " And like, they're not even conventions.", "tokens": [50364, 407, 411, 11, 291, 458, 11, 577, 291, 393, 362, 411, 257, 2853, 11, 1936, 11, 415, 1619, 11, 498, 291, 362, 257, 2853, 50617, 50617, 300, 11, 411, 11, 362, 291, 1562, 2780, 666, 257, 2853, 293, 291, 853, 7380, 309, 293, 550, 291, 4325, 50851, 50851, 291, 362, 281, 2235, 309, 30, 50913, 50913, 865, 11, 411, 11, 307, 309, 746, 411, 11, 498, 257, 2853, 575, 572, 4813, 11, 550, 291, 366, 5176, 281, 2944, 30, 51225, 51225, 1779, 13, 51275, 51275, 407, 729, 366, 411, 264, 6157, 2676, 295, 264, 2853, 13, 51377, 51377, 407, 456, 366, 613, 411, 1850, 4001, 32192, 300, 855, 577, 281, 4648, 365, 309, 13, 51685, 51685, 400, 411, 11, 436, 434, 406, 754, 33520, 13, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.17825172483459, "compression_ratio": 1.7751937984496124, "no_caption_prob": 3.071739411097951e-05}, {"id": 399, "seek": 145040, "start": 1450.4, "end": 1453.52, "text": " They're like, just here's what exists.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 400, "seek": 145040, "start": 1453.52, "end": 1457.16, "text": " And so what are you going to try to do with a door with no handle?", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 401, "seek": 145040, "start": 1457.16, "end": 1458.16, "text": " You're going to push it.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 402, "seek": 145040, "start": 1458.16, "end": 1459.16, "text": " Yeah.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 403, "seek": 145040, "start": 1459.16, "end": 1462.3200000000002, "text": " It's like, what will your instincts tell you?", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 404, "seek": 145040, "start": 1462.3200000000002, "end": 1463.3200000000002, "text": " Right.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 405, "seek": 145040, "start": 1463.3200000000002, "end": 1464.3200000000002, "text": " Exactly.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 406, "seek": 145040, "start": 1464.3200000000002, "end": 1465.3200000000002, "text": " Exactly.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 407, "seek": 145040, "start": 1465.3200000000002, "end": 1468.2800000000002, "text": " Because just looking at it, you're like, what are the possible interactions I can do with", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 408, "seek": 145040, "start": 1468.2800000000002, "end": 1469.2800000000002, "text": " this?", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 409, "seek": 145040, "start": 1469.2800000000002, "end": 1472.16, "text": " Well, I'm not going to touch the handle because there's no handle.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 410, "seek": 145040, "start": 1472.16, "end": 1474.5600000000002, "text": " Yeah, there's nothing that you can pull.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 411, "seek": 145040, "start": 1474.5600000000002, "end": 1479.8000000000002, "text": " And so that's, there are these affordances that give cues to how something can be used.", "tokens": [50364, 814, 434, 411, 11, 445, 510, 311, 437, 8198, 13, 50520, 50520, 400, 370, 437, 366, 291, 516, 281, 853, 281, 360, 365, 257, 2853, 365, 572, 4813, 30, 50702, 50702, 509, 434, 516, 281, 2944, 309, 13, 50752, 50752, 865, 13, 50802, 50802, 467, 311, 411, 11, 437, 486, 428, 38997, 980, 291, 30, 50960, 50960, 1779, 13, 51010, 51010, 7587, 13, 51060, 51060, 7587, 13, 51110, 51110, 1436, 445, 1237, 412, 309, 11, 291, 434, 411, 11, 437, 366, 264, 1944, 13280, 286, 393, 360, 365, 51258, 51258, 341, 30, 51308, 51308, 1042, 11, 286, 478, 406, 516, 281, 2557, 264, 4813, 570, 456, 311, 572, 4813, 13, 51452, 51452, 865, 11, 456, 311, 1825, 300, 291, 393, 2235, 13, 51572, 51572, 400, 370, 300, 311, 11, 456, 366, 613, 6157, 2676, 300, 976, 32192, 281, 577, 746, 393, 312, 1143, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15734273034173088, "compression_ratio": 1.8345588235294117, "no_caption_prob": 3.82282305508852e-05}, {"id": 412, "seek": 147980, "start": 1479.8, "end": 1482.9199999999998, "text": " If something has a handle, then naturally you want to pull it.", "tokens": [50364, 759, 746, 575, 257, 4813, 11, 550, 8195, 291, 528, 281, 2235, 309, 13, 50520, 50520, 759, 746, 575, 411, 257, 707, 5760, 2159, 11, 550, 291, 434, 411, 11, 1954, 11, 2944, 322, 264, 5760, 2159, 13, 50721, 50721, 400, 286, 519, 309, 311, 1021, 281, 1949, 411, 437, 561, 311, 24002, 486, 312, 18017, 50952, 50952, 365, 428, 1333, 295, 3089, 5125, 9226, 13, 51144, 51144, 400, 300, 311, 264, 4009, 295, 3494, 11, 558, 30, 51247, 51247, 407, 411, 1949, 577, 428, 4009, 295, 3494, 307, 2902, 32192, 300, 652, 309, 1858, 337, 561, 51528, 51528, 281, 1223, 577, 281, 4648, 365, 746, 293, 437, 264, 16602, 366, 516, 281, 312, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.10516075326615021, "compression_ratio": 1.8131868131868132, "no_caption_prob": 2.6016030005848734e-06}, {"id": 413, "seek": 147980, "start": 1482.9199999999998, "end": 1486.94, "text": " If something has like a little metal bar, then you're like, oh, push on the metal bar.", "tokens": [50364, 759, 746, 575, 257, 4813, 11, 550, 8195, 291, 528, 281, 2235, 309, 13, 50520, 50520, 759, 746, 575, 411, 257, 707, 5760, 2159, 11, 550, 291, 434, 411, 11, 1954, 11, 2944, 322, 264, 5760, 2159, 13, 50721, 50721, 400, 286, 519, 309, 311, 1021, 281, 1949, 411, 437, 561, 311, 24002, 486, 312, 18017, 50952, 50952, 365, 428, 1333, 295, 3089, 5125, 9226, 13, 51144, 51144, 400, 300, 311, 264, 4009, 295, 3494, 11, 558, 30, 51247, 51247, 407, 411, 1949, 577, 428, 4009, 295, 3494, 307, 2902, 32192, 300, 652, 309, 1858, 337, 561, 51528, 51528, 281, 1223, 577, 281, 4648, 365, 746, 293, 437, 264, 16602, 366, 516, 281, 312, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.10516075326615021, "compression_ratio": 1.8131868131868132, "no_caption_prob": 2.6016030005848734e-06}, {"id": 414, "seek": 147980, "start": 1486.94, "end": 1491.56, "text": " And I think it's important to consider like what people's intuition will be interacting", "tokens": [50364, 759, 746, 575, 257, 4813, 11, 550, 8195, 291, 528, 281, 2235, 309, 13, 50520, 50520, 759, 746, 575, 411, 257, 707, 5760, 2159, 11, 550, 291, 434, 411, 11, 1954, 11, 2944, 322, 264, 5760, 2159, 13, 50721, 50721, 400, 286, 519, 309, 311, 1021, 281, 1949, 411, 437, 561, 311, 24002, 486, 312, 18017, 50952, 50952, 365, 428, 1333, 295, 3089, 5125, 9226, 13, 51144, 51144, 400, 300, 311, 264, 4009, 295, 3494, 11, 558, 30, 51247, 51247, 407, 411, 1949, 577, 428, 4009, 295, 3494, 307, 2902, 32192, 300, 652, 309, 1858, 337, 561, 51528, 51528, 281, 1223, 577, 281, 4648, 365, 746, 293, 437, 264, 16602, 366, 516, 281, 312, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.10516075326615021, "compression_ratio": 1.8131868131868132, "no_caption_prob": 2.6016030005848734e-06}, {"id": 415, "seek": 147980, "start": 1491.56, "end": 1495.3999999999999, "text": " with your sort of code generation interface.", "tokens": [50364, 759, 746, 575, 257, 4813, 11, 550, 8195, 291, 528, 281, 2235, 309, 13, 50520, 50520, 759, 746, 575, 411, 257, 707, 5760, 2159, 11, 550, 291, 434, 411, 11, 1954, 11, 2944, 322, 264, 5760, 2159, 13, 50721, 50721, 400, 286, 519, 309, 311, 1021, 281, 1949, 411, 437, 561, 311, 24002, 486, 312, 18017, 50952, 50952, 365, 428, 1333, 295, 3089, 5125, 9226, 13, 51144, 51144, 400, 300, 311, 264, 4009, 295, 3494, 11, 558, 30, 51247, 51247, 407, 411, 1949, 577, 428, 4009, 295, 3494, 307, 2902, 32192, 300, 652, 309, 1858, 337, 561, 51528, 51528, 281, 1223, 577, 281, 4648, 365, 746, 293, 437, 264, 16602, 366, 516, 281, 312, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.10516075326615021, "compression_ratio": 1.8131868131868132, "no_caption_prob": 2.6016030005848734e-06}, {"id": 416, "seek": 147980, "start": 1495.3999999999999, "end": 1497.46, "text": " And that's the source of truth, right?", "tokens": [50364, 759, 746, 575, 257, 4813, 11, 550, 8195, 291, 528, 281, 2235, 309, 13, 50520, 50520, 759, 746, 575, 411, 257, 707, 5760, 2159, 11, 550, 291, 434, 411, 11, 1954, 11, 2944, 322, 264, 5760, 2159, 13, 50721, 50721, 400, 286, 519, 309, 311, 1021, 281, 1949, 411, 437, 561, 311, 24002, 486, 312, 18017, 50952, 50952, 365, 428, 1333, 295, 3089, 5125, 9226, 13, 51144, 51144, 400, 300, 311, 264, 4009, 295, 3494, 11, 558, 30, 51247, 51247, 407, 411, 1949, 577, 428, 4009, 295, 3494, 307, 2902, 32192, 300, 652, 309, 1858, 337, 561, 51528, 51528, 281, 1223, 577, 281, 4648, 365, 746, 293, 437, 264, 16602, 366, 516, 281, 312, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.10516075326615021, "compression_ratio": 1.8131868131868132, "no_caption_prob": 2.6016030005848734e-06}, {"id": 417, "seek": 147980, "start": 1497.46, "end": 1503.08, "text": " So like consider how your source of truth is giving cues that make it easy for people", "tokens": [50364, 759, 746, 575, 257, 4813, 11, 550, 8195, 291, 528, 281, 2235, 309, 13, 50520, 50520, 759, 746, 575, 411, 257, 707, 5760, 2159, 11, 550, 291, 434, 411, 11, 1954, 11, 2944, 322, 264, 5760, 2159, 13, 50721, 50721, 400, 286, 519, 309, 311, 1021, 281, 1949, 411, 437, 561, 311, 24002, 486, 312, 18017, 50952, 50952, 365, 428, 1333, 295, 3089, 5125, 9226, 13, 51144, 51144, 400, 300, 311, 264, 4009, 295, 3494, 11, 558, 30, 51247, 51247, 407, 411, 1949, 577, 428, 4009, 295, 3494, 307, 2902, 32192, 300, 652, 309, 1858, 337, 561, 51528, 51528, 281, 1223, 577, 281, 4648, 365, 746, 293, 437, 264, 16602, 366, 516, 281, 312, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.10516075326615021, "compression_ratio": 1.8131868131868132, "no_caption_prob": 2.6016030005848734e-06}, {"id": 418, "seek": 147980, "start": 1503.08, "end": 1507.6, "text": " to understand how to interact with something and what the implications are going to be.", "tokens": [50364, 759, 746, 575, 257, 4813, 11, 550, 8195, 291, 528, 281, 2235, 309, 13, 50520, 50520, 759, 746, 575, 411, 257, 707, 5760, 2159, 11, 550, 291, 434, 411, 11, 1954, 11, 2944, 322, 264, 5760, 2159, 13, 50721, 50721, 400, 286, 519, 309, 311, 1021, 281, 1949, 411, 437, 561, 311, 24002, 486, 312, 18017, 50952, 50952, 365, 428, 1333, 295, 3089, 5125, 9226, 13, 51144, 51144, 400, 300, 311, 264, 4009, 295, 3494, 11, 558, 30, 51247, 51247, 407, 411, 1949, 577, 428, 4009, 295, 3494, 307, 2902, 32192, 300, 652, 309, 1858, 337, 561, 51528, 51528, 281, 1223, 577, 281, 4648, 365, 746, 293, 437, 264, 16602, 366, 516, 281, 312, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.10516075326615021, "compression_ratio": 1.8131868131868132, "no_caption_prob": 2.6016030005848734e-06}, {"id": 419, "seek": 150760, "start": 1507.6, "end": 1511.9199999999998, "text": " Another thing he talks about is like sort of these mappings.", "tokens": [50364, 3996, 551, 415, 6686, 466, 307, 411, 1333, 295, 613, 463, 28968, 13, 50580, 50580, 1743, 498, 291, 362, 411, 732, 819, 5811, 322, 732, 819, 4881, 293, 472, 3679, 307, 322, 50985, 50985, 264, 558, 1252, 293, 472, 3679, 307, 322, 264, 1411, 1252, 293, 472, 1442, 307, 322, 264, 558, 1252, 293, 51192, 51192, 472, 1442, 307, 322, 264, 1411, 1252, 11, 291, 727, 4471, 2139, 3679, 281, 2139, 1442, 13, 51436, 51436, 583, 498, 456, 311, 257, 1850, 4001, 18350, 11, 309, 311, 516, 281, 312, 3571, 281, 4648, 365, 300, 293, 51666, 51666, 16224, 437, 264, 5223, 307, 516, 281, 312, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.10257925553755327, "compression_ratio": 2.0273972602739727, "no_caption_prob": 1.0783180186990649e-05}, {"id": 420, "seek": 150760, "start": 1511.9199999999998, "end": 1520.02, "text": " Like if you have like two different lights on two different sides and one switch is on", "tokens": [50364, 3996, 551, 415, 6686, 466, 307, 411, 1333, 295, 613, 463, 28968, 13, 50580, 50580, 1743, 498, 291, 362, 411, 732, 819, 5811, 322, 732, 819, 4881, 293, 472, 3679, 307, 322, 50985, 50985, 264, 558, 1252, 293, 472, 3679, 307, 322, 264, 1411, 1252, 293, 472, 1442, 307, 322, 264, 558, 1252, 293, 51192, 51192, 472, 1442, 307, 322, 264, 1411, 1252, 11, 291, 727, 4471, 2139, 3679, 281, 2139, 1442, 13, 51436, 51436, 583, 498, 456, 311, 257, 1850, 4001, 18350, 11, 309, 311, 516, 281, 312, 3571, 281, 4648, 365, 300, 293, 51666, 51666, 16224, 437, 264, 5223, 307, 516, 281, 312, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.10257925553755327, "compression_ratio": 2.0273972602739727, "no_caption_prob": 1.0783180186990649e-05}, {"id": 421, "seek": 150760, "start": 1520.02, "end": 1524.1599999999999, "text": " the right side and one switch is on the left side and one light is on the right side and", "tokens": [50364, 3996, 551, 415, 6686, 466, 307, 411, 1333, 295, 613, 463, 28968, 13, 50580, 50580, 1743, 498, 291, 362, 411, 732, 819, 5811, 322, 732, 819, 4881, 293, 472, 3679, 307, 322, 50985, 50985, 264, 558, 1252, 293, 472, 3679, 307, 322, 264, 1411, 1252, 293, 472, 1442, 307, 322, 264, 558, 1252, 293, 51192, 51192, 472, 1442, 307, 322, 264, 1411, 1252, 11, 291, 727, 4471, 2139, 3679, 281, 2139, 1442, 13, 51436, 51436, 583, 498, 456, 311, 257, 1850, 4001, 18350, 11, 309, 311, 516, 281, 312, 3571, 281, 4648, 365, 300, 293, 51666, 51666, 16224, 437, 264, 5223, 307, 516, 281, 312, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.10257925553755327, "compression_ratio": 2.0273972602739727, "no_caption_prob": 1.0783180186990649e-05}, {"id": 422, "seek": 150760, "start": 1524.1599999999999, "end": 1529.04, "text": " one light is on the left side, you could map either switch to either light.", "tokens": [50364, 3996, 551, 415, 6686, 466, 307, 411, 1333, 295, 613, 463, 28968, 13, 50580, 50580, 1743, 498, 291, 362, 411, 732, 819, 5811, 322, 732, 819, 4881, 293, 472, 3679, 307, 322, 50985, 50985, 264, 558, 1252, 293, 472, 3679, 307, 322, 264, 1411, 1252, 293, 472, 1442, 307, 322, 264, 558, 1252, 293, 51192, 51192, 472, 1442, 307, 322, 264, 1411, 1252, 11, 291, 727, 4471, 2139, 3679, 281, 2139, 1442, 13, 51436, 51436, 583, 498, 456, 311, 257, 1850, 4001, 18350, 11, 309, 311, 516, 281, 312, 3571, 281, 4648, 365, 300, 293, 51666, 51666, 16224, 437, 264, 5223, 307, 516, 281, 312, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.10257925553755327, "compression_ratio": 2.0273972602739727, "no_caption_prob": 1.0783180186990649e-05}, {"id": 423, "seek": 150760, "start": 1529.04, "end": 1533.6399999999999, "text": " But if there's a clear physical mapping, it's going to be easier to interact with that and", "tokens": [50364, 3996, 551, 415, 6686, 466, 307, 411, 1333, 295, 613, 463, 28968, 13, 50580, 50580, 1743, 498, 291, 362, 411, 732, 819, 5811, 322, 732, 819, 4881, 293, 472, 3679, 307, 322, 50985, 50985, 264, 558, 1252, 293, 472, 3679, 307, 322, 264, 1411, 1252, 293, 472, 1442, 307, 322, 264, 558, 1252, 293, 51192, 51192, 472, 1442, 307, 322, 264, 1411, 1252, 11, 291, 727, 4471, 2139, 3679, 281, 2139, 1442, 13, 51436, 51436, 583, 498, 456, 311, 257, 1850, 4001, 18350, 11, 309, 311, 516, 281, 312, 3571, 281, 4648, 365, 300, 293, 51666, 51666, 16224, 437, 264, 5223, 307, 516, 281, 312, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.10257925553755327, "compression_ratio": 2.0273972602739727, "no_caption_prob": 1.0783180186990649e-05}, {"id": 424, "seek": 150760, "start": 1533.6399999999999, "end": 1535.28, "text": " intuit what the behavior is going to be.", "tokens": [50364, 3996, 551, 415, 6686, 466, 307, 411, 1333, 295, 613, 463, 28968, 13, 50580, 50580, 1743, 498, 291, 362, 411, 732, 819, 5811, 322, 732, 819, 4881, 293, 472, 3679, 307, 322, 50985, 50985, 264, 558, 1252, 293, 472, 3679, 307, 322, 264, 1411, 1252, 293, 472, 1442, 307, 322, 264, 558, 1252, 293, 51192, 51192, 472, 1442, 307, 322, 264, 1411, 1252, 11, 291, 727, 4471, 2139, 3679, 281, 2139, 1442, 13, 51436, 51436, 583, 498, 456, 311, 257, 1850, 4001, 18350, 11, 309, 311, 516, 281, 312, 3571, 281, 4648, 365, 300, 293, 51666, 51666, 16224, 437, 264, 5223, 307, 516, 281, 312, 13, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.10257925553755327, "compression_ratio": 2.0273972602739727, "no_caption_prob": 1.0783180186990649e-05}, {"id": 425, "seek": 153528, "start": 1535.28, "end": 1537.8799999999999, "text": " So you can create a clear mental model.", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 426, "seek": 153528, "start": 1537.8799999999999, "end": 1544.76, "text": " And I think that that's like I think about this with my with my garage door opener.", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 427, "seek": 153528, "start": 1544.76, "end": 1551.04, "text": " I always walk into the garage door to the garage to open the door and I want to open", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 428, "seek": 153528, "start": 1551.04, "end": 1552.04, "text": " the door.", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 429, "seek": 153528, "start": 1552.04, "end": 1556.0, "text": " I'm looking on the right and there's a button on the left and a button on the right.", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 430, "seek": 153528, "start": 1556.0, "end": 1558.0, "text": " And I have to always flip it in my head.", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 431, "seek": 153528, "start": 1558.0, "end": 1560.3999999999999, "text": " I'm like, oh, it's the opposite of the intuitive one.", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 432, "seek": 153528, "start": 1560.3999999999999, "end": 1564.66, "text": " I press the left button and I do and my brain always goes through that process.", "tokens": [50364, 407, 291, 393, 1884, 257, 1850, 4973, 2316, 13, 50494, 50494, 400, 286, 519, 300, 300, 311, 411, 286, 519, 466, 341, 365, 452, 365, 452, 14400, 2853, 43850, 13, 50838, 50838, 286, 1009, 1792, 666, 264, 14400, 2853, 281, 264, 14400, 281, 1269, 264, 2853, 293, 286, 528, 281, 1269, 51152, 51152, 264, 2853, 13, 51202, 51202, 286, 478, 1237, 322, 264, 558, 293, 456, 311, 257, 2960, 322, 264, 1411, 293, 257, 2960, 322, 264, 558, 13, 51400, 51400, 400, 286, 362, 281, 1009, 7929, 309, 294, 452, 1378, 13, 51500, 51500, 286, 478, 411, 11, 1954, 11, 309, 311, 264, 6182, 295, 264, 21769, 472, 13, 51620, 51620, 286, 1886, 264, 1411, 2960, 293, 286, 360, 293, 452, 3567, 1009, 1709, 807, 300, 1399, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14040314067493787, "compression_ratio": 1.9274193548387097, "no_caption_prob": 2.123370904882904e-06}, {"id": 433, "seek": 156466, "start": 1564.66, "end": 1570.5600000000002, "text": " So if you can avoid having, you know, the consumers of your code generation interface", "tokens": [50364, 407, 498, 291, 393, 5042, 1419, 11, 291, 458, 11, 264, 11883, 295, 428, 3089, 5125, 9226, 50659, 50659, 352, 807, 300, 4973, 18350, 538, 4084, 411, 452, 935, 307, 445, 411, 291, 366, 291, 366, 51010, 51010, 4084, 257, 4973, 2316, 300, 5022, 366, 516, 281, 362, 281, 1466, 293, 4648, 365, 13, 51255, 51255, 407, 312, 3650, 295, 300, 300, 4973, 2316, 300, 561, 366, 516, 281, 362, 281, 4648, 365, 51527, 51527, 293, 437, 264, 6157, 2676, 366, 11, 437, 437, 32192, 291, 855, 577, 281, 764, 746, 11, 291, 458, 11, 652, 51770, 51770, 6243, 4368, 6243, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.0993482121881449, "compression_ratio": 1.9489361702127659, "no_caption_prob": 8.267742487078067e-06}, {"id": 434, "seek": 156466, "start": 1570.5600000000002, "end": 1577.5800000000002, "text": " go through that mental mapping by creating like my point is just like you are you are", "tokens": [50364, 407, 498, 291, 393, 5042, 1419, 11, 291, 458, 11, 264, 11883, 295, 428, 3089, 5125, 9226, 50659, 50659, 352, 807, 300, 4973, 18350, 538, 4084, 411, 452, 935, 307, 445, 411, 291, 366, 291, 366, 51010, 51010, 4084, 257, 4973, 2316, 300, 5022, 366, 516, 281, 362, 281, 1466, 293, 4648, 365, 13, 51255, 51255, 407, 312, 3650, 295, 300, 300, 4973, 2316, 300, 561, 366, 516, 281, 362, 281, 4648, 365, 51527, 51527, 293, 437, 264, 6157, 2676, 366, 11, 437, 437, 32192, 291, 855, 577, 281, 764, 746, 11, 291, 458, 11, 652, 51770, 51770, 6243, 4368, 6243, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.0993482121881449, "compression_ratio": 1.9489361702127659, "no_caption_prob": 8.267742487078067e-06}, {"id": 435, "seek": 156466, "start": 1577.5800000000002, "end": 1582.48, "text": " creating a mental model that users are going to have to learn and interact with.", "tokens": [50364, 407, 498, 291, 393, 5042, 1419, 11, 291, 458, 11, 264, 11883, 295, 428, 3089, 5125, 9226, 50659, 50659, 352, 807, 300, 4973, 18350, 538, 4084, 411, 452, 935, 307, 445, 411, 291, 366, 291, 366, 51010, 51010, 4084, 257, 4973, 2316, 300, 5022, 366, 516, 281, 362, 281, 1466, 293, 4648, 365, 13, 51255, 51255, 407, 312, 3650, 295, 300, 300, 4973, 2316, 300, 561, 366, 516, 281, 362, 281, 4648, 365, 51527, 51527, 293, 437, 264, 6157, 2676, 366, 11, 437, 437, 32192, 291, 855, 577, 281, 764, 746, 11, 291, 458, 11, 652, 51770, 51770, 6243, 4368, 6243, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.0993482121881449, "compression_ratio": 1.9489361702127659, "no_caption_prob": 8.267742487078067e-06}, {"id": 436, "seek": 156466, "start": 1582.48, "end": 1587.92, "text": " So be aware of that that mental model that people are going to have to interact with", "tokens": [50364, 407, 498, 291, 393, 5042, 1419, 11, 291, 458, 11, 264, 11883, 295, 428, 3089, 5125, 9226, 50659, 50659, 352, 807, 300, 4973, 18350, 538, 4084, 411, 452, 935, 307, 445, 411, 291, 366, 291, 366, 51010, 51010, 4084, 257, 4973, 2316, 300, 5022, 366, 516, 281, 362, 281, 1466, 293, 4648, 365, 13, 51255, 51255, 407, 312, 3650, 295, 300, 300, 4973, 2316, 300, 561, 366, 516, 281, 362, 281, 4648, 365, 51527, 51527, 293, 437, 264, 6157, 2676, 366, 11, 437, 437, 32192, 291, 855, 577, 281, 764, 746, 11, 291, 458, 11, 652, 51770, 51770, 6243, 4368, 6243, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.0993482121881449, "compression_ratio": 1.9489361702127659, "no_caption_prob": 8.267742487078067e-06}, {"id": 437, "seek": 156466, "start": 1587.92, "end": 1592.78, "text": " and what the affordances are, what what cues you show how to use something, you know, make", "tokens": [50364, 407, 498, 291, 393, 5042, 1419, 11, 291, 458, 11, 264, 11883, 295, 428, 3089, 5125, 9226, 50659, 50659, 352, 807, 300, 4973, 18350, 538, 4084, 411, 452, 935, 307, 445, 411, 291, 366, 291, 366, 51010, 51010, 4084, 257, 4973, 2316, 300, 5022, 366, 516, 281, 362, 281, 1466, 293, 4648, 365, 13, 51255, 51255, 407, 312, 3650, 295, 300, 300, 4973, 2316, 300, 561, 366, 516, 281, 362, 281, 4648, 365, 51527, 51527, 293, 437, 264, 6157, 2676, 366, 11, 437, 437, 32192, 291, 855, 577, 281, 764, 746, 11, 291, 458, 11, 652, 51770, 51770, 6243, 4368, 6243, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.0993482121881449, "compression_ratio": 1.9489361702127659, "no_caption_prob": 8.267742487078067e-06}, {"id": 438, "seek": 156466, "start": 1592.78, "end": 1594.3600000000001, "text": " impossible states impossible.", "tokens": [50364, 407, 498, 291, 393, 5042, 1419, 11, 291, 458, 11, 264, 11883, 295, 428, 3089, 5125, 9226, 50659, 50659, 352, 807, 300, 4973, 18350, 538, 4084, 411, 452, 935, 307, 445, 411, 291, 366, 291, 366, 51010, 51010, 4084, 257, 4973, 2316, 300, 5022, 366, 516, 281, 362, 281, 1466, 293, 4648, 365, 13, 51255, 51255, 407, 312, 3650, 295, 300, 300, 4973, 2316, 300, 561, 366, 516, 281, 362, 281, 4648, 365, 51527, 51527, 293, 437, 264, 6157, 2676, 366, 11, 437, 437, 32192, 291, 855, 577, 281, 764, 746, 11, 291, 458, 11, 652, 51770, 51770, 6243, 4368, 6243, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.0993482121881449, "compression_ratio": 1.9489361702127659, "no_caption_prob": 8.267742487078067e-06}, {"id": 439, "seek": 159436, "start": 1594.36, "end": 1601.24, "text": " But make the source of truth have a very clear mapping so that users don't have more concepts", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 440, "seek": 159436, "start": 1601.24, "end": 1602.24, "text": " to learn.", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 441, "seek": 159436, "start": 1602.24, "end": 1603.76, "text": " And so it's predictable what it's going to do.", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 442, "seek": 159436, "start": 1603.76, "end": 1605.3999999999999, "text": " It's easier said than done.", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 443, "seek": 159436, "start": 1605.3999999999999, "end": 1611.3999999999999, "text": " But ideally, if you can try piggybacking on a mental model that people already have.", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 444, "seek": 159436, "start": 1611.3999999999999, "end": 1614.4399999999998, "text": " For instance, for GraphQL, we already have something like decoders.", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 445, "seek": 159436, "start": 1614.4399999999998, "end": 1616.84, "text": " Is that what you're thinking?", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 446, "seek": 159436, "start": 1616.84, "end": 1623.24, "text": " Yeah, yeah, we have we have decoders and and we have the you know, I mean, also, like,", "tokens": [50364, 583, 652, 264, 4009, 295, 3494, 362, 257, 588, 1850, 18350, 370, 300, 5022, 500, 380, 362, 544, 10392, 50708, 50708, 281, 1466, 13, 50758, 50758, 400, 370, 309, 311, 27737, 437, 309, 311, 516, 281, 360, 13, 50834, 50834, 467, 311, 3571, 848, 813, 1096, 13, 50916, 50916, 583, 22915, 11, 498, 291, 393, 853, 39349, 3207, 278, 322, 257, 4973, 2316, 300, 561, 1217, 362, 13, 51216, 51216, 1171, 5197, 11, 337, 21884, 13695, 11, 321, 1217, 362, 746, 411, 979, 378, 433, 13, 51368, 51368, 1119, 300, 437, 291, 434, 1953, 30, 51488, 51488, 865, 11, 1338, 11, 321, 362, 321, 362, 979, 378, 433, 293, 293, 321, 362, 264, 291, 458, 11, 286, 914, 11, 611, 11, 411, 11, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1599431676188792, "compression_ratio": 1.6231884057971016, "no_caption_prob": 4.2228093661833555e-06}, {"id": 447, "seek": 162324, "start": 1623.24, "end": 1628.8, "text": " you know, with Elm GraphQL, it's not a perfect one to one mapping of GraphQL.", "tokens": [50364, 291, 458, 11, 365, 2699, 76, 21884, 13695, 11, 309, 311, 406, 257, 2176, 472, 281, 472, 18350, 295, 21884, 13695, 13, 50642, 50642, 509, 458, 11, 456, 366, 1629, 10392, 411, 2519, 10198, 1957, 300, 500, 380, 2514, 294, 2699, 76, 21884, 13695, 50918, 50918, 570, 309, 12649, 82, 729, 1314, 13, 51008, 51008, 583, 456, 366, 661, 10392, 11, 291, 458, 11, 411, 6565, 11, 28416, 11, 24914, 294, 21884, 13695, 300, 51438, 51438, 362, 257, 27737, 18350, 294, 2098, 300, 291, 458, 11, 6565, 11, 264, 28416, 11, 291, 458, 11, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13969443542788726, "compression_ratio": 1.7819905213270142, "no_caption_prob": 5.064240031060763e-05}, {"id": 448, "seek": 162324, "start": 1628.8, "end": 1634.32, "text": " You know, there are certain concepts like field aliases that don't exist in Elm GraphQL", "tokens": [50364, 291, 458, 11, 365, 2699, 76, 21884, 13695, 11, 309, 311, 406, 257, 2176, 472, 281, 472, 18350, 295, 21884, 13695, 13, 50642, 50642, 509, 458, 11, 456, 366, 1629, 10392, 411, 2519, 10198, 1957, 300, 500, 380, 2514, 294, 2699, 76, 21884, 13695, 50918, 50918, 570, 309, 12649, 82, 729, 1314, 13, 51008, 51008, 583, 456, 366, 661, 10392, 11, 291, 458, 11, 411, 6565, 11, 28416, 11, 24914, 294, 21884, 13695, 300, 51438, 51438, 362, 257, 27737, 18350, 294, 2098, 300, 291, 458, 11, 6565, 11, 264, 28416, 11, 291, 458, 11, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13969443542788726, "compression_ratio": 1.7819905213270142, "no_caption_prob": 5.064240031060763e-05}, {"id": 449, "seek": 162324, "start": 1634.32, "end": 1636.1200000000001, "text": " because it abstracts those away.", "tokens": [50364, 291, 458, 11, 365, 2699, 76, 21884, 13695, 11, 309, 311, 406, 257, 2176, 472, 281, 472, 18350, 295, 21884, 13695, 13, 50642, 50642, 509, 458, 11, 456, 366, 1629, 10392, 411, 2519, 10198, 1957, 300, 500, 380, 2514, 294, 2699, 76, 21884, 13695, 50918, 50918, 570, 309, 12649, 82, 729, 1314, 13, 51008, 51008, 583, 456, 366, 661, 10392, 11, 291, 458, 11, 411, 6565, 11, 28416, 11, 24914, 294, 21884, 13695, 300, 51438, 51438, 362, 257, 27737, 18350, 294, 2098, 300, 291, 458, 11, 6565, 11, 264, 28416, 11, 291, 458, 11, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13969443542788726, "compression_ratio": 1.7819905213270142, "no_caption_prob": 5.064240031060763e-05}, {"id": 450, "seek": 162324, "start": 1636.1200000000001, "end": 1644.72, "text": " But there are other concepts, you know, like objects, interfaces, unions in GraphQL that", "tokens": [50364, 291, 458, 11, 365, 2699, 76, 21884, 13695, 11, 309, 311, 406, 257, 2176, 472, 281, 472, 18350, 295, 21884, 13695, 13, 50642, 50642, 509, 458, 11, 456, 366, 1629, 10392, 411, 2519, 10198, 1957, 300, 500, 380, 2514, 294, 2699, 76, 21884, 13695, 50918, 50918, 570, 309, 12649, 82, 729, 1314, 13, 51008, 51008, 583, 456, 366, 661, 10392, 11, 291, 458, 11, 411, 6565, 11, 28416, 11, 24914, 294, 21884, 13695, 300, 51438, 51438, 362, 257, 27737, 18350, 294, 2098, 300, 291, 458, 11, 6565, 11, 264, 28416, 11, 291, 458, 11, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13969443542788726, "compression_ratio": 1.7819905213270142, "no_caption_prob": 5.064240031060763e-05}, {"id": 451, "seek": 162324, "start": 1644.72, "end": 1650.92, "text": " have a predictable mapping in ways that you know, objects, the interfaces, you know, the", "tokens": [50364, 291, 458, 11, 365, 2699, 76, 21884, 13695, 11, 309, 311, 406, 257, 2176, 472, 281, 472, 18350, 295, 21884, 13695, 13, 50642, 50642, 509, 458, 11, 456, 366, 1629, 10392, 411, 2519, 10198, 1957, 300, 500, 380, 2514, 294, 2699, 76, 21884, 13695, 50918, 50918, 570, 309, 12649, 82, 729, 1314, 13, 51008, 51008, 583, 456, 366, 661, 10392, 11, 291, 458, 11, 411, 6565, 11, 28416, 11, 24914, 294, 21884, 13695, 300, 51438, 51438, 362, 257, 27737, 18350, 294, 2098, 300, 291, 458, 11, 6565, 11, 264, 28416, 11, 291, 458, 11, 264, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13969443542788726, "compression_ratio": 1.7819905213270142, "no_caption_prob": 5.064240031060763e-05}, {"id": 452, "seek": 165092, "start": 1650.92, "end": 1653.52, "text": " APIs for objects are generated in a specific way.", "tokens": [50364, 21445, 337, 6565, 366, 10833, 294, 257, 2685, 636, 13, 50494, 50494, 400, 370, 456, 366, 1629, 33520, 300, 286, 478, 1333, 295, 6662, 1345, 264, 558, 3679, 365, 50836, 50836, 264, 558, 1442, 293, 264, 1411, 3679, 365, 264, 1411, 1442, 689, 286, 478, 1382, 281, 411, 915, 257, 51080, 51080, 1850, 18350, 281, 652, 309, 21769, 337, 613, 10392, 281, 352, 1214, 13, 51282, 51282, 407, 437, 366, 661, 3109, 712, 505, 1660, 295, 3089, 5125, 30, 51577, 51577], "temperature": 0.0, "avg_logprob": -0.10372156120208373, "compression_ratio": 1.6418604651162791, "no_caption_prob": 4.637849087885115e-06}, {"id": 453, "seek": 165092, "start": 1653.52, "end": 1660.3600000000001, "text": " And so there are certain conventions that I'm sort of configuring the right switch with", "tokens": [50364, 21445, 337, 6565, 366, 10833, 294, 257, 2685, 636, 13, 50494, 50494, 400, 370, 456, 366, 1629, 33520, 300, 286, 478, 1333, 295, 6662, 1345, 264, 558, 3679, 365, 50836, 50836, 264, 558, 1442, 293, 264, 1411, 3679, 365, 264, 1411, 1442, 689, 286, 478, 1382, 281, 411, 915, 257, 51080, 51080, 1850, 18350, 281, 652, 309, 21769, 337, 613, 10392, 281, 352, 1214, 13, 51282, 51282, 407, 437, 366, 661, 3109, 712, 505, 1660, 295, 3089, 5125, 30, 51577, 51577], "temperature": 0.0, "avg_logprob": -0.10372156120208373, "compression_ratio": 1.6418604651162791, "no_caption_prob": 4.637849087885115e-06}, {"id": 454, "seek": 165092, "start": 1660.3600000000001, "end": 1665.24, "text": " the right light and the left switch with the left light where I'm trying to like find a", "tokens": [50364, 21445, 337, 6565, 366, 10833, 294, 257, 2685, 636, 13, 50494, 50494, 400, 370, 456, 366, 1629, 33520, 300, 286, 478, 1333, 295, 6662, 1345, 264, 558, 3679, 365, 50836, 50836, 264, 558, 1442, 293, 264, 1411, 3679, 365, 264, 1411, 1442, 689, 286, 478, 1382, 281, 411, 915, 257, 51080, 51080, 1850, 18350, 281, 652, 309, 21769, 337, 613, 10392, 281, 352, 1214, 13, 51282, 51282, 407, 437, 366, 661, 3109, 712, 505, 1660, 295, 3089, 5125, 30, 51577, 51577], "temperature": 0.0, "avg_logprob": -0.10372156120208373, "compression_ratio": 1.6418604651162791, "no_caption_prob": 4.637849087885115e-06}, {"id": 455, "seek": 165092, "start": 1665.24, "end": 1669.28, "text": " clear mapping to make it intuitive for these concepts to go together.", "tokens": [50364, 21445, 337, 6565, 366, 10833, 294, 257, 2685, 636, 13, 50494, 50494, 400, 370, 456, 366, 1629, 33520, 300, 286, 478, 1333, 295, 6662, 1345, 264, 558, 3679, 365, 50836, 50836, 264, 558, 1442, 293, 264, 1411, 3679, 365, 264, 1411, 1442, 689, 286, 478, 1382, 281, 411, 915, 257, 51080, 51080, 1850, 18350, 281, 652, 309, 21769, 337, 613, 10392, 281, 352, 1214, 13, 51282, 51282, 407, 437, 366, 661, 3109, 712, 505, 1660, 295, 3089, 5125, 30, 51577, 51577], "temperature": 0.0, "avg_logprob": -0.10372156120208373, "compression_ratio": 1.6418604651162791, "no_caption_prob": 4.637849087885115e-06}, {"id": 456, "seek": 165092, "start": 1669.28, "end": 1675.18, "text": " So what are other approachable usages of code generation?", "tokens": [50364, 21445, 337, 6565, 366, 10833, 294, 257, 2685, 636, 13, 50494, 50494, 400, 370, 456, 366, 1629, 33520, 300, 286, 478, 1333, 295, 6662, 1345, 264, 558, 3679, 365, 50836, 50836, 264, 558, 1442, 293, 264, 1411, 3679, 365, 264, 1411, 1442, 689, 286, 478, 1382, 281, 411, 915, 257, 51080, 51080, 1850, 18350, 281, 652, 309, 21769, 337, 613, 10392, 281, 352, 1214, 13, 51282, 51282, 407, 437, 366, 661, 3109, 712, 505, 1660, 295, 3089, 5125, 30, 51577, 51577], "temperature": 0.0, "avg_logprob": -0.10372156120208373, "compression_ratio": 1.6418604651162791, "no_caption_prob": 4.637849087885115e-06}, {"id": 457, "seek": 167518, "start": 1675.18, "end": 1682.0, "text": " So one that I can think of is like generation for images.", "tokens": [50364, 407, 472, 300, 286, 393, 519, 295, 307, 411, 5125, 337, 5267, 13, 50705, 50705, 1743, 13437, 9769, 1333, 295, 13437, 9769, 13, 50823, 50823, 407, 2049, 291, 362, 411, 5267, 11, 40654, 11, 23308, 300, 366, 294, 428, 3991, 1185, 11, 428, 9769, 51077, 51077, 10820, 420, 746, 11, 293, 291, 528, 281, 6408, 552, 294, 428, 2699, 76, 3089, 13, 51306, 51306, 407, 437, 291, 393, 360, 307, 445, 362, 257, 362, 257, 6798, 12166, 281, 641, 4914, 11, 597, 291, 393, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.1369729150425304, "compression_ratio": 1.674757281553398, "no_caption_prob": 1.3006437256990466e-05}, {"id": 458, "seek": 167518, "start": 1682.0, "end": 1684.3600000000001, "text": " Like static assets sort of static assets.", "tokens": [50364, 407, 472, 300, 286, 393, 519, 295, 307, 411, 5125, 337, 5267, 13, 50705, 50705, 1743, 13437, 9769, 1333, 295, 13437, 9769, 13, 50823, 50823, 407, 2049, 291, 362, 411, 5267, 11, 40654, 11, 23308, 300, 366, 294, 428, 3991, 1185, 11, 428, 9769, 51077, 51077, 10820, 420, 746, 11, 293, 291, 528, 281, 6408, 552, 294, 428, 2699, 76, 3089, 13, 51306, 51306, 407, 437, 291, 393, 360, 307, 445, 362, 257, 362, 257, 6798, 12166, 281, 641, 4914, 11, 597, 291, 393, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.1369729150425304, "compression_ratio": 1.674757281553398, "no_caption_prob": 1.3006437256990466e-05}, {"id": 459, "seek": 167518, "start": 1684.3600000000001, "end": 1689.44, "text": " So often you have like images, logos, icons that are in your file system, your assets", "tokens": [50364, 407, 472, 300, 286, 393, 519, 295, 307, 411, 5125, 337, 5267, 13, 50705, 50705, 1743, 13437, 9769, 1333, 295, 13437, 9769, 13, 50823, 50823, 407, 2049, 291, 362, 411, 5267, 11, 40654, 11, 23308, 300, 366, 294, 428, 3991, 1185, 11, 428, 9769, 51077, 51077, 10820, 420, 746, 11, 293, 291, 528, 281, 6408, 552, 294, 428, 2699, 76, 3089, 13, 51306, 51306, 407, 437, 291, 393, 360, 307, 445, 362, 257, 362, 257, 6798, 12166, 281, 641, 4914, 11, 597, 291, 393, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.1369729150425304, "compression_ratio": 1.674757281553398, "no_caption_prob": 1.3006437256990466e-05}, {"id": 460, "seek": 167518, "start": 1689.44, "end": 1694.02, "text": " folder or something, and you want to reference them in your Elm code.", "tokens": [50364, 407, 472, 300, 286, 393, 519, 295, 307, 411, 5125, 337, 5267, 13, 50705, 50705, 1743, 13437, 9769, 1333, 295, 13437, 9769, 13, 50823, 50823, 407, 2049, 291, 362, 411, 5267, 11, 40654, 11, 23308, 300, 366, 294, 428, 3991, 1185, 11, 428, 9769, 51077, 51077, 10820, 420, 746, 11, 293, 291, 528, 281, 6408, 552, 294, 428, 2699, 76, 3089, 13, 51306, 51306, 407, 437, 291, 393, 360, 307, 445, 362, 257, 362, 257, 6798, 12166, 281, 641, 4914, 11, 597, 291, 393, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.1369729150425304, "compression_ratio": 1.674757281553398, "no_caption_prob": 1.3006437256990466e-05}, {"id": 461, "seek": 167518, "start": 1694.02, "end": 1700.2, "text": " So what you can do is just have a have a string pointing to their location, which you can", "tokens": [50364, 407, 472, 300, 286, 393, 519, 295, 307, 411, 5125, 337, 5267, 13, 50705, 50705, 1743, 13437, 9769, 1333, 295, 13437, 9769, 13, 50823, 50823, 407, 2049, 291, 362, 411, 5267, 11, 40654, 11, 23308, 300, 366, 294, 428, 3991, 1185, 11, 428, 9769, 51077, 51077, 10820, 420, 746, 11, 293, 291, 528, 281, 6408, 552, 294, 428, 2699, 76, 3089, 13, 51306, 51306, 407, 437, 291, 393, 360, 307, 445, 362, 257, 362, 257, 6798, 12166, 281, 641, 4914, 11, 597, 291, 393, 51615, 51615], "temperature": 0.0, "avg_logprob": -0.1369729150425304, "compression_ratio": 1.674757281553398, "no_caption_prob": 1.3006437256990466e-05}, {"id": 462, "seek": 170020, "start": 1700.2, "end": 1705.92, "text": " also do in order to make it more type safe and prevent errors from typos is to create", "tokens": [50364, 611, 360, 294, 1668, 281, 652, 309, 544, 2010, 3273, 293, 4871, 13603, 490, 2125, 329, 307, 281, 1884, 50650, 50650, 364, 9362, 337, 309, 1228, 3089, 5125, 13, 50816, 50816, 407, 291, 1884, 257, 5755, 597, 12668, 264, 4009, 295, 3494, 11, 597, 307, 22161, 439, 264, 23308, 294, 51164, 51164, 428, 9769, 10820, 293, 550, 17746, 257, 2699, 76, 3991, 1228, 300, 13, 51411, 51411, 400, 550, 472, 1481, 551, 300, 291, 393, 360, 307, 562, 291, 584, 6528, 13, 25224, 2960, 420, 2035, 11, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1169320305625161, "compression_ratio": 1.639269406392694, "no_caption_prob": 2.3185883037513122e-05}, {"id": 463, "seek": 170020, "start": 1705.92, "end": 1709.24, "text": " an API for it using code generation.", "tokens": [50364, 611, 360, 294, 1668, 281, 652, 309, 544, 2010, 3273, 293, 4871, 13603, 490, 2125, 329, 307, 281, 1884, 50650, 50650, 364, 9362, 337, 309, 1228, 3089, 5125, 13, 50816, 50816, 407, 291, 1884, 257, 5755, 597, 12668, 264, 4009, 295, 3494, 11, 597, 307, 22161, 439, 264, 23308, 294, 51164, 51164, 428, 9769, 10820, 293, 550, 17746, 257, 2699, 76, 3991, 1228, 300, 13, 51411, 51411, 400, 550, 472, 1481, 551, 300, 291, 393, 360, 307, 562, 291, 584, 6528, 13, 25224, 2960, 420, 2035, 11, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1169320305625161, "compression_ratio": 1.639269406392694, "no_caption_prob": 2.3185883037513122e-05}, {"id": 464, "seek": 170020, "start": 1709.24, "end": 1716.2, "text": " So you create a script which loads the source of truth, which is listing all the icons in", "tokens": [50364, 611, 360, 294, 1668, 281, 652, 309, 544, 2010, 3273, 293, 4871, 13603, 490, 2125, 329, 307, 281, 1884, 50650, 50650, 364, 9362, 337, 309, 1228, 3089, 5125, 13, 50816, 50816, 407, 291, 1884, 257, 5755, 597, 12668, 264, 4009, 295, 3494, 11, 597, 307, 22161, 439, 264, 23308, 294, 51164, 51164, 428, 9769, 10820, 293, 550, 17746, 257, 2699, 76, 3991, 1228, 300, 13, 51411, 51411, 400, 550, 472, 1481, 551, 300, 291, 393, 360, 307, 562, 291, 584, 6528, 13, 25224, 2960, 420, 2035, 11, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1169320305625161, "compression_ratio": 1.639269406392694, "no_caption_prob": 2.3185883037513122e-05}, {"id": 465, "seek": 170020, "start": 1716.2, "end": 1721.14, "text": " your assets folder and then generating a Elm file using that.", "tokens": [50364, 611, 360, 294, 1668, 281, 652, 309, 544, 2010, 3273, 293, 4871, 13603, 490, 2125, 329, 307, 281, 1884, 50650, 50650, 364, 9362, 337, 309, 1228, 3089, 5125, 13, 50816, 50816, 407, 291, 1884, 257, 5755, 597, 12668, 264, 4009, 295, 3494, 11, 597, 307, 22161, 439, 264, 23308, 294, 51164, 51164, 428, 9769, 10820, 293, 550, 17746, 257, 2699, 76, 3991, 1228, 300, 13, 51411, 51411, 400, 550, 472, 1481, 551, 300, 291, 393, 360, 307, 562, 291, 584, 6528, 13, 25224, 2960, 420, 2035, 11, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1169320305625161, "compression_ratio": 1.639269406392694, "no_caption_prob": 2.3185883037513122e-05}, {"id": 466, "seek": 170020, "start": 1721.14, "end": 1728.4, "text": " And then one nice thing that you can do is when you say icon.add button or whatever,", "tokens": [50364, 611, 360, 294, 1668, 281, 652, 309, 544, 2010, 3273, 293, 4871, 13603, 490, 2125, 329, 307, 281, 1884, 50650, 50650, 364, 9362, 337, 309, 1228, 3089, 5125, 13, 50816, 50816, 407, 291, 1884, 257, 5755, 597, 12668, 264, 4009, 295, 3494, 11, 597, 307, 22161, 439, 264, 23308, 294, 51164, 51164, 428, 9769, 10820, 293, 550, 17746, 257, 2699, 76, 3991, 1228, 300, 13, 51411, 51411, 400, 550, 472, 1481, 551, 300, 291, 393, 360, 307, 562, 291, 584, 6528, 13, 25224, 2960, 420, 2035, 11, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1169320305625161, "compression_ratio": 1.639269406392694, "no_caption_prob": 2.3185883037513122e-05}, {"id": 467, "seek": 172840, "start": 1728.4, "end": 1734.8000000000002, "text": " you have a code completion with your editor and you have something a lot more type safe.", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 468, "seek": 172840, "start": 1734.8000000000002, "end": 1735.8000000000002, "text": " Right.", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 469, "seek": 172840, "start": 1735.8000000000002, "end": 1741.48, "text": " You can even get inline documentation in your IDE if you generate doc comments, which is", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 470, "seek": 172840, "start": 1741.48, "end": 1742.48, "text": " pretty cool.", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 471, "seek": 172840, "start": 1742.48, "end": 1743.48, "text": " Yeah.", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 472, "seek": 172840, "start": 1743.48, "end": 1749.5600000000002, "text": " I often think of like code generation is really just you're instead of like writing an API,", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 473, "seek": 172840, "start": 1749.5600000000002, "end": 1753.96, "text": " you're writing something that generates an API for a very specific thing.", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 474, "seek": 172840, "start": 1753.96, "end": 1754.96, "text": " Yeah.", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 475, "seek": 172840, "start": 1754.96, "end": 1755.96, "text": " Yeah.", "tokens": [50364, 291, 362, 257, 3089, 19372, 365, 428, 9839, 293, 291, 362, 746, 257, 688, 544, 2010, 3273, 13, 50684, 50684, 1779, 13, 50734, 50734, 509, 393, 754, 483, 294, 1889, 14333, 294, 428, 40930, 498, 291, 8460, 3211, 3053, 11, 597, 307, 51018, 51018, 1238, 1627, 13, 51068, 51068, 865, 13, 51118, 51118, 286, 2049, 519, 295, 411, 3089, 5125, 307, 534, 445, 291, 434, 2602, 295, 411, 3579, 364, 9362, 11, 51422, 51422, 291, 434, 3579, 746, 300, 23815, 364, 9362, 337, 257, 588, 2685, 551, 13, 51642, 51642, 865, 13, 51692, 51692, 865, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17176450729370119, "compression_ratio": 1.6710526315789473, "no_caption_prob": 6.962177849345608e-06}, {"id": 476, "seek": 175596, "start": 1755.96, "end": 1761.6000000000001, "text": " I saw on Twitter if people have like small in house code generation tools that they use", "tokens": [50364, 286, 1866, 322, 5794, 498, 561, 362, 411, 1359, 294, 1782, 3089, 5125, 3873, 300, 436, 764, 50646, 50646, 293, 456, 645, 257, 688, 295, 1880, 764, 3331, 561, 2835, 411, 5058, 2144, 50994, 50994, 307, 257, 1627, 472, 281, 293, 291, 393, 767, 291, 393, 24825, 1629, 721, 294, 294, 428, 3089, 51338, 51338, 5125, 382, 731, 13, 51398, 51398, 407, 291, 393, 652, 6243, 4368, 6243, 13, 51484, 51484, 509, 393, 584, 11, 291, 458, 11, 498, 456, 311, 257, 1629, 411, 2141, 337, 428, 5058, 2144, 25890, 11, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13226797204268606, "compression_ratio": 1.8034188034188035, "no_caption_prob": 3.7051890103612095e-05}, {"id": 477, "seek": 175596, "start": 1761.6000000000001, "end": 1768.56, "text": " and there were a lot of interesting use cases people mentioned like internationalization", "tokens": [50364, 286, 1866, 322, 5794, 498, 561, 362, 411, 1359, 294, 1782, 3089, 5125, 3873, 300, 436, 764, 50646, 50646, 293, 456, 645, 257, 688, 295, 1880, 764, 3331, 561, 2835, 411, 5058, 2144, 50994, 50994, 307, 257, 1627, 472, 281, 293, 291, 393, 767, 291, 393, 24825, 1629, 721, 294, 294, 428, 3089, 51338, 51338, 5125, 382, 731, 13, 51398, 51398, 407, 291, 393, 652, 6243, 4368, 6243, 13, 51484, 51484, 509, 393, 584, 11, 291, 458, 11, 498, 456, 311, 257, 1629, 411, 2141, 337, 428, 5058, 2144, 25890, 11, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13226797204268606, "compression_ratio": 1.8034188034188035, "no_caption_prob": 3.7051890103612095e-05}, {"id": 478, "seek": 175596, "start": 1768.56, "end": 1775.44, "text": " is a cool one to and you can actually you can enforce certain things in in your code", "tokens": [50364, 286, 1866, 322, 5794, 498, 561, 362, 411, 1359, 294, 1782, 3089, 5125, 3873, 300, 436, 764, 50646, 50646, 293, 456, 645, 257, 688, 295, 1880, 764, 3331, 561, 2835, 411, 5058, 2144, 50994, 50994, 307, 257, 1627, 472, 281, 293, 291, 393, 767, 291, 393, 24825, 1629, 721, 294, 294, 428, 3089, 51338, 51338, 5125, 382, 731, 13, 51398, 51398, 407, 291, 393, 652, 6243, 4368, 6243, 13, 51484, 51484, 509, 393, 584, 11, 291, 458, 11, 498, 456, 311, 257, 1629, 411, 2141, 337, 428, 5058, 2144, 25890, 11, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13226797204268606, "compression_ratio": 1.8034188034188035, "no_caption_prob": 3.7051890103612095e-05}, {"id": 479, "seek": 175596, "start": 1775.44, "end": 1776.64, "text": " generation as well.", "tokens": [50364, 286, 1866, 322, 5794, 498, 561, 362, 411, 1359, 294, 1782, 3089, 5125, 3873, 300, 436, 764, 50646, 50646, 293, 456, 645, 257, 688, 295, 1880, 764, 3331, 561, 2835, 411, 5058, 2144, 50994, 50994, 307, 257, 1627, 472, 281, 293, 291, 393, 767, 291, 393, 24825, 1629, 721, 294, 294, 428, 3089, 51338, 51338, 5125, 382, 731, 13, 51398, 51398, 407, 291, 393, 652, 6243, 4368, 6243, 13, 51484, 51484, 509, 393, 584, 11, 291, 458, 11, 498, 456, 311, 257, 1629, 411, 2141, 337, 428, 5058, 2144, 25890, 11, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13226797204268606, "compression_ratio": 1.8034188034188035, "no_caption_prob": 3.7051890103612095e-05}, {"id": 480, "seek": 175596, "start": 1776.64, "end": 1778.3600000000001, "text": " So you can make impossible states impossible.", "tokens": [50364, 286, 1866, 322, 5794, 498, 561, 362, 411, 1359, 294, 1782, 3089, 5125, 3873, 300, 436, 764, 50646, 50646, 293, 456, 645, 257, 688, 295, 1880, 764, 3331, 561, 2835, 411, 5058, 2144, 50994, 50994, 307, 257, 1627, 472, 281, 293, 291, 393, 767, 291, 393, 24825, 1629, 721, 294, 294, 428, 3089, 51338, 51338, 5125, 382, 731, 13, 51398, 51398, 407, 291, 393, 652, 6243, 4368, 6243, 13, 51484, 51484, 509, 393, 584, 11, 291, 458, 11, 498, 456, 311, 257, 1629, 411, 2141, 337, 428, 5058, 2144, 25890, 11, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13226797204268606, "compression_ratio": 1.8034188034188035, "no_caption_prob": 3.7051890103612095e-05}, {"id": 481, "seek": 175596, "start": 1778.3600000000001, "end": 1785.3600000000001, "text": " You can say, you know, if there's a certain like key for your internationalization dictionary,", "tokens": [50364, 286, 1866, 322, 5794, 498, 561, 362, 411, 1359, 294, 1782, 3089, 5125, 3873, 300, 436, 764, 50646, 50646, 293, 456, 645, 257, 688, 295, 1880, 764, 3331, 561, 2835, 411, 5058, 2144, 50994, 50994, 307, 257, 1627, 472, 281, 293, 291, 393, 767, 291, 393, 24825, 1629, 721, 294, 294, 428, 3089, 51338, 51338, 5125, 382, 731, 13, 51398, 51398, 407, 291, 393, 652, 6243, 4368, 6243, 13, 51484, 51484, 509, 393, 584, 11, 291, 458, 11, 498, 456, 311, 257, 1629, 411, 2141, 337, 428, 5058, 2144, 25890, 11, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13226797204268606, "compression_ratio": 1.8034188034188035, "no_caption_prob": 3.7051890103612095e-05}, {"id": 482, "seek": 178536, "start": 1785.36, "end": 1791.24, "text": " you can say, well, if that key is missing in a particular translation dictionary, then", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 483, "seek": 178536, "start": 1791.24, "end": 1792.3999999999999, "text": " that should be an error.", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 484, "seek": 178536, "start": 1792.3999999999999, "end": 1794.6, "text": " For example, build error or right.", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 485, "seek": 178536, "start": 1794.6, "end": 1795.6, "text": " Exactly.", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 486, "seek": 178536, "start": 1795.6, "end": 1798.6399999999999, "text": " You can actually write because code generation introduces a build step.", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 487, "seek": 178536, "start": 1798.6399999999999, "end": 1804.4799999999998, "text": " So you can actually introduce not just compiler errors, but builders, which is so I get, you", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 488, "seek": 178536, "start": 1804.4799999999998, "end": 1809.8, "text": " know, the concept of making possible states impossible applies not only within the code", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 489, "seek": 178536, "start": 1809.8, "end": 1814.84, "text": " that you generate, but the process of, well, I'm only going to generate code with a certain", "tokens": [50364, 291, 393, 584, 11, 731, 11, 498, 300, 2141, 307, 5361, 294, 257, 1729, 12853, 25890, 11, 550, 50658, 50658, 300, 820, 312, 364, 6713, 13, 50716, 50716, 1171, 1365, 11, 1322, 6713, 420, 558, 13, 50826, 50826, 7587, 13, 50876, 50876, 509, 393, 767, 2464, 570, 3089, 5125, 31472, 257, 1322, 1823, 13, 51028, 51028, 407, 291, 393, 767, 5366, 406, 445, 31958, 13603, 11, 457, 36281, 11, 597, 307, 370, 286, 483, 11, 291, 51320, 51320, 458, 11, 264, 3410, 295, 1455, 1944, 4368, 6243, 13165, 406, 787, 1951, 264, 3089, 51586, 51586, 300, 291, 8460, 11, 457, 264, 1399, 295, 11, 731, 11, 286, 478, 787, 516, 281, 8460, 3089, 365, 257, 1629, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.17173171043395996, "compression_ratio": 1.7482517482517483, "no_caption_prob": 1.4063853086554445e-05}, {"id": 490, "seek": 181484, "start": 1814.84, "end": 1816.76, "text": " known valid structure.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 491, "seek": 181484, "start": 1816.76, "end": 1819.3999999999999, "text": " And if I can't produce that, I'll give a builder.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 492, "seek": 181484, "start": 1819.3999999999999, "end": 1820.3999999999999, "text": " Yeah.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 493, "seek": 181484, "start": 1820.3999999999999, "end": 1826.9199999999998, "text": " Another common one seems to be just taking like you're describing sort of mapping assets", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 494, "seek": 181484, "start": 1826.9199999999998, "end": 1829.3999999999999, "text": " to a particular URL.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 495, "seek": 181484, "start": 1829.3999999999999, "end": 1833.6399999999999, "text": " I think, you know, another common one is environment variables.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 496, "seek": 181484, "start": 1833.6399999999999, "end": 1834.6399999999999, "text": " Yeah.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 497, "seek": 181484, "start": 1834.6399999999999, "end": 1835.6399999999999, "text": " Mm hmm.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 498, "seek": 181484, "start": 1835.6399999999999, "end": 1839.72, "text": " Like secrets that are injected as a build time in the CI.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 499, "seek": 181484, "start": 1839.72, "end": 1844.12, "text": " Although you shouldn't inject secrets because it's going to be in your bundle.", "tokens": [50364, 2570, 7363, 3877, 13, 50460, 50460, 400, 498, 286, 393, 380, 5258, 300, 11, 286, 603, 976, 257, 27377, 13, 50592, 50592, 865, 13, 50642, 50642, 3996, 2689, 472, 2544, 281, 312, 445, 1940, 411, 291, 434, 16141, 1333, 295, 18350, 9769, 50968, 50968, 281, 257, 1729, 12905, 13, 51092, 51092, 286, 519, 11, 291, 458, 11, 1071, 2689, 472, 307, 2823, 9102, 13, 51304, 51304, 865, 13, 51354, 51354, 8266, 16478, 13, 51404, 51404, 1743, 14093, 300, 366, 36967, 382, 257, 1322, 565, 294, 264, 37777, 13, 51608, 51608, 5780, 291, 4659, 380, 10711, 14093, 570, 309, 311, 516, 281, 312, 294, 428, 24438, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.18686858090487393, "compression_ratio": 1.580392156862745, "no_caption_prob": 8.139638339343946e-06}, {"id": 500, "seek": 184412, "start": 1844.12, "end": 1845.12, "text": " That is true.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 501, "seek": 184412, "start": 1845.12, "end": 1849.32, "text": " Well, not secrets, but it's production.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 502, "seek": 184412, "start": 1849.32, "end": 1850.32, "text": " Everything else.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 503, "seek": 184412, "start": 1850.32, "end": 1851.32, "text": " Yes.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 504, "seek": 184412, "start": 1851.32, "end": 1852.32, "text": " Mm hmm.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 505, "seek": 184412, "start": 1852.32, "end": 1853.32, "text": " Yeah.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 506, "seek": 184412, "start": 1853.32, "end": 1856.12, "text": " Wait, I should probably go back to work and remove a few things.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 507, "seek": 184412, "start": 1856.12, "end": 1860.28, "text": " You should go remove those secrets.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 508, "seek": 184412, "start": 1860.28, "end": 1865.1, "text": " So we've already covered a few projects that use code generation.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 509, "seek": 184412, "start": 1865.1, "end": 1867.06, "text": " So we've covered LMSPA.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 510, "seek": 184412, "start": 1867.06, "end": 1869.36, "text": " We've covered LMS tailwind modules.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 511, "seek": 184412, "start": 1869.36, "end": 1870.36, "text": " Yeah.", "tokens": [50364, 663, 307, 2074, 13, 50414, 50414, 1042, 11, 406, 14093, 11, 457, 309, 311, 4265, 13, 50624, 50624, 5471, 1646, 13, 50674, 50674, 1079, 13, 50724, 50724, 8266, 16478, 13, 50774, 50774, 865, 13, 50824, 50824, 3802, 11, 286, 820, 1391, 352, 646, 281, 589, 293, 4159, 257, 1326, 721, 13, 50964, 50964, 509, 820, 352, 4159, 729, 14093, 13, 51172, 51172, 407, 321, 600, 1217, 5343, 257, 1326, 4455, 300, 764, 3089, 5125, 13, 51413, 51413, 407, 321, 600, 5343, 441, 10288, 10297, 13, 51511, 51511, 492, 600, 5343, 441, 10288, 6838, 12199, 16679, 13, 51626, 51626, 865, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.2688482174506554, "compression_ratio": 1.5406698564593302, "no_caption_prob": 3.480426676105708e-05}, {"id": 512, "seek": 187036, "start": 1870.36, "end": 1877.34, "text": " I've seen a few other libraries which do code generation as you are probably familiar with", "tokens": [50364, 286, 600, 1612, 257, 1326, 661, 15148, 597, 360, 3089, 5125, 382, 291, 366, 1391, 4963, 365, 50713, 50713, 570, 300, 311, 428, 6194, 560, 791, 337, 3089, 5125, 7970, 13, 50940, 50940, 407, 5081, 7553, 575, 364, 2699, 76, 8062, 7372, 11, 597, 307, 257, 8062, 307, 411, 257, 1329, 420, 364, 10225, 295, 51343, 51343, 257, 6806, 2744, 13, 51406, 51406, 400, 309, 575, 257, 7372, 597, 575, 8062, 472, 11, 8062, 732, 11, 8062, 1045, 11, 493, 1826, 8062, 51756, 51756, 2625, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.17630601459079318, "compression_ratio": 1.6540284360189574, "no_caption_prob": 1.7230166122317314e-05}, {"id": 513, "seek": 187036, "start": 1877.34, "end": 1881.8799999999999, "text": " because that's your primary intents for code generation apparently.", "tokens": [50364, 286, 600, 1612, 257, 1326, 661, 15148, 597, 360, 3089, 5125, 382, 291, 366, 1391, 4963, 365, 50713, 50713, 570, 300, 311, 428, 6194, 560, 791, 337, 3089, 5125, 7970, 13, 50940, 50940, 407, 5081, 7553, 575, 364, 2699, 76, 8062, 7372, 11, 597, 307, 257, 8062, 307, 411, 257, 1329, 420, 364, 10225, 295, 51343, 51343, 257, 6806, 2744, 13, 51406, 51406, 400, 309, 575, 257, 7372, 597, 575, 8062, 472, 11, 8062, 732, 11, 8062, 1045, 11, 493, 1826, 8062, 51756, 51756, 2625, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.17630601459079318, "compression_ratio": 1.6540284360189574, "no_caption_prob": 1.7230166122317314e-05}, {"id": 514, "seek": 187036, "start": 1881.8799999999999, "end": 1889.9399999999998, "text": " So chat tech has an Elm vector package, which is a vector is like a list or an array of", "tokens": [50364, 286, 600, 1612, 257, 1326, 661, 15148, 597, 360, 3089, 5125, 382, 291, 366, 1391, 4963, 365, 50713, 50713, 570, 300, 311, 428, 6194, 560, 791, 337, 3089, 5125, 7970, 13, 50940, 50940, 407, 5081, 7553, 575, 364, 2699, 76, 8062, 7372, 11, 597, 307, 257, 8062, 307, 411, 257, 1329, 420, 364, 10225, 295, 51343, 51343, 257, 6806, 2744, 13, 51406, 51406, 400, 309, 575, 257, 7372, 597, 575, 8062, 472, 11, 8062, 732, 11, 8062, 1045, 11, 493, 1826, 8062, 51756, 51756, 2625, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.17630601459079318, "compression_ratio": 1.6540284360189574, "no_caption_prob": 1.7230166122317314e-05}, {"id": 515, "seek": 187036, "start": 1889.9399999999998, "end": 1891.1999999999998, "text": " a fixed size.", "tokens": [50364, 286, 600, 1612, 257, 1326, 661, 15148, 597, 360, 3089, 5125, 382, 291, 366, 1391, 4963, 365, 50713, 50713, 570, 300, 311, 428, 6194, 560, 791, 337, 3089, 5125, 7970, 13, 50940, 50940, 407, 5081, 7553, 575, 364, 2699, 76, 8062, 7372, 11, 597, 307, 257, 8062, 307, 411, 257, 1329, 420, 364, 10225, 295, 51343, 51343, 257, 6806, 2744, 13, 51406, 51406, 400, 309, 575, 257, 7372, 597, 575, 8062, 472, 11, 8062, 732, 11, 8062, 1045, 11, 493, 1826, 8062, 51756, 51756, 2625, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.17630601459079318, "compression_ratio": 1.6540284360189574, "no_caption_prob": 1.7230166122317314e-05}, {"id": 516, "seek": 187036, "start": 1891.1999999999998, "end": 1898.1999999999998, "text": " And it has a package which has vector one, vector two, vector three, up until vector", "tokens": [50364, 286, 600, 1612, 257, 1326, 661, 15148, 597, 360, 3089, 5125, 382, 291, 366, 1391, 4963, 365, 50713, 50713, 570, 300, 311, 428, 6194, 560, 791, 337, 3089, 5125, 7970, 13, 50940, 50940, 407, 5081, 7553, 575, 364, 2699, 76, 8062, 7372, 11, 597, 307, 257, 8062, 307, 411, 257, 1329, 420, 364, 10225, 295, 51343, 51343, 257, 6806, 2744, 13, 51406, 51406, 400, 309, 575, 257, 7372, 597, 575, 8062, 472, 11, 8062, 732, 11, 8062, 1045, 11, 493, 1826, 8062, 51756, 51756, 2625, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.17630601459079318, "compression_ratio": 1.6540284360189574, "no_caption_prob": 1.7230166122317314e-05}, {"id": 517, "seek": 187036, "start": 1898.1999999999998, "end": 1899.1999999999998, "text": " 50.", "tokens": [50364, 286, 600, 1612, 257, 1326, 661, 15148, 597, 360, 3089, 5125, 382, 291, 366, 1391, 4963, 365, 50713, 50713, 570, 300, 311, 428, 6194, 560, 791, 337, 3089, 5125, 7970, 13, 50940, 50940, 407, 5081, 7553, 575, 364, 2699, 76, 8062, 7372, 11, 597, 307, 257, 8062, 307, 411, 257, 1329, 420, 364, 10225, 295, 51343, 51343, 257, 6806, 2744, 13, 51406, 51406, 400, 309, 575, 257, 7372, 597, 575, 8062, 472, 11, 8062, 732, 11, 8062, 1045, 11, 493, 1826, 8062, 51756, 51756, 2625, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.17630601459079318, "compression_ratio": 1.6540284360189574, "no_caption_prob": 1.7230166122317314e-05}, {"id": 518, "seek": 189920, "start": 1899.2, "end": 1906.0800000000002, "text": " So all of those are modules with functions that go well with each of those.", "tokens": [50364, 407, 439, 295, 729, 366, 16679, 365, 6828, 300, 352, 731, 365, 1184, 295, 729, 13, 50708, 50708, 4919, 11, 1826, 4060, 13, 50814, 50814, 400, 436, 434, 1228, 264, 912, 3089, 337, 633, 472, 295, 729, 13, 50998, 50998, 400, 309, 576, 312, 38284, 293, 6713, 25806, 281, 2464, 552, 538, 1011, 13, 51213, 51213, 407, 437, 22268, 630, 456, 307, 2464, 257, 5755, 300, 23815, 729, 16679, 13, 51495, 51495, 400, 550, 415, 5936, 412, 19071, 3289, 4060, 16679, 13, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.16881655537804893, "compression_ratio": 1.6287128712871286, "no_caption_prob": 1.7777907487470657e-05}, {"id": 519, "seek": 189920, "start": 1906.0800000000002, "end": 1908.2, "text": " Sorry, until 60.", "tokens": [50364, 407, 439, 295, 729, 366, 16679, 365, 6828, 300, 352, 731, 365, 1184, 295, 729, 13, 50708, 50708, 4919, 11, 1826, 4060, 13, 50814, 50814, 400, 436, 434, 1228, 264, 912, 3089, 337, 633, 472, 295, 729, 13, 50998, 50998, 400, 309, 576, 312, 38284, 293, 6713, 25806, 281, 2464, 552, 538, 1011, 13, 51213, 51213, 407, 437, 22268, 630, 456, 307, 2464, 257, 5755, 300, 23815, 729, 16679, 13, 51495, 51495, 400, 550, 415, 5936, 412, 19071, 3289, 4060, 16679, 13, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.16881655537804893, "compression_ratio": 1.6287128712871286, "no_caption_prob": 1.7777907487470657e-05}, {"id": 520, "seek": 189920, "start": 1908.2, "end": 1911.88, "text": " And they're using the same code for every one of those.", "tokens": [50364, 407, 439, 295, 729, 366, 16679, 365, 6828, 300, 352, 731, 365, 1184, 295, 729, 13, 50708, 50708, 4919, 11, 1826, 4060, 13, 50814, 50814, 400, 436, 434, 1228, 264, 912, 3089, 337, 633, 472, 295, 729, 13, 50998, 50998, 400, 309, 576, 312, 38284, 293, 6713, 25806, 281, 2464, 552, 538, 1011, 13, 51213, 51213, 407, 437, 22268, 630, 456, 307, 2464, 257, 5755, 300, 23815, 729, 16679, 13, 51495, 51495, 400, 550, 415, 5936, 412, 19071, 3289, 4060, 16679, 13, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.16881655537804893, "compression_ratio": 1.6287128712871286, "no_caption_prob": 1.7777907487470657e-05}, {"id": 521, "seek": 189920, "start": 1911.88, "end": 1916.18, "text": " And it would be tedious and error prone to write them by hand.", "tokens": [50364, 407, 439, 295, 729, 366, 16679, 365, 6828, 300, 352, 731, 365, 1184, 295, 729, 13, 50708, 50708, 4919, 11, 1826, 4060, 13, 50814, 50814, 400, 436, 434, 1228, 264, 912, 3089, 337, 633, 472, 295, 729, 13, 50998, 50998, 400, 309, 576, 312, 38284, 293, 6713, 25806, 281, 2464, 552, 538, 1011, 13, 51213, 51213, 407, 437, 22268, 630, 456, 307, 2464, 257, 5755, 300, 23815, 729, 16679, 13, 51495, 51495, 400, 550, 415, 5936, 412, 19071, 3289, 4060, 16679, 13, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.16881655537804893, "compression_ratio": 1.6287128712871286, "no_caption_prob": 1.7777907487470657e-05}, {"id": 522, "seek": 189920, "start": 1916.18, "end": 1921.82, "text": " So what Chad did there is write a script that generates those modules.", "tokens": [50364, 407, 439, 295, 729, 366, 16679, 365, 6828, 300, 352, 731, 365, 1184, 295, 729, 13, 50708, 50708, 4919, 11, 1826, 4060, 13, 50814, 50814, 400, 436, 434, 1228, 264, 912, 3089, 337, 633, 472, 295, 729, 13, 50998, 50998, 400, 309, 576, 312, 38284, 293, 6713, 25806, 281, 2464, 552, 538, 1011, 13, 51213, 51213, 407, 437, 22268, 630, 456, 307, 2464, 257, 5755, 300, 23815, 729, 16679, 13, 51495, 51495, 400, 550, 415, 5936, 412, 19071, 3289, 4060, 16679, 13, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.16881655537804893, "compression_ratio": 1.6287128712871286, "no_caption_prob": 1.7777907487470657e-05}, {"id": 523, "seek": 189920, "start": 1921.82, "end": 1926.54, "text": " And then he stopped at arbitrarily 60 modules.", "tokens": [50364, 407, 439, 295, 729, 366, 16679, 365, 6828, 300, 352, 731, 365, 1184, 295, 729, 13, 50708, 50708, 4919, 11, 1826, 4060, 13, 50814, 50814, 400, 436, 434, 1228, 264, 912, 3089, 337, 633, 472, 295, 729, 13, 50998, 50998, 400, 309, 576, 312, 38284, 293, 6713, 25806, 281, 2464, 552, 538, 1011, 13, 51213, 51213, 407, 437, 22268, 630, 456, 307, 2464, 257, 5755, 300, 23815, 729, 16679, 13, 51495, 51495, 400, 550, 415, 5936, 412, 19071, 3289, 4060, 16679, 13, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.16881655537804893, "compression_ratio": 1.6287128712871286, "no_caption_prob": 1.7777907487470657e-05}, {"id": 524, "seek": 192654, "start": 1926.54, "end": 1931.3999999999999, "text": " So Rupert Smith created a few packages for working with AWS.", "tokens": [50364, 407, 497, 12879, 83, 8538, 2942, 257, 1326, 17401, 337, 1364, 365, 17650, 13, 50607, 50607, 407, 415, 4960, 2699, 76, 11, 2597, 11, 415, 4960, 2699, 76, 17650, 3089, 1049, 11, 597, 294, 1261, 4960, 472, 295, 702, 17401, 11, 51019, 51019, 597, 307, 1219, 5996, 970, 11, 597, 286, 500, 380, 458, 709, 466, 309, 11, 457, 415, 2544, 1238, 2919, 51239, 51239, 466, 309, 11, 597, 2516, 264, 11, 406, 264, 14333, 11, 457, 264, 9362, 21988, 490, 17650, 3328, 11, 51613, 51613, 293, 550, 7829, 17401, 281, 589, 365, 300, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10626740889115767, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.225146545242751e-06}, {"id": 525, "seek": 192654, "start": 1931.3999999999999, "end": 1939.6399999999999, "text": " So he uses Elm, sorry, he uses Elm AWS code gen, which in turn uses one of his packages,", "tokens": [50364, 407, 497, 12879, 83, 8538, 2942, 257, 1326, 17401, 337, 1364, 365, 17650, 13, 50607, 50607, 407, 415, 4960, 2699, 76, 11, 2597, 11, 415, 4960, 2699, 76, 17650, 3089, 1049, 11, 597, 294, 1261, 4960, 472, 295, 702, 17401, 11, 51019, 51019, 597, 307, 1219, 5996, 970, 11, 597, 286, 500, 380, 458, 709, 466, 309, 11, 457, 415, 2544, 1238, 2919, 51239, 51239, 466, 309, 11, 597, 2516, 264, 11, 406, 264, 14333, 11, 457, 264, 9362, 21988, 490, 17650, 3328, 11, 51613, 51613, 293, 550, 7829, 17401, 281, 589, 365, 300, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10626740889115767, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.225146545242751e-06}, {"id": 526, "seek": 192654, "start": 1939.6399999999999, "end": 1944.04, "text": " which is called Salix, which I don't know much about it, but he seems pretty excited", "tokens": [50364, 407, 497, 12879, 83, 8538, 2942, 257, 1326, 17401, 337, 1364, 365, 17650, 13, 50607, 50607, 407, 415, 4960, 2699, 76, 11, 2597, 11, 415, 4960, 2699, 76, 17650, 3089, 1049, 11, 597, 294, 1261, 4960, 472, 295, 702, 17401, 11, 51019, 51019, 597, 307, 1219, 5996, 970, 11, 597, 286, 500, 380, 458, 709, 466, 309, 11, 457, 415, 2544, 1238, 2919, 51239, 51239, 466, 309, 11, 597, 2516, 264, 11, 406, 264, 14333, 11, 457, 264, 9362, 21988, 490, 17650, 3328, 11, 51613, 51613, 293, 550, 7829, 17401, 281, 589, 365, 300, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10626740889115767, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.225146545242751e-06}, {"id": 527, "seek": 192654, "start": 1944.04, "end": 1951.52, "text": " about it, which takes the, not the documentation, but the API definitions from AWS services,", "tokens": [50364, 407, 497, 12879, 83, 8538, 2942, 257, 1326, 17401, 337, 1364, 365, 17650, 13, 50607, 50607, 407, 415, 4960, 2699, 76, 11, 2597, 11, 415, 4960, 2699, 76, 17650, 3089, 1049, 11, 597, 294, 1261, 4960, 472, 295, 702, 17401, 11, 51019, 51019, 597, 307, 1219, 5996, 970, 11, 597, 286, 500, 380, 458, 709, 466, 309, 11, 457, 415, 2544, 1238, 2919, 51239, 51239, 466, 309, 11, 597, 2516, 264, 11, 406, 264, 14333, 11, 457, 264, 9362, 21988, 490, 17650, 3328, 11, 51613, 51613, 293, 550, 7829, 17401, 281, 589, 365, 300, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10626740889115767, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.225146545242751e-06}, {"id": 528, "seek": 192654, "start": 1951.52, "end": 1954.94, "text": " and then creates packages to work with that.", "tokens": [50364, 407, 497, 12879, 83, 8538, 2942, 257, 1326, 17401, 337, 1364, 365, 17650, 13, 50607, 50607, 407, 415, 4960, 2699, 76, 11, 2597, 11, 415, 4960, 2699, 76, 17650, 3089, 1049, 11, 597, 294, 1261, 4960, 472, 295, 702, 17401, 11, 51019, 51019, 597, 307, 1219, 5996, 970, 11, 597, 286, 500, 380, 458, 709, 466, 309, 11, 457, 415, 2544, 1238, 2919, 51239, 51239, 466, 309, 11, 597, 2516, 264, 11, 406, 264, 14333, 11, 457, 264, 9362, 21988, 490, 17650, 3328, 11, 51613, 51613, 293, 550, 7829, 17401, 281, 589, 365, 300, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10626740889115767, "compression_ratio": 1.6533333333333333, "no_caption_prob": 2.225146545242751e-06}, {"id": 529, "seek": 195494, "start": 1954.94, "end": 1962.88, "text": " So he has one to work with S, no, not with S3, with authentication, with the Cognito", "tokens": [50364, 407, 415, 575, 472, 281, 589, 365, 318, 11, 572, 11, 406, 365, 318, 18, 11, 365, 26643, 11, 365, 264, 383, 2912, 3528, 50761, 50761, 2643, 293, 2699, 525, 259, 17089, 13, 50887, 50887, 407, 291, 393, 11, 415, 630, 257, 665, 1691, 7970, 490, 11, 337, 17746, 21445, 300, 589, 731, 365, 729, 51259, 51259, 3328, 13, 51309, 51309, 286, 500, 380, 458, 498, 309, 311, 731, 1027, 294, 264, 2020, 411, 309, 575, 264, 2699, 76, 10675, 295, 19965, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.17340216525765353, "compression_ratio": 1.5098039215686274, "no_caption_prob": 5.954976131761214e-06}, {"id": 530, "seek": 195494, "start": 1962.88, "end": 1965.4, "text": " service and Elastin containers.", "tokens": [50364, 407, 415, 575, 472, 281, 589, 365, 318, 11, 572, 11, 406, 365, 318, 18, 11, 365, 26643, 11, 365, 264, 383, 2912, 3528, 50761, 50761, 2643, 293, 2699, 525, 259, 17089, 13, 50887, 50887, 407, 291, 393, 11, 415, 630, 257, 665, 1691, 7970, 490, 11, 337, 17746, 21445, 300, 589, 731, 365, 729, 51259, 51259, 3328, 13, 51309, 51309, 286, 500, 380, 458, 498, 309, 311, 731, 1027, 294, 264, 2020, 411, 309, 575, 264, 2699, 76, 10675, 295, 19965, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.17340216525765353, "compression_ratio": 1.5098039215686274, "no_caption_prob": 5.954976131761214e-06}, {"id": 531, "seek": 195494, "start": 1965.4, "end": 1972.8400000000001, "text": " So you can, he did a good job apparently from, for generating APIs that work well with those", "tokens": [50364, 407, 415, 575, 472, 281, 589, 365, 318, 11, 572, 11, 406, 365, 318, 18, 11, 365, 26643, 11, 365, 264, 383, 2912, 3528, 50761, 50761, 2643, 293, 2699, 525, 259, 17089, 13, 50887, 50887, 407, 291, 393, 11, 415, 630, 257, 665, 1691, 7970, 490, 11, 337, 17746, 21445, 300, 589, 731, 365, 729, 51259, 51259, 3328, 13, 51309, 51309, 286, 500, 380, 458, 498, 309, 311, 731, 1027, 294, 264, 2020, 411, 309, 575, 264, 2699, 76, 10675, 295, 19965, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.17340216525765353, "compression_ratio": 1.5098039215686274, "no_caption_prob": 5.954976131761214e-06}, {"id": 532, "seek": 195494, "start": 1972.8400000000001, "end": 1973.8400000000001, "text": " services.", "tokens": [50364, 407, 415, 575, 472, 281, 589, 365, 318, 11, 572, 11, 406, 365, 318, 18, 11, 365, 26643, 11, 365, 264, 383, 2912, 3528, 50761, 50761, 2643, 293, 2699, 525, 259, 17089, 13, 50887, 50887, 407, 291, 393, 11, 415, 630, 257, 665, 1691, 7970, 490, 11, 337, 17746, 21445, 300, 589, 731, 365, 729, 51259, 51259, 3328, 13, 51309, 51309, 286, 500, 380, 458, 498, 309, 311, 731, 1027, 294, 264, 2020, 411, 309, 575, 264, 2699, 76, 10675, 295, 19965, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.17340216525765353, "compression_ratio": 1.5098039215686274, "no_caption_prob": 5.954976131761214e-06}, {"id": 533, "seek": 195494, "start": 1973.8400000000001, "end": 1983.16, "text": " I don't know if it's well made in the sense like it has the Elm philosophy of preventing", "tokens": [50364, 407, 415, 575, 472, 281, 589, 365, 318, 11, 572, 11, 406, 365, 318, 18, 11, 365, 26643, 11, 365, 264, 383, 2912, 3528, 50761, 50761, 2643, 293, 2699, 525, 259, 17089, 13, 50887, 50887, 407, 291, 393, 11, 415, 630, 257, 665, 1691, 7970, 490, 11, 337, 17746, 21445, 300, 589, 731, 365, 729, 51259, 51259, 3328, 13, 51309, 51309, 286, 500, 380, 458, 498, 309, 311, 731, 1027, 294, 264, 2020, 411, 309, 575, 264, 2699, 76, 10675, 295, 19965, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.17340216525765353, "compression_ratio": 1.5098039215686274, "no_caption_prob": 5.954976131761214e-06}, {"id": 534, "seek": 198316, "start": 1983.16, "end": 1990.64, "text": " impossible states or if it's just a type safe way to create AWS service APIs.", "tokens": [50364, 6243, 4368, 420, 498, 309, 311, 445, 257, 2010, 3273, 636, 281, 1884, 17650, 2643, 21445, 13, 50738, 50738, 583, 286, 519, 412, 1935, 382, 257, 3096, 2290, 11, 597, 4045, 291, 281, 360, 1340, 11, 309, 311, 588, 1880, 13, 51094, 51094, 14711, 13, 51144, 51144, 865, 11, 286, 2378, 380, 1143, 300, 472, 13, 51275, 51275, 407, 1071, 3089, 5125, 2290, 11, 286, 600, 1096, 370, 709, 3089, 5125, 11, 286, 478, 411, 7027, 2837, 51574, 51574, 295, 439, 264, 3089, 5125, 286, 600, 1096, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.17227616517440134, "compression_ratio": 1.5981308411214954, "no_caption_prob": 5.955079814157216e-06}, {"id": 535, "seek": 198316, "start": 1990.64, "end": 1997.76, "text": " But I think at least as a base tool, which allows you to do anything, it's very interesting.", "tokens": [50364, 6243, 4368, 420, 498, 309, 311, 445, 257, 2010, 3273, 636, 281, 1884, 17650, 2643, 21445, 13, 50738, 50738, 583, 286, 519, 412, 1935, 382, 257, 3096, 2290, 11, 597, 4045, 291, 281, 360, 1340, 11, 309, 311, 588, 1880, 13, 51094, 51094, 14711, 13, 51144, 51144, 865, 11, 286, 2378, 380, 1143, 300, 472, 13, 51275, 51275, 407, 1071, 3089, 5125, 2290, 11, 286, 600, 1096, 370, 709, 3089, 5125, 11, 286, 478, 411, 7027, 2837, 51574, 51574, 295, 439, 264, 3089, 5125, 286, 600, 1096, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.17227616517440134, "compression_ratio": 1.5981308411214954, "no_caption_prob": 5.955079814157216e-06}, {"id": 536, "seek": 198316, "start": 1997.76, "end": 1998.76, "text": " Interesting.", "tokens": [50364, 6243, 4368, 420, 498, 309, 311, 445, 257, 2010, 3273, 636, 281, 1884, 17650, 2643, 21445, 13, 50738, 50738, 583, 286, 519, 412, 1935, 382, 257, 3096, 2290, 11, 597, 4045, 291, 281, 360, 1340, 11, 309, 311, 588, 1880, 13, 51094, 51094, 14711, 13, 51144, 51144, 865, 11, 286, 2378, 380, 1143, 300, 472, 13, 51275, 51275, 407, 1071, 3089, 5125, 2290, 11, 286, 600, 1096, 370, 709, 3089, 5125, 11, 286, 478, 411, 7027, 2837, 51574, 51574, 295, 439, 264, 3089, 5125, 286, 600, 1096, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.17227616517440134, "compression_ratio": 1.5981308411214954, "no_caption_prob": 5.955079814157216e-06}, {"id": 537, "seek": 198316, "start": 1998.76, "end": 2001.38, "text": " Yeah, I haven't used that one.", "tokens": [50364, 6243, 4368, 420, 498, 309, 311, 445, 257, 2010, 3273, 636, 281, 1884, 17650, 2643, 21445, 13, 50738, 50738, 583, 286, 519, 412, 1935, 382, 257, 3096, 2290, 11, 597, 4045, 291, 281, 360, 1340, 11, 309, 311, 588, 1880, 13, 51094, 51094, 14711, 13, 51144, 51144, 865, 11, 286, 2378, 380, 1143, 300, 472, 13, 51275, 51275, 407, 1071, 3089, 5125, 2290, 11, 286, 600, 1096, 370, 709, 3089, 5125, 11, 286, 478, 411, 7027, 2837, 51574, 51574, 295, 439, 264, 3089, 5125, 286, 600, 1096, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.17227616517440134, "compression_ratio": 1.5981308411214954, "no_caption_prob": 5.955079814157216e-06}, {"id": 538, "seek": 198316, "start": 2001.38, "end": 2007.3600000000001, "text": " So another code generation tool, I've done so much code generation, I'm like losing track", "tokens": [50364, 6243, 4368, 420, 498, 309, 311, 445, 257, 2010, 3273, 636, 281, 1884, 17650, 2643, 21445, 13, 50738, 50738, 583, 286, 519, 412, 1935, 382, 257, 3096, 2290, 11, 597, 4045, 291, 281, 360, 1340, 11, 309, 311, 588, 1880, 13, 51094, 51094, 14711, 13, 51144, 51144, 865, 11, 286, 2378, 380, 1143, 300, 472, 13, 51275, 51275, 407, 1071, 3089, 5125, 2290, 11, 286, 600, 1096, 370, 709, 3089, 5125, 11, 286, 478, 411, 7027, 2837, 51574, 51574, 295, 439, 264, 3089, 5125, 286, 600, 1096, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.17227616517440134, "compression_ratio": 1.5981308411214954, "no_caption_prob": 5.955079814157216e-06}, {"id": 539, "seek": 198316, "start": 2007.3600000000001, "end": 2010.0400000000002, "text": " of all the code generation I've done.", "tokens": [50364, 6243, 4368, 420, 498, 309, 311, 445, 257, 2010, 3273, 636, 281, 1884, 17650, 2643, 21445, 13, 50738, 50738, 583, 286, 519, 412, 1935, 382, 257, 3096, 2290, 11, 597, 4045, 291, 281, 360, 1340, 11, 309, 311, 588, 1880, 13, 51094, 51094, 14711, 13, 51144, 51144, 865, 11, 286, 2378, 380, 1143, 300, 472, 13, 51275, 51275, 407, 1071, 3089, 5125, 2290, 11, 286, 600, 1096, 370, 709, 3089, 5125, 11, 286, 478, 411, 7027, 2837, 51574, 51574, 295, 439, 264, 3089, 5125, 286, 600, 1096, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.17227616517440134, "compression_ratio": 1.5981308411214954, "no_caption_prob": 5.955079814157216e-06}, {"id": 540, "seek": 201004, "start": 2010.04, "end": 2013.56, "text": " But Elm TS Interop is a code generation tool.", "tokens": [50364, 583, 2699, 76, 37645, 5751, 404, 307, 257, 3089, 5125, 2290, 13, 50540, 50540, 467, 2314, 281, 8460, 11, 2831, 813, 17746, 2699, 76, 3089, 11, 309, 311, 767, 17746, 15576, 14237, 50802, 50802, 27606, 7098, 13, 50961, 50961, 583, 309, 311, 300, 912, 1333, 295, 8665, 295, 1419, 257, 2689, 4009, 295, 3494, 293, 5145, 729, 51184, 51184, 294, 20271, 13, 51234, 51234, 467, 311, 445, 300, 309, 1985, 264, 661, 636, 926, 13, 51312, 51312, 7156, 295, 1940, 512, 8320, 34078, 293, 1455, 264, 2699, 76, 31958, 3650, 295, 309, 807, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.09898959484296976, "compression_ratio": 1.6276150627615062, "no_caption_prob": 1.6187230357900262e-05}, {"id": 541, "seek": 201004, "start": 2013.56, "end": 2018.8, "text": " It happens to generate, rather than generating Elm code, it's actually generating TypeScript", "tokens": [50364, 583, 2699, 76, 37645, 5751, 404, 307, 257, 3089, 5125, 2290, 13, 50540, 50540, 467, 2314, 281, 8460, 11, 2831, 813, 17746, 2699, 76, 3089, 11, 309, 311, 767, 17746, 15576, 14237, 50802, 50802, 27606, 7098, 13, 50961, 50961, 583, 309, 311, 300, 912, 1333, 295, 8665, 295, 1419, 257, 2689, 4009, 295, 3494, 293, 5145, 729, 51184, 51184, 294, 20271, 13, 51234, 51234, 467, 311, 445, 300, 309, 1985, 264, 661, 636, 926, 13, 51312, 51312, 7156, 295, 1940, 512, 8320, 34078, 293, 1455, 264, 2699, 76, 31958, 3650, 295, 309, 807, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.09898959484296976, "compression_ratio": 1.6276150627615062, "no_caption_prob": 1.6187230357900262e-05}, {"id": 542, "seek": 201004, "start": 2018.8, "end": 2021.98, "text": " declaration files.", "tokens": [50364, 583, 2699, 76, 37645, 5751, 404, 307, 257, 3089, 5125, 2290, 13, 50540, 50540, 467, 2314, 281, 8460, 11, 2831, 813, 17746, 2699, 76, 3089, 11, 309, 311, 767, 17746, 15576, 14237, 50802, 50802, 27606, 7098, 13, 50961, 50961, 583, 309, 311, 300, 912, 1333, 295, 8665, 295, 1419, 257, 2689, 4009, 295, 3494, 293, 5145, 729, 51184, 51184, 294, 20271, 13, 51234, 51234, 467, 311, 445, 300, 309, 1985, 264, 661, 636, 926, 13, 51312, 51312, 7156, 295, 1940, 512, 8320, 34078, 293, 1455, 264, 2699, 76, 31958, 3650, 295, 309, 807, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.09898959484296976, "compression_ratio": 1.6276150627615062, "no_caption_prob": 1.6187230357900262e-05}, {"id": 543, "seek": 201004, "start": 2021.98, "end": 2026.44, "text": " But it's that same sort of principle of having a common source of truth and keeping those", "tokens": [50364, 583, 2699, 76, 37645, 5751, 404, 307, 257, 3089, 5125, 2290, 13, 50540, 50540, 467, 2314, 281, 8460, 11, 2831, 813, 17746, 2699, 76, 3089, 11, 309, 311, 767, 17746, 15576, 14237, 50802, 50802, 27606, 7098, 13, 50961, 50961, 583, 309, 311, 300, 912, 1333, 295, 8665, 295, 1419, 257, 2689, 4009, 295, 3494, 293, 5145, 729, 51184, 51184, 294, 20271, 13, 51234, 51234, 467, 311, 445, 300, 309, 1985, 264, 661, 636, 926, 13, 51312, 51312, 7156, 295, 1940, 512, 8320, 34078, 293, 1455, 264, 2699, 76, 31958, 3650, 295, 309, 807, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.09898959484296976, "compression_ratio": 1.6276150627615062, "no_caption_prob": 1.6187230357900262e-05}, {"id": 544, "seek": 201004, "start": 2026.44, "end": 2027.44, "text": " in sync.", "tokens": [50364, 583, 2699, 76, 37645, 5751, 404, 307, 257, 3089, 5125, 2290, 13, 50540, 50540, 467, 2314, 281, 8460, 11, 2831, 813, 17746, 2699, 76, 3089, 11, 309, 311, 767, 17746, 15576, 14237, 50802, 50802, 27606, 7098, 13, 50961, 50961, 583, 309, 311, 300, 912, 1333, 295, 8665, 295, 1419, 257, 2689, 4009, 295, 3494, 293, 5145, 729, 51184, 51184, 294, 20271, 13, 51234, 51234, 467, 311, 445, 300, 309, 1985, 264, 661, 636, 926, 13, 51312, 51312, 7156, 295, 1940, 512, 8320, 34078, 293, 1455, 264, 2699, 76, 31958, 3650, 295, 309, 807, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.09898959484296976, "compression_ratio": 1.6276150627615062, "no_caption_prob": 1.6187230357900262e-05}, {"id": 545, "seek": 201004, "start": 2027.44, "end": 2029.0, "text": " It's just that it works the other way around.", "tokens": [50364, 583, 2699, 76, 37645, 5751, 404, 307, 257, 3089, 5125, 2290, 13, 50540, 50540, 467, 2314, 281, 8460, 11, 2831, 813, 17746, 2699, 76, 3089, 11, 309, 311, 767, 17746, 15576, 14237, 50802, 50802, 27606, 7098, 13, 50961, 50961, 583, 309, 311, 300, 912, 1333, 295, 8665, 295, 1419, 257, 2689, 4009, 295, 3494, 293, 5145, 729, 51184, 51184, 294, 20271, 13, 51234, 51234, 467, 311, 445, 300, 309, 1985, 264, 661, 636, 926, 13, 51312, 51312, 7156, 295, 1940, 512, 8320, 34078, 293, 1455, 264, 2699, 76, 31958, 3650, 295, 309, 807, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.09898959484296976, "compression_ratio": 1.6276150627615062, "no_caption_prob": 1.6187230357900262e-05}, {"id": 546, "seek": 201004, "start": 2029.0, "end": 2035.48, "text": " Instead of taking some external schema and making the Elm compiler aware of it through", "tokens": [50364, 583, 2699, 76, 37645, 5751, 404, 307, 257, 3089, 5125, 2290, 13, 50540, 50540, 467, 2314, 281, 8460, 11, 2831, 813, 17746, 2699, 76, 3089, 11, 309, 311, 767, 17746, 15576, 14237, 50802, 50802, 27606, 7098, 13, 50961, 50961, 583, 309, 311, 300, 912, 1333, 295, 8665, 295, 1419, 257, 2689, 4009, 295, 3494, 293, 5145, 729, 51184, 51184, 294, 20271, 13, 51234, 51234, 467, 311, 445, 300, 309, 1985, 264, 661, 636, 926, 13, 51312, 51312, 7156, 295, 1940, 512, 8320, 34078, 293, 1455, 264, 2699, 76, 31958, 3650, 295, 309, 807, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.09898959484296976, "compression_ratio": 1.6276150627615062, "no_caption_prob": 1.6187230357900262e-05}, {"id": 547, "seek": 203548, "start": 2035.48, "end": 2043.4, "text": " generating Elm code, it's taking your Elm decoders and encoders and it's making TypeScript", "tokens": [50364, 17746, 2699, 76, 3089, 11, 309, 311, 1940, 428, 2699, 76, 979, 378, 433, 293, 2058, 378, 433, 293, 309, 311, 1455, 15576, 14237, 50760, 50760, 3650, 295, 729, 370, 291, 393, 764, 729, 18160, 13, 50944, 50944, 467, 767, 11, 264, 447, 3037, 4960, 512, 3089, 5125, 281, 652, 309, 257, 707, 857, 544, 10851, 51304, 51304, 370, 291, 393, 362, 257, 10088, 689, 291, 445, 19710, 613, 1192, 1496, 4190, 294, 428, 1333, 295, 2436, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.10521675627908589, "compression_ratio": 1.6326530612244898, "no_caption_prob": 1.6700781998224556e-05}, {"id": 548, "seek": 203548, "start": 2043.4, "end": 2047.08, "text": " aware of those so you can use those ports.", "tokens": [50364, 17746, 2699, 76, 3089, 11, 309, 311, 1940, 428, 2699, 76, 979, 378, 433, 293, 2058, 378, 433, 293, 309, 311, 1455, 15576, 14237, 50760, 50760, 3650, 295, 729, 370, 291, 393, 764, 729, 18160, 13, 50944, 50944, 467, 767, 11, 264, 447, 3037, 4960, 512, 3089, 5125, 281, 652, 309, 257, 707, 857, 544, 10851, 51304, 51304, 370, 291, 393, 362, 257, 10088, 689, 291, 445, 19710, 613, 1192, 1496, 4190, 294, 428, 1333, 295, 2436, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.10521675627908589, "compression_ratio": 1.6326530612244898, "no_caption_prob": 1.6700781998224556e-05}, {"id": 549, "seek": 203548, "start": 2047.08, "end": 2054.28, "text": " It actually, the pro version uses some code generation to make it a little bit more convenient", "tokens": [50364, 17746, 2699, 76, 3089, 11, 309, 311, 1940, 428, 2699, 76, 979, 378, 433, 293, 2058, 378, 433, 293, 309, 311, 1455, 15576, 14237, 50760, 50760, 3650, 295, 729, 370, 291, 393, 764, 729, 18160, 13, 50944, 50944, 467, 767, 11, 264, 447, 3037, 4960, 512, 3089, 5125, 281, 652, 309, 257, 707, 857, 544, 10851, 51304, 51304, 370, 291, 393, 362, 257, 10088, 689, 291, 445, 19710, 613, 1192, 1496, 4190, 294, 428, 1333, 295, 2436, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.10521675627908589, "compression_ratio": 1.6326530612244898, "no_caption_prob": 1.6700781998224556e-05}, {"id": 550, "seek": 203548, "start": 2054.28, "end": 2059.54, "text": " so you can have a module where you just declare these top level values in your sort of port", "tokens": [50364, 17746, 2699, 76, 3089, 11, 309, 311, 1940, 428, 2699, 76, 979, 378, 433, 293, 2058, 378, 433, 293, 309, 311, 1455, 15576, 14237, 50760, 50760, 3650, 295, 729, 370, 291, 393, 764, 729, 18160, 13, 50944, 50944, 467, 767, 11, 264, 447, 3037, 4960, 512, 3089, 5125, 281, 652, 309, 257, 707, 857, 544, 10851, 51304, 51304, 370, 291, 393, 362, 257, 10088, 689, 291, 445, 19710, 613, 1192, 1496, 4190, 294, 428, 1333, 295, 2436, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.10521675627908589, "compression_ratio": 1.6326530612244898, "no_caption_prob": 1.6700781998224556e-05}, {"id": 551, "seek": 205954, "start": 2059.54, "end": 2068.4, "text": " definitions file and then it takes those and for every top level exposed encoder, it generates", "tokens": [50364, 21988, 3991, 293, 550, 309, 2516, 729, 293, 337, 633, 1192, 1496, 9495, 2058, 19866, 11, 309, 23815, 50807, 50807, 257, 2436, 490, 2699, 76, 281, 15778, 293, 337, 633, 1192, 1496, 979, 19866, 11, 309, 23815, 490, 15778, 51216, 51216, 281, 2699, 76, 18160, 5969, 1080, 1315, 307, 3235, 12109, 11, 294, 597, 1389, 309, 23815, 428, 3235, 12109, 979, 19866, 13, 51495, 51495, 407, 586, 456, 311, 1071, 2010, 295, 3089, 5125, 597, 321, 2378, 380, 5768, 666, 1939, 11, 597, 307, 51781, 51781], "temperature": 0.0, "avg_logprob": -0.12407658316872337, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.4510129403788596e-05}, {"id": 552, "seek": 205954, "start": 2068.4, "end": 2076.58, "text": " a port from Elm to JavaScript and for every top level decoder, it generates from JavaScript", "tokens": [50364, 21988, 3991, 293, 550, 309, 2516, 729, 293, 337, 633, 1192, 1496, 9495, 2058, 19866, 11, 309, 23815, 50807, 50807, 257, 2436, 490, 2699, 76, 281, 15778, 293, 337, 633, 1192, 1496, 979, 19866, 11, 309, 23815, 490, 15778, 51216, 51216, 281, 2699, 76, 18160, 5969, 1080, 1315, 307, 3235, 12109, 11, 294, 597, 1389, 309, 23815, 428, 3235, 12109, 979, 19866, 13, 51495, 51495, 407, 586, 456, 311, 1071, 2010, 295, 3089, 5125, 597, 321, 2378, 380, 5768, 666, 1939, 11, 597, 307, 51781, 51781], "temperature": 0.0, "avg_logprob": -0.12407658316872337, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.4510129403788596e-05}, {"id": 553, "seek": 205954, "start": 2076.58, "end": 2082.16, "text": " to Elm ports unless its name is Flags, in which case it generates your Flags decoder.", "tokens": [50364, 21988, 3991, 293, 550, 309, 2516, 729, 293, 337, 633, 1192, 1496, 9495, 2058, 19866, 11, 309, 23815, 50807, 50807, 257, 2436, 490, 2699, 76, 281, 15778, 293, 337, 633, 1192, 1496, 979, 19866, 11, 309, 23815, 490, 15778, 51216, 51216, 281, 2699, 76, 18160, 5969, 1080, 1315, 307, 3235, 12109, 11, 294, 597, 1389, 309, 23815, 428, 3235, 12109, 979, 19866, 13, 51495, 51495, 407, 586, 456, 311, 1071, 2010, 295, 3089, 5125, 597, 321, 2378, 380, 5768, 666, 1939, 11, 597, 307, 51781, 51781], "temperature": 0.0, "avg_logprob": -0.12407658316872337, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.4510129403788596e-05}, {"id": 554, "seek": 205954, "start": 2082.16, "end": 2087.88, "text": " So now there's another type of code generation which we haven't gotten into yet, which is", "tokens": [50364, 21988, 3991, 293, 550, 309, 2516, 729, 293, 337, 633, 1192, 1496, 9495, 2058, 19866, 11, 309, 23815, 50807, 50807, 257, 2436, 490, 2699, 76, 281, 15778, 293, 337, 633, 1192, 1496, 979, 19866, 11, 309, 23815, 490, 15778, 51216, 51216, 281, 2699, 76, 18160, 5969, 1080, 1315, 307, 3235, 12109, 11, 294, 597, 1389, 309, 23815, 428, 3235, 12109, 979, 19866, 13, 51495, 51495, 407, 586, 456, 311, 1071, 2010, 295, 3089, 5125, 597, 321, 2378, 380, 5768, 666, 1939, 11, 597, 307, 51781, 51781], "temperature": 0.0, "avg_logprob": -0.12407658316872337, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.4510129403788596e-05}, {"id": 555, "seek": 208788, "start": 2087.88, "end": 2089.84, "text": " for scaffolding.", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 556, "seek": 208788, "start": 2089.84, "end": 2091.6, "text": " I was expecting that one.", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 557, "seek": 208788, "start": 2091.6, "end": 2092.6, "text": " Yeah.", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 558, "seek": 208788, "start": 2092.6, "end": 2095.32, "text": " So these are like, there's like, what's the mental model?", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 559, "seek": 208788, "start": 2095.32, "end": 2099.48, "text": " And then there's like, what is the purpose of the code generation?", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 560, "seek": 208788, "start": 2099.48, "end": 2105.04, "text": " So we've talked about keeping your sources of truth in sync, but scaffolding is another", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 561, "seek": 208788, "start": 2105.04, "end": 2107.6400000000003, "text": " really interesting area.", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 562, "seek": 208788, "start": 2107.6400000000003, "end": 2110.6400000000003, "text": " So you've got some examples written down of scaffolding here.", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 563, "seek": 208788, "start": 2110.6400000000003, "end": 2111.6400000000003, "text": " Yeah.", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 564, "seek": 208788, "start": 2111.6400000000003, "end": 2113.78, "text": " So Elm SPA is one of those.", "tokens": [50364, 337, 44094, 278, 13, 50462, 50462, 286, 390, 9650, 300, 472, 13, 50550, 50550, 865, 13, 50600, 50600, 407, 613, 366, 411, 11, 456, 311, 411, 11, 437, 311, 264, 4973, 2316, 30, 50736, 50736, 400, 550, 456, 311, 411, 11, 437, 307, 264, 4334, 295, 264, 3089, 5125, 30, 50944, 50944, 407, 321, 600, 2825, 466, 5145, 428, 7139, 295, 3494, 294, 20271, 11, 457, 44094, 278, 307, 1071, 51222, 51222, 534, 1880, 1859, 13, 51352, 51352, 407, 291, 600, 658, 512, 5110, 3720, 760, 295, 44094, 278, 510, 13, 51502, 51502, 865, 13, 51552, 51552, 407, 2699, 76, 8420, 32, 307, 472, 295, 729, 13, 51659, 51659], "temperature": 0.0, "avg_logprob": -0.21609660311862156, "compression_ratio": 1.646551724137931, "no_caption_prob": 9.08041783986846e-06}, {"id": 565, "seek": 211378, "start": 2113.78, "end": 2121.0800000000004, "text": " It creates a new project with a bunch of predefined pages and files and Elm JSON.", "tokens": [50364, 467, 7829, 257, 777, 1716, 365, 257, 3840, 295, 659, 37716, 7183, 293, 7098, 293, 2699, 76, 31828, 13, 50729, 50729, 407, 257, 688, 295, 721, 1217, 13, 50813, 50813, 2699, 76, 3131, 611, 575, 257, 777, 4978, 293, 257, 777, 7372, 5622, 420, 16901, 13, 51111, 51111, 407, 257, 777, 7372, 7829, 257, 777, 1716, 7696, 13, 51269, 51269, 467, 311, 406, 445, 257, 18331, 26506, 13, 51365, 51365, 467, 311, 534, 5125, 570, 291, 366, 2902, 364, 1589, 293, 550, 309, 23815, 257, 1716, 51629, 51629, 2361, 322, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14960259199142456, "compression_ratio": 1.7122641509433962, "no_caption_prob": 2.6273299226886593e-05}, {"id": 566, "seek": 211378, "start": 2121.0800000000004, "end": 2122.76, "text": " So a lot of things already.", "tokens": [50364, 467, 7829, 257, 777, 1716, 365, 257, 3840, 295, 659, 37716, 7183, 293, 7098, 293, 2699, 76, 31828, 13, 50729, 50729, 407, 257, 688, 295, 721, 1217, 13, 50813, 50813, 2699, 76, 3131, 611, 575, 257, 777, 4978, 293, 257, 777, 7372, 5622, 420, 16901, 13, 51111, 51111, 407, 257, 777, 7372, 7829, 257, 777, 1716, 7696, 13, 51269, 51269, 467, 311, 406, 445, 257, 18331, 26506, 13, 51365, 51365, 467, 311, 534, 5125, 570, 291, 366, 2902, 364, 1589, 293, 550, 309, 23815, 257, 1716, 51629, 51629, 2361, 322, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14960259199142456, "compression_ratio": 1.7122641509433962, "no_caption_prob": 2.6273299226886593e-05}, {"id": 567, "seek": 211378, "start": 2122.76, "end": 2128.7200000000003, "text": " Elm review also has a new rule and a new package command or commands.", "tokens": [50364, 467, 7829, 257, 777, 1716, 365, 257, 3840, 295, 659, 37716, 7183, 293, 7098, 293, 2699, 76, 31828, 13, 50729, 50729, 407, 257, 688, 295, 721, 1217, 13, 50813, 50813, 2699, 76, 3131, 611, 575, 257, 777, 4978, 293, 257, 777, 7372, 5622, 420, 16901, 13, 51111, 51111, 407, 257, 777, 7372, 7829, 257, 777, 1716, 7696, 13, 51269, 51269, 467, 311, 406, 445, 257, 18331, 26506, 13, 51365, 51365, 467, 311, 534, 5125, 570, 291, 366, 2902, 364, 1589, 293, 550, 309, 23815, 257, 1716, 51629, 51629, 2361, 322, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14960259199142456, "compression_ratio": 1.7122641509433962, "no_caption_prob": 2.6273299226886593e-05}, {"id": 568, "seek": 211378, "start": 2128.7200000000003, "end": 2131.88, "text": " So a new package creates a new project entirely.", "tokens": [50364, 467, 7829, 257, 777, 1716, 365, 257, 3840, 295, 659, 37716, 7183, 293, 7098, 293, 2699, 76, 31828, 13, 50729, 50729, 407, 257, 688, 295, 721, 1217, 13, 50813, 50813, 2699, 76, 3131, 611, 575, 257, 777, 4978, 293, 257, 777, 7372, 5622, 420, 16901, 13, 51111, 51111, 407, 257, 777, 7372, 7829, 257, 777, 1716, 7696, 13, 51269, 51269, 467, 311, 406, 445, 257, 18331, 26506, 13, 51365, 51365, 467, 311, 534, 5125, 570, 291, 366, 2902, 364, 1589, 293, 550, 309, 23815, 257, 1716, 51629, 51629, 2361, 322, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14960259199142456, "compression_ratio": 1.7122641509433962, "no_caption_prob": 2.6273299226886593e-05}, {"id": 569, "seek": 211378, "start": 2131.88, "end": 2133.8, "text": " It's not just a git clone.", "tokens": [50364, 467, 7829, 257, 777, 1716, 365, 257, 3840, 295, 659, 37716, 7183, 293, 7098, 293, 2699, 76, 31828, 13, 50729, 50729, 407, 257, 688, 295, 721, 1217, 13, 50813, 50813, 2699, 76, 3131, 611, 575, 257, 777, 4978, 293, 257, 777, 7372, 5622, 420, 16901, 13, 51111, 51111, 407, 257, 777, 7372, 7829, 257, 777, 1716, 7696, 13, 51269, 51269, 467, 311, 406, 445, 257, 18331, 26506, 13, 51365, 51365, 467, 311, 534, 5125, 570, 291, 366, 2902, 364, 1589, 293, 550, 309, 23815, 257, 1716, 51629, 51629, 2361, 322, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14960259199142456, "compression_ratio": 1.7122641509433962, "no_caption_prob": 2.6273299226886593e-05}, {"id": 570, "seek": 211378, "start": 2133.8, "end": 2139.0800000000004, "text": " It's really generation because you are giving an information and then it generates a project", "tokens": [50364, 467, 7829, 257, 777, 1716, 365, 257, 3840, 295, 659, 37716, 7183, 293, 7098, 293, 2699, 76, 31828, 13, 50729, 50729, 407, 257, 688, 295, 721, 1217, 13, 50813, 50813, 2699, 76, 3131, 611, 575, 257, 777, 4978, 293, 257, 777, 7372, 5622, 420, 16901, 13, 51111, 51111, 407, 257, 777, 7372, 7829, 257, 777, 1716, 7696, 13, 51269, 51269, 467, 311, 406, 445, 257, 18331, 26506, 13, 51365, 51365, 467, 311, 534, 5125, 570, 291, 366, 2902, 364, 1589, 293, 550, 309, 23815, 257, 1716, 51629, 51629, 2361, 322, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14960259199142456, "compression_ratio": 1.7122641509433962, "no_caption_prob": 2.6273299226886593e-05}, {"id": 571, "seek": 211378, "start": 2139.0800000000004, "end": 2140.0800000000004, "text": " based on that.", "tokens": [50364, 467, 7829, 257, 777, 1716, 365, 257, 3840, 295, 659, 37716, 7183, 293, 7098, 293, 2699, 76, 31828, 13, 50729, 50729, 407, 257, 688, 295, 721, 1217, 13, 50813, 50813, 2699, 76, 3131, 611, 575, 257, 777, 4978, 293, 257, 777, 7372, 5622, 420, 16901, 13, 51111, 51111, 407, 257, 777, 7372, 7829, 257, 777, 1716, 7696, 13, 51269, 51269, 467, 311, 406, 445, 257, 18331, 26506, 13, 51365, 51365, 467, 311, 534, 5125, 570, 291, 366, 2902, 364, 1589, 293, 550, 309, 23815, 257, 1716, 51629, 51629, 2361, 322, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14960259199142456, "compression_ratio": 1.7122641509433962, "no_caption_prob": 2.6273299226886593e-05}, {"id": 572, "seek": 214008, "start": 2140.08, "end": 2145.88, "text": " And same thing for the new rule, you give it a rule name and generates some scaffold,", "tokens": [50364, 400, 912, 551, 337, 264, 777, 4978, 11, 291, 976, 309, 257, 4978, 1315, 293, 23815, 512, 44094, 11, 50654, 50654, 512, 3096, 7098, 365, 264, 1589, 300, 291, 2729, 309, 293, 2962, 264, 1472, 295, 264, 7098, 50896, 50896, 300, 366, 5176, 281, 312, 456, 13, 50992, 50992, 407, 1338, 11, 44094, 278, 294, 341, 1389, 307, 544, 466, 1242, 1409, 2831, 813, 1419, 257, 51291, 51291, 4009, 295, 3494, 11, 286, 519, 13, 51368, 51368, 1079, 11, 558, 13, 51418, 51418, 467, 2709, 291, 257, 10851, 2891, 935, 11, 457, 309, 311, 337, 264, 44094, 278, 3109, 11, 291, 434, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16633982028601305, "compression_ratio": 1.6938775510204083, "no_caption_prob": 3.5355456930119544e-05}, {"id": 573, "seek": 214008, "start": 2145.88, "end": 2150.72, "text": " some base files with the information that you gave it and changes the rest of the files", "tokens": [50364, 400, 912, 551, 337, 264, 777, 4978, 11, 291, 976, 309, 257, 4978, 1315, 293, 23815, 512, 44094, 11, 50654, 50654, 512, 3096, 7098, 365, 264, 1589, 300, 291, 2729, 309, 293, 2962, 264, 1472, 295, 264, 7098, 50896, 50896, 300, 366, 5176, 281, 312, 456, 13, 50992, 50992, 407, 1338, 11, 44094, 278, 294, 341, 1389, 307, 544, 466, 1242, 1409, 2831, 813, 1419, 257, 51291, 51291, 4009, 295, 3494, 11, 286, 519, 13, 51368, 51368, 1079, 11, 558, 13, 51418, 51418, 467, 2709, 291, 257, 10851, 2891, 935, 11, 457, 309, 311, 337, 264, 44094, 278, 3109, 11, 291, 434, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16633982028601305, "compression_ratio": 1.6938775510204083, "no_caption_prob": 3.5355456930119544e-05}, {"id": 574, "seek": 214008, "start": 2150.72, "end": 2152.64, "text": " that are expected to be there.", "tokens": [50364, 400, 912, 551, 337, 264, 777, 4978, 11, 291, 976, 309, 257, 4978, 1315, 293, 23815, 512, 44094, 11, 50654, 50654, 512, 3096, 7098, 365, 264, 1589, 300, 291, 2729, 309, 293, 2962, 264, 1472, 295, 264, 7098, 50896, 50896, 300, 366, 5176, 281, 312, 456, 13, 50992, 50992, 407, 1338, 11, 44094, 278, 294, 341, 1389, 307, 544, 466, 1242, 1409, 2831, 813, 1419, 257, 51291, 51291, 4009, 295, 3494, 11, 286, 519, 13, 51368, 51368, 1079, 11, 558, 13, 51418, 51418, 467, 2709, 291, 257, 10851, 2891, 935, 11, 457, 309, 311, 337, 264, 44094, 278, 3109, 11, 291, 434, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16633982028601305, "compression_ratio": 1.6938775510204083, "no_caption_prob": 3.5355456930119544e-05}, {"id": 575, "seek": 214008, "start": 2152.64, "end": 2158.62, "text": " So yeah, scaffolding in this case is more about getting started rather than having a", "tokens": [50364, 400, 912, 551, 337, 264, 777, 4978, 11, 291, 976, 309, 257, 4978, 1315, 293, 23815, 512, 44094, 11, 50654, 50654, 512, 3096, 7098, 365, 264, 1589, 300, 291, 2729, 309, 293, 2962, 264, 1472, 295, 264, 7098, 50896, 50896, 300, 366, 5176, 281, 312, 456, 13, 50992, 50992, 407, 1338, 11, 44094, 278, 294, 341, 1389, 307, 544, 466, 1242, 1409, 2831, 813, 1419, 257, 51291, 51291, 4009, 295, 3494, 11, 286, 519, 13, 51368, 51368, 1079, 11, 558, 13, 51418, 51418, 467, 2709, 291, 257, 10851, 2891, 935, 11, 457, 309, 311, 337, 264, 44094, 278, 3109, 11, 291, 434, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16633982028601305, "compression_ratio": 1.6938775510204083, "no_caption_prob": 3.5355456930119544e-05}, {"id": 576, "seek": 214008, "start": 2158.62, "end": 2160.16, "text": " source of truth, I think.", "tokens": [50364, 400, 912, 551, 337, 264, 777, 4978, 11, 291, 976, 309, 257, 4978, 1315, 293, 23815, 512, 44094, 11, 50654, 50654, 512, 3096, 7098, 365, 264, 1589, 300, 291, 2729, 309, 293, 2962, 264, 1472, 295, 264, 7098, 50896, 50896, 300, 366, 5176, 281, 312, 456, 13, 50992, 50992, 407, 1338, 11, 44094, 278, 294, 341, 1389, 307, 544, 466, 1242, 1409, 2831, 813, 1419, 257, 51291, 51291, 4009, 295, 3494, 11, 286, 519, 13, 51368, 51368, 1079, 11, 558, 13, 51418, 51418, 467, 2709, 291, 257, 10851, 2891, 935, 11, 457, 309, 311, 337, 264, 44094, 278, 3109, 11, 291, 434, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16633982028601305, "compression_ratio": 1.6938775510204083, "no_caption_prob": 3.5355456930119544e-05}, {"id": 577, "seek": 214008, "start": 2160.16, "end": 2161.16, "text": " Yes, right.", "tokens": [50364, 400, 912, 551, 337, 264, 777, 4978, 11, 291, 976, 309, 257, 4978, 1315, 293, 23815, 512, 44094, 11, 50654, 50654, 512, 3096, 7098, 365, 264, 1589, 300, 291, 2729, 309, 293, 2962, 264, 1472, 295, 264, 7098, 50896, 50896, 300, 366, 5176, 281, 312, 456, 13, 50992, 50992, 407, 1338, 11, 44094, 278, 294, 341, 1389, 307, 544, 466, 1242, 1409, 2831, 813, 1419, 257, 51291, 51291, 4009, 295, 3494, 11, 286, 519, 13, 51368, 51368, 1079, 11, 558, 13, 51418, 51418, 467, 2709, 291, 257, 10851, 2891, 935, 11, 457, 309, 311, 337, 264, 44094, 278, 3109, 11, 291, 434, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16633982028601305, "compression_ratio": 1.6938775510204083, "no_caption_prob": 3.5355456930119544e-05}, {"id": 578, "seek": 214008, "start": 2161.16, "end": 2166.36, "text": " It gives you a convenient starting point, but it's for the scaffolding approach, you're", "tokens": [50364, 400, 912, 551, 337, 264, 777, 4978, 11, 291, 976, 309, 257, 4978, 1315, 293, 23815, 512, 44094, 11, 50654, 50654, 512, 3096, 7098, 365, 264, 1589, 300, 291, 2729, 309, 293, 2962, 264, 1472, 295, 264, 7098, 50896, 50896, 300, 366, 5176, 281, 312, 456, 13, 50992, 50992, 407, 1338, 11, 44094, 278, 294, 341, 1389, 307, 544, 466, 1242, 1409, 2831, 813, 1419, 257, 51291, 51291, 4009, 295, 3494, 11, 286, 519, 13, 51368, 51368, 1079, 11, 558, 13, 51418, 51418, 467, 2709, 291, 257, 10851, 2891, 935, 11, 457, 309, 311, 337, 264, 44094, 278, 3109, 11, 291, 434, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.16633982028601305, "compression_ratio": 1.6938775510204083, "no_caption_prob": 3.5355456930119544e-05}, {"id": 579, "seek": 216636, "start": 2166.36, "end": 2170.6400000000003, "text": " generally using it, like you said, to get started, but you're not going to rerun it", "tokens": [50364, 5101, 1228, 309, 11, 411, 291, 848, 11, 281, 483, 1409, 11, 457, 291, 434, 406, 516, 281, 43819, 409, 309, 50578, 50578, 633, 565, 281, 1066, 309, 294, 20271, 13, 50670, 50670, 407, 264, 4009, 295, 3494, 11, 411, 11, 370, 411, 276, 83, 15480, 281, 806, 76, 13, 1112, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 50972, 50972, 46074, 12199, 6583, 3473, 3500, 11, 309, 311, 341, 2290, 300, 286, 3094, 300, 23815, 2699, 76, 3089, 490, 17995, 51230, 51230, 293, 309, 611, 393, 48377, 484, 428, 46074, 12199, 6583, 3473, 281, 8460, 3089, 337, 300, 13, 51507, 51507, 407, 309, 311, 257, 3089, 19265, 337, 257, 3089, 1049, 2290, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13882837375672927, "compression_ratio": 1.670731707317073, "no_caption_prob": 9.665861398389097e-06}, {"id": 580, "seek": 216636, "start": 2170.6400000000003, "end": 2172.48, "text": " every time to keep it in sync.", "tokens": [50364, 5101, 1228, 309, 11, 411, 291, 848, 11, 281, 483, 1409, 11, 457, 291, 434, 406, 516, 281, 43819, 409, 309, 50578, 50578, 633, 565, 281, 1066, 309, 294, 20271, 13, 50670, 50670, 407, 264, 4009, 295, 3494, 11, 411, 11, 370, 411, 276, 83, 15480, 281, 806, 76, 13, 1112, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 50972, 50972, 46074, 12199, 6583, 3473, 3500, 11, 309, 311, 341, 2290, 300, 286, 3094, 300, 23815, 2699, 76, 3089, 490, 17995, 51230, 51230, 293, 309, 611, 393, 48377, 484, 428, 46074, 12199, 6583, 3473, 281, 8460, 3089, 337, 300, 13, 51507, 51507, 407, 309, 311, 257, 3089, 19265, 337, 257, 3089, 1049, 2290, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13882837375672927, "compression_ratio": 1.670731707317073, "no_caption_prob": 9.665861398389097e-06}, {"id": 581, "seek": 216636, "start": 2172.48, "end": 2178.52, "text": " So the source of truth, like, so like html to elm.com, which we talked about in our Elm", "tokens": [50364, 5101, 1228, 309, 11, 411, 291, 848, 11, 281, 483, 1409, 11, 457, 291, 434, 406, 516, 281, 43819, 409, 309, 50578, 50578, 633, 565, 281, 1066, 309, 294, 20271, 13, 50670, 50670, 407, 264, 4009, 295, 3494, 11, 411, 11, 370, 411, 276, 83, 15480, 281, 806, 76, 13, 1112, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 50972, 50972, 46074, 12199, 6583, 3473, 3500, 11, 309, 311, 341, 2290, 300, 286, 3094, 300, 23815, 2699, 76, 3089, 490, 17995, 51230, 51230, 293, 309, 611, 393, 48377, 484, 428, 46074, 12199, 6583, 3473, 281, 8460, 3089, 337, 300, 13, 51507, 51507, 407, 309, 311, 257, 3089, 19265, 337, 257, 3089, 1049, 2290, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13882837375672927, "compression_ratio": 1.670731707317073, "no_caption_prob": 9.665861398389097e-06}, {"id": 582, "seek": 216636, "start": 2178.52, "end": 2183.6800000000003, "text": " Tailwind Modules episode, it's this tool that I built that generates Elm code from HTML", "tokens": [50364, 5101, 1228, 309, 11, 411, 291, 848, 11, 281, 483, 1409, 11, 457, 291, 434, 406, 516, 281, 43819, 409, 309, 50578, 50578, 633, 565, 281, 1066, 309, 294, 20271, 13, 50670, 50670, 407, 264, 4009, 295, 3494, 11, 411, 11, 370, 411, 276, 83, 15480, 281, 806, 76, 13, 1112, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 50972, 50972, 46074, 12199, 6583, 3473, 3500, 11, 309, 311, 341, 2290, 300, 286, 3094, 300, 23815, 2699, 76, 3089, 490, 17995, 51230, 51230, 293, 309, 611, 393, 48377, 484, 428, 46074, 12199, 6583, 3473, 281, 8460, 3089, 337, 300, 13, 51507, 51507, 407, 309, 311, 257, 3089, 19265, 337, 257, 3089, 1049, 2290, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13882837375672927, "compression_ratio": 1.670731707317073, "no_caption_prob": 9.665861398389097e-06}, {"id": 583, "seek": 216636, "start": 2183.6800000000003, "end": 2189.2200000000003, "text": " and it also can parse out your Tailwind Modules to generate code for that.", "tokens": [50364, 5101, 1228, 309, 11, 411, 291, 848, 11, 281, 483, 1409, 11, 457, 291, 434, 406, 516, 281, 43819, 409, 309, 50578, 50578, 633, 565, 281, 1066, 309, 294, 20271, 13, 50670, 50670, 407, 264, 4009, 295, 3494, 11, 411, 11, 370, 411, 276, 83, 15480, 281, 806, 76, 13, 1112, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 50972, 50972, 46074, 12199, 6583, 3473, 3500, 11, 309, 311, 341, 2290, 300, 286, 3094, 300, 23815, 2699, 76, 3089, 490, 17995, 51230, 51230, 293, 309, 611, 393, 48377, 484, 428, 46074, 12199, 6583, 3473, 281, 8460, 3089, 337, 300, 13, 51507, 51507, 407, 309, 311, 257, 3089, 19265, 337, 257, 3089, 1049, 2290, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13882837375672927, "compression_ratio": 1.670731707317073, "no_caption_prob": 9.665861398389097e-06}, {"id": 584, "seek": 216636, "start": 2189.2200000000003, "end": 2194.52, "text": " So it's a code generator for a code gen tool.", "tokens": [50364, 5101, 1228, 309, 11, 411, 291, 848, 11, 281, 483, 1409, 11, 457, 291, 434, 406, 516, 281, 43819, 409, 309, 50578, 50578, 633, 565, 281, 1066, 309, 294, 20271, 13, 50670, 50670, 407, 264, 4009, 295, 3494, 11, 411, 11, 370, 411, 276, 83, 15480, 281, 806, 76, 13, 1112, 11, 597, 321, 2825, 466, 294, 527, 2699, 76, 50972, 50972, 46074, 12199, 6583, 3473, 3500, 11, 309, 311, 341, 2290, 300, 286, 3094, 300, 23815, 2699, 76, 3089, 490, 17995, 51230, 51230, 293, 309, 611, 393, 48377, 484, 428, 46074, 12199, 6583, 3473, 281, 8460, 3089, 337, 300, 13, 51507, 51507, 407, 309, 311, 257, 3089, 19265, 337, 257, 3089, 1049, 2290, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13882837375672927, "compression_ratio": 1.670731707317073, "no_caption_prob": 9.665861398389097e-06}, {"id": 585, "seek": 219452, "start": 2194.52, "end": 2196.96, "text": " Because why not, turtles all the way down.", "tokens": [50364, 1436, 983, 406, 11, 32422, 439, 264, 636, 760, 13, 50486, 50486, 583, 1338, 11, 300, 311, 11, 291, 458, 11, 264, 4009, 295, 3494, 337, 300, 11, 291, 458, 11, 264, 4973, 2316, 50736, 50736, 307, 510, 311, 341, 17995, 11, 309, 311, 658, 257, 1850, 18350, 281, 2699, 76, 3089, 293, 452, 2699, 76, 3131, 4978, 382, 731, 11, 51038, 51038, 309, 311, 1333, 295, 11, 291, 458, 11, 1075, 281, 6328, 294, 754, 544, 281, 264, 4009, 295, 3494, 295, 428, 11, 411, 51306, 51306, 428, 41596, 294, 257, 1729, 10088, 293, 747, 300, 4319, 11, 597, 307, 1627, 13, 51504, 51504, 583, 309, 311, 406, 746, 300, 291, 434, 5101, 516, 281, 1066, 926, 300, 2891, 17995, 293, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.14066243550134083, "compression_ratio": 1.7106227106227105, "no_caption_prob": 2.2473552235169336e-05}, {"id": 586, "seek": 219452, "start": 2196.96, "end": 2201.96, "text": " But yeah, that's, you know, the source of truth for that, you know, the mental model", "tokens": [50364, 1436, 983, 406, 11, 32422, 439, 264, 636, 760, 13, 50486, 50486, 583, 1338, 11, 300, 311, 11, 291, 458, 11, 264, 4009, 295, 3494, 337, 300, 11, 291, 458, 11, 264, 4973, 2316, 50736, 50736, 307, 510, 311, 341, 17995, 11, 309, 311, 658, 257, 1850, 18350, 281, 2699, 76, 3089, 293, 452, 2699, 76, 3131, 4978, 382, 731, 11, 51038, 51038, 309, 311, 1333, 295, 11, 291, 458, 11, 1075, 281, 6328, 294, 754, 544, 281, 264, 4009, 295, 3494, 295, 428, 11, 411, 51306, 51306, 428, 41596, 294, 257, 1729, 10088, 293, 747, 300, 4319, 11, 597, 307, 1627, 13, 51504, 51504, 583, 309, 311, 406, 746, 300, 291, 434, 5101, 516, 281, 1066, 926, 300, 2891, 17995, 293, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.14066243550134083, "compression_ratio": 1.7106227106227105, "no_caption_prob": 2.2473552235169336e-05}, {"id": 587, "seek": 219452, "start": 2201.96, "end": 2208.0, "text": " is here's this HTML, it's got a clear mapping to Elm code and my Elm review rule as well,", "tokens": [50364, 1436, 983, 406, 11, 32422, 439, 264, 636, 760, 13, 50486, 50486, 583, 1338, 11, 300, 311, 11, 291, 458, 11, 264, 4009, 295, 3494, 337, 300, 11, 291, 458, 11, 264, 4973, 2316, 50736, 50736, 307, 510, 311, 341, 17995, 11, 309, 311, 658, 257, 1850, 18350, 281, 2699, 76, 3089, 293, 452, 2699, 76, 3131, 4978, 382, 731, 11, 51038, 51038, 309, 311, 1333, 295, 11, 291, 458, 11, 1075, 281, 6328, 294, 754, 544, 281, 264, 4009, 295, 3494, 295, 428, 11, 411, 51306, 51306, 428, 41596, 294, 257, 1729, 10088, 293, 747, 300, 4319, 11, 597, 307, 1627, 13, 51504, 51504, 583, 309, 311, 406, 746, 300, 291, 434, 5101, 516, 281, 1066, 926, 300, 2891, 17995, 293, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.14066243550134083, "compression_ratio": 1.7106227106227105, "no_caption_prob": 2.2473552235169336e-05}, {"id": 588, "seek": 219452, "start": 2208.0, "end": 2213.36, "text": " it's sort of, you know, able to hook in even more to the source of truth of your, like", "tokens": [50364, 1436, 983, 406, 11, 32422, 439, 264, 636, 760, 13, 50486, 50486, 583, 1338, 11, 300, 311, 11, 291, 458, 11, 264, 4009, 295, 3494, 337, 300, 11, 291, 458, 11, 264, 4973, 2316, 50736, 50736, 307, 510, 311, 341, 17995, 11, 309, 311, 658, 257, 1850, 18350, 281, 2699, 76, 3089, 293, 452, 2699, 76, 3131, 4978, 382, 731, 11, 51038, 51038, 309, 311, 1333, 295, 11, 291, 458, 11, 1075, 281, 6328, 294, 754, 544, 281, 264, 4009, 295, 3494, 295, 428, 11, 411, 51306, 51306, 428, 41596, 294, 257, 1729, 10088, 293, 747, 300, 4319, 11, 597, 307, 1627, 13, 51504, 51504, 583, 309, 311, 406, 746, 300, 291, 434, 5101, 516, 281, 1066, 926, 300, 2891, 17995, 293, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.14066243550134083, "compression_ratio": 1.7106227106227105, "no_caption_prob": 2.2473552235169336e-05}, {"id": 589, "seek": 219452, "start": 2213.36, "end": 2217.32, "text": " your imports in a particular module and take that context, which is cool.", "tokens": [50364, 1436, 983, 406, 11, 32422, 439, 264, 636, 760, 13, 50486, 50486, 583, 1338, 11, 300, 311, 11, 291, 458, 11, 264, 4009, 295, 3494, 337, 300, 11, 291, 458, 11, 264, 4973, 2316, 50736, 50736, 307, 510, 311, 341, 17995, 11, 309, 311, 658, 257, 1850, 18350, 281, 2699, 76, 3089, 293, 452, 2699, 76, 3131, 4978, 382, 731, 11, 51038, 51038, 309, 311, 1333, 295, 11, 291, 458, 11, 1075, 281, 6328, 294, 754, 544, 281, 264, 4009, 295, 3494, 295, 428, 11, 411, 51306, 51306, 428, 41596, 294, 257, 1729, 10088, 293, 747, 300, 4319, 11, 597, 307, 1627, 13, 51504, 51504, 583, 309, 311, 406, 746, 300, 291, 434, 5101, 516, 281, 1066, 926, 300, 2891, 17995, 293, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.14066243550134083, "compression_ratio": 1.7106227106227105, "no_caption_prob": 2.2473552235169336e-05}, {"id": 590, "seek": 219452, "start": 2217.32, "end": 2222.4, "text": " But it's not something that you're generally going to keep around that starting HTML and", "tokens": [50364, 1436, 983, 406, 11, 32422, 439, 264, 636, 760, 13, 50486, 50486, 583, 1338, 11, 300, 311, 11, 291, 458, 11, 264, 4009, 295, 3494, 337, 300, 11, 291, 458, 11, 264, 4973, 2316, 50736, 50736, 307, 510, 311, 341, 17995, 11, 309, 311, 658, 257, 1850, 18350, 281, 2699, 76, 3089, 293, 452, 2699, 76, 3131, 4978, 382, 731, 11, 51038, 51038, 309, 311, 1333, 295, 11, 291, 458, 11, 1075, 281, 6328, 294, 754, 544, 281, 264, 4009, 295, 3494, 295, 428, 11, 411, 51306, 51306, 428, 41596, 294, 257, 1729, 10088, 293, 747, 300, 4319, 11, 597, 307, 1627, 13, 51504, 51504, 583, 309, 311, 406, 746, 300, 291, 434, 5101, 516, 281, 1066, 926, 300, 2891, 17995, 293, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.14066243550134083, "compression_ratio": 1.7106227106227105, "no_caption_prob": 2.2473552235169336e-05}, {"id": 591, "seek": 222240, "start": 2222.4, "end": 2225.7000000000003, "text": " then edit the HTML anytime you want to change your templates.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 592, "seek": 222240, "start": 2225.7000000000003, "end": 2229.34, "text": " It's like, hey, let me help you get started with this view.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 593, "seek": 222240, "start": 2229.34, "end": 2235.1600000000003, "text": " But then you own it from there, rather than, hey, let me keep around this HTML file.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 594, "seek": 222240, "start": 2235.1600000000003, "end": 2239.56, "text": " I'm going to run the code generator on that every time to get this Elm code.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 595, "seek": 222240, "start": 2239.56, "end": 2241.62, "text": " And I actually never touch that Elm code.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 596, "seek": 222240, "start": 2241.62, "end": 2246.6800000000003, "text": " If I want to change the view, I go change the HTML file, which is the source of truth.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 597, "seek": 222240, "start": 2246.6800000000003, "end": 2247.6800000000003, "text": " That's something different.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 598, "seek": 222240, "start": 2247.6800000000003, "end": 2249.2200000000003, "text": " That's not the scaffolding approach.", "tokens": [50364, 550, 8129, 264, 17995, 13038, 291, 528, 281, 1319, 428, 21165, 13, 50529, 50529, 467, 311, 411, 11, 4177, 11, 718, 385, 854, 291, 483, 1409, 365, 341, 1910, 13, 50711, 50711, 583, 550, 291, 1065, 309, 490, 456, 11, 2831, 813, 11, 4177, 11, 718, 385, 1066, 926, 341, 17995, 3991, 13, 51002, 51002, 286, 478, 516, 281, 1190, 264, 3089, 19265, 322, 300, 633, 565, 281, 483, 341, 2699, 76, 3089, 13, 51222, 51222, 400, 286, 767, 1128, 2557, 300, 2699, 76, 3089, 13, 51325, 51325, 759, 286, 528, 281, 1319, 264, 1910, 11, 286, 352, 1319, 264, 17995, 3991, 11, 597, 307, 264, 4009, 295, 3494, 13, 51578, 51578, 663, 311, 746, 819, 13, 51628, 51628, 663, 311, 406, 264, 44094, 278, 3109, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09247918893362729, "compression_ratio": 1.7345454545454546, "no_caption_prob": 2.3186777980299667e-05}, {"id": 599, "seek": 224922, "start": 2249.22, "end": 2253.48, "text": " So when would you go for the scaffolding and when would you go for code generation?", "tokens": [50364, 407, 562, 576, 291, 352, 337, 264, 44094, 278, 293, 562, 576, 291, 352, 337, 3089, 5125, 30, 50577, 50577, 663, 311, 257, 665, 1168, 13, 50627, 50627, 286, 519, 309, 311, 534, 411, 11, 498, 291, 393, 9021, 257, 5633, 1553, 1952, 13176, 11, 550, 291, 51003, 51003, 815, 382, 731, 445, 3089, 8460, 309, 13, 51081, 51081, 583, 411, 365, 257, 1910, 11, 291, 458, 11, 498, 291, 645, 281, 445, 411, 11, 291, 2809, 380, 445, 584, 11, 510, 311, 51361, 51361, 512, 17995, 11, 1767, 4471, 341, 666, 2699, 76, 3089, 11, 309, 576, 11785, 264, 4334, 13, 51561, 51561, 1436, 264, 935, 307, 411, 11, 291, 528, 2699, 76, 3089, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.12653861840566, "compression_ratio": 1.7015503875968991, "no_caption_prob": 1.2029378922306933e-05}, {"id": 600, "seek": 224922, "start": 2253.48, "end": 2254.48, "text": " That's a good question.", "tokens": [50364, 407, 562, 576, 291, 352, 337, 264, 44094, 278, 293, 562, 576, 291, 352, 337, 3089, 5125, 30, 50577, 50577, 663, 311, 257, 665, 1168, 13, 50627, 50627, 286, 519, 309, 311, 534, 411, 11, 498, 291, 393, 9021, 257, 5633, 1553, 1952, 13176, 11, 550, 291, 51003, 51003, 815, 382, 731, 445, 3089, 8460, 309, 13, 51081, 51081, 583, 411, 365, 257, 1910, 11, 291, 458, 11, 498, 291, 645, 281, 445, 411, 11, 291, 2809, 380, 445, 584, 11, 510, 311, 51361, 51361, 512, 17995, 11, 1767, 4471, 341, 666, 2699, 76, 3089, 11, 309, 576, 11785, 264, 4334, 13, 51561, 51561, 1436, 264, 935, 307, 411, 11, 291, 528, 2699, 76, 3089, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.12653861840566, "compression_ratio": 1.7015503875968991, "no_caption_prob": 1.2029378922306933e-05}, {"id": 601, "seek": 224922, "start": 2254.48, "end": 2262.0, "text": " I think it's really like, if you can accomplish a task without human intervention, then you", "tokens": [50364, 407, 562, 576, 291, 352, 337, 264, 44094, 278, 293, 562, 576, 291, 352, 337, 3089, 5125, 30, 50577, 50577, 663, 311, 257, 665, 1168, 13, 50627, 50627, 286, 519, 309, 311, 534, 411, 11, 498, 291, 393, 9021, 257, 5633, 1553, 1952, 13176, 11, 550, 291, 51003, 51003, 815, 382, 731, 445, 3089, 8460, 309, 13, 51081, 51081, 583, 411, 365, 257, 1910, 11, 291, 458, 11, 498, 291, 645, 281, 445, 411, 11, 291, 2809, 380, 445, 584, 11, 510, 311, 51361, 51361, 512, 17995, 11, 1767, 4471, 341, 666, 2699, 76, 3089, 11, 309, 576, 11785, 264, 4334, 13, 51561, 51561, 1436, 264, 935, 307, 411, 11, 291, 528, 2699, 76, 3089, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.12653861840566, "compression_ratio": 1.7015503875968991, "no_caption_prob": 1.2029378922306933e-05}, {"id": 602, "seek": 224922, "start": 2262.0, "end": 2263.56, "text": " may as well just code generate it.", "tokens": [50364, 407, 562, 576, 291, 352, 337, 264, 44094, 278, 293, 562, 576, 291, 352, 337, 3089, 5125, 30, 50577, 50577, 663, 311, 257, 665, 1168, 13, 50627, 50627, 286, 519, 309, 311, 534, 411, 11, 498, 291, 393, 9021, 257, 5633, 1553, 1952, 13176, 11, 550, 291, 51003, 51003, 815, 382, 731, 445, 3089, 8460, 309, 13, 51081, 51081, 583, 411, 365, 257, 1910, 11, 291, 458, 11, 498, 291, 645, 281, 445, 411, 11, 291, 2809, 380, 445, 584, 11, 510, 311, 51361, 51361, 512, 17995, 11, 1767, 4471, 341, 666, 2699, 76, 3089, 11, 309, 576, 11785, 264, 4334, 13, 51561, 51561, 1436, 264, 935, 307, 411, 11, 291, 528, 2699, 76, 3089, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.12653861840566, "compression_ratio": 1.7015503875968991, "no_caption_prob": 1.2029378922306933e-05}, {"id": 603, "seek": 224922, "start": 2263.56, "end": 2269.16, "text": " But like with a view, you know, if you were to just like, you couldn't just say, here's", "tokens": [50364, 407, 562, 576, 291, 352, 337, 264, 44094, 278, 293, 562, 576, 291, 352, 337, 3089, 5125, 30, 50577, 50577, 663, 311, 257, 665, 1168, 13, 50627, 50627, 286, 519, 309, 311, 534, 411, 11, 498, 291, 393, 9021, 257, 5633, 1553, 1952, 13176, 11, 550, 291, 51003, 51003, 815, 382, 731, 445, 3089, 8460, 309, 13, 51081, 51081, 583, 411, 365, 257, 1910, 11, 291, 458, 11, 498, 291, 645, 281, 445, 411, 11, 291, 2809, 380, 445, 584, 11, 510, 311, 51361, 51361, 512, 17995, 11, 1767, 4471, 341, 666, 2699, 76, 3089, 11, 309, 576, 11785, 264, 4334, 13, 51561, 51561, 1436, 264, 935, 307, 411, 11, 291, 528, 2699, 76, 3089, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.12653861840566, "compression_ratio": 1.7015503875968991, "no_caption_prob": 1.2029378922306933e-05}, {"id": 604, "seek": 224922, "start": 2269.16, "end": 2273.16, "text": " some HTML, please map this into Elm code, it would defeat the purpose.", "tokens": [50364, 407, 562, 576, 291, 352, 337, 264, 44094, 278, 293, 562, 576, 291, 352, 337, 3089, 5125, 30, 50577, 50577, 663, 311, 257, 665, 1168, 13, 50627, 50627, 286, 519, 309, 311, 534, 411, 11, 498, 291, 393, 9021, 257, 5633, 1553, 1952, 13176, 11, 550, 291, 51003, 51003, 815, 382, 731, 445, 3089, 8460, 309, 13, 51081, 51081, 583, 411, 365, 257, 1910, 11, 291, 458, 11, 498, 291, 645, 281, 445, 411, 11, 291, 2809, 380, 445, 584, 11, 510, 311, 51361, 51361, 512, 17995, 11, 1767, 4471, 341, 666, 2699, 76, 3089, 11, 309, 576, 11785, 264, 4334, 13, 51561, 51561, 1436, 264, 935, 307, 411, 11, 291, 528, 2699, 76, 3089, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.12653861840566, "compression_ratio": 1.7015503875968991, "no_caption_prob": 1.2029378922306933e-05}, {"id": 605, "seek": 224922, "start": 2273.16, "end": 2275.52, "text": " Because the point is like, you want Elm code.", "tokens": [50364, 407, 562, 576, 291, 352, 337, 264, 44094, 278, 293, 562, 576, 291, 352, 337, 3089, 5125, 30, 50577, 50577, 663, 311, 257, 665, 1168, 13, 50627, 50627, 286, 519, 309, 311, 534, 411, 11, 498, 291, 393, 9021, 257, 5633, 1553, 1952, 13176, 11, 550, 291, 51003, 51003, 815, 382, 731, 445, 3089, 8460, 309, 13, 51081, 51081, 583, 411, 365, 257, 1910, 11, 291, 458, 11, 498, 291, 645, 281, 445, 411, 11, 291, 2809, 380, 445, 584, 11, 510, 311, 51361, 51361, 512, 17995, 11, 1767, 4471, 341, 666, 2699, 76, 3089, 11, 309, 576, 11785, 264, 4334, 13, 51561, 51561, 1436, 264, 935, 307, 411, 11, 291, 528, 2699, 76, 3089, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.12653861840566, "compression_ratio": 1.7015503875968991, "no_caption_prob": 1.2029378922306933e-05}, {"id": 606, "seek": 227552, "start": 2275.52, "end": 2282.34, "text": " So you can say list.map over these things to create a list item for each of these things", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 607, "seek": 227552, "start": 2282.34, "end": 2284.06, "text": " from the model or whatever.", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 608, "seek": 227552, "start": 2284.06, "end": 2285.92, "text": " And well, so what are you going to do?", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 609, "seek": 227552, "start": 2285.92, "end": 2289.16, "text": " Create like a templating language within your HTML code?", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 610, "seek": 227552, "start": 2289.16, "end": 2291.7599999999998, "text": " I mean, you could if you wanted to.", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 611, "seek": 227552, "start": 2291.7599999999998, "end": 2295.68, "text": " But in that case, most of the time, you're just going to want something to help you out", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 612, "seek": 227552, "start": 2295.68, "end": 2302.28, "text": " and say, oh, here's some HTML that I'm copying from this handy online template.", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 613, "seek": 227552, "start": 2302.28, "end": 2304.0, "text": " It's like tailwindui.com.", "tokens": [50364, 407, 291, 393, 584, 1329, 13, 24223, 670, 613, 721, 281, 1884, 257, 1329, 3174, 337, 1184, 295, 613, 721, 50705, 50705, 490, 264, 2316, 420, 2035, 13, 50791, 50791, 400, 731, 11, 370, 437, 366, 291, 516, 281, 360, 30, 50884, 50884, 20248, 411, 257, 9100, 990, 2856, 1951, 428, 17995, 3089, 30, 51046, 51046, 286, 914, 11, 291, 727, 498, 291, 1415, 281, 13, 51176, 51176, 583, 294, 300, 1389, 11, 881, 295, 264, 565, 11, 291, 434, 445, 516, 281, 528, 746, 281, 854, 291, 484, 51372, 51372, 293, 584, 11, 1954, 11, 510, 311, 512, 17995, 300, 286, 478, 27976, 490, 341, 13239, 2950, 12379, 13, 51702, 51702, 467, 311, 411, 6838, 12199, 3077, 13, 1112, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.12176811981201172, "compression_ratio": 1.6742424242424243, "no_caption_prob": 5.422160938906018e-06}, {"id": 614, "seek": 230400, "start": 2304.0, "end": 2307.88, "text": " You've got a nice template I want to use, I want to copy paste it as my starting point,", "tokens": [50364, 509, 600, 658, 257, 1481, 12379, 286, 528, 281, 764, 11, 286, 528, 281, 5055, 9163, 309, 382, 452, 2891, 935, 11, 50558, 50558, 293, 550, 747, 15279, 295, 264, 3089, 13, 50674, 50674, 407, 412, 12877, 654, 11, 321, 611, 1143, 3089, 5125, 11, 733, 295, 411, 2699, 76, 8420, 32, 281, 8460, 439, 264, 39228, 37008, 51018, 51018, 337, 25775, 264, 2135, 3991, 365, 264, 2609, 7183, 13, 51242, 51242, 400, 472, 1778, 337, 300, 390, 988, 281, 4159, 604, 13603, 300, 727, 312, 1027, 570, 291, 51573, 51573, 5298, 281, 6234, 746, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.13791693687438966, "compression_ratio": 1.5609756097560976, "no_caption_prob": 3.844912953354651e-06}, {"id": 615, "seek": 230400, "start": 2307.88, "end": 2310.2, "text": " and then take ownership of the code.", "tokens": [50364, 509, 600, 658, 257, 1481, 12379, 286, 528, 281, 764, 11, 286, 528, 281, 5055, 9163, 309, 382, 452, 2891, 935, 11, 50558, 50558, 293, 550, 747, 15279, 295, 264, 3089, 13, 50674, 50674, 407, 412, 12877, 654, 11, 321, 611, 1143, 3089, 5125, 11, 733, 295, 411, 2699, 76, 8420, 32, 281, 8460, 439, 264, 39228, 37008, 51018, 51018, 337, 25775, 264, 2135, 3991, 365, 264, 2609, 7183, 13, 51242, 51242, 400, 472, 1778, 337, 300, 390, 988, 281, 4159, 604, 13603, 300, 727, 312, 1027, 570, 291, 51573, 51573, 5298, 281, 6234, 746, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.13791693687438966, "compression_ratio": 1.5609756097560976, "no_caption_prob": 3.844912953354651e-06}, {"id": 616, "seek": 230400, "start": 2310.2, "end": 2317.08, "text": " So at Humia, we also used code generation, kind of like Elm SPA to generate all the boilerplate", "tokens": [50364, 509, 600, 658, 257, 1481, 12379, 286, 528, 281, 764, 11, 286, 528, 281, 5055, 9163, 309, 382, 452, 2891, 935, 11, 50558, 50558, 293, 550, 747, 15279, 295, 264, 3089, 13, 50674, 50674, 407, 412, 12877, 654, 11, 321, 611, 1143, 3089, 5125, 11, 733, 295, 411, 2699, 76, 8420, 32, 281, 8460, 439, 264, 39228, 37008, 51018, 51018, 337, 25775, 264, 2135, 3991, 365, 264, 2609, 7183, 13, 51242, 51242, 400, 472, 1778, 337, 300, 390, 988, 281, 4159, 604, 13603, 300, 727, 312, 1027, 570, 291, 51573, 51573, 5298, 281, 6234, 746, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.13791693687438966, "compression_ratio": 1.5609756097560976, "no_caption_prob": 3.844912953354651e-06}, {"id": 617, "seek": 230400, "start": 2317.08, "end": 2321.56, "text": " for linking the main file with the individual pages.", "tokens": [50364, 509, 600, 658, 257, 1481, 12379, 286, 528, 281, 764, 11, 286, 528, 281, 5055, 9163, 309, 382, 452, 2891, 935, 11, 50558, 50558, 293, 550, 747, 15279, 295, 264, 3089, 13, 50674, 50674, 407, 412, 12877, 654, 11, 321, 611, 1143, 3089, 5125, 11, 733, 295, 411, 2699, 76, 8420, 32, 281, 8460, 439, 264, 39228, 37008, 51018, 51018, 337, 25775, 264, 2135, 3991, 365, 264, 2609, 7183, 13, 51242, 51242, 400, 472, 1778, 337, 300, 390, 988, 281, 4159, 604, 13603, 300, 727, 312, 1027, 570, 291, 51573, 51573, 5298, 281, 6234, 746, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.13791693687438966, "compression_ratio": 1.5609756097560976, "no_caption_prob": 3.844912953354651e-06}, {"id": 618, "seek": 230400, "start": 2321.56, "end": 2328.18, "text": " And one reason for that was sure to remove any errors that could be made because you", "tokens": [50364, 509, 600, 658, 257, 1481, 12379, 286, 528, 281, 764, 11, 286, 528, 281, 5055, 9163, 309, 382, 452, 2891, 935, 11, 50558, 50558, 293, 550, 747, 15279, 295, 264, 3089, 13, 50674, 50674, 407, 412, 12877, 654, 11, 321, 611, 1143, 3089, 5125, 11, 733, 295, 411, 2699, 76, 8420, 32, 281, 8460, 439, 264, 39228, 37008, 51018, 51018, 337, 25775, 264, 2135, 3991, 365, 264, 2609, 7183, 13, 51242, 51242, 400, 472, 1778, 337, 300, 390, 988, 281, 4159, 604, 13603, 300, 727, 312, 1027, 570, 291, 51573, 51573, 5298, 281, 6234, 746, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.13791693687438966, "compression_ratio": 1.5609756097560976, "no_caption_prob": 3.844912953354651e-06}, {"id": 619, "seek": 230400, "start": 2328.18, "end": 2330.54, "text": " forgot to wire something.", "tokens": [50364, 509, 600, 658, 257, 1481, 12379, 286, 528, 281, 764, 11, 286, 528, 281, 5055, 9163, 309, 382, 452, 2891, 935, 11, 50558, 50558, 293, 550, 747, 15279, 295, 264, 3089, 13, 50674, 50674, 407, 412, 12877, 654, 11, 321, 611, 1143, 3089, 5125, 11, 733, 295, 411, 2699, 76, 8420, 32, 281, 8460, 439, 264, 39228, 37008, 51018, 51018, 337, 25775, 264, 2135, 3991, 365, 264, 2609, 7183, 13, 51242, 51242, 400, 472, 1778, 337, 300, 390, 988, 281, 4159, 604, 13603, 300, 727, 312, 1027, 570, 291, 51573, 51573, 5298, 281, 6234, 746, 13, 51691, 51691], "temperature": 0.0, "avg_logprob": -0.13791693687438966, "compression_ratio": 1.5609756097560976, "no_caption_prob": 3.844912953354651e-06}, {"id": 620, "seek": 233054, "start": 2330.54, "end": 2334.48, "text": " But mostly because it was much more performant in a sense.", "tokens": [50364, 583, 5240, 570, 309, 390, 709, 544, 2042, 394, 294, 257, 2020, 13, 50561, 50561, 1133, 291, 909, 257, 3991, 11, 291, 632, 281, 909, 257, 777, 47479, 281, 257, 2375, 2010, 11, 597, 390, 411, 50917, 50917, 2010, 3028, 2681, 31301, 11, 5183, 13, 51095, 51095, 400, 300, 390, 767, 5102, 2995, 294, 28638, 13, 51347, 51347, 286, 500, 380, 458, 577, 867, 5102, 10676, 13, 51461, 51461, 407, 291, 576, 362, 281, 909, 257, 47479, 293, 550, 3496, 1266, 11, 945, 2077, 445, 19442, 31958, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16738636939080206, "compression_ratio": 1.5625, "no_caption_prob": 7.296236162801506e-06}, {"id": 621, "seek": 233054, "start": 2334.48, "end": 2341.6, "text": " When you add a file, you had to add a new constructor to a custom type, which was like", "tokens": [50364, 583, 5240, 570, 309, 390, 709, 544, 2042, 394, 294, 257, 2020, 13, 50561, 50561, 1133, 291, 909, 257, 3991, 11, 291, 632, 281, 909, 257, 777, 47479, 281, 257, 2375, 2010, 11, 597, 390, 411, 50917, 50917, 2010, 3028, 2681, 31301, 11, 5183, 13, 51095, 51095, 400, 300, 390, 767, 5102, 2995, 294, 28638, 13, 51347, 51347, 286, 500, 380, 458, 577, 867, 5102, 10676, 13, 51461, 51461, 407, 291, 576, 362, 281, 909, 257, 47479, 293, 550, 3496, 1266, 11, 945, 2077, 445, 19442, 31958, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16738636939080206, "compression_ratio": 1.5625, "no_caption_prob": 7.296236162801506e-06}, {"id": 622, "seek": 233054, "start": 2341.6, "end": 2345.16, "text": " type page equal homepage, etc.", "tokens": [50364, 583, 5240, 570, 309, 390, 709, 544, 2042, 394, 294, 257, 2020, 13, 50561, 50561, 1133, 291, 909, 257, 3991, 11, 291, 632, 281, 909, 257, 777, 47479, 281, 257, 2375, 2010, 11, 597, 390, 411, 50917, 50917, 2010, 3028, 2681, 31301, 11, 5183, 13, 51095, 51095, 400, 300, 390, 767, 5102, 2995, 294, 28638, 13, 51347, 51347, 286, 500, 380, 458, 577, 867, 5102, 10676, 13, 51461, 51461, 407, 291, 576, 362, 281, 909, 257, 47479, 293, 550, 3496, 1266, 11, 945, 2077, 445, 19442, 31958, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16738636939080206, "compression_ratio": 1.5625, "no_caption_prob": 7.296236162801506e-06}, {"id": 623, "seek": 233054, "start": 2345.16, "end": 2350.2, "text": " And that was actually pattern match in 2030.", "tokens": [50364, 583, 5240, 570, 309, 390, 709, 544, 2042, 394, 294, 257, 2020, 13, 50561, 50561, 1133, 291, 909, 257, 3991, 11, 291, 632, 281, 909, 257, 777, 47479, 281, 257, 2375, 2010, 11, 597, 390, 411, 50917, 50917, 2010, 3028, 2681, 31301, 11, 5183, 13, 51095, 51095, 400, 300, 390, 767, 5102, 2995, 294, 28638, 13, 51347, 51347, 286, 500, 380, 458, 577, 867, 5102, 10676, 13, 51461, 51461, 407, 291, 576, 362, 281, 909, 257, 47479, 293, 550, 3496, 1266, 11, 945, 2077, 445, 19442, 31958, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16738636939080206, "compression_ratio": 1.5625, "no_caption_prob": 7.296236162801506e-06}, {"id": 624, "seek": 233054, "start": 2350.2, "end": 2352.48, "text": " I don't know how many pattern matches.", "tokens": [50364, 583, 5240, 570, 309, 390, 709, 544, 2042, 394, 294, 257, 2020, 13, 50561, 50561, 1133, 291, 909, 257, 3991, 11, 291, 632, 281, 909, 257, 777, 47479, 281, 257, 2375, 2010, 11, 597, 390, 411, 50917, 50917, 2010, 3028, 2681, 31301, 11, 5183, 13, 51095, 51095, 400, 300, 390, 767, 5102, 2995, 294, 28638, 13, 51347, 51347, 286, 500, 380, 458, 577, 867, 5102, 10676, 13, 51461, 51461, 407, 291, 576, 362, 281, 909, 257, 47479, 293, 550, 3496, 1266, 11, 945, 2077, 445, 19442, 31958, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16738636939080206, "compression_ratio": 1.5625, "no_caption_prob": 7.296236162801506e-06}, {"id": 625, "seek": 233054, "start": 2352.48, "end": 2359.84, "text": " So you would have to add a constructor and then spend 10, 20 minutes just fixing compiler", "tokens": [50364, 583, 5240, 570, 309, 390, 709, 544, 2042, 394, 294, 257, 2020, 13, 50561, 50561, 1133, 291, 909, 257, 3991, 11, 291, 632, 281, 909, 257, 777, 47479, 281, 257, 2375, 2010, 11, 597, 390, 411, 50917, 50917, 2010, 3028, 2681, 31301, 11, 5183, 13, 51095, 51095, 400, 300, 390, 767, 5102, 2995, 294, 28638, 13, 51347, 51347, 286, 500, 380, 458, 577, 867, 5102, 10676, 13, 51461, 51461, 407, 291, 576, 362, 281, 909, 257, 47479, 293, 550, 3496, 1266, 11, 945, 2077, 445, 19442, 31958, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16738636939080206, "compression_ratio": 1.5625, "no_caption_prob": 7.296236162801506e-06}, {"id": 626, "seek": 235984, "start": 2359.84, "end": 2365.88, "text": " errors because, hey, you forgot to handle this constructor here and there and there.", "tokens": [50364, 13603, 570, 11, 4177, 11, 291, 5298, 281, 4813, 341, 47479, 510, 293, 456, 293, 456, 13, 50666, 50666, 1171, 3089, 300, 390, 588, 2531, 281, 437, 390, 958, 281, 309, 13, 50848, 50848, 407, 291, 576, 1238, 709, 5055, 9163, 512, 3089, 11, 352, 281, 1071, 1081, 11, 5055, 9163, 512, 3089, 51108, 51108, 293, 6231, 309, 281, 764, 264, 47479, 13, 51220, 51220, 400, 300, 945, 420, 2217, 1413, 13, 51308, 51308, 759, 291, 645, 731, 1774, 292, 365, 264, 3089, 3096, 11, 300, 576, 747, 291, 1266, 2077, 13, 51562, 51562, 759, 291, 4999, 380, 11, 550, 309, 576, 747, 2854, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1077211275013215, "compression_ratio": 1.7478632478632479, "no_caption_prob": 6.502556061604992e-05}, {"id": 627, "seek": 235984, "start": 2365.88, "end": 2369.52, "text": " For code that was very similar to what was next to it.", "tokens": [50364, 13603, 570, 11, 4177, 11, 291, 5298, 281, 4813, 341, 47479, 510, 293, 456, 293, 456, 13, 50666, 50666, 1171, 3089, 300, 390, 588, 2531, 281, 437, 390, 958, 281, 309, 13, 50848, 50848, 407, 291, 576, 1238, 709, 5055, 9163, 512, 3089, 11, 352, 281, 1071, 1081, 11, 5055, 9163, 512, 3089, 51108, 51108, 293, 6231, 309, 281, 764, 264, 47479, 13, 51220, 51220, 400, 300, 945, 420, 2217, 1413, 13, 51308, 51308, 759, 291, 645, 731, 1774, 292, 365, 264, 3089, 3096, 11, 300, 576, 747, 291, 1266, 2077, 13, 51562, 51562, 759, 291, 4999, 380, 11, 550, 309, 576, 747, 2854, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1077211275013215, "compression_ratio": 1.7478632478632479, "no_caption_prob": 6.502556061604992e-05}, {"id": 628, "seek": 235984, "start": 2369.52, "end": 2374.7200000000003, "text": " So you would pretty much copy paste some code, go to another place, copy paste some code", "tokens": [50364, 13603, 570, 11, 4177, 11, 291, 5298, 281, 4813, 341, 47479, 510, 293, 456, 293, 456, 13, 50666, 50666, 1171, 3089, 300, 390, 588, 2531, 281, 437, 390, 958, 281, 309, 13, 50848, 50848, 407, 291, 576, 1238, 709, 5055, 9163, 512, 3089, 11, 352, 281, 1071, 1081, 11, 5055, 9163, 512, 3089, 51108, 51108, 293, 6231, 309, 281, 764, 264, 47479, 13, 51220, 51220, 400, 300, 945, 420, 2217, 1413, 13, 51308, 51308, 759, 291, 645, 731, 1774, 292, 365, 264, 3089, 3096, 11, 300, 576, 747, 291, 1266, 2077, 13, 51562, 51562, 759, 291, 4999, 380, 11, 550, 309, 576, 747, 2854, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1077211275013215, "compression_ratio": 1.7478632478632479, "no_caption_prob": 6.502556061604992e-05}, {"id": 629, "seek": 235984, "start": 2374.7200000000003, "end": 2376.96, "text": " and adapt it to use the constructor.", "tokens": [50364, 13603, 570, 11, 4177, 11, 291, 5298, 281, 4813, 341, 47479, 510, 293, 456, 293, 456, 13, 50666, 50666, 1171, 3089, 300, 390, 588, 2531, 281, 437, 390, 958, 281, 309, 13, 50848, 50848, 407, 291, 576, 1238, 709, 5055, 9163, 512, 3089, 11, 352, 281, 1071, 1081, 11, 5055, 9163, 512, 3089, 51108, 51108, 293, 6231, 309, 281, 764, 264, 47479, 13, 51220, 51220, 400, 300, 945, 420, 2217, 1413, 13, 51308, 51308, 759, 291, 645, 731, 1774, 292, 365, 264, 3089, 3096, 11, 300, 576, 747, 291, 1266, 2077, 13, 51562, 51562, 759, 291, 4999, 380, 11, 550, 309, 576, 747, 2854, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1077211275013215, "compression_ratio": 1.7478632478632479, "no_caption_prob": 6.502556061604992e-05}, {"id": 630, "seek": 235984, "start": 2376.96, "end": 2378.7200000000003, "text": " And that 20 or 30 times.", "tokens": [50364, 13603, 570, 11, 4177, 11, 291, 5298, 281, 4813, 341, 47479, 510, 293, 456, 293, 456, 13, 50666, 50666, 1171, 3089, 300, 390, 588, 2531, 281, 437, 390, 958, 281, 309, 13, 50848, 50848, 407, 291, 576, 1238, 709, 5055, 9163, 512, 3089, 11, 352, 281, 1071, 1081, 11, 5055, 9163, 512, 3089, 51108, 51108, 293, 6231, 309, 281, 764, 264, 47479, 13, 51220, 51220, 400, 300, 945, 420, 2217, 1413, 13, 51308, 51308, 759, 291, 645, 731, 1774, 292, 365, 264, 3089, 3096, 11, 300, 576, 747, 291, 1266, 2077, 13, 51562, 51562, 759, 291, 4999, 380, 11, 550, 309, 576, 747, 2854, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1077211275013215, "compression_ratio": 1.7478632478632479, "no_caption_prob": 6.502556061604992e-05}, {"id": 631, "seek": 235984, "start": 2378.7200000000003, "end": 2383.8, "text": " If you were well versed with the code base, that would take you 10 minutes.", "tokens": [50364, 13603, 570, 11, 4177, 11, 291, 5298, 281, 4813, 341, 47479, 510, 293, 456, 293, 456, 13, 50666, 50666, 1171, 3089, 300, 390, 588, 2531, 281, 437, 390, 958, 281, 309, 13, 50848, 50848, 407, 291, 576, 1238, 709, 5055, 9163, 512, 3089, 11, 352, 281, 1071, 1081, 11, 5055, 9163, 512, 3089, 51108, 51108, 293, 6231, 309, 281, 764, 264, 47479, 13, 51220, 51220, 400, 300, 945, 420, 2217, 1413, 13, 51308, 51308, 759, 291, 645, 731, 1774, 292, 365, 264, 3089, 3096, 11, 300, 576, 747, 291, 1266, 2077, 13, 51562, 51562, 759, 291, 4999, 380, 11, 550, 309, 576, 747, 2854, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1077211275013215, "compression_ratio": 1.7478632478632479, "no_caption_prob": 6.502556061604992e-05}, {"id": 632, "seek": 235984, "start": 2383.8, "end": 2386.6000000000004, "text": " If you weren't, then it would take longer.", "tokens": [50364, 13603, 570, 11, 4177, 11, 291, 5298, 281, 4813, 341, 47479, 510, 293, 456, 293, 456, 13, 50666, 50666, 1171, 3089, 300, 390, 588, 2531, 281, 437, 390, 958, 281, 309, 13, 50848, 50848, 407, 291, 576, 1238, 709, 5055, 9163, 512, 3089, 11, 352, 281, 1071, 1081, 11, 5055, 9163, 512, 3089, 51108, 51108, 293, 6231, 309, 281, 764, 264, 47479, 13, 51220, 51220, 400, 300, 945, 420, 2217, 1413, 13, 51308, 51308, 759, 291, 645, 731, 1774, 292, 365, 264, 3089, 3096, 11, 300, 576, 747, 291, 1266, 2077, 13, 51562, 51562, 759, 291, 4999, 380, 11, 550, 309, 576, 747, 2854, 13, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.1077211275013215, "compression_ratio": 1.7478632478632479, "no_caption_prob": 6.502556061604992e-05}, {"id": 633, "seek": 238660, "start": 2386.6, "end": 2390.36, "text": " And that was just a lot of time not well spent.", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 634, "seek": 238660, "start": 2390.36, "end": 2398.12, "text": " So by refactoring and making it work with code generation, now adding new pages just", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 635, "seek": 238660, "start": 2398.12, "end": 2399.7599999999998, "text": " takes a few seconds.", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 636, "seek": 238660, "start": 2399.7599999999998, "end": 2406.2, "text": " We even have like a script that creates the file and now we can focus on more important", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 637, "seek": 238660, "start": 2406.2, "end": 2407.2, "text": " things.", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 638, "seek": 238660, "start": 2407.2, "end": 2408.2, "text": " Cool.", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 639, "seek": 238660, "start": 2408.2, "end": 2409.2, "text": " Yeah.", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 640, "seek": 238660, "start": 2409.2, "end": 2412.98, "text": " When you do code generation, you can abstract certain details.", "tokens": [50364, 400, 300, 390, 445, 257, 688, 295, 565, 406, 731, 4418, 13, 50552, 50552, 407, 538, 1895, 578, 3662, 293, 1455, 309, 589, 365, 3089, 5125, 11, 586, 5127, 777, 7183, 445, 50940, 50940, 2516, 257, 1326, 3949, 13, 51022, 51022, 492, 754, 362, 411, 257, 5755, 300, 7829, 264, 3991, 293, 586, 321, 393, 1879, 322, 544, 1021, 51344, 51344, 721, 13, 51394, 51394, 8561, 13, 51444, 51444, 865, 13, 51494, 51494, 1133, 291, 360, 3089, 5125, 11, 291, 393, 12649, 1629, 4365, 13, 51683, 51683], "temperature": 0.0, "avg_logprob": -0.11675385678752084, "compression_ratio": 1.5502392344497609, "no_caption_prob": 1.3006961125938687e-05}, {"id": 641, "seek": 241298, "start": 2412.98, "end": 2421.38, "text": " So again, it's an important distinction if you have code that a human is then modifying", "tokens": [50364, 407, 797, 11, 309, 311, 364, 1021, 16844, 498, 291, 362, 3089, 300, 257, 1952, 307, 550, 42626, 50784, 50784, 5717, 264, 1952, 1128, 17431, 341, 3089, 13, 50951, 50951, 467, 311, 10833, 293, 3479, 17578, 13, 51059, 51059, 286, 519, 309, 311, 588, 1021, 281, 362, 257, 1850, 16844, 1296, 729, 13, 51279, 51279, 407, 337, 1365, 11, 264, 3089, 300, 2699, 76, 21884, 13695, 23815, 337, 428, 21884, 13695, 34078, 11, 286, 754, 51567, 51567, 829, 411, 8399, 10833, 3089, 11, 500, 380, 16927, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12229133438278031, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.9525192328728735e-05}, {"id": 642, "seek": 241298, "start": 2421.38, "end": 2424.72, "text": " versus the human never touches this code.", "tokens": [50364, 407, 797, 11, 309, 311, 364, 1021, 16844, 498, 291, 362, 3089, 300, 257, 1952, 307, 550, 42626, 50784, 50784, 5717, 264, 1952, 1128, 17431, 341, 3089, 13, 50951, 50951, 467, 311, 10833, 293, 3479, 17578, 13, 51059, 51059, 286, 519, 309, 311, 588, 1021, 281, 362, 257, 1850, 16844, 1296, 729, 13, 51279, 51279, 407, 337, 1365, 11, 264, 3089, 300, 2699, 76, 21884, 13695, 23815, 337, 428, 21884, 13695, 34078, 11, 286, 754, 51567, 51567, 829, 411, 8399, 10833, 3089, 11, 500, 380, 16927, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12229133438278031, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.9525192328728735e-05}, {"id": 643, "seek": 241298, "start": 2424.72, "end": 2426.88, "text": " It's generated and machine maintained.", "tokens": [50364, 407, 797, 11, 309, 311, 364, 1021, 16844, 498, 291, 362, 3089, 300, 257, 1952, 307, 550, 42626, 50784, 50784, 5717, 264, 1952, 1128, 17431, 341, 3089, 13, 50951, 50951, 467, 311, 10833, 293, 3479, 17578, 13, 51059, 51059, 286, 519, 309, 311, 588, 1021, 281, 362, 257, 1850, 16844, 1296, 729, 13, 51279, 51279, 407, 337, 1365, 11, 264, 3089, 300, 2699, 76, 21884, 13695, 23815, 337, 428, 21884, 13695, 34078, 11, 286, 754, 51567, 51567, 829, 411, 8399, 10833, 3089, 11, 500, 380, 16927, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12229133438278031, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.9525192328728735e-05}, {"id": 644, "seek": 241298, "start": 2426.88, "end": 2431.28, "text": " I think it's very important to have a clear distinction between those.", "tokens": [50364, 407, 797, 11, 309, 311, 364, 1021, 16844, 498, 291, 362, 3089, 300, 257, 1952, 307, 550, 42626, 50784, 50784, 5717, 264, 1952, 1128, 17431, 341, 3089, 13, 50951, 50951, 467, 311, 10833, 293, 3479, 17578, 13, 51059, 51059, 286, 519, 309, 311, 588, 1021, 281, 362, 257, 1850, 16844, 1296, 729, 13, 51279, 51279, 407, 337, 1365, 11, 264, 3089, 300, 2699, 76, 21884, 13695, 23815, 337, 428, 21884, 13695, 34078, 11, 286, 754, 51567, 51567, 829, 411, 8399, 10833, 3089, 11, 500, 380, 16927, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12229133438278031, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.9525192328728735e-05}, {"id": 645, "seek": 241298, "start": 2431.28, "end": 2437.04, "text": " So for example, the code that Elm GraphQL generates for your GraphQL schema, I even", "tokens": [50364, 407, 797, 11, 309, 311, 364, 1021, 16844, 498, 291, 362, 3089, 300, 257, 1952, 307, 550, 42626, 50784, 50784, 5717, 264, 1952, 1128, 17431, 341, 3089, 13, 50951, 50951, 467, 311, 10833, 293, 3479, 17578, 13, 51059, 51059, 286, 519, 309, 311, 588, 1021, 281, 362, 257, 1850, 16844, 1296, 729, 13, 51279, 51279, 407, 337, 1365, 11, 264, 3089, 300, 2699, 76, 21884, 13695, 23815, 337, 428, 21884, 13695, 34078, 11, 286, 754, 51567, 51567, 829, 411, 8399, 10833, 3089, 11, 500, 380, 16927, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12229133438278031, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.9525192328728735e-05}, {"id": 646, "seek": 241298, "start": 2437.04, "end": 2440.68, "text": " put like auto generated code, don't modify.", "tokens": [50364, 407, 797, 11, 309, 311, 364, 1021, 16844, 498, 291, 362, 3089, 300, 257, 1952, 307, 550, 42626, 50784, 50784, 5717, 264, 1952, 1128, 17431, 341, 3089, 13, 50951, 50951, 467, 311, 10833, 293, 3479, 17578, 13, 51059, 51059, 286, 519, 309, 311, 588, 1021, 281, 362, 257, 1850, 16844, 1296, 729, 13, 51279, 51279, 407, 337, 1365, 11, 264, 3089, 300, 2699, 76, 21884, 13695, 23815, 337, 428, 21884, 13695, 34078, 11, 286, 754, 51567, 51567, 829, 411, 8399, 10833, 3089, 11, 500, 380, 16927, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12229133438278031, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.9525192328728735e-05}, {"id": 647, "seek": 244068, "start": 2440.68, "end": 2444.48, "text": " And in fact, I think I have an error there.", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 648, "seek": 244068, "start": 2444.48, "end": 2449.4199999999996, "text": " If you somehow went in and tweaked it, it would say, looks like a human changed this.", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 649, "seek": 244068, "start": 2449.4199999999996, "end": 2453.2999999999997, "text": " So delete the file and then I'll go regenerate it.", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 650, "seek": 244068, "start": 2453.2999999999997, "end": 2456.24, "text": " But I'm not going to touch this file because it looks like a human modified it.", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 651, "seek": 244068, "start": 2456.24, "end": 2457.3199999999997, "text": " Wait, how do you do that?", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 652, "seek": 244068, "start": 2457.3199999999997, "end": 2460.72, "text": " Like when you regenerate, you say, oh, this file has been changed?", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 653, "seek": 244068, "start": 2460.72, "end": 2462.6, "text": " I can't remember exactly what I did.", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 654, "seek": 244068, "start": 2462.6, "end": 2468.56, "text": " I mean, obviously it's sort of like a heuristic, but I don't know.", "tokens": [50364, 400, 294, 1186, 11, 286, 519, 286, 362, 364, 6713, 456, 13, 50554, 50554, 759, 291, 6063, 1437, 294, 293, 6986, 7301, 309, 11, 309, 576, 584, 11, 1542, 411, 257, 1952, 3105, 341, 13, 50801, 50801, 407, 12097, 264, 3991, 293, 550, 286, 603, 352, 26358, 473, 309, 13, 50995, 50995, 583, 286, 478, 406, 516, 281, 2557, 341, 3991, 570, 309, 1542, 411, 257, 1952, 15873, 309, 13, 51142, 51142, 3802, 11, 577, 360, 291, 360, 300, 30, 51196, 51196, 1743, 562, 291, 26358, 473, 11, 291, 584, 11, 1954, 11, 341, 3991, 575, 668, 3105, 30, 51366, 51366, 286, 393, 380, 1604, 2293, 437, 286, 630, 13, 51460, 51460, 286, 914, 11, 2745, 309, 311, 1333, 295, 411, 257, 415, 374, 3142, 11, 457, 286, 500, 380, 458, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.16348872465245864, "compression_ratio": 1.6618181818181819, "no_caption_prob": 1.863149918790441e-05}, {"id": 655, "seek": 246856, "start": 2468.56, "end": 2472.92, "text": " If the file doesn't have that comment that I generate on top of every file or something", "tokens": [50364, 759, 264, 3991, 1177, 380, 362, 300, 2871, 300, 286, 8460, 322, 1192, 295, 633, 3991, 420, 746, 50582, 50582, 411, 300, 11, 550, 286, 584, 11, 309, 1542, 411, 341, 1943, 380, 264, 3991, 286, 2942, 13, 50742, 50742, 400, 286, 500, 380, 528, 281, 2557, 11, 411, 286, 445, 669, 516, 281, 6327, 1314, 1340, 13, 50974, 50974, 407, 652, 988, 300, 341, 10820, 307, 257, 2541, 1364, 1901, 337, 385, 949, 286, 360, 452, 1691, 11, 570, 286, 478, 51335, 51335, 445, 516, 281, 6327, 1203, 1314, 365, 44493, 337, 1203, 300, 257, 1952, 9828, 13, 51593, 51593, 583, 286, 519, 300, 311, 588, 1021, 300, 456, 820, 312, 257, 1850, 14634, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.0962696393330892, "compression_ratio": 1.7463768115942029, "no_caption_prob": 8.139592864608858e-06}, {"id": 656, "seek": 246856, "start": 2472.92, "end": 2476.12, "text": " like that, then I say, it looks like this isn't the file I created.", "tokens": [50364, 759, 264, 3991, 1177, 380, 362, 300, 2871, 300, 286, 8460, 322, 1192, 295, 633, 3991, 420, 746, 50582, 50582, 411, 300, 11, 550, 286, 584, 11, 309, 1542, 411, 341, 1943, 380, 264, 3991, 286, 2942, 13, 50742, 50742, 400, 286, 500, 380, 528, 281, 2557, 11, 411, 286, 445, 669, 516, 281, 6327, 1314, 1340, 13, 50974, 50974, 407, 652, 988, 300, 341, 10820, 307, 257, 2541, 1364, 1901, 337, 385, 949, 286, 360, 452, 1691, 11, 570, 286, 478, 51335, 51335, 445, 516, 281, 6327, 1203, 1314, 365, 44493, 337, 1203, 300, 257, 1952, 9828, 13, 51593, 51593, 583, 286, 519, 300, 311, 588, 1021, 300, 456, 820, 312, 257, 1850, 14634, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.0962696393330892, "compression_ratio": 1.7463768115942029, "no_caption_prob": 8.139592864608858e-06}, {"id": 657, "seek": 246856, "start": 2476.12, "end": 2480.7599999999998, "text": " And I don't want to touch, like I just am going to blow away anything.", "tokens": [50364, 759, 264, 3991, 1177, 380, 362, 300, 2871, 300, 286, 8460, 322, 1192, 295, 633, 3991, 420, 746, 50582, 50582, 411, 300, 11, 550, 286, 584, 11, 309, 1542, 411, 341, 1943, 380, 264, 3991, 286, 2942, 13, 50742, 50742, 400, 286, 500, 380, 528, 281, 2557, 11, 411, 286, 445, 669, 516, 281, 6327, 1314, 1340, 13, 50974, 50974, 407, 652, 988, 300, 341, 10820, 307, 257, 2541, 1364, 1901, 337, 385, 949, 286, 360, 452, 1691, 11, 570, 286, 478, 51335, 51335, 445, 516, 281, 6327, 1203, 1314, 365, 44493, 337, 1203, 300, 257, 1952, 9828, 13, 51593, 51593, 583, 286, 519, 300, 311, 588, 1021, 300, 456, 820, 312, 257, 1850, 14634, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.0962696393330892, "compression_ratio": 1.7463768115942029, "no_caption_prob": 8.139592864608858e-06}, {"id": 658, "seek": 246856, "start": 2480.7599999999998, "end": 2487.98, "text": " So make sure that this folder is a clean working space for me before I do my job, because I'm", "tokens": [50364, 759, 264, 3991, 1177, 380, 362, 300, 2871, 300, 286, 8460, 322, 1192, 295, 633, 3991, 420, 746, 50582, 50582, 411, 300, 11, 550, 286, 584, 11, 309, 1542, 411, 341, 1943, 380, 264, 3991, 286, 2942, 13, 50742, 50742, 400, 286, 500, 380, 528, 281, 2557, 11, 411, 286, 445, 669, 516, 281, 6327, 1314, 1340, 13, 50974, 50974, 407, 652, 988, 300, 341, 10820, 307, 257, 2541, 1364, 1901, 337, 385, 949, 286, 360, 452, 1691, 11, 570, 286, 478, 51335, 51335, 445, 516, 281, 6327, 1203, 1314, 365, 44493, 337, 1203, 300, 257, 1952, 9828, 13, 51593, 51593, 583, 286, 519, 300, 311, 588, 1021, 300, 456, 820, 312, 257, 1850, 14634, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.0962696393330892, "compression_ratio": 1.7463768115942029, "no_caption_prob": 8.139592864608858e-06}, {"id": 659, "seek": 246856, "start": 2487.98, "end": 2493.14, "text": " just going to blow everything away with disregard for everything that a human touched.", "tokens": [50364, 759, 264, 3991, 1177, 380, 362, 300, 2871, 300, 286, 8460, 322, 1192, 295, 633, 3991, 420, 746, 50582, 50582, 411, 300, 11, 550, 286, 584, 11, 309, 1542, 411, 341, 1943, 380, 264, 3991, 286, 2942, 13, 50742, 50742, 400, 286, 500, 380, 528, 281, 2557, 11, 411, 286, 445, 669, 516, 281, 6327, 1314, 1340, 13, 50974, 50974, 407, 652, 988, 300, 341, 10820, 307, 257, 2541, 1364, 1901, 337, 385, 949, 286, 360, 452, 1691, 11, 570, 286, 478, 51335, 51335, 445, 516, 281, 6327, 1203, 1314, 365, 44493, 337, 1203, 300, 257, 1952, 9828, 13, 51593, 51593, 583, 286, 519, 300, 311, 588, 1021, 300, 456, 820, 312, 257, 1850, 14634, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.0962696393330892, "compression_ratio": 1.7463768115942029, "no_caption_prob": 8.139592864608858e-06}, {"id": 660, "seek": 246856, "start": 2493.14, "end": 2497.2, "text": " But I think that's very important that there should be a clear separation.", "tokens": [50364, 759, 264, 3991, 1177, 380, 362, 300, 2871, 300, 286, 8460, 322, 1192, 295, 633, 3991, 420, 746, 50582, 50582, 411, 300, 11, 550, 286, 584, 11, 309, 1542, 411, 341, 1943, 380, 264, 3991, 286, 2942, 13, 50742, 50742, 400, 286, 500, 380, 528, 281, 2557, 11, 411, 286, 445, 669, 516, 281, 6327, 1314, 1340, 13, 50974, 50974, 407, 652, 988, 300, 341, 10820, 307, 257, 2541, 1364, 1901, 337, 385, 949, 286, 360, 452, 1691, 11, 570, 286, 478, 51335, 51335, 445, 516, 281, 6327, 1203, 1314, 365, 44493, 337, 1203, 300, 257, 1952, 9828, 13, 51593, 51593, 583, 286, 519, 300, 311, 588, 1021, 300, 456, 820, 312, 257, 1850, 14634, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.0962696393330892, "compression_ratio": 1.7463768115942029, "no_caption_prob": 8.139592864608858e-06}, {"id": 661, "seek": 249720, "start": 2497.2, "end": 2504.56, "text": " Now, obviously humans use that code, but they shouldn't touch the generated code.", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 662, "seek": 249720, "start": 2504.56, "end": 2509.98, "text": " You should either have code generated that's entirely maintained by the code generator,", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 663, "seek": 249720, "start": 2509.98, "end": 2515.08, "text": " or you should have code that's scaffolded and then you take ownership over it.", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 664, "seek": 249720, "start": 2515.08, "end": 2516.08, "text": " Or parts of it.", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 665, "seek": 249720, "start": 2516.08, "end": 2520.2799999999997, "text": " Like you can generate part of it, scaffold another, and then use those together.", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 666, "seek": 249720, "start": 2520.2799999999997, "end": 2521.2799999999997, "text": " What would be an example?", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 667, "seek": 249720, "start": 2521.2799999999997, "end": 2522.2799999999997, "text": " I don't know.", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 668, "seek": 249720, "start": 2522.2799999999997, "end": 2523.2799999999997, "text": " I haven't encountered that.", "tokens": [50364, 823, 11, 2745, 6255, 764, 300, 3089, 11, 457, 436, 4659, 380, 2557, 264, 10833, 3089, 13, 50732, 50732, 509, 820, 2139, 362, 3089, 10833, 300, 311, 7696, 17578, 538, 264, 3089, 19265, 11, 51003, 51003, 420, 291, 820, 362, 3089, 300, 311, 44094, 292, 293, 550, 291, 747, 15279, 670, 309, 13, 51258, 51258, 1610, 3166, 295, 309, 13, 51308, 51308, 1743, 291, 393, 8460, 644, 295, 309, 11, 44094, 1071, 11, 293, 550, 764, 729, 1214, 13, 51518, 51518, 708, 576, 312, 364, 1365, 30, 51568, 51568, 286, 500, 380, 458, 13, 51618, 51618, 286, 2378, 380, 20381, 300, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.14798958796375203, "compression_ratio": 1.764957264957265, "no_caption_prob": 6.748015493940329e-06}, {"id": 669, "seek": 252328, "start": 2523.28, "end": 2530.96, "text": " I mean, like if there's something, if there are parts of it that you, that could make", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 670, "seek": 252328, "start": 2530.96, "end": 2536.5600000000004, "text": " use of code generation and parts of it that need to be changed by someone, then you generate", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 671, "seek": 252328, "start": 2536.5600000000004, "end": 2537.5600000000004, "text": " the one.", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 672, "seek": 252328, "start": 2537.5600000000004, "end": 2538.5600000000004, "text": " I see.", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 673, "seek": 252328, "start": 2538.5600000000004, "end": 2539.5600000000004, "text": " Right, right, right.", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 674, "seek": 252328, "start": 2539.5600000000004, "end": 2542.88, "text": " You generate the former and scaffold the latter.", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 675, "seek": 252328, "start": 2542.88, "end": 2545.82, "text": " Yes, you can certainly mix them within a project.", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 676, "seek": 252328, "start": 2545.82, "end": 2552.0800000000004, "text": " But it's good to be clear about like a file should either be generated or not.", "tokens": [50364, 286, 914, 11, 411, 498, 456, 311, 746, 11, 498, 456, 366, 3166, 295, 309, 300, 291, 11, 300, 727, 652, 50748, 50748, 764, 295, 3089, 5125, 293, 3166, 295, 309, 300, 643, 281, 312, 3105, 538, 1580, 11, 550, 291, 8460, 51028, 51028, 264, 472, 13, 51078, 51078, 286, 536, 13, 51128, 51128, 1779, 11, 558, 11, 558, 13, 51178, 51178, 509, 8460, 264, 5819, 293, 44094, 264, 18481, 13, 51344, 51344, 1079, 11, 291, 393, 3297, 2890, 552, 1951, 257, 1716, 13, 51491, 51491, 583, 309, 311, 665, 281, 312, 1850, 466, 411, 257, 3991, 820, 2139, 312, 10833, 420, 406, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.17282590159663447, "compression_ratio": 1.738938053097345, "no_caption_prob": 8.614394027972594e-05}, {"id": 677, "seek": 255208, "start": 2552.08, "end": 2554.7599999999998, "text": " Like it should either be maintained by a code generator or not.", "tokens": [50364, 1743, 309, 820, 2139, 312, 17578, 538, 257, 3089, 19265, 420, 406, 13, 50498, 50498, 400, 309, 311, 665, 281, 406, 2890, 729, 493, 13, 50608, 50608, 823, 309, 307, 11, 293, 1071, 1880, 551, 300, 393, 1051, 307, 291, 393, 764, 3539, 2699, 76, 3089, 11, 50992, 50992, 411, 21156, 278, 264, 316, 6840, 382, 264, 4009, 295, 3494, 13, 51124, 51124, 583, 300, 393, 2138, 483, 6179, 11, 457, 300, 393, 312, 257, 665, 636, 281, 1066, 264, 11, 300, 393, 51462, 51462, 312, 257, 665, 636, 281, 39349, 3207, 322, 1192, 295, 257, 1629, 4973, 2316, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.14210067345545843, "compression_ratio": 1.6437768240343347, "no_caption_prob": 7.76689648773754e-06}, {"id": 678, "seek": 255208, "start": 2554.7599999999998, "end": 2556.96, "text": " And it's good to not mix those up.", "tokens": [50364, 1743, 309, 820, 2139, 312, 17578, 538, 257, 3089, 19265, 420, 406, 13, 50498, 50498, 400, 309, 311, 665, 281, 406, 2890, 729, 493, 13, 50608, 50608, 823, 309, 307, 11, 293, 1071, 1880, 551, 300, 393, 1051, 307, 291, 393, 764, 3539, 2699, 76, 3089, 11, 50992, 50992, 411, 21156, 278, 264, 316, 6840, 382, 264, 4009, 295, 3494, 13, 51124, 51124, 583, 300, 393, 2138, 483, 6179, 11, 457, 300, 393, 312, 257, 665, 636, 281, 1066, 264, 11, 300, 393, 51462, 51462, 312, 257, 665, 636, 281, 39349, 3207, 322, 1192, 295, 257, 1629, 4973, 2316, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.14210067345545843, "compression_ratio": 1.6437768240343347, "no_caption_prob": 7.76689648773754e-06}, {"id": 679, "seek": 255208, "start": 2556.96, "end": 2564.64, "text": " Now it is, and another interesting thing that can happen is you can use actual Elm code,", "tokens": [50364, 1743, 309, 820, 2139, 312, 17578, 538, 257, 3089, 19265, 420, 406, 13, 50498, 50498, 400, 309, 311, 665, 281, 406, 2890, 729, 493, 13, 50608, 50608, 823, 309, 307, 11, 293, 1071, 1880, 551, 300, 393, 1051, 307, 291, 393, 764, 3539, 2699, 76, 3089, 11, 50992, 50992, 411, 21156, 278, 264, 316, 6840, 382, 264, 4009, 295, 3494, 13, 51124, 51124, 583, 300, 393, 2138, 483, 6179, 11, 457, 300, 393, 312, 257, 665, 636, 281, 1066, 264, 11, 300, 393, 51462, 51462, 312, 257, 665, 636, 281, 39349, 3207, 322, 1192, 295, 257, 1629, 4973, 2316, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.14210067345545843, "compression_ratio": 1.6437768240343347, "no_caption_prob": 7.76689648773754e-06}, {"id": 680, "seek": 255208, "start": 2564.64, "end": 2567.2799999999997, "text": " like parsing the AST as the source of truth.", "tokens": [50364, 1743, 309, 820, 2139, 312, 17578, 538, 257, 3089, 19265, 420, 406, 13, 50498, 50498, 400, 309, 311, 665, 281, 406, 2890, 729, 493, 13, 50608, 50608, 823, 309, 307, 11, 293, 1071, 1880, 551, 300, 393, 1051, 307, 291, 393, 764, 3539, 2699, 76, 3089, 11, 50992, 50992, 411, 21156, 278, 264, 316, 6840, 382, 264, 4009, 295, 3494, 13, 51124, 51124, 583, 300, 393, 2138, 483, 6179, 11, 457, 300, 393, 312, 257, 665, 636, 281, 1066, 264, 11, 300, 393, 51462, 51462, 312, 257, 665, 636, 281, 39349, 3207, 322, 1192, 295, 257, 1629, 4973, 2316, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.14210067345545843, "compression_ratio": 1.6437768240343347, "no_caption_prob": 7.76689648773754e-06}, {"id": 681, "seek": 255208, "start": 2567.2799999999997, "end": 2574.04, "text": " But that can definitely get complicated, but that can be a good way to keep the, that can", "tokens": [50364, 1743, 309, 820, 2139, 312, 17578, 538, 257, 3089, 19265, 420, 406, 13, 50498, 50498, 400, 309, 311, 665, 281, 406, 2890, 729, 493, 13, 50608, 50608, 823, 309, 307, 11, 293, 1071, 1880, 551, 300, 393, 1051, 307, 291, 393, 764, 3539, 2699, 76, 3089, 11, 50992, 50992, 411, 21156, 278, 264, 316, 6840, 382, 264, 4009, 295, 3494, 13, 51124, 51124, 583, 300, 393, 2138, 483, 6179, 11, 457, 300, 393, 312, 257, 665, 636, 281, 1066, 264, 11, 300, 393, 51462, 51462, 312, 257, 665, 636, 281, 39349, 3207, 322, 1192, 295, 257, 1629, 4973, 2316, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.14210067345545843, "compression_ratio": 1.6437768240343347, "no_caption_prob": 7.76689648773754e-06}, {"id": 682, "seek": 255208, "start": 2574.04, "end": 2576.72, "text": " be a good way to piggyback on top of a certain mental model.", "tokens": [50364, 1743, 309, 820, 2139, 312, 17578, 538, 257, 3089, 19265, 420, 406, 13, 50498, 50498, 400, 309, 311, 665, 281, 406, 2890, 729, 493, 13, 50608, 50608, 823, 309, 307, 11, 293, 1071, 1880, 551, 300, 393, 1051, 307, 291, 393, 764, 3539, 2699, 76, 3089, 11, 50992, 50992, 411, 21156, 278, 264, 316, 6840, 382, 264, 4009, 295, 3494, 13, 51124, 51124, 583, 300, 393, 2138, 483, 6179, 11, 457, 300, 393, 312, 257, 665, 636, 281, 1066, 264, 11, 300, 393, 51462, 51462, 312, 257, 665, 636, 281, 39349, 3207, 322, 1192, 295, 257, 1629, 4973, 2316, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.14210067345545843, "compression_ratio": 1.6437768240343347, "no_caption_prob": 7.76689648773754e-06}, {"id": 683, "seek": 257672, "start": 2576.72, "end": 2582.2, "text": " Cause you say, okay, well I know when I, when I write a decoder that does this, I expect", "tokens": [50364, 10865, 291, 584, 11, 1392, 11, 731, 286, 458, 562, 286, 11, 562, 286, 2464, 257, 979, 19866, 300, 775, 341, 11, 286, 2066, 50638, 50638, 309, 281, 589, 341, 636, 13, 50688, 50688, 400, 550, 291, 2464, 512, 3089, 5125, 300, 23815, 746, 281, 294, 1406, 295, 300, 13, 50920, 50920, 583, 300, 393, 2138, 483, 16191, 570, 586, 309, 311, 2891, 281, 841, 544, 411, 1131, 569, 340, 1342, 2810, 51238, 51238, 689, 291, 1319, 512, 2699, 76, 3089, 293, 291, 434, 411, 11, 876, 11, 286, 393, 36741, 341, 13, 51432, 51432, 286, 393, 1319, 341, 293, 721, 722, 281, 1821, 293, 13106, 2098, 13, 51608, 51608, 407, 309, 393, 4159, 512, 295, 264, 32567, 294, 257, 1629, 636, 11, 597, 307, 983, 264, 4973, 2316, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.08438742788214433, "compression_ratio": 1.751700680272109, "no_caption_prob": 1.2411283933033701e-05}, {"id": 684, "seek": 257672, "start": 2582.2, "end": 2583.2, "text": " it to work this way.", "tokens": [50364, 10865, 291, 584, 11, 1392, 11, 731, 286, 458, 562, 286, 11, 562, 286, 2464, 257, 979, 19866, 300, 775, 341, 11, 286, 2066, 50638, 50638, 309, 281, 589, 341, 636, 13, 50688, 50688, 400, 550, 291, 2464, 512, 3089, 5125, 300, 23815, 746, 281, 294, 1406, 295, 300, 13, 50920, 50920, 583, 300, 393, 2138, 483, 16191, 570, 586, 309, 311, 2891, 281, 841, 544, 411, 1131, 569, 340, 1342, 2810, 51238, 51238, 689, 291, 1319, 512, 2699, 76, 3089, 293, 291, 434, 411, 11, 876, 11, 286, 393, 36741, 341, 13, 51432, 51432, 286, 393, 1319, 341, 293, 721, 722, 281, 1821, 293, 13106, 2098, 13, 51608, 51608, 407, 309, 393, 4159, 512, 295, 264, 32567, 294, 257, 1629, 636, 11, 597, 307, 983, 264, 4973, 2316, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.08438742788214433, "compression_ratio": 1.751700680272109, "no_caption_prob": 1.2411283933033701e-05}, {"id": 685, "seek": 257672, "start": 2583.2, "end": 2587.8399999999997, "text": " And then you write some code generation that generates something to in support of that.", "tokens": [50364, 10865, 291, 584, 11, 1392, 11, 731, 286, 458, 562, 286, 11, 562, 286, 2464, 257, 979, 19866, 300, 775, 341, 11, 286, 2066, 50638, 50638, 309, 281, 589, 341, 636, 13, 50688, 50688, 400, 550, 291, 2464, 512, 3089, 5125, 300, 23815, 746, 281, 294, 1406, 295, 300, 13, 50920, 50920, 583, 300, 393, 2138, 483, 16191, 570, 586, 309, 311, 2891, 281, 841, 544, 411, 1131, 569, 340, 1342, 2810, 51238, 51238, 689, 291, 1319, 512, 2699, 76, 3089, 293, 291, 434, 411, 11, 876, 11, 286, 393, 36741, 341, 13, 51432, 51432, 286, 393, 1319, 341, 293, 721, 722, 281, 1821, 293, 13106, 2098, 13, 51608, 51608, 407, 309, 393, 4159, 512, 295, 264, 32567, 294, 257, 1629, 636, 11, 597, 307, 983, 264, 4973, 2316, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.08438742788214433, "compression_ratio": 1.751700680272109, "no_caption_prob": 1.2411283933033701e-05}, {"id": 686, "seek": 257672, "start": 2587.8399999999997, "end": 2594.2, "text": " But that can definitely get messy because now it's starting to feel more like metaprogramming", "tokens": [50364, 10865, 291, 584, 11, 1392, 11, 731, 286, 458, 562, 286, 11, 562, 286, 2464, 257, 979, 19866, 300, 775, 341, 11, 286, 2066, 50638, 50638, 309, 281, 589, 341, 636, 13, 50688, 50688, 400, 550, 291, 2464, 512, 3089, 5125, 300, 23815, 746, 281, 294, 1406, 295, 300, 13, 50920, 50920, 583, 300, 393, 2138, 483, 16191, 570, 586, 309, 311, 2891, 281, 841, 544, 411, 1131, 569, 340, 1342, 2810, 51238, 51238, 689, 291, 1319, 512, 2699, 76, 3089, 293, 291, 434, 411, 11, 876, 11, 286, 393, 36741, 341, 13, 51432, 51432, 286, 393, 1319, 341, 293, 721, 722, 281, 1821, 293, 13106, 2098, 13, 51608, 51608, 407, 309, 393, 4159, 512, 295, 264, 32567, 294, 257, 1629, 636, 11, 597, 307, 983, 264, 4973, 2316, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.08438742788214433, "compression_ratio": 1.751700680272109, "no_caption_prob": 1.2411283933033701e-05}, {"id": 687, "seek": 257672, "start": 2594.2, "end": 2598.08, "text": " where you change some Elm code and you're like, Oh, I can rename this.", "tokens": [50364, 10865, 291, 584, 11, 1392, 11, 731, 286, 458, 562, 286, 11, 562, 286, 2464, 257, 979, 19866, 300, 775, 341, 11, 286, 2066, 50638, 50638, 309, 281, 589, 341, 636, 13, 50688, 50688, 400, 550, 291, 2464, 512, 3089, 5125, 300, 23815, 746, 281, 294, 1406, 295, 300, 13, 50920, 50920, 583, 300, 393, 2138, 483, 16191, 570, 586, 309, 311, 2891, 281, 841, 544, 411, 1131, 569, 340, 1342, 2810, 51238, 51238, 689, 291, 1319, 512, 2699, 76, 3089, 293, 291, 434, 411, 11, 876, 11, 286, 393, 36741, 341, 13, 51432, 51432, 286, 393, 1319, 341, 293, 721, 722, 281, 1821, 293, 13106, 2098, 13, 51608, 51608, 407, 309, 393, 4159, 512, 295, 264, 32567, 294, 257, 1629, 636, 11, 597, 307, 983, 264, 4973, 2316, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.08438742788214433, "compression_ratio": 1.751700680272109, "no_caption_prob": 1.2411283933033701e-05}, {"id": 688, "seek": 257672, "start": 2598.08, "end": 2601.6, "text": " I can change this and things start to break and unexpected ways.", "tokens": [50364, 10865, 291, 584, 11, 1392, 11, 731, 286, 458, 562, 286, 11, 562, 286, 2464, 257, 979, 19866, 300, 775, 341, 11, 286, 2066, 50638, 50638, 309, 281, 589, 341, 636, 13, 50688, 50688, 400, 550, 291, 2464, 512, 3089, 5125, 300, 23815, 746, 281, 294, 1406, 295, 300, 13, 50920, 50920, 583, 300, 393, 2138, 483, 16191, 570, 586, 309, 311, 2891, 281, 841, 544, 411, 1131, 569, 340, 1342, 2810, 51238, 51238, 689, 291, 1319, 512, 2699, 76, 3089, 293, 291, 434, 411, 11, 876, 11, 286, 393, 36741, 341, 13, 51432, 51432, 286, 393, 1319, 341, 293, 721, 722, 281, 1821, 293, 13106, 2098, 13, 51608, 51608, 407, 309, 393, 4159, 512, 295, 264, 32567, 294, 257, 1629, 636, 11, 597, 307, 983, 264, 4973, 2316, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.08438742788214433, "compression_ratio": 1.751700680272109, "no_caption_prob": 1.2411283933033701e-05}, {"id": 689, "seek": 257672, "start": 2601.6, "end": 2606.2799999999997, "text": " So it can remove some of the guarantees in a certain way, which is why the mental model", "tokens": [50364, 10865, 291, 584, 11, 1392, 11, 731, 286, 458, 562, 286, 11, 562, 286, 2464, 257, 979, 19866, 300, 775, 341, 11, 286, 2066, 50638, 50638, 309, 281, 589, 341, 636, 13, 50688, 50688, 400, 550, 291, 2464, 512, 3089, 5125, 300, 23815, 746, 281, 294, 1406, 295, 300, 13, 50920, 50920, 583, 300, 393, 2138, 483, 16191, 570, 586, 309, 311, 2891, 281, 841, 544, 411, 1131, 569, 340, 1342, 2810, 51238, 51238, 689, 291, 1319, 512, 2699, 76, 3089, 293, 291, 434, 411, 11, 876, 11, 286, 393, 36741, 341, 13, 51432, 51432, 286, 393, 1319, 341, 293, 721, 722, 281, 1821, 293, 13106, 2098, 13, 51608, 51608, 407, 309, 393, 4159, 512, 295, 264, 32567, 294, 257, 1629, 636, 11, 597, 307, 983, 264, 4973, 2316, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.08438742788214433, "compression_ratio": 1.751700680272109, "no_caption_prob": 1.2411283933033701e-05}, {"id": 690, "seek": 260628, "start": 2606.28, "end": 2611.6400000000003, "text": " is really important because you, you, if you can, if you can make it so you can map very", "tokens": [50364, 307, 534, 1021, 570, 291, 11, 291, 11, 498, 291, 393, 11, 498, 291, 393, 652, 309, 370, 291, 393, 4471, 588, 50632, 50632, 3838, 3911, 364, 6741, 3410, 11, 550, 2618, 727, 584, 11, 731, 11, 498, 286, 652, 341, 1319, 11, 286, 50966, 50966, 2066, 309, 281, 406, 1821, 13, 51030, 51030, 759, 286, 652, 341, 1319, 11, 286, 2066, 309, 281, 1821, 13, 51142, 51142, 400, 291, 727, 767, 18340, 300, 4707, 11, 300, 10815, 570, 291, 600, 33318, 3911, 51380, 51380, 300, 4973, 2316, 13, 51448, 51448, 407, 437, 366, 428, 6082, 293, 11733, 300, 291, 600, 3264, 365, 3089, 5125, 30, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09393093802712181, "compression_ratio": 1.8101265822784811, "no_caption_prob": 1.4510314031213056e-05}, {"id": 691, "seek": 260628, "start": 2611.6400000000003, "end": 2618.32, "text": " directly onto an existing concept, then somebody could say, well, if I make this change, I", "tokens": [50364, 307, 534, 1021, 570, 291, 11, 291, 11, 498, 291, 393, 11, 498, 291, 393, 652, 309, 370, 291, 393, 4471, 588, 50632, 50632, 3838, 3911, 364, 6741, 3410, 11, 550, 2618, 727, 584, 11, 731, 11, 498, 286, 652, 341, 1319, 11, 286, 50966, 50966, 2066, 309, 281, 406, 1821, 13, 51030, 51030, 759, 286, 652, 341, 1319, 11, 286, 2066, 309, 281, 1821, 13, 51142, 51142, 400, 291, 727, 767, 18340, 300, 4707, 11, 300, 10815, 570, 291, 600, 33318, 3911, 51380, 51380, 300, 4973, 2316, 13, 51448, 51448, 407, 437, 366, 428, 6082, 293, 11733, 300, 291, 600, 3264, 365, 3089, 5125, 30, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09393093802712181, "compression_ratio": 1.8101265822784811, "no_caption_prob": 1.4510314031213056e-05}, {"id": 692, "seek": 260628, "start": 2618.32, "end": 2619.6000000000004, "text": " expect it to not break.", "tokens": [50364, 307, 534, 1021, 570, 291, 11, 291, 11, 498, 291, 393, 11, 498, 291, 393, 652, 309, 370, 291, 393, 4471, 588, 50632, 50632, 3838, 3911, 364, 6741, 3410, 11, 550, 2618, 727, 584, 11, 731, 11, 498, 286, 652, 341, 1319, 11, 286, 50966, 50966, 2066, 309, 281, 406, 1821, 13, 51030, 51030, 759, 286, 652, 341, 1319, 11, 286, 2066, 309, 281, 1821, 13, 51142, 51142, 400, 291, 727, 767, 18340, 300, 4707, 11, 300, 10815, 570, 291, 600, 33318, 3911, 51380, 51380, 300, 4973, 2316, 13, 51448, 51448, 407, 437, 366, 428, 6082, 293, 11733, 300, 291, 600, 3264, 365, 3089, 5125, 30, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09393093802712181, "compression_ratio": 1.8101265822784811, "no_caption_prob": 1.4510314031213056e-05}, {"id": 693, "seek": 260628, "start": 2619.6000000000004, "end": 2621.84, "text": " If I make this change, I expect it to break.", "tokens": [50364, 307, 534, 1021, 570, 291, 11, 291, 11, 498, 291, 393, 11, 498, 291, 393, 652, 309, 370, 291, 393, 4471, 588, 50632, 50632, 3838, 3911, 364, 6741, 3410, 11, 550, 2618, 727, 584, 11, 731, 11, 498, 286, 652, 341, 1319, 11, 286, 50966, 50966, 2066, 309, 281, 406, 1821, 13, 51030, 51030, 759, 286, 652, 341, 1319, 11, 286, 2066, 309, 281, 1821, 13, 51142, 51142, 400, 291, 727, 767, 18340, 300, 4707, 11, 300, 10815, 570, 291, 600, 33318, 3911, 51380, 51380, 300, 4973, 2316, 13, 51448, 51448, 407, 437, 366, 428, 6082, 293, 11733, 300, 291, 600, 3264, 365, 3089, 5125, 30, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09393093802712181, "compression_ratio": 1.8101265822784811, "no_caption_prob": 1.4510314031213056e-05}, {"id": 694, "seek": 260628, "start": 2621.84, "end": 2626.6000000000004, "text": " And you could actually retain that property, that guarantee because you've mapped onto", "tokens": [50364, 307, 534, 1021, 570, 291, 11, 291, 11, 498, 291, 393, 11, 498, 291, 393, 652, 309, 370, 291, 393, 4471, 588, 50632, 50632, 3838, 3911, 364, 6741, 3410, 11, 550, 2618, 727, 584, 11, 731, 11, 498, 286, 652, 341, 1319, 11, 286, 50966, 50966, 2066, 309, 281, 406, 1821, 13, 51030, 51030, 759, 286, 652, 341, 1319, 11, 286, 2066, 309, 281, 1821, 13, 51142, 51142, 400, 291, 727, 767, 18340, 300, 4707, 11, 300, 10815, 570, 291, 600, 33318, 3911, 51380, 51380, 300, 4973, 2316, 13, 51448, 51448, 407, 437, 366, 428, 6082, 293, 11733, 300, 291, 600, 3264, 365, 3089, 5125, 30, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09393093802712181, "compression_ratio": 1.8101265822784811, "no_caption_prob": 1.4510314031213056e-05}, {"id": 695, "seek": 260628, "start": 2626.6000000000004, "end": 2627.96, "text": " that mental model.", "tokens": [50364, 307, 534, 1021, 570, 291, 11, 291, 11, 498, 291, 393, 11, 498, 291, 393, 652, 309, 370, 291, 393, 4471, 588, 50632, 50632, 3838, 3911, 364, 6741, 3410, 11, 550, 2618, 727, 584, 11, 731, 11, 498, 286, 652, 341, 1319, 11, 286, 50966, 50966, 2066, 309, 281, 406, 1821, 13, 51030, 51030, 759, 286, 652, 341, 1319, 11, 286, 2066, 309, 281, 1821, 13, 51142, 51142, 400, 291, 727, 767, 18340, 300, 4707, 11, 300, 10815, 570, 291, 600, 33318, 3911, 51380, 51380, 300, 4973, 2316, 13, 51448, 51448, 407, 437, 366, 428, 6082, 293, 11733, 300, 291, 600, 3264, 365, 3089, 5125, 30, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09393093802712181, "compression_ratio": 1.8101265822784811, "no_caption_prob": 1.4510314031213056e-05}, {"id": 696, "seek": 260628, "start": 2627.96, "end": 2632.6800000000003, "text": " So what are your tips and tricks that you've learned with code generation?", "tokens": [50364, 307, 534, 1021, 570, 291, 11, 291, 11, 498, 291, 393, 11, 498, 291, 393, 652, 309, 370, 291, 393, 4471, 588, 50632, 50632, 3838, 3911, 364, 6741, 3410, 11, 550, 2618, 727, 584, 11, 731, 11, 498, 286, 652, 341, 1319, 11, 286, 50966, 50966, 2066, 309, 281, 406, 1821, 13, 51030, 51030, 759, 286, 652, 341, 1319, 11, 286, 2066, 309, 281, 1821, 13, 51142, 51142, 400, 291, 727, 767, 18340, 300, 4707, 11, 300, 10815, 570, 291, 600, 33318, 3911, 51380, 51380, 300, 4973, 2316, 13, 51448, 51448, 407, 437, 366, 428, 6082, 293, 11733, 300, 291, 600, 3264, 365, 3089, 5125, 30, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.09393093802712181, "compression_ratio": 1.8101265822784811, "no_caption_prob": 1.4510314031213056e-05}, {"id": 697, "seek": 263268, "start": 2632.68, "end": 2637.16, "text": " One of my favorite tips, which I've probably talked about it some, actually maybe I haven't", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 698, "seek": 263268, "start": 2637.16, "end": 2638.96, "text": " talked about it on Elm radio yet.", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 699, "seek": 263268, "start": 2638.96, "end": 2642.7599999999998, "text": " My biggest tip is end to end testing your generated code.", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 700, "seek": 263268, "start": 2642.7599999999998, "end": 2643.7599999999998, "text": " It's awesome.", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 701, "seek": 263268, "start": 2643.7599999999998, "end": 2650.08, "text": " Um, I've definitely, you know, given, given you my rant on this before, but, um, I love", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 702, "seek": 263268, "start": 2650.08, "end": 2651.08, "text": " it.", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 703, "seek": 263268, "start": 2651.08, "end": 2655.24, "text": " Uh, it's so easy to get confidence about your generated code.", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 704, "seek": 263268, "start": 2655.24, "end": 2659.7999999999997, "text": " Basically the workflow is, you know, write an end to end test, which is some sort of", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 705, "seek": 263268, "start": 2659.7999999999997, "end": 2660.7999999999997, "text": " snapshot test.", "tokens": [50364, 1485, 295, 452, 2954, 6082, 11, 597, 286, 600, 1391, 2825, 466, 309, 512, 11, 767, 1310, 286, 2378, 380, 50588, 50588, 2825, 466, 309, 322, 2699, 76, 6477, 1939, 13, 50678, 50678, 1222, 3880, 4125, 307, 917, 281, 917, 4997, 428, 10833, 3089, 13, 50868, 50868, 467, 311, 3476, 13, 50918, 50918, 3301, 11, 286, 600, 2138, 11, 291, 458, 11, 2212, 11, 2212, 291, 452, 45332, 322, 341, 949, 11, 457, 11, 1105, 11, 286, 959, 51234, 51234, 309, 13, 51284, 51284, 4019, 11, 309, 311, 370, 1858, 281, 483, 6687, 466, 428, 10833, 3089, 13, 51492, 51492, 8537, 264, 20993, 307, 11, 291, 458, 11, 2464, 364, 917, 281, 917, 1500, 11, 597, 307, 512, 1333, 295, 51720, 51720, 30163, 1500, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11138601081315862, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.2377288334828336e-06}, {"id": 706, "seek": 266080, "start": 2660.8, "end": 2665.88, "text": " So somehow you're saying, um, like with Elm GraphQL, for example, you've got this, this", "tokens": [50364, 407, 6063, 291, 434, 1566, 11, 1105, 11, 411, 365, 2699, 76, 21884, 13695, 11, 337, 1365, 11, 291, 600, 658, 341, 11, 341, 50618, 50618, 307, 264, 3089, 309, 23815, 2212, 341, 34078, 13, 50745, 50745, 400, 370, 294, 428, 11, 291, 458, 11, 294, 428, 1322, 11, 291, 11, 291, 362, 411, 257, 1500, 34078, 13, 51022, 51022, 509, 584, 11, 291, 458, 11, 286, 914, 11, 365, 2699, 76, 21884, 13695, 11, 286, 1409, 365, 411, 264, 11, 264, 23331, 34078, 11, 51306, 51306, 264, 2199, 5705, 9818, 1365, 300, 436, 764, 337, 439, 264, 21884, 13695, 1507, 13, 51452, 51452, 286, 632, 257, 1326, 22627, 296, 293, 286, 848, 11, 1392, 11, 286, 478, 516, 281, 767, 1190, 322, 452, 1322, 7154, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1158039151257231, "compression_ratio": 1.6943396226415095, "no_caption_prob": 8.013291335373651e-06}, {"id": 707, "seek": 266080, "start": 2665.88, "end": 2668.42, "text": " is the code it generates given this schema.", "tokens": [50364, 407, 6063, 291, 434, 1566, 11, 1105, 11, 411, 365, 2699, 76, 21884, 13695, 11, 337, 1365, 11, 291, 600, 658, 341, 11, 341, 50618, 50618, 307, 264, 3089, 309, 23815, 2212, 341, 34078, 13, 50745, 50745, 400, 370, 294, 428, 11, 291, 458, 11, 294, 428, 1322, 11, 291, 11, 291, 362, 411, 257, 1500, 34078, 13, 51022, 51022, 509, 584, 11, 291, 458, 11, 286, 914, 11, 365, 2699, 76, 21884, 13695, 11, 286, 1409, 365, 411, 264, 11, 264, 23331, 34078, 11, 51306, 51306, 264, 2199, 5705, 9818, 1365, 300, 436, 764, 337, 439, 264, 21884, 13695, 1507, 13, 51452, 51452, 286, 632, 257, 1326, 22627, 296, 293, 286, 848, 11, 1392, 11, 286, 478, 516, 281, 767, 1190, 322, 452, 1322, 7154, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1158039151257231, "compression_ratio": 1.6943396226415095, "no_caption_prob": 8.013291335373651e-06}, {"id": 708, "seek": 266080, "start": 2668.42, "end": 2673.96, "text": " And so in your, you know, in your build, you, you have like a test schema.", "tokens": [50364, 407, 6063, 291, 434, 1566, 11, 1105, 11, 411, 365, 2699, 76, 21884, 13695, 11, 337, 1365, 11, 291, 600, 658, 341, 11, 341, 50618, 50618, 307, 264, 3089, 309, 23815, 2212, 341, 34078, 13, 50745, 50745, 400, 370, 294, 428, 11, 291, 458, 11, 294, 428, 1322, 11, 291, 11, 291, 362, 411, 257, 1500, 34078, 13, 51022, 51022, 509, 584, 11, 291, 458, 11, 286, 914, 11, 365, 2699, 76, 21884, 13695, 11, 286, 1409, 365, 411, 264, 11, 264, 23331, 34078, 11, 51306, 51306, 264, 2199, 5705, 9818, 1365, 300, 436, 764, 337, 439, 264, 21884, 13695, 1507, 13, 51452, 51452, 286, 632, 257, 1326, 22627, 296, 293, 286, 848, 11, 1392, 11, 286, 478, 516, 281, 767, 1190, 322, 452, 1322, 7154, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1158039151257231, "compression_ratio": 1.6943396226415095, "no_caption_prob": 8.013291335373651e-06}, {"id": 709, "seek": 266080, "start": 2673.96, "end": 2679.6400000000003, "text": " You say, you know, I mean, with Elm GraphQL, I started with like the, the GitHub schema,", "tokens": [50364, 407, 6063, 291, 434, 1566, 11, 1105, 11, 411, 365, 2699, 76, 21884, 13695, 11, 337, 1365, 11, 291, 600, 658, 341, 11, 341, 50618, 50618, 307, 264, 3089, 309, 23815, 2212, 341, 34078, 13, 50745, 50745, 400, 370, 294, 428, 11, 291, 458, 11, 294, 428, 1322, 11, 291, 11, 291, 362, 411, 257, 1500, 34078, 13, 51022, 51022, 509, 584, 11, 291, 458, 11, 286, 914, 11, 365, 2699, 76, 21884, 13695, 11, 286, 1409, 365, 411, 264, 11, 264, 23331, 34078, 11, 51306, 51306, 264, 2199, 5705, 9818, 1365, 300, 436, 764, 337, 439, 264, 21884, 13695, 1507, 13, 51452, 51452, 286, 632, 257, 1326, 22627, 296, 293, 286, 848, 11, 1392, 11, 286, 478, 516, 281, 767, 1190, 322, 452, 1322, 7154, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1158039151257231, "compression_ratio": 1.6943396226415095, "no_caption_prob": 8.013291335373651e-06}, {"id": 710, "seek": 266080, "start": 2679.6400000000003, "end": 2682.5600000000004, "text": " the simple Star Wars example that they use for all the GraphQL stuff.", "tokens": [50364, 407, 6063, 291, 434, 1566, 11, 1105, 11, 411, 365, 2699, 76, 21884, 13695, 11, 337, 1365, 11, 291, 600, 658, 341, 11, 341, 50618, 50618, 307, 264, 3089, 309, 23815, 2212, 341, 34078, 13, 50745, 50745, 400, 370, 294, 428, 11, 291, 458, 11, 294, 428, 1322, 11, 291, 11, 291, 362, 411, 257, 1500, 34078, 13, 51022, 51022, 509, 584, 11, 291, 458, 11, 286, 914, 11, 365, 2699, 76, 21884, 13695, 11, 286, 1409, 365, 411, 264, 11, 264, 23331, 34078, 11, 51306, 51306, 264, 2199, 5705, 9818, 1365, 300, 436, 764, 337, 439, 264, 21884, 13695, 1507, 13, 51452, 51452, 286, 632, 257, 1326, 22627, 296, 293, 286, 848, 11, 1392, 11, 286, 478, 516, 281, 767, 1190, 322, 452, 1322, 7154, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1158039151257231, "compression_ratio": 1.6943396226415095, "no_caption_prob": 8.013291335373651e-06}, {"id": 711, "seek": 266080, "start": 2682.5600000000004, "end": 2687.8, "text": " I had a few schemas and I said, okay, I'm going to actually run on my build server.", "tokens": [50364, 407, 6063, 291, 434, 1566, 11, 1105, 11, 411, 365, 2699, 76, 21884, 13695, 11, 337, 1365, 11, 291, 600, 658, 341, 11, 341, 50618, 50618, 307, 264, 3089, 309, 23815, 2212, 341, 34078, 13, 50745, 50745, 400, 370, 294, 428, 11, 291, 458, 11, 294, 428, 1322, 11, 291, 11, 291, 362, 411, 257, 1500, 34078, 13, 51022, 51022, 509, 584, 11, 291, 458, 11, 286, 914, 11, 365, 2699, 76, 21884, 13695, 11, 286, 1409, 365, 411, 264, 11, 264, 23331, 34078, 11, 51306, 51306, 264, 2199, 5705, 9818, 1365, 300, 436, 764, 337, 439, 264, 21884, 13695, 1507, 13, 51452, 51452, 286, 632, 257, 1326, 22627, 296, 293, 286, 848, 11, 1392, 11, 286, 478, 516, 281, 767, 1190, 322, 452, 1322, 7154, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1158039151257231, "compression_ratio": 1.6943396226415095, "no_caption_prob": 8.013291335373651e-06}, {"id": 712, "seek": 268780, "start": 2687.8, "end": 2693.5600000000004, "text": " Um, I'm going to generate these schemas and I'm gonna, I'm gonna compare the code that", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 713, "seek": 268780, "start": 2693.5600000000004, "end": 2697.4, "text": " was generated before with the code that's generated for this build.", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 714, "seek": 268780, "start": 2697.4, "end": 2700.46, "text": " So every time it changes, I need to check in the changes.", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 715, "seek": 268780, "start": 2700.46, "end": 2702.28, "text": " That's kind of the snapshot testing approach.", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 716, "seek": 268780, "start": 2702.28, "end": 2707.48, "text": " And you're also running actual tests with the generated code, I'm guessing.", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 717, "seek": 268780, "start": 2707.48, "end": 2710.2000000000003, "text": " Sometimes, uh, yeah, sometimes I do that as well.", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 718, "seek": 268780, "start": 2710.2000000000003, "end": 2713.52, "text": " And do you generate the code and do you generate the test code?", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 719, "seek": 268780, "start": 2713.52, "end": 2715.52, "text": " Well, I do that sometimes.", "tokens": [50364, 3301, 11, 286, 478, 516, 281, 8460, 613, 22627, 296, 293, 286, 478, 799, 11, 286, 478, 799, 6794, 264, 3089, 300, 50652, 50652, 390, 10833, 949, 365, 264, 3089, 300, 311, 10833, 337, 341, 1322, 13, 50844, 50844, 407, 633, 565, 309, 2962, 11, 286, 643, 281, 1520, 294, 264, 2962, 13, 50997, 50997, 663, 311, 733, 295, 264, 30163, 4997, 3109, 13, 51088, 51088, 400, 291, 434, 611, 2614, 3539, 6921, 365, 264, 10833, 3089, 11, 286, 478, 17939, 13, 51348, 51348, 4803, 11, 2232, 11, 1338, 11, 2171, 286, 360, 300, 382, 731, 13, 51484, 51484, 400, 360, 291, 8460, 264, 3089, 293, 360, 291, 8460, 264, 1500, 3089, 30, 51650, 51650, 1042, 11, 286, 360, 300, 2171, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15660463060651506, "compression_ratio": 1.9230769230769231, "no_caption_prob": 8.397985766350757e-06}, {"id": 720, "seek": 271552, "start": 2715.52, "end": 2722.48, "text": " With the Elm GraphQL generated code, I essentially just, uh, what I do is I, when, when I was", "tokens": [50364, 2022, 264, 2699, 76, 21884, 13695, 10833, 3089, 11, 286, 4476, 445, 11, 2232, 11, 437, 286, 360, 307, 286, 11, 562, 11, 562, 286, 390, 50712, 50712, 9105, 2390, 309, 11, 286, 1409, 538, 700, 11, 286, 576, 16945, 8460, 264, 3089, 11, 6513, 50992, 50992, 37557, 11, 8460, 11, 2232, 11, 300, 286, 1415, 309, 281, 574, 411, 13, 51159, 51159, 407, 300, 390, 1333, 295, 264, 3089, 1049, 3779, 293, 550, 764, 300, 13, 51342, 51342, 400, 550, 286, 11, 437, 286, 630, 307, 286, 4114, 5110, 294, 264, 5110, 10820, 293, 729, 645, 1333, 51610, 51610, 295, 9688, 6921, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.13548903112058286, "compression_ratio": 1.7589285714285714, "no_caption_prob": 1.8162149899580982e-06}, {"id": 721, "seek": 271552, "start": 2722.48, "end": 2728.08, "text": " initially building it, I started by first, I would manually generate the code, quote", "tokens": [50364, 2022, 264, 2699, 76, 21884, 13695, 10833, 3089, 11, 286, 4476, 445, 11, 2232, 11, 437, 286, 360, 307, 286, 11, 562, 11, 562, 286, 390, 50712, 50712, 9105, 2390, 309, 11, 286, 1409, 538, 700, 11, 286, 576, 16945, 8460, 264, 3089, 11, 6513, 50992, 50992, 37557, 11, 8460, 11, 2232, 11, 300, 286, 1415, 309, 281, 574, 411, 13, 51159, 51159, 407, 300, 390, 1333, 295, 264, 3089, 1049, 3779, 293, 550, 764, 300, 13, 51342, 51342, 400, 550, 286, 11, 437, 286, 630, 307, 286, 4114, 5110, 294, 264, 5110, 10820, 293, 729, 645, 1333, 51610, 51610, 295, 9688, 6921, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.13548903112058286, "compression_ratio": 1.7589285714285714, "no_caption_prob": 1.8162149899580982e-06}, {"id": 722, "seek": 271552, "start": 2728.08, "end": 2731.42, "text": " unquote, generate, uh, that I wanted it to look like.", "tokens": [50364, 2022, 264, 2699, 76, 21884, 13695, 10833, 3089, 11, 286, 4476, 445, 11, 2232, 11, 437, 286, 360, 307, 286, 11, 562, 11, 562, 286, 390, 50712, 50712, 9105, 2390, 309, 11, 286, 1409, 538, 700, 11, 286, 576, 16945, 8460, 264, 3089, 11, 6513, 50992, 50992, 37557, 11, 8460, 11, 2232, 11, 300, 286, 1415, 309, 281, 574, 411, 13, 51159, 51159, 407, 300, 390, 1333, 295, 264, 3089, 1049, 3779, 293, 550, 764, 300, 13, 51342, 51342, 400, 550, 286, 11, 437, 286, 630, 307, 286, 4114, 5110, 294, 264, 5110, 10820, 293, 729, 645, 1333, 51610, 51610, 295, 9688, 6921, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.13548903112058286, "compression_ratio": 1.7589285714285714, "no_caption_prob": 1.8162149899580982e-06}, {"id": 723, "seek": 271552, "start": 2731.42, "end": 2735.08, "text": " So that was sort of the code gen target and then use that.", "tokens": [50364, 2022, 264, 2699, 76, 21884, 13695, 10833, 3089, 11, 286, 4476, 445, 11, 2232, 11, 437, 286, 360, 307, 286, 11, 562, 11, 562, 286, 390, 50712, 50712, 9105, 2390, 309, 11, 286, 1409, 538, 700, 11, 286, 576, 16945, 8460, 264, 3089, 11, 6513, 50992, 50992, 37557, 11, 8460, 11, 2232, 11, 300, 286, 1415, 309, 281, 574, 411, 13, 51159, 51159, 407, 300, 390, 1333, 295, 264, 3089, 1049, 3779, 293, 550, 764, 300, 13, 51342, 51342, 400, 550, 286, 11, 437, 286, 630, 307, 286, 4114, 5110, 294, 264, 5110, 10820, 293, 729, 645, 1333, 51610, 51610, 295, 9688, 6921, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.13548903112058286, "compression_ratio": 1.7589285714285714, "no_caption_prob": 1.8162149899580982e-06}, {"id": 724, "seek": 271552, "start": 2735.08, "end": 2740.44, "text": " And then I, what I did is I wrote examples in the examples folder and those were sort", "tokens": [50364, 2022, 264, 2699, 76, 21884, 13695, 10833, 3089, 11, 286, 4476, 445, 11, 2232, 11, 437, 286, 360, 307, 286, 11, 562, 11, 562, 286, 390, 50712, 50712, 9105, 2390, 309, 11, 286, 1409, 538, 700, 11, 286, 576, 16945, 8460, 264, 3089, 11, 6513, 50992, 50992, 37557, 11, 8460, 11, 2232, 11, 300, 286, 1415, 309, 281, 574, 411, 13, 51159, 51159, 407, 300, 390, 1333, 295, 264, 3089, 1049, 3779, 293, 550, 764, 300, 13, 51342, 51342, 400, 550, 286, 11, 437, 286, 630, 307, 286, 4114, 5110, 294, 264, 5110, 10820, 293, 729, 645, 1333, 51610, 51610, 295, 9688, 6921, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.13548903112058286, "compression_ratio": 1.7589285714285714, "no_caption_prob": 1.8162149899580982e-06}, {"id": 725, "seek": 271552, "start": 2740.44, "end": 2742.16, "text": " of manual tests.", "tokens": [50364, 2022, 264, 2699, 76, 21884, 13695, 10833, 3089, 11, 286, 4476, 445, 11, 2232, 11, 437, 286, 360, 307, 286, 11, 562, 11, 562, 286, 390, 50712, 50712, 9105, 2390, 309, 11, 286, 1409, 538, 700, 11, 286, 576, 16945, 8460, 264, 3089, 11, 6513, 50992, 50992, 37557, 11, 8460, 11, 2232, 11, 300, 286, 1415, 309, 281, 574, 411, 13, 51159, 51159, 407, 300, 390, 1333, 295, 264, 3089, 1049, 3779, 293, 550, 764, 300, 13, 51342, 51342, 400, 550, 286, 11, 437, 286, 630, 307, 286, 4114, 5110, 294, 264, 5110, 10820, 293, 729, 645, 1333, 51610, 51610, 295, 9688, 6921, 13, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.13548903112058286, "compression_ratio": 1.7589285714285714, "no_caption_prob": 1.8162149899580982e-06}, {"id": 726, "seek": 274216, "start": 2742.16, "end": 2746.7599999999998, "text": " So you know, every time I'm like adding a new feature or changing something, I go through", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 727, "seek": 274216, "start": 2746.7599999999998, "end": 2749.7799999999997, "text": " and make sure all the examples are working as expected.", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 728, "seek": 274216, "start": 2749.7799999999997, "end": 2756.48, "text": " And not only does, am I testing the behavior, but I'm testing the, I'm testing the user", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 729, "seek": 274216, "start": 2756.48, "end": 2757.48, "text": " experience.", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 730, "seek": 274216, "start": 2757.48, "end": 2760.22, "text": " So I'm making sure that interacting with it feels nice.", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 731, "seek": 274216, "start": 2760.22, "end": 2762.04, "text": " The types look good.", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 732, "seek": 274216, "start": 2762.04, "end": 2763.54, "text": " Could I get it any simpler?", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 733, "seek": 274216, "start": 2763.54, "end": 2764.72, "text": " Is it intuitive?", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 734, "seek": 274216, "start": 2764.72, "end": 2769.44, "text": " And then once I've got that working with the hand generated code, I check that in as my", "tokens": [50364, 407, 291, 458, 11, 633, 565, 286, 478, 411, 5127, 257, 777, 4111, 420, 4473, 746, 11, 286, 352, 807, 50594, 50594, 293, 652, 988, 439, 264, 5110, 366, 1364, 382, 5176, 13, 50745, 50745, 400, 406, 787, 775, 11, 669, 286, 4997, 264, 5223, 11, 457, 286, 478, 4997, 264, 11, 286, 478, 4997, 264, 4195, 51080, 51080, 1752, 13, 51130, 51130, 407, 286, 478, 1455, 988, 300, 18017, 365, 309, 3417, 1481, 13, 51267, 51267, 440, 3467, 574, 665, 13, 51358, 51358, 7497, 286, 483, 309, 604, 18587, 30, 51433, 51433, 1119, 309, 21769, 30, 51492, 51492, 400, 550, 1564, 286, 600, 658, 300, 1364, 365, 264, 1011, 10833, 3089, 11, 286, 1520, 300, 294, 382, 452, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.09536960260654853, "compression_ratio": 1.6666666666666667, "no_caption_prob": 1.696387153060641e-05}, {"id": 735, "seek": 276944, "start": 2769.44, "end": 2775.08, "text": " snapshot and then I iterate on that failing test until I get, I get it green with the", "tokens": [50364, 30163, 293, 550, 286, 44497, 322, 300, 18223, 1500, 1826, 286, 483, 11, 286, 483, 309, 3092, 365, 264, 50646, 50646, 3539, 3089, 5125, 3779, 885, 437, 286, 478, 17746, 13, 50818, 50818, 407, 13317, 4997, 420, 30163, 4997, 307, 3476, 337, 11, 337, 3089, 5125, 13, 51072, 51072, 1779, 13, 51122, 51122, 865, 13, 51172, 51172, 286, 611, 534, 411, 11, 370, 341, 307, 1920, 411, 257, 1379, 4994, 2010, 295, 3089, 5125, 11, 51354, 51354, 457, 382, 291, 645, 12075, 278, 412, 4997, 10833, 3089, 307, 534, 1481, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.12627619693153783, "compression_ratio": 1.740909090909091, "no_caption_prob": 1.2411347597662825e-05}, {"id": 736, "seek": 276944, "start": 2775.08, "end": 2778.52, "text": " actual code generation target being what I'm generating.", "tokens": [50364, 30163, 293, 550, 286, 44497, 322, 300, 18223, 1500, 1826, 286, 483, 11, 286, 483, 309, 3092, 365, 264, 50646, 50646, 3539, 3089, 5125, 3779, 885, 437, 286, 478, 17746, 13, 50818, 50818, 407, 13317, 4997, 420, 30163, 4997, 307, 3476, 337, 11, 337, 3089, 5125, 13, 51072, 51072, 1779, 13, 51122, 51122, 865, 13, 51172, 51172, 286, 611, 534, 411, 11, 370, 341, 307, 1920, 411, 257, 1379, 4994, 2010, 295, 3089, 5125, 11, 51354, 51354, 457, 382, 291, 645, 12075, 278, 412, 4997, 10833, 3089, 307, 534, 1481, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.12627619693153783, "compression_ratio": 1.740909090909091, "no_caption_prob": 1.2411347597662825e-05}, {"id": 737, "seek": 276944, "start": 2778.52, "end": 2783.6, "text": " So approval testing or snapshot testing is awesome for, for code generation.", "tokens": [50364, 30163, 293, 550, 286, 44497, 322, 300, 18223, 1500, 1826, 286, 483, 11, 286, 483, 309, 3092, 365, 264, 50646, 50646, 3539, 3089, 5125, 3779, 885, 437, 286, 478, 17746, 13, 50818, 50818, 407, 13317, 4997, 420, 30163, 4997, 307, 3476, 337, 11, 337, 3089, 5125, 13, 51072, 51072, 1779, 13, 51122, 51122, 865, 13, 51172, 51172, 286, 611, 534, 411, 11, 370, 341, 307, 1920, 411, 257, 1379, 4994, 2010, 295, 3089, 5125, 11, 51354, 51354, 457, 382, 291, 645, 12075, 278, 412, 4997, 10833, 3089, 307, 534, 1481, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.12627619693153783, "compression_ratio": 1.740909090909091, "no_caption_prob": 1.2411347597662825e-05}, {"id": 738, "seek": 276944, "start": 2783.6, "end": 2784.6, "text": " Right.", "tokens": [50364, 30163, 293, 550, 286, 44497, 322, 300, 18223, 1500, 1826, 286, 483, 11, 286, 483, 309, 3092, 365, 264, 50646, 50646, 3539, 3089, 5125, 3779, 885, 437, 286, 478, 17746, 13, 50818, 50818, 407, 13317, 4997, 420, 30163, 4997, 307, 3476, 337, 11, 337, 3089, 5125, 13, 51072, 51072, 1779, 13, 51122, 51122, 865, 13, 51172, 51172, 286, 611, 534, 411, 11, 370, 341, 307, 1920, 411, 257, 1379, 4994, 2010, 295, 3089, 5125, 11, 51354, 51354, 457, 382, 291, 645, 12075, 278, 412, 4997, 10833, 3089, 307, 534, 1481, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.12627619693153783, "compression_ratio": 1.740909090909091, "no_caption_prob": 1.2411347597662825e-05}, {"id": 739, "seek": 276944, "start": 2784.6, "end": 2785.6, "text": " Yeah.", "tokens": [50364, 30163, 293, 550, 286, 44497, 322, 300, 18223, 1500, 1826, 286, 483, 11, 286, 483, 309, 3092, 365, 264, 50646, 50646, 3539, 3089, 5125, 3779, 885, 437, 286, 478, 17746, 13, 50818, 50818, 407, 13317, 4997, 420, 30163, 4997, 307, 3476, 337, 11, 337, 3089, 5125, 13, 51072, 51072, 1779, 13, 51122, 51122, 865, 13, 51172, 51172, 286, 611, 534, 411, 11, 370, 341, 307, 1920, 411, 257, 1379, 4994, 2010, 295, 3089, 5125, 11, 51354, 51354, 457, 382, 291, 645, 12075, 278, 412, 4997, 10833, 3089, 307, 534, 1481, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.12627619693153783, "compression_ratio": 1.740909090909091, "no_caption_prob": 1.2411347597662825e-05}, {"id": 740, "seek": 276944, "start": 2785.6, "end": 2789.2400000000002, "text": " I also really like, so this is almost like a whole separate type of code generation,", "tokens": [50364, 30163, 293, 550, 286, 44497, 322, 300, 18223, 1500, 1826, 286, 483, 11, 286, 483, 309, 3092, 365, 264, 50646, 50646, 3539, 3089, 5125, 3779, 885, 437, 286, 478, 17746, 13, 50818, 50818, 407, 13317, 4997, 420, 30163, 4997, 307, 3476, 337, 11, 337, 3089, 5125, 13, 51072, 51072, 1779, 13, 51122, 51122, 865, 13, 51172, 51172, 286, 611, 534, 411, 11, 370, 341, 307, 1920, 411, 257, 1379, 4994, 2010, 295, 3089, 5125, 11, 51354, 51354, 457, 382, 291, 645, 12075, 278, 412, 4997, 10833, 3089, 307, 534, 1481, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.12627619693153783, "compression_ratio": 1.740909090909091, "no_caption_prob": 1.2411347597662825e-05}, {"id": 741, "seek": 276944, "start": 2789.2400000000002, "end": 2793.08, "text": " but as you were hinting at testing generated code is really nice.", "tokens": [50364, 30163, 293, 550, 286, 44497, 322, 300, 18223, 1500, 1826, 286, 483, 11, 286, 483, 309, 3092, 365, 264, 50646, 50646, 3539, 3089, 5125, 3779, 885, 437, 286, 478, 17746, 13, 50818, 50818, 407, 13317, 4997, 420, 30163, 4997, 307, 3476, 337, 11, 337, 3089, 5125, 13, 51072, 51072, 1779, 13, 51122, 51122, 865, 13, 51172, 51172, 286, 611, 534, 411, 11, 370, 341, 307, 1920, 411, 257, 1379, 4994, 2010, 295, 3089, 5125, 11, 51354, 51354, 457, 382, 291, 645, 12075, 278, 412, 4997, 10833, 3089, 307, 534, 1481, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.12627619693153783, "compression_ratio": 1.740909090909091, "no_caption_prob": 1.2411347597662825e-05}, {"id": 742, "seek": 279308, "start": 2793.08, "end": 2801.2, "text": " Like for, for LMTS Interop, I've got, I've got this tool for the pro version, which is,", "tokens": [50364, 1743, 337, 11, 337, 441, 44, 7327, 5751, 404, 11, 286, 600, 658, 11, 286, 600, 658, 341, 2290, 337, 264, 447, 3037, 11, 597, 307, 11, 50770, 50770, 291, 458, 11, 291, 11, 291, 2464, 512, 15576, 14237, 2010, 21988, 294, 257, 707, 1333, 295, 25091, 3089, 15576, 14237, 51190, 51190, 16741, 9839, 294, 264, 11185, 13, 51301, 51301, 400, 309, 23815, 441, 44, 7327, 5751, 404, 11, 291, 458, 11, 2058, 378, 433, 293, 979, 378, 433, 2361, 322, 300, 11, 300, 366, 516, 51614, 51614, 281, 11257, 264, 912, 15576, 14237, 3467, 13, 51730, 51730, 400, 291, 458, 11, 456, 311, 257, 688, 516, 322, 456, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.12563479574103104, "compression_ratio": 1.7443946188340806, "no_caption_prob": 2.1111942260176875e-05}, {"id": 743, "seek": 279308, "start": 2801.2, "end": 2809.6, "text": " you know, you, you write some TypeScript type definitions in a little sort of VS code TypeScript", "tokens": [50364, 1743, 337, 11, 337, 441, 44, 7327, 5751, 404, 11, 286, 600, 658, 11, 286, 600, 658, 341, 2290, 337, 264, 447, 3037, 11, 597, 307, 11, 50770, 50770, 291, 458, 11, 291, 11, 291, 2464, 512, 15576, 14237, 2010, 21988, 294, 257, 707, 1333, 295, 25091, 3089, 15576, 14237, 51190, 51190, 16741, 9839, 294, 264, 11185, 13, 51301, 51301, 400, 309, 23815, 441, 44, 7327, 5751, 404, 11, 291, 458, 11, 2058, 378, 433, 293, 979, 378, 433, 2361, 322, 300, 11, 300, 366, 516, 51614, 51614, 281, 11257, 264, 912, 15576, 14237, 3467, 13, 51730, 51730, 400, 291, 458, 11, 456, 311, 257, 688, 516, 322, 456, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.12563479574103104, "compression_ratio": 1.7443946188340806, "no_caption_prob": 2.1111942260176875e-05}, {"id": 744, "seek": 279308, "start": 2809.6, "end": 2811.8199999999997, "text": " embedded editor in the browser.", "tokens": [50364, 1743, 337, 11, 337, 441, 44, 7327, 5751, 404, 11, 286, 600, 658, 11, 286, 600, 658, 341, 2290, 337, 264, 447, 3037, 11, 597, 307, 11, 50770, 50770, 291, 458, 11, 291, 11, 291, 2464, 512, 15576, 14237, 2010, 21988, 294, 257, 707, 1333, 295, 25091, 3089, 15576, 14237, 51190, 51190, 16741, 9839, 294, 264, 11185, 13, 51301, 51301, 400, 309, 23815, 441, 44, 7327, 5751, 404, 11, 291, 458, 11, 2058, 378, 433, 293, 979, 378, 433, 2361, 322, 300, 11, 300, 366, 516, 51614, 51614, 281, 11257, 264, 912, 15576, 14237, 3467, 13, 51730, 51730, 400, 291, 458, 11, 456, 311, 257, 688, 516, 322, 456, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.12563479574103104, "compression_ratio": 1.7443946188340806, "no_caption_prob": 2.1111942260176875e-05}, {"id": 745, "seek": 279308, "start": 2811.8199999999997, "end": 2818.08, "text": " And it generates LMTS Interop, you know, encoders and decoders based on that, that are going", "tokens": [50364, 1743, 337, 11, 337, 441, 44, 7327, 5751, 404, 11, 286, 600, 658, 11, 286, 600, 658, 341, 2290, 337, 264, 447, 3037, 11, 597, 307, 11, 50770, 50770, 291, 458, 11, 291, 11, 291, 2464, 512, 15576, 14237, 2010, 21988, 294, 257, 707, 1333, 295, 25091, 3089, 15576, 14237, 51190, 51190, 16741, 9839, 294, 264, 11185, 13, 51301, 51301, 400, 309, 23815, 441, 44, 7327, 5751, 404, 11, 291, 458, 11, 2058, 378, 433, 293, 979, 378, 433, 2361, 322, 300, 11, 300, 366, 516, 51614, 51614, 281, 11257, 264, 912, 15576, 14237, 3467, 13, 51730, 51730, 400, 291, 458, 11, 456, 311, 257, 688, 516, 322, 456, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.12563479574103104, "compression_ratio": 1.7443946188340806, "no_caption_prob": 2.1111942260176875e-05}, {"id": 746, "seek": 279308, "start": 2818.08, "end": 2820.4, "text": " to yield the same TypeScript types.", "tokens": [50364, 1743, 337, 11, 337, 441, 44, 7327, 5751, 404, 11, 286, 600, 658, 11, 286, 600, 658, 341, 2290, 337, 264, 447, 3037, 11, 597, 307, 11, 50770, 50770, 291, 458, 11, 291, 11, 291, 2464, 512, 15576, 14237, 2010, 21988, 294, 257, 707, 1333, 295, 25091, 3089, 15576, 14237, 51190, 51190, 16741, 9839, 294, 264, 11185, 13, 51301, 51301, 400, 309, 23815, 441, 44, 7327, 5751, 404, 11, 291, 458, 11, 2058, 378, 433, 293, 979, 378, 433, 2361, 322, 300, 11, 300, 366, 516, 51614, 51614, 281, 11257, 264, 912, 15576, 14237, 3467, 13, 51730, 51730, 400, 291, 458, 11, 456, 311, 257, 688, 516, 322, 456, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.12563479574103104, "compression_ratio": 1.7443946188340806, "no_caption_prob": 2.1111942260176875e-05}, {"id": 747, "seek": 279308, "start": 2820.4, "end": 2822.48, "text": " And you know, there's a lot going on there.", "tokens": [50364, 1743, 337, 11, 337, 441, 44, 7327, 5751, 404, 11, 286, 600, 658, 11, 286, 600, 658, 341, 2290, 337, 264, 447, 3037, 11, 597, 307, 11, 50770, 50770, 291, 458, 11, 291, 11, 291, 2464, 512, 15576, 14237, 2010, 21988, 294, 257, 707, 1333, 295, 25091, 3089, 15576, 14237, 51190, 51190, 16741, 9839, 294, 264, 11185, 13, 51301, 51301, 400, 309, 23815, 441, 44, 7327, 5751, 404, 11, 291, 458, 11, 2058, 378, 433, 293, 979, 378, 433, 2361, 322, 300, 11, 300, 366, 516, 51614, 51614, 281, 11257, 264, 912, 15576, 14237, 3467, 13, 51730, 51730, 400, 291, 458, 11, 456, 311, 257, 688, 516, 322, 456, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.12563479574103104, "compression_ratio": 1.7443946188340806, "no_caption_prob": 2.1111942260176875e-05}, {"id": 748, "seek": 282248, "start": 2822.48, "end": 2827.96, "text": " It's non trivial, like that project is non trivial and it would be really easy to mess", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 749, "seek": 282248, "start": 2827.96, "end": 2828.96, "text": " something up.", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 750, "seek": 282248, "start": 2828.96, "end": 2831.88, "text": " So I, I generate a test suite.", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 751, "seek": 282248, "start": 2831.88, "end": 2838.12, "text": " So I for, for, I have some like sample input, which is like TypeScript files and I generate", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 752, "seek": 282248, "start": 2838.12, "end": 2839.18, "text": " a test.", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 753, "seek": 282248, "start": 2839.18, "end": 2844.7, "text": " So I actually generate like an Elm test test suite for each of those examples.", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 754, "seek": 282248, "start": 2844.7, "end": 2846.04, "text": " So I just have an examples folder.", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 755, "seek": 282248, "start": 2846.04, "end": 2850.92, "text": " I write it, you know, I write a dot TS file and it actually takes that code.", "tokens": [50364, 467, 311, 2107, 26703, 11, 411, 300, 1716, 307, 2107, 26703, 293, 309, 576, 312, 534, 1858, 281, 2082, 50638, 50638, 746, 493, 13, 50688, 50688, 407, 286, 11, 286, 8460, 257, 1500, 14205, 13, 50834, 50834, 407, 286, 337, 11, 337, 11, 286, 362, 512, 411, 6889, 4846, 11, 597, 307, 411, 15576, 14237, 7098, 293, 286, 8460, 51146, 51146, 257, 1500, 13, 51199, 51199, 407, 286, 767, 8460, 411, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 5110, 13, 51475, 51475, 407, 286, 445, 362, 364, 5110, 10820, 13, 51542, 51542, 286, 2464, 309, 11, 291, 458, 11, 286, 2464, 257, 5893, 37645, 3991, 293, 309, 767, 2516, 300, 3089, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.08888995547254547, "compression_ratio": 1.7957446808510638, "no_caption_prob": 1.77782367245527e-05}, {"id": 756, "seek": 285092, "start": 2850.92, "end": 2856.32, "text": " It feeds it into this code, which is, you know, Elm code to generate this stuff.", "tokens": [50364, 467, 23712, 309, 666, 341, 3089, 11, 597, 307, 11, 291, 458, 11, 2699, 76, 3089, 281, 8460, 341, 1507, 13, 50634, 50634, 4387, 988, 300, 309, 11, 652, 988, 300, 309, 6676, 11, 309, 775, 257, 44788, 1500, 293, 23712, 4846, 50858, 50858, 294, 293, 309, 1619, 300, 498, 291, 1190, 264, 2058, 19866, 293, 264, 979, 19866, 11, 291, 483, 264, 912, 2158, 13, 51068, 51068, 407, 309, 311, 17746, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 13, 51192, 51192, 407, 11, 370, 17746, 2699, 76, 1500, 1500, 459, 3324, 307, 3476, 13, 51496, 51496, 663, 311, 300, 311, 257, 6532, 286, 411, 281, 764, 13, 51590, 51590, 286, 360, 300, 337, 17995, 281, 2699, 76, 13, 1112, 382, 731, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15877010638897235, "compression_ratio": 1.7569721115537849, "no_caption_prob": 1.8631308194017038e-05}, {"id": 757, "seek": 285092, "start": 2856.32, "end": 2860.8, "text": " Make sure that it, make sure that it runs, it does a reversible test and feeds input", "tokens": [50364, 467, 23712, 309, 666, 341, 3089, 11, 597, 307, 11, 291, 458, 11, 2699, 76, 3089, 281, 8460, 341, 1507, 13, 50634, 50634, 4387, 988, 300, 309, 11, 652, 988, 300, 309, 6676, 11, 309, 775, 257, 44788, 1500, 293, 23712, 4846, 50858, 50858, 294, 293, 309, 1619, 300, 498, 291, 1190, 264, 2058, 19866, 293, 264, 979, 19866, 11, 291, 483, 264, 912, 2158, 13, 51068, 51068, 407, 309, 311, 17746, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 13, 51192, 51192, 407, 11, 370, 17746, 2699, 76, 1500, 1500, 459, 3324, 307, 3476, 13, 51496, 51496, 663, 311, 300, 311, 257, 6532, 286, 411, 281, 764, 13, 51590, 51590, 286, 360, 300, 337, 17995, 281, 2699, 76, 13, 1112, 382, 731, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15877010638897235, "compression_ratio": 1.7569721115537849, "no_caption_prob": 1.8631308194017038e-05}, {"id": 758, "seek": 285092, "start": 2860.8, "end": 2865.0, "text": " in and it says that if you run the encoder and the decoder, you get the same value.", "tokens": [50364, 467, 23712, 309, 666, 341, 3089, 11, 597, 307, 11, 291, 458, 11, 2699, 76, 3089, 281, 8460, 341, 1507, 13, 50634, 50634, 4387, 988, 300, 309, 11, 652, 988, 300, 309, 6676, 11, 309, 775, 257, 44788, 1500, 293, 23712, 4846, 50858, 50858, 294, 293, 309, 1619, 300, 498, 291, 1190, 264, 2058, 19866, 293, 264, 979, 19866, 11, 291, 483, 264, 912, 2158, 13, 51068, 51068, 407, 309, 311, 17746, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 13, 51192, 51192, 407, 11, 370, 17746, 2699, 76, 1500, 1500, 459, 3324, 307, 3476, 13, 51496, 51496, 663, 311, 300, 311, 257, 6532, 286, 411, 281, 764, 13, 51590, 51590, 286, 360, 300, 337, 17995, 281, 2699, 76, 13, 1112, 382, 731, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15877010638897235, "compression_ratio": 1.7569721115537849, "no_caption_prob": 1.8631308194017038e-05}, {"id": 759, "seek": 285092, "start": 2865.0, "end": 2867.48, "text": " So it's generating an Elm test test suite for each of those.", "tokens": [50364, 467, 23712, 309, 666, 341, 3089, 11, 597, 307, 11, 291, 458, 11, 2699, 76, 3089, 281, 8460, 341, 1507, 13, 50634, 50634, 4387, 988, 300, 309, 11, 652, 988, 300, 309, 6676, 11, 309, 775, 257, 44788, 1500, 293, 23712, 4846, 50858, 50858, 294, 293, 309, 1619, 300, 498, 291, 1190, 264, 2058, 19866, 293, 264, 979, 19866, 11, 291, 483, 264, 912, 2158, 13, 51068, 51068, 407, 309, 311, 17746, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 13, 51192, 51192, 407, 11, 370, 17746, 2699, 76, 1500, 1500, 459, 3324, 307, 3476, 13, 51496, 51496, 663, 311, 300, 311, 257, 6532, 286, 411, 281, 764, 13, 51590, 51590, 286, 360, 300, 337, 17995, 281, 2699, 76, 13, 1112, 382, 731, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15877010638897235, "compression_ratio": 1.7569721115537849, "no_caption_prob": 1.8631308194017038e-05}, {"id": 760, "seek": 285092, "start": 2867.48, "end": 2873.56, "text": " So, so generating Elm test test suites is awesome.", "tokens": [50364, 467, 23712, 309, 666, 341, 3089, 11, 597, 307, 11, 291, 458, 11, 2699, 76, 3089, 281, 8460, 341, 1507, 13, 50634, 50634, 4387, 988, 300, 309, 11, 652, 988, 300, 309, 6676, 11, 309, 775, 257, 44788, 1500, 293, 23712, 4846, 50858, 50858, 294, 293, 309, 1619, 300, 498, 291, 1190, 264, 2058, 19866, 293, 264, 979, 19866, 11, 291, 483, 264, 912, 2158, 13, 51068, 51068, 407, 309, 311, 17746, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 13, 51192, 51192, 407, 11, 370, 17746, 2699, 76, 1500, 1500, 459, 3324, 307, 3476, 13, 51496, 51496, 663, 311, 300, 311, 257, 6532, 286, 411, 281, 764, 13, 51590, 51590, 286, 360, 300, 337, 17995, 281, 2699, 76, 13, 1112, 382, 731, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15877010638897235, "compression_ratio": 1.7569721115537849, "no_caption_prob": 1.8631308194017038e-05}, {"id": 761, "seek": 285092, "start": 2873.56, "end": 2875.44, "text": " That's that's a technique I like to use.", "tokens": [50364, 467, 23712, 309, 666, 341, 3089, 11, 597, 307, 11, 291, 458, 11, 2699, 76, 3089, 281, 8460, 341, 1507, 13, 50634, 50634, 4387, 988, 300, 309, 11, 652, 988, 300, 309, 6676, 11, 309, 775, 257, 44788, 1500, 293, 23712, 4846, 50858, 50858, 294, 293, 309, 1619, 300, 498, 291, 1190, 264, 2058, 19866, 293, 264, 979, 19866, 11, 291, 483, 264, 912, 2158, 13, 51068, 51068, 407, 309, 311, 17746, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 13, 51192, 51192, 407, 11, 370, 17746, 2699, 76, 1500, 1500, 459, 3324, 307, 3476, 13, 51496, 51496, 663, 311, 300, 311, 257, 6532, 286, 411, 281, 764, 13, 51590, 51590, 286, 360, 300, 337, 17995, 281, 2699, 76, 13, 1112, 382, 731, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15877010638897235, "compression_ratio": 1.7569721115537849, "no_caption_prob": 1.8631308194017038e-05}, {"id": 762, "seek": 285092, "start": 2875.44, "end": 2879.4, "text": " I do that for HTML to Elm.com as well.", "tokens": [50364, 467, 23712, 309, 666, 341, 3089, 11, 597, 307, 11, 291, 458, 11, 2699, 76, 3089, 281, 8460, 341, 1507, 13, 50634, 50634, 4387, 988, 300, 309, 11, 652, 988, 300, 309, 6676, 11, 309, 775, 257, 44788, 1500, 293, 23712, 4846, 50858, 50858, 294, 293, 309, 1619, 300, 498, 291, 1190, 264, 2058, 19866, 293, 264, 979, 19866, 11, 291, 483, 264, 912, 2158, 13, 51068, 51068, 407, 309, 311, 17746, 364, 2699, 76, 1500, 1500, 14205, 337, 1184, 295, 729, 13, 51192, 51192, 407, 11, 370, 17746, 2699, 76, 1500, 1500, 459, 3324, 307, 3476, 13, 51496, 51496, 663, 311, 300, 311, 257, 6532, 286, 411, 281, 764, 13, 51590, 51590, 286, 360, 300, 337, 17995, 281, 2699, 76, 13, 1112, 382, 731, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.15877010638897235, "compression_ratio": 1.7569721115537849, "no_caption_prob": 1.8631308194017038e-05}, {"id": 763, "seek": 287940, "start": 2879.4, "end": 2882.6, "text": " I'll put a link to the source code for that example.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 764, "seek": 287940, "start": 2882.6, "end": 2888.52, "text": " So I what I do is I, I generate for a bunch of different HTML inputs.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 765, "seek": 287940, "start": 2888.52, "end": 2892.2000000000003, "text": " I generate a test suite and I, and I make sure that it's compiling.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 766, "seek": 287940, "start": 2892.2000000000003, "end": 2897.2000000000003, "text": " So the generated code should be compiling with the Elm tailwind modules default published", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 767, "seek": 287940, "start": 2897.2000000000003, "end": 2898.2000000000003, "text": " package.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 768, "seek": 287940, "start": 2898.2000000000003, "end": 2899.2000000000003, "text": " So that's pretty handy.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 769, "seek": 287940, "start": 2899.2000000000003, "end": 2905.12, "text": " And I mean, we should point out like Elm test itself is just a code gen tool actually.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 770, "seek": 287940, "start": 2905.12, "end": 2906.46, "text": " Yeah.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 771, "seek": 287940, "start": 2906.46, "end": 2908.28, "text": " People don't, people don't think about it, but.", "tokens": [50364, 286, 603, 829, 257, 2113, 281, 264, 4009, 3089, 337, 300, 1365, 13, 50524, 50524, 407, 286, 437, 286, 360, 307, 286, 11, 286, 8460, 337, 257, 3840, 295, 819, 17995, 15743, 13, 50820, 50820, 286, 8460, 257, 1500, 14205, 293, 286, 11, 293, 286, 652, 988, 300, 309, 311, 715, 4883, 13, 51004, 51004, 407, 264, 10833, 3089, 820, 312, 715, 4883, 365, 264, 2699, 76, 6838, 12199, 16679, 7576, 6572, 51254, 51254, 7372, 13, 51304, 51304, 407, 300, 311, 1238, 13239, 13, 51354, 51354, 400, 286, 914, 11, 321, 820, 935, 484, 411, 2699, 76, 1500, 2564, 307, 445, 257, 3089, 1049, 2290, 767, 13, 51650, 51650, 865, 13, 51717, 51717, 3432, 500, 380, 11, 561, 500, 380, 519, 466, 309, 11, 457, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.17511485173152044, "compression_ratio": 1.6389891696750902, "no_caption_prob": 1.983272159122862e-05}, {"id": 772, "seek": 290828, "start": 2908.28, "end": 2913.48, "text": " Yeah, it generates a an Elm file and then compiles it.", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 773, "seek": 290828, "start": 2913.48, "end": 2914.48, "text": " Yeah.", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 774, "seek": 290828, "start": 2914.48, "end": 2915.48, "text": " Right.", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 775, "seek": 290828, "start": 2915.48, "end": 2916.48, "text": " Yeah.", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 776, "seek": 290828, "start": 2916.48, "end": 2920.6800000000003, "text": " They're like Elm explorations tests does have some kernel code, I think, but a lot of it", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 777, "seek": 290828, "start": 2920.6800000000003, "end": 2923.0400000000004, "text": " is just using code generation.", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 778, "seek": 290828, "start": 2923.0400000000004, "end": 2924.0400000000004, "text": " Yeah.", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 779, "seek": 290828, "start": 2924.0400000000004, "end": 2929.92, "text": " Which is the same for like for Elm verify examples, which I think we've talked about.", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 780, "seek": 290828, "start": 2929.92, "end": 2935.1600000000003, "text": " It's a really handy package that lets you write your, your examples in your Elm doc", "tokens": [50364, 865, 11, 309, 23815, 257, 364, 2699, 76, 3991, 293, 550, 715, 4680, 309, 13, 50624, 50624, 865, 13, 50674, 50674, 1779, 13, 50724, 50724, 865, 13, 50774, 50774, 814, 434, 411, 2699, 76, 24765, 763, 6921, 775, 362, 512, 28256, 3089, 11, 286, 519, 11, 457, 257, 688, 295, 309, 50984, 50984, 307, 445, 1228, 3089, 5125, 13, 51102, 51102, 865, 13, 51152, 51152, 3013, 307, 264, 912, 337, 411, 337, 2699, 76, 16888, 5110, 11, 597, 286, 519, 321, 600, 2825, 466, 13, 51446, 51446, 467, 311, 257, 534, 13239, 7372, 300, 6653, 291, 2464, 428, 11, 428, 5110, 294, 428, 2699, 76, 3211, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.15861963792280717, "compression_ratio": 1.5769230769230769, "no_caption_prob": 2.8855558412033133e-05}, {"id": 781, "seek": 293516, "start": 2935.16, "end": 2941.0, "text": " comments that it will actually execute and compare your expected output that you write", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 782, "seek": 293516, "start": 2941.0, "end": 2943.92, "text": " with a little comment notation in the docs.", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 783, "seek": 293516, "start": 2943.92, "end": 2945.72, "text": " It creates a test for each of those, right?", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 784, "seek": 293516, "start": 2945.72, "end": 2946.72, "text": " Yeah, exactly.", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 785, "seek": 293516, "start": 2946.72, "end": 2947.72, "text": " That's all it does.", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 786, "seek": 293516, "start": 2947.72, "end": 2950.56, "text": " You can go in and look at it and then it just runs it with, with Elm tests.", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 787, "seek": 293516, "start": 2950.56, "end": 2956.66, "text": " So you know, that's, I would definitely recommend considering, considering that technique if,", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 788, "seek": 293516, "start": 2956.66, "end": 2961.8599999999997, "text": " if an opportunity presents itself, like I've, I've used that both in libraries I maintain", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 789, "seek": 293516, "start": 2961.8599999999997, "end": 2963.3999999999996, "text": " and applications.", "tokens": [50364, 3053, 300, 309, 486, 767, 14483, 293, 6794, 428, 5176, 5598, 300, 291, 2464, 50656, 50656, 365, 257, 707, 2871, 24657, 294, 264, 45623, 13, 50802, 50802, 467, 7829, 257, 1500, 337, 1184, 295, 729, 11, 558, 30, 50892, 50892, 865, 11, 2293, 13, 50942, 50942, 663, 311, 439, 309, 775, 13, 50992, 50992, 509, 393, 352, 294, 293, 574, 412, 309, 293, 550, 309, 445, 6676, 309, 365, 11, 365, 2699, 76, 6921, 13, 51134, 51134, 407, 291, 458, 11, 300, 311, 11, 286, 576, 2138, 2748, 8079, 11, 8079, 300, 6532, 498, 11, 51439, 51439, 498, 364, 2650, 13533, 2564, 11, 411, 286, 600, 11, 286, 600, 1143, 300, 1293, 294, 15148, 286, 6909, 51699, 51699, 293, 5821, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.14099984741210939, "compression_ratio": 1.6342281879194631, "no_caption_prob": 3.0241033528000116e-05}, {"id": 790, "seek": 296340, "start": 2963.4, "end": 2965.28, "text": " It's a really handy technique sometimes.", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 791, "seek": 296340, "start": 2965.28, "end": 2966.28, "text": " Yeah.", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 792, "seek": 296340, "start": 2966.28, "end": 2971.08, "text": " I've wondered about doing something like very similar to that for Elm review, like give", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 793, "seek": 296340, "start": 2971.08, "end": 2976.44, "text": " it, give us a set of examples and then compare the error that you get with what you would", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 794, "seek": 296340, "start": 2976.44, "end": 2977.44, "text": " really get.", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 795, "seek": 296340, "start": 2977.44, "end": 2978.44, "text": " Yeah.", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 796, "seek": 296340, "start": 2978.44, "end": 2986.08, "text": " But it's a bit more tricky than I think like, do you really want to compare the errors?", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 797, "seek": 296340, "start": 2986.08, "end": 2987.08, "text": " Yeah.", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 798, "seek": 296340, "start": 2987.08, "end": 2988.08, "text": " Interesting.", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 799, "seek": 296340, "start": 2988.08, "end": 2991.7000000000003, "text": " Code generation can be really nice for end to end testing things.", "tokens": [50364, 467, 311, 257, 534, 13239, 6532, 2171, 13, 50458, 50458, 865, 13, 50508, 50508, 286, 600, 17055, 466, 884, 746, 411, 588, 2531, 281, 300, 337, 2699, 76, 3131, 11, 411, 976, 50748, 50748, 309, 11, 976, 505, 257, 992, 295, 5110, 293, 550, 6794, 264, 6713, 300, 291, 483, 365, 437, 291, 576, 51016, 51016, 534, 483, 13, 51066, 51066, 865, 13, 51116, 51116, 583, 309, 311, 257, 857, 544, 12414, 813, 286, 519, 411, 11, 360, 291, 534, 528, 281, 6794, 264, 13603, 30, 51498, 51498, 865, 13, 51548, 51548, 14711, 13, 51598, 51598, 15549, 5125, 393, 312, 534, 1481, 337, 917, 281, 917, 4997, 721, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.21856198268654073, "compression_ratio": 1.7008196721311475, "no_caption_prob": 1.3419664355751593e-05}, {"id": 800, "seek": 299170, "start": 2991.7, "end": 2999.08, "text": " So for for Elm pages 2.0, I've been considering taking the, the routes.", "tokens": [50364, 407, 337, 337, 2699, 76, 7183, 568, 13, 15, 11, 286, 600, 668, 8079, 1940, 264, 11, 264, 18242, 13, 50733, 50733, 407, 286, 478, 1382, 281, 11, 286, 600, 5768, 3973, 295, 18242, 294, 341, 10833, 3089, 13, 50971, 50971, 286, 1143, 281, 362, 10833, 3089, 300, 632, 439, 295, 264, 18242, 11, 457, 550, 498, 291, 362, 257, 4714, 51191, 51191, 18242, 11, 550, 291, 600, 658, 746, 294, 428, 10833, 3089, 300, 576, 291, 11, 498, 291, 1562, 51395, 51395, 2864, 281, 309, 4992, 11, 586, 291, 600, 7373, 439, 300, 666, 428, 24438, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.10874041389016544, "compression_ratio": 1.780373831775701, "no_caption_prob": 2.014464007515926e-05}, {"id": 801, "seek": 299170, "start": 2999.08, "end": 3003.8399999999997, "text": " So I'm trying to, I've gotten rid of routes in this generated code.", "tokens": [50364, 407, 337, 337, 2699, 76, 7183, 568, 13, 15, 11, 286, 600, 668, 8079, 1940, 264, 11, 264, 18242, 13, 50733, 50733, 407, 286, 478, 1382, 281, 11, 286, 600, 5768, 3973, 295, 18242, 294, 341, 10833, 3089, 13, 50971, 50971, 286, 1143, 281, 362, 10833, 3089, 300, 632, 439, 295, 264, 18242, 11, 457, 550, 498, 291, 362, 257, 4714, 51191, 51191, 18242, 11, 550, 291, 600, 658, 746, 294, 428, 10833, 3089, 300, 576, 291, 11, 498, 291, 1562, 51395, 51395, 2864, 281, 309, 4992, 11, 586, 291, 600, 7373, 439, 300, 666, 428, 24438, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.10874041389016544, "compression_ratio": 1.780373831775701, "no_caption_prob": 2.014464007515926e-05}, {"id": 802, "seek": 299170, "start": 3003.8399999999997, "end": 3008.24, "text": " I used to have generated code that had all of the routes, but then if you have a thousand", "tokens": [50364, 407, 337, 337, 2699, 76, 7183, 568, 13, 15, 11, 286, 600, 668, 8079, 1940, 264, 11, 264, 18242, 13, 50733, 50733, 407, 286, 478, 1382, 281, 11, 286, 600, 5768, 3973, 295, 18242, 294, 341, 10833, 3089, 13, 50971, 50971, 286, 1143, 281, 362, 10833, 3089, 300, 632, 439, 295, 264, 18242, 11, 457, 550, 498, 291, 362, 257, 4714, 51191, 51191, 18242, 11, 550, 291, 600, 658, 746, 294, 428, 10833, 3089, 300, 576, 291, 11, 498, 291, 1562, 51395, 51395, 2864, 281, 309, 4992, 11, 586, 291, 600, 7373, 439, 300, 666, 428, 24438, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.10874041389016544, "compression_ratio": 1.780373831775701, "no_caption_prob": 2.014464007515926e-05}, {"id": 803, "seek": 299170, "start": 3008.24, "end": 3012.3199999999997, "text": " routes, then you've got something in your generated code that would you, if you ever", "tokens": [50364, 407, 337, 337, 2699, 76, 7183, 568, 13, 15, 11, 286, 600, 668, 8079, 1940, 264, 11, 264, 18242, 13, 50733, 50733, 407, 286, 478, 1382, 281, 11, 286, 600, 5768, 3973, 295, 18242, 294, 341, 10833, 3089, 13, 50971, 50971, 286, 1143, 281, 362, 10833, 3089, 300, 632, 439, 295, 264, 18242, 11, 457, 550, 498, 291, 362, 257, 4714, 51191, 51191, 18242, 11, 550, 291, 600, 658, 746, 294, 428, 10833, 3089, 300, 576, 291, 11, 498, 291, 1562, 51395, 51395, 2864, 281, 309, 4992, 11, 586, 291, 600, 7373, 439, 300, 666, 428, 24438, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.10874041389016544, "compression_ratio": 1.780373831775701, "no_caption_prob": 2.014464007515926e-05}, {"id": 804, "seek": 299170, "start": 3012.3199999999997, "end": 3016.0, "text": " refer to it anywhere, now you've pulled all that into your bundle.", "tokens": [50364, 407, 337, 337, 2699, 76, 7183, 568, 13, 15, 11, 286, 600, 668, 8079, 1940, 264, 11, 264, 18242, 13, 50733, 50733, 407, 286, 478, 1382, 281, 11, 286, 600, 5768, 3973, 295, 18242, 294, 341, 10833, 3089, 13, 50971, 50971, 286, 1143, 281, 362, 10833, 3089, 300, 632, 439, 295, 264, 18242, 11, 457, 550, 498, 291, 362, 257, 4714, 51191, 51191, 18242, 11, 550, 291, 600, 658, 746, 294, 428, 10833, 3089, 300, 576, 291, 11, 498, 291, 1562, 51395, 51395, 2864, 281, 309, 4992, 11, 586, 291, 600, 7373, 439, 300, 666, 428, 24438, 13, 51579, 51579], "temperature": 0.0, "avg_logprob": -0.10874041389016544, "compression_ratio": 1.780373831775701, "no_caption_prob": 2.014464007515926e-05}, {"id": 805, "seek": 301600, "start": 3016.0, "end": 3021.8, "text": " So it's quite nice if you can avoid pulling that into your bundle and instead avoid incurring", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 806, "seek": 301600, "start": 3021.8, "end": 3027.28, "text": " that cost at runtime and in your bundle size and incur that cost at build time.", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 807, "seek": 301600, "start": 3027.28, "end": 3032.36, "text": " Well, it's a minimal cost to having a thought, you know, reference to a thousand files by", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 808, "seek": 301600, "start": 3032.36, "end": 3033.4, "text": " using Elm review.", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 809, "seek": 301600, "start": 3033.4, "end": 3039.6, "text": " So I've been thinking about adding some sort of hook that basically gives here's what I've", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 810, "seek": 301600, "start": 3039.6, "end": 3040.6, "text": " been thinking about.", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 811, "seek": 301600, "start": 3040.6, "end": 3041.6, "text": " Actually, tell me what you think of this.", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 812, "seek": 301600, "start": 3041.6, "end": 3045.08, "text": " What I've been considering is, so there's like, there's a route type that's generated.", "tokens": [50364, 407, 309, 311, 1596, 1481, 498, 291, 393, 5042, 8407, 300, 666, 428, 24438, 293, 2602, 5042, 35774, 2937, 50654, 50654, 300, 2063, 412, 34474, 293, 294, 428, 24438, 2744, 293, 35774, 300, 2063, 412, 1322, 565, 13, 50928, 50928, 1042, 11, 309, 311, 257, 13206, 2063, 281, 1419, 257, 1194, 11, 291, 458, 11, 6408, 281, 257, 4714, 7098, 538, 51182, 51182, 1228, 2699, 76, 3131, 13, 51234, 51234, 407, 286, 600, 668, 1953, 466, 5127, 512, 1333, 295, 6328, 300, 1936, 2709, 510, 311, 437, 286, 600, 51544, 51544, 668, 1953, 466, 13, 51594, 51594, 5135, 11, 980, 385, 437, 291, 519, 295, 341, 13, 51644, 51644, 708, 286, 600, 668, 8079, 307, 11, 370, 456, 311, 411, 11, 456, 311, 257, 7955, 2010, 300, 311, 10833, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11431933161038071, "compression_ratio": 1.8445229681978799, "no_caption_prob": 8.800961950328201e-06}, {"id": 813, "seek": 304508, "start": 3045.08, "end": 3049.4, "text": " So Elm pages 2.0 similar to Elm SPA has this file based routing.", "tokens": [50364, 407, 2699, 76, 7183, 568, 13, 15, 2531, 281, 2699, 76, 318, 10297, 575, 341, 3991, 2361, 32722, 13, 50580, 50580, 467, 23815, 257, 7955, 5893, 2699, 76, 10088, 11, 597, 465, 15583, 1024, 11, 291, 458, 11, 291, 600, 658, 428, 6968, 50828, 50828, 7955, 11, 291, 600, 658, 428, 8186, 7955, 13, 50961, 50961, 509, 458, 11, 512, 295, 264, 18242, 362, 7955, 9834, 13, 51068, 51068, 2188, 295, 552, 500, 380, 362, 7955, 9834, 13, 51136, 51136, 759, 309, 311, 257, 2167, 3028, 337, 264, 2306, 300, 362, 7955, 9834, 411, 6968, 11, 731, 11, 498, 291, 600, 51297, 51297, 658, 6968, 11, 1061, 697, 11, 2183, 472, 11, 1061, 697, 11, 2183, 732, 11, 300, 366, 428, 7363, 13437, 18242, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1374141486116158, "compression_ratio": 1.8818565400843883, "no_caption_prob": 3.905450739694061e-06}, {"id": 814, "seek": 304508, "start": 3049.4, "end": 3054.36, "text": " It generates a route dot Elm module, which enumerates, you know, you've got your blog", "tokens": [50364, 407, 2699, 76, 7183, 568, 13, 15, 2531, 281, 2699, 76, 318, 10297, 575, 341, 3991, 2361, 32722, 13, 50580, 50580, 467, 23815, 257, 7955, 5893, 2699, 76, 10088, 11, 597, 465, 15583, 1024, 11, 291, 458, 11, 291, 600, 658, 428, 6968, 50828, 50828, 7955, 11, 291, 600, 658, 428, 8186, 7955, 13, 50961, 50961, 509, 458, 11, 512, 295, 264, 18242, 362, 7955, 9834, 13, 51068, 51068, 2188, 295, 552, 500, 380, 362, 7955, 9834, 13, 51136, 51136, 759, 309, 311, 257, 2167, 3028, 337, 264, 2306, 300, 362, 7955, 9834, 411, 6968, 11, 731, 11, 498, 291, 600, 51297, 51297, 658, 6968, 11, 1061, 697, 11, 2183, 472, 11, 1061, 697, 11, 2183, 732, 11, 300, 366, 428, 7363, 13437, 18242, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1374141486116158, "compression_ratio": 1.8818565400843883, "no_caption_prob": 3.905450739694061e-06}, {"id": 815, "seek": 304508, "start": 3054.36, "end": 3057.02, "text": " route, you've got your index route.", "tokens": [50364, 407, 2699, 76, 7183, 568, 13, 15, 2531, 281, 2699, 76, 318, 10297, 575, 341, 3991, 2361, 32722, 13, 50580, 50580, 467, 23815, 257, 7955, 5893, 2699, 76, 10088, 11, 597, 465, 15583, 1024, 11, 291, 458, 11, 291, 600, 658, 428, 6968, 50828, 50828, 7955, 11, 291, 600, 658, 428, 8186, 7955, 13, 50961, 50961, 509, 458, 11, 512, 295, 264, 18242, 362, 7955, 9834, 13, 51068, 51068, 2188, 295, 552, 500, 380, 362, 7955, 9834, 13, 51136, 51136, 759, 309, 311, 257, 2167, 3028, 337, 264, 2306, 300, 362, 7955, 9834, 411, 6968, 11, 731, 11, 498, 291, 600, 51297, 51297, 658, 6968, 11, 1061, 697, 11, 2183, 472, 11, 1061, 697, 11, 2183, 732, 11, 300, 366, 428, 7363, 13437, 18242, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1374141486116158, "compression_ratio": 1.8818565400843883, "no_caption_prob": 3.905450739694061e-06}, {"id": 816, "seek": 304508, "start": 3057.02, "end": 3059.16, "text": " You know, some of the routes have route parameters.", "tokens": [50364, 407, 2699, 76, 7183, 568, 13, 15, 2531, 281, 2699, 76, 318, 10297, 575, 341, 3991, 2361, 32722, 13, 50580, 50580, 467, 23815, 257, 7955, 5893, 2699, 76, 10088, 11, 597, 465, 15583, 1024, 11, 291, 458, 11, 291, 600, 658, 428, 6968, 50828, 50828, 7955, 11, 291, 600, 658, 428, 8186, 7955, 13, 50961, 50961, 509, 458, 11, 512, 295, 264, 18242, 362, 7955, 9834, 13, 51068, 51068, 2188, 295, 552, 500, 380, 362, 7955, 9834, 13, 51136, 51136, 759, 309, 311, 257, 2167, 3028, 337, 264, 2306, 300, 362, 7955, 9834, 411, 6968, 11, 731, 11, 498, 291, 600, 51297, 51297, 658, 6968, 11, 1061, 697, 11, 2183, 472, 11, 1061, 697, 11, 2183, 732, 11, 300, 366, 428, 7363, 13437, 18242, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1374141486116158, "compression_ratio": 1.8818565400843883, "no_caption_prob": 3.905450739694061e-06}, {"id": 817, "seek": 304508, "start": 3059.16, "end": 3060.52, "text": " Some of them don't have route parameters.", "tokens": [50364, 407, 2699, 76, 7183, 568, 13, 15, 2531, 281, 2699, 76, 318, 10297, 575, 341, 3991, 2361, 32722, 13, 50580, 50580, 467, 23815, 257, 7955, 5893, 2699, 76, 10088, 11, 597, 465, 15583, 1024, 11, 291, 458, 11, 291, 600, 658, 428, 6968, 50828, 50828, 7955, 11, 291, 600, 658, 428, 8186, 7955, 13, 50961, 50961, 509, 458, 11, 512, 295, 264, 18242, 362, 7955, 9834, 13, 51068, 51068, 2188, 295, 552, 500, 380, 362, 7955, 9834, 13, 51136, 51136, 759, 309, 311, 257, 2167, 3028, 337, 264, 2306, 300, 362, 7955, 9834, 411, 6968, 11, 731, 11, 498, 291, 600, 51297, 51297, 658, 6968, 11, 1061, 697, 11, 2183, 472, 11, 1061, 697, 11, 2183, 732, 11, 300, 366, 428, 7363, 13437, 18242, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1374141486116158, "compression_ratio": 1.8818565400843883, "no_caption_prob": 3.905450739694061e-06}, {"id": 818, "seek": 304508, "start": 3060.52, "end": 3063.74, "text": " If it's a single page for the ones that have route parameters like blog, well, if you've", "tokens": [50364, 407, 2699, 76, 7183, 568, 13, 15, 2531, 281, 2699, 76, 318, 10297, 575, 341, 3991, 2361, 32722, 13, 50580, 50580, 467, 23815, 257, 7955, 5893, 2699, 76, 10088, 11, 597, 465, 15583, 1024, 11, 291, 458, 11, 291, 600, 658, 428, 6968, 50828, 50828, 7955, 11, 291, 600, 658, 428, 8186, 7955, 13, 50961, 50961, 509, 458, 11, 512, 295, 264, 18242, 362, 7955, 9834, 13, 51068, 51068, 2188, 295, 552, 500, 380, 362, 7955, 9834, 13, 51136, 51136, 759, 309, 311, 257, 2167, 3028, 337, 264, 2306, 300, 362, 7955, 9834, 411, 6968, 11, 731, 11, 498, 291, 600, 51297, 51297, 658, 6968, 11, 1061, 697, 11, 2183, 472, 11, 1061, 697, 11, 2183, 732, 11, 300, 366, 428, 7363, 13437, 18242, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1374141486116158, "compression_ratio": 1.8818565400843883, "no_caption_prob": 3.905450739694061e-06}, {"id": 819, "seek": 304508, "start": 3063.74, "end": 3071.16, "text": " got blog, slug, post one, slug, post two, that are your valid static routes.", "tokens": [50364, 407, 2699, 76, 7183, 568, 13, 15, 2531, 281, 2699, 76, 318, 10297, 575, 341, 3991, 2361, 32722, 13, 50580, 50580, 467, 23815, 257, 7955, 5893, 2699, 76, 10088, 11, 597, 465, 15583, 1024, 11, 291, 458, 11, 291, 600, 658, 428, 6968, 50828, 50828, 7955, 11, 291, 600, 658, 428, 8186, 7955, 13, 50961, 50961, 509, 458, 11, 512, 295, 264, 18242, 362, 7955, 9834, 13, 51068, 51068, 2188, 295, 552, 500, 380, 362, 7955, 9834, 13, 51136, 51136, 759, 309, 311, 257, 2167, 3028, 337, 264, 2306, 300, 362, 7955, 9834, 411, 6968, 11, 731, 11, 498, 291, 600, 51297, 51297, 658, 6968, 11, 1061, 697, 11, 2183, 472, 11, 1061, 697, 11, 2183, 732, 11, 300, 366, 428, 7363, 13437, 18242, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1374141486116158, "compression_ratio": 1.8818565400843883, "no_caption_prob": 3.905450739694061e-06}, {"id": 820, "seek": 307116, "start": 3071.16, "end": 3076.16, "text": " And you want to say, well, I don't want to link to post negative one because that doesn't", "tokens": [50364, 400, 291, 528, 281, 584, 11, 731, 11, 286, 500, 380, 528, 281, 2113, 281, 2183, 3671, 472, 570, 300, 1177, 380, 50614, 50614, 2514, 420, 2183, 4018, 300, 1177, 380, 2514, 13, 50743, 50743, 407, 286, 528, 281, 764, 364, 2699, 76, 3131, 4978, 281, 1520, 439, 295, 264, 13437, 18242, 13, 50974, 50974, 759, 436, 434, 13437, 7183, 11, 550, 286, 528, 281, 1520, 498, 11, 498, 309, 8198, 13, 51186, 51186, 1779, 13, 51236, 51236, 407, 11, 731, 11, 286, 11, 949, 365, 2699, 76, 7183, 502, 13, 15, 11, 286, 390, 17746, 11, 291, 458, 11, 286, 390, 17746, 51536, 51536, 257, 2136, 300, 32734, 439, 295, 729, 43267, 293, 291, 727, 764, 300, 281, 294, 257, 2010, 3273, 636, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.11173342913389206, "compression_ratio": 1.7509881422924902, "no_caption_prob": 5.338109076546971e-06}, {"id": 821, "seek": 307116, "start": 3076.16, "end": 3078.74, "text": " exist or post zero that doesn't exist.", "tokens": [50364, 400, 291, 528, 281, 584, 11, 731, 11, 286, 500, 380, 528, 281, 2113, 281, 2183, 3671, 472, 570, 300, 1177, 380, 50614, 50614, 2514, 420, 2183, 4018, 300, 1177, 380, 2514, 13, 50743, 50743, 407, 286, 528, 281, 764, 364, 2699, 76, 3131, 4978, 281, 1520, 439, 295, 264, 13437, 18242, 13, 50974, 50974, 759, 436, 434, 13437, 7183, 11, 550, 286, 528, 281, 1520, 498, 11, 498, 309, 8198, 13, 51186, 51186, 1779, 13, 51236, 51236, 407, 11, 731, 11, 286, 11, 949, 365, 2699, 76, 7183, 502, 13, 15, 11, 286, 390, 17746, 11, 291, 458, 11, 286, 390, 17746, 51536, 51536, 257, 2136, 300, 32734, 439, 295, 729, 43267, 293, 291, 727, 764, 300, 281, 294, 257, 2010, 3273, 636, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.11173342913389206, "compression_ratio": 1.7509881422924902, "no_caption_prob": 5.338109076546971e-06}, {"id": 822, "seek": 307116, "start": 3078.74, "end": 3083.3599999999997, "text": " So I want to use an Elm review rule to check all of the static routes.", "tokens": [50364, 400, 291, 528, 281, 584, 11, 731, 11, 286, 500, 380, 528, 281, 2113, 281, 2183, 3671, 472, 570, 300, 1177, 380, 50614, 50614, 2514, 420, 2183, 4018, 300, 1177, 380, 2514, 13, 50743, 50743, 407, 286, 528, 281, 764, 364, 2699, 76, 3131, 4978, 281, 1520, 439, 295, 264, 13437, 18242, 13, 50974, 50974, 759, 436, 434, 13437, 7183, 11, 550, 286, 528, 281, 1520, 498, 11, 498, 309, 8198, 13, 51186, 51186, 1779, 13, 51236, 51236, 407, 11, 731, 11, 286, 11, 949, 365, 2699, 76, 7183, 502, 13, 15, 11, 286, 390, 17746, 11, 291, 458, 11, 286, 390, 17746, 51536, 51536, 257, 2136, 300, 32734, 439, 295, 729, 43267, 293, 291, 727, 764, 300, 281, 294, 257, 2010, 3273, 636, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.11173342913389206, "compression_ratio": 1.7509881422924902, "no_caption_prob": 5.338109076546971e-06}, {"id": 823, "seek": 307116, "start": 3083.3599999999997, "end": 3087.6, "text": " If they're static pages, then I want to check if, if it exists.", "tokens": [50364, 400, 291, 528, 281, 584, 11, 731, 11, 286, 500, 380, 528, 281, 2113, 281, 2183, 3671, 472, 570, 300, 1177, 380, 50614, 50614, 2514, 420, 2183, 4018, 300, 1177, 380, 2514, 13, 50743, 50743, 407, 286, 528, 281, 764, 364, 2699, 76, 3131, 4978, 281, 1520, 439, 295, 264, 13437, 18242, 13, 50974, 50974, 759, 436, 434, 13437, 7183, 11, 550, 286, 528, 281, 1520, 498, 11, 498, 309, 8198, 13, 51186, 51186, 1779, 13, 51236, 51236, 407, 11, 731, 11, 286, 11, 949, 365, 2699, 76, 7183, 502, 13, 15, 11, 286, 390, 17746, 11, 291, 458, 11, 286, 390, 17746, 51536, 51536, 257, 2136, 300, 32734, 439, 295, 729, 43267, 293, 291, 727, 764, 300, 281, 294, 257, 2010, 3273, 636, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.11173342913389206, "compression_ratio": 1.7509881422924902, "no_caption_prob": 5.338109076546971e-06}, {"id": 824, "seek": 307116, "start": 3087.6, "end": 3088.6, "text": " Right.", "tokens": [50364, 400, 291, 528, 281, 584, 11, 731, 11, 286, 500, 380, 528, 281, 2113, 281, 2183, 3671, 472, 570, 300, 1177, 380, 50614, 50614, 2514, 420, 2183, 4018, 300, 1177, 380, 2514, 13, 50743, 50743, 407, 286, 528, 281, 764, 364, 2699, 76, 3131, 4978, 281, 1520, 439, 295, 264, 13437, 18242, 13, 50974, 50974, 759, 436, 434, 13437, 7183, 11, 550, 286, 528, 281, 1520, 498, 11, 498, 309, 8198, 13, 51186, 51186, 1779, 13, 51236, 51236, 407, 11, 731, 11, 286, 11, 949, 365, 2699, 76, 7183, 502, 13, 15, 11, 286, 390, 17746, 11, 291, 458, 11, 286, 390, 17746, 51536, 51536, 257, 2136, 300, 32734, 439, 295, 729, 43267, 293, 291, 727, 764, 300, 281, 294, 257, 2010, 3273, 636, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.11173342913389206, "compression_ratio": 1.7509881422924902, "no_caption_prob": 5.338109076546971e-06}, {"id": 825, "seek": 307116, "start": 3088.6, "end": 3094.6, "text": " So, well, I, before with Elm pages 1.0, I was generating, you know, I was generating", "tokens": [50364, 400, 291, 528, 281, 584, 11, 731, 11, 286, 500, 380, 528, 281, 2113, 281, 2183, 3671, 472, 570, 300, 1177, 380, 50614, 50614, 2514, 420, 2183, 4018, 300, 1177, 380, 2514, 13, 50743, 50743, 407, 286, 528, 281, 764, 364, 2699, 76, 3131, 4978, 281, 1520, 439, 295, 264, 13437, 18242, 13, 50974, 50974, 759, 436, 434, 13437, 7183, 11, 550, 286, 528, 281, 1520, 498, 11, 498, 309, 8198, 13, 51186, 51186, 1779, 13, 51236, 51236, 407, 11, 731, 11, 286, 11, 949, 365, 2699, 76, 7183, 502, 13, 15, 11, 286, 390, 17746, 11, 291, 458, 11, 286, 390, 17746, 51536, 51536, 257, 2136, 300, 32734, 439, 295, 729, 43267, 293, 291, 727, 764, 300, 281, 294, 257, 2010, 3273, 636, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.11173342913389206, "compression_ratio": 1.7509881422924902, "no_caption_prob": 5.338109076546971e-06}, {"id": 826, "seek": 307116, "start": 3094.6, "end": 3100.06, "text": " a record that referenced all of those URLs and you could use that to in a type safe way", "tokens": [50364, 400, 291, 528, 281, 584, 11, 731, 11, 286, 500, 380, 528, 281, 2113, 281, 2183, 3671, 472, 570, 300, 1177, 380, 50614, 50614, 2514, 420, 2183, 4018, 300, 1177, 380, 2514, 13, 50743, 50743, 407, 286, 528, 281, 764, 364, 2699, 76, 3131, 4978, 281, 1520, 439, 295, 264, 13437, 18242, 13, 50974, 50974, 759, 436, 434, 13437, 7183, 11, 550, 286, 528, 281, 1520, 498, 11, 498, 309, 8198, 13, 51186, 51186, 1779, 13, 51236, 51236, 407, 11, 731, 11, 286, 11, 949, 365, 2699, 76, 7183, 502, 13, 15, 11, 286, 390, 17746, 11, 291, 458, 11, 286, 390, 17746, 51536, 51536, 257, 2136, 300, 32734, 439, 295, 729, 43267, 293, 291, 727, 764, 300, 281, 294, 257, 2010, 3273, 636, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.11173342913389206, "compression_ratio": 1.7509881422924902, "no_caption_prob": 5.338109076546971e-06}, {"id": 827, "seek": 310006, "start": 3100.06, "end": 3101.7999999999997, "text": " refer to static routes.", "tokens": [50364, 2864, 281, 13437, 18242, 13, 50451, 50451, 823, 286, 445, 362, 613, 7955, 21669, 13, 50553, 50553, 407, 264, 6968, 7955, 307, 516, 281, 312, 257, 2167, 7955, 293, 309, 311, 406, 516, 281, 11, 498, 291, 362, 257, 50815, 50815, 3262, 6968, 12300, 11, 309, 311, 406, 516, 281, 8460, 746, 337, 1184, 295, 729, 13, 51015, 51015, 407, 437, 286, 478, 1953, 307, 8460, 11, 2232, 11, 411, 362, 512, 1333, 295, 11, 1105, 11, 12855, 40, 5622, 337, 2699, 76, 51323, 51323, 7183, 689, 286, 393, 8460, 257, 10088, 300, 11, 300, 291, 393, 764, 294, 364, 2699, 76, 3131, 4978, 281, 51642, 51642, 16888, 300, 264, 18242, 366, 13437, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.08746514077913964, "compression_ratio": 1.721774193548387, "no_caption_prob": 1.7778358596842736e-05}, {"id": 828, "seek": 310006, "start": 3101.7999999999997, "end": 3103.84, "text": " Now I just have these route variants.", "tokens": [50364, 2864, 281, 13437, 18242, 13, 50451, 50451, 823, 286, 445, 362, 613, 7955, 21669, 13, 50553, 50553, 407, 264, 6968, 7955, 307, 516, 281, 312, 257, 2167, 7955, 293, 309, 311, 406, 516, 281, 11, 498, 291, 362, 257, 50815, 50815, 3262, 6968, 12300, 11, 309, 311, 406, 516, 281, 8460, 746, 337, 1184, 295, 729, 13, 51015, 51015, 407, 437, 286, 478, 1953, 307, 8460, 11, 2232, 11, 411, 362, 512, 1333, 295, 11, 1105, 11, 12855, 40, 5622, 337, 2699, 76, 51323, 51323, 7183, 689, 286, 393, 8460, 257, 10088, 300, 11, 300, 291, 393, 764, 294, 364, 2699, 76, 3131, 4978, 281, 51642, 51642, 16888, 300, 264, 18242, 366, 13437, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.08746514077913964, "compression_ratio": 1.721774193548387, "no_caption_prob": 1.7778358596842736e-05}, {"id": 829, "seek": 310006, "start": 3103.84, "end": 3109.08, "text": " So the blog route is going to be a single route and it's not going to, if you have a", "tokens": [50364, 2864, 281, 13437, 18242, 13, 50451, 50451, 823, 286, 445, 362, 613, 7955, 21669, 13, 50553, 50553, 407, 264, 6968, 7955, 307, 516, 281, 312, 257, 2167, 7955, 293, 309, 311, 406, 516, 281, 11, 498, 291, 362, 257, 50815, 50815, 3262, 6968, 12300, 11, 309, 311, 406, 516, 281, 8460, 746, 337, 1184, 295, 729, 13, 51015, 51015, 407, 437, 286, 478, 1953, 307, 8460, 11, 2232, 11, 411, 362, 512, 1333, 295, 11, 1105, 11, 12855, 40, 5622, 337, 2699, 76, 51323, 51323, 7183, 689, 286, 393, 8460, 257, 10088, 300, 11, 300, 291, 393, 764, 294, 364, 2699, 76, 3131, 4978, 281, 51642, 51642, 16888, 300, 264, 18242, 366, 13437, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.08746514077913964, "compression_ratio": 1.721774193548387, "no_caption_prob": 1.7778358596842736e-05}, {"id": 830, "seek": 310006, "start": 3109.08, "end": 3113.08, "text": " hundred blog posts, it's not going to generate something for each of those.", "tokens": [50364, 2864, 281, 13437, 18242, 13, 50451, 50451, 823, 286, 445, 362, 613, 7955, 21669, 13, 50553, 50553, 407, 264, 6968, 7955, 307, 516, 281, 312, 257, 2167, 7955, 293, 309, 311, 406, 516, 281, 11, 498, 291, 362, 257, 50815, 50815, 3262, 6968, 12300, 11, 309, 311, 406, 516, 281, 8460, 746, 337, 1184, 295, 729, 13, 51015, 51015, 407, 437, 286, 478, 1953, 307, 8460, 11, 2232, 11, 411, 362, 512, 1333, 295, 11, 1105, 11, 12855, 40, 5622, 337, 2699, 76, 51323, 51323, 7183, 689, 286, 393, 8460, 257, 10088, 300, 11, 300, 291, 393, 764, 294, 364, 2699, 76, 3131, 4978, 281, 51642, 51642, 16888, 300, 264, 18242, 366, 13437, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.08746514077913964, "compression_ratio": 1.721774193548387, "no_caption_prob": 1.7778358596842736e-05}, {"id": 831, "seek": 310006, "start": 3113.08, "end": 3119.24, "text": " So what I'm thinking is generate, uh, like have some sort of, um, CLI command for Elm", "tokens": [50364, 2864, 281, 13437, 18242, 13, 50451, 50451, 823, 286, 445, 362, 613, 7955, 21669, 13, 50553, 50553, 407, 264, 6968, 7955, 307, 516, 281, 312, 257, 2167, 7955, 293, 309, 311, 406, 516, 281, 11, 498, 291, 362, 257, 50815, 50815, 3262, 6968, 12300, 11, 309, 311, 406, 516, 281, 8460, 746, 337, 1184, 295, 729, 13, 51015, 51015, 407, 437, 286, 478, 1953, 307, 8460, 11, 2232, 11, 411, 362, 512, 1333, 295, 11, 1105, 11, 12855, 40, 5622, 337, 2699, 76, 51323, 51323, 7183, 689, 286, 393, 8460, 257, 10088, 300, 11, 300, 291, 393, 764, 294, 364, 2699, 76, 3131, 4978, 281, 51642, 51642, 16888, 300, 264, 18242, 366, 13437, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.08746514077913964, "compression_ratio": 1.721774193548387, "no_caption_prob": 1.7778358596842736e-05}, {"id": 832, "seek": 310006, "start": 3119.24, "end": 3125.62, "text": " pages where I can generate a module that, that you can use in an Elm review rule to", "tokens": [50364, 2864, 281, 13437, 18242, 13, 50451, 50451, 823, 286, 445, 362, 613, 7955, 21669, 13, 50553, 50553, 407, 264, 6968, 7955, 307, 516, 281, 312, 257, 2167, 7955, 293, 309, 311, 406, 516, 281, 11, 498, 291, 362, 257, 50815, 50815, 3262, 6968, 12300, 11, 309, 311, 406, 516, 281, 8460, 746, 337, 1184, 295, 729, 13, 51015, 51015, 407, 437, 286, 478, 1953, 307, 8460, 11, 2232, 11, 411, 362, 512, 1333, 295, 11, 1105, 11, 12855, 40, 5622, 337, 2699, 76, 51323, 51323, 7183, 689, 286, 393, 8460, 257, 10088, 300, 11, 300, 291, 393, 764, 294, 364, 2699, 76, 3131, 4978, 281, 51642, 51642, 16888, 300, 264, 18242, 366, 13437, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.08746514077913964, "compression_ratio": 1.721774193548387, "no_caption_prob": 1.7778358596842736e-05}, {"id": 833, "seek": 310006, "start": 3125.62, "end": 3127.7599999999998, "text": " verify that the routes are static.", "tokens": [50364, 2864, 281, 13437, 18242, 13, 50451, 50451, 823, 286, 445, 362, 613, 7955, 21669, 13, 50553, 50553, 407, 264, 6968, 7955, 307, 516, 281, 312, 257, 2167, 7955, 293, 309, 311, 406, 516, 281, 11, 498, 291, 362, 257, 50815, 50815, 3262, 6968, 12300, 11, 309, 311, 406, 516, 281, 8460, 746, 337, 1184, 295, 729, 13, 51015, 51015, 407, 437, 286, 478, 1953, 307, 8460, 11, 2232, 11, 411, 362, 512, 1333, 295, 11, 1105, 11, 12855, 40, 5622, 337, 2699, 76, 51323, 51323, 7183, 689, 286, 393, 8460, 257, 10088, 300, 11, 300, 291, 393, 764, 294, 364, 2699, 76, 3131, 4978, 281, 51642, 51642, 16888, 300, 264, 18242, 366, 13437, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.08746514077913964, "compression_ratio": 1.721774193548387, "no_caption_prob": 1.7778358596842736e-05}, {"id": 834, "seek": 312776, "start": 3127.76, "end": 3133.0, "text": " So it would be, so basically before running Elm review, you would first have to run this", "tokens": [50364, 407, 309, 576, 312, 11, 370, 1936, 949, 2614, 2699, 76, 3131, 11, 291, 576, 700, 362, 281, 1190, 341, 50626, 50626, 10833, 3089, 570, 264, 2699, 76, 3131, 4978, 576, 5672, 322, 300, 10833, 3089, 13, 50834, 50834, 865, 13, 50884, 50884, 286, 519, 300, 311, 257, 11, 300, 311, 257, 665, 1558, 13, 50956, 50956, 286, 767, 630, 746, 588, 2531, 3938, 281, 11, 337, 11, 337, 589, 689, 286, 1936, 5531, 51286, 51286, 44383, 24387, 1716, 13, 51422, 51422, 407, 321, 362, 257, 3840, 295, 24387, 7098, 293, 321, 362, 257, 688, 295, 3116, 3089, 294, 456, 570, 309, 311, 24387, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13035495128106633, "compression_ratio": 1.7024793388429753, "no_caption_prob": 5.173891167942202e-06}, {"id": 835, "seek": 312776, "start": 3133.0, "end": 3137.1600000000003, "text": " generated code because the Elm review rule would depend on that generated code.", "tokens": [50364, 407, 309, 576, 312, 11, 370, 1936, 949, 2614, 2699, 76, 3131, 11, 291, 576, 700, 362, 281, 1190, 341, 50626, 50626, 10833, 3089, 570, 264, 2699, 76, 3131, 4978, 576, 5672, 322, 300, 10833, 3089, 13, 50834, 50834, 865, 13, 50884, 50884, 286, 519, 300, 311, 257, 11, 300, 311, 257, 665, 1558, 13, 50956, 50956, 286, 767, 630, 746, 588, 2531, 3938, 281, 11, 337, 11, 337, 589, 689, 286, 1936, 5531, 51286, 51286, 44383, 24387, 1716, 13, 51422, 51422, 407, 321, 362, 257, 3840, 295, 24387, 7098, 293, 321, 362, 257, 688, 295, 3116, 3089, 294, 456, 570, 309, 311, 24387, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13035495128106633, "compression_ratio": 1.7024793388429753, "no_caption_prob": 5.173891167942202e-06}, {"id": 836, "seek": 312776, "start": 3137.1600000000003, "end": 3138.1600000000003, "text": " Yeah.", "tokens": [50364, 407, 309, 576, 312, 11, 370, 1936, 949, 2614, 2699, 76, 3131, 11, 291, 576, 700, 362, 281, 1190, 341, 50626, 50626, 10833, 3089, 570, 264, 2699, 76, 3131, 4978, 576, 5672, 322, 300, 10833, 3089, 13, 50834, 50834, 865, 13, 50884, 50884, 286, 519, 300, 311, 257, 11, 300, 311, 257, 665, 1558, 13, 50956, 50956, 286, 767, 630, 746, 588, 2531, 3938, 281, 11, 337, 11, 337, 589, 689, 286, 1936, 5531, 51286, 51286, 44383, 24387, 1716, 13, 51422, 51422, 407, 321, 362, 257, 3840, 295, 24387, 7098, 293, 321, 362, 257, 688, 295, 3116, 3089, 294, 456, 570, 309, 311, 24387, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13035495128106633, "compression_ratio": 1.7024793388429753, "no_caption_prob": 5.173891167942202e-06}, {"id": 837, "seek": 312776, "start": 3138.1600000000003, "end": 3139.6000000000004, "text": " I think that's a, that's a good idea.", "tokens": [50364, 407, 309, 576, 312, 11, 370, 1936, 949, 2614, 2699, 76, 3131, 11, 291, 576, 700, 362, 281, 1190, 341, 50626, 50626, 10833, 3089, 570, 264, 2699, 76, 3131, 4978, 576, 5672, 322, 300, 10833, 3089, 13, 50834, 50834, 865, 13, 50884, 50884, 286, 519, 300, 311, 257, 11, 300, 311, 257, 665, 1558, 13, 50956, 50956, 286, 767, 630, 746, 588, 2531, 3938, 281, 11, 337, 11, 337, 589, 689, 286, 1936, 5531, 51286, 51286, 44383, 24387, 1716, 13, 51422, 51422, 407, 321, 362, 257, 3840, 295, 24387, 7098, 293, 321, 362, 257, 688, 295, 3116, 3089, 294, 456, 570, 309, 311, 24387, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13035495128106633, "compression_ratio": 1.7024793388429753, "no_caption_prob": 5.173891167942202e-06}, {"id": 838, "seek": 312776, "start": 3139.6000000000004, "end": 3146.2000000000003, "text": " I actually did something very similar recently to, for, for work where I basically detect", "tokens": [50364, 407, 309, 576, 312, 11, 370, 1936, 949, 2614, 2699, 76, 3131, 11, 291, 576, 700, 362, 281, 1190, 341, 50626, 50626, 10833, 3089, 570, 264, 2699, 76, 3131, 4978, 576, 5672, 322, 300, 10833, 3089, 13, 50834, 50834, 865, 13, 50884, 50884, 286, 519, 300, 311, 257, 11, 300, 311, 257, 665, 1558, 13, 50956, 50956, 286, 767, 630, 746, 588, 2531, 3938, 281, 11, 337, 11, 337, 589, 689, 286, 1936, 5531, 51286, 51286, 44383, 24387, 1716, 13, 51422, 51422, 407, 321, 362, 257, 3840, 295, 24387, 7098, 293, 321, 362, 257, 688, 295, 3116, 3089, 294, 456, 570, 309, 311, 24387, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13035495128106633, "compression_ratio": 1.7024793388429753, "no_caption_prob": 5.173891167942202e-06}, {"id": 839, "seek": 312776, "start": 3146.2000000000003, "end": 3148.92, "text": " unused CSS project.", "tokens": [50364, 407, 309, 576, 312, 11, 370, 1936, 949, 2614, 2699, 76, 3131, 11, 291, 576, 700, 362, 281, 1190, 341, 50626, 50626, 10833, 3089, 570, 264, 2699, 76, 3131, 4978, 576, 5672, 322, 300, 10833, 3089, 13, 50834, 50834, 865, 13, 50884, 50884, 286, 519, 300, 311, 257, 11, 300, 311, 257, 665, 1558, 13, 50956, 50956, 286, 767, 630, 746, 588, 2531, 3938, 281, 11, 337, 11, 337, 589, 689, 286, 1936, 5531, 51286, 51286, 44383, 24387, 1716, 13, 51422, 51422, 407, 321, 362, 257, 3840, 295, 24387, 7098, 293, 321, 362, 257, 688, 295, 3116, 3089, 294, 456, 570, 309, 311, 24387, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13035495128106633, "compression_ratio": 1.7024793388429753, "no_caption_prob": 5.173891167942202e-06}, {"id": 840, "seek": 312776, "start": 3148.92, "end": 3155.6400000000003, "text": " So we have a bunch of CSS files and we have a lot of dead code in there because it's CSS.", "tokens": [50364, 407, 309, 576, 312, 11, 370, 1936, 949, 2614, 2699, 76, 3131, 11, 291, 576, 700, 362, 281, 1190, 341, 50626, 50626, 10833, 3089, 570, 264, 2699, 76, 3131, 4978, 576, 5672, 322, 300, 10833, 3089, 13, 50834, 50834, 865, 13, 50884, 50884, 286, 519, 300, 311, 257, 11, 300, 311, 257, 665, 1558, 13, 50956, 50956, 286, 767, 630, 746, 588, 2531, 3938, 281, 11, 337, 11, 337, 589, 689, 286, 1936, 5531, 51286, 51286, 44383, 24387, 1716, 13, 51422, 51422, 407, 321, 362, 257, 3840, 295, 24387, 7098, 293, 321, 362, 257, 688, 295, 3116, 3089, 294, 456, 570, 309, 311, 24387, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13035495128106633, "compression_ratio": 1.7024793388429753, "no_caption_prob": 5.173891167942202e-06}, {"id": 841, "seek": 315564, "start": 3155.64, "end": 3160.66, "text": " So what I did is I go through all of those, find all the classes and then generate an", "tokens": [50364, 407, 437, 286, 630, 307, 286, 352, 807, 439, 295, 729, 11, 915, 439, 264, 5359, 293, 550, 8460, 364, 50615, 50615, 2699, 76, 3991, 13, 50665, 50665, 400, 550, 286, 764, 300, 382, 257, 4009, 295, 3494, 337, 257, 4978, 300, 286, 1219, 572, 44383, 24387, 5359, 13, 51044, 51044, 363, 3662, 13, 51094, 51094, 400, 550, 8660, 309, 576, 915, 257, 1508, 11, 309, 390, 12658, 382, 1143, 293, 264, 2306, 300, 309, 2809, 380, 51382, 51382, 915, 12658, 382, 44383, 13, 51473, 51473], "temperature": 0.0, "avg_logprob": -0.15183566917072644, "compression_ratio": 1.6923076923076923, "no_caption_prob": 2.2958931822358863e-06}, {"id": 842, "seek": 315564, "start": 3160.66, "end": 3161.66, "text": " Elm file.", "tokens": [50364, 407, 437, 286, 630, 307, 286, 352, 807, 439, 295, 729, 11, 915, 439, 264, 5359, 293, 550, 8460, 364, 50615, 50615, 2699, 76, 3991, 13, 50665, 50665, 400, 550, 286, 764, 300, 382, 257, 4009, 295, 3494, 337, 257, 4978, 300, 286, 1219, 572, 44383, 24387, 5359, 13, 51044, 51044, 363, 3662, 13, 51094, 51094, 400, 550, 8660, 309, 576, 915, 257, 1508, 11, 309, 390, 12658, 382, 1143, 293, 264, 2306, 300, 309, 2809, 380, 51382, 51382, 915, 12658, 382, 44383, 13, 51473, 51473], "temperature": 0.0, "avg_logprob": -0.15183566917072644, "compression_ratio": 1.6923076923076923, "no_caption_prob": 2.2958931822358863e-06}, {"id": 843, "seek": 315564, "start": 3161.66, "end": 3169.24, "text": " And then I use that as a source of truth for a rule that I called no unused CSS classes.", "tokens": [50364, 407, 437, 286, 630, 307, 286, 352, 807, 439, 295, 729, 11, 915, 439, 264, 5359, 293, 550, 8460, 364, 50615, 50615, 2699, 76, 3991, 13, 50665, 50665, 400, 550, 286, 764, 300, 382, 257, 4009, 295, 3494, 337, 257, 4978, 300, 286, 1219, 572, 44383, 24387, 5359, 13, 51044, 51044, 363, 3662, 13, 51094, 51094, 400, 550, 8660, 309, 576, 915, 257, 1508, 11, 309, 390, 12658, 382, 1143, 293, 264, 2306, 300, 309, 2809, 380, 51382, 51382, 915, 12658, 382, 44383, 13, 51473, 51473], "temperature": 0.0, "avg_logprob": -0.15183566917072644, "compression_ratio": 1.6923076923076923, "no_caption_prob": 2.2958931822358863e-06}, {"id": 844, "seek": 315564, "start": 3169.24, "end": 3170.24, "text": " Boring.", "tokens": [50364, 407, 437, 286, 630, 307, 286, 352, 807, 439, 295, 729, 11, 915, 439, 264, 5359, 293, 550, 8460, 364, 50615, 50615, 2699, 76, 3991, 13, 50665, 50665, 400, 550, 286, 764, 300, 382, 257, 4009, 295, 3494, 337, 257, 4978, 300, 286, 1219, 572, 44383, 24387, 5359, 13, 51044, 51044, 363, 3662, 13, 51094, 51094, 400, 550, 8660, 309, 576, 915, 257, 1508, 11, 309, 390, 12658, 382, 1143, 293, 264, 2306, 300, 309, 2809, 380, 51382, 51382, 915, 12658, 382, 44383, 13, 51473, 51473], "temperature": 0.0, "avg_logprob": -0.15183566917072644, "compression_ratio": 1.6923076923076923, "no_caption_prob": 2.2958931822358863e-06}, {"id": 845, "seek": 315564, "start": 3170.24, "end": 3176.0, "text": " And then wherever it would find a class, it was marked as used and the ones that it couldn't", "tokens": [50364, 407, 437, 286, 630, 307, 286, 352, 807, 439, 295, 729, 11, 915, 439, 264, 5359, 293, 550, 8460, 364, 50615, 50615, 2699, 76, 3991, 13, 50665, 50665, 400, 550, 286, 764, 300, 382, 257, 4009, 295, 3494, 337, 257, 4978, 300, 286, 1219, 572, 44383, 24387, 5359, 13, 51044, 51044, 363, 3662, 13, 51094, 51094, 400, 550, 8660, 309, 576, 915, 257, 1508, 11, 309, 390, 12658, 382, 1143, 293, 264, 2306, 300, 309, 2809, 380, 51382, 51382, 915, 12658, 382, 44383, 13, 51473, 51473], "temperature": 0.0, "avg_logprob": -0.15183566917072644, "compression_ratio": 1.6923076923076923, "no_caption_prob": 2.2958931822358863e-06}, {"id": 846, "seek": 315564, "start": 3176.0, "end": 3177.8199999999997, "text": " find marked as unused.", "tokens": [50364, 407, 437, 286, 630, 307, 286, 352, 807, 439, 295, 729, 11, 915, 439, 264, 5359, 293, 550, 8460, 364, 50615, 50615, 2699, 76, 3991, 13, 50665, 50665, 400, 550, 286, 764, 300, 382, 257, 4009, 295, 3494, 337, 257, 4978, 300, 286, 1219, 572, 44383, 24387, 5359, 13, 51044, 51044, 363, 3662, 13, 51094, 51094, 400, 550, 8660, 309, 576, 915, 257, 1508, 11, 309, 390, 12658, 382, 1143, 293, 264, 2306, 300, 309, 2809, 380, 51382, 51382, 915, 12658, 382, 44383, 13, 51473, 51473], "temperature": 0.0, "avg_logprob": -0.15183566917072644, "compression_ratio": 1.6923076923076923, "no_caption_prob": 2.2958931822358863e-06}, {"id": 847, "seek": 317782, "start": 3177.82, "end": 3186.32, "text": " So using that and another rule where I disallow dynamic classes like homepage dash dash plus", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 848, "seek": 317782, "start": 3186.32, "end": 3192.56, "text": " plus modifier, like homepage constructing CSS classes, I disallow.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 849, "seek": 317782, "start": 3192.56, "end": 3197.04, "text": " So with those two, two rules in place, I was able to remove all the unused CSS classes", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 850, "seek": 317782, "start": 3197.04, "end": 3199.92, "text": " from the project, which was about 4,000 lines of code.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 851, "seek": 317782, "start": 3199.92, "end": 3200.92, "text": " So that was nice.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 852, "seek": 317782, "start": 3200.92, "end": 3201.92, "text": " Wow.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 853, "seek": 317782, "start": 3201.92, "end": 3202.92, "text": " Oh, that's fascinating.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 854, "seek": 317782, "start": 3202.92, "end": 3203.92, "text": " Okay.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 855, "seek": 317782, "start": 3203.92, "end": 3204.92, "text": " Yeah, that's cool.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 856, "seek": 317782, "start": 3204.92, "end": 3207.2400000000002, "text": " That's a, that's a good use case for, for code generation.", "tokens": [50364, 407, 1228, 300, 293, 1071, 4978, 689, 286, 717, 13253, 8546, 5359, 411, 31301, 8240, 8240, 1804, 50789, 50789, 1804, 38011, 11, 411, 31301, 39969, 24387, 5359, 11, 286, 717, 13253, 13, 51101, 51101, 407, 365, 729, 732, 11, 732, 4474, 294, 1081, 11, 286, 390, 1075, 281, 4159, 439, 264, 44383, 24387, 5359, 51325, 51325, 490, 264, 1716, 11, 597, 390, 466, 1017, 11, 1360, 3876, 295, 3089, 13, 51469, 51469, 407, 300, 390, 1481, 13, 51519, 51519, 3153, 13, 51569, 51569, 876, 11, 300, 311, 10343, 13, 51619, 51619, 1033, 13, 51669, 51669, 865, 11, 300, 311, 1627, 13, 51719, 51719, 663, 311, 257, 11, 300, 311, 257, 665, 764, 1389, 337, 11, 337, 3089, 5125, 13, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.11034232814137529, "compression_ratio": 1.6744186046511629, "no_caption_prob": 2.6425668693264015e-06}, {"id": 857, "seek": 320724, "start": 3207.24, "end": 3214.04, "text": " So yeah, I mean, basically like Elm review could get arbitrary access to files and look", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 858, "seek": 320724, "start": 3214.04, "end": 3219.22, "text": " at those and parse the, but I mean, honestly, then you'd have to write like a CSS parser", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 859, "seek": 320724, "start": 3219.22, "end": 3224.66, "text": " in Elm and et cetera, et cetera, which you could probably easily find an NPM package", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 860, "seek": 320724, "start": 3224.66, "end": 3227.6, "text": " that parses CSS and does all those things.", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 861, "seek": 320724, "start": 3227.6, "end": 3228.6, "text": " So yeah.", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 862, "seek": 320724, "start": 3228.6, "end": 3234.9199999999996, "text": " And then the watch mode can be a bit different, like, Oh, when this, which files should I", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 863, "seek": 320724, "start": 3234.9199999999996, "end": 3235.9199999999996, "text": " check?", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 864, "seek": 320724, "start": 3235.9199999999996, "end": 3236.9199999999996, "text": " Right.", "tokens": [50364, 407, 1338, 11, 286, 914, 11, 1936, 411, 2699, 76, 3131, 727, 483, 23211, 2105, 281, 7098, 293, 574, 50704, 50704, 412, 729, 293, 48377, 264, 11, 457, 286, 914, 11, 6095, 11, 550, 291, 1116, 362, 281, 2464, 411, 257, 24387, 21156, 260, 50963, 50963, 294, 2699, 76, 293, 1030, 11458, 11, 1030, 11458, 11, 597, 291, 727, 1391, 3612, 915, 364, 426, 18819, 7372, 51235, 51235, 300, 21156, 279, 24387, 293, 775, 439, 729, 721, 13, 51382, 51382, 407, 1338, 13, 51432, 51432, 400, 550, 264, 1159, 4391, 393, 312, 257, 857, 819, 11, 411, 11, 876, 11, 562, 341, 11, 597, 7098, 820, 286, 51748, 51748, 1520, 30, 51798, 51798, 1779, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.1277925266939051, "compression_ratio": 1.61003861003861, "no_caption_prob": 6.4389801082143094e-06}, {"id": 865, "seek": 323692, "start": 3236.92, "end": 3237.92, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 866, "seek": 323692, "start": 3237.92, "end": 3238.92, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 867, "seek": 323692, "start": 3238.92, "end": 3242.8, "text": " But th th those are questions that I have, uh, at the top of my mind, but yeah.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 868, "seek": 323692, "start": 3242.8, "end": 3243.8, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 869, "seek": 323692, "start": 3243.8, "end": 3250.84, "text": " I'll also, I also want to like generate files using Elm review so that you can like, yeah.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 870, "seek": 323692, "start": 3250.84, "end": 3254.56, "text": " Like you say, this is a safe, unsafe value type of thing.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 871, "seek": 323692, "start": 3254.56, "end": 3255.56, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 872, "seek": 323692, "start": 3255.56, "end": 3261.0, "text": " For instance, or I can auto fix the CSS files, like give me the CSS files.", "tokens": [50364, 865, 13, 50414, 50414, 865, 13, 50464, 50464, 583, 258, 258, 729, 366, 1651, 300, 286, 362, 11, 2232, 11, 412, 264, 1192, 295, 452, 1575, 11, 457, 1338, 13, 50658, 50658, 865, 13, 50708, 50708, 286, 603, 611, 11, 286, 611, 528, 281, 411, 8460, 7098, 1228, 2699, 76, 3131, 370, 300, 291, 393, 411, 11, 1338, 13, 51060, 51060, 1743, 291, 584, 11, 341, 307, 257, 3273, 11, 35948, 2158, 2010, 295, 551, 13, 51246, 51246, 865, 13, 51296, 51296, 1171, 5197, 11, 420, 286, 393, 8399, 3191, 264, 24387, 7098, 11, 411, 976, 385, 264, 24387, 7098, 13, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.19993164425804502, "compression_ratio": 1.587378640776699, "no_caption_prob": 3.4806311305146664e-05}, {"id": 873, "seek": 326100, "start": 3261.0, "end": 3267.16, "text": " I will parse them and look at the ones that the classes that have been, that are not used", "tokens": [50364, 286, 486, 48377, 552, 293, 574, 412, 264, 2306, 300, 264, 5359, 300, 362, 668, 11, 300, 366, 406, 1143, 50672, 50672, 293, 286, 486, 4159, 552, 337, 291, 13, 50762, 50762, 400, 286, 445, 2464, 729, 646, 281, 257, 3991, 281, 264, 3380, 3991, 13, 50989, 50989, 583, 300, 575, 257, 688, 295, 4759, 11, 457, 11, 1105, 11, 309, 311, 746, 300, 286, 669, 3102, 294, 12736, 13, 51262, 51262, 407, 257, 1326, 6082, 300, 286, 362, 337, 562, 291, 360, 3089, 5125, 307, 472, 11, 286, 576, 1286, 439, 264, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10916457225366966, "compression_ratio": 1.6409090909090909, "no_caption_prob": 1.618708120076917e-05}, {"id": 874, "seek": 326100, "start": 3267.16, "end": 3268.96, "text": " and I will remove them for you.", "tokens": [50364, 286, 486, 48377, 552, 293, 574, 412, 264, 2306, 300, 264, 5359, 300, 362, 668, 11, 300, 366, 406, 1143, 50672, 50672, 293, 286, 486, 4159, 552, 337, 291, 13, 50762, 50762, 400, 286, 445, 2464, 729, 646, 281, 257, 3991, 281, 264, 3380, 3991, 13, 50989, 50989, 583, 300, 575, 257, 688, 295, 4759, 11, 457, 11, 1105, 11, 309, 311, 746, 300, 286, 669, 3102, 294, 12736, 13, 51262, 51262, 407, 257, 1326, 6082, 300, 286, 362, 337, 562, 291, 360, 3089, 5125, 307, 472, 11, 286, 576, 1286, 439, 264, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10916457225366966, "compression_ratio": 1.6409090909090909, "no_caption_prob": 1.618708120076917e-05}, {"id": 875, "seek": 326100, "start": 3268.96, "end": 3273.5, "text": " And I just write those back to a file to the original file.", "tokens": [50364, 286, 486, 48377, 552, 293, 574, 412, 264, 2306, 300, 264, 5359, 300, 362, 668, 11, 300, 366, 406, 1143, 50672, 50672, 293, 286, 486, 4159, 552, 337, 291, 13, 50762, 50762, 400, 286, 445, 2464, 729, 646, 281, 257, 3991, 281, 264, 3380, 3991, 13, 50989, 50989, 583, 300, 575, 257, 688, 295, 4759, 11, 457, 11, 1105, 11, 309, 311, 746, 300, 286, 669, 3102, 294, 12736, 13, 51262, 51262, 407, 257, 1326, 6082, 300, 286, 362, 337, 562, 291, 360, 3089, 5125, 307, 472, 11, 286, 576, 1286, 439, 264, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10916457225366966, "compression_ratio": 1.6409090909090909, "no_caption_prob": 1.618708120076917e-05}, {"id": 876, "seek": 326100, "start": 3273.5, "end": 3278.96, "text": " But that has a lot of challenges, but, um, it's something that I am interested in exploring.", "tokens": [50364, 286, 486, 48377, 552, 293, 574, 412, 264, 2306, 300, 264, 5359, 300, 362, 668, 11, 300, 366, 406, 1143, 50672, 50672, 293, 286, 486, 4159, 552, 337, 291, 13, 50762, 50762, 400, 286, 445, 2464, 729, 646, 281, 257, 3991, 281, 264, 3380, 3991, 13, 50989, 50989, 583, 300, 575, 257, 688, 295, 4759, 11, 457, 11, 1105, 11, 309, 311, 746, 300, 286, 669, 3102, 294, 12736, 13, 51262, 51262, 407, 257, 1326, 6082, 300, 286, 362, 337, 562, 291, 360, 3089, 5125, 307, 472, 11, 286, 576, 1286, 439, 264, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10916457225366966, "compression_ratio": 1.6409090909090909, "no_caption_prob": 1.618708120076917e-05}, {"id": 877, "seek": 326100, "start": 3278.96, "end": 3285.88, "text": " So a few tips that I have for when you do code generation is one, I would move all the", "tokens": [50364, 286, 486, 48377, 552, 293, 574, 412, 264, 2306, 300, 264, 5359, 300, 362, 668, 11, 300, 366, 406, 1143, 50672, 50672, 293, 286, 486, 4159, 552, 337, 291, 13, 50762, 50762, 400, 286, 445, 2464, 729, 646, 281, 257, 3991, 281, 264, 3380, 3991, 13, 50989, 50989, 583, 300, 575, 257, 688, 295, 4759, 11, 457, 11, 1105, 11, 309, 311, 746, 300, 286, 669, 3102, 294, 12736, 13, 51262, 51262, 407, 257, 1326, 6082, 300, 286, 362, 337, 562, 291, 360, 3089, 5125, 307, 472, 11, 286, 576, 1286, 439, 264, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.10916457225366966, "compression_ratio": 1.6409090909090909, "no_caption_prob": 1.618708120076917e-05}, {"id": 878, "seek": 328588, "start": 3285.88, "end": 3292.7200000000003, "text": " generated files to a generated folder, like source gen or generated slash, whatever with", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 879, "seek": 328588, "start": 3292.7200000000003, "end": 3293.7200000000003, "text": " Elm review.", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 880, "seek": 328588, "start": 3293.7200000000003, "end": 3298.88, "text": " Uh, since we're on the topic, a lot of people don't include the generated codes in the files", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 881, "seek": 328588, "start": 3298.88, "end": 3300.6400000000003, "text": " that Elm review should look at.", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 882, "seek": 328588, "start": 3300.6400000000003, "end": 3305.6, "text": " So they do Elm review source slash and test slash through that.", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 883, "seek": 328588, "start": 3305.6, "end": 3309.52, "text": " It only looks at those files because they don't want errors for the, for the generated", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 884, "seek": 328588, "start": 3309.52, "end": 3310.52, "text": " code.", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 885, "seek": 328588, "start": 3310.52, "end": 3311.52, "text": " And that makes sense.", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 886, "seek": 328588, "start": 3311.52, "end": 3315.76, "text": " But the problem is that you, you're then limiting the amount of information that Elm review", "tokens": [50364, 10833, 7098, 281, 257, 10833, 10820, 11, 411, 4009, 1049, 420, 10833, 17330, 11, 2035, 365, 50706, 50706, 2699, 76, 3131, 13, 50756, 50756, 4019, 11, 1670, 321, 434, 322, 264, 4829, 11, 257, 688, 295, 561, 500, 380, 4090, 264, 10833, 14211, 294, 264, 7098, 51014, 51014, 300, 2699, 76, 3131, 820, 574, 412, 13, 51102, 51102, 407, 436, 360, 2699, 76, 3131, 4009, 17330, 293, 1500, 17330, 807, 300, 13, 51350, 51350, 467, 787, 1542, 412, 729, 7098, 570, 436, 500, 380, 528, 13603, 337, 264, 11, 337, 264, 10833, 51546, 51546, 3089, 13, 51596, 51596, 400, 300, 1669, 2020, 13, 51646, 51646, 583, 264, 1154, 307, 300, 291, 11, 291, 434, 550, 22083, 264, 2372, 295, 1589, 300, 2699, 76, 3131, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1556445211172104, "compression_ratio": 1.8438661710037174, "no_caption_prob": 3.4806311305146664e-05}, {"id": 887, "seek": 331576, "start": 3315.76, "end": 3316.76, "text": " has.", "tokens": [50364, 575, 13, 50414, 50414, 407, 309, 486, 406, 458, 264, 15768, 295, 512, 10833, 7098, 11, 597, 309, 486, 643, 337, 512, 4474, 13, 50754, 50754, 407, 437, 286, 2748, 307, 1128, 5141, 2699, 76, 3131, 365, 12869, 411, 4009, 420, 6921, 11, 457, 2602, 51069, 51069, 281, 764, 11200, 13603, 337, 5391, 530, 294, 428, 3131, 6662, 293, 26258, 264, 10833, 3089, 11, 51420, 51420, 912, 337, 24321, 3089, 13, 51506, 51506, 1743, 291, 500, 380, 528, 281, 2275, 13603, 337, 729, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13029930808327414, "compression_ratio": 1.6255707762557077, "no_caption_prob": 1.3631017282023095e-05}, {"id": 888, "seek": 331576, "start": 3316.76, "end": 3323.5600000000004, "text": " So it will not know the contents of some generated files, which it will need for some rules.", "tokens": [50364, 575, 13, 50414, 50414, 407, 309, 486, 406, 458, 264, 15768, 295, 512, 10833, 7098, 11, 597, 309, 486, 643, 337, 512, 4474, 13, 50754, 50754, 407, 437, 286, 2748, 307, 1128, 5141, 2699, 76, 3131, 365, 12869, 411, 4009, 420, 6921, 11, 457, 2602, 51069, 51069, 281, 764, 11200, 13603, 337, 5391, 530, 294, 428, 3131, 6662, 293, 26258, 264, 10833, 3089, 11, 51420, 51420, 912, 337, 24321, 3089, 13, 51506, 51506, 1743, 291, 500, 380, 528, 281, 2275, 13603, 337, 729, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13029930808327414, "compression_ratio": 1.6255707762557077, "no_caption_prob": 1.3631017282023095e-05}, {"id": 889, "seek": 331576, "start": 3323.5600000000004, "end": 3329.86, "text": " So what I recommend is never calling Elm review with arguments like source or tests, but instead", "tokens": [50364, 575, 13, 50414, 50414, 407, 309, 486, 406, 458, 264, 15768, 295, 512, 10833, 7098, 11, 597, 309, 486, 643, 337, 512, 4474, 13, 50754, 50754, 407, 437, 286, 2748, 307, 1128, 5141, 2699, 76, 3131, 365, 12869, 411, 4009, 420, 6921, 11, 457, 2602, 51069, 51069, 281, 764, 11200, 13603, 337, 5391, 530, 294, 428, 3131, 6662, 293, 26258, 264, 10833, 3089, 11, 51420, 51420, 912, 337, 24321, 3089, 13, 51506, 51506, 1743, 291, 500, 380, 528, 281, 2275, 13603, 337, 729, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13029930808327414, "compression_ratio": 1.6255707762557077, "no_caption_prob": 1.3631017282023095e-05}, {"id": 890, "seek": 331576, "start": 3329.86, "end": 3336.88, "text": " to use ignore errors for directories in your review config and ignoring the generated code,", "tokens": [50364, 575, 13, 50414, 50414, 407, 309, 486, 406, 458, 264, 15768, 295, 512, 10833, 7098, 11, 597, 309, 486, 643, 337, 512, 4474, 13, 50754, 50754, 407, 437, 286, 2748, 307, 1128, 5141, 2699, 76, 3131, 365, 12869, 411, 4009, 420, 6921, 11, 457, 2602, 51069, 51069, 281, 764, 11200, 13603, 337, 5391, 530, 294, 428, 3131, 6662, 293, 26258, 264, 10833, 3089, 11, 51420, 51420, 912, 337, 24321, 3089, 13, 51506, 51506, 1743, 291, 500, 380, 528, 281, 2275, 13603, 337, 729, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13029930808327414, "compression_ratio": 1.6255707762557077, "no_caption_prob": 1.3631017282023095e-05}, {"id": 891, "seek": 331576, "start": 3336.88, "end": 3338.6000000000004, "text": " same for vendor code.", "tokens": [50364, 575, 13, 50414, 50414, 407, 309, 486, 406, 458, 264, 15768, 295, 512, 10833, 7098, 11, 597, 309, 486, 643, 337, 512, 4474, 13, 50754, 50754, 407, 437, 286, 2748, 307, 1128, 5141, 2699, 76, 3131, 365, 12869, 411, 4009, 420, 6921, 11, 457, 2602, 51069, 51069, 281, 764, 11200, 13603, 337, 5391, 530, 294, 428, 3131, 6662, 293, 26258, 264, 10833, 3089, 11, 51420, 51420, 912, 337, 24321, 3089, 13, 51506, 51506, 1743, 291, 500, 380, 528, 281, 2275, 13603, 337, 729, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13029930808327414, "compression_ratio": 1.6255707762557077, "no_caption_prob": 1.3631017282023095e-05}, {"id": 892, "seek": 331576, "start": 3338.6000000000004, "end": 3341.88, "text": " Like you don't want to report errors for those.", "tokens": [50364, 575, 13, 50414, 50414, 407, 309, 486, 406, 458, 264, 15768, 295, 512, 10833, 7098, 11, 597, 309, 486, 643, 337, 512, 4474, 13, 50754, 50754, 407, 437, 286, 2748, 307, 1128, 5141, 2699, 76, 3131, 365, 12869, 411, 4009, 420, 6921, 11, 457, 2602, 51069, 51069, 281, 764, 11200, 13603, 337, 5391, 530, 294, 428, 3131, 6662, 293, 26258, 264, 10833, 3089, 11, 51420, 51420, 912, 337, 24321, 3089, 13, 51506, 51506, 1743, 291, 500, 380, 528, 281, 2275, 13603, 337, 729, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13029930808327414, "compression_ratio": 1.6255707762557077, "no_caption_prob": 1.3631017282023095e-05}, {"id": 893, "seek": 334188, "start": 3341.88, "end": 3347.7200000000003, "text": " And this is like almost half of the bug reports that I get are false positives because they", "tokens": [50364, 400, 341, 307, 411, 1920, 1922, 295, 264, 7426, 7122, 300, 286, 483, 366, 7908, 35127, 570, 436, 50656, 50656, 994, 380, 11, 436, 5567, 264, 2372, 295, 1589, 300, 264, 4474, 727, 362, 2105, 281, 13, 50954, 50954, 3996, 551, 300, 286, 576, 534, 2748, 307, 411, 412, 264, 1192, 295, 633, 3991, 300, 291, 51242, 51242, 8460, 11, 909, 257, 2871, 1566, 11, 341, 307, 577, 286, 10833, 264, 3991, 13, 51474, 51474, 1743, 281, 8460, 341, 3991, 11, 286, 1143, 341, 5755, 420, 341, 3991, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13701802940778834, "compression_ratio": 1.7168141592920354, "no_caption_prob": 3.7631209124810994e-05}, {"id": 894, "seek": 334188, "start": 3347.7200000000003, "end": 3353.6800000000003, "text": " didn't, they limited the amount of information that the rules could have access to.", "tokens": [50364, 400, 341, 307, 411, 1920, 1922, 295, 264, 7426, 7122, 300, 286, 483, 366, 7908, 35127, 570, 436, 50656, 50656, 994, 380, 11, 436, 5567, 264, 2372, 295, 1589, 300, 264, 4474, 727, 362, 2105, 281, 13, 50954, 50954, 3996, 551, 300, 286, 576, 534, 2748, 307, 411, 412, 264, 1192, 295, 633, 3991, 300, 291, 51242, 51242, 8460, 11, 909, 257, 2871, 1566, 11, 341, 307, 577, 286, 10833, 264, 3991, 13, 51474, 51474, 1743, 281, 8460, 341, 3991, 11, 286, 1143, 341, 5755, 420, 341, 3991, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13701802940778834, "compression_ratio": 1.7168141592920354, "no_caption_prob": 3.7631209124810994e-05}, {"id": 895, "seek": 334188, "start": 3353.6800000000003, "end": 3359.44, "text": " Another thing that I would really recommend is like at the top of every file that you", "tokens": [50364, 400, 341, 307, 411, 1920, 1922, 295, 264, 7426, 7122, 300, 286, 483, 366, 7908, 35127, 570, 436, 50656, 50656, 994, 380, 11, 436, 5567, 264, 2372, 295, 1589, 300, 264, 4474, 727, 362, 2105, 281, 13, 50954, 50954, 3996, 551, 300, 286, 576, 534, 2748, 307, 411, 412, 264, 1192, 295, 633, 3991, 300, 291, 51242, 51242, 8460, 11, 909, 257, 2871, 1566, 11, 341, 307, 577, 286, 10833, 264, 3991, 13, 51474, 51474, 1743, 281, 8460, 341, 3991, 11, 286, 1143, 341, 5755, 420, 341, 3991, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13701802940778834, "compression_ratio": 1.7168141592920354, "no_caption_prob": 3.7631209124810994e-05}, {"id": 896, "seek": 334188, "start": 3359.44, "end": 3364.08, "text": " generate, add a comment saying, this is how I generated the file.", "tokens": [50364, 400, 341, 307, 411, 1920, 1922, 295, 264, 7426, 7122, 300, 286, 483, 366, 7908, 35127, 570, 436, 50656, 50656, 994, 380, 11, 436, 5567, 264, 2372, 295, 1589, 300, 264, 4474, 727, 362, 2105, 281, 13, 50954, 50954, 3996, 551, 300, 286, 576, 534, 2748, 307, 411, 412, 264, 1192, 295, 633, 3991, 300, 291, 51242, 51242, 8460, 11, 909, 257, 2871, 1566, 11, 341, 307, 577, 286, 10833, 264, 3991, 13, 51474, 51474, 1743, 281, 8460, 341, 3991, 11, 286, 1143, 341, 5755, 420, 341, 3991, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13701802940778834, "compression_ratio": 1.7168141592920354, "no_caption_prob": 3.7631209124810994e-05}, {"id": 897, "seek": 334188, "start": 3364.08, "end": 3369.04, "text": " Like to generate this file, I used this script or this file.", "tokens": [50364, 400, 341, 307, 411, 1920, 1922, 295, 264, 7426, 7122, 300, 286, 483, 366, 7908, 35127, 570, 436, 50656, 50656, 994, 380, 11, 436, 5567, 264, 2372, 295, 1589, 300, 264, 4474, 727, 362, 2105, 281, 13, 50954, 50954, 3996, 551, 300, 286, 576, 534, 2748, 307, 411, 412, 264, 1192, 295, 633, 3991, 300, 291, 51242, 51242, 8460, 11, 909, 257, 2871, 1566, 11, 341, 307, 577, 286, 10833, 264, 3991, 13, 51474, 51474, 1743, 281, 8460, 341, 3991, 11, 286, 1143, 341, 5755, 420, 341, 3991, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.13701802940778834, "compression_ratio": 1.7168141592920354, "no_caption_prob": 3.7631209124810994e-05}, {"id": 898, "seek": 336904, "start": 3369.04, "end": 3374.68, "text": " That way people who will look at the generated file will know, Oh, if I need to change something,", "tokens": [50364, 663, 636, 561, 567, 486, 574, 412, 264, 10833, 3991, 486, 458, 11, 876, 11, 498, 286, 643, 281, 1319, 746, 11, 50646, 50646, 286, 643, 281, 352, 456, 570, 2171, 411, 309, 307, 406, 6322, 689, 309, 1487, 490, 13, 50886, 50886, 759, 291, 393, 13330, 264, 4009, 295, 3494, 382, 754, 1101, 13, 51036, 51036, 407, 498, 291, 366, 17746, 411, 23308, 337, 428, 11, 300, 366, 294, 428, 9769, 11, 291, 393, 909, 257, 3053, 51348, 51348, 420, 14333, 337, 1184, 295, 264, 6828, 300, 291, 8460, 300, 1619, 11, 1911, 11, 341, 8855, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1122958494885133, "compression_ratio": 1.6975806451612903, "no_caption_prob": 2.6274197807651944e-05}, {"id": 899, "seek": 336904, "start": 3374.68, "end": 3379.48, "text": " I need to go there because sometimes like it is not obvious where it comes from.", "tokens": [50364, 663, 636, 561, 567, 486, 574, 412, 264, 10833, 3991, 486, 458, 11, 876, 11, 498, 286, 643, 281, 1319, 746, 11, 50646, 50646, 286, 643, 281, 352, 456, 570, 2171, 411, 309, 307, 406, 6322, 689, 309, 1487, 490, 13, 50886, 50886, 759, 291, 393, 13330, 264, 4009, 295, 3494, 382, 754, 1101, 13, 51036, 51036, 407, 498, 291, 366, 17746, 411, 23308, 337, 428, 11, 300, 366, 294, 428, 9769, 11, 291, 393, 909, 257, 3053, 51348, 51348, 420, 14333, 337, 1184, 295, 264, 6828, 300, 291, 8460, 300, 1619, 11, 1911, 11, 341, 8855, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1122958494885133, "compression_ratio": 1.6975806451612903, "no_caption_prob": 2.6274197807651944e-05}, {"id": 900, "seek": 336904, "start": 3379.48, "end": 3382.48, "text": " If you can indicate the source of truth as even better.", "tokens": [50364, 663, 636, 561, 567, 486, 574, 412, 264, 10833, 3991, 486, 458, 11, 876, 11, 498, 286, 643, 281, 1319, 746, 11, 50646, 50646, 286, 643, 281, 352, 456, 570, 2171, 411, 309, 307, 406, 6322, 689, 309, 1487, 490, 13, 50886, 50886, 759, 291, 393, 13330, 264, 4009, 295, 3494, 382, 754, 1101, 13, 51036, 51036, 407, 498, 291, 366, 17746, 411, 23308, 337, 428, 11, 300, 366, 294, 428, 9769, 11, 291, 393, 909, 257, 3053, 51348, 51348, 420, 14333, 337, 1184, 295, 264, 6828, 300, 291, 8460, 300, 1619, 11, 1911, 11, 341, 8855, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1122958494885133, "compression_ratio": 1.6975806451612903, "no_caption_prob": 2.6274197807651944e-05}, {"id": 901, "seek": 336904, "start": 3382.48, "end": 3388.72, "text": " So if you are generating like icons for your, that are in your assets, you can add a comments", "tokens": [50364, 663, 636, 561, 567, 486, 574, 412, 264, 10833, 3991, 486, 458, 11, 876, 11, 498, 286, 643, 281, 1319, 746, 11, 50646, 50646, 286, 643, 281, 352, 456, 570, 2171, 411, 309, 307, 406, 6322, 689, 309, 1487, 490, 13, 50886, 50886, 759, 291, 393, 13330, 264, 4009, 295, 3494, 382, 754, 1101, 13, 51036, 51036, 407, 498, 291, 366, 17746, 411, 23308, 337, 428, 11, 300, 366, 294, 428, 9769, 11, 291, 393, 909, 257, 3053, 51348, 51348, 420, 14333, 337, 1184, 295, 264, 6828, 300, 291, 8460, 300, 1619, 11, 1911, 11, 341, 8855, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1122958494885133, "compression_ratio": 1.6975806451612903, "no_caption_prob": 2.6274197807651944e-05}, {"id": 902, "seek": 336904, "start": 3388.72, "end": 3395.12, "text": " or documentation for each of the functions that you generate that says, Hey, this represents", "tokens": [50364, 663, 636, 561, 567, 486, 574, 412, 264, 10833, 3991, 486, 458, 11, 876, 11, 498, 286, 643, 281, 1319, 746, 11, 50646, 50646, 286, 643, 281, 352, 456, 570, 2171, 411, 309, 307, 406, 6322, 689, 309, 1487, 490, 13, 50886, 50886, 759, 291, 393, 13330, 264, 4009, 295, 3494, 382, 754, 1101, 13, 51036, 51036, 407, 498, 291, 366, 17746, 411, 23308, 337, 428, 11, 300, 366, 294, 428, 9769, 11, 291, 393, 909, 257, 3053, 51348, 51348, 420, 14333, 337, 1184, 295, 264, 6828, 300, 291, 8460, 300, 1619, 11, 1911, 11, 341, 8855, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1122958494885133, "compression_ratio": 1.6975806451612903, "no_caption_prob": 2.6274197807651944e-05}, {"id": 903, "seek": 339512, "start": 3395.12, "end": 3400.6, "text": " icon, blah, blah, blah, which is at assets slash whatever.", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 904, "seek": 339512, "start": 3400.6, "end": 3406.2, "text": " So I think that's always pretty nice to have and it really doesn't cut costs a lot.", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 905, "seek": 339512, "start": 3406.2, "end": 3407.2, "text": " Right.", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 906, "seek": 339512, "start": 3407.2, "end": 3408.2, "text": " Yeah.", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 907, "seek": 339512, "start": 3408.2, "end": 3410.48, "text": " It's just, it's just one of those things that's sort of a habit because while, while you're", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 908, "seek": 339512, "start": 3410.48, "end": 3415.2599999999998, "text": " in there, you've got the context, you've got the data you need, just output it in the generated", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 909, "seek": 339512, "start": 3415.2599999999998, "end": 3416.62, "text": " code in a comment.", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 910, "seek": 339512, "start": 3416.62, "end": 3420.12, "text": " Also like do you format your generated code?", "tokens": [50364, 6528, 11, 12288, 11, 12288, 11, 12288, 11, 597, 307, 412, 9769, 17330, 2035, 13, 50638, 50638, 407, 286, 519, 300, 311, 1009, 1238, 1481, 281, 362, 293, 309, 534, 1177, 380, 1723, 5497, 257, 688, 13, 50918, 50918, 1779, 13, 50968, 50968, 865, 13, 51018, 51018, 467, 311, 445, 11, 309, 311, 445, 472, 295, 729, 721, 300, 311, 1333, 295, 257, 7164, 570, 1339, 11, 1339, 291, 434, 51132, 51132, 294, 456, 11, 291, 600, 658, 264, 4319, 11, 291, 600, 658, 264, 1412, 291, 643, 11, 445, 5598, 309, 294, 264, 10833, 51371, 51371, 3089, 294, 257, 2871, 13, 51439, 51439, 2743, 411, 360, 291, 7877, 428, 10833, 3089, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1728929209912944, "compression_ratio": 1.6958333333333333, "no_caption_prob": 2.2125112081994303e-05}, {"id": 911, "seek": 342012, "start": 3420.12, "end": 3426.4, "text": " What I try to do usually is to make the generator code look kind of like Elm format and that", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 912, "seek": 342012, "start": 3426.4, "end": 3427.4, "text": " is usually enough.", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 913, "seek": 342012, "start": 3427.4, "end": 3428.4, "text": " I find.", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 914, "seek": 342012, "start": 3428.4, "end": 3429.4, "text": " Yeah.", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 915, "seek": 342012, "start": 3429.4, "end": 3435.6, "text": " That's usually the first thing I reach for, but it, it, it, it depends on the, on the", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 916, "seek": 342012, "start": 3435.6, "end": 3436.6, "text": " use case.", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 917, "seek": 342012, "start": 3436.6, "end": 3438.3199999999997, "text": " Sometimes I, I format it.", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 918, "seek": 342012, "start": 3438.3199999999997, "end": 3441.3199999999997, "text": " I mean, you can get pretty close to Elm format.", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 919, "seek": 342012, "start": 3441.3199999999997, "end": 3442.3199999999997, "text": " Right.", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 920, "seek": 342012, "start": 3442.3199999999997, "end": 3446.7999999999997, "text": " Well, depending on how simple it is, if it's like our build timestamp, then it would be", "tokens": [50364, 708, 286, 853, 281, 360, 2673, 307, 281, 652, 264, 19265, 3089, 574, 733, 295, 411, 2699, 76, 7877, 293, 300, 50678, 50678, 307, 2673, 1547, 13, 50728, 50728, 286, 915, 13, 50778, 50778, 865, 13, 50828, 50828, 663, 311, 2673, 264, 700, 551, 286, 2524, 337, 11, 457, 309, 11, 309, 11, 309, 11, 309, 5946, 322, 264, 11, 322, 264, 51138, 51138, 764, 1389, 13, 51188, 51188, 4803, 286, 11, 286, 7877, 309, 13, 51274, 51274, 286, 914, 11, 291, 393, 483, 1238, 1998, 281, 2699, 76, 7877, 13, 51424, 51424, 1779, 13, 51474, 51474, 1042, 11, 5413, 322, 577, 2199, 309, 307, 11, 498, 309, 311, 411, 527, 1322, 49108, 1215, 11, 550, 309, 576, 312, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.20640774858676322, "compression_ratio": 1.625, "no_caption_prob": 2.212530489487108e-05}, {"id": 921, "seek": 344680, "start": 3446.8, "end": 3451.36, "text": " overkill to run Elm format because you just, you know, you're just generating a simple", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 922, "seek": 344680, "start": 3451.36, "end": 3452.6000000000004, "text": " hard coded thing.", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 923, "seek": 344680, "start": 3452.6000000000004, "end": 3454.6800000000003, "text": " Just use your Elm format target.", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 924, "seek": 344680, "start": 3454.6800000000003, "end": 3459.92, "text": " It is fine to run Elm format, but it's, it is not as fast as just not running it.", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 925, "seek": 344680, "start": 3459.92, "end": 3460.92, "text": " Yeah.", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 926, "seek": 344680, "start": 3460.92, "end": 3461.92, "text": " And it's another moving part.", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 927, "seek": 344680, "start": 3461.92, "end": 3462.92, "text": " And yeah.", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 928, "seek": 344680, "start": 3462.92, "end": 3463.92, "text": " Yeah.", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 929, "seek": 344680, "start": 3463.92, "end": 3467.36, "text": " What do you think about things like, you know, if you wanted to generate an enum, so you've", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 930, "seek": 344680, "start": 3467.36, "end": 3475.7000000000003, "text": " got like an Elm custom type and you want to have access to, you know, let's say like colors", "tokens": [50364, 670, 34213, 281, 1190, 2699, 76, 7877, 570, 291, 445, 11, 291, 458, 11, 291, 434, 445, 17746, 257, 2199, 50592, 50592, 1152, 34874, 551, 13, 50654, 50654, 1449, 764, 428, 2699, 76, 7877, 3779, 13, 50758, 50758, 467, 307, 2489, 281, 1190, 2699, 76, 7877, 11, 457, 309, 311, 11, 309, 307, 406, 382, 2370, 382, 445, 406, 2614, 309, 13, 51020, 51020, 865, 13, 51070, 51070, 400, 309, 311, 1071, 2684, 644, 13, 51120, 51120, 400, 1338, 13, 51170, 51170, 865, 13, 51220, 51220, 708, 360, 291, 519, 466, 721, 411, 11, 291, 458, 11, 498, 291, 1415, 281, 8460, 364, 465, 449, 11, 370, 291, 600, 51392, 51392, 658, 411, 364, 2699, 76, 2375, 2010, 293, 291, 528, 281, 362, 2105, 281, 11, 291, 458, 11, 718, 311, 584, 411, 4577, 51809, 51809], "temperature": 0.0, "avg_logprob": -0.10003224663112474, "compression_ratio": 1.7984189723320159, "no_caption_prob": 1.9525552488630638e-05}, {"id": 931, "seek": 347570, "start": 3475.7, "end": 3481.08, "text": " and you want to have all colors is a list of that enum, which is like the colors in", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 932, "seek": 347570, "start": 3481.08, "end": 3482.08, "text": " your app.", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 933, "seek": 347570, "start": 3482.08, "end": 3485.48, "text": " And then you want to have from string to string.", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 934, "seek": 347570, "start": 3485.48, "end": 3488.9199999999996, "text": " What do you think about using that for, for code generation?", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 935, "seek": 347570, "start": 3488.9199999999996, "end": 3491.9199999999996, "text": " You mean generating that, that file or?", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 936, "seek": 347570, "start": 3491.9199999999996, "end": 3493.3799999999997, "text": " Generating that file.", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 937, "seek": 347570, "start": 3493.3799999999997, "end": 3495.9199999999996, "text": " And what would you use for the source of truth for that?", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 938, "seek": 347570, "start": 3495.9199999999996, "end": 3498.3799999999997, "text": " Well, it really depends on what your source of truth is.", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 939, "seek": 347570, "start": 3498.3799999999997, "end": 3503.4399999999996, "text": " Like if your source of truth is what your designer gives you, like a Figma file or,", "tokens": [50364, 293, 291, 528, 281, 362, 439, 4577, 307, 257, 1329, 295, 300, 465, 449, 11, 597, 307, 411, 264, 4577, 294, 50633, 50633, 428, 724, 13, 50683, 50683, 400, 550, 291, 528, 281, 362, 490, 6798, 281, 6798, 13, 50853, 50853, 708, 360, 291, 519, 466, 1228, 300, 337, 11, 337, 3089, 5125, 30, 51025, 51025, 509, 914, 17746, 300, 11, 300, 3991, 420, 30, 51175, 51175, 15409, 990, 300, 3991, 13, 51248, 51248, 400, 437, 576, 291, 764, 337, 264, 4009, 295, 3494, 337, 300, 30, 51375, 51375, 1042, 11, 309, 534, 5946, 322, 437, 428, 4009, 295, 3494, 307, 13, 51498, 51498, 1743, 498, 428, 4009, 295, 3494, 307, 437, 428, 11795, 2709, 291, 11, 411, 257, 479, 16150, 3991, 420, 11, 51751, 51751], "temperature": 0.0, "avg_logprob": -0.14618505537509918, "compression_ratio": 1.9132231404958677, "no_caption_prob": 7.7668755693594e-06}, {"id": 940, "seek": 350344, "start": 3503.44, "end": 3510.64, "text": " or similar, then if you can get the source of truth as a file or as an API call, I guess,", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 941, "seek": 350344, "start": 3510.64, "end": 3511.64, "text": " then sure.", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 942, "seek": 350344, "start": 3511.64, "end": 3515.04, "text": " That sounds like a good idea.", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 943, "seek": 350344, "start": 3515.04, "end": 3520.28, "text": " When you have something like all colors, like a list of all colors, I would worry about", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 944, "seek": 350344, "start": 3520.28, "end": 3521.28, "text": " the order.", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 945, "seek": 350344, "start": 3521.28, "end": 3523.8, "text": " Like it, does the order matter?", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 946, "seek": 350344, "start": 3523.8, "end": 3526.84, "text": " If so, in which order should you put it?", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 947, "seek": 350344, "start": 3526.84, "end": 3527.84, "text": " And yeah.", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 948, "seek": 350344, "start": 3527.84, "end": 3528.84, "text": " Right.", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 949, "seek": 350344, "start": 3528.84, "end": 3529.84, "text": " Yeah.", "tokens": [50364, 420, 2531, 11, 550, 498, 291, 393, 483, 264, 4009, 295, 3494, 382, 257, 3991, 420, 382, 364, 9362, 818, 11, 286, 2041, 11, 50724, 50724, 550, 988, 13, 50774, 50774, 663, 3263, 411, 257, 665, 1558, 13, 50944, 50944, 1133, 291, 362, 746, 411, 439, 4577, 11, 411, 257, 1329, 295, 439, 4577, 11, 286, 576, 3292, 466, 51206, 51206, 264, 1668, 13, 51256, 51256, 1743, 309, 11, 775, 264, 1668, 1871, 30, 51382, 51382, 759, 370, 11, 294, 597, 1668, 820, 291, 829, 309, 30, 51534, 51534, 400, 1338, 13, 51584, 51584, 1779, 13, 51634, 51634, 865, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.2134705506838285, "compression_ratio": 1.5853658536585367, "no_caption_prob": 2.282762943650596e-05}, {"id": 950, "seek": 352984, "start": 3529.84, "end": 3534.28, "text": " That's a good reminder of just like, it really does depend on the use case.", "tokens": [50364, 663, 311, 257, 665, 13548, 295, 445, 411, 11, 309, 534, 775, 5672, 322, 264, 764, 1389, 13, 50586, 50586, 400, 11, 293, 300, 11, 286, 519, 300, 311, 439, 264, 544, 1778, 281, 11, 291, 458, 11, 747, 5002, 295, 341, 50852, 50852, 337, 428, 1065, 764, 3331, 281, 360, 3089, 5125, 11, 570, 498, 291, 434, 445, 24140, 322, 1768, 51131, 51131, 3089, 5125, 3873, 787, 11, 436, 500, 380, 458, 466, 428, 1412, 4009, 293, 428, 2685, 9274, 51473, 51473, 293, 291, 360, 11, 293, 291, 393, 1322, 294, 729, 11, 300, 3701, 295, 729, 18491, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1288067469230065, "compression_ratio": 1.6932270916334662, "no_caption_prob": 6.814406515331939e-05}, {"id": 951, "seek": 352984, "start": 3534.28, "end": 3539.6000000000004, "text": " And, and that, I think that's all the more reason to, you know, take advantage of this", "tokens": [50364, 663, 311, 257, 665, 13548, 295, 445, 411, 11, 309, 534, 775, 5672, 322, 264, 764, 1389, 13, 50586, 50586, 400, 11, 293, 300, 11, 286, 519, 300, 311, 439, 264, 544, 1778, 281, 11, 291, 458, 11, 747, 5002, 295, 341, 50852, 50852, 337, 428, 1065, 764, 3331, 281, 360, 3089, 5125, 11, 570, 498, 291, 434, 445, 24140, 322, 1768, 51131, 51131, 3089, 5125, 3873, 787, 11, 436, 500, 380, 458, 466, 428, 1412, 4009, 293, 428, 2685, 9274, 51473, 51473, 293, 291, 360, 11, 293, 291, 393, 1322, 294, 729, 11, 300, 3701, 295, 729, 18491, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1288067469230065, "compression_ratio": 1.6932270916334662, "no_caption_prob": 6.814406515331939e-05}, {"id": 952, "seek": 352984, "start": 3539.6000000000004, "end": 3545.1800000000003, "text": " for your own use cases to do code generation, because if you're just relying on community", "tokens": [50364, 663, 311, 257, 665, 13548, 295, 445, 411, 11, 309, 534, 775, 5672, 322, 264, 764, 1389, 13, 50586, 50586, 400, 11, 293, 300, 11, 286, 519, 300, 311, 439, 264, 544, 1778, 281, 11, 291, 458, 11, 747, 5002, 295, 341, 50852, 50852, 337, 428, 1065, 764, 3331, 281, 360, 3089, 5125, 11, 570, 498, 291, 434, 445, 24140, 322, 1768, 51131, 51131, 3089, 5125, 3873, 787, 11, 436, 500, 380, 458, 466, 428, 1412, 4009, 293, 428, 2685, 9274, 51473, 51473, 293, 291, 360, 11, 293, 291, 393, 1322, 294, 729, 11, 300, 3701, 295, 729, 18491, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1288067469230065, "compression_ratio": 1.6932270916334662, "no_caption_prob": 6.814406515331939e-05}, {"id": 953, "seek": 352984, "start": 3545.1800000000003, "end": 3552.02, "text": " code generation tools only, they don't know about your data source and your specific domain", "tokens": [50364, 663, 311, 257, 665, 13548, 295, 445, 411, 11, 309, 534, 775, 5672, 322, 264, 764, 1389, 13, 50586, 50586, 400, 11, 293, 300, 11, 286, 519, 300, 311, 439, 264, 544, 1778, 281, 11, 291, 458, 11, 747, 5002, 295, 341, 50852, 50852, 337, 428, 1065, 764, 3331, 281, 360, 3089, 5125, 11, 570, 498, 291, 434, 445, 24140, 322, 1768, 51131, 51131, 3089, 5125, 3873, 787, 11, 436, 500, 380, 458, 466, 428, 1412, 4009, 293, 428, 2685, 9274, 51473, 51473, 293, 291, 360, 11, 293, 291, 393, 1322, 294, 729, 11, 300, 3701, 295, 729, 18491, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1288067469230065, "compression_ratio": 1.6932270916334662, "no_caption_prob": 6.814406515331939e-05}, {"id": 954, "seek": 352984, "start": 3552.02, "end": 3557.96, "text": " and you do, and you can build in those, that understanding of those constraints.", "tokens": [50364, 663, 311, 257, 665, 13548, 295, 445, 411, 11, 309, 534, 775, 5672, 322, 264, 764, 1389, 13, 50586, 50586, 400, 11, 293, 300, 11, 286, 519, 300, 311, 439, 264, 544, 1778, 281, 11, 291, 458, 11, 747, 5002, 295, 341, 50852, 50852, 337, 428, 1065, 764, 3331, 281, 360, 3089, 5125, 11, 570, 498, 291, 434, 445, 24140, 322, 1768, 51131, 51131, 3089, 5125, 3873, 787, 11, 436, 500, 380, 458, 466, 428, 1412, 4009, 293, 428, 2685, 9274, 51473, 51473, 293, 291, 360, 11, 293, 291, 393, 1322, 294, 729, 11, 300, 3701, 295, 729, 18491, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.1288067469230065, "compression_ratio": 1.6932270916334662, "no_caption_prob": 6.814406515331939e-05}, {"id": 955, "seek": 355796, "start": 3557.96, "end": 3560.0, "text": " So take advantage of that.", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 956, "seek": 355796, "start": 3560.0, "end": 3565.44, "text": " And you know, I mean, build simple abstractions reach for non code generated solutions first,", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 957, "seek": 355796, "start": 3565.44, "end": 3569.76, "text": " but if there's some source of truth, you can keep in sync with, if there's some helpful", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 958, "seek": 355796, "start": 3569.76, "end": 3574.44, "text": " scaffolding tool you can build for yourself, go build it and, you know, take advantage.", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 959, "seek": 355796, "start": 3574.44, "end": 3575.44, "text": " Okay.", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 960, "seek": 355796, "start": 3575.44, "end": 3578.04, "text": " So there's one more thing we didn't touch on.", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 961, "seek": 355796, "start": 3578.04, "end": 3584.04, "text": " We sort of hinted at, you know, doing simple string templating to generate, you know, our,", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 962, "seek": 355796, "start": 3584.04, "end": 3585.94, "text": " our build timestamp.", "tokens": [50364, 407, 747, 5002, 295, 300, 13, 50466, 50466, 400, 291, 458, 11, 286, 914, 11, 1322, 2199, 12649, 626, 2524, 337, 2107, 3089, 10833, 6547, 700, 11, 50738, 50738, 457, 498, 456, 311, 512, 4009, 295, 3494, 11, 291, 393, 1066, 294, 20271, 365, 11, 498, 456, 311, 512, 4961, 50954, 50954, 44094, 278, 2290, 291, 393, 1322, 337, 1803, 11, 352, 1322, 309, 293, 11, 291, 458, 11, 747, 5002, 13, 51188, 51188, 1033, 13, 51238, 51238, 407, 456, 311, 472, 544, 551, 321, 994, 380, 2557, 322, 13, 51368, 51368, 492, 1333, 295, 12075, 292, 412, 11, 291, 458, 11, 884, 2199, 6798, 9100, 990, 281, 8460, 11, 291, 458, 11, 527, 11, 51668, 51668, 527, 1322, 49108, 1215, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11983857079157753, "compression_ratio": 1.803921568627451, "no_caption_prob": 2.9944053494546097e-06}, {"id": 963, "seek": 358594, "start": 3585.94, "end": 3588.6, "text": " So you know, you can do that with a simple node script.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 964, "seek": 358594, "start": 3588.6, "end": 3589.6, "text": " Yeah.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 965, "seek": 358594, "start": 3589.6, "end": 3594.76, "text": " Like if I write it in, in Elm, I even just go for string concatenation.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 966, "seek": 358594, "start": 3594.76, "end": 3600.88, "text": " Like I don't even go, I don't even go for like a string where I replace things.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 967, "seek": 358594, "start": 3600.88, "end": 3602.66, "text": " I just go for string concatenation.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 968, "seek": 358594, "start": 3602.66, "end": 3607.7200000000003, "text": " It's just very easy because Elm is a simple language, so it's easy to generate also.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 969, "seek": 358594, "start": 3607.7200000000003, "end": 3608.7200000000003, "text": " Right.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 970, "seek": 358594, "start": 3608.7200000000003, "end": 3609.7200000000003, "text": " Well, yeah.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 971, "seek": 358594, "start": 3609.7200000000003, "end": 3612.64, "text": " And that, you know what I find extremely helpful.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 972, "seek": 358594, "start": 3612.64, "end": 3614.52, "text": " This is going to shock you, Jeroen.", "tokens": [50364, 407, 291, 458, 11, 291, 393, 360, 300, 365, 257, 2199, 9984, 5755, 13, 50497, 50497, 865, 13, 50547, 50547, 1743, 498, 286, 2464, 309, 294, 11, 294, 2699, 76, 11, 286, 754, 445, 352, 337, 6798, 1588, 7186, 399, 13, 50805, 50805, 1743, 286, 500, 380, 754, 352, 11, 286, 500, 380, 754, 352, 337, 411, 257, 6798, 689, 286, 7406, 721, 13, 51111, 51111, 286, 445, 352, 337, 6798, 1588, 7186, 399, 13, 51200, 51200, 467, 311, 445, 588, 1858, 570, 2699, 76, 307, 257, 2199, 2856, 11, 370, 309, 311, 1858, 281, 8460, 611, 13, 51453, 51453, 1779, 13, 51503, 51503, 1042, 11, 1338, 13, 51553, 51553, 400, 300, 11, 291, 458, 437, 286, 915, 4664, 4961, 13, 51699, 51699, 639, 307, 516, 281, 5588, 291, 11, 508, 2032, 268, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.19120624099952588, "compression_ratio": 1.6884615384615385, "no_caption_prob": 9.223318556905724e-06}, {"id": 973, "seek": 361452, "start": 3614.52, "end": 3620.28, "text": " But what I find very helpful for keeping myself honest about using the simplest thing that", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 974, "seek": 361452, "start": 3620.28, "end": 3622.24, "text": " could work is starting with hard coding.", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 975, "seek": 361452, "start": 3622.24, "end": 3623.8, "text": " Oh, I'm not surprised.", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 976, "seek": 361452, "start": 3623.8, "end": 3625.64, "text": " I was teasing.", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 977, "seek": 361452, "start": 3625.64, "end": 3626.64, "text": " Yeah.", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 978, "seek": 361452, "start": 3626.64, "end": 3631.24, "text": " I'm sure, I'm sure our listeners are bored of me saying this at this point, but I find", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 979, "seek": 361452, "start": 3631.24, "end": 3635.72, "text": " hard coding extremely useful for code generation as well.", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 980, "seek": 361452, "start": 3635.72, "end": 3640.36, "text": " Just because validate that the thing you're generating, I mean, first of all, don't even", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 981, "seek": 361452, "start": 3640.36, "end": 3642.3, "text": " generate something, just write a module.", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 982, "seek": 361452, "start": 3642.3, "end": 3643.3, "text": " Does it work the way you want?", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 983, "seek": 361452, "start": 3643.3, "end": 3644.3, "text": " Oh, nice.", "tokens": [50364, 583, 437, 286, 915, 588, 4961, 337, 5145, 2059, 3245, 466, 1228, 264, 22811, 551, 300, 50652, 50652, 727, 589, 307, 2891, 365, 1152, 17720, 13, 50750, 50750, 876, 11, 286, 478, 406, 6100, 13, 50828, 50828, 286, 390, 37720, 13, 50920, 50920, 865, 13, 50970, 50970, 286, 478, 988, 11, 286, 478, 988, 527, 23274, 366, 13521, 295, 385, 1566, 341, 412, 341, 935, 11, 457, 286, 915, 51200, 51200, 1152, 17720, 4664, 4420, 337, 3089, 5125, 382, 731, 13, 51424, 51424, 1449, 570, 29562, 300, 264, 551, 291, 434, 17746, 11, 286, 914, 11, 700, 295, 439, 11, 500, 380, 754, 51656, 51656, 8460, 746, 11, 445, 2464, 257, 10088, 13, 51753, 51753, 4402, 309, 589, 264, 636, 291, 528, 30, 51803, 51803, 876, 11, 1481, 13, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.14829604069989427, "compression_ratio": 1.6700680272108843, "no_caption_prob": 1.1300563528493512e-05}, {"id": 984, "seek": 364430, "start": 3644.3, "end": 3646.7200000000003, "text": " It would be great if I had this module generated.", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 985, "seek": 364430, "start": 3646.7200000000003, "end": 3650.1600000000003, "text": " Okay, well, write a JS file, generate it.", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 986, "seek": 364430, "start": 3650.1600000000003, "end": 3655.4, "text": " Or if you're going into Elm to do it, set up something that runs some Elm code, generate", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 987, "seek": 364430, "start": 3655.4, "end": 3660.76, "text": " it from Elm just as a single hard coded string, and then pull out the pieces that you need", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 988, "seek": 364430, "start": 3660.76, "end": 3662.84, "text": " to remove the hard coding from.", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 989, "seek": 364430, "start": 3662.84, "end": 3664.98, "text": " And well, do that the simplest way you can.", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 990, "seek": 364430, "start": 3664.98, "end": 3667.2000000000003, "text": " If that's with string concatenation, great.", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 991, "seek": 364430, "start": 3667.2000000000003, "end": 3673.52, "text": " If you want to use string interpolation with a library for that, like Luke's string interpolation", "tokens": [50364, 467, 576, 312, 869, 498, 286, 632, 341, 10088, 10833, 13, 50485, 50485, 1033, 11, 731, 11, 2464, 257, 33063, 3991, 11, 8460, 309, 13, 50657, 50657, 1610, 498, 291, 434, 516, 666, 2699, 76, 281, 360, 309, 11, 992, 493, 746, 300, 6676, 512, 2699, 76, 3089, 11, 8460, 50919, 50919, 309, 490, 2699, 76, 445, 382, 257, 2167, 1152, 34874, 6798, 11, 293, 550, 2235, 484, 264, 3755, 300, 291, 643, 51187, 51187, 281, 4159, 264, 1152, 17720, 490, 13, 51291, 51291, 400, 731, 11, 360, 300, 264, 22811, 636, 291, 393, 13, 51398, 51398, 759, 300, 311, 365, 6798, 1588, 7186, 399, 11, 869, 13, 51509, 51509, 759, 291, 528, 281, 764, 6798, 44902, 399, 365, 257, 6405, 337, 300, 11, 411, 13044, 311, 6798, 44902, 399, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.149424908766106, "compression_ratio": 1.7464285714285714, "no_caption_prob": 1.4285202269093134e-05}, {"id": 992, "seek": 367352, "start": 3673.52, "end": 3675.24, "text": " library, great.", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 993, "seek": 367352, "start": 3675.24, "end": 3681.24, "text": " If you want to get really fancy, you can use Rupert's Elm syntax DSL to generate code,", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 994, "seek": 367352, "start": 3681.24, "end": 3683.6, "text": " but it really shouldn't be the first thing you reach for.", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 995, "seek": 367352, "start": 3683.6, "end": 3685.88, "text": " At least that's not how I like to do it.", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 996, "seek": 367352, "start": 3685.88, "end": 3688.18, "text": " I like to do the simplest thing that could possibly work.", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 997, "seek": 367352, "start": 3688.18, "end": 3692.92, "text": " If the particular problem you're solving, it would be helpful to generate it through", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 998, "seek": 367352, "start": 3692.92, "end": 3697.12, "text": " an AST DSL, then pull that abstraction in when you need it.", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 999, "seek": 367352, "start": 3697.12, "end": 3701.92, "text": " And if you've got approval tests helping you, you can tweak the way you're generating your", "tokens": [50364, 6405, 11, 869, 13, 50450, 50450, 759, 291, 528, 281, 483, 534, 10247, 11, 291, 393, 764, 497, 12879, 83, 311, 2699, 76, 28431, 15816, 43, 281, 8460, 3089, 11, 50750, 50750, 457, 309, 534, 4659, 380, 312, 264, 700, 551, 291, 2524, 337, 13, 50868, 50868, 1711, 1935, 300, 311, 406, 577, 286, 411, 281, 360, 309, 13, 50982, 50982, 286, 411, 281, 360, 264, 22811, 551, 300, 727, 6264, 589, 13, 51097, 51097, 759, 264, 1729, 1154, 291, 434, 12606, 11, 309, 576, 312, 4961, 281, 8460, 309, 807, 51334, 51334, 364, 316, 6840, 15816, 43, 11, 550, 2235, 300, 37765, 294, 562, 291, 643, 309, 13, 51544, 51544, 400, 498, 291, 600, 658, 13317, 6921, 4315, 291, 11, 291, 393, 29879, 264, 636, 291, 434, 17746, 428, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.09799283298093882, "compression_ratio": 1.7010309278350515, "no_caption_prob": 6.401811697287485e-05}, {"id": 1000, "seek": 370192, "start": 3701.92, "end": 3706.56, "text": " code and if you haven't changed your generation output, it doesn't matter how you arrived", "tokens": [50364, 3089, 293, 498, 291, 2378, 380, 3105, 428, 5125, 5598, 11, 309, 1177, 380, 1871, 577, 291, 6678, 50596, 50596, 412, 309, 13, 50646, 50646, 509, 445, 43819, 409, 428, 13317, 11, 428, 30163, 1500, 11, 293, 309, 5112, 291, 1825, 311, 3105, 293, 50842, 50842, 291, 434, 665, 281, 352, 13, 50892, 50892, 286, 1116, 411, 281, 2557, 322, 472, 1036, 551, 13, 51012, 51012, 407, 257, 688, 295, 561, 528, 281, 764, 2699, 76, 3131, 281, 34117, 3579, 3089, 472, 636, 13, 51350, 51350, 1171, 5197, 11, 264, 3028, 39228, 37008, 300, 291, 362, 294, 428, 2135, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.10798521496000744, "compression_ratio": 1.5892116182572613, "no_caption_prob": 5.862531907041557e-06}, {"id": 1001, "seek": 370192, "start": 3706.56, "end": 3707.56, "text": " at it.", "tokens": [50364, 3089, 293, 498, 291, 2378, 380, 3105, 428, 5125, 5598, 11, 309, 1177, 380, 1871, 577, 291, 6678, 50596, 50596, 412, 309, 13, 50646, 50646, 509, 445, 43819, 409, 428, 13317, 11, 428, 30163, 1500, 11, 293, 309, 5112, 291, 1825, 311, 3105, 293, 50842, 50842, 291, 434, 665, 281, 352, 13, 50892, 50892, 286, 1116, 411, 281, 2557, 322, 472, 1036, 551, 13, 51012, 51012, 407, 257, 688, 295, 561, 528, 281, 764, 2699, 76, 3131, 281, 34117, 3579, 3089, 472, 636, 13, 51350, 51350, 1171, 5197, 11, 264, 3028, 39228, 37008, 300, 291, 362, 294, 428, 2135, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.10798521496000744, "compression_ratio": 1.5892116182572613, "no_caption_prob": 5.862531907041557e-06}, {"id": 1002, "seek": 370192, "start": 3707.56, "end": 3711.48, "text": " You just rerun your approval, your snapshot test, and it tells you nothing's changed and", "tokens": [50364, 3089, 293, 498, 291, 2378, 380, 3105, 428, 5125, 5598, 11, 309, 1177, 380, 1871, 577, 291, 6678, 50596, 50596, 412, 309, 13, 50646, 50646, 509, 445, 43819, 409, 428, 13317, 11, 428, 30163, 1500, 11, 293, 309, 5112, 291, 1825, 311, 3105, 293, 50842, 50842, 291, 434, 665, 281, 352, 13, 50892, 50892, 286, 1116, 411, 281, 2557, 322, 472, 1036, 551, 13, 51012, 51012, 407, 257, 688, 295, 561, 528, 281, 764, 2699, 76, 3131, 281, 34117, 3579, 3089, 472, 636, 13, 51350, 51350, 1171, 5197, 11, 264, 3028, 39228, 37008, 300, 291, 362, 294, 428, 2135, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.10798521496000744, "compression_ratio": 1.5892116182572613, "no_caption_prob": 5.862531907041557e-06}, {"id": 1003, "seek": 370192, "start": 3711.48, "end": 3712.48, "text": " you're good to go.", "tokens": [50364, 3089, 293, 498, 291, 2378, 380, 3105, 428, 5125, 5598, 11, 309, 1177, 380, 1871, 577, 291, 6678, 50596, 50596, 412, 309, 13, 50646, 50646, 509, 445, 43819, 409, 428, 13317, 11, 428, 30163, 1500, 11, 293, 309, 5112, 291, 1825, 311, 3105, 293, 50842, 50842, 291, 434, 665, 281, 352, 13, 50892, 50892, 286, 1116, 411, 281, 2557, 322, 472, 1036, 551, 13, 51012, 51012, 407, 257, 688, 295, 561, 528, 281, 764, 2699, 76, 3131, 281, 34117, 3579, 3089, 472, 636, 13, 51350, 51350, 1171, 5197, 11, 264, 3028, 39228, 37008, 300, 291, 362, 294, 428, 2135, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.10798521496000744, "compression_ratio": 1.5892116182572613, "no_caption_prob": 5.862531907041557e-06}, {"id": 1004, "seek": 370192, "start": 3712.48, "end": 3714.88, "text": " I'd like to touch on one last thing.", "tokens": [50364, 3089, 293, 498, 291, 2378, 380, 3105, 428, 5125, 5598, 11, 309, 1177, 380, 1871, 577, 291, 6678, 50596, 50596, 412, 309, 13, 50646, 50646, 509, 445, 43819, 409, 428, 13317, 11, 428, 30163, 1500, 11, 293, 309, 5112, 291, 1825, 311, 3105, 293, 50842, 50842, 291, 434, 665, 281, 352, 13, 50892, 50892, 286, 1116, 411, 281, 2557, 322, 472, 1036, 551, 13, 51012, 51012, 407, 257, 688, 295, 561, 528, 281, 764, 2699, 76, 3131, 281, 34117, 3579, 3089, 472, 636, 13, 51350, 51350, 1171, 5197, 11, 264, 3028, 39228, 37008, 300, 291, 362, 294, 428, 2135, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.10798521496000744, "compression_ratio": 1.5892116182572613, "no_caption_prob": 5.862531907041557e-06}, {"id": 1005, "seek": 370192, "start": 3714.88, "end": 3721.64, "text": " So a lot of people want to use Elm review to forbid writing code one way.", "tokens": [50364, 3089, 293, 498, 291, 2378, 380, 3105, 428, 5125, 5598, 11, 309, 1177, 380, 1871, 577, 291, 6678, 50596, 50596, 412, 309, 13, 50646, 50646, 509, 445, 43819, 409, 428, 13317, 11, 428, 30163, 1500, 11, 293, 309, 5112, 291, 1825, 311, 3105, 293, 50842, 50842, 291, 434, 665, 281, 352, 13, 50892, 50892, 286, 1116, 411, 281, 2557, 322, 472, 1036, 551, 13, 51012, 51012, 407, 257, 688, 295, 561, 528, 281, 764, 2699, 76, 3131, 281, 34117, 3579, 3089, 472, 636, 13, 51350, 51350, 1171, 5197, 11, 264, 3028, 39228, 37008, 300, 291, 362, 294, 428, 2135, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.10798521496000744, "compression_ratio": 1.5892116182572613, "no_caption_prob": 5.862531907041557e-06}, {"id": 1006, "seek": 370192, "start": 3721.64, "end": 3727.36, "text": " For instance, the page boilerplate that you have in your main code.", "tokens": [50364, 3089, 293, 498, 291, 2378, 380, 3105, 428, 5125, 5598, 11, 309, 1177, 380, 1871, 577, 291, 6678, 50596, 50596, 412, 309, 13, 50646, 50646, 509, 445, 43819, 409, 428, 13317, 11, 428, 30163, 1500, 11, 293, 309, 5112, 291, 1825, 311, 3105, 293, 50842, 50842, 291, 434, 665, 281, 352, 13, 50892, 50892, 286, 1116, 411, 281, 2557, 322, 472, 1036, 551, 13, 51012, 51012, 407, 257, 688, 295, 561, 528, 281, 764, 2699, 76, 3131, 281, 34117, 3579, 3089, 472, 636, 13, 51350, 51350, 1171, 5197, 11, 264, 3028, 39228, 37008, 300, 291, 362, 294, 428, 2135, 3089, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.10798521496000744, "compression_ratio": 1.5892116182572613, "no_caption_prob": 5.862531907041557e-06}, {"id": 1007, "seek": 372736, "start": 3727.36, "end": 3732.52, "text": " Sometimes I hear people saying, oh, it would be useful to have an Elm review rule that", "tokens": [50364, 4803, 286, 1568, 561, 1566, 11, 1954, 11, 309, 576, 312, 4420, 281, 362, 364, 2699, 76, 3131, 4978, 300, 50622, 50622, 13834, 1968, 264, 39228, 37008, 307, 731, 3720, 293, 775, 406, 362, 364, 6713, 300, 291, 994, 380, 50846, 50846, 2870, 281, 360, 341, 293, 300, 291, 630, 341, 2293, 300, 636, 13, 51108, 51108, 400, 341, 307, 472, 5197, 689, 3089, 5125, 393, 312, 4420, 11, 382, 286, 8825, 949, 11, 570, 51392, 51392, 411, 2699, 76, 3131, 4474, 366, 588, 665, 412, 5006, 721, 300, 366, 2085, 11, 457, 291, 643, 281, 16500, 51706, 51706, 597, 2306, 291, 434, 9650, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.09586169741569309, "compression_ratio": 1.6791044776119404, "no_caption_prob": 9.514687008049805e-06}, {"id": 1008, "seek": 372736, "start": 3732.52, "end": 3737.0, "text": " checks whether the boilerplate is well written and does not have an error that you didn't", "tokens": [50364, 4803, 286, 1568, 561, 1566, 11, 1954, 11, 309, 576, 312, 4420, 281, 362, 364, 2699, 76, 3131, 4978, 300, 50622, 50622, 13834, 1968, 264, 39228, 37008, 307, 731, 3720, 293, 775, 406, 362, 364, 6713, 300, 291, 994, 380, 50846, 50846, 2870, 281, 360, 341, 293, 300, 291, 630, 341, 2293, 300, 636, 13, 51108, 51108, 400, 341, 307, 472, 5197, 689, 3089, 5125, 393, 312, 4420, 11, 382, 286, 8825, 949, 11, 570, 51392, 51392, 411, 2699, 76, 3131, 4474, 366, 588, 665, 412, 5006, 721, 300, 366, 2085, 11, 457, 291, 643, 281, 16500, 51706, 51706, 597, 2306, 291, 434, 9650, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.09586169741569309, "compression_ratio": 1.6791044776119404, "no_caption_prob": 9.514687008049805e-06}, {"id": 1009, "seek": 372736, "start": 3737.0, "end": 3742.2400000000002, "text": " forget to do this and that you did this exactly that way.", "tokens": [50364, 4803, 286, 1568, 561, 1566, 11, 1954, 11, 309, 576, 312, 4420, 281, 362, 364, 2699, 76, 3131, 4978, 300, 50622, 50622, 13834, 1968, 264, 39228, 37008, 307, 731, 3720, 293, 775, 406, 362, 364, 6713, 300, 291, 994, 380, 50846, 50846, 2870, 281, 360, 341, 293, 300, 291, 630, 341, 2293, 300, 636, 13, 51108, 51108, 400, 341, 307, 472, 5197, 689, 3089, 5125, 393, 312, 4420, 11, 382, 286, 8825, 949, 11, 570, 51392, 51392, 411, 2699, 76, 3131, 4474, 366, 588, 665, 412, 5006, 721, 300, 366, 2085, 11, 457, 291, 643, 281, 16500, 51706, 51706, 597, 2306, 291, 434, 9650, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.09586169741569309, "compression_ratio": 1.6791044776119404, "no_caption_prob": 9.514687008049805e-06}, {"id": 1010, "seek": 372736, "start": 3742.2400000000002, "end": 3747.92, "text": " And this is one instance where code generation can be useful, as I explained before, because", "tokens": [50364, 4803, 286, 1568, 561, 1566, 11, 1954, 11, 309, 576, 312, 4420, 281, 362, 364, 2699, 76, 3131, 4978, 300, 50622, 50622, 13834, 1968, 264, 39228, 37008, 307, 731, 3720, 293, 775, 406, 362, 364, 6713, 300, 291, 994, 380, 50846, 50846, 2870, 281, 360, 341, 293, 300, 291, 630, 341, 2293, 300, 636, 13, 51108, 51108, 400, 341, 307, 472, 5197, 689, 3089, 5125, 393, 312, 4420, 11, 382, 286, 8825, 949, 11, 570, 51392, 51392, 411, 2699, 76, 3131, 4474, 366, 588, 665, 412, 5006, 721, 300, 366, 2085, 11, 457, 291, 643, 281, 16500, 51706, 51706, 597, 2306, 291, 434, 9650, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.09586169741569309, "compression_ratio": 1.6791044776119404, "no_caption_prob": 9.514687008049805e-06}, {"id": 1011, "seek": 372736, "start": 3747.92, "end": 3754.2000000000003, "text": " like Elm review rules are very good at finding things that are wrong, but you need to specify", "tokens": [50364, 4803, 286, 1568, 561, 1566, 11, 1954, 11, 309, 576, 312, 4420, 281, 362, 364, 2699, 76, 3131, 4978, 300, 50622, 50622, 13834, 1968, 264, 39228, 37008, 307, 731, 3720, 293, 775, 406, 362, 364, 6713, 300, 291, 994, 380, 50846, 50846, 2870, 281, 360, 341, 293, 300, 291, 630, 341, 2293, 300, 636, 13, 51108, 51108, 400, 341, 307, 472, 5197, 689, 3089, 5125, 393, 312, 4420, 11, 382, 286, 8825, 949, 11, 570, 51392, 51392, 411, 2699, 76, 3131, 4474, 366, 588, 665, 412, 5006, 721, 300, 366, 2085, 11, 457, 291, 643, 281, 16500, 51706, 51706, 597, 2306, 291, 434, 9650, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.09586169741569309, "compression_ratio": 1.6791044776119404, "no_caption_prob": 9.514687008049805e-06}, {"id": 1012, "seek": 372736, "start": 3754.2000000000003, "end": 3756.2400000000002, "text": " which ones you're expecting.", "tokens": [50364, 4803, 286, 1568, 561, 1566, 11, 1954, 11, 309, 576, 312, 4420, 281, 362, 364, 2699, 76, 3131, 4978, 300, 50622, 50622, 13834, 1968, 264, 39228, 37008, 307, 731, 3720, 293, 775, 406, 362, 364, 6713, 300, 291, 994, 380, 50846, 50846, 2870, 281, 360, 341, 293, 300, 291, 630, 341, 2293, 300, 636, 13, 51108, 51108, 400, 341, 307, 472, 5197, 689, 3089, 5125, 393, 312, 4420, 11, 382, 286, 8825, 949, 11, 570, 51392, 51392, 411, 2699, 76, 3131, 4474, 366, 588, 665, 412, 5006, 721, 300, 366, 2085, 11, 457, 291, 643, 281, 16500, 51706, 51706, 597, 2306, 291, 434, 9650, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.09586169741569309, "compression_ratio": 1.6791044776119404, "no_caption_prob": 9.514687008049805e-06}, {"id": 1013, "seek": 375624, "start": 3756.24, "end": 3763.1, "text": " Like it needs to look for one specific thing, another specific thing, but it cannot tell", "tokens": [50364, 1743, 309, 2203, 281, 574, 337, 472, 2685, 551, 11, 1071, 2685, 551, 11, 457, 309, 2644, 980, 50707, 50707, 291, 1968, 721, 366, 1392, 382, 257, 2674, 551, 13, 50914, 50914, 2704, 498, 291, 12972, 264, 1230, 295, 4474, 420, 264, 1230, 295, 13834, 11, 457, 498, 291, 528, 428, 51140, 51140, 3089, 281, 312, 3720, 294, 472, 588, 2685, 636, 420, 1310, 257, 1326, 11, 457, 257, 5567, 1230, 295, 2098, 11, 51514, 51514, 550, 3089, 5125, 307, 1391, 257, 1101, 778, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.12248685386743438, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.4806649637175724e-05}, {"id": 1014, "seek": 375624, "start": 3763.1, "end": 3767.24, "text": " you whether things are okay as a general thing.", "tokens": [50364, 1743, 309, 2203, 281, 574, 337, 472, 2685, 551, 11, 1071, 2685, 551, 11, 457, 309, 2644, 980, 50707, 50707, 291, 1968, 721, 366, 1392, 382, 257, 2674, 551, 13, 50914, 50914, 2704, 498, 291, 12972, 264, 1230, 295, 4474, 420, 264, 1230, 295, 13834, 11, 457, 498, 291, 528, 428, 51140, 51140, 3089, 281, 312, 3720, 294, 472, 588, 2685, 636, 420, 1310, 257, 1326, 11, 457, 257, 5567, 1230, 295, 2098, 11, 51514, 51514, 550, 3089, 5125, 307, 1391, 257, 1101, 778, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.12248685386743438, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.4806649637175724e-05}, {"id": 1015, "seek": 375624, "start": 3767.24, "end": 3771.7599999999998, "text": " Maybe if you multiply the number of rules or the number of checks, but if you want your", "tokens": [50364, 1743, 309, 2203, 281, 574, 337, 472, 2685, 551, 11, 1071, 2685, 551, 11, 457, 309, 2644, 980, 50707, 50707, 291, 1968, 721, 366, 1392, 382, 257, 2674, 551, 13, 50914, 50914, 2704, 498, 291, 12972, 264, 1230, 295, 4474, 420, 264, 1230, 295, 13834, 11, 457, 498, 291, 528, 428, 51140, 51140, 3089, 281, 312, 3720, 294, 472, 588, 2685, 636, 420, 1310, 257, 1326, 11, 457, 257, 5567, 1230, 295, 2098, 11, 51514, 51514, 550, 3089, 5125, 307, 1391, 257, 1101, 778, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.12248685386743438, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.4806649637175724e-05}, {"id": 1016, "seek": 375624, "start": 3771.7599999999998, "end": 3779.24, "text": " code to be written in one very specific way or maybe a few, but a limited number of ways,", "tokens": [50364, 1743, 309, 2203, 281, 574, 337, 472, 2685, 551, 11, 1071, 2685, 551, 11, 457, 309, 2644, 980, 50707, 50707, 291, 1968, 721, 366, 1392, 382, 257, 2674, 551, 13, 50914, 50914, 2704, 498, 291, 12972, 264, 1230, 295, 4474, 420, 264, 1230, 295, 13834, 11, 457, 498, 291, 528, 428, 51140, 51140, 3089, 281, 312, 3720, 294, 472, 588, 2685, 636, 420, 1310, 257, 1326, 11, 457, 257, 5567, 1230, 295, 2098, 11, 51514, 51514, 550, 3089, 5125, 307, 1391, 257, 1101, 778, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.12248685386743438, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.4806649637175724e-05}, {"id": 1017, "seek": 375624, "start": 3779.24, "end": 3781.9599999999996, "text": " then code generation is probably a better bet.", "tokens": [50364, 1743, 309, 2203, 281, 574, 337, 472, 2685, 551, 11, 1071, 2685, 551, 11, 457, 309, 2644, 980, 50707, 50707, 291, 1968, 721, 366, 1392, 382, 257, 2674, 551, 13, 50914, 50914, 2704, 498, 291, 12972, 264, 1230, 295, 4474, 420, 264, 1230, 295, 13834, 11, 457, 498, 291, 528, 428, 51140, 51140, 3089, 281, 312, 3720, 294, 472, 588, 2685, 636, 420, 1310, 257, 1326, 11, 457, 257, 5567, 1230, 295, 2098, 11, 51514, 51514, 550, 3089, 5125, 307, 1391, 257, 1101, 778, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.12248685386743438, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.4806649637175724e-05}, {"id": 1018, "seek": 378196, "start": 3781.96, "end": 3788.04, "text": " Right, because it can enforce consistency in a different way, in a simpler way.", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1019, "seek": 378196, "start": 3788.04, "end": 3791.04, "text": " And also it will be less painful to write.", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1020, "seek": 378196, "start": 3791.04, "end": 3796.2, "text": " It's easier to just run a script that generates a code rather than writing the code yourself,", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1021, "seek": 378196, "start": 3796.2, "end": 3802.16, "text": " which takes time, as I mentioned before, and then have Elm review tell you, oh, you did", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1022, "seek": 378196, "start": 3802.16, "end": 3803.16, "text": " this wrong.", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1023, "seek": 378196, "start": 3803.16, "end": 3804.16, "text": " Oh, you did that wrong.", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1024, "seek": 378196, "start": 3804.16, "end": 3805.7200000000003, "text": " Oh, and then you got a compiler errors.", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1025, "seek": 378196, "start": 3805.7200000000003, "end": 3808.88, "text": " Oh, well, yeah, just run the script and you're done.", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1026, "seek": 378196, "start": 3808.88, "end": 3811.28, "text": " If you can do that, I think that's a good idea.", "tokens": [50364, 1779, 11, 570, 309, 393, 24825, 14416, 294, 257, 819, 636, 11, 294, 257, 18587, 636, 13, 50668, 50668, 400, 611, 309, 486, 312, 1570, 11697, 281, 2464, 13, 50818, 50818, 467, 311, 3571, 281, 445, 1190, 257, 5755, 300, 23815, 257, 3089, 2831, 813, 3579, 264, 3089, 1803, 11, 51076, 51076, 597, 2516, 565, 11, 382, 286, 2835, 949, 11, 293, 550, 362, 2699, 76, 3131, 980, 291, 11, 1954, 11, 291, 630, 51374, 51374, 341, 2085, 13, 51424, 51424, 876, 11, 291, 630, 300, 2085, 13, 51474, 51474, 876, 11, 293, 550, 291, 658, 257, 31958, 13603, 13, 51552, 51552, 876, 11, 731, 11, 1338, 11, 445, 1190, 264, 5755, 293, 291, 434, 1096, 13, 51710, 51710, 759, 291, 393, 360, 300, 11, 286, 519, 300, 311, 257, 665, 1558, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.14512517330420277, "compression_ratio": 1.6818181818181819, "no_caption_prob": 2.1781923351227306e-05}, {"id": 1027, "seek": 381128, "start": 3811.28, "end": 3812.28, "text": " Right, right.", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1028, "seek": 381128, "start": 3812.28, "end": 3816.1200000000003, "text": " And if you have to remember to do one thing, one place, another thing, another place, another", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1029, "seek": 381128, "start": 3816.1200000000003, "end": 3820.6800000000003, "text": " thing, another place, that might be a cue to consider code generation.", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1030, "seek": 381128, "start": 3820.6800000000003, "end": 3826.8, "text": " Although there's certainly a cost and we should reiterate, code generation does add complexity.", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1031, "seek": 381128, "start": 3826.8, "end": 3828.1600000000003, "text": " It does add moving parts.", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1032, "seek": 381128, "start": 3828.1600000000003, "end": 3832.84, "text": " It does make it harder to trace why something's behaving a certain way.", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1033, "seek": 381128, "start": 3832.84, "end": 3835.88, "text": " If something goes wrong, do we remember to generate this code?", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1034, "seek": 381128, "start": 3835.88, "end": 3838.84, "text": " Is the source of truth being pulled in correctly?", "tokens": [50364, 1779, 11, 558, 13, 50414, 50414, 400, 498, 291, 362, 281, 1604, 281, 360, 472, 551, 11, 472, 1081, 11, 1071, 551, 11, 1071, 1081, 11, 1071, 50606, 50606, 551, 11, 1071, 1081, 11, 300, 1062, 312, 257, 22656, 281, 1949, 3089, 5125, 13, 50834, 50834, 5780, 456, 311, 3297, 257, 2063, 293, 321, 820, 33528, 11, 3089, 5125, 775, 909, 14024, 13, 51140, 51140, 467, 775, 909, 2684, 3166, 13, 51208, 51208, 467, 775, 652, 309, 6081, 281, 13508, 983, 746, 311, 35263, 257, 1629, 636, 13, 51442, 51442, 759, 746, 1709, 2085, 11, 360, 321, 1604, 281, 8460, 341, 3089, 30, 51594, 51594, 1119, 264, 4009, 295, 3494, 885, 7373, 294, 8944, 30, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12046198484276523, "compression_ratio": 1.8653846153846154, "no_caption_prob": 5.738550680689514e-05}, {"id": 1035, "seek": 383884, "start": 3838.84, "end": 3841.4, "text": " Or just more things, more moving parts?", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1036, "seek": 383884, "start": 3841.4, "end": 3845.76, "text": " Also, it works really well for things that are very similar.", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1037, "seek": 383884, "start": 3845.76, "end": 3850.96, "text": " When I did the code generation for the pages, one problem is that a lot of pages were working", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1038, "seek": 383884, "start": 3850.96, "end": 3852.7000000000003, "text": " slightly differently.", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1039, "seek": 383884, "start": 3852.7000000000003, "end": 3855.4, "text": " Their update function took another argument.", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1040, "seek": 383884, "start": 3855.4, "end": 3858.44, "text": " Their view function didn't take that argument.", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1041, "seek": 383884, "start": 3858.44, "end": 3862.76, "text": " And I had to do a lot of refactoring work to make them all consistent, to have them", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1042, "seek": 383884, "start": 3862.76, "end": 3865.28, "text": " all use the same abstraction.", "tokens": [50364, 1610, 445, 544, 721, 11, 544, 2684, 3166, 30, 50492, 50492, 2743, 11, 309, 1985, 534, 731, 337, 721, 300, 366, 588, 2531, 13, 50710, 50710, 1133, 286, 630, 264, 3089, 5125, 337, 264, 7183, 11, 472, 1154, 307, 300, 257, 688, 295, 7183, 645, 1364, 50970, 50970, 4748, 7614, 13, 51057, 51057, 6710, 5623, 2445, 1890, 1071, 6770, 13, 51192, 51192, 6710, 1910, 2445, 994, 380, 747, 300, 6770, 13, 51344, 51344, 400, 286, 632, 281, 360, 257, 688, 295, 1895, 578, 3662, 589, 281, 652, 552, 439, 8398, 11, 281, 362, 552, 51560, 51560, 439, 764, 264, 912, 37765, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.1261699154691876, "compression_ratio": 1.6947791164658634, "no_caption_prob": 2.948008614112041e-06}, {"id": 1043, "seek": 386528, "start": 3865.28, "end": 3869.52, "text": " But once I got that, generating the code was very easy.", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1044, "seek": 386528, "start": 3869.52, "end": 3870.6800000000003, "text": " But it didn't work.", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1045, "seek": 386528, "start": 3870.6800000000003, "end": 3875.44, "text": " I couldn't have made that code generation work until I got to a place where all the", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1046, "seek": 386528, "start": 3875.44, "end": 3880.7200000000003, "text": " pages were using the same abstraction, where they were very similar to each other.", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1047, "seek": 386528, "start": 3880.7200000000003, "end": 3881.7200000000003, "text": " Yeah.", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1048, "seek": 386528, "start": 3881.7200000000003, "end": 3886.28, "text": " And I think it takes experience to be able to see, number one, where you could make those", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1049, "seek": 386528, "start": 3886.28, "end": 3888.4, "text": " things become similar first.", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1050, "seek": 386528, "start": 3888.4, "end": 3894.0, "text": " And number two, when they won't then later start diverging and needing to be different", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1051, "seek": 386528, "start": 3894.0, "end": 3895.0, "text": " again.", "tokens": [50364, 583, 1564, 286, 658, 300, 11, 17746, 264, 3089, 390, 588, 1858, 13, 50576, 50576, 583, 309, 994, 380, 589, 13, 50634, 50634, 286, 2809, 380, 362, 1027, 300, 3089, 5125, 589, 1826, 286, 658, 281, 257, 1081, 689, 439, 264, 50872, 50872, 7183, 645, 1228, 264, 912, 37765, 11, 689, 436, 645, 588, 2531, 281, 1184, 661, 13, 51136, 51136, 865, 13, 51186, 51186, 400, 286, 519, 309, 2516, 1752, 281, 312, 1075, 281, 536, 11, 1230, 472, 11, 689, 291, 727, 652, 729, 51414, 51414, 721, 1813, 2531, 700, 13, 51520, 51520, 400, 1230, 732, 11, 562, 436, 1582, 380, 550, 1780, 722, 18558, 3249, 293, 18006, 281, 312, 819, 51800, 51800, 797, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.10362404982248942, "compression_ratio": 1.7662835249042146, "no_caption_prob": 6.643341293965932e-06}, {"id": 1052, "seek": 389500, "start": 3895.0, "end": 3898.96, "text": " Because if you start doing code generation and now you're like, oh, well, yeah, the code", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1053, "seek": 389500, "start": 3898.96, "end": 3901.2, "text": " generation worked really well for this simple case.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1054, "seek": 389500, "start": 3901.2, "end": 3905.04, "text": " But for this more nuanced case, there's not a clear source of truth.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1055, "seek": 389500, "start": 3905.04, "end": 3907.04, "text": " So I can no longer generate this thing.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1056, "seek": 389500, "start": 3907.04, "end": 3909.2, "text": " You can run into problems there.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1057, "seek": 389500, "start": 3909.2, "end": 3910.2, "text": " Sure.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1058, "seek": 389500, "start": 3910.2, "end": 3916.84, "text": " But the thing is, if you want to opt out of code generating, well, you have Elm code.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1059, "seek": 389500, "start": 3916.84, "end": 3921.32, "text": " So you just move it and you check it in your Git repo.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1060, "seek": 389500, "start": 3921.32, "end": 3922.32, "text": " True.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1061, "seek": 389500, "start": 3922.32, "end": 3923.32, "text": " Yeah.", "tokens": [50364, 1436, 498, 291, 722, 884, 3089, 5125, 293, 586, 291, 434, 411, 11, 1954, 11, 731, 11, 1338, 11, 264, 3089, 50562, 50562, 5125, 2732, 534, 731, 337, 341, 2199, 1389, 13, 50674, 50674, 583, 337, 341, 544, 45115, 1389, 11, 456, 311, 406, 257, 1850, 4009, 295, 3494, 13, 50866, 50866, 407, 286, 393, 572, 2854, 8460, 341, 551, 13, 50966, 50966, 509, 393, 1190, 666, 2740, 456, 13, 51074, 51074, 4894, 13, 51124, 51124, 583, 264, 551, 307, 11, 498, 291, 528, 281, 2427, 484, 295, 3089, 17746, 11, 731, 11, 291, 362, 2699, 76, 3089, 13, 51456, 51456, 407, 291, 445, 1286, 309, 293, 291, 1520, 309, 294, 428, 16939, 49040, 13, 51680, 51680, 13587, 13, 51730, 51730, 865, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1350794063778374, "compression_ratio": 1.7093023255813953, "no_caption_prob": 2.282693822053261e-05}, {"id": 1062, "seek": 392332, "start": 3923.32, "end": 3928.48, "text": " And probably the biggest thing to watch out for is if your code generation is creating", "tokens": [50364, 400, 1391, 264, 3880, 551, 281, 1159, 484, 337, 307, 498, 428, 3089, 5125, 307, 4084, 50622, 50622, 257, 1379, 992, 295, 12649, 626, 300, 561, 362, 281, 1466, 11, 300, 311, 257, 2182, 7166, 13, 50862, 50862, 1436, 586, 291, 434, 1242, 5472, 281, 341, 661, 37765, 13, 51076, 51076, 16581, 309, 311, 257, 1101, 37765, 13, 51166, 51166, 759, 309, 311, 257, 1101, 37765, 13, 51222, 51222, 583, 286, 600, 1612, 3089, 689, 456, 311, 3089, 5125, 2737, 490, 746, 689, 291, 362, 281, 51572, 51572, 2522, 721, 1214, 445, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.11552845701879384, "compression_ratio": 1.774891774891775, "no_caption_prob": 7.96696767793037e-05}, {"id": 1063, "seek": 392332, "start": 3928.48, "end": 3933.28, "text": " a whole set of abstractions that people have to learn, that's a red flag.", "tokens": [50364, 400, 1391, 264, 3880, 551, 281, 1159, 484, 337, 307, 498, 428, 3089, 5125, 307, 4084, 50622, 50622, 257, 1379, 992, 295, 12649, 626, 300, 561, 362, 281, 1466, 11, 300, 311, 257, 2182, 7166, 13, 50862, 50862, 1436, 586, 291, 434, 1242, 5472, 281, 341, 661, 37765, 13, 51076, 51076, 16581, 309, 311, 257, 1101, 37765, 13, 51166, 51166, 759, 309, 311, 257, 1101, 37765, 13, 51222, 51222, 583, 286, 600, 1612, 3089, 689, 456, 311, 3089, 5125, 2737, 490, 746, 689, 291, 362, 281, 51572, 51572, 2522, 721, 1214, 445, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.11552845701879384, "compression_ratio": 1.774891774891775, "no_caption_prob": 7.96696767793037e-05}, {"id": 1064, "seek": 392332, "start": 3933.28, "end": 3937.56, "text": " Because now you're getting bound to this other abstraction.", "tokens": [50364, 400, 1391, 264, 3880, 551, 281, 1159, 484, 337, 307, 498, 428, 3089, 5125, 307, 4084, 50622, 50622, 257, 1379, 992, 295, 12649, 626, 300, 561, 362, 281, 1466, 11, 300, 311, 257, 2182, 7166, 13, 50862, 50862, 1436, 586, 291, 434, 1242, 5472, 281, 341, 661, 37765, 13, 51076, 51076, 16581, 309, 311, 257, 1101, 37765, 13, 51166, 51166, 759, 309, 311, 257, 1101, 37765, 13, 51222, 51222, 583, 286, 600, 1612, 3089, 689, 456, 311, 3089, 5125, 2737, 490, 746, 689, 291, 362, 281, 51572, 51572, 2522, 721, 1214, 445, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.11552845701879384, "compression_ratio": 1.774891774891775, "no_caption_prob": 7.96696767793037e-05}, {"id": 1065, "seek": 392332, "start": 3937.56, "end": 3939.36, "text": " Unless it's a better abstraction.", "tokens": [50364, 400, 1391, 264, 3880, 551, 281, 1159, 484, 337, 307, 498, 428, 3089, 5125, 307, 4084, 50622, 50622, 257, 1379, 992, 295, 12649, 626, 300, 561, 362, 281, 1466, 11, 300, 311, 257, 2182, 7166, 13, 50862, 50862, 1436, 586, 291, 434, 1242, 5472, 281, 341, 661, 37765, 13, 51076, 51076, 16581, 309, 311, 257, 1101, 37765, 13, 51166, 51166, 759, 309, 311, 257, 1101, 37765, 13, 51222, 51222, 583, 286, 600, 1612, 3089, 689, 456, 311, 3089, 5125, 2737, 490, 746, 689, 291, 362, 281, 51572, 51572, 2522, 721, 1214, 445, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.11552845701879384, "compression_ratio": 1.774891774891775, "no_caption_prob": 7.96696767793037e-05}, {"id": 1066, "seek": 392332, "start": 3939.36, "end": 3940.48, "text": " If it's a better abstraction.", "tokens": [50364, 400, 1391, 264, 3880, 551, 281, 1159, 484, 337, 307, 498, 428, 3089, 5125, 307, 4084, 50622, 50622, 257, 1379, 992, 295, 12649, 626, 300, 561, 362, 281, 1466, 11, 300, 311, 257, 2182, 7166, 13, 50862, 50862, 1436, 586, 291, 434, 1242, 5472, 281, 341, 661, 37765, 13, 51076, 51076, 16581, 309, 311, 257, 1101, 37765, 13, 51166, 51166, 759, 309, 311, 257, 1101, 37765, 13, 51222, 51222, 583, 286, 600, 1612, 3089, 689, 456, 311, 3089, 5125, 2737, 490, 746, 689, 291, 362, 281, 51572, 51572, 2522, 721, 1214, 445, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.11552845701879384, "compression_ratio": 1.774891774891775, "no_caption_prob": 7.96696767793037e-05}, {"id": 1067, "seek": 392332, "start": 3940.48, "end": 3947.48, "text": " But I've seen code where there's code generation happening from something where you have to", "tokens": [50364, 400, 1391, 264, 3880, 551, 281, 1159, 484, 337, 307, 498, 428, 3089, 5125, 307, 4084, 50622, 50622, 257, 1379, 992, 295, 12649, 626, 300, 561, 362, 281, 1466, 11, 300, 311, 257, 2182, 7166, 13, 50862, 50862, 1436, 586, 291, 434, 1242, 5472, 281, 341, 661, 37765, 13, 51076, 51076, 16581, 309, 311, 257, 1101, 37765, 13, 51166, 51166, 759, 309, 311, 257, 1101, 37765, 13, 51222, 51222, 583, 286, 600, 1612, 3089, 689, 456, 311, 3089, 5125, 2737, 490, 746, 689, 291, 362, 281, 51572, 51572, 2522, 721, 1214, 445, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.11552845701879384, "compression_ratio": 1.774891774891775, "no_caption_prob": 7.96696767793037e-05}, {"id": 1068, "seek": 392332, "start": 3947.48, "end": 3949.1800000000003, "text": " piece things together just right.", "tokens": [50364, 400, 1391, 264, 3880, 551, 281, 1159, 484, 337, 307, 498, 428, 3089, 5125, 307, 4084, 50622, 50622, 257, 1379, 992, 295, 12649, 626, 300, 561, 362, 281, 1466, 11, 300, 311, 257, 2182, 7166, 13, 50862, 50862, 1436, 586, 291, 434, 1242, 5472, 281, 341, 661, 37765, 13, 51076, 51076, 16581, 309, 311, 257, 1101, 37765, 13, 51166, 51166, 759, 309, 311, 257, 1101, 37765, 13, 51222, 51222, 583, 286, 600, 1612, 3089, 689, 456, 311, 3089, 5125, 2737, 490, 746, 689, 291, 362, 281, 51572, 51572, 2522, 721, 1214, 445, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.11552845701879384, "compression_ratio": 1.774891774891775, "no_caption_prob": 7.96696767793037e-05}, {"id": 1069, "seek": 394918, "start": 3949.18, "end": 3953.72, "text": " And if they don't get pieced together just right, the generated code is not going to be happy.", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1070, "seek": 394918, "start": 3953.72, "end": 3954.7999999999997, "text": " Oh, yeah.", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1071, "seek": 394918, "start": 3954.7999999999997, "end": 3956.08, "text": " And that's a bad time.", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1072, "seek": 394918, "start": 3956.08, "end": 3959.16, "text": " And now, well, how do you back out of that and eject that?", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1073, "seek": 394918, "start": 3959.16, "end": 3965.3999999999996, "text": " Well, you're depending on this extremely complex generated code that you're not going to go", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1074, "seek": 394918, "start": 3965.3999999999996, "end": 3966.72, "text": " maintain by hand.", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1075, "seek": 394918, "start": 3966.72, "end": 3971.44, "text": " And actually, that's another tip too, is try to keep the generated code as simple as possible,", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1076, "seek": 394918, "start": 3971.44, "end": 3973.2, "text": " ideally, if you can.", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1077, "seek": 394918, "start": 3973.2, "end": 3976.3199999999997, "text": " You don't want to have to go and debug generated code.", "tokens": [50364, 400, 498, 436, 500, 380, 483, 1730, 1232, 1214, 445, 558, 11, 264, 10833, 3089, 307, 406, 516, 281, 312, 2055, 13, 50591, 50591, 876, 11, 1338, 13, 50645, 50645, 400, 300, 311, 257, 1578, 565, 13, 50709, 50709, 400, 586, 11, 731, 11, 577, 360, 291, 646, 484, 295, 300, 293, 32520, 300, 30, 50863, 50863, 1042, 11, 291, 434, 5413, 322, 341, 4664, 3997, 10833, 3089, 300, 291, 434, 406, 516, 281, 352, 51175, 51175, 6909, 538, 1011, 13, 51241, 51241, 400, 767, 11, 300, 311, 1071, 4125, 886, 11, 307, 853, 281, 1066, 264, 10833, 3089, 382, 2199, 382, 1944, 11, 51477, 51477, 22915, 11, 498, 291, 393, 13, 51565, 51565, 509, 500, 380, 528, 281, 362, 281, 352, 293, 24083, 10833, 3089, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.15726306420246153, "compression_ratio": 1.755639097744361, "no_caption_prob": 7.646485755685717e-06}, {"id": 1078, "seek": 397632, "start": 3976.32, "end": 3981.06, "text": " Because that would mean that you have to debug the code generation scripts, which is not", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1079, "seek": 397632, "start": 3981.06, "end": 3983.2400000000002, "text": " as easy as debugging Elm code.", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1080, "seek": 397632, "start": 3983.2400000000002, "end": 3984.2400000000002, "text": " Right.", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1081, "seek": 397632, "start": 3984.2400000000002, "end": 3991.28, "text": " And oftentimes, if you can, generate intermediary little helper functions or APIs for the generated", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1082, "seek": 397632, "start": 3991.28, "end": 3992.5, "text": " code to use.", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1083, "seek": 397632, "start": 3992.5, "end": 3994.48, "text": " So that doesn't vary.", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1084, "seek": 397632, "start": 3994.48, "end": 3999.7400000000002, "text": " So you can just say, here's some code that's only used by the generated code, but it reduces", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1085, "seek": 397632, "start": 3999.7400000000002, "end": 4005.0, "text": " the actual code that we're generating, because it can leverage those APIs.", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1086, "seek": 397632, "start": 4005.0, "end": 4006.0, "text": " All right.", "tokens": [50364, 1436, 300, 576, 914, 300, 291, 362, 281, 24083, 264, 3089, 5125, 23294, 11, 597, 307, 406, 50601, 50601, 382, 1858, 382, 45592, 2699, 76, 3089, 13, 50710, 50710, 1779, 13, 50760, 50760, 400, 18349, 11, 498, 291, 393, 11, 8460, 15184, 822, 707, 36133, 6828, 420, 21445, 337, 264, 10833, 51112, 51112, 3089, 281, 764, 13, 51173, 51173, 407, 300, 1177, 380, 10559, 13, 51272, 51272, 407, 291, 393, 445, 584, 11, 510, 311, 512, 3089, 300, 311, 787, 1143, 538, 264, 10833, 3089, 11, 457, 309, 18081, 51535, 51535, 264, 3539, 3089, 300, 321, 434, 17746, 11, 570, 309, 393, 13982, 729, 21445, 13, 51798, 51798, 1057, 558, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.14071063166079315, "compression_ratio": 1.7054263565891472, "no_caption_prob": 7.071759682730772e-06}, {"id": 1087, "seek": 400600, "start": 4006.0, "end": 4009.52, "text": " So you covered everything about code generation?", "tokens": [50364, 407, 291, 5343, 1203, 466, 3089, 5125, 30, 50540, 50540, 1042, 11, 321, 600, 3297, 5343, 257, 688, 13, 50694, 50694, 400, 1338, 11, 4696, 561, 486, 976, 309, 257, 853, 293, 718, 505, 458, 577, 309, 1709, 13, 50886], "temperature": 0.0, "avg_logprob": -0.23332402819678896, "compression_ratio": 1.2903225806451613, "no_caption_prob": 4.425385213835398e-06}, {"id": 1088, "seek": 400600, "start": 4009.52, "end": 4012.6, "text": " Well, we've certainly covered a lot.", "tokens": [50364, 407, 291, 5343, 1203, 466, 3089, 5125, 30, 50540, 50540, 1042, 11, 321, 600, 3297, 5343, 257, 688, 13, 50694, 50694, 400, 1338, 11, 4696, 561, 486, 976, 309, 257, 853, 293, 718, 505, 458, 577, 309, 1709, 13, 50886], "temperature": 0.0, "avg_logprob": -0.23332402819678896, "compression_ratio": 1.2903225806451613, "no_caption_prob": 4.425385213835398e-06}, {"id": 1089, "seek": 401260, "start": 4012.6, "end": 4038.0, "text": " And yeah, hopefully people will give it a try and let us know how it goes.", "tokens": [50364, 400, 1338, 11, 4696, 561, 486, 976, 309, 257, 853, 293, 718, 505, 458, 577, 309, 1709, 13, 51634], "temperature": 0.0, "avg_logprob": -0.21772200720650808, "compression_ratio": 1.0, "no_caption_prob": 9.606503590475768e-05}], "language": "en"}