{"text": " Hello, Jeroen. Hello, Dylan. And once again, we're joined by friend of the show, Joel Kenville. Thanks so much for coming back, Joel. Thanks for inviting me onto the show. So today we are talking about a bit of a hot topic. Should Elm devs care about category theory? Forgive us if we use that term a bit imprecisely, but I think that that's what Elm developers often think about when they think about the area that we're going to be touching on. So let's dive into it. So what do we really want to talk about here? We're kind of talking about some patterns that we use as Elm developers, or could use. How would you sort of describe overall this sort of concept of category theory or how it might be useful for an Elm developer? I think there's value in recognizing patterns in our code and when they repeat. And then use things we know in one context and apply them in another. Right. Right. So basically what we would hope to come away with here is a better understanding of some tools for abstraction that we can use as Elm developers. And maybe just a clearer understanding of some abstractions we're already using. We're probably already familiar with these or don't recognize them as a recurring group of patterns. So is that how you think about them as a group of patterns that you can use to identify common abstractions? Yes, I think I like the term pattern here. In fact, we used it in a previous episode where we talked about one of these what we called universal patterns. Yes, and listeners should definitely check out that episode of Refresher. We covered a lot of stuff there, a lot of it talking about what you might call the applicative pattern. It's episode 32, if I remember correctly. You should actually check that. Yes, episode 32. So I've been trying to understand why is it so hard to wrap our brains around this topic? I think, I don't know, I imagine a lot of Elm developers can relate to this. To a certain extent, we shy away from using some of this academic language, using these terms in the Elm community. And to a certain extent, that makes it feel more accessible for a lot of people, that they don't need to understand all these terms before they feel like they can jump in and create a web application. But why is it so hard to wrap our brains around it? And I was thinking about, it's almost like these patterns, they don't have semantic ideas to them, they don't have domain ideas, and that's sort of the point, they don't have any ideas. It's almost like if you were to explain the term organization to somebody who didn't know what an organization was. And if they were saying, well, what does it do? Well, it could do anything. What's its purpose? Its purpose could be anything. But there's some sort of set of coherent ideas you could talk about of how do people organize work. Are they self organizing teams? Are they individual? You can talk about these patterns of how people organize, even if you don't know what they're organizing to do. And in a sense, these sort of functional patterns, it's a similar thing. They have sort of metasemantics almost. Do you think that's a fair description? I would agree. These things often, I think, are so abstract, it's hard to describe them outside of their very formal definitions. When we get a little bit more accessible, we end up having to hand wave a little bit. And then we have an approximation, which works in many, but not all cases. It's something that if you want to explain, you usually have to go with a concrete example right from the start to get it across. And then you try to generalize, oh, you've got this pattern. This is how it works for lists. And then, oh, you can also apply it to maybe, or you can also apply it to results. I think as a teaching method, that is absolutely the way to go. It's going to take a while before you can start seeing what the greater pattern is and what is part and not part of the pattern. So for example, you're looking at and then on maybes and then on results, and you might think, oh, and then is a pattern for following the happy path. But then you look at and then on a random generator and there is not really the concept of a happy path. And so now your approximation has kind of broken. So now you have to find something else that can include the way random does it. And then you have to find a way that includes the way list does it. And every time you learn a different one, you start broadening a little bit that understanding. And I think it's okay to have approximations that are good in certain cases and not in others, because that's how we build our understanding, how we build mental models. For lists and then would be concat map, right? Yes, that's correct. Yeah, I feel like result and then, result dot and then and list dot concat map have two things very differently. The type signature looks the same, but otherwise it's pretty much the only thing that is the same, the same like the laws around it and the type signature. But what it does and why it does it are very different. So I feel like it's hard to explain like, why would you reach for this? And it's more like, well, this is useful function and it has this type signature. And then, well, result has the same one. It just you don't you just don't use it for the same thing. But it behaves somewhat alike. And behaviors that are true across all of these. And that's where some of the your intuitions can come across really nicely. And you can build other things on top of them, regardless of whether it's on maybe or list, because certain things hold true. So a classic one that you'll see is, for example, flattening a nested maybe. You would do and then identity. That is the thing that is true for any and then function. So if you want to do a list and you want to flatten it, you can do concat map identity. You want to flatten the results and then identity. So that holds true for all of them. Right. That's like a law for that pattern. If we were to get into the jargon. Yes, yes. And I think one thing that's interesting to note with these things is that they're like really formal definitions. Typically are a combination of some base description of I said maybe it includes a type. I forget if you have to have a type. But typically it's one or two functions. And then what they call laws. So things that must hold true for that function, regardless of what you pass into it. Yeah. So things like associativity and identity and sort of like laws of logic and mathematics. And these things have their foundations in these more. They're not just for writing computer programs. They're for logic and reasoning and mathematics. Understanding where the relationship with mathematics comes from. Because like you've got mathematics which works with algebra and set theories, I guess. And then you've got maybes and then. And like there's some connection somewhere that I'm missing and don't know where it is or what it is. So the whole world of mathematics is translating pure numbers. So even if you talk about sets, a function is a transformation from one set to another. Right. So from numbers to strings and strings to numbers. And for instance. Exactly. And now once you start thinking of transformations between sets, that's where some of these more category style things come in. I want to say, and this is getting to the edges of my knowledge that it's sort of a layer of abstraction on top of the idea of sets and functions as transformation between sets. So there are other mathematical, I'm going to call them objects, that can be transformed into each other with a similar style of relationship that functions and sets have. And category theory is sort of like a meta framework for being like, oh, I don't know, groups are to something. I'm just using random terms here. These things relate to each other in a similar way as functions and sets relate to each other. It's my very fuzzy understanding of what mathematical category theory is. My understanding is also that in the programming world, we've kind of diverged a little bit from that and that what we tend to call category theory is mathematical category theory. Do you have examples where it doesn't map cleanly? No, because I don't actually understand mathematical category theory. Okay, that's fair. One of the things I wonder about is how much would these things naturally emerge if there was no such thing as this sort of history of category theory and all these terms and concepts that have been around over the years? And all you had was the Elm language, and you had those basic building blocks for creating programs. Would the same patterns emerge naturally, or are they somehow tied to the fact that we have all these ideas that we developed before and we try to apply them to this new context? So someone said, let there be Elm, and then you invent the future? My guess is that they would still emerge, particularly something like a map. It's such a common style of operation that someone would write that abstraction because they're tired of writing a case expression to unwrap, do a thing, rewrap. Yep, exactly. That's my suspicion as well. And if you think about things like, your way of doing control flow is, you have primitive expressions and case expressions and function calls, basically. You don't have any exception handling in that sort of thing. Well, okay, so then you need some sort of way to do, and then it's going to pretty naturally emerge from those basic ingredients, it seems. And I think that that gets at the conversation today, is how can we sort of understand the pattern rather than just, all right, I do end then, and I do that over and over. How can we understand that as the relationship between how you do that with a list and how you do that with maybe and how you do that with a result? I think what Jeroen shared earlier about working with each individual type, and then as you work with them, you start understanding or seeing the greater pattern. That's the way to learn it. And then after that, where it gets interesting is, once you've done three or four, you can start thinking when you move to a different domain that has these same functions. I already know how and then works on maybes and lists and JSON decoders. I wonder if it works the same on tasks. And then at that point, I think that's what understanding really was. And I've had that sort of magical experience of helping out someone in the Elm Slack. I think this was with the test fuzzers for writing fuzz tests. And I'd never used the library if someone was asking for help. And I was able to solve their problem even though I'd never used the library, did not know how fuzzers worked because I knew these patterns. And I've been using JSON decoders. Yes, it may have been JSON decoders. It may have been random generators. I forget which one I compared it to in my mind. Right. It's a pretty neat mapping from a test fuzzer in Elm to a random generator because I'm pretty sure it's the same thing under the hood. I think you can just pass in a random generator, right? But the same overall pattern applies, of course. I read a couple of explanations of there was one sort of explain it like I'm five type posts that I found kind of interesting. But one of the things it was talking about was it was saying it's a messy world out there. And what if we wanted to create a sort of nice, happy place where we could not think about that messiness, where we could just think about simpler things and then shield ourselves and so it was saying like, if you have a result or like a JSON decoder, there are all these messy things that are happening with the outside world in a JSON decoder. All these ways that it could fail and whether it's failed and the state of whether it's gone through and tried to do something that wasn't available, that's very messy and it's stressful and we should just forget about that and happily just give it a function for transforming our data and call map, call JSON.decode.map and pass in a plain old function that takes a value and pretends that everything is nice and happy and shields away that complexity of the ugly world outside. So I don't know, that sort of clicked with me. It felt like a pretty good way to describe that. I think this goes into what I was mentioning earlier about approximations and that that sort of picture assumes that you're talking about situations where there are potential failures. So maybe result, to a certain extent, even JSON decoder or task. That's not really what's happening with a random generator where mapping is not trying to ignore failures. It kind of does something different. Right, I sort of got into the specifics of failure with JSON decode, but the sort of explanation was talking more about messiness as a general concept and it was saying that like that messiness means maybe the thing exists, maybe it doesn't or that messiness could be you will have this thing in the future but you don't have it now or the messiness could be it depends on something from the outside world and so there is something in common there that I don't want to think about some sort of messiness whether it's like uncertainty or happening in the future or there's something connecting all of those things even though semantically there are a bunch of different things, results and presence or absence, but somehow it's abstracting some sort of messiness of the world and letting you deal with it I think what you're referring to as messiness here is what in slightly more formal context people will refer to as context. So it's often referred to a parameterized type like maybe or random generator as context wrapped around a value and that context might be the fact that it's present or not. It might be the fact that it's a future value that you may or may not have, but it's very kind of hand wavy and I think context is such a broad word that it's not always useful to use, but it's that thing that you've got your type A oftentimes your type is adding some kind of extra context about the A. Right. And naturally if you're dealing with these things, I mean in a way, if you're dealing with them in a more declarative way, if you're dealing with things in an imperative way you're dealing with a lot of these things and you don't necessarily need these kinds of abstractions in the same way. The abstractions that emerge look different I think. But if you're dealing with things in a declarative way essentially what you've got with a lot of these things that can be transformed in these ways is sometimes you can't directly apply a transformation. You know, perhaps with something like maybe you could under the hood because it's just a wrapped data type generator or JSON decode value or something like LMI with context that's able to read things from the outside world that sort of represents a future value, tasks, things like that. You can't just map the thing because it doesn't necessarily just exist for you to interact with it directly right away. So what you would have to end up doing if you were dealing with these things without these abstractions is you would have to basically unwrap a function over and over all over the place. So it really does feel like on a desert island a lot of these same patterns would emerge if you were working with these basic tools. And you wanted to do things in a declarative style. I think you've done an episode on the concept of combinators, right? We briefly touched on combinators when we had you on last but we haven't done a full episode on specifically that topic. Okay, well you've written an article about combinators. Since many of these category theory ish things could be described as universal combinators I'm hand waving a little bit because this is not quite true. But and then and map and other functions like this I guess they're not always combining two values but they're sort of in that world and they're sort of common utilities on many different data types. Also going back to something you mentioned earlier about different laws and how they're often like very kind of mathematical logical sounding things a lot of them have sort of very practical implications even though when you read the law it sounds like reading a math theorem. So for example the map function has a law that says that mapping the identity function should equal the mapping identity function. Basically mapping identity does not change anything and a really interesting implication of that is that your map function can change items inside your type but it cannot modify the general structure of your what you've been calling the context. So for example a list you cannot add or remove items from the list using map. Otherwise your mapping identity shouldn't change anything but if you drop items from the list that thing would be violated. You can also not reverse the list if you want it to be a map because otherwise it's not an identity function. Yes that's right. So a map makes sure that the list or whatever collection stays in the same order regardless of whether you called it with identity or not. Right and similarly you can't change a just to a nothing as part of a map or okay into an error or anything like that. You can only modify the wrapped value which is a really interesting thing that comes out of that and if you had implemented as a test suite or a fuzz test you would find that if your implementation does modify the overall structure your fuzz test will start failing. Yeah when you do implement these kinds of functions of the type that you made do you write fuzz tests or do you write anything to make sure that those laws are applied and true? I like to write fuzz tests that follow the laws. That's a good way to find out that you've implemented the function according to spec. Because there's nothing at least in Elm saying that oh this type has a map function there's nothing saying that this respects the laws of the map function. Correct. I wonder is it useful to have this to call it like map if you don't know whether the law is applied or not? For instance someone could have a map on a list like structure but that reverses the list because of some bug. Would you then still call it a map? Would you just call it something else? Do you just report a bug? I think I would probably report a bug on that the library maintainer. If it is intentional then I might recommend that they name it something else because this sort of violates what people expect of the map function. Yeah even though there's nothing saying hey this is a map function from the functor name. Sorry for dropping the f word. I don't know if we've been avoiding saying these words for now but there you go. Now we can say them if we feel like it or avoid them if we want to. To clarify functor is the fancy category theory term for a type where we've implemented a map function that fulfills I think two or three laws one of which is the one we mentioned about identity. Yeah I think the other one is commutativity. It's a really fun one that I actually take advantage of pretty frequently. The idea that instead of if I have two functions I want to map let's say I have a list of I don't know a list of integers and I want to double them and then I want to add one instead of mapping once through the list to double them and then mapping a second time to add one I can map once and double and add one at the same time. That's actually a refactor that I do pretty frequently in my own code and that some fancy compilers can actually do automatically for you as a performance optimization. I tried working on that with LMAOptimize level 2. I actually don't remember where I got it I probably have a branch somewhere. It's clearly something that could be done but the issue is then whether this map function is trying to respect those rules or not which we know for the core functions but not for the rest. For the most part the community has a good intuition of how they should work. Yeah I agree. And if they don't you probably get some an issue or a PR on your repo. Yeah I would imagine that the fact that Elm is a pure functional language would eliminate the idea that things would not follow these laws too. I feel like it would be pretty easy to not follow a law if you could accidentally throw an exception or depend on some outside state. I feel like you can easily, there's a whole reason we have these laws in the functional world. They're all functional things like these things must be commutative or the identity function must apply in this way. So they're not about not throwing errors or mutating state it's just when you build your pure function here it's not a specific criteria. Right but wouldn't, I mean if you throw an error then it's definitely not... That kind of breaks I think other parts of functional programming not for the laws. Okay. Yeah it's kind of like when you play Monopoly and you tell your child hey if you roll a six twice then you need to go to prison and then the kid just throws the table. Right. That's a good analogy. So one really interesting thing that comes out of this very broad definition of here's some laws and a few functions that must follow those laws is that for any given type there may be more than one valid implementation that follows the laws and the signatures and all this stuff. So there is no, not necessarily a single for example applicative implementation for lists. So applicative being like map 2 right? Yes, map 2. So in Elm when we map 2 with two lists we're effectively zipping them together but it's also possible to do a map 2 in a way that's doing a Cartesian product so all the possible combinations from the two lists and that's what Haskell's map 2 does and both of these are completely valid. In fact Martin Janicek built a package that has a list.zip and list.cartesian to showcase the fact that both of these are different ways of having map 2 that work in different contexts. Yeah and the proof for that is that they respect those laws and that they have that special type signature right? Yes. Those are the only criteria. Do they need to match maybe? In Elm no, the name doesn't have to match. Yeah no, because there's no concept of functors or anything. Right. In Martin's package what he's done is just created two modules with it expose functions that operate on the same data type that way he can reuse the name in a different namespace. So you've got list.cartesian.map2 and list.zip.map2. Gotcha, I thought he had done like a map cartesian or map zip. Yeah, no in this case he just used the namespace and used the same name and they both act on the same core list type. So it's not like each of them has that, there's not the concept of a cartesian list and a zip list. Gotcha. This also happens a lot for one of the simpler patterns called Monoid which is built around this idea of like combining items. So I think what you need is you need some sort of combining function that can combine two values of a type and then you need a sort of empty item that when you combine it with something else is equivalent to identity. And for example looking at numbers you can add two numbers together that's a form of combining and if you add zero you don't change your number. And so addition for numbers is a monoid but it is not the only one because you could do the same thing with multiplication except in this case your sort of base element that when multiplied doesn't change is not zero it is one because any number multiplied by one is itself. So and I actually like monoid as a sort of example in that we often tend to think of these sort of categories as inherent to the type but it's not really about the type itself it's like a thing you can layer on and so what you need is like sort of several different component pieces that all come together and if they're all present then you can talk about the collection as being this category in this case monoid. So you can see if you have numbers and zero and multiplication now you have a monoid but you need all three of those. Numbers by themselves are not inherently monoid that's not a thing about the type. Right like you could have some special kind of numbers that you cannot add. In fact you can define a number type and just not implement the addition function. Exactly yeah and then it wouldn't be a monoid. Exactly the interesting thing is that someone can provide a type in a package and not write some of these functions and so it is not a functor or a monad or any of these other things but then I pull down this package and in my application I write one of these functions to act on this third party type and all of a sudden within the context of my code it is a functor because now we have all the pieces. That's a great point. If you have the building blocks to implement that function. Yes so for example I could create a maybe type and publish it without the map function on it and then you could decide well I need to map over it I'm going to write a map function for your maybe type. Obviously. And now it's within the context of your code my maybe is a functor or the combination there is. I sometimes find it is an easy approximation to talk about these things as adjectives rather than nouns. So I can say this type is monadic not this type is a monad because it has these functions so this is like an attribute of it rather than being an inherent quality. Yeah it's not like you create a type and you say okay this needs to be monadic this needs to be blah blah blah it's you add the function and therefore it is monadic. Therefore it is a monad. I think you can talk about it in a noun sense to say oh I have the maybe monad but at that point you're not talking about maybe the type you're talking about this sort of the fact that I have a type and some functions and they all follow the laws. And I think that gets confusing to people when you talk about the x pattern. So there's an interesting example that when I realized this it sort of hurt my brain a little bit which is that the Elm GraphQL selection set is inherently not monadic because it represents a selection set represents both the request for saying I would like this data and the decoding to say okay I'm going to turn this into an Elm type from the server but because of that you can't and then that you can't you can't say get this user's role and then make a follow up selection set because inherently well I mean I guess I guess that would represent multiple requests to the server right but inherently a selection set represents a single request to the server so it is inherently not monadic not just because it's not exposed but that operation doesn't really fit in that abstraction particularly because in the the rules that you set up for what a selection set does you don't want multiple requests to be done. Exactly. Everything has to be done within a single request. Yes. And by the monad laws and then would imply a second request which is a thing you don't want to do. Exactly. Exactly. So the semantics that it would imply for the outside world would not fit into the desired semantics for the library's goal to not the whole point is you don't want to make repeat requests to the server you want to make a single request to say exactly what you need. Just to clarify that is not an issue right? No it's not. It's not like there is no and then and therefore there's a problem with your library didn't? Right. Well I mean it's just a constraint and it's just one building block that you can't use and sometimes it is quite convenient like I don't know when I think about these patterns in sort of layman terms I think about I'd really like to have this concrete data not this wrapped data thing I want give me the actual data you've got and then let me continue on and do something with it or I mean of course as we've discussed these analogies fall apart because sometimes it's continuing sometimes it's dealing with presence or absence sometimes it's dealing with failure or success but you know timey wimey you get the idea something along those lines but you can't do that you can't say I'd like to take this thing and then and then I'd like to perform this check and fail if I don't have this thing you just can't do that you have to find other ways to solve it so like it just changes the way that you approach solving certain problems I think there's a really interesting thing here that goes back to the why is it useful for LN programmers to learn these concepts and we can kind of get it just by the signature but given the fact that someone might know the definition of what and then does in general or familiar with its signature and that they know that in your library a selection set represents both a request and parse data with those two facts I can tell you that and then is going to involve multiple requests but someone who's that's something that I think came out in the conversation we were saying earlier but that might not be obvious but someone who's something that I think came out in the conversation we were saying earlier but that might not be obvious you'd have to dig through if this was named something else but because it's named and then and you know how and then works then you can quickly sort of apply it to the domain that it's in and quickly pick up some information So I feel like all those functions are mostly there for familiarity If you see a map function you expect it to behave this way you expect it to follow those laws that we mentioned and I feel like that's pretty much the only reason to have those for familiarity at least in Elm. Well they're just common operations that you end up doing common transformations that we end up doing on data. But the reason why you would name them that way or that you would have the arguments in that order Yes. But yeah obviously like if you want if you have a selection set which contains some data then map makes sense whether you call it that way or whether you make it follow those laws or not is a different consideration but I think it makes sense to have them follow those laws and have that name because it makes it very familiar to people who know list.map who know maybe.map etc. So I feel like it's all about familiarity and just making it easier to to grok what a piece of code does based on what your knowledge of other pieces of function do I would say that's the general value of the concept of patterns Yeah I guess. Even like in the object oriented world right the idea of design patterns or standardized ways of solving common problems it's much easier for me to look at some code and be like oh that's a decorator rather than being like huh okay so there's an object that's wrapping another object and there seems to be some kind of delegation happening here and instead of like really digging into the implementation I can look at it and recognize the pattern and then immediately I know it's one of those big building blocks that I've seen in 50 other contexts. So what about when Elm diverged into the list.concatmap it's not called list.andthen but it has the same signature and vice versa with things that use andthen so it seems like in many cases Elm opts for using more domain language than category theory language but there are trade offs there. I mean like the you could imagine a world where we just say let's be consistent with this naming if it follows these laws let's pick a term for it that we're going to use in the Elm community and let's stick with that in all of the core libraries at least so let's call it list.andthen or let's use concatmap elsewhere whatever it is let's stick with it. But it does get difficult to sort of because again the semantics can feel so different even if the pattern is the same. Yes I think in fact lists are really tricky because it's often where you're first introduced to a lot of these things particularly something like map and if you know your only example that you've seen is list map you're going to think map is about iteration and list traversal and so when you see maybe map JSON to code map and it's not about traversing a list you get really confused. Or at least I did. Yeah especially coming from JavaScript where the only map function that I know is on arrays so collections. Yes although fun fact the promise then method is effectively map on a promise but it's also an and then. Yes it is also an and then. Right. So is it what kind of. It's monadic but the exception part isn't really well behaved the errors don't really map cleanly I don't know if that breaks any monadic. It kind of does yes as an approximation you can say that promise then is like a similar to a monad it's similar to a functor or similar to map similar to and then because you can do promise dot resolve to get just the unit value and you can do then on the promise to continue. Well it gets interesting if you compare it to say elm task which is very similar to JavaScript's promise where elm task has two very separate functions for map and then if you're looking at some code and you see that it applies a task map you know that let's assume these tasks are just HTTP requests you know it's only making one request and then applying a transformation to the result of that request. Map cannot make a second request because of the functor laws but. Can you clarify why? Because if you made a second request it would end up let's see I think if you made a second request you ended up with like a doubly nested task. Yes you would have a task or a task. Right which is actually why some languages instead of calling it and then we'll call it flat map because it's do map but with another task and then you've got this nested thing and you have to flatten it down and so because of the way the signatures and the laws work out when you see a map you know it's a sort of a local operation it's a safe thing as opposed to if you seen and then you know okay it's doing some logic potentially and then making another request whereas if you see a chain of thens in JavaScript you don't know did we make one request and then just do a bunch of local transformations or did we do 10 requests and now we get back to another of the functor laws which is I think what you were mentioning earlier that you were trying to do with the LLM optimized level 2 where all of those like a chain of maps can be like flattened down and what you can do is all those functions that were in each of the maps just pull them out into a separate named function. So in LLM if I see task and then just task map task map task map like five of these I can just look at all those five functions create my own named function pull all of that out and say there is one transformation that gets applied at the end of my request. In JavaScript I can't know to do that because if some of them are making extra requests that's not just a pure transformation. So then I'd have to say okay well these two can be pulled out but then I need another I actually need a then to make that second request and then some more transformations. So you have to really check each item at a time. So you could with a promise if it didn't behave as an and then if it only behaved as a map then you could potentially right. Yes if you saw if it only behaved as a map and you saw a chain of thens you could reduce it down to a single then and then just pull out all of those extra things into one function. But it's not safe to do that if you are potentially making more requests. And I guess I mean naturally you would reach for the simplest tool you could in a lot of cases and try to use map where possible kind of like I mean you're in and I often come back to Richard scaling L maps talk where the one of the main takeaways is if a function doesn't need more data give it less data. If a function doesn't need to pass out more data for the calling code then don't return as much data just constrain things more so that you can more easily reason about what does this code depend on and what can this code do. And that same principle I think applies from what you're saying here if you don't need and then if you can do it with a map that's less cognitive complexity for you to hold in your head when you're looking at the code or when you're debugging and trying to find where an issue is coming from. Yes. And in fact I've often seen people use and then when they only need a map and the classic thing that you'll see them do is and then some pure function then like adding an explicit wrapper. Right. I want to say is there a Elm review rule for that? No but it could definitely could. Yeah. So like a classic case would be something like maybe and then some pure function and then just wrap the result in just. But that's basically just saying wrap it in just and then unwrap it because and then is you can think of it as a flat map and so it's just going to apply map but you wrap it in just it's going to flatten it back down and you've done extra work for nothing. I might have something similar to that in Elm review simplify. OK. And if not someone could create an issue I'm sure. Or a pull request. Yeah. Or pull requests while listening to this episode because our audience or listeners are very quick. But I guess to come back to the sort of original question that we're asking right should Elm devs care about category theory or why should we care about it. One thing that really helps is to because you can recognize some of these larger building blocks and patterns you can immediately gain some much deeper insights into how the program works and what it does or doesn't do just by looking at some of these function names. Right. Yeah. That's a great takeaway. I feel like in the Elms like I've seen some conversations which I will not be able to remember so I can't give it an example where someone asked like is it possible to have a function that does this or does that with this type and people say well no that is not possible because you're missing some constraints on your type or on your functions or it is possible and here is the type signature that you will see in other places. So I feel like some people are able to recognize when something is possible when something is not possible very quickly thanks to this. I'm thinking like I don't know if I'm pulling this out of thin air but like contravariance could be one example maybe. I don't even know where that one is. But yeah where you have like B to A as a function and then you can construct something. I'm going to stop here because I'm swinging. There's definitely cases where you can use it to say well here are standard solutions to a particular problem that follows one of these patterns or sometimes even built on top of these patterns. So you have a list of maybes and you want to accumulate them into a single maybe with a list of values. That is the thing that is really interesting about this. I think it's really interesting to see that you can actually generate a list of values into a single maybe with a list of values. That is the thing that is a solved problem for actually genericize from pretty much any types as long as they implement map2. So you know as long as your type is applicative then you can do this kind of sequencing of values together or combining. You can either sequence or combine for this kind of operation. So this might be a big ask Joelle but can you try to break down a few of these patterns like you just did with this sort of idea of like OK when you see map2 you know you can combine things. What are some other patterns and some other things that you know you can do when you have those patterns. One that I like and again this is an approximation it's not always true but I typically think of monads as being serial or sequential and applicatives as being parallel. So if you're doing a map2 or map3 or map4 the important thing is that all of the things you're combining together are all independent of each other. So in theory if you're doing a map4 with four different HTTP requests those could be executed in parallel. Elm does not for the moment. That's an implementation detail. They've chosen to do it in sequence. But in theory they are independent and can be executed in parallel in a way that doing a bunch of and thens for make one request and then make another request and then make another request. They must be sequential because you can't make the second request until the first request resolves because you need data from the first request in order to even construct the second one. So there's an inherent dependency chain in and thens that you don't have with map2 or map3. Now there's a little bit of fuzziness there in that that's only true with regards to the type variable that you're working with. So for example parsers they're all independent of each other for the thing that they're parsing. So the output of one parser won't impact the value of the second parser but they're all operating sequentially on the underlying string. So there is a sort of inherent sequentiality to them but they are independent of each other. So that serial versus parallel model falls apart in some cases. But for many or most of the and thens and map2s that I've experienced it's a useful distinction to keep in mind. Yeah I mean at the very least you know with and then just based on the type signature you know you're going to be able to take the concrete value and you're going to be able to have that and then give something else back. That's like what the signature says. So if it is something where it's performing operations you know it's going to need to be sequential because you actually have a resolved value at that point. But the naming does get interesting there right because the word then does imply time and you know maybe with a list we're not dealing with time and so maybe we call it concat map and it gets a little fuzzy doesn't it? Right right and even something like maybe right you're not dealing with something that's in the future. Right. There is an implied sort of fact that the second maybe is going to be resolved after the first one because there is that order that's there. So maybe then kind of makes sense there. Right, but the the general thing you're doing is you're taking some how resolved or concrete or present value or whatever that that fuzzy thing represents and you're able to return a new one of those with and then so okay cool so that's sort of this. When you have a monad you have and then that's what you can do. What are some of these other patterns? So we talked a little bit about monoid earlier the idea of we have some combining function and we have sort of a base case that always does nothing when combined with another value. Is there a username for the combining function? Do you know? What is it? The... oh I forget what it is. The base case is sometimes called mempty in Haskell and they have a name for the other one. I don't know if those are standard names or if that's just the Haskell names for it, but what's interesting about this is that it may have actually kind of set off a light bulb in your mind. The idea of a combining function in a base case more or less what folding does. And so if you have a monoid, then you can inherently fold collections of that or lists of that type using that monoid. So most of the classical sort of fold function examples will show like summing a list is effectively just applying that monoid to things. But you can also multiply things. Something like asking are all values in a list true according to this predicate or are any of them true? Now you're effectively folding the Boolean operator or or the Boolean operator and. On Booleans and is a combining function and anding a value with false returns sorry, ending a value with true returns whatever your value was. So ending values is a monoid and same thing with or. Orring a value with true returns self and or is a way to combine two Booleans. Orring a value with false returns self, orring a value with true returns true. Yeah, yeah, I got it reversed. Right, right. Yeah, no, that's 150% chance. And I got it wrong with both. You were very unlucky. So like would a set be another example of that? You can have an empty set and you can union a set. Yeah, you right. Yeah, you can union with that. You cannot insert an empty element, but you can union two sets, right? So you could form a monoid for sets with union as your combining function and empty set as your, I guess, identity value. You could. I'm not sure for some of the other set operations if intersection works or not. I mean, I think effectively you can you can think of union like or an intersection like and. Yes. So it's probably possible. Yeah, I have to think about that. Where this is really interesting is that functions are themselves monoids because you can combine two functions with function composition. Right. And you can combine them with identity. Yes. And I've actually used this on. In fact, this is not even like a functional programming thing. This is a Ruby project. And I had to do this complex search form with a bunch of search parameters. And the way I'd often solve this in Ruby was just like a bunch of like if else statements like if this parameter is there, try to filter your results through this way. But then like all the combinations get really weird and it gets really messy. So instead, what I ended up doing was creating a bunch of query objects, which are you can think of them almost like functions, but they operate on the database and made them composable. And then based on the parameters in the URL, I would just construct a bunch of these and then fold through them to combine them all together, effectively just to compose them with the empty query as my base value. That's how I built up my search. At the time, I didn't know about monoid. I didn't really know that much about folding even. It just kind of worked out. But years later, when I learned about monoid, I was like, oh, that like really cool search thing I did in a Rails project once. That was monoid plus folding. It's worth noting that folding doesn't always have to be on a monoid. I think that's a common misconception. You can fold things that are not monoid because there are some operations that don't follow the monoid laws where your base case isn't necessarily the identity. And so folding is a broader set of things, but monoid are always foldable. Yeah. So I'm currently thinking that if you provide a functor, so if you provide a map function and it is a monoid, would you say it is monoid? Sure. Yeah, we can say it's monoid. Yeah. So if it is a monoid and it has a map function, so it's functor, then you can implement like map reduce strategies, right? Oh, that's interesting. And now I'm realizing that in Elm Review, when I ask authors to create the rule, I ask them to provide something that actually looks like give me an initial value, kind of a neutral value. For the context? Yeah, for the context, the project context. And I also ask them to fold them, a way to fold them. And internally, then I do like map reduce to combine these together. So multiple project contexts into one project context, which allows me to do pretty nifty things under the hood. So I think this may be a little loose with the terminology here. When I'm talking about that monoids can be folded, it's not the monoid itself that can be folded. It's a collection of them. So, yes, numbers are not foldable, but a list of numbers is foldable. Yeah, two numbers are foldable together into one. Well, two numbers can be combined monoidally with addition. A list of numbers can be folded using the addition monoid or folded with the multiplication monoid or however you want, whichever one you want to use. Right. Given that you have an operation that allows you to combine them, you can fold them. Given that you have a monoid for some values, a list of those values can be folded. So to your example earlier, it's your collection, your list that's a functor and the items in the list that are monoids. And then you can do your map reduce. Yeah, this gets really powerful once you start noticing some of these pieces. And sometimes you notice like, oh, my type could be made or is an operation that would be really nice if these things were monoids, but they're not. But also, I know that they could be if I implemented one function. And so it's like you implement one function, then everything else falls into place and you can write a really nice program. Right. That is sort of the beauty of patterns, isn't it? Is you don't have to reinvent the wheel. It's sort of like this is going to pop up again and again and I'm going to have to think really hard. How am I going to solve this problem? And then I'm going to come up with the same solution. If only I sort of understood that pattern better. So that is something I would like to strive towards to to be a little more versed in these patterns so that I can sort of pull them out as needed more and more easily and add them to APIs as needed. And sometimes you already have like all the machinery in place and all you're missing is that one cog. But if you don't know that it's that one cog you're missing, you're going to rebuild the whole machine. Right. Instead of being like, oh, I just need to implement this one little function and then everything else is just going to work. Right. Yeah, I wonder, like, you know, I mean, when I built Elm GraphQL, I was very new to all all these things. In fact, like I literally read an article, like I found an article explaining what a phantom type was. I'm like, that's what I need. And that day added that as I was like exploring building this API. But yeah, it took me like it would have been nice to know that, hey, having the ability to just have an empty thing that when combined with anything else is itself, that would be cool. And then you have a selection set that empty and you can. So I suppose that would be a monoid because you can take a selection, an empty selection set and combine it with another thing. You could fold over that. That's useful knowledge. So what is your take on names? So there's a lot of discussion around this. So if something has and then do you call it and then able or do you call it a monad or how would you teach it around names? Oh, that's a really hard question because I think it is useful to have a name for things that have and then. I think that having a name like monad is not useful for beginners, people who are learning. And in fact, even talking about it in terms of some larger pattern is not useful for beginners. Because it didn't grasp it in their head yet. And now you're trying to see like what are the things in common, what are the patterns? And it's just so abstract that you tell them, oh, it's just an and then function that follows these laws. And it's like, well, that's too simple. What does it actually mean? And then you get stuck in all these like really high level things that just kind of make you spin in circles as opposed to just being like, oh, here's how I combine. Maybe here's how I combine results and then over time building up an intuition for what it works. Eventually, you're going to want a name for all of these things. And either just to recognize the path, like put a name on a pattern you've seen sort of emerge, but also to having conversations with other people or with yourself to say, oh, this thing here, if I make it and then all of a sudden a bunch of other pieces fall into place. Or you're doing review for someone and you're saying, you're doing a lot of work here and it looks like you're chaining things in a monadic sort of way. And I've used this with people who know what the term means in nonfunctional programming contexts because it is a very useful term. I guess there's also just the fact that if you want to know more about the pattern, if you want to research more, then googling and then is not going to give you much, but googling monads will give you a lot of resources. Yes. Unfortunately, most of those are not going to be helpful. That's a different thing. Yes. Yes. I think also what's sometimes tricky with these things is that a lot of the literature around these terms is written in a very kind of formal language. Like it's written almost by academics for academics. I remember I gave a talk last fall on folding and a particular sort of style of folding, which I didn't mention in the talk, but it's called a catamorphism. And anything that I read on folding and catamorphism has got really deep. Even the ones that are claiming to be like written for programmers in an accessible way. And you get a few paragraphs in and we're talking about how F algebras compose and arrows. I'm just completely lost. So sometimes when you dig in on the terms, most of the material that's out there is not written for people like us who are trying to write programs in the real world. And I wish there were more tutorials out there that try to give more of a practical introduction to some of these concepts. And I feel like you've written a few. I've tried. The talk I gave about folding was exactly that. I was trying to say, let's take these concepts and make them accessible to people and not worry too much about the formal definition of what a catamorphism is, but instead, how is it useful? My example was working with trees and particularly inverting a binary tree on a whiteboard in one line of Elm. That was my my selling point. Yeah, we'll definitely link to that talk. Yeah, it is. It would be so nice to just have it written in plain English in one place. Like, here are all these kind of common patterns. Here's what they look like in Elm. Here's here are the kinds of problems you can solve with them. This conversation has definitely been illuminating. So thank you so much for coming on to illuminate these things for us and dive in. It's been a pleasure. Thanks for bringing me on. Are there any concepts that you would recommend people learn first? And do you have any resources? Because you said it's very hard to find resources. So if you have good links, that would be useful. I'm a big fan of just digging into maybe. I think it's a great place to learn, particularly because maybe exposes its constructors. So you can manually unwrap it and manipulate it and sort of see how it works under the hood. An exercise I've done with people before is actually have them implement their own map and then on a maybe to see how that works. I also have an article called the mechanics of maybe that sort of looks at it less from a patterns perspective and more from a here. You're new to maybe here's some common situations that you run into. You would write a case expression like this. And because it's such a common situation, the library provide the helper for you, which end up being things like map and and then. But the intuition, even for just the difference between map and and then. I think you touched on a little bit, Dylan, the idea that not only transforms the value inside does not produce a new maybe whereas and then does and sort of what the implications of that can be. Right. It is. I really like this idea of using maybe as an exercise to let's build these up from scratch. One thing that's a little bit elusive is maybe doesn't have a succeed function. I mean, it does. It's just not called that. And it's not a standard function. It's a constructor function. It's just. And so you have to really squint your eyes to see those patterns there. Yeah. And the reason you bring it up is because the definition, the strict definition for what a monad is requires an and then function and some form of constructor. Right. We've sort of not mentioned that out loud on the episode, but that's what the formal definition says. And for some types that don't expose the internals of the type, for example, task or JSON to code, they will often expose a succeed function, which is a constructor. Right. Exactly. Yeah. So, Dylan, I'm curious if you used any of these patterns and concepts when you were designing the own GraphQL library. You know, I wish I even knew what these things were back then. They were much fuzzier in my mind at the time, like just conceptually in category theory and those things. But even just the patterns themselves were less clear in my mind. So I had no idea about these things. And the original Elm GraphQL, which was called GraphQL, it had these core concepts of like, you know, making it safe to query for your GraphQL data and having phantom types to protect that you're querying in the right context in these things. But it really didn't have any of these properties that we've been talking about of monoids and functor and all these things. So there was a selection set and there was a field. And those were two different concepts. Did you have that sort of nice pipeline API back then? So like the selection set with build things out? There was. There was selection set with. And so that, I guess, just to clarify for our listeners, is applicative. So selection sets could be combined applicatively. But you also have this concept of fields which could not be combined applicatively. Well, now here's the thing. I would venture to guess that it would not be applicative because it wasn't applicatively combining it with its own type. You would build up a selection set. So you would say, here's a selection set. And I can say with field, with field, with field. And it takes it on to a selection set. You're right. That would not be applicative. Right. So the reason it did that was because I was trying to do, I needed to make sure I had a unique way of querying for them. So in GraphQL, in a selection set, you can say, give me, you know, the avatar for user one, two, three. But you can say you can pass arguments to your fields in GraphQL selection sets. So you could say, well, I want the large thumbnail and I want the small thumbnail. Well, those would both be thumbnail, the thumbnail field. And that comes back under a JSON key of thumbnail. But those both come back under the same JSON key. So I need a way to uniquely be able to get each field that you're requesting. And because of that, I would say, well, if I'm adding on a field that already exists, so I have thumbnail and you're adding thumbnail again. So when you say with thumbnail small and then with thumbnail large, now it's going to add thumbnail too. It's going to add an alias the second time you add something. So it's no longer unique. And so because of that implementation detail, when I was trying to figure out how to really in hindsight, I was trying to figure out how to obey these laws and building up a selection set where I could combine things, where I could do map two. And I knew that I wanted map two, I guess, because I knew that I could do nice things with JSON decoders. And so that was an obvious parallel. But I didn't. Yeah. So in hindsight, that's really what I was trying to do, was trying to figure out how to obey those laws. Interesting. It sounds like you came at it more from a developer experience perspective. But somehow that brought you exactly in line with some of these classic category theory constructs. Exactly. Yeah. Yeah. And in hindsight, that is really, really cool that that was just I wrote I wrote a blog post about I think it's called how guides you towards simplicity and how I essentially had to have a deterministic way to uniquely hash these fields when I added them in. And that made it so it was order independent. So you can add you know, you can have a selection set where you add a thumbnail and then you can add another thumbnail later. And it doesn't care because it's already uniquely created a field alias. So it's never going to collide. That's that's really cool. And it goes back to sort of that one property we discussed earlier that applicatives tend to be order independent. Right. With a little asterisk. There are some some edge cases like parsers. I feel like there's a lot of asterisks around those laws. Not the laws, but the functions and how you. Right. Right. Because order independent is not part of the laws or at least not order independent in the way that we think of it. I think there are laws around things like commutativity, which effectively mean order independence in a certain strict sense of the term. But yes, for in general, it's easy to think of applicatives as being order independent. And that's exactly the behavior you wanted. Right. Yeah, exactly. And things just bloomed at that point. It just felt like the the whole library before that, it became so much nicer to work with. And now so there used to be this concept of a fragment of a fragment selection set. So so GraphQL has concepts of a fragment and you could like build these fragment selection sets. And I don't even remember exactly how you did that. It is the kind of thing that it was like you had to build up a fragment and then explicitly combine it with it and it would duplicate these things. And it was a very difficult problem because how do you combine two selection sets when you've already sort of built up the decoder that's expecting to be querying for the JSON that comes back from GraphQL? But now you you've already sort of built up this decoder. Now you add some some more things to the selection set. But now you need to change the way you're querying for that data. So it's very messy. So suddenly the whole concept of a fragment went away and you could just say, well, all you've got is a selection set. There's no such thing as a field. There's no such thing as fragments. You've got a selection set which can be empty, can be a single field or it can be a collection of fields. And suddenly it became so much simpler to work with and the fragment just becomes expressed as a selection set. So I wonder what questions you could have asked yourself to come to the same conclusion earlier. Hmm. Like, yeah, that's a great question. Yeah. Like what would have made me realize these things? I mean, looking back on it now, I guess if I had some more knowledge of these category theory ideas in a way that I could understand for how do I help users solve problems? And that might have pushed me sooner to kind of find ways to follow these laws. That said, there were also certain technical things that I didn't have those insights of how do I make it deterministic? That it's always it doesn't matter what order you combine things in. But maybe that's maybe that's a takeaway is just if you're having trouble combining things, figure out how to make it order independent. And if I if I just said, OK, I'm sure I can find a way to do this and focused on that, maybe I would have gotten there sooner. I think it's interesting. You mentioned you wrote a blog post about how Elm guides you towards simplicity. And you asked a question at the beginning of this episode where you said, if we didn't have these category concepts and we just started with Elm, would we sort of independently rediscover them? Would they sort of always emerge? And I think with the answer you just gave here, you're saying yes. That's my intuition. Now, that said, in a way, I had a blueprint. I had this obvious point of comparison. Right. Because a graph QL selection set is kind of like, you know, it's it's sort of a JSON decoder on steroids. It's like a super powered JSON decoder. So there's an obvious API to try to match and say, hmm, JSON decoders can map to JSON decoders can succeed. Wouldn't that be nice if I could do that? So it's hard to say what the API would have been if it wasn't for the existing example of JSON decoders. But I do imagine that a lot of the same patterns would have emerged. I mean, I guess in some way, this is what happened at some point in the history of computer science. Right. Anyway, so. Right. Us being here talking about this is proof that this is the way it would have gone, potentially. I think the biggest insight was when I realized that the concept of a field and a selection set could be the same. And that the thing I needed to be able to implement that was to not care about order. And and when I just sort of stubbornly focused on that and said, there's got to be a way I'm going to try to find out a way to do that. And I'm going to explore every option. For a while, I was exploring, do I need to sort of hold some context of what fields have been queried and lazily build up the decoders? And can I even do that? And but eventually I just kind of held with that goal and and it took me there. What about Jeroen? What about Elm Review? Are there any places you think you could have sped up the way you developed certain parts of that API if you'd had these patterns in mind? Probably a few. I know that I have something called a context creator, which is basically an applicative, I think. Yeah, it's an applicative because you you start with some with the function and you say, I want this, I want that, I want this and then something to construct it to combine all those information. I remember that was a bit tricky to implement. I'm not even sure that it turned out exactly how I wanted it to be. But yeah, that would have been helpful at least. And then internally, I'm pretty sure I've implemented plenty of category theory things that are just not exposed, but that would have been helpful for me. It's quite easy to even sort of accidentally implement these things, right? Because there's such useful types of functions. There's almost like a gravity pull towards those sort of optimal points. So the odds of you're implementing a map if you didn't know what map was are pretty high. Yeah, it's also because we don't have that many ways of building things. I mean, we don't have mutation, so that reduces a lot of what we can do. That's true. We don't have for loops. So yeah, how do you map things from list? Well, yeah, you're going to reinvent mapping at some point. Yeah, it would be cool to maybe that would be like a good write up or something is exploring which of these patterns do APIs that we've built inadvertently implement. I'm sorry, I invented applicatives again. That's a great commit message right there. Whoops, I created a monad. Is this like the phenomenon of like things becoming crab like in the natural world a lot? I'm not familiar with this word. I have become familiar with that one recently and I keep hearing about it ever since. Basically, the idea that all animal species tend to evolve into something that very much looks like a crab. So basically, a crab is like kind of a perfect being in a way, an optimal being, and everything just gravitates towards that. Is it corollary that all programs will eventually be migrated over to REST? Very probable. It's all making sense now. All right. They chose their logo well, at least. I really like that idea of getting to the basics and trying to derive these things by solving a real problem. Are there any references for these more formal things? Do you sort of do what we all do and click a bunch of links and have a thousand tabs open in your browser? I've written a few articles digging into that. I've written one on two perspectives on map functions. So sort of two mental models that I hold. I've written one about Elm's universal pattern. We use that as an inspiration for a previous episode. So those are all, I think, more practical entryways into these concepts. I also made one on what happens when you run out of map functions, which is digging into what applicative is in a very kind of concrete use case. So those are all, I think, useful articles for getting some understanding of what these things do in a very practical and in this case Elm centered environment. Yeah. Yeah. Well, link to all those. Those are great resources. Awesome. And where can people follow you and learn more? And any other links you want to share? Yes, they can follow me on Twitter. I'm at joelken, J O U L Q U E N. And I publish a lot of articles on the Thoughtbot blog. So that's Thoughtbot, T H O U G H B O T. I think I spelled that right. Slash blog. And then if you want to find mine specifically, slash authors slash joel dash kenville. It might be better to have an actual link then. Yes, we will add that. Look at the show notes for the link. Great. Well, thanks again, Joelle, for coming on and pleasure as always. Thank you. Great to talk with you all again. And Jeroen, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 1, "seek": 0, "start": 2.0, "end": 7.0, "text": " Hello, Dylan.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 2, "seek": 0, "start": 3.0, "end": 8.0, "text": " And once again, we're joined by friend of the show,", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 3, "seek": 0, "start": 6.0, "end": 11.0, "text": " Joel Kenville.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 4, "seek": 0, "start": 8.0, "end": 13.0, "text": " Thanks so much for coming back, Joel.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 5, "seek": 0, "start": 9.0, "end": 14.0, "text": " Thanks for inviting me onto the show.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 6, "seek": 0, "start": 11.0, "end": 16.0, "text": " So today we are talking about a bit of a hot topic.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 7, "seek": 0, "start": 14.0, "end": 19.0, "text": " Should Elm devs care about category theory?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 8, "seek": 0, "start": 17.0, "end": 22.0, "text": " Forgive us if we use that term a bit imprecisely,", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 9, "seek": 0, "start": 20.0, "end": 25.0, "text": " but I think that that's what Elm developers", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 10, "seek": 0, "start": 23.0, "end": 28.0, "text": " often think about when they think about", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50614, 50464, 2425, 11, 28160, 13, 50714, 50514, 400, 1564, 797, 11, 321, 434, 6869, 538, 1277, 295, 264, 855, 11, 50764, 50664, 21522, 8273, 8386, 13, 50914, 50764, 2561, 370, 709, 337, 1348, 646, 11, 21522, 13, 51014, 50814, 2561, 337, 18202, 385, 3911, 264, 855, 13, 51064, 50914, 407, 965, 321, 366, 1417, 466, 257, 857, 295, 257, 2368, 4829, 13, 51164, 51064, 6454, 2699, 76, 1905, 82, 1127, 466, 7719, 5261, 30, 51314, 51214, 34060, 505, 498, 321, 764, 300, 1433, 257, 857, 704, 13867, 271, 736, 11, 51464, 51364, 457, 286, 519, 300, 300, 311, 437, 2699, 76, 8849, 51614, 51514, 2049, 519, 466, 562, 436, 519, 466, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.1587588200803663, "compression_ratio": 1.6300813008130082, "no_caption_prob": 0.14010919630527496}, {"id": 11, "seek": 2800, "start": 28.0, "end": 33.0, "text": " the area that we're going to be touching on.", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 12, "seek": 2800, "start": 30.0, "end": 35.0, "text": " So let's dive into it.", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 13, "seek": 2800, "start": 31.0, "end": 36.0, "text": " So what do we really want to talk about here?", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 14, "seek": 2800, "start": 34.0, "end": 39.0, "text": " We're kind of talking about some patterns", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 15, "seek": 2800, "start": 37.0, "end": 42.0, "text": " that we use as Elm developers, or could use.", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 16, "seek": 2800, "start": 39.0, "end": 44.0, "text": " How would you sort of describe overall", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 17, "seek": 2800, "start": 42.0, "end": 47.0, "text": " this sort of concept of category theory", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 18, "seek": 2800, "start": 45.0, "end": 50.0, "text": " or how it might be useful for an Elm developer?", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 19, "seek": 2800, "start": 47.0, "end": 52.0, "text": " I think there's value in recognizing patterns", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 20, "seek": 2800, "start": 50.0, "end": 55.0, "text": " in our code and when they repeat.", "tokens": [50364, 264, 1859, 300, 321, 434, 516, 281, 312, 11175, 322, 13, 50614, 50464, 407, 718, 311, 9192, 666, 309, 13, 50714, 50514, 407, 437, 360, 321, 534, 528, 281, 751, 466, 510, 30, 50764, 50664, 492, 434, 733, 295, 1417, 466, 512, 8294, 50914, 50814, 300, 321, 764, 382, 2699, 76, 8849, 11, 420, 727, 764, 13, 51064, 50914, 1012, 576, 291, 1333, 295, 6786, 4787, 51164, 51064, 341, 1333, 295, 3410, 295, 7719, 5261, 51314, 51214, 420, 577, 309, 1062, 312, 4420, 337, 364, 2699, 76, 10754, 30, 51464, 51314, 286, 519, 456, 311, 2158, 294, 18538, 8294, 51564, 51464, 294, 527, 3089, 293, 562, 436, 7149, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.07752886071669317, "compression_ratio": 1.628, "no_caption_prob": 0.00037405217881314456}, {"id": 21, "seek": 5500, "start": 55.0, "end": 60.0, "text": " And then use things we know in one context", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 22, "seek": 5500, "start": 59.0, "end": 64.0, "text": " and apply them in another.", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 23, "seek": 5500, "start": 61.0, "end": 66.0, "text": " Right.", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 24, "seek": 5500, "start": 63.0, "end": 68.0, "text": " Right.", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 25, "seek": 5500, "start": 64.0, "end": 69.0, "text": " So basically what we would hope to come away with here", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 26, "seek": 5500, "start": 68.0, "end": 73.0, "text": " is a better understanding of some tools for abstraction", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 27, "seek": 5500, "start": 71.0, "end": 76.0, "text": " that we can use as Elm developers.", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 28, "seek": 5500, "start": 73.0, "end": 78.0, "text": " And maybe just a clearer understanding", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 29, "seek": 5500, "start": 77.0, "end": 82.0, "text": " of some abstractions we're already using.", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 30, "seek": 5500, "start": 79.0, "end": 84.0, "text": " We're probably already familiar with these", "tokens": [50364, 400, 550, 764, 721, 321, 458, 294, 472, 4319, 50614, 50564, 293, 3079, 552, 294, 1071, 13, 50814, 50664, 1779, 13, 50914, 50764, 1779, 13, 51014, 50814, 407, 1936, 437, 321, 576, 1454, 281, 808, 1314, 365, 510, 51064, 51014, 307, 257, 1101, 3701, 295, 512, 3873, 337, 37765, 51264, 51164, 300, 321, 393, 764, 382, 2699, 76, 8849, 13, 51414, 51264, 400, 1310, 445, 257, 26131, 3701, 51514, 51464, 295, 512, 12649, 626, 321, 434, 1217, 1228, 13, 51714, 51564, 492, 434, 1391, 1217, 4963, 365, 613, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.07692382128342339, "compression_ratio": 1.6495327102803738, "no_caption_prob": 0.00019107546540908515}, {"id": 31, "seek": 8400, "start": 84.0, "end": 89.0, "text": " or don't recognize them as a recurring group of patterns.", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 32, "seek": 8400, "start": 89.0, "end": 94.0, "text": " So is that how you think about them as a group of patterns", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 33, "seek": 8400, "start": 93.0, "end": 98.0, "text": " that you can use to identify common abstractions?", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 34, "seek": 8400, "start": 97.0, "end": 102.0, "text": " Yes, I think I like the term pattern here.", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 35, "seek": 8400, "start": 100.0, "end": 105.0, "text": " In fact, we used it in a previous episode", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 36, "seek": 8400, "start": 102.0, "end": 107.0, "text": " where we talked about one of these", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 37, "seek": 8400, "start": 105.0, "end": 110.0, "text": " what we called universal patterns.", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 38, "seek": 8400, "start": 107.0, "end": 112.0, "text": " Yes, and listeners should definitely check out that episode", "tokens": [50364, 420, 500, 380, 5521, 552, 382, 257, 32279, 1594, 295, 8294, 13, 50614, 50614, 407, 307, 300, 577, 291, 519, 466, 552, 382, 257, 1594, 295, 8294, 50864, 50814, 300, 291, 393, 764, 281, 5876, 2689, 12649, 626, 30, 51064, 51014, 1079, 11, 286, 519, 286, 411, 264, 1433, 5102, 510, 13, 51264, 51164, 682, 1186, 11, 321, 1143, 309, 294, 257, 3894, 3500, 51414, 51264, 689, 321, 2825, 466, 472, 295, 613, 51514, 51414, 437, 321, 1219, 11455, 8294, 13, 51664, 51514, 1079, 11, 293, 23274, 820, 2138, 1520, 484, 300, 3500, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.10822752333178963, "compression_ratio": 1.6784140969162995, "no_caption_prob": 8.219893788918853e-05}, {"id": 39, "seek": 11200, "start": 112.0, "end": 117.0, "text": " of Refresher. We covered a lot of stuff there,", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 40, "seek": 11200, "start": 114.0, "end": 119.0, "text": " a lot of it talking about what you might call", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 41, "seek": 11200, "start": 117.0, "end": 122.0, "text": " the applicative pattern.", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 42, "seek": 11200, "start": 118.0, "end": 123.0, "text": " It's episode 32, if I remember correctly.", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 43, "seek": 11200, "start": 121.0, "end": 126.0, "text": " You should actually check that.", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 44, "seek": 11200, "start": 122.0, "end": 127.0, "text": " Yes, episode 32.", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 45, "seek": 11200, "start": 124.0, "end": 129.0, "text": " So I've been trying to understand", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 46, "seek": 11200, "start": 127.0, "end": 132.0, "text": " why is it so hard to wrap our brains around this topic?", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 47, "seek": 11200, "start": 131.0, "end": 136.0, "text": " I think, I don't know, I imagine a lot of Elm developers", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 48, "seek": 11200, "start": 134.0, "end": 139.0, "text": " can relate to this. To a certain extent,", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 49, "seek": 11200, "start": 136.0, "end": 141.0, "text": " we shy away from using some of this academic language,", "tokens": [50364, 295, 16957, 495, 511, 13, 492, 5343, 257, 688, 295, 1507, 456, 11, 50614, 50464, 257, 688, 295, 309, 1417, 466, 437, 291, 1062, 818, 50714, 50614, 264, 2580, 1166, 5102, 13, 50864, 50664, 467, 311, 3500, 8858, 11, 498, 286, 1604, 8944, 13, 50914, 50814, 509, 820, 767, 1520, 300, 13, 51064, 50864, 1079, 11, 3500, 8858, 13, 51114, 50964, 407, 286, 600, 668, 1382, 281, 1223, 51214, 51114, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 341, 4829, 30, 51364, 51314, 286, 519, 11, 286, 500, 380, 458, 11, 286, 3811, 257, 688, 295, 2699, 76, 8849, 51564, 51464, 393, 10961, 281, 341, 13, 1407, 257, 1629, 8396, 11, 51714, 51564, 321, 12685, 1314, 490, 1228, 512, 295, 341, 7778, 2856, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09980212725125827, "compression_ratio": 1.5498281786941581, "no_caption_prob": 0.0006461290176957846}, {"id": 50, "seek": 14100, "start": 141.0, "end": 146.0, "text": " using these terms in the Elm community.", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 51, "seek": 14100, "start": 143.0, "end": 148.0, "text": " And to a certain extent, that makes it feel more accessible", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 52, "seek": 14100, "start": 146.0, "end": 151.0, "text": " for a lot of people, that they don't need to understand", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 53, "seek": 14100, "start": 149.0, "end": 154.0, "text": " all these terms before they feel like they can jump in", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 54, "seek": 14100, "start": 152.0, "end": 157.0, "text": " and create a web application.", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 55, "seek": 14100, "start": 154.0, "end": 159.0, "text": " But why is it so hard to wrap our brains around it?", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 56, "seek": 14100, "start": 157.0, "end": 162.0, "text": " And I was thinking about, it's almost like these patterns,", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 57, "seek": 14100, "start": 161.0, "end": 166.0, "text": " they don't have semantic ideas to them,", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 58, "seek": 14100, "start": 164.0, "end": 169.0, "text": " they don't have domain ideas, and that's sort of the point,", "tokens": [50364, 1228, 613, 2115, 294, 264, 2699, 76, 1768, 13, 50614, 50464, 400, 281, 257, 1629, 8396, 11, 300, 1669, 309, 841, 544, 9515, 50714, 50614, 337, 257, 688, 295, 561, 11, 300, 436, 500, 380, 643, 281, 1223, 50864, 50764, 439, 613, 2115, 949, 436, 841, 411, 436, 393, 3012, 294, 51014, 50914, 293, 1884, 257, 3670, 3861, 13, 51164, 51014, 583, 983, 307, 309, 370, 1152, 281, 7019, 527, 15442, 926, 309, 30, 51264, 51164, 400, 286, 390, 1953, 466, 11, 309, 311, 1920, 411, 613, 8294, 11, 51414, 51364, 436, 500, 380, 362, 47982, 3487, 281, 552, 11, 51614, 51514, 436, 500, 380, 362, 9274, 3487, 11, 293, 300, 311, 1333, 295, 264, 935, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.10903558652263043, "compression_ratio": 1.714828897338403, "no_caption_prob": 4.356833869678667e-06}, {"id": 59, "seek": 16900, "start": 169.0, "end": 174.0, "text": " they don't have any ideas.", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 60, "seek": 16900, "start": 172.0, "end": 177.0, "text": " It's almost like if you were to explain the term", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 61, "seek": 16900, "start": 174.0, "end": 179.0, "text": " organization to somebody who didn't know what an organization was.", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 62, "seek": 16900, "start": 178.0, "end": 183.0, "text": " And if they were saying, well, what does it do?", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 63, "seek": 16900, "start": 180.0, "end": 185.0, "text": " Well, it could do anything.", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 64, "seek": 16900, "start": 182.0, "end": 187.0, "text": " What's its purpose? Its purpose could be anything.", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 65, "seek": 16900, "start": 186.0, "end": 191.0, "text": " But there's some sort of set of coherent ideas", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 66, "seek": 16900, "start": 190.0, "end": 195.0, "text": " you could talk about of how do people organize work.", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 67, "seek": 16900, "start": 192.0, "end": 197.0, "text": " Are they self organizing teams?", "tokens": [50364, 436, 500, 380, 362, 604, 3487, 13, 50614, 50514, 467, 311, 1920, 411, 498, 291, 645, 281, 2903, 264, 1433, 50764, 50614, 4475, 281, 2618, 567, 994, 380, 458, 437, 364, 4475, 390, 13, 50864, 50814, 400, 498, 436, 645, 1566, 11, 731, 11, 437, 775, 309, 360, 30, 51064, 50914, 1042, 11, 309, 727, 360, 1340, 13, 51164, 51014, 708, 311, 1080, 4334, 30, 6953, 4334, 727, 312, 1340, 13, 51264, 51214, 583, 456, 311, 512, 1333, 295, 992, 295, 36239, 3487, 51464, 51414, 291, 727, 751, 466, 295, 577, 360, 561, 13859, 589, 13, 51664, 51514, 2014, 436, 2698, 17608, 5491, 30, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.18505207697550455, "compression_ratio": 1.6919831223628692, "no_caption_prob": 0.0006985676591284573}, {"id": 68, "seek": 19700, "start": 197.0, "end": 202.0, "text": " Are they individual?", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 69, "seek": 19700, "start": 199.0, "end": 204.0, "text": " You can talk about these patterns of how people organize,", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 70, "seek": 19700, "start": 202.0, "end": 207.0, "text": " even if you don't know what they're organizing to do.", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 71, "seek": 19700, "start": 205.0, "end": 210.0, "text": " And in a sense, these sort of functional patterns,", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 72, "seek": 19700, "start": 208.0, "end": 213.0, "text": " it's a similar thing.", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 73, "seek": 19700, "start": 209.0, "end": 214.0, "text": " They have sort of metasemantics almost.", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 74, "seek": 19700, "start": 213.0, "end": 218.0, "text": " Do you think that's a fair description?", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 75, "seek": 19700, "start": 215.0, "end": 220.0, "text": " I would agree.", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 76, "seek": 19700, "start": 216.0, "end": 221.0, "text": " These things often, I think, are so abstract,", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 77, "seek": 19700, "start": 221.0, "end": 226.0, "text": " it's hard to describe them outside of their very formal definitions.", "tokens": [50364, 2014, 436, 2609, 30, 50614, 50464, 509, 393, 751, 466, 613, 8294, 295, 577, 561, 13859, 11, 50714, 50614, 754, 498, 291, 500, 380, 458, 437, 436, 434, 17608, 281, 360, 13, 50864, 50764, 400, 294, 257, 2020, 11, 613, 1333, 295, 11745, 8294, 11, 51014, 50914, 309, 311, 257, 2531, 551, 13, 51164, 50964, 814, 362, 1333, 295, 1131, 296, 443, 45298, 1920, 13, 51214, 51164, 1144, 291, 519, 300, 311, 257, 3143, 3855, 30, 51414, 51264, 286, 576, 3986, 13, 51514, 51314, 1981, 721, 2049, 11, 286, 519, 11, 366, 370, 12649, 11, 51564, 51564, 309, 311, 1152, 281, 6786, 552, 2380, 295, 641, 588, 9860, 21988, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.10704567557887028, "compression_ratio": 1.6147859922178989, "no_caption_prob": 3.373677463969216e-05}, {"id": 78, "seek": 22600, "start": 226.0, "end": 231.0, "text": " When we get a little bit more accessible,", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 79, "seek": 22600, "start": 228.0, "end": 233.0, "text": " we end up having to hand wave a little bit.", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 80, "seek": 22600, "start": 232.0, "end": 237.0, "text": " And then we have an approximation,", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 81, "seek": 22600, "start": 235.0, "end": 240.0, "text": " which works in many, but not all cases.", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 82, "seek": 22600, "start": 239.0, "end": 244.0, "text": " It's something that if you want to explain,", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 83, "seek": 22600, "start": 241.0, "end": 246.0, "text": " you usually have to go with a concrete example", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 84, "seek": 22600, "start": 244.0, "end": 249.0, "text": " right from the start to get it across.", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 85, "seek": 22600, "start": 247.0, "end": 252.0, "text": " And then you try to generalize, oh, you've got this pattern.", "tokens": [50364, 1133, 321, 483, 257, 707, 857, 544, 9515, 11, 50614, 50464, 321, 917, 493, 1419, 281, 1011, 5772, 257, 707, 857, 13, 50714, 50664, 400, 550, 321, 362, 364, 28023, 11, 50914, 50814, 597, 1985, 294, 867, 11, 457, 406, 439, 3331, 13, 51064, 51014, 467, 311, 746, 300, 498, 291, 528, 281, 2903, 11, 51264, 51114, 291, 2673, 362, 281, 352, 365, 257, 9859, 1365, 51364, 51264, 558, 490, 264, 722, 281, 483, 309, 2108, 13, 51514, 51414, 400, 550, 291, 853, 281, 2674, 1125, 11, 1954, 11, 291, 600, 658, 341, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.1379130296032838, "compression_ratio": 1.5739910313901346, "no_caption_prob": 3.0240735213737935e-05}, {"id": 86, "seek": 25200, "start": 252.0, "end": 257.0, "text": " This is how it works for lists.", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 87, "seek": 25200, "start": 254.0, "end": 259.0, "text": " And then, oh, you can also apply it to maybe,", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 88, "seek": 25200, "start": 256.0, "end": 261.0, "text": " or you can also apply it to results.", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 89, "seek": 25200, "start": 259.0, "end": 264.0, "text": " I think as a teaching method, that is absolutely the way to go.", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 90, "seek": 25200, "start": 262.0, "end": 267.0, "text": " It's going to take a while before you can start seeing", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 91, "seek": 25200, "start": 265.0, "end": 270.0, "text": " what the greater pattern is and what is part and not part of the pattern.", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 92, "seek": 25200, "start": 270.0, "end": 275.0, "text": " So for example, you're looking at and then on maybes", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 93, "seek": 25200, "start": 273.0, "end": 278.0, "text": " and then on results, and you might think,", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 94, "seek": 25200, "start": 275.0, "end": 280.0, "text": " oh, and then is a pattern for following the happy path.", "tokens": [50364, 639, 307, 577, 309, 1985, 337, 14511, 13, 50614, 50464, 400, 550, 11, 1954, 11, 291, 393, 611, 3079, 309, 281, 1310, 11, 50714, 50564, 420, 291, 393, 611, 3079, 309, 281, 3542, 13, 50814, 50714, 286, 519, 382, 257, 4571, 3170, 11, 300, 307, 3122, 264, 636, 281, 352, 13, 50964, 50864, 467, 311, 516, 281, 747, 257, 1339, 949, 291, 393, 722, 2577, 51114, 51014, 437, 264, 5044, 5102, 307, 293, 437, 307, 644, 293, 406, 644, 295, 264, 5102, 13, 51264, 51264, 407, 337, 1365, 11, 291, 434, 1237, 412, 293, 550, 322, 815, 6446, 51514, 51414, 293, 550, 322, 3542, 11, 293, 291, 1062, 519, 11, 51664, 51514, 1954, 11, 293, 550, 307, 257, 5102, 337, 3480, 264, 2055, 3100, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1106095646702966, "compression_ratio": 1.846774193548387, "no_caption_prob": 0.00030055418028496206}, {"id": 95, "seek": 28000, "start": 280.0, "end": 285.0, "text": " But then you look at and then on a random generator", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 96, "seek": 28000, "start": 284.0, "end": 289.0, "text": " and there is not really the concept of a happy path.", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 97, "seek": 28000, "start": 287.0, "end": 292.0, "text": " And so now your approximation has kind of broken.", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 98, "seek": 28000, "start": 289.0, "end": 294.0, "text": " So now you have to find something else", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 99, "seek": 28000, "start": 291.0, "end": 296.0, "text": " that can include the way random does it.", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 100, "seek": 28000, "start": 293.0, "end": 298.0, "text": " And then you have to find a way that includes the way list does it.", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 101, "seek": 28000, "start": 296.0, "end": 301.0, "text": " And every time you learn a different one,", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 102, "seek": 28000, "start": 298.0, "end": 303.0, "text": " you start broadening a little bit that understanding.", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 103, "seek": 28000, "start": 300.0, "end": 305.0, "text": " And I think it's okay to have approximations", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 104, "seek": 28000, "start": 302.0, "end": 307.0, "text": " that are good in certain cases and not in others,", "tokens": [50364, 583, 550, 291, 574, 412, 293, 550, 322, 257, 4974, 19265, 50614, 50564, 293, 456, 307, 406, 534, 264, 3410, 295, 257, 2055, 3100, 13, 50814, 50714, 400, 370, 586, 428, 28023, 575, 733, 295, 5463, 13, 50964, 50814, 407, 586, 291, 362, 281, 915, 746, 1646, 51064, 50914, 300, 393, 4090, 264, 636, 4974, 775, 309, 13, 51164, 51014, 400, 550, 291, 362, 281, 915, 257, 636, 300, 5974, 264, 636, 1329, 775, 309, 13, 51264, 51164, 400, 633, 565, 291, 1466, 257, 819, 472, 11, 51414, 51264, 291, 722, 4152, 4559, 257, 707, 857, 300, 3701, 13, 51514, 51364, 400, 286, 519, 309, 311, 1392, 281, 362, 8542, 763, 51614, 51464, 300, 366, 665, 294, 1629, 3331, 293, 406, 294, 2357, 11, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.06469468772411346, "compression_ratio": 1.825925925925926, "no_caption_prob": 1.1478649867058266e-05}, {"id": 105, "seek": 30700, "start": 307.0, "end": 312.0, "text": " because that's how we build our understanding,", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 106, "seek": 30700, "start": 309.0, "end": 314.0, "text": " how we build mental models.", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 107, "seek": 30700, "start": 310.0, "end": 315.0, "text": " For lists and then would be concat map, right?", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 108, "seek": 30700, "start": 314.0, "end": 319.0, "text": " Yes, that's correct.", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 109, "seek": 30700, "start": 315.0, "end": 320.0, "text": " Yeah, I feel like result and then,", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 110, "seek": 30700, "start": 317.0, "end": 322.0, "text": " result dot and then and list dot concat map", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 111, "seek": 30700, "start": 321.0, "end": 326.0, "text": " have two things very differently.", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 112, "seek": 30700, "start": 324.0, "end": 329.0, "text": " The type signature looks the same,", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 113, "seek": 30700, "start": 326.0, "end": 331.0, "text": " but otherwise it's pretty much the only thing that is the same,", "tokens": [50364, 570, 300, 311, 577, 321, 1322, 527, 3701, 11, 50614, 50464, 577, 321, 1322, 4973, 5245, 13, 50714, 50514, 1171, 14511, 293, 550, 576, 312, 1588, 267, 4471, 11, 558, 30, 50764, 50714, 1079, 11, 300, 311, 3006, 13, 50964, 50764, 865, 11, 286, 841, 411, 1874, 293, 550, 11, 51014, 50864, 1874, 5893, 293, 550, 293, 1329, 5893, 1588, 267, 4471, 51114, 51064, 362, 732, 721, 588, 7614, 13, 51314, 51214, 440, 2010, 13397, 1542, 264, 912, 11, 51464, 51314, 457, 5911, 309, 311, 1238, 709, 264, 787, 551, 300, 307, 264, 912, 11, 51564, 51614], "temperature": 0.0, "avg_logprob": -0.1768347229620423, "compression_ratio": 1.6465116279069767, "no_caption_prob": 8.749855624046177e-05}, {"id": 114, "seek": 33100, "start": 331.0, "end": 336.0, "text": " the same like the laws around it and the type signature.", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 115, "seek": 33100, "start": 335.0, "end": 340.0, "text": " But what it does and why it does it are very different.", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 116, "seek": 33100, "start": 339.0, "end": 344.0, "text": " So I feel like it's hard to explain like,", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 117, "seek": 33100, "start": 341.0, "end": 346.0, "text": " why would you reach for this?", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 118, "seek": 33100, "start": 344.0, "end": 349.0, "text": " And it's more like, well, this is useful function", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 119, "seek": 33100, "start": 347.0, "end": 352.0, "text": " and it has this type signature.", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 120, "seek": 33100, "start": 349.0, "end": 354.0, "text": " And then, well, result has the same one.", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 121, "seek": 33100, "start": 352.0, "end": 357.0, "text": " It just you don't you just don't use it for the same thing.", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 122, "seek": 33100, "start": 355.0, "end": 360.0, "text": " But it behaves somewhat alike.", "tokens": [50364, 264, 912, 411, 264, 6064, 926, 309, 293, 264, 2010, 13397, 13, 50614, 50564, 583, 437, 309, 775, 293, 983, 309, 775, 309, 366, 588, 819, 13, 50814, 50764, 407, 286, 841, 411, 309, 311, 1152, 281, 2903, 411, 11, 51014, 50864, 983, 576, 291, 2524, 337, 341, 30, 51114, 51014, 400, 309, 311, 544, 411, 11, 731, 11, 341, 307, 4420, 2445, 51264, 51164, 293, 309, 575, 341, 2010, 13397, 13, 51414, 51264, 400, 550, 11, 731, 11, 1874, 575, 264, 912, 472, 13, 51514, 51414, 467, 445, 291, 500, 380, 291, 445, 500, 380, 764, 309, 337, 264, 912, 551, 13, 51664, 51564, 583, 309, 36896, 8344, 20025, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.11614889891251273, "compression_ratio": 1.7456140350877194, "no_caption_prob": 0.00018520079902373254}, {"id": 123, "seek": 36000, "start": 360.0, "end": 365.0, "text": " And behaviors that are true across all of these.", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 124, "seek": 36000, "start": 362.0, "end": 367.0, "text": " And that's where some of the your intuitions can come across really nicely.", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 125, "seek": 36000, "start": 367.0, "end": 372.0, "text": " And you can build other things on top of them,", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 126, "seek": 36000, "start": 370.0, "end": 375.0, "text": " regardless of whether it's on maybe or list,", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 127, "seek": 36000, "start": 373.0, "end": 378.0, "text": " because certain things hold true.", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 128, "seek": 36000, "start": 375.0, "end": 380.0, "text": " So a classic one that you'll see is, for example, flattening a nested maybe.", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 129, "seek": 36000, "start": 381.0, "end": 386.0, "text": " You would do and then identity.", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 130, "seek": 36000, "start": 383.0, "end": 388.0, "text": " That is the thing that is true for any and then function.", "tokens": [50364, 400, 15501, 300, 366, 2074, 2108, 439, 295, 613, 13, 50614, 50464, 400, 300, 311, 689, 512, 295, 264, 428, 16224, 626, 393, 808, 2108, 534, 9594, 13, 50714, 50714, 400, 291, 393, 1322, 661, 721, 322, 1192, 295, 552, 11, 50964, 50864, 10060, 295, 1968, 309, 311, 322, 1310, 420, 1329, 11, 51114, 51014, 570, 1629, 721, 1797, 2074, 13, 51264, 51114, 407, 257, 7230, 472, 300, 291, 603, 536, 307, 11, 337, 1365, 11, 24183, 278, 257, 15646, 292, 1310, 13, 51364, 51414, 509, 576, 360, 293, 550, 6575, 13, 51664, 51514, 663, 307, 264, 551, 300, 307, 2074, 337, 604, 293, 550, 2445, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.10554591170302383, "compression_ratio": 1.6814516129032258, "no_caption_prob": 1.221893762703985e-05}, {"id": 131, "seek": 38800, "start": 388.0, "end": 393.0, "text": " So if you want to do a list and you want to flatten it,", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 132, "seek": 38800, "start": 390.0, "end": 395.0, "text": " you can do concat map identity.", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 133, "seek": 38800, "start": 392.0, "end": 397.0, "text": " You want to flatten the results and then identity.", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 134, "seek": 38800, "start": 395.0, "end": 400.0, "text": " So that holds true for all of them.", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 135, "seek": 38800, "start": 397.0, "end": 402.0, "text": " Right. That's like a law for that pattern.", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 136, "seek": 38800, "start": 399.0, "end": 404.0, "text": " If we were to get into the jargon.", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 137, "seek": 38800, "start": 402.0, "end": 407.0, "text": " Yes, yes.", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 138, "seek": 38800, "start": 403.0, "end": 408.0, "text": " And I think one thing that's interesting to note with these things", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 139, "seek": 38800, "start": 405.0, "end": 410.0, "text": " is that they're like really formal definitions.", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 140, "seek": 38800, "start": 409.0, "end": 414.0, "text": " Typically are a combination of some base description of", "tokens": [50364, 407, 498, 291, 528, 281, 360, 257, 1329, 293, 291, 528, 281, 24183, 309, 11, 50614, 50464, 291, 393, 360, 1588, 267, 4471, 6575, 13, 50714, 50564, 509, 528, 281, 24183, 264, 3542, 293, 550, 6575, 13, 50814, 50714, 407, 300, 9190, 2074, 337, 439, 295, 552, 13, 50964, 50814, 1779, 13, 663, 311, 411, 257, 2101, 337, 300, 5102, 13, 51064, 50914, 759, 321, 645, 281, 483, 666, 264, 15181, 10660, 13, 51164, 51064, 1079, 11, 2086, 13, 51314, 51114, 400, 286, 519, 472, 551, 300, 311, 1880, 281, 3637, 365, 613, 721, 51364, 51214, 307, 300, 436, 434, 411, 534, 9860, 21988, 13, 51464, 51414, 23129, 366, 257, 6562, 295, 512, 3096, 3855, 295, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14335392316182455, "compression_ratio": 1.7182539682539681, "no_caption_prob": 4.908556002192199e-05}, {"id": 141, "seek": 41400, "start": 414.0, "end": 419.0, "text": " I said maybe it includes a type.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 142, "seek": 41400, "start": 415.0, "end": 420.0, "text": " I forget if you have to have a type.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 143, "seek": 41400, "start": 417.0, "end": 422.0, "text": " But typically it's one or two functions.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 144, "seek": 41400, "start": 419.0, "end": 424.0, "text": " And then what they call laws.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 145, "seek": 41400, "start": 421.0, "end": 426.0, "text": " So things that must hold true for that function,", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 146, "seek": 41400, "start": 424.0, "end": 429.0, "text": " regardless of what you pass into it.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 147, "seek": 41400, "start": 426.0, "end": 431.0, "text": " Yeah. So things like associativity and identity", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 148, "seek": 41400, "start": 429.0, "end": 434.0, "text": " and sort of like laws of logic and mathematics.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 149, "seek": 41400, "start": 432.0, "end": 437.0, "text": " And these things have their foundations in these more.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 150, "seek": 41400, "start": 436.0, "end": 441.0, "text": " They're not just for writing computer programs.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 151, "seek": 41400, "start": 438.0, "end": 443.0, "text": " They're for logic and reasoning and mathematics.", "tokens": [50364, 286, 848, 1310, 309, 5974, 257, 2010, 13, 50614, 50414, 286, 2870, 498, 291, 362, 281, 362, 257, 2010, 13, 50664, 50514, 583, 5850, 309, 311, 472, 420, 732, 6828, 13, 50764, 50614, 400, 550, 437, 436, 818, 6064, 13, 50864, 50714, 407, 721, 300, 1633, 1797, 2074, 337, 300, 2445, 11, 50964, 50864, 10060, 295, 437, 291, 1320, 666, 309, 13, 51114, 50964, 865, 13, 407, 721, 411, 4180, 30142, 293, 6575, 51214, 51114, 293, 1333, 295, 411, 6064, 295, 9952, 293, 18666, 13, 51364, 51264, 400, 613, 721, 362, 641, 22467, 294, 613, 544, 13, 51514, 51464, 814, 434, 406, 445, 337, 3579, 3820, 4268, 13, 51714, 51564, 814, 434, 337, 9952, 293, 21577, 293, 18666, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10866448937392817, "compression_ratio": 1.788679245283019, "no_caption_prob": 6.814552762079984e-05}, {"id": 152, "seek": 44300, "start": 443.0, "end": 448.0, "text": " Understanding where the relationship with mathematics comes from.", "tokens": [50364, 36858, 689, 264, 2480, 365, 18666, 1487, 490, 13, 50614, 50564, 1436, 411, 291, 600, 658, 18666, 597, 1985, 365, 21989, 50814, 50814, 293, 992, 13667, 11, 286, 2041, 13, 51064, 50964, 400, 550, 291, 600, 658, 815, 6446, 293, 550, 13, 51214, 51214, 400, 411, 456, 311, 512, 4984, 4079, 300, 286, 478, 5361, 51464, 51464, 293, 500, 380, 458, 689, 309, 307, 420, 437, 309, 307, 13, 51714, 51564, 407, 264, 1379, 1002, 295, 18666, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.14498376257625628, "compression_ratio": 1.6464646464646464, "no_caption_prob": 0.00012531998800113797}, {"id": 153, "seek": 44300, "start": 447.0, "end": 452.0, "text": " Because like you've got mathematics which works with algebra", "tokens": [50364, 36858, 689, 264, 2480, 365, 18666, 1487, 490, 13, 50614, 50564, 1436, 411, 291, 600, 658, 18666, 597, 1985, 365, 21989, 50814, 50814, 293, 992, 13667, 11, 286, 2041, 13, 51064, 50964, 400, 550, 291, 600, 658, 815, 6446, 293, 550, 13, 51214, 51214, 400, 411, 456, 311, 512, 4984, 4079, 300, 286, 478, 5361, 51464, 51464, 293, 500, 380, 458, 689, 309, 307, 420, 437, 309, 307, 13, 51714, 51564, 407, 264, 1379, 1002, 295, 18666, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.14498376257625628, "compression_ratio": 1.6464646464646464, "no_caption_prob": 0.00012531998800113797}, {"id": 154, "seek": 44300, "start": 452.0, "end": 457.0, "text": " and set theories, I guess.", "tokens": [50364, 36858, 689, 264, 2480, 365, 18666, 1487, 490, 13, 50614, 50564, 1436, 411, 291, 600, 658, 18666, 597, 1985, 365, 21989, 50814, 50814, 293, 992, 13667, 11, 286, 2041, 13, 51064, 50964, 400, 550, 291, 600, 658, 815, 6446, 293, 550, 13, 51214, 51214, 400, 411, 456, 311, 512, 4984, 4079, 300, 286, 478, 5361, 51464, 51464, 293, 500, 380, 458, 689, 309, 307, 420, 437, 309, 307, 13, 51714, 51564, 407, 264, 1379, 1002, 295, 18666, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.14498376257625628, "compression_ratio": 1.6464646464646464, "no_caption_prob": 0.00012531998800113797}, {"id": 155, "seek": 44300, "start": 455.0, "end": 460.0, "text": " And then you've got maybes and then.", "tokens": [50364, 36858, 689, 264, 2480, 365, 18666, 1487, 490, 13, 50614, 50564, 1436, 411, 291, 600, 658, 18666, 597, 1985, 365, 21989, 50814, 50814, 293, 992, 13667, 11, 286, 2041, 13, 51064, 50964, 400, 550, 291, 600, 658, 815, 6446, 293, 550, 13, 51214, 51214, 400, 411, 456, 311, 512, 4984, 4079, 300, 286, 478, 5361, 51464, 51464, 293, 500, 380, 458, 689, 309, 307, 420, 437, 309, 307, 13, 51714, 51564, 407, 264, 1379, 1002, 295, 18666, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.14498376257625628, "compression_ratio": 1.6464646464646464, "no_caption_prob": 0.00012531998800113797}, {"id": 156, "seek": 44300, "start": 460.0, "end": 465.0, "text": " And like there's some connection somewhere that I'm missing", "tokens": [50364, 36858, 689, 264, 2480, 365, 18666, 1487, 490, 13, 50614, 50564, 1436, 411, 291, 600, 658, 18666, 597, 1985, 365, 21989, 50814, 50814, 293, 992, 13667, 11, 286, 2041, 13, 51064, 50964, 400, 550, 291, 600, 658, 815, 6446, 293, 550, 13, 51214, 51214, 400, 411, 456, 311, 512, 4984, 4079, 300, 286, 478, 5361, 51464, 51464, 293, 500, 380, 458, 689, 309, 307, 420, 437, 309, 307, 13, 51714, 51564, 407, 264, 1379, 1002, 295, 18666, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.14498376257625628, "compression_ratio": 1.6464646464646464, "no_caption_prob": 0.00012531998800113797}, {"id": 157, "seek": 44300, "start": 465.0, "end": 470.0, "text": " and don't know where it is or what it is.", "tokens": [50364, 36858, 689, 264, 2480, 365, 18666, 1487, 490, 13, 50614, 50564, 1436, 411, 291, 600, 658, 18666, 597, 1985, 365, 21989, 50814, 50814, 293, 992, 13667, 11, 286, 2041, 13, 51064, 50964, 400, 550, 291, 600, 658, 815, 6446, 293, 550, 13, 51214, 51214, 400, 411, 456, 311, 512, 4984, 4079, 300, 286, 478, 5361, 51464, 51464, 293, 500, 380, 458, 689, 309, 307, 420, 437, 309, 307, 13, 51714, 51564, 407, 264, 1379, 1002, 295, 18666, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.14498376257625628, "compression_ratio": 1.6464646464646464, "no_caption_prob": 0.00012531998800113797}, {"id": 158, "seek": 44300, "start": 467.0, "end": 472.0, "text": " So the whole world of mathematics", "tokens": [50364, 36858, 689, 264, 2480, 365, 18666, 1487, 490, 13, 50614, 50564, 1436, 411, 291, 600, 658, 18666, 597, 1985, 365, 21989, 50814, 50814, 293, 992, 13667, 11, 286, 2041, 13, 51064, 50964, 400, 550, 291, 600, 658, 815, 6446, 293, 550, 13, 51214, 51214, 400, 411, 456, 311, 512, 4984, 4079, 300, 286, 478, 5361, 51464, 51464, 293, 500, 380, 458, 689, 309, 307, 420, 437, 309, 307, 13, 51714, 51564, 407, 264, 1379, 1002, 295, 18666, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.14498376257625628, "compression_ratio": 1.6464646464646464, "no_caption_prob": 0.00012531998800113797}, {"id": 159, "seek": 47200, "start": 472.0, "end": 477.0, "text": " is translating pure numbers.", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 160, "seek": 47200, "start": 474.0, "end": 479.0, "text": " So even if you talk about sets,", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 161, "seek": 47200, "start": 476.0, "end": 481.0, "text": " a function is a transformation from one set to another.", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 162, "seek": 47200, "start": 479.0, "end": 484.0, "text": " Right. So from numbers to strings and strings to numbers.", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 163, "seek": 47200, "start": 483.0, "end": 488.0, "text": " And for instance.", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 164, "seek": 47200, "start": 484.0, "end": 489.0, "text": " Exactly.", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 165, "seek": 47200, "start": 485.0, "end": 490.0, "text": " And now once you start thinking of transformations between sets,", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 166, "seek": 47200, "start": 490.0, "end": 495.0, "text": " that's where some of these more category style things come in.", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 167, "seek": 47200, "start": 495.0, "end": 500.0, "text": " I want to say, and this is getting to the edges of my knowledge", "tokens": [50364, 307, 35030, 6075, 3547, 13, 50614, 50464, 407, 754, 498, 291, 751, 466, 6352, 11, 50714, 50564, 257, 2445, 307, 257, 9887, 490, 472, 992, 281, 1071, 13, 50814, 50714, 1779, 13, 407, 490, 3547, 281, 13985, 293, 13985, 281, 3547, 13, 50964, 50914, 400, 337, 5197, 13, 51164, 50964, 7587, 13, 51214, 51014, 400, 586, 1564, 291, 722, 1953, 295, 34852, 1296, 6352, 11, 51264, 51264, 300, 311, 689, 512, 295, 613, 544, 7719, 3758, 721, 808, 294, 13, 51514, 51514, 286, 528, 281, 584, 11, 293, 341, 307, 1242, 281, 264, 8819, 295, 452, 3601, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1259183411550994, "compression_ratio": 1.672340425531915, "no_caption_prob": 1.8631528291734867e-05}, {"id": 168, "seek": 50000, "start": 500.0, "end": 505.0, "text": " that it's sort of a layer of abstraction", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 169, "seek": 50000, "start": 502.0, "end": 507.0, "text": " on top of the idea of sets and functions as transformation between sets.", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 170, "seek": 50000, "start": 507.0, "end": 512.0, "text": " So there are other mathematical,", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 171, "seek": 50000, "start": 511.0, "end": 516.0, "text": " I'm going to call them objects,", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 172, "seek": 50000, "start": 513.0, "end": 518.0, "text": " that can be transformed into each other", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 173, "seek": 50000, "start": 516.0, "end": 521.0, "text": " with a similar style of relationship that functions and sets have.", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 174, "seek": 50000, "start": 520.0, "end": 525.0, "text": " And category theory is sort of like a meta framework", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 175, "seek": 50000, "start": 523.0, "end": 528.0, "text": " for being like, oh, I don't know, groups are to something.", "tokens": [50364, 300, 309, 311, 1333, 295, 257, 4583, 295, 37765, 50614, 50464, 322, 1192, 295, 264, 1558, 295, 6352, 293, 6828, 382, 9887, 1296, 6352, 13, 50714, 50714, 407, 456, 366, 661, 18894, 11, 50964, 50914, 286, 478, 516, 281, 818, 552, 6565, 11, 51164, 51014, 300, 393, 312, 16894, 666, 1184, 661, 51264, 51164, 365, 257, 2531, 3758, 295, 2480, 300, 6828, 293, 6352, 362, 13, 51414, 51364, 400, 7719, 5261, 307, 1333, 295, 411, 257, 19616, 8388, 51614, 51514, 337, 885, 411, 11, 1954, 11, 286, 500, 380, 458, 11, 3935, 366, 281, 746, 13, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.11034253120422363, "compression_ratio": 1.6680672268907564, "no_caption_prob": 1.1478582564450335e-05}, {"id": 176, "seek": 52800, "start": 528.0, "end": 533.0, "text": " I'm just using random terms here.", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 177, "seek": 52800, "start": 530.0, "end": 535.0, "text": " These things relate to each other in a similar way", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 178, "seek": 52800, "start": 533.0, "end": 538.0, "text": " as functions and sets relate to each other.", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 179, "seek": 52800, "start": 537.0, "end": 542.0, "text": " It's my very fuzzy understanding", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 180, "seek": 52800, "start": 539.0, "end": 544.0, "text": " of what mathematical category theory is.", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 181, "seek": 52800, "start": 545.0, "end": 550.0, "text": " My understanding is also that in the programming world,", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 182, "seek": 52800, "start": 549.0, "end": 554.0, "text": " we've kind of diverged a little bit from that", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 183, "seek": 52800, "start": 552.0, "end": 557.0, "text": " and that what we tend to call category theory", "tokens": [50364, 286, 478, 445, 1228, 4974, 2115, 510, 13, 50614, 50464, 1981, 721, 10961, 281, 1184, 661, 294, 257, 2531, 636, 50714, 50614, 382, 6828, 293, 6352, 10961, 281, 1184, 661, 13, 50864, 50814, 467, 311, 452, 588, 34710, 3701, 51064, 50914, 295, 437, 18894, 7719, 5261, 307, 13, 51164, 51214, 1222, 3701, 307, 611, 300, 294, 264, 9410, 1002, 11, 51464, 51414, 321, 600, 733, 295, 18558, 3004, 257, 707, 857, 490, 300, 51664, 51564, 293, 300, 437, 321, 3928, 281, 818, 7719, 5261, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.10952564803036777, "compression_ratio": 1.674641148325359, "no_caption_prob": 4.710878783953376e-06}, {"id": 184, "seek": 55700, "start": 557.0, "end": 562.0, "text": " is mathematical category theory.", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 185, "seek": 55700, "start": 560.0, "end": 565.0, "text": " Do you have examples where it doesn't map cleanly?", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 186, "seek": 55700, "start": 563.0, "end": 568.0, "text": " No, because I don't actually understand", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 187, "seek": 55700, "start": 566.0, "end": 571.0, "text": " mathematical category theory.", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 188, "seek": 55700, "start": 568.0, "end": 573.0, "text": " Okay, that's fair.", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 189, "seek": 55700, "start": 571.0, "end": 576.0, "text": " One of the things I wonder about is", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 190, "seek": 55700, "start": 573.0, "end": 578.0, "text": " how much would these things naturally emerge", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 191, "seek": 55700, "start": 576.0, "end": 581.0, "text": " if there was no such thing as this sort of", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 192, "seek": 55700, "start": 580.0, "end": 585.0, "text": " history of category theory and all these terms and concepts", "tokens": [50364, 307, 18894, 7719, 5261, 13, 50614, 50514, 1144, 291, 362, 5110, 689, 309, 1177, 380, 4471, 2541, 356, 30, 50764, 50664, 883, 11, 570, 286, 500, 380, 767, 1223, 50914, 50814, 18894, 7719, 5261, 13, 51064, 50914, 1033, 11, 300, 311, 3143, 13, 51164, 51064, 1485, 295, 264, 721, 286, 2441, 466, 307, 51314, 51164, 577, 709, 576, 613, 721, 8195, 21511, 51414, 51314, 498, 456, 390, 572, 1270, 551, 382, 341, 1333, 295, 51564, 51514, 2503, 295, 7719, 5261, 293, 439, 613, 2115, 293, 10392, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.1071024047003852, "compression_ratio": 1.7033492822966507, "no_caption_prob": 9.027773921843618e-05}, {"id": 193, "seek": 58500, "start": 585.0, "end": 590.0, "text": " that have been around over the years?", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 194, "seek": 58500, "start": 587.0, "end": 592.0, "text": " And all you had was the Elm language,", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 195, "seek": 58500, "start": 589.0, "end": 594.0, "text": " and you had those basic building blocks", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 196, "seek": 58500, "start": 591.0, "end": 596.0, "text": " for creating programs.", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 197, "seek": 58500, "start": 593.0, "end": 598.0, "text": " Would the same patterns emerge naturally,", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 198, "seek": 58500, "start": 596.0, "end": 601.0, "text": " or are they somehow tied to the fact", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 199, "seek": 58500, "start": 599.0, "end": 604.0, "text": " that we have all these ideas that we developed before", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 200, "seek": 58500, "start": 602.0, "end": 607.0, "text": " and we try to apply them to this new context?", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 201, "seek": 58500, "start": 605.0, "end": 610.0, "text": " So someone said, let there be Elm,", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 202, "seek": 58500, "start": 607.0, "end": 612.0, "text": " and then you invent the future?", "tokens": [50364, 300, 362, 668, 926, 670, 264, 924, 30, 50614, 50464, 400, 439, 291, 632, 390, 264, 2699, 76, 2856, 11, 50714, 50564, 293, 291, 632, 729, 3875, 2390, 8474, 50814, 50664, 337, 4084, 4268, 13, 50914, 50764, 6068, 264, 912, 8294, 21511, 8195, 11, 51014, 50914, 420, 366, 436, 6063, 9601, 281, 264, 1186, 51164, 51064, 300, 321, 362, 439, 613, 3487, 300, 321, 4743, 949, 51314, 51214, 293, 321, 853, 281, 3079, 552, 281, 341, 777, 4319, 30, 51464, 51364, 407, 1580, 848, 11, 718, 456, 312, 2699, 76, 11, 51614, 51464, 293, 550, 291, 7962, 264, 2027, 30, 51714, 51664], "temperature": 0.0, "avg_logprob": -0.11948868861565223, "compression_ratio": 1.6134453781512605, "no_caption_prob": 6.921867316123098e-05}, {"id": 203, "seek": 61200, "start": 612.0, "end": 617.0, "text": " My guess is that they would still emerge,", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 204, "seek": 61200, "start": 615.0, "end": 620.0, "text": " particularly something like a map.", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 205, "seek": 61200, "start": 617.0, "end": 622.0, "text": " It's such a common style of operation", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 206, "seek": 61200, "start": 620.0, "end": 625.0, "text": " that someone would write that abstraction", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 207, "seek": 61200, "start": 622.0, "end": 627.0, "text": " because they're tired of writing a case expression", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 208, "seek": 61200, "start": 625.0, "end": 630.0, "text": " to unwrap, do a thing, rewrap.", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 209, "seek": 61200, "start": 628.0, "end": 633.0, "text": " Yep, exactly.", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 210, "seek": 61200, "start": 630.0, "end": 635.0, "text": " That's my suspicion as well.", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 211, "seek": 61200, "start": 632.0, "end": 637.0, "text": " And if you think about things like,", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 212, "seek": 61200, "start": 635.0, "end": 640.0, "text": " your way of doing control flow is,", "tokens": [50364, 1222, 2041, 307, 300, 436, 576, 920, 21511, 11, 50614, 50514, 4098, 746, 411, 257, 4471, 13, 50764, 50614, 467, 311, 1270, 257, 2689, 3758, 295, 6916, 50864, 50764, 300, 1580, 576, 2464, 300, 37765, 51014, 50864, 570, 436, 434, 5868, 295, 3579, 257, 1389, 6114, 51114, 51014, 281, 14853, 4007, 11, 360, 257, 551, 11, 319, 86, 4007, 13, 51264, 51164, 7010, 11, 2293, 13, 51414, 51264, 663, 311, 452, 32020, 382, 731, 13, 51514, 51364, 400, 498, 291, 519, 466, 721, 411, 11, 51614, 51514, 428, 636, 295, 884, 1969, 3095, 307, 11, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.09100549871271307, "compression_ratio": 1.543859649122807, "no_caption_prob": 8.219561277655885e-05}, {"id": 213, "seek": 64000, "start": 640.0, "end": 645.0, "text": " you have primitive expressions and case expressions", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 214, "seek": 64000, "start": 642.0, "end": 647.0, "text": " and function calls, basically.", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 215, "seek": 64000, "start": 645.0, "end": 650.0, "text": " You don't have any exception handling", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 216, "seek": 64000, "start": 648.0, "end": 653.0, "text": " in that sort of thing.", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 217, "seek": 64000, "start": 650.0, "end": 655.0, "text": " Well, okay, so then you need some sort of way to do,", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 218, "seek": 64000, "start": 653.0, "end": 658.0, "text": " and then it's going to pretty naturally emerge", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 219, "seek": 64000, "start": 655.0, "end": 660.0, "text": " from those basic ingredients, it seems.", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 220, "seek": 64000, "start": 658.0, "end": 663.0, "text": " And I think that that gets at the conversation today,", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 221, "seek": 64000, "start": 662.0, "end": 667.0, "text": " is how can we sort of understand", "tokens": [50364, 291, 362, 28540, 15277, 293, 1389, 15277, 50614, 50464, 293, 2445, 5498, 11, 1936, 13, 50714, 50614, 509, 500, 380, 362, 604, 11183, 13175, 50864, 50764, 294, 300, 1333, 295, 551, 13, 51014, 50864, 1042, 11, 1392, 11, 370, 550, 291, 643, 512, 1333, 295, 636, 281, 360, 11, 51114, 51014, 293, 550, 309, 311, 516, 281, 1238, 8195, 21511, 51264, 51114, 490, 729, 3875, 6952, 11, 309, 2544, 13, 51364, 51264, 400, 286, 519, 300, 300, 2170, 412, 264, 3761, 965, 11, 51514, 51464, 307, 577, 393, 321, 1333, 295, 1223, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.16458731889724731, "compression_ratio": 1.6371681415929205, "no_caption_prob": 6.643360393354669e-06}, {"id": 222, "seek": 66700, "start": 667.0, "end": 672.0, "text": " the pattern rather than just,", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 223, "seek": 66700, "start": 669.0, "end": 674.0, "text": " all right, I do end then, and I do that over and over.", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 224, "seek": 66700, "start": 672.0, "end": 677.0, "text": " How can we understand that as the relationship", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 225, "seek": 66700, "start": 675.0, "end": 680.0, "text": " between how you do that with a list", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 226, "seek": 66700, "start": 677.0, "end": 682.0, "text": " and how you do that with maybe", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 227, "seek": 66700, "start": 679.0, "end": 684.0, "text": " and how you do that with a result?", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 228, "seek": 66700, "start": 681.0, "end": 686.0, "text": " I think what Jeroen shared earlier", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 229, "seek": 66700, "start": 683.0, "end": 688.0, "text": " about working with each individual type,", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 230, "seek": 66700, "start": 686.0, "end": 691.0, "text": " and then as you work with them,", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 231, "seek": 66700, "start": 688.0, "end": 693.0, "text": " you start understanding or seeing the greater pattern.", "tokens": [50364, 264, 5102, 2831, 813, 445, 11, 50614, 50464, 439, 558, 11, 286, 360, 917, 550, 11, 293, 286, 360, 300, 670, 293, 670, 13, 50714, 50614, 1012, 393, 321, 1223, 300, 382, 264, 2480, 50864, 50764, 1296, 577, 291, 360, 300, 365, 257, 1329, 51014, 50864, 293, 577, 291, 360, 300, 365, 1310, 51114, 50964, 293, 577, 291, 360, 300, 365, 257, 1874, 30, 51214, 51064, 286, 519, 437, 508, 2032, 268, 5507, 3071, 51314, 51164, 466, 1364, 365, 1184, 2609, 2010, 11, 51414, 51314, 293, 550, 382, 291, 589, 365, 552, 11, 51564, 51414, 291, 722, 3701, 420, 2577, 264, 5044, 5102, 13, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.09264820593374747, "compression_ratio": 1.8248847926267282, "no_caption_prob": 9.027556370710954e-05}, {"id": 232, "seek": 69300, "start": 693.0, "end": 698.0, "text": " That's the way to learn it.", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 233, "seek": 69300, "start": 696.0, "end": 701.0, "text": " And then after that, where it gets interesting is,", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 234, "seek": 69300, "start": 698.0, "end": 703.0, "text": " once you've done three or four,", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 235, "seek": 69300, "start": 700.0, "end": 705.0, "text": " you can start thinking when you move to a different domain", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 236, "seek": 69300, "start": 704.0, "end": 709.0, "text": " that has these same functions.", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 237, "seek": 69300, "start": 706.0, "end": 711.0, "text": " I already know how and then works on maybes and lists", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 238, "seek": 69300, "start": 711.0, "end": 716.0, "text": " and JSON decoders.", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 239, "seek": 69300, "start": 713.0, "end": 718.0, "text": " I wonder if it works the same on tasks.", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 240, "seek": 69300, "start": 717.0, "end": 722.0, "text": " And then at that point,", "tokens": [50364, 663, 311, 264, 636, 281, 1466, 309, 13, 50614, 50514, 400, 550, 934, 300, 11, 689, 309, 2170, 1880, 307, 11, 50764, 50614, 1564, 291, 600, 1096, 1045, 420, 1451, 11, 50864, 50714, 291, 393, 722, 1953, 562, 291, 1286, 281, 257, 819, 9274, 50964, 50914, 300, 575, 613, 912, 6828, 13, 51164, 51014, 286, 1217, 458, 577, 293, 550, 1985, 322, 815, 6446, 293, 14511, 51264, 51264, 293, 31828, 979, 378, 433, 13, 51514, 51364, 286, 2441, 498, 309, 1985, 264, 912, 322, 9608, 13, 51614, 51564, 400, 550, 412, 300, 935, 11, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09201208426027882, "compression_ratio": 1.5674418604651164, "no_caption_prob": 0.00011590967187657952}, {"id": 241, "seek": 72200, "start": 722.0, "end": 727.0, "text": " I think that's what understanding really was.", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 242, "seek": 72200, "start": 724.0, "end": 729.0, "text": " And I've had that sort of magical experience", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 243, "seek": 72200, "start": 726.0, "end": 731.0, "text": " of helping out someone in the Elm Slack.", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 244, "seek": 72200, "start": 730.0, "end": 735.0, "text": " I think this was with the test fuzzers", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 245, "seek": 72200, "start": 735.0, "end": 740.0, "text": " for writing fuzz tests.", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 246, "seek": 72200, "start": 737.0, "end": 742.0, "text": " And I'd never used the library", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 247, "seek": 72200, "start": 739.0, "end": 744.0, "text": " if someone was asking for help.", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 248, "seek": 72200, "start": 740.0, "end": 745.0, "text": " And I was able to solve their problem", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 249, "seek": 72200, "start": 743.0, "end": 748.0, "text": " even though I'd never used the library,", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 250, "seek": 72200, "start": 744.0, "end": 749.0, "text": " did not know how fuzzers worked", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 251, "seek": 72200, "start": 746.0, "end": 751.0, "text": " because I knew these patterns.", "tokens": [50364, 286, 519, 300, 311, 437, 3701, 534, 390, 13, 50614, 50464, 400, 286, 600, 632, 300, 1333, 295, 12066, 1752, 50714, 50564, 295, 4315, 484, 1580, 294, 264, 2699, 76, 37211, 13, 50814, 50764, 286, 519, 341, 390, 365, 264, 1500, 283, 16740, 433, 51014, 51014, 337, 3579, 283, 16740, 6921, 13, 51264, 51114, 400, 286, 1116, 1128, 1143, 264, 6405, 51364, 51214, 498, 1580, 390, 3365, 337, 854, 13, 51464, 51264, 400, 286, 390, 1075, 281, 5039, 641, 1154, 51514, 51414, 754, 1673, 286, 1116, 1128, 1143, 264, 6405, 11, 51664, 51464, 630, 406, 458, 577, 283, 16740, 433, 2732, 51714, 51564, 570, 286, 2586, 613, 8294, 13, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.13358108554266196, "compression_ratio": 1.7081545064377683, "no_caption_prob": 1.593656270415522e-05}, {"id": 252, "seek": 75100, "start": 751.0, "end": 756.0, "text": " And I've been using JSON decoders.", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 253, "seek": 75100, "start": 754.0, "end": 759.0, "text": " Yes, it may have been JSON decoders.", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 254, "seek": 75100, "start": 756.0, "end": 761.0, "text": " It may have been random generators.", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 255, "seek": 75100, "start": 759.0, "end": 764.0, "text": " I forget which one I compared it to in my mind.", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 256, "seek": 75100, "start": 762.0, "end": 767.0, "text": " Right.", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 257, "seek": 75100, "start": 763.0, "end": 768.0, "text": " It's a pretty neat mapping", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 258, "seek": 75100, "start": 765.0, "end": 770.0, "text": " from a test fuzzer in Elm to a random generator", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 259, "seek": 75100, "start": 769.0, "end": 774.0, "text": " because I'm pretty sure", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 260, "seek": 75100, "start": 771.0, "end": 776.0, "text": " it's the same thing under the hood.", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 261, "seek": 75100, "start": 772.0, "end": 777.0, "text": " I think you can just pass in a random generator, right?", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 262, "seek": 75100, "start": 775.0, "end": 780.0, "text": " But the same overall pattern applies, of course.", "tokens": [50364, 400, 286, 600, 668, 1228, 31828, 979, 378, 433, 13, 50614, 50514, 1079, 11, 309, 815, 362, 668, 31828, 979, 378, 433, 13, 50764, 50614, 467, 815, 362, 668, 4974, 38662, 13, 50864, 50764, 286, 2870, 597, 472, 286, 5347, 309, 281, 294, 452, 1575, 13, 51014, 50914, 1779, 13, 51164, 50964, 467, 311, 257, 1238, 10654, 18350, 51214, 51064, 490, 257, 1500, 283, 3334, 4527, 294, 2699, 76, 281, 257, 4974, 19265, 51314, 51264, 570, 286, 478, 1238, 988, 51514, 51364, 309, 311, 264, 912, 551, 833, 264, 13376, 13, 51614, 51414, 286, 519, 291, 393, 445, 1320, 294, 257, 4974, 19265, 11, 558, 30, 51664, 51564, 583, 264, 912, 4787, 5102, 13165, 11, 295, 1164, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.16838752246293864, "compression_ratio": 1.6962025316455696, "no_caption_prob": 0.0003514094278216362}, {"id": 263, "seek": 78000, "start": 780.0, "end": 785.0, "text": " I read a couple of explanations of", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 264, "seek": 78000, "start": 783.0, "end": 788.0, "text": " there was one sort of explain it like I'm five type posts", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 265, "seek": 78000, "start": 787.0, "end": 792.0, "text": " that I found kind of interesting.", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 266, "seek": 78000, "start": 789.0, "end": 794.0, "text": " But one of the things it was talking about", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 267, "seek": 78000, "start": 790.0, "end": 795.0, "text": " was it was saying it's a messy world out there.", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 268, "seek": 78000, "start": 793.0, "end": 798.0, "text": " And what if we wanted to create", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 269, "seek": 78000, "start": 796.0, "end": 801.0, "text": " a sort of nice, happy place", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 270, "seek": 78000, "start": 799.0, "end": 804.0, "text": " where we could not think about that messiness,", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 271, "seek": 78000, "start": 801.0, "end": 806.0, "text": " where we could just think about simpler things", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 272, "seek": 78000, "start": 804.0, "end": 809.0, "text": " and then shield ourselves", "tokens": [50364, 286, 1401, 257, 1916, 295, 28708, 295, 50614, 50514, 456, 390, 472, 1333, 295, 2903, 309, 411, 286, 478, 1732, 2010, 12300, 50764, 50714, 300, 286, 1352, 733, 295, 1880, 13, 50964, 50814, 583, 472, 295, 264, 721, 309, 390, 1417, 466, 51064, 50864, 390, 309, 390, 1566, 309, 311, 257, 16191, 1002, 484, 456, 13, 51114, 51014, 400, 437, 498, 321, 1415, 281, 1884, 51264, 51164, 257, 1333, 295, 1481, 11, 2055, 1081, 51414, 51314, 689, 321, 727, 406, 519, 466, 300, 2082, 1324, 11, 51564, 51414, 689, 321, 727, 445, 519, 466, 18587, 721, 51664, 51564, 293, 550, 10257, 4175, 51814, 51664], "temperature": 0.0, "avg_logprob": -0.131203201581847, "compression_ratio": 1.7260869565217392, "no_caption_prob": 0.00011060830001952127}, {"id": 273, "seek": 80900, "start": 809.0, "end": 814.0, "text": " and so it was saying like,", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 274, "seek": 80900, "start": 812.0, "end": 817.0, "text": " if you have a result or like a JSON decoder,", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 275, "seek": 80900, "start": 815.0, "end": 820.0, "text": " there are all these messy things that are happening", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 276, "seek": 80900, "start": 818.0, "end": 823.0, "text": " with the outside world in a JSON decoder.", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 277, "seek": 80900, "start": 822.0, "end": 827.0, "text": " All these ways that it could fail", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 278, "seek": 80900, "start": 823.0, "end": 828.0, "text": " and whether it's failed", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 279, "seek": 80900, "start": 825.0, "end": 830.0, "text": " and the state of whether it's gone through", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 280, "seek": 80900, "start": 828.0, "end": 833.0, "text": " and tried to do something that wasn't available,", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 281, "seek": 80900, "start": 831.0, "end": 836.0, "text": " that's very messy and it's stressful", "tokens": [50364, 293, 370, 309, 390, 1566, 411, 11, 50614, 50514, 498, 291, 362, 257, 1874, 420, 411, 257, 31828, 979, 19866, 11, 50764, 50664, 456, 366, 439, 613, 16191, 721, 300, 366, 2737, 50914, 50814, 365, 264, 2380, 1002, 294, 257, 31828, 979, 19866, 13, 51064, 51014, 1057, 613, 2098, 300, 309, 727, 3061, 51264, 51064, 293, 1968, 309, 311, 7612, 51314, 51164, 293, 264, 1785, 295, 1968, 309, 311, 2780, 807, 51414, 51314, 293, 3031, 281, 360, 746, 300, 2067, 380, 2435, 11, 51564, 51464, 300, 311, 588, 16191, 293, 309, 311, 19108, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.11620239375792828, "compression_ratio": 1.6525821596244132, "no_caption_prob": 0.0002531374047975987}, {"id": 282, "seek": 83600, "start": 836.0, "end": 841.0, "text": " and we should just forget about that", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 283, "seek": 83600, "start": 838.0, "end": 843.0, "text": " and happily just give it a function", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 284, "seek": 83600, "start": 841.0, "end": 846.0, "text": " for transforming our data and call map,", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 285, "seek": 83600, "start": 844.0, "end": 849.0, "text": " call JSON.decode.map", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 286, "seek": 83600, "start": 846.0, "end": 851.0, "text": " and pass in a plain old function", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 287, "seek": 83600, "start": 849.0, "end": 854.0, "text": " that takes a value and pretends", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 288, "seek": 83600, "start": 851.0, "end": 856.0, "text": " that everything is nice and happy", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 289, "seek": 83600, "start": 853.0, "end": 858.0, "text": " and shields away that complexity", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 290, "seek": 83600, "start": 854.0, "end": 859.0, "text": " of the ugly world outside.", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 291, "seek": 83600, "start": 857.0, "end": 862.0, "text": " So I don't know, that sort of clicked with me.", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 292, "seek": 83600, "start": 859.0, "end": 864.0, "text": " It felt like a pretty good way to describe", "tokens": [50364, 293, 321, 820, 445, 2870, 466, 300, 50614, 50464, 293, 19909, 445, 976, 309, 257, 2445, 50714, 50614, 337, 27210, 527, 1412, 293, 818, 4471, 11, 50864, 50764, 818, 31828, 13, 1479, 22332, 13, 24223, 51014, 50864, 293, 1320, 294, 257, 11121, 1331, 2445, 51114, 51014, 300, 2516, 257, 2158, 293, 1162, 2581, 51264, 51114, 300, 1203, 307, 1481, 293, 2055, 51364, 51214, 293, 33466, 1314, 300, 14024, 51464, 51264, 295, 264, 12246, 1002, 2380, 13, 51514, 51414, 407, 286, 500, 380, 458, 11, 300, 1333, 295, 23370, 365, 385, 13, 51664, 51514, 467, 2762, 411, 257, 1238, 665, 636, 281, 6786, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.12651527152871186, "compression_ratio": 1.6050420168067228, "no_caption_prob": 0.0003249711589887738}, {"id": 293, "seek": 86400, "start": 864.0, "end": 869.0, "text": " that.", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 294, "seek": 86400, "start": 865.0, "end": 870.0, "text": " I think this goes into what I was mentioning earlier", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 295, "seek": 86400, "start": 867.0, "end": 872.0, "text": " about approximations and that that sort of picture", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 296, "seek": 86400, "start": 870.0, "end": 875.0, "text": " assumes that you're talking about situations", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 297, "seek": 86400, "start": 873.0, "end": 878.0, "text": " where there are potential failures.", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 298, "seek": 86400, "start": 876.0, "end": 881.0, "text": " So maybe result, to a certain extent,", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 299, "seek": 86400, "start": 879.0, "end": 884.0, "text": " even JSON decoder or task.", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 300, "seek": 86400, "start": 880.0, "end": 885.0, "text": " That's not really what's happening", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 301, "seek": 86400, "start": 884.0, "end": 889.0, "text": " with a random generator", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 302, "seek": 86400, "start": 886.0, "end": 891.0, "text": " where mapping is not trying to ignore failures.", "tokens": [50364, 300, 13, 50614, 50414, 286, 519, 341, 1709, 666, 437, 286, 390, 18315, 3071, 50664, 50514, 466, 8542, 763, 293, 300, 300, 1333, 295, 3036, 50764, 50664, 37808, 300, 291, 434, 1417, 466, 6851, 50914, 50814, 689, 456, 366, 3995, 20774, 13, 51064, 50964, 407, 1310, 1874, 11, 281, 257, 1629, 8396, 11, 51214, 51114, 754, 31828, 979, 19866, 420, 5633, 13, 51364, 51164, 663, 311, 406, 534, 437, 311, 2737, 51414, 51364, 365, 257, 4974, 19265, 51614, 51464, 689, 18350, 307, 406, 1382, 281, 11200, 20774, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1763576424640158, "compression_ratio": 1.587719298245614, "no_caption_prob": 5.064300785306841e-05}, {"id": 303, "seek": 89100, "start": 891.0, "end": 896.0, "text": " It kind of does something different.", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 304, "seek": 89100, "start": 893.0, "end": 898.0, "text": " Right, I sort of got into the specifics", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 305, "seek": 89100, "start": 895.0, "end": 900.0, "text": " of failure with JSON decode,", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 306, "seek": 89100, "start": 897.0, "end": 902.0, "text": " but the sort of explanation was talking more", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 307, "seek": 89100, "start": 900.0, "end": 905.0, "text": " about messiness as a general concept", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 308, "seek": 89100, "start": 902.0, "end": 907.0, "text": " and it was saying that like that messiness means", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 309, "seek": 89100, "start": 906.0, "end": 911.0, "text": " maybe the thing exists, maybe it doesn't", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 310, "seek": 89100, "start": 909.0, "end": 914.0, "text": " or that messiness could be", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 311, "seek": 89100, "start": 911.0, "end": 916.0, "text": " you will have this thing in the future", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 312, "seek": 89100, "start": 912.0, "end": 917.0, "text": " but you don't have it now", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 313, "seek": 89100, "start": 914.0, "end": 919.0, "text": " or the messiness could be", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 314, "seek": 89100, "start": 915.0, "end": 920.0, "text": " it depends on something from the outside world", "tokens": [50364, 467, 733, 295, 775, 746, 819, 13, 50614, 50464, 1779, 11, 286, 1333, 295, 658, 666, 264, 28454, 50714, 50564, 295, 7763, 365, 31828, 979, 1429, 11, 50814, 50664, 457, 264, 1333, 295, 10835, 390, 1417, 544, 50914, 50814, 466, 2082, 1324, 382, 257, 2674, 3410, 51064, 50914, 293, 309, 390, 1566, 300, 411, 300, 2082, 1324, 1355, 51164, 51114, 1310, 264, 551, 8198, 11, 1310, 309, 1177, 380, 51364, 51264, 420, 300, 2082, 1324, 727, 312, 51514, 51364, 291, 486, 362, 341, 551, 294, 264, 2027, 51614, 51414, 457, 291, 500, 380, 362, 309, 586, 51664, 51514, 420, 264, 2082, 1324, 727, 312, 51764, 51564, 309, 5946, 322, 746, 490, 264, 2380, 1002, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.10778793237977109, "compression_ratio": 1.7470355731225296, "no_caption_prob": 1.8058251953334548e-05}, {"id": 315, "seek": 92000, "start": 920.0, "end": 925.0, "text": " and so there is something in common there", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 316, "seek": 92000, "start": 922.0, "end": 927.0, "text": " that I don't want to think about some sort of messiness", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 317, "seek": 92000, "start": 925.0, "end": 930.0, "text": " whether it's like uncertainty or happening in the future", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 318, "seek": 92000, "start": 929.0, "end": 934.0, "text": " or there's something connecting all of those things", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 319, "seek": 92000, "start": 932.0, "end": 937.0, "text": " even though semantically there are a bunch", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 320, "seek": 92000, "start": 934.0, "end": 939.0, "text": " of different things, results and presence or absence,", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 321, "seek": 92000, "start": 939.0, "end": 944.0, "text": " but somehow it's abstracting some sort of messiness", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 322, "seek": 92000, "start": 942.0, "end": 947.0, "text": " of the world and letting you deal with it", "tokens": [50364, 293, 370, 456, 307, 746, 294, 2689, 456, 50614, 50464, 300, 286, 500, 380, 528, 281, 519, 466, 512, 1333, 295, 2082, 1324, 50714, 50614, 1968, 309, 311, 411, 15697, 420, 2737, 294, 264, 2027, 50864, 50814, 420, 456, 311, 746, 11015, 439, 295, 729, 721, 51064, 50964, 754, 1673, 4361, 49505, 456, 366, 257, 3840, 51214, 51064, 295, 819, 721, 11, 3542, 293, 6814, 420, 17145, 11, 51314, 51314, 457, 6063, 309, 311, 12649, 278, 512, 1333, 295, 2082, 1324, 51564, 51464, 295, 264, 1002, 293, 8295, 291, 2028, 365, 309, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.144699494043986, "compression_ratio": 1.7882882882882882, "no_caption_prob": 0.00013134755135979503}, {"id": 323, "seek": 94700, "start": 947.0, "end": 952.0, "text": " I think what you're referring to as messiness here", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 324, "seek": 94700, "start": 949.0, "end": 954.0, "text": " is what in slightly more formal context", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 325, "seek": 94700, "start": 952.0, "end": 957.0, "text": " people will refer to as context.", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 326, "seek": 94700, "start": 954.0, "end": 959.0, "text": " So it's often referred to a parameterized type", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 327, "seek": 94700, "start": 957.0, "end": 962.0, "text": " like maybe or random generator", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 328, "seek": 94700, "start": 959.0, "end": 964.0, "text": " as context wrapped around a value", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 329, "seek": 94700, "start": 963.0, "end": 968.0, "text": " and that context might be the fact", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 330, "seek": 94700, "start": 965.0, "end": 970.0, "text": " that it's present or not.", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 331, "seek": 94700, "start": 967.0, "end": 972.0, "text": " It might be the fact that it's a future value", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 332, "seek": 94700, "start": 970.0, "end": 975.0, "text": " that you may or may not have,", "tokens": [50364, 286, 519, 437, 291, 434, 13761, 281, 382, 2082, 1324, 510, 50614, 50464, 307, 437, 294, 4748, 544, 9860, 4319, 50714, 50614, 561, 486, 2864, 281, 382, 4319, 13, 50864, 50714, 407, 309, 311, 2049, 10839, 281, 257, 13075, 1602, 2010, 50964, 50864, 411, 1310, 420, 4974, 19265, 51114, 50964, 382, 4319, 14226, 926, 257, 2158, 51214, 51164, 293, 300, 4319, 1062, 312, 264, 1186, 51414, 51264, 300, 309, 311, 1974, 420, 406, 13, 51514, 51364, 467, 1062, 312, 264, 1186, 300, 309, 311, 257, 2027, 2158, 51614, 51514, 300, 291, 815, 420, 815, 406, 362, 11, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11485544525750793, "compression_ratio": 1.7547169811320755, "no_caption_prob": 0.0001851993438322097}, {"id": 333, "seek": 97500, "start": 975.0, "end": 980.0, "text": " but it's very kind of hand wavy", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 334, "seek": 97500, "start": 977.0, "end": 982.0, "text": " and I think context is such a broad word", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 335, "seek": 97500, "start": 979.0, "end": 984.0, "text": " that it's not always useful to use,", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 336, "seek": 97500, "start": 981.0, "end": 986.0, "text": " but it's that thing that you've got your type A", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 337, "seek": 97500, "start": 985.0, "end": 990.0, "text": " oftentimes your type is adding some kind of extra context", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 338, "seek": 97500, "start": 989.0, "end": 994.0, "text": " about the A.", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 339, "seek": 97500, "start": 990.0, "end": 995.0, "text": " Right.", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 340, "seek": 97500, "start": 991.0, "end": 996.0, "text": " And naturally if you're dealing with these things,", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 341, "seek": 97500, "start": 995.0, "end": 1000.0, "text": " I mean in a way, if you're dealing with them", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 342, "seek": 97500, "start": 997.0, "end": 1002.0, "text": " in a more declarative way,", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 343, "seek": 97500, "start": 999.0, "end": 1004.0, "text": " if you're dealing with things in an imperative way", "tokens": [50364, 457, 309, 311, 588, 733, 295, 1011, 261, 15498, 50614, 50464, 293, 286, 519, 4319, 307, 1270, 257, 4152, 1349, 50714, 50564, 300, 309, 311, 406, 1009, 4420, 281, 764, 11, 50814, 50664, 457, 309, 311, 300, 551, 300, 291, 600, 658, 428, 2010, 316, 50914, 50864, 18349, 428, 2010, 307, 5127, 512, 733, 295, 2857, 4319, 51114, 51064, 466, 264, 316, 13, 51314, 51114, 1779, 13, 51364, 51164, 400, 8195, 498, 291, 434, 6260, 365, 613, 721, 11, 51414, 51364, 286, 914, 294, 257, 636, 11, 498, 291, 434, 6260, 365, 552, 51614, 51464, 294, 257, 544, 16694, 1166, 636, 11, 51714, 51564, 498, 291, 434, 6260, 365, 721, 294, 364, 32490, 636, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.15960198741848186, "compression_ratio": 1.9065420560747663, "no_caption_prob": 0.00027370391762815416}, {"id": 344, "seek": 100400, "start": 1004.0, "end": 1009.0, "text": " you're dealing with a lot of these things", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 345, "seek": 100400, "start": 1006.0, "end": 1011.0, "text": " and you don't necessarily need these kinds of abstractions", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 346, "seek": 100400, "start": 1009.0, "end": 1014.0, "text": " in the same way.", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 347, "seek": 100400, "start": 1010.0, "end": 1015.0, "text": " The abstractions that emerge look different I think.", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 348, "seek": 100400, "start": 1012.0, "end": 1017.0, "text": " But if you're dealing with things in a declarative way", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 349, "seek": 100400, "start": 1015.0, "end": 1020.0, "text": " essentially what you've got with a lot of these things", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 350, "seek": 100400, "start": 1017.0, "end": 1022.0, "text": " that can be transformed in these ways", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 351, "seek": 100400, "start": 1019.0, "end": 1024.0, "text": " is sometimes you can't directly apply a transformation.", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 352, "seek": 100400, "start": 1024.0, "end": 1029.0, "text": " You know, perhaps with something like maybe you could", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 353, "seek": 100400, "start": 1027.0, "end": 1032.0, "text": " under the hood because it's just a wrapped data type", "tokens": [50364, 291, 434, 6260, 365, 257, 688, 295, 613, 721, 50614, 50464, 293, 291, 500, 380, 4725, 643, 613, 3685, 295, 12649, 626, 50714, 50614, 294, 264, 912, 636, 13, 50864, 50664, 440, 12649, 626, 300, 21511, 574, 819, 286, 519, 13, 50914, 50764, 583, 498, 291, 434, 6260, 365, 721, 294, 257, 16694, 1166, 636, 51014, 50914, 4476, 437, 291, 600, 658, 365, 257, 688, 295, 613, 721, 51164, 51014, 300, 393, 312, 16894, 294, 613, 2098, 51264, 51114, 307, 2171, 291, 393, 380, 3838, 3079, 257, 9887, 13, 51364, 51364, 509, 458, 11, 4317, 365, 746, 411, 1310, 291, 727, 51614, 51514, 833, 264, 13376, 570, 309, 311, 445, 257, 14226, 1412, 2010, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.14411523786641783, "compression_ratio": 1.7749077490774907, "no_caption_prob": 8.349520794581622e-05}, {"id": 354, "seek": 103200, "start": 1032.0, "end": 1037.0, "text": " generator or JSON decode value or something like", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 355, "seek": 103200, "start": 1036.0, "end": 1041.0, "text": " LMI with context that's able to read things from the outside world", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 356, "seek": 103200, "start": 1040.0, "end": 1045.0, "text": " that sort of represents a future value, tasks, things like that.", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 357, "seek": 103200, "start": 1043.0, "end": 1048.0, "text": " You can't just map the thing because it doesn't necessarily", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 358, "seek": 103200, "start": 1047.0, "end": 1052.0, "text": " just exist for you to interact with it directly right away.", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 359, "seek": 103200, "start": 1051.0, "end": 1056.0, "text": " So what you would have to end up doing", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 360, "seek": 103200, "start": 1053.0, "end": 1058.0, "text": " if you were dealing with these things without these abstractions", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 361, "seek": 103200, "start": 1055.0, "end": 1060.0, "text": " is you would have to basically unwrap a function", "tokens": [50364, 19265, 420, 31828, 979, 1429, 2158, 420, 746, 411, 50614, 50564, 441, 13808, 365, 4319, 300, 311, 1075, 281, 1401, 721, 490, 264, 2380, 1002, 50814, 50764, 300, 1333, 295, 8855, 257, 2027, 2158, 11, 9608, 11, 721, 411, 300, 13, 51014, 50914, 509, 393, 380, 445, 4471, 264, 551, 570, 309, 1177, 380, 4725, 51164, 51114, 445, 2514, 337, 291, 281, 4648, 365, 309, 3838, 558, 1314, 13, 51364, 51314, 407, 437, 291, 576, 362, 281, 917, 493, 884, 51564, 51414, 498, 291, 645, 6260, 365, 613, 721, 1553, 613, 12649, 626, 51664, 51514, 307, 291, 576, 362, 281, 1936, 14853, 4007, 257, 2445, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.12237372092150767, "compression_ratio": 1.696629213483146, "no_caption_prob": 3.8228648918448016e-05}, {"id": 362, "seek": 106000, "start": 1060.0, "end": 1065.0, "text": " over and over all over the place.", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 363, "seek": 106000, "start": 1062.0, "end": 1067.0, "text": " So it really does feel like on a desert island", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 364, "seek": 106000, "start": 1065.0, "end": 1070.0, "text": " a lot of these same patterns would emerge", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 365, "seek": 106000, "start": 1067.0, "end": 1072.0, "text": " if you were working with these basic tools.", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 366, "seek": 106000, "start": 1069.0, "end": 1074.0, "text": " And you wanted to do things in a declarative style.", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 367, "seek": 106000, "start": 1071.0, "end": 1076.0, "text": " I think you've done an episode on the concept of combinators, right?", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 368, "seek": 106000, "start": 1075.0, "end": 1080.0, "text": " We briefly touched on combinators when we had you on last", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 369, "seek": 106000, "start": 1078.0, "end": 1083.0, "text": " but we haven't done a full episode on specifically that topic.", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 370, "seek": 106000, "start": 1083.0, "end": 1088.0, "text": " Okay, well you've written an article about combinators.", "tokens": [50364, 670, 293, 670, 439, 670, 264, 1081, 13, 50614, 50464, 407, 309, 534, 775, 841, 411, 322, 257, 11029, 6077, 50714, 50614, 257, 688, 295, 613, 912, 8294, 576, 21511, 50864, 50714, 498, 291, 645, 1364, 365, 613, 3875, 3873, 13, 50964, 50814, 400, 291, 1415, 281, 360, 721, 294, 257, 16694, 1166, 3758, 13, 51064, 50914, 286, 519, 291, 600, 1096, 364, 3500, 322, 264, 3410, 295, 38514, 3391, 11, 558, 30, 51164, 51114, 492, 10515, 9828, 322, 38514, 3391, 562, 321, 632, 291, 322, 1036, 51364, 51264, 457, 321, 2378, 380, 1096, 257, 1577, 3500, 322, 4682, 300, 4829, 13, 51514, 51514, 1033, 11, 731, 291, 600, 3720, 364, 7222, 466, 38514, 3391, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.05490698019663493, "compression_ratio": 1.6996336996336996, "no_caption_prob": 1.0451434718561359e-05}, {"id": 371, "seek": 108800, "start": 1088.0, "end": 1093.0, "text": " Since many of these category theory ish things", "tokens": [50364, 4162, 867, 295, 613, 7719, 5261, 307, 71, 721, 50614, 50514, 727, 312, 7619, 382, 11455, 38514, 3391, 50764, 50714, 286, 478, 1011, 35347, 257, 707, 857, 570, 341, 307, 406, 1596, 2074, 13, 50964, 50964, 583, 293, 550, 293, 4471, 293, 661, 6828, 411, 341, 51214, 51214, 286, 2041, 436, 434, 406, 1009, 21928, 732, 4190, 51464, 51364, 457, 436, 434, 1333, 295, 294, 300, 1002, 51614, 51464, 293, 436, 434, 1333, 295, 2689, 30482, 51714, 51564, 300, 917, 493, 885, 4420, 322, 867, 819, 1412, 3467, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12614859705385956, "compression_ratio": 1.6419213973799127, "no_caption_prob": 3.647728590294719e-05}, {"id": 372, "seek": 108800, "start": 1091.0, "end": 1096.0, "text": " could be described as universal combinators", "tokens": [50364, 4162, 867, 295, 613, 7719, 5261, 307, 71, 721, 50614, 50514, 727, 312, 7619, 382, 11455, 38514, 3391, 50764, 50714, 286, 478, 1011, 35347, 257, 707, 857, 570, 341, 307, 406, 1596, 2074, 13, 50964, 50964, 583, 293, 550, 293, 4471, 293, 661, 6828, 411, 341, 51214, 51214, 286, 2041, 436, 434, 406, 1009, 21928, 732, 4190, 51464, 51364, 457, 436, 434, 1333, 295, 294, 300, 1002, 51614, 51464, 293, 436, 434, 1333, 295, 2689, 30482, 51714, 51564, 300, 917, 493, 885, 4420, 322, 867, 819, 1412, 3467, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12614859705385956, "compression_ratio": 1.6419213973799127, "no_caption_prob": 3.647728590294719e-05}, {"id": 373, "seek": 108800, "start": 1095.0, "end": 1100.0, "text": " I'm hand waving a little bit because this is not quite true.", "tokens": [50364, 4162, 867, 295, 613, 7719, 5261, 307, 71, 721, 50614, 50514, 727, 312, 7619, 382, 11455, 38514, 3391, 50764, 50714, 286, 478, 1011, 35347, 257, 707, 857, 570, 341, 307, 406, 1596, 2074, 13, 50964, 50964, 583, 293, 550, 293, 4471, 293, 661, 6828, 411, 341, 51214, 51214, 286, 2041, 436, 434, 406, 1009, 21928, 732, 4190, 51464, 51364, 457, 436, 434, 1333, 295, 294, 300, 1002, 51614, 51464, 293, 436, 434, 1333, 295, 2689, 30482, 51714, 51564, 300, 917, 493, 885, 4420, 322, 867, 819, 1412, 3467, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12614859705385956, "compression_ratio": 1.6419213973799127, "no_caption_prob": 3.647728590294719e-05}, {"id": 374, "seek": 108800, "start": 1100.0, "end": 1105.0, "text": " But and then and map and other functions like this", "tokens": [50364, 4162, 867, 295, 613, 7719, 5261, 307, 71, 721, 50614, 50514, 727, 312, 7619, 382, 11455, 38514, 3391, 50764, 50714, 286, 478, 1011, 35347, 257, 707, 857, 570, 341, 307, 406, 1596, 2074, 13, 50964, 50964, 583, 293, 550, 293, 4471, 293, 661, 6828, 411, 341, 51214, 51214, 286, 2041, 436, 434, 406, 1009, 21928, 732, 4190, 51464, 51364, 457, 436, 434, 1333, 295, 294, 300, 1002, 51614, 51464, 293, 436, 434, 1333, 295, 2689, 30482, 51714, 51564, 300, 917, 493, 885, 4420, 322, 867, 819, 1412, 3467, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12614859705385956, "compression_ratio": 1.6419213973799127, "no_caption_prob": 3.647728590294719e-05}, {"id": 375, "seek": 108800, "start": 1105.0, "end": 1110.0, "text": " I guess they're not always combining two values", "tokens": [50364, 4162, 867, 295, 613, 7719, 5261, 307, 71, 721, 50614, 50514, 727, 312, 7619, 382, 11455, 38514, 3391, 50764, 50714, 286, 478, 1011, 35347, 257, 707, 857, 570, 341, 307, 406, 1596, 2074, 13, 50964, 50964, 583, 293, 550, 293, 4471, 293, 661, 6828, 411, 341, 51214, 51214, 286, 2041, 436, 434, 406, 1009, 21928, 732, 4190, 51464, 51364, 457, 436, 434, 1333, 295, 294, 300, 1002, 51614, 51464, 293, 436, 434, 1333, 295, 2689, 30482, 51714, 51564, 300, 917, 493, 885, 4420, 322, 867, 819, 1412, 3467, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12614859705385956, "compression_ratio": 1.6419213973799127, "no_caption_prob": 3.647728590294719e-05}, {"id": 376, "seek": 108800, "start": 1108.0, "end": 1113.0, "text": " but they're sort of in that world", "tokens": [50364, 4162, 867, 295, 613, 7719, 5261, 307, 71, 721, 50614, 50514, 727, 312, 7619, 382, 11455, 38514, 3391, 50764, 50714, 286, 478, 1011, 35347, 257, 707, 857, 570, 341, 307, 406, 1596, 2074, 13, 50964, 50964, 583, 293, 550, 293, 4471, 293, 661, 6828, 411, 341, 51214, 51214, 286, 2041, 436, 434, 406, 1009, 21928, 732, 4190, 51464, 51364, 457, 436, 434, 1333, 295, 294, 300, 1002, 51614, 51464, 293, 436, 434, 1333, 295, 2689, 30482, 51714, 51564, 300, 917, 493, 885, 4420, 322, 867, 819, 1412, 3467, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12614859705385956, "compression_ratio": 1.6419213973799127, "no_caption_prob": 3.647728590294719e-05}, {"id": 377, "seek": 108800, "start": 1110.0, "end": 1115.0, "text": " and they're sort of common utilities", "tokens": [50364, 4162, 867, 295, 613, 7719, 5261, 307, 71, 721, 50614, 50514, 727, 312, 7619, 382, 11455, 38514, 3391, 50764, 50714, 286, 478, 1011, 35347, 257, 707, 857, 570, 341, 307, 406, 1596, 2074, 13, 50964, 50964, 583, 293, 550, 293, 4471, 293, 661, 6828, 411, 341, 51214, 51214, 286, 2041, 436, 434, 406, 1009, 21928, 732, 4190, 51464, 51364, 457, 436, 434, 1333, 295, 294, 300, 1002, 51614, 51464, 293, 436, 434, 1333, 295, 2689, 30482, 51714, 51564, 300, 917, 493, 885, 4420, 322, 867, 819, 1412, 3467, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12614859705385956, "compression_ratio": 1.6419213973799127, "no_caption_prob": 3.647728590294719e-05}, {"id": 378, "seek": 111500, "start": 1115.0, "end": 1120.0, "text": " on many different data types.", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 379, "seek": 111500, "start": 1118.0, "end": 1123.0, "text": " Also going back to something you mentioned earlier", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 380, "seek": 111500, "start": 1120.0, "end": 1125.0, "text": " about different laws and how they're often like", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 381, "seek": 111500, "start": 1122.0, "end": 1127.0, "text": " very kind of mathematical logical sounding things", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 382, "seek": 111500, "start": 1125.0, "end": 1130.0, "text": " a lot of them have sort of very practical implications", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 383, "seek": 111500, "start": 1129.0, "end": 1134.0, "text": " even though when you read the law", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 384, "seek": 111500, "start": 1130.0, "end": 1135.0, "text": " it sounds like reading a math theorem.", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 385, "seek": 111500, "start": 1133.0, "end": 1138.0, "text": " So for example the map function has a law that says", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 386, "seek": 111500, "start": 1138.0, "end": 1143.0, "text": " that mapping the identity function should equal", "tokens": [50364, 322, 867, 819, 1412, 3467, 13, 50614, 50514, 2743, 516, 646, 281, 746, 291, 2835, 3071, 50764, 50614, 466, 819, 6064, 293, 577, 436, 434, 2049, 411, 50864, 50714, 588, 733, 295, 18894, 14978, 24931, 721, 50964, 50864, 257, 688, 295, 552, 362, 1333, 295, 588, 8496, 16602, 51114, 51064, 754, 1673, 562, 291, 1401, 264, 2101, 51314, 51114, 309, 3263, 411, 3760, 257, 5221, 20904, 13, 51364, 51264, 407, 337, 1365, 264, 4471, 2445, 575, 257, 2101, 300, 1619, 51514, 51514, 300, 18350, 264, 6575, 2445, 820, 2681, 51764, 51714], "temperature": 0.0, "avg_logprob": -0.08081297720632245, "compression_ratio": 1.7058823529411764, "no_caption_prob": 3.0717452318640426e-05}, {"id": 387, "seek": 114300, "start": 1143.0, "end": 1148.0, "text": " the mapping identity function.", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 388, "seek": 114300, "start": 1144.0, "end": 1149.0, "text": " Basically mapping identity does not change anything", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 389, "seek": 114300, "start": 1146.0, "end": 1151.0, "text": " and a really interesting implication of that", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 390, "seek": 114300, "start": 1148.0, "end": 1153.0, "text": " is that your map function can change items inside your type", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 391, "seek": 114300, "start": 1156.0, "end": 1161.0, "text": " but it cannot modify the general structure of your", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 392, "seek": 114300, "start": 1160.0, "end": 1165.0, "text": " what you've been calling the context.", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 393, "seek": 114300, "start": 1162.0, "end": 1167.0, "text": " So for example a list you cannot add or remove items", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 394, "seek": 114300, "start": 1166.0, "end": 1171.0, "text": " from the list using map.", "tokens": [50364, 264, 18350, 6575, 2445, 13, 50614, 50414, 8537, 18350, 6575, 775, 406, 1319, 1340, 50664, 50514, 293, 257, 534, 1880, 37814, 295, 300, 50764, 50614, 307, 300, 428, 4471, 2445, 393, 1319, 4754, 1854, 428, 2010, 50864, 51014, 457, 309, 2644, 16927, 264, 2674, 3877, 295, 428, 51264, 51214, 437, 291, 600, 668, 5141, 264, 4319, 13, 51464, 51314, 407, 337, 1365, 257, 1329, 291, 2644, 909, 420, 4159, 4754, 51564, 51514, 490, 264, 1329, 1228, 4471, 13, 51764, 51614], "temperature": 0.0, "avg_logprob": -0.11823143610140173, "compression_ratio": 1.7352941176470589, "no_caption_prob": 7.484401430701837e-05}, {"id": 395, "seek": 117100, "start": 1171.0, "end": 1176.0, "text": " Otherwise your mapping identity shouldn't change anything", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 396, "seek": 117100, "start": 1173.0, "end": 1178.0, "text": " but if you drop items from the list", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 397, "seek": 117100, "start": 1175.0, "end": 1180.0, "text": " that thing would be violated.", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 398, "seek": 117100, "start": 1177.0, "end": 1182.0, "text": " You can also not reverse the list", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 399, "seek": 117100, "start": 1179.0, "end": 1184.0, "text": " if you want it to be a map because otherwise it's not an identity function.", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 400, "seek": 117100, "start": 1183.0, "end": 1188.0, "text": " Yes that's right.", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 401, "seek": 117100, "start": 1184.0, "end": 1189.0, "text": " So a map makes sure that the list", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 402, "seek": 117100, "start": 1188.0, "end": 1193.0, "text": " or whatever collection stays in the same order", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 403, "seek": 117100, "start": 1191.0, "end": 1196.0, "text": " regardless of whether you called it with identity or not.", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 404, "seek": 117100, "start": 1194.0, "end": 1199.0, "text": " Right and similarly you can't change a just to a nothing", "tokens": [50364, 10328, 428, 18350, 6575, 4659, 380, 1319, 1340, 50614, 50464, 457, 498, 291, 3270, 4754, 490, 264, 1329, 50714, 50564, 300, 551, 576, 312, 33239, 13, 50814, 50664, 509, 393, 611, 406, 9943, 264, 1329, 50914, 50764, 498, 291, 528, 309, 281, 312, 257, 4471, 570, 5911, 309, 311, 406, 364, 6575, 2445, 13, 51014, 50964, 1079, 300, 311, 558, 13, 51214, 51014, 407, 257, 4471, 1669, 988, 300, 264, 1329, 51264, 51214, 420, 2035, 5765, 10834, 294, 264, 912, 1668, 51464, 51364, 10060, 295, 1968, 291, 1219, 309, 365, 6575, 420, 406, 13, 51614, 51514, 1779, 293, 14138, 291, 393, 380, 1319, 257, 445, 281, 257, 1825, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1043033344405038, "compression_ratio": 1.766798418972332, "no_caption_prob": 0.0002868321316782385}, {"id": 405, "seek": 119900, "start": 1199.0, "end": 1204.0, "text": " as part of a map or okay into an error or anything like that.", "tokens": [50364, 382, 644, 295, 257, 4471, 420, 1392, 666, 364, 6713, 420, 1340, 411, 300, 13, 50614, 50664, 509, 393, 787, 16927, 264, 14226, 2158, 50914, 50814, 597, 307, 257, 534, 1880, 551, 300, 1487, 484, 295, 300, 51064, 50914, 293, 498, 291, 632, 12270, 382, 257, 1500, 14205, 420, 257, 283, 16740, 1500, 51164, 51164, 291, 576, 915, 300, 498, 428, 11420, 775, 16927, 51414, 51414, 264, 4787, 3877, 428, 283, 16740, 1500, 486, 722, 18223, 13, 51664, 51564, 865, 562, 291, 360, 4445, 613, 3685, 295, 6828, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09261707637621008, "compression_ratio": 1.7674418604651163, "no_caption_prob": 8.797622285783291e-06}, {"id": 406, "seek": 119900, "start": 1205.0, "end": 1210.0, "text": " You can only modify the wrapped value", "tokens": [50364, 382, 644, 295, 257, 4471, 420, 1392, 666, 364, 6713, 420, 1340, 411, 300, 13, 50614, 50664, 509, 393, 787, 16927, 264, 14226, 2158, 50914, 50814, 597, 307, 257, 534, 1880, 551, 300, 1487, 484, 295, 300, 51064, 50914, 293, 498, 291, 632, 12270, 382, 257, 1500, 14205, 420, 257, 283, 16740, 1500, 51164, 51164, 291, 576, 915, 300, 498, 428, 11420, 775, 16927, 51414, 51414, 264, 4787, 3877, 428, 283, 16740, 1500, 486, 722, 18223, 13, 51664, 51564, 865, 562, 291, 360, 4445, 613, 3685, 295, 6828, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09261707637621008, "compression_ratio": 1.7674418604651163, "no_caption_prob": 8.797622285783291e-06}, {"id": 407, "seek": 119900, "start": 1208.0, "end": 1213.0, "text": " which is a really interesting thing that comes out of that", "tokens": [50364, 382, 644, 295, 257, 4471, 420, 1392, 666, 364, 6713, 420, 1340, 411, 300, 13, 50614, 50664, 509, 393, 787, 16927, 264, 14226, 2158, 50914, 50814, 597, 307, 257, 534, 1880, 551, 300, 1487, 484, 295, 300, 51064, 50914, 293, 498, 291, 632, 12270, 382, 257, 1500, 14205, 420, 257, 283, 16740, 1500, 51164, 51164, 291, 576, 915, 300, 498, 428, 11420, 775, 16927, 51414, 51414, 264, 4787, 3877, 428, 283, 16740, 1500, 486, 722, 18223, 13, 51664, 51564, 865, 562, 291, 360, 4445, 613, 3685, 295, 6828, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09261707637621008, "compression_ratio": 1.7674418604651163, "no_caption_prob": 8.797622285783291e-06}, {"id": 408, "seek": 119900, "start": 1210.0, "end": 1215.0, "text": " and if you had implemented as a test suite or a fuzz test", "tokens": [50364, 382, 644, 295, 257, 4471, 420, 1392, 666, 364, 6713, 420, 1340, 411, 300, 13, 50614, 50664, 509, 393, 787, 16927, 264, 14226, 2158, 50914, 50814, 597, 307, 257, 534, 1880, 551, 300, 1487, 484, 295, 300, 51064, 50914, 293, 498, 291, 632, 12270, 382, 257, 1500, 14205, 420, 257, 283, 16740, 1500, 51164, 51164, 291, 576, 915, 300, 498, 428, 11420, 775, 16927, 51414, 51414, 264, 4787, 3877, 428, 283, 16740, 1500, 486, 722, 18223, 13, 51664, 51564, 865, 562, 291, 360, 4445, 613, 3685, 295, 6828, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09261707637621008, "compression_ratio": 1.7674418604651163, "no_caption_prob": 8.797622285783291e-06}, {"id": 409, "seek": 119900, "start": 1215.0, "end": 1220.0, "text": " you would find that if your implementation does modify", "tokens": [50364, 382, 644, 295, 257, 4471, 420, 1392, 666, 364, 6713, 420, 1340, 411, 300, 13, 50614, 50664, 509, 393, 787, 16927, 264, 14226, 2158, 50914, 50814, 597, 307, 257, 534, 1880, 551, 300, 1487, 484, 295, 300, 51064, 50914, 293, 498, 291, 632, 12270, 382, 257, 1500, 14205, 420, 257, 283, 16740, 1500, 51164, 51164, 291, 576, 915, 300, 498, 428, 11420, 775, 16927, 51414, 51414, 264, 4787, 3877, 428, 283, 16740, 1500, 486, 722, 18223, 13, 51664, 51564, 865, 562, 291, 360, 4445, 613, 3685, 295, 6828, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09261707637621008, "compression_ratio": 1.7674418604651163, "no_caption_prob": 8.797622285783291e-06}, {"id": 410, "seek": 119900, "start": 1220.0, "end": 1225.0, "text": " the overall structure your fuzz test will start failing.", "tokens": [50364, 382, 644, 295, 257, 4471, 420, 1392, 666, 364, 6713, 420, 1340, 411, 300, 13, 50614, 50664, 509, 393, 787, 16927, 264, 14226, 2158, 50914, 50814, 597, 307, 257, 534, 1880, 551, 300, 1487, 484, 295, 300, 51064, 50914, 293, 498, 291, 632, 12270, 382, 257, 1500, 14205, 420, 257, 283, 16740, 1500, 51164, 51164, 291, 576, 915, 300, 498, 428, 11420, 775, 16927, 51414, 51414, 264, 4787, 3877, 428, 283, 16740, 1500, 486, 722, 18223, 13, 51664, 51564, 865, 562, 291, 360, 4445, 613, 3685, 295, 6828, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09261707637621008, "compression_ratio": 1.7674418604651163, "no_caption_prob": 8.797622285783291e-06}, {"id": 411, "seek": 119900, "start": 1223.0, "end": 1228.0, "text": " Yeah when you do implement these kinds of functions", "tokens": [50364, 382, 644, 295, 257, 4471, 420, 1392, 666, 364, 6713, 420, 1340, 411, 300, 13, 50614, 50664, 509, 393, 787, 16927, 264, 14226, 2158, 50914, 50814, 597, 307, 257, 534, 1880, 551, 300, 1487, 484, 295, 300, 51064, 50914, 293, 498, 291, 632, 12270, 382, 257, 1500, 14205, 420, 257, 283, 16740, 1500, 51164, 51164, 291, 576, 915, 300, 498, 428, 11420, 775, 16927, 51414, 51414, 264, 4787, 3877, 428, 283, 16740, 1500, 486, 722, 18223, 13, 51664, 51564, 865, 562, 291, 360, 4445, 613, 3685, 295, 6828, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.09261707637621008, "compression_ratio": 1.7674418604651163, "no_caption_prob": 8.797622285783291e-06}, {"id": 412, "seek": 122800, "start": 1228.0, "end": 1233.0, "text": " of the type that you made do you write fuzz tests", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 413, "seek": 122800, "start": 1231.0, "end": 1236.0, "text": " or do you write anything to make sure that those laws are applied and true?", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 414, "seek": 122800, "start": 1236.0, "end": 1241.0, "text": " I like to write fuzz tests that follow the laws.", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 415, "seek": 122800, "start": 1239.0, "end": 1244.0, "text": " That's a good way to find out that you've implemented", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 416, "seek": 122800, "start": 1242.0, "end": 1247.0, "text": " the function according to spec.", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 417, "seek": 122800, "start": 1245.0, "end": 1250.0, "text": " Because there's nothing at least in Elm saying that", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 418, "seek": 122800, "start": 1249.0, "end": 1254.0, "text": " oh this type has a map function", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 419, "seek": 122800, "start": 1252.0, "end": 1257.0, "text": " there's nothing saying that this respects the laws of the map function.", "tokens": [50364, 295, 264, 2010, 300, 291, 1027, 360, 291, 2464, 283, 16740, 6921, 50614, 50514, 420, 360, 291, 2464, 1340, 281, 652, 988, 300, 729, 6064, 366, 6456, 293, 2074, 30, 50764, 50764, 286, 411, 281, 2464, 283, 16740, 6921, 300, 1524, 264, 6064, 13, 51014, 50914, 663, 311, 257, 665, 636, 281, 915, 484, 300, 291, 600, 12270, 51164, 51064, 264, 2445, 4650, 281, 1608, 13, 51314, 51214, 1436, 456, 311, 1825, 412, 1935, 294, 2699, 76, 1566, 300, 51464, 51414, 1954, 341, 2010, 575, 257, 4471, 2445, 51664, 51564, 456, 311, 1825, 1566, 300, 341, 24126, 264, 6064, 295, 264, 4471, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11706776089138454, "compression_ratio": 1.8407079646017699, "no_caption_prob": 0.00036253553116694093}, {"id": 420, "seek": 125700, "start": 1257.0, "end": 1262.0, "text": " Correct.", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 421, "seek": 125700, "start": 1258.0, "end": 1263.0, "text": " I wonder is it useful to have this to call it like map", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 422, "seek": 125700, "start": 1263.0, "end": 1268.0, "text": " if you don't know whether the law is applied or not?", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 423, "seek": 125700, "start": 1267.0, "end": 1272.0, "text": " For instance someone could have a map on a list like structure", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 424, "seek": 125700, "start": 1272.0, "end": 1277.0, "text": " but that reverses the list because of some bug.", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 425, "seek": 125700, "start": 1276.0, "end": 1281.0, "text": " Would you then still call it a map?", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 426, "seek": 125700, "start": 1278.0, "end": 1283.0, "text": " Would you just call it something else?", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 427, "seek": 125700, "start": 1280.0, "end": 1285.0, "text": " Do you just report a bug?", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 428, "seek": 125700, "start": 1281.0, "end": 1286.0, "text": " I think I would probably report a bug on that", "tokens": [50364, 12753, 13, 50614, 50414, 286, 2441, 307, 309, 4420, 281, 362, 341, 281, 818, 309, 411, 4471, 50664, 50664, 498, 291, 500, 380, 458, 1968, 264, 2101, 307, 6456, 420, 406, 30, 50914, 50864, 1171, 5197, 1580, 727, 362, 257, 4471, 322, 257, 1329, 411, 3877, 51114, 51114, 457, 300, 14582, 279, 264, 1329, 570, 295, 512, 7426, 13, 51364, 51314, 6068, 291, 550, 920, 818, 309, 257, 4471, 30, 51564, 51414, 6068, 291, 445, 818, 309, 746, 1646, 30, 51664, 51514, 1144, 291, 445, 2275, 257, 7426, 30, 51764, 51564, 286, 519, 286, 576, 1391, 2275, 257, 7426, 322, 300, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.11954872494652158, "compression_ratio": 1.6622222222222223, "no_caption_prob": 1.3631070032715797e-05}, {"id": 429, "seek": 128600, "start": 1286.0, "end": 1291.0, "text": " the library maintainer.", "tokens": [50364, 264, 6405, 6909, 260, 13, 50614, 50464, 759, 309, 307, 21935, 550, 286, 1062, 2748, 300, 436, 1315, 309, 746, 1646, 50714, 50614, 570, 341, 1333, 295, 3448, 1024, 437, 561, 2066, 295, 264, 4471, 2445, 13, 50864, 50914, 865, 754, 1673, 456, 311, 1825, 1566, 51164, 51014, 4177, 341, 307, 257, 4471, 2445, 490, 264, 1019, 1672, 1315, 13, 51264, 51364, 4919, 337, 13601, 264, 283, 1349, 13, 51614, 51564, 286, 500, 380, 458, 498, 321, 600, 668, 20220, 1566, 613, 2283, 337, 586, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.097221010186699, "compression_ratio": 1.6388888888888888, "no_caption_prob": 8.480825636070222e-05}, {"id": 430, "seek": 128600, "start": 1288.0, "end": 1293.0, "text": " If it is intentional then I might recommend that they name it something else", "tokens": [50364, 264, 6405, 6909, 260, 13, 50614, 50464, 759, 309, 307, 21935, 550, 286, 1062, 2748, 300, 436, 1315, 309, 746, 1646, 50714, 50614, 570, 341, 1333, 295, 3448, 1024, 437, 561, 2066, 295, 264, 4471, 2445, 13, 50864, 50914, 865, 754, 1673, 456, 311, 1825, 1566, 51164, 51014, 4177, 341, 307, 257, 4471, 2445, 490, 264, 1019, 1672, 1315, 13, 51264, 51364, 4919, 337, 13601, 264, 283, 1349, 13, 51614, 51564, 286, 500, 380, 458, 498, 321, 600, 668, 20220, 1566, 613, 2283, 337, 586, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.097221010186699, "compression_ratio": 1.6388888888888888, "no_caption_prob": 8.480825636070222e-05}, {"id": 431, "seek": 128600, "start": 1291.0, "end": 1296.0, "text": " because this sort of violates what people expect of the map function.", "tokens": [50364, 264, 6405, 6909, 260, 13, 50614, 50464, 759, 309, 307, 21935, 550, 286, 1062, 2748, 300, 436, 1315, 309, 746, 1646, 50714, 50614, 570, 341, 1333, 295, 3448, 1024, 437, 561, 2066, 295, 264, 4471, 2445, 13, 50864, 50914, 865, 754, 1673, 456, 311, 1825, 1566, 51164, 51014, 4177, 341, 307, 257, 4471, 2445, 490, 264, 1019, 1672, 1315, 13, 51264, 51364, 4919, 337, 13601, 264, 283, 1349, 13, 51614, 51564, 286, 500, 380, 458, 498, 321, 600, 668, 20220, 1566, 613, 2283, 337, 586, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.097221010186699, "compression_ratio": 1.6388888888888888, "no_caption_prob": 8.480825636070222e-05}, {"id": 432, "seek": 128600, "start": 1297.0, "end": 1302.0, "text": " Yeah even though there's nothing saying", "tokens": [50364, 264, 6405, 6909, 260, 13, 50614, 50464, 759, 309, 307, 21935, 550, 286, 1062, 2748, 300, 436, 1315, 309, 746, 1646, 50714, 50614, 570, 341, 1333, 295, 3448, 1024, 437, 561, 2066, 295, 264, 4471, 2445, 13, 50864, 50914, 865, 754, 1673, 456, 311, 1825, 1566, 51164, 51014, 4177, 341, 307, 257, 4471, 2445, 490, 264, 1019, 1672, 1315, 13, 51264, 51364, 4919, 337, 13601, 264, 283, 1349, 13, 51614, 51564, 286, 500, 380, 458, 498, 321, 600, 668, 20220, 1566, 613, 2283, 337, 586, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.097221010186699, "compression_ratio": 1.6388888888888888, "no_caption_prob": 8.480825636070222e-05}, {"id": 433, "seek": 128600, "start": 1299.0, "end": 1304.0, "text": " hey this is a map function from the functor name.", "tokens": [50364, 264, 6405, 6909, 260, 13, 50614, 50464, 759, 309, 307, 21935, 550, 286, 1062, 2748, 300, 436, 1315, 309, 746, 1646, 50714, 50614, 570, 341, 1333, 295, 3448, 1024, 437, 561, 2066, 295, 264, 4471, 2445, 13, 50864, 50914, 865, 754, 1673, 456, 311, 1825, 1566, 51164, 51014, 4177, 341, 307, 257, 4471, 2445, 490, 264, 1019, 1672, 1315, 13, 51264, 51364, 4919, 337, 13601, 264, 283, 1349, 13, 51614, 51564, 286, 500, 380, 458, 498, 321, 600, 668, 20220, 1566, 613, 2283, 337, 586, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.097221010186699, "compression_ratio": 1.6388888888888888, "no_caption_prob": 8.480825636070222e-05}, {"id": 434, "seek": 128600, "start": 1306.0, "end": 1311.0, "text": " Sorry for dropping the f word.", "tokens": [50364, 264, 6405, 6909, 260, 13, 50614, 50464, 759, 309, 307, 21935, 550, 286, 1062, 2748, 300, 436, 1315, 309, 746, 1646, 50714, 50614, 570, 341, 1333, 295, 3448, 1024, 437, 561, 2066, 295, 264, 4471, 2445, 13, 50864, 50914, 865, 754, 1673, 456, 311, 1825, 1566, 51164, 51014, 4177, 341, 307, 257, 4471, 2445, 490, 264, 1019, 1672, 1315, 13, 51264, 51364, 4919, 337, 13601, 264, 283, 1349, 13, 51614, 51564, 286, 500, 380, 458, 498, 321, 600, 668, 20220, 1566, 613, 2283, 337, 586, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.097221010186699, "compression_ratio": 1.6388888888888888, "no_caption_prob": 8.480825636070222e-05}, {"id": 435, "seek": 128600, "start": 1310.0, "end": 1315.0, "text": " I don't know if we've been avoiding saying these words for now", "tokens": [50364, 264, 6405, 6909, 260, 13, 50614, 50464, 759, 309, 307, 21935, 550, 286, 1062, 2748, 300, 436, 1315, 309, 746, 1646, 50714, 50614, 570, 341, 1333, 295, 3448, 1024, 437, 561, 2066, 295, 264, 4471, 2445, 13, 50864, 50914, 865, 754, 1673, 456, 311, 1825, 1566, 51164, 51014, 4177, 341, 307, 257, 4471, 2445, 490, 264, 1019, 1672, 1315, 13, 51264, 51364, 4919, 337, 13601, 264, 283, 1349, 13, 51614, 51564, 286, 500, 380, 458, 498, 321, 600, 668, 20220, 1566, 613, 2283, 337, 586, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.097221010186699, "compression_ratio": 1.6388888888888888, "no_caption_prob": 8.480825636070222e-05}, {"id": 436, "seek": 131500, "start": 1315.0, "end": 1320.0, "text": " but there you go.", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 437, "seek": 131500, "start": 1317.0, "end": 1322.0, "text": " Now we can say them if we feel like it", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 438, "seek": 131500, "start": 1320.0, "end": 1325.0, "text": " or avoid them if we want to.", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 439, "seek": 131500, "start": 1323.0, "end": 1328.0, "text": " To clarify functor is the fancy", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 440, "seek": 131500, "start": 1327.0, "end": 1332.0, "text": " category theory term for", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 441, "seek": 131500, "start": 1331.0, "end": 1336.0, "text": " a type where we've implemented a map function", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 442, "seek": 131500, "start": 1333.0, "end": 1338.0, "text": " that fulfills I think two or three laws", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 443, "seek": 131500, "start": 1336.0, "end": 1341.0, "text": " one of which is the one we mentioned about identity.", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 444, "seek": 131500, "start": 1339.0, "end": 1344.0, "text": " Yeah I think the other one is commutativity.", "tokens": [50364, 457, 456, 291, 352, 13, 50614, 50464, 823, 321, 393, 584, 552, 498, 321, 841, 411, 309, 50714, 50614, 420, 5042, 552, 498, 321, 528, 281, 13, 50864, 50764, 1407, 17594, 1019, 1672, 307, 264, 10247, 51014, 50964, 7719, 5261, 1433, 337, 51214, 51164, 257, 2010, 689, 321, 600, 12270, 257, 4471, 2445, 51414, 51264, 300, 8081, 2565, 286, 519, 732, 420, 1045, 6064, 51514, 51414, 472, 295, 597, 307, 264, 472, 321, 2835, 466, 6575, 13, 51664, 51564, 865, 286, 519, 264, 661, 472, 307, 800, 325, 30142, 13, 51814, 51714], "temperature": 0.0, "avg_logprob": -0.1257580797722999, "compression_ratio": 1.6059113300492611, "no_caption_prob": 2.392278656770941e-05}, {"id": 445, "seek": 134400, "start": 1344.0, "end": 1349.0, "text": " It's a really fun one that I actually take advantage of pretty frequently.", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 446, "seek": 134400, "start": 1348.0, "end": 1353.0, "text": " The idea that instead of", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 447, "seek": 134400, "start": 1350.0, "end": 1355.0, "text": " if I have two functions I want to map", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 448, "seek": 134400, "start": 1352.0, "end": 1357.0, "text": " let's say I have a list of", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 449, "seek": 134400, "start": 1355.0, "end": 1360.0, "text": " I don't know a list of integers and I want to double them", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 450, "seek": 134400, "start": 1358.0, "end": 1363.0, "text": " and then I want to add one", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 451, "seek": 134400, "start": 1361.0, "end": 1366.0, "text": " instead of mapping once through the list to double them", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 452, "seek": 134400, "start": 1364.0, "end": 1369.0, "text": " and then mapping a second time to add one", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 453, "seek": 134400, "start": 1367.0, "end": 1372.0, "text": " I can map once and double and add one at the same time.", "tokens": [50364, 467, 311, 257, 534, 1019, 472, 300, 286, 767, 747, 5002, 295, 1238, 10374, 13, 50614, 50564, 440, 1558, 300, 2602, 295, 50814, 50664, 498, 286, 362, 732, 6828, 286, 528, 281, 4471, 50914, 50764, 718, 311, 584, 286, 362, 257, 1329, 295, 51014, 50914, 286, 500, 380, 458, 257, 1329, 295, 41674, 293, 286, 528, 281, 3834, 552, 51164, 51064, 293, 550, 286, 528, 281, 909, 472, 51314, 51214, 2602, 295, 18350, 1564, 807, 264, 1329, 281, 3834, 552, 51464, 51364, 293, 550, 18350, 257, 1150, 565, 281, 909, 472, 51614, 51514, 286, 393, 4471, 1564, 293, 3834, 293, 909, 472, 412, 264, 912, 565, 13, 51764, 51814], "temperature": 0.0, "avg_logprob": -0.07006552842286257, "compression_ratio": 1.9190476190476191, "no_caption_prob": 2.9772478228551336e-05}, {"id": 454, "seek": 137200, "start": 1372.0, "end": 1377.0, "text": " That's actually a refactor that I do pretty frequently in my own code", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 455, "seek": 137200, "start": 1376.0, "end": 1381.0, "text": " and that some fancy compilers can actually do automatically for you", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 456, "seek": 137200, "start": 1380.0, "end": 1385.0, "text": " as a performance optimization.", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 457, "seek": 137200, "start": 1382.0, "end": 1387.0, "text": " I tried working on that with LMAOptimize level 2.", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 458, "seek": 137200, "start": 1386.0, "end": 1391.0, "text": " I actually don't remember where I got it", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 459, "seek": 137200, "start": 1389.0, "end": 1394.0, "text": " I probably have a branch somewhere.", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 460, "seek": 137200, "start": 1391.0, "end": 1396.0, "text": " It's clearly something that could be done", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 461, "seek": 137200, "start": 1393.0, "end": 1398.0, "text": " but the issue is then", "tokens": [50364, 663, 311, 767, 257, 1895, 15104, 300, 286, 360, 1238, 10374, 294, 452, 1065, 3089, 50614, 50564, 293, 300, 512, 10247, 715, 388, 433, 393, 767, 360, 6772, 337, 291, 50814, 50764, 382, 257, 3389, 19618, 13, 51014, 50864, 286, 3031, 1364, 322, 300, 365, 441, 9998, 46, 662, 43890, 1496, 568, 13, 51114, 51064, 286, 767, 500, 380, 1604, 689, 286, 658, 309, 51314, 51214, 286, 1391, 362, 257, 9819, 4079, 13, 51464, 51314, 467, 311, 4448, 746, 300, 727, 312, 1096, 51564, 51414, 457, 264, 2734, 307, 550, 51664, 51614], "temperature": 0.0, "avg_logprob": -0.14401325266411963, "compression_ratio": 1.5676855895196506, "no_caption_prob": 2.6688085199566558e-05}, {"id": 462, "seek": 139800, "start": 1398.0, "end": 1403.0, "text": " whether this map function is trying to respect those rules or not", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 463, "seek": 139800, "start": 1402.0, "end": 1407.0, "text": " which we know for the core functions but not for the rest.", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 464, "seek": 139800, "start": 1406.0, "end": 1411.0, "text": " For the most part the community has a good intuition of how they should work.", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 465, "seek": 139800, "start": 1409.0, "end": 1414.0, "text": " Yeah I agree.", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 466, "seek": 139800, "start": 1411.0, "end": 1416.0, "text": " And if they don't you probably get some", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 467, "seek": 139800, "start": 1414.0, "end": 1419.0, "text": " an issue or a PR on your repo.", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 468, "seek": 139800, "start": 1417.0, "end": 1422.0, "text": " Yeah I would imagine that the fact that", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 469, "seek": 139800, "start": 1420.0, "end": 1425.0, "text": " Elm is a pure functional language would eliminate", "tokens": [50364, 1968, 341, 4471, 2445, 307, 1382, 281, 3104, 729, 4474, 420, 406, 50614, 50564, 597, 321, 458, 337, 264, 4965, 6828, 457, 406, 337, 264, 1472, 13, 50814, 50764, 1171, 264, 881, 644, 264, 1768, 575, 257, 665, 24002, 295, 577, 436, 820, 589, 13, 51014, 50914, 865, 286, 3986, 13, 51164, 51014, 400, 498, 436, 500, 380, 291, 1391, 483, 512, 51264, 51164, 364, 2734, 420, 257, 11568, 322, 428, 49040, 13, 51414, 51314, 865, 286, 576, 3811, 300, 264, 1186, 300, 51564, 51464, 2699, 76, 307, 257, 6075, 11745, 2856, 576, 13819, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.09296159355007873, "compression_ratio": 1.632034632034632, "no_caption_prob": 0.0001608807360753417}, {"id": 470, "seek": 142500, "start": 1425.0, "end": 1430.0, "text": " the idea that things would not follow these laws too.", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 471, "seek": 142500, "start": 1429.0, "end": 1434.0, "text": " I feel like it would be pretty easy to not follow a law", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 472, "seek": 142500, "start": 1432.0, "end": 1437.0, "text": " if you could accidentally throw an exception or depend on some outside state.", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 473, "seek": 142500, "start": 1437.0, "end": 1442.0, "text": " I feel like you can easily, there's a whole reason we have these laws in the functional world.", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 474, "seek": 142500, "start": 1441.0, "end": 1446.0, "text": " They're all functional things like", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 475, "seek": 142500, "start": 1443.0, "end": 1448.0, "text": " these things must be commutative or the identity function must apply in this way.", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 476, "seek": 142500, "start": 1446.0, "end": 1451.0, "text": " So they're not about not throwing errors or mutating state", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 477, "seek": 142500, "start": 1449.0, "end": 1454.0, "text": " it's just when you build your pure function here", "tokens": [50364, 264, 1558, 300, 721, 576, 406, 1524, 613, 6064, 886, 13, 50614, 50564, 286, 841, 411, 309, 576, 312, 1238, 1858, 281, 406, 1524, 257, 2101, 50814, 50714, 498, 291, 727, 15715, 3507, 364, 11183, 420, 5672, 322, 512, 2380, 1785, 13, 50964, 50964, 286, 841, 411, 291, 393, 3612, 11, 456, 311, 257, 1379, 1778, 321, 362, 613, 6064, 294, 264, 11745, 1002, 13, 51214, 51164, 814, 434, 439, 11745, 721, 411, 51414, 51264, 613, 721, 1633, 312, 800, 325, 1166, 420, 264, 6575, 2445, 1633, 3079, 294, 341, 636, 13, 51514, 51414, 407, 436, 434, 406, 466, 406, 10238, 13603, 420, 5839, 990, 1785, 51664, 51564, 309, 311, 445, 562, 291, 1322, 428, 6075, 2445, 510, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.14314795322105534, "compression_ratio": 1.8369565217391304, "no_caption_prob": 0.0007435084553435445}, {"id": 478, "seek": 145400, "start": 1454.0, "end": 1459.0, "text": " it's not a specific criteria.", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 479, "seek": 145400, "start": 1456.0, "end": 1461.0, "text": " Right but wouldn't, I mean if you throw an error then it's definitely not...", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 480, "seek": 145400, "start": 1461.0, "end": 1466.0, "text": " That kind of breaks I think other parts of functional programming", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 481, "seek": 145400, "start": 1464.0, "end": 1469.0, "text": " not for the laws.", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 482, "seek": 145400, "start": 1466.0, "end": 1471.0, "text": " Okay.", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 483, "seek": 145400, "start": 1467.0, "end": 1472.0, "text": " Yeah it's kind of like when you play Monopoly and you tell your child", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 484, "seek": 145400, "start": 1472.0, "end": 1477.0, "text": " hey if you roll a six twice then you need to go to prison", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 485, "seek": 145400, "start": 1477.0, "end": 1482.0, "text": " and then the kid just throws the table.", "tokens": [50364, 309, 311, 406, 257, 2685, 11101, 13, 50614, 50464, 1779, 457, 2759, 380, 11, 286, 914, 498, 291, 3507, 364, 6713, 550, 309, 311, 2138, 406, 485, 50714, 50714, 663, 733, 295, 9857, 286, 519, 661, 3166, 295, 11745, 9410, 50964, 50864, 406, 337, 264, 6064, 13, 51114, 50964, 1033, 13, 51214, 51014, 865, 309, 311, 733, 295, 411, 562, 291, 862, 4713, 27891, 293, 291, 980, 428, 1440, 51264, 51264, 4177, 498, 291, 3373, 257, 2309, 6091, 550, 291, 643, 281, 352, 281, 6168, 51514, 51514, 293, 550, 264, 1636, 445, 19251, 264, 3199, 13, 51764, 51664], "temperature": 0.0, "avg_logprob": -0.2309730339050293, "compression_ratio": 1.5622317596566524, "no_caption_prob": 0.00014201445446815342}, {"id": 486, "seek": 148200, "start": 1482.0, "end": 1487.0, "text": " Right.", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 487, "seek": 148200, "start": 1484.0, "end": 1489.0, "text": " That's a good analogy.", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 488, "seek": 148200, "start": 1486.0, "end": 1491.0, "text": " So one really interesting thing that comes out of this very broad definition of", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 489, "seek": 148200, "start": 1491.0, "end": 1496.0, "text": " here's some laws and a few functions that must follow those laws", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 490, "seek": 148200, "start": 1494.0, "end": 1499.0, "text": " is that for any given type there may be more than one valid implementation", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 491, "seek": 148200, "start": 1499.0, "end": 1504.0, "text": " that follows the laws and the signatures and all this stuff.", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 492, "seek": 148200, "start": 1503.0, "end": 1508.0, "text": " So there is no, not necessarily a single", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 493, "seek": 148200, "start": 1506.0, "end": 1511.0, "text": " for example applicative implementation for lists.", "tokens": [50364, 1779, 13, 50614, 50464, 663, 311, 257, 665, 21663, 13, 50714, 50564, 407, 472, 534, 1880, 551, 300, 1487, 484, 295, 341, 588, 4152, 7123, 295, 50814, 50814, 510, 311, 512, 6064, 293, 257, 1326, 6828, 300, 1633, 1524, 729, 6064, 51064, 50964, 307, 300, 337, 604, 2212, 2010, 456, 815, 312, 544, 813, 472, 7363, 11420, 51214, 51214, 300, 10002, 264, 6064, 293, 264, 32322, 293, 439, 341, 1507, 13, 51464, 51414, 407, 456, 307, 572, 11, 406, 4725, 257, 2167, 51664, 51564, 337, 1365, 2580, 1166, 11420, 337, 14511, 13, 51814, 51764], "temperature": 0.0, "avg_logprob": -0.08761037389437358, "compression_ratio": 1.7136752136752136, "no_caption_prob": 9.609814878785983e-05}, {"id": 494, "seek": 151100, "start": 1511.0, "end": 1516.0, "text": " So applicative being like map 2 right?", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 495, "seek": 151100, "start": 1513.0, "end": 1518.0, "text": " Yes, map 2.", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 496, "seek": 151100, "start": 1515.0, "end": 1520.0, "text": " So in Elm when we map 2 with two lists we're effectively zipping them together", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 497, "seek": 151100, "start": 1520.0, "end": 1525.0, "text": " but it's also possible to do a map 2 in a way that's doing a Cartesian product", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 498, "seek": 151100, "start": 1525.0, "end": 1530.0, "text": " so all the possible combinations from the two lists", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 499, "seek": 151100, "start": 1528.0, "end": 1533.0, "text": " and that's what Haskell's map 2 does", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 500, "seek": 151100, "start": 1532.0, "end": 1537.0, "text": " and both of these are completely valid.", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 501, "seek": 151100, "start": 1535.0, "end": 1540.0, "text": " In fact Martin Janicek", "tokens": [50364, 407, 2580, 1166, 885, 411, 4471, 568, 558, 30, 50614, 50464, 1079, 11, 4471, 568, 13, 50714, 50564, 407, 294, 2699, 76, 562, 321, 4471, 568, 365, 732, 14511, 321, 434, 8659, 710, 6297, 552, 1214, 50814, 50814, 457, 309, 311, 611, 1944, 281, 360, 257, 4471, 568, 294, 257, 636, 300, 311, 884, 257, 22478, 42434, 1674, 51064, 51064, 370, 439, 264, 1944, 21267, 490, 264, 732, 14511, 51314, 51214, 293, 300, 311, 437, 8646, 43723, 311, 4471, 568, 775, 51464, 51414, 293, 1293, 295, 613, 366, 2584, 7363, 13, 51664, 51564, 682, 1186, 9184, 4956, 573, 74, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1157114899274215, "compression_ratio": 1.5517241379310345, "no_caption_prob": 1.750258161337115e-05}, {"id": 502, "seek": 154000, "start": 1540.0, "end": 1545.0, "text": " built a package that has a list.zip", "tokens": [50364, 3094, 257, 7372, 300, 575, 257, 1329, 13, 27268, 50614, 50564, 293, 1329, 13, 44672, 42434, 281, 20388, 264, 1186, 300, 1293, 295, 613, 366, 50814, 50814, 819, 2098, 295, 1419, 4471, 568, 300, 589, 294, 819, 30628, 13, 51064, 51064, 865, 293, 264, 8177, 337, 300, 307, 300, 436, 3104, 729, 6064, 293, 300, 436, 362, 51314, 51264, 300, 2121, 2010, 13397, 558, 30, 51514, 51414, 1079, 13, 51664, 51464, 3950, 366, 264, 787, 11101, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.12130872702892916, "compression_ratio": 1.597938144329897, "no_caption_prob": 3.1692507036495954e-05}, {"id": 503, "seek": 154000, "start": 1544.0, "end": 1549.0, "text": " and list.cartesian to showcase the fact that both of these are", "tokens": [50364, 3094, 257, 7372, 300, 575, 257, 1329, 13, 27268, 50614, 50564, 293, 1329, 13, 44672, 42434, 281, 20388, 264, 1186, 300, 1293, 295, 613, 366, 50814, 50814, 819, 2098, 295, 1419, 4471, 568, 300, 589, 294, 819, 30628, 13, 51064, 51064, 865, 293, 264, 8177, 337, 300, 307, 300, 436, 3104, 729, 6064, 293, 300, 436, 362, 51314, 51264, 300, 2121, 2010, 13397, 558, 30, 51514, 51414, 1079, 13, 51664, 51464, 3950, 366, 264, 787, 11101, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.12130872702892916, "compression_ratio": 1.597938144329897, "no_caption_prob": 3.1692507036495954e-05}, {"id": 504, "seek": 154000, "start": 1549.0, "end": 1554.0, "text": " different ways of having map 2 that work in different contexts.", "tokens": [50364, 3094, 257, 7372, 300, 575, 257, 1329, 13, 27268, 50614, 50564, 293, 1329, 13, 44672, 42434, 281, 20388, 264, 1186, 300, 1293, 295, 613, 366, 50814, 50814, 819, 2098, 295, 1419, 4471, 568, 300, 589, 294, 819, 30628, 13, 51064, 51064, 865, 293, 264, 8177, 337, 300, 307, 300, 436, 3104, 729, 6064, 293, 300, 436, 362, 51314, 51264, 300, 2121, 2010, 13397, 558, 30, 51514, 51414, 1079, 13, 51664, 51464, 3950, 366, 264, 787, 11101, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.12130872702892916, "compression_ratio": 1.597938144329897, "no_caption_prob": 3.1692507036495954e-05}, {"id": 505, "seek": 154000, "start": 1554.0, "end": 1559.0, "text": " Yeah and the proof for that is that they respect those laws and that they have", "tokens": [50364, 3094, 257, 7372, 300, 575, 257, 1329, 13, 27268, 50614, 50564, 293, 1329, 13, 44672, 42434, 281, 20388, 264, 1186, 300, 1293, 295, 613, 366, 50814, 50814, 819, 2098, 295, 1419, 4471, 568, 300, 589, 294, 819, 30628, 13, 51064, 51064, 865, 293, 264, 8177, 337, 300, 307, 300, 436, 3104, 729, 6064, 293, 300, 436, 362, 51314, 51264, 300, 2121, 2010, 13397, 558, 30, 51514, 51414, 1079, 13, 51664, 51464, 3950, 366, 264, 787, 11101, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.12130872702892916, "compression_ratio": 1.597938144329897, "no_caption_prob": 3.1692507036495954e-05}, {"id": 506, "seek": 154000, "start": 1558.0, "end": 1563.0, "text": " that special type signature right?", "tokens": [50364, 3094, 257, 7372, 300, 575, 257, 1329, 13, 27268, 50614, 50564, 293, 1329, 13, 44672, 42434, 281, 20388, 264, 1186, 300, 1293, 295, 613, 366, 50814, 50814, 819, 2098, 295, 1419, 4471, 568, 300, 589, 294, 819, 30628, 13, 51064, 51064, 865, 293, 264, 8177, 337, 300, 307, 300, 436, 3104, 729, 6064, 293, 300, 436, 362, 51314, 51264, 300, 2121, 2010, 13397, 558, 30, 51514, 51414, 1079, 13, 51664, 51464, 3950, 366, 264, 787, 11101, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.12130872702892916, "compression_ratio": 1.597938144329897, "no_caption_prob": 3.1692507036495954e-05}, {"id": 507, "seek": 154000, "start": 1561.0, "end": 1566.0, "text": " Yes.", "tokens": [50364, 3094, 257, 7372, 300, 575, 257, 1329, 13, 27268, 50614, 50564, 293, 1329, 13, 44672, 42434, 281, 20388, 264, 1186, 300, 1293, 295, 613, 366, 50814, 50814, 819, 2098, 295, 1419, 4471, 568, 300, 589, 294, 819, 30628, 13, 51064, 51064, 865, 293, 264, 8177, 337, 300, 307, 300, 436, 3104, 729, 6064, 293, 300, 436, 362, 51314, 51264, 300, 2121, 2010, 13397, 558, 30, 51514, 51414, 1079, 13, 51664, 51464, 3950, 366, 264, 787, 11101, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.12130872702892916, "compression_ratio": 1.597938144329897, "no_caption_prob": 3.1692507036495954e-05}, {"id": 508, "seek": 154000, "start": 1562.0, "end": 1567.0, "text": " Those are the only criteria.", "tokens": [50364, 3094, 257, 7372, 300, 575, 257, 1329, 13, 27268, 50614, 50564, 293, 1329, 13, 44672, 42434, 281, 20388, 264, 1186, 300, 1293, 295, 613, 366, 50814, 50814, 819, 2098, 295, 1419, 4471, 568, 300, 589, 294, 819, 30628, 13, 51064, 51064, 865, 293, 264, 8177, 337, 300, 307, 300, 436, 3104, 729, 6064, 293, 300, 436, 362, 51314, 51264, 300, 2121, 2010, 13397, 558, 30, 51514, 51414, 1079, 13, 51664, 51464, 3950, 366, 264, 787, 11101, 13, 51714, 51614], "temperature": 0.0, "avg_logprob": -0.12130872702892916, "compression_ratio": 1.597938144329897, "no_caption_prob": 3.1692507036495954e-05}, {"id": 509, "seek": 156700, "start": 1567.0, "end": 1572.0, "text": " Do they need to match maybe?", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 510, "seek": 156700, "start": 1570.0, "end": 1575.0, "text": " In Elm no, the name doesn't have to match.", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 511, "seek": 156700, "start": 1572.0, "end": 1577.0, "text": " Yeah no, because there's no concept of functors or anything.", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 512, "seek": 156700, "start": 1576.0, "end": 1581.0, "text": " Right.", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 513, "seek": 156700, "start": 1577.0, "end": 1582.0, "text": " In Martin's package what he's done is just created two modules", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 514, "seek": 156700, "start": 1583.0, "end": 1588.0, "text": " with it expose functions that operate on the same data type", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 515, "seek": 156700, "start": 1586.0, "end": 1591.0, "text": " that way he can reuse the name in a different namespace.", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 516, "seek": 156700, "start": 1589.0, "end": 1594.0, "text": " So you've got list.cartesian.map2", "tokens": [50364, 1144, 436, 643, 281, 2995, 1310, 30, 50614, 50514, 682, 2699, 76, 572, 11, 264, 1315, 1177, 380, 362, 281, 2995, 13, 50764, 50614, 865, 572, 11, 570, 456, 311, 572, 3410, 295, 1019, 5547, 420, 1340, 13, 50864, 50814, 1779, 13, 51064, 50864, 682, 9184, 311, 7372, 437, 415, 311, 1096, 307, 445, 2942, 732, 16679, 51114, 51164, 365, 309, 19219, 6828, 300, 9651, 322, 264, 912, 1412, 2010, 51414, 51314, 300, 636, 415, 393, 26225, 264, 1315, 294, 257, 819, 5288, 17940, 13, 51564, 51464, 407, 291, 600, 658, 1329, 13, 44672, 42434, 13, 24223, 17, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14102865667904124, "compression_ratio": 1.5085470085470085, "no_caption_prob": 0.00030055397655814886}, {"id": 517, "seek": 159400, "start": 1594.0, "end": 1599.0, "text": " and list.zip.map2.", "tokens": [50364, 293, 1329, 13, 27268, 13, 24223, 17, 13, 50614, 50464, 42109, 11, 286, 1194, 415, 632, 1096, 411, 257, 4471, 5467, 42434, 420, 4471, 20730, 13, 50714, 50714, 865, 11, 572, 294, 341, 1389, 415, 445, 1143, 264, 5288, 17940, 293, 1143, 264, 912, 1315, 50964, 50964, 293, 436, 1293, 605, 322, 264, 912, 4965, 1329, 2010, 13, 51214, 51114, 407, 309, 311, 406, 411, 1184, 295, 552, 575, 300, 11, 456, 311, 406, 264, 3410, 295, 257, 5467, 42434, 1329, 293, 257, 20730, 1329, 13, 51364, 51314, 42109, 13, 51564, 51364, 639, 611, 2314, 257, 688, 337, 472, 295, 264, 18587, 8294, 1219, 4713, 17079, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.16895082647150214, "compression_ratio": 1.6607929515418502, "no_caption_prob": 3.3212651032954454e-05}, {"id": 518, "seek": 159400, "start": 1596.0, "end": 1601.0, "text": " Gotcha, I thought he had done like a map cartesian or map zip.", "tokens": [50364, 293, 1329, 13, 27268, 13, 24223, 17, 13, 50614, 50464, 42109, 11, 286, 1194, 415, 632, 1096, 411, 257, 4471, 5467, 42434, 420, 4471, 20730, 13, 50714, 50714, 865, 11, 572, 294, 341, 1389, 415, 445, 1143, 264, 5288, 17940, 293, 1143, 264, 912, 1315, 50964, 50964, 293, 436, 1293, 605, 322, 264, 912, 4965, 1329, 2010, 13, 51214, 51114, 407, 309, 311, 406, 411, 1184, 295, 552, 575, 300, 11, 456, 311, 406, 264, 3410, 295, 257, 5467, 42434, 1329, 293, 257, 20730, 1329, 13, 51364, 51314, 42109, 13, 51564, 51364, 639, 611, 2314, 257, 688, 337, 472, 295, 264, 18587, 8294, 1219, 4713, 17079, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.16895082647150214, "compression_ratio": 1.6607929515418502, "no_caption_prob": 3.3212651032954454e-05}, {"id": 519, "seek": 159400, "start": 1601.0, "end": 1606.0, "text": " Yeah, no in this case he just used the namespace and used the same name", "tokens": [50364, 293, 1329, 13, 27268, 13, 24223, 17, 13, 50614, 50464, 42109, 11, 286, 1194, 415, 632, 1096, 411, 257, 4471, 5467, 42434, 420, 4471, 20730, 13, 50714, 50714, 865, 11, 572, 294, 341, 1389, 415, 445, 1143, 264, 5288, 17940, 293, 1143, 264, 912, 1315, 50964, 50964, 293, 436, 1293, 605, 322, 264, 912, 4965, 1329, 2010, 13, 51214, 51114, 407, 309, 311, 406, 411, 1184, 295, 552, 575, 300, 11, 456, 311, 406, 264, 3410, 295, 257, 5467, 42434, 1329, 293, 257, 20730, 1329, 13, 51364, 51314, 42109, 13, 51564, 51364, 639, 611, 2314, 257, 688, 337, 472, 295, 264, 18587, 8294, 1219, 4713, 17079, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.16895082647150214, "compression_ratio": 1.6607929515418502, "no_caption_prob": 3.3212651032954454e-05}, {"id": 520, "seek": 159400, "start": 1606.0, "end": 1611.0, "text": " and they both act on the same core list type.", "tokens": [50364, 293, 1329, 13, 27268, 13, 24223, 17, 13, 50614, 50464, 42109, 11, 286, 1194, 415, 632, 1096, 411, 257, 4471, 5467, 42434, 420, 4471, 20730, 13, 50714, 50714, 865, 11, 572, 294, 341, 1389, 415, 445, 1143, 264, 5288, 17940, 293, 1143, 264, 912, 1315, 50964, 50964, 293, 436, 1293, 605, 322, 264, 912, 4965, 1329, 2010, 13, 51214, 51114, 407, 309, 311, 406, 411, 1184, 295, 552, 575, 300, 11, 456, 311, 406, 264, 3410, 295, 257, 5467, 42434, 1329, 293, 257, 20730, 1329, 13, 51364, 51314, 42109, 13, 51564, 51364, 639, 611, 2314, 257, 688, 337, 472, 295, 264, 18587, 8294, 1219, 4713, 17079, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.16895082647150214, "compression_ratio": 1.6607929515418502, "no_caption_prob": 3.3212651032954454e-05}, {"id": 521, "seek": 159400, "start": 1609.0, "end": 1614.0, "text": " So it's not like each of them has that, there's not the concept of a cartesian list and a zip list.", "tokens": [50364, 293, 1329, 13, 27268, 13, 24223, 17, 13, 50614, 50464, 42109, 11, 286, 1194, 415, 632, 1096, 411, 257, 4471, 5467, 42434, 420, 4471, 20730, 13, 50714, 50714, 865, 11, 572, 294, 341, 1389, 415, 445, 1143, 264, 5288, 17940, 293, 1143, 264, 912, 1315, 50964, 50964, 293, 436, 1293, 605, 322, 264, 912, 4965, 1329, 2010, 13, 51214, 51114, 407, 309, 311, 406, 411, 1184, 295, 552, 575, 300, 11, 456, 311, 406, 264, 3410, 295, 257, 5467, 42434, 1329, 293, 257, 20730, 1329, 13, 51364, 51314, 42109, 13, 51564, 51364, 639, 611, 2314, 257, 688, 337, 472, 295, 264, 18587, 8294, 1219, 4713, 17079, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.16895082647150214, "compression_ratio": 1.6607929515418502, "no_caption_prob": 3.3212651032954454e-05}, {"id": 522, "seek": 159400, "start": 1613.0, "end": 1618.0, "text": " Gotcha.", "tokens": [50364, 293, 1329, 13, 27268, 13, 24223, 17, 13, 50614, 50464, 42109, 11, 286, 1194, 415, 632, 1096, 411, 257, 4471, 5467, 42434, 420, 4471, 20730, 13, 50714, 50714, 865, 11, 572, 294, 341, 1389, 415, 445, 1143, 264, 5288, 17940, 293, 1143, 264, 912, 1315, 50964, 50964, 293, 436, 1293, 605, 322, 264, 912, 4965, 1329, 2010, 13, 51214, 51114, 407, 309, 311, 406, 411, 1184, 295, 552, 575, 300, 11, 456, 311, 406, 264, 3410, 295, 257, 5467, 42434, 1329, 293, 257, 20730, 1329, 13, 51364, 51314, 42109, 13, 51564, 51364, 639, 611, 2314, 257, 688, 337, 472, 295, 264, 18587, 8294, 1219, 4713, 17079, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.16895082647150214, "compression_ratio": 1.6607929515418502, "no_caption_prob": 3.3212651032954454e-05}, {"id": 523, "seek": 159400, "start": 1614.0, "end": 1619.0, "text": " This also happens a lot for one of the simpler patterns called Monoid", "tokens": [50364, 293, 1329, 13, 27268, 13, 24223, 17, 13, 50614, 50464, 42109, 11, 286, 1194, 415, 632, 1096, 411, 257, 4471, 5467, 42434, 420, 4471, 20730, 13, 50714, 50714, 865, 11, 572, 294, 341, 1389, 415, 445, 1143, 264, 5288, 17940, 293, 1143, 264, 912, 1315, 50964, 50964, 293, 436, 1293, 605, 322, 264, 912, 4965, 1329, 2010, 13, 51214, 51114, 407, 309, 311, 406, 411, 1184, 295, 552, 575, 300, 11, 456, 311, 406, 264, 3410, 295, 257, 5467, 42434, 1329, 293, 257, 20730, 1329, 13, 51364, 51314, 42109, 13, 51564, 51364, 639, 611, 2314, 257, 688, 337, 472, 295, 264, 18587, 8294, 1219, 4713, 17079, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.16895082647150214, "compression_ratio": 1.6607929515418502, "no_caption_prob": 3.3212651032954454e-05}, {"id": 524, "seek": 161900, "start": 1619.0, "end": 1624.0, "text": " which is built around this idea of like combining items.", "tokens": [50364, 597, 307, 3094, 926, 341, 1558, 295, 411, 21928, 4754, 13, 50614, 50614, 407, 286, 519, 437, 291, 643, 307, 291, 643, 512, 1333, 295, 21928, 2445, 50864, 50864, 300, 393, 10432, 732, 4190, 295, 257, 2010, 293, 550, 291, 643, 257, 1333, 295, 6707, 3174, 51114, 51114, 300, 562, 291, 10432, 309, 365, 746, 1646, 307, 10344, 281, 6575, 13, 51364, 51314, 400, 337, 1365, 1237, 412, 3547, 291, 393, 909, 732, 3547, 1214, 51564, 51564, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 483, 264, 912, 1230, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15381591488616636, "compression_ratio": 1.794871794871795, "no_caption_prob": 7.602169353049248e-05}, {"id": 525, "seek": 161900, "start": 1624.0, "end": 1629.0, "text": " So I think what you need is you need some sort of combining function", "tokens": [50364, 597, 307, 3094, 926, 341, 1558, 295, 411, 21928, 4754, 13, 50614, 50614, 407, 286, 519, 437, 291, 643, 307, 291, 643, 512, 1333, 295, 21928, 2445, 50864, 50864, 300, 393, 10432, 732, 4190, 295, 257, 2010, 293, 550, 291, 643, 257, 1333, 295, 6707, 3174, 51114, 51114, 300, 562, 291, 10432, 309, 365, 746, 1646, 307, 10344, 281, 6575, 13, 51364, 51314, 400, 337, 1365, 1237, 412, 3547, 291, 393, 909, 732, 3547, 1214, 51564, 51564, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 483, 264, 912, 1230, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15381591488616636, "compression_ratio": 1.794871794871795, "no_caption_prob": 7.602169353049248e-05}, {"id": 526, "seek": 161900, "start": 1629.0, "end": 1634.0, "text": " that can combine two values of a type and then you need a sort of empty item", "tokens": [50364, 597, 307, 3094, 926, 341, 1558, 295, 411, 21928, 4754, 13, 50614, 50614, 407, 286, 519, 437, 291, 643, 307, 291, 643, 512, 1333, 295, 21928, 2445, 50864, 50864, 300, 393, 10432, 732, 4190, 295, 257, 2010, 293, 550, 291, 643, 257, 1333, 295, 6707, 3174, 51114, 51114, 300, 562, 291, 10432, 309, 365, 746, 1646, 307, 10344, 281, 6575, 13, 51364, 51314, 400, 337, 1365, 1237, 412, 3547, 291, 393, 909, 732, 3547, 1214, 51564, 51564, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 483, 264, 912, 1230, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15381591488616636, "compression_ratio": 1.794871794871795, "no_caption_prob": 7.602169353049248e-05}, {"id": 527, "seek": 161900, "start": 1634.0, "end": 1639.0, "text": " that when you combine it with something else is equivalent to identity.", "tokens": [50364, 597, 307, 3094, 926, 341, 1558, 295, 411, 21928, 4754, 13, 50614, 50614, 407, 286, 519, 437, 291, 643, 307, 291, 643, 512, 1333, 295, 21928, 2445, 50864, 50864, 300, 393, 10432, 732, 4190, 295, 257, 2010, 293, 550, 291, 643, 257, 1333, 295, 6707, 3174, 51114, 51114, 300, 562, 291, 10432, 309, 365, 746, 1646, 307, 10344, 281, 6575, 13, 51364, 51314, 400, 337, 1365, 1237, 412, 3547, 291, 393, 909, 732, 3547, 1214, 51564, 51564, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 483, 264, 912, 1230, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15381591488616636, "compression_ratio": 1.794871794871795, "no_caption_prob": 7.602169353049248e-05}, {"id": 528, "seek": 161900, "start": 1638.0, "end": 1643.0, "text": " And for example looking at numbers you can add two numbers together", "tokens": [50364, 597, 307, 3094, 926, 341, 1558, 295, 411, 21928, 4754, 13, 50614, 50614, 407, 286, 519, 437, 291, 643, 307, 291, 643, 512, 1333, 295, 21928, 2445, 50864, 50864, 300, 393, 10432, 732, 4190, 295, 257, 2010, 293, 550, 291, 643, 257, 1333, 295, 6707, 3174, 51114, 51114, 300, 562, 291, 10432, 309, 365, 746, 1646, 307, 10344, 281, 6575, 13, 51364, 51314, 400, 337, 1365, 1237, 412, 3547, 291, 393, 909, 732, 3547, 1214, 51564, 51564, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 483, 264, 912, 1230, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15381591488616636, "compression_ratio": 1.794871794871795, "no_caption_prob": 7.602169353049248e-05}, {"id": 529, "seek": 164300, "start": 1643.0, "end": 1648.0, "text": " that's a form of combining and if you add zero you don't change your number.", "tokens": [50364, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 1319, 428, 1230, 13, 50614, 50614, 400, 370, 4500, 337, 3547, 307, 257, 1108, 17079, 50864, 50864, 457, 309, 307, 406, 264, 787, 472, 570, 291, 727, 360, 264, 912, 551, 365, 27290, 51114, 51114, 3993, 294, 341, 1389, 428, 1333, 295, 3096, 4478, 300, 562, 17207, 1177, 380, 1319, 307, 406, 4018, 51364, 51364, 309, 307, 472, 570, 604, 1230, 17207, 538, 472, 307, 2564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09096515879911535, "compression_ratio": 1.7727272727272727, "no_caption_prob": 4.832314880331978e-05}, {"id": 530, "seek": 164300, "start": 1648.0, "end": 1653.0, "text": " And so addition for numbers is a monoid", "tokens": [50364, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 1319, 428, 1230, 13, 50614, 50614, 400, 370, 4500, 337, 3547, 307, 257, 1108, 17079, 50864, 50864, 457, 309, 307, 406, 264, 787, 472, 570, 291, 727, 360, 264, 912, 551, 365, 27290, 51114, 51114, 3993, 294, 341, 1389, 428, 1333, 295, 3096, 4478, 300, 562, 17207, 1177, 380, 1319, 307, 406, 4018, 51364, 51364, 309, 307, 472, 570, 604, 1230, 17207, 538, 472, 307, 2564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09096515879911535, "compression_ratio": 1.7727272727272727, "no_caption_prob": 4.832314880331978e-05}, {"id": 531, "seek": 164300, "start": 1653.0, "end": 1658.0, "text": " but it is not the only one because you could do the same thing with multiplication", "tokens": [50364, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 1319, 428, 1230, 13, 50614, 50614, 400, 370, 4500, 337, 3547, 307, 257, 1108, 17079, 50864, 50864, 457, 309, 307, 406, 264, 787, 472, 570, 291, 727, 360, 264, 912, 551, 365, 27290, 51114, 51114, 3993, 294, 341, 1389, 428, 1333, 295, 3096, 4478, 300, 562, 17207, 1177, 380, 1319, 307, 406, 4018, 51364, 51364, 309, 307, 472, 570, 604, 1230, 17207, 538, 472, 307, 2564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09096515879911535, "compression_ratio": 1.7727272727272727, "no_caption_prob": 4.832314880331978e-05}, {"id": 532, "seek": 164300, "start": 1658.0, "end": 1663.0, "text": " except in this case your sort of base element that when multiplied doesn't change is not zero", "tokens": [50364, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 1319, 428, 1230, 13, 50614, 50614, 400, 370, 4500, 337, 3547, 307, 257, 1108, 17079, 50864, 50864, 457, 309, 307, 406, 264, 787, 472, 570, 291, 727, 360, 264, 912, 551, 365, 27290, 51114, 51114, 3993, 294, 341, 1389, 428, 1333, 295, 3096, 4478, 300, 562, 17207, 1177, 380, 1319, 307, 406, 4018, 51364, 51364, 309, 307, 472, 570, 604, 1230, 17207, 538, 472, 307, 2564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09096515879911535, "compression_ratio": 1.7727272727272727, "no_caption_prob": 4.832314880331978e-05}, {"id": 533, "seek": 164300, "start": 1663.0, "end": 1668.0, "text": " it is one because any number multiplied by one is itself.", "tokens": [50364, 300, 311, 257, 1254, 295, 21928, 293, 498, 291, 909, 4018, 291, 500, 380, 1319, 428, 1230, 13, 50614, 50614, 400, 370, 4500, 337, 3547, 307, 257, 1108, 17079, 50864, 50864, 457, 309, 307, 406, 264, 787, 472, 570, 291, 727, 360, 264, 912, 551, 365, 27290, 51114, 51114, 3993, 294, 341, 1389, 428, 1333, 295, 3096, 4478, 300, 562, 17207, 1177, 380, 1319, 307, 406, 4018, 51364, 51364, 309, 307, 472, 570, 604, 1230, 17207, 538, 472, 307, 2564, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09096515879911535, "compression_ratio": 1.7727272727272727, "no_caption_prob": 4.832314880331978e-05}, {"id": 534, "seek": 166800, "start": 1668.0, "end": 1673.0, "text": " So and I actually like monoid as a sort of example", "tokens": [50364, 407, 293, 286, 767, 411, 1108, 17079, 382, 257, 1333, 295, 1365, 50614, 50614, 294, 300, 321, 2049, 3928, 281, 519, 295, 613, 1333, 295, 10479, 382, 26387, 281, 264, 2010, 50864, 50864, 457, 309, 311, 406, 534, 466, 264, 2010, 2564, 309, 311, 411, 257, 551, 291, 393, 4583, 322, 51114, 51114, 293, 370, 437, 291, 643, 307, 411, 1333, 295, 2940, 819, 6542, 3755, 300, 439, 808, 1214, 51364, 51364, 293, 498, 436, 434, 439, 1974, 550, 291, 393, 751, 466, 264, 5765, 382, 885, 341, 7719, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06736724607406123, "compression_ratio": 1.7828054298642535, "no_caption_prob": 2.0784602384082973e-05}, {"id": 535, "seek": 166800, "start": 1673.0, "end": 1678.0, "text": " in that we often tend to think of these sort of categories as inherent to the type", "tokens": [50364, 407, 293, 286, 767, 411, 1108, 17079, 382, 257, 1333, 295, 1365, 50614, 50614, 294, 300, 321, 2049, 3928, 281, 519, 295, 613, 1333, 295, 10479, 382, 26387, 281, 264, 2010, 50864, 50864, 457, 309, 311, 406, 534, 466, 264, 2010, 2564, 309, 311, 411, 257, 551, 291, 393, 4583, 322, 51114, 51114, 293, 370, 437, 291, 643, 307, 411, 1333, 295, 2940, 819, 6542, 3755, 300, 439, 808, 1214, 51364, 51364, 293, 498, 436, 434, 439, 1974, 550, 291, 393, 751, 466, 264, 5765, 382, 885, 341, 7719, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06736724607406123, "compression_ratio": 1.7828054298642535, "no_caption_prob": 2.0784602384082973e-05}, {"id": 536, "seek": 166800, "start": 1678.0, "end": 1683.0, "text": " but it's not really about the type itself it's like a thing you can layer on", "tokens": [50364, 407, 293, 286, 767, 411, 1108, 17079, 382, 257, 1333, 295, 1365, 50614, 50614, 294, 300, 321, 2049, 3928, 281, 519, 295, 613, 1333, 295, 10479, 382, 26387, 281, 264, 2010, 50864, 50864, 457, 309, 311, 406, 534, 466, 264, 2010, 2564, 309, 311, 411, 257, 551, 291, 393, 4583, 322, 51114, 51114, 293, 370, 437, 291, 643, 307, 411, 1333, 295, 2940, 819, 6542, 3755, 300, 439, 808, 1214, 51364, 51364, 293, 498, 436, 434, 439, 1974, 550, 291, 393, 751, 466, 264, 5765, 382, 885, 341, 7719, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06736724607406123, "compression_ratio": 1.7828054298642535, "no_caption_prob": 2.0784602384082973e-05}, {"id": 537, "seek": 166800, "start": 1683.0, "end": 1688.0, "text": " and so what you need is like sort of several different component pieces that all come together", "tokens": [50364, 407, 293, 286, 767, 411, 1108, 17079, 382, 257, 1333, 295, 1365, 50614, 50614, 294, 300, 321, 2049, 3928, 281, 519, 295, 613, 1333, 295, 10479, 382, 26387, 281, 264, 2010, 50864, 50864, 457, 309, 311, 406, 534, 466, 264, 2010, 2564, 309, 311, 411, 257, 551, 291, 393, 4583, 322, 51114, 51114, 293, 370, 437, 291, 643, 307, 411, 1333, 295, 2940, 819, 6542, 3755, 300, 439, 808, 1214, 51364, 51364, 293, 498, 436, 434, 439, 1974, 550, 291, 393, 751, 466, 264, 5765, 382, 885, 341, 7719, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06736724607406123, "compression_ratio": 1.7828054298642535, "no_caption_prob": 2.0784602384082973e-05}, {"id": 538, "seek": 166800, "start": 1688.0, "end": 1693.0, "text": " and if they're all present then you can talk about the collection as being this category", "tokens": [50364, 407, 293, 286, 767, 411, 1108, 17079, 382, 257, 1333, 295, 1365, 50614, 50614, 294, 300, 321, 2049, 3928, 281, 519, 295, 613, 1333, 295, 10479, 382, 26387, 281, 264, 2010, 50864, 50864, 457, 309, 311, 406, 534, 466, 264, 2010, 2564, 309, 311, 411, 257, 551, 291, 393, 4583, 322, 51114, 51114, 293, 370, 437, 291, 643, 307, 411, 1333, 295, 2940, 819, 6542, 3755, 300, 439, 808, 1214, 51364, 51364, 293, 498, 436, 434, 439, 1974, 550, 291, 393, 751, 466, 264, 5765, 382, 885, 341, 7719, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06736724607406123, "compression_ratio": 1.7828054298642535, "no_caption_prob": 2.0784602384082973e-05}, {"id": 539, "seek": 169300, "start": 1693.0, "end": 1698.0, "text": " in this case monoid. So you can see if you have numbers", "tokens": [50364, 294, 341, 1389, 1108, 17079, 13, 407, 291, 393, 536, 498, 291, 362, 3547, 50614, 50614, 293, 4018, 293, 27290, 586, 291, 362, 257, 1108, 17079, 50864, 50864, 457, 291, 643, 439, 1045, 295, 729, 13, 22592, 1616, 538, 2969, 366, 406, 27993, 1108, 17079, 51114, 51114, 300, 311, 406, 257, 551, 466, 264, 2010, 13, 51364, 51164, 1779, 411, 291, 727, 362, 512, 2121, 733, 295, 3547, 300, 291, 2644, 909, 13, 51414, 51564, 682, 1186, 291, 393, 6964, 257, 1230, 2010, 293, 445, 406, 4445, 264, 4500, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09849166870117188, "compression_ratio": 1.6964285714285714, "no_caption_prob": 4.33157074439805e-05}, {"id": 540, "seek": 169300, "start": 1698.0, "end": 1703.0, "text": " and zero and multiplication now you have a monoid", "tokens": [50364, 294, 341, 1389, 1108, 17079, 13, 407, 291, 393, 536, 498, 291, 362, 3547, 50614, 50614, 293, 4018, 293, 27290, 586, 291, 362, 257, 1108, 17079, 50864, 50864, 457, 291, 643, 439, 1045, 295, 729, 13, 22592, 1616, 538, 2969, 366, 406, 27993, 1108, 17079, 51114, 51114, 300, 311, 406, 257, 551, 466, 264, 2010, 13, 51364, 51164, 1779, 411, 291, 727, 362, 512, 2121, 733, 295, 3547, 300, 291, 2644, 909, 13, 51414, 51564, 682, 1186, 291, 393, 6964, 257, 1230, 2010, 293, 445, 406, 4445, 264, 4500, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09849166870117188, "compression_ratio": 1.6964285714285714, "no_caption_prob": 4.33157074439805e-05}, {"id": 541, "seek": 169300, "start": 1703.0, "end": 1708.0, "text": " but you need all three of those. Numbers by themselves are not inherently monoid", "tokens": [50364, 294, 341, 1389, 1108, 17079, 13, 407, 291, 393, 536, 498, 291, 362, 3547, 50614, 50614, 293, 4018, 293, 27290, 586, 291, 362, 257, 1108, 17079, 50864, 50864, 457, 291, 643, 439, 1045, 295, 729, 13, 22592, 1616, 538, 2969, 366, 406, 27993, 1108, 17079, 51114, 51114, 300, 311, 406, 257, 551, 466, 264, 2010, 13, 51364, 51164, 1779, 411, 291, 727, 362, 512, 2121, 733, 295, 3547, 300, 291, 2644, 909, 13, 51414, 51564, 682, 1186, 291, 393, 6964, 257, 1230, 2010, 293, 445, 406, 4445, 264, 4500, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09849166870117188, "compression_ratio": 1.6964285714285714, "no_caption_prob": 4.33157074439805e-05}, {"id": 542, "seek": 169300, "start": 1708.0, "end": 1713.0, "text": " that's not a thing about the type.", "tokens": [50364, 294, 341, 1389, 1108, 17079, 13, 407, 291, 393, 536, 498, 291, 362, 3547, 50614, 50614, 293, 4018, 293, 27290, 586, 291, 362, 257, 1108, 17079, 50864, 50864, 457, 291, 643, 439, 1045, 295, 729, 13, 22592, 1616, 538, 2969, 366, 406, 27993, 1108, 17079, 51114, 51114, 300, 311, 406, 257, 551, 466, 264, 2010, 13, 51364, 51164, 1779, 411, 291, 727, 362, 512, 2121, 733, 295, 3547, 300, 291, 2644, 909, 13, 51414, 51564, 682, 1186, 291, 393, 6964, 257, 1230, 2010, 293, 445, 406, 4445, 264, 4500, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09849166870117188, "compression_ratio": 1.6964285714285714, "no_caption_prob": 4.33157074439805e-05}, {"id": 543, "seek": 169300, "start": 1709.0, "end": 1714.0, "text": " Right like you could have some special kind of numbers that you cannot add.", "tokens": [50364, 294, 341, 1389, 1108, 17079, 13, 407, 291, 393, 536, 498, 291, 362, 3547, 50614, 50614, 293, 4018, 293, 27290, 586, 291, 362, 257, 1108, 17079, 50864, 50864, 457, 291, 643, 439, 1045, 295, 729, 13, 22592, 1616, 538, 2969, 366, 406, 27993, 1108, 17079, 51114, 51114, 300, 311, 406, 257, 551, 466, 264, 2010, 13, 51364, 51164, 1779, 411, 291, 727, 362, 512, 2121, 733, 295, 3547, 300, 291, 2644, 909, 13, 51414, 51564, 682, 1186, 291, 393, 6964, 257, 1230, 2010, 293, 445, 406, 4445, 264, 4500, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09849166870117188, "compression_ratio": 1.6964285714285714, "no_caption_prob": 4.33157074439805e-05}, {"id": 544, "seek": 169300, "start": 1717.0, "end": 1722.0, "text": " In fact you can define a number type and just not implement the addition function.", "tokens": [50364, 294, 341, 1389, 1108, 17079, 13, 407, 291, 393, 536, 498, 291, 362, 3547, 50614, 50614, 293, 4018, 293, 27290, 586, 291, 362, 257, 1108, 17079, 50864, 50864, 457, 291, 643, 439, 1045, 295, 729, 13, 22592, 1616, 538, 2969, 366, 406, 27993, 1108, 17079, 51114, 51114, 300, 311, 406, 257, 551, 466, 264, 2010, 13, 51364, 51164, 1779, 411, 291, 727, 362, 512, 2121, 733, 295, 3547, 300, 291, 2644, 909, 13, 51414, 51564, 682, 1186, 291, 393, 6964, 257, 1230, 2010, 293, 445, 406, 4445, 264, 4500, 2445, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09849166870117188, "compression_ratio": 1.6964285714285714, "no_caption_prob": 4.33157074439805e-05}, {"id": 545, "seek": 172200, "start": 1722.0, "end": 1727.0, "text": " Exactly yeah and then it wouldn't be a monoid.", "tokens": [50364, 7587, 1338, 293, 550, 309, 2759, 380, 312, 257, 1108, 17079, 13, 50614, 50614, 7587, 264, 1880, 551, 307, 300, 1580, 393, 2893, 257, 2010, 294, 257, 7372, 50864, 50864, 293, 406, 2464, 512, 295, 613, 6828, 293, 370, 309, 307, 406, 257, 1019, 1672, 420, 257, 1108, 345, 420, 604, 295, 613, 661, 721, 51114, 51114, 457, 550, 286, 2235, 760, 341, 7372, 293, 294, 452, 3861, 286, 2464, 472, 295, 613, 6828, 51364, 51364, 281, 605, 322, 341, 2636, 3595, 2010, 293, 439, 295, 257, 3990, 1951, 264, 4319, 295, 452, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07681946851769272, "compression_ratio": 1.7927927927927927, "no_caption_prob": 1.568936204421334e-05}, {"id": 546, "seek": 172200, "start": 1727.0, "end": 1732.0, "text": " Exactly the interesting thing is that someone can provide a type in a package", "tokens": [50364, 7587, 1338, 293, 550, 309, 2759, 380, 312, 257, 1108, 17079, 13, 50614, 50614, 7587, 264, 1880, 551, 307, 300, 1580, 393, 2893, 257, 2010, 294, 257, 7372, 50864, 50864, 293, 406, 2464, 512, 295, 613, 6828, 293, 370, 309, 307, 406, 257, 1019, 1672, 420, 257, 1108, 345, 420, 604, 295, 613, 661, 721, 51114, 51114, 457, 550, 286, 2235, 760, 341, 7372, 293, 294, 452, 3861, 286, 2464, 472, 295, 613, 6828, 51364, 51364, 281, 605, 322, 341, 2636, 3595, 2010, 293, 439, 295, 257, 3990, 1951, 264, 4319, 295, 452, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07681946851769272, "compression_ratio": 1.7927927927927927, "no_caption_prob": 1.568936204421334e-05}, {"id": 547, "seek": 172200, "start": 1732.0, "end": 1737.0, "text": " and not write some of these functions and so it is not a functor or a monad or any of these other things", "tokens": [50364, 7587, 1338, 293, 550, 309, 2759, 380, 312, 257, 1108, 17079, 13, 50614, 50614, 7587, 264, 1880, 551, 307, 300, 1580, 393, 2893, 257, 2010, 294, 257, 7372, 50864, 50864, 293, 406, 2464, 512, 295, 613, 6828, 293, 370, 309, 307, 406, 257, 1019, 1672, 420, 257, 1108, 345, 420, 604, 295, 613, 661, 721, 51114, 51114, 457, 550, 286, 2235, 760, 341, 7372, 293, 294, 452, 3861, 286, 2464, 472, 295, 613, 6828, 51364, 51364, 281, 605, 322, 341, 2636, 3595, 2010, 293, 439, 295, 257, 3990, 1951, 264, 4319, 295, 452, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07681946851769272, "compression_ratio": 1.7927927927927927, "no_caption_prob": 1.568936204421334e-05}, {"id": 548, "seek": 172200, "start": 1737.0, "end": 1742.0, "text": " but then I pull down this package and in my application I write one of these functions", "tokens": [50364, 7587, 1338, 293, 550, 309, 2759, 380, 312, 257, 1108, 17079, 13, 50614, 50614, 7587, 264, 1880, 551, 307, 300, 1580, 393, 2893, 257, 2010, 294, 257, 7372, 50864, 50864, 293, 406, 2464, 512, 295, 613, 6828, 293, 370, 309, 307, 406, 257, 1019, 1672, 420, 257, 1108, 345, 420, 604, 295, 613, 661, 721, 51114, 51114, 457, 550, 286, 2235, 760, 341, 7372, 293, 294, 452, 3861, 286, 2464, 472, 295, 613, 6828, 51364, 51364, 281, 605, 322, 341, 2636, 3595, 2010, 293, 439, 295, 257, 3990, 1951, 264, 4319, 295, 452, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07681946851769272, "compression_ratio": 1.7927927927927927, "no_caption_prob": 1.568936204421334e-05}, {"id": 549, "seek": 172200, "start": 1742.0, "end": 1747.0, "text": " to act on this third party type and all of a sudden within the context of my code", "tokens": [50364, 7587, 1338, 293, 550, 309, 2759, 380, 312, 257, 1108, 17079, 13, 50614, 50614, 7587, 264, 1880, 551, 307, 300, 1580, 393, 2893, 257, 2010, 294, 257, 7372, 50864, 50864, 293, 406, 2464, 512, 295, 613, 6828, 293, 370, 309, 307, 406, 257, 1019, 1672, 420, 257, 1108, 345, 420, 604, 295, 613, 661, 721, 51114, 51114, 457, 550, 286, 2235, 760, 341, 7372, 293, 294, 452, 3861, 286, 2464, 472, 295, 613, 6828, 51364, 51364, 281, 605, 322, 341, 2636, 3595, 2010, 293, 439, 295, 257, 3990, 1951, 264, 4319, 295, 452, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07681946851769272, "compression_ratio": 1.7927927927927927, "no_caption_prob": 1.568936204421334e-05}, {"id": 550, "seek": 174700, "start": 1747.0, "end": 1752.0, "text": " it is a functor because now we have all the pieces.", "tokens": [50364, 309, 307, 257, 1019, 1672, 570, 586, 321, 362, 439, 264, 3755, 13, 50614, 50614, 663, 311, 257, 869, 935, 13, 50864, 50614, 759, 291, 362, 264, 2390, 8474, 281, 4445, 300, 2445, 13, 50864, 50864, 1079, 370, 337, 1365, 286, 727, 1884, 257, 1310, 2010, 51114, 51114, 293, 11374, 309, 1553, 264, 4471, 2445, 322, 309, 293, 550, 291, 727, 4536, 51364, 51364, 731, 286, 643, 281, 4471, 670, 309, 286, 478, 516, 281, 2464, 257, 4471, 2445, 337, 428, 1310, 2010, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11036209626631303, "compression_ratio": 1.6292682926829267, "no_caption_prob": 1.3419689821603242e-05}, {"id": 551, "seek": 174700, "start": 1752.0, "end": 1757.0, "text": " That's a great point.", "tokens": [50364, 309, 307, 257, 1019, 1672, 570, 586, 321, 362, 439, 264, 3755, 13, 50614, 50614, 663, 311, 257, 869, 935, 13, 50864, 50614, 759, 291, 362, 264, 2390, 8474, 281, 4445, 300, 2445, 13, 50864, 50864, 1079, 370, 337, 1365, 286, 727, 1884, 257, 1310, 2010, 51114, 51114, 293, 11374, 309, 1553, 264, 4471, 2445, 322, 309, 293, 550, 291, 727, 4536, 51364, 51364, 731, 286, 643, 281, 4471, 670, 309, 286, 478, 516, 281, 2464, 257, 4471, 2445, 337, 428, 1310, 2010, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11036209626631303, "compression_ratio": 1.6292682926829267, "no_caption_prob": 1.3419689821603242e-05}, {"id": 552, "seek": 174700, "start": 1752.0, "end": 1757.0, "text": " If you have the building blocks to implement that function.", "tokens": [50364, 309, 307, 257, 1019, 1672, 570, 586, 321, 362, 439, 264, 3755, 13, 50614, 50614, 663, 311, 257, 869, 935, 13, 50864, 50614, 759, 291, 362, 264, 2390, 8474, 281, 4445, 300, 2445, 13, 50864, 50864, 1079, 370, 337, 1365, 286, 727, 1884, 257, 1310, 2010, 51114, 51114, 293, 11374, 309, 1553, 264, 4471, 2445, 322, 309, 293, 550, 291, 727, 4536, 51364, 51364, 731, 286, 643, 281, 4471, 670, 309, 286, 478, 516, 281, 2464, 257, 4471, 2445, 337, 428, 1310, 2010, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11036209626631303, "compression_ratio": 1.6292682926829267, "no_caption_prob": 1.3419689821603242e-05}, {"id": 553, "seek": 174700, "start": 1757.0, "end": 1762.0, "text": " Yes so for example I could create a maybe type", "tokens": [50364, 309, 307, 257, 1019, 1672, 570, 586, 321, 362, 439, 264, 3755, 13, 50614, 50614, 663, 311, 257, 869, 935, 13, 50864, 50614, 759, 291, 362, 264, 2390, 8474, 281, 4445, 300, 2445, 13, 50864, 50864, 1079, 370, 337, 1365, 286, 727, 1884, 257, 1310, 2010, 51114, 51114, 293, 11374, 309, 1553, 264, 4471, 2445, 322, 309, 293, 550, 291, 727, 4536, 51364, 51364, 731, 286, 643, 281, 4471, 670, 309, 286, 478, 516, 281, 2464, 257, 4471, 2445, 337, 428, 1310, 2010, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11036209626631303, "compression_ratio": 1.6292682926829267, "no_caption_prob": 1.3419689821603242e-05}, {"id": 554, "seek": 174700, "start": 1762.0, "end": 1767.0, "text": " and publish it without the map function on it and then you could decide", "tokens": [50364, 309, 307, 257, 1019, 1672, 570, 586, 321, 362, 439, 264, 3755, 13, 50614, 50614, 663, 311, 257, 869, 935, 13, 50864, 50614, 759, 291, 362, 264, 2390, 8474, 281, 4445, 300, 2445, 13, 50864, 50864, 1079, 370, 337, 1365, 286, 727, 1884, 257, 1310, 2010, 51114, 51114, 293, 11374, 309, 1553, 264, 4471, 2445, 322, 309, 293, 550, 291, 727, 4536, 51364, 51364, 731, 286, 643, 281, 4471, 670, 309, 286, 478, 516, 281, 2464, 257, 4471, 2445, 337, 428, 1310, 2010, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11036209626631303, "compression_ratio": 1.6292682926829267, "no_caption_prob": 1.3419689821603242e-05}, {"id": 555, "seek": 174700, "start": 1767.0, "end": 1772.0, "text": " well I need to map over it I'm going to write a map function for your maybe type.", "tokens": [50364, 309, 307, 257, 1019, 1672, 570, 586, 321, 362, 439, 264, 3755, 13, 50614, 50614, 663, 311, 257, 869, 935, 13, 50864, 50614, 759, 291, 362, 264, 2390, 8474, 281, 4445, 300, 2445, 13, 50864, 50864, 1079, 370, 337, 1365, 286, 727, 1884, 257, 1310, 2010, 51114, 51114, 293, 11374, 309, 1553, 264, 4471, 2445, 322, 309, 293, 550, 291, 727, 4536, 51364, 51364, 731, 286, 643, 281, 4471, 670, 309, 286, 478, 516, 281, 2464, 257, 4471, 2445, 337, 428, 1310, 2010, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11036209626631303, "compression_ratio": 1.6292682926829267, "no_caption_prob": 1.3419689821603242e-05}, {"id": 556, "seek": 177200, "start": 1772.0, "end": 1777.0, "text": " Obviously.", "tokens": [50364, 7580, 13, 50614, 50364, 400, 586, 309, 311, 1951, 264, 4319, 295, 428, 3089, 452, 1310, 307, 257, 1019, 1672, 50614, 50614, 420, 264, 6562, 456, 307, 13, 50864, 50864, 286, 2171, 915, 309, 307, 364, 1858, 28023, 281, 751, 466, 613, 721, 382, 29378, 1539, 2831, 813, 48184, 13, 51114, 51264, 407, 286, 393, 584, 341, 2010, 307, 1108, 43341, 406, 341, 2010, 307, 257, 1108, 345, 570, 309, 575, 613, 6828, 51514, 51664], "temperature": 0.0, "avg_logprob": -0.13107362970129235, "compression_ratio": 1.5595854922279793, "no_caption_prob": 0.00020660576410591602}, {"id": 557, "seek": 177200, "start": 1772.0, "end": 1777.0, "text": " And now it's within the context of your code my maybe is a functor", "tokens": [50364, 7580, 13, 50614, 50364, 400, 586, 309, 311, 1951, 264, 4319, 295, 428, 3089, 452, 1310, 307, 257, 1019, 1672, 50614, 50614, 420, 264, 6562, 456, 307, 13, 50864, 50864, 286, 2171, 915, 309, 307, 364, 1858, 28023, 281, 751, 466, 613, 721, 382, 29378, 1539, 2831, 813, 48184, 13, 51114, 51264, 407, 286, 393, 584, 341, 2010, 307, 1108, 43341, 406, 341, 2010, 307, 257, 1108, 345, 570, 309, 575, 613, 6828, 51514, 51664], "temperature": 0.0, "avg_logprob": -0.13107362970129235, "compression_ratio": 1.5595854922279793, "no_caption_prob": 0.00020660576410591602}, {"id": 558, "seek": 177200, "start": 1777.0, "end": 1782.0, "text": " or the combination there is.", "tokens": [50364, 7580, 13, 50614, 50364, 400, 586, 309, 311, 1951, 264, 4319, 295, 428, 3089, 452, 1310, 307, 257, 1019, 1672, 50614, 50614, 420, 264, 6562, 456, 307, 13, 50864, 50864, 286, 2171, 915, 309, 307, 364, 1858, 28023, 281, 751, 466, 613, 721, 382, 29378, 1539, 2831, 813, 48184, 13, 51114, 51264, 407, 286, 393, 584, 341, 2010, 307, 1108, 43341, 406, 341, 2010, 307, 257, 1108, 345, 570, 309, 575, 613, 6828, 51514, 51664], "temperature": 0.0, "avg_logprob": -0.13107362970129235, "compression_ratio": 1.5595854922279793, "no_caption_prob": 0.00020660576410591602}, {"id": 559, "seek": 177200, "start": 1782.0, "end": 1787.0, "text": " I sometimes find it is an easy approximation to talk about these things as adjectives rather than nouns.", "tokens": [50364, 7580, 13, 50614, 50364, 400, 586, 309, 311, 1951, 264, 4319, 295, 428, 3089, 452, 1310, 307, 257, 1019, 1672, 50614, 50614, 420, 264, 6562, 456, 307, 13, 50864, 50864, 286, 2171, 915, 309, 307, 364, 1858, 28023, 281, 751, 466, 613, 721, 382, 29378, 1539, 2831, 813, 48184, 13, 51114, 51264, 407, 286, 393, 584, 341, 2010, 307, 1108, 43341, 406, 341, 2010, 307, 257, 1108, 345, 570, 309, 575, 613, 6828, 51514, 51664], "temperature": 0.0, "avg_logprob": -0.13107362970129235, "compression_ratio": 1.5595854922279793, "no_caption_prob": 0.00020660576410591602}, {"id": 560, "seek": 177200, "start": 1790.0, "end": 1795.0, "text": " So I can say this type is monadic not this type is a monad because it has these functions", "tokens": [50364, 7580, 13, 50614, 50364, 400, 586, 309, 311, 1951, 264, 4319, 295, 428, 3089, 452, 1310, 307, 257, 1019, 1672, 50614, 50614, 420, 264, 6562, 456, 307, 13, 50864, 50864, 286, 2171, 915, 309, 307, 364, 1858, 28023, 281, 751, 466, 613, 721, 382, 29378, 1539, 2831, 813, 48184, 13, 51114, 51264, 407, 286, 393, 584, 341, 2010, 307, 1108, 43341, 406, 341, 2010, 307, 257, 1108, 345, 570, 309, 575, 613, 6828, 51514, 51664], "temperature": 0.0, "avg_logprob": -0.13107362970129235, "compression_ratio": 1.5595854922279793, "no_caption_prob": 0.00020660576410591602}, {"id": 561, "seek": 179500, "start": 1795.0, "end": 1800.0, "text": " so this is like an attribute of it rather than being an inherent quality.", "tokens": [50364, 370, 341, 307, 411, 364, 19667, 295, 309, 2831, 813, 885, 364, 26387, 3125, 13, 50614, 50614, 865, 309, 311, 406, 411, 291, 1884, 257, 2010, 293, 291, 584, 1392, 341, 2203, 281, 312, 1108, 43341, 50864, 50864, 341, 2203, 281, 312, 12288, 12288, 12288, 309, 311, 291, 909, 264, 2445, 293, 4412, 309, 307, 1108, 43341, 13, 51114, 51114, 7504, 309, 307, 257, 1108, 345, 13, 51364, 51364, 286, 519, 291, 393, 751, 466, 309, 294, 257, 23307, 2020, 281, 584, 1954, 286, 362, 264, 1310, 1108, 345, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12983877940844463, "compression_ratio": 1.75, "no_caption_prob": 2.1782070689368993e-05}, {"id": 562, "seek": 179500, "start": 1800.0, "end": 1805.0, "text": " Yeah it's not like you create a type and you say okay this needs to be monadic", "tokens": [50364, 370, 341, 307, 411, 364, 19667, 295, 309, 2831, 813, 885, 364, 26387, 3125, 13, 50614, 50614, 865, 309, 311, 406, 411, 291, 1884, 257, 2010, 293, 291, 584, 1392, 341, 2203, 281, 312, 1108, 43341, 50864, 50864, 341, 2203, 281, 312, 12288, 12288, 12288, 309, 311, 291, 909, 264, 2445, 293, 4412, 309, 307, 1108, 43341, 13, 51114, 51114, 7504, 309, 307, 257, 1108, 345, 13, 51364, 51364, 286, 519, 291, 393, 751, 466, 309, 294, 257, 23307, 2020, 281, 584, 1954, 286, 362, 264, 1310, 1108, 345, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12983877940844463, "compression_ratio": 1.75, "no_caption_prob": 2.1782070689368993e-05}, {"id": 563, "seek": 179500, "start": 1805.0, "end": 1810.0, "text": " this needs to be blah blah blah it's you add the function and therefore it is monadic.", "tokens": [50364, 370, 341, 307, 411, 364, 19667, 295, 309, 2831, 813, 885, 364, 26387, 3125, 13, 50614, 50614, 865, 309, 311, 406, 411, 291, 1884, 257, 2010, 293, 291, 584, 1392, 341, 2203, 281, 312, 1108, 43341, 50864, 50864, 341, 2203, 281, 312, 12288, 12288, 12288, 309, 311, 291, 909, 264, 2445, 293, 4412, 309, 307, 1108, 43341, 13, 51114, 51114, 7504, 309, 307, 257, 1108, 345, 13, 51364, 51364, 286, 519, 291, 393, 751, 466, 309, 294, 257, 23307, 2020, 281, 584, 1954, 286, 362, 264, 1310, 1108, 345, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12983877940844463, "compression_ratio": 1.75, "no_caption_prob": 2.1782070689368993e-05}, {"id": 564, "seek": 179500, "start": 1810.0, "end": 1815.0, "text": " Therefore it is a monad.", "tokens": [50364, 370, 341, 307, 411, 364, 19667, 295, 309, 2831, 813, 885, 364, 26387, 3125, 13, 50614, 50614, 865, 309, 311, 406, 411, 291, 1884, 257, 2010, 293, 291, 584, 1392, 341, 2203, 281, 312, 1108, 43341, 50864, 50864, 341, 2203, 281, 312, 12288, 12288, 12288, 309, 311, 291, 909, 264, 2445, 293, 4412, 309, 307, 1108, 43341, 13, 51114, 51114, 7504, 309, 307, 257, 1108, 345, 13, 51364, 51364, 286, 519, 291, 393, 751, 466, 309, 294, 257, 23307, 2020, 281, 584, 1954, 286, 362, 264, 1310, 1108, 345, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12983877940844463, "compression_ratio": 1.75, "no_caption_prob": 2.1782070689368993e-05}, {"id": 565, "seek": 179500, "start": 1815.0, "end": 1820.0, "text": " I think you can talk about it in a noun sense to say oh I have the maybe monad", "tokens": [50364, 370, 341, 307, 411, 364, 19667, 295, 309, 2831, 813, 885, 364, 26387, 3125, 13, 50614, 50614, 865, 309, 311, 406, 411, 291, 1884, 257, 2010, 293, 291, 584, 1392, 341, 2203, 281, 312, 1108, 43341, 50864, 50864, 341, 2203, 281, 312, 12288, 12288, 12288, 309, 311, 291, 909, 264, 2445, 293, 4412, 309, 307, 1108, 43341, 13, 51114, 51114, 7504, 309, 307, 257, 1108, 345, 13, 51364, 51364, 286, 519, 291, 393, 751, 466, 309, 294, 257, 23307, 2020, 281, 584, 1954, 286, 362, 264, 1310, 1108, 345, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12983877940844463, "compression_ratio": 1.75, "no_caption_prob": 2.1782070689368993e-05}, {"id": 566, "seek": 182000, "start": 1820.0, "end": 1825.0, "text": " but at that point you're not talking about maybe the type you're talking about this sort of", "tokens": [50364, 457, 412, 300, 935, 291, 434, 406, 1417, 466, 1310, 264, 2010, 291, 434, 1417, 466, 341, 1333, 295, 50614, 50614, 264, 1186, 300, 286, 362, 257, 2010, 293, 512, 6828, 293, 436, 439, 1524, 264, 6064, 13, 50864, 50864, 400, 286, 519, 300, 2170, 13181, 281, 561, 562, 291, 751, 466, 264, 2031, 5102, 13, 51114, 51114, 407, 456, 311, 364, 1880, 1365, 300, 562, 286, 5334, 341, 309, 1333, 295, 4607, 452, 3567, 257, 707, 857, 51364, 51364, 597, 307, 300, 264, 2699, 76, 21884, 13695, 9450, 992, 307, 27993, 406, 1108, 43341, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.07759677039252387, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.0451313755766023e-05}, {"id": 567, "seek": 182000, "start": 1825.0, "end": 1830.0, "text": " the fact that I have a type and some functions and they all follow the laws.", "tokens": [50364, 457, 412, 300, 935, 291, 434, 406, 1417, 466, 1310, 264, 2010, 291, 434, 1417, 466, 341, 1333, 295, 50614, 50614, 264, 1186, 300, 286, 362, 257, 2010, 293, 512, 6828, 293, 436, 439, 1524, 264, 6064, 13, 50864, 50864, 400, 286, 519, 300, 2170, 13181, 281, 561, 562, 291, 751, 466, 264, 2031, 5102, 13, 51114, 51114, 407, 456, 311, 364, 1880, 1365, 300, 562, 286, 5334, 341, 309, 1333, 295, 4607, 452, 3567, 257, 707, 857, 51364, 51364, 597, 307, 300, 264, 2699, 76, 21884, 13695, 9450, 992, 307, 27993, 406, 1108, 43341, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.07759677039252387, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.0451313755766023e-05}, {"id": 568, "seek": 182000, "start": 1830.0, "end": 1835.0, "text": " And I think that gets confusing to people when you talk about the x pattern.", "tokens": [50364, 457, 412, 300, 935, 291, 434, 406, 1417, 466, 1310, 264, 2010, 291, 434, 1417, 466, 341, 1333, 295, 50614, 50614, 264, 1186, 300, 286, 362, 257, 2010, 293, 512, 6828, 293, 436, 439, 1524, 264, 6064, 13, 50864, 50864, 400, 286, 519, 300, 2170, 13181, 281, 561, 562, 291, 751, 466, 264, 2031, 5102, 13, 51114, 51114, 407, 456, 311, 364, 1880, 1365, 300, 562, 286, 5334, 341, 309, 1333, 295, 4607, 452, 3567, 257, 707, 857, 51364, 51364, 597, 307, 300, 264, 2699, 76, 21884, 13695, 9450, 992, 307, 27993, 406, 1108, 43341, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.07759677039252387, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.0451313755766023e-05}, {"id": 569, "seek": 182000, "start": 1835.0, "end": 1840.0, "text": " So there's an interesting example that when I realized this it sort of hurt my brain a little bit", "tokens": [50364, 457, 412, 300, 935, 291, 434, 406, 1417, 466, 1310, 264, 2010, 291, 434, 1417, 466, 341, 1333, 295, 50614, 50614, 264, 1186, 300, 286, 362, 257, 2010, 293, 512, 6828, 293, 436, 439, 1524, 264, 6064, 13, 50864, 50864, 400, 286, 519, 300, 2170, 13181, 281, 561, 562, 291, 751, 466, 264, 2031, 5102, 13, 51114, 51114, 407, 456, 311, 364, 1880, 1365, 300, 562, 286, 5334, 341, 309, 1333, 295, 4607, 452, 3567, 257, 707, 857, 51364, 51364, 597, 307, 300, 264, 2699, 76, 21884, 13695, 9450, 992, 307, 27993, 406, 1108, 43341, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.07759677039252387, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.0451313755766023e-05}, {"id": 570, "seek": 182000, "start": 1840.0, "end": 1845.0, "text": " which is that the Elm GraphQL selection set is inherently not monadic", "tokens": [50364, 457, 412, 300, 935, 291, 434, 406, 1417, 466, 1310, 264, 2010, 291, 434, 1417, 466, 341, 1333, 295, 50614, 50614, 264, 1186, 300, 286, 362, 257, 2010, 293, 512, 6828, 293, 436, 439, 1524, 264, 6064, 13, 50864, 50864, 400, 286, 519, 300, 2170, 13181, 281, 561, 562, 291, 751, 466, 264, 2031, 5102, 13, 51114, 51114, 407, 456, 311, 364, 1880, 1365, 300, 562, 286, 5334, 341, 309, 1333, 295, 4607, 452, 3567, 257, 707, 857, 51364, 51364, 597, 307, 300, 264, 2699, 76, 21884, 13695, 9450, 992, 307, 27993, 406, 1108, 43341, 51614, 51764], "temperature": 0.0, "avg_logprob": -0.07759677039252387, "compression_ratio": 1.6720647773279351, "no_caption_prob": 1.0451313755766023e-05}, {"id": 571, "seek": 184500, "start": 1845.0, "end": 1850.0, "text": " because it represents a selection set represents both the request for saying", "tokens": [50364, 570, 309, 8855, 257, 9450, 992, 8855, 1293, 264, 5308, 337, 1566, 50614, 50864, 286, 576, 411, 341, 1412, 293, 264, 979, 8616, 281, 584, 1392, 286, 478, 516, 281, 1261, 341, 666, 364, 2699, 76, 2010, 490, 264, 7154, 51114, 51214, 457, 570, 295, 300, 291, 393, 380, 293, 550, 300, 291, 393, 380, 291, 393, 380, 584, 483, 341, 4195, 311, 3090, 51464, 51614], "temperature": 0.0, "avg_logprob": -0.11583786150988411, "compression_ratio": 1.6748466257668713, "no_caption_prob": 9.169828263111413e-05}, {"id": 572, "seek": 184500, "start": 1855.0, "end": 1860.0, "text": " I would like this data and the decoding to say okay I'm going to turn this into an Elm type from the server", "tokens": [50364, 570, 309, 8855, 257, 9450, 992, 8855, 1293, 264, 5308, 337, 1566, 50614, 50864, 286, 576, 411, 341, 1412, 293, 264, 979, 8616, 281, 584, 1392, 286, 478, 516, 281, 1261, 341, 666, 364, 2699, 76, 2010, 490, 264, 7154, 51114, 51214, 457, 570, 295, 300, 291, 393, 380, 293, 550, 300, 291, 393, 380, 291, 393, 380, 584, 483, 341, 4195, 311, 3090, 51464, 51614], "temperature": 0.0, "avg_logprob": -0.11583786150988411, "compression_ratio": 1.6748466257668713, "no_caption_prob": 9.169828263111413e-05}, {"id": 573, "seek": 184500, "start": 1862.0, "end": 1867.0, "text": " but because of that you can't and then that you can't you can't say get this user's role", "tokens": [50364, 570, 309, 8855, 257, 9450, 992, 8855, 1293, 264, 5308, 337, 1566, 50614, 50864, 286, 576, 411, 341, 1412, 293, 264, 979, 8616, 281, 584, 1392, 286, 478, 516, 281, 1261, 341, 666, 364, 2699, 76, 2010, 490, 264, 7154, 51114, 51214, 457, 570, 295, 300, 291, 393, 380, 293, 550, 300, 291, 393, 380, 291, 393, 380, 584, 483, 341, 4195, 311, 3090, 51464, 51614], "temperature": 0.0, "avg_logprob": -0.11583786150988411, "compression_ratio": 1.6748466257668713, "no_caption_prob": 9.169828263111413e-05}, {"id": 574, "seek": 186700, "start": 1867.0, "end": 1872.0, "text": " and then make a follow up selection set because inherently", "tokens": [50364, 293, 550, 652, 257, 1524, 493, 9450, 992, 570, 27993, 50614, 50614, 731, 286, 914, 286, 2041, 286, 2041, 300, 576, 2906, 3866, 12475, 281, 264, 7154, 50864, 50864, 558, 457, 27993, 257, 9450, 992, 8855, 257, 2167, 5308, 281, 264, 7154, 51114, 51114, 370, 309, 307, 27993, 406, 1108, 43341, 406, 445, 570, 309, 311, 406, 9495, 51364, 51364, 457, 300, 6916, 1177, 380, 534, 3318, 294, 300, 37765, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07867514120565879, "compression_ratio": 1.858695652173913, "no_caption_prob": 0.00013551214942708611}, {"id": 575, "seek": 186700, "start": 1872.0, "end": 1877.0, "text": " well I mean I guess I guess that would represent multiple requests to the server", "tokens": [50364, 293, 550, 652, 257, 1524, 493, 9450, 992, 570, 27993, 50614, 50614, 731, 286, 914, 286, 2041, 286, 2041, 300, 576, 2906, 3866, 12475, 281, 264, 7154, 50864, 50864, 558, 457, 27993, 257, 9450, 992, 8855, 257, 2167, 5308, 281, 264, 7154, 51114, 51114, 370, 309, 307, 27993, 406, 1108, 43341, 406, 445, 570, 309, 311, 406, 9495, 51364, 51364, 457, 300, 6916, 1177, 380, 534, 3318, 294, 300, 37765, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07867514120565879, "compression_ratio": 1.858695652173913, "no_caption_prob": 0.00013551214942708611}, {"id": 576, "seek": 186700, "start": 1877.0, "end": 1882.0, "text": " right but inherently a selection set represents a single request to the server", "tokens": [50364, 293, 550, 652, 257, 1524, 493, 9450, 992, 570, 27993, 50614, 50614, 731, 286, 914, 286, 2041, 286, 2041, 300, 576, 2906, 3866, 12475, 281, 264, 7154, 50864, 50864, 558, 457, 27993, 257, 9450, 992, 8855, 257, 2167, 5308, 281, 264, 7154, 51114, 51114, 370, 309, 307, 27993, 406, 1108, 43341, 406, 445, 570, 309, 311, 406, 9495, 51364, 51364, 457, 300, 6916, 1177, 380, 534, 3318, 294, 300, 37765, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07867514120565879, "compression_ratio": 1.858695652173913, "no_caption_prob": 0.00013551214942708611}, {"id": 577, "seek": 186700, "start": 1882.0, "end": 1887.0, "text": " so it is inherently not monadic not just because it's not exposed", "tokens": [50364, 293, 550, 652, 257, 1524, 493, 9450, 992, 570, 27993, 50614, 50614, 731, 286, 914, 286, 2041, 286, 2041, 300, 576, 2906, 3866, 12475, 281, 264, 7154, 50864, 50864, 558, 457, 27993, 257, 9450, 992, 8855, 257, 2167, 5308, 281, 264, 7154, 51114, 51114, 370, 309, 307, 27993, 406, 1108, 43341, 406, 445, 570, 309, 311, 406, 9495, 51364, 51364, 457, 300, 6916, 1177, 380, 534, 3318, 294, 300, 37765, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07867514120565879, "compression_ratio": 1.858695652173913, "no_caption_prob": 0.00013551214942708611}, {"id": 578, "seek": 186700, "start": 1887.0, "end": 1892.0, "text": " but that operation doesn't really fit in that abstraction", "tokens": [50364, 293, 550, 652, 257, 1524, 493, 9450, 992, 570, 27993, 50614, 50614, 731, 286, 914, 286, 2041, 286, 2041, 300, 576, 2906, 3866, 12475, 281, 264, 7154, 50864, 50864, 558, 457, 27993, 257, 9450, 992, 8855, 257, 2167, 5308, 281, 264, 7154, 51114, 51114, 370, 309, 307, 27993, 406, 1108, 43341, 406, 445, 570, 309, 311, 406, 9495, 51364, 51364, 457, 300, 6916, 1177, 380, 534, 3318, 294, 300, 37765, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07867514120565879, "compression_ratio": 1.858695652173913, "no_caption_prob": 0.00013551214942708611}, {"id": 579, "seek": 189200, "start": 1892.0, "end": 1897.0, "text": " particularly because in the the rules that you set up for what a selection set does", "tokens": [50364, 4098, 570, 294, 264, 264, 4474, 300, 291, 992, 493, 337, 437, 257, 9450, 992, 775, 50614, 50614, 291, 500, 380, 528, 3866, 12475, 281, 312, 1096, 13, 50864, 50864, 7587, 13, 5471, 575, 281, 312, 1096, 1951, 257, 2167, 5308, 13, 51114, 51114, 1079, 13, 400, 538, 264, 1108, 345, 6064, 293, 550, 576, 33616, 257, 1150, 5308, 597, 307, 257, 551, 291, 500, 380, 528, 281, 360, 13, 51364, 51364, 7587, 13, 7587, 13, 407, 264, 4361, 45298, 300, 309, 576, 33616, 337, 264, 2380, 1002, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13236217913420303, "compression_ratio": 1.740566037735849, "no_caption_prob": 0.0003149771655444056}, {"id": 580, "seek": 189200, "start": 1897.0, "end": 1902.0, "text": " you don't want multiple requests to be done.", "tokens": [50364, 4098, 570, 294, 264, 264, 4474, 300, 291, 992, 493, 337, 437, 257, 9450, 992, 775, 50614, 50614, 291, 500, 380, 528, 3866, 12475, 281, 312, 1096, 13, 50864, 50864, 7587, 13, 5471, 575, 281, 312, 1096, 1951, 257, 2167, 5308, 13, 51114, 51114, 1079, 13, 400, 538, 264, 1108, 345, 6064, 293, 550, 576, 33616, 257, 1150, 5308, 597, 307, 257, 551, 291, 500, 380, 528, 281, 360, 13, 51364, 51364, 7587, 13, 7587, 13, 407, 264, 4361, 45298, 300, 309, 576, 33616, 337, 264, 2380, 1002, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13236217913420303, "compression_ratio": 1.740566037735849, "no_caption_prob": 0.0003149771655444056}, {"id": 581, "seek": 189200, "start": 1902.0, "end": 1907.0, "text": " Exactly. Everything has to be done within a single request.", "tokens": [50364, 4098, 570, 294, 264, 264, 4474, 300, 291, 992, 493, 337, 437, 257, 9450, 992, 775, 50614, 50614, 291, 500, 380, 528, 3866, 12475, 281, 312, 1096, 13, 50864, 50864, 7587, 13, 5471, 575, 281, 312, 1096, 1951, 257, 2167, 5308, 13, 51114, 51114, 1079, 13, 400, 538, 264, 1108, 345, 6064, 293, 550, 576, 33616, 257, 1150, 5308, 597, 307, 257, 551, 291, 500, 380, 528, 281, 360, 13, 51364, 51364, 7587, 13, 7587, 13, 407, 264, 4361, 45298, 300, 309, 576, 33616, 337, 264, 2380, 1002, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13236217913420303, "compression_ratio": 1.740566037735849, "no_caption_prob": 0.0003149771655444056}, {"id": 582, "seek": 189200, "start": 1907.0, "end": 1912.0, "text": " Yes. And by the monad laws and then would imply a second request which is a thing you don't want to do.", "tokens": [50364, 4098, 570, 294, 264, 264, 4474, 300, 291, 992, 493, 337, 437, 257, 9450, 992, 775, 50614, 50614, 291, 500, 380, 528, 3866, 12475, 281, 312, 1096, 13, 50864, 50864, 7587, 13, 5471, 575, 281, 312, 1096, 1951, 257, 2167, 5308, 13, 51114, 51114, 1079, 13, 400, 538, 264, 1108, 345, 6064, 293, 550, 576, 33616, 257, 1150, 5308, 597, 307, 257, 551, 291, 500, 380, 528, 281, 360, 13, 51364, 51364, 7587, 13, 7587, 13, 407, 264, 4361, 45298, 300, 309, 576, 33616, 337, 264, 2380, 1002, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13236217913420303, "compression_ratio": 1.740566037735849, "no_caption_prob": 0.0003149771655444056}, {"id": 583, "seek": 189200, "start": 1912.0, "end": 1917.0, "text": " Exactly. Exactly. So the semantics that it would imply for the outside world", "tokens": [50364, 4098, 570, 294, 264, 264, 4474, 300, 291, 992, 493, 337, 437, 257, 9450, 992, 775, 50614, 50614, 291, 500, 380, 528, 3866, 12475, 281, 312, 1096, 13, 50864, 50864, 7587, 13, 5471, 575, 281, 312, 1096, 1951, 257, 2167, 5308, 13, 51114, 51114, 1079, 13, 400, 538, 264, 1108, 345, 6064, 293, 550, 576, 33616, 257, 1150, 5308, 597, 307, 257, 551, 291, 500, 380, 528, 281, 360, 13, 51364, 51364, 7587, 13, 7587, 13, 407, 264, 4361, 45298, 300, 309, 576, 33616, 337, 264, 2380, 1002, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13236217913420303, "compression_ratio": 1.740566037735849, "no_caption_prob": 0.0003149771655444056}, {"id": 584, "seek": 191700, "start": 1917.0, "end": 1922.0, "text": " would not fit into the desired semantics for the library's goal", "tokens": [50364, 576, 406, 3318, 666, 264, 14721, 4361, 45298, 337, 264, 6405, 311, 3387, 50614, 50614, 281, 406, 264, 1379, 935, 307, 291, 500, 380, 528, 281, 652, 7149, 12475, 281, 264, 7154, 50864, 50864, 291, 528, 281, 652, 257, 2167, 5308, 281, 584, 2293, 437, 291, 643, 13, 51114, 51114, 1449, 281, 17594, 300, 307, 406, 364, 2734, 558, 30, 51364, 51364, 883, 309, 311, 406, 13, 467, 311, 406, 411, 456, 307, 572, 293, 550, 293, 4412, 456, 311, 257, 1154, 365, 428, 6405, 994, 380, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14364159625509512, "compression_ratio": 1.6952380952380952, "no_caption_prob": 0.000324986525811255}, {"id": 585, "seek": 191700, "start": 1922.0, "end": 1927.0, "text": " to not the whole point is you don't want to make repeat requests to the server", "tokens": [50364, 576, 406, 3318, 666, 264, 14721, 4361, 45298, 337, 264, 6405, 311, 3387, 50614, 50614, 281, 406, 264, 1379, 935, 307, 291, 500, 380, 528, 281, 652, 7149, 12475, 281, 264, 7154, 50864, 50864, 291, 528, 281, 652, 257, 2167, 5308, 281, 584, 2293, 437, 291, 643, 13, 51114, 51114, 1449, 281, 17594, 300, 307, 406, 364, 2734, 558, 30, 51364, 51364, 883, 309, 311, 406, 13, 467, 311, 406, 411, 456, 307, 572, 293, 550, 293, 4412, 456, 311, 257, 1154, 365, 428, 6405, 994, 380, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14364159625509512, "compression_ratio": 1.6952380952380952, "no_caption_prob": 0.000324986525811255}, {"id": 586, "seek": 191700, "start": 1927.0, "end": 1932.0, "text": " you want to make a single request to say exactly what you need.", "tokens": [50364, 576, 406, 3318, 666, 264, 14721, 4361, 45298, 337, 264, 6405, 311, 3387, 50614, 50614, 281, 406, 264, 1379, 935, 307, 291, 500, 380, 528, 281, 652, 7149, 12475, 281, 264, 7154, 50864, 50864, 291, 528, 281, 652, 257, 2167, 5308, 281, 584, 2293, 437, 291, 643, 13, 51114, 51114, 1449, 281, 17594, 300, 307, 406, 364, 2734, 558, 30, 51364, 51364, 883, 309, 311, 406, 13, 467, 311, 406, 411, 456, 307, 572, 293, 550, 293, 4412, 456, 311, 257, 1154, 365, 428, 6405, 994, 380, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14364159625509512, "compression_ratio": 1.6952380952380952, "no_caption_prob": 0.000324986525811255}, {"id": 587, "seek": 191700, "start": 1932.0, "end": 1937.0, "text": " Just to clarify that is not an issue right?", "tokens": [50364, 576, 406, 3318, 666, 264, 14721, 4361, 45298, 337, 264, 6405, 311, 3387, 50614, 50614, 281, 406, 264, 1379, 935, 307, 291, 500, 380, 528, 281, 652, 7149, 12475, 281, 264, 7154, 50864, 50864, 291, 528, 281, 652, 257, 2167, 5308, 281, 584, 2293, 437, 291, 643, 13, 51114, 51114, 1449, 281, 17594, 300, 307, 406, 364, 2734, 558, 30, 51364, 51364, 883, 309, 311, 406, 13, 467, 311, 406, 411, 456, 307, 572, 293, 550, 293, 4412, 456, 311, 257, 1154, 365, 428, 6405, 994, 380, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14364159625509512, "compression_ratio": 1.6952380952380952, "no_caption_prob": 0.000324986525811255}, {"id": 588, "seek": 191700, "start": 1937.0, "end": 1942.0, "text": " No it's not. It's not like there is no and then and therefore there's a problem with your library didn't?", "tokens": [50364, 576, 406, 3318, 666, 264, 14721, 4361, 45298, 337, 264, 6405, 311, 3387, 50614, 50614, 281, 406, 264, 1379, 935, 307, 291, 500, 380, 528, 281, 652, 7149, 12475, 281, 264, 7154, 50864, 50864, 291, 528, 281, 652, 257, 2167, 5308, 281, 584, 2293, 437, 291, 643, 13, 51114, 51114, 1449, 281, 17594, 300, 307, 406, 364, 2734, 558, 30, 51364, 51364, 883, 309, 311, 406, 13, 467, 311, 406, 411, 456, 307, 572, 293, 550, 293, 4412, 456, 311, 257, 1154, 365, 428, 6405, 994, 380, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14364159625509512, "compression_ratio": 1.6952380952380952, "no_caption_prob": 0.000324986525811255}, {"id": 589, "seek": 194200, "start": 1942.0, "end": 1947.0, "text": " Right. Well I mean it's just a constraint", "tokens": [50364, 1779, 13, 1042, 286, 914, 309, 311, 445, 257, 25534, 50614, 50614, 293, 309, 311, 445, 472, 2390, 3461, 300, 291, 393, 380, 764, 293, 2171, 309, 307, 1596, 10851, 50864, 50864, 411, 286, 500, 380, 458, 562, 286, 519, 466, 613, 8294, 51114, 51114, 294, 1333, 295, 2360, 1601, 2115, 286, 519, 466, 286, 1116, 534, 411, 281, 362, 341, 9859, 1412, 51364, 51364, 406, 341, 14226, 1412, 551, 286, 528, 976, 385, 264, 3539, 1412, 291, 600, 658, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08649275984082903, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00041718530701473355}, {"id": 590, "seek": 194200, "start": 1947.0, "end": 1952.0, "text": " and it's just one building block that you can't use and sometimes it is quite convenient", "tokens": [50364, 1779, 13, 1042, 286, 914, 309, 311, 445, 257, 25534, 50614, 50614, 293, 309, 311, 445, 472, 2390, 3461, 300, 291, 393, 380, 764, 293, 2171, 309, 307, 1596, 10851, 50864, 50864, 411, 286, 500, 380, 458, 562, 286, 519, 466, 613, 8294, 51114, 51114, 294, 1333, 295, 2360, 1601, 2115, 286, 519, 466, 286, 1116, 534, 411, 281, 362, 341, 9859, 1412, 51364, 51364, 406, 341, 14226, 1412, 551, 286, 528, 976, 385, 264, 3539, 1412, 291, 600, 658, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08649275984082903, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00041718530701473355}, {"id": 591, "seek": 194200, "start": 1952.0, "end": 1957.0, "text": " like I don't know when I think about these patterns", "tokens": [50364, 1779, 13, 1042, 286, 914, 309, 311, 445, 257, 25534, 50614, 50614, 293, 309, 311, 445, 472, 2390, 3461, 300, 291, 393, 380, 764, 293, 2171, 309, 307, 1596, 10851, 50864, 50864, 411, 286, 500, 380, 458, 562, 286, 519, 466, 613, 8294, 51114, 51114, 294, 1333, 295, 2360, 1601, 2115, 286, 519, 466, 286, 1116, 534, 411, 281, 362, 341, 9859, 1412, 51364, 51364, 406, 341, 14226, 1412, 551, 286, 528, 976, 385, 264, 3539, 1412, 291, 600, 658, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08649275984082903, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00041718530701473355}, {"id": 592, "seek": 194200, "start": 1957.0, "end": 1962.0, "text": " in sort of layman terms I think about I'd really like to have this concrete data", "tokens": [50364, 1779, 13, 1042, 286, 914, 309, 311, 445, 257, 25534, 50614, 50614, 293, 309, 311, 445, 472, 2390, 3461, 300, 291, 393, 380, 764, 293, 2171, 309, 307, 1596, 10851, 50864, 50864, 411, 286, 500, 380, 458, 562, 286, 519, 466, 613, 8294, 51114, 51114, 294, 1333, 295, 2360, 1601, 2115, 286, 519, 466, 286, 1116, 534, 411, 281, 362, 341, 9859, 1412, 51364, 51364, 406, 341, 14226, 1412, 551, 286, 528, 976, 385, 264, 3539, 1412, 291, 600, 658, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08649275984082903, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00041718530701473355}, {"id": 593, "seek": 194200, "start": 1962.0, "end": 1967.0, "text": " not this wrapped data thing I want give me the actual data you've got", "tokens": [50364, 1779, 13, 1042, 286, 914, 309, 311, 445, 257, 25534, 50614, 50614, 293, 309, 311, 445, 472, 2390, 3461, 300, 291, 393, 380, 764, 293, 2171, 309, 307, 1596, 10851, 50864, 50864, 411, 286, 500, 380, 458, 562, 286, 519, 466, 613, 8294, 51114, 51114, 294, 1333, 295, 2360, 1601, 2115, 286, 519, 466, 286, 1116, 534, 411, 281, 362, 341, 9859, 1412, 51364, 51364, 406, 341, 14226, 1412, 551, 286, 528, 976, 385, 264, 3539, 1412, 291, 600, 658, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08649275984082903, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00041718530701473355}, {"id": 594, "seek": 196700, "start": 1967.0, "end": 1972.0, "text": " and then let me continue on and do something with it or I mean of course as we've discussed", "tokens": [50364, 293, 550, 718, 385, 2354, 322, 293, 360, 746, 365, 309, 420, 286, 914, 295, 1164, 382, 321, 600, 7152, 50614, 50614, 613, 16660, 530, 2100, 4936, 570, 2171, 309, 311, 9289, 2171, 309, 311, 6260, 365, 6814, 420, 17145, 50864, 50864, 2171, 309, 311, 6260, 365, 7763, 420, 2245, 457, 291, 458, 51114, 51114, 565, 88, 261, 1312, 88, 291, 483, 264, 1558, 746, 2051, 729, 3876, 457, 291, 393, 380, 360, 300, 51364, 51364, 291, 393, 380, 584, 286, 1116, 411, 281, 747, 341, 551, 293, 550, 293, 550, 286, 1116, 411, 281, 2042, 341, 1520, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0983275338715198, "compression_ratio": 1.9634703196347032, "no_caption_prob": 0.00016091296856757253}, {"id": 595, "seek": 196700, "start": 1972.0, "end": 1977.0, "text": " these analogies fall apart because sometimes it's continuing sometimes it's dealing with presence or absence", "tokens": [50364, 293, 550, 718, 385, 2354, 322, 293, 360, 746, 365, 309, 420, 286, 914, 295, 1164, 382, 321, 600, 7152, 50614, 50614, 613, 16660, 530, 2100, 4936, 570, 2171, 309, 311, 9289, 2171, 309, 311, 6260, 365, 6814, 420, 17145, 50864, 50864, 2171, 309, 311, 6260, 365, 7763, 420, 2245, 457, 291, 458, 51114, 51114, 565, 88, 261, 1312, 88, 291, 483, 264, 1558, 746, 2051, 729, 3876, 457, 291, 393, 380, 360, 300, 51364, 51364, 291, 393, 380, 584, 286, 1116, 411, 281, 747, 341, 551, 293, 550, 293, 550, 286, 1116, 411, 281, 2042, 341, 1520, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0983275338715198, "compression_ratio": 1.9634703196347032, "no_caption_prob": 0.00016091296856757253}, {"id": 596, "seek": 196700, "start": 1977.0, "end": 1982.0, "text": " sometimes it's dealing with failure or success but you know", "tokens": [50364, 293, 550, 718, 385, 2354, 322, 293, 360, 746, 365, 309, 420, 286, 914, 295, 1164, 382, 321, 600, 7152, 50614, 50614, 613, 16660, 530, 2100, 4936, 570, 2171, 309, 311, 9289, 2171, 309, 311, 6260, 365, 6814, 420, 17145, 50864, 50864, 2171, 309, 311, 6260, 365, 7763, 420, 2245, 457, 291, 458, 51114, 51114, 565, 88, 261, 1312, 88, 291, 483, 264, 1558, 746, 2051, 729, 3876, 457, 291, 393, 380, 360, 300, 51364, 51364, 291, 393, 380, 584, 286, 1116, 411, 281, 747, 341, 551, 293, 550, 293, 550, 286, 1116, 411, 281, 2042, 341, 1520, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0983275338715198, "compression_ratio": 1.9634703196347032, "no_caption_prob": 0.00016091296856757253}, {"id": 597, "seek": 196700, "start": 1982.0, "end": 1987.0, "text": " timey wimey you get the idea something along those lines but you can't do that", "tokens": [50364, 293, 550, 718, 385, 2354, 322, 293, 360, 746, 365, 309, 420, 286, 914, 295, 1164, 382, 321, 600, 7152, 50614, 50614, 613, 16660, 530, 2100, 4936, 570, 2171, 309, 311, 9289, 2171, 309, 311, 6260, 365, 6814, 420, 17145, 50864, 50864, 2171, 309, 311, 6260, 365, 7763, 420, 2245, 457, 291, 458, 51114, 51114, 565, 88, 261, 1312, 88, 291, 483, 264, 1558, 746, 2051, 729, 3876, 457, 291, 393, 380, 360, 300, 51364, 51364, 291, 393, 380, 584, 286, 1116, 411, 281, 747, 341, 551, 293, 550, 293, 550, 286, 1116, 411, 281, 2042, 341, 1520, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0983275338715198, "compression_ratio": 1.9634703196347032, "no_caption_prob": 0.00016091296856757253}, {"id": 598, "seek": 196700, "start": 1987.0, "end": 1992.0, "text": " you can't say I'd like to take this thing and then and then I'd like to perform this check", "tokens": [50364, 293, 550, 718, 385, 2354, 322, 293, 360, 746, 365, 309, 420, 286, 914, 295, 1164, 382, 321, 600, 7152, 50614, 50614, 613, 16660, 530, 2100, 4936, 570, 2171, 309, 311, 9289, 2171, 309, 311, 6260, 365, 6814, 420, 17145, 50864, 50864, 2171, 309, 311, 6260, 365, 7763, 420, 2245, 457, 291, 458, 51114, 51114, 565, 88, 261, 1312, 88, 291, 483, 264, 1558, 746, 2051, 729, 3876, 457, 291, 393, 380, 360, 300, 51364, 51364, 291, 393, 380, 584, 286, 1116, 411, 281, 747, 341, 551, 293, 550, 293, 550, 286, 1116, 411, 281, 2042, 341, 1520, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0983275338715198, "compression_ratio": 1.9634703196347032, "no_caption_prob": 0.00016091296856757253}, {"id": 599, "seek": 199200, "start": 1992.0, "end": 1997.0, "text": " and fail if I don't have this thing you just can't do that you have to find other ways to solve it", "tokens": [50364, 293, 3061, 498, 286, 500, 380, 362, 341, 551, 291, 445, 393, 380, 360, 300, 291, 362, 281, 915, 661, 2098, 281, 5039, 309, 50614, 50614, 370, 411, 309, 445, 2962, 264, 636, 300, 291, 3109, 12606, 1629, 2740, 50864, 50864, 286, 519, 456, 311, 257, 534, 1880, 551, 510, 300, 1709, 646, 281, 264, 983, 307, 309, 4420, 337, 51114, 51114, 441, 45, 41504, 281, 1466, 613, 10392, 293, 321, 393, 733, 295, 483, 309, 445, 538, 264, 13397, 51364, 51364, 457, 2212, 264, 1186, 300, 1580, 1062, 458, 264, 7123, 295, 437, 293, 550, 775, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08642722592495455, "compression_ratio": 1.7449392712550607, "no_caption_prob": 0.00012729981972370297}, {"id": 600, "seek": 199200, "start": 1997.0, "end": 2002.0, "text": " so like it just changes the way that you approach solving certain problems", "tokens": [50364, 293, 3061, 498, 286, 500, 380, 362, 341, 551, 291, 445, 393, 380, 360, 300, 291, 362, 281, 915, 661, 2098, 281, 5039, 309, 50614, 50614, 370, 411, 309, 445, 2962, 264, 636, 300, 291, 3109, 12606, 1629, 2740, 50864, 50864, 286, 519, 456, 311, 257, 534, 1880, 551, 510, 300, 1709, 646, 281, 264, 983, 307, 309, 4420, 337, 51114, 51114, 441, 45, 41504, 281, 1466, 613, 10392, 293, 321, 393, 733, 295, 483, 309, 445, 538, 264, 13397, 51364, 51364, 457, 2212, 264, 1186, 300, 1580, 1062, 458, 264, 7123, 295, 437, 293, 550, 775, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08642722592495455, "compression_ratio": 1.7449392712550607, "no_caption_prob": 0.00012729981972370297}, {"id": 601, "seek": 199200, "start": 2002.0, "end": 2007.0, "text": " I think there's a really interesting thing here that goes back to the why is it useful for", "tokens": [50364, 293, 3061, 498, 286, 500, 380, 362, 341, 551, 291, 445, 393, 380, 360, 300, 291, 362, 281, 915, 661, 2098, 281, 5039, 309, 50614, 50614, 370, 411, 309, 445, 2962, 264, 636, 300, 291, 3109, 12606, 1629, 2740, 50864, 50864, 286, 519, 456, 311, 257, 534, 1880, 551, 510, 300, 1709, 646, 281, 264, 983, 307, 309, 4420, 337, 51114, 51114, 441, 45, 41504, 281, 1466, 613, 10392, 293, 321, 393, 733, 295, 483, 309, 445, 538, 264, 13397, 51364, 51364, 457, 2212, 264, 1186, 300, 1580, 1062, 458, 264, 7123, 295, 437, 293, 550, 775, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08642722592495455, "compression_ratio": 1.7449392712550607, "no_caption_prob": 0.00012729981972370297}, {"id": 602, "seek": 199200, "start": 2007.0, "end": 2012.0, "text": " LN programmers to learn these concepts and we can kind of get it just by the signature", "tokens": [50364, 293, 3061, 498, 286, 500, 380, 362, 341, 551, 291, 445, 393, 380, 360, 300, 291, 362, 281, 915, 661, 2098, 281, 5039, 309, 50614, 50614, 370, 411, 309, 445, 2962, 264, 636, 300, 291, 3109, 12606, 1629, 2740, 50864, 50864, 286, 519, 456, 311, 257, 534, 1880, 551, 510, 300, 1709, 646, 281, 264, 983, 307, 309, 4420, 337, 51114, 51114, 441, 45, 41504, 281, 1466, 613, 10392, 293, 321, 393, 733, 295, 483, 309, 445, 538, 264, 13397, 51364, 51364, 457, 2212, 264, 1186, 300, 1580, 1062, 458, 264, 7123, 295, 437, 293, 550, 775, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08642722592495455, "compression_ratio": 1.7449392712550607, "no_caption_prob": 0.00012729981972370297}, {"id": 603, "seek": 199200, "start": 2012.0, "end": 2017.0, "text": " but given the fact that someone might know the definition of what and then does", "tokens": [50364, 293, 3061, 498, 286, 500, 380, 362, 341, 551, 291, 445, 393, 380, 360, 300, 291, 362, 281, 915, 661, 2098, 281, 5039, 309, 50614, 50614, 370, 411, 309, 445, 2962, 264, 636, 300, 291, 3109, 12606, 1629, 2740, 50864, 50864, 286, 519, 456, 311, 257, 534, 1880, 551, 510, 300, 1709, 646, 281, 264, 983, 307, 309, 4420, 337, 51114, 51114, 441, 45, 41504, 281, 1466, 613, 10392, 293, 321, 393, 733, 295, 483, 309, 445, 538, 264, 13397, 51364, 51364, 457, 2212, 264, 1186, 300, 1580, 1062, 458, 264, 7123, 295, 437, 293, 550, 775, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08642722592495455, "compression_ratio": 1.7449392712550607, "no_caption_prob": 0.00012729981972370297}, {"id": 604, "seek": 201700, "start": 2017.0, "end": 2022.0, "text": " in general or familiar with its signature and that they know that in your library", "tokens": [50364, 294, 2674, 420, 4963, 365, 1080, 13397, 293, 300, 436, 458, 300, 294, 428, 6405, 50614, 50614, 257, 9450, 992, 8855, 1293, 257, 5308, 293, 48377, 1412, 365, 729, 732, 9130, 50864, 50864, 286, 393, 980, 291, 300, 293, 550, 307, 516, 281, 9494, 3866, 12475, 457, 51114, 51114, 1580, 567, 311, 300, 311, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 51364, 51364, 457, 300, 1062, 406, 312, 6322, 457, 1580, 567, 311, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16327452372355633, "compression_ratio": 1.7155963302752293, "no_caption_prob": 4.6108223614282906e-05}, {"id": 605, "seek": 201700, "start": 2022.0, "end": 2027.0, "text": " a selection set represents both a request and parse data with those two facts", "tokens": [50364, 294, 2674, 420, 4963, 365, 1080, 13397, 293, 300, 436, 458, 300, 294, 428, 6405, 50614, 50614, 257, 9450, 992, 8855, 1293, 257, 5308, 293, 48377, 1412, 365, 729, 732, 9130, 50864, 50864, 286, 393, 980, 291, 300, 293, 550, 307, 516, 281, 9494, 3866, 12475, 457, 51114, 51114, 1580, 567, 311, 300, 311, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 51364, 51364, 457, 300, 1062, 406, 312, 6322, 457, 1580, 567, 311, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16327452372355633, "compression_ratio": 1.7155963302752293, "no_caption_prob": 4.6108223614282906e-05}, {"id": 606, "seek": 201700, "start": 2027.0, "end": 2032.0, "text": " I can tell you that and then is going to involve multiple requests but", "tokens": [50364, 294, 2674, 420, 4963, 365, 1080, 13397, 293, 300, 436, 458, 300, 294, 428, 6405, 50614, 50614, 257, 9450, 992, 8855, 1293, 257, 5308, 293, 48377, 1412, 365, 729, 732, 9130, 50864, 50864, 286, 393, 980, 291, 300, 293, 550, 307, 516, 281, 9494, 3866, 12475, 457, 51114, 51114, 1580, 567, 311, 300, 311, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 51364, 51364, 457, 300, 1062, 406, 312, 6322, 457, 1580, 567, 311, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16327452372355633, "compression_ratio": 1.7155963302752293, "no_caption_prob": 4.6108223614282906e-05}, {"id": 607, "seek": 201700, "start": 2032.0, "end": 2037.0, "text": " someone who's that's something that I think came out in the conversation we were saying earlier", "tokens": [50364, 294, 2674, 420, 4963, 365, 1080, 13397, 293, 300, 436, 458, 300, 294, 428, 6405, 50614, 50614, 257, 9450, 992, 8855, 1293, 257, 5308, 293, 48377, 1412, 365, 729, 732, 9130, 50864, 50864, 286, 393, 980, 291, 300, 293, 550, 307, 516, 281, 9494, 3866, 12475, 457, 51114, 51114, 1580, 567, 311, 300, 311, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 51364, 51364, 457, 300, 1062, 406, 312, 6322, 457, 1580, 567, 311, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16327452372355633, "compression_ratio": 1.7155963302752293, "no_caption_prob": 4.6108223614282906e-05}, {"id": 608, "seek": 201700, "start": 2037.0, "end": 2042.0, "text": " but that might not be obvious but someone who's", "tokens": [50364, 294, 2674, 420, 4963, 365, 1080, 13397, 293, 300, 436, 458, 300, 294, 428, 6405, 50614, 50614, 257, 9450, 992, 8855, 1293, 257, 5308, 293, 48377, 1412, 365, 729, 732, 9130, 50864, 50864, 286, 393, 980, 291, 300, 293, 550, 307, 516, 281, 9494, 3866, 12475, 457, 51114, 51114, 1580, 567, 311, 300, 311, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 51364, 51364, 457, 300, 1062, 406, 312, 6322, 457, 1580, 567, 311, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16327452372355633, "compression_ratio": 1.7155963302752293, "no_caption_prob": 4.6108223614282906e-05}, {"id": 609, "seek": 204200, "start": 2042.0, "end": 2047.0, "text": " something that I think came out in the conversation we were saying earlier but that might not be obvious", "tokens": [50364, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 457, 300, 1062, 406, 312, 6322, 50614, 50614, 291, 1116, 362, 281, 2528, 807, 498, 341, 390, 4926, 746, 1646, 457, 570, 309, 311, 4926, 293, 550, 50864, 50864, 293, 291, 458, 577, 293, 550, 1985, 550, 291, 393, 2661, 51114, 51114, 1333, 295, 3079, 309, 281, 264, 9274, 300, 309, 311, 294, 293, 2661, 1888, 493, 512, 1589, 51364, 51364, 407, 286, 841, 411, 439, 729, 6828, 366, 5240, 456, 337, 49828, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11084833145141601, "compression_ratio": 1.6965811965811965, "no_caption_prob": 2.5057226594071835e-05}, {"id": 610, "seek": 204200, "start": 2047.0, "end": 2052.0, "text": " you'd have to dig through if this was named something else but because it's named and then", "tokens": [50364, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 457, 300, 1062, 406, 312, 6322, 50614, 50614, 291, 1116, 362, 281, 2528, 807, 498, 341, 390, 4926, 746, 1646, 457, 570, 309, 311, 4926, 293, 550, 50864, 50864, 293, 291, 458, 577, 293, 550, 1985, 550, 291, 393, 2661, 51114, 51114, 1333, 295, 3079, 309, 281, 264, 9274, 300, 309, 311, 294, 293, 2661, 1888, 493, 512, 1589, 51364, 51364, 407, 286, 841, 411, 439, 729, 6828, 366, 5240, 456, 337, 49828, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11084833145141601, "compression_ratio": 1.6965811965811965, "no_caption_prob": 2.5057226594071835e-05}, {"id": 611, "seek": 204200, "start": 2052.0, "end": 2057.0, "text": " and you know how and then works then you can quickly", "tokens": [50364, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 457, 300, 1062, 406, 312, 6322, 50614, 50614, 291, 1116, 362, 281, 2528, 807, 498, 341, 390, 4926, 746, 1646, 457, 570, 309, 311, 4926, 293, 550, 50864, 50864, 293, 291, 458, 577, 293, 550, 1985, 550, 291, 393, 2661, 51114, 51114, 1333, 295, 3079, 309, 281, 264, 9274, 300, 309, 311, 294, 293, 2661, 1888, 493, 512, 1589, 51364, 51364, 407, 286, 841, 411, 439, 729, 6828, 366, 5240, 456, 337, 49828, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11084833145141601, "compression_ratio": 1.6965811965811965, "no_caption_prob": 2.5057226594071835e-05}, {"id": 612, "seek": 204200, "start": 2057.0, "end": 2062.0, "text": " sort of apply it to the domain that it's in and quickly pick up some information", "tokens": [50364, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 457, 300, 1062, 406, 312, 6322, 50614, 50614, 291, 1116, 362, 281, 2528, 807, 498, 341, 390, 4926, 746, 1646, 457, 570, 309, 311, 4926, 293, 550, 50864, 50864, 293, 291, 458, 577, 293, 550, 1985, 550, 291, 393, 2661, 51114, 51114, 1333, 295, 3079, 309, 281, 264, 9274, 300, 309, 311, 294, 293, 2661, 1888, 493, 512, 1589, 51364, 51364, 407, 286, 841, 411, 439, 729, 6828, 366, 5240, 456, 337, 49828, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11084833145141601, "compression_ratio": 1.6965811965811965, "no_caption_prob": 2.5057226594071835e-05}, {"id": 613, "seek": 204200, "start": 2062.0, "end": 2067.0, "text": " So I feel like all those functions are mostly there for familiarity", "tokens": [50364, 746, 300, 286, 519, 1361, 484, 294, 264, 3761, 321, 645, 1566, 3071, 457, 300, 1062, 406, 312, 6322, 50614, 50614, 291, 1116, 362, 281, 2528, 807, 498, 341, 390, 4926, 746, 1646, 457, 570, 309, 311, 4926, 293, 550, 50864, 50864, 293, 291, 458, 577, 293, 550, 1985, 550, 291, 393, 2661, 51114, 51114, 1333, 295, 3079, 309, 281, 264, 9274, 300, 309, 311, 294, 293, 2661, 1888, 493, 512, 1589, 51364, 51364, 407, 286, 841, 411, 439, 729, 6828, 366, 5240, 456, 337, 49828, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11084833145141601, "compression_ratio": 1.6965811965811965, "no_caption_prob": 2.5057226594071835e-05}, {"id": 614, "seek": 206700, "start": 2067.0, "end": 2072.0, "text": " If you see a map function you expect it to behave this way", "tokens": [50364, 759, 291, 536, 257, 4471, 2445, 291, 2066, 309, 281, 15158, 341, 636, 50614, 50614, 291, 2066, 309, 281, 1524, 729, 6064, 300, 321, 2835, 293, 286, 841, 411, 300, 311, 50864, 50864, 1238, 709, 264, 787, 1778, 281, 362, 729, 337, 49828, 51114, 51114, 412, 1935, 294, 2699, 76, 13, 1042, 436, 434, 445, 2689, 7705, 300, 291, 917, 493, 884, 51364, 51364, 2689, 34852, 300, 321, 917, 493, 884, 322, 1412, 13, 583, 264, 1778, 983, 291, 576, 1315, 552, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12560530596001204, "compression_ratio": 1.6854460093896713, "no_caption_prob": 0.00010228072642348707}, {"id": 615, "seek": 206700, "start": 2072.0, "end": 2077.0, "text": " you expect it to follow those laws that we mentioned and I feel like that's", "tokens": [50364, 759, 291, 536, 257, 4471, 2445, 291, 2066, 309, 281, 15158, 341, 636, 50614, 50614, 291, 2066, 309, 281, 1524, 729, 6064, 300, 321, 2835, 293, 286, 841, 411, 300, 311, 50864, 50864, 1238, 709, 264, 787, 1778, 281, 362, 729, 337, 49828, 51114, 51114, 412, 1935, 294, 2699, 76, 13, 1042, 436, 434, 445, 2689, 7705, 300, 291, 917, 493, 884, 51364, 51364, 2689, 34852, 300, 321, 917, 493, 884, 322, 1412, 13, 583, 264, 1778, 983, 291, 576, 1315, 552, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12560530596001204, "compression_ratio": 1.6854460093896713, "no_caption_prob": 0.00010228072642348707}, {"id": 616, "seek": 206700, "start": 2077.0, "end": 2082.0, "text": " pretty much the only reason to have those for familiarity", "tokens": [50364, 759, 291, 536, 257, 4471, 2445, 291, 2066, 309, 281, 15158, 341, 636, 50614, 50614, 291, 2066, 309, 281, 1524, 729, 6064, 300, 321, 2835, 293, 286, 841, 411, 300, 311, 50864, 50864, 1238, 709, 264, 787, 1778, 281, 362, 729, 337, 49828, 51114, 51114, 412, 1935, 294, 2699, 76, 13, 1042, 436, 434, 445, 2689, 7705, 300, 291, 917, 493, 884, 51364, 51364, 2689, 34852, 300, 321, 917, 493, 884, 322, 1412, 13, 583, 264, 1778, 983, 291, 576, 1315, 552, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12560530596001204, "compression_ratio": 1.6854460093896713, "no_caption_prob": 0.00010228072642348707}, {"id": 617, "seek": 206700, "start": 2082.0, "end": 2087.0, "text": " at least in Elm. Well they're just common operations that you end up doing", "tokens": [50364, 759, 291, 536, 257, 4471, 2445, 291, 2066, 309, 281, 15158, 341, 636, 50614, 50614, 291, 2066, 309, 281, 1524, 729, 6064, 300, 321, 2835, 293, 286, 841, 411, 300, 311, 50864, 50864, 1238, 709, 264, 787, 1778, 281, 362, 729, 337, 49828, 51114, 51114, 412, 1935, 294, 2699, 76, 13, 1042, 436, 434, 445, 2689, 7705, 300, 291, 917, 493, 884, 51364, 51364, 2689, 34852, 300, 321, 917, 493, 884, 322, 1412, 13, 583, 264, 1778, 983, 291, 576, 1315, 552, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12560530596001204, "compression_ratio": 1.6854460093896713, "no_caption_prob": 0.00010228072642348707}, {"id": 618, "seek": 206700, "start": 2087.0, "end": 2092.0, "text": " common transformations that we end up doing on data. But the reason why you would name them", "tokens": [50364, 759, 291, 536, 257, 4471, 2445, 291, 2066, 309, 281, 15158, 341, 636, 50614, 50614, 291, 2066, 309, 281, 1524, 729, 6064, 300, 321, 2835, 293, 286, 841, 411, 300, 311, 50864, 50864, 1238, 709, 264, 787, 1778, 281, 362, 729, 337, 49828, 51114, 51114, 412, 1935, 294, 2699, 76, 13, 1042, 436, 434, 445, 2689, 7705, 300, 291, 917, 493, 884, 51364, 51364, 2689, 34852, 300, 321, 917, 493, 884, 322, 1412, 13, 583, 264, 1778, 983, 291, 576, 1315, 552, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12560530596001204, "compression_ratio": 1.6854460093896713, "no_caption_prob": 0.00010228072642348707}, {"id": 619, "seek": 209200, "start": 2092.0, "end": 2097.0, "text": " that way or that you would have the arguments in that order", "tokens": [50364, 300, 636, 420, 300, 291, 576, 362, 264, 12869, 294, 300, 1668, 50614, 50614, 1079, 13, 583, 1338, 2745, 411, 498, 291, 528, 498, 291, 362, 257, 9450, 992, 597, 8306, 512, 1412, 50864, 50864, 550, 4471, 1669, 2020, 1968, 291, 818, 309, 300, 636, 420, 1968, 291, 652, 309, 51114, 51114, 1524, 729, 6064, 420, 406, 307, 257, 819, 12381, 51364, 51364, 457, 286, 519, 309, 1669, 2020, 281, 362, 552, 1524, 729, 6064, 293, 362, 300, 1315, 570, 309, 1669, 309, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12488581120282755, "compression_ratio": 1.7867298578199051, "no_caption_prob": 0.00011958308459725231}, {"id": 620, "seek": 209200, "start": 2097.0, "end": 2102.0, "text": " Yes. But yeah obviously like if you want if you have a selection set which contains some data", "tokens": [50364, 300, 636, 420, 300, 291, 576, 362, 264, 12869, 294, 300, 1668, 50614, 50614, 1079, 13, 583, 1338, 2745, 411, 498, 291, 528, 498, 291, 362, 257, 9450, 992, 597, 8306, 512, 1412, 50864, 50864, 550, 4471, 1669, 2020, 1968, 291, 818, 309, 300, 636, 420, 1968, 291, 652, 309, 51114, 51114, 1524, 729, 6064, 420, 406, 307, 257, 819, 12381, 51364, 51364, 457, 286, 519, 309, 1669, 2020, 281, 362, 552, 1524, 729, 6064, 293, 362, 300, 1315, 570, 309, 1669, 309, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12488581120282755, "compression_ratio": 1.7867298578199051, "no_caption_prob": 0.00011958308459725231}, {"id": 621, "seek": 209200, "start": 2102.0, "end": 2107.0, "text": " then map makes sense whether you call it that way or whether you make it", "tokens": [50364, 300, 636, 420, 300, 291, 576, 362, 264, 12869, 294, 300, 1668, 50614, 50614, 1079, 13, 583, 1338, 2745, 411, 498, 291, 528, 498, 291, 362, 257, 9450, 992, 597, 8306, 512, 1412, 50864, 50864, 550, 4471, 1669, 2020, 1968, 291, 818, 309, 300, 636, 420, 1968, 291, 652, 309, 51114, 51114, 1524, 729, 6064, 420, 406, 307, 257, 819, 12381, 51364, 51364, 457, 286, 519, 309, 1669, 2020, 281, 362, 552, 1524, 729, 6064, 293, 362, 300, 1315, 570, 309, 1669, 309, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12488581120282755, "compression_ratio": 1.7867298578199051, "no_caption_prob": 0.00011958308459725231}, {"id": 622, "seek": 209200, "start": 2107.0, "end": 2112.0, "text": " follow those laws or not is a different consideration", "tokens": [50364, 300, 636, 420, 300, 291, 576, 362, 264, 12869, 294, 300, 1668, 50614, 50614, 1079, 13, 583, 1338, 2745, 411, 498, 291, 528, 498, 291, 362, 257, 9450, 992, 597, 8306, 512, 1412, 50864, 50864, 550, 4471, 1669, 2020, 1968, 291, 818, 309, 300, 636, 420, 1968, 291, 652, 309, 51114, 51114, 1524, 729, 6064, 420, 406, 307, 257, 819, 12381, 51364, 51364, 457, 286, 519, 309, 1669, 2020, 281, 362, 552, 1524, 729, 6064, 293, 362, 300, 1315, 570, 309, 1669, 309, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12488581120282755, "compression_ratio": 1.7867298578199051, "no_caption_prob": 0.00011958308459725231}, {"id": 623, "seek": 209200, "start": 2112.0, "end": 2117.0, "text": " but I think it makes sense to have them follow those laws and have that name because it makes it", "tokens": [50364, 300, 636, 420, 300, 291, 576, 362, 264, 12869, 294, 300, 1668, 50614, 50614, 1079, 13, 583, 1338, 2745, 411, 498, 291, 528, 498, 291, 362, 257, 9450, 992, 597, 8306, 512, 1412, 50864, 50864, 550, 4471, 1669, 2020, 1968, 291, 818, 309, 300, 636, 420, 1968, 291, 652, 309, 51114, 51114, 1524, 729, 6064, 420, 406, 307, 257, 819, 12381, 51364, 51364, 457, 286, 519, 309, 1669, 2020, 281, 362, 552, 1524, 729, 6064, 293, 362, 300, 1315, 570, 309, 1669, 309, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12488581120282755, "compression_ratio": 1.7867298578199051, "no_caption_prob": 0.00011958308459725231}, {"id": 624, "seek": 211700, "start": 2117.0, "end": 2122.0, "text": " very familiar to people who know list.map who know maybe.map etc.", "tokens": [50364, 588, 4963, 281, 561, 567, 458, 1329, 13, 24223, 567, 458, 1310, 13, 24223, 5183, 13, 50614, 50614, 407, 286, 841, 411, 309, 311, 439, 466, 49828, 293, 445, 1455, 309, 3571, 281, 50864, 50864, 281, 4634, 74, 437, 257, 2522, 295, 3089, 775, 2361, 322, 437, 428, 3601, 295, 661, 3755, 295, 2445, 360, 51114, 51114, 286, 576, 584, 300, 311, 264, 2674, 2158, 295, 264, 3410, 295, 8294, 51364, 51364, 865, 286, 2041, 13, 2754, 411, 294, 264, 2657, 21841, 1002, 558, 264, 1558, 295, 1715, 8294, 420, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14993341932905482, "compression_ratio": 1.6340425531914893, "no_caption_prob": 6.204680539667606e-05}, {"id": 625, "seek": 211700, "start": 2122.0, "end": 2127.0, "text": " So I feel like it's all about familiarity and just making it easier to", "tokens": [50364, 588, 4963, 281, 561, 567, 458, 1329, 13, 24223, 567, 458, 1310, 13, 24223, 5183, 13, 50614, 50614, 407, 286, 841, 411, 309, 311, 439, 466, 49828, 293, 445, 1455, 309, 3571, 281, 50864, 50864, 281, 4634, 74, 437, 257, 2522, 295, 3089, 775, 2361, 322, 437, 428, 3601, 295, 661, 3755, 295, 2445, 360, 51114, 51114, 286, 576, 584, 300, 311, 264, 2674, 2158, 295, 264, 3410, 295, 8294, 51364, 51364, 865, 286, 2041, 13, 2754, 411, 294, 264, 2657, 21841, 1002, 558, 264, 1558, 295, 1715, 8294, 420, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14993341932905482, "compression_ratio": 1.6340425531914893, "no_caption_prob": 6.204680539667606e-05}, {"id": 626, "seek": 211700, "start": 2127.0, "end": 2132.0, "text": " to grok what a piece of code does based on what your knowledge of other pieces of function do", "tokens": [50364, 588, 4963, 281, 561, 567, 458, 1329, 13, 24223, 567, 458, 1310, 13, 24223, 5183, 13, 50614, 50614, 407, 286, 841, 411, 309, 311, 439, 466, 49828, 293, 445, 1455, 309, 3571, 281, 50864, 50864, 281, 4634, 74, 437, 257, 2522, 295, 3089, 775, 2361, 322, 437, 428, 3601, 295, 661, 3755, 295, 2445, 360, 51114, 51114, 286, 576, 584, 300, 311, 264, 2674, 2158, 295, 264, 3410, 295, 8294, 51364, 51364, 865, 286, 2041, 13, 2754, 411, 294, 264, 2657, 21841, 1002, 558, 264, 1558, 295, 1715, 8294, 420, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14993341932905482, "compression_ratio": 1.6340425531914893, "no_caption_prob": 6.204680539667606e-05}, {"id": 627, "seek": 211700, "start": 2132.0, "end": 2137.0, "text": " I would say that's the general value of the concept of patterns", "tokens": [50364, 588, 4963, 281, 561, 567, 458, 1329, 13, 24223, 567, 458, 1310, 13, 24223, 5183, 13, 50614, 50614, 407, 286, 841, 411, 309, 311, 439, 466, 49828, 293, 445, 1455, 309, 3571, 281, 50864, 50864, 281, 4634, 74, 437, 257, 2522, 295, 3089, 775, 2361, 322, 437, 428, 3601, 295, 661, 3755, 295, 2445, 360, 51114, 51114, 286, 576, 584, 300, 311, 264, 2674, 2158, 295, 264, 3410, 295, 8294, 51364, 51364, 865, 286, 2041, 13, 2754, 411, 294, 264, 2657, 21841, 1002, 558, 264, 1558, 295, 1715, 8294, 420, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14993341932905482, "compression_ratio": 1.6340425531914893, "no_caption_prob": 6.204680539667606e-05}, {"id": 628, "seek": 211700, "start": 2137.0, "end": 2142.0, "text": " Yeah I guess. Even like in the object oriented world right the idea of design patterns or", "tokens": [50364, 588, 4963, 281, 561, 567, 458, 1329, 13, 24223, 567, 458, 1310, 13, 24223, 5183, 13, 50614, 50614, 407, 286, 841, 411, 309, 311, 439, 466, 49828, 293, 445, 1455, 309, 3571, 281, 50864, 50864, 281, 4634, 74, 437, 257, 2522, 295, 3089, 775, 2361, 322, 437, 428, 3601, 295, 661, 3755, 295, 2445, 360, 51114, 51114, 286, 576, 584, 300, 311, 264, 2674, 2158, 295, 264, 3410, 295, 8294, 51364, 51364, 865, 286, 2041, 13, 2754, 411, 294, 264, 2657, 21841, 1002, 558, 264, 1558, 295, 1715, 8294, 420, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14993341932905482, "compression_ratio": 1.6340425531914893, "no_caption_prob": 6.204680539667606e-05}, {"id": 629, "seek": 214200, "start": 2142.0, "end": 2147.0, "text": " standardized ways of solving common problems it's much easier for me to look at some code and be like oh that's a decorator", "tokens": [50364, 31677, 2098, 295, 12606, 2689, 2740, 309, 311, 709, 3571, 337, 385, 281, 574, 412, 512, 3089, 293, 312, 411, 1954, 300, 311, 257, 7919, 1639, 50614, 50614, 2831, 813, 885, 411, 7020, 1392, 370, 456, 311, 364, 2657, 300, 311, 21993, 1071, 2657, 50864, 50864, 293, 456, 2544, 281, 312, 512, 733, 295, 36602, 2737, 510, 293, 2602, 295, 411, 534, 17343, 666, 264, 11420, 51114, 51114, 286, 393, 574, 412, 309, 293, 5521, 264, 5102, 293, 550, 4258, 286, 458, 309, 311, 472, 295, 729, 955, 2390, 8474, 51364, 51364, 300, 286, 600, 1612, 294, 2625, 661, 30628, 13, 407, 437, 466, 562, 2699, 76, 18558, 3004, 666, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15093534718389096, "compression_ratio": 1.7190635451505016, "no_caption_prob": 0.00020660644804593176}, {"id": 630, "seek": 214200, "start": 2147.0, "end": 2152.0, "text": " rather than being like huh okay so there's an object that's wrapping another object", "tokens": [50364, 31677, 2098, 295, 12606, 2689, 2740, 309, 311, 709, 3571, 337, 385, 281, 574, 412, 512, 3089, 293, 312, 411, 1954, 300, 311, 257, 7919, 1639, 50614, 50614, 2831, 813, 885, 411, 7020, 1392, 370, 456, 311, 364, 2657, 300, 311, 21993, 1071, 2657, 50864, 50864, 293, 456, 2544, 281, 312, 512, 733, 295, 36602, 2737, 510, 293, 2602, 295, 411, 534, 17343, 666, 264, 11420, 51114, 51114, 286, 393, 574, 412, 309, 293, 5521, 264, 5102, 293, 550, 4258, 286, 458, 309, 311, 472, 295, 729, 955, 2390, 8474, 51364, 51364, 300, 286, 600, 1612, 294, 2625, 661, 30628, 13, 407, 437, 466, 562, 2699, 76, 18558, 3004, 666, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15093534718389096, "compression_ratio": 1.7190635451505016, "no_caption_prob": 0.00020660644804593176}, {"id": 631, "seek": 214200, "start": 2152.0, "end": 2157.0, "text": " and there seems to be some kind of delegation happening here and instead of like really digging into the implementation", "tokens": [50364, 31677, 2098, 295, 12606, 2689, 2740, 309, 311, 709, 3571, 337, 385, 281, 574, 412, 512, 3089, 293, 312, 411, 1954, 300, 311, 257, 7919, 1639, 50614, 50614, 2831, 813, 885, 411, 7020, 1392, 370, 456, 311, 364, 2657, 300, 311, 21993, 1071, 2657, 50864, 50864, 293, 456, 2544, 281, 312, 512, 733, 295, 36602, 2737, 510, 293, 2602, 295, 411, 534, 17343, 666, 264, 11420, 51114, 51114, 286, 393, 574, 412, 309, 293, 5521, 264, 5102, 293, 550, 4258, 286, 458, 309, 311, 472, 295, 729, 955, 2390, 8474, 51364, 51364, 300, 286, 600, 1612, 294, 2625, 661, 30628, 13, 407, 437, 466, 562, 2699, 76, 18558, 3004, 666, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15093534718389096, "compression_ratio": 1.7190635451505016, "no_caption_prob": 0.00020660644804593176}, {"id": 632, "seek": 214200, "start": 2157.0, "end": 2162.0, "text": " I can look at it and recognize the pattern and then immediately I know it's one of those big building blocks", "tokens": [50364, 31677, 2098, 295, 12606, 2689, 2740, 309, 311, 709, 3571, 337, 385, 281, 574, 412, 512, 3089, 293, 312, 411, 1954, 300, 311, 257, 7919, 1639, 50614, 50614, 2831, 813, 885, 411, 7020, 1392, 370, 456, 311, 364, 2657, 300, 311, 21993, 1071, 2657, 50864, 50864, 293, 456, 2544, 281, 312, 512, 733, 295, 36602, 2737, 510, 293, 2602, 295, 411, 534, 17343, 666, 264, 11420, 51114, 51114, 286, 393, 574, 412, 309, 293, 5521, 264, 5102, 293, 550, 4258, 286, 458, 309, 311, 472, 295, 729, 955, 2390, 8474, 51364, 51364, 300, 286, 600, 1612, 294, 2625, 661, 30628, 13, 407, 437, 466, 562, 2699, 76, 18558, 3004, 666, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15093534718389096, "compression_ratio": 1.7190635451505016, "no_caption_prob": 0.00020660644804593176}, {"id": 633, "seek": 214200, "start": 2162.0, "end": 2167.0, "text": " that I've seen in 50 other contexts. So what about when Elm diverged into the", "tokens": [50364, 31677, 2098, 295, 12606, 2689, 2740, 309, 311, 709, 3571, 337, 385, 281, 574, 412, 512, 3089, 293, 312, 411, 1954, 300, 311, 257, 7919, 1639, 50614, 50614, 2831, 813, 885, 411, 7020, 1392, 370, 456, 311, 364, 2657, 300, 311, 21993, 1071, 2657, 50864, 50864, 293, 456, 2544, 281, 312, 512, 733, 295, 36602, 2737, 510, 293, 2602, 295, 411, 534, 17343, 666, 264, 11420, 51114, 51114, 286, 393, 574, 412, 309, 293, 5521, 264, 5102, 293, 550, 4258, 286, 458, 309, 311, 472, 295, 729, 955, 2390, 8474, 51364, 51364, 300, 286, 600, 1612, 294, 2625, 661, 30628, 13, 407, 437, 466, 562, 2699, 76, 18558, 3004, 666, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15093534718389096, "compression_ratio": 1.7190635451505016, "no_caption_prob": 0.00020660644804593176}, {"id": 634, "seek": 216700, "start": 2167.0, "end": 2172.0, "text": " list.concatmap it's not called list.andthen but it has the same signature", "tokens": [50364, 1329, 13, 1671, 18035, 24223, 309, 311, 406, 1219, 1329, 13, 474, 19096, 457, 309, 575, 264, 912, 13397, 50614, 50614, 293, 11964, 25650, 365, 721, 300, 764, 293, 19096, 50864, 50864, 370, 309, 2544, 411, 294, 867, 3331, 2699, 76, 2427, 82, 337, 51114, 51114, 1228, 544, 9274, 2856, 813, 7719, 5261, 2856, 51364, 51364, 457, 456, 366, 4923, 39457, 456, 13, 286, 914, 411, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1705426229557521, "compression_ratio": 1.5465116279069768, "no_caption_prob": 0.000237797197769396}, {"id": 635, "seek": 216700, "start": 2172.0, "end": 2177.0, "text": " and vice versa with things that use andthen", "tokens": [50364, 1329, 13, 1671, 18035, 24223, 309, 311, 406, 1219, 1329, 13, 474, 19096, 457, 309, 575, 264, 912, 13397, 50614, 50614, 293, 11964, 25650, 365, 721, 300, 764, 293, 19096, 50864, 50864, 370, 309, 2544, 411, 294, 867, 3331, 2699, 76, 2427, 82, 337, 51114, 51114, 1228, 544, 9274, 2856, 813, 7719, 5261, 2856, 51364, 51364, 457, 456, 366, 4923, 39457, 456, 13, 286, 914, 411, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1705426229557521, "compression_ratio": 1.5465116279069768, "no_caption_prob": 0.000237797197769396}, {"id": 636, "seek": 216700, "start": 2177.0, "end": 2182.0, "text": " so it seems like in many cases Elm opts for", "tokens": [50364, 1329, 13, 1671, 18035, 24223, 309, 311, 406, 1219, 1329, 13, 474, 19096, 457, 309, 575, 264, 912, 13397, 50614, 50614, 293, 11964, 25650, 365, 721, 300, 764, 293, 19096, 50864, 50864, 370, 309, 2544, 411, 294, 867, 3331, 2699, 76, 2427, 82, 337, 51114, 51114, 1228, 544, 9274, 2856, 813, 7719, 5261, 2856, 51364, 51364, 457, 456, 366, 4923, 39457, 456, 13, 286, 914, 411, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1705426229557521, "compression_ratio": 1.5465116279069768, "no_caption_prob": 0.000237797197769396}, {"id": 637, "seek": 216700, "start": 2182.0, "end": 2187.0, "text": " using more domain language than category theory language", "tokens": [50364, 1329, 13, 1671, 18035, 24223, 309, 311, 406, 1219, 1329, 13, 474, 19096, 457, 309, 575, 264, 912, 13397, 50614, 50614, 293, 11964, 25650, 365, 721, 300, 764, 293, 19096, 50864, 50864, 370, 309, 2544, 411, 294, 867, 3331, 2699, 76, 2427, 82, 337, 51114, 51114, 1228, 544, 9274, 2856, 813, 7719, 5261, 2856, 51364, 51364, 457, 456, 366, 4923, 39457, 456, 13, 286, 914, 411, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1705426229557521, "compression_ratio": 1.5465116279069768, "no_caption_prob": 0.000237797197769396}, {"id": 638, "seek": 216700, "start": 2187.0, "end": 2192.0, "text": " but there are trade offs there. I mean like the", "tokens": [50364, 1329, 13, 1671, 18035, 24223, 309, 311, 406, 1219, 1329, 13, 474, 19096, 457, 309, 575, 264, 912, 13397, 50614, 50614, 293, 11964, 25650, 365, 721, 300, 764, 293, 19096, 50864, 50864, 370, 309, 2544, 411, 294, 867, 3331, 2699, 76, 2427, 82, 337, 51114, 51114, 1228, 544, 9274, 2856, 813, 7719, 5261, 2856, 51364, 51364, 457, 456, 366, 4923, 39457, 456, 13, 286, 914, 411, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1705426229557521, "compression_ratio": 1.5465116279069768, "no_caption_prob": 0.000237797197769396}, {"id": 639, "seek": 219200, "start": 2192.0, "end": 2197.0, "text": " you could imagine a world where we just say let's be consistent with this naming", "tokens": [50364, 291, 727, 3811, 257, 1002, 689, 321, 445, 584, 718, 311, 312, 8398, 365, 341, 25290, 50614, 50614, 498, 309, 10002, 613, 6064, 718, 311, 1888, 257, 1433, 337, 309, 300, 321, 434, 516, 281, 764, 294, 264, 2699, 76, 1768, 50864, 50864, 293, 718, 311, 2897, 365, 300, 294, 439, 295, 264, 4965, 15148, 412, 1935, 370, 718, 311, 818, 309, 1329, 13, 474, 19096, 51114, 51114, 420, 718, 311, 764, 1588, 267, 24223, 14517, 2035, 309, 307, 718, 311, 2897, 365, 309, 13, 583, 309, 775, 483, 2252, 281, 1333, 295, 51364, 51364, 570, 797, 264, 4361, 45298, 393, 841, 370, 819, 754, 498, 264, 5102, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06389458690370832, "compression_ratio": 1.7450980392156863, "no_caption_prob": 0.0005440771346911788}, {"id": 640, "seek": 219200, "start": 2197.0, "end": 2202.0, "text": " if it follows these laws let's pick a term for it that we're going to use in the Elm community", "tokens": [50364, 291, 727, 3811, 257, 1002, 689, 321, 445, 584, 718, 311, 312, 8398, 365, 341, 25290, 50614, 50614, 498, 309, 10002, 613, 6064, 718, 311, 1888, 257, 1433, 337, 309, 300, 321, 434, 516, 281, 764, 294, 264, 2699, 76, 1768, 50864, 50864, 293, 718, 311, 2897, 365, 300, 294, 439, 295, 264, 4965, 15148, 412, 1935, 370, 718, 311, 818, 309, 1329, 13, 474, 19096, 51114, 51114, 420, 718, 311, 764, 1588, 267, 24223, 14517, 2035, 309, 307, 718, 311, 2897, 365, 309, 13, 583, 309, 775, 483, 2252, 281, 1333, 295, 51364, 51364, 570, 797, 264, 4361, 45298, 393, 841, 370, 819, 754, 498, 264, 5102, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06389458690370832, "compression_ratio": 1.7450980392156863, "no_caption_prob": 0.0005440771346911788}, {"id": 641, "seek": 219200, "start": 2202.0, "end": 2207.0, "text": " and let's stick with that in all of the core libraries at least so let's call it list.andthen", "tokens": [50364, 291, 727, 3811, 257, 1002, 689, 321, 445, 584, 718, 311, 312, 8398, 365, 341, 25290, 50614, 50614, 498, 309, 10002, 613, 6064, 718, 311, 1888, 257, 1433, 337, 309, 300, 321, 434, 516, 281, 764, 294, 264, 2699, 76, 1768, 50864, 50864, 293, 718, 311, 2897, 365, 300, 294, 439, 295, 264, 4965, 15148, 412, 1935, 370, 718, 311, 818, 309, 1329, 13, 474, 19096, 51114, 51114, 420, 718, 311, 764, 1588, 267, 24223, 14517, 2035, 309, 307, 718, 311, 2897, 365, 309, 13, 583, 309, 775, 483, 2252, 281, 1333, 295, 51364, 51364, 570, 797, 264, 4361, 45298, 393, 841, 370, 819, 754, 498, 264, 5102, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06389458690370832, "compression_ratio": 1.7450980392156863, "no_caption_prob": 0.0005440771346911788}, {"id": 642, "seek": 219200, "start": 2207.0, "end": 2212.0, "text": " or let's use concatmap elsewhere whatever it is let's stick with it. But it does get difficult to sort of", "tokens": [50364, 291, 727, 3811, 257, 1002, 689, 321, 445, 584, 718, 311, 312, 8398, 365, 341, 25290, 50614, 50614, 498, 309, 10002, 613, 6064, 718, 311, 1888, 257, 1433, 337, 309, 300, 321, 434, 516, 281, 764, 294, 264, 2699, 76, 1768, 50864, 50864, 293, 718, 311, 2897, 365, 300, 294, 439, 295, 264, 4965, 15148, 412, 1935, 370, 718, 311, 818, 309, 1329, 13, 474, 19096, 51114, 51114, 420, 718, 311, 764, 1588, 267, 24223, 14517, 2035, 309, 307, 718, 311, 2897, 365, 309, 13, 583, 309, 775, 483, 2252, 281, 1333, 295, 51364, 51364, 570, 797, 264, 4361, 45298, 393, 841, 370, 819, 754, 498, 264, 5102, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06389458690370832, "compression_ratio": 1.7450980392156863, "no_caption_prob": 0.0005440771346911788}, {"id": 643, "seek": 219200, "start": 2212.0, "end": 2217.0, "text": " because again the semantics can feel so different even if the pattern", "tokens": [50364, 291, 727, 3811, 257, 1002, 689, 321, 445, 584, 718, 311, 312, 8398, 365, 341, 25290, 50614, 50614, 498, 309, 10002, 613, 6064, 718, 311, 1888, 257, 1433, 337, 309, 300, 321, 434, 516, 281, 764, 294, 264, 2699, 76, 1768, 50864, 50864, 293, 718, 311, 2897, 365, 300, 294, 439, 295, 264, 4965, 15148, 412, 1935, 370, 718, 311, 818, 309, 1329, 13, 474, 19096, 51114, 51114, 420, 718, 311, 764, 1588, 267, 24223, 14517, 2035, 309, 307, 718, 311, 2897, 365, 309, 13, 583, 309, 775, 483, 2252, 281, 1333, 295, 51364, 51364, 570, 797, 264, 4361, 45298, 393, 841, 370, 819, 754, 498, 264, 5102, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06389458690370832, "compression_ratio": 1.7450980392156863, "no_caption_prob": 0.0005440771346911788}, {"id": 644, "seek": 221700, "start": 2217.0, "end": 2222.0, "text": " is the same. Yes I think in fact lists are really tricky", "tokens": [50364, 307, 264, 912, 13, 1079, 286, 519, 294, 1186, 14511, 366, 534, 12414, 50614, 50614, 570, 309, 311, 2049, 689, 291, 434, 700, 7268, 281, 257, 688, 295, 613, 721, 4098, 50864, 50864, 746, 411, 4471, 293, 498, 291, 458, 428, 787, 1365, 300, 291, 600, 1612, 307, 1329, 4471, 51114, 51114, 291, 434, 516, 281, 519, 4471, 307, 466, 24784, 293, 1329, 23149, 304, 293, 370, 562, 291, 536, 51364, 51364, 1310, 4471, 31828, 281, 3089, 4471, 293, 309, 311, 406, 466, 23149, 278, 257, 1329, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1022597407246684, "compression_ratio": 1.6504424778761062, "no_caption_prob": 6.604827649425715e-05}, {"id": 645, "seek": 221700, "start": 2222.0, "end": 2227.0, "text": " because it's often where you're first introduced to a lot of these things particularly", "tokens": [50364, 307, 264, 912, 13, 1079, 286, 519, 294, 1186, 14511, 366, 534, 12414, 50614, 50614, 570, 309, 311, 2049, 689, 291, 434, 700, 7268, 281, 257, 688, 295, 613, 721, 4098, 50864, 50864, 746, 411, 4471, 293, 498, 291, 458, 428, 787, 1365, 300, 291, 600, 1612, 307, 1329, 4471, 51114, 51114, 291, 434, 516, 281, 519, 4471, 307, 466, 24784, 293, 1329, 23149, 304, 293, 370, 562, 291, 536, 51364, 51364, 1310, 4471, 31828, 281, 3089, 4471, 293, 309, 311, 406, 466, 23149, 278, 257, 1329, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1022597407246684, "compression_ratio": 1.6504424778761062, "no_caption_prob": 6.604827649425715e-05}, {"id": 646, "seek": 221700, "start": 2227.0, "end": 2232.0, "text": " something like map and if you know your only example that you've seen is list map", "tokens": [50364, 307, 264, 912, 13, 1079, 286, 519, 294, 1186, 14511, 366, 534, 12414, 50614, 50614, 570, 309, 311, 2049, 689, 291, 434, 700, 7268, 281, 257, 688, 295, 613, 721, 4098, 50864, 50864, 746, 411, 4471, 293, 498, 291, 458, 428, 787, 1365, 300, 291, 600, 1612, 307, 1329, 4471, 51114, 51114, 291, 434, 516, 281, 519, 4471, 307, 466, 24784, 293, 1329, 23149, 304, 293, 370, 562, 291, 536, 51364, 51364, 1310, 4471, 31828, 281, 3089, 4471, 293, 309, 311, 406, 466, 23149, 278, 257, 1329, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1022597407246684, "compression_ratio": 1.6504424778761062, "no_caption_prob": 6.604827649425715e-05}, {"id": 647, "seek": 221700, "start": 2232.0, "end": 2237.0, "text": " you're going to think map is about iteration and list traversal and so when you see", "tokens": [50364, 307, 264, 912, 13, 1079, 286, 519, 294, 1186, 14511, 366, 534, 12414, 50614, 50614, 570, 309, 311, 2049, 689, 291, 434, 700, 7268, 281, 257, 688, 295, 613, 721, 4098, 50864, 50864, 746, 411, 4471, 293, 498, 291, 458, 428, 787, 1365, 300, 291, 600, 1612, 307, 1329, 4471, 51114, 51114, 291, 434, 516, 281, 519, 4471, 307, 466, 24784, 293, 1329, 23149, 304, 293, 370, 562, 291, 536, 51364, 51364, 1310, 4471, 31828, 281, 3089, 4471, 293, 309, 311, 406, 466, 23149, 278, 257, 1329, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1022597407246684, "compression_ratio": 1.6504424778761062, "no_caption_prob": 6.604827649425715e-05}, {"id": 648, "seek": 221700, "start": 2237.0, "end": 2242.0, "text": " maybe map JSON to code map and it's not about traversing a list", "tokens": [50364, 307, 264, 912, 13, 1079, 286, 519, 294, 1186, 14511, 366, 534, 12414, 50614, 50614, 570, 309, 311, 2049, 689, 291, 434, 700, 7268, 281, 257, 688, 295, 613, 721, 4098, 50864, 50864, 746, 411, 4471, 293, 498, 291, 458, 428, 787, 1365, 300, 291, 600, 1612, 307, 1329, 4471, 51114, 51114, 291, 434, 516, 281, 519, 4471, 307, 466, 24784, 293, 1329, 23149, 304, 293, 370, 562, 291, 536, 51364, 51364, 1310, 4471, 31828, 281, 3089, 4471, 293, 309, 311, 406, 466, 23149, 278, 257, 1329, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1022597407246684, "compression_ratio": 1.6504424778761062, "no_caption_prob": 6.604827649425715e-05}, {"id": 649, "seek": 224200, "start": 2242.0, "end": 2247.0, "text": " you get really confused. Or at least I did.", "tokens": [50364, 291, 483, 534, 9019, 13, 1610, 412, 1935, 286, 630, 13, 50614, 50614, 865, 2318, 1348, 490, 15778, 689, 264, 787, 4471, 2445, 300, 286, 458, 307, 322, 41011, 50864, 50864, 370, 16641, 13, 1079, 4878, 1019, 1186, 51114, 51114, 264, 6228, 550, 3170, 307, 8659, 4471, 322, 257, 6228, 51364, 51364, 457, 309, 311, 611, 364, 293, 550, 13, 1079, 309, 307, 611, 364, 293, 550, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15858905845218235, "compression_ratio": 1.632183908045977, "no_caption_prob": 0.0001940717047546059}, {"id": 650, "seek": 224200, "start": 2247.0, "end": 2252.0, "text": " Yeah especially coming from JavaScript where the only map function that I know is on arrays", "tokens": [50364, 291, 483, 534, 9019, 13, 1610, 412, 1935, 286, 630, 13, 50614, 50614, 865, 2318, 1348, 490, 15778, 689, 264, 787, 4471, 2445, 300, 286, 458, 307, 322, 41011, 50864, 50864, 370, 16641, 13, 1079, 4878, 1019, 1186, 51114, 51114, 264, 6228, 550, 3170, 307, 8659, 4471, 322, 257, 6228, 51364, 51364, 457, 309, 311, 611, 364, 293, 550, 13, 1079, 309, 307, 611, 364, 293, 550, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15858905845218235, "compression_ratio": 1.632183908045977, "no_caption_prob": 0.0001940717047546059}, {"id": 651, "seek": 224200, "start": 2252.0, "end": 2257.0, "text": " so collections. Yes although fun fact", "tokens": [50364, 291, 483, 534, 9019, 13, 1610, 412, 1935, 286, 630, 13, 50614, 50614, 865, 2318, 1348, 490, 15778, 689, 264, 787, 4471, 2445, 300, 286, 458, 307, 322, 41011, 50864, 50864, 370, 16641, 13, 1079, 4878, 1019, 1186, 51114, 51114, 264, 6228, 550, 3170, 307, 8659, 4471, 322, 257, 6228, 51364, 51364, 457, 309, 311, 611, 364, 293, 550, 13, 1079, 309, 307, 611, 364, 293, 550, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15858905845218235, "compression_ratio": 1.632183908045977, "no_caption_prob": 0.0001940717047546059}, {"id": 652, "seek": 224200, "start": 2257.0, "end": 2262.0, "text": " the promise then method is effectively map on a promise", "tokens": [50364, 291, 483, 534, 9019, 13, 1610, 412, 1935, 286, 630, 13, 50614, 50614, 865, 2318, 1348, 490, 15778, 689, 264, 787, 4471, 2445, 300, 286, 458, 307, 322, 41011, 50864, 50864, 370, 16641, 13, 1079, 4878, 1019, 1186, 51114, 51114, 264, 6228, 550, 3170, 307, 8659, 4471, 322, 257, 6228, 51364, 51364, 457, 309, 311, 611, 364, 293, 550, 13, 1079, 309, 307, 611, 364, 293, 550, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15858905845218235, "compression_ratio": 1.632183908045977, "no_caption_prob": 0.0001940717047546059}, {"id": 653, "seek": 224200, "start": 2262.0, "end": 2267.0, "text": " but it's also an and then. Yes it is also an and then.", "tokens": [50364, 291, 483, 534, 9019, 13, 1610, 412, 1935, 286, 630, 13, 50614, 50614, 865, 2318, 1348, 490, 15778, 689, 264, 787, 4471, 2445, 300, 286, 458, 307, 322, 41011, 50864, 50864, 370, 16641, 13, 1079, 4878, 1019, 1186, 51114, 51114, 264, 6228, 550, 3170, 307, 8659, 4471, 322, 257, 6228, 51364, 51364, 457, 309, 311, 611, 364, 293, 550, 13, 1079, 309, 307, 611, 364, 293, 550, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15858905845218235, "compression_ratio": 1.632183908045977, "no_caption_prob": 0.0001940717047546059}, {"id": 654, "seek": 226700, "start": 2267.0, "end": 2272.0, "text": " Right.", "tokens": [50364, 1779, 13, 50614, 50614, 407, 307, 309, 437, 733, 295, 13, 467, 311, 1108, 43341, 50864, 50864, 457, 264, 11183, 644, 1943, 380, 534, 731, 48249, 51114, 51114, 264, 13603, 500, 380, 534, 4471, 2541, 356, 286, 500, 380, 458, 498, 300, 9857, 604, 1108, 43341, 13, 467, 733, 295, 775, 2086, 51364, 51364, 382, 364, 28023, 291, 393, 584, 300, 6228, 550, 307, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1404117415933048, "compression_ratio": 1.50625, "no_caption_prob": 5.0640803237911314e-05}, {"id": 655, "seek": 226700, "start": 2272.0, "end": 2277.0, "text": " So is it what kind of. It's monadic", "tokens": [50364, 1779, 13, 50614, 50614, 407, 307, 309, 437, 733, 295, 13, 467, 311, 1108, 43341, 50864, 50864, 457, 264, 11183, 644, 1943, 380, 534, 731, 48249, 51114, 51114, 264, 13603, 500, 380, 534, 4471, 2541, 356, 286, 500, 380, 458, 498, 300, 9857, 604, 1108, 43341, 13, 467, 733, 295, 775, 2086, 51364, 51364, 382, 364, 28023, 291, 393, 584, 300, 6228, 550, 307, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1404117415933048, "compression_ratio": 1.50625, "no_caption_prob": 5.0640803237911314e-05}, {"id": 656, "seek": 226700, "start": 2277.0, "end": 2282.0, "text": " but the exception part isn't really well behaved", "tokens": [50364, 1779, 13, 50614, 50614, 407, 307, 309, 437, 733, 295, 13, 467, 311, 1108, 43341, 50864, 50864, 457, 264, 11183, 644, 1943, 380, 534, 731, 48249, 51114, 51114, 264, 13603, 500, 380, 534, 4471, 2541, 356, 286, 500, 380, 458, 498, 300, 9857, 604, 1108, 43341, 13, 467, 733, 295, 775, 2086, 51364, 51364, 382, 364, 28023, 291, 393, 584, 300, 6228, 550, 307, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1404117415933048, "compression_ratio": 1.50625, "no_caption_prob": 5.0640803237911314e-05}, {"id": 657, "seek": 226700, "start": 2282.0, "end": 2287.0, "text": " the errors don't really map cleanly I don't know if that breaks any monadic. It kind of does yes", "tokens": [50364, 1779, 13, 50614, 50614, 407, 307, 309, 437, 733, 295, 13, 467, 311, 1108, 43341, 50864, 50864, 457, 264, 11183, 644, 1943, 380, 534, 731, 48249, 51114, 51114, 264, 13603, 500, 380, 534, 4471, 2541, 356, 286, 500, 380, 458, 498, 300, 9857, 604, 1108, 43341, 13, 467, 733, 295, 775, 2086, 51364, 51364, 382, 364, 28023, 291, 393, 584, 300, 6228, 550, 307, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1404117415933048, "compression_ratio": 1.50625, "no_caption_prob": 5.0640803237911314e-05}, {"id": 658, "seek": 226700, "start": 2287.0, "end": 2292.0, "text": " as an approximation you can say that promise then is", "tokens": [50364, 1779, 13, 50614, 50614, 407, 307, 309, 437, 733, 295, 13, 467, 311, 1108, 43341, 50864, 50864, 457, 264, 11183, 644, 1943, 380, 534, 731, 48249, 51114, 51114, 264, 13603, 500, 380, 534, 4471, 2541, 356, 286, 500, 380, 458, 498, 300, 9857, 604, 1108, 43341, 13, 467, 733, 295, 775, 2086, 51364, 51364, 382, 364, 28023, 291, 393, 584, 300, 6228, 550, 307, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1404117415933048, "compression_ratio": 1.50625, "no_caption_prob": 5.0640803237911314e-05}, {"id": 659, "seek": 229200, "start": 2292.0, "end": 2297.0, "text": " like a similar to a monad it's similar to a functor or similar to map similar to and then", "tokens": [50364, 411, 257, 2531, 281, 257, 1108, 345, 309, 311, 2531, 281, 257, 1019, 1672, 420, 2531, 281, 4471, 2531, 281, 293, 550, 50614, 50614, 570, 291, 393, 360, 6228, 5893, 14151, 281, 483, 445, 264, 4985, 2158, 50864, 50864, 293, 291, 393, 360, 550, 322, 264, 6228, 281, 2354, 13, 51114, 51114, 1042, 309, 2170, 1880, 498, 291, 6794, 309, 281, 584, 806, 76, 5633, 597, 307, 588, 2531, 281, 15778, 311, 6228, 51364, 51364, 689, 806, 76, 5633, 575, 732, 588, 4994, 6828, 337, 4471, 293, 550, 498, 291, 434, 1237, 412, 512, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.17874091562598643, "compression_ratio": 1.8153153153153154, "no_caption_prob": 6.204708915902302e-05}, {"id": 660, "seek": 229200, "start": 2297.0, "end": 2302.0, "text": " because you can do promise dot resolve to get just the unit value", "tokens": [50364, 411, 257, 2531, 281, 257, 1108, 345, 309, 311, 2531, 281, 257, 1019, 1672, 420, 2531, 281, 4471, 2531, 281, 293, 550, 50614, 50614, 570, 291, 393, 360, 6228, 5893, 14151, 281, 483, 445, 264, 4985, 2158, 50864, 50864, 293, 291, 393, 360, 550, 322, 264, 6228, 281, 2354, 13, 51114, 51114, 1042, 309, 2170, 1880, 498, 291, 6794, 309, 281, 584, 806, 76, 5633, 597, 307, 588, 2531, 281, 15778, 311, 6228, 51364, 51364, 689, 806, 76, 5633, 575, 732, 588, 4994, 6828, 337, 4471, 293, 550, 498, 291, 434, 1237, 412, 512, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.17874091562598643, "compression_ratio": 1.8153153153153154, "no_caption_prob": 6.204708915902302e-05}, {"id": 661, "seek": 229200, "start": 2302.0, "end": 2307.0, "text": " and you can do then on the promise to continue.", "tokens": [50364, 411, 257, 2531, 281, 257, 1108, 345, 309, 311, 2531, 281, 257, 1019, 1672, 420, 2531, 281, 4471, 2531, 281, 293, 550, 50614, 50614, 570, 291, 393, 360, 6228, 5893, 14151, 281, 483, 445, 264, 4985, 2158, 50864, 50864, 293, 291, 393, 360, 550, 322, 264, 6228, 281, 2354, 13, 51114, 51114, 1042, 309, 2170, 1880, 498, 291, 6794, 309, 281, 584, 806, 76, 5633, 597, 307, 588, 2531, 281, 15778, 311, 6228, 51364, 51364, 689, 806, 76, 5633, 575, 732, 588, 4994, 6828, 337, 4471, 293, 550, 498, 291, 434, 1237, 412, 512, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.17874091562598643, "compression_ratio": 1.8153153153153154, "no_caption_prob": 6.204708915902302e-05}, {"id": 662, "seek": 229200, "start": 2307.0, "end": 2312.0, "text": " Well it gets interesting if you compare it to say elm task which is very similar to JavaScript's promise", "tokens": [50364, 411, 257, 2531, 281, 257, 1108, 345, 309, 311, 2531, 281, 257, 1019, 1672, 420, 2531, 281, 4471, 2531, 281, 293, 550, 50614, 50614, 570, 291, 393, 360, 6228, 5893, 14151, 281, 483, 445, 264, 4985, 2158, 50864, 50864, 293, 291, 393, 360, 550, 322, 264, 6228, 281, 2354, 13, 51114, 51114, 1042, 309, 2170, 1880, 498, 291, 6794, 309, 281, 584, 806, 76, 5633, 597, 307, 588, 2531, 281, 15778, 311, 6228, 51364, 51364, 689, 806, 76, 5633, 575, 732, 588, 4994, 6828, 337, 4471, 293, 550, 498, 291, 434, 1237, 412, 512, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.17874091562598643, "compression_ratio": 1.8153153153153154, "no_caption_prob": 6.204708915902302e-05}, {"id": 663, "seek": 229200, "start": 2312.0, "end": 2317.0, "text": " where elm task has two very separate functions for map and then if you're looking at some code", "tokens": [50364, 411, 257, 2531, 281, 257, 1108, 345, 309, 311, 2531, 281, 257, 1019, 1672, 420, 2531, 281, 4471, 2531, 281, 293, 550, 50614, 50614, 570, 291, 393, 360, 6228, 5893, 14151, 281, 483, 445, 264, 4985, 2158, 50864, 50864, 293, 291, 393, 360, 550, 322, 264, 6228, 281, 2354, 13, 51114, 51114, 1042, 309, 2170, 1880, 498, 291, 6794, 309, 281, 584, 806, 76, 5633, 597, 307, 588, 2531, 281, 15778, 311, 6228, 51364, 51364, 689, 806, 76, 5633, 575, 732, 588, 4994, 6828, 337, 4471, 293, 550, 498, 291, 434, 1237, 412, 512, 3089, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.17874091562598643, "compression_ratio": 1.8153153153153154, "no_caption_prob": 6.204708915902302e-05}, {"id": 664, "seek": 231700, "start": 2317.0, "end": 2322.0, "text": " and you see that it applies a task map you know that", "tokens": [50364, 293, 291, 536, 300, 309, 13165, 257, 5633, 4471, 291, 458, 300, 50614, 50614, 718, 311, 6552, 613, 9608, 366, 445, 33283, 12475, 291, 458, 309, 311, 787, 1455, 472, 5308, 293, 550, 50864, 50864, 9275, 257, 9887, 281, 264, 1874, 295, 300, 5308, 13, 22053, 2644, 652, 257, 1150, 5308, 51114, 51114, 570, 295, 264, 1019, 1672, 6064, 457, 13, 1664, 291, 17594, 983, 30, 51364, 51364, 1436, 498, 291, 1027, 257, 1150, 5308, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09335085711901701, "compression_ratio": 1.6482412060301508, "no_caption_prob": 3.321310578030534e-05}, {"id": 665, "seek": 231700, "start": 2322.0, "end": 2327.0, "text": " let's assume these tasks are just HTTP requests you know it's only making one request and then", "tokens": [50364, 293, 291, 536, 300, 309, 13165, 257, 5633, 4471, 291, 458, 300, 50614, 50614, 718, 311, 6552, 613, 9608, 366, 445, 33283, 12475, 291, 458, 309, 311, 787, 1455, 472, 5308, 293, 550, 50864, 50864, 9275, 257, 9887, 281, 264, 1874, 295, 300, 5308, 13, 22053, 2644, 652, 257, 1150, 5308, 51114, 51114, 570, 295, 264, 1019, 1672, 6064, 457, 13, 1664, 291, 17594, 983, 30, 51364, 51364, 1436, 498, 291, 1027, 257, 1150, 5308, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09335085711901701, "compression_ratio": 1.6482412060301508, "no_caption_prob": 3.321310578030534e-05}, {"id": 666, "seek": 231700, "start": 2327.0, "end": 2332.0, "text": " applying a transformation to the result of that request. Map cannot make a second request", "tokens": [50364, 293, 291, 536, 300, 309, 13165, 257, 5633, 4471, 291, 458, 300, 50614, 50614, 718, 311, 6552, 613, 9608, 366, 445, 33283, 12475, 291, 458, 309, 311, 787, 1455, 472, 5308, 293, 550, 50864, 50864, 9275, 257, 9887, 281, 264, 1874, 295, 300, 5308, 13, 22053, 2644, 652, 257, 1150, 5308, 51114, 51114, 570, 295, 264, 1019, 1672, 6064, 457, 13, 1664, 291, 17594, 983, 30, 51364, 51364, 1436, 498, 291, 1027, 257, 1150, 5308, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09335085711901701, "compression_ratio": 1.6482412060301508, "no_caption_prob": 3.321310578030534e-05}, {"id": 667, "seek": 231700, "start": 2332.0, "end": 2337.0, "text": " because of the functor laws but. Can you clarify why?", "tokens": [50364, 293, 291, 536, 300, 309, 13165, 257, 5633, 4471, 291, 458, 300, 50614, 50614, 718, 311, 6552, 613, 9608, 366, 445, 33283, 12475, 291, 458, 309, 311, 787, 1455, 472, 5308, 293, 550, 50864, 50864, 9275, 257, 9887, 281, 264, 1874, 295, 300, 5308, 13, 22053, 2644, 652, 257, 1150, 5308, 51114, 51114, 570, 295, 264, 1019, 1672, 6064, 457, 13, 1664, 291, 17594, 983, 30, 51364, 51364, 1436, 498, 291, 1027, 257, 1150, 5308, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09335085711901701, "compression_ratio": 1.6482412060301508, "no_caption_prob": 3.321310578030534e-05}, {"id": 668, "seek": 231700, "start": 2337.0, "end": 2342.0, "text": " Because if you made a second request", "tokens": [50364, 293, 291, 536, 300, 309, 13165, 257, 5633, 4471, 291, 458, 300, 50614, 50614, 718, 311, 6552, 613, 9608, 366, 445, 33283, 12475, 291, 458, 309, 311, 787, 1455, 472, 5308, 293, 550, 50864, 50864, 9275, 257, 9887, 281, 264, 1874, 295, 300, 5308, 13, 22053, 2644, 652, 257, 1150, 5308, 51114, 51114, 570, 295, 264, 1019, 1672, 6064, 457, 13, 1664, 291, 17594, 983, 30, 51364, 51364, 1436, 498, 291, 1027, 257, 1150, 5308, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09335085711901701, "compression_ratio": 1.6482412060301508, "no_caption_prob": 3.321310578030534e-05}, {"id": 669, "seek": 234200, "start": 2342.0, "end": 2347.0, "text": " it would end up", "tokens": [50364, 309, 576, 917, 493, 50614, 50614, 718, 311, 536, 286, 519, 498, 291, 1027, 257, 1150, 5308, 291, 4590, 493, 365, 411, 257, 10831, 356, 15646, 292, 50864, 50864, 5633, 13, 1079, 291, 576, 362, 257, 5633, 420, 257, 5633, 13, 1779, 597, 307, 767, 983, 51114, 51114, 512, 8650, 2602, 295, 5141, 309, 293, 550, 321, 603, 818, 309, 4962, 4471, 570, 309, 311, 51364, 51364, 360, 4471, 457, 365, 1071, 5633, 293, 550, 291, 600, 658, 341, 15646, 292, 551, 293, 291, 362, 281, 24183, 309, 760, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10869767588953819, "compression_ratio": 1.6729857819905214, "no_caption_prob": 4.133431502850726e-05}, {"id": 670, "seek": 234200, "start": 2347.0, "end": 2352.0, "text": " let's see I think if you made a second request you ended up with like a doubly nested", "tokens": [50364, 309, 576, 917, 493, 50614, 50614, 718, 311, 536, 286, 519, 498, 291, 1027, 257, 1150, 5308, 291, 4590, 493, 365, 411, 257, 10831, 356, 15646, 292, 50864, 50864, 5633, 13, 1079, 291, 576, 362, 257, 5633, 420, 257, 5633, 13, 1779, 597, 307, 767, 983, 51114, 51114, 512, 8650, 2602, 295, 5141, 309, 293, 550, 321, 603, 818, 309, 4962, 4471, 570, 309, 311, 51364, 51364, 360, 4471, 457, 365, 1071, 5633, 293, 550, 291, 600, 658, 341, 15646, 292, 551, 293, 291, 362, 281, 24183, 309, 760, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10869767588953819, "compression_ratio": 1.6729857819905214, "no_caption_prob": 4.133431502850726e-05}, {"id": 671, "seek": 234200, "start": 2352.0, "end": 2357.0, "text": " task. Yes you would have a task or a task. Right which is actually why", "tokens": [50364, 309, 576, 917, 493, 50614, 50614, 718, 311, 536, 286, 519, 498, 291, 1027, 257, 1150, 5308, 291, 4590, 493, 365, 411, 257, 10831, 356, 15646, 292, 50864, 50864, 5633, 13, 1079, 291, 576, 362, 257, 5633, 420, 257, 5633, 13, 1779, 597, 307, 767, 983, 51114, 51114, 512, 8650, 2602, 295, 5141, 309, 293, 550, 321, 603, 818, 309, 4962, 4471, 570, 309, 311, 51364, 51364, 360, 4471, 457, 365, 1071, 5633, 293, 550, 291, 600, 658, 341, 15646, 292, 551, 293, 291, 362, 281, 24183, 309, 760, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10869767588953819, "compression_ratio": 1.6729857819905214, "no_caption_prob": 4.133431502850726e-05}, {"id": 672, "seek": 234200, "start": 2357.0, "end": 2362.0, "text": " some languages instead of calling it and then we'll call it flat map because it's", "tokens": [50364, 309, 576, 917, 493, 50614, 50614, 718, 311, 536, 286, 519, 498, 291, 1027, 257, 1150, 5308, 291, 4590, 493, 365, 411, 257, 10831, 356, 15646, 292, 50864, 50864, 5633, 13, 1079, 291, 576, 362, 257, 5633, 420, 257, 5633, 13, 1779, 597, 307, 767, 983, 51114, 51114, 512, 8650, 2602, 295, 5141, 309, 293, 550, 321, 603, 818, 309, 4962, 4471, 570, 309, 311, 51364, 51364, 360, 4471, 457, 365, 1071, 5633, 293, 550, 291, 600, 658, 341, 15646, 292, 551, 293, 291, 362, 281, 24183, 309, 760, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10869767588953819, "compression_ratio": 1.6729857819905214, "no_caption_prob": 4.133431502850726e-05}, {"id": 673, "seek": 234200, "start": 2362.0, "end": 2367.0, "text": " do map but with another task and then you've got this nested thing and you have to flatten it down", "tokens": [50364, 309, 576, 917, 493, 50614, 50614, 718, 311, 536, 286, 519, 498, 291, 1027, 257, 1150, 5308, 291, 4590, 493, 365, 411, 257, 10831, 356, 15646, 292, 50864, 50864, 5633, 13, 1079, 291, 576, 362, 257, 5633, 420, 257, 5633, 13, 1779, 597, 307, 767, 983, 51114, 51114, 512, 8650, 2602, 295, 5141, 309, 293, 550, 321, 603, 818, 309, 4962, 4471, 570, 309, 311, 51364, 51364, 360, 4471, 457, 365, 1071, 5633, 293, 550, 291, 600, 658, 341, 15646, 292, 551, 293, 291, 362, 281, 24183, 309, 760, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10869767588953819, "compression_ratio": 1.6729857819905214, "no_caption_prob": 4.133431502850726e-05}, {"id": 674, "seek": 236700, "start": 2367.0, "end": 2372.0, "text": " and so because of the way the signatures and the laws work out when you", "tokens": [50364, 293, 370, 570, 295, 264, 636, 264, 32322, 293, 264, 6064, 589, 484, 562, 291, 50614, 50614, 536, 257, 4471, 291, 458, 309, 311, 257, 1333, 295, 257, 2654, 6916, 309, 311, 257, 3273, 551, 382, 8851, 281, 498, 291, 50864, 50864, 1612, 293, 550, 291, 458, 1392, 309, 311, 884, 512, 9952, 7263, 293, 550, 1455, 1071, 51114, 51114, 5308, 9735, 498, 291, 536, 257, 5021, 295, 550, 82, 294, 15778, 291, 500, 380, 458, 51364, 51364, 630, 321, 652, 472, 5308, 293, 550, 445, 360, 257, 3840, 295, 2654, 34852, 420, 630, 321, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07678903714574949, "compression_ratio": 1.8080357142857142, "no_caption_prob": 9.760932152858004e-05}, {"id": 675, "seek": 236700, "start": 2372.0, "end": 2377.0, "text": " see a map you know it's a sort of a local operation it's a safe thing as opposed to if you", "tokens": [50364, 293, 370, 570, 295, 264, 636, 264, 32322, 293, 264, 6064, 589, 484, 562, 291, 50614, 50614, 536, 257, 4471, 291, 458, 309, 311, 257, 1333, 295, 257, 2654, 6916, 309, 311, 257, 3273, 551, 382, 8851, 281, 498, 291, 50864, 50864, 1612, 293, 550, 291, 458, 1392, 309, 311, 884, 512, 9952, 7263, 293, 550, 1455, 1071, 51114, 51114, 5308, 9735, 498, 291, 536, 257, 5021, 295, 550, 82, 294, 15778, 291, 500, 380, 458, 51364, 51364, 630, 321, 652, 472, 5308, 293, 550, 445, 360, 257, 3840, 295, 2654, 34852, 420, 630, 321, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07678903714574949, "compression_ratio": 1.8080357142857142, "no_caption_prob": 9.760932152858004e-05}, {"id": 676, "seek": 236700, "start": 2377.0, "end": 2382.0, "text": " seen and then you know okay it's doing some logic potentially and then making another", "tokens": [50364, 293, 370, 570, 295, 264, 636, 264, 32322, 293, 264, 6064, 589, 484, 562, 291, 50614, 50614, 536, 257, 4471, 291, 458, 309, 311, 257, 1333, 295, 257, 2654, 6916, 309, 311, 257, 3273, 551, 382, 8851, 281, 498, 291, 50864, 50864, 1612, 293, 550, 291, 458, 1392, 309, 311, 884, 512, 9952, 7263, 293, 550, 1455, 1071, 51114, 51114, 5308, 9735, 498, 291, 536, 257, 5021, 295, 550, 82, 294, 15778, 291, 500, 380, 458, 51364, 51364, 630, 321, 652, 472, 5308, 293, 550, 445, 360, 257, 3840, 295, 2654, 34852, 420, 630, 321, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07678903714574949, "compression_ratio": 1.8080357142857142, "no_caption_prob": 9.760932152858004e-05}, {"id": 677, "seek": 236700, "start": 2382.0, "end": 2387.0, "text": " request whereas if you see a chain of thens in JavaScript you don't know", "tokens": [50364, 293, 370, 570, 295, 264, 636, 264, 32322, 293, 264, 6064, 589, 484, 562, 291, 50614, 50614, 536, 257, 4471, 291, 458, 309, 311, 257, 1333, 295, 257, 2654, 6916, 309, 311, 257, 3273, 551, 382, 8851, 281, 498, 291, 50864, 50864, 1612, 293, 550, 291, 458, 1392, 309, 311, 884, 512, 9952, 7263, 293, 550, 1455, 1071, 51114, 51114, 5308, 9735, 498, 291, 536, 257, 5021, 295, 550, 82, 294, 15778, 291, 500, 380, 458, 51364, 51364, 630, 321, 652, 472, 5308, 293, 550, 445, 360, 257, 3840, 295, 2654, 34852, 420, 630, 321, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07678903714574949, "compression_ratio": 1.8080357142857142, "no_caption_prob": 9.760932152858004e-05}, {"id": 678, "seek": 236700, "start": 2387.0, "end": 2392.0, "text": " did we make one request and then just do a bunch of local transformations or did we", "tokens": [50364, 293, 370, 570, 295, 264, 636, 264, 32322, 293, 264, 6064, 589, 484, 562, 291, 50614, 50614, 536, 257, 4471, 291, 458, 309, 311, 257, 1333, 295, 257, 2654, 6916, 309, 311, 257, 3273, 551, 382, 8851, 281, 498, 291, 50864, 50864, 1612, 293, 550, 291, 458, 1392, 309, 311, 884, 512, 9952, 7263, 293, 550, 1455, 1071, 51114, 51114, 5308, 9735, 498, 291, 536, 257, 5021, 295, 550, 82, 294, 15778, 291, 500, 380, 458, 51364, 51364, 630, 321, 652, 472, 5308, 293, 550, 445, 360, 257, 3840, 295, 2654, 34852, 420, 630, 321, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07678903714574949, "compression_ratio": 1.8080357142857142, "no_caption_prob": 9.760932152858004e-05}, {"id": 679, "seek": 239200, "start": 2392.0, "end": 2397.0, "text": " do 10 requests and now we get back to another of the functor laws", "tokens": [50364, 360, 1266, 12475, 293, 586, 321, 483, 646, 281, 1071, 295, 264, 1019, 1672, 6064, 50614, 50614, 597, 307, 286, 519, 437, 291, 645, 18315, 3071, 300, 291, 645, 1382, 281, 50864, 50864, 360, 365, 264, 441, 43, 44, 26941, 1496, 568, 689, 439, 295, 729, 411, 257, 5021, 295, 11317, 393, 312, 411, 51114, 51114, 24183, 292, 760, 293, 437, 291, 393, 360, 307, 439, 729, 6828, 300, 645, 294, 1184, 295, 264, 11317, 445, 2235, 51364, 51364, 552, 484, 666, 257, 4994, 4926, 2445, 13, 407, 294, 441, 43, 44, 498, 286, 536, 5633, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12507989883422851, "compression_ratio": 1.651063829787234, "no_caption_prob": 3.4266999136889353e-05}, {"id": 680, "seek": 239200, "start": 2397.0, "end": 2402.0, "text": " which is I think what you were mentioning earlier that you were trying to", "tokens": [50364, 360, 1266, 12475, 293, 586, 321, 483, 646, 281, 1071, 295, 264, 1019, 1672, 6064, 50614, 50614, 597, 307, 286, 519, 437, 291, 645, 18315, 3071, 300, 291, 645, 1382, 281, 50864, 50864, 360, 365, 264, 441, 43, 44, 26941, 1496, 568, 689, 439, 295, 729, 411, 257, 5021, 295, 11317, 393, 312, 411, 51114, 51114, 24183, 292, 760, 293, 437, 291, 393, 360, 307, 439, 729, 6828, 300, 645, 294, 1184, 295, 264, 11317, 445, 2235, 51364, 51364, 552, 484, 666, 257, 4994, 4926, 2445, 13, 407, 294, 441, 43, 44, 498, 286, 536, 5633, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12507989883422851, "compression_ratio": 1.651063829787234, "no_caption_prob": 3.4266999136889353e-05}, {"id": 681, "seek": 239200, "start": 2402.0, "end": 2407.0, "text": " do with the LLM optimized level 2 where all of those like a chain of maps can be like", "tokens": [50364, 360, 1266, 12475, 293, 586, 321, 483, 646, 281, 1071, 295, 264, 1019, 1672, 6064, 50614, 50614, 597, 307, 286, 519, 437, 291, 645, 18315, 3071, 300, 291, 645, 1382, 281, 50864, 50864, 360, 365, 264, 441, 43, 44, 26941, 1496, 568, 689, 439, 295, 729, 411, 257, 5021, 295, 11317, 393, 312, 411, 51114, 51114, 24183, 292, 760, 293, 437, 291, 393, 360, 307, 439, 729, 6828, 300, 645, 294, 1184, 295, 264, 11317, 445, 2235, 51364, 51364, 552, 484, 666, 257, 4994, 4926, 2445, 13, 407, 294, 441, 43, 44, 498, 286, 536, 5633, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12507989883422851, "compression_ratio": 1.651063829787234, "no_caption_prob": 3.4266999136889353e-05}, {"id": 682, "seek": 239200, "start": 2407.0, "end": 2412.0, "text": " flattened down and what you can do is all those functions that were in each of the maps just pull", "tokens": [50364, 360, 1266, 12475, 293, 586, 321, 483, 646, 281, 1071, 295, 264, 1019, 1672, 6064, 50614, 50614, 597, 307, 286, 519, 437, 291, 645, 18315, 3071, 300, 291, 645, 1382, 281, 50864, 50864, 360, 365, 264, 441, 43, 44, 26941, 1496, 568, 689, 439, 295, 729, 411, 257, 5021, 295, 11317, 393, 312, 411, 51114, 51114, 24183, 292, 760, 293, 437, 291, 393, 360, 307, 439, 729, 6828, 300, 645, 294, 1184, 295, 264, 11317, 445, 2235, 51364, 51364, 552, 484, 666, 257, 4994, 4926, 2445, 13, 407, 294, 441, 43, 44, 498, 286, 536, 5633, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12507989883422851, "compression_ratio": 1.651063829787234, "no_caption_prob": 3.4266999136889353e-05}, {"id": 683, "seek": 239200, "start": 2412.0, "end": 2417.0, "text": " them out into a separate named function. So in LLM if I see task", "tokens": [50364, 360, 1266, 12475, 293, 586, 321, 483, 646, 281, 1071, 295, 264, 1019, 1672, 6064, 50614, 50614, 597, 307, 286, 519, 437, 291, 645, 18315, 3071, 300, 291, 645, 1382, 281, 50864, 50864, 360, 365, 264, 441, 43, 44, 26941, 1496, 568, 689, 439, 295, 729, 411, 257, 5021, 295, 11317, 393, 312, 411, 51114, 51114, 24183, 292, 760, 293, 437, 291, 393, 360, 307, 439, 729, 6828, 300, 645, 294, 1184, 295, 264, 11317, 445, 2235, 51364, 51364, 552, 484, 666, 257, 4994, 4926, 2445, 13, 407, 294, 441, 43, 44, 498, 286, 536, 5633, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12507989883422851, "compression_ratio": 1.651063829787234, "no_caption_prob": 3.4266999136889353e-05}, {"id": 684, "seek": 241700, "start": 2417.0, "end": 2422.0, "text": " and then just task map task map task map like five of these I can just look at all those five functions", "tokens": [50364, 293, 550, 445, 5633, 4471, 5633, 4471, 5633, 4471, 411, 1732, 295, 613, 286, 393, 445, 574, 412, 439, 729, 1732, 6828, 50614, 50614, 1884, 452, 1065, 4926, 2445, 2235, 439, 295, 300, 484, 293, 584, 456, 307, 472, 50864, 50864, 9887, 300, 2170, 6456, 412, 264, 917, 295, 452, 5308, 13, 682, 15778, 286, 51114, 51114, 393, 380, 458, 281, 360, 300, 570, 498, 512, 295, 552, 366, 1455, 2857, 12475, 300, 311, 406, 445, 257, 6075, 51364, 51364, 9887, 13, 407, 550, 286, 1116, 362, 281, 584, 1392, 731, 613, 732, 393, 312, 7373, 484, 457, 550, 286, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.078674499805157, "compression_ratio": 1.7818930041152263, "no_caption_prob": 1.9222585251554847e-05}, {"id": 685, "seek": 241700, "start": 2422.0, "end": 2427.0, "text": " create my own named function pull all of that out and say there is one", "tokens": [50364, 293, 550, 445, 5633, 4471, 5633, 4471, 5633, 4471, 411, 1732, 295, 613, 286, 393, 445, 574, 412, 439, 729, 1732, 6828, 50614, 50614, 1884, 452, 1065, 4926, 2445, 2235, 439, 295, 300, 484, 293, 584, 456, 307, 472, 50864, 50864, 9887, 300, 2170, 6456, 412, 264, 917, 295, 452, 5308, 13, 682, 15778, 286, 51114, 51114, 393, 380, 458, 281, 360, 300, 570, 498, 512, 295, 552, 366, 1455, 2857, 12475, 300, 311, 406, 445, 257, 6075, 51364, 51364, 9887, 13, 407, 550, 286, 1116, 362, 281, 584, 1392, 731, 613, 732, 393, 312, 7373, 484, 457, 550, 286, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.078674499805157, "compression_ratio": 1.7818930041152263, "no_caption_prob": 1.9222585251554847e-05}, {"id": 686, "seek": 241700, "start": 2427.0, "end": 2432.0, "text": " transformation that gets applied at the end of my request. In JavaScript I", "tokens": [50364, 293, 550, 445, 5633, 4471, 5633, 4471, 5633, 4471, 411, 1732, 295, 613, 286, 393, 445, 574, 412, 439, 729, 1732, 6828, 50614, 50614, 1884, 452, 1065, 4926, 2445, 2235, 439, 295, 300, 484, 293, 584, 456, 307, 472, 50864, 50864, 9887, 300, 2170, 6456, 412, 264, 917, 295, 452, 5308, 13, 682, 15778, 286, 51114, 51114, 393, 380, 458, 281, 360, 300, 570, 498, 512, 295, 552, 366, 1455, 2857, 12475, 300, 311, 406, 445, 257, 6075, 51364, 51364, 9887, 13, 407, 550, 286, 1116, 362, 281, 584, 1392, 731, 613, 732, 393, 312, 7373, 484, 457, 550, 286, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.078674499805157, "compression_ratio": 1.7818930041152263, "no_caption_prob": 1.9222585251554847e-05}, {"id": 687, "seek": 241700, "start": 2432.0, "end": 2437.0, "text": " can't know to do that because if some of them are making extra requests that's not just a pure", "tokens": [50364, 293, 550, 445, 5633, 4471, 5633, 4471, 5633, 4471, 411, 1732, 295, 613, 286, 393, 445, 574, 412, 439, 729, 1732, 6828, 50614, 50614, 1884, 452, 1065, 4926, 2445, 2235, 439, 295, 300, 484, 293, 584, 456, 307, 472, 50864, 50864, 9887, 300, 2170, 6456, 412, 264, 917, 295, 452, 5308, 13, 682, 15778, 286, 51114, 51114, 393, 380, 458, 281, 360, 300, 570, 498, 512, 295, 552, 366, 1455, 2857, 12475, 300, 311, 406, 445, 257, 6075, 51364, 51364, 9887, 13, 407, 550, 286, 1116, 362, 281, 584, 1392, 731, 613, 732, 393, 312, 7373, 484, 457, 550, 286, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.078674499805157, "compression_ratio": 1.7818930041152263, "no_caption_prob": 1.9222585251554847e-05}, {"id": 688, "seek": 241700, "start": 2437.0, "end": 2442.0, "text": " transformation. So then I'd have to say okay well these two can be pulled out but then I", "tokens": [50364, 293, 550, 445, 5633, 4471, 5633, 4471, 5633, 4471, 411, 1732, 295, 613, 286, 393, 445, 574, 412, 439, 729, 1732, 6828, 50614, 50614, 1884, 452, 1065, 4926, 2445, 2235, 439, 295, 300, 484, 293, 584, 456, 307, 472, 50864, 50864, 9887, 300, 2170, 6456, 412, 264, 917, 295, 452, 5308, 13, 682, 15778, 286, 51114, 51114, 393, 380, 458, 281, 360, 300, 570, 498, 512, 295, 552, 366, 1455, 2857, 12475, 300, 311, 406, 445, 257, 6075, 51364, 51364, 9887, 13, 407, 550, 286, 1116, 362, 281, 584, 1392, 731, 613, 732, 393, 312, 7373, 484, 457, 550, 286, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.078674499805157, "compression_ratio": 1.7818930041152263, "no_caption_prob": 1.9222585251554847e-05}, {"id": 689, "seek": 244200, "start": 2442.0, "end": 2447.0, "text": " need another I actually need a then to make that second request and then some more", "tokens": [50364, 643, 1071, 286, 767, 643, 257, 550, 281, 652, 300, 1150, 5308, 293, 550, 512, 544, 50614, 50614, 34852, 13, 407, 291, 362, 281, 534, 1520, 1184, 3174, 412, 257, 565, 13, 50864, 50864, 407, 291, 727, 365, 257, 6228, 498, 309, 994, 380, 15158, 382, 364, 293, 550, 51114, 51114, 498, 309, 787, 48249, 382, 257, 4471, 550, 291, 727, 7263, 558, 13, 1079, 498, 291, 1866, 51364, 51364, 498, 309, 787, 48249, 382, 257, 4471, 293, 291, 1866, 257, 5021, 295, 550, 82, 291, 727, 5407, 309, 760, 281, 257, 2167, 550, 293, 550, 445, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12800078816933208, "compression_ratio": 1.8651162790697675, "no_caption_prob": 1.9222850824007764e-05}, {"id": 690, "seek": 244200, "start": 2447.0, "end": 2452.0, "text": " transformations. So you have to really check each item at a time.", "tokens": [50364, 643, 1071, 286, 767, 643, 257, 550, 281, 652, 300, 1150, 5308, 293, 550, 512, 544, 50614, 50614, 34852, 13, 407, 291, 362, 281, 534, 1520, 1184, 3174, 412, 257, 565, 13, 50864, 50864, 407, 291, 727, 365, 257, 6228, 498, 309, 994, 380, 15158, 382, 364, 293, 550, 51114, 51114, 498, 309, 787, 48249, 382, 257, 4471, 550, 291, 727, 7263, 558, 13, 1079, 498, 291, 1866, 51364, 51364, 498, 309, 787, 48249, 382, 257, 4471, 293, 291, 1866, 257, 5021, 295, 550, 82, 291, 727, 5407, 309, 760, 281, 257, 2167, 550, 293, 550, 445, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12800078816933208, "compression_ratio": 1.8651162790697675, "no_caption_prob": 1.9222850824007764e-05}, {"id": 691, "seek": 244200, "start": 2452.0, "end": 2457.0, "text": " So you could with a promise if it didn't behave as an and then", "tokens": [50364, 643, 1071, 286, 767, 643, 257, 550, 281, 652, 300, 1150, 5308, 293, 550, 512, 544, 50614, 50614, 34852, 13, 407, 291, 362, 281, 534, 1520, 1184, 3174, 412, 257, 565, 13, 50864, 50864, 407, 291, 727, 365, 257, 6228, 498, 309, 994, 380, 15158, 382, 364, 293, 550, 51114, 51114, 498, 309, 787, 48249, 382, 257, 4471, 550, 291, 727, 7263, 558, 13, 1079, 498, 291, 1866, 51364, 51364, 498, 309, 787, 48249, 382, 257, 4471, 293, 291, 1866, 257, 5021, 295, 550, 82, 291, 727, 5407, 309, 760, 281, 257, 2167, 550, 293, 550, 445, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12800078816933208, "compression_ratio": 1.8651162790697675, "no_caption_prob": 1.9222850824007764e-05}, {"id": 692, "seek": 244200, "start": 2457.0, "end": 2462.0, "text": " if it only behaved as a map then you could potentially right. Yes if you saw", "tokens": [50364, 643, 1071, 286, 767, 643, 257, 550, 281, 652, 300, 1150, 5308, 293, 550, 512, 544, 50614, 50614, 34852, 13, 407, 291, 362, 281, 534, 1520, 1184, 3174, 412, 257, 565, 13, 50864, 50864, 407, 291, 727, 365, 257, 6228, 498, 309, 994, 380, 15158, 382, 364, 293, 550, 51114, 51114, 498, 309, 787, 48249, 382, 257, 4471, 550, 291, 727, 7263, 558, 13, 1079, 498, 291, 1866, 51364, 51364, 498, 309, 787, 48249, 382, 257, 4471, 293, 291, 1866, 257, 5021, 295, 550, 82, 291, 727, 5407, 309, 760, 281, 257, 2167, 550, 293, 550, 445, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12800078816933208, "compression_ratio": 1.8651162790697675, "no_caption_prob": 1.9222850824007764e-05}, {"id": 693, "seek": 244200, "start": 2462.0, "end": 2467.0, "text": " if it only behaved as a map and you saw a chain of thens you could reduce it down to a single then and then just", "tokens": [50364, 643, 1071, 286, 767, 643, 257, 550, 281, 652, 300, 1150, 5308, 293, 550, 512, 544, 50614, 50614, 34852, 13, 407, 291, 362, 281, 534, 1520, 1184, 3174, 412, 257, 565, 13, 50864, 50864, 407, 291, 727, 365, 257, 6228, 498, 309, 994, 380, 15158, 382, 364, 293, 550, 51114, 51114, 498, 309, 787, 48249, 382, 257, 4471, 550, 291, 727, 7263, 558, 13, 1079, 498, 291, 1866, 51364, 51364, 498, 309, 787, 48249, 382, 257, 4471, 293, 291, 1866, 257, 5021, 295, 550, 82, 291, 727, 5407, 309, 760, 281, 257, 2167, 550, 293, 550, 445, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12800078816933208, "compression_ratio": 1.8651162790697675, "no_caption_prob": 1.9222850824007764e-05}, {"id": 694, "seek": 246700, "start": 2467.0, "end": 2472.0, "text": " pull out all of those extra things into one function. But it's not safe to do that", "tokens": [50364, 2235, 484, 439, 295, 729, 2857, 721, 666, 472, 2445, 13, 583, 309, 311, 406, 3273, 281, 360, 300, 50614, 50614, 498, 291, 366, 7263, 1455, 544, 12475, 13, 50864, 50864, 400, 286, 2041, 286, 914, 8195, 291, 576, 2524, 337, 264, 22811, 2290, 291, 727, 294, 257, 688, 295, 51114, 51114, 3331, 293, 853, 281, 764, 4471, 689, 1944, 733, 295, 411, 286, 914, 291, 434, 294, 293, 286, 51364, 51364, 2049, 808, 646, 281, 9809, 21589, 441, 11317, 751, 689, 264, 472, 295, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1112247043185764, "compression_ratio": 1.592920353982301, "no_caption_prob": 6.401597056537867e-05}, {"id": 695, "seek": 246700, "start": 2472.0, "end": 2477.0, "text": " if you are potentially making more requests.", "tokens": [50364, 2235, 484, 439, 295, 729, 2857, 721, 666, 472, 2445, 13, 583, 309, 311, 406, 3273, 281, 360, 300, 50614, 50614, 498, 291, 366, 7263, 1455, 544, 12475, 13, 50864, 50864, 400, 286, 2041, 286, 914, 8195, 291, 576, 2524, 337, 264, 22811, 2290, 291, 727, 294, 257, 688, 295, 51114, 51114, 3331, 293, 853, 281, 764, 4471, 689, 1944, 733, 295, 411, 286, 914, 291, 434, 294, 293, 286, 51364, 51364, 2049, 808, 646, 281, 9809, 21589, 441, 11317, 751, 689, 264, 472, 295, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1112247043185764, "compression_ratio": 1.592920353982301, "no_caption_prob": 6.401597056537867e-05}, {"id": 696, "seek": 246700, "start": 2477.0, "end": 2482.0, "text": " And I guess I mean naturally you would reach for the simplest tool you could in a lot of", "tokens": [50364, 2235, 484, 439, 295, 729, 2857, 721, 666, 472, 2445, 13, 583, 309, 311, 406, 3273, 281, 360, 300, 50614, 50614, 498, 291, 366, 7263, 1455, 544, 12475, 13, 50864, 50864, 400, 286, 2041, 286, 914, 8195, 291, 576, 2524, 337, 264, 22811, 2290, 291, 727, 294, 257, 688, 295, 51114, 51114, 3331, 293, 853, 281, 764, 4471, 689, 1944, 733, 295, 411, 286, 914, 291, 434, 294, 293, 286, 51364, 51364, 2049, 808, 646, 281, 9809, 21589, 441, 11317, 751, 689, 264, 472, 295, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1112247043185764, "compression_ratio": 1.592920353982301, "no_caption_prob": 6.401597056537867e-05}, {"id": 697, "seek": 246700, "start": 2482.0, "end": 2487.0, "text": " cases and try to use map where possible kind of like I mean you're in and I", "tokens": [50364, 2235, 484, 439, 295, 729, 2857, 721, 666, 472, 2445, 13, 583, 309, 311, 406, 3273, 281, 360, 300, 50614, 50614, 498, 291, 366, 7263, 1455, 544, 12475, 13, 50864, 50864, 400, 286, 2041, 286, 914, 8195, 291, 576, 2524, 337, 264, 22811, 2290, 291, 727, 294, 257, 688, 295, 51114, 51114, 3331, 293, 853, 281, 764, 4471, 689, 1944, 733, 295, 411, 286, 914, 291, 434, 294, 293, 286, 51364, 51364, 2049, 808, 646, 281, 9809, 21589, 441, 11317, 751, 689, 264, 472, 295, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1112247043185764, "compression_ratio": 1.592920353982301, "no_caption_prob": 6.401597056537867e-05}, {"id": 698, "seek": 246700, "start": 2487.0, "end": 2492.0, "text": " often come back to Richard scaling L maps talk where the one of the", "tokens": [50364, 2235, 484, 439, 295, 729, 2857, 721, 666, 472, 2445, 13, 583, 309, 311, 406, 3273, 281, 360, 300, 50614, 50614, 498, 291, 366, 7263, 1455, 544, 12475, 13, 50864, 50864, 400, 286, 2041, 286, 914, 8195, 291, 576, 2524, 337, 264, 22811, 2290, 291, 727, 294, 257, 688, 295, 51114, 51114, 3331, 293, 853, 281, 764, 4471, 689, 1944, 733, 295, 411, 286, 914, 291, 434, 294, 293, 286, 51364, 51364, 2049, 808, 646, 281, 9809, 21589, 441, 11317, 751, 689, 264, 472, 295, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1112247043185764, "compression_ratio": 1.592920353982301, "no_caption_prob": 6.401597056537867e-05}, {"id": 699, "seek": 249200, "start": 2492.0, "end": 2497.0, "text": " main takeaways is if a function doesn't need more data give it less", "tokens": [50364, 2135, 45584, 307, 498, 257, 2445, 1177, 380, 643, 544, 1412, 976, 309, 1570, 50614, 50614, 1412, 13, 759, 257, 2445, 1177, 380, 643, 281, 1320, 484, 544, 1412, 337, 264, 50864, 50864, 5141, 3089, 550, 500, 380, 2736, 382, 709, 1412, 445, 1817, 7146, 721, 544, 370, 51114, 51114, 300, 291, 393, 544, 3612, 1778, 466, 437, 775, 341, 3089, 5672, 322, 293, 437, 393, 341, 3089, 360, 13, 51364, 51364, 400, 300, 912, 8665, 286, 519, 13165, 490, 437, 291, 434, 1566, 510, 498, 291, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06608671146434741, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.0001852009299909696}, {"id": 700, "seek": 249200, "start": 2497.0, "end": 2502.0, "text": " data. If a function doesn't need to pass out more data for the", "tokens": [50364, 2135, 45584, 307, 498, 257, 2445, 1177, 380, 643, 544, 1412, 976, 309, 1570, 50614, 50614, 1412, 13, 759, 257, 2445, 1177, 380, 643, 281, 1320, 484, 544, 1412, 337, 264, 50864, 50864, 5141, 3089, 550, 500, 380, 2736, 382, 709, 1412, 445, 1817, 7146, 721, 544, 370, 51114, 51114, 300, 291, 393, 544, 3612, 1778, 466, 437, 775, 341, 3089, 5672, 322, 293, 437, 393, 341, 3089, 360, 13, 51364, 51364, 400, 300, 912, 8665, 286, 519, 13165, 490, 437, 291, 434, 1566, 510, 498, 291, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06608671146434741, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.0001852009299909696}, {"id": 701, "seek": 249200, "start": 2502.0, "end": 2507.0, "text": " calling code then don't return as much data just constrain things more so", "tokens": [50364, 2135, 45584, 307, 498, 257, 2445, 1177, 380, 643, 544, 1412, 976, 309, 1570, 50614, 50614, 1412, 13, 759, 257, 2445, 1177, 380, 643, 281, 1320, 484, 544, 1412, 337, 264, 50864, 50864, 5141, 3089, 550, 500, 380, 2736, 382, 709, 1412, 445, 1817, 7146, 721, 544, 370, 51114, 51114, 300, 291, 393, 544, 3612, 1778, 466, 437, 775, 341, 3089, 5672, 322, 293, 437, 393, 341, 3089, 360, 13, 51364, 51364, 400, 300, 912, 8665, 286, 519, 13165, 490, 437, 291, 434, 1566, 510, 498, 291, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06608671146434741, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.0001852009299909696}, {"id": 702, "seek": 249200, "start": 2507.0, "end": 2512.0, "text": " that you can more easily reason about what does this code depend on and what can this code do.", "tokens": [50364, 2135, 45584, 307, 498, 257, 2445, 1177, 380, 643, 544, 1412, 976, 309, 1570, 50614, 50614, 1412, 13, 759, 257, 2445, 1177, 380, 643, 281, 1320, 484, 544, 1412, 337, 264, 50864, 50864, 5141, 3089, 550, 500, 380, 2736, 382, 709, 1412, 445, 1817, 7146, 721, 544, 370, 51114, 51114, 300, 291, 393, 544, 3612, 1778, 466, 437, 775, 341, 3089, 5672, 322, 293, 437, 393, 341, 3089, 360, 13, 51364, 51364, 400, 300, 912, 8665, 286, 519, 13165, 490, 437, 291, 434, 1566, 510, 498, 291, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06608671146434741, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.0001852009299909696}, {"id": 703, "seek": 249200, "start": 2512.0, "end": 2517.0, "text": " And that same principle I think applies from what you're saying here if you", "tokens": [50364, 2135, 45584, 307, 498, 257, 2445, 1177, 380, 643, 544, 1412, 976, 309, 1570, 50614, 50614, 1412, 13, 759, 257, 2445, 1177, 380, 643, 281, 1320, 484, 544, 1412, 337, 264, 50864, 50864, 5141, 3089, 550, 500, 380, 2736, 382, 709, 1412, 445, 1817, 7146, 721, 544, 370, 51114, 51114, 300, 291, 393, 544, 3612, 1778, 466, 437, 775, 341, 3089, 5672, 322, 293, 437, 393, 341, 3089, 360, 13, 51364, 51364, 400, 300, 912, 8665, 286, 519, 13165, 490, 437, 291, 434, 1566, 510, 498, 291, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06608671146434741, "compression_ratio": 1.7688679245283019, "no_caption_prob": 0.0001852009299909696}, {"id": 704, "seek": 251700, "start": 2517.0, "end": 2522.0, "text": " don't need and then if you can do it with a map that's less cognitive complexity for you to hold in your", "tokens": [50364, 500, 380, 643, 293, 550, 498, 291, 393, 360, 309, 365, 257, 4471, 300, 311, 1570, 15605, 14024, 337, 291, 281, 1797, 294, 428, 50614, 50614, 1378, 562, 291, 434, 1237, 412, 264, 3089, 420, 562, 291, 434, 45592, 293, 1382, 281, 915, 689, 364, 2734, 307, 1348, 490, 13, 50864, 50864, 1079, 13, 400, 294, 1186, 286, 600, 2049, 1612, 561, 764, 293, 550, 562, 436, 787, 643, 257, 4471, 51114, 51164, 293, 264, 7230, 551, 300, 291, 603, 536, 552, 360, 307, 293, 550, 512, 6075, 2445, 51414, 51414, 550, 411, 5127, 364, 13691, 46906, 13, 1779, 13, 286, 528, 281, 584, 307, 456, 257, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09426081717551292, "compression_ratio": 1.7131782945736433, "no_caption_prob": 4.611073018168099e-05}, {"id": 705, "seek": 251700, "start": 2522.0, "end": 2527.0, "text": " head when you're looking at the code or when you're debugging and trying to find where an issue is coming from.", "tokens": [50364, 500, 380, 643, 293, 550, 498, 291, 393, 360, 309, 365, 257, 4471, 300, 311, 1570, 15605, 14024, 337, 291, 281, 1797, 294, 428, 50614, 50614, 1378, 562, 291, 434, 1237, 412, 264, 3089, 420, 562, 291, 434, 45592, 293, 1382, 281, 915, 689, 364, 2734, 307, 1348, 490, 13, 50864, 50864, 1079, 13, 400, 294, 1186, 286, 600, 2049, 1612, 561, 764, 293, 550, 562, 436, 787, 643, 257, 4471, 51114, 51164, 293, 264, 7230, 551, 300, 291, 603, 536, 552, 360, 307, 293, 550, 512, 6075, 2445, 51414, 51414, 550, 411, 5127, 364, 13691, 46906, 13, 1779, 13, 286, 528, 281, 584, 307, 456, 257, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09426081717551292, "compression_ratio": 1.7131782945736433, "no_caption_prob": 4.611073018168099e-05}, {"id": 706, "seek": 251700, "start": 2527.0, "end": 2532.0, "text": " Yes. And in fact I've often seen people use and then when they only need a map", "tokens": [50364, 500, 380, 643, 293, 550, 498, 291, 393, 360, 309, 365, 257, 4471, 300, 311, 1570, 15605, 14024, 337, 291, 281, 1797, 294, 428, 50614, 50614, 1378, 562, 291, 434, 1237, 412, 264, 3089, 420, 562, 291, 434, 45592, 293, 1382, 281, 915, 689, 364, 2734, 307, 1348, 490, 13, 50864, 50864, 1079, 13, 400, 294, 1186, 286, 600, 2049, 1612, 561, 764, 293, 550, 562, 436, 787, 643, 257, 4471, 51114, 51164, 293, 264, 7230, 551, 300, 291, 603, 536, 552, 360, 307, 293, 550, 512, 6075, 2445, 51414, 51414, 550, 411, 5127, 364, 13691, 46906, 13, 1779, 13, 286, 528, 281, 584, 307, 456, 257, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09426081717551292, "compression_ratio": 1.7131782945736433, "no_caption_prob": 4.611073018168099e-05}, {"id": 707, "seek": 251700, "start": 2533.0, "end": 2538.0, "text": " and the classic thing that you'll see them do is and then some pure function", "tokens": [50364, 500, 380, 643, 293, 550, 498, 291, 393, 360, 309, 365, 257, 4471, 300, 311, 1570, 15605, 14024, 337, 291, 281, 1797, 294, 428, 50614, 50614, 1378, 562, 291, 434, 1237, 412, 264, 3089, 420, 562, 291, 434, 45592, 293, 1382, 281, 915, 689, 364, 2734, 307, 1348, 490, 13, 50864, 50864, 1079, 13, 400, 294, 1186, 286, 600, 2049, 1612, 561, 764, 293, 550, 562, 436, 787, 643, 257, 4471, 51114, 51164, 293, 264, 7230, 551, 300, 291, 603, 536, 552, 360, 307, 293, 550, 512, 6075, 2445, 51414, 51414, 550, 411, 5127, 364, 13691, 46906, 13, 1779, 13, 286, 528, 281, 584, 307, 456, 257, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09426081717551292, "compression_ratio": 1.7131782945736433, "no_caption_prob": 4.611073018168099e-05}, {"id": 708, "seek": 251700, "start": 2538.0, "end": 2543.0, "text": " then like adding an explicit wrapper. Right. I want to say is there a", "tokens": [50364, 500, 380, 643, 293, 550, 498, 291, 393, 360, 309, 365, 257, 4471, 300, 311, 1570, 15605, 14024, 337, 291, 281, 1797, 294, 428, 50614, 50614, 1378, 562, 291, 434, 1237, 412, 264, 3089, 420, 562, 291, 434, 45592, 293, 1382, 281, 915, 689, 364, 2734, 307, 1348, 490, 13, 50864, 50864, 1079, 13, 400, 294, 1186, 286, 600, 2049, 1612, 561, 764, 293, 550, 562, 436, 787, 643, 257, 4471, 51114, 51164, 293, 264, 7230, 551, 300, 291, 603, 536, 552, 360, 307, 293, 550, 512, 6075, 2445, 51414, 51414, 550, 411, 5127, 364, 13691, 46906, 13, 1779, 13, 286, 528, 281, 584, 307, 456, 257, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09426081717551292, "compression_ratio": 1.7131782945736433, "no_caption_prob": 4.611073018168099e-05}, {"id": 709, "seek": 254300, "start": 2543.0, "end": 2548.0, "text": " Elm review rule for that? No but it could definitely could.", "tokens": [50364, 2699, 76, 3131, 4978, 337, 300, 30, 883, 457, 309, 727, 2138, 727, 13, 50614, 50614, 865, 13, 407, 411, 257, 7230, 1389, 576, 312, 746, 411, 1310, 293, 550, 512, 6075, 2445, 50864, 50864, 293, 550, 445, 7019, 264, 1874, 294, 445, 13, 583, 300, 311, 1936, 445, 1566, 7019, 309, 294, 445, 293, 550, 51114, 51114, 14853, 4007, 309, 570, 293, 550, 307, 291, 393, 519, 295, 309, 382, 257, 4962, 4471, 51364, 51364, 293, 370, 309, 311, 445, 516, 281, 3079, 4471, 457, 291, 7019, 309, 294, 445, 309, 311, 516, 281, 24183, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1292518711090088, "compression_ratio": 1.7522522522522523, "no_caption_prob": 2.0145285816397518e-05}, {"id": 710, "seek": 254300, "start": 2548.0, "end": 2553.0, "text": " Yeah. So like a classic case would be something like maybe and then some pure function", "tokens": [50364, 2699, 76, 3131, 4978, 337, 300, 30, 883, 457, 309, 727, 2138, 727, 13, 50614, 50614, 865, 13, 407, 411, 257, 7230, 1389, 576, 312, 746, 411, 1310, 293, 550, 512, 6075, 2445, 50864, 50864, 293, 550, 445, 7019, 264, 1874, 294, 445, 13, 583, 300, 311, 1936, 445, 1566, 7019, 309, 294, 445, 293, 550, 51114, 51114, 14853, 4007, 309, 570, 293, 550, 307, 291, 393, 519, 295, 309, 382, 257, 4962, 4471, 51364, 51364, 293, 370, 309, 311, 445, 516, 281, 3079, 4471, 457, 291, 7019, 309, 294, 445, 309, 311, 516, 281, 24183, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1292518711090088, "compression_ratio": 1.7522522522522523, "no_caption_prob": 2.0145285816397518e-05}, {"id": 711, "seek": 254300, "start": 2553.0, "end": 2558.0, "text": " and then just wrap the result in just. But that's basically just saying wrap it in just and then", "tokens": [50364, 2699, 76, 3131, 4978, 337, 300, 30, 883, 457, 309, 727, 2138, 727, 13, 50614, 50614, 865, 13, 407, 411, 257, 7230, 1389, 576, 312, 746, 411, 1310, 293, 550, 512, 6075, 2445, 50864, 50864, 293, 550, 445, 7019, 264, 1874, 294, 445, 13, 583, 300, 311, 1936, 445, 1566, 7019, 309, 294, 445, 293, 550, 51114, 51114, 14853, 4007, 309, 570, 293, 550, 307, 291, 393, 519, 295, 309, 382, 257, 4962, 4471, 51364, 51364, 293, 370, 309, 311, 445, 516, 281, 3079, 4471, 457, 291, 7019, 309, 294, 445, 309, 311, 516, 281, 24183, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1292518711090088, "compression_ratio": 1.7522522522522523, "no_caption_prob": 2.0145285816397518e-05}, {"id": 712, "seek": 254300, "start": 2558.0, "end": 2563.0, "text": " unwrap it because and then is you can think of it as a flat map", "tokens": [50364, 2699, 76, 3131, 4978, 337, 300, 30, 883, 457, 309, 727, 2138, 727, 13, 50614, 50614, 865, 13, 407, 411, 257, 7230, 1389, 576, 312, 746, 411, 1310, 293, 550, 512, 6075, 2445, 50864, 50864, 293, 550, 445, 7019, 264, 1874, 294, 445, 13, 583, 300, 311, 1936, 445, 1566, 7019, 309, 294, 445, 293, 550, 51114, 51114, 14853, 4007, 309, 570, 293, 550, 307, 291, 393, 519, 295, 309, 382, 257, 4962, 4471, 51364, 51364, 293, 370, 309, 311, 445, 516, 281, 3079, 4471, 457, 291, 7019, 309, 294, 445, 309, 311, 516, 281, 24183, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1292518711090088, "compression_ratio": 1.7522522522522523, "no_caption_prob": 2.0145285816397518e-05}, {"id": 713, "seek": 254300, "start": 2563.0, "end": 2568.0, "text": " and so it's just going to apply map but you wrap it in just it's going to flatten", "tokens": [50364, 2699, 76, 3131, 4978, 337, 300, 30, 883, 457, 309, 727, 2138, 727, 13, 50614, 50614, 865, 13, 407, 411, 257, 7230, 1389, 576, 312, 746, 411, 1310, 293, 550, 512, 6075, 2445, 50864, 50864, 293, 550, 445, 7019, 264, 1874, 294, 445, 13, 583, 300, 311, 1936, 445, 1566, 7019, 309, 294, 445, 293, 550, 51114, 51114, 14853, 4007, 309, 570, 293, 550, 307, 291, 393, 519, 295, 309, 382, 257, 4962, 4471, 51364, 51364, 293, 370, 309, 311, 445, 516, 281, 3079, 4471, 457, 291, 7019, 309, 294, 445, 309, 311, 516, 281, 24183, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1292518711090088, "compression_ratio": 1.7522522522522523, "no_caption_prob": 2.0145285816397518e-05}, {"id": 714, "seek": 256800, "start": 2568.0, "end": 2573.0, "text": " it back down and you've done extra work for nothing. I might have something", "tokens": [50364, 309, 646, 760, 293, 291, 600, 1096, 2857, 589, 337, 1825, 13, 286, 1062, 362, 746, 50614, 50614, 2531, 281, 300, 294, 2699, 76, 3131, 20460, 13, 2264, 13, 400, 498, 406, 1580, 727, 1884, 364, 2734, 286, 478, 988, 13, 50864, 50864, 1610, 257, 2235, 5308, 13, 865, 13, 1610, 2235, 12475, 1339, 4764, 281, 341, 3500, 51164, 51214, 570, 527, 4034, 420, 23274, 366, 588, 1702, 13, 51464, 51514, 583, 286, 2041, 281, 808, 646, 281, 264, 1333, 295, 3380, 1168, 300, 321, 434, 3365, 558, 820, 2699, 76, 1905, 82, 1127, 466, 7719, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18276519775390626, "compression_ratio": 1.5907335907335907, "no_caption_prob": 0.00012729887384921312}, {"id": 715, "seek": 256800, "start": 2573.0, "end": 2578.0, "text": " similar to that in Elm review simplify. OK. And if not someone could create an issue I'm sure.", "tokens": [50364, 309, 646, 760, 293, 291, 600, 1096, 2857, 589, 337, 1825, 13, 286, 1062, 362, 746, 50614, 50614, 2531, 281, 300, 294, 2699, 76, 3131, 20460, 13, 2264, 13, 400, 498, 406, 1580, 727, 1884, 364, 2734, 286, 478, 988, 13, 50864, 50864, 1610, 257, 2235, 5308, 13, 865, 13, 1610, 2235, 12475, 1339, 4764, 281, 341, 3500, 51164, 51214, 570, 527, 4034, 420, 23274, 366, 588, 1702, 13, 51464, 51514, 583, 286, 2041, 281, 808, 646, 281, 264, 1333, 295, 3380, 1168, 300, 321, 434, 3365, 558, 820, 2699, 76, 1905, 82, 1127, 466, 7719, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18276519775390626, "compression_ratio": 1.5907335907335907, "no_caption_prob": 0.00012729887384921312}, {"id": 716, "seek": 256800, "start": 2578.0, "end": 2584.0, "text": " Or a pull request. Yeah. Or pull requests while listening to this episode", "tokens": [50364, 309, 646, 760, 293, 291, 600, 1096, 2857, 589, 337, 1825, 13, 286, 1062, 362, 746, 50614, 50614, 2531, 281, 300, 294, 2699, 76, 3131, 20460, 13, 2264, 13, 400, 498, 406, 1580, 727, 1884, 364, 2734, 286, 478, 988, 13, 50864, 50864, 1610, 257, 2235, 5308, 13, 865, 13, 1610, 2235, 12475, 1339, 4764, 281, 341, 3500, 51164, 51214, 570, 527, 4034, 420, 23274, 366, 588, 1702, 13, 51464, 51514, 583, 286, 2041, 281, 808, 646, 281, 264, 1333, 295, 3380, 1168, 300, 321, 434, 3365, 558, 820, 2699, 76, 1905, 82, 1127, 466, 7719, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18276519775390626, "compression_ratio": 1.5907335907335907, "no_caption_prob": 0.00012729887384921312}, {"id": 717, "seek": 256800, "start": 2585.0, "end": 2590.0, "text": " because our audience or listeners are very quick.", "tokens": [50364, 309, 646, 760, 293, 291, 600, 1096, 2857, 589, 337, 1825, 13, 286, 1062, 362, 746, 50614, 50614, 2531, 281, 300, 294, 2699, 76, 3131, 20460, 13, 2264, 13, 400, 498, 406, 1580, 727, 1884, 364, 2734, 286, 478, 988, 13, 50864, 50864, 1610, 257, 2235, 5308, 13, 865, 13, 1610, 2235, 12475, 1339, 4764, 281, 341, 3500, 51164, 51214, 570, 527, 4034, 420, 23274, 366, 588, 1702, 13, 51464, 51514, 583, 286, 2041, 281, 808, 646, 281, 264, 1333, 295, 3380, 1168, 300, 321, 434, 3365, 558, 820, 2699, 76, 1905, 82, 1127, 466, 7719, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18276519775390626, "compression_ratio": 1.5907335907335907, "no_caption_prob": 0.00012729887384921312}, {"id": 718, "seek": 256800, "start": 2591.0, "end": 2596.0, "text": " But I guess to come back to the sort of original question that we're asking right should Elm devs care about category", "tokens": [50364, 309, 646, 760, 293, 291, 600, 1096, 2857, 589, 337, 1825, 13, 286, 1062, 362, 746, 50614, 50614, 2531, 281, 300, 294, 2699, 76, 3131, 20460, 13, 2264, 13, 400, 498, 406, 1580, 727, 1884, 364, 2734, 286, 478, 988, 13, 50864, 50864, 1610, 257, 2235, 5308, 13, 865, 13, 1610, 2235, 12475, 1339, 4764, 281, 341, 3500, 51164, 51214, 570, 527, 4034, 420, 23274, 366, 588, 1702, 13, 51464, 51514, 583, 286, 2041, 281, 808, 646, 281, 264, 1333, 295, 3380, 1168, 300, 321, 434, 3365, 558, 820, 2699, 76, 1905, 82, 1127, 466, 7719, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18276519775390626, "compression_ratio": 1.5907335907335907, "no_caption_prob": 0.00012729887384921312}, {"id": 719, "seek": 259600, "start": 2596.0, "end": 2601.0, "text": " theory or why should we care about it. One thing that really helps is to", "tokens": [50364, 5261, 420, 983, 820, 321, 1127, 466, 309, 13, 1485, 551, 300, 534, 3665, 307, 281, 50614, 50614, 570, 291, 393, 5521, 512, 295, 613, 4833, 2390, 8474, 293, 8294, 291, 393, 4258, 6052, 512, 50864, 50864, 709, 7731, 14310, 666, 577, 264, 1461, 1985, 293, 437, 309, 775, 420, 1177, 380, 360, 445, 538, 1237, 412, 512, 295, 613, 51114, 51114, 2445, 5288, 13, 1779, 13, 865, 13, 663, 311, 257, 869, 30681, 13, 51364, 51364, 286, 841, 411, 294, 264, 2699, 2592, 411, 286, 600, 1612, 512, 7315, 597, 286, 486, 406, 312, 1075, 281, 1604, 370, 286, 393, 380, 976, 309, 364, 1365, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10666939995505594, "compression_ratio": 1.5898305084745763, "no_caption_prob": 0.00016092558507807553}, {"id": 720, "seek": 259600, "start": 2601.0, "end": 2606.0, "text": " because you can recognize some of these larger building blocks and patterns you can immediately gain some", "tokens": [50364, 5261, 420, 983, 820, 321, 1127, 466, 309, 13, 1485, 551, 300, 534, 3665, 307, 281, 50614, 50614, 570, 291, 393, 5521, 512, 295, 613, 4833, 2390, 8474, 293, 8294, 291, 393, 4258, 6052, 512, 50864, 50864, 709, 7731, 14310, 666, 577, 264, 1461, 1985, 293, 437, 309, 775, 420, 1177, 380, 360, 445, 538, 1237, 412, 512, 295, 613, 51114, 51114, 2445, 5288, 13, 1779, 13, 865, 13, 663, 311, 257, 869, 30681, 13, 51364, 51364, 286, 841, 411, 294, 264, 2699, 2592, 411, 286, 600, 1612, 512, 7315, 597, 286, 486, 406, 312, 1075, 281, 1604, 370, 286, 393, 380, 976, 309, 364, 1365, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10666939995505594, "compression_ratio": 1.5898305084745763, "no_caption_prob": 0.00016092558507807553}, {"id": 721, "seek": 259600, "start": 2606.0, "end": 2611.0, "text": " much deeper insights into how the program works and what it does or doesn't do just by looking at some of these", "tokens": [50364, 5261, 420, 983, 820, 321, 1127, 466, 309, 13, 1485, 551, 300, 534, 3665, 307, 281, 50614, 50614, 570, 291, 393, 5521, 512, 295, 613, 4833, 2390, 8474, 293, 8294, 291, 393, 4258, 6052, 512, 50864, 50864, 709, 7731, 14310, 666, 577, 264, 1461, 1985, 293, 437, 309, 775, 420, 1177, 380, 360, 445, 538, 1237, 412, 512, 295, 613, 51114, 51114, 2445, 5288, 13, 1779, 13, 865, 13, 663, 311, 257, 869, 30681, 13, 51364, 51364, 286, 841, 411, 294, 264, 2699, 2592, 411, 286, 600, 1612, 512, 7315, 597, 286, 486, 406, 312, 1075, 281, 1604, 370, 286, 393, 380, 976, 309, 364, 1365, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10666939995505594, "compression_ratio": 1.5898305084745763, "no_caption_prob": 0.00016092558507807553}, {"id": 722, "seek": 259600, "start": 2611.0, "end": 2616.0, "text": " function names. Right. Yeah. That's a great takeaway.", "tokens": [50364, 5261, 420, 983, 820, 321, 1127, 466, 309, 13, 1485, 551, 300, 534, 3665, 307, 281, 50614, 50614, 570, 291, 393, 5521, 512, 295, 613, 4833, 2390, 8474, 293, 8294, 291, 393, 4258, 6052, 512, 50864, 50864, 709, 7731, 14310, 666, 577, 264, 1461, 1985, 293, 437, 309, 775, 420, 1177, 380, 360, 445, 538, 1237, 412, 512, 295, 613, 51114, 51114, 2445, 5288, 13, 1779, 13, 865, 13, 663, 311, 257, 869, 30681, 13, 51364, 51364, 286, 841, 411, 294, 264, 2699, 2592, 411, 286, 600, 1612, 512, 7315, 597, 286, 486, 406, 312, 1075, 281, 1604, 370, 286, 393, 380, 976, 309, 364, 1365, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10666939995505594, "compression_ratio": 1.5898305084745763, "no_caption_prob": 0.00016092558507807553}, {"id": 723, "seek": 259600, "start": 2616.0, "end": 2621.0, "text": " I feel like in the Elms like I've seen some conversations which I will not be able to remember so I can't give it an example", "tokens": [50364, 5261, 420, 983, 820, 321, 1127, 466, 309, 13, 1485, 551, 300, 534, 3665, 307, 281, 50614, 50614, 570, 291, 393, 5521, 512, 295, 613, 4833, 2390, 8474, 293, 8294, 291, 393, 4258, 6052, 512, 50864, 50864, 709, 7731, 14310, 666, 577, 264, 1461, 1985, 293, 437, 309, 775, 420, 1177, 380, 360, 445, 538, 1237, 412, 512, 295, 613, 51114, 51114, 2445, 5288, 13, 1779, 13, 865, 13, 663, 311, 257, 869, 30681, 13, 51364, 51364, 286, 841, 411, 294, 264, 2699, 2592, 411, 286, 600, 1612, 512, 7315, 597, 286, 486, 406, 312, 1075, 281, 1604, 370, 286, 393, 380, 976, 309, 364, 1365, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10666939995505594, "compression_ratio": 1.5898305084745763, "no_caption_prob": 0.00016092558507807553}, {"id": 724, "seek": 262100, "start": 2621.0, "end": 2626.0, "text": " where someone asked like is it possible to have a", "tokens": [50364, 689, 1580, 2351, 411, 307, 309, 1944, 281, 362, 257, 50614, 50614, 2445, 300, 775, 341, 420, 775, 300, 365, 341, 2010, 50864, 50864, 293, 561, 584, 731, 572, 300, 307, 406, 1944, 570, 291, 434, 5361, 51114, 51114, 512, 18491, 322, 428, 2010, 420, 322, 428, 6828, 420, 309, 307, 1944, 293, 51364, 51364, 510, 307, 264, 2010, 13397, 300, 291, 486, 536, 294, 661, 3190, 13, 407, 286, 841, 411, 512, 561, 366, 1075, 281, 5521, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10177450645260694, "compression_ratio": 1.7339901477832513, "no_caption_prob": 0.00018520296725910157}, {"id": 725, "seek": 262100, "start": 2626.0, "end": 2631.0, "text": " function that does this or does that with this type", "tokens": [50364, 689, 1580, 2351, 411, 307, 309, 1944, 281, 362, 257, 50614, 50614, 2445, 300, 775, 341, 420, 775, 300, 365, 341, 2010, 50864, 50864, 293, 561, 584, 731, 572, 300, 307, 406, 1944, 570, 291, 434, 5361, 51114, 51114, 512, 18491, 322, 428, 2010, 420, 322, 428, 6828, 420, 309, 307, 1944, 293, 51364, 51364, 510, 307, 264, 2010, 13397, 300, 291, 486, 536, 294, 661, 3190, 13, 407, 286, 841, 411, 512, 561, 366, 1075, 281, 5521, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10177450645260694, "compression_ratio": 1.7339901477832513, "no_caption_prob": 0.00018520296725910157}, {"id": 726, "seek": 262100, "start": 2631.0, "end": 2636.0, "text": " and people say well no that is not possible because you're missing", "tokens": [50364, 689, 1580, 2351, 411, 307, 309, 1944, 281, 362, 257, 50614, 50614, 2445, 300, 775, 341, 420, 775, 300, 365, 341, 2010, 50864, 50864, 293, 561, 584, 731, 572, 300, 307, 406, 1944, 570, 291, 434, 5361, 51114, 51114, 512, 18491, 322, 428, 2010, 420, 322, 428, 6828, 420, 309, 307, 1944, 293, 51364, 51364, 510, 307, 264, 2010, 13397, 300, 291, 486, 536, 294, 661, 3190, 13, 407, 286, 841, 411, 512, 561, 366, 1075, 281, 5521, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10177450645260694, "compression_ratio": 1.7339901477832513, "no_caption_prob": 0.00018520296725910157}, {"id": 727, "seek": 262100, "start": 2636.0, "end": 2641.0, "text": " some constraints on your type or on your functions or it is possible and", "tokens": [50364, 689, 1580, 2351, 411, 307, 309, 1944, 281, 362, 257, 50614, 50614, 2445, 300, 775, 341, 420, 775, 300, 365, 341, 2010, 50864, 50864, 293, 561, 584, 731, 572, 300, 307, 406, 1944, 570, 291, 434, 5361, 51114, 51114, 512, 18491, 322, 428, 2010, 420, 322, 428, 6828, 420, 309, 307, 1944, 293, 51364, 51364, 510, 307, 264, 2010, 13397, 300, 291, 486, 536, 294, 661, 3190, 13, 407, 286, 841, 411, 512, 561, 366, 1075, 281, 5521, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10177450645260694, "compression_ratio": 1.7339901477832513, "no_caption_prob": 0.00018520296725910157}, {"id": 728, "seek": 262100, "start": 2641.0, "end": 2647.0, "text": " here is the type signature that you will see in other places. So I feel like some people are able to recognize", "tokens": [50364, 689, 1580, 2351, 411, 307, 309, 1944, 281, 362, 257, 50614, 50614, 2445, 300, 775, 341, 420, 775, 300, 365, 341, 2010, 50864, 50864, 293, 561, 584, 731, 572, 300, 307, 406, 1944, 570, 291, 434, 5361, 51114, 51114, 512, 18491, 322, 428, 2010, 420, 322, 428, 6828, 420, 309, 307, 1944, 293, 51364, 51364, 510, 307, 264, 2010, 13397, 300, 291, 486, 536, 294, 661, 3190, 13, 407, 286, 841, 411, 512, 561, 366, 1075, 281, 5521, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10177450645260694, "compression_ratio": 1.7339901477832513, "no_caption_prob": 0.00018520296725910157}, {"id": 729, "seek": 264700, "start": 2647.0, "end": 2652.0, "text": " when something is possible when something is not possible very quickly thanks to this.", "tokens": [50364, 562, 746, 307, 1944, 562, 746, 307, 406, 1944, 588, 2661, 3231, 281, 341, 13, 50614, 50614, 286, 478, 1953, 411, 286, 500, 380, 458, 498, 286, 478, 8407, 341, 484, 295, 5862, 1988, 457, 411, 50864, 50864, 10742, 34033, 719, 727, 312, 472, 1365, 1310, 13, 286, 500, 380, 754, 458, 689, 300, 472, 307, 13, 51114, 51114, 583, 1338, 689, 291, 362, 411, 363, 281, 316, 382, 257, 2445, 51364, 51364, 293, 550, 291, 393, 7690, 746, 13, 286, 478, 516, 281, 1590, 510, 570, 286, 478, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16483580681585497, "compression_ratio": 1.705607476635514, "no_caption_prob": 0.0001608920720173046}, {"id": 730, "seek": 264700, "start": 2652.0, "end": 2657.0, "text": " I'm thinking like I don't know if I'm pulling this out of thin air but like", "tokens": [50364, 562, 746, 307, 1944, 562, 746, 307, 406, 1944, 588, 2661, 3231, 281, 341, 13, 50614, 50614, 286, 478, 1953, 411, 286, 500, 380, 458, 498, 286, 478, 8407, 341, 484, 295, 5862, 1988, 457, 411, 50864, 50864, 10742, 34033, 719, 727, 312, 472, 1365, 1310, 13, 286, 500, 380, 754, 458, 689, 300, 472, 307, 13, 51114, 51114, 583, 1338, 689, 291, 362, 411, 363, 281, 316, 382, 257, 2445, 51364, 51364, 293, 550, 291, 393, 7690, 746, 13, 286, 478, 516, 281, 1590, 510, 570, 286, 478, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16483580681585497, "compression_ratio": 1.705607476635514, "no_caption_prob": 0.0001608920720173046}, {"id": 731, "seek": 264700, "start": 2657.0, "end": 2662.0, "text": " contravariance could be one example maybe. I don't even know where that one is.", "tokens": [50364, 562, 746, 307, 1944, 562, 746, 307, 406, 1944, 588, 2661, 3231, 281, 341, 13, 50614, 50614, 286, 478, 1953, 411, 286, 500, 380, 458, 498, 286, 478, 8407, 341, 484, 295, 5862, 1988, 457, 411, 50864, 50864, 10742, 34033, 719, 727, 312, 472, 1365, 1310, 13, 286, 500, 380, 754, 458, 689, 300, 472, 307, 13, 51114, 51114, 583, 1338, 689, 291, 362, 411, 363, 281, 316, 382, 257, 2445, 51364, 51364, 293, 550, 291, 393, 7690, 746, 13, 286, 478, 516, 281, 1590, 510, 570, 286, 478, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16483580681585497, "compression_ratio": 1.705607476635514, "no_caption_prob": 0.0001608920720173046}, {"id": 732, "seek": 264700, "start": 2662.0, "end": 2667.0, "text": " But yeah where you have like B to A as a function", "tokens": [50364, 562, 746, 307, 1944, 562, 746, 307, 406, 1944, 588, 2661, 3231, 281, 341, 13, 50614, 50614, 286, 478, 1953, 411, 286, 500, 380, 458, 498, 286, 478, 8407, 341, 484, 295, 5862, 1988, 457, 411, 50864, 50864, 10742, 34033, 719, 727, 312, 472, 1365, 1310, 13, 286, 500, 380, 754, 458, 689, 300, 472, 307, 13, 51114, 51114, 583, 1338, 689, 291, 362, 411, 363, 281, 316, 382, 257, 2445, 51364, 51364, 293, 550, 291, 393, 7690, 746, 13, 286, 478, 516, 281, 1590, 510, 570, 286, 478, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16483580681585497, "compression_ratio": 1.705607476635514, "no_caption_prob": 0.0001608920720173046}, {"id": 733, "seek": 264700, "start": 2667.0, "end": 2672.0, "text": " and then you can construct something. I'm going to stop here because I'm", "tokens": [50364, 562, 746, 307, 1944, 562, 746, 307, 406, 1944, 588, 2661, 3231, 281, 341, 13, 50614, 50614, 286, 478, 1953, 411, 286, 500, 380, 458, 498, 286, 478, 8407, 341, 484, 295, 5862, 1988, 457, 411, 50864, 50864, 10742, 34033, 719, 727, 312, 472, 1365, 1310, 13, 286, 500, 380, 754, 458, 689, 300, 472, 307, 13, 51114, 51114, 583, 1338, 689, 291, 362, 411, 363, 281, 316, 382, 257, 2445, 51364, 51364, 293, 550, 291, 393, 7690, 746, 13, 286, 478, 516, 281, 1590, 510, 570, 286, 478, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.16483580681585497, "compression_ratio": 1.705607476635514, "no_caption_prob": 0.0001608920720173046}, {"id": 734, "seek": 267200, "start": 2672.0, "end": 2681.0, "text": " swinging. There's definitely cases where you can use it to say well here are standard solutions to a particular problem that follows one of these patterns or sometimes even built on top of these patterns.", "tokens": [50364, 29500, 13, 821, 311, 2138, 3331, 689, 291, 393, 764, 309, 281, 584, 731, 510, 366, 3832, 6547, 281, 257, 1729, 1154, 300, 10002, 472, 295, 613, 8294, 420, 2171, 754, 3094, 322, 1192, 295, 613, 8294, 13, 50814, 50814, 407, 291, 362, 257, 1329, 295, 815, 6446, 293, 291, 528, 281, 33384, 552, 666, 257, 2167, 51064, 51064, 1310, 365, 257, 1329, 295, 4190, 13, 663, 307, 264, 551, 300, 307, 51314, 51314, 534, 1880, 466, 341, 13, 286, 519, 309, 311, 534, 1880, 281, 536, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.37669649228944885, "compression_ratio": 1.7413793103448276, "no_caption_prob": 0.00012532755499705672}, {"id": 735, "seek": 267200, "start": 2681.0, "end": 2686.0, "text": " So you have a list of maybes and you want to accumulate them into a single", "tokens": [50364, 29500, 13, 821, 311, 2138, 3331, 689, 291, 393, 764, 309, 281, 584, 731, 510, 366, 3832, 6547, 281, 257, 1729, 1154, 300, 10002, 472, 295, 613, 8294, 420, 2171, 754, 3094, 322, 1192, 295, 613, 8294, 13, 50814, 50814, 407, 291, 362, 257, 1329, 295, 815, 6446, 293, 291, 528, 281, 33384, 552, 666, 257, 2167, 51064, 51064, 1310, 365, 257, 1329, 295, 4190, 13, 663, 307, 264, 551, 300, 307, 51314, 51314, 534, 1880, 466, 341, 13, 286, 519, 309, 311, 534, 1880, 281, 536, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.37669649228944885, "compression_ratio": 1.7413793103448276, "no_caption_prob": 0.00012532755499705672}, {"id": 736, "seek": 267200, "start": 2686.0, "end": 2691.0, "text": " maybe with a list of values. That is the thing that is", "tokens": [50364, 29500, 13, 821, 311, 2138, 3331, 689, 291, 393, 764, 309, 281, 584, 731, 510, 366, 3832, 6547, 281, 257, 1729, 1154, 300, 10002, 472, 295, 613, 8294, 420, 2171, 754, 3094, 322, 1192, 295, 613, 8294, 13, 50814, 50814, 407, 291, 362, 257, 1329, 295, 815, 6446, 293, 291, 528, 281, 33384, 552, 666, 257, 2167, 51064, 51064, 1310, 365, 257, 1329, 295, 4190, 13, 663, 307, 264, 551, 300, 307, 51314, 51314, 534, 1880, 466, 341, 13, 286, 519, 309, 311, 534, 1880, 281, 536, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.37669649228944885, "compression_ratio": 1.7413793103448276, "no_caption_prob": 0.00012532755499705672}, {"id": 737, "seek": 267200, "start": 2691.0, "end": 2696.0, "text": " really interesting about this. I think it's really interesting to see", "tokens": [50364, 29500, 13, 821, 311, 2138, 3331, 689, 291, 393, 764, 309, 281, 584, 731, 510, 366, 3832, 6547, 281, 257, 1729, 1154, 300, 10002, 472, 295, 613, 8294, 420, 2171, 754, 3094, 322, 1192, 295, 613, 8294, 13, 50814, 50814, 407, 291, 362, 257, 1329, 295, 815, 6446, 293, 291, 528, 281, 33384, 552, 666, 257, 2167, 51064, 51064, 1310, 365, 257, 1329, 295, 4190, 13, 663, 307, 264, 551, 300, 307, 51314, 51314, 534, 1880, 466, 341, 13, 286, 519, 309, 311, 534, 1880, 281, 536, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.37669649228944885, "compression_ratio": 1.7413793103448276, "no_caption_prob": 0.00012532755499705672}, {"id": 738, "seek": 269600, "start": 2696.0, "end": 2702.0, "text": " that you can actually generate a list of values into a single maybe with a list of values.", "tokens": [50364, 300, 291, 393, 767, 8460, 257, 1329, 295, 4190, 666, 257, 2167, 1310, 365, 257, 1329, 295, 4190, 13, 50664, 50664, 663, 307, 264, 551, 300, 307, 257, 13041, 1154, 337, 767, 50914, 50914, 19577, 1125, 490, 1238, 709, 604, 3467, 382, 938, 382, 436, 4445, 4471, 17, 13, 51164, 51164, 407, 291, 458, 382, 938, 382, 428, 2010, 307, 2580, 1166, 550, 291, 393, 360, 341, 51464, 51464, 733, 295, 32693, 295, 4190, 1214, 420, 21928, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.27067677567644816, "compression_ratio": 1.693467336683417, "no_caption_prob": 3.7853012599953217e-06}, {"id": 739, "seek": 269600, "start": 2702.0, "end": 2707.0, "text": " That is the thing that is a solved problem for actually", "tokens": [50364, 300, 291, 393, 767, 8460, 257, 1329, 295, 4190, 666, 257, 2167, 1310, 365, 257, 1329, 295, 4190, 13, 50664, 50664, 663, 307, 264, 551, 300, 307, 257, 13041, 1154, 337, 767, 50914, 50914, 19577, 1125, 490, 1238, 709, 604, 3467, 382, 938, 382, 436, 4445, 4471, 17, 13, 51164, 51164, 407, 291, 458, 382, 938, 382, 428, 2010, 307, 2580, 1166, 550, 291, 393, 360, 341, 51464, 51464, 733, 295, 32693, 295, 4190, 1214, 420, 21928, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.27067677567644816, "compression_ratio": 1.693467336683417, "no_caption_prob": 3.7853012599953217e-06}, {"id": 740, "seek": 269600, "start": 2707.0, "end": 2712.0, "text": " genericize from pretty much any types as long as they implement map2.", "tokens": [50364, 300, 291, 393, 767, 8460, 257, 1329, 295, 4190, 666, 257, 2167, 1310, 365, 257, 1329, 295, 4190, 13, 50664, 50664, 663, 307, 264, 551, 300, 307, 257, 13041, 1154, 337, 767, 50914, 50914, 19577, 1125, 490, 1238, 709, 604, 3467, 382, 938, 382, 436, 4445, 4471, 17, 13, 51164, 51164, 407, 291, 458, 382, 938, 382, 428, 2010, 307, 2580, 1166, 550, 291, 393, 360, 341, 51464, 51464, 733, 295, 32693, 295, 4190, 1214, 420, 21928, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.27067677567644816, "compression_ratio": 1.693467336683417, "no_caption_prob": 3.7853012599953217e-06}, {"id": 741, "seek": 269600, "start": 2712.0, "end": 2718.0, "text": " So you know as long as your type is applicative then you can do this", "tokens": [50364, 300, 291, 393, 767, 8460, 257, 1329, 295, 4190, 666, 257, 2167, 1310, 365, 257, 1329, 295, 4190, 13, 50664, 50664, 663, 307, 264, 551, 300, 307, 257, 13041, 1154, 337, 767, 50914, 50914, 19577, 1125, 490, 1238, 709, 604, 3467, 382, 938, 382, 436, 4445, 4471, 17, 13, 51164, 51164, 407, 291, 458, 382, 938, 382, 428, 2010, 307, 2580, 1166, 550, 291, 393, 360, 341, 51464, 51464, 733, 295, 32693, 295, 4190, 1214, 420, 21928, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.27067677567644816, "compression_ratio": 1.693467336683417, "no_caption_prob": 3.7853012599953217e-06}, {"id": 742, "seek": 269600, "start": 2718.0, "end": 2723.0, "text": " kind of sequencing of values together or combining.", "tokens": [50364, 300, 291, 393, 767, 8460, 257, 1329, 295, 4190, 666, 257, 2167, 1310, 365, 257, 1329, 295, 4190, 13, 50664, 50664, 663, 307, 264, 551, 300, 307, 257, 13041, 1154, 337, 767, 50914, 50914, 19577, 1125, 490, 1238, 709, 604, 3467, 382, 938, 382, 436, 4445, 4471, 17, 13, 51164, 51164, 407, 291, 458, 382, 938, 382, 428, 2010, 307, 2580, 1166, 550, 291, 393, 360, 341, 51464, 51464, 733, 295, 32693, 295, 4190, 1214, 420, 21928, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.27067677567644816, "compression_ratio": 1.693467336683417, "no_caption_prob": 3.7853012599953217e-06}, {"id": 743, "seek": 272300, "start": 2723.0, "end": 2728.0, "text": " You can either sequence or combine for this kind of operation.", "tokens": [50364, 509, 393, 2139, 8310, 420, 10432, 337, 341, 733, 295, 6916, 13, 50614, 50614, 407, 341, 1062, 312, 257, 955, 1029, 3139, 4434, 457, 393, 291, 853, 281, 1821, 760, 257, 1326, 295, 613, 8294, 411, 291, 445, 630, 365, 341, 1333, 295, 1558, 295, 411, 2264, 562, 291, 536, 4471, 17, 291, 458, 291, 393, 10432, 721, 13, 51164, 51164, 708, 366, 512, 661, 8294, 293, 512, 661, 721, 300, 291, 458, 291, 393, 360, 562, 291, 362, 729, 8294, 13, 51464, 51464, 1485, 300, 286, 411, 293, 797, 341, 307, 364, 28023, 309, 311, 406, 1009, 2074, 457, 286, 5850, 519, 295, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18303173559683342, "compression_ratio": 1.7538461538461538, "no_caption_prob": 1.0783244761114474e-05}, {"id": 744, "seek": 272300, "start": 2728.0, "end": 2739.0, "text": " So this might be a big ask Joelle but can you try to break down a few of these patterns like you just did with this sort of idea of like OK when you see map2 you know you can combine things.", "tokens": [50364, 509, 393, 2139, 8310, 420, 10432, 337, 341, 733, 295, 6916, 13, 50614, 50614, 407, 341, 1062, 312, 257, 955, 1029, 3139, 4434, 457, 393, 291, 853, 281, 1821, 760, 257, 1326, 295, 613, 8294, 411, 291, 445, 630, 365, 341, 1333, 295, 1558, 295, 411, 2264, 562, 291, 536, 4471, 17, 291, 458, 291, 393, 10432, 721, 13, 51164, 51164, 708, 366, 512, 661, 8294, 293, 512, 661, 721, 300, 291, 458, 291, 393, 360, 562, 291, 362, 729, 8294, 13, 51464, 51464, 1485, 300, 286, 411, 293, 797, 341, 307, 364, 28023, 309, 311, 406, 1009, 2074, 457, 286, 5850, 519, 295, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18303173559683342, "compression_ratio": 1.7538461538461538, "no_caption_prob": 1.0783244761114474e-05}, {"id": 745, "seek": 272300, "start": 2739.0, "end": 2745.0, "text": " What are some other patterns and some other things that you know you can do when you have those patterns.", "tokens": [50364, 509, 393, 2139, 8310, 420, 10432, 337, 341, 733, 295, 6916, 13, 50614, 50614, 407, 341, 1062, 312, 257, 955, 1029, 3139, 4434, 457, 393, 291, 853, 281, 1821, 760, 257, 1326, 295, 613, 8294, 411, 291, 445, 630, 365, 341, 1333, 295, 1558, 295, 411, 2264, 562, 291, 536, 4471, 17, 291, 458, 291, 393, 10432, 721, 13, 51164, 51164, 708, 366, 512, 661, 8294, 293, 512, 661, 721, 300, 291, 458, 291, 393, 360, 562, 291, 362, 729, 8294, 13, 51464, 51464, 1485, 300, 286, 411, 293, 797, 341, 307, 364, 28023, 309, 311, 406, 1009, 2074, 457, 286, 5850, 519, 295, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18303173559683342, "compression_ratio": 1.7538461538461538, "no_caption_prob": 1.0783244761114474e-05}, {"id": 746, "seek": 272300, "start": 2745.0, "end": 2752.0, "text": " One that I like and again this is an approximation it's not always true but I typically think of", "tokens": [50364, 509, 393, 2139, 8310, 420, 10432, 337, 341, 733, 295, 6916, 13, 50614, 50614, 407, 341, 1062, 312, 257, 955, 1029, 3139, 4434, 457, 393, 291, 853, 281, 1821, 760, 257, 1326, 295, 613, 8294, 411, 291, 445, 630, 365, 341, 1333, 295, 1558, 295, 411, 2264, 562, 291, 536, 4471, 17, 291, 458, 291, 393, 10432, 721, 13, 51164, 51164, 708, 366, 512, 661, 8294, 293, 512, 661, 721, 300, 291, 458, 291, 393, 360, 562, 291, 362, 729, 8294, 13, 51464, 51464, 1485, 300, 286, 411, 293, 797, 341, 307, 364, 28023, 309, 311, 406, 1009, 2074, 457, 286, 5850, 519, 295, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.18303173559683342, "compression_ratio": 1.7538461538461538, "no_caption_prob": 1.0783244761114474e-05}, {"id": 747, "seek": 275200, "start": 2752.0, "end": 2759.0, "text": " monads as being serial or sequential and applicatives as being parallel.", "tokens": [50364, 1108, 5834, 382, 885, 17436, 420, 42881, 293, 2580, 4884, 382, 885, 8952, 13, 50714, 50714, 407, 498, 291, 434, 884, 257, 4471, 17, 420, 4471, 18, 420, 4471, 19, 264, 1021, 551, 307, 300, 439, 295, 264, 721, 291, 434, 21928, 1214, 366, 439, 6695, 295, 1184, 661, 13, 51264, 51264, 407, 294, 5261, 498, 291, 434, 884, 257, 4471, 19, 365, 1451, 819, 33283, 12475, 729, 727, 312, 17577, 294, 8952, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0983887758010473, "compression_ratio": 1.6482412060301508, "no_caption_prob": 4.0693201299291104e-05}, {"id": 748, "seek": 275200, "start": 2759.0, "end": 2770.0, "text": " So if you're doing a map2 or map3 or map4 the important thing is that all of the things you're combining together are all independent of each other.", "tokens": [50364, 1108, 5834, 382, 885, 17436, 420, 42881, 293, 2580, 4884, 382, 885, 8952, 13, 50714, 50714, 407, 498, 291, 434, 884, 257, 4471, 17, 420, 4471, 18, 420, 4471, 19, 264, 1021, 551, 307, 300, 439, 295, 264, 721, 291, 434, 21928, 1214, 366, 439, 6695, 295, 1184, 661, 13, 51264, 51264, 407, 294, 5261, 498, 291, 434, 884, 257, 4471, 19, 365, 1451, 819, 33283, 12475, 729, 727, 312, 17577, 294, 8952, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0983887758010473, "compression_ratio": 1.6482412060301508, "no_caption_prob": 4.0693201299291104e-05}, {"id": 749, "seek": 275200, "start": 2770.0, "end": 2778.0, "text": " So in theory if you're doing a map4 with four different HTTP requests those could be executed in parallel.", "tokens": [50364, 1108, 5834, 382, 885, 17436, 420, 42881, 293, 2580, 4884, 382, 885, 8952, 13, 50714, 50714, 407, 498, 291, 434, 884, 257, 4471, 17, 420, 4471, 18, 420, 4471, 19, 264, 1021, 551, 307, 300, 439, 295, 264, 721, 291, 434, 21928, 1214, 366, 439, 6695, 295, 1184, 661, 13, 51264, 51264, 407, 294, 5261, 498, 291, 434, 884, 257, 4471, 19, 365, 1451, 819, 33283, 12475, 729, 727, 312, 17577, 294, 8952, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0983887758010473, "compression_ratio": 1.6482412060301508, "no_caption_prob": 4.0693201299291104e-05}, {"id": 750, "seek": 277800, "start": 2778.0, "end": 2785.0, "text": " Elm does not for the moment. That's an implementation detail. They've chosen to do it in sequence.", "tokens": [50364, 2699, 76, 775, 406, 337, 264, 1623, 13, 663, 311, 364, 11420, 2607, 13, 814, 600, 8614, 281, 360, 309, 294, 8310, 13, 50714, 50714, 583, 294, 5261, 436, 366, 6695, 293, 393, 312, 17577, 294, 8952, 294, 257, 636, 300, 884, 257, 3840, 295, 293, 550, 82, 337, 652, 472, 5308, 293, 550, 652, 1071, 5308, 293, 550, 652, 1071, 5308, 13, 51214, 51214, 814, 1633, 312, 42881, 570, 291, 393, 380, 652, 264, 1150, 5308, 1826, 264, 700, 5308, 7923, 977, 570, 291, 643, 1412, 490, 264, 700, 5308, 294, 1668, 281, 754, 7690, 264, 1150, 472, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0638622916661776, "compression_ratio": 1.8924302788844622, "no_caption_prob": 8.139557394315489e-06}, {"id": 751, "seek": 277800, "start": 2785.0, "end": 2795.0, "text": " But in theory they are independent and can be executed in parallel in a way that doing a bunch of and thens for make one request and then make another request and then make another request.", "tokens": [50364, 2699, 76, 775, 406, 337, 264, 1623, 13, 663, 311, 364, 11420, 2607, 13, 814, 600, 8614, 281, 360, 309, 294, 8310, 13, 50714, 50714, 583, 294, 5261, 436, 366, 6695, 293, 393, 312, 17577, 294, 8952, 294, 257, 636, 300, 884, 257, 3840, 295, 293, 550, 82, 337, 652, 472, 5308, 293, 550, 652, 1071, 5308, 293, 550, 652, 1071, 5308, 13, 51214, 51214, 814, 1633, 312, 42881, 570, 291, 393, 380, 652, 264, 1150, 5308, 1826, 264, 700, 5308, 7923, 977, 570, 291, 643, 1412, 490, 264, 700, 5308, 294, 1668, 281, 754, 7690, 264, 1150, 472, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0638622916661776, "compression_ratio": 1.8924302788844622, "no_caption_prob": 8.139557394315489e-06}, {"id": 752, "seek": 277800, "start": 2795.0, "end": 2805.0, "text": " They must be sequential because you can't make the second request until the first request resolves because you need data from the first request in order to even construct the second one.", "tokens": [50364, 2699, 76, 775, 406, 337, 264, 1623, 13, 663, 311, 364, 11420, 2607, 13, 814, 600, 8614, 281, 360, 309, 294, 8310, 13, 50714, 50714, 583, 294, 5261, 436, 366, 6695, 293, 393, 312, 17577, 294, 8952, 294, 257, 636, 300, 884, 257, 3840, 295, 293, 550, 82, 337, 652, 472, 5308, 293, 550, 652, 1071, 5308, 293, 550, 652, 1071, 5308, 13, 51214, 51214, 814, 1633, 312, 42881, 570, 291, 393, 380, 652, 264, 1150, 5308, 1826, 264, 700, 5308, 7923, 977, 570, 291, 643, 1412, 490, 264, 700, 5308, 294, 1668, 281, 754, 7690, 264, 1150, 472, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.0638622916661776, "compression_ratio": 1.8924302788844622, "no_caption_prob": 8.139557394315489e-06}, {"id": 753, "seek": 280500, "start": 2805.0, "end": 2813.0, "text": " So there's an inherent dependency chain in and thens that you don't have with map2 or map3.", "tokens": [50364, 407, 456, 311, 364, 26387, 33621, 5021, 294, 293, 550, 82, 300, 291, 500, 380, 362, 365, 4471, 17, 420, 4471, 18, 13, 50764, 50764, 823, 456, 311, 257, 707, 857, 295, 283, 16740, 1324, 456, 294, 300, 300, 311, 787, 2074, 365, 14258, 281, 264, 2010, 7006, 300, 291, 434, 1364, 365, 13, 51264, 51264, 407, 337, 1365, 21156, 433, 436, 434, 439, 6695, 295, 1184, 661, 337, 264, 551, 300, 436, 434, 21156, 278, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07936068523077318, "compression_ratio": 1.634020618556701, "no_caption_prob": 2.3320462787523866e-06}, {"id": 754, "seek": 280500, "start": 2813.0, "end": 2823.0, "text": " Now there's a little bit of fuzziness there in that that's only true with regards to the type variable that you're working with.", "tokens": [50364, 407, 456, 311, 364, 26387, 33621, 5021, 294, 293, 550, 82, 300, 291, 500, 380, 362, 365, 4471, 17, 420, 4471, 18, 13, 50764, 50764, 823, 456, 311, 257, 707, 857, 295, 283, 16740, 1324, 456, 294, 300, 300, 311, 787, 2074, 365, 14258, 281, 264, 2010, 7006, 300, 291, 434, 1364, 365, 13, 51264, 51264, 407, 337, 1365, 21156, 433, 436, 434, 439, 6695, 295, 1184, 661, 337, 264, 551, 300, 436, 434, 21156, 278, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07936068523077318, "compression_ratio": 1.634020618556701, "no_caption_prob": 2.3320462787523866e-06}, {"id": 755, "seek": 280500, "start": 2823.0, "end": 2828.0, "text": " So for example parsers they're all independent of each other for the thing that they're parsing.", "tokens": [50364, 407, 456, 311, 364, 26387, 33621, 5021, 294, 293, 550, 82, 300, 291, 500, 380, 362, 365, 4471, 17, 420, 4471, 18, 13, 50764, 50764, 823, 456, 311, 257, 707, 857, 295, 283, 16740, 1324, 456, 294, 300, 300, 311, 787, 2074, 365, 14258, 281, 264, 2010, 7006, 300, 291, 434, 1364, 365, 13, 51264, 51264, 407, 337, 1365, 21156, 433, 436, 434, 439, 6695, 295, 1184, 661, 337, 264, 551, 300, 436, 434, 21156, 278, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07936068523077318, "compression_ratio": 1.634020618556701, "no_caption_prob": 2.3320462787523866e-06}, {"id": 756, "seek": 282800, "start": 2828.0, "end": 2837.0, "text": " So the output of one parser won't impact the value of the second parser but they're all operating sequentially on the underlying string.", "tokens": [50364, 407, 264, 5598, 295, 472, 21156, 260, 1582, 380, 2712, 264, 2158, 295, 264, 1150, 21156, 260, 457, 436, 434, 439, 7447, 5123, 3137, 322, 264, 14217, 6798, 13, 50814, 50814, 407, 456, 307, 257, 1333, 295, 26387, 42881, 507, 281, 552, 457, 436, 366, 6695, 295, 1184, 661, 13, 51114, 51114, 407, 300, 17436, 5717, 8952, 2316, 8804, 4936, 294, 512, 3331, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08718590876635383, "compression_ratio": 1.6647727272727273, "no_caption_prob": 4.381828375699115e-07}, {"id": 757, "seek": 282800, "start": 2837.0, "end": 2843.0, "text": " So there is a sort of inherent sequentiality to them but they are independent of each other.", "tokens": [50364, 407, 264, 5598, 295, 472, 21156, 260, 1582, 380, 2712, 264, 2158, 295, 264, 1150, 21156, 260, 457, 436, 434, 439, 7447, 5123, 3137, 322, 264, 14217, 6798, 13, 50814, 50814, 407, 456, 307, 257, 1333, 295, 26387, 42881, 507, 281, 552, 457, 436, 366, 6695, 295, 1184, 661, 13, 51114, 51114, 407, 300, 17436, 5717, 8952, 2316, 8804, 4936, 294, 512, 3331, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08718590876635383, "compression_ratio": 1.6647727272727273, "no_caption_prob": 4.381828375699115e-07}, {"id": 758, "seek": 282800, "start": 2843.0, "end": 2847.0, "text": " So that serial versus parallel model falls apart in some cases.", "tokens": [50364, 407, 264, 5598, 295, 472, 21156, 260, 1582, 380, 2712, 264, 2158, 295, 264, 1150, 21156, 260, 457, 436, 434, 439, 7447, 5123, 3137, 322, 264, 14217, 6798, 13, 50814, 50814, 407, 456, 307, 257, 1333, 295, 26387, 42881, 507, 281, 552, 457, 436, 366, 6695, 295, 1184, 661, 13, 51114, 51114, 407, 300, 17436, 5717, 8952, 2316, 8804, 4936, 294, 512, 3331, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08718590876635383, "compression_ratio": 1.6647727272727273, "no_caption_prob": 4.381828375699115e-07}, {"id": 759, "seek": 284700, "start": 2847.0, "end": 2858.0, "text": " But for many or most of the and thens and map2s that I've experienced it's a useful distinction to keep in mind.", "tokens": [50364, 583, 337, 867, 420, 881, 295, 264, 293, 550, 82, 293, 4471, 17, 82, 300, 286, 600, 6751, 309, 311, 257, 4420, 16844, 281, 1066, 294, 1575, 13, 50914, 50914, 865, 286, 914, 412, 264, 588, 1935, 291, 458, 365, 293, 550, 445, 2361, 322, 264, 2010, 13397, 291, 458, 291, 434, 516, 281, 312, 1075, 281, 747, 264, 9859, 2158, 293, 291, 434, 516, 281, 312, 1075, 281, 362, 300, 293, 550, 976, 746, 1646, 646, 13, 51564, 51564, 663, 311, 411, 437, 264, 13397, 1619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06701282832933508, "compression_ratio": 1.6940639269406392, "no_caption_prob": 4.611000986187719e-05}, {"id": 760, "seek": 284700, "start": 2858.0, "end": 2871.0, "text": " Yeah I mean at the very least you know with and then just based on the type signature you know you're going to be able to take the concrete value and you're going to be able to have that and then give something else back.", "tokens": [50364, 583, 337, 867, 420, 881, 295, 264, 293, 550, 82, 293, 4471, 17, 82, 300, 286, 600, 6751, 309, 311, 257, 4420, 16844, 281, 1066, 294, 1575, 13, 50914, 50914, 865, 286, 914, 412, 264, 588, 1935, 291, 458, 365, 293, 550, 445, 2361, 322, 264, 2010, 13397, 291, 458, 291, 434, 516, 281, 312, 1075, 281, 747, 264, 9859, 2158, 293, 291, 434, 516, 281, 312, 1075, 281, 362, 300, 293, 550, 976, 746, 1646, 646, 13, 51564, 51564, 663, 311, 411, 437, 264, 13397, 1619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06701282832933508, "compression_ratio": 1.6940639269406392, "no_caption_prob": 4.611000986187719e-05}, {"id": 761, "seek": 284700, "start": 2871.0, "end": 2873.0, "text": " That's like what the signature says.", "tokens": [50364, 583, 337, 867, 420, 881, 295, 264, 293, 550, 82, 293, 4471, 17, 82, 300, 286, 600, 6751, 309, 311, 257, 4420, 16844, 281, 1066, 294, 1575, 13, 50914, 50914, 865, 286, 914, 412, 264, 588, 1935, 291, 458, 365, 293, 550, 445, 2361, 322, 264, 2010, 13397, 291, 458, 291, 434, 516, 281, 312, 1075, 281, 747, 264, 9859, 2158, 293, 291, 434, 516, 281, 312, 1075, 281, 362, 300, 293, 550, 976, 746, 1646, 646, 13, 51564, 51564, 663, 311, 411, 437, 264, 13397, 1619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06701282832933508, "compression_ratio": 1.6940639269406392, "no_caption_prob": 4.611000986187719e-05}, {"id": 762, "seek": 287300, "start": 2873.0, "end": 2882.0, "text": " So if it is something where it's performing operations you know it's going to need to be sequential because you actually have a resolved value at that point.", "tokens": [50364, 407, 498, 309, 307, 746, 689, 309, 311, 10205, 7705, 291, 458, 309, 311, 516, 281, 643, 281, 312, 42881, 570, 291, 767, 362, 257, 20772, 2158, 412, 300, 935, 13, 50814, 50814, 583, 264, 25290, 775, 483, 1880, 456, 558, 570, 264, 1349, 550, 775, 33616, 565, 293, 291, 458, 1310, 365, 257, 1329, 321, 434, 406, 6260, 365, 565, 293, 370, 1310, 321, 818, 309, 1588, 267, 4471, 293, 309, 2170, 257, 707, 34710, 1177, 380, 309, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07647214617047991, "compression_ratio": 1.663716814159292, "no_caption_prob": 8.139540113916155e-06}, {"id": 763, "seek": 287300, "start": 2882.0, "end": 2896.0, "text": " But the naming does get interesting there right because the word then does imply time and you know maybe with a list we're not dealing with time and so maybe we call it concat map and it gets a little fuzzy doesn't it?", "tokens": [50364, 407, 498, 309, 307, 746, 689, 309, 311, 10205, 7705, 291, 458, 309, 311, 516, 281, 643, 281, 312, 42881, 570, 291, 767, 362, 257, 20772, 2158, 412, 300, 935, 13, 50814, 50814, 583, 264, 25290, 775, 483, 1880, 456, 558, 570, 264, 1349, 550, 775, 33616, 565, 293, 291, 458, 1310, 365, 257, 1329, 321, 434, 406, 6260, 365, 565, 293, 370, 1310, 321, 818, 309, 1588, 267, 4471, 293, 309, 2170, 257, 707, 34710, 1177, 380, 309, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07647214617047991, "compression_ratio": 1.663716814159292, "no_caption_prob": 8.139540113916155e-06}, {"id": 764, "seek": 289600, "start": 2896.0, "end": 2904.0, "text": " Right right and even something like maybe right you're not dealing with something that's in the future.", "tokens": [50364, 1779, 558, 293, 754, 746, 411, 1310, 558, 291, 434, 406, 6260, 365, 746, 300, 311, 294, 264, 2027, 13, 50764, 50764, 1779, 13, 50814, 50814, 821, 307, 364, 32614, 1333, 295, 1186, 300, 264, 1150, 1310, 307, 516, 281, 312, 20772, 934, 264, 700, 472, 570, 456, 307, 300, 1668, 300, 311, 456, 13, 51214, 51214, 407, 1310, 550, 733, 295, 1669, 2020, 456, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10644786017281668, "compression_ratio": 1.6590909090909092, "no_caption_prob": 4.860398348682793e-06}, {"id": 765, "seek": 289600, "start": 2904.0, "end": 2905.0, "text": " Right.", "tokens": [50364, 1779, 558, 293, 754, 746, 411, 1310, 558, 291, 434, 406, 6260, 365, 746, 300, 311, 294, 264, 2027, 13, 50764, 50764, 1779, 13, 50814, 50814, 821, 307, 364, 32614, 1333, 295, 1186, 300, 264, 1150, 1310, 307, 516, 281, 312, 20772, 934, 264, 700, 472, 570, 456, 307, 300, 1668, 300, 311, 456, 13, 51214, 51214, 407, 1310, 550, 733, 295, 1669, 2020, 456, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10644786017281668, "compression_ratio": 1.6590909090909092, "no_caption_prob": 4.860398348682793e-06}, {"id": 766, "seek": 289600, "start": 2905.0, "end": 2913.0, "text": " There is an implied sort of fact that the second maybe is going to be resolved after the first one because there is that order that's there.", "tokens": [50364, 1779, 558, 293, 754, 746, 411, 1310, 558, 291, 434, 406, 6260, 365, 746, 300, 311, 294, 264, 2027, 13, 50764, 50764, 1779, 13, 50814, 50814, 821, 307, 364, 32614, 1333, 295, 1186, 300, 264, 1150, 1310, 307, 516, 281, 312, 20772, 934, 264, 700, 472, 570, 456, 307, 300, 1668, 300, 311, 456, 13, 51214, 51214, 407, 1310, 550, 733, 295, 1669, 2020, 456, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10644786017281668, "compression_ratio": 1.6590909090909092, "no_caption_prob": 4.860398348682793e-06}, {"id": 767, "seek": 289600, "start": 2913.0, "end": 2916.0, "text": " So maybe then kind of makes sense there.", "tokens": [50364, 1779, 558, 293, 754, 746, 411, 1310, 558, 291, 434, 406, 6260, 365, 746, 300, 311, 294, 264, 2027, 13, 50764, 50764, 1779, 13, 50814, 50814, 821, 307, 364, 32614, 1333, 295, 1186, 300, 264, 1150, 1310, 307, 516, 281, 312, 20772, 934, 264, 700, 472, 570, 456, 307, 300, 1668, 300, 311, 456, 13, 51214, 51214, 407, 1310, 550, 733, 295, 1669, 2020, 456, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10644786017281668, "compression_ratio": 1.6590909090909092, "no_caption_prob": 4.860398348682793e-06}, {"id": 768, "seek": 291600, "start": 2916.0, "end": 2934.0, "text": " Right, but the the general thing you're doing is you're taking some how resolved or concrete or present value or whatever that that fuzzy thing represents and you're able to return a new one of those with and then so okay cool so that's sort of this.", "tokens": [50364, 1779, 11, 457, 264, 264, 2674, 551, 291, 434, 884, 307, 291, 434, 1940, 512, 577, 20772, 420, 9859, 420, 1974, 2158, 420, 2035, 300, 300, 34710, 551, 8855, 293, 291, 434, 1075, 281, 2736, 257, 777, 472, 295, 729, 365, 293, 550, 370, 1392, 1627, 370, 300, 311, 1333, 295, 341, 13, 51264, 51264, 1133, 291, 362, 257, 1108, 345, 291, 362, 293, 550, 300, 311, 437, 291, 393, 360, 13, 708, 366, 512, 295, 613, 661, 8294, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11963997568402972, "compression_ratio": 1.6889952153110048, "no_caption_prob": 6.854244929854758e-06}, {"id": 769, "seek": 291600, "start": 2934.0, "end": 2940.0, "text": " When you have a monad you have and then that's what you can do. What are some of these other patterns?", "tokens": [50364, 1779, 11, 457, 264, 264, 2674, 551, 291, 434, 884, 307, 291, 434, 1940, 512, 577, 20772, 420, 9859, 420, 1974, 2158, 420, 2035, 300, 300, 34710, 551, 8855, 293, 291, 434, 1075, 281, 2736, 257, 777, 472, 295, 729, 365, 293, 550, 370, 1392, 1627, 370, 300, 311, 1333, 295, 341, 13, 51264, 51264, 1133, 291, 362, 257, 1108, 345, 291, 362, 293, 550, 300, 311, 437, 291, 393, 360, 13, 708, 366, 512, 295, 613, 661, 8294, 30, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11963997568402972, "compression_ratio": 1.6889952153110048, "no_caption_prob": 6.854244929854758e-06}, {"id": 770, "seek": 294000, "start": 2940.0, "end": 2951.0, "text": " So we talked a little bit about monoid earlier the idea of we have some combining function and we have sort of a base case that always does nothing when combined with another value.", "tokens": [50364, 407, 321, 2825, 257, 707, 857, 466, 1108, 17079, 3071, 264, 1558, 295, 321, 362, 512, 21928, 2445, 293, 321, 362, 1333, 295, 257, 3096, 1389, 300, 1009, 775, 1825, 562, 9354, 365, 1071, 2158, 13, 50914, 50914, 1119, 456, 257, 30351, 337, 264, 21928, 2445, 30, 1144, 291, 458, 30, 51114, 51114, 708, 307, 309, 30, 440, 485, 1954, 286, 2870, 437, 309, 307, 13, 51314, 51314, 440, 3096, 1389, 307, 2171, 1219, 1334, 39420, 294, 8646, 43723, 293, 436, 362, 257, 1315, 337, 264, 661, 472, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14868535277664022, "compression_ratio": 1.6905829596412556, "no_caption_prob": 5.507578407559777e-06}, {"id": 771, "seek": 294000, "start": 2951.0, "end": 2955.0, "text": " Is there a username for the combining function? Do you know?", "tokens": [50364, 407, 321, 2825, 257, 707, 857, 466, 1108, 17079, 3071, 264, 1558, 295, 321, 362, 512, 21928, 2445, 293, 321, 362, 1333, 295, 257, 3096, 1389, 300, 1009, 775, 1825, 562, 9354, 365, 1071, 2158, 13, 50914, 50914, 1119, 456, 257, 30351, 337, 264, 21928, 2445, 30, 1144, 291, 458, 30, 51114, 51114, 708, 307, 309, 30, 440, 485, 1954, 286, 2870, 437, 309, 307, 13, 51314, 51314, 440, 3096, 1389, 307, 2171, 1219, 1334, 39420, 294, 8646, 43723, 293, 436, 362, 257, 1315, 337, 264, 661, 472, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14868535277664022, "compression_ratio": 1.6905829596412556, "no_caption_prob": 5.507578407559777e-06}, {"id": 772, "seek": 294000, "start": 2955.0, "end": 2959.0, "text": " What is it? The... oh I forget what it is.", "tokens": [50364, 407, 321, 2825, 257, 707, 857, 466, 1108, 17079, 3071, 264, 1558, 295, 321, 362, 512, 21928, 2445, 293, 321, 362, 1333, 295, 257, 3096, 1389, 300, 1009, 775, 1825, 562, 9354, 365, 1071, 2158, 13, 50914, 50914, 1119, 456, 257, 30351, 337, 264, 21928, 2445, 30, 1144, 291, 458, 30, 51114, 51114, 708, 307, 309, 30, 440, 485, 1954, 286, 2870, 437, 309, 307, 13, 51314, 51314, 440, 3096, 1389, 307, 2171, 1219, 1334, 39420, 294, 8646, 43723, 293, 436, 362, 257, 1315, 337, 264, 661, 472, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14868535277664022, "compression_ratio": 1.6905829596412556, "no_caption_prob": 5.507578407559777e-06}, {"id": 773, "seek": 294000, "start": 2959.0, "end": 2966.0, "text": " The base case is sometimes called mempty in Haskell and they have a name for the other one.", "tokens": [50364, 407, 321, 2825, 257, 707, 857, 466, 1108, 17079, 3071, 264, 1558, 295, 321, 362, 512, 21928, 2445, 293, 321, 362, 1333, 295, 257, 3096, 1389, 300, 1009, 775, 1825, 562, 9354, 365, 1071, 2158, 13, 50914, 50914, 1119, 456, 257, 30351, 337, 264, 21928, 2445, 30, 1144, 291, 458, 30, 51114, 51114, 708, 307, 309, 30, 440, 485, 1954, 286, 2870, 437, 309, 307, 13, 51314, 51314, 440, 3096, 1389, 307, 2171, 1219, 1334, 39420, 294, 8646, 43723, 293, 436, 362, 257, 1315, 337, 264, 661, 472, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.14868535277664022, "compression_ratio": 1.6905829596412556, "no_caption_prob": 5.507578407559777e-06}, {"id": 774, "seek": 296600, "start": 2966.0, "end": 2976.0, "text": " I don't know if those are standard names or if that's just the Haskell names for it, but what's interesting about this is that it may have actually kind of set off a light bulb in your mind.", "tokens": [50364, 286, 500, 380, 458, 498, 729, 366, 3832, 5288, 420, 498, 300, 311, 445, 264, 8646, 43723, 5288, 337, 309, 11, 457, 437, 311, 1880, 466, 341, 307, 300, 309, 815, 362, 767, 733, 295, 992, 766, 257, 1442, 21122, 294, 428, 1575, 13, 50864, 50864, 440, 1558, 295, 257, 21928, 2445, 294, 257, 3096, 1389, 544, 420, 1570, 437, 25335, 775, 13, 51164, 51164, 400, 370, 498, 291, 362, 257, 1108, 17079, 11, 550, 291, 393, 27993, 4860, 16641, 295, 300, 420, 14511, 295, 300, 2010, 1228, 300, 1108, 17079, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08856535951296489, "compression_ratio": 1.6553191489361703, "no_caption_prob": 6.37553227988974e-07}, {"id": 775, "seek": 296600, "start": 2976.0, "end": 2982.0, "text": " The idea of a combining function in a base case more or less what folding does.", "tokens": [50364, 286, 500, 380, 458, 498, 729, 366, 3832, 5288, 420, 498, 300, 311, 445, 264, 8646, 43723, 5288, 337, 309, 11, 457, 437, 311, 1880, 466, 341, 307, 300, 309, 815, 362, 767, 733, 295, 992, 766, 257, 1442, 21122, 294, 428, 1575, 13, 50864, 50864, 440, 1558, 295, 257, 21928, 2445, 294, 257, 3096, 1389, 544, 420, 1570, 437, 25335, 775, 13, 51164, 51164, 400, 370, 498, 291, 362, 257, 1108, 17079, 11, 550, 291, 393, 27993, 4860, 16641, 295, 300, 420, 14511, 295, 300, 2010, 1228, 300, 1108, 17079, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08856535951296489, "compression_ratio": 1.6553191489361703, "no_caption_prob": 6.37553227988974e-07}, {"id": 776, "seek": 296600, "start": 2982.0, "end": 2994.0, "text": " And so if you have a monoid, then you can inherently fold collections of that or lists of that type using that monoid.", "tokens": [50364, 286, 500, 380, 458, 498, 729, 366, 3832, 5288, 420, 498, 300, 311, 445, 264, 8646, 43723, 5288, 337, 309, 11, 457, 437, 311, 1880, 466, 341, 307, 300, 309, 815, 362, 767, 733, 295, 992, 766, 257, 1442, 21122, 294, 428, 1575, 13, 50864, 50864, 440, 1558, 295, 257, 21928, 2445, 294, 257, 3096, 1389, 544, 420, 1570, 437, 25335, 775, 13, 51164, 51164, 400, 370, 498, 291, 362, 257, 1108, 17079, 11, 550, 291, 393, 27993, 4860, 16641, 295, 300, 420, 14511, 295, 300, 2010, 1228, 300, 1108, 17079, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08856535951296489, "compression_ratio": 1.6553191489361703, "no_caption_prob": 6.37553227988974e-07}, {"id": 777, "seek": 299400, "start": 2994.0, "end": 3004.0, "text": " So most of the classical sort of fold function examples will show like summing a list is effectively just applying that monoid to things.", "tokens": [50364, 407, 881, 295, 264, 13735, 1333, 295, 4860, 2445, 5110, 486, 855, 411, 2408, 2810, 257, 1329, 307, 8659, 445, 9275, 300, 1108, 17079, 281, 721, 13, 50864, 50864, 583, 291, 393, 611, 12972, 721, 13, 50964, 50964, 6595, 411, 3365, 366, 439, 4190, 294, 257, 1329, 2074, 4650, 281, 341, 3852, 8700, 420, 366, 604, 295, 552, 2074, 30, 51414, 51414, 823, 291, 434, 8659, 25335, 264, 23351, 28499, 12973, 420, 420, 264, 23351, 28499, 12973, 293, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08271252965352621, "compression_ratio": 1.6901408450704225, "no_caption_prob": 1.3006785593461245e-05}, {"id": 778, "seek": 299400, "start": 3004.0, "end": 3006.0, "text": " But you can also multiply things.", "tokens": [50364, 407, 881, 295, 264, 13735, 1333, 295, 4860, 2445, 5110, 486, 855, 411, 2408, 2810, 257, 1329, 307, 8659, 445, 9275, 300, 1108, 17079, 281, 721, 13, 50864, 50864, 583, 291, 393, 611, 12972, 721, 13, 50964, 50964, 6595, 411, 3365, 366, 439, 4190, 294, 257, 1329, 2074, 4650, 281, 341, 3852, 8700, 420, 366, 604, 295, 552, 2074, 30, 51414, 51414, 823, 291, 434, 8659, 25335, 264, 23351, 28499, 12973, 420, 420, 264, 23351, 28499, 12973, 293, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08271252965352621, "compression_ratio": 1.6901408450704225, "no_caption_prob": 1.3006785593461245e-05}, {"id": 779, "seek": 299400, "start": 3006.0, "end": 3015.0, "text": " Something like asking are all values in a list true according to this predicate or are any of them true?", "tokens": [50364, 407, 881, 295, 264, 13735, 1333, 295, 4860, 2445, 5110, 486, 855, 411, 2408, 2810, 257, 1329, 307, 8659, 445, 9275, 300, 1108, 17079, 281, 721, 13, 50864, 50864, 583, 291, 393, 611, 12972, 721, 13, 50964, 50964, 6595, 411, 3365, 366, 439, 4190, 294, 257, 1329, 2074, 4650, 281, 341, 3852, 8700, 420, 366, 604, 295, 552, 2074, 30, 51414, 51414, 823, 291, 434, 8659, 25335, 264, 23351, 28499, 12973, 420, 420, 264, 23351, 28499, 12973, 293, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08271252965352621, "compression_ratio": 1.6901408450704225, "no_caption_prob": 1.3006785593461245e-05}, {"id": 780, "seek": 299400, "start": 3015.0, "end": 3021.0, "text": " Now you're effectively folding the Boolean operator or or the Boolean operator and.", "tokens": [50364, 407, 881, 295, 264, 13735, 1333, 295, 4860, 2445, 5110, 486, 855, 411, 2408, 2810, 257, 1329, 307, 8659, 445, 9275, 300, 1108, 17079, 281, 721, 13, 50864, 50864, 583, 291, 393, 611, 12972, 721, 13, 50964, 50964, 6595, 411, 3365, 366, 439, 4190, 294, 257, 1329, 2074, 4650, 281, 341, 3852, 8700, 420, 366, 604, 295, 552, 2074, 30, 51414, 51414, 823, 291, 434, 8659, 25335, 264, 23351, 28499, 12973, 420, 420, 264, 23351, 28499, 12973, 293, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08271252965352621, "compression_ratio": 1.6901408450704225, "no_caption_prob": 1.3006785593461245e-05}, {"id": 781, "seek": 302100, "start": 3021.0, "end": 3037.0, "text": " On Booleans and is a combining function and anding a value with false returns sorry, ending a value with true returns whatever your value was.", "tokens": [50364, 1282, 23351, 24008, 293, 307, 257, 21928, 2445, 293, 293, 278, 257, 2158, 365, 7908, 11247, 2597, 11, 8121, 257, 2158, 365, 2074, 11247, 2035, 428, 2158, 390, 13, 51164, 51164, 407, 8121, 4190, 307, 257, 1108, 17079, 293, 912, 551, 365, 420, 13, 51364, 51364, 1610, 2937, 257, 2158, 365, 2074, 11247, 2698, 293, 420, 307, 257, 636, 281, 10432, 732, 23351, 24008, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.21801153818766275, "compression_ratio": 1.814569536423841, "no_caption_prob": 1.723130299069453e-05}, {"id": 782, "seek": 302100, "start": 3037.0, "end": 3041.0, "text": " So ending values is a monoid and same thing with or.", "tokens": [50364, 1282, 23351, 24008, 293, 307, 257, 21928, 2445, 293, 293, 278, 257, 2158, 365, 7908, 11247, 2597, 11, 8121, 257, 2158, 365, 2074, 11247, 2035, 428, 2158, 390, 13, 51164, 51164, 407, 8121, 4190, 307, 257, 1108, 17079, 293, 912, 551, 365, 420, 13, 51364, 51364, 1610, 2937, 257, 2158, 365, 2074, 11247, 2698, 293, 420, 307, 257, 636, 281, 10432, 732, 23351, 24008, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.21801153818766275, "compression_ratio": 1.814569536423841, "no_caption_prob": 1.723130299069453e-05}, {"id": 783, "seek": 302100, "start": 3041.0, "end": 3046.0, "text": " Orring a value with true returns self and or is a way to combine two Booleans.", "tokens": [50364, 1282, 23351, 24008, 293, 307, 257, 21928, 2445, 293, 293, 278, 257, 2158, 365, 7908, 11247, 2597, 11, 8121, 257, 2158, 365, 2074, 11247, 2035, 428, 2158, 390, 13, 51164, 51164, 407, 8121, 4190, 307, 257, 1108, 17079, 293, 912, 551, 365, 420, 13, 51364, 51364, 1610, 2937, 257, 2158, 365, 2074, 11247, 2698, 293, 420, 307, 257, 636, 281, 10432, 732, 23351, 24008, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.21801153818766275, "compression_ratio": 1.814569536423841, "no_caption_prob": 1.723130299069453e-05}, {"id": 784, "seek": 304600, "start": 3046.0, "end": 3051.0, "text": " Orring a value with false returns self, orring a value with true returns true.", "tokens": [50364, 1610, 2937, 257, 2158, 365, 7908, 11247, 2698, 11, 420, 2937, 257, 2158, 365, 2074, 11247, 2074, 13, 50614, 50614, 865, 11, 1338, 11, 286, 658, 309, 30563, 13, 50764, 50764, 1779, 11, 558, 13, 865, 11, 572, 11, 300, 311, 8451, 4, 2931, 13, 51064, 51064, 400, 286, 658, 309, 2085, 365, 1293, 13, 51264, 51264, 509, 645, 588, 38838, 13, 51464, 51464, 407, 411, 576, 257, 992, 312, 1071, 1365, 295, 300, 30, 51614, 51614, 509, 393, 362, 364, 6707, 992, 293, 291, 393, 11671, 257, 992, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21365031790226063, "compression_ratio": 1.5482233502538072, "no_caption_prob": 0.00020984021830372512}, {"id": 785, "seek": 304600, "start": 3051.0, "end": 3054.0, "text": " Yeah, yeah, I got it reversed.", "tokens": [50364, 1610, 2937, 257, 2158, 365, 7908, 11247, 2698, 11, 420, 2937, 257, 2158, 365, 2074, 11247, 2074, 13, 50614, 50614, 865, 11, 1338, 11, 286, 658, 309, 30563, 13, 50764, 50764, 1779, 11, 558, 13, 865, 11, 572, 11, 300, 311, 8451, 4, 2931, 13, 51064, 51064, 400, 286, 658, 309, 2085, 365, 1293, 13, 51264, 51264, 509, 645, 588, 38838, 13, 51464, 51464, 407, 411, 576, 257, 992, 312, 1071, 1365, 295, 300, 30, 51614, 51614, 509, 393, 362, 364, 6707, 992, 293, 291, 393, 11671, 257, 992, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21365031790226063, "compression_ratio": 1.5482233502538072, "no_caption_prob": 0.00020984021830372512}, {"id": 786, "seek": 304600, "start": 3054.0, "end": 3060.0, "text": " Right, right. Yeah, no, that's 150% chance.", "tokens": [50364, 1610, 2937, 257, 2158, 365, 7908, 11247, 2698, 11, 420, 2937, 257, 2158, 365, 2074, 11247, 2074, 13, 50614, 50614, 865, 11, 1338, 11, 286, 658, 309, 30563, 13, 50764, 50764, 1779, 11, 558, 13, 865, 11, 572, 11, 300, 311, 8451, 4, 2931, 13, 51064, 51064, 400, 286, 658, 309, 2085, 365, 1293, 13, 51264, 51264, 509, 645, 588, 38838, 13, 51464, 51464, 407, 411, 576, 257, 992, 312, 1071, 1365, 295, 300, 30, 51614, 51614, 509, 393, 362, 364, 6707, 992, 293, 291, 393, 11671, 257, 992, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21365031790226063, "compression_ratio": 1.5482233502538072, "no_caption_prob": 0.00020984021830372512}, {"id": 787, "seek": 304600, "start": 3060.0, "end": 3064.0, "text": " And I got it wrong with both.", "tokens": [50364, 1610, 2937, 257, 2158, 365, 7908, 11247, 2698, 11, 420, 2937, 257, 2158, 365, 2074, 11247, 2074, 13, 50614, 50614, 865, 11, 1338, 11, 286, 658, 309, 30563, 13, 50764, 50764, 1779, 11, 558, 13, 865, 11, 572, 11, 300, 311, 8451, 4, 2931, 13, 51064, 51064, 400, 286, 658, 309, 2085, 365, 1293, 13, 51264, 51264, 509, 645, 588, 38838, 13, 51464, 51464, 407, 411, 576, 257, 992, 312, 1071, 1365, 295, 300, 30, 51614, 51614, 509, 393, 362, 364, 6707, 992, 293, 291, 393, 11671, 257, 992, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21365031790226063, "compression_ratio": 1.5482233502538072, "no_caption_prob": 0.00020984021830372512}, {"id": 788, "seek": 304600, "start": 3064.0, "end": 3068.0, "text": " You were very unlucky.", "tokens": [50364, 1610, 2937, 257, 2158, 365, 7908, 11247, 2698, 11, 420, 2937, 257, 2158, 365, 2074, 11247, 2074, 13, 50614, 50614, 865, 11, 1338, 11, 286, 658, 309, 30563, 13, 50764, 50764, 1779, 11, 558, 13, 865, 11, 572, 11, 300, 311, 8451, 4, 2931, 13, 51064, 51064, 400, 286, 658, 309, 2085, 365, 1293, 13, 51264, 51264, 509, 645, 588, 38838, 13, 51464, 51464, 407, 411, 576, 257, 992, 312, 1071, 1365, 295, 300, 30, 51614, 51614, 509, 393, 362, 364, 6707, 992, 293, 291, 393, 11671, 257, 992, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21365031790226063, "compression_ratio": 1.5482233502538072, "no_caption_prob": 0.00020984021830372512}, {"id": 789, "seek": 304600, "start": 3068.0, "end": 3071.0, "text": " So like would a set be another example of that?", "tokens": [50364, 1610, 2937, 257, 2158, 365, 7908, 11247, 2698, 11, 420, 2937, 257, 2158, 365, 2074, 11247, 2074, 13, 50614, 50614, 865, 11, 1338, 11, 286, 658, 309, 30563, 13, 50764, 50764, 1779, 11, 558, 13, 865, 11, 572, 11, 300, 311, 8451, 4, 2931, 13, 51064, 51064, 400, 286, 658, 309, 2085, 365, 1293, 13, 51264, 51264, 509, 645, 588, 38838, 13, 51464, 51464, 407, 411, 576, 257, 992, 312, 1071, 1365, 295, 300, 30, 51614, 51614, 509, 393, 362, 364, 6707, 992, 293, 291, 393, 11671, 257, 992, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21365031790226063, "compression_ratio": 1.5482233502538072, "no_caption_prob": 0.00020984021830372512}, {"id": 790, "seek": 304600, "start": 3071.0, "end": 3074.0, "text": " You can have an empty set and you can union a set.", "tokens": [50364, 1610, 2937, 257, 2158, 365, 7908, 11247, 2698, 11, 420, 2937, 257, 2158, 365, 2074, 11247, 2074, 13, 50614, 50614, 865, 11, 1338, 11, 286, 658, 309, 30563, 13, 50764, 50764, 1779, 11, 558, 13, 865, 11, 572, 11, 300, 311, 8451, 4, 2931, 13, 51064, 51064, 400, 286, 658, 309, 2085, 365, 1293, 13, 51264, 51264, 509, 645, 588, 38838, 13, 51464, 51464, 407, 411, 576, 257, 992, 312, 1071, 1365, 295, 300, 30, 51614, 51614, 509, 393, 362, 364, 6707, 992, 293, 291, 393, 11671, 257, 992, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21365031790226063, "compression_ratio": 1.5482233502538072, "no_caption_prob": 0.00020984021830372512}, {"id": 791, "seek": 307400, "start": 3074.0, "end": 3077.0, "text": " Yeah, you right.", "tokens": [50364, 865, 11, 291, 558, 13, 50514, 50514, 865, 11, 291, 393, 11671, 365, 300, 13, 50614, 50614, 509, 2644, 8969, 364, 6707, 4478, 11, 457, 291, 393, 11671, 732, 6352, 11, 558, 30, 50814, 50814, 407, 291, 727, 1254, 257, 1108, 17079, 337, 6352, 365, 11671, 382, 428, 21928, 2445, 293, 6707, 992, 382, 428, 11, 286, 2041, 11, 6575, 2158, 13, 51314, 51314, 509, 727, 13, 286, 478, 406, 988, 337, 512, 295, 264, 661, 992, 7705, 498, 15236, 1985, 420, 406, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291124387220903, "compression_ratio": 1.6887755102040816, "no_caption_prob": 1.0953020137094427e-05}, {"id": 792, "seek": 307400, "start": 3077.0, "end": 3079.0, "text": " Yeah, you can union with that.", "tokens": [50364, 865, 11, 291, 558, 13, 50514, 50514, 865, 11, 291, 393, 11671, 365, 300, 13, 50614, 50614, 509, 2644, 8969, 364, 6707, 4478, 11, 457, 291, 393, 11671, 732, 6352, 11, 558, 30, 50814, 50814, 407, 291, 727, 1254, 257, 1108, 17079, 337, 6352, 365, 11671, 382, 428, 21928, 2445, 293, 6707, 992, 382, 428, 11, 286, 2041, 11, 6575, 2158, 13, 51314, 51314, 509, 727, 13, 286, 478, 406, 988, 337, 512, 295, 264, 661, 992, 7705, 498, 15236, 1985, 420, 406, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291124387220903, "compression_ratio": 1.6887755102040816, "no_caption_prob": 1.0953020137094427e-05}, {"id": 793, "seek": 307400, "start": 3079.0, "end": 3083.0, "text": " You cannot insert an empty element, but you can union two sets, right?", "tokens": [50364, 865, 11, 291, 558, 13, 50514, 50514, 865, 11, 291, 393, 11671, 365, 300, 13, 50614, 50614, 509, 2644, 8969, 364, 6707, 4478, 11, 457, 291, 393, 11671, 732, 6352, 11, 558, 30, 50814, 50814, 407, 291, 727, 1254, 257, 1108, 17079, 337, 6352, 365, 11671, 382, 428, 21928, 2445, 293, 6707, 992, 382, 428, 11, 286, 2041, 11, 6575, 2158, 13, 51314, 51314, 509, 727, 13, 286, 478, 406, 988, 337, 512, 295, 264, 661, 992, 7705, 498, 15236, 1985, 420, 406, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291124387220903, "compression_ratio": 1.6887755102040816, "no_caption_prob": 1.0953020137094427e-05}, {"id": 794, "seek": 307400, "start": 3083.0, "end": 3093.0, "text": " So you could form a monoid for sets with union as your combining function and empty set as your, I guess, identity value.", "tokens": [50364, 865, 11, 291, 558, 13, 50514, 50514, 865, 11, 291, 393, 11671, 365, 300, 13, 50614, 50614, 509, 2644, 8969, 364, 6707, 4478, 11, 457, 291, 393, 11671, 732, 6352, 11, 558, 30, 50814, 50814, 407, 291, 727, 1254, 257, 1108, 17079, 337, 6352, 365, 11671, 382, 428, 21928, 2445, 293, 6707, 992, 382, 428, 11, 286, 2041, 11, 6575, 2158, 13, 51314, 51314, 509, 727, 13, 286, 478, 406, 988, 337, 512, 295, 264, 661, 992, 7705, 498, 15236, 1985, 420, 406, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291124387220903, "compression_ratio": 1.6887755102040816, "no_caption_prob": 1.0953020137094427e-05}, {"id": 795, "seek": 307400, "start": 3093.0, "end": 3098.0, "text": " You could. I'm not sure for some of the other set operations if intersection works or not.", "tokens": [50364, 865, 11, 291, 558, 13, 50514, 50514, 865, 11, 291, 393, 11671, 365, 300, 13, 50614, 50614, 509, 2644, 8969, 364, 6707, 4478, 11, 457, 291, 393, 11671, 732, 6352, 11, 558, 30, 50814, 50814, 407, 291, 727, 1254, 257, 1108, 17079, 337, 6352, 365, 11671, 382, 428, 21928, 2445, 293, 6707, 992, 382, 428, 11, 286, 2041, 11, 6575, 2158, 13, 51314, 51314, 509, 727, 13, 286, 478, 406, 988, 337, 512, 295, 264, 661, 992, 7705, 498, 15236, 1985, 420, 406, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1291124387220903, "compression_ratio": 1.6887755102040816, "no_caption_prob": 1.0953020137094427e-05}, {"id": 796, "seek": 309800, "start": 3098.0, "end": 3106.0, "text": " I mean, I think effectively you can you can think of union like or an intersection like and.", "tokens": [50364, 286, 914, 11, 286, 519, 8659, 291, 393, 291, 393, 519, 295, 11671, 411, 420, 364, 15236, 411, 293, 13, 50764, 50764, 1079, 13, 407, 309, 311, 1391, 1944, 13, 51014, 51014, 865, 11, 286, 362, 281, 519, 466, 300, 13, 51214, 51214, 2305, 341, 307, 534, 1880, 307, 300, 6828, 366, 2969, 1108, 78, 3742, 570, 291, 393, 10432, 732, 6828, 365, 2445, 12686, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12345033373151507, "compression_ratio": 1.6229508196721312, "no_caption_prob": 1.9525225070538e-05}, {"id": 797, "seek": 309800, "start": 3106.0, "end": 3111.0, "text": " Yes. So it's probably possible.", "tokens": [50364, 286, 914, 11, 286, 519, 8659, 291, 393, 291, 393, 519, 295, 11671, 411, 420, 364, 15236, 411, 293, 13, 50764, 50764, 1079, 13, 407, 309, 311, 1391, 1944, 13, 51014, 51014, 865, 11, 286, 362, 281, 519, 466, 300, 13, 51214, 51214, 2305, 341, 307, 534, 1880, 307, 300, 6828, 366, 2969, 1108, 78, 3742, 570, 291, 393, 10432, 732, 6828, 365, 2445, 12686, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12345033373151507, "compression_ratio": 1.6229508196721312, "no_caption_prob": 1.9525225070538e-05}, {"id": 798, "seek": 309800, "start": 3111.0, "end": 3115.0, "text": " Yeah, I have to think about that.", "tokens": [50364, 286, 914, 11, 286, 519, 8659, 291, 393, 291, 393, 519, 295, 11671, 411, 420, 364, 15236, 411, 293, 13, 50764, 50764, 1079, 13, 407, 309, 311, 1391, 1944, 13, 51014, 51014, 865, 11, 286, 362, 281, 519, 466, 300, 13, 51214, 51214, 2305, 341, 307, 534, 1880, 307, 300, 6828, 366, 2969, 1108, 78, 3742, 570, 291, 393, 10432, 732, 6828, 365, 2445, 12686, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12345033373151507, "compression_ratio": 1.6229508196721312, "no_caption_prob": 1.9525225070538e-05}, {"id": 799, "seek": 309800, "start": 3115.0, "end": 3125.0, "text": " Where this is really interesting is that functions are themselves monoids because you can combine two functions with function composition.", "tokens": [50364, 286, 914, 11, 286, 519, 8659, 291, 393, 291, 393, 519, 295, 11671, 411, 420, 364, 15236, 411, 293, 13, 50764, 50764, 1079, 13, 407, 309, 311, 1391, 1944, 13, 51014, 51014, 865, 11, 286, 362, 281, 519, 466, 300, 13, 51214, 51214, 2305, 341, 307, 534, 1880, 307, 300, 6828, 366, 2969, 1108, 78, 3742, 570, 291, 393, 10432, 732, 6828, 365, 2445, 12686, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12345033373151507, "compression_ratio": 1.6229508196721312, "no_caption_prob": 1.9525225070538e-05}, {"id": 800, "seek": 312500, "start": 3125.0, "end": 3130.0, "text": " Right. And you can combine them with identity.", "tokens": [50364, 1779, 13, 400, 291, 393, 10432, 552, 365, 6575, 13, 50614, 50614, 1079, 13, 400, 286, 600, 767, 1143, 341, 322, 13, 50864, 50864, 682, 1186, 11, 341, 307, 406, 754, 411, 257, 11745, 9410, 551, 13, 50964, 50964, 639, 307, 257, 19907, 1716, 13, 51064, 51064, 400, 286, 632, 281, 360, 341, 3997, 3164, 1254, 365, 257, 3840, 295, 3164, 9834, 13, 51364, 51364, 400, 264, 636, 286, 1116, 2049, 5039, 341, 294, 19907, 390, 445, 411, 257, 3840, 295, 411, 498, 1646, 12363, 411, 498, 341, 13075, 307, 456, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11910111705462138, "compression_ratio": 1.662162162162162, "no_caption_prob": 1.078317109204363e-05}, {"id": 801, "seek": 312500, "start": 3130.0, "end": 3135.0, "text": " Yes. And I've actually used this on.", "tokens": [50364, 1779, 13, 400, 291, 393, 10432, 552, 365, 6575, 13, 50614, 50614, 1079, 13, 400, 286, 600, 767, 1143, 341, 322, 13, 50864, 50864, 682, 1186, 11, 341, 307, 406, 754, 411, 257, 11745, 9410, 551, 13, 50964, 50964, 639, 307, 257, 19907, 1716, 13, 51064, 51064, 400, 286, 632, 281, 360, 341, 3997, 3164, 1254, 365, 257, 3840, 295, 3164, 9834, 13, 51364, 51364, 400, 264, 636, 286, 1116, 2049, 5039, 341, 294, 19907, 390, 445, 411, 257, 3840, 295, 411, 498, 1646, 12363, 411, 498, 341, 13075, 307, 456, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11910111705462138, "compression_ratio": 1.662162162162162, "no_caption_prob": 1.078317109204363e-05}, {"id": 802, "seek": 312500, "start": 3135.0, "end": 3137.0, "text": " In fact, this is not even like a functional programming thing.", "tokens": [50364, 1779, 13, 400, 291, 393, 10432, 552, 365, 6575, 13, 50614, 50614, 1079, 13, 400, 286, 600, 767, 1143, 341, 322, 13, 50864, 50864, 682, 1186, 11, 341, 307, 406, 754, 411, 257, 11745, 9410, 551, 13, 50964, 50964, 639, 307, 257, 19907, 1716, 13, 51064, 51064, 400, 286, 632, 281, 360, 341, 3997, 3164, 1254, 365, 257, 3840, 295, 3164, 9834, 13, 51364, 51364, 400, 264, 636, 286, 1116, 2049, 5039, 341, 294, 19907, 390, 445, 411, 257, 3840, 295, 411, 498, 1646, 12363, 411, 498, 341, 13075, 307, 456, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11910111705462138, "compression_ratio": 1.662162162162162, "no_caption_prob": 1.078317109204363e-05}, {"id": 803, "seek": 312500, "start": 3137.0, "end": 3139.0, "text": " This is a Ruby project.", "tokens": [50364, 1779, 13, 400, 291, 393, 10432, 552, 365, 6575, 13, 50614, 50614, 1079, 13, 400, 286, 600, 767, 1143, 341, 322, 13, 50864, 50864, 682, 1186, 11, 341, 307, 406, 754, 411, 257, 11745, 9410, 551, 13, 50964, 50964, 639, 307, 257, 19907, 1716, 13, 51064, 51064, 400, 286, 632, 281, 360, 341, 3997, 3164, 1254, 365, 257, 3840, 295, 3164, 9834, 13, 51364, 51364, 400, 264, 636, 286, 1116, 2049, 5039, 341, 294, 19907, 390, 445, 411, 257, 3840, 295, 411, 498, 1646, 12363, 411, 498, 341, 13075, 307, 456, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11910111705462138, "compression_ratio": 1.662162162162162, "no_caption_prob": 1.078317109204363e-05}, {"id": 804, "seek": 312500, "start": 3139.0, "end": 3145.0, "text": " And I had to do this complex search form with a bunch of search parameters.", "tokens": [50364, 1779, 13, 400, 291, 393, 10432, 552, 365, 6575, 13, 50614, 50614, 1079, 13, 400, 286, 600, 767, 1143, 341, 322, 13, 50864, 50864, 682, 1186, 11, 341, 307, 406, 754, 411, 257, 11745, 9410, 551, 13, 50964, 50964, 639, 307, 257, 19907, 1716, 13, 51064, 51064, 400, 286, 632, 281, 360, 341, 3997, 3164, 1254, 365, 257, 3840, 295, 3164, 9834, 13, 51364, 51364, 400, 264, 636, 286, 1116, 2049, 5039, 341, 294, 19907, 390, 445, 411, 257, 3840, 295, 411, 498, 1646, 12363, 411, 498, 341, 13075, 307, 456, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11910111705462138, "compression_ratio": 1.662162162162162, "no_caption_prob": 1.078317109204363e-05}, {"id": 805, "seek": 312500, "start": 3145.0, "end": 3152.0, "text": " And the way I'd often solve this in Ruby was just like a bunch of like if else statements like if this parameter is there,", "tokens": [50364, 1779, 13, 400, 291, 393, 10432, 552, 365, 6575, 13, 50614, 50614, 1079, 13, 400, 286, 600, 767, 1143, 341, 322, 13, 50864, 50864, 682, 1186, 11, 341, 307, 406, 754, 411, 257, 11745, 9410, 551, 13, 50964, 50964, 639, 307, 257, 19907, 1716, 13, 51064, 51064, 400, 286, 632, 281, 360, 341, 3997, 3164, 1254, 365, 257, 3840, 295, 3164, 9834, 13, 51364, 51364, 400, 264, 636, 286, 1116, 2049, 5039, 341, 294, 19907, 390, 445, 411, 257, 3840, 295, 411, 498, 1646, 12363, 411, 498, 341, 13075, 307, 456, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11910111705462138, "compression_ratio": 1.662162162162162, "no_caption_prob": 1.078317109204363e-05}, {"id": 806, "seek": 315200, "start": 3152.0, "end": 3158.0, "text": " try to filter your results through this way. But then like all the combinations get really weird and it gets really messy.", "tokens": [50364, 853, 281, 6608, 428, 3542, 807, 341, 636, 13, 583, 550, 411, 439, 264, 21267, 483, 534, 3657, 293, 309, 2170, 534, 16191, 13, 50664, 50664, 407, 2602, 11, 437, 286, 4590, 493, 884, 390, 4084, 257, 3840, 295, 14581, 6565, 11, 597, 366, 291, 393, 519, 295, 552, 1920, 411, 6828, 11, 51114, 51114, 457, 436, 9651, 322, 264, 8149, 293, 1027, 552, 10199, 712, 13, 51364, 51364, 400, 550, 2361, 322, 264, 9834, 294, 264, 12905, 11, 286, 576, 445, 7690, 257, 3840, 295, 613, 293, 550, 4860, 807, 552, 281, 10432, 552, 439, 1214, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07421043807385015, "compression_ratio": 1.6891385767790261, "no_caption_prob": 1.777775469236076e-05}, {"id": 807, "seek": 315200, "start": 3158.0, "end": 3167.0, "text": " So instead, what I ended up doing was creating a bunch of query objects, which are you can think of them almost like functions,", "tokens": [50364, 853, 281, 6608, 428, 3542, 807, 341, 636, 13, 583, 550, 411, 439, 264, 21267, 483, 534, 3657, 293, 309, 2170, 534, 16191, 13, 50664, 50664, 407, 2602, 11, 437, 286, 4590, 493, 884, 390, 4084, 257, 3840, 295, 14581, 6565, 11, 597, 366, 291, 393, 519, 295, 552, 1920, 411, 6828, 11, 51114, 51114, 457, 436, 9651, 322, 264, 8149, 293, 1027, 552, 10199, 712, 13, 51364, 51364, 400, 550, 2361, 322, 264, 9834, 294, 264, 12905, 11, 286, 576, 445, 7690, 257, 3840, 295, 613, 293, 550, 4860, 807, 552, 281, 10432, 552, 439, 1214, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07421043807385015, "compression_ratio": 1.6891385767790261, "no_caption_prob": 1.777775469236076e-05}, {"id": 808, "seek": 315200, "start": 3167.0, "end": 3172.0, "text": " but they operate on the database and made them composable.", "tokens": [50364, 853, 281, 6608, 428, 3542, 807, 341, 636, 13, 583, 550, 411, 439, 264, 21267, 483, 534, 3657, 293, 309, 2170, 534, 16191, 13, 50664, 50664, 407, 2602, 11, 437, 286, 4590, 493, 884, 390, 4084, 257, 3840, 295, 14581, 6565, 11, 597, 366, 291, 393, 519, 295, 552, 1920, 411, 6828, 11, 51114, 51114, 457, 436, 9651, 322, 264, 8149, 293, 1027, 552, 10199, 712, 13, 51364, 51364, 400, 550, 2361, 322, 264, 9834, 294, 264, 12905, 11, 286, 576, 445, 7690, 257, 3840, 295, 613, 293, 550, 4860, 807, 552, 281, 10432, 552, 439, 1214, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07421043807385015, "compression_ratio": 1.6891385767790261, "no_caption_prob": 1.777775469236076e-05}, {"id": 809, "seek": 315200, "start": 3172.0, "end": 3180.0, "text": " And then based on the parameters in the URL, I would just construct a bunch of these and then fold through them to combine them all together,", "tokens": [50364, 853, 281, 6608, 428, 3542, 807, 341, 636, 13, 583, 550, 411, 439, 264, 21267, 483, 534, 3657, 293, 309, 2170, 534, 16191, 13, 50664, 50664, 407, 2602, 11, 437, 286, 4590, 493, 884, 390, 4084, 257, 3840, 295, 14581, 6565, 11, 597, 366, 291, 393, 519, 295, 552, 1920, 411, 6828, 11, 51114, 51114, 457, 436, 9651, 322, 264, 8149, 293, 1027, 552, 10199, 712, 13, 51364, 51364, 400, 550, 2361, 322, 264, 9834, 294, 264, 12905, 11, 286, 576, 445, 7690, 257, 3840, 295, 613, 293, 550, 4860, 807, 552, 281, 10432, 552, 439, 1214, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07421043807385015, "compression_ratio": 1.6891385767790261, "no_caption_prob": 1.777775469236076e-05}, {"id": 810, "seek": 318000, "start": 3180.0, "end": 3187.0, "text": " effectively just to compose them with the empty query as my base value.", "tokens": [50364, 8659, 445, 281, 35925, 552, 365, 264, 6707, 14581, 382, 452, 3096, 2158, 13, 50714, 50714, 663, 311, 577, 286, 3094, 493, 452, 3164, 13, 50864, 50864, 1711, 264, 565, 11, 286, 994, 380, 458, 466, 1108, 17079, 13, 286, 994, 380, 534, 458, 300, 709, 466, 25335, 754, 13, 51114, 51114, 467, 445, 733, 295, 2732, 484, 13, 583, 924, 1780, 11, 562, 286, 3264, 466, 1108, 17079, 11, 286, 390, 411, 11, 1954, 11, 300, 411, 534, 1627, 3164, 551, 286, 630, 294, 257, 48526, 1716, 1564, 13, 51514, 51514, 663, 390, 1108, 17079, 1804, 25335, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10067574028829926, "compression_ratio": 1.6324786324786325, "no_caption_prob": 3.785266471822979e-06}, {"id": 811, "seek": 318000, "start": 3187.0, "end": 3190.0, "text": " That's how I built up my search.", "tokens": [50364, 8659, 445, 281, 35925, 552, 365, 264, 6707, 14581, 382, 452, 3096, 2158, 13, 50714, 50714, 663, 311, 577, 286, 3094, 493, 452, 3164, 13, 50864, 50864, 1711, 264, 565, 11, 286, 994, 380, 458, 466, 1108, 17079, 13, 286, 994, 380, 534, 458, 300, 709, 466, 25335, 754, 13, 51114, 51114, 467, 445, 733, 295, 2732, 484, 13, 583, 924, 1780, 11, 562, 286, 3264, 466, 1108, 17079, 11, 286, 390, 411, 11, 1954, 11, 300, 411, 534, 1627, 3164, 551, 286, 630, 294, 257, 48526, 1716, 1564, 13, 51514, 51514, 663, 390, 1108, 17079, 1804, 25335, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10067574028829926, "compression_ratio": 1.6324786324786325, "no_caption_prob": 3.785266471822979e-06}, {"id": 812, "seek": 318000, "start": 3190.0, "end": 3195.0, "text": " At the time, I didn't know about monoid. I didn't really know that much about folding even.", "tokens": [50364, 8659, 445, 281, 35925, 552, 365, 264, 6707, 14581, 382, 452, 3096, 2158, 13, 50714, 50714, 663, 311, 577, 286, 3094, 493, 452, 3164, 13, 50864, 50864, 1711, 264, 565, 11, 286, 994, 380, 458, 466, 1108, 17079, 13, 286, 994, 380, 534, 458, 300, 709, 466, 25335, 754, 13, 51114, 51114, 467, 445, 733, 295, 2732, 484, 13, 583, 924, 1780, 11, 562, 286, 3264, 466, 1108, 17079, 11, 286, 390, 411, 11, 1954, 11, 300, 411, 534, 1627, 3164, 551, 286, 630, 294, 257, 48526, 1716, 1564, 13, 51514, 51514, 663, 390, 1108, 17079, 1804, 25335, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10067574028829926, "compression_ratio": 1.6324786324786325, "no_caption_prob": 3.785266471822979e-06}, {"id": 813, "seek": 318000, "start": 3195.0, "end": 3203.0, "text": " It just kind of worked out. But years later, when I learned about monoid, I was like, oh, that like really cool search thing I did in a Rails project once.", "tokens": [50364, 8659, 445, 281, 35925, 552, 365, 264, 6707, 14581, 382, 452, 3096, 2158, 13, 50714, 50714, 663, 311, 577, 286, 3094, 493, 452, 3164, 13, 50864, 50864, 1711, 264, 565, 11, 286, 994, 380, 458, 466, 1108, 17079, 13, 286, 994, 380, 534, 458, 300, 709, 466, 25335, 754, 13, 51114, 51114, 467, 445, 733, 295, 2732, 484, 13, 583, 924, 1780, 11, 562, 286, 3264, 466, 1108, 17079, 11, 286, 390, 411, 11, 1954, 11, 300, 411, 534, 1627, 3164, 551, 286, 630, 294, 257, 48526, 1716, 1564, 13, 51514, 51514, 663, 390, 1108, 17079, 1804, 25335, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10067574028829926, "compression_ratio": 1.6324786324786325, "no_caption_prob": 3.785266471822979e-06}, {"id": 814, "seek": 318000, "start": 3203.0, "end": 3205.0, "text": " That was monoid plus folding.", "tokens": [50364, 8659, 445, 281, 35925, 552, 365, 264, 6707, 14581, 382, 452, 3096, 2158, 13, 50714, 50714, 663, 311, 577, 286, 3094, 493, 452, 3164, 13, 50864, 50864, 1711, 264, 565, 11, 286, 994, 380, 458, 466, 1108, 17079, 13, 286, 994, 380, 534, 458, 300, 709, 466, 25335, 754, 13, 51114, 51114, 467, 445, 733, 295, 2732, 484, 13, 583, 924, 1780, 11, 562, 286, 3264, 466, 1108, 17079, 11, 286, 390, 411, 11, 1954, 11, 300, 411, 534, 1627, 3164, 551, 286, 630, 294, 257, 48526, 1716, 1564, 13, 51514, 51514, 663, 390, 1108, 17079, 1804, 25335, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10067574028829926, "compression_ratio": 1.6324786324786325, "no_caption_prob": 3.785266471822979e-06}, {"id": 815, "seek": 320500, "start": 3205.0, "end": 3210.0, "text": " It's worth noting that folding doesn't always have to be on a monoid. I think that's a common misconception.", "tokens": [50364, 467, 311, 3163, 26801, 300, 25335, 1177, 380, 1009, 362, 281, 312, 322, 257, 1108, 17079, 13, 286, 519, 300, 311, 257, 2689, 41350, 13, 50614, 50614, 509, 393, 4860, 721, 300, 366, 406, 1108, 17079, 570, 456, 366, 512, 7705, 300, 500, 380, 1524, 264, 1108, 17079, 6064, 689, 428, 3096, 1389, 1943, 380, 4725, 264, 6575, 13, 51064, 51064, 400, 370, 25335, 307, 257, 13227, 992, 295, 721, 11, 457, 1108, 17079, 366, 1009, 4860, 712, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.07830429651651037, "compression_ratio": 1.6618357487922706, "no_caption_prob": 5.475615034811199e-05}, {"id": 816, "seek": 320500, "start": 3210.0, "end": 3219.0, "text": " You can fold things that are not monoid because there are some operations that don't follow the monoid laws where your base case isn't necessarily the identity.", "tokens": [50364, 467, 311, 3163, 26801, 300, 25335, 1177, 380, 1009, 362, 281, 312, 322, 257, 1108, 17079, 13, 286, 519, 300, 311, 257, 2689, 41350, 13, 50614, 50614, 509, 393, 4860, 721, 300, 366, 406, 1108, 17079, 570, 456, 366, 512, 7705, 300, 500, 380, 1524, 264, 1108, 17079, 6064, 689, 428, 3096, 1389, 1943, 380, 4725, 264, 6575, 13, 51064, 51064, 400, 370, 25335, 307, 257, 13227, 992, 295, 721, 11, 457, 1108, 17079, 366, 1009, 4860, 712, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.07830429651651037, "compression_ratio": 1.6618357487922706, "no_caption_prob": 5.475615034811199e-05}, {"id": 817, "seek": 320500, "start": 3219.0, "end": 3223.0, "text": " And so folding is a broader set of things, but monoid are always foldable.", "tokens": [50364, 467, 311, 3163, 26801, 300, 25335, 1177, 380, 1009, 362, 281, 312, 322, 257, 1108, 17079, 13, 286, 519, 300, 311, 257, 2689, 41350, 13, 50614, 50614, 509, 393, 4860, 721, 300, 366, 406, 1108, 17079, 570, 456, 366, 512, 7705, 300, 500, 380, 1524, 264, 1108, 17079, 6064, 689, 428, 3096, 1389, 1943, 380, 4725, 264, 6575, 13, 51064, 51064, 400, 370, 25335, 307, 257, 13227, 992, 295, 721, 11, 457, 1108, 17079, 366, 1009, 4860, 712, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.07830429651651037, "compression_ratio": 1.6618357487922706, "no_caption_prob": 5.475615034811199e-05}, {"id": 818, "seek": 322300, "start": 3223.0, "end": 3238.0, "text": " Yeah. So I'm currently thinking that if you provide a functor, so if you provide a map function and it is a monoid, would you say it is monoid?", "tokens": [50364, 865, 13, 407, 286, 478, 4362, 1953, 300, 498, 291, 2893, 257, 1019, 1672, 11, 370, 498, 291, 2893, 257, 4471, 2445, 293, 309, 307, 257, 1108, 17079, 11, 576, 291, 584, 309, 307, 35624, 327, 30, 51114, 51114, 4894, 13, 865, 11, 321, 393, 584, 309, 311, 35624, 327, 13, 51214, 51214, 865, 13, 407, 498, 309, 307, 257, 1108, 17079, 293, 309, 575, 257, 4471, 2445, 11, 370, 309, 311, 1019, 1672, 11, 550, 291, 393, 4445, 411, 4471, 5407, 9029, 11, 558, 30, 51714, 51714, 876, 11, 300, 311, 1880, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.19775721491599568, "compression_ratio": 1.7382198952879582, "no_caption_prob": 0.00013764831237494946}, {"id": 819, "seek": 322300, "start": 3238.0, "end": 3240.0, "text": " Sure. Yeah, we can say it's monoid.", "tokens": [50364, 865, 13, 407, 286, 478, 4362, 1953, 300, 498, 291, 2893, 257, 1019, 1672, 11, 370, 498, 291, 2893, 257, 4471, 2445, 293, 309, 307, 257, 1108, 17079, 11, 576, 291, 584, 309, 307, 35624, 327, 30, 51114, 51114, 4894, 13, 865, 11, 321, 393, 584, 309, 311, 35624, 327, 13, 51214, 51214, 865, 13, 407, 498, 309, 307, 257, 1108, 17079, 293, 309, 575, 257, 4471, 2445, 11, 370, 309, 311, 1019, 1672, 11, 550, 291, 393, 4445, 411, 4471, 5407, 9029, 11, 558, 30, 51714, 51714, 876, 11, 300, 311, 1880, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.19775721491599568, "compression_ratio": 1.7382198952879582, "no_caption_prob": 0.00013764831237494946}, {"id": 820, "seek": 322300, "start": 3240.0, "end": 3250.0, "text": " Yeah. So if it is a monoid and it has a map function, so it's functor, then you can implement like map reduce strategies, right?", "tokens": [50364, 865, 13, 407, 286, 478, 4362, 1953, 300, 498, 291, 2893, 257, 1019, 1672, 11, 370, 498, 291, 2893, 257, 4471, 2445, 293, 309, 307, 257, 1108, 17079, 11, 576, 291, 584, 309, 307, 35624, 327, 30, 51114, 51114, 4894, 13, 865, 11, 321, 393, 584, 309, 311, 35624, 327, 13, 51214, 51214, 865, 13, 407, 498, 309, 307, 257, 1108, 17079, 293, 309, 575, 257, 4471, 2445, 11, 370, 309, 311, 1019, 1672, 11, 550, 291, 393, 4445, 411, 4471, 5407, 9029, 11, 558, 30, 51714, 51714, 876, 11, 300, 311, 1880, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.19775721491599568, "compression_ratio": 1.7382198952879582, "no_caption_prob": 0.00013764831237494946}, {"id": 821, "seek": 322300, "start": 3250.0, "end": 3251.0, "text": " Oh, that's interesting.", "tokens": [50364, 865, 13, 407, 286, 478, 4362, 1953, 300, 498, 291, 2893, 257, 1019, 1672, 11, 370, 498, 291, 2893, 257, 4471, 2445, 293, 309, 307, 257, 1108, 17079, 11, 576, 291, 584, 309, 307, 35624, 327, 30, 51114, 51114, 4894, 13, 865, 11, 321, 393, 584, 309, 311, 35624, 327, 13, 51214, 51214, 865, 13, 407, 498, 309, 307, 257, 1108, 17079, 293, 309, 575, 257, 4471, 2445, 11, 370, 309, 311, 1019, 1672, 11, 550, 291, 393, 4445, 411, 4471, 5407, 9029, 11, 558, 30, 51714, 51714, 876, 11, 300, 311, 1880, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.19775721491599568, "compression_ratio": 1.7382198952879582, "no_caption_prob": 0.00013764831237494946}, {"id": 822, "seek": 325100, "start": 3251.0, "end": 3271.0, "text": " And now I'm realizing that in Elm Review, when I ask authors to create the rule, I ask them to provide something that actually looks like give me an initial value, kind of a neutral value.", "tokens": [50364, 400, 586, 286, 478, 16734, 300, 294, 2699, 76, 19954, 11, 562, 286, 1029, 16552, 281, 1884, 264, 4978, 11, 286, 1029, 552, 281, 2893, 746, 300, 767, 1542, 411, 976, 385, 364, 5883, 2158, 11, 733, 295, 257, 10598, 2158, 13, 51364, 51364, 1171, 264, 4319, 30, 51464, 51464, 865, 11, 337, 264, 4319, 11, 264, 1716, 4319, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1494811773300171, "compression_ratio": 1.509090909090909, "no_caption_prob": 0.00010888915130635723}, {"id": 823, "seek": 325100, "start": 3271.0, "end": 3273.0, "text": " For the context?", "tokens": [50364, 400, 586, 286, 478, 16734, 300, 294, 2699, 76, 19954, 11, 562, 286, 1029, 16552, 281, 1884, 264, 4978, 11, 286, 1029, 552, 281, 2893, 746, 300, 767, 1542, 411, 976, 385, 364, 5883, 2158, 11, 733, 295, 257, 10598, 2158, 13, 51364, 51364, 1171, 264, 4319, 30, 51464, 51464, 865, 11, 337, 264, 4319, 11, 264, 1716, 4319, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1494811773300171, "compression_ratio": 1.509090909090909, "no_caption_prob": 0.00010888915130635723}, {"id": 824, "seek": 325100, "start": 3273.0, "end": 3275.0, "text": " Yeah, for the context, the project context.", "tokens": [50364, 400, 586, 286, 478, 16734, 300, 294, 2699, 76, 19954, 11, 562, 286, 1029, 16552, 281, 1884, 264, 4978, 11, 286, 1029, 552, 281, 2893, 746, 300, 767, 1542, 411, 976, 385, 364, 5883, 2158, 11, 733, 295, 257, 10598, 2158, 13, 51364, 51364, 1171, 264, 4319, 30, 51464, 51464, 865, 11, 337, 264, 4319, 11, 264, 1716, 4319, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1494811773300171, "compression_ratio": 1.509090909090909, "no_caption_prob": 0.00010888915130635723}, {"id": 825, "seek": 327500, "start": 3275.0, "end": 3285.0, "text": " And I also ask them to fold them, a way to fold them. And internally, then I do like map reduce to combine these together.", "tokens": [50364, 400, 286, 611, 1029, 552, 281, 4860, 552, 11, 257, 636, 281, 4860, 552, 13, 400, 19501, 11, 550, 286, 360, 411, 4471, 5407, 281, 10432, 613, 1214, 13, 50864, 50864, 407, 3866, 1716, 30628, 666, 472, 1716, 4319, 11, 597, 4045, 385, 281, 360, 1238, 297, 37177, 721, 833, 264, 13376, 13, 51214, 51214, 407, 286, 519, 341, 815, 312, 257, 707, 9612, 365, 264, 27575, 510, 13, 51364, 51364, 1133, 286, 478, 1417, 466, 300, 35624, 3742, 393, 312, 23940, 11, 309, 311, 406, 264, 1108, 17079, 2564, 300, 393, 312, 23940, 13, 51614, 51614, 467, 311, 257, 5765, 295, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1098731623755561, "compression_ratio": 1.7, "no_caption_prob": 6.013612437527627e-05}, {"id": 826, "seek": 327500, "start": 3285.0, "end": 3292.0, "text": " So multiple project contexts into one project context, which allows me to do pretty nifty things under the hood.", "tokens": [50364, 400, 286, 611, 1029, 552, 281, 4860, 552, 11, 257, 636, 281, 4860, 552, 13, 400, 19501, 11, 550, 286, 360, 411, 4471, 5407, 281, 10432, 613, 1214, 13, 50864, 50864, 407, 3866, 1716, 30628, 666, 472, 1716, 4319, 11, 597, 4045, 385, 281, 360, 1238, 297, 37177, 721, 833, 264, 13376, 13, 51214, 51214, 407, 286, 519, 341, 815, 312, 257, 707, 9612, 365, 264, 27575, 510, 13, 51364, 51364, 1133, 286, 478, 1417, 466, 300, 35624, 3742, 393, 312, 23940, 11, 309, 311, 406, 264, 1108, 17079, 2564, 300, 393, 312, 23940, 13, 51614, 51614, 467, 311, 257, 5765, 295, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1098731623755561, "compression_ratio": 1.7, "no_caption_prob": 6.013612437527627e-05}, {"id": 827, "seek": 327500, "start": 3292.0, "end": 3295.0, "text": " So I think this may be a little loose with the terminology here.", "tokens": [50364, 400, 286, 611, 1029, 552, 281, 4860, 552, 11, 257, 636, 281, 4860, 552, 13, 400, 19501, 11, 550, 286, 360, 411, 4471, 5407, 281, 10432, 613, 1214, 13, 50864, 50864, 407, 3866, 1716, 30628, 666, 472, 1716, 4319, 11, 597, 4045, 385, 281, 360, 1238, 297, 37177, 721, 833, 264, 13376, 13, 51214, 51214, 407, 286, 519, 341, 815, 312, 257, 707, 9612, 365, 264, 27575, 510, 13, 51364, 51364, 1133, 286, 478, 1417, 466, 300, 35624, 3742, 393, 312, 23940, 11, 309, 311, 406, 264, 1108, 17079, 2564, 300, 393, 312, 23940, 13, 51614, 51614, 467, 311, 257, 5765, 295, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1098731623755561, "compression_ratio": 1.7, "no_caption_prob": 6.013612437527627e-05}, {"id": 828, "seek": 327500, "start": 3295.0, "end": 3300.0, "text": " When I'm talking about that monoids can be folded, it's not the monoid itself that can be folded.", "tokens": [50364, 400, 286, 611, 1029, 552, 281, 4860, 552, 11, 257, 636, 281, 4860, 552, 13, 400, 19501, 11, 550, 286, 360, 411, 4471, 5407, 281, 10432, 613, 1214, 13, 50864, 50864, 407, 3866, 1716, 30628, 666, 472, 1716, 4319, 11, 597, 4045, 385, 281, 360, 1238, 297, 37177, 721, 833, 264, 13376, 13, 51214, 51214, 407, 286, 519, 341, 815, 312, 257, 707, 9612, 365, 264, 27575, 510, 13, 51364, 51364, 1133, 286, 478, 1417, 466, 300, 35624, 3742, 393, 312, 23940, 11, 309, 311, 406, 264, 1108, 17079, 2564, 300, 393, 312, 23940, 13, 51614, 51614, 467, 311, 257, 5765, 295, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1098731623755561, "compression_ratio": 1.7, "no_caption_prob": 6.013612437527627e-05}, {"id": 829, "seek": 327500, "start": 3300.0, "end": 3302.0, "text": " It's a collection of them.", "tokens": [50364, 400, 286, 611, 1029, 552, 281, 4860, 552, 11, 257, 636, 281, 4860, 552, 13, 400, 19501, 11, 550, 286, 360, 411, 4471, 5407, 281, 10432, 613, 1214, 13, 50864, 50864, 407, 3866, 1716, 30628, 666, 472, 1716, 4319, 11, 597, 4045, 385, 281, 360, 1238, 297, 37177, 721, 833, 264, 13376, 13, 51214, 51214, 407, 286, 519, 341, 815, 312, 257, 707, 9612, 365, 264, 27575, 510, 13, 51364, 51364, 1133, 286, 478, 1417, 466, 300, 35624, 3742, 393, 312, 23940, 11, 309, 311, 406, 264, 1108, 17079, 2564, 300, 393, 312, 23940, 13, 51614, 51614, 467, 311, 257, 5765, 295, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1098731623755561, "compression_ratio": 1.7, "no_caption_prob": 6.013612437527627e-05}, {"id": 830, "seek": 330200, "start": 3302.0, "end": 3307.0, "text": " So, yes, numbers are not foldable, but a list of numbers is foldable.", "tokens": [50364, 407, 11, 2086, 11, 3547, 366, 406, 4860, 712, 11, 457, 257, 1329, 295, 3547, 307, 4860, 712, 13, 50614, 50614, 865, 11, 732, 3547, 366, 4860, 712, 1214, 666, 472, 13, 50814, 50814, 1042, 11, 732, 3547, 393, 312, 9354, 1108, 17079, 379, 365, 4500, 13, 51014, 51014, 316, 1329, 295, 3547, 393, 312, 23940, 1228, 264, 4500, 1108, 17079, 420, 23940, 365, 264, 27290, 1108, 17079, 420, 4461, 291, 528, 11, 24123, 472, 291, 528, 281, 764, 13, 51514, 51514, 1779, 13, 18600, 300, 291, 362, 364, 6916, 300, 4045, 291, 281, 10432, 552, 11, 291, 393, 4860, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09016579502033738, "compression_ratio": 1.8839285714285714, "no_caption_prob": 1.6442259948235005e-05}, {"id": 831, "seek": 330200, "start": 3307.0, "end": 3311.0, "text": " Yeah, two numbers are foldable together into one.", "tokens": [50364, 407, 11, 2086, 11, 3547, 366, 406, 4860, 712, 11, 457, 257, 1329, 295, 3547, 307, 4860, 712, 13, 50614, 50614, 865, 11, 732, 3547, 366, 4860, 712, 1214, 666, 472, 13, 50814, 50814, 1042, 11, 732, 3547, 393, 312, 9354, 1108, 17079, 379, 365, 4500, 13, 51014, 51014, 316, 1329, 295, 3547, 393, 312, 23940, 1228, 264, 4500, 1108, 17079, 420, 23940, 365, 264, 27290, 1108, 17079, 420, 4461, 291, 528, 11, 24123, 472, 291, 528, 281, 764, 13, 51514, 51514, 1779, 13, 18600, 300, 291, 362, 364, 6916, 300, 4045, 291, 281, 10432, 552, 11, 291, 393, 4860, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09016579502033738, "compression_ratio": 1.8839285714285714, "no_caption_prob": 1.6442259948235005e-05}, {"id": 832, "seek": 330200, "start": 3311.0, "end": 3315.0, "text": " Well, two numbers can be combined monoidally with addition.", "tokens": [50364, 407, 11, 2086, 11, 3547, 366, 406, 4860, 712, 11, 457, 257, 1329, 295, 3547, 307, 4860, 712, 13, 50614, 50614, 865, 11, 732, 3547, 366, 4860, 712, 1214, 666, 472, 13, 50814, 50814, 1042, 11, 732, 3547, 393, 312, 9354, 1108, 17079, 379, 365, 4500, 13, 51014, 51014, 316, 1329, 295, 3547, 393, 312, 23940, 1228, 264, 4500, 1108, 17079, 420, 23940, 365, 264, 27290, 1108, 17079, 420, 4461, 291, 528, 11, 24123, 472, 291, 528, 281, 764, 13, 51514, 51514, 1779, 13, 18600, 300, 291, 362, 364, 6916, 300, 4045, 291, 281, 10432, 552, 11, 291, 393, 4860, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09016579502033738, "compression_ratio": 1.8839285714285714, "no_caption_prob": 1.6442259948235005e-05}, {"id": 833, "seek": 330200, "start": 3315.0, "end": 3325.0, "text": " A list of numbers can be folded using the addition monoid or folded with the multiplication monoid or however you want, whichever one you want to use.", "tokens": [50364, 407, 11, 2086, 11, 3547, 366, 406, 4860, 712, 11, 457, 257, 1329, 295, 3547, 307, 4860, 712, 13, 50614, 50614, 865, 11, 732, 3547, 366, 4860, 712, 1214, 666, 472, 13, 50814, 50814, 1042, 11, 732, 3547, 393, 312, 9354, 1108, 17079, 379, 365, 4500, 13, 51014, 51014, 316, 1329, 295, 3547, 393, 312, 23940, 1228, 264, 4500, 1108, 17079, 420, 23940, 365, 264, 27290, 1108, 17079, 420, 4461, 291, 528, 11, 24123, 472, 291, 528, 281, 764, 13, 51514, 51514, 1779, 13, 18600, 300, 291, 362, 364, 6916, 300, 4045, 291, 281, 10432, 552, 11, 291, 393, 4860, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09016579502033738, "compression_ratio": 1.8839285714285714, "no_caption_prob": 1.6442259948235005e-05}, {"id": 834, "seek": 330200, "start": 3325.0, "end": 3330.0, "text": " Right. Given that you have an operation that allows you to combine them, you can fold them.", "tokens": [50364, 407, 11, 2086, 11, 3547, 366, 406, 4860, 712, 11, 457, 257, 1329, 295, 3547, 307, 4860, 712, 13, 50614, 50614, 865, 11, 732, 3547, 366, 4860, 712, 1214, 666, 472, 13, 50814, 50814, 1042, 11, 732, 3547, 393, 312, 9354, 1108, 17079, 379, 365, 4500, 13, 51014, 51014, 316, 1329, 295, 3547, 393, 312, 23940, 1228, 264, 4500, 1108, 17079, 420, 23940, 365, 264, 27290, 1108, 17079, 420, 4461, 291, 528, 11, 24123, 472, 291, 528, 281, 764, 13, 51514, 51514, 1779, 13, 18600, 300, 291, 362, 364, 6916, 300, 4045, 291, 281, 10432, 552, 11, 291, 393, 4860, 552, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09016579502033738, "compression_ratio": 1.8839285714285714, "no_caption_prob": 1.6442259948235005e-05}, {"id": 835, "seek": 333000, "start": 3330.0, "end": 3336.0, "text": " Given that you have a monoid for some values, a list of those values can be folded.", "tokens": [50364, 18600, 300, 291, 362, 257, 1108, 17079, 337, 512, 4190, 11, 257, 1329, 295, 729, 4190, 393, 312, 23940, 13, 50664, 50664, 407, 281, 428, 1365, 3071, 11, 309, 311, 428, 5765, 11, 428, 1329, 300, 311, 257, 1019, 1672, 293, 264, 4754, 294, 264, 1329, 300, 366, 35624, 3742, 13, 51064, 51064, 400, 550, 291, 393, 360, 428, 4471, 5407, 13, 51164, 51164, 865, 11, 341, 2170, 534, 4005, 1564, 291, 722, 21814, 512, 295, 613, 3755, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08027651798294251, "compression_ratio": 1.5870646766169154, "no_caption_prob": 4.75742963317316e-05}, {"id": 836, "seek": 333000, "start": 3336.0, "end": 3344.0, "text": " So to your example earlier, it's your collection, your list that's a functor and the items in the list that are monoids.", "tokens": [50364, 18600, 300, 291, 362, 257, 1108, 17079, 337, 512, 4190, 11, 257, 1329, 295, 729, 4190, 393, 312, 23940, 13, 50664, 50664, 407, 281, 428, 1365, 3071, 11, 309, 311, 428, 5765, 11, 428, 1329, 300, 311, 257, 1019, 1672, 293, 264, 4754, 294, 264, 1329, 300, 366, 35624, 3742, 13, 51064, 51064, 400, 550, 291, 393, 360, 428, 4471, 5407, 13, 51164, 51164, 865, 11, 341, 2170, 534, 4005, 1564, 291, 722, 21814, 512, 295, 613, 3755, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08027651798294251, "compression_ratio": 1.5870646766169154, "no_caption_prob": 4.75742963317316e-05}, {"id": 837, "seek": 333000, "start": 3344.0, "end": 3346.0, "text": " And then you can do your map reduce.", "tokens": [50364, 18600, 300, 291, 362, 257, 1108, 17079, 337, 512, 4190, 11, 257, 1329, 295, 729, 4190, 393, 312, 23940, 13, 50664, 50664, 407, 281, 428, 1365, 3071, 11, 309, 311, 428, 5765, 11, 428, 1329, 300, 311, 257, 1019, 1672, 293, 264, 4754, 294, 264, 1329, 300, 366, 35624, 3742, 13, 51064, 51064, 400, 550, 291, 393, 360, 428, 4471, 5407, 13, 51164, 51164, 865, 11, 341, 2170, 534, 4005, 1564, 291, 722, 21814, 512, 295, 613, 3755, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08027651798294251, "compression_ratio": 1.5870646766169154, "no_caption_prob": 4.75742963317316e-05}, {"id": 838, "seek": 333000, "start": 3346.0, "end": 3350.0, "text": " Yeah, this gets really powerful once you start noticing some of these pieces.", "tokens": [50364, 18600, 300, 291, 362, 257, 1108, 17079, 337, 512, 4190, 11, 257, 1329, 295, 729, 4190, 393, 312, 23940, 13, 50664, 50664, 407, 281, 428, 1365, 3071, 11, 309, 311, 428, 5765, 11, 428, 1329, 300, 311, 257, 1019, 1672, 293, 264, 4754, 294, 264, 1329, 300, 366, 35624, 3742, 13, 51064, 51064, 400, 550, 291, 393, 360, 428, 4471, 5407, 13, 51164, 51164, 865, 11, 341, 2170, 534, 4005, 1564, 291, 722, 21814, 512, 295, 613, 3755, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08027651798294251, "compression_ratio": 1.5870646766169154, "no_caption_prob": 4.75742963317316e-05}, {"id": 839, "seek": 335000, "start": 3350.0, "end": 3360.0, "text": " And sometimes you notice like, oh, my type could be made or is an operation that would be really nice if these things were monoids, but they're not.", "tokens": [50364, 400, 2171, 291, 3449, 411, 11, 1954, 11, 452, 2010, 727, 312, 1027, 420, 307, 364, 6916, 300, 576, 312, 534, 1481, 498, 613, 721, 645, 35624, 3742, 11, 457, 436, 434, 406, 13, 50864, 50864, 583, 611, 11, 286, 458, 300, 436, 727, 312, 498, 286, 12270, 472, 2445, 13, 51114, 51114, 400, 370, 309, 311, 411, 291, 4445, 472, 2445, 11, 550, 1203, 1646, 8804, 666, 1081, 293, 291, 393, 2464, 257, 534, 1481, 1461, 13, 51464, 51464, 1779, 13, 663, 307, 1333, 295, 264, 6643, 295, 8294, 11, 1943, 380, 309, 30, 51564, 51564, 1119, 291, 500, 380, 362, 281, 33477, 264, 5589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08594278387121253, "compression_ratio": 1.6553030303030303, "no_caption_prob": 4.1985167626990005e-05}, {"id": 840, "seek": 335000, "start": 3360.0, "end": 3365.0, "text": " But also, I know that they could be if I implemented one function.", "tokens": [50364, 400, 2171, 291, 3449, 411, 11, 1954, 11, 452, 2010, 727, 312, 1027, 420, 307, 364, 6916, 300, 576, 312, 534, 1481, 498, 613, 721, 645, 35624, 3742, 11, 457, 436, 434, 406, 13, 50864, 50864, 583, 611, 11, 286, 458, 300, 436, 727, 312, 498, 286, 12270, 472, 2445, 13, 51114, 51114, 400, 370, 309, 311, 411, 291, 4445, 472, 2445, 11, 550, 1203, 1646, 8804, 666, 1081, 293, 291, 393, 2464, 257, 534, 1481, 1461, 13, 51464, 51464, 1779, 13, 663, 307, 1333, 295, 264, 6643, 295, 8294, 11, 1943, 380, 309, 30, 51564, 51564, 1119, 291, 500, 380, 362, 281, 33477, 264, 5589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08594278387121253, "compression_ratio": 1.6553030303030303, "no_caption_prob": 4.1985167626990005e-05}, {"id": 841, "seek": 335000, "start": 3365.0, "end": 3372.0, "text": " And so it's like you implement one function, then everything else falls into place and you can write a really nice program.", "tokens": [50364, 400, 2171, 291, 3449, 411, 11, 1954, 11, 452, 2010, 727, 312, 1027, 420, 307, 364, 6916, 300, 576, 312, 534, 1481, 498, 613, 721, 645, 35624, 3742, 11, 457, 436, 434, 406, 13, 50864, 50864, 583, 611, 11, 286, 458, 300, 436, 727, 312, 498, 286, 12270, 472, 2445, 13, 51114, 51114, 400, 370, 309, 311, 411, 291, 4445, 472, 2445, 11, 550, 1203, 1646, 8804, 666, 1081, 293, 291, 393, 2464, 257, 534, 1481, 1461, 13, 51464, 51464, 1779, 13, 663, 307, 1333, 295, 264, 6643, 295, 8294, 11, 1943, 380, 309, 30, 51564, 51564, 1119, 291, 500, 380, 362, 281, 33477, 264, 5589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08594278387121253, "compression_ratio": 1.6553030303030303, "no_caption_prob": 4.1985167626990005e-05}, {"id": 842, "seek": 335000, "start": 3372.0, "end": 3374.0, "text": " Right. That is sort of the beauty of patterns, isn't it?", "tokens": [50364, 400, 2171, 291, 3449, 411, 11, 1954, 11, 452, 2010, 727, 312, 1027, 420, 307, 364, 6916, 300, 576, 312, 534, 1481, 498, 613, 721, 645, 35624, 3742, 11, 457, 436, 434, 406, 13, 50864, 50864, 583, 611, 11, 286, 458, 300, 436, 727, 312, 498, 286, 12270, 472, 2445, 13, 51114, 51114, 400, 370, 309, 311, 411, 291, 4445, 472, 2445, 11, 550, 1203, 1646, 8804, 666, 1081, 293, 291, 393, 2464, 257, 534, 1481, 1461, 13, 51464, 51464, 1779, 13, 663, 307, 1333, 295, 264, 6643, 295, 8294, 11, 1943, 380, 309, 30, 51564, 51564, 1119, 291, 500, 380, 362, 281, 33477, 264, 5589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08594278387121253, "compression_ratio": 1.6553030303030303, "no_caption_prob": 4.1985167626990005e-05}, {"id": 843, "seek": 335000, "start": 3374.0, "end": 3376.0, "text": " Is you don't have to reinvent the wheel.", "tokens": [50364, 400, 2171, 291, 3449, 411, 11, 1954, 11, 452, 2010, 727, 312, 1027, 420, 307, 364, 6916, 300, 576, 312, 534, 1481, 498, 613, 721, 645, 35624, 3742, 11, 457, 436, 434, 406, 13, 50864, 50864, 583, 611, 11, 286, 458, 300, 436, 727, 312, 498, 286, 12270, 472, 2445, 13, 51114, 51114, 400, 370, 309, 311, 411, 291, 4445, 472, 2445, 11, 550, 1203, 1646, 8804, 666, 1081, 293, 291, 393, 2464, 257, 534, 1481, 1461, 13, 51464, 51464, 1779, 13, 663, 307, 1333, 295, 264, 6643, 295, 8294, 11, 1943, 380, 309, 30, 51564, 51564, 1119, 291, 500, 380, 362, 281, 33477, 264, 5589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08594278387121253, "compression_ratio": 1.6553030303030303, "no_caption_prob": 4.1985167626990005e-05}, {"id": 844, "seek": 337600, "start": 3376.0, "end": 3382.0, "text": " It's sort of like this is going to pop up again and again and I'm going to have to think really hard.", "tokens": [50364, 467, 311, 1333, 295, 411, 341, 307, 516, 281, 1665, 493, 797, 293, 797, 293, 286, 478, 516, 281, 362, 281, 519, 534, 1152, 13, 50664, 50664, 1012, 669, 286, 516, 281, 5039, 341, 1154, 30, 50764, 50764, 400, 550, 286, 478, 516, 281, 808, 493, 365, 264, 912, 3827, 13, 50864, 50864, 759, 787, 286, 1333, 295, 7320, 300, 5102, 1101, 13, 51014, 51014, 407, 300, 307, 746, 286, 576, 411, 281, 23829, 3030, 281, 281, 312, 257, 707, 544, 1774, 292, 294, 613, 8294, 370, 300, 286, 393, 1333, 295, 2235, 552, 484, 382, 2978, 544, 293, 544, 3612, 293, 909, 552, 281, 21445, 382, 2978, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06238902775587234, "compression_ratio": 1.782258064516129, "no_caption_prob": 2.2827351131127216e-05}, {"id": 845, "seek": 337600, "start": 3382.0, "end": 3384.0, "text": " How am I going to solve this problem?", "tokens": [50364, 467, 311, 1333, 295, 411, 341, 307, 516, 281, 1665, 493, 797, 293, 797, 293, 286, 478, 516, 281, 362, 281, 519, 534, 1152, 13, 50664, 50664, 1012, 669, 286, 516, 281, 5039, 341, 1154, 30, 50764, 50764, 400, 550, 286, 478, 516, 281, 808, 493, 365, 264, 912, 3827, 13, 50864, 50864, 759, 787, 286, 1333, 295, 7320, 300, 5102, 1101, 13, 51014, 51014, 407, 300, 307, 746, 286, 576, 411, 281, 23829, 3030, 281, 281, 312, 257, 707, 544, 1774, 292, 294, 613, 8294, 370, 300, 286, 393, 1333, 295, 2235, 552, 484, 382, 2978, 544, 293, 544, 3612, 293, 909, 552, 281, 21445, 382, 2978, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06238902775587234, "compression_ratio": 1.782258064516129, "no_caption_prob": 2.2827351131127216e-05}, {"id": 846, "seek": 337600, "start": 3384.0, "end": 3386.0, "text": " And then I'm going to come up with the same solution.", "tokens": [50364, 467, 311, 1333, 295, 411, 341, 307, 516, 281, 1665, 493, 797, 293, 797, 293, 286, 478, 516, 281, 362, 281, 519, 534, 1152, 13, 50664, 50664, 1012, 669, 286, 516, 281, 5039, 341, 1154, 30, 50764, 50764, 400, 550, 286, 478, 516, 281, 808, 493, 365, 264, 912, 3827, 13, 50864, 50864, 759, 787, 286, 1333, 295, 7320, 300, 5102, 1101, 13, 51014, 51014, 407, 300, 307, 746, 286, 576, 411, 281, 23829, 3030, 281, 281, 312, 257, 707, 544, 1774, 292, 294, 613, 8294, 370, 300, 286, 393, 1333, 295, 2235, 552, 484, 382, 2978, 544, 293, 544, 3612, 293, 909, 552, 281, 21445, 382, 2978, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06238902775587234, "compression_ratio": 1.782258064516129, "no_caption_prob": 2.2827351131127216e-05}, {"id": 847, "seek": 337600, "start": 3386.0, "end": 3389.0, "text": " If only I sort of understood that pattern better.", "tokens": [50364, 467, 311, 1333, 295, 411, 341, 307, 516, 281, 1665, 493, 797, 293, 797, 293, 286, 478, 516, 281, 362, 281, 519, 534, 1152, 13, 50664, 50664, 1012, 669, 286, 516, 281, 5039, 341, 1154, 30, 50764, 50764, 400, 550, 286, 478, 516, 281, 808, 493, 365, 264, 912, 3827, 13, 50864, 50864, 759, 787, 286, 1333, 295, 7320, 300, 5102, 1101, 13, 51014, 51014, 407, 300, 307, 746, 286, 576, 411, 281, 23829, 3030, 281, 281, 312, 257, 707, 544, 1774, 292, 294, 613, 8294, 370, 300, 286, 393, 1333, 295, 2235, 552, 484, 382, 2978, 544, 293, 544, 3612, 293, 909, 552, 281, 21445, 382, 2978, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06238902775587234, "compression_ratio": 1.782258064516129, "no_caption_prob": 2.2827351131127216e-05}, {"id": 848, "seek": 337600, "start": 3389.0, "end": 3402.0, "text": " So that is something I would like to strive towards to to be a little more versed in these patterns so that I can sort of pull them out as needed more and more easily and add them to APIs as needed.", "tokens": [50364, 467, 311, 1333, 295, 411, 341, 307, 516, 281, 1665, 493, 797, 293, 797, 293, 286, 478, 516, 281, 362, 281, 519, 534, 1152, 13, 50664, 50664, 1012, 669, 286, 516, 281, 5039, 341, 1154, 30, 50764, 50764, 400, 550, 286, 478, 516, 281, 808, 493, 365, 264, 912, 3827, 13, 50864, 50864, 759, 787, 286, 1333, 295, 7320, 300, 5102, 1101, 13, 51014, 51014, 407, 300, 307, 746, 286, 576, 411, 281, 23829, 3030, 281, 281, 312, 257, 707, 544, 1774, 292, 294, 613, 8294, 370, 300, 286, 393, 1333, 295, 2235, 552, 484, 382, 2978, 544, 293, 544, 3612, 293, 909, 552, 281, 21445, 382, 2978, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06238902775587234, "compression_ratio": 1.782258064516129, "no_caption_prob": 2.2827351131127216e-05}, {"id": 849, "seek": 340200, "start": 3402.0, "end": 3407.0, "text": " And sometimes you already have like all the machinery in place and all you're missing is that one cog.", "tokens": [50364, 400, 2171, 291, 1217, 362, 411, 439, 264, 27302, 294, 1081, 293, 439, 291, 434, 5361, 307, 300, 472, 46521, 13, 50614, 50614, 583, 498, 291, 500, 380, 458, 300, 309, 311, 300, 472, 46521, 291, 434, 5361, 11, 291, 434, 516, 281, 16877, 264, 1379, 3479, 13, 50864, 50864, 1779, 13, 50914, 50914, 7156, 295, 885, 411, 11, 1954, 11, 286, 445, 643, 281, 4445, 341, 472, 707, 2445, 293, 550, 1203, 1646, 307, 445, 516, 281, 589, 13, 51214, 51214, 1779, 13, 865, 11, 286, 2441, 11, 411, 11, 291, 458, 11, 286, 914, 11, 562, 286, 3094, 2699, 76, 21884, 13695, 11, 286, 390, 588, 777, 281, 439, 439, 613, 721, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07628791071787602, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.119986649835482e-05}, {"id": 850, "seek": 340200, "start": 3407.0, "end": 3412.0, "text": " But if you don't know that it's that one cog you're missing, you're going to rebuild the whole machine.", "tokens": [50364, 400, 2171, 291, 1217, 362, 411, 439, 264, 27302, 294, 1081, 293, 439, 291, 434, 5361, 307, 300, 472, 46521, 13, 50614, 50614, 583, 498, 291, 500, 380, 458, 300, 309, 311, 300, 472, 46521, 291, 434, 5361, 11, 291, 434, 516, 281, 16877, 264, 1379, 3479, 13, 50864, 50864, 1779, 13, 50914, 50914, 7156, 295, 885, 411, 11, 1954, 11, 286, 445, 643, 281, 4445, 341, 472, 707, 2445, 293, 550, 1203, 1646, 307, 445, 516, 281, 589, 13, 51214, 51214, 1779, 13, 865, 11, 286, 2441, 11, 411, 11, 291, 458, 11, 286, 914, 11, 562, 286, 3094, 2699, 76, 21884, 13695, 11, 286, 390, 588, 777, 281, 439, 439, 613, 721, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07628791071787602, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.119986649835482e-05}, {"id": 851, "seek": 340200, "start": 3412.0, "end": 3413.0, "text": " Right.", "tokens": [50364, 400, 2171, 291, 1217, 362, 411, 439, 264, 27302, 294, 1081, 293, 439, 291, 434, 5361, 307, 300, 472, 46521, 13, 50614, 50614, 583, 498, 291, 500, 380, 458, 300, 309, 311, 300, 472, 46521, 291, 434, 5361, 11, 291, 434, 516, 281, 16877, 264, 1379, 3479, 13, 50864, 50864, 1779, 13, 50914, 50914, 7156, 295, 885, 411, 11, 1954, 11, 286, 445, 643, 281, 4445, 341, 472, 707, 2445, 293, 550, 1203, 1646, 307, 445, 516, 281, 589, 13, 51214, 51214, 1779, 13, 865, 11, 286, 2441, 11, 411, 11, 291, 458, 11, 286, 914, 11, 562, 286, 3094, 2699, 76, 21884, 13695, 11, 286, 390, 588, 777, 281, 439, 439, 613, 721, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07628791071787602, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.119986649835482e-05}, {"id": 852, "seek": 340200, "start": 3413.0, "end": 3419.0, "text": " Instead of being like, oh, I just need to implement this one little function and then everything else is just going to work.", "tokens": [50364, 400, 2171, 291, 1217, 362, 411, 439, 264, 27302, 294, 1081, 293, 439, 291, 434, 5361, 307, 300, 472, 46521, 13, 50614, 50614, 583, 498, 291, 500, 380, 458, 300, 309, 311, 300, 472, 46521, 291, 434, 5361, 11, 291, 434, 516, 281, 16877, 264, 1379, 3479, 13, 50864, 50864, 1779, 13, 50914, 50914, 7156, 295, 885, 411, 11, 1954, 11, 286, 445, 643, 281, 4445, 341, 472, 707, 2445, 293, 550, 1203, 1646, 307, 445, 516, 281, 589, 13, 51214, 51214, 1779, 13, 865, 11, 286, 2441, 11, 411, 11, 291, 458, 11, 286, 914, 11, 562, 286, 3094, 2699, 76, 21884, 13695, 11, 286, 390, 588, 777, 281, 439, 439, 613, 721, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07628791071787602, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.119986649835482e-05}, {"id": 853, "seek": 340200, "start": 3419.0, "end": 3427.0, "text": " Right. Yeah, I wonder, like, you know, I mean, when I built Elm GraphQL, I was very new to all all these things.", "tokens": [50364, 400, 2171, 291, 1217, 362, 411, 439, 264, 27302, 294, 1081, 293, 439, 291, 434, 5361, 307, 300, 472, 46521, 13, 50614, 50614, 583, 498, 291, 500, 380, 458, 300, 309, 311, 300, 472, 46521, 291, 434, 5361, 11, 291, 434, 516, 281, 16877, 264, 1379, 3479, 13, 50864, 50864, 1779, 13, 50914, 50914, 7156, 295, 885, 411, 11, 1954, 11, 286, 445, 643, 281, 4445, 341, 472, 707, 2445, 293, 550, 1203, 1646, 307, 445, 516, 281, 589, 13, 51214, 51214, 1779, 13, 865, 11, 286, 2441, 11, 411, 11, 291, 458, 11, 286, 914, 11, 562, 286, 3094, 2699, 76, 21884, 13695, 11, 286, 390, 588, 777, 281, 439, 439, 613, 721, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07628791071787602, "compression_ratio": 1.7018867924528303, "no_caption_prob": 3.119986649835482e-05}, {"id": 854, "seek": 342700, "start": 3427.0, "end": 3433.0, "text": " In fact, like I literally read an article, like I found an article explaining what a phantom type was.", "tokens": [50364, 682, 1186, 11, 411, 286, 3736, 1401, 364, 7222, 11, 411, 286, 1352, 364, 7222, 13468, 437, 257, 903, 25796, 2010, 390, 13, 50664, 50664, 286, 478, 411, 11, 300, 311, 437, 286, 643, 13, 400, 300, 786, 3869, 300, 382, 286, 390, 411, 12736, 2390, 341, 9362, 13, 50964, 50964, 583, 1338, 11, 309, 1890, 385, 411, 309, 576, 362, 668, 1481, 281, 458, 300, 11, 4177, 11, 1419, 264, 3485, 281, 445, 362, 364, 6707, 551, 300, 562, 9354, 365, 1340, 1646, 307, 2564, 11, 300, 576, 312, 1627, 13, 51564, 51564, 400, 550, 291, 362, 257, 9450, 992, 300, 6707, 293, 291, 393, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09166474385304493, "compression_ratio": 1.7333333333333334, "no_caption_prob": 4.610979522112757e-05}, {"id": 855, "seek": 342700, "start": 3433.0, "end": 3439.0, "text": " I'm like, that's what I need. And that day added that as I was like exploring building this API.", "tokens": [50364, 682, 1186, 11, 411, 286, 3736, 1401, 364, 7222, 11, 411, 286, 1352, 364, 7222, 13468, 437, 257, 903, 25796, 2010, 390, 13, 50664, 50664, 286, 478, 411, 11, 300, 311, 437, 286, 643, 13, 400, 300, 786, 3869, 300, 382, 286, 390, 411, 12736, 2390, 341, 9362, 13, 50964, 50964, 583, 1338, 11, 309, 1890, 385, 411, 309, 576, 362, 668, 1481, 281, 458, 300, 11, 4177, 11, 1419, 264, 3485, 281, 445, 362, 364, 6707, 551, 300, 562, 9354, 365, 1340, 1646, 307, 2564, 11, 300, 576, 312, 1627, 13, 51564, 51564, 400, 550, 291, 362, 257, 9450, 992, 300, 6707, 293, 291, 393, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09166474385304493, "compression_ratio": 1.7333333333333334, "no_caption_prob": 4.610979522112757e-05}, {"id": 856, "seek": 342700, "start": 3439.0, "end": 3451.0, "text": " But yeah, it took me like it would have been nice to know that, hey, having the ability to just have an empty thing that when combined with anything else is itself, that would be cool.", "tokens": [50364, 682, 1186, 11, 411, 286, 3736, 1401, 364, 7222, 11, 411, 286, 1352, 364, 7222, 13468, 437, 257, 903, 25796, 2010, 390, 13, 50664, 50664, 286, 478, 411, 11, 300, 311, 437, 286, 643, 13, 400, 300, 786, 3869, 300, 382, 286, 390, 411, 12736, 2390, 341, 9362, 13, 50964, 50964, 583, 1338, 11, 309, 1890, 385, 411, 309, 576, 362, 668, 1481, 281, 458, 300, 11, 4177, 11, 1419, 264, 3485, 281, 445, 362, 364, 6707, 551, 300, 562, 9354, 365, 1340, 1646, 307, 2564, 11, 300, 576, 312, 1627, 13, 51564, 51564, 400, 550, 291, 362, 257, 9450, 992, 300, 6707, 293, 291, 393, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09166474385304493, "compression_ratio": 1.7333333333333334, "no_caption_prob": 4.610979522112757e-05}, {"id": 857, "seek": 342700, "start": 3451.0, "end": 3455.0, "text": " And then you have a selection set that empty and you can.", "tokens": [50364, 682, 1186, 11, 411, 286, 3736, 1401, 364, 7222, 11, 411, 286, 1352, 364, 7222, 13468, 437, 257, 903, 25796, 2010, 390, 13, 50664, 50664, 286, 478, 411, 11, 300, 311, 437, 286, 643, 13, 400, 300, 786, 3869, 300, 382, 286, 390, 411, 12736, 2390, 341, 9362, 13, 50964, 50964, 583, 1338, 11, 309, 1890, 385, 411, 309, 576, 362, 668, 1481, 281, 458, 300, 11, 4177, 11, 1419, 264, 3485, 281, 445, 362, 364, 6707, 551, 300, 562, 9354, 365, 1340, 1646, 307, 2564, 11, 300, 576, 312, 1627, 13, 51564, 51564, 400, 550, 291, 362, 257, 9450, 992, 300, 6707, 293, 291, 393, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09166474385304493, "compression_ratio": 1.7333333333333334, "no_caption_prob": 4.610979522112757e-05}, {"id": 858, "seek": 345500, "start": 3455.0, "end": 3463.0, "text": " So I suppose that would be a monoid because you can take a selection, an empty selection set and combine it with another thing.", "tokens": [50364, 407, 286, 7297, 300, 576, 312, 257, 1108, 17079, 570, 291, 393, 747, 257, 9450, 11, 364, 6707, 9450, 992, 293, 10432, 309, 365, 1071, 551, 13, 50764, 50764, 509, 727, 4860, 670, 300, 13, 663, 311, 4420, 3601, 13, 50964, 50964, 407, 437, 307, 428, 747, 322, 5288, 30, 407, 456, 311, 257, 688, 295, 5017, 926, 341, 13, 51264, 51264, 407, 498, 746, 575, 293, 550, 360, 291, 818, 309, 293, 550, 1075, 420, 360, 291, 818, 309, 257, 1108, 345, 420, 577, 576, 291, 2924, 309, 926, 5288, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10871023933092754, "compression_ratio": 1.6981981981981982, "no_caption_prob": 4.611182157532312e-05}, {"id": 859, "seek": 345500, "start": 3463.0, "end": 3467.0, "text": " You could fold over that. That's useful knowledge.", "tokens": [50364, 407, 286, 7297, 300, 576, 312, 257, 1108, 17079, 570, 291, 393, 747, 257, 9450, 11, 364, 6707, 9450, 992, 293, 10432, 309, 365, 1071, 551, 13, 50764, 50764, 509, 727, 4860, 670, 300, 13, 663, 311, 4420, 3601, 13, 50964, 50964, 407, 437, 307, 428, 747, 322, 5288, 30, 407, 456, 311, 257, 688, 295, 5017, 926, 341, 13, 51264, 51264, 407, 498, 746, 575, 293, 550, 360, 291, 818, 309, 293, 550, 1075, 420, 360, 291, 818, 309, 257, 1108, 345, 420, 577, 576, 291, 2924, 309, 926, 5288, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10871023933092754, "compression_ratio": 1.6981981981981982, "no_caption_prob": 4.611182157532312e-05}, {"id": 860, "seek": 345500, "start": 3467.0, "end": 3473.0, "text": " So what is your take on names? So there's a lot of discussion around this.", "tokens": [50364, 407, 286, 7297, 300, 576, 312, 257, 1108, 17079, 570, 291, 393, 747, 257, 9450, 11, 364, 6707, 9450, 992, 293, 10432, 309, 365, 1071, 551, 13, 50764, 50764, 509, 727, 4860, 670, 300, 13, 663, 311, 4420, 3601, 13, 50964, 50964, 407, 437, 307, 428, 747, 322, 5288, 30, 407, 456, 311, 257, 688, 295, 5017, 926, 341, 13, 51264, 51264, 407, 498, 746, 575, 293, 550, 360, 291, 818, 309, 293, 550, 1075, 420, 360, 291, 818, 309, 257, 1108, 345, 420, 577, 576, 291, 2924, 309, 926, 5288, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10871023933092754, "compression_ratio": 1.6981981981981982, "no_caption_prob": 4.611182157532312e-05}, {"id": 861, "seek": 345500, "start": 3473.0, "end": 3484.0, "text": " So if something has and then do you call it and then able or do you call it a monad or how would you teach it around names?", "tokens": [50364, 407, 286, 7297, 300, 576, 312, 257, 1108, 17079, 570, 291, 393, 747, 257, 9450, 11, 364, 6707, 9450, 992, 293, 10432, 309, 365, 1071, 551, 13, 50764, 50764, 509, 727, 4860, 670, 300, 13, 663, 311, 4420, 3601, 13, 50964, 50964, 407, 437, 307, 428, 747, 322, 5288, 30, 407, 456, 311, 257, 688, 295, 5017, 926, 341, 13, 51264, 51264, 407, 498, 746, 575, 293, 550, 360, 291, 818, 309, 293, 550, 1075, 420, 360, 291, 818, 309, 257, 1108, 345, 420, 577, 576, 291, 2924, 309, 926, 5288, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10871023933092754, "compression_ratio": 1.6981981981981982, "no_caption_prob": 4.611182157532312e-05}, {"id": 862, "seek": 348400, "start": 3484.0, "end": 3493.0, "text": " Oh, that's a really hard question because I think it is useful to have a name for things that have and then.", "tokens": [50364, 876, 11, 300, 311, 257, 534, 1152, 1168, 570, 286, 519, 309, 307, 4420, 281, 362, 257, 1315, 337, 721, 300, 362, 293, 550, 13, 50814, 50814, 286, 519, 300, 1419, 257, 1315, 411, 1108, 345, 307, 406, 4420, 337, 26992, 11, 561, 567, 366, 2539, 13, 51164, 51164, 400, 294, 1186, 11, 754, 1417, 466, 309, 294, 2115, 295, 512, 4833, 5102, 307, 406, 4420, 337, 26992, 13, 51464, 51464, 1436, 309, 994, 380, 21743, 309, 294, 641, 1378, 1939, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08555770474810932, "compression_ratio": 1.71, "no_caption_prob": 8.219853771151975e-05}, {"id": 863, "seek": 348400, "start": 3493.0, "end": 3500.0, "text": " I think that having a name like monad is not useful for beginners, people who are learning.", "tokens": [50364, 876, 11, 300, 311, 257, 534, 1152, 1168, 570, 286, 519, 309, 307, 4420, 281, 362, 257, 1315, 337, 721, 300, 362, 293, 550, 13, 50814, 50814, 286, 519, 300, 1419, 257, 1315, 411, 1108, 345, 307, 406, 4420, 337, 26992, 11, 561, 567, 366, 2539, 13, 51164, 51164, 400, 294, 1186, 11, 754, 1417, 466, 309, 294, 2115, 295, 512, 4833, 5102, 307, 406, 4420, 337, 26992, 13, 51464, 51464, 1436, 309, 994, 380, 21743, 309, 294, 641, 1378, 1939, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08555770474810932, "compression_ratio": 1.71, "no_caption_prob": 8.219853771151975e-05}, {"id": 864, "seek": 348400, "start": 3500.0, "end": 3506.0, "text": " And in fact, even talking about it in terms of some larger pattern is not useful for beginners.", "tokens": [50364, 876, 11, 300, 311, 257, 534, 1152, 1168, 570, 286, 519, 309, 307, 4420, 281, 362, 257, 1315, 337, 721, 300, 362, 293, 550, 13, 50814, 50814, 286, 519, 300, 1419, 257, 1315, 411, 1108, 345, 307, 406, 4420, 337, 26992, 11, 561, 567, 366, 2539, 13, 51164, 51164, 400, 294, 1186, 11, 754, 1417, 466, 309, 294, 2115, 295, 512, 4833, 5102, 307, 406, 4420, 337, 26992, 13, 51464, 51464, 1436, 309, 994, 380, 21743, 309, 294, 641, 1378, 1939, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08555770474810932, "compression_ratio": 1.71, "no_caption_prob": 8.219853771151975e-05}, {"id": 865, "seek": 348400, "start": 3506.0, "end": 3509.0, "text": " Because it didn't grasp it in their head yet.", "tokens": [50364, 876, 11, 300, 311, 257, 534, 1152, 1168, 570, 286, 519, 309, 307, 4420, 281, 362, 257, 1315, 337, 721, 300, 362, 293, 550, 13, 50814, 50814, 286, 519, 300, 1419, 257, 1315, 411, 1108, 345, 307, 406, 4420, 337, 26992, 11, 561, 567, 366, 2539, 13, 51164, 51164, 400, 294, 1186, 11, 754, 1417, 466, 309, 294, 2115, 295, 512, 4833, 5102, 307, 406, 4420, 337, 26992, 13, 51464, 51464, 1436, 309, 994, 380, 21743, 309, 294, 641, 1378, 1939, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08555770474810932, "compression_ratio": 1.71, "no_caption_prob": 8.219853771151975e-05}, {"id": 866, "seek": 350900, "start": 3509.0, "end": 3514.0, "text": " And now you're trying to see like what are the things in common, what are the patterns?", "tokens": [50364, 400, 586, 291, 434, 1382, 281, 536, 411, 437, 366, 264, 721, 294, 2689, 11, 437, 366, 264, 8294, 30, 50614, 50614, 400, 309, 311, 445, 370, 12649, 300, 291, 980, 552, 11, 1954, 11, 309, 311, 445, 364, 293, 550, 2445, 300, 10002, 613, 6064, 13, 50964, 50964, 400, 309, 311, 411, 11, 731, 11, 300, 311, 886, 2199, 13, 708, 775, 309, 767, 914, 30, 51164, 51164, 400, 550, 291, 483, 5541, 294, 439, 613, 411, 534, 1090, 1496, 721, 300, 445, 733, 295, 652, 291, 6060, 294, 13040, 382, 8851, 281, 445, 885, 411, 11, 1954, 11, 510, 311, 577, 286, 10432, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10110653096979315, "compression_ratio": 1.701195219123506, "no_caption_prob": 5.649053127854131e-05}, {"id": 867, "seek": 350900, "start": 3514.0, "end": 3521.0, "text": " And it's just so abstract that you tell them, oh, it's just an and then function that follows these laws.", "tokens": [50364, 400, 586, 291, 434, 1382, 281, 536, 411, 437, 366, 264, 721, 294, 2689, 11, 437, 366, 264, 8294, 30, 50614, 50614, 400, 309, 311, 445, 370, 12649, 300, 291, 980, 552, 11, 1954, 11, 309, 311, 445, 364, 293, 550, 2445, 300, 10002, 613, 6064, 13, 50964, 50964, 400, 309, 311, 411, 11, 731, 11, 300, 311, 886, 2199, 13, 708, 775, 309, 767, 914, 30, 51164, 51164, 400, 550, 291, 483, 5541, 294, 439, 613, 411, 534, 1090, 1496, 721, 300, 445, 733, 295, 652, 291, 6060, 294, 13040, 382, 8851, 281, 445, 885, 411, 11, 1954, 11, 510, 311, 577, 286, 10432, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10110653096979315, "compression_ratio": 1.701195219123506, "no_caption_prob": 5.649053127854131e-05}, {"id": 868, "seek": 350900, "start": 3521.0, "end": 3525.0, "text": " And it's like, well, that's too simple. What does it actually mean?", "tokens": [50364, 400, 586, 291, 434, 1382, 281, 536, 411, 437, 366, 264, 721, 294, 2689, 11, 437, 366, 264, 8294, 30, 50614, 50614, 400, 309, 311, 445, 370, 12649, 300, 291, 980, 552, 11, 1954, 11, 309, 311, 445, 364, 293, 550, 2445, 300, 10002, 613, 6064, 13, 50964, 50964, 400, 309, 311, 411, 11, 731, 11, 300, 311, 886, 2199, 13, 708, 775, 309, 767, 914, 30, 51164, 51164, 400, 550, 291, 483, 5541, 294, 439, 613, 411, 534, 1090, 1496, 721, 300, 445, 733, 295, 652, 291, 6060, 294, 13040, 382, 8851, 281, 445, 885, 411, 11, 1954, 11, 510, 311, 577, 286, 10432, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10110653096979315, "compression_ratio": 1.701195219123506, "no_caption_prob": 5.649053127854131e-05}, {"id": 869, "seek": 350900, "start": 3525.0, "end": 3534.0, "text": " And then you get stuck in all these like really high level things that just kind of make you spin in circles as opposed to just being like, oh, here's how I combine.", "tokens": [50364, 400, 586, 291, 434, 1382, 281, 536, 411, 437, 366, 264, 721, 294, 2689, 11, 437, 366, 264, 8294, 30, 50614, 50614, 400, 309, 311, 445, 370, 12649, 300, 291, 980, 552, 11, 1954, 11, 309, 311, 445, 364, 293, 550, 2445, 300, 10002, 613, 6064, 13, 50964, 50964, 400, 309, 311, 411, 11, 731, 11, 300, 311, 886, 2199, 13, 708, 775, 309, 767, 914, 30, 51164, 51164, 400, 550, 291, 483, 5541, 294, 439, 613, 411, 534, 1090, 1496, 721, 300, 445, 733, 295, 652, 291, 6060, 294, 13040, 382, 8851, 281, 445, 885, 411, 11, 1954, 11, 510, 311, 577, 286, 10432, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.10110653096979315, "compression_ratio": 1.701195219123506, "no_caption_prob": 5.649053127854131e-05}, {"id": 870, "seek": 353400, "start": 3534.0, "end": 3539.0, "text": " Maybe here's how I combine results and then over time building up an intuition for what it works.", "tokens": [50364, 2704, 510, 311, 577, 286, 10432, 3542, 293, 550, 670, 565, 2390, 493, 364, 24002, 337, 437, 309, 1985, 13, 50614, 50614, 17586, 11, 291, 434, 516, 281, 528, 257, 1315, 337, 439, 295, 613, 721, 13, 50764, 50764, 400, 2139, 445, 281, 5521, 264, 3100, 11, 411, 829, 257, 1315, 322, 257, 5102, 291, 600, 1612, 1333, 295, 21511, 11, 457, 611, 281, 1419, 7315, 365, 661, 561, 420, 365, 1803, 281, 584, 11, 1954, 11, 341, 551, 510, 11, 498, 286, 652, 309, 293, 550, 439, 295, 257, 3990, 257, 3840, 295, 661, 3755, 2100, 666, 1081, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11152073970207801, "compression_ratio": 1.6377358490566039, "no_caption_prob": 5.507541573024355e-06}, {"id": 871, "seek": 353400, "start": 3539.0, "end": 3542.0, "text": " Eventually, you're going to want a name for all of these things.", "tokens": [50364, 2704, 510, 311, 577, 286, 10432, 3542, 293, 550, 670, 565, 2390, 493, 364, 24002, 337, 437, 309, 1985, 13, 50614, 50614, 17586, 11, 291, 434, 516, 281, 528, 257, 1315, 337, 439, 295, 613, 721, 13, 50764, 50764, 400, 2139, 445, 281, 5521, 264, 3100, 11, 411, 829, 257, 1315, 322, 257, 5102, 291, 600, 1612, 1333, 295, 21511, 11, 457, 611, 281, 1419, 7315, 365, 661, 561, 420, 365, 1803, 281, 584, 11, 1954, 11, 341, 551, 510, 11, 498, 286, 652, 309, 293, 550, 439, 295, 257, 3990, 257, 3840, 295, 661, 3755, 2100, 666, 1081, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11152073970207801, "compression_ratio": 1.6377358490566039, "no_caption_prob": 5.507541573024355e-06}, {"id": 872, "seek": 353400, "start": 3542.0, "end": 3559.0, "text": " And either just to recognize the path, like put a name on a pattern you've seen sort of emerge, but also to having conversations with other people or with yourself to say, oh, this thing here, if I make it and then all of a sudden a bunch of other pieces fall into place.", "tokens": [50364, 2704, 510, 311, 577, 286, 10432, 3542, 293, 550, 670, 565, 2390, 493, 364, 24002, 337, 437, 309, 1985, 13, 50614, 50614, 17586, 11, 291, 434, 516, 281, 528, 257, 1315, 337, 439, 295, 613, 721, 13, 50764, 50764, 400, 2139, 445, 281, 5521, 264, 3100, 11, 411, 829, 257, 1315, 322, 257, 5102, 291, 600, 1612, 1333, 295, 21511, 11, 457, 611, 281, 1419, 7315, 365, 661, 561, 420, 365, 1803, 281, 584, 11, 1954, 11, 341, 551, 510, 11, 498, 286, 652, 309, 293, 550, 439, 295, 257, 3990, 257, 3840, 295, 661, 3755, 2100, 666, 1081, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11152073970207801, "compression_ratio": 1.6377358490566039, "no_caption_prob": 5.507541573024355e-06}, {"id": 873, "seek": 355900, "start": 3559.0, "end": 3569.0, "text": " Or you're doing review for someone and you're saying, you're doing a lot of work here and it looks like you're chaining things in a monadic sort of way.", "tokens": [50364, 1610, 291, 434, 884, 3131, 337, 1580, 293, 291, 434, 1566, 11, 291, 434, 884, 257, 688, 295, 589, 510, 293, 309, 1542, 411, 291, 434, 417, 3686, 721, 294, 257, 1108, 43341, 1333, 295, 636, 13, 50864, 50864, 400, 286, 600, 1143, 341, 365, 561, 567, 458, 437, 264, 1433, 1355, 294, 2107, 22845, 304, 9410, 30628, 570, 309, 307, 257, 588, 4420, 1433, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.08570941516331264, "compression_ratio": 1.5351351351351352, "no_caption_prob": 1.147868260886753e-05}, {"id": 874, "seek": 355900, "start": 3569.0, "end": 3577.0, "text": " And I've used this with people who know what the term means in nonfunctional programming contexts because it is a very useful term.", "tokens": [50364, 1610, 291, 434, 884, 3131, 337, 1580, 293, 291, 434, 1566, 11, 291, 434, 884, 257, 688, 295, 589, 510, 293, 309, 1542, 411, 291, 434, 417, 3686, 721, 294, 257, 1108, 43341, 1333, 295, 636, 13, 50864, 50864, 400, 286, 600, 1143, 341, 365, 561, 567, 458, 437, 264, 1433, 1355, 294, 2107, 22845, 304, 9410, 30628, 570, 309, 307, 257, 588, 4420, 1433, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.08570941516331264, "compression_ratio": 1.5351351351351352, "no_caption_prob": 1.147868260886753e-05}, {"id": 875, "seek": 357700, "start": 3577.0, "end": 3592.0, "text": " I guess there's also just the fact that if you want to know more about the pattern, if you want to research more, then googling and then is not going to give you much, but googling monads will give you a lot of resources.", "tokens": [50364, 286, 2041, 456, 311, 611, 445, 264, 1186, 300, 498, 291, 528, 281, 458, 544, 466, 264, 5102, 11, 498, 291, 528, 281, 2132, 544, 11, 550, 50061, 1688, 293, 550, 307, 406, 516, 281, 976, 291, 709, 11, 457, 50061, 1688, 1108, 5834, 486, 976, 291, 257, 688, 295, 3593, 13, 51114, 51114, 1079, 13, 8590, 11, 881, 295, 729, 366, 406, 516, 281, 312, 4961, 13, 51464, 51464, 663, 311, 257, 819, 551, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11032449007034302, "compression_ratio": 1.6230366492146597, "no_caption_prob": 1.0953051059914287e-05}, {"id": 876, "seek": 357700, "start": 3592.0, "end": 3599.0, "text": " Yes. Unfortunately, most of those are not going to be helpful.", "tokens": [50364, 286, 2041, 456, 311, 611, 445, 264, 1186, 300, 498, 291, 528, 281, 458, 544, 466, 264, 5102, 11, 498, 291, 528, 281, 2132, 544, 11, 550, 50061, 1688, 293, 550, 307, 406, 516, 281, 976, 291, 709, 11, 457, 50061, 1688, 1108, 5834, 486, 976, 291, 257, 688, 295, 3593, 13, 51114, 51114, 1079, 13, 8590, 11, 881, 295, 729, 366, 406, 516, 281, 312, 4961, 13, 51464, 51464, 663, 311, 257, 819, 551, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11032449007034302, "compression_ratio": 1.6230366492146597, "no_caption_prob": 1.0953051059914287e-05}, {"id": 877, "seek": 357700, "start": 3599.0, "end": 3601.0, "text": " That's a different thing.", "tokens": [50364, 286, 2041, 456, 311, 611, 445, 264, 1186, 300, 498, 291, 528, 281, 458, 544, 466, 264, 5102, 11, 498, 291, 528, 281, 2132, 544, 11, 550, 50061, 1688, 293, 550, 307, 406, 516, 281, 976, 291, 709, 11, 457, 50061, 1688, 1108, 5834, 486, 976, 291, 257, 688, 295, 3593, 13, 51114, 51114, 1079, 13, 8590, 11, 881, 295, 729, 366, 406, 516, 281, 312, 4961, 13, 51464, 51464, 663, 311, 257, 819, 551, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11032449007034302, "compression_ratio": 1.6230366492146597, "no_caption_prob": 1.0953051059914287e-05}, {"id": 878, "seek": 360100, "start": 3601.0, "end": 3613.0, "text": " Yes. Yes. I think also what's sometimes tricky with these things is that a lot of the literature around these terms is written in a very kind of formal language.", "tokens": [50364, 1079, 13, 1079, 13, 286, 519, 611, 437, 311, 2171, 12414, 365, 613, 721, 307, 300, 257, 688, 295, 264, 10394, 926, 613, 2115, 307, 3720, 294, 257, 588, 733, 295, 9860, 2856, 13, 50964, 50964, 1743, 309, 311, 3720, 1920, 538, 25695, 337, 25695, 13, 51114, 51114, 286, 1604, 286, 2729, 257, 751, 1036, 2100, 322, 25335, 293, 257, 1729, 1333, 295, 3758, 295, 25335, 11, 597, 286, 994, 380, 2152, 294, 264, 751, 11, 457, 309, 311, 1219, 257, 3857, 50232, 1434, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0698669519317284, "compression_ratio": 1.606060606060606, "no_caption_prob": 7.296108378795907e-06}, {"id": 879, "seek": 360100, "start": 3613.0, "end": 3616.0, "text": " Like it's written almost by academics for academics.", "tokens": [50364, 1079, 13, 1079, 13, 286, 519, 611, 437, 311, 2171, 12414, 365, 613, 721, 307, 300, 257, 688, 295, 264, 10394, 926, 613, 2115, 307, 3720, 294, 257, 588, 733, 295, 9860, 2856, 13, 50964, 50964, 1743, 309, 311, 3720, 1920, 538, 25695, 337, 25695, 13, 51114, 51114, 286, 1604, 286, 2729, 257, 751, 1036, 2100, 322, 25335, 293, 257, 1729, 1333, 295, 3758, 295, 25335, 11, 597, 286, 994, 380, 2152, 294, 264, 751, 11, 457, 309, 311, 1219, 257, 3857, 50232, 1434, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0698669519317284, "compression_ratio": 1.606060606060606, "no_caption_prob": 7.296108378795907e-06}, {"id": 880, "seek": 360100, "start": 3616.0, "end": 3627.0, "text": " I remember I gave a talk last fall on folding and a particular sort of style of folding, which I didn't mention in the talk, but it's called a catamorphism.", "tokens": [50364, 1079, 13, 1079, 13, 286, 519, 611, 437, 311, 2171, 12414, 365, 613, 721, 307, 300, 257, 688, 295, 264, 10394, 926, 613, 2115, 307, 3720, 294, 257, 588, 733, 295, 9860, 2856, 13, 50964, 50964, 1743, 309, 311, 3720, 1920, 538, 25695, 337, 25695, 13, 51114, 51114, 286, 1604, 286, 2729, 257, 751, 1036, 2100, 322, 25335, 293, 257, 1729, 1333, 295, 3758, 295, 25335, 11, 597, 286, 994, 380, 2152, 294, 264, 751, 11, 457, 309, 311, 1219, 257, 3857, 50232, 1434, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.0698669519317284, "compression_ratio": 1.606060606060606, "no_caption_prob": 7.296108378795907e-06}, {"id": 881, "seek": 362700, "start": 3627.0, "end": 3633.0, "text": " And anything that I read on folding and catamorphism has got really deep.", "tokens": [50364, 400, 1340, 300, 286, 1401, 322, 25335, 293, 3857, 50232, 1434, 575, 658, 534, 2452, 13, 50664, 50664, 2754, 264, 2306, 300, 366, 19232, 281, 312, 411, 3720, 337, 41504, 294, 364, 9515, 636, 13, 50914, 50914, 400, 291, 483, 257, 1326, 48910, 294, 293, 321, 434, 1417, 466, 577, 479, 419, 432, 38182, 35925, 293, 19669, 13, 51164, 51164, 286, 478, 445, 2584, 2731, 13, 51264, 51264, 407, 2171, 562, 291, 2528, 294, 322, 264, 2115, 11, 881, 295, 264, 2527, 300, 311, 484, 456, 307, 406, 3720, 337, 561, 411, 505, 567, 366, 1382, 281, 2464, 4268, 294, 264, 957, 1002, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0846921337975396, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.756597991217859e-05}, {"id": 882, "seek": 362700, "start": 3633.0, "end": 3638.0, "text": " Even the ones that are claiming to be like written for programmers in an accessible way.", "tokens": [50364, 400, 1340, 300, 286, 1401, 322, 25335, 293, 3857, 50232, 1434, 575, 658, 534, 2452, 13, 50664, 50664, 2754, 264, 2306, 300, 366, 19232, 281, 312, 411, 3720, 337, 41504, 294, 364, 9515, 636, 13, 50914, 50914, 400, 291, 483, 257, 1326, 48910, 294, 293, 321, 434, 1417, 466, 577, 479, 419, 432, 38182, 35925, 293, 19669, 13, 51164, 51164, 286, 478, 445, 2584, 2731, 13, 51264, 51264, 407, 2171, 562, 291, 2528, 294, 322, 264, 2115, 11, 881, 295, 264, 2527, 300, 311, 484, 456, 307, 406, 3720, 337, 561, 411, 505, 567, 366, 1382, 281, 2464, 4268, 294, 264, 957, 1002, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0846921337975396, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.756597991217859e-05}, {"id": 883, "seek": 362700, "start": 3638.0, "end": 3643.0, "text": " And you get a few paragraphs in and we're talking about how F algebras compose and arrows.", "tokens": [50364, 400, 1340, 300, 286, 1401, 322, 25335, 293, 3857, 50232, 1434, 575, 658, 534, 2452, 13, 50664, 50664, 2754, 264, 2306, 300, 366, 19232, 281, 312, 411, 3720, 337, 41504, 294, 364, 9515, 636, 13, 50914, 50914, 400, 291, 483, 257, 1326, 48910, 294, 293, 321, 434, 1417, 466, 577, 479, 419, 432, 38182, 35925, 293, 19669, 13, 51164, 51164, 286, 478, 445, 2584, 2731, 13, 51264, 51264, 407, 2171, 562, 291, 2528, 294, 322, 264, 2115, 11, 881, 295, 264, 2527, 300, 311, 484, 456, 307, 406, 3720, 337, 561, 411, 505, 567, 366, 1382, 281, 2464, 4268, 294, 264, 957, 1002, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0846921337975396, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.756597991217859e-05}, {"id": 884, "seek": 362700, "start": 3643.0, "end": 3645.0, "text": " I'm just completely lost.", "tokens": [50364, 400, 1340, 300, 286, 1401, 322, 25335, 293, 3857, 50232, 1434, 575, 658, 534, 2452, 13, 50664, 50664, 2754, 264, 2306, 300, 366, 19232, 281, 312, 411, 3720, 337, 41504, 294, 364, 9515, 636, 13, 50914, 50914, 400, 291, 483, 257, 1326, 48910, 294, 293, 321, 434, 1417, 466, 577, 479, 419, 432, 38182, 35925, 293, 19669, 13, 51164, 51164, 286, 478, 445, 2584, 2731, 13, 51264, 51264, 407, 2171, 562, 291, 2528, 294, 322, 264, 2115, 11, 881, 295, 264, 2527, 300, 311, 484, 456, 307, 406, 3720, 337, 561, 411, 505, 567, 366, 1382, 281, 2464, 4268, 294, 264, 957, 1002, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0846921337975396, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.756597991217859e-05}, {"id": 885, "seek": 362700, "start": 3645.0, "end": 3655.0, "text": " So sometimes when you dig in on the terms, most of the material that's out there is not written for people like us who are trying to write programs in the real world.", "tokens": [50364, 400, 1340, 300, 286, 1401, 322, 25335, 293, 3857, 50232, 1434, 575, 658, 534, 2452, 13, 50664, 50664, 2754, 264, 2306, 300, 366, 19232, 281, 312, 411, 3720, 337, 41504, 294, 364, 9515, 636, 13, 50914, 50914, 400, 291, 483, 257, 1326, 48910, 294, 293, 321, 434, 1417, 466, 577, 479, 419, 432, 38182, 35925, 293, 19669, 13, 51164, 51164, 286, 478, 445, 2584, 2731, 13, 51264, 51264, 407, 2171, 562, 291, 2528, 294, 322, 264, 2115, 11, 881, 295, 264, 2527, 300, 311, 484, 456, 307, 406, 3720, 337, 561, 411, 505, 567, 366, 1382, 281, 2464, 4268, 294, 264, 957, 1002, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0846921337975396, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.756597991217859e-05}, {"id": 886, "seek": 365500, "start": 3655.0, "end": 3664.0, "text": " And I wish there were more tutorials out there that try to give more of a practical introduction to some of these concepts.", "tokens": [50364, 400, 286, 3172, 456, 645, 544, 17616, 484, 456, 300, 853, 281, 976, 544, 295, 257, 8496, 9339, 281, 512, 295, 613, 10392, 13, 50814, 50814, 400, 286, 841, 411, 291, 600, 3720, 257, 1326, 13, 50964, 50964, 286, 600, 3031, 13, 440, 751, 286, 2729, 466, 25335, 390, 2293, 300, 13, 51214, 51214, 286, 390, 1382, 281, 584, 11, 718, 311, 747, 613, 10392, 293, 652, 552, 9515, 281, 561, 293, 406, 3292, 886, 709, 466, 264, 9860, 7123, 295, 437, 257, 3857, 50232, 1434, 307, 11, 457, 2602, 11, 577, 307, 309, 4420, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08184492111206054, "compression_ratio": 1.6284584980237153, "no_caption_prob": 3.3930509744095616e-06}, {"id": 887, "seek": 365500, "start": 3664.0, "end": 3667.0, "text": " And I feel like you've written a few.", "tokens": [50364, 400, 286, 3172, 456, 645, 544, 17616, 484, 456, 300, 853, 281, 976, 544, 295, 257, 8496, 9339, 281, 512, 295, 613, 10392, 13, 50814, 50814, 400, 286, 841, 411, 291, 600, 3720, 257, 1326, 13, 50964, 50964, 286, 600, 3031, 13, 440, 751, 286, 2729, 466, 25335, 390, 2293, 300, 13, 51214, 51214, 286, 390, 1382, 281, 584, 11, 718, 311, 747, 613, 10392, 293, 652, 552, 9515, 281, 561, 293, 406, 3292, 886, 709, 466, 264, 9860, 7123, 295, 437, 257, 3857, 50232, 1434, 307, 11, 457, 2602, 11, 577, 307, 309, 4420, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08184492111206054, "compression_ratio": 1.6284584980237153, "no_caption_prob": 3.3930509744095616e-06}, {"id": 888, "seek": 365500, "start": 3667.0, "end": 3672.0, "text": " I've tried. The talk I gave about folding was exactly that.", "tokens": [50364, 400, 286, 3172, 456, 645, 544, 17616, 484, 456, 300, 853, 281, 976, 544, 295, 257, 8496, 9339, 281, 512, 295, 613, 10392, 13, 50814, 50814, 400, 286, 841, 411, 291, 600, 3720, 257, 1326, 13, 50964, 50964, 286, 600, 3031, 13, 440, 751, 286, 2729, 466, 25335, 390, 2293, 300, 13, 51214, 51214, 286, 390, 1382, 281, 584, 11, 718, 311, 747, 613, 10392, 293, 652, 552, 9515, 281, 561, 293, 406, 3292, 886, 709, 466, 264, 9860, 7123, 295, 437, 257, 3857, 50232, 1434, 307, 11, 457, 2602, 11, 577, 307, 309, 4420, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08184492111206054, "compression_ratio": 1.6284584980237153, "no_caption_prob": 3.3930509744095616e-06}, {"id": 889, "seek": 365500, "start": 3672.0, "end": 3684.0, "text": " I was trying to say, let's take these concepts and make them accessible to people and not worry too much about the formal definition of what a catamorphism is, but instead, how is it useful?", "tokens": [50364, 400, 286, 3172, 456, 645, 544, 17616, 484, 456, 300, 853, 281, 976, 544, 295, 257, 8496, 9339, 281, 512, 295, 613, 10392, 13, 50814, 50814, 400, 286, 841, 411, 291, 600, 3720, 257, 1326, 13, 50964, 50964, 286, 600, 3031, 13, 440, 751, 286, 2729, 466, 25335, 390, 2293, 300, 13, 51214, 51214, 286, 390, 1382, 281, 584, 11, 718, 311, 747, 613, 10392, 293, 652, 552, 9515, 281, 561, 293, 406, 3292, 886, 709, 466, 264, 9860, 7123, 295, 437, 257, 3857, 50232, 1434, 307, 11, 457, 2602, 11, 577, 307, 309, 4420, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08184492111206054, "compression_ratio": 1.6284584980237153, "no_caption_prob": 3.3930509744095616e-06}, {"id": 890, "seek": 368400, "start": 3684.0, "end": 3692.0, "text": " My example was working with trees and particularly inverting a binary tree on a whiteboard in one line of Elm.", "tokens": [50364, 1222, 1365, 390, 1364, 365, 5852, 293, 4098, 28653, 783, 257, 17434, 4230, 322, 257, 2418, 3787, 294, 472, 1622, 295, 2699, 76, 13, 50764, 50764, 663, 390, 452, 452, 6511, 935, 13, 50864, 50864, 865, 11, 321, 603, 2138, 2113, 281, 300, 751, 13, 50964, 50964, 865, 11, 309, 307, 13, 467, 576, 312, 370, 1481, 281, 445, 362, 309, 3720, 294, 11121, 3669, 294, 472, 1081, 13, 51264, 51264, 1743, 11, 510, 366, 439, 613, 733, 295, 2689, 8294, 13, 51414, 51414, 1692, 311, 437, 436, 574, 411, 294, 2699, 76, 13, 51514, 51514, 1692, 311, 510, 366, 264, 3685, 295, 2740, 291, 393, 5039, 365, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08251102347122996, "compression_ratio": 1.5833333333333333, "no_caption_prob": 1.644186158955563e-05}, {"id": 891, "seek": 368400, "start": 3692.0, "end": 3694.0, "text": " That was my my selling point.", "tokens": [50364, 1222, 1365, 390, 1364, 365, 5852, 293, 4098, 28653, 783, 257, 17434, 4230, 322, 257, 2418, 3787, 294, 472, 1622, 295, 2699, 76, 13, 50764, 50764, 663, 390, 452, 452, 6511, 935, 13, 50864, 50864, 865, 11, 321, 603, 2138, 2113, 281, 300, 751, 13, 50964, 50964, 865, 11, 309, 307, 13, 467, 576, 312, 370, 1481, 281, 445, 362, 309, 3720, 294, 11121, 3669, 294, 472, 1081, 13, 51264, 51264, 1743, 11, 510, 366, 439, 613, 733, 295, 2689, 8294, 13, 51414, 51414, 1692, 311, 437, 436, 574, 411, 294, 2699, 76, 13, 51514, 51514, 1692, 311, 510, 366, 264, 3685, 295, 2740, 291, 393, 5039, 365, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08251102347122996, "compression_ratio": 1.5833333333333333, "no_caption_prob": 1.644186158955563e-05}, {"id": 892, "seek": 368400, "start": 3694.0, "end": 3696.0, "text": " Yeah, we'll definitely link to that talk.", "tokens": [50364, 1222, 1365, 390, 1364, 365, 5852, 293, 4098, 28653, 783, 257, 17434, 4230, 322, 257, 2418, 3787, 294, 472, 1622, 295, 2699, 76, 13, 50764, 50764, 663, 390, 452, 452, 6511, 935, 13, 50864, 50864, 865, 11, 321, 603, 2138, 2113, 281, 300, 751, 13, 50964, 50964, 865, 11, 309, 307, 13, 467, 576, 312, 370, 1481, 281, 445, 362, 309, 3720, 294, 11121, 3669, 294, 472, 1081, 13, 51264, 51264, 1743, 11, 510, 366, 439, 613, 733, 295, 2689, 8294, 13, 51414, 51414, 1692, 311, 437, 436, 574, 411, 294, 2699, 76, 13, 51514, 51514, 1692, 311, 510, 366, 264, 3685, 295, 2740, 291, 393, 5039, 365, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08251102347122996, "compression_ratio": 1.5833333333333333, "no_caption_prob": 1.644186158955563e-05}, {"id": 893, "seek": 368400, "start": 3696.0, "end": 3702.0, "text": " Yeah, it is. It would be so nice to just have it written in plain English in one place.", "tokens": [50364, 1222, 1365, 390, 1364, 365, 5852, 293, 4098, 28653, 783, 257, 17434, 4230, 322, 257, 2418, 3787, 294, 472, 1622, 295, 2699, 76, 13, 50764, 50764, 663, 390, 452, 452, 6511, 935, 13, 50864, 50864, 865, 11, 321, 603, 2138, 2113, 281, 300, 751, 13, 50964, 50964, 865, 11, 309, 307, 13, 467, 576, 312, 370, 1481, 281, 445, 362, 309, 3720, 294, 11121, 3669, 294, 472, 1081, 13, 51264, 51264, 1743, 11, 510, 366, 439, 613, 733, 295, 2689, 8294, 13, 51414, 51414, 1692, 311, 437, 436, 574, 411, 294, 2699, 76, 13, 51514, 51514, 1692, 311, 510, 366, 264, 3685, 295, 2740, 291, 393, 5039, 365, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08251102347122996, "compression_ratio": 1.5833333333333333, "no_caption_prob": 1.644186158955563e-05}, {"id": 894, "seek": 368400, "start": 3702.0, "end": 3705.0, "text": " Like, here are all these kind of common patterns.", "tokens": [50364, 1222, 1365, 390, 1364, 365, 5852, 293, 4098, 28653, 783, 257, 17434, 4230, 322, 257, 2418, 3787, 294, 472, 1622, 295, 2699, 76, 13, 50764, 50764, 663, 390, 452, 452, 6511, 935, 13, 50864, 50864, 865, 11, 321, 603, 2138, 2113, 281, 300, 751, 13, 50964, 50964, 865, 11, 309, 307, 13, 467, 576, 312, 370, 1481, 281, 445, 362, 309, 3720, 294, 11121, 3669, 294, 472, 1081, 13, 51264, 51264, 1743, 11, 510, 366, 439, 613, 733, 295, 2689, 8294, 13, 51414, 51414, 1692, 311, 437, 436, 574, 411, 294, 2699, 76, 13, 51514, 51514, 1692, 311, 510, 366, 264, 3685, 295, 2740, 291, 393, 5039, 365, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08251102347122996, "compression_ratio": 1.5833333333333333, "no_caption_prob": 1.644186158955563e-05}, {"id": 895, "seek": 368400, "start": 3705.0, "end": 3707.0, "text": " Here's what they look like in Elm.", "tokens": [50364, 1222, 1365, 390, 1364, 365, 5852, 293, 4098, 28653, 783, 257, 17434, 4230, 322, 257, 2418, 3787, 294, 472, 1622, 295, 2699, 76, 13, 50764, 50764, 663, 390, 452, 452, 6511, 935, 13, 50864, 50864, 865, 11, 321, 603, 2138, 2113, 281, 300, 751, 13, 50964, 50964, 865, 11, 309, 307, 13, 467, 576, 312, 370, 1481, 281, 445, 362, 309, 3720, 294, 11121, 3669, 294, 472, 1081, 13, 51264, 51264, 1743, 11, 510, 366, 439, 613, 733, 295, 2689, 8294, 13, 51414, 51414, 1692, 311, 437, 436, 574, 411, 294, 2699, 76, 13, 51514, 51514, 1692, 311, 510, 366, 264, 3685, 295, 2740, 291, 393, 5039, 365, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08251102347122996, "compression_ratio": 1.5833333333333333, "no_caption_prob": 1.644186158955563e-05}, {"id": 896, "seek": 368400, "start": 3707.0, "end": 3711.0, "text": " Here's here are the kinds of problems you can solve with them.", "tokens": [50364, 1222, 1365, 390, 1364, 365, 5852, 293, 4098, 28653, 783, 257, 17434, 4230, 322, 257, 2418, 3787, 294, 472, 1622, 295, 2699, 76, 13, 50764, 50764, 663, 390, 452, 452, 6511, 935, 13, 50864, 50864, 865, 11, 321, 603, 2138, 2113, 281, 300, 751, 13, 50964, 50964, 865, 11, 309, 307, 13, 467, 576, 312, 370, 1481, 281, 445, 362, 309, 3720, 294, 11121, 3669, 294, 472, 1081, 13, 51264, 51264, 1743, 11, 510, 366, 439, 613, 733, 295, 2689, 8294, 13, 51414, 51414, 1692, 311, 437, 436, 574, 411, 294, 2699, 76, 13, 51514, 51514, 1692, 311, 510, 366, 264, 3685, 295, 2740, 291, 393, 5039, 365, 552, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08251102347122996, "compression_ratio": 1.5833333333333333, "no_caption_prob": 1.644186158955563e-05}, {"id": 897, "seek": 371100, "start": 3711.0, "end": 3719.0, "text": " This conversation has definitely been illuminating. So thank you so much for coming on to illuminate these things for us and dive in.", "tokens": [50364, 639, 3761, 575, 2138, 668, 28593, 990, 13, 407, 1309, 291, 370, 709, 337, 1348, 322, 281, 28593, 473, 613, 721, 337, 505, 293, 9192, 294, 13, 50764, 50764, 467, 311, 668, 257, 6834, 13, 2561, 337, 5062, 385, 322, 13, 50914, 50914, 2014, 456, 604, 10392, 300, 291, 576, 2748, 561, 1466, 700, 30, 51114, 51114, 400, 360, 291, 362, 604, 3593, 30, 1436, 291, 848, 309, 311, 588, 1152, 281, 915, 3593, 13, 51314, 51314, 407, 498, 291, 362, 665, 6123, 11, 300, 576, 312, 4420, 13, 51514, 51514, 286, 478, 257, 955, 3429, 295, 445, 17343, 666, 1310, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09506481098678876, "compression_ratio": 1.65234375, "no_caption_prob": 5.5612668802496046e-05}, {"id": 898, "seek": 371100, "start": 3719.0, "end": 3722.0, "text": " It's been a pleasure. Thanks for bringing me on.", "tokens": [50364, 639, 3761, 575, 2138, 668, 28593, 990, 13, 407, 1309, 291, 370, 709, 337, 1348, 322, 281, 28593, 473, 613, 721, 337, 505, 293, 9192, 294, 13, 50764, 50764, 467, 311, 668, 257, 6834, 13, 2561, 337, 5062, 385, 322, 13, 50914, 50914, 2014, 456, 604, 10392, 300, 291, 576, 2748, 561, 1466, 700, 30, 51114, 51114, 400, 360, 291, 362, 604, 3593, 30, 1436, 291, 848, 309, 311, 588, 1152, 281, 915, 3593, 13, 51314, 51314, 407, 498, 291, 362, 665, 6123, 11, 300, 576, 312, 4420, 13, 51514, 51514, 286, 478, 257, 955, 3429, 295, 445, 17343, 666, 1310, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09506481098678876, "compression_ratio": 1.65234375, "no_caption_prob": 5.5612668802496046e-05}, {"id": 899, "seek": 371100, "start": 3722.0, "end": 3726.0, "text": " Are there any concepts that you would recommend people learn first?", "tokens": [50364, 639, 3761, 575, 2138, 668, 28593, 990, 13, 407, 1309, 291, 370, 709, 337, 1348, 322, 281, 28593, 473, 613, 721, 337, 505, 293, 9192, 294, 13, 50764, 50764, 467, 311, 668, 257, 6834, 13, 2561, 337, 5062, 385, 322, 13, 50914, 50914, 2014, 456, 604, 10392, 300, 291, 576, 2748, 561, 1466, 700, 30, 51114, 51114, 400, 360, 291, 362, 604, 3593, 30, 1436, 291, 848, 309, 311, 588, 1152, 281, 915, 3593, 13, 51314, 51314, 407, 498, 291, 362, 665, 6123, 11, 300, 576, 312, 4420, 13, 51514, 51514, 286, 478, 257, 955, 3429, 295, 445, 17343, 666, 1310, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09506481098678876, "compression_ratio": 1.65234375, "no_caption_prob": 5.5612668802496046e-05}, {"id": 900, "seek": 371100, "start": 3726.0, "end": 3730.0, "text": " And do you have any resources? Because you said it's very hard to find resources.", "tokens": [50364, 639, 3761, 575, 2138, 668, 28593, 990, 13, 407, 1309, 291, 370, 709, 337, 1348, 322, 281, 28593, 473, 613, 721, 337, 505, 293, 9192, 294, 13, 50764, 50764, 467, 311, 668, 257, 6834, 13, 2561, 337, 5062, 385, 322, 13, 50914, 50914, 2014, 456, 604, 10392, 300, 291, 576, 2748, 561, 1466, 700, 30, 51114, 51114, 400, 360, 291, 362, 604, 3593, 30, 1436, 291, 848, 309, 311, 588, 1152, 281, 915, 3593, 13, 51314, 51314, 407, 498, 291, 362, 665, 6123, 11, 300, 576, 312, 4420, 13, 51514, 51514, 286, 478, 257, 955, 3429, 295, 445, 17343, 666, 1310, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09506481098678876, "compression_ratio": 1.65234375, "no_caption_prob": 5.5612668802496046e-05}, {"id": 901, "seek": 371100, "start": 3730.0, "end": 3734.0, "text": " So if you have good links, that would be useful.", "tokens": [50364, 639, 3761, 575, 2138, 668, 28593, 990, 13, 407, 1309, 291, 370, 709, 337, 1348, 322, 281, 28593, 473, 613, 721, 337, 505, 293, 9192, 294, 13, 50764, 50764, 467, 311, 668, 257, 6834, 13, 2561, 337, 5062, 385, 322, 13, 50914, 50914, 2014, 456, 604, 10392, 300, 291, 576, 2748, 561, 1466, 700, 30, 51114, 51114, 400, 360, 291, 362, 604, 3593, 30, 1436, 291, 848, 309, 311, 588, 1152, 281, 915, 3593, 13, 51314, 51314, 407, 498, 291, 362, 665, 6123, 11, 300, 576, 312, 4420, 13, 51514, 51514, 286, 478, 257, 955, 3429, 295, 445, 17343, 666, 1310, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09506481098678876, "compression_ratio": 1.65234375, "no_caption_prob": 5.5612668802496046e-05}, {"id": 902, "seek": 371100, "start": 3734.0, "end": 3738.0, "text": " I'm a big fan of just digging into maybe.", "tokens": [50364, 639, 3761, 575, 2138, 668, 28593, 990, 13, 407, 1309, 291, 370, 709, 337, 1348, 322, 281, 28593, 473, 613, 721, 337, 505, 293, 9192, 294, 13, 50764, 50764, 467, 311, 668, 257, 6834, 13, 2561, 337, 5062, 385, 322, 13, 50914, 50914, 2014, 456, 604, 10392, 300, 291, 576, 2748, 561, 1466, 700, 30, 51114, 51114, 400, 360, 291, 362, 604, 3593, 30, 1436, 291, 848, 309, 311, 588, 1152, 281, 915, 3593, 13, 51314, 51314, 407, 498, 291, 362, 665, 6123, 11, 300, 576, 312, 4420, 13, 51514, 51514, 286, 478, 257, 955, 3429, 295, 445, 17343, 666, 1310, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09506481098678876, "compression_ratio": 1.65234375, "no_caption_prob": 5.5612668802496046e-05}, {"id": 903, "seek": 373800, "start": 3738.0, "end": 3743.0, "text": " I think it's a great place to learn, particularly because maybe exposes its constructors.", "tokens": [50364, 286, 519, 309, 311, 257, 869, 1081, 281, 1466, 11, 4098, 570, 1310, 1278, 4201, 1080, 7690, 830, 13, 50614, 50614, 407, 291, 393, 16945, 14853, 4007, 309, 293, 20459, 309, 293, 1333, 295, 536, 577, 309, 1985, 833, 264, 13376, 13, 50914, 50914, 1107, 5380, 286, 600, 1096, 365, 561, 949, 307, 767, 362, 552, 4445, 641, 1065, 4471, 293, 550, 322, 257, 1310, 281, 536, 577, 300, 1985, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07197331746419271, "compression_ratio": 1.5369458128078817, "no_caption_prob": 3.943010960938409e-05}, {"id": 904, "seek": 373800, "start": 3743.0, "end": 3749.0, "text": " So you can manually unwrap it and manipulate it and sort of see how it works under the hood.", "tokens": [50364, 286, 519, 309, 311, 257, 869, 1081, 281, 1466, 11, 4098, 570, 1310, 1278, 4201, 1080, 7690, 830, 13, 50614, 50614, 407, 291, 393, 16945, 14853, 4007, 309, 293, 20459, 309, 293, 1333, 295, 536, 577, 309, 1985, 833, 264, 13376, 13, 50914, 50914, 1107, 5380, 286, 600, 1096, 365, 561, 949, 307, 767, 362, 552, 4445, 641, 1065, 4471, 293, 550, 322, 257, 1310, 281, 536, 577, 300, 1985, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07197331746419271, "compression_ratio": 1.5369458128078817, "no_caption_prob": 3.943010960938409e-05}, {"id": 905, "seek": 373800, "start": 3749.0, "end": 3759.0, "text": " An exercise I've done with people before is actually have them implement their own map and then on a maybe to see how that works.", "tokens": [50364, 286, 519, 309, 311, 257, 869, 1081, 281, 1466, 11, 4098, 570, 1310, 1278, 4201, 1080, 7690, 830, 13, 50614, 50614, 407, 291, 393, 16945, 14853, 4007, 309, 293, 20459, 309, 293, 1333, 295, 536, 577, 309, 1985, 833, 264, 13376, 13, 50914, 50914, 1107, 5380, 286, 600, 1096, 365, 561, 949, 307, 767, 362, 552, 4445, 641, 1065, 4471, 293, 550, 322, 257, 1310, 281, 536, 577, 300, 1985, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07197331746419271, "compression_ratio": 1.5369458128078817, "no_caption_prob": 3.943010960938409e-05}, {"id": 906, "seek": 375900, "start": 3759.0, "end": 3769.0, "text": " I also have an article called the mechanics of maybe that sort of looks at it less from a patterns perspective and more from a here.", "tokens": [50364, 286, 611, 362, 364, 7222, 1219, 264, 12939, 295, 1310, 300, 1333, 295, 1542, 412, 309, 1570, 490, 257, 8294, 4585, 293, 544, 490, 257, 510, 13, 50864, 50864, 509, 434, 777, 281, 1310, 510, 311, 512, 2689, 6851, 300, 291, 1190, 666, 13, 51064, 51064, 509, 576, 2464, 257, 1389, 6114, 411, 341, 13, 400, 570, 309, 311, 1270, 257, 2689, 2590, 11, 264, 6405, 2893, 264, 36133, 337, 291, 11, 597, 917, 493, 885, 721, 411, 4471, 293, 293, 550, 13, 51564, 51564, 583, 264, 24002, 11, 754, 337, 445, 264, 2649, 1296, 4471, 293, 293, 550, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14421501526465783, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.00024148120428435504}, {"id": 907, "seek": 375900, "start": 3769.0, "end": 3773.0, "text": " You're new to maybe here's some common situations that you run into.", "tokens": [50364, 286, 611, 362, 364, 7222, 1219, 264, 12939, 295, 1310, 300, 1333, 295, 1542, 412, 309, 1570, 490, 257, 8294, 4585, 293, 544, 490, 257, 510, 13, 50864, 50864, 509, 434, 777, 281, 1310, 510, 311, 512, 2689, 6851, 300, 291, 1190, 666, 13, 51064, 51064, 509, 576, 2464, 257, 1389, 6114, 411, 341, 13, 400, 570, 309, 311, 1270, 257, 2689, 2590, 11, 264, 6405, 2893, 264, 36133, 337, 291, 11, 597, 917, 493, 885, 721, 411, 4471, 293, 293, 550, 13, 51564, 51564, 583, 264, 24002, 11, 754, 337, 445, 264, 2649, 1296, 4471, 293, 293, 550, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14421501526465783, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.00024148120428435504}, {"id": 908, "seek": 375900, "start": 3773.0, "end": 3783.0, "text": " You would write a case expression like this. And because it's such a common situation, the library provide the helper for you, which end up being things like map and and then.", "tokens": [50364, 286, 611, 362, 364, 7222, 1219, 264, 12939, 295, 1310, 300, 1333, 295, 1542, 412, 309, 1570, 490, 257, 8294, 4585, 293, 544, 490, 257, 510, 13, 50864, 50864, 509, 434, 777, 281, 1310, 510, 311, 512, 2689, 6851, 300, 291, 1190, 666, 13, 51064, 51064, 509, 576, 2464, 257, 1389, 6114, 411, 341, 13, 400, 570, 309, 311, 1270, 257, 2689, 2590, 11, 264, 6405, 2893, 264, 36133, 337, 291, 11, 597, 917, 493, 885, 721, 411, 4471, 293, 293, 550, 13, 51564, 51564, 583, 264, 24002, 11, 754, 337, 445, 264, 2649, 1296, 4471, 293, 293, 550, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14421501526465783, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.00024148120428435504}, {"id": 909, "seek": 375900, "start": 3783.0, "end": 3788.0, "text": " But the intuition, even for just the difference between map and and then.", "tokens": [50364, 286, 611, 362, 364, 7222, 1219, 264, 12939, 295, 1310, 300, 1333, 295, 1542, 412, 309, 1570, 490, 257, 8294, 4585, 293, 544, 490, 257, 510, 13, 50864, 50864, 509, 434, 777, 281, 1310, 510, 311, 512, 2689, 6851, 300, 291, 1190, 666, 13, 51064, 51064, 509, 576, 2464, 257, 1389, 6114, 411, 341, 13, 400, 570, 309, 311, 1270, 257, 2689, 2590, 11, 264, 6405, 2893, 264, 36133, 337, 291, 11, 597, 917, 493, 885, 721, 411, 4471, 293, 293, 550, 13, 51564, 51564, 583, 264, 24002, 11, 754, 337, 445, 264, 2649, 1296, 4471, 293, 293, 550, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.14421501526465783, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.00024148120428435504}, {"id": 910, "seek": 378800, "start": 3788.0, "end": 3800.0, "text": " I think you touched on a little bit, Dylan, the idea that not only transforms the value inside does not produce a new maybe whereas and then does and sort of what the implications of that can be.", "tokens": [50364, 286, 519, 291, 9828, 322, 257, 707, 857, 11, 28160, 11, 264, 1558, 300, 406, 787, 35592, 264, 2158, 1854, 775, 406, 5258, 257, 777, 1310, 9735, 293, 550, 775, 293, 1333, 295, 437, 264, 16602, 295, 300, 393, 312, 13, 50964, 50964, 1779, 13, 467, 307, 13, 286, 534, 411, 341, 1558, 295, 1228, 1310, 382, 364, 5380, 281, 718, 311, 1322, 613, 493, 490, 8459, 13, 51364, 51364, 1485, 551, 300, 311, 257, 707, 857, 806, 23053, 307, 1310, 1177, 380, 362, 257, 7754, 2445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11645457018976627, "compression_ratio": 1.6144067796610169, "no_caption_prob": 6.144110557215754e-06}, {"id": 911, "seek": 378800, "start": 3800.0, "end": 3808.0, "text": " Right. It is. I really like this idea of using maybe as an exercise to let's build these up from scratch.", "tokens": [50364, 286, 519, 291, 9828, 322, 257, 707, 857, 11, 28160, 11, 264, 1558, 300, 406, 787, 35592, 264, 2158, 1854, 775, 406, 5258, 257, 777, 1310, 9735, 293, 550, 775, 293, 1333, 295, 437, 264, 16602, 295, 300, 393, 312, 13, 50964, 50964, 1779, 13, 467, 307, 13, 286, 534, 411, 341, 1558, 295, 1228, 1310, 382, 364, 5380, 281, 718, 311, 1322, 613, 493, 490, 8459, 13, 51364, 51364, 1485, 551, 300, 311, 257, 707, 857, 806, 23053, 307, 1310, 1177, 380, 362, 257, 7754, 2445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11645457018976627, "compression_ratio": 1.6144067796610169, "no_caption_prob": 6.144110557215754e-06}, {"id": 912, "seek": 378800, "start": 3808.0, "end": 3813.0, "text": " One thing that's a little bit elusive is maybe doesn't have a succeed function.", "tokens": [50364, 286, 519, 291, 9828, 322, 257, 707, 857, 11, 28160, 11, 264, 1558, 300, 406, 787, 35592, 264, 2158, 1854, 775, 406, 5258, 257, 777, 1310, 9735, 293, 550, 775, 293, 1333, 295, 437, 264, 16602, 295, 300, 393, 312, 13, 50964, 50964, 1779, 13, 467, 307, 13, 286, 534, 411, 341, 1558, 295, 1228, 1310, 382, 364, 5380, 281, 718, 311, 1322, 613, 493, 490, 8459, 13, 51364, 51364, 1485, 551, 300, 311, 257, 707, 857, 806, 23053, 307, 1310, 1177, 380, 362, 257, 7754, 2445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11645457018976627, "compression_ratio": 1.6144067796610169, "no_caption_prob": 6.144110557215754e-06}, {"id": 913, "seek": 381300, "start": 3813.0, "end": 3819.0, "text": " I mean, it does. It's just not called that. And it's not a standard function. It's a constructor function. It's just.", "tokens": [50364, 286, 914, 11, 309, 775, 13, 467, 311, 445, 406, 1219, 300, 13, 400, 309, 311, 406, 257, 3832, 2445, 13, 467, 311, 257, 47479, 2445, 13, 467, 311, 445, 13, 50664, 50664, 400, 370, 291, 362, 281, 534, 2339, 686, 428, 2575, 281, 536, 729, 8294, 456, 13, 50914, 50914, 865, 13, 400, 264, 1778, 291, 1565, 309, 493, 307, 570, 264, 7123, 11, 264, 10910, 7123, 337, 437, 257, 1108, 345, 307, 7029, 364, 293, 550, 2445, 293, 512, 1254, 295, 47479, 13, 51414, 51414, 1779, 13, 492, 600, 1333, 295, 406, 2835, 300, 484, 6588, 322, 264, 3500, 11, 457, 300, 311, 437, 264, 9860, 7123, 1619, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08329419675080672, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.5070250558201224e-05}, {"id": 914, "seek": 381300, "start": 3819.0, "end": 3824.0, "text": " And so you have to really squint your eyes to see those patterns there.", "tokens": [50364, 286, 914, 11, 309, 775, 13, 467, 311, 445, 406, 1219, 300, 13, 400, 309, 311, 406, 257, 3832, 2445, 13, 467, 311, 257, 47479, 2445, 13, 467, 311, 445, 13, 50664, 50664, 400, 370, 291, 362, 281, 534, 2339, 686, 428, 2575, 281, 536, 729, 8294, 456, 13, 50914, 50914, 865, 13, 400, 264, 1778, 291, 1565, 309, 493, 307, 570, 264, 7123, 11, 264, 10910, 7123, 337, 437, 257, 1108, 345, 307, 7029, 364, 293, 550, 2445, 293, 512, 1254, 295, 47479, 13, 51414, 51414, 1779, 13, 492, 600, 1333, 295, 406, 2835, 300, 484, 6588, 322, 264, 3500, 11, 457, 300, 311, 437, 264, 9860, 7123, 1619, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08329419675080672, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.5070250558201224e-05}, {"id": 915, "seek": 381300, "start": 3824.0, "end": 3834.0, "text": " Yeah. And the reason you bring it up is because the definition, the strict definition for what a monad is requires an and then function and some form of constructor.", "tokens": [50364, 286, 914, 11, 309, 775, 13, 467, 311, 445, 406, 1219, 300, 13, 400, 309, 311, 406, 257, 3832, 2445, 13, 467, 311, 257, 47479, 2445, 13, 467, 311, 445, 13, 50664, 50664, 400, 370, 291, 362, 281, 534, 2339, 686, 428, 2575, 281, 536, 729, 8294, 456, 13, 50914, 50914, 865, 13, 400, 264, 1778, 291, 1565, 309, 493, 307, 570, 264, 7123, 11, 264, 10910, 7123, 337, 437, 257, 1108, 345, 307, 7029, 364, 293, 550, 2445, 293, 512, 1254, 295, 47479, 13, 51414, 51414, 1779, 13, 492, 600, 1333, 295, 406, 2835, 300, 484, 6588, 322, 264, 3500, 11, 457, 300, 311, 437, 264, 9860, 7123, 1619, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08329419675080672, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.5070250558201224e-05}, {"id": 916, "seek": 381300, "start": 3834.0, "end": 3842.0, "text": " Right. We've sort of not mentioned that out loud on the episode, but that's what the formal definition says.", "tokens": [50364, 286, 914, 11, 309, 775, 13, 467, 311, 445, 406, 1219, 300, 13, 400, 309, 311, 406, 257, 3832, 2445, 13, 467, 311, 257, 47479, 2445, 13, 467, 311, 445, 13, 50664, 50664, 400, 370, 291, 362, 281, 534, 2339, 686, 428, 2575, 281, 536, 729, 8294, 456, 13, 50914, 50914, 865, 13, 400, 264, 1778, 291, 1565, 309, 493, 307, 570, 264, 7123, 11, 264, 10910, 7123, 337, 437, 257, 1108, 345, 307, 7029, 364, 293, 550, 2445, 293, 512, 1254, 295, 47479, 13, 51414, 51414, 1779, 13, 492, 600, 1333, 295, 406, 2835, 300, 484, 6588, 322, 264, 3500, 11, 457, 300, 311, 437, 264, 9860, 7123, 1619, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08329419675080672, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.5070250558201224e-05}, {"id": 917, "seek": 384200, "start": 3842.0, "end": 3855.0, "text": " And for some types that don't expose the internals of the type, for example, task or JSON to code, they will often expose a succeed function, which is a constructor.", "tokens": [50364, 400, 337, 512, 3467, 300, 500, 380, 19219, 264, 2154, 1124, 295, 264, 2010, 11, 337, 1365, 11, 5633, 420, 31828, 281, 3089, 11, 436, 486, 2049, 19219, 257, 7754, 2445, 11, 597, 307, 257, 47479, 13, 51014, 51014, 1779, 13, 7587, 13, 865, 13, 407, 11, 28160, 11, 286, 478, 6369, 498, 291, 1143, 604, 295, 613, 8294, 293, 10392, 562, 291, 645, 14685, 264, 1065, 21884, 13695, 6405, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08815183639526367, "compression_ratio": 1.4166666666666667, "no_caption_prob": 8.139598321577068e-06}, {"id": 918, "seek": 384200, "start": 3855.0, "end": 3865.0, "text": " Right. Exactly. Yeah. So, Dylan, I'm curious if you used any of these patterns and concepts when you were designing the own GraphQL library.", "tokens": [50364, 400, 337, 512, 3467, 300, 500, 380, 19219, 264, 2154, 1124, 295, 264, 2010, 11, 337, 1365, 11, 5633, 420, 31828, 281, 3089, 11, 436, 486, 2049, 19219, 257, 7754, 2445, 11, 597, 307, 257, 47479, 13, 51014, 51014, 1779, 13, 7587, 13, 865, 13, 407, 11, 28160, 11, 286, 478, 6369, 498, 291, 1143, 604, 295, 613, 8294, 293, 10392, 562, 291, 645, 14685, 264, 1065, 21884, 13695, 6405, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08815183639526367, "compression_ratio": 1.4166666666666667, "no_caption_prob": 8.139598321577068e-06}, {"id": 919, "seek": 386500, "start": 3865.0, "end": 3876.0, "text": " You know, I wish I even knew what these things were back then. They were much fuzzier in my mind at the time, like just conceptually in category theory and those things.", "tokens": [50364, 509, 458, 11, 286, 3172, 286, 754, 2586, 437, 613, 721, 645, 646, 550, 13, 814, 645, 709, 283, 16740, 811, 294, 452, 1575, 412, 264, 565, 11, 411, 445, 3410, 671, 294, 7719, 5261, 293, 729, 721, 13, 50914, 50914, 583, 754, 445, 264, 8294, 2969, 645, 1570, 1850, 294, 452, 1575, 13, 407, 286, 632, 572, 1558, 466, 613, 721, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.05736684087497085, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.944004492950626e-05}, {"id": 920, "seek": 386500, "start": 3876.0, "end": 3883.0, "text": " But even just the patterns themselves were less clear in my mind. So I had no idea about these things.", "tokens": [50364, 509, 458, 11, 286, 3172, 286, 754, 2586, 437, 613, 721, 645, 646, 550, 13, 814, 645, 709, 283, 16740, 811, 294, 452, 1575, 412, 264, 565, 11, 411, 445, 3410, 671, 294, 7719, 5261, 293, 729, 721, 13, 50914, 50914, 583, 754, 445, 264, 8294, 2969, 645, 1570, 1850, 294, 452, 1575, 13, 407, 286, 632, 572, 1558, 466, 613, 721, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.05736684087497085, "compression_ratio": 1.5454545454545454, "no_caption_prob": 3.944004492950626e-05}, {"id": 921, "seek": 388300, "start": 3883.0, "end": 3901.0, "text": " And the original Elm GraphQL, which was called GraphQL, it had these core concepts of like, you know, making it safe to query for your GraphQL data and having phantom types to protect that you're querying in the right context in these things.", "tokens": [50364, 400, 264, 3380, 2699, 76, 21884, 13695, 11, 597, 390, 1219, 21884, 13695, 11, 309, 632, 613, 4965, 10392, 295, 411, 11, 291, 458, 11, 1455, 309, 3273, 281, 14581, 337, 428, 21884, 13695, 1412, 293, 1419, 903, 25796, 3467, 281, 2371, 300, 291, 434, 7083, 1840, 294, 264, 558, 4319, 294, 613, 721, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.08986058477628028, "compression_ratio": 1.4578313253012047, "no_caption_prob": 2.8408618163666688e-05}, {"id": 922, "seek": 390100, "start": 3901.0, "end": 3915.0, "text": " But it really didn't have any of these properties that we've been talking about of monoids and functor and all these things. So there was a selection set and there was a field.", "tokens": [50364, 583, 309, 534, 994, 380, 362, 604, 295, 613, 7221, 300, 321, 600, 668, 1417, 466, 295, 35624, 3742, 293, 1019, 1672, 293, 439, 613, 721, 13, 407, 456, 390, 257, 9450, 992, 293, 456, 390, 257, 2519, 13, 51064, 51064, 400, 729, 645, 732, 819, 10392, 13, 51164, 51164, 2589, 291, 362, 300, 1333, 295, 1481, 15517, 9362, 646, 550, 30, 407, 411, 264, 9450, 992, 365, 1322, 721, 484, 30, 51564, 51564, 821, 390, 13, 821, 390, 9450, 992, 365, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13546174148033405, "compression_ratio": 1.6901408450704225, "no_caption_prob": 4.3138967953382235e-07}, {"id": 923, "seek": 390100, "start": 3915.0, "end": 3917.0, "text": " And those were two different concepts.", "tokens": [50364, 583, 309, 534, 994, 380, 362, 604, 295, 613, 7221, 300, 321, 600, 668, 1417, 466, 295, 35624, 3742, 293, 1019, 1672, 293, 439, 613, 721, 13, 407, 456, 390, 257, 9450, 992, 293, 456, 390, 257, 2519, 13, 51064, 51064, 400, 729, 645, 732, 819, 10392, 13, 51164, 51164, 2589, 291, 362, 300, 1333, 295, 1481, 15517, 9362, 646, 550, 30, 407, 411, 264, 9450, 992, 365, 1322, 721, 484, 30, 51564, 51564, 821, 390, 13, 821, 390, 9450, 992, 365, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13546174148033405, "compression_ratio": 1.6901408450704225, "no_caption_prob": 4.3138967953382235e-07}, {"id": 924, "seek": 390100, "start": 3917.0, "end": 3925.0, "text": " Did you have that sort of nice pipeline API back then? So like the selection set with build things out?", "tokens": [50364, 583, 309, 534, 994, 380, 362, 604, 295, 613, 7221, 300, 321, 600, 668, 1417, 466, 295, 35624, 3742, 293, 1019, 1672, 293, 439, 613, 721, 13, 407, 456, 390, 257, 9450, 992, 293, 456, 390, 257, 2519, 13, 51064, 51064, 400, 729, 645, 732, 819, 10392, 13, 51164, 51164, 2589, 291, 362, 300, 1333, 295, 1481, 15517, 9362, 646, 550, 30, 407, 411, 264, 9450, 992, 365, 1322, 721, 484, 30, 51564, 51564, 821, 390, 13, 821, 390, 9450, 992, 365, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13546174148033405, "compression_ratio": 1.6901408450704225, "no_caption_prob": 4.3138967953382235e-07}, {"id": 925, "seek": 390100, "start": 3925.0, "end": 3928.0, "text": " There was. There was selection set with.", "tokens": [50364, 583, 309, 534, 994, 380, 362, 604, 295, 613, 7221, 300, 321, 600, 668, 1417, 466, 295, 35624, 3742, 293, 1019, 1672, 293, 439, 613, 721, 13, 407, 456, 390, 257, 9450, 992, 293, 456, 390, 257, 2519, 13, 51064, 51064, 400, 729, 645, 732, 819, 10392, 13, 51164, 51164, 2589, 291, 362, 300, 1333, 295, 1481, 15517, 9362, 646, 550, 30, 407, 411, 264, 9450, 992, 365, 1322, 721, 484, 30, 51564, 51564, 821, 390, 13, 821, 390, 9450, 992, 365, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13546174148033405, "compression_ratio": 1.6901408450704225, "no_caption_prob": 4.3138967953382235e-07}, {"id": 926, "seek": 392800, "start": 3928.0, "end": 3936.0, "text": " And so that, I guess, just to clarify for our listeners, is applicative. So selection sets could be combined applicatively.", "tokens": [50364, 400, 370, 300, 11, 286, 2041, 11, 445, 281, 17594, 337, 527, 23274, 11, 307, 2580, 1166, 13, 407, 9450, 6352, 727, 312, 9354, 2580, 19020, 13, 50764, 50764, 583, 291, 611, 362, 341, 3410, 295, 7909, 597, 727, 406, 312, 9354, 2580, 19020, 13, 50964, 50964, 1042, 11, 586, 510, 311, 264, 551, 13, 286, 576, 18474, 281, 2041, 300, 309, 576, 406, 312, 2580, 1166, 570, 309, 2067, 380, 2580, 19020, 21928, 309, 365, 1080, 1065, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0956276257832845, "compression_ratio": 1.7414634146341463, "no_caption_prob": 7.7668755693594e-06}, {"id": 927, "seek": 392800, "start": 3936.0, "end": 3940.0, "text": " But you also have this concept of fields which could not be combined applicatively.", "tokens": [50364, 400, 370, 300, 11, 286, 2041, 11, 445, 281, 17594, 337, 527, 23274, 11, 307, 2580, 1166, 13, 407, 9450, 6352, 727, 312, 9354, 2580, 19020, 13, 50764, 50764, 583, 291, 611, 362, 341, 3410, 295, 7909, 597, 727, 406, 312, 9354, 2580, 19020, 13, 50964, 50964, 1042, 11, 586, 510, 311, 264, 551, 13, 286, 576, 18474, 281, 2041, 300, 309, 576, 406, 312, 2580, 1166, 570, 309, 2067, 380, 2580, 19020, 21928, 309, 365, 1080, 1065, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0956276257832845, "compression_ratio": 1.7414634146341463, "no_caption_prob": 7.7668755693594e-06}, {"id": 928, "seek": 392800, "start": 3940.0, "end": 3951.0, "text": " Well, now here's the thing. I would venture to guess that it would not be applicative because it wasn't applicatively combining it with its own type.", "tokens": [50364, 400, 370, 300, 11, 286, 2041, 11, 445, 281, 17594, 337, 527, 23274, 11, 307, 2580, 1166, 13, 407, 9450, 6352, 727, 312, 9354, 2580, 19020, 13, 50764, 50764, 583, 291, 611, 362, 341, 3410, 295, 7909, 597, 727, 406, 312, 9354, 2580, 19020, 13, 50964, 50964, 1042, 11, 586, 510, 311, 264, 551, 13, 286, 576, 18474, 281, 2041, 300, 309, 576, 406, 312, 2580, 1166, 570, 309, 2067, 380, 2580, 19020, 21928, 309, 365, 1080, 1065, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0956276257832845, "compression_ratio": 1.7414634146341463, "no_caption_prob": 7.7668755693594e-06}, {"id": 929, "seek": 395100, "start": 3951.0, "end": 3962.0, "text": " You would build up a selection set. So you would say, here's a selection set. And I can say with field, with field, with field. And it takes it on to a selection set.", "tokens": [50364, 509, 576, 1322, 493, 257, 9450, 992, 13, 407, 291, 576, 584, 11, 510, 311, 257, 9450, 992, 13, 400, 286, 393, 584, 365, 2519, 11, 365, 2519, 11, 365, 2519, 13, 400, 309, 2516, 309, 322, 281, 257, 9450, 992, 13, 50914, 50914, 509, 434, 558, 13, 663, 576, 406, 312, 2580, 1166, 13, 51014, 51014, 1779, 13, 407, 264, 1778, 309, 630, 300, 390, 570, 286, 390, 1382, 281, 360, 11, 286, 2978, 281, 652, 988, 286, 632, 257, 3845, 636, 295, 7083, 1840, 337, 552, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12753447665963122, "compression_ratio": 1.7295918367346939, "no_caption_prob": 3.5354067222215235e-05}, {"id": 930, "seek": 395100, "start": 3962.0, "end": 3964.0, "text": " You're right. That would not be applicative.", "tokens": [50364, 509, 576, 1322, 493, 257, 9450, 992, 13, 407, 291, 576, 584, 11, 510, 311, 257, 9450, 992, 13, 400, 286, 393, 584, 365, 2519, 11, 365, 2519, 11, 365, 2519, 13, 400, 309, 2516, 309, 322, 281, 257, 9450, 992, 13, 50914, 50914, 509, 434, 558, 13, 663, 576, 406, 312, 2580, 1166, 13, 51014, 51014, 1779, 13, 407, 264, 1778, 309, 630, 300, 390, 570, 286, 390, 1382, 281, 360, 11, 286, 2978, 281, 652, 988, 286, 632, 257, 3845, 636, 295, 7083, 1840, 337, 552, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12753447665963122, "compression_ratio": 1.7295918367346939, "no_caption_prob": 3.5354067222215235e-05}, {"id": 931, "seek": 395100, "start": 3964.0, "end": 3976.0, "text": " Right. So the reason it did that was because I was trying to do, I needed to make sure I had a unique way of querying for them.", "tokens": [50364, 509, 576, 1322, 493, 257, 9450, 992, 13, 407, 291, 576, 584, 11, 510, 311, 257, 9450, 992, 13, 400, 286, 393, 584, 365, 2519, 11, 365, 2519, 11, 365, 2519, 13, 400, 309, 2516, 309, 322, 281, 257, 9450, 992, 13, 50914, 50914, 509, 434, 558, 13, 663, 576, 406, 312, 2580, 1166, 13, 51014, 51014, 1779, 13, 407, 264, 1778, 309, 630, 300, 390, 570, 286, 390, 1382, 281, 360, 11, 286, 2978, 281, 652, 988, 286, 632, 257, 3845, 636, 295, 7083, 1840, 337, 552, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.12753447665963122, "compression_ratio": 1.7295918367346939, "no_caption_prob": 3.5354067222215235e-05}, {"id": 932, "seek": 397600, "start": 3976.0, "end": 3986.0, "text": " So in GraphQL, in a selection set, you can say, give me, you know, the avatar for user one, two, three.", "tokens": [50364, 407, 294, 21884, 13695, 11, 294, 257, 9450, 992, 11, 291, 393, 584, 11, 976, 385, 11, 291, 458, 11, 264, 36205, 337, 4195, 472, 11, 732, 11, 1045, 13, 50864, 50864, 583, 291, 393, 584, 291, 393, 1320, 12869, 281, 428, 7909, 294, 21884, 13695, 9450, 6352, 13, 51114, 51114, 407, 291, 727, 584, 11, 731, 11, 286, 528, 264, 2416, 26746, 293, 286, 528, 264, 1359, 26746, 13, 51314, 51314, 1042, 11, 729, 576, 1293, 312, 26746, 11, 264, 26746, 2519, 13, 51514, 51514, 400, 300, 1487, 646, 833, 257, 31828, 2141, 295, 26746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07928815218481687, "compression_ratio": 1.7652582159624413, "no_caption_prob": 7.601897232234478e-05}, {"id": 933, "seek": 397600, "start": 3986.0, "end": 3991.0, "text": " But you can say you can pass arguments to your fields in GraphQL selection sets.", "tokens": [50364, 407, 294, 21884, 13695, 11, 294, 257, 9450, 992, 11, 291, 393, 584, 11, 976, 385, 11, 291, 458, 11, 264, 36205, 337, 4195, 472, 11, 732, 11, 1045, 13, 50864, 50864, 583, 291, 393, 584, 291, 393, 1320, 12869, 281, 428, 7909, 294, 21884, 13695, 9450, 6352, 13, 51114, 51114, 407, 291, 727, 584, 11, 731, 11, 286, 528, 264, 2416, 26746, 293, 286, 528, 264, 1359, 26746, 13, 51314, 51314, 1042, 11, 729, 576, 1293, 312, 26746, 11, 264, 26746, 2519, 13, 51514, 51514, 400, 300, 1487, 646, 833, 257, 31828, 2141, 295, 26746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07928815218481687, "compression_ratio": 1.7652582159624413, "no_caption_prob": 7.601897232234478e-05}, {"id": 934, "seek": 397600, "start": 3991.0, "end": 3995.0, "text": " So you could say, well, I want the large thumbnail and I want the small thumbnail.", "tokens": [50364, 407, 294, 21884, 13695, 11, 294, 257, 9450, 992, 11, 291, 393, 584, 11, 976, 385, 11, 291, 458, 11, 264, 36205, 337, 4195, 472, 11, 732, 11, 1045, 13, 50864, 50864, 583, 291, 393, 584, 291, 393, 1320, 12869, 281, 428, 7909, 294, 21884, 13695, 9450, 6352, 13, 51114, 51114, 407, 291, 727, 584, 11, 731, 11, 286, 528, 264, 2416, 26746, 293, 286, 528, 264, 1359, 26746, 13, 51314, 51314, 1042, 11, 729, 576, 1293, 312, 26746, 11, 264, 26746, 2519, 13, 51514, 51514, 400, 300, 1487, 646, 833, 257, 31828, 2141, 295, 26746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07928815218481687, "compression_ratio": 1.7652582159624413, "no_caption_prob": 7.601897232234478e-05}, {"id": 935, "seek": 397600, "start": 3995.0, "end": 3999.0, "text": " Well, those would both be thumbnail, the thumbnail field.", "tokens": [50364, 407, 294, 21884, 13695, 11, 294, 257, 9450, 992, 11, 291, 393, 584, 11, 976, 385, 11, 291, 458, 11, 264, 36205, 337, 4195, 472, 11, 732, 11, 1045, 13, 50864, 50864, 583, 291, 393, 584, 291, 393, 1320, 12869, 281, 428, 7909, 294, 21884, 13695, 9450, 6352, 13, 51114, 51114, 407, 291, 727, 584, 11, 731, 11, 286, 528, 264, 2416, 26746, 293, 286, 528, 264, 1359, 26746, 13, 51314, 51314, 1042, 11, 729, 576, 1293, 312, 26746, 11, 264, 26746, 2519, 13, 51514, 51514, 400, 300, 1487, 646, 833, 257, 31828, 2141, 295, 26746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07928815218481687, "compression_ratio": 1.7652582159624413, "no_caption_prob": 7.601897232234478e-05}, {"id": 936, "seek": 397600, "start": 3999.0, "end": 4004.0, "text": " And that comes back under a JSON key of thumbnail.", "tokens": [50364, 407, 294, 21884, 13695, 11, 294, 257, 9450, 992, 11, 291, 393, 584, 11, 976, 385, 11, 291, 458, 11, 264, 36205, 337, 4195, 472, 11, 732, 11, 1045, 13, 50864, 50864, 583, 291, 393, 584, 291, 393, 1320, 12869, 281, 428, 7909, 294, 21884, 13695, 9450, 6352, 13, 51114, 51114, 407, 291, 727, 584, 11, 731, 11, 286, 528, 264, 2416, 26746, 293, 286, 528, 264, 1359, 26746, 13, 51314, 51314, 1042, 11, 729, 576, 1293, 312, 26746, 11, 264, 26746, 2519, 13, 51514, 51514, 400, 300, 1487, 646, 833, 257, 31828, 2141, 295, 26746, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07928815218481687, "compression_ratio": 1.7652582159624413, "no_caption_prob": 7.601897232234478e-05}, {"id": 937, "seek": 400400, "start": 4004.0, "end": 4007.0, "text": " But those both come back under the same JSON key.", "tokens": [50364, 583, 729, 1293, 808, 646, 833, 264, 912, 31828, 2141, 13, 50514, 50514, 407, 286, 643, 257, 636, 281, 31474, 312, 1075, 281, 483, 1184, 2519, 300, 291, 434, 31937, 13, 50764, 50764, 400, 570, 295, 300, 11, 286, 576, 584, 11, 731, 11, 498, 286, 478, 5127, 322, 257, 2519, 300, 1217, 8198, 11, 370, 286, 362, 26746, 293, 291, 434, 5127, 26746, 797, 13, 51264, 51264, 407, 562, 291, 584, 365, 26746, 1359, 293, 550, 365, 26746, 2416, 11, 586, 309, 311, 516, 281, 909, 26746, 886, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05686696539533899, "compression_ratio": 1.6577777777777778, "no_caption_prob": 3.219124482711777e-05}, {"id": 938, "seek": 400400, "start": 4007.0, "end": 4012.0, "text": " So I need a way to uniquely be able to get each field that you're requesting.", "tokens": [50364, 583, 729, 1293, 808, 646, 833, 264, 912, 31828, 2141, 13, 50514, 50514, 407, 286, 643, 257, 636, 281, 31474, 312, 1075, 281, 483, 1184, 2519, 300, 291, 434, 31937, 13, 50764, 50764, 400, 570, 295, 300, 11, 286, 576, 584, 11, 731, 11, 498, 286, 478, 5127, 322, 257, 2519, 300, 1217, 8198, 11, 370, 286, 362, 26746, 293, 291, 434, 5127, 26746, 797, 13, 51264, 51264, 407, 562, 291, 584, 365, 26746, 1359, 293, 550, 365, 26746, 2416, 11, 586, 309, 311, 516, 281, 909, 26746, 886, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05686696539533899, "compression_ratio": 1.6577777777777778, "no_caption_prob": 3.219124482711777e-05}, {"id": 939, "seek": 400400, "start": 4012.0, "end": 4022.0, "text": " And because of that, I would say, well, if I'm adding on a field that already exists, so I have thumbnail and you're adding thumbnail again.", "tokens": [50364, 583, 729, 1293, 808, 646, 833, 264, 912, 31828, 2141, 13, 50514, 50514, 407, 286, 643, 257, 636, 281, 31474, 312, 1075, 281, 483, 1184, 2519, 300, 291, 434, 31937, 13, 50764, 50764, 400, 570, 295, 300, 11, 286, 576, 584, 11, 731, 11, 498, 286, 478, 5127, 322, 257, 2519, 300, 1217, 8198, 11, 370, 286, 362, 26746, 293, 291, 434, 5127, 26746, 797, 13, 51264, 51264, 407, 562, 291, 584, 365, 26746, 1359, 293, 550, 365, 26746, 2416, 11, 586, 309, 311, 516, 281, 909, 26746, 886, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05686696539533899, "compression_ratio": 1.6577777777777778, "no_caption_prob": 3.219124482711777e-05}, {"id": 940, "seek": 400400, "start": 4022.0, "end": 4030.0, "text": " So when you say with thumbnail small and then with thumbnail large, now it's going to add thumbnail too.", "tokens": [50364, 583, 729, 1293, 808, 646, 833, 264, 912, 31828, 2141, 13, 50514, 50514, 407, 286, 643, 257, 636, 281, 31474, 312, 1075, 281, 483, 1184, 2519, 300, 291, 434, 31937, 13, 50764, 50764, 400, 570, 295, 300, 11, 286, 576, 584, 11, 731, 11, 498, 286, 478, 5127, 322, 257, 2519, 300, 1217, 8198, 11, 370, 286, 362, 26746, 293, 291, 434, 5127, 26746, 797, 13, 51264, 51264, 407, 562, 291, 584, 365, 26746, 1359, 293, 550, 365, 26746, 2416, 11, 586, 309, 311, 516, 281, 909, 26746, 886, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05686696539533899, "compression_ratio": 1.6577777777777778, "no_caption_prob": 3.219124482711777e-05}, {"id": 941, "seek": 403000, "start": 4030.0, "end": 4035.0, "text": " It's going to add an alias the second time you add something. So it's no longer unique.", "tokens": [50364, 467, 311, 516, 281, 909, 364, 419, 4609, 264, 1150, 565, 291, 909, 746, 13, 407, 309, 311, 572, 2854, 3845, 13, 50614, 50614, 400, 370, 570, 295, 300, 11420, 2607, 11, 562, 286, 390, 1382, 281, 2573, 484, 577, 281, 534, 294, 44357, 11, 50914, 50914, 286, 390, 1382, 281, 2573, 484, 577, 281, 19297, 613, 6064, 293, 2390, 493, 257, 9450, 992, 689, 286, 727, 10432, 721, 11, 689, 286, 727, 360, 4471, 732, 13, 51314, 51314, 400, 286, 2586, 300, 286, 1415, 4471, 732, 11, 286, 2041, 11, 570, 286, 2586, 300, 286, 727, 360, 1481, 721, 365, 31828, 979, 378, 433, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053313519737937236, "compression_ratio": 1.7764227642276422, "no_caption_prob": 2.710796798055526e-05}, {"id": 942, "seek": 403000, "start": 4035.0, "end": 4041.0, "text": " And so because of that implementation detail, when I was trying to figure out how to really in hindsight,", "tokens": [50364, 467, 311, 516, 281, 909, 364, 419, 4609, 264, 1150, 565, 291, 909, 746, 13, 407, 309, 311, 572, 2854, 3845, 13, 50614, 50614, 400, 370, 570, 295, 300, 11420, 2607, 11, 562, 286, 390, 1382, 281, 2573, 484, 577, 281, 534, 294, 44357, 11, 50914, 50914, 286, 390, 1382, 281, 2573, 484, 577, 281, 19297, 613, 6064, 293, 2390, 493, 257, 9450, 992, 689, 286, 727, 10432, 721, 11, 689, 286, 727, 360, 4471, 732, 13, 51314, 51314, 400, 286, 2586, 300, 286, 1415, 4471, 732, 11, 286, 2041, 11, 570, 286, 2586, 300, 286, 727, 360, 1481, 721, 365, 31828, 979, 378, 433, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053313519737937236, "compression_ratio": 1.7764227642276422, "no_caption_prob": 2.710796798055526e-05}, {"id": 943, "seek": 403000, "start": 4041.0, "end": 4049.0, "text": " I was trying to figure out how to obey these laws and building up a selection set where I could combine things, where I could do map two.", "tokens": [50364, 467, 311, 516, 281, 909, 364, 419, 4609, 264, 1150, 565, 291, 909, 746, 13, 407, 309, 311, 572, 2854, 3845, 13, 50614, 50614, 400, 370, 570, 295, 300, 11420, 2607, 11, 562, 286, 390, 1382, 281, 2573, 484, 577, 281, 534, 294, 44357, 11, 50914, 50914, 286, 390, 1382, 281, 2573, 484, 577, 281, 19297, 613, 6064, 293, 2390, 493, 257, 9450, 992, 689, 286, 727, 10432, 721, 11, 689, 286, 727, 360, 4471, 732, 13, 51314, 51314, 400, 286, 2586, 300, 286, 1415, 4471, 732, 11, 286, 2041, 11, 570, 286, 2586, 300, 286, 727, 360, 1481, 721, 365, 31828, 979, 378, 433, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053313519737937236, "compression_ratio": 1.7764227642276422, "no_caption_prob": 2.710796798055526e-05}, {"id": 944, "seek": 403000, "start": 4049.0, "end": 4057.0, "text": " And I knew that I wanted map two, I guess, because I knew that I could do nice things with JSON decoders.", "tokens": [50364, 467, 311, 516, 281, 909, 364, 419, 4609, 264, 1150, 565, 291, 909, 746, 13, 407, 309, 311, 572, 2854, 3845, 13, 50614, 50614, 400, 370, 570, 295, 300, 11420, 2607, 11, 562, 286, 390, 1382, 281, 2573, 484, 577, 281, 534, 294, 44357, 11, 50914, 50914, 286, 390, 1382, 281, 2573, 484, 577, 281, 19297, 613, 6064, 293, 2390, 493, 257, 9450, 992, 689, 286, 727, 10432, 721, 11, 689, 286, 727, 360, 4471, 732, 13, 51314, 51314, 400, 286, 2586, 300, 286, 1415, 4471, 732, 11, 286, 2041, 11, 570, 286, 2586, 300, 286, 727, 360, 1481, 721, 365, 31828, 979, 378, 433, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.053313519737937236, "compression_ratio": 1.7764227642276422, "no_caption_prob": 2.710796798055526e-05}, {"id": 945, "seek": 405700, "start": 4057.0, "end": 4061.0, "text": " And so that was an obvious parallel. But I didn't.", "tokens": [50364, 400, 370, 300, 390, 364, 6322, 8952, 13, 583, 286, 994, 380, 13, 50564, 50564, 865, 13, 407, 294, 44357, 11, 300, 311, 534, 437, 286, 390, 1382, 281, 360, 11, 390, 1382, 281, 2573, 484, 577, 281, 19297, 729, 6064, 13, 50864, 50864, 14711, 13, 467, 3263, 411, 291, 1361, 412, 309, 544, 490, 257, 10754, 1752, 4585, 13, 51064, 51064, 583, 6063, 300, 3038, 291, 2293, 294, 1622, 365, 512, 295, 613, 7230, 7719, 5261, 7690, 82, 13, 51414, 51414, 7587, 13, 865, 13, 865, 13, 400, 294, 44357, 11, 300, 307, 534, 11, 534, 1627, 300, 300, 390, 445, 286, 4114, 286, 4114, 257, 6968, 2183, 466, 286, 519, 309, 311, 1219, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07241019882073924, "compression_ratio": 1.719298245614035, "no_caption_prob": 1.5206492207653355e-05}, {"id": 946, "seek": 405700, "start": 4061.0, "end": 4067.0, "text": " Yeah. So in hindsight, that's really what I was trying to do, was trying to figure out how to obey those laws.", "tokens": [50364, 400, 370, 300, 390, 364, 6322, 8952, 13, 583, 286, 994, 380, 13, 50564, 50564, 865, 13, 407, 294, 44357, 11, 300, 311, 534, 437, 286, 390, 1382, 281, 360, 11, 390, 1382, 281, 2573, 484, 577, 281, 19297, 729, 6064, 13, 50864, 50864, 14711, 13, 467, 3263, 411, 291, 1361, 412, 309, 544, 490, 257, 10754, 1752, 4585, 13, 51064, 51064, 583, 6063, 300, 3038, 291, 2293, 294, 1622, 365, 512, 295, 613, 7230, 7719, 5261, 7690, 82, 13, 51414, 51414, 7587, 13, 865, 13, 865, 13, 400, 294, 44357, 11, 300, 307, 534, 11, 534, 1627, 300, 300, 390, 445, 286, 4114, 286, 4114, 257, 6968, 2183, 466, 286, 519, 309, 311, 1219, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07241019882073924, "compression_ratio": 1.719298245614035, "no_caption_prob": 1.5206492207653355e-05}, {"id": 947, "seek": 405700, "start": 4067.0, "end": 4071.0, "text": " Interesting. It sounds like you came at it more from a developer experience perspective.", "tokens": [50364, 400, 370, 300, 390, 364, 6322, 8952, 13, 583, 286, 994, 380, 13, 50564, 50564, 865, 13, 407, 294, 44357, 11, 300, 311, 534, 437, 286, 390, 1382, 281, 360, 11, 390, 1382, 281, 2573, 484, 577, 281, 19297, 729, 6064, 13, 50864, 50864, 14711, 13, 467, 3263, 411, 291, 1361, 412, 309, 544, 490, 257, 10754, 1752, 4585, 13, 51064, 51064, 583, 6063, 300, 3038, 291, 2293, 294, 1622, 365, 512, 295, 613, 7230, 7719, 5261, 7690, 82, 13, 51414, 51414, 7587, 13, 865, 13, 865, 13, 400, 294, 44357, 11, 300, 307, 534, 11, 534, 1627, 300, 300, 390, 445, 286, 4114, 286, 4114, 257, 6968, 2183, 466, 286, 519, 309, 311, 1219, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07241019882073924, "compression_ratio": 1.719298245614035, "no_caption_prob": 1.5206492207653355e-05}, {"id": 948, "seek": 405700, "start": 4071.0, "end": 4078.0, "text": " But somehow that brought you exactly in line with some of these classic category theory constructs.", "tokens": [50364, 400, 370, 300, 390, 364, 6322, 8952, 13, 583, 286, 994, 380, 13, 50564, 50564, 865, 13, 407, 294, 44357, 11, 300, 311, 534, 437, 286, 390, 1382, 281, 360, 11, 390, 1382, 281, 2573, 484, 577, 281, 19297, 729, 6064, 13, 50864, 50864, 14711, 13, 467, 3263, 411, 291, 1361, 412, 309, 544, 490, 257, 10754, 1752, 4585, 13, 51064, 51064, 583, 6063, 300, 3038, 291, 2293, 294, 1622, 365, 512, 295, 613, 7230, 7719, 5261, 7690, 82, 13, 51414, 51414, 7587, 13, 865, 13, 865, 13, 400, 294, 44357, 11, 300, 307, 534, 11, 534, 1627, 300, 300, 390, 445, 286, 4114, 286, 4114, 257, 6968, 2183, 466, 286, 519, 309, 311, 1219, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07241019882073924, "compression_ratio": 1.719298245614035, "no_caption_prob": 1.5206492207653355e-05}, {"id": 949, "seek": 405700, "start": 4078.0, "end": 4086.0, "text": " Exactly. Yeah. Yeah. And in hindsight, that is really, really cool that that was just I wrote I wrote a blog post about I think it's called", "tokens": [50364, 400, 370, 300, 390, 364, 6322, 8952, 13, 583, 286, 994, 380, 13, 50564, 50564, 865, 13, 407, 294, 44357, 11, 300, 311, 534, 437, 286, 390, 1382, 281, 360, 11, 390, 1382, 281, 2573, 484, 577, 281, 19297, 729, 6064, 13, 50864, 50864, 14711, 13, 467, 3263, 411, 291, 1361, 412, 309, 544, 490, 257, 10754, 1752, 4585, 13, 51064, 51064, 583, 6063, 300, 3038, 291, 2293, 294, 1622, 365, 512, 295, 613, 7230, 7719, 5261, 7690, 82, 13, 51414, 51414, 7587, 13, 865, 13, 865, 13, 400, 294, 44357, 11, 300, 307, 534, 11, 534, 1627, 300, 300, 390, 445, 286, 4114, 286, 4114, 257, 6968, 2183, 466, 286, 519, 309, 311, 1219, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07241019882073924, "compression_ratio": 1.719298245614035, "no_caption_prob": 1.5206492207653355e-05}, {"id": 950, "seek": 408600, "start": 4086.0, "end": 4099.0, "text": " how guides you towards simplicity and how I essentially had to have a deterministic way to uniquely hash these fields when I added them in.", "tokens": [50364, 577, 17007, 291, 3030, 25632, 293, 577, 286, 4476, 632, 281, 362, 257, 15957, 3142, 636, 281, 31474, 22019, 613, 7909, 562, 286, 3869, 552, 294, 13, 51014, 51014, 400, 300, 1027, 309, 370, 309, 390, 1668, 6695, 13, 407, 291, 393, 909, 291, 458, 11, 291, 393, 362, 257, 9450, 992, 689, 291, 909, 257, 26746, 293, 550, 291, 393, 909, 1071, 26746, 1780, 13, 51464, 51464, 400, 309, 1177, 380, 1127, 570, 309, 311, 1217, 31474, 2942, 257, 2519, 419, 4609, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06662926348772916, "compression_ratio": 1.6916299559471366, "no_caption_prob": 0.0001214607764268294}, {"id": 951, "seek": 408600, "start": 4099.0, "end": 4108.0, "text": " And that made it so it was order independent. So you can add you know, you can have a selection set where you add a thumbnail and then you can add another thumbnail later.", "tokens": [50364, 577, 17007, 291, 3030, 25632, 293, 577, 286, 4476, 632, 281, 362, 257, 15957, 3142, 636, 281, 31474, 22019, 613, 7909, 562, 286, 3869, 552, 294, 13, 51014, 51014, 400, 300, 1027, 309, 370, 309, 390, 1668, 6695, 13, 407, 291, 393, 909, 291, 458, 11, 291, 393, 362, 257, 9450, 992, 689, 291, 909, 257, 26746, 293, 550, 291, 393, 909, 1071, 26746, 1780, 13, 51464, 51464, 400, 309, 1177, 380, 1127, 570, 309, 311, 1217, 31474, 2942, 257, 2519, 419, 4609, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06662926348772916, "compression_ratio": 1.6916299559471366, "no_caption_prob": 0.0001214607764268294}, {"id": 952, "seek": 408600, "start": 4108.0, "end": 4113.0, "text": " And it doesn't care because it's already uniquely created a field alias.", "tokens": [50364, 577, 17007, 291, 3030, 25632, 293, 577, 286, 4476, 632, 281, 362, 257, 15957, 3142, 636, 281, 31474, 22019, 613, 7909, 562, 286, 3869, 552, 294, 13, 51014, 51014, 400, 300, 1027, 309, 370, 309, 390, 1668, 6695, 13, 407, 291, 393, 909, 291, 458, 11, 291, 393, 362, 257, 9450, 992, 689, 291, 909, 257, 26746, 293, 550, 291, 393, 909, 1071, 26746, 1780, 13, 51464, 51464, 400, 309, 1177, 380, 1127, 570, 309, 311, 1217, 31474, 2942, 257, 2519, 419, 4609, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06662926348772916, "compression_ratio": 1.6916299559471366, "no_caption_prob": 0.0001214607764268294}, {"id": 953, "seek": 411300, "start": 4113.0, "end": 4122.0, "text": " So it's never going to collide. That's that's really cool. And it goes back to sort of that one property we discussed earlier that applicatives tend to be order independent.", "tokens": [50364, 407, 309, 311, 1128, 516, 281, 49093, 13, 663, 311, 300, 311, 534, 1627, 13, 400, 309, 1709, 646, 281, 1333, 295, 300, 472, 4707, 321, 7152, 3071, 300, 2580, 4884, 3928, 281, 312, 1668, 6695, 13, 50814, 50814, 1779, 13, 2022, 257, 707, 257, 3120, 7797, 13, 821, 366, 512, 512, 4691, 3331, 411, 21156, 433, 13, 51164, 51164, 286, 841, 411, 456, 311, 257, 688, 295, 257, 3120, 271, 1694, 926, 729, 6064, 13, 1726, 264, 6064, 11, 457, 264, 6828, 293, 577, 291, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.122352537218031, "compression_ratio": 1.5644444444444445, "no_caption_prob": 2.7968295398750342e-05}, {"id": 954, "seek": 411300, "start": 4122.0, "end": 4129.0, "text": " Right. With a little asterisk. There are some some edge cases like parsers.", "tokens": [50364, 407, 309, 311, 1128, 516, 281, 49093, 13, 663, 311, 300, 311, 534, 1627, 13, 400, 309, 1709, 646, 281, 1333, 295, 300, 472, 4707, 321, 7152, 3071, 300, 2580, 4884, 3928, 281, 312, 1668, 6695, 13, 50814, 50814, 1779, 13, 2022, 257, 707, 257, 3120, 7797, 13, 821, 366, 512, 512, 4691, 3331, 411, 21156, 433, 13, 51164, 51164, 286, 841, 411, 456, 311, 257, 688, 295, 257, 3120, 271, 1694, 926, 729, 6064, 13, 1726, 264, 6064, 11, 457, 264, 6828, 293, 577, 291, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.122352537218031, "compression_ratio": 1.5644444444444445, "no_caption_prob": 2.7968295398750342e-05}, {"id": 955, "seek": 411300, "start": 4129.0, "end": 4135.0, "text": " I feel like there's a lot of asterisks around those laws. Not the laws, but the functions and how you.", "tokens": [50364, 407, 309, 311, 1128, 516, 281, 49093, 13, 663, 311, 300, 311, 534, 1627, 13, 400, 309, 1709, 646, 281, 1333, 295, 300, 472, 4707, 321, 7152, 3071, 300, 2580, 4884, 3928, 281, 312, 1668, 6695, 13, 50814, 50814, 1779, 13, 2022, 257, 707, 257, 3120, 7797, 13, 821, 366, 512, 512, 4691, 3331, 411, 21156, 433, 13, 51164, 51164, 286, 841, 411, 456, 311, 257, 688, 295, 257, 3120, 271, 1694, 926, 729, 6064, 13, 1726, 264, 6064, 11, 457, 264, 6828, 293, 577, 291, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.122352537218031, "compression_ratio": 1.5644444444444445, "no_caption_prob": 2.7968295398750342e-05}, {"id": 956, "seek": 413500, "start": 4135.0, "end": 4144.0, "text": " Right. Right. Because order independent is not part of the laws or at least not order independent in the way that we think of it.", "tokens": [50364, 1779, 13, 1779, 13, 1436, 1668, 6695, 307, 406, 644, 295, 264, 6064, 420, 412, 1935, 406, 1668, 6695, 294, 264, 636, 300, 321, 519, 295, 309, 13, 50814, 50814, 286, 519, 456, 366, 6064, 926, 721, 411, 800, 325, 30142, 11, 597, 8659, 914, 1668, 14640, 294, 257, 1629, 10910, 2020, 295, 264, 1433, 13, 51214, 51214, 583, 2086, 11, 337, 294, 2674, 11, 309, 311, 1858, 281, 519, 295, 2580, 4884, 382, 885, 1668, 6695, 13, 400, 300, 311, 2293, 264, 5223, 291, 1415, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05900230512514219, "compression_ratio": 1.74235807860262, "no_caption_prob": 3.591193672036752e-05}, {"id": 957, "seek": 413500, "start": 4144.0, "end": 4152.0, "text": " I think there are laws around things like commutativity, which effectively mean order independence in a certain strict sense of the term.", "tokens": [50364, 1779, 13, 1779, 13, 1436, 1668, 6695, 307, 406, 644, 295, 264, 6064, 420, 412, 1935, 406, 1668, 6695, 294, 264, 636, 300, 321, 519, 295, 309, 13, 50814, 50814, 286, 519, 456, 366, 6064, 926, 721, 411, 800, 325, 30142, 11, 597, 8659, 914, 1668, 14640, 294, 257, 1629, 10910, 2020, 295, 264, 1433, 13, 51214, 51214, 583, 2086, 11, 337, 294, 2674, 11, 309, 311, 1858, 281, 519, 295, 2580, 4884, 382, 885, 1668, 6695, 13, 400, 300, 311, 2293, 264, 5223, 291, 1415, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05900230512514219, "compression_ratio": 1.74235807860262, "no_caption_prob": 3.591193672036752e-05}, {"id": 958, "seek": 413500, "start": 4152.0, "end": 4159.0, "text": " But yes, for in general, it's easy to think of applicatives as being order independent. And that's exactly the behavior you wanted.", "tokens": [50364, 1779, 13, 1779, 13, 1436, 1668, 6695, 307, 406, 644, 295, 264, 6064, 420, 412, 1935, 406, 1668, 6695, 294, 264, 636, 300, 321, 519, 295, 309, 13, 50814, 50814, 286, 519, 456, 366, 6064, 926, 721, 411, 800, 325, 30142, 11, 597, 8659, 914, 1668, 14640, 294, 257, 1629, 10910, 2020, 295, 264, 1433, 13, 51214, 51214, 583, 2086, 11, 337, 294, 2674, 11, 309, 311, 1858, 281, 519, 295, 2580, 4884, 382, 885, 1668, 6695, 13, 400, 300, 311, 2293, 264, 5223, 291, 1415, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.05900230512514219, "compression_ratio": 1.74235807860262, "no_caption_prob": 3.591193672036752e-05}, {"id": 959, "seek": 415900, "start": 4159.0, "end": 4171.0, "text": " Right. Yeah, exactly. And things just bloomed at that point. It just felt like the the whole library before that, it became so much nicer to work with.", "tokens": [50364, 1779, 13, 865, 11, 2293, 13, 400, 721, 445, 1749, 17671, 412, 300, 935, 13, 467, 445, 2762, 411, 264, 264, 1379, 6405, 949, 300, 11, 309, 3062, 370, 709, 22842, 281, 589, 365, 13, 50964, 50964, 400, 586, 370, 456, 1143, 281, 312, 341, 3410, 295, 257, 26424, 295, 257, 26424, 9450, 992, 13, 51264, 51264, 407, 370, 21884, 13695, 575, 10392, 295, 257, 26424, 293, 291, 727, 411, 1322, 613, 26424, 9450, 6352, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0774079442024231, "compression_ratio": 1.6354679802955665, "no_caption_prob": 0.00010888966789934784}, {"id": 960, "seek": 415900, "start": 4171.0, "end": 4177.0, "text": " And now so there used to be this concept of a fragment of a fragment selection set.", "tokens": [50364, 1779, 13, 865, 11, 2293, 13, 400, 721, 445, 1749, 17671, 412, 300, 935, 13, 467, 445, 2762, 411, 264, 264, 1379, 6405, 949, 300, 11, 309, 3062, 370, 709, 22842, 281, 589, 365, 13, 50964, 50964, 400, 586, 370, 456, 1143, 281, 312, 341, 3410, 295, 257, 26424, 295, 257, 26424, 9450, 992, 13, 51264, 51264, 407, 370, 21884, 13695, 575, 10392, 295, 257, 26424, 293, 291, 727, 411, 1322, 613, 26424, 9450, 6352, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0774079442024231, "compression_ratio": 1.6354679802955665, "no_caption_prob": 0.00010888966789934784}, {"id": 961, "seek": 415900, "start": 4177.0, "end": 4184.0, "text": " So so GraphQL has concepts of a fragment and you could like build these fragment selection sets.", "tokens": [50364, 1779, 13, 865, 11, 2293, 13, 400, 721, 445, 1749, 17671, 412, 300, 935, 13, 467, 445, 2762, 411, 264, 264, 1379, 6405, 949, 300, 11, 309, 3062, 370, 709, 22842, 281, 589, 365, 13, 50964, 50964, 400, 586, 370, 456, 1143, 281, 312, 341, 3410, 295, 257, 26424, 295, 257, 26424, 9450, 992, 13, 51264, 51264, 407, 370, 21884, 13695, 575, 10392, 295, 257, 26424, 293, 291, 727, 411, 1322, 613, 26424, 9450, 6352, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0774079442024231, "compression_ratio": 1.6354679802955665, "no_caption_prob": 0.00010888966789934784}, {"id": 962, "seek": 418400, "start": 4184.0, "end": 4195.0, "text": " And I don't even remember exactly how you did that. It is the kind of thing that it was like you had to build up a fragment and then explicitly combine it with it and it would duplicate these things.", "tokens": [50364, 400, 286, 500, 380, 754, 1604, 2293, 577, 291, 630, 300, 13, 467, 307, 264, 733, 295, 551, 300, 309, 390, 411, 291, 632, 281, 1322, 493, 257, 26424, 293, 550, 20803, 10432, 309, 365, 309, 293, 309, 576, 23976, 613, 721, 13, 50914, 50914, 400, 309, 390, 257, 588, 2252, 1154, 570, 577, 360, 291, 10432, 732, 9450, 6352, 562, 291, 600, 1217, 1333, 295, 3094, 493, 264, 979, 19866, 300, 311, 9650, 281, 312, 7083, 1840, 337, 264, 31828, 300, 1487, 646, 490, 21884, 13695, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05389754150224769, "compression_ratio": 1.575875486381323, "no_caption_prob": 6.604483496630564e-05}, {"id": 963, "seek": 418400, "start": 4195.0, "end": 4209.0, "text": " And it was a very difficult problem because how do you combine two selection sets when you've already sort of built up the decoder that's expecting to be querying for the JSON that comes back from GraphQL?", "tokens": [50364, 400, 286, 500, 380, 754, 1604, 2293, 577, 291, 630, 300, 13, 467, 307, 264, 733, 295, 551, 300, 309, 390, 411, 291, 632, 281, 1322, 493, 257, 26424, 293, 550, 20803, 10432, 309, 365, 309, 293, 309, 576, 23976, 613, 721, 13, 50914, 50914, 400, 309, 390, 257, 588, 2252, 1154, 570, 577, 360, 291, 10432, 732, 9450, 6352, 562, 291, 600, 1217, 1333, 295, 3094, 493, 264, 979, 19866, 300, 311, 9650, 281, 312, 7083, 1840, 337, 264, 31828, 300, 1487, 646, 490, 21884, 13695, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05389754150224769, "compression_ratio": 1.575875486381323, "no_caption_prob": 6.604483496630564e-05}, {"id": 964, "seek": 420900, "start": 4209.0, "end": 4216.0, "text": " But now you you've already sort of built up this decoder. Now you add some some more things to the selection set.", "tokens": [50364, 583, 586, 291, 291, 600, 1217, 1333, 295, 3094, 493, 341, 979, 19866, 13, 823, 291, 909, 512, 512, 544, 721, 281, 264, 9450, 992, 13, 50714, 50714, 583, 586, 291, 643, 281, 1319, 264, 636, 291, 434, 7083, 1840, 337, 300, 1412, 13, 407, 309, 311, 588, 16191, 13, 50914, 50914, 407, 5800, 264, 1379, 3410, 295, 257, 26424, 1437, 1314, 293, 291, 727, 445, 584, 11, 731, 11, 439, 291, 600, 658, 307, 257, 9450, 992, 13, 51264, 51264, 821, 311, 572, 1270, 551, 382, 257, 2519, 13, 821, 311, 572, 1270, 551, 382, 29197, 13, 51414, 51414, 509, 600, 658, 257, 9450, 992, 597, 393, 312, 6707, 11, 393, 312, 257, 2167, 2519, 420, 309, 393, 312, 257, 5765, 295, 7909, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051829201306483545, "compression_ratio": 1.8783269961977187, "no_caption_prob": 2.977176154672634e-05}, {"id": 965, "seek": 420900, "start": 4216.0, "end": 4220.0, "text": " But now you need to change the way you're querying for that data. So it's very messy.", "tokens": [50364, 583, 586, 291, 291, 600, 1217, 1333, 295, 3094, 493, 341, 979, 19866, 13, 823, 291, 909, 512, 512, 544, 721, 281, 264, 9450, 992, 13, 50714, 50714, 583, 586, 291, 643, 281, 1319, 264, 636, 291, 434, 7083, 1840, 337, 300, 1412, 13, 407, 309, 311, 588, 16191, 13, 50914, 50914, 407, 5800, 264, 1379, 3410, 295, 257, 26424, 1437, 1314, 293, 291, 727, 445, 584, 11, 731, 11, 439, 291, 600, 658, 307, 257, 9450, 992, 13, 51264, 51264, 821, 311, 572, 1270, 551, 382, 257, 2519, 13, 821, 311, 572, 1270, 551, 382, 29197, 13, 51414, 51414, 509, 600, 658, 257, 9450, 992, 597, 393, 312, 6707, 11, 393, 312, 257, 2167, 2519, 420, 309, 393, 312, 257, 5765, 295, 7909, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051829201306483545, "compression_ratio": 1.8783269961977187, "no_caption_prob": 2.977176154672634e-05}, {"id": 966, "seek": 420900, "start": 4220.0, "end": 4227.0, "text": " So suddenly the whole concept of a fragment went away and you could just say, well, all you've got is a selection set.", "tokens": [50364, 583, 586, 291, 291, 600, 1217, 1333, 295, 3094, 493, 341, 979, 19866, 13, 823, 291, 909, 512, 512, 544, 721, 281, 264, 9450, 992, 13, 50714, 50714, 583, 586, 291, 643, 281, 1319, 264, 636, 291, 434, 7083, 1840, 337, 300, 1412, 13, 407, 309, 311, 588, 16191, 13, 50914, 50914, 407, 5800, 264, 1379, 3410, 295, 257, 26424, 1437, 1314, 293, 291, 727, 445, 584, 11, 731, 11, 439, 291, 600, 658, 307, 257, 9450, 992, 13, 51264, 51264, 821, 311, 572, 1270, 551, 382, 257, 2519, 13, 821, 311, 572, 1270, 551, 382, 29197, 13, 51414, 51414, 509, 600, 658, 257, 9450, 992, 597, 393, 312, 6707, 11, 393, 312, 257, 2167, 2519, 420, 309, 393, 312, 257, 5765, 295, 7909, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051829201306483545, "compression_ratio": 1.8783269961977187, "no_caption_prob": 2.977176154672634e-05}, {"id": 967, "seek": 420900, "start": 4227.0, "end": 4230.0, "text": " There's no such thing as a field. There's no such thing as fragments.", "tokens": [50364, 583, 586, 291, 291, 600, 1217, 1333, 295, 3094, 493, 341, 979, 19866, 13, 823, 291, 909, 512, 512, 544, 721, 281, 264, 9450, 992, 13, 50714, 50714, 583, 586, 291, 643, 281, 1319, 264, 636, 291, 434, 7083, 1840, 337, 300, 1412, 13, 407, 309, 311, 588, 16191, 13, 50914, 50914, 407, 5800, 264, 1379, 3410, 295, 257, 26424, 1437, 1314, 293, 291, 727, 445, 584, 11, 731, 11, 439, 291, 600, 658, 307, 257, 9450, 992, 13, 51264, 51264, 821, 311, 572, 1270, 551, 382, 257, 2519, 13, 821, 311, 572, 1270, 551, 382, 29197, 13, 51414, 51414, 509, 600, 658, 257, 9450, 992, 597, 393, 312, 6707, 11, 393, 312, 257, 2167, 2519, 420, 309, 393, 312, 257, 5765, 295, 7909, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051829201306483545, "compression_ratio": 1.8783269961977187, "no_caption_prob": 2.977176154672634e-05}, {"id": 968, "seek": 420900, "start": 4230.0, "end": 4236.0, "text": " You've got a selection set which can be empty, can be a single field or it can be a collection of fields.", "tokens": [50364, 583, 586, 291, 291, 600, 1217, 1333, 295, 3094, 493, 341, 979, 19866, 13, 823, 291, 909, 512, 512, 544, 721, 281, 264, 9450, 992, 13, 50714, 50714, 583, 586, 291, 643, 281, 1319, 264, 636, 291, 434, 7083, 1840, 337, 300, 1412, 13, 407, 309, 311, 588, 16191, 13, 50914, 50914, 407, 5800, 264, 1379, 3410, 295, 257, 26424, 1437, 1314, 293, 291, 727, 445, 584, 11, 731, 11, 439, 291, 600, 658, 307, 257, 9450, 992, 13, 51264, 51264, 821, 311, 572, 1270, 551, 382, 257, 2519, 13, 821, 311, 572, 1270, 551, 382, 29197, 13, 51414, 51414, 509, 600, 658, 257, 9450, 992, 597, 393, 312, 6707, 11, 393, 312, 257, 2167, 2519, 420, 309, 393, 312, 257, 5765, 295, 7909, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.051829201306483545, "compression_ratio": 1.8783269961977187, "no_caption_prob": 2.977176154672634e-05}, {"id": 969, "seek": 423600, "start": 4236.0, "end": 4245.0, "text": " And suddenly it became so much simpler to work with and the fragment just becomes expressed as a selection set.", "tokens": [50364, 400, 5800, 309, 3062, 370, 709, 18587, 281, 589, 365, 293, 264, 26424, 445, 3643, 12675, 382, 257, 9450, 992, 13, 50814, 50814, 407, 286, 2441, 437, 1651, 291, 727, 362, 2351, 1803, 281, 808, 281, 264, 912, 10063, 3071, 13, 51114, 51114, 8239, 13, 1743, 11, 1338, 11, 300, 311, 257, 869, 1168, 13, 865, 13, 1743, 437, 576, 362, 1027, 385, 4325, 613, 721, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.11049635981170225, "compression_ratio": 1.5049019607843137, "no_caption_prob": 0.00011411499872338027}, {"id": 970, "seek": 423600, "start": 4245.0, "end": 4251.0, "text": " So I wonder what questions you could have asked yourself to come to the same conclusion earlier.", "tokens": [50364, 400, 5800, 309, 3062, 370, 709, 18587, 281, 589, 365, 293, 264, 26424, 445, 3643, 12675, 382, 257, 9450, 992, 13, 50814, 50814, 407, 286, 2441, 437, 1651, 291, 727, 362, 2351, 1803, 281, 808, 281, 264, 912, 10063, 3071, 13, 51114, 51114, 8239, 13, 1743, 11, 1338, 11, 300, 311, 257, 869, 1168, 13, 865, 13, 1743, 437, 576, 362, 1027, 385, 4325, 613, 721, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.11049635981170225, "compression_ratio": 1.5049019607843137, "no_caption_prob": 0.00011411499872338027}, {"id": 971, "seek": 423600, "start": 4251.0, "end": 4257.0, "text": " Hmm. Like, yeah, that's a great question. Yeah. Like what would have made me realize these things?", "tokens": [50364, 400, 5800, 309, 3062, 370, 709, 18587, 281, 589, 365, 293, 264, 26424, 445, 3643, 12675, 382, 257, 9450, 992, 13, 50814, 50814, 407, 286, 2441, 437, 1651, 291, 727, 362, 2351, 1803, 281, 808, 281, 264, 912, 10063, 3071, 13, 51114, 51114, 8239, 13, 1743, 11, 1338, 11, 300, 311, 257, 869, 1168, 13, 865, 13, 1743, 437, 576, 362, 1027, 385, 4325, 613, 721, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.11049635981170225, "compression_ratio": 1.5049019607843137, "no_caption_prob": 0.00011411499872338027}, {"id": 972, "seek": 425700, "start": 4257.0, "end": 4270.0, "text": " I mean, looking back on it now, I guess if I had some more knowledge of these category theory ideas in a way that I could understand for how do I help users solve problems?", "tokens": [50364, 286, 914, 11, 1237, 646, 322, 309, 586, 11, 286, 2041, 498, 286, 632, 512, 544, 3601, 295, 613, 7719, 5261, 3487, 294, 257, 636, 300, 286, 727, 1223, 337, 577, 360, 286, 854, 5022, 5039, 2740, 30, 51014, 51014, 400, 300, 1062, 362, 9152, 385, 15324, 281, 733, 295, 915, 2098, 281, 1524, 613, 6064, 13, 51364, 51364, 663, 848, 11, 456, 645, 611, 1629, 6191, 721, 300, 286, 994, 380, 362, 729, 14310, 295, 577, 360, 286, 652, 309, 15957, 3142, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.061441529880870475, "compression_ratio": 1.5940170940170941, "no_caption_prob": 0.00016601625247858465}, {"id": 973, "seek": 425700, "start": 4270.0, "end": 4277.0, "text": " And that might have pushed me sooner to kind of find ways to follow these laws.", "tokens": [50364, 286, 914, 11, 1237, 646, 322, 309, 586, 11, 286, 2041, 498, 286, 632, 512, 544, 3601, 295, 613, 7719, 5261, 3487, 294, 257, 636, 300, 286, 727, 1223, 337, 577, 360, 286, 854, 5022, 5039, 2740, 30, 51014, 51014, 400, 300, 1062, 362, 9152, 385, 15324, 281, 733, 295, 915, 2098, 281, 1524, 613, 6064, 13, 51364, 51364, 663, 848, 11, 456, 645, 611, 1629, 6191, 721, 300, 286, 994, 380, 362, 729, 14310, 295, 577, 360, 286, 652, 309, 15957, 3142, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.061441529880870475, "compression_ratio": 1.5940170940170941, "no_caption_prob": 0.00016601625247858465}, {"id": 974, "seek": 425700, "start": 4277.0, "end": 4284.0, "text": " That said, there were also certain technical things that I didn't have those insights of how do I make it deterministic?", "tokens": [50364, 286, 914, 11, 1237, 646, 322, 309, 586, 11, 286, 2041, 498, 286, 632, 512, 544, 3601, 295, 613, 7719, 5261, 3487, 294, 257, 636, 300, 286, 727, 1223, 337, 577, 360, 286, 854, 5022, 5039, 2740, 30, 51014, 51014, 400, 300, 1062, 362, 9152, 385, 15324, 281, 733, 295, 915, 2098, 281, 1524, 613, 6064, 13, 51364, 51364, 663, 848, 11, 456, 645, 611, 1629, 6191, 721, 300, 286, 994, 380, 362, 729, 14310, 295, 577, 360, 286, 652, 309, 15957, 3142, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.061441529880870475, "compression_ratio": 1.5940170940170941, "no_caption_prob": 0.00016601625247858465}, {"id": 975, "seek": 428400, "start": 4284.0, "end": 4288.0, "text": " That it's always it doesn't matter what order you combine things in.", "tokens": [50364, 663, 309, 311, 1009, 309, 1177, 380, 1871, 437, 1668, 291, 10432, 721, 294, 13, 50564, 50564, 583, 1310, 300, 311, 1310, 300, 311, 257, 30681, 307, 445, 498, 291, 434, 1419, 5253, 21928, 721, 11, 2573, 484, 577, 281, 652, 309, 1668, 6695, 13, 51064, 51064, 400, 498, 286, 498, 286, 445, 848, 11, 2264, 11, 286, 478, 988, 286, 393, 915, 257, 636, 281, 360, 341, 293, 5178, 322, 300, 11, 1310, 286, 576, 362, 5768, 456, 15324, 13, 51464, 51464, 286, 519, 309, 311, 1880, 13, 509, 2835, 291, 4114, 257, 6968, 2183, 466, 577, 2699, 76, 17007, 291, 3030, 25632, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06853278623808415, "compression_ratio": 1.625925925925926, "no_caption_prob": 9.027335181599483e-05}, {"id": 976, "seek": 428400, "start": 4288.0, "end": 4298.0, "text": " But maybe that's maybe that's a takeaway is just if you're having trouble combining things, figure out how to make it order independent.", "tokens": [50364, 663, 309, 311, 1009, 309, 1177, 380, 1871, 437, 1668, 291, 10432, 721, 294, 13, 50564, 50564, 583, 1310, 300, 311, 1310, 300, 311, 257, 30681, 307, 445, 498, 291, 434, 1419, 5253, 21928, 721, 11, 2573, 484, 577, 281, 652, 309, 1668, 6695, 13, 51064, 51064, 400, 498, 286, 498, 286, 445, 848, 11, 2264, 11, 286, 478, 988, 286, 393, 915, 257, 636, 281, 360, 341, 293, 5178, 322, 300, 11, 1310, 286, 576, 362, 5768, 456, 15324, 13, 51464, 51464, 286, 519, 309, 311, 1880, 13, 509, 2835, 291, 4114, 257, 6968, 2183, 466, 577, 2699, 76, 17007, 291, 3030, 25632, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06853278623808415, "compression_ratio": 1.625925925925926, "no_caption_prob": 9.027335181599483e-05}, {"id": 977, "seek": 428400, "start": 4298.0, "end": 4306.0, "text": " And if I if I just said, OK, I'm sure I can find a way to do this and focused on that, maybe I would have gotten there sooner.", "tokens": [50364, 663, 309, 311, 1009, 309, 1177, 380, 1871, 437, 1668, 291, 10432, 721, 294, 13, 50564, 50564, 583, 1310, 300, 311, 1310, 300, 311, 257, 30681, 307, 445, 498, 291, 434, 1419, 5253, 21928, 721, 11, 2573, 484, 577, 281, 652, 309, 1668, 6695, 13, 51064, 51064, 400, 498, 286, 498, 286, 445, 848, 11, 2264, 11, 286, 478, 988, 286, 393, 915, 257, 636, 281, 360, 341, 293, 5178, 322, 300, 11, 1310, 286, 576, 362, 5768, 456, 15324, 13, 51464, 51464, 286, 519, 309, 311, 1880, 13, 509, 2835, 291, 4114, 257, 6968, 2183, 466, 577, 2699, 76, 17007, 291, 3030, 25632, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06853278623808415, "compression_ratio": 1.625925925925926, "no_caption_prob": 9.027335181599483e-05}, {"id": 978, "seek": 428400, "start": 4306.0, "end": 4311.0, "text": " I think it's interesting. You mentioned you wrote a blog post about how Elm guides you towards simplicity.", "tokens": [50364, 663, 309, 311, 1009, 309, 1177, 380, 1871, 437, 1668, 291, 10432, 721, 294, 13, 50564, 50564, 583, 1310, 300, 311, 1310, 300, 311, 257, 30681, 307, 445, 498, 291, 434, 1419, 5253, 21928, 721, 11, 2573, 484, 577, 281, 652, 309, 1668, 6695, 13, 51064, 51064, 400, 498, 286, 498, 286, 445, 848, 11, 2264, 11, 286, 478, 988, 286, 393, 915, 257, 636, 281, 360, 341, 293, 5178, 322, 300, 11, 1310, 286, 576, 362, 5768, 456, 15324, 13, 51464, 51464, 286, 519, 309, 311, 1880, 13, 509, 2835, 291, 4114, 257, 6968, 2183, 466, 577, 2699, 76, 17007, 291, 3030, 25632, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06853278623808415, "compression_ratio": 1.625925925925926, "no_caption_prob": 9.027335181599483e-05}, {"id": 979, "seek": 431100, "start": 4311.0, "end": 4323.0, "text": " And you asked a question at the beginning of this episode where you said, if we didn't have these category concepts and we just started with Elm, would we sort of independently rediscover them?", "tokens": [50364, 400, 291, 2351, 257, 1168, 412, 264, 2863, 295, 341, 3500, 689, 291, 848, 11, 498, 321, 994, 380, 362, 613, 7719, 10392, 293, 321, 445, 1409, 365, 2699, 76, 11, 576, 321, 1333, 295, 21761, 2182, 40080, 552, 30, 50964, 50964, 6068, 436, 1333, 295, 1009, 21511, 30, 400, 286, 519, 365, 264, 1867, 291, 445, 2729, 510, 11, 291, 434, 1566, 2086, 13, 51214, 51214, 663, 311, 452, 24002, 13, 823, 11, 300, 848, 11, 294, 257, 636, 11, 286, 632, 257, 35868, 13, 286, 632, 341, 6322, 935, 295, 9660, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08086953844342913, "compression_ratio": 1.550387596899225, "no_caption_prob": 2.0462342945393175e-05}, {"id": 980, "seek": 431100, "start": 4323.0, "end": 4328.0, "text": " Would they sort of always emerge? And I think with the answer you just gave here, you're saying yes.", "tokens": [50364, 400, 291, 2351, 257, 1168, 412, 264, 2863, 295, 341, 3500, 689, 291, 848, 11, 498, 321, 994, 380, 362, 613, 7719, 10392, 293, 321, 445, 1409, 365, 2699, 76, 11, 576, 321, 1333, 295, 21761, 2182, 40080, 552, 30, 50964, 50964, 6068, 436, 1333, 295, 1009, 21511, 30, 400, 286, 519, 365, 264, 1867, 291, 445, 2729, 510, 11, 291, 434, 1566, 2086, 13, 51214, 51214, 663, 311, 452, 24002, 13, 823, 11, 300, 848, 11, 294, 257, 636, 11, 286, 632, 257, 35868, 13, 286, 632, 341, 6322, 935, 295, 9660, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08086953844342913, "compression_ratio": 1.550387596899225, "no_caption_prob": 2.0462342945393175e-05}, {"id": 981, "seek": 431100, "start": 4328.0, "end": 4333.0, "text": " That's my intuition. Now, that said, in a way, I had a blueprint. I had this obvious point of comparison.", "tokens": [50364, 400, 291, 2351, 257, 1168, 412, 264, 2863, 295, 341, 3500, 689, 291, 848, 11, 498, 321, 994, 380, 362, 613, 7719, 10392, 293, 321, 445, 1409, 365, 2699, 76, 11, 576, 321, 1333, 295, 21761, 2182, 40080, 552, 30, 50964, 50964, 6068, 436, 1333, 295, 1009, 21511, 30, 400, 286, 519, 365, 264, 1867, 291, 445, 2729, 510, 11, 291, 434, 1566, 2086, 13, 51214, 51214, 663, 311, 452, 24002, 13, 823, 11, 300, 848, 11, 294, 257, 636, 11, 286, 632, 257, 35868, 13, 286, 632, 341, 6322, 935, 295, 9660, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.08086953844342913, "compression_ratio": 1.550387596899225, "no_caption_prob": 2.0462342945393175e-05}, {"id": 982, "seek": 433300, "start": 4333.0, "end": 4342.0, "text": " Right. Because a graph QL selection set is kind of like, you know, it's it's sort of a JSON decoder on steroids.", "tokens": [50364, 1779, 13, 1436, 257, 4295, 1249, 43, 9450, 992, 307, 733, 295, 411, 11, 291, 458, 11, 309, 311, 309, 311, 1333, 295, 257, 31828, 979, 19866, 322, 45717, 13, 50814, 50814, 467, 311, 411, 257, 1687, 17786, 31828, 979, 19866, 13, 407, 456, 311, 364, 6322, 9362, 281, 853, 281, 2995, 293, 584, 11, 16478, 11, 31828, 979, 378, 433, 393, 4471, 281, 31828, 979, 378, 433, 393, 7754, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10923659006754557, "compression_ratio": 1.5294117647058822, "no_caption_prob": 2.2827613065601327e-05}, {"id": 983, "seek": 433300, "start": 4342.0, "end": 4356.0, "text": " It's like a super powered JSON decoder. So there's an obvious API to try to match and say, hmm, JSON decoders can map to JSON decoders can succeed.", "tokens": [50364, 1779, 13, 1436, 257, 4295, 1249, 43, 9450, 992, 307, 733, 295, 411, 11, 291, 458, 11, 309, 311, 309, 311, 1333, 295, 257, 31828, 979, 19866, 322, 45717, 13, 50814, 50814, 467, 311, 411, 257, 1687, 17786, 31828, 979, 19866, 13, 407, 456, 311, 364, 6322, 9362, 281, 853, 281, 2995, 293, 584, 11, 16478, 11, 31828, 979, 378, 433, 393, 4471, 281, 31828, 979, 378, 433, 393, 7754, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10923659006754557, "compression_ratio": 1.5294117647058822, "no_caption_prob": 2.2827613065601327e-05}, {"id": 984, "seek": 435600, "start": 4356.0, "end": 4365.0, "text": " Wouldn't that be nice if I could do that? So it's hard to say what the API would have been if it wasn't for the existing example of JSON decoders.", "tokens": [50364, 26291, 380, 300, 312, 1481, 498, 286, 727, 360, 300, 30, 407, 309, 311, 1152, 281, 584, 437, 264, 9362, 576, 362, 668, 498, 309, 2067, 380, 337, 264, 6741, 1365, 295, 31828, 979, 378, 433, 13, 50814, 50814, 583, 286, 360, 3811, 300, 257, 688, 295, 264, 912, 8294, 576, 362, 20178, 13, 50964, 50964, 286, 914, 11, 286, 2041, 294, 512, 636, 11, 341, 307, 437, 2011, 412, 512, 935, 294, 264, 2503, 295, 3820, 3497, 13, 51264, 51264, 1779, 13, 5684, 11, 370, 13, 1779, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07473428274995537, "compression_ratio": 1.5336322869955157, "no_caption_prob": 4.4692606024909765e-05}, {"id": 985, "seek": 435600, "start": 4365.0, "end": 4368.0, "text": " But I do imagine that a lot of the same patterns would have emerged.", "tokens": [50364, 26291, 380, 300, 312, 1481, 498, 286, 727, 360, 300, 30, 407, 309, 311, 1152, 281, 584, 437, 264, 9362, 576, 362, 668, 498, 309, 2067, 380, 337, 264, 6741, 1365, 295, 31828, 979, 378, 433, 13, 50814, 50814, 583, 286, 360, 3811, 300, 257, 688, 295, 264, 912, 8294, 576, 362, 20178, 13, 50964, 50964, 286, 914, 11, 286, 2041, 294, 512, 636, 11, 341, 307, 437, 2011, 412, 512, 935, 294, 264, 2503, 295, 3820, 3497, 13, 51264, 51264, 1779, 13, 5684, 11, 370, 13, 1779, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07473428274995537, "compression_ratio": 1.5336322869955157, "no_caption_prob": 4.4692606024909765e-05}, {"id": 986, "seek": 435600, "start": 4368.0, "end": 4374.0, "text": " I mean, I guess in some way, this is what happened at some point in the history of computer science.", "tokens": [50364, 26291, 380, 300, 312, 1481, 498, 286, 727, 360, 300, 30, 407, 309, 311, 1152, 281, 584, 437, 264, 9362, 576, 362, 668, 498, 309, 2067, 380, 337, 264, 6741, 1365, 295, 31828, 979, 378, 433, 13, 50814, 50814, 583, 286, 360, 3811, 300, 257, 688, 295, 264, 912, 8294, 576, 362, 20178, 13, 50964, 50964, 286, 914, 11, 286, 2041, 294, 512, 636, 11, 341, 307, 437, 2011, 412, 512, 935, 294, 264, 2503, 295, 3820, 3497, 13, 51264, 51264, 1779, 13, 5684, 11, 370, 13, 1779, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07473428274995537, "compression_ratio": 1.5336322869955157, "no_caption_prob": 4.4692606024909765e-05}, {"id": 987, "seek": 435600, "start": 4374.0, "end": 4377.0, "text": " Right. Anyway, so. Right.", "tokens": [50364, 26291, 380, 300, 312, 1481, 498, 286, 727, 360, 300, 30, 407, 309, 311, 1152, 281, 584, 437, 264, 9362, 576, 362, 668, 498, 309, 2067, 380, 337, 264, 6741, 1365, 295, 31828, 979, 378, 433, 13, 50814, 50814, 583, 286, 360, 3811, 300, 257, 688, 295, 264, 912, 8294, 576, 362, 20178, 13, 50964, 50964, 286, 914, 11, 286, 2041, 294, 512, 636, 11, 341, 307, 437, 2011, 412, 512, 935, 294, 264, 2503, 295, 3820, 3497, 13, 51264, 51264, 1779, 13, 5684, 11, 370, 13, 1779, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07473428274995537, "compression_ratio": 1.5336322869955157, "no_caption_prob": 4.4692606024909765e-05}, {"id": 988, "seek": 437700, "start": 4377.0, "end": 4386.0, "text": " Us being here talking about this is proof that this is the way it would have gone, potentially.", "tokens": [50364, 4958, 885, 510, 1417, 466, 341, 307, 8177, 300, 341, 307, 264, 636, 309, 576, 362, 2780, 11, 7263, 13, 50814, 50814, 286, 519, 264, 3880, 11269, 390, 562, 286, 5334, 300, 264, 3410, 295, 257, 2519, 293, 257, 9450, 992, 727, 312, 264, 912, 13, 51214, 51214, 400, 300, 264, 551, 286, 2978, 281, 312, 1075, 281, 4445, 300, 390, 281, 406, 1127, 466, 1668, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07756715425303284, "compression_ratio": 1.566137566137566, "no_caption_prob": 5.56178783881478e-05}, {"id": 989, "seek": 437700, "start": 4386.0, "end": 4394.0, "text": " I think the biggest insight was when I realized that the concept of a field and a selection set could be the same.", "tokens": [50364, 4958, 885, 510, 1417, 466, 341, 307, 8177, 300, 341, 307, 264, 636, 309, 576, 362, 2780, 11, 7263, 13, 50814, 50814, 286, 519, 264, 3880, 11269, 390, 562, 286, 5334, 300, 264, 3410, 295, 257, 2519, 293, 257, 9450, 992, 727, 312, 264, 912, 13, 51214, 51214, 400, 300, 264, 551, 286, 2978, 281, 312, 1075, 281, 4445, 300, 390, 281, 406, 1127, 466, 1668, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07756715425303284, "compression_ratio": 1.566137566137566, "no_caption_prob": 5.56178783881478e-05}, {"id": 990, "seek": 437700, "start": 4394.0, "end": 4401.0, "text": " And that the thing I needed to be able to implement that was to not care about order.", "tokens": [50364, 4958, 885, 510, 1417, 466, 341, 307, 8177, 300, 341, 307, 264, 636, 309, 576, 362, 2780, 11, 7263, 13, 50814, 50814, 286, 519, 264, 3880, 11269, 390, 562, 286, 5334, 300, 264, 3410, 295, 257, 2519, 293, 257, 9450, 992, 727, 312, 264, 912, 13, 51214, 51214, 400, 300, 264, 551, 286, 2978, 281, 312, 1075, 281, 4445, 300, 390, 281, 406, 1127, 466, 1668, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07756715425303284, "compression_ratio": 1.566137566137566, "no_caption_prob": 5.56178783881478e-05}, {"id": 991, "seek": 440100, "start": 4401.0, "end": 4409.0, "text": " And and when I just sort of stubbornly focused on that and said, there's got to be a way I'm going to try to find out a way to do that.", "tokens": [50364, 400, 293, 562, 286, 445, 1333, 295, 24137, 356, 5178, 322, 300, 293, 848, 11, 456, 311, 658, 281, 312, 257, 636, 286, 478, 516, 281, 853, 281, 915, 484, 257, 636, 281, 360, 300, 13, 50764, 50764, 400, 286, 478, 516, 281, 6839, 633, 3614, 13, 1171, 257, 1339, 11, 286, 390, 12736, 11, 360, 286, 643, 281, 1333, 295, 1797, 512, 4319, 295, 437, 7909, 362, 668, 7083, 1091, 293, 19320, 953, 1322, 493, 264, 979, 378, 433, 30, 51364, 51364, 400, 393, 286, 754, 360, 300, 30, 400, 457, 4728, 286, 445, 733, 295, 5167, 365, 300, 3387, 293, 293, 309, 1890, 385, 456, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058875939675739834, "compression_ratio": 1.6626506024096386, "no_caption_prob": 6.814122025389224e-05}, {"id": 992, "seek": 440100, "start": 4409.0, "end": 4421.0, "text": " And I'm going to explore every option. For a while, I was exploring, do I need to sort of hold some context of what fields have been queried and lazily build up the decoders?", "tokens": [50364, 400, 293, 562, 286, 445, 1333, 295, 24137, 356, 5178, 322, 300, 293, 848, 11, 456, 311, 658, 281, 312, 257, 636, 286, 478, 516, 281, 853, 281, 915, 484, 257, 636, 281, 360, 300, 13, 50764, 50764, 400, 286, 478, 516, 281, 6839, 633, 3614, 13, 1171, 257, 1339, 11, 286, 390, 12736, 11, 360, 286, 643, 281, 1333, 295, 1797, 512, 4319, 295, 437, 7909, 362, 668, 7083, 1091, 293, 19320, 953, 1322, 493, 264, 979, 378, 433, 30, 51364, 51364, 400, 393, 286, 754, 360, 300, 30, 400, 457, 4728, 286, 445, 733, 295, 5167, 365, 300, 3387, 293, 293, 309, 1890, 385, 456, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058875939675739834, "compression_ratio": 1.6626506024096386, "no_caption_prob": 6.814122025389224e-05}, {"id": 993, "seek": 440100, "start": 4421.0, "end": 4429.0, "text": " And can I even do that? And but eventually I just kind of held with that goal and and it took me there.", "tokens": [50364, 400, 293, 562, 286, 445, 1333, 295, 24137, 356, 5178, 322, 300, 293, 848, 11, 456, 311, 658, 281, 312, 257, 636, 286, 478, 516, 281, 853, 281, 915, 484, 257, 636, 281, 360, 300, 13, 50764, 50764, 400, 286, 478, 516, 281, 6839, 633, 3614, 13, 1171, 257, 1339, 11, 286, 390, 12736, 11, 360, 286, 643, 281, 1333, 295, 1797, 512, 4319, 295, 437, 7909, 362, 668, 7083, 1091, 293, 19320, 953, 1322, 493, 264, 979, 378, 433, 30, 51364, 51364, 400, 393, 286, 754, 360, 300, 30, 400, 457, 4728, 286, 445, 733, 295, 5167, 365, 300, 3387, 293, 293, 309, 1890, 385, 456, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.058875939675739834, "compression_ratio": 1.6626506024096386, "no_caption_prob": 6.814122025389224e-05}, {"id": 994, "seek": 442900, "start": 4429.0, "end": 4439.0, "text": " What about Jeroen? What about Elm Review? Are there any places you think you could have sped up the way you developed certain parts of that API if you'd had these patterns in mind?", "tokens": [50364, 708, 466, 508, 2032, 268, 30, 708, 466, 2699, 76, 19954, 30, 2014, 456, 604, 3190, 291, 519, 291, 727, 362, 637, 292, 493, 264, 636, 291, 4743, 1629, 3166, 295, 300, 9362, 498, 291, 1116, 632, 613, 8294, 294, 1575, 30, 50864, 50864, 9210, 257, 1326, 13, 286, 458, 300, 286, 362, 746, 1219, 257, 4319, 14181, 11, 597, 307, 1936, 364, 2580, 1166, 11, 286, 519, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08002023827539731, "compression_ratio": 1.446078431372549, "no_caption_prob": 2.5465495127718896e-05}, {"id": 995, "seek": 442900, "start": 4439.0, "end": 4449.0, "text": " Probably a few. I know that I have something called a context creator, which is basically an applicative, I think.", "tokens": [50364, 708, 466, 508, 2032, 268, 30, 708, 466, 2699, 76, 19954, 30, 2014, 456, 604, 3190, 291, 519, 291, 727, 362, 637, 292, 493, 264, 636, 291, 4743, 1629, 3166, 295, 300, 9362, 498, 291, 1116, 632, 613, 8294, 294, 1575, 30, 50864, 50864, 9210, 257, 1326, 13, 286, 458, 300, 286, 362, 746, 1219, 257, 4319, 14181, 11, 597, 307, 1936, 364, 2580, 1166, 11, 286, 519, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.08002023827539731, "compression_ratio": 1.446078431372549, "no_caption_prob": 2.5465495127718896e-05}, {"id": 996, "seek": 444900, "start": 4449.0, "end": 4462.0, "text": " Yeah, it's an applicative because you you start with some with the function and you say, I want this, I want that, I want this and then something to construct it to combine all those information.", "tokens": [50364, 865, 11, 309, 311, 364, 2580, 1166, 570, 291, 291, 722, 365, 512, 365, 264, 2445, 293, 291, 584, 11, 286, 528, 341, 11, 286, 528, 300, 11, 286, 528, 341, 293, 550, 746, 281, 7690, 309, 281, 10432, 439, 729, 1589, 13, 51014, 51014, 286, 1604, 300, 390, 257, 857, 12414, 281, 4445, 13, 286, 478, 406, 754, 988, 300, 309, 3574, 484, 2293, 577, 286, 1415, 309, 281, 312, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.12728182893050344, "compression_ratio": 1.6230366492146597, "no_caption_prob": 4.908373375656083e-05}, {"id": 997, "seek": 444900, "start": 4462.0, "end": 4470.0, "text": " I remember that was a bit tricky to implement. I'm not even sure that it turned out exactly how I wanted it to be.", "tokens": [50364, 865, 11, 309, 311, 364, 2580, 1166, 570, 291, 291, 722, 365, 512, 365, 264, 2445, 293, 291, 584, 11, 286, 528, 341, 11, 286, 528, 300, 11, 286, 528, 341, 293, 550, 746, 281, 7690, 309, 281, 10432, 439, 729, 1589, 13, 51014, 51014, 286, 1604, 300, 390, 257, 857, 12414, 281, 4445, 13, 286, 478, 406, 754, 988, 300, 309, 3574, 484, 2293, 577, 286, 1415, 309, 281, 312, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.12728182893050344, "compression_ratio": 1.6230366492146597, "no_caption_prob": 4.908373375656083e-05}, {"id": 998, "seek": 447000, "start": 4470.0, "end": 4484.0, "text": " But yeah, that would have been helpful at least. And then internally, I'm pretty sure I've implemented plenty of category theory things that are just not exposed, but that would have been helpful for me.", "tokens": [50364, 583, 1338, 11, 300, 576, 362, 668, 4961, 412, 1935, 13, 400, 550, 19501, 11, 286, 478, 1238, 988, 286, 600, 12270, 7140, 295, 7719, 5261, 721, 300, 366, 445, 406, 9495, 11, 457, 300, 576, 362, 668, 4961, 337, 385, 13, 51064, 51064, 467, 311, 1596, 1858, 281, 754, 1333, 295, 15715, 4445, 613, 721, 11, 558, 30, 1436, 456, 311, 1270, 4420, 3467, 295, 6828, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10094964504241943, "compression_ratio": 1.6108374384236452, "no_caption_prob": 2.3922666514408775e-05}, {"id": 999, "seek": 447000, "start": 4484.0, "end": 4493.0, "text": " It's quite easy to even sort of accidentally implement these things, right? Because there's such useful types of functions.", "tokens": [50364, 583, 1338, 11, 300, 576, 362, 668, 4961, 412, 1935, 13, 400, 550, 19501, 11, 286, 478, 1238, 988, 286, 600, 12270, 7140, 295, 7719, 5261, 721, 300, 366, 445, 406, 9495, 11, 457, 300, 576, 362, 668, 4961, 337, 385, 13, 51064, 51064, 467, 311, 1596, 1858, 281, 754, 1333, 295, 15715, 4445, 613, 721, 11, 558, 30, 1436, 456, 311, 1270, 4420, 3467, 295, 6828, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10094964504241943, "compression_ratio": 1.6108374384236452, "no_caption_prob": 2.3922666514408775e-05}, {"id": 1000, "seek": 449300, "start": 4493.0, "end": 4505.0, "text": " There's almost like a gravity pull towards those sort of optimal points. So the odds of you're implementing a map if you didn't know what map was are pretty high.", "tokens": [50364, 821, 311, 1920, 411, 257, 12110, 2235, 3030, 729, 1333, 295, 16252, 2793, 13, 407, 264, 17439, 295, 291, 434, 18114, 257, 4471, 498, 291, 994, 380, 458, 437, 4471, 390, 366, 1238, 1090, 13, 50964, 50964, 865, 11, 309, 311, 611, 570, 321, 500, 380, 362, 300, 867, 2098, 295, 2390, 721, 13, 286, 914, 11, 321, 500, 380, 362, 27960, 11, 370, 300, 18081, 257, 688, 295, 437, 321, 393, 360, 13, 51464, 51464, 663, 311, 2074, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08890308084942046, "compression_ratio": 1.5507246376811594, "no_caption_prob": 5.862683337909402e-06}, {"id": 1001, "seek": 449300, "start": 4505.0, "end": 4515.0, "text": " Yeah, it's also because we don't have that many ways of building things. I mean, we don't have mutation, so that reduces a lot of what we can do.", "tokens": [50364, 821, 311, 1920, 411, 257, 12110, 2235, 3030, 729, 1333, 295, 16252, 2793, 13, 407, 264, 17439, 295, 291, 434, 18114, 257, 4471, 498, 291, 994, 380, 458, 437, 4471, 390, 366, 1238, 1090, 13, 50964, 50964, 865, 11, 309, 311, 611, 570, 321, 500, 380, 362, 300, 867, 2098, 295, 2390, 721, 13, 286, 914, 11, 321, 500, 380, 362, 27960, 11, 370, 300, 18081, 257, 688, 295, 437, 321, 393, 360, 13, 51464, 51464, 663, 311, 2074, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08890308084942046, "compression_ratio": 1.5507246376811594, "no_caption_prob": 5.862683337909402e-06}, {"id": 1002, "seek": 449300, "start": 4515.0, "end": 4516.0, "text": " That's true.", "tokens": [50364, 821, 311, 1920, 411, 257, 12110, 2235, 3030, 729, 1333, 295, 16252, 2793, 13, 407, 264, 17439, 295, 291, 434, 18114, 257, 4471, 498, 291, 994, 380, 458, 437, 4471, 390, 366, 1238, 1090, 13, 50964, 50964, 865, 11, 309, 311, 611, 570, 321, 500, 380, 362, 300, 867, 2098, 295, 2390, 721, 13, 286, 914, 11, 321, 500, 380, 362, 27960, 11, 370, 300, 18081, 257, 688, 295, 437, 321, 393, 360, 13, 51464, 51464, 663, 311, 2074, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08890308084942046, "compression_ratio": 1.5507246376811594, "no_caption_prob": 5.862683337909402e-06}, {"id": 1003, "seek": 451600, "start": 4516.0, "end": 4526.0, "text": " We don't have for loops. So yeah, how do you map things from list? Well, yeah, you're going to reinvent mapping at some point.", "tokens": [50364, 492, 500, 380, 362, 337, 16121, 13, 407, 1338, 11, 577, 360, 291, 4471, 721, 490, 1329, 30, 1042, 11, 1338, 11, 291, 434, 516, 281, 33477, 18350, 412, 512, 935, 13, 50864, 50864, 865, 11, 309, 576, 312, 1627, 281, 1310, 300, 576, 312, 411, 257, 665, 2464, 493, 420, 746, 307, 12736, 597, 295, 613, 8294, 360, 21445, 300, 321, 600, 3094, 49152, 2276, 4445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11575763755374485, "compression_ratio": 1.4723618090452262, "no_caption_prob": 1.618705937289633e-05}, {"id": 1004, "seek": 451600, "start": 4526.0, "end": 4541.0, "text": " Yeah, it would be cool to maybe that would be like a good write up or something is exploring which of these patterns do APIs that we've built inadvertently implement.", "tokens": [50364, 492, 500, 380, 362, 337, 16121, 13, 407, 1338, 11, 577, 360, 291, 4471, 721, 490, 1329, 30, 1042, 11, 1338, 11, 291, 434, 516, 281, 33477, 18350, 412, 512, 935, 13, 50864, 50864, 865, 11, 309, 576, 312, 1627, 281, 1310, 300, 576, 312, 411, 257, 665, 2464, 493, 420, 746, 307, 12736, 597, 295, 613, 8294, 360, 21445, 300, 321, 600, 3094, 49152, 2276, 4445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11575763755374485, "compression_ratio": 1.4723618090452262, "no_caption_prob": 1.618705937289633e-05}, {"id": 1005, "seek": 454100, "start": 4541.0, "end": 4546.0, "text": " I'm sorry, I invented applicatives again.", "tokens": [50364, 286, 478, 2597, 11, 286, 14479, 2580, 4884, 797, 13, 50614, 50614, 663, 311, 257, 869, 5599, 3636, 558, 456, 13, 50864, 50864, 45263, 11, 286, 2942, 257, 1108, 345, 13, 51064, 51064, 1119, 341, 411, 264, 14029, 295, 411, 721, 5617, 17870, 411, 294, 264, 3303, 1002, 257, 688, 30, 51464, 51464, 286, 478, 406, 4963, 365, 341, 1349, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.12339339623084435, "compression_ratio": 1.4181818181818182, "no_caption_prob": 5.649406011798419e-05}, {"id": 1006, "seek": 454100, "start": 4546.0, "end": 4551.0, "text": " That's a great commit message right there.", "tokens": [50364, 286, 478, 2597, 11, 286, 14479, 2580, 4884, 797, 13, 50614, 50614, 663, 311, 257, 869, 5599, 3636, 558, 456, 13, 50864, 50864, 45263, 11, 286, 2942, 257, 1108, 345, 13, 51064, 51064, 1119, 341, 411, 264, 14029, 295, 411, 721, 5617, 17870, 411, 294, 264, 3303, 1002, 257, 688, 30, 51464, 51464, 286, 478, 406, 4963, 365, 341, 1349, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.12339339623084435, "compression_ratio": 1.4181818181818182, "no_caption_prob": 5.649406011798419e-05}, {"id": 1007, "seek": 454100, "start": 4551.0, "end": 4555.0, "text": " Whoops, I created a monad.", "tokens": [50364, 286, 478, 2597, 11, 286, 14479, 2580, 4884, 797, 13, 50614, 50614, 663, 311, 257, 869, 5599, 3636, 558, 456, 13, 50864, 50864, 45263, 11, 286, 2942, 257, 1108, 345, 13, 51064, 51064, 1119, 341, 411, 264, 14029, 295, 411, 721, 5617, 17870, 411, 294, 264, 3303, 1002, 257, 688, 30, 51464, 51464, 286, 478, 406, 4963, 365, 341, 1349, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.12339339623084435, "compression_ratio": 1.4181818181818182, "no_caption_prob": 5.649406011798419e-05}, {"id": 1008, "seek": 454100, "start": 4555.0, "end": 4563.0, "text": " Is this like the phenomenon of like things becoming crab like in the natural world a lot?", "tokens": [50364, 286, 478, 2597, 11, 286, 14479, 2580, 4884, 797, 13, 50614, 50614, 663, 311, 257, 869, 5599, 3636, 558, 456, 13, 50864, 50864, 45263, 11, 286, 2942, 257, 1108, 345, 13, 51064, 51064, 1119, 341, 411, 264, 14029, 295, 411, 721, 5617, 17870, 411, 294, 264, 3303, 1002, 257, 688, 30, 51464, 51464, 286, 478, 406, 4963, 365, 341, 1349, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.12339339623084435, "compression_ratio": 1.4181818181818182, "no_caption_prob": 5.649406011798419e-05}, {"id": 1009, "seek": 454100, "start": 4563.0, "end": 4565.0, "text": " I'm not familiar with this word.", "tokens": [50364, 286, 478, 2597, 11, 286, 14479, 2580, 4884, 797, 13, 50614, 50614, 663, 311, 257, 869, 5599, 3636, 558, 456, 13, 50864, 50864, 45263, 11, 286, 2942, 257, 1108, 345, 13, 51064, 51064, 1119, 341, 411, 264, 14029, 295, 411, 721, 5617, 17870, 411, 294, 264, 3303, 1002, 257, 688, 30, 51464, 51464, 286, 478, 406, 4963, 365, 341, 1349, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.12339339623084435, "compression_ratio": 1.4181818181818182, "no_caption_prob": 5.649406011798419e-05}, {"id": 1010, "seek": 456500, "start": 4565.0, "end": 4575.0, "text": " I have become familiar with that one recently and I keep hearing about it ever since.", "tokens": [50364, 286, 362, 1813, 4963, 365, 300, 472, 3938, 293, 286, 1066, 4763, 466, 309, 1562, 1670, 13, 50864, 50864, 8537, 11, 264, 1558, 300, 439, 5496, 6172, 3928, 281, 16693, 666, 746, 300, 588, 709, 1542, 411, 257, 17870, 13, 51314, 51314, 407, 1936, 11, 257, 17870, 307, 411, 733, 295, 257, 2176, 885, 294, 257, 636, 11, 364, 16252, 885, 11, 293, 1203, 445, 26048, 1024, 3030, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1396914172816921, "compression_ratio": 1.5792079207920793, "no_caption_prob": 5.4755841119913384e-05}, {"id": 1011, "seek": 456500, "start": 4575.0, "end": 4584.0, "text": " Basically, the idea that all animal species tend to evolve into something that very much looks like a crab.", "tokens": [50364, 286, 362, 1813, 4963, 365, 300, 472, 3938, 293, 286, 1066, 4763, 466, 309, 1562, 1670, 13, 50864, 50864, 8537, 11, 264, 1558, 300, 439, 5496, 6172, 3928, 281, 16693, 666, 746, 300, 588, 709, 1542, 411, 257, 17870, 13, 51314, 51314, 407, 1936, 11, 257, 17870, 307, 411, 733, 295, 257, 2176, 885, 294, 257, 636, 11, 364, 16252, 885, 11, 293, 1203, 445, 26048, 1024, 3030, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1396914172816921, "compression_ratio": 1.5792079207920793, "no_caption_prob": 5.4755841119913384e-05}, {"id": 1012, "seek": 456500, "start": 4584.0, "end": 4594.0, "text": " So basically, a crab is like kind of a perfect being in a way, an optimal being, and everything just gravitates towards that.", "tokens": [50364, 286, 362, 1813, 4963, 365, 300, 472, 3938, 293, 286, 1066, 4763, 466, 309, 1562, 1670, 13, 50864, 50864, 8537, 11, 264, 1558, 300, 439, 5496, 6172, 3928, 281, 16693, 666, 746, 300, 588, 709, 1542, 411, 257, 17870, 13, 51314, 51314, 407, 1936, 11, 257, 17870, 307, 411, 733, 295, 257, 2176, 885, 294, 257, 636, 11, 364, 16252, 885, 11, 293, 1203, 445, 26048, 1024, 3030, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1396914172816921, "compression_ratio": 1.5792079207920793, "no_caption_prob": 5.4755841119913384e-05}, {"id": 1013, "seek": 459400, "start": 4594.0, "end": 4604.0, "text": " Is it corollary that all programs will eventually be migrated over to REST?", "tokens": [50364, 1119, 309, 1181, 1833, 822, 300, 439, 4268, 486, 4728, 312, 48329, 670, 281, 497, 14497, 30, 50864, 50864, 4372, 21759, 13, 51064, 51064, 467, 311, 439, 1455, 2020, 586, 13, 1057, 558, 13, 51264, 51264, 814, 5111, 641, 9699, 731, 11, 412, 1935, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1290613485842335, "compression_ratio": 1.2296296296296296, "no_caption_prob": 4.2641764594009146e-05}, {"id": 1014, "seek": 459400, "start": 4604.0, "end": 4608.0, "text": " Very probable.", "tokens": [50364, 1119, 309, 1181, 1833, 822, 300, 439, 4268, 486, 4728, 312, 48329, 670, 281, 497, 14497, 30, 50864, 50864, 4372, 21759, 13, 51064, 51064, 467, 311, 439, 1455, 2020, 586, 13, 1057, 558, 13, 51264, 51264, 814, 5111, 641, 9699, 731, 11, 412, 1935, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1290613485842335, "compression_ratio": 1.2296296296296296, "no_caption_prob": 4.2641764594009146e-05}, {"id": 1015, "seek": 459400, "start": 4608.0, "end": 4612.0, "text": " It's all making sense now. All right.", "tokens": [50364, 1119, 309, 1181, 1833, 822, 300, 439, 4268, 486, 4728, 312, 48329, 670, 281, 497, 14497, 30, 50864, 50864, 4372, 21759, 13, 51064, 51064, 467, 311, 439, 1455, 2020, 586, 13, 1057, 558, 13, 51264, 51264, 814, 5111, 641, 9699, 731, 11, 412, 1935, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1290613485842335, "compression_ratio": 1.2296296296296296, "no_caption_prob": 4.2641764594009146e-05}, {"id": 1016, "seek": 459400, "start": 4612.0, "end": 4615.0, "text": " They chose their logo well, at least.", "tokens": [50364, 1119, 309, 1181, 1833, 822, 300, 439, 4268, 486, 4728, 312, 48329, 670, 281, 497, 14497, 30, 50864, 50864, 4372, 21759, 13, 51064, 51064, 467, 311, 439, 1455, 2020, 586, 13, 1057, 558, 13, 51264, 51264, 814, 5111, 641, 9699, 731, 11, 412, 1935, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.1290613485842335, "compression_ratio": 1.2296296296296296, "no_caption_prob": 4.2641764594009146e-05}, {"id": 1017, "seek": 461500, "start": 4615.0, "end": 4624.0, "text": " I really like that idea of getting to the basics and trying to derive these things by solving a real problem.", "tokens": [50364, 286, 534, 411, 300, 1558, 295, 1242, 281, 264, 14688, 293, 1382, 281, 28446, 613, 721, 538, 12606, 257, 957, 1154, 13, 50814, 50814, 2014, 456, 604, 15400, 337, 613, 544, 9860, 721, 30, 50964, 50964, 1144, 291, 1333, 295, 360, 437, 321, 439, 360, 293, 2052, 257, 3840, 295, 6123, 293, 362, 257, 4714, 20743, 1269, 294, 428, 11185, 30, 51264, 51264, 286, 600, 3720, 257, 1326, 11290, 17343, 666, 300, 13, 51464, 51464, 286, 600, 3720, 472, 322, 732, 16766, 322, 4471, 6828, 13, 51714, 51714, 407, 1333, 295, 732, 4973, 5245, 300, 286, 1797, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07026864968094171, "compression_ratio": 1.640316205533597, "no_caption_prob": 7.966532575665042e-05}, {"id": 1018, "seek": 461500, "start": 4624.0, "end": 4627.0, "text": " Are there any references for these more formal things?", "tokens": [50364, 286, 534, 411, 300, 1558, 295, 1242, 281, 264, 14688, 293, 1382, 281, 28446, 613, 721, 538, 12606, 257, 957, 1154, 13, 50814, 50814, 2014, 456, 604, 15400, 337, 613, 544, 9860, 721, 30, 50964, 50964, 1144, 291, 1333, 295, 360, 437, 321, 439, 360, 293, 2052, 257, 3840, 295, 6123, 293, 362, 257, 4714, 20743, 1269, 294, 428, 11185, 30, 51264, 51264, 286, 600, 3720, 257, 1326, 11290, 17343, 666, 300, 13, 51464, 51464, 286, 600, 3720, 472, 322, 732, 16766, 322, 4471, 6828, 13, 51714, 51714, 407, 1333, 295, 732, 4973, 5245, 300, 286, 1797, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07026864968094171, "compression_ratio": 1.640316205533597, "no_caption_prob": 7.966532575665042e-05}, {"id": 1019, "seek": 461500, "start": 4627.0, "end": 4633.0, "text": " Do you sort of do what we all do and click a bunch of links and have a thousand tabs open in your browser?", "tokens": [50364, 286, 534, 411, 300, 1558, 295, 1242, 281, 264, 14688, 293, 1382, 281, 28446, 613, 721, 538, 12606, 257, 957, 1154, 13, 50814, 50814, 2014, 456, 604, 15400, 337, 613, 544, 9860, 721, 30, 50964, 50964, 1144, 291, 1333, 295, 360, 437, 321, 439, 360, 293, 2052, 257, 3840, 295, 6123, 293, 362, 257, 4714, 20743, 1269, 294, 428, 11185, 30, 51264, 51264, 286, 600, 3720, 257, 1326, 11290, 17343, 666, 300, 13, 51464, 51464, 286, 600, 3720, 472, 322, 732, 16766, 322, 4471, 6828, 13, 51714, 51714, 407, 1333, 295, 732, 4973, 5245, 300, 286, 1797, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07026864968094171, "compression_ratio": 1.640316205533597, "no_caption_prob": 7.966532575665042e-05}, {"id": 1020, "seek": 461500, "start": 4633.0, "end": 4637.0, "text": " I've written a few articles digging into that.", "tokens": [50364, 286, 534, 411, 300, 1558, 295, 1242, 281, 264, 14688, 293, 1382, 281, 28446, 613, 721, 538, 12606, 257, 957, 1154, 13, 50814, 50814, 2014, 456, 604, 15400, 337, 613, 544, 9860, 721, 30, 50964, 50964, 1144, 291, 1333, 295, 360, 437, 321, 439, 360, 293, 2052, 257, 3840, 295, 6123, 293, 362, 257, 4714, 20743, 1269, 294, 428, 11185, 30, 51264, 51264, 286, 600, 3720, 257, 1326, 11290, 17343, 666, 300, 13, 51464, 51464, 286, 600, 3720, 472, 322, 732, 16766, 322, 4471, 6828, 13, 51714, 51714, 407, 1333, 295, 732, 4973, 5245, 300, 286, 1797, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07026864968094171, "compression_ratio": 1.640316205533597, "no_caption_prob": 7.966532575665042e-05}, {"id": 1021, "seek": 461500, "start": 4637.0, "end": 4642.0, "text": " I've written one on two perspectives on map functions.", "tokens": [50364, 286, 534, 411, 300, 1558, 295, 1242, 281, 264, 14688, 293, 1382, 281, 28446, 613, 721, 538, 12606, 257, 957, 1154, 13, 50814, 50814, 2014, 456, 604, 15400, 337, 613, 544, 9860, 721, 30, 50964, 50964, 1144, 291, 1333, 295, 360, 437, 321, 439, 360, 293, 2052, 257, 3840, 295, 6123, 293, 362, 257, 4714, 20743, 1269, 294, 428, 11185, 30, 51264, 51264, 286, 600, 3720, 257, 1326, 11290, 17343, 666, 300, 13, 51464, 51464, 286, 600, 3720, 472, 322, 732, 16766, 322, 4471, 6828, 13, 51714, 51714, 407, 1333, 295, 732, 4973, 5245, 300, 286, 1797, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07026864968094171, "compression_ratio": 1.640316205533597, "no_caption_prob": 7.966532575665042e-05}, {"id": 1022, "seek": 461500, "start": 4642.0, "end": 4644.0, "text": " So sort of two mental models that I hold.", "tokens": [50364, 286, 534, 411, 300, 1558, 295, 1242, 281, 264, 14688, 293, 1382, 281, 28446, 613, 721, 538, 12606, 257, 957, 1154, 13, 50814, 50814, 2014, 456, 604, 15400, 337, 613, 544, 9860, 721, 30, 50964, 50964, 1144, 291, 1333, 295, 360, 437, 321, 439, 360, 293, 2052, 257, 3840, 295, 6123, 293, 362, 257, 4714, 20743, 1269, 294, 428, 11185, 30, 51264, 51264, 286, 600, 3720, 257, 1326, 11290, 17343, 666, 300, 13, 51464, 51464, 286, 600, 3720, 472, 322, 732, 16766, 322, 4471, 6828, 13, 51714, 51714, 407, 1333, 295, 732, 4973, 5245, 300, 286, 1797, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07026864968094171, "compression_ratio": 1.640316205533597, "no_caption_prob": 7.966532575665042e-05}, {"id": 1023, "seek": 464400, "start": 4644.0, "end": 4647.0, "text": " I've written one about Elm's universal pattern.", "tokens": [50364, 286, 600, 3720, 472, 466, 2699, 76, 311, 11455, 5102, 13, 50514, 50514, 492, 764, 300, 382, 364, 10249, 337, 257, 3894, 3500, 13, 50664, 50664, 407, 729, 366, 439, 11, 286, 519, 11, 544, 8496, 8729, 942, 666, 613, 10392, 13, 50914, 50914, 286, 611, 1027, 472, 322, 437, 2314, 562, 291, 1190, 484, 295, 4471, 6828, 11, 597, 307, 17343, 666, 437, 2580, 1166, 307, 294, 257, 588, 733, 295, 9859, 764, 1389, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08812654614448548, "compression_ratio": 1.5023474178403755, "no_caption_prob": 8.664413144288119e-06}, {"id": 1024, "seek": 464400, "start": 4647.0, "end": 4650.0, "text": " We use that as an inspiration for a previous episode.", "tokens": [50364, 286, 600, 3720, 472, 466, 2699, 76, 311, 11455, 5102, 13, 50514, 50514, 492, 764, 300, 382, 364, 10249, 337, 257, 3894, 3500, 13, 50664, 50664, 407, 729, 366, 439, 11, 286, 519, 11, 544, 8496, 8729, 942, 666, 613, 10392, 13, 50914, 50914, 286, 611, 1027, 472, 322, 437, 2314, 562, 291, 1190, 484, 295, 4471, 6828, 11, 597, 307, 17343, 666, 437, 2580, 1166, 307, 294, 257, 588, 733, 295, 9859, 764, 1389, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08812654614448548, "compression_ratio": 1.5023474178403755, "no_caption_prob": 8.664413144288119e-06}, {"id": 1025, "seek": 464400, "start": 4650.0, "end": 4655.0, "text": " So those are all, I think, more practical entryways into these concepts.", "tokens": [50364, 286, 600, 3720, 472, 466, 2699, 76, 311, 11455, 5102, 13, 50514, 50514, 492, 764, 300, 382, 364, 10249, 337, 257, 3894, 3500, 13, 50664, 50664, 407, 729, 366, 439, 11, 286, 519, 11, 544, 8496, 8729, 942, 666, 613, 10392, 13, 50914, 50914, 286, 611, 1027, 472, 322, 437, 2314, 562, 291, 1190, 484, 295, 4471, 6828, 11, 597, 307, 17343, 666, 437, 2580, 1166, 307, 294, 257, 588, 733, 295, 9859, 764, 1389, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08812654614448548, "compression_ratio": 1.5023474178403755, "no_caption_prob": 8.664413144288119e-06}, {"id": 1026, "seek": 464400, "start": 4655.0, "end": 4667.0, "text": " I also made one on what happens when you run out of map functions, which is digging into what applicative is in a very kind of concrete use case.", "tokens": [50364, 286, 600, 3720, 472, 466, 2699, 76, 311, 11455, 5102, 13, 50514, 50514, 492, 764, 300, 382, 364, 10249, 337, 257, 3894, 3500, 13, 50664, 50664, 407, 729, 366, 439, 11, 286, 519, 11, 544, 8496, 8729, 942, 666, 613, 10392, 13, 50914, 50914, 286, 611, 1027, 472, 322, 437, 2314, 562, 291, 1190, 484, 295, 4471, 6828, 11, 597, 307, 17343, 666, 437, 2580, 1166, 307, 294, 257, 588, 733, 295, 9859, 764, 1389, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08812654614448548, "compression_ratio": 1.5023474178403755, "no_caption_prob": 8.664413144288119e-06}, {"id": 1027, "seek": 466700, "start": 4667.0, "end": 4681.0, "text": " So those are all, I think, useful articles for getting some understanding of what these things do in a very practical and in this case Elm centered environment.", "tokens": [50364, 407, 729, 366, 439, 11, 286, 519, 11, 4420, 11290, 337, 1242, 512, 3701, 295, 437, 613, 721, 360, 294, 257, 588, 8496, 293, 294, 341, 1389, 2699, 76, 18988, 2823, 13, 51064, 51064, 865, 13, 865, 13, 1042, 11, 2113, 281, 439, 729, 13, 3950, 366, 869, 3593, 13, 51214, 51214, 10391, 13, 400, 689, 393, 561, 1524, 291, 293, 1466, 544, 30, 51414, 51414, 400, 604, 661, 6123, 291, 528, 281, 2073, 30, 51514, 51514, 1079, 11, 436, 393, 1524, 385, 322, 5794, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11886798010932074, "compression_ratio": 1.5478260869565217, "no_caption_prob": 2.0260840756236576e-06}, {"id": 1028, "seek": 466700, "start": 4681.0, "end": 4684.0, "text": " Yeah. Yeah. Well, link to all those. Those are great resources.", "tokens": [50364, 407, 729, 366, 439, 11, 286, 519, 11, 4420, 11290, 337, 1242, 512, 3701, 295, 437, 613, 721, 360, 294, 257, 588, 8496, 293, 294, 341, 1389, 2699, 76, 18988, 2823, 13, 51064, 51064, 865, 13, 865, 13, 1042, 11, 2113, 281, 439, 729, 13, 3950, 366, 869, 3593, 13, 51214, 51214, 10391, 13, 400, 689, 393, 561, 1524, 291, 293, 1466, 544, 30, 51414, 51414, 400, 604, 661, 6123, 291, 528, 281, 2073, 30, 51514, 51514, 1079, 11, 436, 393, 1524, 385, 322, 5794, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11886798010932074, "compression_ratio": 1.5478260869565217, "no_caption_prob": 2.0260840756236576e-06}, {"id": 1029, "seek": 466700, "start": 4684.0, "end": 4688.0, "text": " Awesome. And where can people follow you and learn more?", "tokens": [50364, 407, 729, 366, 439, 11, 286, 519, 11, 4420, 11290, 337, 1242, 512, 3701, 295, 437, 613, 721, 360, 294, 257, 588, 8496, 293, 294, 341, 1389, 2699, 76, 18988, 2823, 13, 51064, 51064, 865, 13, 865, 13, 1042, 11, 2113, 281, 439, 729, 13, 3950, 366, 869, 3593, 13, 51214, 51214, 10391, 13, 400, 689, 393, 561, 1524, 291, 293, 1466, 544, 30, 51414, 51414, 400, 604, 661, 6123, 291, 528, 281, 2073, 30, 51514, 51514, 1079, 11, 436, 393, 1524, 385, 322, 5794, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11886798010932074, "compression_ratio": 1.5478260869565217, "no_caption_prob": 2.0260840756236576e-06}, {"id": 1030, "seek": 466700, "start": 4688.0, "end": 4690.0, "text": " And any other links you want to share?", "tokens": [50364, 407, 729, 366, 439, 11, 286, 519, 11, 4420, 11290, 337, 1242, 512, 3701, 295, 437, 613, 721, 360, 294, 257, 588, 8496, 293, 294, 341, 1389, 2699, 76, 18988, 2823, 13, 51064, 51064, 865, 13, 865, 13, 1042, 11, 2113, 281, 439, 729, 13, 3950, 366, 869, 3593, 13, 51214, 51214, 10391, 13, 400, 689, 393, 561, 1524, 291, 293, 1466, 544, 30, 51414, 51414, 400, 604, 661, 6123, 291, 528, 281, 2073, 30, 51514, 51514, 1079, 11, 436, 393, 1524, 385, 322, 5794, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11886798010932074, "compression_ratio": 1.5478260869565217, "no_caption_prob": 2.0260840756236576e-06}, {"id": 1031, "seek": 466700, "start": 4690.0, "end": 4692.0, "text": " Yes, they can follow me on Twitter.", "tokens": [50364, 407, 729, 366, 439, 11, 286, 519, 11, 4420, 11290, 337, 1242, 512, 3701, 295, 437, 613, 721, 360, 294, 257, 588, 8496, 293, 294, 341, 1389, 2699, 76, 18988, 2823, 13, 51064, 51064, 865, 13, 865, 13, 1042, 11, 2113, 281, 439, 729, 13, 3950, 366, 869, 3593, 13, 51214, 51214, 10391, 13, 400, 689, 393, 561, 1524, 291, 293, 1466, 544, 30, 51414, 51414, 400, 604, 661, 6123, 291, 528, 281, 2073, 30, 51514, 51514, 1079, 11, 436, 393, 1524, 385, 322, 5794, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11886798010932074, "compression_ratio": 1.5478260869565217, "no_caption_prob": 2.0260840756236576e-06}, {"id": 1032, "seek": 469200, "start": 4692.0, "end": 4702.0, "text": " I'm at joelken, J O U L Q U E N. And I publish a lot of articles on the Thoughtbot blog.", "tokens": [50364, 286, 478, 412, 1488, 338, 2653, 11, 508, 422, 624, 441, 1249, 624, 462, 426, 13, 400, 286, 11374, 257, 688, 295, 11290, 322, 264, 23058, 18870, 6968, 13, 50864, 50864, 407, 300, 311, 23058, 18870, 11, 314, 389, 422, 624, 460, 389, 363, 422, 314, 13, 286, 519, 286, 34388, 300, 558, 13, 51264, 51264, 6187, 1299, 6968, 13, 400, 550, 498, 291, 528, 281, 915, 3892, 4682, 11, 17330, 16552, 17330, 1488, 338, 8240, 18787, 8386, 13, 51614, 51614, 467, 1062, 312, 1101, 281, 362, 364, 3539, 2113, 550, 13, 51714, 51714, 1079, 11, 321, 486, 909, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1598898206438337, "compression_ratio": 1.4732142857142858, "no_caption_prob": 0.0001659956033108756}, {"id": 1033, "seek": 469200, "start": 4702.0, "end": 4710.0, "text": " So that's Thoughtbot, T H O U G H B O T. I think I spelled that right.", "tokens": [50364, 286, 478, 412, 1488, 338, 2653, 11, 508, 422, 624, 441, 1249, 624, 462, 426, 13, 400, 286, 11374, 257, 688, 295, 11290, 322, 264, 23058, 18870, 6968, 13, 50864, 50864, 407, 300, 311, 23058, 18870, 11, 314, 389, 422, 624, 460, 389, 363, 422, 314, 13, 286, 519, 286, 34388, 300, 558, 13, 51264, 51264, 6187, 1299, 6968, 13, 400, 550, 498, 291, 528, 281, 915, 3892, 4682, 11, 17330, 16552, 17330, 1488, 338, 8240, 18787, 8386, 13, 51614, 51614, 467, 1062, 312, 1101, 281, 362, 364, 3539, 2113, 550, 13, 51714, 51714, 1079, 11, 321, 486, 909, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1598898206438337, "compression_ratio": 1.4732142857142858, "no_caption_prob": 0.0001659956033108756}, {"id": 1034, "seek": 469200, "start": 4710.0, "end": 4717.0, "text": " Slash blog. And then if you want to find mine specifically, slash authors slash joel dash kenville.", "tokens": [50364, 286, 478, 412, 1488, 338, 2653, 11, 508, 422, 624, 441, 1249, 624, 462, 426, 13, 400, 286, 11374, 257, 688, 295, 11290, 322, 264, 23058, 18870, 6968, 13, 50864, 50864, 407, 300, 311, 23058, 18870, 11, 314, 389, 422, 624, 460, 389, 363, 422, 314, 13, 286, 519, 286, 34388, 300, 558, 13, 51264, 51264, 6187, 1299, 6968, 13, 400, 550, 498, 291, 528, 281, 915, 3892, 4682, 11, 17330, 16552, 17330, 1488, 338, 8240, 18787, 8386, 13, 51614, 51614, 467, 1062, 312, 1101, 281, 362, 364, 3539, 2113, 550, 13, 51714, 51714, 1079, 11, 321, 486, 909, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1598898206438337, "compression_ratio": 1.4732142857142858, "no_caption_prob": 0.0001659956033108756}, {"id": 1035, "seek": 469200, "start": 4717.0, "end": 4719.0, "text": " It might be better to have an actual link then.", "tokens": [50364, 286, 478, 412, 1488, 338, 2653, 11, 508, 422, 624, 441, 1249, 624, 462, 426, 13, 400, 286, 11374, 257, 688, 295, 11290, 322, 264, 23058, 18870, 6968, 13, 50864, 50864, 407, 300, 311, 23058, 18870, 11, 314, 389, 422, 624, 460, 389, 363, 422, 314, 13, 286, 519, 286, 34388, 300, 558, 13, 51264, 51264, 6187, 1299, 6968, 13, 400, 550, 498, 291, 528, 281, 915, 3892, 4682, 11, 17330, 16552, 17330, 1488, 338, 8240, 18787, 8386, 13, 51614, 51614, 467, 1062, 312, 1101, 281, 362, 364, 3539, 2113, 550, 13, 51714, 51714, 1079, 11, 321, 486, 909, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1598898206438337, "compression_ratio": 1.4732142857142858, "no_caption_prob": 0.0001659956033108756}, {"id": 1036, "seek": 469200, "start": 4719.0, "end": 4721.0, "text": " Yes, we will add that.", "tokens": [50364, 286, 478, 412, 1488, 338, 2653, 11, 508, 422, 624, 441, 1249, 624, 462, 426, 13, 400, 286, 11374, 257, 688, 295, 11290, 322, 264, 23058, 18870, 6968, 13, 50864, 50864, 407, 300, 311, 23058, 18870, 11, 314, 389, 422, 624, 460, 389, 363, 422, 314, 13, 286, 519, 286, 34388, 300, 558, 13, 51264, 51264, 6187, 1299, 6968, 13, 400, 550, 498, 291, 528, 281, 915, 3892, 4682, 11, 17330, 16552, 17330, 1488, 338, 8240, 18787, 8386, 13, 51614, 51614, 467, 1062, 312, 1101, 281, 362, 364, 3539, 2113, 550, 13, 51714, 51714, 1079, 11, 321, 486, 909, 300, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1598898206438337, "compression_ratio": 1.4732142857142858, "no_caption_prob": 0.0001659956033108756}, {"id": 1037, "seek": 472100, "start": 4721.0, "end": 4727.0, "text": " Look at the show notes for the link. Great. Well, thanks again, Joelle, for coming on and pleasure as always.", "tokens": [50364, 2053, 412, 264, 855, 5570, 337, 264, 2113, 13, 3769, 13, 1042, 11, 3231, 797, 11, 3139, 4434, 11, 337, 1348, 322, 293, 6834, 382, 1009, 13, 50664, 50664, 1044, 291, 13, 3769, 281, 751, 365, 291, 439, 797, 13, 50814, 50814, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 9088, 958, 565, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1494629794153674, "compression_ratio": 1.4285714285714286, "no_caption_prob": 5.7381606893613935e-05}, {"id": 1038, "seek": 472100, "start": 4727.0, "end": 4730.0, "text": " Thank you. Great to talk with you all again.", "tokens": [50364, 2053, 412, 264, 855, 5570, 337, 264, 2113, 13, 3769, 13, 1042, 11, 3231, 797, 11, 3139, 4434, 11, 337, 1348, 322, 293, 6834, 382, 1009, 13, 50664, 50664, 1044, 291, 13, 3769, 281, 751, 365, 291, 439, 797, 13, 50814, 50814, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 9088, 958, 565, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1494629794153674, "compression_ratio": 1.4285714285714286, "no_caption_prob": 5.7381606893613935e-05}, {"id": 1039, "seek": 473000, "start": 4730.0, "end": 4753.0, "text": " And Jeroen, until next time. Until next time.", "tokens": [50364, 400, 508, 2032, 268, 11, 1826, 958, 565, 13, 9088, 958, 565, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2104911506175995, "compression_ratio": 1.125, "no_caption_prob": 4.982737300451845e-05}], "language": "en"}