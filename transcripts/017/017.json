{"text": " Hello, Jeroen. Hello, Don. How are you doing today? I'm doing pretty well. How about you? I'm good. I'm good. I am excited to dive into the topic today. Yeah. Today we're talking about codecs, which is something we don't talk about quite often, I think. Yeah, it seems to be an emerging pattern that you see popping up more and more. I think it's one of those little community patterns that evolves over time and there's this sort of seed of an idea that sprouts all over in the community. It seems to be one of these things. Yeah. So, maybe let's describe what a codec is. Yes. So, a codec is a short word for codec... Man, I don't know, actually. Let's look it up. I think it's for encoder and decoder, or decoder and encoder. I don't know which way it is, but it's a contraction of both. Code decode. So, it's a utility or a tool or a library that allows you to encode something from A to B and decode it from B to A. Oh, I've got a trivia fact for you, Jeroen. So, a codec... Is a portmanteau? A portmanteau of coder, decoder. You also looked at the Wikipedia page. I'm looking at the Wikipedia page as well. So, it's kind of cool because that is the definition that it is something that decodes and encodes. So, that's a very good choice of word, which I think maybe Leonardo, Mini Bill, was the first one to come up with that term, I assume. He created the Elm codec library for JSON encoding and decoding simultaneously. So that's sort of the origin, I think, of that term in the Elm community. In the Elm community, probably. Maybe someone did something for older versions of Elm. As far as Elm 0.19, I think that's the earliest one I know, at least. Yeah. So, that's essentially the... That's the concept, is something that both encodes and decodes. And so, that is a... There is an Elm codec library, but there are actually now multiple libraries emerging for things like dealing with bytes, for example. And I think it's worth noting that this is both a pattern and a set of... A library and a set of libraries, but it's also a pattern. Yeah. It's more of a pattern. Yeah. It's more a pattern than anything. And I think that... One of the things that I think is really interesting is... So there's this sort of reversible nature, right? When you're... This idea that you're building up an encoder and a decoder at the same time and that it's reversible. And that I think would be sort of the textbook definition of this concept of a codec. But then there's another concept here, which I think is really interesting and valuable in the Elm community, which is the idea that you build up as much information as you can at once because you sort of... You can lose that information otherwise. So if you build up a decoder and an encoder, right, then they're two separate things. And you have to... maybe you have some fuzz tests to make sure that they're reversible or you have to do a little extra work to keep them in sync and make sure they are reversible. Yeah. Making sure that when you encode something and then decode it, you always get the same thing back and the same thing for decoding than encoding. Yes. Right. Right. And so that's like... We can do better than just trying hard to do that and then making sure we did a good job after the fact through... If we automate it with some tests and stuff, that's great. But what if we could build it up in such a way where we keep things in lockstep through the API we use to build it up? So I don't know if that specific concept is... Maybe it's part of a codec, but also a pattern that comes up outside of this idea of codecs. Like for example, in Elm GraphQL, that's an essential concept as well, that you are building up the information you need to perform a GraphQL query as well as the information you need to decode that. And in Elm, these pipelines that you use to build up, whether it's just a vanilla decoder and Elm GraphQL selection set, there are all these different data types, like a validation sort of API for validating form input or whatever. You're building up data in a way where the Elm type system keeps track of the data as you build it up, but you're not only building up that data, you can transform that data along the way, and you're tracking this underlying information about that data. And so there's something there that maybe that's a separable principle that you can use outside of this notion of a codec, which is like a reversible encoder, decoder. So where would you use this as a very simple instance? Would you use this, for instance, when you deal with HTTP requests? What is the smallest thing where you would apply codecs? It's a good question. I think that probably one of the most common use cases for a codec is going to be data that you control, because if it's data that you don't control, it's coming back from a server that you don't control, then there might be a disparity between the data you're decoding and the data you're encoding. But if you control the data, for example, if it's user settings and you want to be able to serialize it and deserialize it, if you want to update the user settings, which you have in some Elm data type, and then you want to serialize that, put it into local storage, and then read it back out, that's a perfect example that you just want this reversible thing. You control the serialization and deserialization, and you control both of those things in your Elm code. Yeah, I imagine that you would have multiple decoders built in. For instance, you want to save your user settings. Those might change over time. At first, you only save A, and then later on, you add B. So your first codec would only encode A and decode A, but your second decoder later on would also encode B and decode B, but it would still need to work in the version where B does not exist. Yeah, making it backwards compatible and nonbreaking. Yes. That's a shorter way of saying it. Yeah, that's definitely a whole topic on its own. And it is interesting how codecs fit into that picture because they are compatible with it, but they don't in themselves enforce that concept, but they can help with that. Yeah. That's a good point. I don't think I've seen one implementation of that where a backwards compatibility would necessarily work. I don't know. They do say things about that in their frequently asked questions. Yeah. And Mario Rogic has this idea he calls Evergreen that he gave a really great Elm Europe talk about that one year. And he has that actually working in practice in Lambda. So this idea of managing breaking changes is something that exists out in the wild. And you could certainly apply that concept to codecs. And I think under the hood, I believe Lambda may even be using one of these codec libraries under the hood. I know it's serializing and deserializing these things as bytes. Yeah. I think I've seen that there are limitations in what you can do with your migrations in Lambda because of that. Because it's trying to stay backwards compatible. When you succeed, then that's just an amazing experience for your user. So yeah, I agree with the way you can control the data. As we said, when you don't control the data as much as you want only in Elm, then you're dependent on what it looks like from the server or from some public API. Right. Yeah. And then it will probably look like something that is a copy of the API response. What I mean is you don't want to parse the API endpoint and put it into a model just like you want to model it so that you don't have impossible states. Although you can capture that in a codec where you can build up custom types. And then of course, it's reversible so you build up a custom, you can encode a custom type and decode it as well. And if you have something like, if you use some of these serverless sort of Elm, things that run like Elm code for serverless functions and return JSON data and stuff, right? If you do code sharing, then you can use a tool like that to ensure that these two data types are in sync. Yeah. Which, of course, you do run into these tricky questions about backwards compatibility there as well because... Yeah, and synchronization. Yes. Yeah, just like we talked about in the GraphQL episode last time. Exactly. Yeah, those same sort of concepts. What's that called, the Ottoman general problem or I don't know, some sort of general problem, which is this sort of conceptual problem in computer science that if you have a general who needs to send a message to the troops that they're going to attack, but they will only attack if he needs to send the message to the troops. Then the troops need to send a confirmation that they received the message to attack because both sides of this hill need to attack simultaneously. And if they don't both have a synchronized plan to attack at the same time, then they need to call off the attack. So they can only do it if they get confirmation. So the one side, side A needs confirmation that side B, but then side B needs confirmation that side A received their confirmation. There's no resolution. It's a mess. There's no way to solve that problem. So there are certain conceptual limits to these things, but we kind of discussed that in the Elm GraphQL episode that there are ways to get around that. But yeah, those are some tricky problems. But anywhere that you're able to sort of control the serialization format in your Elm code, whether that's Elm running on a serverless function and then being serialized in a serverless function run by Elm, and then a shared code base that deserializes it on the client side in a browser in Elm, that same concept applies that you control the format in a shared Elm code base. So should we get into the more sort of detailed API of what you can do with Minibil Elm codec? Yeah. So like, I mean, first of all, the simplest thing you could imagine doing is just doing a codec for a string, right? So if you just do codec.string, now you have something that knows I can get a decoder for this, which is json.decode.string under the hood, and I can get an encoder from this, which is encode.string. So it keeps track of that information. And you got one for every basic type. You got audience, you got floats, ints, characters. Yeah. So if it was as simple as, you know, if you were only dealing with built in Elm types, you know, string, bool, int, float, and then maybes and lists of those, or even dicts and sets and tuples, if that was all you were doing, then you wouldn't have to do very much work. You pretty much get all of that for free. You just say this is a list of strings. This is a list of ints or whatever, and it's just going to work. There's no extra effort for you to describe how to serialize and deserialize because it knows how to encode it into a list of strings, and it knows how to decode that into a list of strings. But once you get into things like objects, now that becomes a little more intricate because now if you're building an object, if you're turning that object into a record on the decode side, on the Elm side, then you need to then tell it how to pick apart that field from a record, or it may not be a record. It may be some other data type, but you need to tell it how to grab that field so it can encode it when it's encoding that value. Yeah, and it doesn't really have to look just the same on Elm and JavaScript. So you can have a record on the Elm side and have an array on the JavaScript side if you try to optimize it one way or another. You could do it like that if you wanted to. Can you do that with the Elm codec? You mean using codec.object? Yeah, because your codec.object takes a constructor just like decode.succeed. Which would typically be a record constructor that people would pass in there, but it can be any function that takes those data types. And then you use the builder pattern where you say codec.field and then the name of the field in JavaScript. So in this case, you're saying, I tried to get this field with this name. So you're saying you could turn it into a list on the Elm side, but then when it turns it into a JavaScript object, codec.field is always going to turn it into a JavaScript object on the encode side. Right. Yeah, it does look like this API does not allow you to do this, what I said. You could imagine that you encode it differently in JavaScript. That's right. Have you used Elm serialize? Did you try using that? Yeah. Okay, so you want to give a brief intro to that library? Yeah, so I used Martin Stewart's Elm serialize, which was previously called Elm codec bytes, if I remember correctly. Now it's called Elm serialize. So it's basically the same thing as Elm codec, but it doesn't work with JSON. It works with bytes or strings because you can convert it to the ideas that you generate more performance, JSON representation or bytes. Right, because you don't care about the underlying type that's used. You just care that you can take a data type in Elm, deserialize it to some format, which you don't care what that format is, as long as you can also get it back using that codec that you build up. So the use case is like you only want yourself or this code to be able to read it. You don't care about the rest. And when you're in that use case, you can optimize a lot of it. So in this case, you do turn things into like an array with zeros instead of custom type names. And it's a very, very compact JSON object that you get or bytes. So I use it in Elm review to cache the internal ESCs for files. That saves a lot of disk space. It takes like, I think it saves like 60% of disk space compared to the Elm syntax, original decoder and encoder. Which is like JSON. Which is JSON and with long fields. So that one is meant to be human readable. What I use isn't. It's only meant for my internal cache. So yeah, you can use codecs for caching, which has been my only use case for now. For Elm codec, you could imagine that it's not codec.field, but you could have codec index at and do something else where you would have decoder that decodes one way and encoder that encodes one way. Right. Right. Yeah. And so that's nice to be able to build up an object. And it's this underlying principle again, that at the point that you have that information, you're basically giving it all the information it needs for one step. So you could build up a decoder and then you could build up an encoder. But to do that, you now have to duplicate all this information about it. When you say encode.string one place, and then you have to say decode.string in the other place. Whereas when you build up a codec, you don't need to do that because you have that information in a codec. And we've talked about making possible states impossible in terms of data modeling. We've also talked about the role of API design in making impossible states impossible. And I think this is one of those instances where maybe this is like another special case of that where through the API design, you capture all the information when you have it so you don't have duplicate sources of truth. You have one source of truth and you take all that information. So that's what a codec is doing. Instead of building up the encoder and the decoder separately, we have to duplicate all this information. You build them up together. And there are certain things that you cannot make mistakes on. And then there are places where you can make a mistake. So you build up a codec. If you build up a codec for an object, you do codec.object and then you give it a record constructor. So the example in the docs is a point with a record that's got an x and y float. So then you do codec.object, you give it the point record constructor, and then you pipe that into codec.field with the string x, which is the field name in JavaScript. Now if you gave that something like empty string, you could mess that up, but you're going to have to do something like that. So that's not anything new that you could mess up compared to. Jason decoding or Jason encoding. Exactly. And then you need to give it the second argument you give to codec.field. In the example he gives.x, which would be a function that takes that record type and pulls off the value for the encoder. From the Elm code. Yeah, from the Elm record. Yeah, right. It takes the value from the Elm record. So it could be any function which takes whatever value you're dealing with in this point, it's a point record, and then gets some sort of float data type back. And of course you could put.y where you meant.x and you can make mistakes there. And then you say codec.float as the final argument that says this is how you serialize and deserialize it. That part is guaranteed to be in sync. You can't mess that part up. So there are just more guardrails to things being in sync, and there is some manual work, but at least you're capturing the information while you have it. And I think that's the underlying concept that I really like. And I think that that concept is applicable in more places than just this pattern. Yeah, totally. So as a recap, field takes as a first argument where in the JavaScript you need to write or read the data from. You got the second argument that is where do you get the value from the record from in Elm. And the third argument is what is the type of that field. And because you have both reading and decoding and encoding at the same place, it's much less likely that you're going to make a mistake. That's another good point. Right. Because you can, if you see, if you give a JavaScript object field name x and then you give a record accessor function.y, then you can look right next to each other and you can see visually it's more obvious that something's gone wrong. So yes, not only are you not losing that information as you build it up in two separate places, but you can see the information together. So if there's a mistake, it's easier to catch. And you will not be able to leave out of a field, for instance, or as easily at least because you can still do that in the object constructor or the record constructor. Since you want the encode format and the decode format to always be in sync, you really want to have all the guardrails available to make sure that you don't mess those up. And when you have an encode that is very far away from decode, like maybe just a few lines away, but that might still be too far away, then you're more likely to mess up. And this is my main reasoning for using something like a codec is when the decoding and encoding are the same or represent the same thing, you want to have all the tools available. Should we talk about how you decode custom types? That's one of the really clever design elements in this library is that solution to creating a codec for a custom type. So essentially, there's a little bit of a learning curve to figuring out how to work with this, but you're building up this codec.custom, which it takes a function, and that function is going to take an argument for every single variant that you have. So if you have a teacher and student variant for a person, then so you'd have an argument for teacher, an argument for student, and an argument for the actual value that you received. So you can do a case statement on that value on that person, and then say if it's a teacher, then you destructure that teacher, and then you have to call that argument that you had for teacher, and that argument is the encoder being passed in. Yeah, it's so weird. That's the thing that hurts your brain the most, and that's the really clever thing about this design is it finds a solution to sort of capturing that information, but it definitely hurts your brain at first. So if you think about it, what do you need to teach it in order to have it reversibly decode and encode a custom type? And what you need to teach it is, well, how do I pick apart the information from a custom type and then encode that, and then how do I decode that? And for encoding it, so you build up these encoders using these variant zero, variant one, variant two functions, which take a name to serialize for that variant on the JavaScript, and then they take the constructor to build it up, so that tells it when it decodes it how to build it up, and then you take the individual codecs for each of the arguments of the custom type. So it really hurts your brain, but I find with understanding any complex pattern in an Elm API, I find it helpful to put yourself in the shoes of the library author and say, like, instead of just saying, like, oh, this is difficult to write, you say, like, what does this API need to accomplish? And then it helps you understand the design. And so again, this API needs, what it needs to accomplish is you need a way to tell it how to, you know, how to take these values, decode them from JSON, and then build up a custom type, and you need to be able to pick apart a custom type and turn it into a serialized JSON object. So I think it helps to keep that in mind when you look at it. Why is it passing in these encoder functions? Often as a library author, you're trying to avoid people from making mistakes. So if it looks a bit odd, it's probably because they're trying to add you to give you some guarantees. And in this case, that is exactly the point. Do you know what the what the resulting JSON looks like? Because as you said, there's a name for the variance. So that's a string that you place. So I'm guessing you have something like a record with an object with a type field where that's... Yeah, I'm trying to remember the exact format, like what the name is. There's one field that's called args. And I think args is just going to have the, you know, if it's variant two, then it's going to have two values in the args list. Or if it's variant zero, I think it's going to have zero values in the args list. And then I don't remember what the actual variant name like teacher or student, that string. I don't remember what that's placed under. Seats or constructor, maybe? I think it might be called something else. So this does tie... So if the library chooses a JSON format for you, then this does not help you with working with external formats. So if you want to, if you want your custom type to look at a certain way, when communicating with HTTP requests, for instance, then it's probably not this that you're going to use. I'm sure that you can use something else. Yeah, you can use one off to do something pretty custom, I think. Yeah. Oh, by the way, I found it. I believe it's called tag. Tag and args. So you get an object that has those two fields. Yeah, that makes sense. So there is one tricky thing that I've encountered when using this library, which is... So sometimes you have certain areas that you don't care to serialize, deserialize. Like you want to send it one way, but not the other. And there is, you can sort of trick it a little bit by creating your own custom... Let me look this up. Yeah, so you can fudge it a little bit because you can use the codec.build function, which is essentially an escape patch. So codec.build takes basically an encoder function, something that takes some value and turns it into an encode value. And it takes as a second argument, a JSON decoder, and you can completely fudge it, right? Like you can turn it into an arbitrary or you can do encode.null or whatever. You can do decode.succeed to any value. So you can sort of use that as an escape patch if you care about sending it, but you don't care about receiving it or vice versa. So that's something I've used. So like one use case that we haven't hit on yet actually, but that I've found this library useful for is using Elm program test. So for Elm program test, you can send... You can make assertions about JS ports that have been sent. And when you do that, you send the JS port as it's some JSON value. And so you can make assertions about that JSON value, but you need a decoder in order to do that. So when you use Elm program test and you want to make assertions about ports, you need to send both an encoder and a decoder? Let's say you're making an assertion about a value that you send to JavaScript through a port in your Elm program test test case. Now when you're making assertions and you say, I expect this outgoing to JavaScript port to have been called with some value. How are you going to assert about that value? You need to have a decoder in your Elm program test set up that tells it how to turn... Because it received some JSON value. And so now you need to be able to decode that. And so that's pretty low level. And it would be a pain to be trying to keep them in sync constantly. And again, this gets to the broader sort of way of thinking, that broader mindset, which is if you notice that you have multiple sources of truth, how can you bring those sources of truth together? So there are fewer places where you could introduce a divergence between those two sources of truth. And so codecs are an example of that concept, but there are many places you can apply that concept. So that's one place that I felt frustrated of having these two sources of truth, that it's like I'm encoding these values, but then I'm making assertions about these values in my Elm program test cases where in fact, I don't even know... I'm going to start having my tests fail if the encode format diverges from the decoder I wrote in my Elm program tests. And those are just two sources of truth that are diverging. So I'd like to have less things that could go wrong there. But again, there are certain things that if I don't want to assert on something, it does get interesting because then you can use those escape patches and do codec.build and give it something that hardcodes either the encoding or the decoding part, depending on what you care about. Yeah. If you do use that, then that is where you would likely need more tests than the rest because this part you can fail. Right. Right. Yeah. Even though you do, even if you use a codec, it's not a bad idea to have some tests around your codecs and it can be useful to have like fuzz tests. It's a really easy fuzz test to write to say that a codec is reversible. It'd be interesting to build up along with the codec to build up a fuzz tester that generates random values for that and then creates a unit test, a fuzz test that it's reversible. You mean with the same API? Yes. Yeah. But then I wonder whether it would actually help assert anything. I guess it would. Yeah. Which is kind of crazy, but it actually could give additional information about correctness. Not necessarily perfect information, but additional information at least. Something interesting. Someone do that. Yeah. It would be a fun experiment. So Leonardo, AKA Mini Bill, gave a talk at the London online meetup recently and he was saying that his initial prototype of the Elm codec library was using this, it included like a form encoder and he resisted the temptation to add additional features and just tried to keep it simple, which I think is a good call. It's usually a good call, yeah. But that does again illustrate that point that this pattern has a lot of different applications. So a form codec, is that for instance when you want to save the result of a form to record somewhere, but you also want to open that form with preexisting data? I think that would be the idea. Yeah. That's interesting. I've never thought of it. Yeah. There are so many applications of this concept. I mean, again, it's just relentlessly looking for ways to reduce sources of truth down to one and to make impossible states impossible. These are sort of the natural logical conclusions of that mindset, I think. Yeah. Another use case I found actually today is for routing. So we're looking at refactoring the code today in the workplace and we have two functions for routing. One to parse the URL into a page or a route. We call that a route in our case. And then a function that takes a route and turns it to a string so that you can create a list. Right. It's very... Yeah. I mean, that must be like almost every single LMSPA must have that function. Yeah. Exactly. Those ones are defined in different places. They're also spread across plenty of modules because we want to... Because at least we split it up. Which might not be a good idea, but we'll see what we'll do about that. And yeah, it's pretty easy for them to get out of sync or even just forgetting to add a route in one place. So that's quite annoying. But if we do that through a codec, then we only have to do it in one place. And that is pretty good, I think. Pretty nice. Right. And that's a good point about if you add a new route, like if you add a new variant to a custom type, then if you're using this sort of codec style pattern where you have a case statement where you build up that encoder, then it keeps you honest there. I guess you would probably have a case statement anyway in the encoder regardless, but you're sharing more information. Yeah, but you might forget to handle the decoding. Right. I guess that's where it becomes more useful, isn't it? On the decoding side, you're less likely to miss it. Interesting. And maybe you can do some stringification for you. Right. Because you can't... Essentially, you cannot have a decoder for which there is no encoder. Or you cannot have an encoder for which there is no decoder. Meaning if you had the encoder, you would probably do case route of variant, variant, variant, variant, and then you encode each of those. And as you said, you're not going to forget to handle a case of those. Assuming you don't do a wildcard, the compiler is going to tell you to handle a new case, and then you'll add the encoder for it. And that's not going to be a problem so much. But then as you said, for the decoder part, you may forget to handle that case where you turn that back into a route. Or for the URL parser part or the JSON decoder or whatever type of codec we're talking about, that's the part you might forget, right? Yeah. If you add the variant to your custom type. In a regular encode decode thing. Right. Exactly. When you have those two things split apart and defined separately. But when you do it as a codec, in order to define a new custom type variant, you now add a pipe chain and you say codec dot variant one or variant zero or depending on how many arguments that custom type has. And and now you get a new argument in that function that gives you that encoder. And that's the only way to access the encoder to encode the value. So you have that case statement. You could handle that case statement, but you don't have the encoder to encode that custom type. So it keeps you honest about keeping those things. So that's that's the really interesting thing about that, isn't it? Yeah. And it's basically the other way around that the compiler will lead you like, oh, you forgot to add this case, this branch in this case of expression. So you add it and then, oh, well, I can't encode it. OK, well, I need to add a variant in the arguments. Oh, well, you need to add a variant in the builder pattern. Mm hmm. And right. You're done. Right. There's another example that that has been on my mind a lot, which is, you know, we've talked on this show about, you know, in Elm pages, how there's this optimized decoder, which will, you know, you you build up a JSON decoder using an API that's exactly like JSON decode, you know, and then when you. Go back to episode one, by the way. Right. Yes. And when you access a field in that optimized decoder, it's exactly like accessing a field in a JSON decoder, except that under the hood, when you run your build, it's tracking which field you're accessing. And then it's actually reserializing that JSON that came in and taking out the fields that you didn't decode, because it can guarantee if you didn't, if you do, you know, decode dot field X and decode dot field Y, but you don't do decode dot field Z and there's a Z in there, then it can throw away Z and the decoder will run exactly the same way because you didn't touch that JSON value. So it takes the the raw JSON value. It tracks which ones you touch by doing decode dot field and then it takes that JSON and then you can strip out all of the unused values. Now that applies not only for unused fields, but for unused indices in JavaScript arrays. And it can do that because if you do like decode dot at four, then you're only accessing index four in this JSON array. It can null out every single other thing. So when you do, when you run it with a regular JSON decoder, it's guaranteed to access the thing that was at four the exact same way because it's at the same index, but you know everything else. So that's actually thought it would be a bit cooler. I thought it would remove the first four items and then change the index of the decoder. Well, I guess it could maybe. You could, it would, that would become pretty tricky. You'd need to store some meta information in order to do that. So like what I do in Elm pages is I run this like when you do Elm pages build, I take the decoder, run it, it tracks what data is used in the JSON, marks those things as being consumed and then it creates a stripped down version of the JSON and then that gets stored as the data that's fetched when you actually run the webpage. So now as a user, when you go and you hit an Elm pages website page, then it's going to get that minify JSON data, but now it's running a vanilla Elm JSON decoder on that. And so it can run the decoder without any special fancy logic. It just runs the decoder and it's guaranteed to decode in an equivalent way. Do you know how much you save by the way, usually? Oh, I mean, well, it depends, right? Yeah. I mean, if it's a giant REST API, I mean, it's not uncommon at all to have deeply nested fields coming back in REST APIs or, you know, 200 different fields. So like I think it would be, I don't think I can claim to accurately give like the median range or something like that, but I will say, imagine that you're getting two fields in a REST response and there are a hundred fields and those fields, some of those fields are, you know, arrays and nested objects and stuff. January me's. Yeah, you can, you could sort of do the mental math and imagine that you could easily have, you know, 2% of the entire data response that you're accessing. It's not, it's not such a stretch of the imagination. So it very much depends on the API. But so that's another interesting application of that idea of using this information that you build up. So you're, you're decoding, but you're also building up information as you decode. And actually, you know, Ilias originally built this library, JSON decode exploration where what it does is it, you can run a JSON decoder and you can give a warning if there are unused JSON fields. That was where I had the idea. So I asked him one day, you know, do you think you'd be able to use this to strip out unused JSON values? And then within like a day he had built a working prototype, which I think ended up pretty much being the release with a couple of like updated docs and test cases after that. But so the sky's the limit with what you can do with this concept of, you know, building up multiple pieces of information at the same time in a pipeline. I'm wondering whether you can do something like that for parsers. Like if you try to parse something like ISO 8601. Your favorite. That's it. Yeah. I'm sorry, it is 8602. Brain dump here. Brain freeze at the last moment. So yeah, if you parse ISO 8601. Which is a date format for people, for new listeners. Because surely you'll know it otherwise. Yeah. So yeah, you parse it, but then you might also just want to rewrite it as a string. Right. Yeah. Yeah. So like for like parsing languages or like in Armoury. Yeah. Yeah. We parse the Arm code and then sometimes we want to rewrite Arm code. Like what could the Arm format work with as a data structure under the domain? I don't know if you can. Yeah, maybe. It's interesting. It is very interesting. Because you can definitely do the same thing. But the question is, would you be able to do it in a way that you, where you would get the same guarantees as what you have with the Arm Codex API? That's fascinating. Well, that's apparently an exercise for the listener. I think it would depend. So if you want to make it reversible, if you want to make parsing a syntax tree reversible, it would need to be a concrete, not an abstract syntax tree. Meaning you would need to keep track of how many white space characters they used. You know, if it's a syntax that supports trailing commas, you'd need to keep track of whether there was a trailing comma, how many spaces were before or after. Anything that could make that syntax. That would need to be part of the data structure you parse it into. I don't think you would need to keep track of every white space, but if you at least keep track of the position of everything, then you can infer things again. Yeah. Yeah. You'd need enough information to be able to infer that. Definitely. You would need to have a lossless format if you wanted it to be truly reversible. But if your goal is not to be reversible, yeah, I wonder how much mileage you would get out of that. It's also, it can also be, the parsing is the harder part. Taking an AST and then printing it out is significantly easier. Right. But you still don't want to make mistakes when serializing. Or do you serializing? You want them to be the same when possible. Right. Although since syntaxes typically aren't changing that frequently, it might be less of an issue for that kind of thing. I wonder. I wonder. But it is an interesting concept. Yeah. Yeah. I mean, if you can build a parser the same way, but with these additional guarantees, that sounds like a win win to me. Yeah. And if you're parsing a phone number and then you know you have a way to turn that back into a phone number in the same format, then if you have confidence that whatever format you're spitting back out can be parsed, that could be kind of nice potentially. So let's say that you parse a phone number and you accept, so if you throw away parentheses and then you parse a digit, parse a digit, parse a digit, throw away a paren, throw away spaces, throw away dashes, parse a digit, parse a digit, whatever. Well now, how are you going to serialize that? You're just going to print out a string of the digits. Or maybe you like... Well, you could remove them as part of the public API, but internally have the type, you know, big type, which does keep all that white space information. Right. Yes, you could. It wouldn't be as performant because you would have a lot of memory that you would maybe not use. I guess it's only useful if you change what you parse. Because if you just want to reprint it, then just keep whatever you parsed originally in memory and then keep it back. But if for instance, if you want to do AST manipulations for Elm syntax, then it can be interesting. Yeah, it's an interesting concept. Yeah, I think that this pattern is ripe for use for sure. There are many places it could apply. It's kind of neat that we're sort of at the beginning of the exploration of this concept. And I think we'll be seeing more and more applications over time. Yeah. Oh, you know what this could be used for? HTML WYSIWYG. Like a lot of people ask, hey, I have this HTML stored in my database. Can I embed it into Elm? Well, you could parse it to HTML and then have that HTML somehow be reversible into a string but also viewable as an HTML from Elm HTML. I guess that can make sense. Interesting. I guess I'm expecting a lot from our listeners now. Yeah, it's very interesting. One thing that we haven't mentioned that I think is worth mentioning is you can also use this technique to encapsulate low level serialization details. For example, if you wanted to serialize something into bytes, again, this is going to be something that you control the serialization and deserialization and are using the same code to do both, like serializing some settings or cached data or whatever it may be. Then it's a lot of work to get a correctly working byte decoder and encoder, which if you're not familiar, I don't know when, like a year ago maybe, this official Elm bytes decoding package was released that allows you to do binary decoding and encoding, which is quite cool. You can pack the data into a much more condensed data format and potentially get some performance gains from that. Although actually, I think that as far as decoding the data, JSON decoders are currently very fast. That may change with WebAssembly at some point. For Elm Review, I still use the JSON optimized version and not the bytes because you can't send bytes over ports for now. Got it. Interesting. Okay, so you have to serialize the bytes to some sort of like base64 encoded string, which represents bytes, but it's not actually directly sending bytes. Which in my case was less performance according to benchmarks. So the decoding and encoding portion may be slower, and it is slower, than if you were decoding and encoding JSON, but the storage is smaller. So one thing that we haven't touched on is that I think that it's a lot of work to get a byte decoder and encoder lined up correctly. So there are certain details, like with bytes, it's much more low level than JSON decoding and encoding. So if you have a list in JSON, it just is going to have an opening array and a closing array notation. For bytes, there's no such thing. You have to tell it when to start looking for a list, when to stop looking for a list, which means that you're typically going to encode, you need to encode the exact number of bytes to consume until you stop treating it as that list. And so that's very low level. But if you're using a package that does like a codec for your bytes, then it can build in that assumption about how it encodes that. So it says, I'm going to encode a number at this position for bytes. And you know, and it encodes, I'm sure it encodes assumptions about like big endian or little endian too, and things like that, right? It's a lot more high level dealing with a package like this. So it's not just that there are fewer things you can get wrong from the decoding encoding perspective, but it can handle some of those low level serialization details. Definitely. Bytes have been out for two years apparently already. Two years, nice. Yeah, in November. So by the time this episode airs, I think it will have been two years. Very nice. We're just starting to see a lot of explorations happening with bytes, I feel like now. Yeah, that'd be pretty cool. Yeah. To see more. Yeah. Well, good stuff. Are there any words of wisdom we want to leave for listeners about how to get started? Where to look for opportunities to use this pattern? I'm not sure I have anything worth sharing here. Is it worth using Elm codec for JSON? And are there opportunities, you know, that you think you could find to use it, you know, in the code bases you work with or? I use it for caching, as I mentioned before, and I think that's a great opportunity for it, especially using Martin's Elm serialize. By the way, shout out to him. He did an amazing job. Yeah. And apart from that, I haven't played much with decoders, with codecs. I think for people who happen to do testing on their ports with Elm program tests, I would definitely recommend that. But otherwise, I think just keep an eye out for opportunities. And you know, especially if you are serializing and deserializing a format, keep an eye out for that. And more broadly, whether it's a codec or not, look out for opportunities to keep track of information as a single source of truth and build up multiple pieces of information at once rather than separately. Yeah, definitely. Yeah, if you can have this, if you have multiple representations of a single thing, then it might be useful to have something like codec or that kind of pattern. Yeah. Cool. And let us know what else you come up with. Tweet us. We'd love to hear what you end up doing with codecs and with that pattern and what instances of that pattern being applied that you've seen. And find us on Twitter and ask us a question. elm.radio.com question. Submit a question and we'll hear from you. All right. Thank you for joining us on Value Room. Until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Don.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 2, "seek": 0, "start": 2.0, "end": 3.0, "text": " How are you doing today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 3, "seek": 0, "start": 3.0, "end": 4.0, "text": " I'm doing pretty well.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 4, "seek": 0, "start": 4.0, "end": 5.0, "text": " How about you?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 5, "seek": 0, "start": 5.0, "end": 6.0, "text": " I'm good.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 6, "seek": 0, "start": 6.0, "end": 7.0, "text": " I'm good.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 7, "seek": 0, "start": 7.0, "end": 12.0, "text": " I am excited to dive into the topic today.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 8, "seek": 0, "start": 12.0, "end": 13.0, "text": " Yeah.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 9, "seek": 0, "start": 13.0, "end": 17.6, "text": " Today we're talking about codecs, which is something we don't talk about quite often,", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 10, "seek": 0, "start": 17.6, "end": 18.6, "text": " I think.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 11, "seek": 0, "start": 18.6, "end": 23.400000000000002, "text": " Yeah, it seems to be an emerging pattern that you see popping up more and more.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 12, "seek": 0, "start": 23.400000000000002, "end": 29.740000000000002, "text": " I think it's one of those little community patterns that evolves over time and there's", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 1468, 13, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 1012, 466, 291, 30, 50614, 50614, 286, 478, 665, 13, 50664, 50664, 286, 478, 665, 13, 50714, 50714, 286, 669, 2919, 281, 9192, 666, 264, 4829, 965, 13, 50964, 50964, 865, 13, 51014, 51014, 2692, 321, 434, 1417, 466, 3089, 14368, 11, 597, 307, 746, 321, 500, 380, 751, 466, 1596, 2049, 11, 51244, 51244, 286, 519, 13, 51294, 51294, 865, 11, 309, 2544, 281, 312, 364, 14989, 5102, 300, 291, 536, 18374, 493, 544, 293, 544, 13, 51534, 51534, 286, 519, 309, 311, 472, 295, 729, 707, 1768, 8294, 300, 43737, 670, 565, 293, 456, 311, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.17299857394385884, "compression_ratio": 1.7004048582995952, "no_caption_prob": 0.14391979575157166}, {"id": 13, "seek": 2974, "start": 29.74, "end": 34.199999999999996, "text": " this sort of seed of an idea that sprouts all over in the community.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 14, "seek": 2974, "start": 34.199999999999996, "end": 36.28, "text": " It seems to be one of these things.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 15, "seek": 2974, "start": 36.28, "end": 37.28, "text": " Yeah.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 16, "seek": 2974, "start": 37.28, "end": 40.32, "text": " So, maybe let's describe what a codec is.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 17, "seek": 2974, "start": 40.32, "end": 41.32, "text": " Yes.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 18, "seek": 2974, "start": 41.32, "end": 44.36, "text": " So, a codec is a short word for codec...", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 19, "seek": 2974, "start": 44.36, "end": 47.36, "text": " Man, I don't know, actually.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 20, "seek": 2974, "start": 47.36, "end": 48.56, "text": " Let's look it up.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 21, "seek": 2974, "start": 48.56, "end": 52.44, "text": " I think it's for encoder and decoder, or decoder and encoder.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 22, "seek": 2974, "start": 52.44, "end": 55.879999999999995, "text": " I don't know which way it is, but it's a contraction of both.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 23, "seek": 2974, "start": 55.879999999999995, "end": 56.879999999999995, "text": " Code decode.", "tokens": [50364, 341, 1333, 295, 8871, 295, 364, 1558, 300, 34628, 439, 670, 294, 264, 1768, 13, 50587, 50587, 467, 2544, 281, 312, 472, 295, 613, 721, 13, 50691, 50691, 865, 13, 50741, 50741, 407, 11, 1310, 718, 311, 6786, 437, 257, 3089, 66, 307, 13, 50893, 50893, 1079, 13, 50943, 50943, 407, 11, 257, 3089, 66, 307, 257, 2099, 1349, 337, 3089, 66, 485, 51095, 51095, 2458, 11, 286, 500, 380, 458, 11, 767, 13, 51245, 51245, 961, 311, 574, 309, 493, 13, 51305, 51305, 286, 519, 309, 311, 337, 2058, 19866, 293, 979, 19866, 11, 420, 979, 19866, 293, 2058, 19866, 13, 51499, 51499, 286, 500, 380, 458, 597, 636, 309, 307, 11, 457, 309, 311, 257, 37372, 295, 1293, 13, 51671, 51671, 15549, 979, 1429, 13, 51721, 51721], "temperature": 0.0, "avg_logprob": -0.1888430355159381, "compression_ratio": 1.6536796536796536, "no_caption_prob": 6.301989196799695e-05}, {"id": 24, "seek": 5688, "start": 56.88, "end": 62.96, "text": " So, it's a utility or a tool or a library that allows you to encode something from A", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 25, "seek": 5688, "start": 62.96, "end": 65.4, "text": " to B and decode it from B to A.", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 26, "seek": 5688, "start": 65.4, "end": 68.64, "text": " Oh, I've got a trivia fact for you, Jeroen.", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 27, "seek": 5688, "start": 68.64, "end": 70.36, "text": " So, a codec...", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 28, "seek": 5688, "start": 70.36, "end": 71.44, "text": " Is a portmanteau?", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 29, "seek": 5688, "start": 71.44, "end": 74.84, "text": " A portmanteau of coder, decoder.", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 30, "seek": 5688, "start": 74.84, "end": 76.76, "text": " You also looked at the Wikipedia page.", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 31, "seek": 5688, "start": 76.76, "end": 79.6, "text": " I'm looking at the Wikipedia page as well.", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 32, "seek": 5688, "start": 79.6, "end": 84.52000000000001, "text": " So, it's kind of cool because that is the definition that it is something that decodes", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 33, "seek": 5688, "start": 84.52000000000001, "end": 85.52000000000001, "text": " and encodes.", "tokens": [50364, 407, 11, 309, 311, 257, 14877, 420, 257, 2290, 420, 257, 6405, 300, 4045, 291, 281, 2058, 1429, 746, 490, 316, 50668, 50668, 281, 363, 293, 979, 1429, 309, 490, 363, 281, 316, 13, 50790, 50790, 876, 11, 286, 600, 658, 257, 48770, 1186, 337, 291, 11, 508, 2032, 268, 13, 50952, 50952, 407, 11, 257, 3089, 66, 485, 51038, 51038, 1119, 257, 2436, 76, 2879, 1459, 30, 51092, 51092, 316, 2436, 76, 2879, 1459, 295, 17656, 260, 11, 979, 19866, 13, 51262, 51262, 509, 611, 2956, 412, 264, 28999, 3028, 13, 51358, 51358, 286, 478, 1237, 412, 264, 28999, 3028, 382, 731, 13, 51500, 51500, 407, 11, 309, 311, 733, 295, 1627, 570, 300, 307, 264, 7123, 300, 309, 307, 746, 300, 979, 4789, 51746, 51746, 293, 2058, 4789, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1732587319833261, "compression_ratio": 1.707112970711297, "no_caption_prob": 4.757515125675127e-05}, {"id": 34, "seek": 8552, "start": 85.52, "end": 91.44, "text": " So, that's a very good choice of word, which I think maybe Leonardo, Mini Bill, was the", "tokens": [50364, 407, 11, 300, 311, 257, 588, 665, 3922, 295, 1349, 11, 597, 286, 519, 1310, 36523, 11, 18239, 5477, 11, 390, 264, 50660, 50660, 700, 472, 281, 808, 493, 365, 300, 1433, 11, 286, 6552, 13, 50774, 50774, 634, 2942, 264, 2699, 76, 3089, 66, 6405, 337, 31828, 43430, 293, 979, 8616, 16561, 13, 50988, 50988, 407, 300, 311, 1333, 295, 264, 4957, 11, 286, 519, 11, 295, 300, 1433, 294, 264, 2699, 76, 1768, 13, 51236, 51236, 682, 264, 2699, 76, 1768, 11, 1391, 13, 51366, 51366, 2704, 1580, 630, 746, 337, 4906, 9606, 295, 2699, 76, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18308769152002427, "compression_ratio": 1.5957446808510638, "no_caption_prob": 1.7501917682238854e-05}, {"id": 35, "seek": 8552, "start": 91.44, "end": 93.72, "text": " first one to come up with that term, I assume.", "tokens": [50364, 407, 11, 300, 311, 257, 588, 665, 3922, 295, 1349, 11, 597, 286, 519, 1310, 36523, 11, 18239, 5477, 11, 390, 264, 50660, 50660, 700, 472, 281, 808, 493, 365, 300, 1433, 11, 286, 6552, 13, 50774, 50774, 634, 2942, 264, 2699, 76, 3089, 66, 6405, 337, 31828, 43430, 293, 979, 8616, 16561, 13, 50988, 50988, 407, 300, 311, 1333, 295, 264, 4957, 11, 286, 519, 11, 295, 300, 1433, 294, 264, 2699, 76, 1768, 13, 51236, 51236, 682, 264, 2699, 76, 1768, 11, 1391, 13, 51366, 51366, 2704, 1580, 630, 746, 337, 4906, 9606, 295, 2699, 76, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18308769152002427, "compression_ratio": 1.5957446808510638, "no_caption_prob": 1.7501917682238854e-05}, {"id": 36, "seek": 8552, "start": 93.72, "end": 98.0, "text": " He created the Elm codec library for JSON encoding and decoding simultaneously.", "tokens": [50364, 407, 11, 300, 311, 257, 588, 665, 3922, 295, 1349, 11, 597, 286, 519, 1310, 36523, 11, 18239, 5477, 11, 390, 264, 50660, 50660, 700, 472, 281, 808, 493, 365, 300, 1433, 11, 286, 6552, 13, 50774, 50774, 634, 2942, 264, 2699, 76, 3089, 66, 6405, 337, 31828, 43430, 293, 979, 8616, 16561, 13, 50988, 50988, 407, 300, 311, 1333, 295, 264, 4957, 11, 286, 519, 11, 295, 300, 1433, 294, 264, 2699, 76, 1768, 13, 51236, 51236, 682, 264, 2699, 76, 1768, 11, 1391, 13, 51366, 51366, 2704, 1580, 630, 746, 337, 4906, 9606, 295, 2699, 76, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18308769152002427, "compression_ratio": 1.5957446808510638, "no_caption_prob": 1.7501917682238854e-05}, {"id": 37, "seek": 8552, "start": 98.0, "end": 102.96, "text": " So that's sort of the origin, I think, of that term in the Elm community.", "tokens": [50364, 407, 11, 300, 311, 257, 588, 665, 3922, 295, 1349, 11, 597, 286, 519, 1310, 36523, 11, 18239, 5477, 11, 390, 264, 50660, 50660, 700, 472, 281, 808, 493, 365, 300, 1433, 11, 286, 6552, 13, 50774, 50774, 634, 2942, 264, 2699, 76, 3089, 66, 6405, 337, 31828, 43430, 293, 979, 8616, 16561, 13, 50988, 50988, 407, 300, 311, 1333, 295, 264, 4957, 11, 286, 519, 11, 295, 300, 1433, 294, 264, 2699, 76, 1768, 13, 51236, 51236, 682, 264, 2699, 76, 1768, 11, 1391, 13, 51366, 51366, 2704, 1580, 630, 746, 337, 4906, 9606, 295, 2699, 76, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18308769152002427, "compression_ratio": 1.5957446808510638, "no_caption_prob": 1.7501917682238854e-05}, {"id": 38, "seek": 8552, "start": 102.96, "end": 105.56, "text": " In the Elm community, probably.", "tokens": [50364, 407, 11, 300, 311, 257, 588, 665, 3922, 295, 1349, 11, 597, 286, 519, 1310, 36523, 11, 18239, 5477, 11, 390, 264, 50660, 50660, 700, 472, 281, 808, 493, 365, 300, 1433, 11, 286, 6552, 13, 50774, 50774, 634, 2942, 264, 2699, 76, 3089, 66, 6405, 337, 31828, 43430, 293, 979, 8616, 16561, 13, 50988, 50988, 407, 300, 311, 1333, 295, 264, 4957, 11, 286, 519, 11, 295, 300, 1433, 294, 264, 2699, 76, 1768, 13, 51236, 51236, 682, 264, 2699, 76, 1768, 11, 1391, 13, 51366, 51366, 2704, 1580, 630, 746, 337, 4906, 9606, 295, 2699, 76, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18308769152002427, "compression_ratio": 1.5957446808510638, "no_caption_prob": 1.7501917682238854e-05}, {"id": 39, "seek": 8552, "start": 105.56, "end": 110.52, "text": " Maybe someone did something for older versions of Elm.", "tokens": [50364, 407, 11, 300, 311, 257, 588, 665, 3922, 295, 1349, 11, 597, 286, 519, 1310, 36523, 11, 18239, 5477, 11, 390, 264, 50660, 50660, 700, 472, 281, 808, 493, 365, 300, 1433, 11, 286, 6552, 13, 50774, 50774, 634, 2942, 264, 2699, 76, 3089, 66, 6405, 337, 31828, 43430, 293, 979, 8616, 16561, 13, 50988, 50988, 407, 300, 311, 1333, 295, 264, 4957, 11, 286, 519, 11, 295, 300, 1433, 294, 264, 2699, 76, 1768, 13, 51236, 51236, 682, 264, 2699, 76, 1768, 11, 1391, 13, 51366, 51366, 2704, 1580, 630, 746, 337, 4906, 9606, 295, 2699, 76, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.18308769152002427, "compression_ratio": 1.5957446808510638, "no_caption_prob": 1.7501917682238854e-05}, {"id": 40, "seek": 11052, "start": 110.52, "end": 117.8, "text": " As far as Elm 0.19, I think that's the earliest one I know, at least.", "tokens": [50364, 1018, 1400, 382, 2699, 76, 1958, 13, 3405, 11, 286, 519, 300, 311, 264, 20573, 472, 286, 458, 11, 412, 1935, 13, 50728, 50728, 865, 13, 50778, 50778, 407, 11, 300, 311, 4476, 264, 485, 50856, 50856, 663, 311, 264, 3410, 11, 307, 746, 300, 1293, 2058, 4789, 293, 979, 4789, 13, 51106, 51106, 400, 370, 11, 300, 307, 257, 485, 51204, 51204, 821, 307, 364, 2699, 76, 3089, 66, 6405, 11, 457, 456, 366, 767, 586, 3866, 15148, 14989, 337, 51484, 51484, 721, 411, 6260, 365, 36088, 11, 337, 1365, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.15762439370155334, "compression_ratio": 1.555023923444976, "no_caption_prob": 5.306726961862296e-05}, {"id": 41, "seek": 11052, "start": 117.8, "end": 118.8, "text": " Yeah.", "tokens": [50364, 1018, 1400, 382, 2699, 76, 1958, 13, 3405, 11, 286, 519, 300, 311, 264, 20573, 472, 286, 458, 11, 412, 1935, 13, 50728, 50728, 865, 13, 50778, 50778, 407, 11, 300, 311, 4476, 264, 485, 50856, 50856, 663, 311, 264, 3410, 11, 307, 746, 300, 1293, 2058, 4789, 293, 979, 4789, 13, 51106, 51106, 400, 370, 11, 300, 307, 257, 485, 51204, 51204, 821, 307, 364, 2699, 76, 3089, 66, 6405, 11, 457, 456, 366, 767, 586, 3866, 15148, 14989, 337, 51484, 51484, 721, 411, 6260, 365, 36088, 11, 337, 1365, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.15762439370155334, "compression_ratio": 1.555023923444976, "no_caption_prob": 5.306726961862296e-05}, {"id": 42, "seek": 11052, "start": 118.8, "end": 120.36, "text": " So, that's essentially the...", "tokens": [50364, 1018, 1400, 382, 2699, 76, 1958, 13, 3405, 11, 286, 519, 300, 311, 264, 20573, 472, 286, 458, 11, 412, 1935, 13, 50728, 50728, 865, 13, 50778, 50778, 407, 11, 300, 311, 4476, 264, 485, 50856, 50856, 663, 311, 264, 3410, 11, 307, 746, 300, 1293, 2058, 4789, 293, 979, 4789, 13, 51106, 51106, 400, 370, 11, 300, 307, 257, 485, 51204, 51204, 821, 307, 364, 2699, 76, 3089, 66, 6405, 11, 457, 456, 366, 767, 586, 3866, 15148, 14989, 337, 51484, 51484, 721, 411, 6260, 365, 36088, 11, 337, 1365, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.15762439370155334, "compression_ratio": 1.555023923444976, "no_caption_prob": 5.306726961862296e-05}, {"id": 43, "seek": 11052, "start": 120.36, "end": 125.36, "text": " That's the concept, is something that both encodes and decodes.", "tokens": [50364, 1018, 1400, 382, 2699, 76, 1958, 13, 3405, 11, 286, 519, 300, 311, 264, 20573, 472, 286, 458, 11, 412, 1935, 13, 50728, 50728, 865, 13, 50778, 50778, 407, 11, 300, 311, 4476, 264, 485, 50856, 50856, 663, 311, 264, 3410, 11, 307, 746, 300, 1293, 2058, 4789, 293, 979, 4789, 13, 51106, 51106, 400, 370, 11, 300, 307, 257, 485, 51204, 51204, 821, 307, 364, 2699, 76, 3089, 66, 6405, 11, 457, 456, 366, 767, 586, 3866, 15148, 14989, 337, 51484, 51484, 721, 411, 6260, 365, 36088, 11, 337, 1365, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.15762439370155334, "compression_ratio": 1.555023923444976, "no_caption_prob": 5.306726961862296e-05}, {"id": 44, "seek": 11052, "start": 125.36, "end": 127.32, "text": " And so, that is a...", "tokens": [50364, 1018, 1400, 382, 2699, 76, 1958, 13, 3405, 11, 286, 519, 300, 311, 264, 20573, 472, 286, 458, 11, 412, 1935, 13, 50728, 50728, 865, 13, 50778, 50778, 407, 11, 300, 311, 4476, 264, 485, 50856, 50856, 663, 311, 264, 3410, 11, 307, 746, 300, 1293, 2058, 4789, 293, 979, 4789, 13, 51106, 51106, 400, 370, 11, 300, 307, 257, 485, 51204, 51204, 821, 307, 364, 2699, 76, 3089, 66, 6405, 11, 457, 456, 366, 767, 586, 3866, 15148, 14989, 337, 51484, 51484, 721, 411, 6260, 365, 36088, 11, 337, 1365, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.15762439370155334, "compression_ratio": 1.555023923444976, "no_caption_prob": 5.306726961862296e-05}, {"id": 45, "seek": 11052, "start": 127.32, "end": 132.92, "text": " There is an Elm codec library, but there are actually now multiple libraries emerging for", "tokens": [50364, 1018, 1400, 382, 2699, 76, 1958, 13, 3405, 11, 286, 519, 300, 311, 264, 20573, 472, 286, 458, 11, 412, 1935, 13, 50728, 50728, 865, 13, 50778, 50778, 407, 11, 300, 311, 4476, 264, 485, 50856, 50856, 663, 311, 264, 3410, 11, 307, 746, 300, 1293, 2058, 4789, 293, 979, 4789, 13, 51106, 51106, 400, 370, 11, 300, 307, 257, 485, 51204, 51204, 821, 307, 364, 2699, 76, 3089, 66, 6405, 11, 457, 456, 366, 767, 586, 3866, 15148, 14989, 337, 51484, 51484, 721, 411, 6260, 365, 36088, 11, 337, 1365, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.15762439370155334, "compression_ratio": 1.555023923444976, "no_caption_prob": 5.306726961862296e-05}, {"id": 46, "seek": 11052, "start": 132.92, "end": 136.92, "text": " things like dealing with bytes, for example.", "tokens": [50364, 1018, 1400, 382, 2699, 76, 1958, 13, 3405, 11, 286, 519, 300, 311, 264, 20573, 472, 286, 458, 11, 412, 1935, 13, 50728, 50728, 865, 13, 50778, 50778, 407, 11, 300, 311, 4476, 264, 485, 50856, 50856, 663, 311, 264, 3410, 11, 307, 746, 300, 1293, 2058, 4789, 293, 979, 4789, 13, 51106, 51106, 400, 370, 11, 300, 307, 257, 485, 51204, 51204, 821, 307, 364, 2699, 76, 3089, 66, 6405, 11, 457, 456, 366, 767, 586, 3866, 15148, 14989, 337, 51484, 51484, 721, 411, 6260, 365, 36088, 11, 337, 1365, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.15762439370155334, "compression_ratio": 1.555023923444976, "no_caption_prob": 5.306726961862296e-05}, {"id": 47, "seek": 13692, "start": 136.92, "end": 143.23999999999998, "text": " And I think it's worth noting that this is both a pattern and a set of...", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 48, "seek": 13692, "start": 143.23999999999998, "end": 146.2, "text": " A library and a set of libraries, but it's also a pattern.", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 49, "seek": 13692, "start": 146.2, "end": 147.2, "text": " Yeah.", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 50, "seek": 13692, "start": 147.2, "end": 148.2, "text": " It's more of a pattern.", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 51, "seek": 13692, "start": 148.2, "end": 149.2, "text": " Yeah.", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 52, "seek": 13692, "start": 149.2, "end": 150.2, "text": " It's more a pattern than anything.", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 53, "seek": 13692, "start": 150.2, "end": 151.48, "text": " And I think that...", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 54, "seek": 13692, "start": 151.48, "end": 154.16, "text": " One of the things that I think is really interesting is...", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 55, "seek": 13692, "start": 154.16, "end": 157.0, "text": " So there's this sort of reversible nature, right?", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 56, "seek": 13692, "start": 157.0, "end": 158.0, "text": " When you're...", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 57, "seek": 13692, "start": 158.0, "end": 163.07999999999998, "text": " This idea that you're building up an encoder and a decoder at the same time and that it's", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 58, "seek": 13692, "start": 163.07999999999998, "end": 164.2, "text": " reversible.", "tokens": [50364, 400, 286, 519, 309, 311, 3163, 26801, 300, 341, 307, 1293, 257, 5102, 293, 257, 992, 295, 485, 50680, 50680, 316, 6405, 293, 257, 992, 295, 15148, 11, 457, 309, 311, 611, 257, 5102, 13, 50828, 50828, 865, 13, 50878, 50878, 467, 311, 544, 295, 257, 5102, 13, 50928, 50928, 865, 13, 50978, 50978, 467, 311, 544, 257, 5102, 813, 1340, 13, 51028, 51028, 400, 286, 519, 300, 485, 51092, 51092, 1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880, 307, 485, 51226, 51226, 407, 456, 311, 341, 1333, 295, 44788, 3687, 11, 558, 30, 51368, 51368, 1133, 291, 434, 485, 51418, 51418, 639, 1558, 300, 291, 434, 2390, 493, 364, 2058, 19866, 293, 257, 979, 19866, 412, 264, 912, 565, 293, 300, 309, 311, 51672, 51672, 44788, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.13427935073624797, "compression_ratio": 1.8630705394190872, "no_caption_prob": 9.66588322626194e-06}, {"id": 59, "seek": 16420, "start": 164.2, "end": 168.67999999999998, "text": " And that I think would be sort of the textbook definition of this concept of a codec.", "tokens": [50364, 400, 300, 286, 519, 576, 312, 1333, 295, 264, 25591, 7123, 295, 341, 3410, 295, 257, 3089, 66, 13, 50588, 50588, 583, 550, 456, 311, 1071, 3410, 510, 11, 597, 286, 519, 307, 534, 1880, 293, 8263, 50818, 50818, 294, 264, 2699, 76, 1768, 11, 597, 307, 264, 1558, 300, 291, 1322, 493, 382, 709, 1589, 382, 291, 393, 51116, 51116, 412, 1564, 570, 291, 1333, 295, 485, 51206, 51206, 509, 393, 3624, 300, 1589, 5911, 13, 51299, 51299, 407, 498, 291, 1322, 493, 257, 979, 19866, 293, 364, 2058, 19866, 11, 558, 11, 550, 436, 434, 732, 4994, 721, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09609391348702567, "compression_ratio": 1.721311475409836, "no_caption_prob": 1.8924245523521677e-05}, {"id": 60, "seek": 16420, "start": 168.67999999999998, "end": 173.28, "text": " But then there's another concept here, which I think is really interesting and valuable", "tokens": [50364, 400, 300, 286, 519, 576, 312, 1333, 295, 264, 25591, 7123, 295, 341, 3410, 295, 257, 3089, 66, 13, 50588, 50588, 583, 550, 456, 311, 1071, 3410, 510, 11, 597, 286, 519, 307, 534, 1880, 293, 8263, 50818, 50818, 294, 264, 2699, 76, 1768, 11, 597, 307, 264, 1558, 300, 291, 1322, 493, 382, 709, 1589, 382, 291, 393, 51116, 51116, 412, 1564, 570, 291, 1333, 295, 485, 51206, 51206, 509, 393, 3624, 300, 1589, 5911, 13, 51299, 51299, 407, 498, 291, 1322, 493, 257, 979, 19866, 293, 364, 2058, 19866, 11, 558, 11, 550, 436, 434, 732, 4994, 721, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09609391348702567, "compression_ratio": 1.721311475409836, "no_caption_prob": 1.8924245523521677e-05}, {"id": 61, "seek": 16420, "start": 173.28, "end": 179.23999999999998, "text": " in the Elm community, which is the idea that you build up as much information as you can", "tokens": [50364, 400, 300, 286, 519, 576, 312, 1333, 295, 264, 25591, 7123, 295, 341, 3410, 295, 257, 3089, 66, 13, 50588, 50588, 583, 550, 456, 311, 1071, 3410, 510, 11, 597, 286, 519, 307, 534, 1880, 293, 8263, 50818, 50818, 294, 264, 2699, 76, 1768, 11, 597, 307, 264, 1558, 300, 291, 1322, 493, 382, 709, 1589, 382, 291, 393, 51116, 51116, 412, 1564, 570, 291, 1333, 295, 485, 51206, 51206, 509, 393, 3624, 300, 1589, 5911, 13, 51299, 51299, 407, 498, 291, 1322, 493, 257, 979, 19866, 293, 364, 2058, 19866, 11, 558, 11, 550, 436, 434, 732, 4994, 721, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09609391348702567, "compression_ratio": 1.721311475409836, "no_caption_prob": 1.8924245523521677e-05}, {"id": 62, "seek": 16420, "start": 179.23999999999998, "end": 181.04, "text": " at once because you sort of...", "tokens": [50364, 400, 300, 286, 519, 576, 312, 1333, 295, 264, 25591, 7123, 295, 341, 3410, 295, 257, 3089, 66, 13, 50588, 50588, 583, 550, 456, 311, 1071, 3410, 510, 11, 597, 286, 519, 307, 534, 1880, 293, 8263, 50818, 50818, 294, 264, 2699, 76, 1768, 11, 597, 307, 264, 1558, 300, 291, 1322, 493, 382, 709, 1589, 382, 291, 393, 51116, 51116, 412, 1564, 570, 291, 1333, 295, 485, 51206, 51206, 509, 393, 3624, 300, 1589, 5911, 13, 51299, 51299, 407, 498, 291, 1322, 493, 257, 979, 19866, 293, 364, 2058, 19866, 11, 558, 11, 550, 436, 434, 732, 4994, 721, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09609391348702567, "compression_ratio": 1.721311475409836, "no_caption_prob": 1.8924245523521677e-05}, {"id": 63, "seek": 16420, "start": 181.04, "end": 182.89999999999998, "text": " You can lose that information otherwise.", "tokens": [50364, 400, 300, 286, 519, 576, 312, 1333, 295, 264, 25591, 7123, 295, 341, 3410, 295, 257, 3089, 66, 13, 50588, 50588, 583, 550, 456, 311, 1071, 3410, 510, 11, 597, 286, 519, 307, 534, 1880, 293, 8263, 50818, 50818, 294, 264, 2699, 76, 1768, 11, 597, 307, 264, 1558, 300, 291, 1322, 493, 382, 709, 1589, 382, 291, 393, 51116, 51116, 412, 1564, 570, 291, 1333, 295, 485, 51206, 51206, 509, 393, 3624, 300, 1589, 5911, 13, 51299, 51299, 407, 498, 291, 1322, 493, 257, 979, 19866, 293, 364, 2058, 19866, 11, 558, 11, 550, 436, 434, 732, 4994, 721, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09609391348702567, "compression_ratio": 1.721311475409836, "no_caption_prob": 1.8924245523521677e-05}, {"id": 64, "seek": 16420, "start": 182.89999999999998, "end": 190.06, "text": " So if you build up a decoder and an encoder, right, then they're two separate things.", "tokens": [50364, 400, 300, 286, 519, 576, 312, 1333, 295, 264, 25591, 7123, 295, 341, 3410, 295, 257, 3089, 66, 13, 50588, 50588, 583, 550, 456, 311, 1071, 3410, 510, 11, 597, 286, 519, 307, 534, 1880, 293, 8263, 50818, 50818, 294, 264, 2699, 76, 1768, 11, 597, 307, 264, 1558, 300, 291, 1322, 493, 382, 709, 1589, 382, 291, 393, 51116, 51116, 412, 1564, 570, 291, 1333, 295, 485, 51206, 51206, 509, 393, 3624, 300, 1589, 5911, 13, 51299, 51299, 407, 498, 291, 1322, 493, 257, 979, 19866, 293, 364, 2058, 19866, 11, 558, 11, 550, 436, 434, 732, 4994, 721, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09609391348702567, "compression_ratio": 1.721311475409836, "no_caption_prob": 1.8924245523521677e-05}, {"id": 65, "seek": 19006, "start": 190.06, "end": 194.64000000000001, "text": " And you have to... maybe you have some fuzz tests to make sure that they're reversible", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 66, "seek": 19006, "start": 194.64000000000001, "end": 201.8, "text": " or you have to do a little extra work to keep them in sync and make sure they are reversible.", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 67, "seek": 19006, "start": 201.8, "end": 202.8, "text": " Yeah.", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 68, "seek": 19006, "start": 202.8, "end": 205.9, "text": " Making sure that when you encode something and then decode it, you always get the same", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 69, "seek": 19006, "start": 205.9, "end": 210.12, "text": " thing back and the same thing for decoding than encoding.", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 70, "seek": 19006, "start": 210.12, "end": 211.12, "text": " Yes.", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 71, "seek": 19006, "start": 211.12, "end": 212.12, "text": " Right.", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 72, "seek": 19006, "start": 212.12, "end": 213.12, "text": " Right.", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 73, "seek": 19006, "start": 213.12, "end": 214.12, "text": " And so that's like...", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 74, "seek": 19006, "start": 214.12, "end": 219.24, "text": " We can do better than just trying hard to do that and then making sure we did a good", "tokens": [50364, 400, 291, 362, 281, 485, 1310, 291, 362, 512, 283, 16740, 6921, 281, 652, 988, 300, 436, 434, 44788, 50593, 50593, 420, 291, 362, 281, 360, 257, 707, 2857, 589, 281, 1066, 552, 294, 20271, 293, 652, 988, 436, 366, 44788, 13, 50951, 50951, 865, 13, 51001, 51001, 14595, 988, 300, 562, 291, 2058, 1429, 746, 293, 550, 979, 1429, 309, 11, 291, 1009, 483, 264, 912, 51156, 51156, 551, 646, 293, 264, 912, 551, 337, 979, 8616, 813, 43430, 13, 51367, 51367, 1079, 13, 51417, 51417, 1779, 13, 51467, 51467, 1779, 13, 51517, 51517, 400, 370, 300, 311, 411, 485, 51567, 51567, 492, 393, 360, 1101, 813, 445, 1382, 1152, 281, 360, 300, 293, 550, 1455, 988, 321, 630, 257, 665, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.1310892105102539, "compression_ratio": 1.8502024291497976, "no_caption_prob": 6.540333288285183e-06}, {"id": 75, "seek": 21924, "start": 219.24, "end": 221.64000000000001, "text": " job after the fact through...", "tokens": [50364, 1691, 934, 264, 1186, 807, 485, 50484, 50484, 759, 321, 31605, 309, 365, 512, 6921, 293, 1507, 11, 300, 311, 869, 13, 50649, 50649, 583, 437, 498, 321, 727, 1322, 309, 493, 294, 1270, 257, 636, 689, 321, 1066, 721, 294, 4017, 16792, 807, 50902, 50902, 264, 9362, 321, 764, 281, 1322, 309, 493, 30, 51010, 51010, 407, 286, 500, 380, 458, 498, 300, 2685, 3410, 307, 485, 51248, 51248, 2704, 309, 311, 644, 295, 257, 3089, 66, 11, 457, 611, 257, 5102, 300, 1487, 493, 2380, 295, 341, 1558, 295, 3089, 14368, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09541049295542192, "compression_ratio": 1.52863436123348, "no_caption_prob": 1.56892383529339e-05}, {"id": 76, "seek": 21924, "start": 221.64000000000001, "end": 224.94, "text": " If we automate it with some tests and stuff, that's great.", "tokens": [50364, 1691, 934, 264, 1186, 807, 485, 50484, 50484, 759, 321, 31605, 309, 365, 512, 6921, 293, 1507, 11, 300, 311, 869, 13, 50649, 50649, 583, 437, 498, 321, 727, 1322, 309, 493, 294, 1270, 257, 636, 689, 321, 1066, 721, 294, 4017, 16792, 807, 50902, 50902, 264, 9362, 321, 764, 281, 1322, 309, 493, 30, 51010, 51010, 407, 286, 500, 380, 458, 498, 300, 2685, 3410, 307, 485, 51248, 51248, 2704, 309, 311, 644, 295, 257, 3089, 66, 11, 457, 611, 257, 5102, 300, 1487, 493, 2380, 295, 341, 1558, 295, 3089, 14368, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09541049295542192, "compression_ratio": 1.52863436123348, "no_caption_prob": 1.56892383529339e-05}, {"id": 77, "seek": 21924, "start": 224.94, "end": 230.0, "text": " But what if we could build it up in such a way where we keep things in lockstep through", "tokens": [50364, 1691, 934, 264, 1186, 807, 485, 50484, 50484, 759, 321, 31605, 309, 365, 512, 6921, 293, 1507, 11, 300, 311, 869, 13, 50649, 50649, 583, 437, 498, 321, 727, 1322, 309, 493, 294, 1270, 257, 636, 689, 321, 1066, 721, 294, 4017, 16792, 807, 50902, 50902, 264, 9362, 321, 764, 281, 1322, 309, 493, 30, 51010, 51010, 407, 286, 500, 380, 458, 498, 300, 2685, 3410, 307, 485, 51248, 51248, 2704, 309, 311, 644, 295, 257, 3089, 66, 11, 457, 611, 257, 5102, 300, 1487, 493, 2380, 295, 341, 1558, 295, 3089, 14368, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09541049295542192, "compression_ratio": 1.52863436123348, "no_caption_prob": 1.56892383529339e-05}, {"id": 78, "seek": 21924, "start": 230.0, "end": 232.16, "text": " the API we use to build it up?", "tokens": [50364, 1691, 934, 264, 1186, 807, 485, 50484, 50484, 759, 321, 31605, 309, 365, 512, 6921, 293, 1507, 11, 300, 311, 869, 13, 50649, 50649, 583, 437, 498, 321, 727, 1322, 309, 493, 294, 1270, 257, 636, 689, 321, 1066, 721, 294, 4017, 16792, 807, 50902, 50902, 264, 9362, 321, 764, 281, 1322, 309, 493, 30, 51010, 51010, 407, 286, 500, 380, 458, 498, 300, 2685, 3410, 307, 485, 51248, 51248, 2704, 309, 311, 644, 295, 257, 3089, 66, 11, 457, 611, 257, 5102, 300, 1487, 493, 2380, 295, 341, 1558, 295, 3089, 14368, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09541049295542192, "compression_ratio": 1.52863436123348, "no_caption_prob": 1.56892383529339e-05}, {"id": 79, "seek": 21924, "start": 232.16, "end": 236.92000000000002, "text": " So I don't know if that specific concept is...", "tokens": [50364, 1691, 934, 264, 1186, 807, 485, 50484, 50484, 759, 321, 31605, 309, 365, 512, 6921, 293, 1507, 11, 300, 311, 869, 13, 50649, 50649, 583, 437, 498, 321, 727, 1322, 309, 493, 294, 1270, 257, 636, 689, 321, 1066, 721, 294, 4017, 16792, 807, 50902, 50902, 264, 9362, 321, 764, 281, 1322, 309, 493, 30, 51010, 51010, 407, 286, 500, 380, 458, 498, 300, 2685, 3410, 307, 485, 51248, 51248, 2704, 309, 311, 644, 295, 257, 3089, 66, 11, 457, 611, 257, 5102, 300, 1487, 493, 2380, 295, 341, 1558, 295, 3089, 14368, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09541049295542192, "compression_ratio": 1.52863436123348, "no_caption_prob": 1.56892383529339e-05}, {"id": 80, "seek": 21924, "start": 236.92000000000002, "end": 244.44, "text": " Maybe it's part of a codec, but also a pattern that comes up outside of this idea of codecs.", "tokens": [50364, 1691, 934, 264, 1186, 807, 485, 50484, 50484, 759, 321, 31605, 309, 365, 512, 6921, 293, 1507, 11, 300, 311, 869, 13, 50649, 50649, 583, 437, 498, 321, 727, 1322, 309, 493, 294, 1270, 257, 636, 689, 321, 1066, 721, 294, 4017, 16792, 807, 50902, 50902, 264, 9362, 321, 764, 281, 1322, 309, 493, 30, 51010, 51010, 407, 286, 500, 380, 458, 498, 300, 2685, 3410, 307, 485, 51248, 51248, 2704, 309, 311, 644, 295, 257, 3089, 66, 11, 457, 611, 257, 5102, 300, 1487, 493, 2380, 295, 341, 1558, 295, 3089, 14368, 13, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09541049295542192, "compression_ratio": 1.52863436123348, "no_caption_prob": 1.56892383529339e-05}, {"id": 81, "seek": 24444, "start": 244.44, "end": 250.57999999999998, "text": " Like for example, in Elm GraphQL, that's an essential concept as well, that you are building", "tokens": [50364, 1743, 337, 1365, 11, 294, 2699, 76, 21884, 13695, 11, 300, 311, 364, 7115, 3410, 382, 731, 11, 300, 291, 366, 2390, 50671, 50671, 493, 264, 1589, 291, 643, 281, 2042, 257, 21884, 13695, 14581, 382, 731, 382, 264, 1589, 291, 643, 51028, 51028, 281, 979, 1429, 300, 13, 51120, 51120, 400, 294, 2699, 76, 11, 613, 40168, 300, 291, 764, 281, 1322, 493, 11, 1968, 309, 311, 445, 257, 17528, 979, 19866, 51468, 51468, 293, 2699, 76, 21884, 13695, 9450, 992, 11, 456, 366, 439, 613, 819, 1412, 3467, 11, 411, 257, 24071, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10137555063987265, "compression_ratio": 1.735159817351598, "no_caption_prob": 7.411091246467549e-06}, {"id": 82, "seek": 24444, "start": 250.57999999999998, "end": 257.72, "text": " up the information you need to perform a GraphQL query as well as the information you need", "tokens": [50364, 1743, 337, 1365, 11, 294, 2699, 76, 21884, 13695, 11, 300, 311, 364, 7115, 3410, 382, 731, 11, 300, 291, 366, 2390, 50671, 50671, 493, 264, 1589, 291, 643, 281, 2042, 257, 21884, 13695, 14581, 382, 731, 382, 264, 1589, 291, 643, 51028, 51028, 281, 979, 1429, 300, 13, 51120, 51120, 400, 294, 2699, 76, 11, 613, 40168, 300, 291, 764, 281, 1322, 493, 11, 1968, 309, 311, 445, 257, 17528, 979, 19866, 51468, 51468, 293, 2699, 76, 21884, 13695, 9450, 992, 11, 456, 366, 439, 613, 819, 1412, 3467, 11, 411, 257, 24071, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10137555063987265, "compression_ratio": 1.735159817351598, "no_caption_prob": 7.411091246467549e-06}, {"id": 83, "seek": 24444, "start": 257.72, "end": 259.56, "text": " to decode that.", "tokens": [50364, 1743, 337, 1365, 11, 294, 2699, 76, 21884, 13695, 11, 300, 311, 364, 7115, 3410, 382, 731, 11, 300, 291, 366, 2390, 50671, 50671, 493, 264, 1589, 291, 643, 281, 2042, 257, 21884, 13695, 14581, 382, 731, 382, 264, 1589, 291, 643, 51028, 51028, 281, 979, 1429, 300, 13, 51120, 51120, 400, 294, 2699, 76, 11, 613, 40168, 300, 291, 764, 281, 1322, 493, 11, 1968, 309, 311, 445, 257, 17528, 979, 19866, 51468, 51468, 293, 2699, 76, 21884, 13695, 9450, 992, 11, 456, 366, 439, 613, 819, 1412, 3467, 11, 411, 257, 24071, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10137555063987265, "compression_ratio": 1.735159817351598, "no_caption_prob": 7.411091246467549e-06}, {"id": 84, "seek": 24444, "start": 259.56, "end": 266.52, "text": " And in Elm, these pipelines that you use to build up, whether it's just a vanilla decoder", "tokens": [50364, 1743, 337, 1365, 11, 294, 2699, 76, 21884, 13695, 11, 300, 311, 364, 7115, 3410, 382, 731, 11, 300, 291, 366, 2390, 50671, 50671, 493, 264, 1589, 291, 643, 281, 2042, 257, 21884, 13695, 14581, 382, 731, 382, 264, 1589, 291, 643, 51028, 51028, 281, 979, 1429, 300, 13, 51120, 51120, 400, 294, 2699, 76, 11, 613, 40168, 300, 291, 764, 281, 1322, 493, 11, 1968, 309, 311, 445, 257, 17528, 979, 19866, 51468, 51468, 293, 2699, 76, 21884, 13695, 9450, 992, 11, 456, 366, 439, 613, 819, 1412, 3467, 11, 411, 257, 24071, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10137555063987265, "compression_ratio": 1.735159817351598, "no_caption_prob": 7.411091246467549e-06}, {"id": 85, "seek": 24444, "start": 266.52, "end": 272.52, "text": " and Elm GraphQL selection set, there are all these different data types, like a validation", "tokens": [50364, 1743, 337, 1365, 11, 294, 2699, 76, 21884, 13695, 11, 300, 311, 364, 7115, 3410, 382, 731, 11, 300, 291, 366, 2390, 50671, 50671, 493, 264, 1589, 291, 643, 281, 2042, 257, 21884, 13695, 14581, 382, 731, 382, 264, 1589, 291, 643, 51028, 51028, 281, 979, 1429, 300, 13, 51120, 51120, 400, 294, 2699, 76, 11, 613, 40168, 300, 291, 764, 281, 1322, 493, 11, 1968, 309, 311, 445, 257, 17528, 979, 19866, 51468, 51468, 293, 2699, 76, 21884, 13695, 9450, 992, 11, 456, 366, 439, 613, 819, 1412, 3467, 11, 411, 257, 24071, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.10137555063987265, "compression_ratio": 1.735159817351598, "no_caption_prob": 7.411091246467549e-06}, {"id": 86, "seek": 27252, "start": 272.52, "end": 279.2, "text": " sort of API for validating form input or whatever.", "tokens": [50364, 1333, 295, 9362, 337, 7363, 990, 1254, 4846, 420, 2035, 13, 50698, 50698, 509, 434, 2390, 493, 1412, 294, 257, 636, 689, 264, 2699, 76, 2010, 1185, 5965, 2837, 295, 264, 1412, 382, 50934, 50934, 291, 1322, 309, 493, 11, 457, 291, 434, 406, 787, 2390, 493, 300, 1412, 11, 291, 393, 4088, 300, 1412, 51217, 51217, 2051, 264, 636, 11, 293, 291, 434, 11603, 341, 14217, 1589, 466, 300, 1412, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07533085973639238, "compression_ratio": 1.6432432432432433, "no_caption_prob": 6.96217375661945e-06}, {"id": 87, "seek": 27252, "start": 279.2, "end": 283.91999999999996, "text": " You're building up data in a way where the Elm type system keeps track of the data as", "tokens": [50364, 1333, 295, 9362, 337, 7363, 990, 1254, 4846, 420, 2035, 13, 50698, 50698, 509, 434, 2390, 493, 1412, 294, 257, 636, 689, 264, 2699, 76, 2010, 1185, 5965, 2837, 295, 264, 1412, 382, 50934, 50934, 291, 1322, 309, 493, 11, 457, 291, 434, 406, 787, 2390, 493, 300, 1412, 11, 291, 393, 4088, 300, 1412, 51217, 51217, 2051, 264, 636, 11, 293, 291, 434, 11603, 341, 14217, 1589, 466, 300, 1412, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07533085973639238, "compression_ratio": 1.6432432432432433, "no_caption_prob": 6.96217375661945e-06}, {"id": 88, "seek": 27252, "start": 283.91999999999996, "end": 289.58, "text": " you build it up, but you're not only building up that data, you can transform that data", "tokens": [50364, 1333, 295, 9362, 337, 7363, 990, 1254, 4846, 420, 2035, 13, 50698, 50698, 509, 434, 2390, 493, 1412, 294, 257, 636, 689, 264, 2699, 76, 2010, 1185, 5965, 2837, 295, 264, 1412, 382, 50934, 50934, 291, 1322, 309, 493, 11, 457, 291, 434, 406, 787, 2390, 493, 300, 1412, 11, 291, 393, 4088, 300, 1412, 51217, 51217, 2051, 264, 636, 11, 293, 291, 434, 11603, 341, 14217, 1589, 466, 300, 1412, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07533085973639238, "compression_ratio": 1.6432432432432433, "no_caption_prob": 6.96217375661945e-06}, {"id": 89, "seek": 27252, "start": 289.58, "end": 297.52, "text": " along the way, and you're tracking this underlying information about that data.", "tokens": [50364, 1333, 295, 9362, 337, 7363, 990, 1254, 4846, 420, 2035, 13, 50698, 50698, 509, 434, 2390, 493, 1412, 294, 257, 636, 689, 264, 2699, 76, 2010, 1185, 5965, 2837, 295, 264, 1412, 382, 50934, 50934, 291, 1322, 309, 493, 11, 457, 291, 434, 406, 787, 2390, 493, 300, 1412, 11, 291, 393, 4088, 300, 1412, 51217, 51217, 2051, 264, 636, 11, 293, 291, 434, 11603, 341, 14217, 1589, 466, 300, 1412, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07533085973639238, "compression_ratio": 1.6432432432432433, "no_caption_prob": 6.96217375661945e-06}, {"id": 90, "seek": 29752, "start": 297.52, "end": 302.84, "text": " And so there's something there that maybe that's a separable principle that you can", "tokens": [50364, 400, 370, 456, 311, 746, 456, 300, 1310, 300, 311, 257, 3128, 712, 8665, 300, 291, 393, 50630, 50630, 764, 2380, 295, 341, 10710, 295, 257, 3089, 66, 11, 597, 307, 411, 257, 44788, 2058, 19866, 11, 979, 19866, 13, 50970, 50970, 407, 689, 576, 291, 764, 341, 382, 257, 588, 2199, 5197, 30, 51181, 51181, 6068, 291, 764, 341, 11, 337, 5197, 11, 562, 291, 2028, 365, 33283, 12475, 30, 51378, 51378, 708, 307, 264, 16998, 551, 689, 291, 576, 3079, 3089, 14368, 30, 51632, 51632, 467, 311, 257, 665, 1168, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11385532261170063, "compression_ratio": 1.64, "no_caption_prob": 2.931053859356325e-05}, {"id": 91, "seek": 29752, "start": 302.84, "end": 309.64, "text": " use outside of this notion of a codec, which is like a reversible encoder, decoder.", "tokens": [50364, 400, 370, 456, 311, 746, 456, 300, 1310, 300, 311, 257, 3128, 712, 8665, 300, 291, 393, 50630, 50630, 764, 2380, 295, 341, 10710, 295, 257, 3089, 66, 11, 597, 307, 411, 257, 44788, 2058, 19866, 11, 979, 19866, 13, 50970, 50970, 407, 689, 576, 291, 764, 341, 382, 257, 588, 2199, 5197, 30, 51181, 51181, 6068, 291, 764, 341, 11, 337, 5197, 11, 562, 291, 2028, 365, 33283, 12475, 30, 51378, 51378, 708, 307, 264, 16998, 551, 689, 291, 576, 3079, 3089, 14368, 30, 51632, 51632, 467, 311, 257, 665, 1168, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11385532261170063, "compression_ratio": 1.64, "no_caption_prob": 2.931053859356325e-05}, {"id": 92, "seek": 29752, "start": 309.64, "end": 313.85999999999996, "text": " So where would you use this as a very simple instance?", "tokens": [50364, 400, 370, 456, 311, 746, 456, 300, 1310, 300, 311, 257, 3128, 712, 8665, 300, 291, 393, 50630, 50630, 764, 2380, 295, 341, 10710, 295, 257, 3089, 66, 11, 597, 307, 411, 257, 44788, 2058, 19866, 11, 979, 19866, 13, 50970, 50970, 407, 689, 576, 291, 764, 341, 382, 257, 588, 2199, 5197, 30, 51181, 51181, 6068, 291, 764, 341, 11, 337, 5197, 11, 562, 291, 2028, 365, 33283, 12475, 30, 51378, 51378, 708, 307, 264, 16998, 551, 689, 291, 576, 3079, 3089, 14368, 30, 51632, 51632, 467, 311, 257, 665, 1168, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11385532261170063, "compression_ratio": 1.64, "no_caption_prob": 2.931053859356325e-05}, {"id": 93, "seek": 29752, "start": 313.85999999999996, "end": 317.79999999999995, "text": " Would you use this, for instance, when you deal with HTTP requests?", "tokens": [50364, 400, 370, 456, 311, 746, 456, 300, 1310, 300, 311, 257, 3128, 712, 8665, 300, 291, 393, 50630, 50630, 764, 2380, 295, 341, 10710, 295, 257, 3089, 66, 11, 597, 307, 411, 257, 44788, 2058, 19866, 11, 979, 19866, 13, 50970, 50970, 407, 689, 576, 291, 764, 341, 382, 257, 588, 2199, 5197, 30, 51181, 51181, 6068, 291, 764, 341, 11, 337, 5197, 11, 562, 291, 2028, 365, 33283, 12475, 30, 51378, 51378, 708, 307, 264, 16998, 551, 689, 291, 576, 3079, 3089, 14368, 30, 51632, 51632, 467, 311, 257, 665, 1168, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11385532261170063, "compression_ratio": 1.64, "no_caption_prob": 2.931053859356325e-05}, {"id": 94, "seek": 29752, "start": 317.79999999999995, "end": 322.88, "text": " What is the smallest thing where you would apply codecs?", "tokens": [50364, 400, 370, 456, 311, 746, 456, 300, 1310, 300, 311, 257, 3128, 712, 8665, 300, 291, 393, 50630, 50630, 764, 2380, 295, 341, 10710, 295, 257, 3089, 66, 11, 597, 307, 411, 257, 44788, 2058, 19866, 11, 979, 19866, 13, 50970, 50970, 407, 689, 576, 291, 764, 341, 382, 257, 588, 2199, 5197, 30, 51181, 51181, 6068, 291, 764, 341, 11, 337, 5197, 11, 562, 291, 2028, 365, 33283, 12475, 30, 51378, 51378, 708, 307, 264, 16998, 551, 689, 291, 576, 3079, 3089, 14368, 30, 51632, 51632, 467, 311, 257, 665, 1168, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11385532261170063, "compression_ratio": 1.64, "no_caption_prob": 2.931053859356325e-05}, {"id": 95, "seek": 29752, "start": 322.88, "end": 323.88, "text": " It's a good question.", "tokens": [50364, 400, 370, 456, 311, 746, 456, 300, 1310, 300, 311, 257, 3128, 712, 8665, 300, 291, 393, 50630, 50630, 764, 2380, 295, 341, 10710, 295, 257, 3089, 66, 11, 597, 307, 411, 257, 44788, 2058, 19866, 11, 979, 19866, 13, 50970, 50970, 407, 689, 576, 291, 764, 341, 382, 257, 588, 2199, 5197, 30, 51181, 51181, 6068, 291, 764, 341, 11, 337, 5197, 11, 562, 291, 2028, 365, 33283, 12475, 30, 51378, 51378, 708, 307, 264, 16998, 551, 689, 291, 576, 3079, 3089, 14368, 30, 51632, 51632, 467, 311, 257, 665, 1168, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11385532261170063, "compression_ratio": 1.64, "no_caption_prob": 2.931053859356325e-05}, {"id": 96, "seek": 32388, "start": 323.88, "end": 331.32, "text": " I think that probably one of the most common use cases for a codec is going to be data", "tokens": [50364, 286, 519, 300, 1391, 472, 295, 264, 881, 2689, 764, 3331, 337, 257, 3089, 66, 307, 516, 281, 312, 1412, 50736, 50736, 300, 291, 1969, 11, 570, 498, 309, 311, 1412, 300, 291, 500, 380, 1969, 11, 309, 311, 1348, 646, 490, 257, 51045, 51045, 7154, 300, 291, 500, 380, 1969, 11, 550, 456, 1062, 312, 257, 47415, 1296, 264, 1412, 291, 434, 51286, 51286, 979, 8616, 293, 264, 1412, 291, 434, 43430, 13, 51428, 51428, 583, 498, 291, 1969, 264, 1412, 11, 337, 1365, 11, 498, 309, 311, 4195, 6257, 293, 291, 528, 281, 312, 1075, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.07419668329824315, "compression_ratio": 1.8695652173913044, "no_caption_prob": 1.5206555872282479e-05}, {"id": 97, "seek": 32388, "start": 331.32, "end": 337.5, "text": " that you control, because if it's data that you don't control, it's coming back from a", "tokens": [50364, 286, 519, 300, 1391, 472, 295, 264, 881, 2689, 764, 3331, 337, 257, 3089, 66, 307, 516, 281, 312, 1412, 50736, 50736, 300, 291, 1969, 11, 570, 498, 309, 311, 1412, 300, 291, 500, 380, 1969, 11, 309, 311, 1348, 646, 490, 257, 51045, 51045, 7154, 300, 291, 500, 380, 1969, 11, 550, 456, 1062, 312, 257, 47415, 1296, 264, 1412, 291, 434, 51286, 51286, 979, 8616, 293, 264, 1412, 291, 434, 43430, 13, 51428, 51428, 583, 498, 291, 1969, 264, 1412, 11, 337, 1365, 11, 498, 309, 311, 4195, 6257, 293, 291, 528, 281, 312, 1075, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.07419668329824315, "compression_ratio": 1.8695652173913044, "no_caption_prob": 1.5206555872282479e-05}, {"id": 98, "seek": 32388, "start": 337.5, "end": 342.32, "text": " server that you don't control, then there might be a disparity between the data you're", "tokens": [50364, 286, 519, 300, 1391, 472, 295, 264, 881, 2689, 764, 3331, 337, 257, 3089, 66, 307, 516, 281, 312, 1412, 50736, 50736, 300, 291, 1969, 11, 570, 498, 309, 311, 1412, 300, 291, 500, 380, 1969, 11, 309, 311, 1348, 646, 490, 257, 51045, 51045, 7154, 300, 291, 500, 380, 1969, 11, 550, 456, 1062, 312, 257, 47415, 1296, 264, 1412, 291, 434, 51286, 51286, 979, 8616, 293, 264, 1412, 291, 434, 43430, 13, 51428, 51428, 583, 498, 291, 1969, 264, 1412, 11, 337, 1365, 11, 498, 309, 311, 4195, 6257, 293, 291, 528, 281, 312, 1075, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.07419668329824315, "compression_ratio": 1.8695652173913044, "no_caption_prob": 1.5206555872282479e-05}, {"id": 99, "seek": 32388, "start": 342.32, "end": 345.15999999999997, "text": " decoding and the data you're encoding.", "tokens": [50364, 286, 519, 300, 1391, 472, 295, 264, 881, 2689, 764, 3331, 337, 257, 3089, 66, 307, 516, 281, 312, 1412, 50736, 50736, 300, 291, 1969, 11, 570, 498, 309, 311, 1412, 300, 291, 500, 380, 1969, 11, 309, 311, 1348, 646, 490, 257, 51045, 51045, 7154, 300, 291, 500, 380, 1969, 11, 550, 456, 1062, 312, 257, 47415, 1296, 264, 1412, 291, 434, 51286, 51286, 979, 8616, 293, 264, 1412, 291, 434, 43430, 13, 51428, 51428, 583, 498, 291, 1969, 264, 1412, 11, 337, 1365, 11, 498, 309, 311, 4195, 6257, 293, 291, 528, 281, 312, 1075, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.07419668329824315, "compression_ratio": 1.8695652173913044, "no_caption_prob": 1.5206555872282479e-05}, {"id": 100, "seek": 32388, "start": 345.15999999999997, "end": 352.46, "text": " But if you control the data, for example, if it's user settings and you want to be able", "tokens": [50364, 286, 519, 300, 1391, 472, 295, 264, 881, 2689, 764, 3331, 337, 257, 3089, 66, 307, 516, 281, 312, 1412, 50736, 50736, 300, 291, 1969, 11, 570, 498, 309, 311, 1412, 300, 291, 500, 380, 1969, 11, 309, 311, 1348, 646, 490, 257, 51045, 51045, 7154, 300, 291, 500, 380, 1969, 11, 550, 456, 1062, 312, 257, 47415, 1296, 264, 1412, 291, 434, 51286, 51286, 979, 8616, 293, 264, 1412, 291, 434, 43430, 13, 51428, 51428, 583, 498, 291, 1969, 264, 1412, 11, 337, 1365, 11, 498, 309, 311, 4195, 6257, 293, 291, 528, 281, 312, 1075, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.07419668329824315, "compression_ratio": 1.8695652173913044, "no_caption_prob": 1.5206555872282479e-05}, {"id": 101, "seek": 35246, "start": 352.46, "end": 357.96, "text": " to serialize it and deserialize it, if you want to update the user settings, which you", "tokens": [50364, 281, 17436, 1125, 309, 293, 730, 260, 831, 1125, 309, 11, 498, 291, 528, 281, 5623, 264, 4195, 6257, 11, 597, 291, 50639, 50639, 362, 294, 512, 2699, 76, 1412, 2010, 11, 293, 550, 291, 528, 281, 17436, 1125, 300, 11, 829, 309, 666, 2654, 6725, 11, 50945, 50945, 293, 550, 1401, 309, 646, 484, 11, 300, 311, 257, 2176, 1365, 300, 291, 445, 528, 341, 44788, 51181, 51181, 551, 13, 51246, 51246, 509, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 11, 293, 291, 1969, 1293, 295, 729, 721, 294, 428, 51511, 51511, 2699, 76, 3089, 13, 51561, 51561], "temperature": 0.0, "avg_logprob": -0.09579075192942203, "compression_ratio": 1.8086124401913874, "no_caption_prob": 8.139549208863173e-06}, {"id": 102, "seek": 35246, "start": 357.96, "end": 364.08, "text": " have in some Elm data type, and then you want to serialize that, put it into local storage,", "tokens": [50364, 281, 17436, 1125, 309, 293, 730, 260, 831, 1125, 309, 11, 498, 291, 528, 281, 5623, 264, 4195, 6257, 11, 597, 291, 50639, 50639, 362, 294, 512, 2699, 76, 1412, 2010, 11, 293, 550, 291, 528, 281, 17436, 1125, 300, 11, 829, 309, 666, 2654, 6725, 11, 50945, 50945, 293, 550, 1401, 309, 646, 484, 11, 300, 311, 257, 2176, 1365, 300, 291, 445, 528, 341, 44788, 51181, 51181, 551, 13, 51246, 51246, 509, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 11, 293, 291, 1969, 1293, 295, 729, 721, 294, 428, 51511, 51511, 2699, 76, 3089, 13, 51561, 51561], "temperature": 0.0, "avg_logprob": -0.09579075192942203, "compression_ratio": 1.8086124401913874, "no_caption_prob": 8.139549208863173e-06}, {"id": 103, "seek": 35246, "start": 364.08, "end": 368.79999999999995, "text": " and then read it back out, that's a perfect example that you just want this reversible", "tokens": [50364, 281, 17436, 1125, 309, 293, 730, 260, 831, 1125, 309, 11, 498, 291, 528, 281, 5623, 264, 4195, 6257, 11, 597, 291, 50639, 50639, 362, 294, 512, 2699, 76, 1412, 2010, 11, 293, 550, 291, 528, 281, 17436, 1125, 300, 11, 829, 309, 666, 2654, 6725, 11, 50945, 50945, 293, 550, 1401, 309, 646, 484, 11, 300, 311, 257, 2176, 1365, 300, 291, 445, 528, 341, 44788, 51181, 51181, 551, 13, 51246, 51246, 509, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 11, 293, 291, 1969, 1293, 295, 729, 721, 294, 428, 51511, 51511, 2699, 76, 3089, 13, 51561, 51561], "temperature": 0.0, "avg_logprob": -0.09579075192942203, "compression_ratio": 1.8086124401913874, "no_caption_prob": 8.139549208863173e-06}, {"id": 104, "seek": 35246, "start": 368.79999999999995, "end": 370.09999999999997, "text": " thing.", "tokens": [50364, 281, 17436, 1125, 309, 293, 730, 260, 831, 1125, 309, 11, 498, 291, 528, 281, 5623, 264, 4195, 6257, 11, 597, 291, 50639, 50639, 362, 294, 512, 2699, 76, 1412, 2010, 11, 293, 550, 291, 528, 281, 17436, 1125, 300, 11, 829, 309, 666, 2654, 6725, 11, 50945, 50945, 293, 550, 1401, 309, 646, 484, 11, 300, 311, 257, 2176, 1365, 300, 291, 445, 528, 341, 44788, 51181, 51181, 551, 13, 51246, 51246, 509, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 11, 293, 291, 1969, 1293, 295, 729, 721, 294, 428, 51511, 51511, 2699, 76, 3089, 13, 51561, 51561], "temperature": 0.0, "avg_logprob": -0.09579075192942203, "compression_ratio": 1.8086124401913874, "no_caption_prob": 8.139549208863173e-06}, {"id": 105, "seek": 35246, "start": 370.09999999999997, "end": 375.4, "text": " You control the serialization and deserialization, and you control both of those things in your", "tokens": [50364, 281, 17436, 1125, 309, 293, 730, 260, 831, 1125, 309, 11, 498, 291, 528, 281, 5623, 264, 4195, 6257, 11, 597, 291, 50639, 50639, 362, 294, 512, 2699, 76, 1412, 2010, 11, 293, 550, 291, 528, 281, 17436, 1125, 300, 11, 829, 309, 666, 2654, 6725, 11, 50945, 50945, 293, 550, 1401, 309, 646, 484, 11, 300, 311, 257, 2176, 1365, 300, 291, 445, 528, 341, 44788, 51181, 51181, 551, 13, 51246, 51246, 509, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 11, 293, 291, 1969, 1293, 295, 729, 721, 294, 428, 51511, 51511, 2699, 76, 3089, 13, 51561, 51561], "temperature": 0.0, "avg_logprob": -0.09579075192942203, "compression_ratio": 1.8086124401913874, "no_caption_prob": 8.139549208863173e-06}, {"id": 106, "seek": 35246, "start": 375.4, "end": 376.4, "text": " Elm code.", "tokens": [50364, 281, 17436, 1125, 309, 293, 730, 260, 831, 1125, 309, 11, 498, 291, 528, 281, 5623, 264, 4195, 6257, 11, 597, 291, 50639, 50639, 362, 294, 512, 2699, 76, 1412, 2010, 11, 293, 550, 291, 528, 281, 17436, 1125, 300, 11, 829, 309, 666, 2654, 6725, 11, 50945, 50945, 293, 550, 1401, 309, 646, 484, 11, 300, 311, 257, 2176, 1365, 300, 291, 445, 528, 341, 44788, 51181, 51181, 551, 13, 51246, 51246, 509, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 11, 293, 291, 1969, 1293, 295, 729, 721, 294, 428, 51511, 51511, 2699, 76, 3089, 13, 51561, 51561], "temperature": 0.0, "avg_logprob": -0.09579075192942203, "compression_ratio": 1.8086124401913874, "no_caption_prob": 8.139549208863173e-06}, {"id": 107, "seek": 37640, "start": 376.4, "end": 382.71999999999997, "text": " Yeah, I imagine that you would have multiple decoders built in.", "tokens": [50364, 865, 11, 286, 3811, 300, 291, 576, 362, 3866, 979, 378, 433, 3094, 294, 13, 50680, 50680, 1171, 5197, 11, 291, 528, 281, 3155, 428, 4195, 6257, 13, 50876, 50876, 3950, 1062, 1319, 670, 565, 13, 50956, 50956, 1711, 700, 11, 291, 787, 3155, 316, 11, 293, 550, 1780, 322, 11, 291, 909, 363, 13, 407, 428, 700, 3089, 66, 576, 787, 51368, 51368, 2058, 1429, 316, 293, 979, 1429, 316, 11, 457, 428, 1150, 979, 19866, 1780, 322, 576, 611, 2058, 1429, 363, 293, 979, 1429, 363, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1349926507601174, "compression_ratio": 1.6597938144329898, "no_caption_prob": 4.131187597522512e-05}, {"id": 108, "seek": 37640, "start": 382.71999999999997, "end": 386.64, "text": " For instance, you want to save your user settings.", "tokens": [50364, 865, 11, 286, 3811, 300, 291, 576, 362, 3866, 979, 378, 433, 3094, 294, 13, 50680, 50680, 1171, 5197, 11, 291, 528, 281, 3155, 428, 4195, 6257, 13, 50876, 50876, 3950, 1062, 1319, 670, 565, 13, 50956, 50956, 1711, 700, 11, 291, 787, 3155, 316, 11, 293, 550, 1780, 322, 11, 291, 909, 363, 13, 407, 428, 700, 3089, 66, 576, 787, 51368, 51368, 2058, 1429, 316, 293, 979, 1429, 316, 11, 457, 428, 1150, 979, 19866, 1780, 322, 576, 611, 2058, 1429, 363, 293, 979, 1429, 363, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1349926507601174, "compression_ratio": 1.6597938144329898, "no_caption_prob": 4.131187597522512e-05}, {"id": 109, "seek": 37640, "start": 386.64, "end": 388.23999999999995, "text": " Those might change over time.", "tokens": [50364, 865, 11, 286, 3811, 300, 291, 576, 362, 3866, 979, 378, 433, 3094, 294, 13, 50680, 50680, 1171, 5197, 11, 291, 528, 281, 3155, 428, 4195, 6257, 13, 50876, 50876, 3950, 1062, 1319, 670, 565, 13, 50956, 50956, 1711, 700, 11, 291, 787, 3155, 316, 11, 293, 550, 1780, 322, 11, 291, 909, 363, 13, 407, 428, 700, 3089, 66, 576, 787, 51368, 51368, 2058, 1429, 316, 293, 979, 1429, 316, 11, 457, 428, 1150, 979, 19866, 1780, 322, 576, 611, 2058, 1429, 363, 293, 979, 1429, 363, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1349926507601174, "compression_ratio": 1.6597938144329898, "no_caption_prob": 4.131187597522512e-05}, {"id": 110, "seek": 37640, "start": 388.23999999999995, "end": 396.47999999999996, "text": " At first, you only save A, and then later on, you add B. So your first codec would only", "tokens": [50364, 865, 11, 286, 3811, 300, 291, 576, 362, 3866, 979, 378, 433, 3094, 294, 13, 50680, 50680, 1171, 5197, 11, 291, 528, 281, 3155, 428, 4195, 6257, 13, 50876, 50876, 3950, 1062, 1319, 670, 565, 13, 50956, 50956, 1711, 700, 11, 291, 787, 3155, 316, 11, 293, 550, 1780, 322, 11, 291, 909, 363, 13, 407, 428, 700, 3089, 66, 576, 787, 51368, 51368, 2058, 1429, 316, 293, 979, 1429, 316, 11, 457, 428, 1150, 979, 19866, 1780, 322, 576, 611, 2058, 1429, 363, 293, 979, 1429, 363, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1349926507601174, "compression_ratio": 1.6597938144329898, "no_caption_prob": 4.131187597522512e-05}, {"id": 111, "seek": 37640, "start": 396.47999999999996, "end": 405.91999999999996, "text": " encode A and decode A, but your second decoder later on would also encode B and decode B,", "tokens": [50364, 865, 11, 286, 3811, 300, 291, 576, 362, 3866, 979, 378, 433, 3094, 294, 13, 50680, 50680, 1171, 5197, 11, 291, 528, 281, 3155, 428, 4195, 6257, 13, 50876, 50876, 3950, 1062, 1319, 670, 565, 13, 50956, 50956, 1711, 700, 11, 291, 787, 3155, 316, 11, 293, 550, 1780, 322, 11, 291, 909, 363, 13, 407, 428, 700, 3089, 66, 576, 787, 51368, 51368, 2058, 1429, 316, 293, 979, 1429, 316, 11, 457, 428, 1150, 979, 19866, 1780, 322, 576, 611, 2058, 1429, 363, 293, 979, 1429, 363, 11, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.1349926507601174, "compression_ratio": 1.6597938144329898, "no_caption_prob": 4.131187597522512e-05}, {"id": 112, "seek": 40592, "start": 405.92, "end": 411.0, "text": " but it would still need to work in the version where B does not exist.", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 113, "seek": 40592, "start": 411.0, "end": 414.96000000000004, "text": " Yeah, making it backwards compatible and nonbreaking.", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 114, "seek": 40592, "start": 414.96000000000004, "end": 415.96000000000004, "text": " Yes.", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 115, "seek": 40592, "start": 415.96000000000004, "end": 418.52000000000004, "text": " That's a shorter way of saying it.", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 116, "seek": 40592, "start": 418.52000000000004, "end": 424.44, "text": " Yeah, that's definitely a whole topic on its own.", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 117, "seek": 40592, "start": 424.44, "end": 429.64, "text": " And it is interesting how codecs fit into that picture because they are compatible with", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 118, "seek": 40592, "start": 429.64, "end": 434.84000000000003, "text": " it, but they don't in themselves enforce that concept, but they can help with that.", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 119, "seek": 40592, "start": 434.84000000000003, "end": 435.84000000000003, "text": " Yeah.", "tokens": [50364, 457, 309, 576, 920, 643, 281, 589, 294, 264, 3037, 689, 363, 775, 406, 2514, 13, 50618, 50618, 865, 11, 1455, 309, 12204, 18218, 293, 2107, 20602, 13, 50816, 50816, 1079, 13, 50866, 50866, 663, 311, 257, 11639, 636, 295, 1566, 309, 13, 50994, 50994, 865, 11, 300, 311, 2138, 257, 1379, 4829, 322, 1080, 1065, 13, 51290, 51290, 400, 309, 307, 1880, 577, 3089, 14368, 3318, 666, 300, 3036, 570, 436, 366, 18218, 365, 51550, 51550, 309, 11, 457, 436, 500, 380, 294, 2969, 24825, 300, 3410, 11, 457, 436, 393, 854, 365, 300, 13, 51810, 51810, 865, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.2231472638937143, "compression_ratio": 1.6401673640167365, "no_caption_prob": 2.1782359908684157e-05}, {"id": 120, "seek": 43584, "start": 435.84, "end": 436.84, "text": " That's a good point.", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 121, "seek": 43584, "start": 436.84, "end": 442.88, "text": " I don't think I've seen one implementation of that where a backwards compatibility would", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 122, "seek": 43584, "start": 442.88, "end": 444.44, "text": " necessarily work.", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 123, "seek": 43584, "start": 444.44, "end": 445.44, "text": " I don't know.", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 124, "seek": 43584, "start": 445.44, "end": 450.52, "text": " They do say things about that in their frequently asked questions.", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 125, "seek": 43584, "start": 450.52, "end": 451.88, "text": " Yeah.", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 126, "seek": 43584, "start": 451.88, "end": 457.55999999999995, "text": " And Mario Rogic has this idea he calls Evergreen that he gave a really great Elm Europe talk", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 127, "seek": 43584, "start": 457.55999999999995, "end": 459.85999999999996, "text": " about that one year.", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 128, "seek": 43584, "start": 459.85999999999996, "end": 465.23999999999995, "text": " And he has that actually working in practice in Lambda.", "tokens": [50364, 663, 311, 257, 665, 935, 13, 50414, 50414, 286, 500, 380, 519, 286, 600, 1612, 472, 11420, 295, 300, 689, 257, 12204, 34237, 576, 50716, 50716, 4725, 589, 13, 50794, 50794, 286, 500, 380, 458, 13, 50844, 50844, 814, 360, 584, 721, 466, 300, 294, 641, 10374, 2351, 1651, 13, 51098, 51098, 865, 13, 51166, 51166, 400, 9343, 11860, 299, 575, 341, 1558, 415, 5498, 12123, 27399, 300, 415, 2729, 257, 534, 869, 2699, 76, 3315, 751, 51450, 51450, 466, 300, 472, 1064, 13, 51565, 51565, 400, 415, 575, 300, 767, 1364, 294, 3124, 294, 45691, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.2227924649078067, "compression_ratio": 1.5546558704453441, "no_caption_prob": 8.887623698683456e-05}, {"id": 129, "seek": 46524, "start": 465.24, "end": 471.96000000000004, "text": " So this idea of managing breaking changes is something that exists out in the wild.", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 130, "seek": 46524, "start": 471.96000000000004, "end": 475.44, "text": " And you could certainly apply that concept to codecs.", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 131, "seek": 46524, "start": 475.44, "end": 482.38, "text": " And I think under the hood, I believe Lambda may even be using one of these codec libraries", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 132, "seek": 46524, "start": 482.38, "end": 483.38, "text": " under the hood.", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 133, "seek": 46524, "start": 483.38, "end": 486.40000000000003, "text": " I know it's serializing and deserializing these things as bytes.", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 134, "seek": 46524, "start": 486.40000000000003, "end": 487.40000000000003, "text": " Yeah.", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 135, "seek": 46524, "start": 487.40000000000003, "end": 493.0, "text": " I think I've seen that there are limitations in what you can do with your migrations in", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 136, "seek": 46524, "start": 493.0, "end": 494.84000000000003, "text": " Lambda because of that.", "tokens": [50364, 407, 341, 1558, 295, 11642, 7697, 2962, 307, 746, 300, 8198, 484, 294, 264, 4868, 13, 50700, 50700, 400, 291, 727, 3297, 3079, 300, 3410, 281, 3089, 14368, 13, 50874, 50874, 400, 286, 519, 833, 264, 13376, 11, 286, 1697, 45691, 815, 754, 312, 1228, 472, 295, 613, 3089, 66, 15148, 51221, 51221, 833, 264, 13376, 13, 51271, 51271, 286, 458, 309, 311, 17436, 3319, 293, 730, 260, 831, 3319, 613, 721, 382, 36088, 13, 51422, 51422, 865, 13, 51472, 51472, 286, 519, 286, 600, 1612, 300, 456, 366, 15705, 294, 437, 291, 393, 360, 365, 428, 6186, 12154, 294, 51752, 51752, 45691, 570, 295, 300, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.12901622325450451, "compression_ratio": 1.68503937007874, "no_caption_prob": 8.939578947320115e-06}, {"id": 137, "seek": 49484, "start": 494.84, "end": 500.0, "text": " Because it's trying to stay backwards compatible.", "tokens": [50364, 1436, 309, 311, 1382, 281, 1754, 12204, 18218, 13, 50622, 50622, 1133, 291, 7754, 11, 550, 300, 311, 445, 364, 2243, 1752, 337, 428, 4195, 13, 50900, 50900, 407, 1338, 11, 286, 3986, 365, 264, 636, 291, 393, 1969, 264, 1412, 13, 51210, 51210, 1018, 321, 848, 11, 562, 291, 500, 380, 1969, 264, 1412, 382, 709, 382, 291, 528, 787, 294, 2699, 76, 11, 550, 291, 434, 51494, 51494, 12334, 322, 437, 309, 1542, 411, 490, 264, 7154, 420, 490, 512, 1908, 9362, 13, 51770, 51770, 1779, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18607740504767306, "compression_ratio": 1.5175438596491229, "no_caption_prob": 2.7108057111036032e-05}, {"id": 138, "seek": 49484, "start": 500.0, "end": 505.56, "text": " When you succeed, then that's just an amazing experience for your user.", "tokens": [50364, 1436, 309, 311, 1382, 281, 1754, 12204, 18218, 13, 50622, 50622, 1133, 291, 7754, 11, 550, 300, 311, 445, 364, 2243, 1752, 337, 428, 4195, 13, 50900, 50900, 407, 1338, 11, 286, 3986, 365, 264, 636, 291, 393, 1969, 264, 1412, 13, 51210, 51210, 1018, 321, 848, 11, 562, 291, 500, 380, 1969, 264, 1412, 382, 709, 382, 291, 528, 787, 294, 2699, 76, 11, 550, 291, 434, 51494, 51494, 12334, 322, 437, 309, 1542, 411, 490, 264, 7154, 420, 490, 512, 1908, 9362, 13, 51770, 51770, 1779, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18607740504767306, "compression_ratio": 1.5175438596491229, "no_caption_prob": 2.7108057111036032e-05}, {"id": 139, "seek": 49484, "start": 505.56, "end": 511.76, "text": " So yeah, I agree with the way you can control the data.", "tokens": [50364, 1436, 309, 311, 1382, 281, 1754, 12204, 18218, 13, 50622, 50622, 1133, 291, 7754, 11, 550, 300, 311, 445, 364, 2243, 1752, 337, 428, 4195, 13, 50900, 50900, 407, 1338, 11, 286, 3986, 365, 264, 636, 291, 393, 1969, 264, 1412, 13, 51210, 51210, 1018, 321, 848, 11, 562, 291, 500, 380, 1969, 264, 1412, 382, 709, 382, 291, 528, 787, 294, 2699, 76, 11, 550, 291, 434, 51494, 51494, 12334, 322, 437, 309, 1542, 411, 490, 264, 7154, 420, 490, 512, 1908, 9362, 13, 51770, 51770, 1779, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18607740504767306, "compression_ratio": 1.5175438596491229, "no_caption_prob": 2.7108057111036032e-05}, {"id": 140, "seek": 49484, "start": 511.76, "end": 517.4399999999999, "text": " As we said, when you don't control the data as much as you want only in Elm, then you're", "tokens": [50364, 1436, 309, 311, 1382, 281, 1754, 12204, 18218, 13, 50622, 50622, 1133, 291, 7754, 11, 550, 300, 311, 445, 364, 2243, 1752, 337, 428, 4195, 13, 50900, 50900, 407, 1338, 11, 286, 3986, 365, 264, 636, 291, 393, 1969, 264, 1412, 13, 51210, 51210, 1018, 321, 848, 11, 562, 291, 500, 380, 1969, 264, 1412, 382, 709, 382, 291, 528, 787, 294, 2699, 76, 11, 550, 291, 434, 51494, 51494, 12334, 322, 437, 309, 1542, 411, 490, 264, 7154, 420, 490, 512, 1908, 9362, 13, 51770, 51770, 1779, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18607740504767306, "compression_ratio": 1.5175438596491229, "no_caption_prob": 2.7108057111036032e-05}, {"id": 141, "seek": 49484, "start": 517.4399999999999, "end": 522.9599999999999, "text": " dependent on what it looks like from the server or from some public API.", "tokens": [50364, 1436, 309, 311, 1382, 281, 1754, 12204, 18218, 13, 50622, 50622, 1133, 291, 7754, 11, 550, 300, 311, 445, 364, 2243, 1752, 337, 428, 4195, 13, 50900, 50900, 407, 1338, 11, 286, 3986, 365, 264, 636, 291, 393, 1969, 264, 1412, 13, 51210, 51210, 1018, 321, 848, 11, 562, 291, 500, 380, 1969, 264, 1412, 382, 709, 382, 291, 528, 787, 294, 2699, 76, 11, 550, 291, 434, 51494, 51494, 12334, 322, 437, 309, 1542, 411, 490, 264, 7154, 420, 490, 512, 1908, 9362, 13, 51770, 51770, 1779, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18607740504767306, "compression_ratio": 1.5175438596491229, "no_caption_prob": 2.7108057111036032e-05}, {"id": 142, "seek": 49484, "start": 522.9599999999999, "end": 523.9599999999999, "text": " Right.", "tokens": [50364, 1436, 309, 311, 1382, 281, 1754, 12204, 18218, 13, 50622, 50622, 1133, 291, 7754, 11, 550, 300, 311, 445, 364, 2243, 1752, 337, 428, 4195, 13, 50900, 50900, 407, 1338, 11, 286, 3986, 365, 264, 636, 291, 393, 1969, 264, 1412, 13, 51210, 51210, 1018, 321, 848, 11, 562, 291, 500, 380, 1969, 264, 1412, 382, 709, 382, 291, 528, 787, 294, 2699, 76, 11, 550, 291, 434, 51494, 51494, 12334, 322, 437, 309, 1542, 411, 490, 264, 7154, 420, 490, 512, 1908, 9362, 13, 51770, 51770, 1779, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18607740504767306, "compression_ratio": 1.5175438596491229, "no_caption_prob": 2.7108057111036032e-05}, {"id": 143, "seek": 52396, "start": 523.96, "end": 524.96, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 400, 550, 309, 486, 1391, 574, 411, 746, 300, 307, 257, 5055, 295, 264, 9362, 4134, 13, 50752, 50752, 708, 286, 914, 307, 291, 500, 380, 528, 281, 48377, 264, 9362, 35795, 293, 829, 309, 666, 257, 2316, 445, 51054, 51054, 411, 291, 528, 281, 2316, 309, 370, 300, 291, 500, 380, 362, 6243, 4368, 13, 51338, 51338, 5780, 291, 393, 7983, 300, 294, 257, 3089, 66, 689, 291, 393, 1322, 493, 2375, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1201099257871329, "compression_ratio": 1.59, "no_caption_prob": 2.3552089260192588e-05}, {"id": 144, "seek": 52396, "start": 524.96, "end": 531.72, "text": " And then it will probably look like something that is a copy of the API response.", "tokens": [50364, 865, 13, 50414, 50414, 400, 550, 309, 486, 1391, 574, 411, 746, 300, 307, 257, 5055, 295, 264, 9362, 4134, 13, 50752, 50752, 708, 286, 914, 307, 291, 500, 380, 528, 281, 48377, 264, 9362, 35795, 293, 829, 309, 666, 257, 2316, 445, 51054, 51054, 411, 291, 528, 281, 2316, 309, 370, 300, 291, 500, 380, 362, 6243, 4368, 13, 51338, 51338, 5780, 291, 393, 7983, 300, 294, 257, 3089, 66, 689, 291, 393, 1322, 493, 2375, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1201099257871329, "compression_ratio": 1.59, "no_caption_prob": 2.3552089260192588e-05}, {"id": 145, "seek": 52396, "start": 531.72, "end": 537.76, "text": " What I mean is you don't want to parse the API endpoint and put it into a model just", "tokens": [50364, 865, 13, 50414, 50414, 400, 550, 309, 486, 1391, 574, 411, 746, 300, 307, 257, 5055, 295, 264, 9362, 4134, 13, 50752, 50752, 708, 286, 914, 307, 291, 500, 380, 528, 281, 48377, 264, 9362, 35795, 293, 829, 309, 666, 257, 2316, 445, 51054, 51054, 411, 291, 528, 281, 2316, 309, 370, 300, 291, 500, 380, 362, 6243, 4368, 13, 51338, 51338, 5780, 291, 393, 7983, 300, 294, 257, 3089, 66, 689, 291, 393, 1322, 493, 2375, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1201099257871329, "compression_ratio": 1.59, "no_caption_prob": 2.3552089260192588e-05}, {"id": 146, "seek": 52396, "start": 537.76, "end": 543.44, "text": " like you want to model it so that you don't have impossible states.", "tokens": [50364, 865, 13, 50414, 50414, 400, 550, 309, 486, 1391, 574, 411, 746, 300, 307, 257, 5055, 295, 264, 9362, 4134, 13, 50752, 50752, 708, 286, 914, 307, 291, 500, 380, 528, 281, 48377, 264, 9362, 35795, 293, 829, 309, 666, 257, 2316, 445, 51054, 51054, 411, 291, 528, 281, 2316, 309, 370, 300, 291, 500, 380, 362, 6243, 4368, 13, 51338, 51338, 5780, 291, 393, 7983, 300, 294, 257, 3089, 66, 689, 291, 393, 1322, 493, 2375, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1201099257871329, "compression_ratio": 1.59, "no_caption_prob": 2.3552089260192588e-05}, {"id": 147, "seek": 52396, "start": 543.44, "end": 550.96, "text": " Although you can capture that in a codec where you can build up custom types.", "tokens": [50364, 865, 13, 50414, 50414, 400, 550, 309, 486, 1391, 574, 411, 746, 300, 307, 257, 5055, 295, 264, 9362, 4134, 13, 50752, 50752, 708, 286, 914, 307, 291, 500, 380, 528, 281, 48377, 264, 9362, 35795, 293, 829, 309, 666, 257, 2316, 445, 51054, 51054, 411, 291, 528, 281, 2316, 309, 370, 300, 291, 500, 380, 362, 6243, 4368, 13, 51338, 51338, 5780, 291, 393, 7983, 300, 294, 257, 3089, 66, 689, 291, 393, 1322, 493, 2375, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1201099257871329, "compression_ratio": 1.59, "no_caption_prob": 2.3552089260192588e-05}, {"id": 148, "seek": 55096, "start": 550.96, "end": 557.8000000000001, "text": " And then of course, it's reversible so you build up a custom, you can encode a custom", "tokens": [50364, 400, 550, 295, 1164, 11, 309, 311, 44788, 370, 291, 1322, 493, 257, 2375, 11, 291, 393, 2058, 1429, 257, 2375, 50706, 50706, 2010, 293, 979, 1429, 309, 382, 731, 13, 50836, 50836, 400, 498, 291, 362, 746, 411, 11, 498, 291, 764, 512, 295, 613, 7154, 1832, 1333, 295, 2699, 76, 11, 721, 51189, 51189, 300, 1190, 411, 2699, 76, 3089, 337, 7154, 1832, 6828, 293, 2736, 31828, 1412, 293, 1507, 11, 558, 30, 51494, 51494], "temperature": 0.0, "avg_logprob": -0.17393899265723892, "compression_ratio": 1.5483870967741935, "no_caption_prob": 7.411157184833428e-06}, {"id": 149, "seek": 55096, "start": 557.8000000000001, "end": 560.4000000000001, "text": " type and decode it as well.", "tokens": [50364, 400, 550, 295, 1164, 11, 309, 311, 44788, 370, 291, 1322, 493, 257, 2375, 11, 291, 393, 2058, 1429, 257, 2375, 50706, 50706, 2010, 293, 979, 1429, 309, 382, 731, 13, 50836, 50836, 400, 498, 291, 362, 746, 411, 11, 498, 291, 764, 512, 295, 613, 7154, 1832, 1333, 295, 2699, 76, 11, 721, 51189, 51189, 300, 1190, 411, 2699, 76, 3089, 337, 7154, 1832, 6828, 293, 2736, 31828, 1412, 293, 1507, 11, 558, 30, 51494, 51494], "temperature": 0.0, "avg_logprob": -0.17393899265723892, "compression_ratio": 1.5483870967741935, "no_caption_prob": 7.411157184833428e-06}, {"id": 150, "seek": 55096, "start": 560.4000000000001, "end": 567.46, "text": " And if you have something like, if you use some of these serverless sort of Elm, things", "tokens": [50364, 400, 550, 295, 1164, 11, 309, 311, 44788, 370, 291, 1322, 493, 257, 2375, 11, 291, 393, 2058, 1429, 257, 2375, 50706, 50706, 2010, 293, 979, 1429, 309, 382, 731, 13, 50836, 50836, 400, 498, 291, 362, 746, 411, 11, 498, 291, 764, 512, 295, 613, 7154, 1832, 1333, 295, 2699, 76, 11, 721, 51189, 51189, 300, 1190, 411, 2699, 76, 3089, 337, 7154, 1832, 6828, 293, 2736, 31828, 1412, 293, 1507, 11, 558, 30, 51494, 51494], "temperature": 0.0, "avg_logprob": -0.17393899265723892, "compression_ratio": 1.5483870967741935, "no_caption_prob": 7.411157184833428e-06}, {"id": 151, "seek": 55096, "start": 567.46, "end": 573.5600000000001, "text": " that run like Elm code for serverless functions and return JSON data and stuff, right?", "tokens": [50364, 400, 550, 295, 1164, 11, 309, 311, 44788, 370, 291, 1322, 493, 257, 2375, 11, 291, 393, 2058, 1429, 257, 2375, 50706, 50706, 2010, 293, 979, 1429, 309, 382, 731, 13, 50836, 50836, 400, 498, 291, 362, 746, 411, 11, 498, 291, 764, 512, 295, 613, 7154, 1832, 1333, 295, 2699, 76, 11, 721, 51189, 51189, 300, 1190, 411, 2699, 76, 3089, 337, 7154, 1832, 6828, 293, 2736, 31828, 1412, 293, 1507, 11, 558, 30, 51494, 51494], "temperature": 0.0, "avg_logprob": -0.17393899265723892, "compression_ratio": 1.5483870967741935, "no_caption_prob": 7.411157184833428e-06}, {"id": 152, "seek": 57356, "start": 573.56, "end": 581.0, "text": " If you do code sharing, then you can use a tool like that to ensure that these two data", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 153, "seek": 57356, "start": 581.0, "end": 582.0, "text": " types are in sync.", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 154, "seek": 57356, "start": 582.0, "end": 583.0, "text": " Yeah.", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 155, "seek": 57356, "start": 583.0, "end": 587.8399999999999, "text": " Which, of course, you do run into these tricky questions about backwards compatibility there", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 156, "seek": 57356, "start": 587.8399999999999, "end": 588.8399999999999, "text": " as well because...", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 157, "seek": 57356, "start": 588.8399999999999, "end": 589.8399999999999, "text": " Yeah, and synchronization.", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 158, "seek": 57356, "start": 589.8399999999999, "end": 590.8399999999999, "text": " Yes.", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 159, "seek": 57356, "start": 590.8399999999999, "end": 595.1199999999999, "text": " Yeah, just like we talked about in the GraphQL episode last time.", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 160, "seek": 57356, "start": 595.1199999999999, "end": 596.1199999999999, "text": " Exactly.", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 161, "seek": 57356, "start": 596.1199999999999, "end": 598.04, "text": " Yeah, those same sort of concepts.", "tokens": [50364, 759, 291, 360, 3089, 5414, 11, 550, 291, 393, 764, 257, 2290, 411, 300, 281, 5586, 300, 613, 732, 1412, 50736, 50736, 3467, 366, 294, 20271, 13, 50786, 50786, 865, 13, 50836, 50836, 3013, 11, 295, 1164, 11, 291, 360, 1190, 666, 613, 12414, 1651, 466, 12204, 34237, 456, 51078, 51078, 382, 731, 570, 485, 51128, 51128, 865, 11, 293, 19331, 2144, 13, 51178, 51178, 1079, 13, 51228, 51228, 865, 11, 445, 411, 321, 2825, 466, 294, 264, 21884, 13695, 3500, 1036, 565, 13, 51442, 51442, 7587, 13, 51492, 51492, 865, 11, 729, 912, 1333, 295, 10392, 13, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.21932710385790058, "compression_ratio": 1.5708154506437768, "no_caption_prob": 7.411185833916534e-06}, {"id": 162, "seek": 59804, "start": 598.04, "end": 604.76, "text": " What's that called, the Ottoman general problem or I don't know, some sort of general problem,", "tokens": [50364, 708, 311, 300, 1219, 11, 264, 33435, 2674, 1154, 420, 286, 500, 380, 458, 11, 512, 1333, 295, 2674, 1154, 11, 50700, 50700, 597, 307, 341, 1333, 295, 24106, 1154, 294, 3820, 3497, 300, 498, 291, 362, 257, 2674, 51102, 51102, 567, 2203, 281, 2845, 257, 3636, 281, 264, 11522, 300, 436, 434, 516, 281, 2690, 11, 457, 436, 486, 51394, 51394, 787, 2690, 498, 415, 2203, 281, 2845, 264, 3636, 281, 264, 11522, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12725669522828695, "compression_ratio": 1.7486631016042782, "no_caption_prob": 4.069316491950303e-05}, {"id": 163, "seek": 59804, "start": 604.76, "end": 612.8, "text": " which is this sort of conceptual problem in computer science that if you have a general", "tokens": [50364, 708, 311, 300, 1219, 11, 264, 33435, 2674, 1154, 420, 286, 500, 380, 458, 11, 512, 1333, 295, 2674, 1154, 11, 50700, 50700, 597, 307, 341, 1333, 295, 24106, 1154, 294, 3820, 3497, 300, 498, 291, 362, 257, 2674, 51102, 51102, 567, 2203, 281, 2845, 257, 3636, 281, 264, 11522, 300, 436, 434, 516, 281, 2690, 11, 457, 436, 486, 51394, 51394, 787, 2690, 498, 415, 2203, 281, 2845, 264, 3636, 281, 264, 11522, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12725669522828695, "compression_ratio": 1.7486631016042782, "no_caption_prob": 4.069316491950303e-05}, {"id": 164, "seek": 59804, "start": 612.8, "end": 618.64, "text": " who needs to send a message to the troops that they're going to attack, but they will", "tokens": [50364, 708, 311, 300, 1219, 11, 264, 33435, 2674, 1154, 420, 286, 500, 380, 458, 11, 512, 1333, 295, 2674, 1154, 11, 50700, 50700, 597, 307, 341, 1333, 295, 24106, 1154, 294, 3820, 3497, 300, 498, 291, 362, 257, 2674, 51102, 51102, 567, 2203, 281, 2845, 257, 3636, 281, 264, 11522, 300, 436, 434, 516, 281, 2690, 11, 457, 436, 486, 51394, 51394, 787, 2690, 498, 415, 2203, 281, 2845, 264, 3636, 281, 264, 11522, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12725669522828695, "compression_ratio": 1.7486631016042782, "no_caption_prob": 4.069316491950303e-05}, {"id": 165, "seek": 59804, "start": 618.64, "end": 625.5999999999999, "text": " only attack if he needs to send the message to the troops.", "tokens": [50364, 708, 311, 300, 1219, 11, 264, 33435, 2674, 1154, 420, 286, 500, 380, 458, 11, 512, 1333, 295, 2674, 1154, 11, 50700, 50700, 597, 307, 341, 1333, 295, 24106, 1154, 294, 3820, 3497, 300, 498, 291, 362, 257, 2674, 51102, 51102, 567, 2203, 281, 2845, 257, 3636, 281, 264, 11522, 300, 436, 434, 516, 281, 2690, 11, 457, 436, 486, 51394, 51394, 787, 2690, 498, 415, 2203, 281, 2845, 264, 3636, 281, 264, 11522, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.12725669522828695, "compression_ratio": 1.7486631016042782, "no_caption_prob": 4.069316491950303e-05}, {"id": 166, "seek": 62560, "start": 625.6, "end": 630.76, "text": " Then the troops need to send a confirmation that they received the message to attack because", "tokens": [50364, 1396, 264, 11522, 643, 281, 2845, 257, 21871, 300, 436, 4613, 264, 3636, 281, 2690, 570, 50622, 50622, 1293, 4881, 295, 341, 10997, 643, 281, 2690, 16561, 13, 50822, 50822, 400, 498, 436, 500, 380, 1293, 362, 257, 19331, 1602, 1393, 281, 2690, 412, 264, 912, 565, 11, 550, 436, 51102, 51102, 643, 281, 818, 766, 264, 2690, 13, 51166, 51166, 407, 436, 393, 787, 360, 309, 498, 436, 483, 21871, 13, 51281, 51281, 407, 264, 472, 1252, 11, 1252, 316, 2203, 21871, 300, 1252, 363, 11, 457, 550, 1252, 363, 2203, 21871, 51652, 51652, 300, 1252, 316, 4613, 641, 21871, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11919208742537589, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.300698295381153e-05}, {"id": 167, "seek": 62560, "start": 630.76, "end": 634.76, "text": " both sides of this hill need to attack simultaneously.", "tokens": [50364, 1396, 264, 11522, 643, 281, 2845, 257, 21871, 300, 436, 4613, 264, 3636, 281, 2690, 570, 50622, 50622, 1293, 4881, 295, 341, 10997, 643, 281, 2690, 16561, 13, 50822, 50822, 400, 498, 436, 500, 380, 1293, 362, 257, 19331, 1602, 1393, 281, 2690, 412, 264, 912, 565, 11, 550, 436, 51102, 51102, 643, 281, 818, 766, 264, 2690, 13, 51166, 51166, 407, 436, 393, 787, 360, 309, 498, 436, 483, 21871, 13, 51281, 51281, 407, 264, 472, 1252, 11, 1252, 316, 2203, 21871, 300, 1252, 363, 11, 457, 550, 1252, 363, 2203, 21871, 51652, 51652, 300, 1252, 316, 4613, 641, 21871, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11919208742537589, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.300698295381153e-05}, {"id": 168, "seek": 62560, "start": 634.76, "end": 640.36, "text": " And if they don't both have a synchronized plan to attack at the same time, then they", "tokens": [50364, 1396, 264, 11522, 643, 281, 2845, 257, 21871, 300, 436, 4613, 264, 3636, 281, 2690, 570, 50622, 50622, 1293, 4881, 295, 341, 10997, 643, 281, 2690, 16561, 13, 50822, 50822, 400, 498, 436, 500, 380, 1293, 362, 257, 19331, 1602, 1393, 281, 2690, 412, 264, 912, 565, 11, 550, 436, 51102, 51102, 643, 281, 818, 766, 264, 2690, 13, 51166, 51166, 407, 436, 393, 787, 360, 309, 498, 436, 483, 21871, 13, 51281, 51281, 407, 264, 472, 1252, 11, 1252, 316, 2203, 21871, 300, 1252, 363, 11, 457, 550, 1252, 363, 2203, 21871, 51652, 51652, 300, 1252, 316, 4613, 641, 21871, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11919208742537589, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.300698295381153e-05}, {"id": 169, "seek": 62560, "start": 640.36, "end": 641.64, "text": " need to call off the attack.", "tokens": [50364, 1396, 264, 11522, 643, 281, 2845, 257, 21871, 300, 436, 4613, 264, 3636, 281, 2690, 570, 50622, 50622, 1293, 4881, 295, 341, 10997, 643, 281, 2690, 16561, 13, 50822, 50822, 400, 498, 436, 500, 380, 1293, 362, 257, 19331, 1602, 1393, 281, 2690, 412, 264, 912, 565, 11, 550, 436, 51102, 51102, 643, 281, 818, 766, 264, 2690, 13, 51166, 51166, 407, 436, 393, 787, 360, 309, 498, 436, 483, 21871, 13, 51281, 51281, 407, 264, 472, 1252, 11, 1252, 316, 2203, 21871, 300, 1252, 363, 11, 457, 550, 1252, 363, 2203, 21871, 51652, 51652, 300, 1252, 316, 4613, 641, 21871, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11919208742537589, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.300698295381153e-05}, {"id": 170, "seek": 62560, "start": 641.64, "end": 643.94, "text": " So they can only do it if they get confirmation.", "tokens": [50364, 1396, 264, 11522, 643, 281, 2845, 257, 21871, 300, 436, 4613, 264, 3636, 281, 2690, 570, 50622, 50622, 1293, 4881, 295, 341, 10997, 643, 281, 2690, 16561, 13, 50822, 50822, 400, 498, 436, 500, 380, 1293, 362, 257, 19331, 1602, 1393, 281, 2690, 412, 264, 912, 565, 11, 550, 436, 51102, 51102, 643, 281, 818, 766, 264, 2690, 13, 51166, 51166, 407, 436, 393, 787, 360, 309, 498, 436, 483, 21871, 13, 51281, 51281, 407, 264, 472, 1252, 11, 1252, 316, 2203, 21871, 300, 1252, 363, 11, 457, 550, 1252, 363, 2203, 21871, 51652, 51652, 300, 1252, 316, 4613, 641, 21871, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11919208742537589, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.300698295381153e-05}, {"id": 171, "seek": 62560, "start": 643.94, "end": 651.36, "text": " So the one side, side A needs confirmation that side B, but then side B needs confirmation", "tokens": [50364, 1396, 264, 11522, 643, 281, 2845, 257, 21871, 300, 436, 4613, 264, 3636, 281, 2690, 570, 50622, 50622, 1293, 4881, 295, 341, 10997, 643, 281, 2690, 16561, 13, 50822, 50822, 400, 498, 436, 500, 380, 1293, 362, 257, 19331, 1602, 1393, 281, 2690, 412, 264, 912, 565, 11, 550, 436, 51102, 51102, 643, 281, 818, 766, 264, 2690, 13, 51166, 51166, 407, 436, 393, 787, 360, 309, 498, 436, 483, 21871, 13, 51281, 51281, 407, 264, 472, 1252, 11, 1252, 316, 2203, 21871, 300, 1252, 363, 11, 457, 550, 1252, 363, 2203, 21871, 51652, 51652, 300, 1252, 316, 4613, 641, 21871, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11919208742537589, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.300698295381153e-05}, {"id": 172, "seek": 62560, "start": 651.36, "end": 654.6, "text": " that side A received their confirmation.", "tokens": [50364, 1396, 264, 11522, 643, 281, 2845, 257, 21871, 300, 436, 4613, 264, 3636, 281, 2690, 570, 50622, 50622, 1293, 4881, 295, 341, 10997, 643, 281, 2690, 16561, 13, 50822, 50822, 400, 498, 436, 500, 380, 1293, 362, 257, 19331, 1602, 1393, 281, 2690, 412, 264, 912, 565, 11, 550, 436, 51102, 51102, 643, 281, 818, 766, 264, 2690, 13, 51166, 51166, 407, 436, 393, 787, 360, 309, 498, 436, 483, 21871, 13, 51281, 51281, 407, 264, 472, 1252, 11, 1252, 316, 2203, 21871, 300, 1252, 363, 11, 457, 550, 1252, 363, 2203, 21871, 51652, 51652, 300, 1252, 316, 4613, 641, 21871, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.11919208742537589, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.300698295381153e-05}, {"id": 173, "seek": 65460, "start": 654.6, "end": 656.32, "text": " There's no resolution.", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 174, "seek": 65460, "start": 656.32, "end": 657.32, "text": " It's a mess.", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 175, "seek": 65460, "start": 657.32, "end": 658.78, "text": " There's no way to solve that problem.", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 176, "seek": 65460, "start": 658.78, "end": 664.4, "text": " So there are certain conceptual limits to these things, but we kind of discussed that", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 177, "seek": 65460, "start": 664.4, "end": 668.44, "text": " in the Elm GraphQL episode that there are ways to get around that.", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 178, "seek": 65460, "start": 668.44, "end": 670.88, "text": " But yeah, those are some tricky problems.", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 179, "seek": 65460, "start": 670.88, "end": 677.9200000000001, "text": " But anywhere that you're able to sort of control the serialization format in your Elm code,", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 180, "seek": 65460, "start": 677.9200000000001, "end": 684.1600000000001, "text": " whether that's Elm running on a serverless function and then being serialized in a serverless", "tokens": [50364, 821, 311, 572, 8669, 13, 50450, 50450, 467, 311, 257, 2082, 13, 50500, 50500, 821, 311, 572, 636, 281, 5039, 300, 1154, 13, 50573, 50573, 407, 456, 366, 1629, 24106, 10406, 281, 613, 721, 11, 457, 321, 733, 295, 7152, 300, 50854, 50854, 294, 264, 2699, 76, 21884, 13695, 3500, 300, 456, 366, 2098, 281, 483, 926, 300, 13, 51056, 51056, 583, 1338, 11, 729, 366, 512, 12414, 2740, 13, 51178, 51178, 583, 4992, 300, 291, 434, 1075, 281, 1333, 295, 1969, 264, 17436, 2144, 7877, 294, 428, 2699, 76, 3089, 11, 51530, 51530, 1968, 300, 311, 2699, 76, 2614, 322, 257, 7154, 1832, 2445, 293, 550, 885, 17436, 1602, 294, 257, 7154, 1832, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1268511465040304, "compression_ratio": 1.7067669172932332, "no_caption_prob": 1.6701005733921193e-05}, {"id": 181, "seek": 68416, "start": 684.16, "end": 691.56, "text": " function run by Elm, and then a shared code base that deserializes it on the client side", "tokens": [50364, 2445, 1190, 538, 2699, 76, 11, 293, 550, 257, 5507, 3089, 3096, 300, 730, 260, 831, 5660, 309, 322, 264, 6423, 1252, 50734, 50734, 294, 257, 11185, 294, 2699, 76, 11, 300, 912, 3410, 13165, 300, 291, 1969, 264, 7877, 294, 257, 5507, 2699, 76, 51034, 51034, 3089, 3096, 13, 51084, 51084, 407, 820, 321, 483, 666, 264, 544, 1333, 295, 9942, 9362, 295, 437, 291, 393, 360, 365, 2829, 11607, 2699, 76, 3089, 66, 30, 51530, 51530, 865, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.13799400556655156, "compression_ratio": 1.547872340425532, "no_caption_prob": 3.905462563125184e-06}, {"id": 182, "seek": 68416, "start": 691.56, "end": 697.56, "text": " in a browser in Elm, that same concept applies that you control the format in a shared Elm", "tokens": [50364, 2445, 1190, 538, 2699, 76, 11, 293, 550, 257, 5507, 3089, 3096, 300, 730, 260, 831, 5660, 309, 322, 264, 6423, 1252, 50734, 50734, 294, 257, 11185, 294, 2699, 76, 11, 300, 912, 3410, 13165, 300, 291, 1969, 264, 7877, 294, 257, 5507, 2699, 76, 51034, 51034, 3089, 3096, 13, 51084, 51084, 407, 820, 321, 483, 666, 264, 544, 1333, 295, 9942, 9362, 295, 437, 291, 393, 360, 365, 2829, 11607, 2699, 76, 3089, 66, 30, 51530, 51530, 865, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.13799400556655156, "compression_ratio": 1.547872340425532, "no_caption_prob": 3.905462563125184e-06}, {"id": 183, "seek": 68416, "start": 697.56, "end": 698.56, "text": " code base.", "tokens": [50364, 2445, 1190, 538, 2699, 76, 11, 293, 550, 257, 5507, 3089, 3096, 300, 730, 260, 831, 5660, 309, 322, 264, 6423, 1252, 50734, 50734, 294, 257, 11185, 294, 2699, 76, 11, 300, 912, 3410, 13165, 300, 291, 1969, 264, 7877, 294, 257, 5507, 2699, 76, 51034, 51034, 3089, 3096, 13, 51084, 51084, 407, 820, 321, 483, 666, 264, 544, 1333, 295, 9942, 9362, 295, 437, 291, 393, 360, 365, 2829, 11607, 2699, 76, 3089, 66, 30, 51530, 51530, 865, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.13799400556655156, "compression_ratio": 1.547872340425532, "no_caption_prob": 3.905462563125184e-06}, {"id": 184, "seek": 68416, "start": 698.56, "end": 707.48, "text": " So should we get into the more sort of detailed API of what you can do with Minibil Elm codec?", "tokens": [50364, 2445, 1190, 538, 2699, 76, 11, 293, 550, 257, 5507, 3089, 3096, 300, 730, 260, 831, 5660, 309, 322, 264, 6423, 1252, 50734, 50734, 294, 257, 11185, 294, 2699, 76, 11, 300, 912, 3410, 13165, 300, 291, 1969, 264, 7877, 294, 257, 5507, 2699, 76, 51034, 51034, 3089, 3096, 13, 51084, 51084, 407, 820, 321, 483, 666, 264, 544, 1333, 295, 9942, 9362, 295, 437, 291, 393, 360, 365, 2829, 11607, 2699, 76, 3089, 66, 30, 51530, 51530, 865, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.13799400556655156, "compression_ratio": 1.547872340425532, "no_caption_prob": 3.905462563125184e-06}, {"id": 185, "seek": 68416, "start": 707.48, "end": 708.48, "text": " Yeah.", "tokens": [50364, 2445, 1190, 538, 2699, 76, 11, 293, 550, 257, 5507, 3089, 3096, 300, 730, 260, 831, 5660, 309, 322, 264, 6423, 1252, 50734, 50734, 294, 257, 11185, 294, 2699, 76, 11, 300, 912, 3410, 13165, 300, 291, 1969, 264, 7877, 294, 257, 5507, 2699, 76, 51034, 51034, 3089, 3096, 13, 51084, 51084, 407, 820, 321, 483, 666, 264, 544, 1333, 295, 9942, 9362, 295, 437, 291, 393, 360, 365, 2829, 11607, 2699, 76, 3089, 66, 30, 51530, 51530, 865, 13, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.13799400556655156, "compression_ratio": 1.547872340425532, "no_caption_prob": 3.905462563125184e-06}, {"id": 186, "seek": 70848, "start": 708.48, "end": 715.52, "text": " So like, I mean, first of all, the simplest thing you could imagine doing is just doing", "tokens": [50364, 407, 411, 11, 286, 914, 11, 700, 295, 439, 11, 264, 22811, 551, 291, 727, 3811, 884, 307, 445, 884, 50716, 50716, 257, 3089, 66, 337, 257, 6798, 11, 558, 30, 50908, 50908, 407, 498, 291, 445, 360, 3089, 66, 13, 37045, 11, 586, 291, 362, 746, 300, 3255, 286, 393, 483, 257, 979, 19866, 337, 51302, 51302, 341, 11, 597, 307, 361, 3015, 13, 1479, 22332, 13, 37045, 833, 264, 13376, 11, 293, 286, 393, 483, 364, 2058, 19866, 490, 341, 11, 51546, 51546, 597, 307, 2058, 1429, 13, 37045, 13, 51658, 51658, 407, 309, 5965, 2837, 295, 300, 1589, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.13663374702885467, "compression_ratio": 1.7401960784313726, "no_caption_prob": 6.0139005654491484e-05}, {"id": 187, "seek": 70848, "start": 715.52, "end": 719.36, "text": " a codec for a string, right?", "tokens": [50364, 407, 411, 11, 286, 914, 11, 700, 295, 439, 11, 264, 22811, 551, 291, 727, 3811, 884, 307, 445, 884, 50716, 50716, 257, 3089, 66, 337, 257, 6798, 11, 558, 30, 50908, 50908, 407, 498, 291, 445, 360, 3089, 66, 13, 37045, 11, 586, 291, 362, 746, 300, 3255, 286, 393, 483, 257, 979, 19866, 337, 51302, 51302, 341, 11, 597, 307, 361, 3015, 13, 1479, 22332, 13, 37045, 833, 264, 13376, 11, 293, 286, 393, 483, 364, 2058, 19866, 490, 341, 11, 51546, 51546, 597, 307, 2058, 1429, 13, 37045, 13, 51658, 51658, 407, 309, 5965, 2837, 295, 300, 1589, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.13663374702885467, "compression_ratio": 1.7401960784313726, "no_caption_prob": 6.0139005654491484e-05}, {"id": 188, "seek": 70848, "start": 719.36, "end": 727.24, "text": " So if you just do codec.string, now you have something that knows I can get a decoder for", "tokens": [50364, 407, 411, 11, 286, 914, 11, 700, 295, 439, 11, 264, 22811, 551, 291, 727, 3811, 884, 307, 445, 884, 50716, 50716, 257, 3089, 66, 337, 257, 6798, 11, 558, 30, 50908, 50908, 407, 498, 291, 445, 360, 3089, 66, 13, 37045, 11, 586, 291, 362, 746, 300, 3255, 286, 393, 483, 257, 979, 19866, 337, 51302, 51302, 341, 11, 597, 307, 361, 3015, 13, 1479, 22332, 13, 37045, 833, 264, 13376, 11, 293, 286, 393, 483, 364, 2058, 19866, 490, 341, 11, 51546, 51546, 597, 307, 2058, 1429, 13, 37045, 13, 51658, 51658, 407, 309, 5965, 2837, 295, 300, 1589, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.13663374702885467, "compression_ratio": 1.7401960784313726, "no_caption_prob": 6.0139005654491484e-05}, {"id": 189, "seek": 70848, "start": 727.24, "end": 732.12, "text": " this, which is json.decode.string under the hood, and I can get an encoder from this,", "tokens": [50364, 407, 411, 11, 286, 914, 11, 700, 295, 439, 11, 264, 22811, 551, 291, 727, 3811, 884, 307, 445, 884, 50716, 50716, 257, 3089, 66, 337, 257, 6798, 11, 558, 30, 50908, 50908, 407, 498, 291, 445, 360, 3089, 66, 13, 37045, 11, 586, 291, 362, 746, 300, 3255, 286, 393, 483, 257, 979, 19866, 337, 51302, 51302, 341, 11, 597, 307, 361, 3015, 13, 1479, 22332, 13, 37045, 833, 264, 13376, 11, 293, 286, 393, 483, 364, 2058, 19866, 490, 341, 11, 51546, 51546, 597, 307, 2058, 1429, 13, 37045, 13, 51658, 51658, 407, 309, 5965, 2837, 295, 300, 1589, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.13663374702885467, "compression_ratio": 1.7401960784313726, "no_caption_prob": 6.0139005654491484e-05}, {"id": 190, "seek": 70848, "start": 732.12, "end": 734.36, "text": " which is encode.string.", "tokens": [50364, 407, 411, 11, 286, 914, 11, 700, 295, 439, 11, 264, 22811, 551, 291, 727, 3811, 884, 307, 445, 884, 50716, 50716, 257, 3089, 66, 337, 257, 6798, 11, 558, 30, 50908, 50908, 407, 498, 291, 445, 360, 3089, 66, 13, 37045, 11, 586, 291, 362, 746, 300, 3255, 286, 393, 483, 257, 979, 19866, 337, 51302, 51302, 341, 11, 597, 307, 361, 3015, 13, 1479, 22332, 13, 37045, 833, 264, 13376, 11, 293, 286, 393, 483, 364, 2058, 19866, 490, 341, 11, 51546, 51546, 597, 307, 2058, 1429, 13, 37045, 13, 51658, 51658, 407, 309, 5965, 2837, 295, 300, 1589, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.13663374702885467, "compression_ratio": 1.7401960784313726, "no_caption_prob": 6.0139005654491484e-05}, {"id": 191, "seek": 70848, "start": 734.36, "end": 737.36, "text": " So it keeps track of that information.", "tokens": [50364, 407, 411, 11, 286, 914, 11, 700, 295, 439, 11, 264, 22811, 551, 291, 727, 3811, 884, 307, 445, 884, 50716, 50716, 257, 3089, 66, 337, 257, 6798, 11, 558, 30, 50908, 50908, 407, 498, 291, 445, 360, 3089, 66, 13, 37045, 11, 586, 291, 362, 746, 300, 3255, 286, 393, 483, 257, 979, 19866, 337, 51302, 51302, 341, 11, 597, 307, 361, 3015, 13, 1479, 22332, 13, 37045, 833, 264, 13376, 11, 293, 286, 393, 483, 364, 2058, 19866, 490, 341, 11, 51546, 51546, 597, 307, 2058, 1429, 13, 37045, 13, 51658, 51658, 407, 309, 5965, 2837, 295, 300, 1589, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.13663374702885467, "compression_ratio": 1.7401960784313726, "no_caption_prob": 6.0139005654491484e-05}, {"id": 192, "seek": 73736, "start": 737.36, "end": 740.08, "text": " And you got one for every basic type.", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 193, "seek": 73736, "start": 740.08, "end": 743.6800000000001, "text": " You got audience, you got floats, ints, characters.", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 194, "seek": 73736, "start": 743.6800000000001, "end": 744.6800000000001, "text": " Yeah.", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 195, "seek": 73736, "start": 744.6800000000001, "end": 751.64, "text": " So if it was as simple as, you know, if you were only dealing with built in Elm types,", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 196, "seek": 73736, "start": 751.64, "end": 757.6, "text": " you know, string, bool, int, float, and then maybes and lists of those, or even dicts and", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 197, "seek": 73736, "start": 757.6, "end": 763.04, "text": " sets and tuples, if that was all you were doing, then you wouldn't have to do very much", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 198, "seek": 73736, "start": 763.04, "end": 764.04, "text": " work.", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 199, "seek": 73736, "start": 764.04, "end": 765.6800000000001, "text": " You pretty much get all of that for free.", "tokens": [50364, 400, 291, 658, 472, 337, 633, 3875, 2010, 13, 50500, 50500, 509, 658, 4034, 11, 291, 658, 37878, 11, 560, 82, 11, 4342, 13, 50680, 50680, 865, 13, 50730, 50730, 407, 498, 309, 390, 382, 2199, 382, 11, 291, 458, 11, 498, 291, 645, 787, 6260, 365, 3094, 294, 2699, 76, 3467, 11, 51078, 51078, 291, 458, 11, 6798, 11, 748, 401, 11, 560, 11, 15706, 11, 293, 550, 815, 6446, 293, 14511, 295, 729, 11, 420, 754, 12569, 82, 293, 51376, 51376, 6352, 293, 2604, 2622, 11, 498, 300, 390, 439, 291, 645, 884, 11, 550, 291, 2759, 380, 362, 281, 360, 588, 709, 51648, 51648, 589, 13, 51698, 51698, 509, 1238, 709, 483, 439, 295, 300, 337, 1737, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.14754130554199218, "compression_ratio": 1.7215189873417722, "no_caption_prob": 5.143828093423508e-05}, {"id": 200, "seek": 76568, "start": 765.68, "end": 769.0799999999999, "text": " You just say this is a list of strings.", "tokens": [50364, 509, 445, 584, 341, 307, 257, 1329, 295, 13985, 13, 50534, 50534, 639, 307, 257, 1329, 295, 560, 82, 420, 2035, 11, 293, 309, 311, 445, 516, 281, 589, 13, 50750, 50750, 821, 311, 572, 2857, 4630, 337, 291, 281, 6786, 577, 281, 17436, 1125, 293, 730, 260, 831, 1125, 570, 309, 51042, 51042, 3255, 577, 281, 2058, 1429, 309, 666, 257, 1329, 295, 13985, 11, 293, 309, 3255, 577, 281, 979, 1429, 300, 666, 257, 1329, 51360, 51360, 295, 13985, 13, 51412, 51412, 583, 1564, 291, 483, 666, 721, 411, 6565, 11, 586, 300, 3643, 257, 707, 544, 38015, 570, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.09424921671549479, "compression_ratio": 1.8605769230769231, "no_caption_prob": 1.184292614198057e-05}, {"id": 201, "seek": 76568, "start": 769.0799999999999, "end": 773.4, "text": " This is a list of ints or whatever, and it's just going to work.", "tokens": [50364, 509, 445, 584, 341, 307, 257, 1329, 295, 13985, 13, 50534, 50534, 639, 307, 257, 1329, 295, 560, 82, 420, 2035, 11, 293, 309, 311, 445, 516, 281, 589, 13, 50750, 50750, 821, 311, 572, 2857, 4630, 337, 291, 281, 6786, 577, 281, 17436, 1125, 293, 730, 260, 831, 1125, 570, 309, 51042, 51042, 3255, 577, 281, 2058, 1429, 309, 666, 257, 1329, 295, 13985, 11, 293, 309, 3255, 577, 281, 979, 1429, 300, 666, 257, 1329, 51360, 51360, 295, 13985, 13, 51412, 51412, 583, 1564, 291, 483, 666, 721, 411, 6565, 11, 586, 300, 3643, 257, 707, 544, 38015, 570, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.09424921671549479, "compression_ratio": 1.8605769230769231, "no_caption_prob": 1.184292614198057e-05}, {"id": 202, "seek": 76568, "start": 773.4, "end": 779.2399999999999, "text": " There's no extra effort for you to describe how to serialize and deserialize because it", "tokens": [50364, 509, 445, 584, 341, 307, 257, 1329, 295, 13985, 13, 50534, 50534, 639, 307, 257, 1329, 295, 560, 82, 420, 2035, 11, 293, 309, 311, 445, 516, 281, 589, 13, 50750, 50750, 821, 311, 572, 2857, 4630, 337, 291, 281, 6786, 577, 281, 17436, 1125, 293, 730, 260, 831, 1125, 570, 309, 51042, 51042, 3255, 577, 281, 2058, 1429, 309, 666, 257, 1329, 295, 13985, 11, 293, 309, 3255, 577, 281, 979, 1429, 300, 666, 257, 1329, 51360, 51360, 295, 13985, 13, 51412, 51412, 583, 1564, 291, 483, 666, 721, 411, 6565, 11, 586, 300, 3643, 257, 707, 544, 38015, 570, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.09424921671549479, "compression_ratio": 1.8605769230769231, "no_caption_prob": 1.184292614198057e-05}, {"id": 203, "seek": 76568, "start": 779.2399999999999, "end": 785.5999999999999, "text": " knows how to encode it into a list of strings, and it knows how to decode that into a list", "tokens": [50364, 509, 445, 584, 341, 307, 257, 1329, 295, 13985, 13, 50534, 50534, 639, 307, 257, 1329, 295, 560, 82, 420, 2035, 11, 293, 309, 311, 445, 516, 281, 589, 13, 50750, 50750, 821, 311, 572, 2857, 4630, 337, 291, 281, 6786, 577, 281, 17436, 1125, 293, 730, 260, 831, 1125, 570, 309, 51042, 51042, 3255, 577, 281, 2058, 1429, 309, 666, 257, 1329, 295, 13985, 11, 293, 309, 3255, 577, 281, 979, 1429, 300, 666, 257, 1329, 51360, 51360, 295, 13985, 13, 51412, 51412, 583, 1564, 291, 483, 666, 721, 411, 6565, 11, 586, 300, 3643, 257, 707, 544, 38015, 570, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.09424921671549479, "compression_ratio": 1.8605769230769231, "no_caption_prob": 1.184292614198057e-05}, {"id": 204, "seek": 76568, "start": 785.5999999999999, "end": 786.64, "text": " of strings.", "tokens": [50364, 509, 445, 584, 341, 307, 257, 1329, 295, 13985, 13, 50534, 50534, 639, 307, 257, 1329, 295, 560, 82, 420, 2035, 11, 293, 309, 311, 445, 516, 281, 589, 13, 50750, 50750, 821, 311, 572, 2857, 4630, 337, 291, 281, 6786, 577, 281, 17436, 1125, 293, 730, 260, 831, 1125, 570, 309, 51042, 51042, 3255, 577, 281, 2058, 1429, 309, 666, 257, 1329, 295, 13985, 11, 293, 309, 3255, 577, 281, 979, 1429, 300, 666, 257, 1329, 51360, 51360, 295, 13985, 13, 51412, 51412, 583, 1564, 291, 483, 666, 721, 411, 6565, 11, 586, 300, 3643, 257, 707, 544, 38015, 570, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.09424921671549479, "compression_ratio": 1.8605769230769231, "no_caption_prob": 1.184292614198057e-05}, {"id": 205, "seek": 76568, "start": 786.64, "end": 793.8, "text": " But once you get into things like objects, now that becomes a little more intricate because", "tokens": [50364, 509, 445, 584, 341, 307, 257, 1329, 295, 13985, 13, 50534, 50534, 639, 307, 257, 1329, 295, 560, 82, 420, 2035, 11, 293, 309, 311, 445, 516, 281, 589, 13, 50750, 50750, 821, 311, 572, 2857, 4630, 337, 291, 281, 6786, 577, 281, 17436, 1125, 293, 730, 260, 831, 1125, 570, 309, 51042, 51042, 3255, 577, 281, 2058, 1429, 309, 666, 257, 1329, 295, 13985, 11, 293, 309, 3255, 577, 281, 979, 1429, 300, 666, 257, 1329, 51360, 51360, 295, 13985, 13, 51412, 51412, 583, 1564, 291, 483, 666, 721, 411, 6565, 11, 586, 300, 3643, 257, 707, 544, 38015, 570, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.09424921671549479, "compression_ratio": 1.8605769230769231, "no_caption_prob": 1.184292614198057e-05}, {"id": 206, "seek": 79380, "start": 793.8, "end": 801.04, "text": " now if you're building an object, if you're turning that object into a record on the decode", "tokens": [50364, 586, 498, 291, 434, 2390, 364, 2657, 11, 498, 291, 434, 6246, 300, 2657, 666, 257, 2136, 322, 264, 979, 1429, 50726, 50726, 1252, 11, 322, 264, 2699, 76, 1252, 11, 550, 291, 643, 281, 550, 980, 309, 577, 281, 1888, 4936, 300, 2519, 490, 51146, 51146, 257, 2136, 11, 420, 309, 815, 406, 312, 257, 2136, 13, 51272, 51272, 467, 815, 312, 512, 661, 1412, 2010, 11, 457, 291, 643, 281, 980, 309, 577, 281, 4444, 300, 2519, 370, 309, 393, 51561, 51561, 2058, 1429, 309, 562, 309, 311, 43430, 300, 2158, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.15215799759845344, "compression_ratio": 1.8253968253968254, "no_caption_prob": 1.6442376363556832e-05}, {"id": 207, "seek": 79380, "start": 801.04, "end": 809.4399999999999, "text": " side, on the Elm side, then you need to then tell it how to pick apart that field from", "tokens": [50364, 586, 498, 291, 434, 2390, 364, 2657, 11, 498, 291, 434, 6246, 300, 2657, 666, 257, 2136, 322, 264, 979, 1429, 50726, 50726, 1252, 11, 322, 264, 2699, 76, 1252, 11, 550, 291, 643, 281, 550, 980, 309, 577, 281, 1888, 4936, 300, 2519, 490, 51146, 51146, 257, 2136, 11, 420, 309, 815, 406, 312, 257, 2136, 13, 51272, 51272, 467, 815, 312, 512, 661, 1412, 2010, 11, 457, 291, 643, 281, 980, 309, 577, 281, 4444, 300, 2519, 370, 309, 393, 51561, 51561, 2058, 1429, 309, 562, 309, 311, 43430, 300, 2158, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.15215799759845344, "compression_ratio": 1.8253968253968254, "no_caption_prob": 1.6442376363556832e-05}, {"id": 208, "seek": 79380, "start": 809.4399999999999, "end": 811.9599999999999, "text": " a record, or it may not be a record.", "tokens": [50364, 586, 498, 291, 434, 2390, 364, 2657, 11, 498, 291, 434, 6246, 300, 2657, 666, 257, 2136, 322, 264, 979, 1429, 50726, 50726, 1252, 11, 322, 264, 2699, 76, 1252, 11, 550, 291, 643, 281, 550, 980, 309, 577, 281, 1888, 4936, 300, 2519, 490, 51146, 51146, 257, 2136, 11, 420, 309, 815, 406, 312, 257, 2136, 13, 51272, 51272, 467, 815, 312, 512, 661, 1412, 2010, 11, 457, 291, 643, 281, 980, 309, 577, 281, 4444, 300, 2519, 370, 309, 393, 51561, 51561, 2058, 1429, 309, 562, 309, 311, 43430, 300, 2158, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.15215799759845344, "compression_ratio": 1.8253968253968254, "no_caption_prob": 1.6442376363556832e-05}, {"id": 209, "seek": 79380, "start": 811.9599999999999, "end": 817.74, "text": " It may be some other data type, but you need to tell it how to grab that field so it can", "tokens": [50364, 586, 498, 291, 434, 2390, 364, 2657, 11, 498, 291, 434, 6246, 300, 2657, 666, 257, 2136, 322, 264, 979, 1429, 50726, 50726, 1252, 11, 322, 264, 2699, 76, 1252, 11, 550, 291, 643, 281, 550, 980, 309, 577, 281, 1888, 4936, 300, 2519, 490, 51146, 51146, 257, 2136, 11, 420, 309, 815, 406, 312, 257, 2136, 13, 51272, 51272, 467, 815, 312, 512, 661, 1412, 2010, 11, 457, 291, 643, 281, 980, 309, 577, 281, 4444, 300, 2519, 370, 309, 393, 51561, 51561, 2058, 1429, 309, 562, 309, 311, 43430, 300, 2158, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.15215799759845344, "compression_ratio": 1.8253968253968254, "no_caption_prob": 1.6442376363556832e-05}, {"id": 210, "seek": 79380, "start": 817.74, "end": 820.28, "text": " encode it when it's encoding that value.", "tokens": [50364, 586, 498, 291, 434, 2390, 364, 2657, 11, 498, 291, 434, 6246, 300, 2657, 666, 257, 2136, 322, 264, 979, 1429, 50726, 50726, 1252, 11, 322, 264, 2699, 76, 1252, 11, 550, 291, 643, 281, 550, 980, 309, 577, 281, 1888, 4936, 300, 2519, 490, 51146, 51146, 257, 2136, 11, 420, 309, 815, 406, 312, 257, 2136, 13, 51272, 51272, 467, 815, 312, 512, 661, 1412, 2010, 11, 457, 291, 643, 281, 980, 309, 577, 281, 4444, 300, 2519, 370, 309, 393, 51561, 51561, 2058, 1429, 309, 562, 309, 311, 43430, 300, 2158, 13, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.15215799759845344, "compression_ratio": 1.8253968253968254, "no_caption_prob": 1.6442376363556832e-05}, {"id": 211, "seek": 82028, "start": 820.28, "end": 826.8, "text": " Yeah, and it doesn't really have to look just the same on Elm and JavaScript.", "tokens": [50364, 865, 11, 293, 309, 1177, 380, 534, 362, 281, 574, 445, 264, 912, 322, 2699, 76, 293, 15778, 13, 50690, 50690, 407, 291, 393, 362, 257, 2136, 322, 264, 2699, 76, 1252, 293, 362, 364, 10225, 322, 264, 15778, 1252, 498, 291, 51010, 51010, 853, 281, 19719, 309, 472, 636, 420, 1071, 13, 51123, 51123, 509, 727, 360, 309, 411, 300, 498, 291, 1415, 281, 13, 51306, 51306, 1664, 291, 360, 300, 365, 264, 2699, 76, 3089, 66, 30, 51395, 51395, 509, 914, 1228, 3089, 66, 13, 41070, 30, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.16879595479657572, "compression_ratio": 1.6020408163265305, "no_caption_prob": 2.546574432926718e-05}, {"id": 212, "seek": 82028, "start": 826.8, "end": 833.1999999999999, "text": " So you can have a record on the Elm side and have an array on the JavaScript side if you", "tokens": [50364, 865, 11, 293, 309, 1177, 380, 534, 362, 281, 574, 445, 264, 912, 322, 2699, 76, 293, 15778, 13, 50690, 50690, 407, 291, 393, 362, 257, 2136, 322, 264, 2699, 76, 1252, 293, 362, 364, 10225, 322, 264, 15778, 1252, 498, 291, 51010, 51010, 853, 281, 19719, 309, 472, 636, 420, 1071, 13, 51123, 51123, 509, 727, 360, 309, 411, 300, 498, 291, 1415, 281, 13, 51306, 51306, 1664, 291, 360, 300, 365, 264, 2699, 76, 3089, 66, 30, 51395, 51395, 509, 914, 1228, 3089, 66, 13, 41070, 30, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.16879595479657572, "compression_ratio": 1.6020408163265305, "no_caption_prob": 2.546574432926718e-05}, {"id": 213, "seek": 82028, "start": 833.1999999999999, "end": 835.4599999999999, "text": " try to optimize it one way or another.", "tokens": [50364, 865, 11, 293, 309, 1177, 380, 534, 362, 281, 574, 445, 264, 912, 322, 2699, 76, 293, 15778, 13, 50690, 50690, 407, 291, 393, 362, 257, 2136, 322, 264, 2699, 76, 1252, 293, 362, 364, 10225, 322, 264, 15778, 1252, 498, 291, 51010, 51010, 853, 281, 19719, 309, 472, 636, 420, 1071, 13, 51123, 51123, 509, 727, 360, 309, 411, 300, 498, 291, 1415, 281, 13, 51306, 51306, 1664, 291, 360, 300, 365, 264, 2699, 76, 3089, 66, 30, 51395, 51395, 509, 914, 1228, 3089, 66, 13, 41070, 30, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.16879595479657572, "compression_ratio": 1.6020408163265305, "no_caption_prob": 2.546574432926718e-05}, {"id": 214, "seek": 82028, "start": 835.4599999999999, "end": 839.12, "text": " You could do it like that if you wanted to.", "tokens": [50364, 865, 11, 293, 309, 1177, 380, 534, 362, 281, 574, 445, 264, 912, 322, 2699, 76, 293, 15778, 13, 50690, 50690, 407, 291, 393, 362, 257, 2136, 322, 264, 2699, 76, 1252, 293, 362, 364, 10225, 322, 264, 15778, 1252, 498, 291, 51010, 51010, 853, 281, 19719, 309, 472, 636, 420, 1071, 13, 51123, 51123, 509, 727, 360, 309, 411, 300, 498, 291, 1415, 281, 13, 51306, 51306, 1664, 291, 360, 300, 365, 264, 2699, 76, 3089, 66, 30, 51395, 51395, 509, 914, 1228, 3089, 66, 13, 41070, 30, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.16879595479657572, "compression_ratio": 1.6020408163265305, "no_caption_prob": 2.546574432926718e-05}, {"id": 215, "seek": 82028, "start": 839.12, "end": 840.9, "text": " Can you do that with the Elm codec?", "tokens": [50364, 865, 11, 293, 309, 1177, 380, 534, 362, 281, 574, 445, 264, 912, 322, 2699, 76, 293, 15778, 13, 50690, 50690, 407, 291, 393, 362, 257, 2136, 322, 264, 2699, 76, 1252, 293, 362, 364, 10225, 322, 264, 15778, 1252, 498, 291, 51010, 51010, 853, 281, 19719, 309, 472, 636, 420, 1071, 13, 51123, 51123, 509, 727, 360, 309, 411, 300, 498, 291, 1415, 281, 13, 51306, 51306, 1664, 291, 360, 300, 365, 264, 2699, 76, 3089, 66, 30, 51395, 51395, 509, 914, 1228, 3089, 66, 13, 41070, 30, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.16879595479657572, "compression_ratio": 1.6020408163265305, "no_caption_prob": 2.546574432926718e-05}, {"id": 216, "seek": 82028, "start": 840.9, "end": 842.56, "text": " You mean using codec.object?", "tokens": [50364, 865, 11, 293, 309, 1177, 380, 534, 362, 281, 574, 445, 264, 912, 322, 2699, 76, 293, 15778, 13, 50690, 50690, 407, 291, 393, 362, 257, 2136, 322, 264, 2699, 76, 1252, 293, 362, 364, 10225, 322, 264, 15778, 1252, 498, 291, 51010, 51010, 853, 281, 19719, 309, 472, 636, 420, 1071, 13, 51123, 51123, 509, 727, 360, 309, 411, 300, 498, 291, 1415, 281, 13, 51306, 51306, 1664, 291, 360, 300, 365, 264, 2699, 76, 3089, 66, 30, 51395, 51395, 509, 914, 1228, 3089, 66, 13, 41070, 30, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.16879595479657572, "compression_ratio": 1.6020408163265305, "no_caption_prob": 2.546574432926718e-05}, {"id": 217, "seek": 84256, "start": 842.56, "end": 852.7199999999999, "text": " Yeah, because your codec.object takes a constructor just like decode.succeed.", "tokens": [50364, 865, 11, 570, 428, 3089, 66, 13, 41070, 2516, 257, 47479, 445, 411, 979, 1429, 13, 82, 1311, 4357, 13, 50872, 50872, 3013, 576, 5850, 312, 257, 2136, 47479, 300, 561, 576, 1320, 294, 456, 11, 457, 309, 393, 51118, 51118, 312, 604, 2445, 300, 2516, 729, 1412, 3467, 13, 51312, 51312, 400, 550, 291, 764, 264, 27377, 5102, 689, 291, 584, 3089, 66, 13, 7610, 293, 550, 264, 1315, 295, 264, 51734, 51734, 2519, 294, 15778, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18205318218324243, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.321345502627082e-05}, {"id": 218, "seek": 84256, "start": 852.7199999999999, "end": 857.64, "text": " Which would typically be a record constructor that people would pass in there, but it can", "tokens": [50364, 865, 11, 570, 428, 3089, 66, 13, 41070, 2516, 257, 47479, 445, 411, 979, 1429, 13, 82, 1311, 4357, 13, 50872, 50872, 3013, 576, 5850, 312, 257, 2136, 47479, 300, 561, 576, 1320, 294, 456, 11, 457, 309, 393, 51118, 51118, 312, 604, 2445, 300, 2516, 729, 1412, 3467, 13, 51312, 51312, 400, 550, 291, 764, 264, 27377, 5102, 689, 291, 584, 3089, 66, 13, 7610, 293, 550, 264, 1315, 295, 264, 51734, 51734, 2519, 294, 15778, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18205318218324243, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.321345502627082e-05}, {"id": 219, "seek": 84256, "start": 857.64, "end": 861.52, "text": " be any function that takes those data types.", "tokens": [50364, 865, 11, 570, 428, 3089, 66, 13, 41070, 2516, 257, 47479, 445, 411, 979, 1429, 13, 82, 1311, 4357, 13, 50872, 50872, 3013, 576, 5850, 312, 257, 2136, 47479, 300, 561, 576, 1320, 294, 456, 11, 457, 309, 393, 51118, 51118, 312, 604, 2445, 300, 2516, 729, 1412, 3467, 13, 51312, 51312, 400, 550, 291, 764, 264, 27377, 5102, 689, 291, 584, 3089, 66, 13, 7610, 293, 550, 264, 1315, 295, 264, 51734, 51734, 2519, 294, 15778, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18205318218324243, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.321345502627082e-05}, {"id": 220, "seek": 84256, "start": 861.52, "end": 869.9599999999999, "text": " And then you use the builder pattern where you say codec.field and then the name of the", "tokens": [50364, 865, 11, 570, 428, 3089, 66, 13, 41070, 2516, 257, 47479, 445, 411, 979, 1429, 13, 82, 1311, 4357, 13, 50872, 50872, 3013, 576, 5850, 312, 257, 2136, 47479, 300, 561, 576, 1320, 294, 456, 11, 457, 309, 393, 51118, 51118, 312, 604, 2445, 300, 2516, 729, 1412, 3467, 13, 51312, 51312, 400, 550, 291, 764, 264, 27377, 5102, 689, 291, 584, 3089, 66, 13, 7610, 293, 550, 264, 1315, 295, 264, 51734, 51734, 2519, 294, 15778, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18205318218324243, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.321345502627082e-05}, {"id": 221, "seek": 84256, "start": 869.9599999999999, "end": 871.68, "text": " field in JavaScript.", "tokens": [50364, 865, 11, 570, 428, 3089, 66, 13, 41070, 2516, 257, 47479, 445, 411, 979, 1429, 13, 82, 1311, 4357, 13, 50872, 50872, 3013, 576, 5850, 312, 257, 2136, 47479, 300, 561, 576, 1320, 294, 456, 11, 457, 309, 393, 51118, 51118, 312, 604, 2445, 300, 2516, 729, 1412, 3467, 13, 51312, 51312, 400, 550, 291, 764, 264, 27377, 5102, 689, 291, 584, 3089, 66, 13, 7610, 293, 550, 264, 1315, 295, 264, 51734, 51734, 2519, 294, 15778, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.18205318218324243, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.321345502627082e-05}, {"id": 222, "seek": 87168, "start": 871.68, "end": 878.1999999999999, "text": " So in this case, you're saying, I tried to get this field with this name.", "tokens": [50364, 407, 294, 341, 1389, 11, 291, 434, 1566, 11, 286, 3031, 281, 483, 341, 2519, 365, 341, 1315, 13, 50690, 50690, 407, 291, 434, 1566, 291, 727, 1261, 309, 666, 257, 1329, 322, 264, 2699, 76, 1252, 11, 457, 550, 562, 309, 4523, 51074, 51074, 309, 666, 257, 15778, 2657, 11, 3089, 66, 13, 7610, 307, 1009, 516, 281, 1261, 309, 666, 257, 15778, 51334, 51334, 2657, 322, 264, 2058, 1429, 1252, 13, 51448, 51448, 1779, 13, 51498, 51498, 865, 11, 309, 775, 574, 411, 341, 9362, 775, 406, 2089, 291, 281, 360, 341, 11, 437, 286, 848, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14898196470390246, "compression_ratio": 1.676056338028169, "no_caption_prob": 2.1112173271831125e-05}, {"id": 223, "seek": 87168, "start": 878.1999999999999, "end": 885.88, "text": " So you're saying you could turn it into a list on the Elm side, but then when it turns", "tokens": [50364, 407, 294, 341, 1389, 11, 291, 434, 1566, 11, 286, 3031, 281, 483, 341, 2519, 365, 341, 1315, 13, 50690, 50690, 407, 291, 434, 1566, 291, 727, 1261, 309, 666, 257, 1329, 322, 264, 2699, 76, 1252, 11, 457, 550, 562, 309, 4523, 51074, 51074, 309, 666, 257, 15778, 2657, 11, 3089, 66, 13, 7610, 307, 1009, 516, 281, 1261, 309, 666, 257, 15778, 51334, 51334, 2657, 322, 264, 2058, 1429, 1252, 13, 51448, 51448, 1779, 13, 51498, 51498, 865, 11, 309, 775, 574, 411, 341, 9362, 775, 406, 2089, 291, 281, 360, 341, 11, 437, 286, 848, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14898196470390246, "compression_ratio": 1.676056338028169, "no_caption_prob": 2.1112173271831125e-05}, {"id": 224, "seek": 87168, "start": 885.88, "end": 891.0799999999999, "text": " it into a JavaScript object, codec.field is always going to turn it into a JavaScript", "tokens": [50364, 407, 294, 341, 1389, 11, 291, 434, 1566, 11, 286, 3031, 281, 483, 341, 2519, 365, 341, 1315, 13, 50690, 50690, 407, 291, 434, 1566, 291, 727, 1261, 309, 666, 257, 1329, 322, 264, 2699, 76, 1252, 11, 457, 550, 562, 309, 4523, 51074, 51074, 309, 666, 257, 15778, 2657, 11, 3089, 66, 13, 7610, 307, 1009, 516, 281, 1261, 309, 666, 257, 15778, 51334, 51334, 2657, 322, 264, 2058, 1429, 1252, 13, 51448, 51448, 1779, 13, 51498, 51498, 865, 11, 309, 775, 574, 411, 341, 9362, 775, 406, 2089, 291, 281, 360, 341, 11, 437, 286, 848, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14898196470390246, "compression_ratio": 1.676056338028169, "no_caption_prob": 2.1112173271831125e-05}, {"id": 225, "seek": 87168, "start": 891.0799999999999, "end": 893.3599999999999, "text": " object on the encode side.", "tokens": [50364, 407, 294, 341, 1389, 11, 291, 434, 1566, 11, 286, 3031, 281, 483, 341, 2519, 365, 341, 1315, 13, 50690, 50690, 407, 291, 434, 1566, 291, 727, 1261, 309, 666, 257, 1329, 322, 264, 2699, 76, 1252, 11, 457, 550, 562, 309, 4523, 51074, 51074, 309, 666, 257, 15778, 2657, 11, 3089, 66, 13, 7610, 307, 1009, 516, 281, 1261, 309, 666, 257, 15778, 51334, 51334, 2657, 322, 264, 2058, 1429, 1252, 13, 51448, 51448, 1779, 13, 51498, 51498, 865, 11, 309, 775, 574, 411, 341, 9362, 775, 406, 2089, 291, 281, 360, 341, 11, 437, 286, 848, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14898196470390246, "compression_ratio": 1.676056338028169, "no_caption_prob": 2.1112173271831125e-05}, {"id": 226, "seek": 87168, "start": 893.3599999999999, "end": 894.3599999999999, "text": " Right.", "tokens": [50364, 407, 294, 341, 1389, 11, 291, 434, 1566, 11, 286, 3031, 281, 483, 341, 2519, 365, 341, 1315, 13, 50690, 50690, 407, 291, 434, 1566, 291, 727, 1261, 309, 666, 257, 1329, 322, 264, 2699, 76, 1252, 11, 457, 550, 562, 309, 4523, 51074, 51074, 309, 666, 257, 15778, 2657, 11, 3089, 66, 13, 7610, 307, 1009, 516, 281, 1261, 309, 666, 257, 15778, 51334, 51334, 2657, 322, 264, 2058, 1429, 1252, 13, 51448, 51448, 1779, 13, 51498, 51498, 865, 11, 309, 775, 574, 411, 341, 9362, 775, 406, 2089, 291, 281, 360, 341, 11, 437, 286, 848, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14898196470390246, "compression_ratio": 1.676056338028169, "no_caption_prob": 2.1112173271831125e-05}, {"id": 227, "seek": 87168, "start": 894.3599999999999, "end": 899.4, "text": " Yeah, it does look like this API does not allow you to do this, what I said.", "tokens": [50364, 407, 294, 341, 1389, 11, 291, 434, 1566, 11, 286, 3031, 281, 483, 341, 2519, 365, 341, 1315, 13, 50690, 50690, 407, 291, 434, 1566, 291, 727, 1261, 309, 666, 257, 1329, 322, 264, 2699, 76, 1252, 11, 457, 550, 562, 309, 4523, 51074, 51074, 309, 666, 257, 15778, 2657, 11, 3089, 66, 13, 7610, 307, 1009, 516, 281, 1261, 309, 666, 257, 15778, 51334, 51334, 2657, 322, 264, 2058, 1429, 1252, 13, 51448, 51448, 1779, 13, 51498, 51498, 865, 11, 309, 775, 574, 411, 341, 9362, 775, 406, 2089, 291, 281, 360, 341, 11, 437, 286, 848, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.14898196470390246, "compression_ratio": 1.676056338028169, "no_caption_prob": 2.1112173271831125e-05}, {"id": 228, "seek": 89940, "start": 899.4, "end": 904.54, "text": " You could imagine that you encode it differently in JavaScript.", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 229, "seek": 89940, "start": 904.54, "end": 905.54, "text": " That's right.", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 230, "seek": 89940, "start": 905.54, "end": 907.84, "text": " Have you used Elm serialize?", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 231, "seek": 89940, "start": 907.84, "end": 908.84, "text": " Did you try using that?", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 232, "seek": 89940, "start": 908.84, "end": 909.84, "text": " Yeah.", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 233, "seek": 89940, "start": 909.84, "end": 913.6, "text": " Okay, so you want to give a brief intro to that library?", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 234, "seek": 89940, "start": 913.6, "end": 921.52, "text": " Yeah, so I used Martin Stewart's Elm serialize, which was previously called Elm codec bytes,", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 235, "seek": 89940, "start": 921.52, "end": 922.52, "text": " if I remember correctly.", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 236, "seek": 89940, "start": 922.52, "end": 925.12, "text": " Now it's called Elm serialize.", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 237, "seek": 89940, "start": 925.12, "end": 928.56, "text": " So it's basically the same thing as Elm codec, but it doesn't work with JSON.", "tokens": [50364, 509, 727, 3811, 300, 291, 2058, 1429, 309, 7614, 294, 15778, 13, 50621, 50621, 663, 311, 558, 13, 50671, 50671, 3560, 291, 1143, 2699, 76, 17436, 1125, 30, 50786, 50786, 2589, 291, 853, 1228, 300, 30, 50836, 50836, 865, 13, 50886, 50886, 1033, 11, 370, 291, 528, 281, 976, 257, 5353, 12897, 281, 300, 6405, 30, 51074, 51074, 865, 11, 370, 286, 1143, 9184, 25951, 311, 2699, 76, 17436, 1125, 11, 597, 390, 8046, 1219, 2699, 76, 3089, 66, 36088, 11, 51470, 51470, 498, 286, 1604, 8944, 13, 51520, 51520, 823, 309, 311, 1219, 2699, 76, 17436, 1125, 13, 51650, 51650, 407, 309, 311, 1936, 264, 912, 551, 382, 2699, 76, 3089, 66, 11, 457, 309, 1177, 380, 589, 365, 31828, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.19960330781482516, "compression_ratio": 1.5909090909090908, "no_caption_prob": 2.406065277682501e-06}, {"id": 238, "seek": 92856, "start": 928.56, "end": 934.8, "text": " It works with bytes or strings because you can convert it to the ideas that you generate", "tokens": [50364, 467, 1985, 365, 36088, 420, 13985, 570, 291, 393, 7620, 309, 281, 264, 3487, 300, 291, 8460, 50676, 50676, 544, 3389, 11, 31828, 10290, 420, 36088, 13, 50846, 50846, 1779, 11, 570, 291, 500, 380, 1127, 466, 264, 14217, 2010, 300, 311, 1143, 13, 51160, 51160, 509, 445, 1127, 300, 291, 393, 747, 257, 1412, 2010, 294, 2699, 76, 11, 730, 260, 831, 1125, 309, 281, 512, 7877, 11, 597, 51508, 51508, 291, 500, 380, 1127, 437, 300, 7877, 307, 11, 382, 938, 382, 291, 393, 611, 483, 309, 646, 1228, 300, 3089, 66, 51810, 51810, 300, 291, 1322, 493, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14872114998953684, "compression_ratio": 1.675, "no_caption_prob": 1.8631521015777253e-05}, {"id": 239, "seek": 92856, "start": 934.8, "end": 938.1999999999999, "text": " more performance, JSON representation or bytes.", "tokens": [50364, 467, 1985, 365, 36088, 420, 13985, 570, 291, 393, 7620, 309, 281, 264, 3487, 300, 291, 8460, 50676, 50676, 544, 3389, 11, 31828, 10290, 420, 36088, 13, 50846, 50846, 1779, 11, 570, 291, 500, 380, 1127, 466, 264, 14217, 2010, 300, 311, 1143, 13, 51160, 51160, 509, 445, 1127, 300, 291, 393, 747, 257, 1412, 2010, 294, 2699, 76, 11, 730, 260, 831, 1125, 309, 281, 512, 7877, 11, 597, 51508, 51508, 291, 500, 380, 1127, 437, 300, 7877, 307, 11, 382, 938, 382, 291, 393, 611, 483, 309, 646, 1228, 300, 3089, 66, 51810, 51810, 300, 291, 1322, 493, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14872114998953684, "compression_ratio": 1.675, "no_caption_prob": 1.8631521015777253e-05}, {"id": 240, "seek": 92856, "start": 938.1999999999999, "end": 944.4799999999999, "text": " Right, because you don't care about the underlying type that's used.", "tokens": [50364, 467, 1985, 365, 36088, 420, 13985, 570, 291, 393, 7620, 309, 281, 264, 3487, 300, 291, 8460, 50676, 50676, 544, 3389, 11, 31828, 10290, 420, 36088, 13, 50846, 50846, 1779, 11, 570, 291, 500, 380, 1127, 466, 264, 14217, 2010, 300, 311, 1143, 13, 51160, 51160, 509, 445, 1127, 300, 291, 393, 747, 257, 1412, 2010, 294, 2699, 76, 11, 730, 260, 831, 1125, 309, 281, 512, 7877, 11, 597, 51508, 51508, 291, 500, 380, 1127, 437, 300, 7877, 307, 11, 382, 938, 382, 291, 393, 611, 483, 309, 646, 1228, 300, 3089, 66, 51810, 51810, 300, 291, 1322, 493, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14872114998953684, "compression_ratio": 1.675, "no_caption_prob": 1.8631521015777253e-05}, {"id": 241, "seek": 92856, "start": 944.4799999999999, "end": 951.4399999999999, "text": " You just care that you can take a data type in Elm, deserialize it to some format, which", "tokens": [50364, 467, 1985, 365, 36088, 420, 13985, 570, 291, 393, 7620, 309, 281, 264, 3487, 300, 291, 8460, 50676, 50676, 544, 3389, 11, 31828, 10290, 420, 36088, 13, 50846, 50846, 1779, 11, 570, 291, 500, 380, 1127, 466, 264, 14217, 2010, 300, 311, 1143, 13, 51160, 51160, 509, 445, 1127, 300, 291, 393, 747, 257, 1412, 2010, 294, 2699, 76, 11, 730, 260, 831, 1125, 309, 281, 512, 7877, 11, 597, 51508, 51508, 291, 500, 380, 1127, 437, 300, 7877, 307, 11, 382, 938, 382, 291, 393, 611, 483, 309, 646, 1228, 300, 3089, 66, 51810, 51810, 300, 291, 1322, 493, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14872114998953684, "compression_ratio": 1.675, "no_caption_prob": 1.8631521015777253e-05}, {"id": 242, "seek": 92856, "start": 951.4399999999999, "end": 957.4799999999999, "text": " you don't care what that format is, as long as you can also get it back using that codec", "tokens": [50364, 467, 1985, 365, 36088, 420, 13985, 570, 291, 393, 7620, 309, 281, 264, 3487, 300, 291, 8460, 50676, 50676, 544, 3389, 11, 31828, 10290, 420, 36088, 13, 50846, 50846, 1779, 11, 570, 291, 500, 380, 1127, 466, 264, 14217, 2010, 300, 311, 1143, 13, 51160, 51160, 509, 445, 1127, 300, 291, 393, 747, 257, 1412, 2010, 294, 2699, 76, 11, 730, 260, 831, 1125, 309, 281, 512, 7877, 11, 597, 51508, 51508, 291, 500, 380, 1127, 437, 300, 7877, 307, 11, 382, 938, 382, 291, 393, 611, 483, 309, 646, 1228, 300, 3089, 66, 51810, 51810, 300, 291, 1322, 493, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14872114998953684, "compression_ratio": 1.675, "no_caption_prob": 1.8631521015777253e-05}, {"id": 243, "seek": 92856, "start": 957.4799999999999, "end": 958.4799999999999, "text": " that you build up.", "tokens": [50364, 467, 1985, 365, 36088, 420, 13985, 570, 291, 393, 7620, 309, 281, 264, 3487, 300, 291, 8460, 50676, 50676, 544, 3389, 11, 31828, 10290, 420, 36088, 13, 50846, 50846, 1779, 11, 570, 291, 500, 380, 1127, 466, 264, 14217, 2010, 300, 311, 1143, 13, 51160, 51160, 509, 445, 1127, 300, 291, 393, 747, 257, 1412, 2010, 294, 2699, 76, 11, 730, 260, 831, 1125, 309, 281, 512, 7877, 11, 597, 51508, 51508, 291, 500, 380, 1127, 437, 300, 7877, 307, 11, 382, 938, 382, 291, 393, 611, 483, 309, 646, 1228, 300, 3089, 66, 51810, 51810, 300, 291, 1322, 493, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14872114998953684, "compression_ratio": 1.675, "no_caption_prob": 1.8631521015777253e-05}, {"id": 244, "seek": 95848, "start": 958.48, "end": 964.58, "text": " So the use case is like you only want yourself or this code to be able to read it.", "tokens": [50364, 407, 264, 764, 1389, 307, 411, 291, 787, 528, 1803, 420, 341, 3089, 281, 312, 1075, 281, 1401, 309, 13, 50669, 50669, 509, 500, 380, 1127, 466, 264, 1472, 13, 50756, 50756, 400, 562, 291, 434, 294, 300, 764, 1389, 11, 291, 393, 19719, 257, 688, 295, 309, 13, 51001, 51001, 407, 294, 341, 1389, 11, 291, 360, 1261, 721, 666, 411, 364, 10225, 365, 35193, 2602, 295, 2375, 2010, 51354, 51354, 5288, 13, 51434, 51434, 400, 309, 311, 257, 588, 11, 588, 14679, 31828, 2657, 300, 291, 483, 420, 36088, 13, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.11408618092536926, "compression_ratio": 1.572093023255814, "no_caption_prob": 3.0235109079512767e-05}, {"id": 245, "seek": 95848, "start": 964.58, "end": 966.32, "text": " You don't care about the rest.", "tokens": [50364, 407, 264, 764, 1389, 307, 411, 291, 787, 528, 1803, 420, 341, 3089, 281, 312, 1075, 281, 1401, 309, 13, 50669, 50669, 509, 500, 380, 1127, 466, 264, 1472, 13, 50756, 50756, 400, 562, 291, 434, 294, 300, 764, 1389, 11, 291, 393, 19719, 257, 688, 295, 309, 13, 51001, 51001, 407, 294, 341, 1389, 11, 291, 360, 1261, 721, 666, 411, 364, 10225, 365, 35193, 2602, 295, 2375, 2010, 51354, 51354, 5288, 13, 51434, 51434, 400, 309, 311, 257, 588, 11, 588, 14679, 31828, 2657, 300, 291, 483, 420, 36088, 13, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.11408618092536926, "compression_ratio": 1.572093023255814, "no_caption_prob": 3.0235109079512767e-05}, {"id": 246, "seek": 95848, "start": 966.32, "end": 971.22, "text": " And when you're in that use case, you can optimize a lot of it.", "tokens": [50364, 407, 264, 764, 1389, 307, 411, 291, 787, 528, 1803, 420, 341, 3089, 281, 312, 1075, 281, 1401, 309, 13, 50669, 50669, 509, 500, 380, 1127, 466, 264, 1472, 13, 50756, 50756, 400, 562, 291, 434, 294, 300, 764, 1389, 11, 291, 393, 19719, 257, 688, 295, 309, 13, 51001, 51001, 407, 294, 341, 1389, 11, 291, 360, 1261, 721, 666, 411, 364, 10225, 365, 35193, 2602, 295, 2375, 2010, 51354, 51354, 5288, 13, 51434, 51434, 400, 309, 311, 257, 588, 11, 588, 14679, 31828, 2657, 300, 291, 483, 420, 36088, 13, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.11408618092536926, "compression_ratio": 1.572093023255814, "no_caption_prob": 3.0235109079512767e-05}, {"id": 247, "seek": 95848, "start": 971.22, "end": 978.28, "text": " So in this case, you do turn things into like an array with zeros instead of custom type", "tokens": [50364, 407, 264, 764, 1389, 307, 411, 291, 787, 528, 1803, 420, 341, 3089, 281, 312, 1075, 281, 1401, 309, 13, 50669, 50669, 509, 500, 380, 1127, 466, 264, 1472, 13, 50756, 50756, 400, 562, 291, 434, 294, 300, 764, 1389, 11, 291, 393, 19719, 257, 688, 295, 309, 13, 51001, 51001, 407, 294, 341, 1389, 11, 291, 360, 1261, 721, 666, 411, 364, 10225, 365, 35193, 2602, 295, 2375, 2010, 51354, 51354, 5288, 13, 51434, 51434, 400, 309, 311, 257, 588, 11, 588, 14679, 31828, 2657, 300, 291, 483, 420, 36088, 13, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.11408618092536926, "compression_ratio": 1.572093023255814, "no_caption_prob": 3.0235109079512767e-05}, {"id": 248, "seek": 95848, "start": 978.28, "end": 979.88, "text": " names.", "tokens": [50364, 407, 264, 764, 1389, 307, 411, 291, 787, 528, 1803, 420, 341, 3089, 281, 312, 1075, 281, 1401, 309, 13, 50669, 50669, 509, 500, 380, 1127, 466, 264, 1472, 13, 50756, 50756, 400, 562, 291, 434, 294, 300, 764, 1389, 11, 291, 393, 19719, 257, 688, 295, 309, 13, 51001, 51001, 407, 294, 341, 1389, 11, 291, 360, 1261, 721, 666, 411, 364, 10225, 365, 35193, 2602, 295, 2375, 2010, 51354, 51354, 5288, 13, 51434, 51434, 400, 309, 311, 257, 588, 11, 588, 14679, 31828, 2657, 300, 291, 483, 420, 36088, 13, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.11408618092536926, "compression_ratio": 1.572093023255814, "no_caption_prob": 3.0235109079512767e-05}, {"id": 249, "seek": 95848, "start": 979.88, "end": 984.32, "text": " And it's a very, very compact JSON object that you get or bytes.", "tokens": [50364, 407, 264, 764, 1389, 307, 411, 291, 787, 528, 1803, 420, 341, 3089, 281, 312, 1075, 281, 1401, 309, 13, 50669, 50669, 509, 500, 380, 1127, 466, 264, 1472, 13, 50756, 50756, 400, 562, 291, 434, 294, 300, 764, 1389, 11, 291, 393, 19719, 257, 688, 295, 309, 13, 51001, 51001, 407, 294, 341, 1389, 11, 291, 360, 1261, 721, 666, 411, 364, 10225, 365, 35193, 2602, 295, 2375, 2010, 51354, 51354, 5288, 13, 51434, 51434, 400, 309, 311, 257, 588, 11, 588, 14679, 31828, 2657, 300, 291, 483, 420, 36088, 13, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.11408618092536926, "compression_ratio": 1.572093023255814, "no_caption_prob": 3.0235109079512767e-05}, {"id": 250, "seek": 98432, "start": 984.32, "end": 990.1600000000001, "text": " So I use it in Elm review to cache the internal ESCs for files.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 251, "seek": 98432, "start": 990.1600000000001, "end": 991.96, "text": " That saves a lot of disk space.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 252, "seek": 98432, "start": 991.96, "end": 1000.48, "text": " It takes like, I think it saves like 60% of disk space compared to the Elm syntax, original", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 253, "seek": 98432, "start": 1000.48, "end": 1003.0, "text": " decoder and encoder.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 254, "seek": 98432, "start": 1003.0, "end": 1004.6800000000001, "text": " Which is like JSON.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 255, "seek": 98432, "start": 1004.6800000000001, "end": 1006.6400000000001, "text": " Which is JSON and with long fields.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 256, "seek": 98432, "start": 1006.6400000000001, "end": 1009.74, "text": " So that one is meant to be human readable.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 257, "seek": 98432, "start": 1009.74, "end": 1010.74, "text": " What I use isn't.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 258, "seek": 98432, "start": 1010.74, "end": 1013.72, "text": " It's only meant for my internal cache.", "tokens": [50364, 407, 286, 764, 309, 294, 2699, 76, 3131, 281, 19459, 264, 6920, 12564, 33290, 337, 7098, 13, 50656, 50656, 663, 19155, 257, 688, 295, 12355, 1901, 13, 50746, 50746, 467, 2516, 411, 11, 286, 519, 309, 19155, 411, 4060, 4, 295, 12355, 1901, 5347, 281, 264, 2699, 76, 28431, 11, 3380, 51172, 51172, 979, 19866, 293, 2058, 19866, 13, 51298, 51298, 3013, 307, 411, 31828, 13, 51382, 51382, 3013, 307, 31828, 293, 365, 938, 7909, 13, 51480, 51480, 407, 300, 472, 307, 4140, 281, 312, 1952, 49857, 13, 51635, 51635, 708, 286, 764, 1943, 380, 13, 51685, 51685, 467, 311, 787, 4140, 337, 452, 6920, 19459, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1972236289634361, "compression_ratio": 1.5689655172413792, "no_caption_prob": 9.08022775547579e-06}, {"id": 259, "seek": 101372, "start": 1013.72, "end": 1021.28, "text": " So yeah, you can use codecs for caching, which has been my only use case for now.", "tokens": [50364, 407, 1338, 11, 291, 393, 764, 3089, 14368, 337, 269, 2834, 11, 597, 575, 668, 452, 787, 764, 1389, 337, 586, 13, 50742, 50742, 1171, 2699, 76, 3089, 66, 11, 291, 727, 3811, 300, 309, 311, 406, 3089, 66, 13, 7610, 11, 457, 291, 727, 362, 3089, 66, 50976, 50976, 8186, 412, 293, 360, 746, 1646, 689, 291, 576, 362, 979, 19866, 300, 979, 4789, 472, 636, 293, 2058, 19866, 51398, 51398, 300, 2058, 4789, 472, 636, 13, 51498, 51498, 1779, 13, 51548, 51548, 1779, 13, 51598, 51598, 865, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18670611685894906, "compression_ratio": 1.6910112359550562, "no_caption_prob": 7.76679371483624e-06}, {"id": 260, "seek": 101372, "start": 1021.28, "end": 1025.96, "text": " For Elm codec, you could imagine that it's not codec.field, but you could have codec", "tokens": [50364, 407, 1338, 11, 291, 393, 764, 3089, 14368, 337, 269, 2834, 11, 597, 575, 668, 452, 787, 764, 1389, 337, 586, 13, 50742, 50742, 1171, 2699, 76, 3089, 66, 11, 291, 727, 3811, 300, 309, 311, 406, 3089, 66, 13, 7610, 11, 457, 291, 727, 362, 3089, 66, 50976, 50976, 8186, 412, 293, 360, 746, 1646, 689, 291, 576, 362, 979, 19866, 300, 979, 4789, 472, 636, 293, 2058, 19866, 51398, 51398, 300, 2058, 4789, 472, 636, 13, 51498, 51498, 1779, 13, 51548, 51548, 1779, 13, 51598, 51598, 865, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18670611685894906, "compression_ratio": 1.6910112359550562, "no_caption_prob": 7.76679371483624e-06}, {"id": 261, "seek": 101372, "start": 1025.96, "end": 1034.4, "text": " index at and do something else where you would have decoder that decodes one way and encoder", "tokens": [50364, 407, 1338, 11, 291, 393, 764, 3089, 14368, 337, 269, 2834, 11, 597, 575, 668, 452, 787, 764, 1389, 337, 586, 13, 50742, 50742, 1171, 2699, 76, 3089, 66, 11, 291, 727, 3811, 300, 309, 311, 406, 3089, 66, 13, 7610, 11, 457, 291, 727, 362, 3089, 66, 50976, 50976, 8186, 412, 293, 360, 746, 1646, 689, 291, 576, 362, 979, 19866, 300, 979, 4789, 472, 636, 293, 2058, 19866, 51398, 51398, 300, 2058, 4789, 472, 636, 13, 51498, 51498, 1779, 13, 51548, 51548, 1779, 13, 51598, 51598, 865, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18670611685894906, "compression_ratio": 1.6910112359550562, "no_caption_prob": 7.76679371483624e-06}, {"id": 262, "seek": 101372, "start": 1034.4, "end": 1036.4, "text": " that encodes one way.", "tokens": [50364, 407, 1338, 11, 291, 393, 764, 3089, 14368, 337, 269, 2834, 11, 597, 575, 668, 452, 787, 764, 1389, 337, 586, 13, 50742, 50742, 1171, 2699, 76, 3089, 66, 11, 291, 727, 3811, 300, 309, 311, 406, 3089, 66, 13, 7610, 11, 457, 291, 727, 362, 3089, 66, 50976, 50976, 8186, 412, 293, 360, 746, 1646, 689, 291, 576, 362, 979, 19866, 300, 979, 4789, 472, 636, 293, 2058, 19866, 51398, 51398, 300, 2058, 4789, 472, 636, 13, 51498, 51498, 1779, 13, 51548, 51548, 1779, 13, 51598, 51598, 865, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18670611685894906, "compression_ratio": 1.6910112359550562, "no_caption_prob": 7.76679371483624e-06}, {"id": 263, "seek": 101372, "start": 1036.4, "end": 1037.4, "text": " Right.", "tokens": [50364, 407, 1338, 11, 291, 393, 764, 3089, 14368, 337, 269, 2834, 11, 597, 575, 668, 452, 787, 764, 1389, 337, 586, 13, 50742, 50742, 1171, 2699, 76, 3089, 66, 11, 291, 727, 3811, 300, 309, 311, 406, 3089, 66, 13, 7610, 11, 457, 291, 727, 362, 3089, 66, 50976, 50976, 8186, 412, 293, 360, 746, 1646, 689, 291, 576, 362, 979, 19866, 300, 979, 4789, 472, 636, 293, 2058, 19866, 51398, 51398, 300, 2058, 4789, 472, 636, 13, 51498, 51498, 1779, 13, 51548, 51548, 1779, 13, 51598, 51598, 865, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18670611685894906, "compression_ratio": 1.6910112359550562, "no_caption_prob": 7.76679371483624e-06}, {"id": 264, "seek": 101372, "start": 1037.4, "end": 1038.4, "text": " Right.", "tokens": [50364, 407, 1338, 11, 291, 393, 764, 3089, 14368, 337, 269, 2834, 11, 597, 575, 668, 452, 787, 764, 1389, 337, 586, 13, 50742, 50742, 1171, 2699, 76, 3089, 66, 11, 291, 727, 3811, 300, 309, 311, 406, 3089, 66, 13, 7610, 11, 457, 291, 727, 362, 3089, 66, 50976, 50976, 8186, 412, 293, 360, 746, 1646, 689, 291, 576, 362, 979, 19866, 300, 979, 4789, 472, 636, 293, 2058, 19866, 51398, 51398, 300, 2058, 4789, 472, 636, 13, 51498, 51498, 1779, 13, 51548, 51548, 1779, 13, 51598, 51598, 865, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18670611685894906, "compression_ratio": 1.6910112359550562, "no_caption_prob": 7.76679371483624e-06}, {"id": 265, "seek": 101372, "start": 1038.4, "end": 1039.4, "text": " Yeah.", "tokens": [50364, 407, 1338, 11, 291, 393, 764, 3089, 14368, 337, 269, 2834, 11, 597, 575, 668, 452, 787, 764, 1389, 337, 586, 13, 50742, 50742, 1171, 2699, 76, 3089, 66, 11, 291, 727, 3811, 300, 309, 311, 406, 3089, 66, 13, 7610, 11, 457, 291, 727, 362, 3089, 66, 50976, 50976, 8186, 412, 293, 360, 746, 1646, 689, 291, 576, 362, 979, 19866, 300, 979, 4789, 472, 636, 293, 2058, 19866, 51398, 51398, 300, 2058, 4789, 472, 636, 13, 51498, 51498, 1779, 13, 51548, 51548, 1779, 13, 51598, 51598, 865, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18670611685894906, "compression_ratio": 1.6910112359550562, "no_caption_prob": 7.76679371483624e-06}, {"id": 266, "seek": 103940, "start": 1039.4, "end": 1044.72, "text": " And so that's nice to be able to build up an object.", "tokens": [50364, 400, 370, 300, 311, 1481, 281, 312, 1075, 281, 1322, 493, 364, 2657, 13, 50630, 50630, 400, 309, 311, 341, 14217, 8665, 797, 11, 300, 412, 264, 935, 300, 291, 362, 300, 1589, 11, 50984, 50984, 291, 434, 1936, 2902, 309, 439, 264, 1589, 309, 2203, 337, 472, 1823, 13, 51160, 51160, 407, 291, 727, 1322, 493, 257, 979, 19866, 293, 550, 291, 727, 1322, 493, 364, 2058, 19866, 13, 51404, 51404, 583, 281, 360, 300, 11, 291, 586, 362, 281, 23976, 439, 341, 1589, 466, 309, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1456594881804093, "compression_ratio": 1.7342995169082125, "no_caption_prob": 2.212471008533612e-05}, {"id": 267, "seek": 103940, "start": 1044.72, "end": 1051.8000000000002, "text": " And it's this underlying principle again, that at the point that you have that information,", "tokens": [50364, 400, 370, 300, 311, 1481, 281, 312, 1075, 281, 1322, 493, 364, 2657, 13, 50630, 50630, 400, 309, 311, 341, 14217, 8665, 797, 11, 300, 412, 264, 935, 300, 291, 362, 300, 1589, 11, 50984, 50984, 291, 434, 1936, 2902, 309, 439, 264, 1589, 309, 2203, 337, 472, 1823, 13, 51160, 51160, 407, 291, 727, 1322, 493, 257, 979, 19866, 293, 550, 291, 727, 1322, 493, 364, 2058, 19866, 13, 51404, 51404, 583, 281, 360, 300, 11, 291, 586, 362, 281, 23976, 439, 341, 1589, 466, 309, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1456594881804093, "compression_ratio": 1.7342995169082125, "no_caption_prob": 2.212471008533612e-05}, {"id": 268, "seek": 103940, "start": 1051.8000000000002, "end": 1055.3200000000002, "text": " you're basically giving it all the information it needs for one step.", "tokens": [50364, 400, 370, 300, 311, 1481, 281, 312, 1075, 281, 1322, 493, 364, 2657, 13, 50630, 50630, 400, 309, 311, 341, 14217, 8665, 797, 11, 300, 412, 264, 935, 300, 291, 362, 300, 1589, 11, 50984, 50984, 291, 434, 1936, 2902, 309, 439, 264, 1589, 309, 2203, 337, 472, 1823, 13, 51160, 51160, 407, 291, 727, 1322, 493, 257, 979, 19866, 293, 550, 291, 727, 1322, 493, 364, 2058, 19866, 13, 51404, 51404, 583, 281, 360, 300, 11, 291, 586, 362, 281, 23976, 439, 341, 1589, 466, 309, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1456594881804093, "compression_ratio": 1.7342995169082125, "no_caption_prob": 2.212471008533612e-05}, {"id": 269, "seek": 103940, "start": 1055.3200000000002, "end": 1060.2, "text": " So you could build up a decoder and then you could build up an encoder.", "tokens": [50364, 400, 370, 300, 311, 1481, 281, 312, 1075, 281, 1322, 493, 364, 2657, 13, 50630, 50630, 400, 309, 311, 341, 14217, 8665, 797, 11, 300, 412, 264, 935, 300, 291, 362, 300, 1589, 11, 50984, 50984, 291, 434, 1936, 2902, 309, 439, 264, 1589, 309, 2203, 337, 472, 1823, 13, 51160, 51160, 407, 291, 727, 1322, 493, 257, 979, 19866, 293, 550, 291, 727, 1322, 493, 364, 2058, 19866, 13, 51404, 51404, 583, 281, 360, 300, 11, 291, 586, 362, 281, 23976, 439, 341, 1589, 466, 309, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1456594881804093, "compression_ratio": 1.7342995169082125, "no_caption_prob": 2.212471008533612e-05}, {"id": 270, "seek": 103940, "start": 1060.2, "end": 1067.2800000000002, "text": " But to do that, you now have to duplicate all this information about it.", "tokens": [50364, 400, 370, 300, 311, 1481, 281, 312, 1075, 281, 1322, 493, 364, 2657, 13, 50630, 50630, 400, 309, 311, 341, 14217, 8665, 797, 11, 300, 412, 264, 935, 300, 291, 362, 300, 1589, 11, 50984, 50984, 291, 434, 1936, 2902, 309, 439, 264, 1589, 309, 2203, 337, 472, 1823, 13, 51160, 51160, 407, 291, 727, 1322, 493, 257, 979, 19866, 293, 550, 291, 727, 1322, 493, 364, 2058, 19866, 13, 51404, 51404, 583, 281, 360, 300, 11, 291, 586, 362, 281, 23976, 439, 341, 1589, 466, 309, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1456594881804093, "compression_ratio": 1.7342995169082125, "no_caption_prob": 2.212471008533612e-05}, {"id": 271, "seek": 106728, "start": 1067.28, "end": 1072.44, "text": " When you say encode.string one place, and then you have to say decode.string in the", "tokens": [50364, 1133, 291, 584, 2058, 1429, 13, 37045, 472, 1081, 11, 293, 550, 291, 362, 281, 584, 979, 1429, 13, 37045, 294, 264, 50622, 50622, 661, 1081, 13, 50672, 50672, 13813, 562, 291, 1322, 493, 257, 3089, 66, 11, 291, 500, 380, 643, 281, 360, 300, 570, 291, 362, 300, 1589, 51010, 51010, 294, 257, 3089, 66, 13, 51084, 51084, 400, 321, 600, 2825, 466, 1455, 1944, 4368, 6243, 294, 2115, 295, 1412, 15983, 13, 51338, 51338, 492, 600, 611, 2825, 466, 264, 3090, 295, 9362, 1715, 294, 1455, 6243, 4368, 6243, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09810896714528401, "compression_ratio": 1.7980769230769231, "no_caption_prob": 9.080266863747966e-06}, {"id": 272, "seek": 106728, "start": 1072.44, "end": 1073.44, "text": " other place.", "tokens": [50364, 1133, 291, 584, 2058, 1429, 13, 37045, 472, 1081, 11, 293, 550, 291, 362, 281, 584, 979, 1429, 13, 37045, 294, 264, 50622, 50622, 661, 1081, 13, 50672, 50672, 13813, 562, 291, 1322, 493, 257, 3089, 66, 11, 291, 500, 380, 643, 281, 360, 300, 570, 291, 362, 300, 1589, 51010, 51010, 294, 257, 3089, 66, 13, 51084, 51084, 400, 321, 600, 2825, 466, 1455, 1944, 4368, 6243, 294, 2115, 295, 1412, 15983, 13, 51338, 51338, 492, 600, 611, 2825, 466, 264, 3090, 295, 9362, 1715, 294, 1455, 6243, 4368, 6243, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09810896714528401, "compression_ratio": 1.7980769230769231, "no_caption_prob": 9.080266863747966e-06}, {"id": 273, "seek": 106728, "start": 1073.44, "end": 1080.2, "text": " Whereas when you build up a codec, you don't need to do that because you have that information", "tokens": [50364, 1133, 291, 584, 2058, 1429, 13, 37045, 472, 1081, 11, 293, 550, 291, 362, 281, 584, 979, 1429, 13, 37045, 294, 264, 50622, 50622, 661, 1081, 13, 50672, 50672, 13813, 562, 291, 1322, 493, 257, 3089, 66, 11, 291, 500, 380, 643, 281, 360, 300, 570, 291, 362, 300, 1589, 51010, 51010, 294, 257, 3089, 66, 13, 51084, 51084, 400, 321, 600, 2825, 466, 1455, 1944, 4368, 6243, 294, 2115, 295, 1412, 15983, 13, 51338, 51338, 492, 600, 611, 2825, 466, 264, 3090, 295, 9362, 1715, 294, 1455, 6243, 4368, 6243, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09810896714528401, "compression_ratio": 1.7980769230769231, "no_caption_prob": 9.080266863747966e-06}, {"id": 274, "seek": 106728, "start": 1080.2, "end": 1081.68, "text": " in a codec.", "tokens": [50364, 1133, 291, 584, 2058, 1429, 13, 37045, 472, 1081, 11, 293, 550, 291, 362, 281, 584, 979, 1429, 13, 37045, 294, 264, 50622, 50622, 661, 1081, 13, 50672, 50672, 13813, 562, 291, 1322, 493, 257, 3089, 66, 11, 291, 500, 380, 643, 281, 360, 300, 570, 291, 362, 300, 1589, 51010, 51010, 294, 257, 3089, 66, 13, 51084, 51084, 400, 321, 600, 2825, 466, 1455, 1944, 4368, 6243, 294, 2115, 295, 1412, 15983, 13, 51338, 51338, 492, 600, 611, 2825, 466, 264, 3090, 295, 9362, 1715, 294, 1455, 6243, 4368, 6243, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09810896714528401, "compression_ratio": 1.7980769230769231, "no_caption_prob": 9.080266863747966e-06}, {"id": 275, "seek": 106728, "start": 1081.68, "end": 1086.76, "text": " And we've talked about making possible states impossible in terms of data modeling.", "tokens": [50364, 1133, 291, 584, 2058, 1429, 13, 37045, 472, 1081, 11, 293, 550, 291, 362, 281, 584, 979, 1429, 13, 37045, 294, 264, 50622, 50622, 661, 1081, 13, 50672, 50672, 13813, 562, 291, 1322, 493, 257, 3089, 66, 11, 291, 500, 380, 643, 281, 360, 300, 570, 291, 362, 300, 1589, 51010, 51010, 294, 257, 3089, 66, 13, 51084, 51084, 400, 321, 600, 2825, 466, 1455, 1944, 4368, 6243, 294, 2115, 295, 1412, 15983, 13, 51338, 51338, 492, 600, 611, 2825, 466, 264, 3090, 295, 9362, 1715, 294, 1455, 6243, 4368, 6243, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09810896714528401, "compression_ratio": 1.7980769230769231, "no_caption_prob": 9.080266863747966e-06}, {"id": 276, "seek": 106728, "start": 1086.76, "end": 1092.8, "text": " We've also talked about the role of API design in making impossible states impossible.", "tokens": [50364, 1133, 291, 584, 2058, 1429, 13, 37045, 472, 1081, 11, 293, 550, 291, 362, 281, 584, 979, 1429, 13, 37045, 294, 264, 50622, 50622, 661, 1081, 13, 50672, 50672, 13813, 562, 291, 1322, 493, 257, 3089, 66, 11, 291, 500, 380, 643, 281, 360, 300, 570, 291, 362, 300, 1589, 51010, 51010, 294, 257, 3089, 66, 13, 51084, 51084, 400, 321, 600, 2825, 466, 1455, 1944, 4368, 6243, 294, 2115, 295, 1412, 15983, 13, 51338, 51338, 492, 600, 611, 2825, 466, 264, 3090, 295, 9362, 1715, 294, 1455, 6243, 4368, 6243, 13, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.09810896714528401, "compression_ratio": 1.7980769230769231, "no_caption_prob": 9.080266863747966e-06}, {"id": 277, "seek": 109280, "start": 1092.8, "end": 1097.48, "text": " And I think this is one of those instances where maybe this is like another special case", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 278, "seek": 109280, "start": 1097.48, "end": 1104.2, "text": " of that where through the API design, you capture all the information when you have", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 279, "seek": 109280, "start": 1104.2, "end": 1107.32, "text": " it so you don't have duplicate sources of truth.", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 280, "seek": 109280, "start": 1107.32, "end": 1111.3799999999999, "text": " You have one source of truth and you take all that information.", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 281, "seek": 109280, "start": 1111.3799999999999, "end": 1112.78, "text": " So that's what a codec is doing.", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 282, "seek": 109280, "start": 1112.78, "end": 1116.56, "text": " Instead of building up the encoder and the decoder separately, we have to duplicate all", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 283, "seek": 109280, "start": 1116.56, "end": 1117.56, "text": " this information.", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 284, "seek": 109280, "start": 1117.56, "end": 1119.04, "text": " You build them up together.", "tokens": [50364, 400, 286, 519, 341, 307, 472, 295, 729, 14519, 689, 1310, 341, 307, 411, 1071, 2121, 1389, 50598, 50598, 295, 300, 689, 807, 264, 9362, 1715, 11, 291, 7983, 439, 264, 1589, 562, 291, 362, 50934, 50934, 309, 370, 291, 500, 380, 362, 23976, 7139, 295, 3494, 13, 51090, 51090, 509, 362, 472, 4009, 295, 3494, 293, 291, 747, 439, 300, 1589, 13, 51293, 51293, 407, 300, 311, 437, 257, 3089, 66, 307, 884, 13, 51363, 51363, 7156, 295, 2390, 493, 264, 2058, 19866, 293, 264, 979, 19866, 14759, 11, 321, 362, 281, 23976, 439, 51552, 51552, 341, 1589, 13, 51602, 51602, 509, 1322, 552, 493, 1214, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10434635196413312, "compression_ratio": 1.8152610441767068, "no_caption_prob": 5.224830601946451e-05}, {"id": 285, "seek": 111904, "start": 1119.04, "end": 1123.0, "text": " And there are certain things that you cannot make mistakes on.", "tokens": [50364, 400, 456, 366, 1629, 721, 300, 291, 2644, 652, 8038, 322, 13, 50562, 50562, 400, 550, 456, 366, 3190, 689, 291, 393, 652, 257, 6146, 13, 50755, 50755, 407, 291, 1322, 493, 257, 3089, 66, 13, 50886, 50886, 759, 291, 1322, 493, 257, 3089, 66, 337, 364, 2657, 11, 291, 360, 3089, 66, 13, 41070, 293, 550, 291, 976, 309, 257, 2136, 51156, 51156, 47479, 13, 51222, 51222, 407, 264, 1365, 294, 264, 45623, 307, 257, 935, 365, 257, 2136, 300, 311, 658, 364, 2031, 293, 288, 15706, 13, 51564, 51564, 407, 550, 291, 360, 3089, 66, 13, 41070, 11, 291, 976, 309, 264, 935, 2136, 47479, 11, 293, 550, 291, 11240, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.08766274616636079, "compression_ratio": 2.0145631067961167, "no_caption_prob": 3.705129711306654e-05}, {"id": 286, "seek": 111904, "start": 1123.0, "end": 1126.86, "text": " And then there are places where you can make a mistake.", "tokens": [50364, 400, 456, 366, 1629, 721, 300, 291, 2644, 652, 8038, 322, 13, 50562, 50562, 400, 550, 456, 366, 3190, 689, 291, 393, 652, 257, 6146, 13, 50755, 50755, 407, 291, 1322, 493, 257, 3089, 66, 13, 50886, 50886, 759, 291, 1322, 493, 257, 3089, 66, 337, 364, 2657, 11, 291, 360, 3089, 66, 13, 41070, 293, 550, 291, 976, 309, 257, 2136, 51156, 51156, 47479, 13, 51222, 51222, 407, 264, 1365, 294, 264, 45623, 307, 257, 935, 365, 257, 2136, 300, 311, 658, 364, 2031, 293, 288, 15706, 13, 51564, 51564, 407, 550, 291, 360, 3089, 66, 13, 41070, 11, 291, 976, 309, 264, 935, 2136, 47479, 11, 293, 550, 291, 11240, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.08766274616636079, "compression_ratio": 2.0145631067961167, "no_caption_prob": 3.705129711306654e-05}, {"id": 287, "seek": 111904, "start": 1126.86, "end": 1129.48, "text": " So you build up a codec.", "tokens": [50364, 400, 456, 366, 1629, 721, 300, 291, 2644, 652, 8038, 322, 13, 50562, 50562, 400, 550, 456, 366, 3190, 689, 291, 393, 652, 257, 6146, 13, 50755, 50755, 407, 291, 1322, 493, 257, 3089, 66, 13, 50886, 50886, 759, 291, 1322, 493, 257, 3089, 66, 337, 364, 2657, 11, 291, 360, 3089, 66, 13, 41070, 293, 550, 291, 976, 309, 257, 2136, 51156, 51156, 47479, 13, 51222, 51222, 407, 264, 1365, 294, 264, 45623, 307, 257, 935, 365, 257, 2136, 300, 311, 658, 364, 2031, 293, 288, 15706, 13, 51564, 51564, 407, 550, 291, 360, 3089, 66, 13, 41070, 11, 291, 976, 309, 264, 935, 2136, 47479, 11, 293, 550, 291, 11240, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.08766274616636079, "compression_ratio": 2.0145631067961167, "no_caption_prob": 3.705129711306654e-05}, {"id": 288, "seek": 111904, "start": 1129.48, "end": 1134.8799999999999, "text": " If you build up a codec for an object, you do codec.object and then you give it a record", "tokens": [50364, 400, 456, 366, 1629, 721, 300, 291, 2644, 652, 8038, 322, 13, 50562, 50562, 400, 550, 456, 366, 3190, 689, 291, 393, 652, 257, 6146, 13, 50755, 50755, 407, 291, 1322, 493, 257, 3089, 66, 13, 50886, 50886, 759, 291, 1322, 493, 257, 3089, 66, 337, 364, 2657, 11, 291, 360, 3089, 66, 13, 41070, 293, 550, 291, 976, 309, 257, 2136, 51156, 51156, 47479, 13, 51222, 51222, 407, 264, 1365, 294, 264, 45623, 307, 257, 935, 365, 257, 2136, 300, 311, 658, 364, 2031, 293, 288, 15706, 13, 51564, 51564, 407, 550, 291, 360, 3089, 66, 13, 41070, 11, 291, 976, 309, 264, 935, 2136, 47479, 11, 293, 550, 291, 11240, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.08766274616636079, "compression_ratio": 2.0145631067961167, "no_caption_prob": 3.705129711306654e-05}, {"id": 289, "seek": 111904, "start": 1134.8799999999999, "end": 1136.2, "text": " constructor.", "tokens": [50364, 400, 456, 366, 1629, 721, 300, 291, 2644, 652, 8038, 322, 13, 50562, 50562, 400, 550, 456, 366, 3190, 689, 291, 393, 652, 257, 6146, 13, 50755, 50755, 407, 291, 1322, 493, 257, 3089, 66, 13, 50886, 50886, 759, 291, 1322, 493, 257, 3089, 66, 337, 364, 2657, 11, 291, 360, 3089, 66, 13, 41070, 293, 550, 291, 976, 309, 257, 2136, 51156, 51156, 47479, 13, 51222, 51222, 407, 264, 1365, 294, 264, 45623, 307, 257, 935, 365, 257, 2136, 300, 311, 658, 364, 2031, 293, 288, 15706, 13, 51564, 51564, 407, 550, 291, 360, 3089, 66, 13, 41070, 11, 291, 976, 309, 264, 935, 2136, 47479, 11, 293, 550, 291, 11240, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.08766274616636079, "compression_ratio": 2.0145631067961167, "no_caption_prob": 3.705129711306654e-05}, {"id": 290, "seek": 111904, "start": 1136.2, "end": 1143.04, "text": " So the example in the docs is a point with a record that's got an x and y float.", "tokens": [50364, 400, 456, 366, 1629, 721, 300, 291, 2644, 652, 8038, 322, 13, 50562, 50562, 400, 550, 456, 366, 3190, 689, 291, 393, 652, 257, 6146, 13, 50755, 50755, 407, 291, 1322, 493, 257, 3089, 66, 13, 50886, 50886, 759, 291, 1322, 493, 257, 3089, 66, 337, 364, 2657, 11, 291, 360, 3089, 66, 13, 41070, 293, 550, 291, 976, 309, 257, 2136, 51156, 51156, 47479, 13, 51222, 51222, 407, 264, 1365, 294, 264, 45623, 307, 257, 935, 365, 257, 2136, 300, 311, 658, 364, 2031, 293, 288, 15706, 13, 51564, 51564, 407, 550, 291, 360, 3089, 66, 13, 41070, 11, 291, 976, 309, 264, 935, 2136, 47479, 11, 293, 550, 291, 11240, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.08766274616636079, "compression_ratio": 2.0145631067961167, "no_caption_prob": 3.705129711306654e-05}, {"id": 291, "seek": 111904, "start": 1143.04, "end": 1148.28, "text": " So then you do codec.object, you give it the point record constructor, and then you pipe", "tokens": [50364, 400, 456, 366, 1629, 721, 300, 291, 2644, 652, 8038, 322, 13, 50562, 50562, 400, 550, 456, 366, 3190, 689, 291, 393, 652, 257, 6146, 13, 50755, 50755, 407, 291, 1322, 493, 257, 3089, 66, 13, 50886, 50886, 759, 291, 1322, 493, 257, 3089, 66, 337, 364, 2657, 11, 291, 360, 3089, 66, 13, 41070, 293, 550, 291, 976, 309, 257, 2136, 51156, 51156, 47479, 13, 51222, 51222, 407, 264, 1365, 294, 264, 45623, 307, 257, 935, 365, 257, 2136, 300, 311, 658, 364, 2031, 293, 288, 15706, 13, 51564, 51564, 407, 550, 291, 360, 3089, 66, 13, 41070, 11, 291, 976, 309, 264, 935, 2136, 47479, 11, 293, 550, 291, 11240, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.08766274616636079, "compression_ratio": 2.0145631067961167, "no_caption_prob": 3.705129711306654e-05}, {"id": 292, "seek": 114828, "start": 1148.28, "end": 1153.84, "text": " that into codec.field with the string x, which is the field name in JavaScript.", "tokens": [50364, 300, 666, 3089, 66, 13, 7610, 365, 264, 6798, 2031, 11, 597, 307, 264, 2519, 1315, 294, 15778, 13, 50642, 50642, 823, 498, 291, 2729, 300, 746, 411, 6707, 6798, 11, 291, 727, 2082, 300, 493, 11, 457, 291, 434, 50892, 50892, 516, 281, 362, 281, 360, 746, 411, 300, 13, 50966, 50966, 407, 300, 311, 406, 1340, 777, 300, 291, 727, 2082, 493, 5347, 281, 13, 51198, 51198, 11181, 979, 8616, 420, 11181, 43430, 13, 51332, 51332, 7587, 13, 51382, 51382, 400, 550, 291, 643, 281, 976, 309, 264, 1150, 6770, 291, 976, 281, 3089, 66, 13, 7610, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1577746684734638, "compression_ratio": 1.742081447963801, "no_caption_prob": 3.024128636752721e-05}, {"id": 293, "seek": 114828, "start": 1153.84, "end": 1158.84, "text": " Now if you gave that something like empty string, you could mess that up, but you're", "tokens": [50364, 300, 666, 3089, 66, 13, 7610, 365, 264, 6798, 2031, 11, 597, 307, 264, 2519, 1315, 294, 15778, 13, 50642, 50642, 823, 498, 291, 2729, 300, 746, 411, 6707, 6798, 11, 291, 727, 2082, 300, 493, 11, 457, 291, 434, 50892, 50892, 516, 281, 362, 281, 360, 746, 411, 300, 13, 50966, 50966, 407, 300, 311, 406, 1340, 777, 300, 291, 727, 2082, 493, 5347, 281, 13, 51198, 51198, 11181, 979, 8616, 420, 11181, 43430, 13, 51332, 51332, 7587, 13, 51382, 51382, 400, 550, 291, 643, 281, 976, 309, 264, 1150, 6770, 291, 976, 281, 3089, 66, 13, 7610, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1577746684734638, "compression_ratio": 1.742081447963801, "no_caption_prob": 3.024128636752721e-05}, {"id": 294, "seek": 114828, "start": 1158.84, "end": 1160.32, "text": " going to have to do something like that.", "tokens": [50364, 300, 666, 3089, 66, 13, 7610, 365, 264, 6798, 2031, 11, 597, 307, 264, 2519, 1315, 294, 15778, 13, 50642, 50642, 823, 498, 291, 2729, 300, 746, 411, 6707, 6798, 11, 291, 727, 2082, 300, 493, 11, 457, 291, 434, 50892, 50892, 516, 281, 362, 281, 360, 746, 411, 300, 13, 50966, 50966, 407, 300, 311, 406, 1340, 777, 300, 291, 727, 2082, 493, 5347, 281, 13, 51198, 51198, 11181, 979, 8616, 420, 11181, 43430, 13, 51332, 51332, 7587, 13, 51382, 51382, 400, 550, 291, 643, 281, 976, 309, 264, 1150, 6770, 291, 976, 281, 3089, 66, 13, 7610, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1577746684734638, "compression_ratio": 1.742081447963801, "no_caption_prob": 3.024128636752721e-05}, {"id": 295, "seek": 114828, "start": 1160.32, "end": 1164.96, "text": " So that's not anything new that you could mess up compared to.", "tokens": [50364, 300, 666, 3089, 66, 13, 7610, 365, 264, 6798, 2031, 11, 597, 307, 264, 2519, 1315, 294, 15778, 13, 50642, 50642, 823, 498, 291, 2729, 300, 746, 411, 6707, 6798, 11, 291, 727, 2082, 300, 493, 11, 457, 291, 434, 50892, 50892, 516, 281, 362, 281, 360, 746, 411, 300, 13, 50966, 50966, 407, 300, 311, 406, 1340, 777, 300, 291, 727, 2082, 493, 5347, 281, 13, 51198, 51198, 11181, 979, 8616, 420, 11181, 43430, 13, 51332, 51332, 7587, 13, 51382, 51382, 400, 550, 291, 643, 281, 976, 309, 264, 1150, 6770, 291, 976, 281, 3089, 66, 13, 7610, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1577746684734638, "compression_ratio": 1.742081447963801, "no_caption_prob": 3.024128636752721e-05}, {"id": 296, "seek": 114828, "start": 1164.96, "end": 1167.6399999999999, "text": " Jason decoding or Jason encoding.", "tokens": [50364, 300, 666, 3089, 66, 13, 7610, 365, 264, 6798, 2031, 11, 597, 307, 264, 2519, 1315, 294, 15778, 13, 50642, 50642, 823, 498, 291, 2729, 300, 746, 411, 6707, 6798, 11, 291, 727, 2082, 300, 493, 11, 457, 291, 434, 50892, 50892, 516, 281, 362, 281, 360, 746, 411, 300, 13, 50966, 50966, 407, 300, 311, 406, 1340, 777, 300, 291, 727, 2082, 493, 5347, 281, 13, 51198, 51198, 11181, 979, 8616, 420, 11181, 43430, 13, 51332, 51332, 7587, 13, 51382, 51382, 400, 550, 291, 643, 281, 976, 309, 264, 1150, 6770, 291, 976, 281, 3089, 66, 13, 7610, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1577746684734638, "compression_ratio": 1.742081447963801, "no_caption_prob": 3.024128636752721e-05}, {"id": 297, "seek": 114828, "start": 1167.6399999999999, "end": 1168.6399999999999, "text": " Exactly.", "tokens": [50364, 300, 666, 3089, 66, 13, 7610, 365, 264, 6798, 2031, 11, 597, 307, 264, 2519, 1315, 294, 15778, 13, 50642, 50642, 823, 498, 291, 2729, 300, 746, 411, 6707, 6798, 11, 291, 727, 2082, 300, 493, 11, 457, 291, 434, 50892, 50892, 516, 281, 362, 281, 360, 746, 411, 300, 13, 50966, 50966, 407, 300, 311, 406, 1340, 777, 300, 291, 727, 2082, 493, 5347, 281, 13, 51198, 51198, 11181, 979, 8616, 420, 11181, 43430, 13, 51332, 51332, 7587, 13, 51382, 51382, 400, 550, 291, 643, 281, 976, 309, 264, 1150, 6770, 291, 976, 281, 3089, 66, 13, 7610, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1577746684734638, "compression_ratio": 1.742081447963801, "no_caption_prob": 3.024128636752721e-05}, {"id": 298, "seek": 114828, "start": 1168.6399999999999, "end": 1172.84, "text": " And then you need to give it the second argument you give to codec.field.", "tokens": [50364, 300, 666, 3089, 66, 13, 7610, 365, 264, 6798, 2031, 11, 597, 307, 264, 2519, 1315, 294, 15778, 13, 50642, 50642, 823, 498, 291, 2729, 300, 746, 411, 6707, 6798, 11, 291, 727, 2082, 300, 493, 11, 457, 291, 434, 50892, 50892, 516, 281, 362, 281, 360, 746, 411, 300, 13, 50966, 50966, 407, 300, 311, 406, 1340, 777, 300, 291, 727, 2082, 493, 5347, 281, 13, 51198, 51198, 11181, 979, 8616, 420, 11181, 43430, 13, 51332, 51332, 7587, 13, 51382, 51382, 400, 550, 291, 643, 281, 976, 309, 264, 1150, 6770, 291, 976, 281, 3089, 66, 13, 7610, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.1577746684734638, "compression_ratio": 1.742081447963801, "no_caption_prob": 3.024128636752721e-05}, {"id": 299, "seek": 117284, "start": 1172.84, "end": 1179.52, "text": " In the example he gives.x, which would be a function that takes that record type and", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 300, "seek": 117284, "start": 1179.52, "end": 1182.6799999999998, "text": " pulls off the value for the encoder.", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 301, "seek": 117284, "start": 1182.6799999999998, "end": 1183.6799999999998, "text": " From the Elm code.", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 302, "seek": 117284, "start": 1183.6799999999998, "end": 1184.6799999999998, "text": " Yeah, from the Elm record.", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 303, "seek": 117284, "start": 1184.6799999999998, "end": 1185.6799999999998, "text": " Yeah, right.", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 304, "seek": 117284, "start": 1185.6799999999998, "end": 1187.6, "text": " It takes the value from the Elm record.", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 305, "seek": 117284, "start": 1187.6, "end": 1192.4399999999998, "text": " So it could be any function which takes whatever value you're dealing with in this point, it's", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 306, "seek": 117284, "start": 1192.4399999999998, "end": 1198.48, "text": " a point record, and then gets some sort of float data type back.", "tokens": [50364, 682, 264, 1365, 415, 2709, 2411, 87, 11, 597, 576, 312, 257, 2445, 300, 2516, 300, 2136, 2010, 293, 50698, 50698, 16982, 766, 264, 2158, 337, 264, 2058, 19866, 13, 50856, 50856, 3358, 264, 2699, 76, 3089, 13, 50906, 50906, 865, 11, 490, 264, 2699, 76, 2136, 13, 50956, 50956, 865, 11, 558, 13, 51006, 51006, 467, 2516, 264, 2158, 490, 264, 2699, 76, 2136, 13, 51102, 51102, 407, 309, 727, 312, 604, 2445, 597, 2516, 2035, 2158, 291, 434, 6260, 365, 294, 341, 935, 11, 309, 311, 51344, 51344, 257, 935, 2136, 11, 293, 550, 2170, 512, 1333, 295, 15706, 1412, 2010, 646, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.16443056579029888, "compression_ratio": 1.735159817351598, "no_caption_prob": 5.173889348952798e-06}, {"id": 307, "seek": 119848, "start": 1198.48, "end": 1204.96, "text": " And of course you could put.y where you meant.x and you can make mistakes there.", "tokens": [50364, 400, 295, 1164, 291, 727, 829, 2411, 88, 689, 291, 4140, 2411, 87, 293, 291, 393, 652, 8038, 456, 13, 50688, 50688, 400, 550, 291, 584, 3089, 66, 13, 43645, 267, 382, 264, 2572, 6770, 300, 1619, 341, 307, 577, 291, 17436, 1125, 50954, 50954, 293, 730, 260, 831, 1125, 309, 13, 51032, 51032, 663, 644, 307, 18031, 281, 312, 294, 20271, 13, 51224, 51224, 509, 393, 380, 2082, 300, 644, 493, 13, 51274, 51274, 407, 456, 366, 445, 544, 6290, 424, 4174, 281, 721, 885, 294, 20271, 11, 293, 456, 307, 512, 9688, 589, 11, 51636, 51636, 457, 412, 1935, 291, 434, 23384, 264, 1589, 1339, 291, 362, 309, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.0751760897429093, "compression_ratio": 1.653225806451613, "no_caption_prob": 1.2218961273902096e-05}, {"id": 308, "seek": 119848, "start": 1204.96, "end": 1210.28, "text": " And then you say codec.float as the final argument that says this is how you serialize", "tokens": [50364, 400, 295, 1164, 291, 727, 829, 2411, 88, 689, 291, 4140, 2411, 87, 293, 291, 393, 652, 8038, 456, 13, 50688, 50688, 400, 550, 291, 584, 3089, 66, 13, 43645, 267, 382, 264, 2572, 6770, 300, 1619, 341, 307, 577, 291, 17436, 1125, 50954, 50954, 293, 730, 260, 831, 1125, 309, 13, 51032, 51032, 663, 644, 307, 18031, 281, 312, 294, 20271, 13, 51224, 51224, 509, 393, 380, 2082, 300, 644, 493, 13, 51274, 51274, 407, 456, 366, 445, 544, 6290, 424, 4174, 281, 721, 885, 294, 20271, 11, 293, 456, 307, 512, 9688, 589, 11, 51636, 51636, 457, 412, 1935, 291, 434, 23384, 264, 1589, 1339, 291, 362, 309, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.0751760897429093, "compression_ratio": 1.653225806451613, "no_caption_prob": 1.2218961273902096e-05}, {"id": 309, "seek": 119848, "start": 1210.28, "end": 1211.84, "text": " and deserialize it.", "tokens": [50364, 400, 295, 1164, 291, 727, 829, 2411, 88, 689, 291, 4140, 2411, 87, 293, 291, 393, 652, 8038, 456, 13, 50688, 50688, 400, 550, 291, 584, 3089, 66, 13, 43645, 267, 382, 264, 2572, 6770, 300, 1619, 341, 307, 577, 291, 17436, 1125, 50954, 50954, 293, 730, 260, 831, 1125, 309, 13, 51032, 51032, 663, 644, 307, 18031, 281, 312, 294, 20271, 13, 51224, 51224, 509, 393, 380, 2082, 300, 644, 493, 13, 51274, 51274, 407, 456, 366, 445, 544, 6290, 424, 4174, 281, 721, 885, 294, 20271, 11, 293, 456, 307, 512, 9688, 589, 11, 51636, 51636, 457, 412, 1935, 291, 434, 23384, 264, 1589, 1339, 291, 362, 309, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.0751760897429093, "compression_ratio": 1.653225806451613, "no_caption_prob": 1.2218961273902096e-05}, {"id": 310, "seek": 119848, "start": 1211.84, "end": 1215.68, "text": " That part is guaranteed to be in sync.", "tokens": [50364, 400, 295, 1164, 291, 727, 829, 2411, 88, 689, 291, 4140, 2411, 87, 293, 291, 393, 652, 8038, 456, 13, 50688, 50688, 400, 550, 291, 584, 3089, 66, 13, 43645, 267, 382, 264, 2572, 6770, 300, 1619, 341, 307, 577, 291, 17436, 1125, 50954, 50954, 293, 730, 260, 831, 1125, 309, 13, 51032, 51032, 663, 644, 307, 18031, 281, 312, 294, 20271, 13, 51224, 51224, 509, 393, 380, 2082, 300, 644, 493, 13, 51274, 51274, 407, 456, 366, 445, 544, 6290, 424, 4174, 281, 721, 885, 294, 20271, 11, 293, 456, 307, 512, 9688, 589, 11, 51636, 51636, 457, 412, 1935, 291, 434, 23384, 264, 1589, 1339, 291, 362, 309, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.0751760897429093, "compression_ratio": 1.653225806451613, "no_caption_prob": 1.2218961273902096e-05}, {"id": 311, "seek": 119848, "start": 1215.68, "end": 1216.68, "text": " You can't mess that part up.", "tokens": [50364, 400, 295, 1164, 291, 727, 829, 2411, 88, 689, 291, 4140, 2411, 87, 293, 291, 393, 652, 8038, 456, 13, 50688, 50688, 400, 550, 291, 584, 3089, 66, 13, 43645, 267, 382, 264, 2572, 6770, 300, 1619, 341, 307, 577, 291, 17436, 1125, 50954, 50954, 293, 730, 260, 831, 1125, 309, 13, 51032, 51032, 663, 644, 307, 18031, 281, 312, 294, 20271, 13, 51224, 51224, 509, 393, 380, 2082, 300, 644, 493, 13, 51274, 51274, 407, 456, 366, 445, 544, 6290, 424, 4174, 281, 721, 885, 294, 20271, 11, 293, 456, 307, 512, 9688, 589, 11, 51636, 51636, 457, 412, 1935, 291, 434, 23384, 264, 1589, 1339, 291, 362, 309, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.0751760897429093, "compression_ratio": 1.653225806451613, "no_caption_prob": 1.2218961273902096e-05}, {"id": 312, "seek": 119848, "start": 1216.68, "end": 1223.92, "text": " So there are just more guardrails to things being in sync, and there is some manual work,", "tokens": [50364, 400, 295, 1164, 291, 727, 829, 2411, 88, 689, 291, 4140, 2411, 87, 293, 291, 393, 652, 8038, 456, 13, 50688, 50688, 400, 550, 291, 584, 3089, 66, 13, 43645, 267, 382, 264, 2572, 6770, 300, 1619, 341, 307, 577, 291, 17436, 1125, 50954, 50954, 293, 730, 260, 831, 1125, 309, 13, 51032, 51032, 663, 644, 307, 18031, 281, 312, 294, 20271, 13, 51224, 51224, 509, 393, 380, 2082, 300, 644, 493, 13, 51274, 51274, 407, 456, 366, 445, 544, 6290, 424, 4174, 281, 721, 885, 294, 20271, 11, 293, 456, 307, 512, 9688, 589, 11, 51636, 51636, 457, 412, 1935, 291, 434, 23384, 264, 1589, 1339, 291, 362, 309, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.0751760897429093, "compression_ratio": 1.653225806451613, "no_caption_prob": 1.2218961273902096e-05}, {"id": 313, "seek": 119848, "start": 1223.92, "end": 1227.2, "text": " but at least you're capturing the information while you have it.", "tokens": [50364, 400, 295, 1164, 291, 727, 829, 2411, 88, 689, 291, 4140, 2411, 87, 293, 291, 393, 652, 8038, 456, 13, 50688, 50688, 400, 550, 291, 584, 3089, 66, 13, 43645, 267, 382, 264, 2572, 6770, 300, 1619, 341, 307, 577, 291, 17436, 1125, 50954, 50954, 293, 730, 260, 831, 1125, 309, 13, 51032, 51032, 663, 644, 307, 18031, 281, 312, 294, 20271, 13, 51224, 51224, 509, 393, 380, 2082, 300, 644, 493, 13, 51274, 51274, 407, 456, 366, 445, 544, 6290, 424, 4174, 281, 721, 885, 294, 20271, 11, 293, 456, 307, 512, 9688, 589, 11, 51636, 51636, 457, 412, 1935, 291, 434, 23384, 264, 1589, 1339, 291, 362, 309, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.0751760897429093, "compression_ratio": 1.653225806451613, "no_caption_prob": 1.2218961273902096e-05}, {"id": 314, "seek": 122720, "start": 1227.2, "end": 1230.16, "text": " And I think that's the underlying concept that I really like.", "tokens": [50364, 400, 286, 519, 300, 311, 264, 14217, 3410, 300, 286, 534, 411, 13, 50512, 50512, 400, 286, 519, 300, 300, 3410, 307, 21142, 294, 544, 3190, 813, 445, 341, 5102, 13, 50742, 50742, 865, 11, 3879, 13, 50792, 50792, 407, 382, 257, 20928, 11, 2519, 2516, 382, 257, 700, 6770, 689, 294, 264, 15778, 291, 643, 281, 2464, 51160, 51160, 420, 1401, 264, 1412, 490, 13, 51304, 51304, 509, 658, 264, 1150, 6770, 300, 307, 689, 360, 291, 483, 264, 2158, 490, 264, 2136, 490, 51588, 51588, 294, 2699, 76, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.15652551149067126, "compression_ratio": 1.65, "no_caption_prob": 1.2029247045575175e-05}, {"id": 315, "seek": 122720, "start": 1230.16, "end": 1234.76, "text": " And I think that that concept is applicable in more places than just this pattern.", "tokens": [50364, 400, 286, 519, 300, 311, 264, 14217, 3410, 300, 286, 534, 411, 13, 50512, 50512, 400, 286, 519, 300, 300, 3410, 307, 21142, 294, 544, 3190, 813, 445, 341, 5102, 13, 50742, 50742, 865, 11, 3879, 13, 50792, 50792, 407, 382, 257, 20928, 11, 2519, 2516, 382, 257, 700, 6770, 689, 294, 264, 15778, 291, 643, 281, 2464, 51160, 51160, 420, 1401, 264, 1412, 490, 13, 51304, 51304, 509, 658, 264, 1150, 6770, 300, 307, 689, 360, 291, 483, 264, 2158, 490, 264, 2136, 490, 51588, 51588, 294, 2699, 76, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.15652551149067126, "compression_ratio": 1.65, "no_caption_prob": 1.2029247045575175e-05}, {"id": 316, "seek": 122720, "start": 1234.76, "end": 1235.76, "text": " Yeah, totally.", "tokens": [50364, 400, 286, 519, 300, 311, 264, 14217, 3410, 300, 286, 534, 411, 13, 50512, 50512, 400, 286, 519, 300, 300, 3410, 307, 21142, 294, 544, 3190, 813, 445, 341, 5102, 13, 50742, 50742, 865, 11, 3879, 13, 50792, 50792, 407, 382, 257, 20928, 11, 2519, 2516, 382, 257, 700, 6770, 689, 294, 264, 15778, 291, 643, 281, 2464, 51160, 51160, 420, 1401, 264, 1412, 490, 13, 51304, 51304, 509, 658, 264, 1150, 6770, 300, 307, 689, 360, 291, 483, 264, 2158, 490, 264, 2136, 490, 51588, 51588, 294, 2699, 76, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.15652551149067126, "compression_ratio": 1.65, "no_caption_prob": 1.2029247045575175e-05}, {"id": 317, "seek": 122720, "start": 1235.76, "end": 1243.1200000000001, "text": " So as a recap, field takes as a first argument where in the JavaScript you need to write", "tokens": [50364, 400, 286, 519, 300, 311, 264, 14217, 3410, 300, 286, 534, 411, 13, 50512, 50512, 400, 286, 519, 300, 300, 3410, 307, 21142, 294, 544, 3190, 813, 445, 341, 5102, 13, 50742, 50742, 865, 11, 3879, 13, 50792, 50792, 407, 382, 257, 20928, 11, 2519, 2516, 382, 257, 700, 6770, 689, 294, 264, 15778, 291, 643, 281, 2464, 51160, 51160, 420, 1401, 264, 1412, 490, 13, 51304, 51304, 509, 658, 264, 1150, 6770, 300, 307, 689, 360, 291, 483, 264, 2158, 490, 264, 2136, 490, 51588, 51588, 294, 2699, 76, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.15652551149067126, "compression_ratio": 1.65, "no_caption_prob": 1.2029247045575175e-05}, {"id": 318, "seek": 122720, "start": 1243.1200000000001, "end": 1246.0, "text": " or read the data from.", "tokens": [50364, 400, 286, 519, 300, 311, 264, 14217, 3410, 300, 286, 534, 411, 13, 50512, 50512, 400, 286, 519, 300, 300, 3410, 307, 21142, 294, 544, 3190, 813, 445, 341, 5102, 13, 50742, 50742, 865, 11, 3879, 13, 50792, 50792, 407, 382, 257, 20928, 11, 2519, 2516, 382, 257, 700, 6770, 689, 294, 264, 15778, 291, 643, 281, 2464, 51160, 51160, 420, 1401, 264, 1412, 490, 13, 51304, 51304, 509, 658, 264, 1150, 6770, 300, 307, 689, 360, 291, 483, 264, 2158, 490, 264, 2136, 490, 51588, 51588, 294, 2699, 76, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.15652551149067126, "compression_ratio": 1.65, "no_caption_prob": 1.2029247045575175e-05}, {"id": 319, "seek": 122720, "start": 1246.0, "end": 1251.68, "text": " You got the second argument that is where do you get the value from the record from", "tokens": [50364, 400, 286, 519, 300, 311, 264, 14217, 3410, 300, 286, 534, 411, 13, 50512, 50512, 400, 286, 519, 300, 300, 3410, 307, 21142, 294, 544, 3190, 813, 445, 341, 5102, 13, 50742, 50742, 865, 11, 3879, 13, 50792, 50792, 407, 382, 257, 20928, 11, 2519, 2516, 382, 257, 700, 6770, 689, 294, 264, 15778, 291, 643, 281, 2464, 51160, 51160, 420, 1401, 264, 1412, 490, 13, 51304, 51304, 509, 658, 264, 1150, 6770, 300, 307, 689, 360, 291, 483, 264, 2158, 490, 264, 2136, 490, 51588, 51588, 294, 2699, 76, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.15652551149067126, "compression_ratio": 1.65, "no_caption_prob": 1.2029247045575175e-05}, {"id": 320, "seek": 122720, "start": 1251.68, "end": 1252.92, "text": " in Elm.", "tokens": [50364, 400, 286, 519, 300, 311, 264, 14217, 3410, 300, 286, 534, 411, 13, 50512, 50512, 400, 286, 519, 300, 300, 3410, 307, 21142, 294, 544, 3190, 813, 445, 341, 5102, 13, 50742, 50742, 865, 11, 3879, 13, 50792, 50792, 407, 382, 257, 20928, 11, 2519, 2516, 382, 257, 700, 6770, 689, 294, 264, 15778, 291, 643, 281, 2464, 51160, 51160, 420, 1401, 264, 1412, 490, 13, 51304, 51304, 509, 658, 264, 1150, 6770, 300, 307, 689, 360, 291, 483, 264, 2158, 490, 264, 2136, 490, 51588, 51588, 294, 2699, 76, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.15652551149067126, "compression_ratio": 1.65, "no_caption_prob": 1.2029247045575175e-05}, {"id": 321, "seek": 125292, "start": 1252.92, "end": 1257.64, "text": " And the third argument is what is the type of that field.", "tokens": [50364, 400, 264, 2636, 6770, 307, 437, 307, 264, 2010, 295, 300, 2519, 13, 50600, 50600, 400, 570, 291, 362, 1293, 3760, 293, 979, 8616, 293, 43430, 412, 264, 912, 1081, 11, 309, 311, 709, 50972, 50972, 1570, 3700, 300, 291, 434, 516, 281, 652, 257, 6146, 13, 51104, 51104, 663, 311, 1071, 665, 935, 13, 51154, 51154, 1779, 13, 51204, 51204, 1436, 291, 393, 11, 498, 291, 536, 11, 498, 291, 976, 257, 15778, 2657, 2519, 1315, 2031, 293, 550, 291, 51518, 51518, 976, 257, 2136, 2105, 284, 2445, 2411, 88, 11, 550, 291, 393, 574, 558, 958, 281, 1184, 661, 293, 291, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13770867285327376, "compression_ratio": 1.6820083682008369, "no_caption_prob": 4.029295268992428e-06}, {"id": 322, "seek": 125292, "start": 1257.64, "end": 1265.0800000000002, "text": " And because you have both reading and decoding and encoding at the same place, it's much", "tokens": [50364, 400, 264, 2636, 6770, 307, 437, 307, 264, 2010, 295, 300, 2519, 13, 50600, 50600, 400, 570, 291, 362, 1293, 3760, 293, 979, 8616, 293, 43430, 412, 264, 912, 1081, 11, 309, 311, 709, 50972, 50972, 1570, 3700, 300, 291, 434, 516, 281, 652, 257, 6146, 13, 51104, 51104, 663, 311, 1071, 665, 935, 13, 51154, 51154, 1779, 13, 51204, 51204, 1436, 291, 393, 11, 498, 291, 536, 11, 498, 291, 976, 257, 15778, 2657, 2519, 1315, 2031, 293, 550, 291, 51518, 51518, 976, 257, 2136, 2105, 284, 2445, 2411, 88, 11, 550, 291, 393, 574, 558, 958, 281, 1184, 661, 293, 291, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13770867285327376, "compression_ratio": 1.6820083682008369, "no_caption_prob": 4.029295268992428e-06}, {"id": 323, "seek": 125292, "start": 1265.0800000000002, "end": 1267.72, "text": " less likely that you're going to make a mistake.", "tokens": [50364, 400, 264, 2636, 6770, 307, 437, 307, 264, 2010, 295, 300, 2519, 13, 50600, 50600, 400, 570, 291, 362, 1293, 3760, 293, 979, 8616, 293, 43430, 412, 264, 912, 1081, 11, 309, 311, 709, 50972, 50972, 1570, 3700, 300, 291, 434, 516, 281, 652, 257, 6146, 13, 51104, 51104, 663, 311, 1071, 665, 935, 13, 51154, 51154, 1779, 13, 51204, 51204, 1436, 291, 393, 11, 498, 291, 536, 11, 498, 291, 976, 257, 15778, 2657, 2519, 1315, 2031, 293, 550, 291, 51518, 51518, 976, 257, 2136, 2105, 284, 2445, 2411, 88, 11, 550, 291, 393, 574, 558, 958, 281, 1184, 661, 293, 291, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13770867285327376, "compression_ratio": 1.6820083682008369, "no_caption_prob": 4.029295268992428e-06}, {"id": 324, "seek": 125292, "start": 1267.72, "end": 1268.72, "text": " That's another good point.", "tokens": [50364, 400, 264, 2636, 6770, 307, 437, 307, 264, 2010, 295, 300, 2519, 13, 50600, 50600, 400, 570, 291, 362, 1293, 3760, 293, 979, 8616, 293, 43430, 412, 264, 912, 1081, 11, 309, 311, 709, 50972, 50972, 1570, 3700, 300, 291, 434, 516, 281, 652, 257, 6146, 13, 51104, 51104, 663, 311, 1071, 665, 935, 13, 51154, 51154, 1779, 13, 51204, 51204, 1436, 291, 393, 11, 498, 291, 536, 11, 498, 291, 976, 257, 15778, 2657, 2519, 1315, 2031, 293, 550, 291, 51518, 51518, 976, 257, 2136, 2105, 284, 2445, 2411, 88, 11, 550, 291, 393, 574, 558, 958, 281, 1184, 661, 293, 291, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13770867285327376, "compression_ratio": 1.6820083682008369, "no_caption_prob": 4.029295268992428e-06}, {"id": 325, "seek": 125292, "start": 1268.72, "end": 1269.72, "text": " Right.", "tokens": [50364, 400, 264, 2636, 6770, 307, 437, 307, 264, 2010, 295, 300, 2519, 13, 50600, 50600, 400, 570, 291, 362, 1293, 3760, 293, 979, 8616, 293, 43430, 412, 264, 912, 1081, 11, 309, 311, 709, 50972, 50972, 1570, 3700, 300, 291, 434, 516, 281, 652, 257, 6146, 13, 51104, 51104, 663, 311, 1071, 665, 935, 13, 51154, 51154, 1779, 13, 51204, 51204, 1436, 291, 393, 11, 498, 291, 536, 11, 498, 291, 976, 257, 15778, 2657, 2519, 1315, 2031, 293, 550, 291, 51518, 51518, 976, 257, 2136, 2105, 284, 2445, 2411, 88, 11, 550, 291, 393, 574, 558, 958, 281, 1184, 661, 293, 291, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13770867285327376, "compression_ratio": 1.6820083682008369, "no_caption_prob": 4.029295268992428e-06}, {"id": 326, "seek": 125292, "start": 1269.72, "end": 1276.0, "text": " Because you can, if you see, if you give a JavaScript object field name x and then you", "tokens": [50364, 400, 264, 2636, 6770, 307, 437, 307, 264, 2010, 295, 300, 2519, 13, 50600, 50600, 400, 570, 291, 362, 1293, 3760, 293, 979, 8616, 293, 43430, 412, 264, 912, 1081, 11, 309, 311, 709, 50972, 50972, 1570, 3700, 300, 291, 434, 516, 281, 652, 257, 6146, 13, 51104, 51104, 663, 311, 1071, 665, 935, 13, 51154, 51154, 1779, 13, 51204, 51204, 1436, 291, 393, 11, 498, 291, 536, 11, 498, 291, 976, 257, 15778, 2657, 2519, 1315, 2031, 293, 550, 291, 51518, 51518, 976, 257, 2136, 2105, 284, 2445, 2411, 88, 11, 550, 291, 393, 574, 558, 958, 281, 1184, 661, 293, 291, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13770867285327376, "compression_ratio": 1.6820083682008369, "no_caption_prob": 4.029295268992428e-06}, {"id": 327, "seek": 125292, "start": 1276.0, "end": 1282.6000000000001, "text": " give a record accessor function.y, then you can look right next to each other and you", "tokens": [50364, 400, 264, 2636, 6770, 307, 437, 307, 264, 2010, 295, 300, 2519, 13, 50600, 50600, 400, 570, 291, 362, 1293, 3760, 293, 979, 8616, 293, 43430, 412, 264, 912, 1081, 11, 309, 311, 709, 50972, 50972, 1570, 3700, 300, 291, 434, 516, 281, 652, 257, 6146, 13, 51104, 51104, 663, 311, 1071, 665, 935, 13, 51154, 51154, 1779, 13, 51204, 51204, 1436, 291, 393, 11, 498, 291, 536, 11, 498, 291, 976, 257, 15778, 2657, 2519, 1315, 2031, 293, 550, 291, 51518, 51518, 976, 257, 2136, 2105, 284, 2445, 2411, 88, 11, 550, 291, 393, 574, 558, 958, 281, 1184, 661, 293, 291, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.13770867285327376, "compression_ratio": 1.6820083682008369, "no_caption_prob": 4.029295268992428e-06}, {"id": 328, "seek": 128260, "start": 1282.6, "end": 1286.8799999999999, "text": " can see visually it's more obvious that something's gone wrong.", "tokens": [50364, 393, 536, 19622, 309, 311, 544, 6322, 300, 746, 311, 2780, 2085, 13, 50578, 50578, 407, 2086, 11, 406, 787, 366, 291, 406, 7027, 300, 1589, 382, 291, 1322, 309, 493, 294, 732, 4994, 3190, 11, 50928, 50928, 457, 291, 393, 536, 264, 1589, 1214, 13, 51050, 51050, 407, 498, 456, 311, 257, 6146, 11, 309, 311, 3571, 281, 3745, 13, 51204, 51204, 400, 291, 486, 406, 312, 1075, 281, 1856, 484, 295, 257, 2519, 11, 337, 5197, 11, 420, 382, 3612, 412, 1935, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.15450986948880283, "compression_ratio": 1.6057692307692308, "no_caption_prob": 2.5466031729592942e-05}, {"id": 329, "seek": 128260, "start": 1286.8799999999999, "end": 1293.8799999999999, "text": " So yes, not only are you not losing that information as you build it up in two separate places,", "tokens": [50364, 393, 536, 19622, 309, 311, 544, 6322, 300, 746, 311, 2780, 2085, 13, 50578, 50578, 407, 2086, 11, 406, 787, 366, 291, 406, 7027, 300, 1589, 382, 291, 1322, 309, 493, 294, 732, 4994, 3190, 11, 50928, 50928, 457, 291, 393, 536, 264, 1589, 1214, 13, 51050, 51050, 407, 498, 456, 311, 257, 6146, 11, 309, 311, 3571, 281, 3745, 13, 51204, 51204, 400, 291, 486, 406, 312, 1075, 281, 1856, 484, 295, 257, 2519, 11, 337, 5197, 11, 420, 382, 3612, 412, 1935, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.15450986948880283, "compression_ratio": 1.6057692307692308, "no_caption_prob": 2.5466031729592942e-05}, {"id": 330, "seek": 128260, "start": 1293.8799999999999, "end": 1296.32, "text": " but you can see the information together.", "tokens": [50364, 393, 536, 19622, 309, 311, 544, 6322, 300, 746, 311, 2780, 2085, 13, 50578, 50578, 407, 2086, 11, 406, 787, 366, 291, 406, 7027, 300, 1589, 382, 291, 1322, 309, 493, 294, 732, 4994, 3190, 11, 50928, 50928, 457, 291, 393, 536, 264, 1589, 1214, 13, 51050, 51050, 407, 498, 456, 311, 257, 6146, 11, 309, 311, 3571, 281, 3745, 13, 51204, 51204, 400, 291, 486, 406, 312, 1075, 281, 1856, 484, 295, 257, 2519, 11, 337, 5197, 11, 420, 382, 3612, 412, 1935, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.15450986948880283, "compression_ratio": 1.6057692307692308, "no_caption_prob": 2.5466031729592942e-05}, {"id": 331, "seek": 128260, "start": 1296.32, "end": 1299.3999999999999, "text": " So if there's a mistake, it's easier to catch.", "tokens": [50364, 393, 536, 19622, 309, 311, 544, 6322, 300, 746, 311, 2780, 2085, 13, 50578, 50578, 407, 2086, 11, 406, 787, 366, 291, 406, 7027, 300, 1589, 382, 291, 1322, 309, 493, 294, 732, 4994, 3190, 11, 50928, 50928, 457, 291, 393, 536, 264, 1589, 1214, 13, 51050, 51050, 407, 498, 456, 311, 257, 6146, 11, 309, 311, 3571, 281, 3745, 13, 51204, 51204, 400, 291, 486, 406, 312, 1075, 281, 1856, 484, 295, 257, 2519, 11, 337, 5197, 11, 420, 382, 3612, 412, 1935, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.15450986948880283, "compression_ratio": 1.6057692307692308, "no_caption_prob": 2.5466031729592942e-05}, {"id": 332, "seek": 128260, "start": 1299.3999999999999, "end": 1306.56, "text": " And you will not be able to leave out of a field, for instance, or as easily at least", "tokens": [50364, 393, 536, 19622, 309, 311, 544, 6322, 300, 746, 311, 2780, 2085, 13, 50578, 50578, 407, 2086, 11, 406, 787, 366, 291, 406, 7027, 300, 1589, 382, 291, 1322, 309, 493, 294, 732, 4994, 3190, 11, 50928, 50928, 457, 291, 393, 536, 264, 1589, 1214, 13, 51050, 51050, 407, 498, 456, 311, 257, 6146, 11, 309, 311, 3571, 281, 3745, 13, 51204, 51204, 400, 291, 486, 406, 312, 1075, 281, 1856, 484, 295, 257, 2519, 11, 337, 5197, 11, 420, 382, 3612, 412, 1935, 51562, 51562], "temperature": 0.0, "avg_logprob": -0.15450986948880283, "compression_ratio": 1.6057692307692308, "no_caption_prob": 2.5466031729592942e-05}, {"id": 333, "seek": 130656, "start": 1306.56, "end": 1314.36, "text": " because you can still do that in the object constructor or the record constructor.", "tokens": [50364, 570, 291, 393, 920, 360, 300, 294, 264, 2657, 47479, 420, 264, 2136, 47479, 13, 50754, 50754, 4162, 291, 528, 264, 2058, 1429, 7877, 293, 264, 979, 1429, 7877, 281, 1009, 312, 294, 20271, 11, 291, 534, 528, 51012, 51012, 281, 362, 439, 264, 6290, 424, 4174, 2435, 281, 652, 988, 300, 291, 500, 380, 2082, 729, 493, 13, 51303, 51303, 400, 562, 291, 362, 364, 2058, 1429, 300, 307, 588, 1400, 1314, 490, 979, 1429, 11, 411, 1310, 445, 257, 1326, 3876, 51565, 51565], "temperature": 0.0, "avg_logprob": -0.09728023923676589, "compression_ratio": 1.6555023923444976, "no_caption_prob": 4.005753362434916e-05}, {"id": 334, "seek": 130656, "start": 1314.36, "end": 1319.52, "text": " Since you want the encode format and the decode format to always be in sync, you really want", "tokens": [50364, 570, 291, 393, 920, 360, 300, 294, 264, 2657, 47479, 420, 264, 2136, 47479, 13, 50754, 50754, 4162, 291, 528, 264, 2058, 1429, 7877, 293, 264, 979, 1429, 7877, 281, 1009, 312, 294, 20271, 11, 291, 534, 528, 51012, 51012, 281, 362, 439, 264, 6290, 424, 4174, 2435, 281, 652, 988, 300, 291, 500, 380, 2082, 729, 493, 13, 51303, 51303, 400, 562, 291, 362, 364, 2058, 1429, 300, 307, 588, 1400, 1314, 490, 979, 1429, 11, 411, 1310, 445, 257, 1326, 3876, 51565, 51565], "temperature": 0.0, "avg_logprob": -0.09728023923676589, "compression_ratio": 1.6555023923444976, "no_caption_prob": 4.005753362434916e-05}, {"id": 335, "seek": 130656, "start": 1319.52, "end": 1325.34, "text": " to have all the guardrails available to make sure that you don't mess those up.", "tokens": [50364, 570, 291, 393, 920, 360, 300, 294, 264, 2657, 47479, 420, 264, 2136, 47479, 13, 50754, 50754, 4162, 291, 528, 264, 2058, 1429, 7877, 293, 264, 979, 1429, 7877, 281, 1009, 312, 294, 20271, 11, 291, 534, 528, 51012, 51012, 281, 362, 439, 264, 6290, 424, 4174, 2435, 281, 652, 988, 300, 291, 500, 380, 2082, 729, 493, 13, 51303, 51303, 400, 562, 291, 362, 364, 2058, 1429, 300, 307, 588, 1400, 1314, 490, 979, 1429, 11, 411, 1310, 445, 257, 1326, 3876, 51565, 51565], "temperature": 0.0, "avg_logprob": -0.09728023923676589, "compression_ratio": 1.6555023923444976, "no_caption_prob": 4.005753362434916e-05}, {"id": 336, "seek": 130656, "start": 1325.34, "end": 1330.58, "text": " And when you have an encode that is very far away from decode, like maybe just a few lines", "tokens": [50364, 570, 291, 393, 920, 360, 300, 294, 264, 2657, 47479, 420, 264, 2136, 47479, 13, 50754, 50754, 4162, 291, 528, 264, 2058, 1429, 7877, 293, 264, 979, 1429, 7877, 281, 1009, 312, 294, 20271, 11, 291, 534, 528, 51012, 51012, 281, 362, 439, 264, 6290, 424, 4174, 2435, 281, 652, 988, 300, 291, 500, 380, 2082, 729, 493, 13, 51303, 51303, 400, 562, 291, 362, 364, 2058, 1429, 300, 307, 588, 1400, 1314, 490, 979, 1429, 11, 411, 1310, 445, 257, 1326, 3876, 51565, 51565], "temperature": 0.0, "avg_logprob": -0.09728023923676589, "compression_ratio": 1.6555023923444976, "no_caption_prob": 4.005753362434916e-05}, {"id": 337, "seek": 133058, "start": 1330.58, "end": 1337.0, "text": " away, but that might still be too far away, then you're more likely to mess up.", "tokens": [50364, 1314, 11, 457, 300, 1062, 920, 312, 886, 1400, 1314, 11, 550, 291, 434, 544, 3700, 281, 2082, 493, 13, 50685, 50685, 400, 341, 307, 452, 2135, 21577, 337, 1228, 746, 411, 257, 3089, 66, 307, 562, 264, 979, 8616, 293, 43430, 51075, 51075, 366, 264, 912, 420, 2906, 264, 912, 551, 11, 291, 528, 281, 362, 439, 264, 3873, 2435, 13, 51403, 51403, 6454, 321, 751, 466, 577, 291, 979, 1429, 2375, 3467, 30, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.12084341652785675, "compression_ratio": 1.55, "no_caption_prob": 9.66563220572425e-06}, {"id": 338, "seek": 133058, "start": 1337.0, "end": 1344.8, "text": " And this is my main reasoning for using something like a codec is when the decoding and encoding", "tokens": [50364, 1314, 11, 457, 300, 1062, 920, 312, 886, 1400, 1314, 11, 550, 291, 434, 544, 3700, 281, 2082, 493, 13, 50685, 50685, 400, 341, 307, 452, 2135, 21577, 337, 1228, 746, 411, 257, 3089, 66, 307, 562, 264, 979, 8616, 293, 43430, 51075, 51075, 366, 264, 912, 420, 2906, 264, 912, 551, 11, 291, 528, 281, 362, 439, 264, 3873, 2435, 13, 51403, 51403, 6454, 321, 751, 466, 577, 291, 979, 1429, 2375, 3467, 30, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.12084341652785675, "compression_ratio": 1.55, "no_caption_prob": 9.66563220572425e-06}, {"id": 339, "seek": 133058, "start": 1344.8, "end": 1351.36, "text": " are the same or represent the same thing, you want to have all the tools available.", "tokens": [50364, 1314, 11, 457, 300, 1062, 920, 312, 886, 1400, 1314, 11, 550, 291, 434, 544, 3700, 281, 2082, 493, 13, 50685, 50685, 400, 341, 307, 452, 2135, 21577, 337, 1228, 746, 411, 257, 3089, 66, 307, 562, 264, 979, 8616, 293, 43430, 51075, 51075, 366, 264, 912, 420, 2906, 264, 912, 551, 11, 291, 528, 281, 362, 439, 264, 3873, 2435, 13, 51403, 51403, 6454, 321, 751, 466, 577, 291, 979, 1429, 2375, 3467, 30, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.12084341652785675, "compression_ratio": 1.55, "no_caption_prob": 9.66563220572425e-06}, {"id": 340, "seek": 133058, "start": 1351.36, "end": 1354.56, "text": " Should we talk about how you decode custom types?", "tokens": [50364, 1314, 11, 457, 300, 1062, 920, 312, 886, 1400, 1314, 11, 550, 291, 434, 544, 3700, 281, 2082, 493, 13, 50685, 50685, 400, 341, 307, 452, 2135, 21577, 337, 1228, 746, 411, 257, 3089, 66, 307, 562, 264, 979, 8616, 293, 43430, 51075, 51075, 366, 264, 912, 420, 2906, 264, 912, 551, 11, 291, 528, 281, 362, 439, 264, 3873, 2435, 13, 51403, 51403, 6454, 321, 751, 466, 577, 291, 979, 1429, 2375, 3467, 30, 51563, 51563], "temperature": 0.0, "avg_logprob": -0.12084341652785675, "compression_ratio": 1.55, "no_caption_prob": 9.66563220572425e-06}, {"id": 341, "seek": 135456, "start": 1354.56, "end": 1361.76, "text": " That's one of the really clever design elements in this library is that solution to creating", "tokens": [50364, 663, 311, 472, 295, 264, 534, 13494, 1715, 4959, 294, 341, 6405, 307, 300, 3827, 281, 4084, 50724, 50724, 257, 3089, 66, 337, 257, 2375, 2010, 13, 50824, 50824, 407, 4476, 11, 456, 311, 257, 707, 857, 295, 257, 2539, 7605, 281, 15213, 484, 577, 281, 589, 51086, 51086, 365, 341, 11, 457, 291, 434, 2390, 493, 341, 3089, 66, 13, 66, 2239, 11, 597, 309, 2516, 257, 2445, 11, 293, 300, 2445, 51510, 51510, 307, 516, 281, 747, 364, 6770, 337, 633, 2167, 17501, 300, 291, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1045370101928711, "compression_ratio": 1.6271929824561404, "no_caption_prob": 5.422112735686824e-06}, {"id": 342, "seek": 135456, "start": 1361.76, "end": 1363.76, "text": " a codec for a custom type.", "tokens": [50364, 663, 311, 472, 295, 264, 534, 13494, 1715, 4959, 294, 341, 6405, 307, 300, 3827, 281, 4084, 50724, 50724, 257, 3089, 66, 337, 257, 2375, 2010, 13, 50824, 50824, 407, 4476, 11, 456, 311, 257, 707, 857, 295, 257, 2539, 7605, 281, 15213, 484, 577, 281, 589, 51086, 51086, 365, 341, 11, 457, 291, 434, 2390, 493, 341, 3089, 66, 13, 66, 2239, 11, 597, 309, 2516, 257, 2445, 11, 293, 300, 2445, 51510, 51510, 307, 516, 281, 747, 364, 6770, 337, 633, 2167, 17501, 300, 291, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1045370101928711, "compression_ratio": 1.6271929824561404, "no_caption_prob": 5.422112735686824e-06}, {"id": 343, "seek": 135456, "start": 1363.76, "end": 1369.0, "text": " So essentially, there's a little bit of a learning curve to figuring out how to work", "tokens": [50364, 663, 311, 472, 295, 264, 534, 13494, 1715, 4959, 294, 341, 6405, 307, 300, 3827, 281, 4084, 50724, 50724, 257, 3089, 66, 337, 257, 2375, 2010, 13, 50824, 50824, 407, 4476, 11, 456, 311, 257, 707, 857, 295, 257, 2539, 7605, 281, 15213, 484, 577, 281, 589, 51086, 51086, 365, 341, 11, 457, 291, 434, 2390, 493, 341, 3089, 66, 13, 66, 2239, 11, 597, 309, 2516, 257, 2445, 11, 293, 300, 2445, 51510, 51510, 307, 516, 281, 747, 364, 6770, 337, 633, 2167, 17501, 300, 291, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1045370101928711, "compression_ratio": 1.6271929824561404, "no_caption_prob": 5.422112735686824e-06}, {"id": 344, "seek": 135456, "start": 1369.0, "end": 1377.48, "text": " with this, but you're building up this codec.custom, which it takes a function, and that function", "tokens": [50364, 663, 311, 472, 295, 264, 534, 13494, 1715, 4959, 294, 341, 6405, 307, 300, 3827, 281, 4084, 50724, 50724, 257, 3089, 66, 337, 257, 2375, 2010, 13, 50824, 50824, 407, 4476, 11, 456, 311, 257, 707, 857, 295, 257, 2539, 7605, 281, 15213, 484, 577, 281, 589, 51086, 51086, 365, 341, 11, 457, 291, 434, 2390, 493, 341, 3089, 66, 13, 66, 2239, 11, 597, 309, 2516, 257, 2445, 11, 293, 300, 2445, 51510, 51510, 307, 516, 281, 747, 364, 6770, 337, 633, 2167, 17501, 300, 291, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1045370101928711, "compression_ratio": 1.6271929824561404, "no_caption_prob": 5.422112735686824e-06}, {"id": 345, "seek": 135456, "start": 1377.48, "end": 1383.44, "text": " is going to take an argument for every single variant that you have.", "tokens": [50364, 663, 311, 472, 295, 264, 534, 13494, 1715, 4959, 294, 341, 6405, 307, 300, 3827, 281, 4084, 50724, 50724, 257, 3089, 66, 337, 257, 2375, 2010, 13, 50824, 50824, 407, 4476, 11, 456, 311, 257, 707, 857, 295, 257, 2539, 7605, 281, 15213, 484, 577, 281, 589, 51086, 51086, 365, 341, 11, 457, 291, 434, 2390, 493, 341, 3089, 66, 13, 66, 2239, 11, 597, 309, 2516, 257, 2445, 11, 293, 300, 2445, 51510, 51510, 307, 516, 281, 747, 364, 6770, 337, 633, 2167, 17501, 300, 291, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1045370101928711, "compression_ratio": 1.6271929824561404, "no_caption_prob": 5.422112735686824e-06}, {"id": 346, "seek": 138344, "start": 1383.44, "end": 1391.8600000000001, "text": " So if you have a teacher and student variant for a person, then so you'd have an argument", "tokens": [50364, 407, 498, 291, 362, 257, 5027, 293, 3107, 17501, 337, 257, 954, 11, 550, 370, 291, 1116, 362, 364, 6770, 50785, 50785, 337, 5027, 11, 364, 6770, 337, 3107, 11, 293, 364, 6770, 337, 264, 3539, 2158, 300, 291, 51102, 51102, 4613, 13, 51152, 51152, 407, 291, 393, 360, 257, 1389, 5629, 322, 300, 2158, 322, 300, 954, 11, 293, 550, 584, 498, 309, 311, 257, 5027, 11, 51529, 51529, 550, 291, 2677, 2885, 300, 5027, 11, 293, 550, 291, 362, 281, 818, 300, 6770, 300, 291, 632, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11029695427936057, "compression_ratio": 2.022222222222222, "no_caption_prob": 1.5206488569674548e-05}, {"id": 347, "seek": 138344, "start": 1391.8600000000001, "end": 1398.2, "text": " for teacher, an argument for student, and an argument for the actual value that you", "tokens": [50364, 407, 498, 291, 362, 257, 5027, 293, 3107, 17501, 337, 257, 954, 11, 550, 370, 291, 1116, 362, 364, 6770, 50785, 50785, 337, 5027, 11, 364, 6770, 337, 3107, 11, 293, 364, 6770, 337, 264, 3539, 2158, 300, 291, 51102, 51102, 4613, 13, 51152, 51152, 407, 291, 393, 360, 257, 1389, 5629, 322, 300, 2158, 322, 300, 954, 11, 293, 550, 584, 498, 309, 311, 257, 5027, 11, 51529, 51529, 550, 291, 2677, 2885, 300, 5027, 11, 293, 550, 291, 362, 281, 818, 300, 6770, 300, 291, 632, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11029695427936057, "compression_ratio": 2.022222222222222, "no_caption_prob": 1.5206488569674548e-05}, {"id": 348, "seek": 138344, "start": 1398.2, "end": 1399.2, "text": " received.", "tokens": [50364, 407, 498, 291, 362, 257, 5027, 293, 3107, 17501, 337, 257, 954, 11, 550, 370, 291, 1116, 362, 364, 6770, 50785, 50785, 337, 5027, 11, 364, 6770, 337, 3107, 11, 293, 364, 6770, 337, 264, 3539, 2158, 300, 291, 51102, 51102, 4613, 13, 51152, 51152, 407, 291, 393, 360, 257, 1389, 5629, 322, 300, 2158, 322, 300, 954, 11, 293, 550, 584, 498, 309, 311, 257, 5027, 11, 51529, 51529, 550, 291, 2677, 2885, 300, 5027, 11, 293, 550, 291, 362, 281, 818, 300, 6770, 300, 291, 632, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11029695427936057, "compression_ratio": 2.022222222222222, "no_caption_prob": 1.5206488569674548e-05}, {"id": 349, "seek": 138344, "start": 1399.2, "end": 1406.74, "text": " So you can do a case statement on that value on that person, and then say if it's a teacher,", "tokens": [50364, 407, 498, 291, 362, 257, 5027, 293, 3107, 17501, 337, 257, 954, 11, 550, 370, 291, 1116, 362, 364, 6770, 50785, 50785, 337, 5027, 11, 364, 6770, 337, 3107, 11, 293, 364, 6770, 337, 264, 3539, 2158, 300, 291, 51102, 51102, 4613, 13, 51152, 51152, 407, 291, 393, 360, 257, 1389, 5629, 322, 300, 2158, 322, 300, 954, 11, 293, 550, 584, 498, 309, 311, 257, 5027, 11, 51529, 51529, 550, 291, 2677, 2885, 300, 5027, 11, 293, 550, 291, 362, 281, 818, 300, 6770, 300, 291, 632, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11029695427936057, "compression_ratio": 2.022222222222222, "no_caption_prob": 1.5206488569674548e-05}, {"id": 350, "seek": 138344, "start": 1406.74, "end": 1411.56, "text": " then you destructure that teacher, and then you have to call that argument that you had", "tokens": [50364, 407, 498, 291, 362, 257, 5027, 293, 3107, 17501, 337, 257, 954, 11, 550, 370, 291, 1116, 362, 364, 6770, 50785, 50785, 337, 5027, 11, 364, 6770, 337, 3107, 11, 293, 364, 6770, 337, 264, 3539, 2158, 300, 291, 51102, 51102, 4613, 13, 51152, 51152, 407, 291, 393, 360, 257, 1389, 5629, 322, 300, 2158, 322, 300, 954, 11, 293, 550, 584, 498, 309, 311, 257, 5027, 11, 51529, 51529, 550, 291, 2677, 2885, 300, 5027, 11, 293, 550, 291, 362, 281, 818, 300, 6770, 300, 291, 632, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.11029695427936057, "compression_ratio": 2.022222222222222, "no_caption_prob": 1.5206488569674548e-05}, {"id": 351, "seek": 141156, "start": 1411.56, "end": 1416.12, "text": " for teacher, and that argument is the encoder being passed in.", "tokens": [50364, 337, 5027, 11, 293, 300, 6770, 307, 264, 2058, 19866, 885, 4678, 294, 13, 50592, 50592, 865, 11, 309, 311, 370, 3657, 13, 50776, 50776, 663, 311, 264, 551, 300, 11051, 428, 3567, 264, 881, 11, 293, 300, 311, 264, 534, 13494, 551, 466, 50979, 50979, 341, 1715, 307, 309, 10704, 257, 3827, 281, 1333, 295, 23384, 300, 1589, 11, 457, 309, 2138, 51340, 51340, 11051, 428, 3567, 412, 700, 13, 51424, 51424, 407, 498, 291, 519, 466, 309, 11, 437, 360, 291, 643, 281, 2924, 309, 294, 1668, 281, 362, 309, 14582, 3545, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13242559043728575, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.5206675016088411e-05}, {"id": 352, "seek": 141156, "start": 1416.12, "end": 1419.8, "text": " Yeah, it's so weird.", "tokens": [50364, 337, 5027, 11, 293, 300, 6770, 307, 264, 2058, 19866, 885, 4678, 294, 13, 50592, 50592, 865, 11, 309, 311, 370, 3657, 13, 50776, 50776, 663, 311, 264, 551, 300, 11051, 428, 3567, 264, 881, 11, 293, 300, 311, 264, 534, 13494, 551, 466, 50979, 50979, 341, 1715, 307, 309, 10704, 257, 3827, 281, 1333, 295, 23384, 300, 1589, 11, 457, 309, 2138, 51340, 51340, 11051, 428, 3567, 412, 700, 13, 51424, 51424, 407, 498, 291, 519, 466, 309, 11, 437, 360, 291, 643, 281, 2924, 309, 294, 1668, 281, 362, 309, 14582, 3545, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13242559043728575, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.5206675016088411e-05}, {"id": 353, "seek": 141156, "start": 1419.8, "end": 1423.86, "text": " That's the thing that hurts your brain the most, and that's the really clever thing about", "tokens": [50364, 337, 5027, 11, 293, 300, 6770, 307, 264, 2058, 19866, 885, 4678, 294, 13, 50592, 50592, 865, 11, 309, 311, 370, 3657, 13, 50776, 50776, 663, 311, 264, 551, 300, 11051, 428, 3567, 264, 881, 11, 293, 300, 311, 264, 534, 13494, 551, 466, 50979, 50979, 341, 1715, 307, 309, 10704, 257, 3827, 281, 1333, 295, 23384, 300, 1589, 11, 457, 309, 2138, 51340, 51340, 11051, 428, 3567, 412, 700, 13, 51424, 51424, 407, 498, 291, 519, 466, 309, 11, 437, 360, 291, 643, 281, 2924, 309, 294, 1668, 281, 362, 309, 14582, 3545, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13242559043728575, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.5206675016088411e-05}, {"id": 354, "seek": 141156, "start": 1423.86, "end": 1431.08, "text": " this design is it finds a solution to sort of capturing that information, but it definitely", "tokens": [50364, 337, 5027, 11, 293, 300, 6770, 307, 264, 2058, 19866, 885, 4678, 294, 13, 50592, 50592, 865, 11, 309, 311, 370, 3657, 13, 50776, 50776, 663, 311, 264, 551, 300, 11051, 428, 3567, 264, 881, 11, 293, 300, 311, 264, 534, 13494, 551, 466, 50979, 50979, 341, 1715, 307, 309, 10704, 257, 3827, 281, 1333, 295, 23384, 300, 1589, 11, 457, 309, 2138, 51340, 51340, 11051, 428, 3567, 412, 700, 13, 51424, 51424, 407, 498, 291, 519, 466, 309, 11, 437, 360, 291, 643, 281, 2924, 309, 294, 1668, 281, 362, 309, 14582, 3545, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13242559043728575, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.5206675016088411e-05}, {"id": 355, "seek": 141156, "start": 1431.08, "end": 1432.76, "text": " hurts your brain at first.", "tokens": [50364, 337, 5027, 11, 293, 300, 6770, 307, 264, 2058, 19866, 885, 4678, 294, 13, 50592, 50592, 865, 11, 309, 311, 370, 3657, 13, 50776, 50776, 663, 311, 264, 551, 300, 11051, 428, 3567, 264, 881, 11, 293, 300, 311, 264, 534, 13494, 551, 466, 50979, 50979, 341, 1715, 307, 309, 10704, 257, 3827, 281, 1333, 295, 23384, 300, 1589, 11, 457, 309, 2138, 51340, 51340, 11051, 428, 3567, 412, 700, 13, 51424, 51424, 407, 498, 291, 519, 466, 309, 11, 437, 360, 291, 643, 281, 2924, 309, 294, 1668, 281, 362, 309, 14582, 3545, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13242559043728575, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.5206675016088411e-05}, {"id": 356, "seek": 141156, "start": 1432.76, "end": 1440.56, "text": " So if you think about it, what do you need to teach it in order to have it reversibly", "tokens": [50364, 337, 5027, 11, 293, 300, 6770, 307, 264, 2058, 19866, 885, 4678, 294, 13, 50592, 50592, 865, 11, 309, 311, 370, 3657, 13, 50776, 50776, 663, 311, 264, 551, 300, 11051, 428, 3567, 264, 881, 11, 293, 300, 311, 264, 534, 13494, 551, 466, 50979, 50979, 341, 1715, 307, 309, 10704, 257, 3827, 281, 1333, 295, 23384, 300, 1589, 11, 457, 309, 2138, 51340, 51340, 11051, 428, 3567, 412, 700, 13, 51424, 51424, 407, 498, 291, 519, 466, 309, 11, 437, 360, 291, 643, 281, 2924, 309, 294, 1668, 281, 362, 309, 14582, 3545, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13242559043728575, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.5206675016088411e-05}, {"id": 357, "seek": 144056, "start": 1440.56, "end": 1444.04, "text": " decode and encode a custom type?", "tokens": [50364, 979, 1429, 293, 2058, 1429, 257, 2375, 2010, 30, 50538, 50538, 400, 437, 291, 643, 281, 2924, 309, 307, 11, 731, 11, 577, 360, 286, 1888, 4936, 264, 1589, 490, 257, 2375, 50872, 50872, 2010, 293, 550, 2058, 1429, 300, 11, 293, 550, 577, 360, 286, 979, 1429, 300, 30, 51174, 51174, 400, 337, 43430, 309, 11, 370, 291, 1322, 493, 613, 2058, 378, 433, 1228, 613, 17501, 4018, 11, 17501, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.1628734334309896, "compression_ratio": 1.694267515923567, "no_caption_prob": 1.6187401342904195e-05}, {"id": 358, "seek": 144056, "start": 1444.04, "end": 1450.72, "text": " And what you need to teach it is, well, how do I pick apart the information from a custom", "tokens": [50364, 979, 1429, 293, 2058, 1429, 257, 2375, 2010, 30, 50538, 50538, 400, 437, 291, 643, 281, 2924, 309, 307, 11, 731, 11, 577, 360, 286, 1888, 4936, 264, 1589, 490, 257, 2375, 50872, 50872, 2010, 293, 550, 2058, 1429, 300, 11, 293, 550, 577, 360, 286, 979, 1429, 300, 30, 51174, 51174, 400, 337, 43430, 309, 11, 370, 291, 1322, 493, 613, 2058, 378, 433, 1228, 613, 17501, 4018, 11, 17501, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.1628734334309896, "compression_ratio": 1.694267515923567, "no_caption_prob": 1.6187401342904195e-05}, {"id": 359, "seek": 144056, "start": 1450.72, "end": 1456.76, "text": " type and then encode that, and then how do I decode that?", "tokens": [50364, 979, 1429, 293, 2058, 1429, 257, 2375, 2010, 30, 50538, 50538, 400, 437, 291, 643, 281, 2924, 309, 307, 11, 731, 11, 577, 360, 286, 1888, 4936, 264, 1589, 490, 257, 2375, 50872, 50872, 2010, 293, 550, 2058, 1429, 300, 11, 293, 550, 577, 360, 286, 979, 1429, 300, 30, 51174, 51174, 400, 337, 43430, 309, 11, 370, 291, 1322, 493, 613, 2058, 378, 433, 1228, 613, 17501, 4018, 11, 17501, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.1628734334309896, "compression_ratio": 1.694267515923567, "no_caption_prob": 1.6187401342904195e-05}, {"id": 360, "seek": 144056, "start": 1456.76, "end": 1464.6399999999999, "text": " And for encoding it, so you build up these encoders using these variant zero, variant", "tokens": [50364, 979, 1429, 293, 2058, 1429, 257, 2375, 2010, 30, 50538, 50538, 400, 437, 291, 643, 281, 2924, 309, 307, 11, 731, 11, 577, 360, 286, 1888, 4936, 264, 1589, 490, 257, 2375, 50872, 50872, 2010, 293, 550, 2058, 1429, 300, 11, 293, 550, 577, 360, 286, 979, 1429, 300, 30, 51174, 51174, 400, 337, 43430, 309, 11, 370, 291, 1322, 493, 613, 2058, 378, 433, 1228, 613, 17501, 4018, 11, 17501, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.1628734334309896, "compression_ratio": 1.694267515923567, "no_caption_prob": 1.6187401342904195e-05}, {"id": 361, "seek": 146464, "start": 1464.64, "end": 1472.48, "text": " one, variant two functions, which take a name to serialize for that variant on the JavaScript,", "tokens": [50364, 472, 11, 17501, 732, 6828, 11, 597, 747, 257, 1315, 281, 17436, 1125, 337, 300, 17501, 322, 264, 15778, 11, 50756, 50756, 293, 550, 436, 747, 264, 47479, 281, 1322, 309, 493, 11, 370, 300, 5112, 309, 562, 309, 979, 4789, 309, 51039, 51039, 577, 281, 1322, 309, 493, 11, 293, 550, 291, 747, 264, 2609, 3089, 14368, 337, 1184, 295, 264, 12869, 51325, 51325, 295, 264, 2375, 2010, 13, 51385, 51385, 407, 309, 534, 11051, 428, 3567, 11, 457, 286, 915, 365, 3701, 604, 3997, 5102, 294, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.08561470197594684, "compression_ratio": 1.663677130044843, "no_caption_prob": 2.4299251890624873e-05}, {"id": 362, "seek": 146464, "start": 1472.48, "end": 1478.14, "text": " and then they take the constructor to build it up, so that tells it when it decodes it", "tokens": [50364, 472, 11, 17501, 732, 6828, 11, 597, 747, 257, 1315, 281, 17436, 1125, 337, 300, 17501, 322, 264, 15778, 11, 50756, 50756, 293, 550, 436, 747, 264, 47479, 281, 1322, 309, 493, 11, 370, 300, 5112, 309, 562, 309, 979, 4789, 309, 51039, 51039, 577, 281, 1322, 309, 493, 11, 293, 550, 291, 747, 264, 2609, 3089, 14368, 337, 1184, 295, 264, 12869, 51325, 51325, 295, 264, 2375, 2010, 13, 51385, 51385, 407, 309, 534, 11051, 428, 3567, 11, 457, 286, 915, 365, 3701, 604, 3997, 5102, 294, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.08561470197594684, "compression_ratio": 1.663677130044843, "no_caption_prob": 2.4299251890624873e-05}, {"id": 363, "seek": 146464, "start": 1478.14, "end": 1483.8600000000001, "text": " how to build it up, and then you take the individual codecs for each of the arguments", "tokens": [50364, 472, 11, 17501, 732, 6828, 11, 597, 747, 257, 1315, 281, 17436, 1125, 337, 300, 17501, 322, 264, 15778, 11, 50756, 50756, 293, 550, 436, 747, 264, 47479, 281, 1322, 309, 493, 11, 370, 300, 5112, 309, 562, 309, 979, 4789, 309, 51039, 51039, 577, 281, 1322, 309, 493, 11, 293, 550, 291, 747, 264, 2609, 3089, 14368, 337, 1184, 295, 264, 12869, 51325, 51325, 295, 264, 2375, 2010, 13, 51385, 51385, 407, 309, 534, 11051, 428, 3567, 11, 457, 286, 915, 365, 3701, 604, 3997, 5102, 294, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.08561470197594684, "compression_ratio": 1.663677130044843, "no_caption_prob": 2.4299251890624873e-05}, {"id": 364, "seek": 146464, "start": 1483.8600000000001, "end": 1485.0600000000002, "text": " of the custom type.", "tokens": [50364, 472, 11, 17501, 732, 6828, 11, 597, 747, 257, 1315, 281, 17436, 1125, 337, 300, 17501, 322, 264, 15778, 11, 50756, 50756, 293, 550, 436, 747, 264, 47479, 281, 1322, 309, 493, 11, 370, 300, 5112, 309, 562, 309, 979, 4789, 309, 51039, 51039, 577, 281, 1322, 309, 493, 11, 293, 550, 291, 747, 264, 2609, 3089, 14368, 337, 1184, 295, 264, 12869, 51325, 51325, 295, 264, 2375, 2010, 13, 51385, 51385, 407, 309, 534, 11051, 428, 3567, 11, 457, 286, 915, 365, 3701, 604, 3997, 5102, 294, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.08561470197594684, "compression_ratio": 1.663677130044843, "no_caption_prob": 2.4299251890624873e-05}, {"id": 365, "seek": 146464, "start": 1485.0600000000002, "end": 1492.6200000000001, "text": " So it really hurts your brain, but I find with understanding any complex pattern in", "tokens": [50364, 472, 11, 17501, 732, 6828, 11, 597, 747, 257, 1315, 281, 17436, 1125, 337, 300, 17501, 322, 264, 15778, 11, 50756, 50756, 293, 550, 436, 747, 264, 47479, 281, 1322, 309, 493, 11, 370, 300, 5112, 309, 562, 309, 979, 4789, 309, 51039, 51039, 577, 281, 1322, 309, 493, 11, 293, 550, 291, 747, 264, 2609, 3089, 14368, 337, 1184, 295, 264, 12869, 51325, 51325, 295, 264, 2375, 2010, 13, 51385, 51385, 407, 309, 534, 11051, 428, 3567, 11, 457, 286, 915, 365, 3701, 604, 3997, 5102, 294, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.08561470197594684, "compression_ratio": 1.663677130044843, "no_caption_prob": 2.4299251890624873e-05}, {"id": 366, "seek": 149262, "start": 1492.62, "end": 1500.76, "text": " an Elm API, I find it helpful to put yourself in the shoes of the library author and say,", "tokens": [50364, 364, 2699, 76, 9362, 11, 286, 915, 309, 4961, 281, 829, 1803, 294, 264, 6654, 295, 264, 6405, 3793, 293, 584, 11, 50771, 50771, 411, 11, 2602, 295, 445, 1566, 11, 411, 11, 1954, 11, 341, 307, 2252, 281, 2464, 11, 291, 584, 11, 411, 11, 437, 51091, 51091, 775, 341, 9362, 643, 281, 9021, 30, 51253, 51253, 400, 550, 309, 3665, 291, 1223, 264, 1715, 13, 51381, 51381, 400, 370, 797, 11, 341, 9362, 2203, 11, 437, 309, 2203, 281, 9021, 307, 291, 643, 257, 636, 281, 980, 309, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.11901524726380693, "compression_ratio": 1.6896551724137931, "no_caption_prob": 2.5465531507506967e-05}, {"id": 367, "seek": 149262, "start": 1500.76, "end": 1507.1599999999999, "text": " like, instead of just saying, like, oh, this is difficult to write, you say, like, what", "tokens": [50364, 364, 2699, 76, 9362, 11, 286, 915, 309, 4961, 281, 829, 1803, 294, 264, 6654, 295, 264, 6405, 3793, 293, 584, 11, 50771, 50771, 411, 11, 2602, 295, 445, 1566, 11, 411, 11, 1954, 11, 341, 307, 2252, 281, 2464, 11, 291, 584, 11, 411, 11, 437, 51091, 51091, 775, 341, 9362, 643, 281, 9021, 30, 51253, 51253, 400, 550, 309, 3665, 291, 1223, 264, 1715, 13, 51381, 51381, 400, 370, 797, 11, 341, 9362, 2203, 11, 437, 309, 2203, 281, 9021, 307, 291, 643, 257, 636, 281, 980, 309, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.11901524726380693, "compression_ratio": 1.6896551724137931, "no_caption_prob": 2.5465531507506967e-05}, {"id": 368, "seek": 149262, "start": 1507.1599999999999, "end": 1510.3999999999999, "text": " does this API need to accomplish?", "tokens": [50364, 364, 2699, 76, 9362, 11, 286, 915, 309, 4961, 281, 829, 1803, 294, 264, 6654, 295, 264, 6405, 3793, 293, 584, 11, 50771, 50771, 411, 11, 2602, 295, 445, 1566, 11, 411, 11, 1954, 11, 341, 307, 2252, 281, 2464, 11, 291, 584, 11, 411, 11, 437, 51091, 51091, 775, 341, 9362, 643, 281, 9021, 30, 51253, 51253, 400, 550, 309, 3665, 291, 1223, 264, 1715, 13, 51381, 51381, 400, 370, 797, 11, 341, 9362, 2203, 11, 437, 309, 2203, 281, 9021, 307, 291, 643, 257, 636, 281, 980, 309, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.11901524726380693, "compression_ratio": 1.6896551724137931, "no_caption_prob": 2.5465531507506967e-05}, {"id": 369, "seek": 149262, "start": 1510.3999999999999, "end": 1512.9599999999998, "text": " And then it helps you understand the design.", "tokens": [50364, 364, 2699, 76, 9362, 11, 286, 915, 309, 4961, 281, 829, 1803, 294, 264, 6654, 295, 264, 6405, 3793, 293, 584, 11, 50771, 50771, 411, 11, 2602, 295, 445, 1566, 11, 411, 11, 1954, 11, 341, 307, 2252, 281, 2464, 11, 291, 584, 11, 411, 11, 437, 51091, 51091, 775, 341, 9362, 643, 281, 9021, 30, 51253, 51253, 400, 550, 309, 3665, 291, 1223, 264, 1715, 13, 51381, 51381, 400, 370, 797, 11, 341, 9362, 2203, 11, 437, 309, 2203, 281, 9021, 307, 291, 643, 257, 636, 281, 980, 309, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.11901524726380693, "compression_ratio": 1.6896551724137931, "no_caption_prob": 2.5465531507506967e-05}, {"id": 370, "seek": 149262, "start": 1512.9599999999998, "end": 1518.84, "text": " And so again, this API needs, what it needs to accomplish is you need a way to tell it", "tokens": [50364, 364, 2699, 76, 9362, 11, 286, 915, 309, 4961, 281, 829, 1803, 294, 264, 6654, 295, 264, 6405, 3793, 293, 584, 11, 50771, 50771, 411, 11, 2602, 295, 445, 1566, 11, 411, 11, 1954, 11, 341, 307, 2252, 281, 2464, 11, 291, 584, 11, 411, 11, 437, 51091, 51091, 775, 341, 9362, 643, 281, 9021, 30, 51253, 51253, 400, 550, 309, 3665, 291, 1223, 264, 1715, 13, 51381, 51381, 400, 370, 797, 11, 341, 9362, 2203, 11, 437, 309, 2203, 281, 9021, 307, 291, 643, 257, 636, 281, 980, 309, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.11901524726380693, "compression_ratio": 1.6896551724137931, "no_caption_prob": 2.5465531507506967e-05}, {"id": 371, "seek": 151884, "start": 1518.84, "end": 1526.24, "text": " how to, you know, how to take these values, decode them from JSON, and then build up a", "tokens": [50364, 577, 281, 11, 291, 458, 11, 577, 281, 747, 613, 4190, 11, 979, 1429, 552, 490, 31828, 11, 293, 550, 1322, 493, 257, 50734, 50734, 2375, 2010, 11, 293, 291, 643, 281, 312, 1075, 281, 1888, 4936, 257, 2375, 2010, 293, 1261, 309, 666, 257, 17436, 1602, 51066, 51066, 31828, 2657, 13, 51166, 51166, 407, 286, 519, 309, 3665, 281, 1066, 300, 294, 1575, 562, 291, 574, 412, 309, 13, 51310, 51310, 1545, 307, 309, 8437, 294, 613, 2058, 19866, 6828, 30, 51552, 51552, 20043, 382, 257, 6405, 3793, 11, 291, 434, 1382, 281, 5042, 561, 490, 1455, 8038, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09231614149533786, "compression_ratio": 1.5743801652892562, "no_caption_prob": 2.368787818340934e-06}, {"id": 372, "seek": 151884, "start": 1526.24, "end": 1532.8799999999999, "text": " custom type, and you need to be able to pick apart a custom type and turn it into a serialized", "tokens": [50364, 577, 281, 11, 291, 458, 11, 577, 281, 747, 613, 4190, 11, 979, 1429, 552, 490, 31828, 11, 293, 550, 1322, 493, 257, 50734, 50734, 2375, 2010, 11, 293, 291, 643, 281, 312, 1075, 281, 1888, 4936, 257, 2375, 2010, 293, 1261, 309, 666, 257, 17436, 1602, 51066, 51066, 31828, 2657, 13, 51166, 51166, 407, 286, 519, 309, 3665, 281, 1066, 300, 294, 1575, 562, 291, 574, 412, 309, 13, 51310, 51310, 1545, 307, 309, 8437, 294, 613, 2058, 19866, 6828, 30, 51552, 51552, 20043, 382, 257, 6405, 3793, 11, 291, 434, 1382, 281, 5042, 561, 490, 1455, 8038, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09231614149533786, "compression_ratio": 1.5743801652892562, "no_caption_prob": 2.368787818340934e-06}, {"id": 373, "seek": 151884, "start": 1532.8799999999999, "end": 1534.8799999999999, "text": " JSON object.", "tokens": [50364, 577, 281, 11, 291, 458, 11, 577, 281, 747, 613, 4190, 11, 979, 1429, 552, 490, 31828, 11, 293, 550, 1322, 493, 257, 50734, 50734, 2375, 2010, 11, 293, 291, 643, 281, 312, 1075, 281, 1888, 4936, 257, 2375, 2010, 293, 1261, 309, 666, 257, 17436, 1602, 51066, 51066, 31828, 2657, 13, 51166, 51166, 407, 286, 519, 309, 3665, 281, 1066, 300, 294, 1575, 562, 291, 574, 412, 309, 13, 51310, 51310, 1545, 307, 309, 8437, 294, 613, 2058, 19866, 6828, 30, 51552, 51552, 20043, 382, 257, 6405, 3793, 11, 291, 434, 1382, 281, 5042, 561, 490, 1455, 8038, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09231614149533786, "compression_ratio": 1.5743801652892562, "no_caption_prob": 2.368787818340934e-06}, {"id": 374, "seek": 151884, "start": 1534.8799999999999, "end": 1537.76, "text": " So I think it helps to keep that in mind when you look at it.", "tokens": [50364, 577, 281, 11, 291, 458, 11, 577, 281, 747, 613, 4190, 11, 979, 1429, 552, 490, 31828, 11, 293, 550, 1322, 493, 257, 50734, 50734, 2375, 2010, 11, 293, 291, 643, 281, 312, 1075, 281, 1888, 4936, 257, 2375, 2010, 293, 1261, 309, 666, 257, 17436, 1602, 51066, 51066, 31828, 2657, 13, 51166, 51166, 407, 286, 519, 309, 3665, 281, 1066, 300, 294, 1575, 562, 291, 574, 412, 309, 13, 51310, 51310, 1545, 307, 309, 8437, 294, 613, 2058, 19866, 6828, 30, 51552, 51552, 20043, 382, 257, 6405, 3793, 11, 291, 434, 1382, 281, 5042, 561, 490, 1455, 8038, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09231614149533786, "compression_ratio": 1.5743801652892562, "no_caption_prob": 2.368787818340934e-06}, {"id": 375, "seek": 151884, "start": 1537.76, "end": 1542.6, "text": " Why is it passing in these encoder functions?", "tokens": [50364, 577, 281, 11, 291, 458, 11, 577, 281, 747, 613, 4190, 11, 979, 1429, 552, 490, 31828, 11, 293, 550, 1322, 493, 257, 50734, 50734, 2375, 2010, 11, 293, 291, 643, 281, 312, 1075, 281, 1888, 4936, 257, 2375, 2010, 293, 1261, 309, 666, 257, 17436, 1602, 51066, 51066, 31828, 2657, 13, 51166, 51166, 407, 286, 519, 309, 3665, 281, 1066, 300, 294, 1575, 562, 291, 574, 412, 309, 13, 51310, 51310, 1545, 307, 309, 8437, 294, 613, 2058, 19866, 6828, 30, 51552, 51552, 20043, 382, 257, 6405, 3793, 11, 291, 434, 1382, 281, 5042, 561, 490, 1455, 8038, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09231614149533786, "compression_ratio": 1.5743801652892562, "no_caption_prob": 2.368787818340934e-06}, {"id": 376, "seek": 151884, "start": 1542.6, "end": 1548.1599999999999, "text": " Often as a library author, you're trying to avoid people from making mistakes.", "tokens": [50364, 577, 281, 11, 291, 458, 11, 577, 281, 747, 613, 4190, 11, 979, 1429, 552, 490, 31828, 11, 293, 550, 1322, 493, 257, 50734, 50734, 2375, 2010, 11, 293, 291, 643, 281, 312, 1075, 281, 1888, 4936, 257, 2375, 2010, 293, 1261, 309, 666, 257, 17436, 1602, 51066, 51066, 31828, 2657, 13, 51166, 51166, 407, 286, 519, 309, 3665, 281, 1066, 300, 294, 1575, 562, 291, 574, 412, 309, 13, 51310, 51310, 1545, 307, 309, 8437, 294, 613, 2058, 19866, 6828, 30, 51552, 51552, 20043, 382, 257, 6405, 3793, 11, 291, 434, 1382, 281, 5042, 561, 490, 1455, 8038, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09231614149533786, "compression_ratio": 1.5743801652892562, "no_caption_prob": 2.368787818340934e-06}, {"id": 377, "seek": 154816, "start": 1548.16, "end": 1553.2, "text": " So if it looks a bit odd, it's probably because they're trying to add you to give you some", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 378, "seek": 154816, "start": 1553.2, "end": 1554.2, "text": " guarantees.", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 379, "seek": 154816, "start": 1554.2, "end": 1557.44, "text": " And in this case, that is exactly the point.", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 380, "seek": 154816, "start": 1557.44, "end": 1561.0800000000002, "text": " Do you know what the what the resulting JSON looks like?", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 381, "seek": 154816, "start": 1561.0800000000002, "end": 1563.6200000000001, "text": " Because as you said, there's a name for the variance.", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 382, "seek": 154816, "start": 1563.6200000000001, "end": 1566.1200000000001, "text": " So that's a string that you place.", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 383, "seek": 154816, "start": 1566.1200000000001, "end": 1571.8000000000002, "text": " So I'm guessing you have something like a record with an object with a type field where", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 384, "seek": 154816, "start": 1571.8000000000002, "end": 1572.8000000000002, "text": " that's...", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 385, "seek": 154816, "start": 1572.8000000000002, "end": 1578.0800000000002, "text": " Yeah, I'm trying to remember the exact format, like what the name is.", "tokens": [50364, 407, 498, 309, 1542, 257, 857, 7401, 11, 309, 311, 1391, 570, 436, 434, 1382, 281, 909, 291, 281, 976, 291, 512, 50616, 50616, 32567, 13, 50666, 50666, 400, 294, 341, 1389, 11, 300, 307, 2293, 264, 935, 13, 50828, 50828, 1144, 291, 458, 437, 264, 437, 264, 16505, 31828, 1542, 411, 30, 51010, 51010, 1436, 382, 291, 848, 11, 456, 311, 257, 1315, 337, 264, 21977, 13, 51137, 51137, 407, 300, 311, 257, 6798, 300, 291, 1081, 13, 51262, 51262, 407, 286, 478, 17939, 291, 362, 746, 411, 257, 2136, 365, 364, 2657, 365, 257, 2010, 2519, 689, 51546, 51546, 300, 311, 485, 51596, 51596, 865, 11, 286, 478, 1382, 281, 1604, 264, 1900, 7877, 11, 411, 437, 264, 1315, 307, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.14351057818555457, "compression_ratio": 1.6886446886446886, "no_caption_prob": 7.141424430301413e-05}, {"id": 386, "seek": 157808, "start": 1578.08, "end": 1581.3999999999999, "text": " There's one field that's called args.", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 387, "seek": 157808, "start": 1581.3999999999999, "end": 1587.12, "text": " And I think args is just going to have the, you know, if it's variant two, then it's going", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 388, "seek": 157808, "start": 1587.12, "end": 1590.6, "text": " to have two values in the args list.", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 389, "seek": 157808, "start": 1590.6, "end": 1594.6399999999999, "text": " Or if it's variant zero, I think it's going to have zero values in the args list.", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 390, "seek": 157808, "start": 1594.6399999999999, "end": 1599.72, "text": " And then I don't remember what the actual variant name like teacher or student, that", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 391, "seek": 157808, "start": 1599.72, "end": 1600.72, "text": " string.", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 392, "seek": 157808, "start": 1600.72, "end": 1603.4399999999998, "text": " I don't remember what that's placed under.", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 393, "seek": 157808, "start": 1603.4399999999998, "end": 1605.1999999999998, "text": " Seats or constructor, maybe?", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 394, "seek": 157808, "start": 1605.1999999999998, "end": 1607.96, "text": " I think it might be called something else.", "tokens": [50364, 821, 311, 472, 2519, 300, 311, 1219, 3882, 82, 13, 50530, 50530, 400, 286, 519, 3882, 82, 307, 445, 516, 281, 362, 264, 11, 291, 458, 11, 498, 309, 311, 17501, 732, 11, 550, 309, 311, 516, 50816, 50816, 281, 362, 732, 4190, 294, 264, 3882, 82, 1329, 13, 50990, 50990, 1610, 498, 309, 311, 17501, 4018, 11, 286, 519, 309, 311, 516, 281, 362, 4018, 4190, 294, 264, 3882, 82, 1329, 13, 51192, 51192, 400, 550, 286, 500, 380, 1604, 437, 264, 3539, 17501, 1315, 411, 5027, 420, 3107, 11, 300, 51446, 51446, 6798, 13, 51496, 51496, 286, 500, 380, 1604, 437, 300, 311, 7074, 833, 13, 51632, 51632, 1100, 1720, 420, 47479, 11, 1310, 30, 51720, 51720, 286, 519, 309, 1062, 312, 1219, 746, 1646, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.13080962498982748, "compression_ratio": 1.8958333333333333, "no_caption_prob": 7.368261140072718e-05}, {"id": 395, "seek": 160796, "start": 1607.96, "end": 1611.28, "text": " So this does tie...", "tokens": [50364, 407, 341, 775, 7582, 485, 50530, 50530, 407, 498, 264, 6405, 25963, 257, 31828, 7877, 337, 291, 11, 550, 341, 775, 406, 854, 291, 365, 1364, 50936, 50936, 365, 8320, 25879, 13, 51052, 51052, 407, 498, 291, 528, 281, 11, 498, 291, 528, 428, 2375, 2010, 281, 574, 412, 257, 1629, 636, 11, 562, 17559, 51348, 51348, 365, 33283, 12475, 11, 337, 5197, 11, 550, 309, 311, 1391, 406, 341, 300, 291, 434, 516, 281, 764, 13, 51640, 51640, 286, 478, 988, 300, 291, 393, 764, 746, 1646, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.12017218271891277, "compression_ratio": 1.628440366972477, "no_caption_prob": 9.024864993989468e-05}, {"id": 396, "seek": 160796, "start": 1611.28, "end": 1619.4, "text": " So if the library chooses a JSON format for you, then this does not help you with working", "tokens": [50364, 407, 341, 775, 7582, 485, 50530, 50530, 407, 498, 264, 6405, 25963, 257, 31828, 7877, 337, 291, 11, 550, 341, 775, 406, 854, 291, 365, 1364, 50936, 50936, 365, 8320, 25879, 13, 51052, 51052, 407, 498, 291, 528, 281, 11, 498, 291, 528, 428, 2375, 2010, 281, 574, 412, 257, 1629, 636, 11, 562, 17559, 51348, 51348, 365, 33283, 12475, 11, 337, 5197, 11, 550, 309, 311, 1391, 406, 341, 300, 291, 434, 516, 281, 764, 13, 51640, 51640, 286, 478, 988, 300, 291, 393, 764, 746, 1646, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.12017218271891277, "compression_ratio": 1.628440366972477, "no_caption_prob": 9.024864993989468e-05}, {"id": 397, "seek": 160796, "start": 1619.4, "end": 1621.72, "text": " with external formats.", "tokens": [50364, 407, 341, 775, 7582, 485, 50530, 50530, 407, 498, 264, 6405, 25963, 257, 31828, 7877, 337, 291, 11, 550, 341, 775, 406, 854, 291, 365, 1364, 50936, 50936, 365, 8320, 25879, 13, 51052, 51052, 407, 498, 291, 528, 281, 11, 498, 291, 528, 428, 2375, 2010, 281, 574, 412, 257, 1629, 636, 11, 562, 17559, 51348, 51348, 365, 33283, 12475, 11, 337, 5197, 11, 550, 309, 311, 1391, 406, 341, 300, 291, 434, 516, 281, 764, 13, 51640, 51640, 286, 478, 988, 300, 291, 393, 764, 746, 1646, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.12017218271891277, "compression_ratio": 1.628440366972477, "no_caption_prob": 9.024864993989468e-05}, {"id": 398, "seek": 160796, "start": 1621.72, "end": 1627.64, "text": " So if you want to, if you want your custom type to look at a certain way, when communicating", "tokens": [50364, 407, 341, 775, 7582, 485, 50530, 50530, 407, 498, 264, 6405, 25963, 257, 31828, 7877, 337, 291, 11, 550, 341, 775, 406, 854, 291, 365, 1364, 50936, 50936, 365, 8320, 25879, 13, 51052, 51052, 407, 498, 291, 528, 281, 11, 498, 291, 528, 428, 2375, 2010, 281, 574, 412, 257, 1629, 636, 11, 562, 17559, 51348, 51348, 365, 33283, 12475, 11, 337, 5197, 11, 550, 309, 311, 1391, 406, 341, 300, 291, 434, 516, 281, 764, 13, 51640, 51640, 286, 478, 988, 300, 291, 393, 764, 746, 1646, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.12017218271891277, "compression_ratio": 1.628440366972477, "no_caption_prob": 9.024864993989468e-05}, {"id": 399, "seek": 160796, "start": 1627.64, "end": 1633.48, "text": " with HTTP requests, for instance, then it's probably not this that you're going to use.", "tokens": [50364, 407, 341, 775, 7582, 485, 50530, 50530, 407, 498, 264, 6405, 25963, 257, 31828, 7877, 337, 291, 11, 550, 341, 775, 406, 854, 291, 365, 1364, 50936, 50936, 365, 8320, 25879, 13, 51052, 51052, 407, 498, 291, 528, 281, 11, 498, 291, 528, 428, 2375, 2010, 281, 574, 412, 257, 1629, 636, 11, 562, 17559, 51348, 51348, 365, 33283, 12475, 11, 337, 5197, 11, 550, 309, 311, 1391, 406, 341, 300, 291, 434, 516, 281, 764, 13, 51640, 51640, 286, 478, 988, 300, 291, 393, 764, 746, 1646, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.12017218271891277, "compression_ratio": 1.628440366972477, "no_caption_prob": 9.024864993989468e-05}, {"id": 400, "seek": 160796, "start": 1633.48, "end": 1636.08, "text": " I'm sure that you can use something else.", "tokens": [50364, 407, 341, 775, 7582, 485, 50530, 50530, 407, 498, 264, 6405, 25963, 257, 31828, 7877, 337, 291, 11, 550, 341, 775, 406, 854, 291, 365, 1364, 50936, 50936, 365, 8320, 25879, 13, 51052, 51052, 407, 498, 291, 528, 281, 11, 498, 291, 528, 428, 2375, 2010, 281, 574, 412, 257, 1629, 636, 11, 562, 17559, 51348, 51348, 365, 33283, 12475, 11, 337, 5197, 11, 550, 309, 311, 1391, 406, 341, 300, 291, 434, 516, 281, 764, 13, 51640, 51640, 286, 478, 988, 300, 291, 393, 764, 746, 1646, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.12017218271891277, "compression_ratio": 1.628440366972477, "no_caption_prob": 9.024864993989468e-05}, {"id": 401, "seek": 163608, "start": 1636.08, "end": 1641.76, "text": " Yeah, you can use one off to do something pretty custom, I think.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 402, "seek": 163608, "start": 1641.76, "end": 1642.76, "text": " Yeah.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 403, "seek": 163608, "start": 1642.76, "end": 1644.04, "text": " Oh, by the way, I found it.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 404, "seek": 163608, "start": 1644.04, "end": 1647.08, "text": " I believe it's called tag.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 405, "seek": 163608, "start": 1647.08, "end": 1648.46, "text": " Tag and args.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 406, "seek": 163608, "start": 1648.46, "end": 1651.1599999999999, "text": " So you get an object that has those two fields.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 407, "seek": 163608, "start": 1651.1599999999999, "end": 1653.3999999999999, "text": " Yeah, that makes sense.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 408, "seek": 163608, "start": 1653.3999999999999, "end": 1658.12, "text": " So there is one tricky thing that I've encountered when using this library, which is...", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 409, "seek": 163608, "start": 1658.12, "end": 1664.34, "text": " So sometimes you have certain areas that you don't care to serialize, deserialize.", "tokens": [50364, 865, 11, 291, 393, 764, 472, 766, 281, 360, 746, 1238, 2375, 11, 286, 519, 13, 50648, 50648, 865, 13, 50698, 50698, 876, 11, 538, 264, 636, 11, 286, 1352, 309, 13, 50762, 50762, 286, 1697, 309, 311, 1219, 6162, 13, 50914, 50914, 11204, 293, 3882, 82, 13, 50983, 50983, 407, 291, 483, 364, 2657, 300, 575, 729, 732, 7909, 13, 51118, 51118, 865, 11, 300, 1669, 2020, 13, 51230, 51230, 407, 456, 307, 472, 12414, 551, 300, 286, 600, 20381, 562, 1228, 341, 6405, 11, 597, 307, 485, 51466, 51466, 407, 2171, 291, 362, 1629, 3179, 300, 291, 500, 380, 1127, 281, 17436, 1125, 11, 730, 260, 831, 1125, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.16485181062117868, "compression_ratio": 1.5761316872427984, "no_caption_prob": 2.9308261218830012e-05}, {"id": 410, "seek": 166434, "start": 1664.34, "end": 1666.6799999999998, "text": " Like you want to send it one way, but not the other.", "tokens": [50364, 1743, 291, 528, 281, 2845, 309, 472, 636, 11, 457, 406, 264, 661, 13, 50481, 50481, 400, 456, 307, 11, 291, 393, 1333, 295, 4282, 309, 257, 707, 857, 538, 4084, 428, 1065, 2375, 485, 50867, 50867, 961, 385, 574, 341, 493, 13, 51001, 51001, 865, 11, 370, 291, 393, 283, 16032, 309, 257, 707, 857, 570, 291, 393, 764, 264, 3089, 66, 13, 11516, 2445, 11, 597, 51339, 51339, 307, 4476, 364, 7615, 9972, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.17718250751495362, "compression_ratio": 1.558659217877095, "no_caption_prob": 8.664535016578157e-06}, {"id": 411, "seek": 166434, "start": 1666.6799999999998, "end": 1674.3999999999999, "text": " And there is, you can sort of trick it a little bit by creating your own custom...", "tokens": [50364, 1743, 291, 528, 281, 2845, 309, 472, 636, 11, 457, 406, 264, 661, 13, 50481, 50481, 400, 456, 307, 11, 291, 393, 1333, 295, 4282, 309, 257, 707, 857, 538, 4084, 428, 1065, 2375, 485, 50867, 50867, 961, 385, 574, 341, 493, 13, 51001, 51001, 865, 11, 370, 291, 393, 283, 16032, 309, 257, 707, 857, 570, 291, 393, 764, 264, 3089, 66, 13, 11516, 2445, 11, 597, 51339, 51339, 307, 4476, 364, 7615, 9972, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.17718250751495362, "compression_ratio": 1.558659217877095, "no_caption_prob": 8.664535016578157e-06}, {"id": 412, "seek": 166434, "start": 1674.3999999999999, "end": 1677.08, "text": " Let me look this up.", "tokens": [50364, 1743, 291, 528, 281, 2845, 309, 472, 636, 11, 457, 406, 264, 661, 13, 50481, 50481, 400, 456, 307, 11, 291, 393, 1333, 295, 4282, 309, 257, 707, 857, 538, 4084, 428, 1065, 2375, 485, 50867, 50867, 961, 385, 574, 341, 493, 13, 51001, 51001, 865, 11, 370, 291, 393, 283, 16032, 309, 257, 707, 857, 570, 291, 393, 764, 264, 3089, 66, 13, 11516, 2445, 11, 597, 51339, 51339, 307, 4476, 364, 7615, 9972, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.17718250751495362, "compression_ratio": 1.558659217877095, "no_caption_prob": 8.664535016578157e-06}, {"id": 413, "seek": 166434, "start": 1677.08, "end": 1683.84, "text": " Yeah, so you can fudge it a little bit because you can use the codec.build function, which", "tokens": [50364, 1743, 291, 528, 281, 2845, 309, 472, 636, 11, 457, 406, 264, 661, 13, 50481, 50481, 400, 456, 307, 11, 291, 393, 1333, 295, 4282, 309, 257, 707, 857, 538, 4084, 428, 1065, 2375, 485, 50867, 50867, 961, 385, 574, 341, 493, 13, 51001, 51001, 865, 11, 370, 291, 393, 283, 16032, 309, 257, 707, 857, 570, 291, 393, 764, 264, 3089, 66, 13, 11516, 2445, 11, 597, 51339, 51339, 307, 4476, 364, 7615, 9972, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.17718250751495362, "compression_ratio": 1.558659217877095, "no_caption_prob": 8.664535016578157e-06}, {"id": 414, "seek": 166434, "start": 1683.84, "end": 1687.8, "text": " is essentially an escape patch.", "tokens": [50364, 1743, 291, 528, 281, 2845, 309, 472, 636, 11, 457, 406, 264, 661, 13, 50481, 50481, 400, 456, 307, 11, 291, 393, 1333, 295, 4282, 309, 257, 707, 857, 538, 4084, 428, 1065, 2375, 485, 50867, 50867, 961, 385, 574, 341, 493, 13, 51001, 51001, 865, 11, 370, 291, 393, 283, 16032, 309, 257, 707, 857, 570, 291, 393, 764, 264, 3089, 66, 13, 11516, 2445, 11, 597, 51339, 51339, 307, 4476, 364, 7615, 9972, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.17718250751495362, "compression_ratio": 1.558659217877095, "no_caption_prob": 8.664535016578157e-06}, {"id": 415, "seek": 168780, "start": 1687.8, "end": 1694.48, "text": " So codec.build takes basically an encoder function, something that takes some value", "tokens": [50364, 407, 3089, 66, 13, 11516, 2516, 1936, 364, 2058, 19866, 2445, 11, 746, 300, 2516, 512, 2158, 50698, 50698, 293, 4523, 309, 666, 364, 2058, 1429, 2158, 13, 50844, 50844, 400, 309, 2516, 382, 257, 1150, 6770, 11, 257, 31828, 979, 19866, 11, 293, 291, 393, 2584, 283, 16032, 309, 11, 51098, 51098, 558, 30, 51148, 51148, 1743, 291, 393, 1261, 309, 666, 364, 23211, 420, 291, 393, 360, 2058, 1429, 13, 77, 858, 420, 2035, 13, 51514, 51514, 509, 393, 360, 979, 1429, 13, 82, 1311, 4357, 281, 604, 2158, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13525093595186868, "compression_ratio": 1.626865671641791, "no_caption_prob": 1.2411281204549596e-05}, {"id": 416, "seek": 168780, "start": 1694.48, "end": 1697.3999999999999, "text": " and turns it into an encode value.", "tokens": [50364, 407, 3089, 66, 13, 11516, 2516, 1936, 364, 2058, 19866, 2445, 11, 746, 300, 2516, 512, 2158, 50698, 50698, 293, 4523, 309, 666, 364, 2058, 1429, 2158, 13, 50844, 50844, 400, 309, 2516, 382, 257, 1150, 6770, 11, 257, 31828, 979, 19866, 11, 293, 291, 393, 2584, 283, 16032, 309, 11, 51098, 51098, 558, 30, 51148, 51148, 1743, 291, 393, 1261, 309, 666, 364, 23211, 420, 291, 393, 360, 2058, 1429, 13, 77, 858, 420, 2035, 13, 51514, 51514, 509, 393, 360, 979, 1429, 13, 82, 1311, 4357, 281, 604, 2158, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13525093595186868, "compression_ratio": 1.626865671641791, "no_caption_prob": 1.2411281204549596e-05}, {"id": 417, "seek": 168780, "start": 1697.3999999999999, "end": 1702.48, "text": " And it takes as a second argument, a JSON decoder, and you can completely fudge it,", "tokens": [50364, 407, 3089, 66, 13, 11516, 2516, 1936, 364, 2058, 19866, 2445, 11, 746, 300, 2516, 512, 2158, 50698, 50698, 293, 4523, 309, 666, 364, 2058, 1429, 2158, 13, 50844, 50844, 400, 309, 2516, 382, 257, 1150, 6770, 11, 257, 31828, 979, 19866, 11, 293, 291, 393, 2584, 283, 16032, 309, 11, 51098, 51098, 558, 30, 51148, 51148, 1743, 291, 393, 1261, 309, 666, 364, 23211, 420, 291, 393, 360, 2058, 1429, 13, 77, 858, 420, 2035, 13, 51514, 51514, 509, 393, 360, 979, 1429, 13, 82, 1311, 4357, 281, 604, 2158, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13525093595186868, "compression_ratio": 1.626865671641791, "no_caption_prob": 1.2411281204549596e-05}, {"id": 418, "seek": 168780, "start": 1702.48, "end": 1703.48, "text": " right?", "tokens": [50364, 407, 3089, 66, 13, 11516, 2516, 1936, 364, 2058, 19866, 2445, 11, 746, 300, 2516, 512, 2158, 50698, 50698, 293, 4523, 309, 666, 364, 2058, 1429, 2158, 13, 50844, 50844, 400, 309, 2516, 382, 257, 1150, 6770, 11, 257, 31828, 979, 19866, 11, 293, 291, 393, 2584, 283, 16032, 309, 11, 51098, 51098, 558, 30, 51148, 51148, 1743, 291, 393, 1261, 309, 666, 364, 23211, 420, 291, 393, 360, 2058, 1429, 13, 77, 858, 420, 2035, 13, 51514, 51514, 509, 393, 360, 979, 1429, 13, 82, 1311, 4357, 281, 604, 2158, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13525093595186868, "compression_ratio": 1.626865671641791, "no_caption_prob": 1.2411281204549596e-05}, {"id": 419, "seek": 168780, "start": 1703.48, "end": 1710.8, "text": " Like you can turn it into an arbitrary or you can do encode.null or whatever.", "tokens": [50364, 407, 3089, 66, 13, 11516, 2516, 1936, 364, 2058, 19866, 2445, 11, 746, 300, 2516, 512, 2158, 50698, 50698, 293, 4523, 309, 666, 364, 2058, 1429, 2158, 13, 50844, 50844, 400, 309, 2516, 382, 257, 1150, 6770, 11, 257, 31828, 979, 19866, 11, 293, 291, 393, 2584, 283, 16032, 309, 11, 51098, 51098, 558, 30, 51148, 51148, 1743, 291, 393, 1261, 309, 666, 364, 23211, 420, 291, 393, 360, 2058, 1429, 13, 77, 858, 420, 2035, 13, 51514, 51514, 509, 393, 360, 979, 1429, 13, 82, 1311, 4357, 281, 604, 2158, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13525093595186868, "compression_ratio": 1.626865671641791, "no_caption_prob": 1.2411281204549596e-05}, {"id": 420, "seek": 168780, "start": 1710.8, "end": 1713.96, "text": " You can do decode.succeed to any value.", "tokens": [50364, 407, 3089, 66, 13, 11516, 2516, 1936, 364, 2058, 19866, 2445, 11, 746, 300, 2516, 512, 2158, 50698, 50698, 293, 4523, 309, 666, 364, 2058, 1429, 2158, 13, 50844, 50844, 400, 309, 2516, 382, 257, 1150, 6770, 11, 257, 31828, 979, 19866, 11, 293, 291, 393, 2584, 283, 16032, 309, 11, 51098, 51098, 558, 30, 51148, 51148, 1743, 291, 393, 1261, 309, 666, 364, 23211, 420, 291, 393, 360, 2058, 1429, 13, 77, 858, 420, 2035, 13, 51514, 51514, 509, 393, 360, 979, 1429, 13, 82, 1311, 4357, 281, 604, 2158, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.13525093595186868, "compression_ratio": 1.626865671641791, "no_caption_prob": 1.2411281204549596e-05}, {"id": 421, "seek": 171396, "start": 1713.96, "end": 1719.5, "text": " So you can sort of use that as an escape patch if you care about sending it, but you don't", "tokens": [50364, 407, 291, 393, 1333, 295, 764, 300, 382, 364, 7615, 9972, 498, 291, 1127, 466, 7750, 309, 11, 457, 291, 500, 380, 50641, 50641, 1127, 466, 10040, 309, 420, 11964, 25650, 13, 50783, 50783, 407, 300, 311, 746, 286, 600, 1143, 13, 50836, 50836, 407, 411, 472, 764, 1389, 300, 321, 2378, 380, 2045, 322, 1939, 767, 11, 457, 300, 286, 600, 1352, 341, 6405, 51150, 51150, 4420, 337, 307, 1228, 2699, 76, 1461, 1500, 13, 51353, 51353, 407, 337, 2699, 76, 1461, 1500, 11, 291, 393, 2845, 485, 51583, 51583, 509, 393, 652, 19810, 626, 466, 33063, 18160, 300, 362, 668, 2279, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1082377345473678, "compression_ratio": 1.7256637168141593, "no_caption_prob": 7.646423000551295e-06}, {"id": 422, "seek": 171396, "start": 1719.5, "end": 1722.3400000000001, "text": " care about receiving it or vice versa.", "tokens": [50364, 407, 291, 393, 1333, 295, 764, 300, 382, 364, 7615, 9972, 498, 291, 1127, 466, 7750, 309, 11, 457, 291, 500, 380, 50641, 50641, 1127, 466, 10040, 309, 420, 11964, 25650, 13, 50783, 50783, 407, 300, 311, 746, 286, 600, 1143, 13, 50836, 50836, 407, 411, 472, 764, 1389, 300, 321, 2378, 380, 2045, 322, 1939, 767, 11, 457, 300, 286, 600, 1352, 341, 6405, 51150, 51150, 4420, 337, 307, 1228, 2699, 76, 1461, 1500, 13, 51353, 51353, 407, 337, 2699, 76, 1461, 1500, 11, 291, 393, 2845, 485, 51583, 51583, 509, 393, 652, 19810, 626, 466, 33063, 18160, 300, 362, 668, 2279, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1082377345473678, "compression_ratio": 1.7256637168141593, "no_caption_prob": 7.646423000551295e-06}, {"id": 423, "seek": 171396, "start": 1722.3400000000001, "end": 1723.4, "text": " So that's something I've used.", "tokens": [50364, 407, 291, 393, 1333, 295, 764, 300, 382, 364, 7615, 9972, 498, 291, 1127, 466, 7750, 309, 11, 457, 291, 500, 380, 50641, 50641, 1127, 466, 10040, 309, 420, 11964, 25650, 13, 50783, 50783, 407, 300, 311, 746, 286, 600, 1143, 13, 50836, 50836, 407, 411, 472, 764, 1389, 300, 321, 2378, 380, 2045, 322, 1939, 767, 11, 457, 300, 286, 600, 1352, 341, 6405, 51150, 51150, 4420, 337, 307, 1228, 2699, 76, 1461, 1500, 13, 51353, 51353, 407, 337, 2699, 76, 1461, 1500, 11, 291, 393, 2845, 485, 51583, 51583, 509, 393, 652, 19810, 626, 466, 33063, 18160, 300, 362, 668, 2279, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1082377345473678, "compression_ratio": 1.7256637168141593, "no_caption_prob": 7.646423000551295e-06}, {"id": 424, "seek": 171396, "start": 1723.4, "end": 1729.68, "text": " So like one use case that we haven't hit on yet actually, but that I've found this library", "tokens": [50364, 407, 291, 393, 1333, 295, 764, 300, 382, 364, 7615, 9972, 498, 291, 1127, 466, 7750, 309, 11, 457, 291, 500, 380, 50641, 50641, 1127, 466, 10040, 309, 420, 11964, 25650, 13, 50783, 50783, 407, 300, 311, 746, 286, 600, 1143, 13, 50836, 50836, 407, 411, 472, 764, 1389, 300, 321, 2378, 380, 2045, 322, 1939, 767, 11, 457, 300, 286, 600, 1352, 341, 6405, 51150, 51150, 4420, 337, 307, 1228, 2699, 76, 1461, 1500, 13, 51353, 51353, 407, 337, 2699, 76, 1461, 1500, 11, 291, 393, 2845, 485, 51583, 51583, 509, 393, 652, 19810, 626, 466, 33063, 18160, 300, 362, 668, 2279, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1082377345473678, "compression_ratio": 1.7256637168141593, "no_caption_prob": 7.646423000551295e-06}, {"id": 425, "seek": 171396, "start": 1729.68, "end": 1733.74, "text": " useful for is using Elm program test.", "tokens": [50364, 407, 291, 393, 1333, 295, 764, 300, 382, 364, 7615, 9972, 498, 291, 1127, 466, 7750, 309, 11, 457, 291, 500, 380, 50641, 50641, 1127, 466, 10040, 309, 420, 11964, 25650, 13, 50783, 50783, 407, 300, 311, 746, 286, 600, 1143, 13, 50836, 50836, 407, 411, 472, 764, 1389, 300, 321, 2378, 380, 2045, 322, 1939, 767, 11, 457, 300, 286, 600, 1352, 341, 6405, 51150, 51150, 4420, 337, 307, 1228, 2699, 76, 1461, 1500, 13, 51353, 51353, 407, 337, 2699, 76, 1461, 1500, 11, 291, 393, 2845, 485, 51583, 51583, 509, 393, 652, 19810, 626, 466, 33063, 18160, 300, 362, 668, 2279, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1082377345473678, "compression_ratio": 1.7256637168141593, "no_caption_prob": 7.646423000551295e-06}, {"id": 426, "seek": 171396, "start": 1733.74, "end": 1738.3400000000001, "text": " So for Elm program test, you can send...", "tokens": [50364, 407, 291, 393, 1333, 295, 764, 300, 382, 364, 7615, 9972, 498, 291, 1127, 466, 7750, 309, 11, 457, 291, 500, 380, 50641, 50641, 1127, 466, 10040, 309, 420, 11964, 25650, 13, 50783, 50783, 407, 300, 311, 746, 286, 600, 1143, 13, 50836, 50836, 407, 411, 472, 764, 1389, 300, 321, 2378, 380, 2045, 322, 1939, 767, 11, 457, 300, 286, 600, 1352, 341, 6405, 51150, 51150, 4420, 337, 307, 1228, 2699, 76, 1461, 1500, 13, 51353, 51353, 407, 337, 2699, 76, 1461, 1500, 11, 291, 393, 2845, 485, 51583, 51583, 509, 393, 652, 19810, 626, 466, 33063, 18160, 300, 362, 668, 2279, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1082377345473678, "compression_ratio": 1.7256637168141593, "no_caption_prob": 7.646423000551295e-06}, {"id": 427, "seek": 171396, "start": 1738.3400000000001, "end": 1743.2, "text": " You can make assertions about JS ports that have been sent.", "tokens": [50364, 407, 291, 393, 1333, 295, 764, 300, 382, 364, 7615, 9972, 498, 291, 1127, 466, 7750, 309, 11, 457, 291, 500, 380, 50641, 50641, 1127, 466, 10040, 309, 420, 11964, 25650, 13, 50783, 50783, 407, 300, 311, 746, 286, 600, 1143, 13, 50836, 50836, 407, 411, 472, 764, 1389, 300, 321, 2378, 380, 2045, 322, 1939, 767, 11, 457, 300, 286, 600, 1352, 341, 6405, 51150, 51150, 4420, 337, 307, 1228, 2699, 76, 1461, 1500, 13, 51353, 51353, 407, 337, 2699, 76, 1461, 1500, 11, 291, 393, 2845, 485, 51583, 51583, 509, 393, 652, 19810, 626, 466, 33063, 18160, 300, 362, 668, 2279, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.1082377345473678, "compression_ratio": 1.7256637168141593, "no_caption_prob": 7.646423000551295e-06}, {"id": 428, "seek": 174320, "start": 1743.2, "end": 1749.4, "text": " And when you do that, you send the JS port as it's some JSON value.", "tokens": [50364, 400, 562, 291, 360, 300, 11, 291, 2845, 264, 33063, 2436, 382, 309, 311, 512, 31828, 2158, 13, 50674, 50674, 400, 370, 291, 393, 652, 19810, 626, 466, 300, 31828, 2158, 11, 457, 291, 643, 257, 979, 19866, 294, 1668, 50932, 50932, 281, 360, 300, 13, 50982, 50982, 407, 562, 291, 764, 2699, 76, 1461, 1500, 293, 291, 528, 281, 652, 19810, 626, 466, 18160, 11, 291, 643, 281, 51154, 51154, 2845, 1293, 364, 2058, 19866, 293, 257, 979, 19866, 30, 51299, 51299, 961, 311, 584, 291, 434, 1455, 364, 19810, 313, 466, 257, 2158, 300, 291, 2845, 281, 15778, 807, 51590, 51590, 257, 2436, 294, 428, 2699, 76, 1461, 1500, 1500, 1389, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.08712180186126192, "compression_ratio": 1.8628318584070795, "no_caption_prob": 3.2886478038562927e-06}, {"id": 429, "seek": 174320, "start": 1749.4, "end": 1754.56, "text": " And so you can make assertions about that JSON value, but you need a decoder in order", "tokens": [50364, 400, 562, 291, 360, 300, 11, 291, 2845, 264, 33063, 2436, 382, 309, 311, 512, 31828, 2158, 13, 50674, 50674, 400, 370, 291, 393, 652, 19810, 626, 466, 300, 31828, 2158, 11, 457, 291, 643, 257, 979, 19866, 294, 1668, 50932, 50932, 281, 360, 300, 13, 50982, 50982, 407, 562, 291, 764, 2699, 76, 1461, 1500, 293, 291, 528, 281, 652, 19810, 626, 466, 18160, 11, 291, 643, 281, 51154, 51154, 2845, 1293, 364, 2058, 19866, 293, 257, 979, 19866, 30, 51299, 51299, 961, 311, 584, 291, 434, 1455, 364, 19810, 313, 466, 257, 2158, 300, 291, 2845, 281, 15778, 807, 51590, 51590, 257, 2436, 294, 428, 2699, 76, 1461, 1500, 1500, 1389, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.08712180186126192, "compression_ratio": 1.8628318584070795, "no_caption_prob": 3.2886478038562927e-06}, {"id": 430, "seek": 174320, "start": 1754.56, "end": 1755.56, "text": " to do that.", "tokens": [50364, 400, 562, 291, 360, 300, 11, 291, 2845, 264, 33063, 2436, 382, 309, 311, 512, 31828, 2158, 13, 50674, 50674, 400, 370, 291, 393, 652, 19810, 626, 466, 300, 31828, 2158, 11, 457, 291, 643, 257, 979, 19866, 294, 1668, 50932, 50932, 281, 360, 300, 13, 50982, 50982, 407, 562, 291, 764, 2699, 76, 1461, 1500, 293, 291, 528, 281, 652, 19810, 626, 466, 18160, 11, 291, 643, 281, 51154, 51154, 2845, 1293, 364, 2058, 19866, 293, 257, 979, 19866, 30, 51299, 51299, 961, 311, 584, 291, 434, 1455, 364, 19810, 313, 466, 257, 2158, 300, 291, 2845, 281, 15778, 807, 51590, 51590, 257, 2436, 294, 428, 2699, 76, 1461, 1500, 1500, 1389, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.08712180186126192, "compression_ratio": 1.8628318584070795, "no_caption_prob": 3.2886478038562927e-06}, {"id": 431, "seek": 174320, "start": 1755.56, "end": 1759.0, "text": " So when you use Elm program test and you want to make assertions about ports, you need to", "tokens": [50364, 400, 562, 291, 360, 300, 11, 291, 2845, 264, 33063, 2436, 382, 309, 311, 512, 31828, 2158, 13, 50674, 50674, 400, 370, 291, 393, 652, 19810, 626, 466, 300, 31828, 2158, 11, 457, 291, 643, 257, 979, 19866, 294, 1668, 50932, 50932, 281, 360, 300, 13, 50982, 50982, 407, 562, 291, 764, 2699, 76, 1461, 1500, 293, 291, 528, 281, 652, 19810, 626, 466, 18160, 11, 291, 643, 281, 51154, 51154, 2845, 1293, 364, 2058, 19866, 293, 257, 979, 19866, 30, 51299, 51299, 961, 311, 584, 291, 434, 1455, 364, 19810, 313, 466, 257, 2158, 300, 291, 2845, 281, 15778, 807, 51590, 51590, 257, 2436, 294, 428, 2699, 76, 1461, 1500, 1500, 1389, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.08712180186126192, "compression_ratio": 1.8628318584070795, "no_caption_prob": 3.2886478038562927e-06}, {"id": 432, "seek": 174320, "start": 1759.0, "end": 1761.9, "text": " send both an encoder and a decoder?", "tokens": [50364, 400, 562, 291, 360, 300, 11, 291, 2845, 264, 33063, 2436, 382, 309, 311, 512, 31828, 2158, 13, 50674, 50674, 400, 370, 291, 393, 652, 19810, 626, 466, 300, 31828, 2158, 11, 457, 291, 643, 257, 979, 19866, 294, 1668, 50932, 50932, 281, 360, 300, 13, 50982, 50982, 407, 562, 291, 764, 2699, 76, 1461, 1500, 293, 291, 528, 281, 652, 19810, 626, 466, 18160, 11, 291, 643, 281, 51154, 51154, 2845, 1293, 364, 2058, 19866, 293, 257, 979, 19866, 30, 51299, 51299, 961, 311, 584, 291, 434, 1455, 364, 19810, 313, 466, 257, 2158, 300, 291, 2845, 281, 15778, 807, 51590, 51590, 257, 2436, 294, 428, 2699, 76, 1461, 1500, 1500, 1389, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.08712180186126192, "compression_ratio": 1.8628318584070795, "no_caption_prob": 3.2886478038562927e-06}, {"id": 433, "seek": 174320, "start": 1761.9, "end": 1767.72, "text": " Let's say you're making an assertion about a value that you send to JavaScript through", "tokens": [50364, 400, 562, 291, 360, 300, 11, 291, 2845, 264, 33063, 2436, 382, 309, 311, 512, 31828, 2158, 13, 50674, 50674, 400, 370, 291, 393, 652, 19810, 626, 466, 300, 31828, 2158, 11, 457, 291, 643, 257, 979, 19866, 294, 1668, 50932, 50932, 281, 360, 300, 13, 50982, 50982, 407, 562, 291, 764, 2699, 76, 1461, 1500, 293, 291, 528, 281, 652, 19810, 626, 466, 18160, 11, 291, 643, 281, 51154, 51154, 2845, 1293, 364, 2058, 19866, 293, 257, 979, 19866, 30, 51299, 51299, 961, 311, 584, 291, 434, 1455, 364, 19810, 313, 466, 257, 2158, 300, 291, 2845, 281, 15778, 807, 51590, 51590, 257, 2436, 294, 428, 2699, 76, 1461, 1500, 1500, 1389, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.08712180186126192, "compression_ratio": 1.8628318584070795, "no_caption_prob": 3.2886478038562927e-06}, {"id": 434, "seek": 174320, "start": 1767.72, "end": 1771.5800000000002, "text": " a port in your Elm program test test case.", "tokens": [50364, 400, 562, 291, 360, 300, 11, 291, 2845, 264, 33063, 2436, 382, 309, 311, 512, 31828, 2158, 13, 50674, 50674, 400, 370, 291, 393, 652, 19810, 626, 466, 300, 31828, 2158, 11, 457, 291, 643, 257, 979, 19866, 294, 1668, 50932, 50932, 281, 360, 300, 13, 50982, 50982, 407, 562, 291, 764, 2699, 76, 1461, 1500, 293, 291, 528, 281, 652, 19810, 626, 466, 18160, 11, 291, 643, 281, 51154, 51154, 2845, 1293, 364, 2058, 19866, 293, 257, 979, 19866, 30, 51299, 51299, 961, 311, 584, 291, 434, 1455, 364, 19810, 313, 466, 257, 2158, 300, 291, 2845, 281, 15778, 807, 51590, 51590, 257, 2436, 294, 428, 2699, 76, 1461, 1500, 1500, 1389, 13, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.08712180186126192, "compression_ratio": 1.8628318584070795, "no_caption_prob": 3.2886478038562927e-06}, {"id": 435, "seek": 177158, "start": 1771.58, "end": 1778.02, "text": " Now when you're making assertions and you say, I expect this outgoing to JavaScript", "tokens": [50364, 823, 562, 291, 434, 1455, 19810, 626, 293, 291, 584, 11, 286, 2066, 341, 41565, 281, 15778, 50686, 50686, 2436, 281, 362, 668, 1219, 365, 512, 2158, 13, 50822, 50822, 1012, 366, 291, 516, 281, 19810, 466, 300, 2158, 30, 50923, 50923, 509, 643, 281, 362, 257, 979, 19866, 294, 428, 2699, 76, 1461, 1500, 992, 493, 300, 5112, 309, 577, 281, 1261, 485, 51219, 51219, 1436, 309, 4613, 512, 31828, 2158, 13, 51347, 51347, 400, 370, 586, 291, 643, 281, 312, 1075, 281, 979, 1429, 300, 13, 51479, 51479, 400, 370, 300, 311, 1238, 2295, 1496, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.11814388574338426, "compression_ratio": 1.5957446808510638, "no_caption_prob": 5.682352366420673e-06}, {"id": 436, "seek": 177158, "start": 1778.02, "end": 1780.74, "text": " port to have been called with some value.", "tokens": [50364, 823, 562, 291, 434, 1455, 19810, 626, 293, 291, 584, 11, 286, 2066, 341, 41565, 281, 15778, 50686, 50686, 2436, 281, 362, 668, 1219, 365, 512, 2158, 13, 50822, 50822, 1012, 366, 291, 516, 281, 19810, 466, 300, 2158, 30, 50923, 50923, 509, 643, 281, 362, 257, 979, 19866, 294, 428, 2699, 76, 1461, 1500, 992, 493, 300, 5112, 309, 577, 281, 1261, 485, 51219, 51219, 1436, 309, 4613, 512, 31828, 2158, 13, 51347, 51347, 400, 370, 586, 291, 643, 281, 312, 1075, 281, 979, 1429, 300, 13, 51479, 51479, 400, 370, 300, 311, 1238, 2295, 1496, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.11814388574338426, "compression_ratio": 1.5957446808510638, "no_caption_prob": 5.682352366420673e-06}, {"id": 437, "seek": 177158, "start": 1780.74, "end": 1782.76, "text": " How are you going to assert about that value?", "tokens": [50364, 823, 562, 291, 434, 1455, 19810, 626, 293, 291, 584, 11, 286, 2066, 341, 41565, 281, 15778, 50686, 50686, 2436, 281, 362, 668, 1219, 365, 512, 2158, 13, 50822, 50822, 1012, 366, 291, 516, 281, 19810, 466, 300, 2158, 30, 50923, 50923, 509, 643, 281, 362, 257, 979, 19866, 294, 428, 2699, 76, 1461, 1500, 992, 493, 300, 5112, 309, 577, 281, 1261, 485, 51219, 51219, 1436, 309, 4613, 512, 31828, 2158, 13, 51347, 51347, 400, 370, 586, 291, 643, 281, 312, 1075, 281, 979, 1429, 300, 13, 51479, 51479, 400, 370, 300, 311, 1238, 2295, 1496, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.11814388574338426, "compression_ratio": 1.5957446808510638, "no_caption_prob": 5.682352366420673e-06}, {"id": 438, "seek": 177158, "start": 1782.76, "end": 1788.6799999999998, "text": " You need to have a decoder in your Elm program test set up that tells it how to turn...", "tokens": [50364, 823, 562, 291, 434, 1455, 19810, 626, 293, 291, 584, 11, 286, 2066, 341, 41565, 281, 15778, 50686, 50686, 2436, 281, 362, 668, 1219, 365, 512, 2158, 13, 50822, 50822, 1012, 366, 291, 516, 281, 19810, 466, 300, 2158, 30, 50923, 50923, 509, 643, 281, 362, 257, 979, 19866, 294, 428, 2699, 76, 1461, 1500, 992, 493, 300, 5112, 309, 577, 281, 1261, 485, 51219, 51219, 1436, 309, 4613, 512, 31828, 2158, 13, 51347, 51347, 400, 370, 586, 291, 643, 281, 312, 1075, 281, 979, 1429, 300, 13, 51479, 51479, 400, 370, 300, 311, 1238, 2295, 1496, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.11814388574338426, "compression_ratio": 1.5957446808510638, "no_caption_prob": 5.682352366420673e-06}, {"id": 439, "seek": 177158, "start": 1788.6799999999998, "end": 1791.24, "text": " Because it received some JSON value.", "tokens": [50364, 823, 562, 291, 434, 1455, 19810, 626, 293, 291, 584, 11, 286, 2066, 341, 41565, 281, 15778, 50686, 50686, 2436, 281, 362, 668, 1219, 365, 512, 2158, 13, 50822, 50822, 1012, 366, 291, 516, 281, 19810, 466, 300, 2158, 30, 50923, 50923, 509, 643, 281, 362, 257, 979, 19866, 294, 428, 2699, 76, 1461, 1500, 992, 493, 300, 5112, 309, 577, 281, 1261, 485, 51219, 51219, 1436, 309, 4613, 512, 31828, 2158, 13, 51347, 51347, 400, 370, 586, 291, 643, 281, 312, 1075, 281, 979, 1429, 300, 13, 51479, 51479, 400, 370, 300, 311, 1238, 2295, 1496, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.11814388574338426, "compression_ratio": 1.5957446808510638, "no_caption_prob": 5.682352366420673e-06}, {"id": 440, "seek": 177158, "start": 1791.24, "end": 1793.8799999999999, "text": " And so now you need to be able to decode that.", "tokens": [50364, 823, 562, 291, 434, 1455, 19810, 626, 293, 291, 584, 11, 286, 2066, 341, 41565, 281, 15778, 50686, 50686, 2436, 281, 362, 668, 1219, 365, 512, 2158, 13, 50822, 50822, 1012, 366, 291, 516, 281, 19810, 466, 300, 2158, 30, 50923, 50923, 509, 643, 281, 362, 257, 979, 19866, 294, 428, 2699, 76, 1461, 1500, 992, 493, 300, 5112, 309, 577, 281, 1261, 485, 51219, 51219, 1436, 309, 4613, 512, 31828, 2158, 13, 51347, 51347, 400, 370, 586, 291, 643, 281, 312, 1075, 281, 979, 1429, 300, 13, 51479, 51479, 400, 370, 300, 311, 1238, 2295, 1496, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.11814388574338426, "compression_ratio": 1.5957446808510638, "no_caption_prob": 5.682352366420673e-06}, {"id": 441, "seek": 177158, "start": 1793.8799999999999, "end": 1797.8799999999999, "text": " And so that's pretty low level.", "tokens": [50364, 823, 562, 291, 434, 1455, 19810, 626, 293, 291, 584, 11, 286, 2066, 341, 41565, 281, 15778, 50686, 50686, 2436, 281, 362, 668, 1219, 365, 512, 2158, 13, 50822, 50822, 1012, 366, 291, 516, 281, 19810, 466, 300, 2158, 30, 50923, 50923, 509, 643, 281, 362, 257, 979, 19866, 294, 428, 2699, 76, 1461, 1500, 992, 493, 300, 5112, 309, 577, 281, 1261, 485, 51219, 51219, 1436, 309, 4613, 512, 31828, 2158, 13, 51347, 51347, 400, 370, 586, 291, 643, 281, 312, 1075, 281, 979, 1429, 300, 13, 51479, 51479, 400, 370, 300, 311, 1238, 2295, 1496, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.11814388574338426, "compression_ratio": 1.5957446808510638, "no_caption_prob": 5.682352366420673e-06}, {"id": 442, "seek": 179788, "start": 1797.88, "end": 1805.96, "text": " And it would be a pain to be trying to keep them in sync constantly.", "tokens": [50364, 400, 309, 576, 312, 257, 1822, 281, 312, 1382, 281, 1066, 552, 294, 20271, 6460, 13, 50768, 50768, 400, 797, 11, 341, 2170, 281, 264, 13227, 1333, 295, 636, 295, 1953, 11, 300, 13227, 12543, 11, 597, 51116, 51116, 307, 498, 291, 3449, 300, 291, 362, 3866, 7139, 295, 3494, 11, 577, 393, 291, 1565, 729, 7139, 51352, 51352, 295, 3494, 1214, 30, 51412, 51412, 407, 456, 366, 13366, 3190, 689, 291, 727, 5366, 257, 47387, 1296, 729, 732, 7139, 51676, 51676, 295, 3494, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09783641943770847, "compression_ratio": 1.68348623853211, "no_caption_prob": 7.183166417235043e-06}, {"id": 443, "seek": 179788, "start": 1805.96, "end": 1812.92, "text": " And again, this gets to the broader sort of way of thinking, that broader mindset, which", "tokens": [50364, 400, 309, 576, 312, 257, 1822, 281, 312, 1382, 281, 1066, 552, 294, 20271, 6460, 13, 50768, 50768, 400, 797, 11, 341, 2170, 281, 264, 13227, 1333, 295, 636, 295, 1953, 11, 300, 13227, 12543, 11, 597, 51116, 51116, 307, 498, 291, 3449, 300, 291, 362, 3866, 7139, 295, 3494, 11, 577, 393, 291, 1565, 729, 7139, 51352, 51352, 295, 3494, 1214, 30, 51412, 51412, 407, 456, 366, 13366, 3190, 689, 291, 727, 5366, 257, 47387, 1296, 729, 732, 7139, 51676, 51676, 295, 3494, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09783641943770847, "compression_ratio": 1.68348623853211, "no_caption_prob": 7.183166417235043e-06}, {"id": 444, "seek": 179788, "start": 1812.92, "end": 1817.64, "text": " is if you notice that you have multiple sources of truth, how can you bring those sources", "tokens": [50364, 400, 309, 576, 312, 257, 1822, 281, 312, 1382, 281, 1066, 552, 294, 20271, 6460, 13, 50768, 50768, 400, 797, 11, 341, 2170, 281, 264, 13227, 1333, 295, 636, 295, 1953, 11, 300, 13227, 12543, 11, 597, 51116, 51116, 307, 498, 291, 3449, 300, 291, 362, 3866, 7139, 295, 3494, 11, 577, 393, 291, 1565, 729, 7139, 51352, 51352, 295, 3494, 1214, 30, 51412, 51412, 407, 456, 366, 13366, 3190, 689, 291, 727, 5366, 257, 47387, 1296, 729, 732, 7139, 51676, 51676, 295, 3494, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09783641943770847, "compression_ratio": 1.68348623853211, "no_caption_prob": 7.183166417235043e-06}, {"id": 445, "seek": 179788, "start": 1817.64, "end": 1818.8400000000001, "text": " of truth together?", "tokens": [50364, 400, 309, 576, 312, 257, 1822, 281, 312, 1382, 281, 1066, 552, 294, 20271, 6460, 13, 50768, 50768, 400, 797, 11, 341, 2170, 281, 264, 13227, 1333, 295, 636, 295, 1953, 11, 300, 13227, 12543, 11, 597, 51116, 51116, 307, 498, 291, 3449, 300, 291, 362, 3866, 7139, 295, 3494, 11, 577, 393, 291, 1565, 729, 7139, 51352, 51352, 295, 3494, 1214, 30, 51412, 51412, 407, 456, 366, 13366, 3190, 689, 291, 727, 5366, 257, 47387, 1296, 729, 732, 7139, 51676, 51676, 295, 3494, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09783641943770847, "compression_ratio": 1.68348623853211, "no_caption_prob": 7.183166417235043e-06}, {"id": 446, "seek": 179788, "start": 1818.8400000000001, "end": 1824.1200000000001, "text": " So there are fewer places where you could introduce a divergence between those two sources", "tokens": [50364, 400, 309, 576, 312, 257, 1822, 281, 312, 1382, 281, 1066, 552, 294, 20271, 6460, 13, 50768, 50768, 400, 797, 11, 341, 2170, 281, 264, 13227, 1333, 295, 636, 295, 1953, 11, 300, 13227, 12543, 11, 597, 51116, 51116, 307, 498, 291, 3449, 300, 291, 362, 3866, 7139, 295, 3494, 11, 577, 393, 291, 1565, 729, 7139, 51352, 51352, 295, 3494, 1214, 30, 51412, 51412, 407, 456, 366, 13366, 3190, 689, 291, 727, 5366, 257, 47387, 1296, 729, 732, 7139, 51676, 51676, 295, 3494, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09783641943770847, "compression_ratio": 1.68348623853211, "no_caption_prob": 7.183166417235043e-06}, {"id": 447, "seek": 179788, "start": 1824.1200000000001, "end": 1825.24, "text": " of truth.", "tokens": [50364, 400, 309, 576, 312, 257, 1822, 281, 312, 1382, 281, 1066, 552, 294, 20271, 6460, 13, 50768, 50768, 400, 797, 11, 341, 2170, 281, 264, 13227, 1333, 295, 636, 295, 1953, 11, 300, 13227, 12543, 11, 597, 51116, 51116, 307, 498, 291, 3449, 300, 291, 362, 3866, 7139, 295, 3494, 11, 577, 393, 291, 1565, 729, 7139, 51352, 51352, 295, 3494, 1214, 30, 51412, 51412, 407, 456, 366, 13366, 3190, 689, 291, 727, 5366, 257, 47387, 1296, 729, 732, 7139, 51676, 51676, 295, 3494, 13, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09783641943770847, "compression_ratio": 1.68348623853211, "no_caption_prob": 7.183166417235043e-06}, {"id": 448, "seek": 182524, "start": 1825.24, "end": 1831.04, "text": " And so codecs are an example of that concept, but there are many places you can apply that", "tokens": [50364, 400, 370, 3089, 14368, 366, 364, 1365, 295, 300, 3410, 11, 457, 456, 366, 867, 3190, 291, 393, 3079, 300, 50654, 50654, 3410, 13, 50704, 50704, 407, 300, 311, 472, 1081, 300, 286, 2762, 15751, 295, 1419, 613, 732, 7139, 295, 3494, 11, 300, 50934, 50934, 309, 311, 411, 286, 478, 43430, 613, 4190, 11, 457, 550, 286, 478, 1455, 19810, 626, 466, 613, 4190, 294, 51270, 51270, 452, 2699, 76, 1461, 1500, 3331, 689, 294, 1186, 11, 286, 500, 380, 754, 458, 485, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1366718899119984, "compression_ratio": 1.6047619047619048, "no_caption_prob": 3.120105611742474e-05}, {"id": 449, "seek": 182524, "start": 1831.04, "end": 1832.04, "text": " concept.", "tokens": [50364, 400, 370, 3089, 14368, 366, 364, 1365, 295, 300, 3410, 11, 457, 456, 366, 867, 3190, 291, 393, 3079, 300, 50654, 50654, 3410, 13, 50704, 50704, 407, 300, 311, 472, 1081, 300, 286, 2762, 15751, 295, 1419, 613, 732, 7139, 295, 3494, 11, 300, 50934, 50934, 309, 311, 411, 286, 478, 43430, 613, 4190, 11, 457, 550, 286, 478, 1455, 19810, 626, 466, 613, 4190, 294, 51270, 51270, 452, 2699, 76, 1461, 1500, 3331, 689, 294, 1186, 11, 286, 500, 380, 754, 458, 485, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1366718899119984, "compression_ratio": 1.6047619047619048, "no_caption_prob": 3.120105611742474e-05}, {"id": 450, "seek": 182524, "start": 1832.04, "end": 1836.64, "text": " So that's one place that I felt frustrated of having these two sources of truth, that", "tokens": [50364, 400, 370, 3089, 14368, 366, 364, 1365, 295, 300, 3410, 11, 457, 456, 366, 867, 3190, 291, 393, 3079, 300, 50654, 50654, 3410, 13, 50704, 50704, 407, 300, 311, 472, 1081, 300, 286, 2762, 15751, 295, 1419, 613, 732, 7139, 295, 3494, 11, 300, 50934, 50934, 309, 311, 411, 286, 478, 43430, 613, 4190, 11, 457, 550, 286, 478, 1455, 19810, 626, 466, 613, 4190, 294, 51270, 51270, 452, 2699, 76, 1461, 1500, 3331, 689, 294, 1186, 11, 286, 500, 380, 754, 458, 485, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1366718899119984, "compression_ratio": 1.6047619047619048, "no_caption_prob": 3.120105611742474e-05}, {"id": 451, "seek": 182524, "start": 1836.64, "end": 1843.36, "text": " it's like I'm encoding these values, but then I'm making assertions about these values in", "tokens": [50364, 400, 370, 3089, 14368, 366, 364, 1365, 295, 300, 3410, 11, 457, 456, 366, 867, 3190, 291, 393, 3079, 300, 50654, 50654, 3410, 13, 50704, 50704, 407, 300, 311, 472, 1081, 300, 286, 2762, 15751, 295, 1419, 613, 732, 7139, 295, 3494, 11, 300, 50934, 50934, 309, 311, 411, 286, 478, 43430, 613, 4190, 11, 457, 550, 286, 478, 1455, 19810, 626, 466, 613, 4190, 294, 51270, 51270, 452, 2699, 76, 1461, 1500, 3331, 689, 294, 1186, 11, 286, 500, 380, 754, 458, 485, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1366718899119984, "compression_ratio": 1.6047619047619048, "no_caption_prob": 3.120105611742474e-05}, {"id": 452, "seek": 182524, "start": 1843.36, "end": 1848.88, "text": " my Elm program test cases where in fact, I don't even know...", "tokens": [50364, 400, 370, 3089, 14368, 366, 364, 1365, 295, 300, 3410, 11, 457, 456, 366, 867, 3190, 291, 393, 3079, 300, 50654, 50654, 3410, 13, 50704, 50704, 407, 300, 311, 472, 1081, 300, 286, 2762, 15751, 295, 1419, 613, 732, 7139, 295, 3494, 11, 300, 50934, 50934, 309, 311, 411, 286, 478, 43430, 613, 4190, 11, 457, 550, 286, 478, 1455, 19810, 626, 466, 613, 4190, 294, 51270, 51270, 452, 2699, 76, 1461, 1500, 3331, 689, 294, 1186, 11, 286, 500, 380, 754, 458, 485, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1366718899119984, "compression_ratio": 1.6047619047619048, "no_caption_prob": 3.120105611742474e-05}, {"id": 453, "seek": 184888, "start": 1848.88, "end": 1855.3200000000002, "text": " I'm going to start having my tests fail if the encode format diverges from the decoder", "tokens": [50364, 286, 478, 516, 281, 722, 1419, 452, 6921, 3061, 498, 264, 2058, 1429, 7877, 18558, 2880, 490, 264, 979, 19866, 50686, 50686, 286, 4114, 294, 452, 2699, 76, 1461, 6921, 13, 50882, 50882, 400, 729, 366, 445, 732, 7139, 295, 3494, 300, 366, 18558, 3249, 13, 51034, 51034, 407, 286, 1116, 411, 281, 362, 1570, 721, 300, 727, 352, 2085, 456, 13, 51199, 51199, 583, 797, 11, 456, 366, 1629, 721, 300, 498, 286, 500, 380, 528, 281, 19810, 322, 746, 11, 309, 775, 51418, 51418, 483, 1880, 570, 550, 291, 393, 764, 729, 7615, 26531, 293, 360, 3089, 66, 13, 11516, 293, 976, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.07731337017483181, "compression_ratio": 1.641732283464567, "no_caption_prob": 3.373564322828315e-05}, {"id": 454, "seek": 184888, "start": 1855.3200000000002, "end": 1859.24, "text": " I wrote in my Elm program tests.", "tokens": [50364, 286, 478, 516, 281, 722, 1419, 452, 6921, 3061, 498, 264, 2058, 1429, 7877, 18558, 2880, 490, 264, 979, 19866, 50686, 50686, 286, 4114, 294, 452, 2699, 76, 1461, 6921, 13, 50882, 50882, 400, 729, 366, 445, 732, 7139, 295, 3494, 300, 366, 18558, 3249, 13, 51034, 51034, 407, 286, 1116, 411, 281, 362, 1570, 721, 300, 727, 352, 2085, 456, 13, 51199, 51199, 583, 797, 11, 456, 366, 1629, 721, 300, 498, 286, 500, 380, 528, 281, 19810, 322, 746, 11, 309, 775, 51418, 51418, 483, 1880, 570, 550, 291, 393, 764, 729, 7615, 26531, 293, 360, 3089, 66, 13, 11516, 293, 976, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.07731337017483181, "compression_ratio": 1.641732283464567, "no_caption_prob": 3.373564322828315e-05}, {"id": 455, "seek": 184888, "start": 1859.24, "end": 1862.2800000000002, "text": " And those are just two sources of truth that are diverging.", "tokens": [50364, 286, 478, 516, 281, 722, 1419, 452, 6921, 3061, 498, 264, 2058, 1429, 7877, 18558, 2880, 490, 264, 979, 19866, 50686, 50686, 286, 4114, 294, 452, 2699, 76, 1461, 6921, 13, 50882, 50882, 400, 729, 366, 445, 732, 7139, 295, 3494, 300, 366, 18558, 3249, 13, 51034, 51034, 407, 286, 1116, 411, 281, 362, 1570, 721, 300, 727, 352, 2085, 456, 13, 51199, 51199, 583, 797, 11, 456, 366, 1629, 721, 300, 498, 286, 500, 380, 528, 281, 19810, 322, 746, 11, 309, 775, 51418, 51418, 483, 1880, 570, 550, 291, 393, 764, 729, 7615, 26531, 293, 360, 3089, 66, 13, 11516, 293, 976, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.07731337017483181, "compression_ratio": 1.641732283464567, "no_caption_prob": 3.373564322828315e-05}, {"id": 456, "seek": 184888, "start": 1862.2800000000002, "end": 1865.5800000000002, "text": " So I'd like to have less things that could go wrong there.", "tokens": [50364, 286, 478, 516, 281, 722, 1419, 452, 6921, 3061, 498, 264, 2058, 1429, 7877, 18558, 2880, 490, 264, 979, 19866, 50686, 50686, 286, 4114, 294, 452, 2699, 76, 1461, 6921, 13, 50882, 50882, 400, 729, 366, 445, 732, 7139, 295, 3494, 300, 366, 18558, 3249, 13, 51034, 51034, 407, 286, 1116, 411, 281, 362, 1570, 721, 300, 727, 352, 2085, 456, 13, 51199, 51199, 583, 797, 11, 456, 366, 1629, 721, 300, 498, 286, 500, 380, 528, 281, 19810, 322, 746, 11, 309, 775, 51418, 51418, 483, 1880, 570, 550, 291, 393, 764, 729, 7615, 26531, 293, 360, 3089, 66, 13, 11516, 293, 976, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.07731337017483181, "compression_ratio": 1.641732283464567, "no_caption_prob": 3.373564322828315e-05}, {"id": 457, "seek": 184888, "start": 1865.5800000000002, "end": 1869.96, "text": " But again, there are certain things that if I don't want to assert on something, it does", "tokens": [50364, 286, 478, 516, 281, 722, 1419, 452, 6921, 3061, 498, 264, 2058, 1429, 7877, 18558, 2880, 490, 264, 979, 19866, 50686, 50686, 286, 4114, 294, 452, 2699, 76, 1461, 6921, 13, 50882, 50882, 400, 729, 366, 445, 732, 7139, 295, 3494, 300, 366, 18558, 3249, 13, 51034, 51034, 407, 286, 1116, 411, 281, 362, 1570, 721, 300, 727, 352, 2085, 456, 13, 51199, 51199, 583, 797, 11, 456, 366, 1629, 721, 300, 498, 286, 500, 380, 528, 281, 19810, 322, 746, 11, 309, 775, 51418, 51418, 483, 1880, 570, 550, 291, 393, 764, 729, 7615, 26531, 293, 360, 3089, 66, 13, 11516, 293, 976, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.07731337017483181, "compression_ratio": 1.641732283464567, "no_caption_prob": 3.373564322828315e-05}, {"id": 458, "seek": 184888, "start": 1869.96, "end": 1876.9, "text": " get interesting because then you can use those escape patches and do codec.build and give", "tokens": [50364, 286, 478, 516, 281, 722, 1419, 452, 6921, 3061, 498, 264, 2058, 1429, 7877, 18558, 2880, 490, 264, 979, 19866, 50686, 50686, 286, 4114, 294, 452, 2699, 76, 1461, 6921, 13, 50882, 50882, 400, 729, 366, 445, 732, 7139, 295, 3494, 300, 366, 18558, 3249, 13, 51034, 51034, 407, 286, 1116, 411, 281, 362, 1570, 721, 300, 727, 352, 2085, 456, 13, 51199, 51199, 583, 797, 11, 456, 366, 1629, 721, 300, 498, 286, 500, 380, 528, 281, 19810, 322, 746, 11, 309, 775, 51418, 51418, 483, 1880, 570, 550, 291, 393, 764, 729, 7615, 26531, 293, 360, 3089, 66, 13, 11516, 293, 976, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.07731337017483181, "compression_ratio": 1.641732283464567, "no_caption_prob": 3.373564322828315e-05}, {"id": 459, "seek": 187690, "start": 1876.9, "end": 1882.24, "text": " it something that hardcodes either the encoding or the decoding part, depending on what you", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 460, "seek": 187690, "start": 1882.24, "end": 1883.24, "text": " care about.", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 461, "seek": 187690, "start": 1883.24, "end": 1884.24, "text": " Yeah.", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 462, "seek": 187690, "start": 1884.24, "end": 1889.3200000000002, "text": " If you do use that, then that is where you would likely need more tests than the rest", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 463, "seek": 187690, "start": 1889.3200000000002, "end": 1892.0, "text": " because this part you can fail.", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 464, "seek": 187690, "start": 1892.0, "end": 1893.0, "text": " Right.", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 465, "seek": 187690, "start": 1893.0, "end": 1894.0, "text": " Right.", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 466, "seek": 187690, "start": 1894.0, "end": 1895.0, "text": " Yeah.", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 467, "seek": 187690, "start": 1895.0, "end": 1901.0, "text": " Even though you do, even if you use a codec, it's not a bad idea to have some tests around", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 468, "seek": 187690, "start": 1901.0, "end": 1906.2800000000002, "text": " your codecs and it can be useful to have like fuzz tests.", "tokens": [50364, 309, 746, 300, 1152, 66, 4789, 2139, 264, 43430, 420, 264, 979, 8616, 644, 11, 5413, 322, 437, 291, 50631, 50631, 1127, 466, 13, 50681, 50681, 865, 13, 50731, 50731, 759, 291, 360, 764, 300, 11, 550, 300, 307, 689, 291, 576, 3700, 643, 544, 6921, 813, 264, 1472, 50985, 50985, 570, 341, 644, 291, 393, 3061, 13, 51119, 51119, 1779, 13, 51169, 51169, 1779, 13, 51219, 51219, 865, 13, 51269, 51269, 2754, 1673, 291, 360, 11, 754, 498, 291, 764, 257, 3089, 66, 11, 309, 311, 406, 257, 1578, 1558, 281, 362, 512, 6921, 926, 51569, 51569, 428, 3089, 14368, 293, 309, 393, 312, 4420, 281, 362, 411, 283, 16740, 6921, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.1682520972357856, "compression_ratio": 1.76, "no_caption_prob": 5.828831854159944e-05}, {"id": 469, "seek": 190628, "start": 1906.28, "end": 1910.32, "text": " It's a really easy fuzz test to write to say that a codec is reversible.", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 470, "seek": 190628, "start": 1910.32, "end": 1917.8, "text": " It'd be interesting to build up along with the codec to build up a fuzz tester that generates", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 471, "seek": 190628, "start": 1917.8, "end": 1924.28, "text": " random values for that and then creates a unit test, a fuzz test that it's reversible.", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 472, "seek": 190628, "start": 1924.28, "end": 1927.28, "text": " You mean with the same API?", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 473, "seek": 190628, "start": 1927.28, "end": 1928.28, "text": " Yes.", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 474, "seek": 190628, "start": 1928.28, "end": 1929.28, "text": " Yeah.", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 475, "seek": 190628, "start": 1929.28, "end": 1933.16, "text": " But then I wonder whether it would actually help assert anything.", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 476, "seek": 190628, "start": 1933.16, "end": 1934.76, "text": " I guess it would.", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 477, "seek": 190628, "start": 1934.76, "end": 1935.76, "text": " Yeah.", "tokens": [50364, 467, 311, 257, 534, 1858, 283, 16740, 1500, 281, 2464, 281, 584, 300, 257, 3089, 66, 307, 44788, 13, 50566, 50566, 467, 1116, 312, 1880, 281, 1322, 493, 2051, 365, 264, 3089, 66, 281, 1322, 493, 257, 283, 16740, 36101, 300, 23815, 50940, 50940, 4974, 4190, 337, 300, 293, 550, 7829, 257, 4985, 1500, 11, 257, 283, 16740, 1500, 300, 309, 311, 44788, 13, 51264, 51264, 509, 914, 365, 264, 912, 9362, 30, 51414, 51414, 1079, 13, 51464, 51464, 865, 13, 51514, 51514, 583, 550, 286, 2441, 1968, 309, 576, 767, 854, 19810, 1340, 13, 51708, 51708, 286, 2041, 309, 576, 13, 51788, 51788, 865, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.20801483501087537, "compression_ratio": 1.7207207207207207, "no_caption_prob": 8.013401384232566e-06}, {"id": 478, "seek": 193576, "start": 1935.76, "end": 1941.4, "text": " Which is kind of crazy, but it actually could give additional information about correctness.", "tokens": [50364, 3013, 307, 733, 295, 3219, 11, 457, 309, 767, 727, 976, 4497, 1589, 466, 3006, 1287, 13, 50646, 50646, 1726, 4725, 2176, 1589, 11, 457, 4497, 1589, 412, 1935, 13, 50836, 50836, 6595, 1880, 13, 50886, 50886, 8734, 360, 300, 13, 50936, 50936, 865, 13, 50986, 50986, 467, 576, 312, 257, 1019, 5120, 13, 51126, 51126, 407, 36523, 11, 45933, 18239, 5477, 11, 2729, 257, 751, 412, 264, 7042, 2950, 1677, 1010, 3938, 293, 415, 390, 51524, 51524], "temperature": 0.0, "avg_logprob": -0.24094619750976562, "compression_ratio": 1.5566037735849056, "no_caption_prob": 8.013450496946461e-06}, {"id": 479, "seek": 193576, "start": 1941.4, "end": 1945.2, "text": " Not necessarily perfect information, but additional information at least.", "tokens": [50364, 3013, 307, 733, 295, 3219, 11, 457, 309, 767, 727, 976, 4497, 1589, 466, 3006, 1287, 13, 50646, 50646, 1726, 4725, 2176, 1589, 11, 457, 4497, 1589, 412, 1935, 13, 50836, 50836, 6595, 1880, 13, 50886, 50886, 8734, 360, 300, 13, 50936, 50936, 865, 13, 50986, 50986, 467, 576, 312, 257, 1019, 5120, 13, 51126, 51126, 407, 36523, 11, 45933, 18239, 5477, 11, 2729, 257, 751, 412, 264, 7042, 2950, 1677, 1010, 3938, 293, 415, 390, 51524, 51524], "temperature": 0.0, "avg_logprob": -0.24094619750976562, "compression_ratio": 1.5566037735849056, "no_caption_prob": 8.013450496946461e-06}, {"id": 480, "seek": 193576, "start": 1945.2, "end": 1946.2, "text": " Something interesting.", "tokens": [50364, 3013, 307, 733, 295, 3219, 11, 457, 309, 767, 727, 976, 4497, 1589, 466, 3006, 1287, 13, 50646, 50646, 1726, 4725, 2176, 1589, 11, 457, 4497, 1589, 412, 1935, 13, 50836, 50836, 6595, 1880, 13, 50886, 50886, 8734, 360, 300, 13, 50936, 50936, 865, 13, 50986, 50986, 467, 576, 312, 257, 1019, 5120, 13, 51126, 51126, 407, 36523, 11, 45933, 18239, 5477, 11, 2729, 257, 751, 412, 264, 7042, 2950, 1677, 1010, 3938, 293, 415, 390, 51524, 51524], "temperature": 0.0, "avg_logprob": -0.24094619750976562, "compression_ratio": 1.5566037735849056, "no_caption_prob": 8.013450496946461e-06}, {"id": 481, "seek": 193576, "start": 1946.2, "end": 1947.2, "text": " Someone do that.", "tokens": [50364, 3013, 307, 733, 295, 3219, 11, 457, 309, 767, 727, 976, 4497, 1589, 466, 3006, 1287, 13, 50646, 50646, 1726, 4725, 2176, 1589, 11, 457, 4497, 1589, 412, 1935, 13, 50836, 50836, 6595, 1880, 13, 50886, 50886, 8734, 360, 300, 13, 50936, 50936, 865, 13, 50986, 50986, 467, 576, 312, 257, 1019, 5120, 13, 51126, 51126, 407, 36523, 11, 45933, 18239, 5477, 11, 2729, 257, 751, 412, 264, 7042, 2950, 1677, 1010, 3938, 293, 415, 390, 51524, 51524], "temperature": 0.0, "avg_logprob": -0.24094619750976562, "compression_ratio": 1.5566037735849056, "no_caption_prob": 8.013450496946461e-06}, {"id": 482, "seek": 193576, "start": 1947.2, "end": 1948.2, "text": " Yeah.", "tokens": [50364, 3013, 307, 733, 295, 3219, 11, 457, 309, 767, 727, 976, 4497, 1589, 466, 3006, 1287, 13, 50646, 50646, 1726, 4725, 2176, 1589, 11, 457, 4497, 1589, 412, 1935, 13, 50836, 50836, 6595, 1880, 13, 50886, 50886, 8734, 360, 300, 13, 50936, 50936, 865, 13, 50986, 50986, 467, 576, 312, 257, 1019, 5120, 13, 51126, 51126, 407, 36523, 11, 45933, 18239, 5477, 11, 2729, 257, 751, 412, 264, 7042, 2950, 1677, 1010, 3938, 293, 415, 390, 51524, 51524], "temperature": 0.0, "avg_logprob": -0.24094619750976562, "compression_ratio": 1.5566037735849056, "no_caption_prob": 8.013450496946461e-06}, {"id": 483, "seek": 193576, "start": 1948.2, "end": 1951.0, "text": " It would be a fun experiment.", "tokens": [50364, 3013, 307, 733, 295, 3219, 11, 457, 309, 767, 727, 976, 4497, 1589, 466, 3006, 1287, 13, 50646, 50646, 1726, 4725, 2176, 1589, 11, 457, 4497, 1589, 412, 1935, 13, 50836, 50836, 6595, 1880, 13, 50886, 50886, 8734, 360, 300, 13, 50936, 50936, 865, 13, 50986, 50986, 467, 576, 312, 257, 1019, 5120, 13, 51126, 51126, 407, 36523, 11, 45933, 18239, 5477, 11, 2729, 257, 751, 412, 264, 7042, 2950, 1677, 1010, 3938, 293, 415, 390, 51524, 51524], "temperature": 0.0, "avg_logprob": -0.24094619750976562, "compression_ratio": 1.5566037735849056, "no_caption_prob": 8.013450496946461e-06}, {"id": 484, "seek": 193576, "start": 1951.0, "end": 1958.96, "text": " So Leonardo, AKA Mini Bill, gave a talk at the London online meetup recently and he was", "tokens": [50364, 3013, 307, 733, 295, 3219, 11, 457, 309, 767, 727, 976, 4497, 1589, 466, 3006, 1287, 13, 50646, 50646, 1726, 4725, 2176, 1589, 11, 457, 4497, 1589, 412, 1935, 13, 50836, 50836, 6595, 1880, 13, 50886, 50886, 8734, 360, 300, 13, 50936, 50936, 865, 13, 50986, 50986, 467, 576, 312, 257, 1019, 5120, 13, 51126, 51126, 407, 36523, 11, 45933, 18239, 5477, 11, 2729, 257, 751, 412, 264, 7042, 2950, 1677, 1010, 3938, 293, 415, 390, 51524, 51524], "temperature": 0.0, "avg_logprob": -0.24094619750976562, "compression_ratio": 1.5566037735849056, "no_caption_prob": 8.013450496946461e-06}, {"id": 485, "seek": 195896, "start": 1958.96, "end": 1967.8, "text": " saying that his initial prototype of the Elm codec library was using this, it included", "tokens": [50364, 1566, 300, 702, 5883, 19475, 295, 264, 2699, 76, 3089, 66, 6405, 390, 1228, 341, 11, 309, 5556, 50806, 50806, 411, 257, 1254, 2058, 19866, 293, 415, 4597, 292, 264, 30423, 281, 909, 4497, 4122, 293, 445, 3031, 51198, 51198, 281, 1066, 309, 2199, 11, 597, 286, 519, 307, 257, 665, 818, 13, 51356, 51356, 467, 311, 2673, 257, 665, 818, 11, 1338, 13, 51468, 51468, 583, 300, 775, 797, 23221, 300, 935, 300, 341, 5102, 575, 257, 688, 295, 819, 5821, 13, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.14679085523232646, "compression_ratio": 1.600896860986547, "no_caption_prob": 2.2827160137239844e-05}, {"id": 486, "seek": 195896, "start": 1967.8, "end": 1975.64, "text": " like a form encoder and he resisted the temptation to add additional features and just tried", "tokens": [50364, 1566, 300, 702, 5883, 19475, 295, 264, 2699, 76, 3089, 66, 6405, 390, 1228, 341, 11, 309, 5556, 50806, 50806, 411, 257, 1254, 2058, 19866, 293, 415, 4597, 292, 264, 30423, 281, 909, 4497, 4122, 293, 445, 3031, 51198, 51198, 281, 1066, 309, 2199, 11, 597, 286, 519, 307, 257, 665, 818, 13, 51356, 51356, 467, 311, 2673, 257, 665, 818, 11, 1338, 13, 51468, 51468, 583, 300, 775, 797, 23221, 300, 935, 300, 341, 5102, 575, 257, 688, 295, 819, 5821, 13, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.14679085523232646, "compression_ratio": 1.600896860986547, "no_caption_prob": 2.2827160137239844e-05}, {"id": 487, "seek": 195896, "start": 1975.64, "end": 1978.8, "text": " to keep it simple, which I think is a good call.", "tokens": [50364, 1566, 300, 702, 5883, 19475, 295, 264, 2699, 76, 3089, 66, 6405, 390, 1228, 341, 11, 309, 5556, 50806, 50806, 411, 257, 1254, 2058, 19866, 293, 415, 4597, 292, 264, 30423, 281, 909, 4497, 4122, 293, 445, 3031, 51198, 51198, 281, 1066, 309, 2199, 11, 597, 286, 519, 307, 257, 665, 818, 13, 51356, 51356, 467, 311, 2673, 257, 665, 818, 11, 1338, 13, 51468, 51468, 583, 300, 775, 797, 23221, 300, 935, 300, 341, 5102, 575, 257, 688, 295, 819, 5821, 13, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.14679085523232646, "compression_ratio": 1.600896860986547, "no_caption_prob": 2.2827160137239844e-05}, {"id": 488, "seek": 195896, "start": 1978.8, "end": 1981.04, "text": " It's usually a good call, yeah.", "tokens": [50364, 1566, 300, 702, 5883, 19475, 295, 264, 2699, 76, 3089, 66, 6405, 390, 1228, 341, 11, 309, 5556, 50806, 50806, 411, 257, 1254, 2058, 19866, 293, 415, 4597, 292, 264, 30423, 281, 909, 4497, 4122, 293, 445, 3031, 51198, 51198, 281, 1066, 309, 2199, 11, 597, 286, 519, 307, 257, 665, 818, 13, 51356, 51356, 467, 311, 2673, 257, 665, 818, 11, 1338, 13, 51468, 51468, 583, 300, 775, 797, 23221, 300, 935, 300, 341, 5102, 575, 257, 688, 295, 819, 5821, 13, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.14679085523232646, "compression_ratio": 1.600896860986547, "no_caption_prob": 2.2827160137239844e-05}, {"id": 489, "seek": 195896, "start": 1981.04, "end": 1988.3, "text": " But that does again illustrate that point that this pattern has a lot of different applications.", "tokens": [50364, 1566, 300, 702, 5883, 19475, 295, 264, 2699, 76, 3089, 66, 6405, 390, 1228, 341, 11, 309, 5556, 50806, 50806, 411, 257, 1254, 2058, 19866, 293, 415, 4597, 292, 264, 30423, 281, 909, 4497, 4122, 293, 445, 3031, 51198, 51198, 281, 1066, 309, 2199, 11, 597, 286, 519, 307, 257, 665, 818, 13, 51356, 51356, 467, 311, 2673, 257, 665, 818, 11, 1338, 13, 51468, 51468, 583, 300, 775, 797, 23221, 300, 935, 300, 341, 5102, 575, 257, 688, 295, 819, 5821, 13, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.14679085523232646, "compression_ratio": 1.600896860986547, "no_caption_prob": 2.2827160137239844e-05}, {"id": 490, "seek": 198830, "start": 1988.3, "end": 1997.9199999999998, "text": " So a form codec, is that for instance when you want to save the result of a form to record", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 491, "seek": 198830, "start": 1997.9199999999998, "end": 2002.48, "text": " somewhere, but you also want to open that form with preexisting data?", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 492, "seek": 198830, "start": 2002.48, "end": 2003.8, "text": " I think that would be the idea.", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 493, "seek": 198830, "start": 2003.8, "end": 2004.8, "text": " Yeah.", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 494, "seek": 198830, "start": 2004.8, "end": 2005.8, "text": " That's interesting.", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 495, "seek": 198830, "start": 2005.8, "end": 2008.8, "text": " I've never thought of it.", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 496, "seek": 198830, "start": 2008.8, "end": 2009.8, "text": " Yeah.", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 497, "seek": 198830, "start": 2009.8, "end": 2012.8799999999999, "text": " There are so many applications of this concept.", "tokens": [50364, 407, 257, 1254, 3089, 66, 11, 307, 300, 337, 5197, 562, 291, 528, 281, 3155, 264, 1874, 295, 257, 1254, 281, 2136, 50845, 50845, 4079, 11, 457, 291, 611, 528, 281, 1269, 300, 1254, 365, 659, 36447, 1412, 30, 51073, 51073, 286, 519, 300, 576, 312, 264, 1558, 13, 51139, 51139, 865, 13, 51189, 51189, 663, 311, 1880, 13, 51239, 51239, 286, 600, 1128, 1194, 295, 309, 13, 51389, 51389, 865, 13, 51439, 51439, 821, 366, 370, 867, 5821, 295, 341, 3410, 13, 51593, 51593], "temperature": 0.0, "avg_logprob": -0.2209587754874394, "compression_ratio": 1.544041450777202, "no_caption_prob": 3.4265394788235426e-05}, {"id": 498, "seek": 201288, "start": 2012.88, "end": 2020.5600000000002, "text": " I mean, again, it's just relentlessly looking for ways to reduce sources of truth down to", "tokens": [50364, 286, 914, 11, 797, 11, 309, 311, 445, 34045, 12048, 1237, 337, 2098, 281, 5407, 7139, 295, 3494, 760, 281, 50748, 50748, 472, 293, 281, 652, 6243, 4368, 6243, 13, 51031, 51031, 1981, 366, 1333, 295, 264, 3303, 14978, 22865, 295, 300, 12543, 11, 286, 519, 13, 51290, 51290, 865, 13, 51340, 51340, 3996, 764, 1389, 286, 1352, 767, 965, 307, 337, 32722, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17589165182674632, "compression_ratio": 1.4598930481283423, "no_caption_prob": 1.8631100829225034e-05}, {"id": 499, "seek": 201288, "start": 2020.5600000000002, "end": 2026.22, "text": " one and to make impossible states impossible.", "tokens": [50364, 286, 914, 11, 797, 11, 309, 311, 445, 34045, 12048, 1237, 337, 2098, 281, 5407, 7139, 295, 3494, 760, 281, 50748, 50748, 472, 293, 281, 652, 6243, 4368, 6243, 13, 51031, 51031, 1981, 366, 1333, 295, 264, 3303, 14978, 22865, 295, 300, 12543, 11, 286, 519, 13, 51290, 51290, 865, 13, 51340, 51340, 3996, 764, 1389, 286, 1352, 767, 965, 307, 337, 32722, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17589165182674632, "compression_ratio": 1.4598930481283423, "no_caption_prob": 1.8631100829225034e-05}, {"id": 500, "seek": 201288, "start": 2026.22, "end": 2031.4, "text": " These are sort of the natural logical conclusions of that mindset, I think.", "tokens": [50364, 286, 914, 11, 797, 11, 309, 311, 445, 34045, 12048, 1237, 337, 2098, 281, 5407, 7139, 295, 3494, 760, 281, 50748, 50748, 472, 293, 281, 652, 6243, 4368, 6243, 13, 51031, 51031, 1981, 366, 1333, 295, 264, 3303, 14978, 22865, 295, 300, 12543, 11, 286, 519, 13, 51290, 51290, 865, 13, 51340, 51340, 3996, 764, 1389, 286, 1352, 767, 965, 307, 337, 32722, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17589165182674632, "compression_ratio": 1.4598930481283423, "no_caption_prob": 1.8631100829225034e-05}, {"id": 501, "seek": 201288, "start": 2031.4, "end": 2032.4, "text": " Yeah.", "tokens": [50364, 286, 914, 11, 797, 11, 309, 311, 445, 34045, 12048, 1237, 337, 2098, 281, 5407, 7139, 295, 3494, 760, 281, 50748, 50748, 472, 293, 281, 652, 6243, 4368, 6243, 13, 51031, 51031, 1981, 366, 1333, 295, 264, 3303, 14978, 22865, 295, 300, 12543, 11, 286, 519, 13, 51290, 51290, 865, 13, 51340, 51340, 3996, 764, 1389, 286, 1352, 767, 965, 307, 337, 32722, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17589165182674632, "compression_ratio": 1.4598930481283423, "no_caption_prob": 1.8631100829225034e-05}, {"id": 502, "seek": 201288, "start": 2032.4, "end": 2036.7600000000002, "text": " Another use case I found actually today is for routing.", "tokens": [50364, 286, 914, 11, 797, 11, 309, 311, 445, 34045, 12048, 1237, 337, 2098, 281, 5407, 7139, 295, 3494, 760, 281, 50748, 50748, 472, 293, 281, 652, 6243, 4368, 6243, 13, 51031, 51031, 1981, 366, 1333, 295, 264, 3303, 14978, 22865, 295, 300, 12543, 11, 286, 519, 13, 51290, 51290, 865, 13, 51340, 51340, 3996, 764, 1389, 286, 1352, 767, 965, 307, 337, 32722, 13, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.17589165182674632, "compression_ratio": 1.4598930481283423, "no_caption_prob": 1.8631100829225034e-05}, {"id": 503, "seek": 203676, "start": 2036.76, "end": 2045.68, "text": " So we're looking at refactoring the code today in the workplace and we have two functions", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 504, "seek": 203676, "start": 2045.68, "end": 2046.68, "text": " for routing.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 505, "seek": 203676, "start": 2046.68, "end": 2052.88, "text": " One to parse the URL into a page or a route.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 506, "seek": 203676, "start": 2052.88, "end": 2055.2, "text": " We call that a route in our case.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 507, "seek": 203676, "start": 2055.2, "end": 2059.36, "text": " And then a function that takes a route and turns it to a string so that you can create", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 508, "seek": 203676, "start": 2059.36, "end": 2060.36, "text": " a list.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 509, "seek": 203676, "start": 2060.36, "end": 2061.36, "text": " Right.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 510, "seek": 203676, "start": 2061.36, "end": 2062.36, "text": " It's very...", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 511, "seek": 203676, "start": 2062.36, "end": 2063.36, "text": " Yeah.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 512, "seek": 203676, "start": 2063.36, "end": 2065.6, "text": " I mean, that must be like almost every single LMSPA must have that function.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 513, "seek": 203676, "start": 2065.6, "end": 2066.6, "text": " Yeah.", "tokens": [50364, 407, 321, 434, 1237, 412, 1895, 578, 3662, 264, 3089, 965, 294, 264, 15328, 293, 321, 362, 732, 6828, 50810, 50810, 337, 32722, 13, 50860, 50860, 1485, 281, 48377, 264, 12905, 666, 257, 3028, 420, 257, 7955, 13, 51170, 51170, 492, 818, 300, 257, 7955, 294, 527, 1389, 13, 51286, 51286, 400, 550, 257, 2445, 300, 2516, 257, 7955, 293, 4523, 309, 281, 257, 6798, 370, 300, 291, 393, 1884, 51494, 51494, 257, 1329, 13, 51544, 51544, 1779, 13, 51594, 51594, 467, 311, 588, 485, 51644, 51644, 865, 13, 51694, 51694, 286, 914, 11, 300, 1633, 312, 411, 1920, 633, 2167, 441, 10288, 10297, 1633, 362, 300, 2445, 13, 51806, 51806, 865, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.21460746699928218, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.1300334335828666e-05}, {"id": 514, "seek": 206660, "start": 2066.6, "end": 2067.6, "text": " Exactly.", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 515, "seek": 206660, "start": 2067.6, "end": 2069.7599999999998, "text": " Those ones are defined in different places.", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 516, "seek": 206660, "start": 2069.7599999999998, "end": 2073.7999999999997, "text": " They're also spread across plenty of modules because we want to...", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 517, "seek": 206660, "start": 2073.7999999999997, "end": 2077.72, "text": " Because at least we split it up.", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 518, "seek": 206660, "start": 2077.72, "end": 2082.16, "text": " Which might not be a good idea, but we'll see what we'll do about that.", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 519, "seek": 206660, "start": 2082.16, "end": 2089.04, "text": " And yeah, it's pretty easy for them to get out of sync or even just forgetting to add", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 520, "seek": 206660, "start": 2089.04, "end": 2093.52, "text": " a route in one place.", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 521, "seek": 206660, "start": 2093.52, "end": 2095.04, "text": " So that's quite annoying.", "tokens": [50364, 7587, 13, 50414, 50414, 3950, 2306, 366, 7642, 294, 819, 3190, 13, 50522, 50522, 814, 434, 611, 3974, 2108, 7140, 295, 16679, 570, 321, 528, 281, 485, 50724, 50724, 1436, 412, 1935, 321, 7472, 309, 493, 13, 50920, 50920, 3013, 1062, 406, 312, 257, 665, 1558, 11, 457, 321, 603, 536, 437, 321, 603, 360, 466, 300, 13, 51142, 51142, 400, 1338, 11, 309, 311, 1238, 1858, 337, 552, 281, 483, 484, 295, 20271, 420, 754, 445, 25428, 281, 909, 51486, 51486, 257, 7955, 294, 472, 1081, 13, 51710, 51710, 407, 300, 311, 1596, 11304, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.18973516464233398, "compression_ratio": 1.536480686695279, "no_caption_prob": 5.1439976232359186e-05}, {"id": 522, "seek": 209504, "start": 2095.04, "end": 2098.56, "text": " But if we do that through a codec, then we only have to do it in one place.", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 523, "seek": 209504, "start": 2098.56, "end": 2100.6, "text": " And that is pretty good, I think.", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 524, "seek": 209504, "start": 2100.6, "end": 2101.6, "text": " Pretty nice.", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 525, "seek": 209504, "start": 2101.6, "end": 2102.6, "text": " Right.", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 526, "seek": 209504, "start": 2102.6, "end": 2106.7599999999998, "text": " And that's a good point about if you add a new route, like if you add a new variant to", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 527, "seek": 209504, "start": 2106.7599999999998, "end": 2113.0, "text": " a custom type, then if you're using this sort of codec style pattern where you have a case", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 528, "seek": 209504, "start": 2113.0, "end": 2119.0, "text": " statement where you build up that encoder, then it keeps you honest there.", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 529, "seek": 209504, "start": 2119.0, "end": 2124.08, "text": " I guess you would probably have a case statement anyway in the encoder regardless, but you're", "tokens": [50364, 583, 498, 321, 360, 300, 807, 257, 3089, 66, 11, 550, 321, 787, 362, 281, 360, 309, 294, 472, 1081, 13, 50540, 50540, 400, 300, 307, 1238, 665, 11, 286, 519, 13, 50642, 50642, 10693, 1481, 13, 50692, 50692, 1779, 13, 50742, 50742, 400, 300, 311, 257, 665, 935, 466, 498, 291, 909, 257, 777, 7955, 11, 411, 498, 291, 909, 257, 777, 17501, 281, 50950, 50950, 257, 2375, 2010, 11, 550, 498, 291, 434, 1228, 341, 1333, 295, 3089, 66, 3758, 5102, 689, 291, 362, 257, 1389, 51262, 51262, 5629, 689, 291, 1322, 493, 300, 2058, 19866, 11, 550, 309, 5965, 291, 3245, 456, 13, 51562, 51562, 286, 2041, 291, 576, 1391, 362, 257, 1389, 5629, 4033, 294, 264, 2058, 19866, 10060, 11, 457, 291, 434, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.10655411873154967, "compression_ratio": 1.8237547892720307, "no_caption_prob": 6.048851901141461e-06}, {"id": 530, "seek": 212408, "start": 2124.08, "end": 2125.08, "text": " sharing more information.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 531, "seek": 212408, "start": 2125.08, "end": 2129.52, "text": " Yeah, but you might forget to handle the decoding.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 532, "seek": 212408, "start": 2129.52, "end": 2130.52, "text": " Right.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 533, "seek": 212408, "start": 2130.52, "end": 2134.16, "text": " I guess that's where it becomes more useful, isn't it?", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 534, "seek": 212408, "start": 2134.16, "end": 2138.6, "text": " On the decoding side, you're less likely to miss it.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 535, "seek": 212408, "start": 2138.6, "end": 2139.6, "text": " Interesting.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 536, "seek": 212408, "start": 2139.6, "end": 2143.92, "text": " And maybe you can do some stringification for you.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 537, "seek": 212408, "start": 2143.92, "end": 2144.92, "text": " Right.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 538, "seek": 212408, "start": 2144.92, "end": 2145.92, "text": " Because you can't...", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 539, "seek": 212408, "start": 2145.92, "end": 2151.68, "text": " Essentially, you cannot have a decoder for which there is no encoder.", "tokens": [50364, 5414, 544, 1589, 13, 50414, 50414, 865, 11, 457, 291, 1062, 2870, 281, 4813, 264, 979, 8616, 13, 50636, 50636, 1779, 13, 50686, 50686, 286, 2041, 300, 311, 689, 309, 3643, 544, 4420, 11, 1943, 380, 309, 30, 50868, 50868, 1282, 264, 979, 8616, 1252, 11, 291, 434, 1570, 3700, 281, 1713, 309, 13, 51090, 51090, 14711, 13, 51140, 51140, 400, 1310, 291, 393, 360, 512, 6798, 3774, 337, 291, 13, 51356, 51356, 1779, 13, 51406, 51406, 1436, 291, 393, 380, 485, 51456, 51456, 23596, 11, 291, 2644, 362, 257, 979, 19866, 337, 597, 456, 307, 572, 2058, 19866, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.19473116214458758, "compression_ratio": 1.5972850678733033, "no_caption_prob": 9.460673754801974e-05}, {"id": 540, "seek": 215168, "start": 2151.68, "end": 2155.0, "text": " Or you cannot have an encoder for which there is no decoder.", "tokens": [50364, 1610, 291, 2644, 362, 364, 2058, 19866, 337, 597, 456, 307, 572, 979, 19866, 13, 50530, 50530, 19948, 498, 291, 632, 264, 2058, 19866, 11, 291, 576, 1391, 360, 1389, 7955, 295, 17501, 11, 17501, 11, 50840, 50840, 17501, 11, 17501, 11, 293, 550, 291, 2058, 1429, 1184, 295, 729, 13, 50972, 50972, 400, 382, 291, 848, 11, 291, 434, 406, 516, 281, 2870, 281, 4813, 257, 1389, 295, 729, 13, 51186, 51186, 6281, 24919, 291, 500, 380, 360, 257, 4868, 22259, 11, 264, 31958, 307, 516, 281, 980, 291, 281, 4813, 257, 777, 1389, 11, 51440, 51440, 293, 550, 291, 603, 909, 264, 2058, 19866, 337, 309, 13, 51576, 51576, 400, 300, 311, 406, 516, 281, 312, 257, 1154, 370, 709, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14750359002060778, "compression_ratio": 1.9141630901287554, "no_caption_prob": 1.1125479431939311e-05}, {"id": 541, "seek": 215168, "start": 2155.0, "end": 2161.2, "text": " Meaning if you had the encoder, you would probably do case route of variant, variant,", "tokens": [50364, 1610, 291, 2644, 362, 364, 2058, 19866, 337, 597, 456, 307, 572, 979, 19866, 13, 50530, 50530, 19948, 498, 291, 632, 264, 2058, 19866, 11, 291, 576, 1391, 360, 1389, 7955, 295, 17501, 11, 17501, 11, 50840, 50840, 17501, 11, 17501, 11, 293, 550, 291, 2058, 1429, 1184, 295, 729, 13, 50972, 50972, 400, 382, 291, 848, 11, 291, 434, 406, 516, 281, 2870, 281, 4813, 257, 1389, 295, 729, 13, 51186, 51186, 6281, 24919, 291, 500, 380, 360, 257, 4868, 22259, 11, 264, 31958, 307, 516, 281, 980, 291, 281, 4813, 257, 777, 1389, 11, 51440, 51440, 293, 550, 291, 603, 909, 264, 2058, 19866, 337, 309, 13, 51576, 51576, 400, 300, 311, 406, 516, 281, 312, 257, 1154, 370, 709, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14750359002060778, "compression_ratio": 1.9141630901287554, "no_caption_prob": 1.1125479431939311e-05}, {"id": 542, "seek": 215168, "start": 2161.2, "end": 2163.8399999999997, "text": " variant, variant, and then you encode each of those.", "tokens": [50364, 1610, 291, 2644, 362, 364, 2058, 19866, 337, 597, 456, 307, 572, 979, 19866, 13, 50530, 50530, 19948, 498, 291, 632, 264, 2058, 19866, 11, 291, 576, 1391, 360, 1389, 7955, 295, 17501, 11, 17501, 11, 50840, 50840, 17501, 11, 17501, 11, 293, 550, 291, 2058, 1429, 1184, 295, 729, 13, 50972, 50972, 400, 382, 291, 848, 11, 291, 434, 406, 516, 281, 2870, 281, 4813, 257, 1389, 295, 729, 13, 51186, 51186, 6281, 24919, 291, 500, 380, 360, 257, 4868, 22259, 11, 264, 31958, 307, 516, 281, 980, 291, 281, 4813, 257, 777, 1389, 11, 51440, 51440, 293, 550, 291, 603, 909, 264, 2058, 19866, 337, 309, 13, 51576, 51576, 400, 300, 311, 406, 516, 281, 312, 257, 1154, 370, 709, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14750359002060778, "compression_ratio": 1.9141630901287554, "no_caption_prob": 1.1125479431939311e-05}, {"id": 543, "seek": 215168, "start": 2163.8399999999997, "end": 2168.12, "text": " And as you said, you're not going to forget to handle a case of those.", "tokens": [50364, 1610, 291, 2644, 362, 364, 2058, 19866, 337, 597, 456, 307, 572, 979, 19866, 13, 50530, 50530, 19948, 498, 291, 632, 264, 2058, 19866, 11, 291, 576, 1391, 360, 1389, 7955, 295, 17501, 11, 17501, 11, 50840, 50840, 17501, 11, 17501, 11, 293, 550, 291, 2058, 1429, 1184, 295, 729, 13, 50972, 50972, 400, 382, 291, 848, 11, 291, 434, 406, 516, 281, 2870, 281, 4813, 257, 1389, 295, 729, 13, 51186, 51186, 6281, 24919, 291, 500, 380, 360, 257, 4868, 22259, 11, 264, 31958, 307, 516, 281, 980, 291, 281, 4813, 257, 777, 1389, 11, 51440, 51440, 293, 550, 291, 603, 909, 264, 2058, 19866, 337, 309, 13, 51576, 51576, 400, 300, 311, 406, 516, 281, 312, 257, 1154, 370, 709, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14750359002060778, "compression_ratio": 1.9141630901287554, "no_caption_prob": 1.1125479431939311e-05}, {"id": 544, "seek": 215168, "start": 2168.12, "end": 2173.2, "text": " Assuming you don't do a wildcard, the compiler is going to tell you to handle a new case,", "tokens": [50364, 1610, 291, 2644, 362, 364, 2058, 19866, 337, 597, 456, 307, 572, 979, 19866, 13, 50530, 50530, 19948, 498, 291, 632, 264, 2058, 19866, 11, 291, 576, 1391, 360, 1389, 7955, 295, 17501, 11, 17501, 11, 50840, 50840, 17501, 11, 17501, 11, 293, 550, 291, 2058, 1429, 1184, 295, 729, 13, 50972, 50972, 400, 382, 291, 848, 11, 291, 434, 406, 516, 281, 2870, 281, 4813, 257, 1389, 295, 729, 13, 51186, 51186, 6281, 24919, 291, 500, 380, 360, 257, 4868, 22259, 11, 264, 31958, 307, 516, 281, 980, 291, 281, 4813, 257, 777, 1389, 11, 51440, 51440, 293, 550, 291, 603, 909, 264, 2058, 19866, 337, 309, 13, 51576, 51576, 400, 300, 311, 406, 516, 281, 312, 257, 1154, 370, 709, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14750359002060778, "compression_ratio": 1.9141630901287554, "no_caption_prob": 1.1125479431939311e-05}, {"id": 545, "seek": 215168, "start": 2173.2, "end": 2175.9199999999996, "text": " and then you'll add the encoder for it.", "tokens": [50364, 1610, 291, 2644, 362, 364, 2058, 19866, 337, 597, 456, 307, 572, 979, 19866, 13, 50530, 50530, 19948, 498, 291, 632, 264, 2058, 19866, 11, 291, 576, 1391, 360, 1389, 7955, 295, 17501, 11, 17501, 11, 50840, 50840, 17501, 11, 17501, 11, 293, 550, 291, 2058, 1429, 1184, 295, 729, 13, 50972, 50972, 400, 382, 291, 848, 11, 291, 434, 406, 516, 281, 2870, 281, 4813, 257, 1389, 295, 729, 13, 51186, 51186, 6281, 24919, 291, 500, 380, 360, 257, 4868, 22259, 11, 264, 31958, 307, 516, 281, 980, 291, 281, 4813, 257, 777, 1389, 11, 51440, 51440, 293, 550, 291, 603, 909, 264, 2058, 19866, 337, 309, 13, 51576, 51576, 400, 300, 311, 406, 516, 281, 312, 257, 1154, 370, 709, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14750359002060778, "compression_ratio": 1.9141630901287554, "no_caption_prob": 1.1125479431939311e-05}, {"id": 546, "seek": 215168, "start": 2175.9199999999996, "end": 2179.08, "text": " And that's not going to be a problem so much.", "tokens": [50364, 1610, 291, 2644, 362, 364, 2058, 19866, 337, 597, 456, 307, 572, 979, 19866, 13, 50530, 50530, 19948, 498, 291, 632, 264, 2058, 19866, 11, 291, 576, 1391, 360, 1389, 7955, 295, 17501, 11, 17501, 11, 50840, 50840, 17501, 11, 17501, 11, 293, 550, 291, 2058, 1429, 1184, 295, 729, 13, 50972, 50972, 400, 382, 291, 848, 11, 291, 434, 406, 516, 281, 2870, 281, 4813, 257, 1389, 295, 729, 13, 51186, 51186, 6281, 24919, 291, 500, 380, 360, 257, 4868, 22259, 11, 264, 31958, 307, 516, 281, 980, 291, 281, 4813, 257, 777, 1389, 11, 51440, 51440, 293, 550, 291, 603, 909, 264, 2058, 19866, 337, 309, 13, 51576, 51576, 400, 300, 311, 406, 516, 281, 312, 257, 1154, 370, 709, 13, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.14750359002060778, "compression_ratio": 1.9141630901287554, "no_caption_prob": 1.1125479431939311e-05}, {"id": 547, "seek": 217908, "start": 2179.08, "end": 2185.88, "text": " But then as you said, for the decoder part, you may forget to handle that case where you", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 548, "seek": 217908, "start": 2185.88, "end": 2188.72, "text": " turn that back into a route.", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 549, "seek": 217908, "start": 2188.72, "end": 2194.84, "text": " Or for the URL parser part or the JSON decoder or whatever type of codec we're talking about,", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 550, "seek": 217908, "start": 2194.84, "end": 2196.68, "text": " that's the part you might forget, right?", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 551, "seek": 217908, "start": 2196.68, "end": 2197.68, "text": " Yeah.", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 552, "seek": 217908, "start": 2197.68, "end": 2200.08, "text": " If you add the variant to your custom type.", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 553, "seek": 217908, "start": 2200.08, "end": 2202.68, "text": " In a regular encode decode thing.", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 554, "seek": 217908, "start": 2202.68, "end": 2203.68, "text": " Right.", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 555, "seek": 217908, "start": 2203.68, "end": 2204.68, "text": " Exactly.", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 556, "seek": 217908, "start": 2204.68, "end": 2207.2599999999998, "text": " When you have those two things split apart and defined separately.", "tokens": [50364, 583, 550, 382, 291, 848, 11, 337, 264, 979, 19866, 644, 11, 291, 815, 2870, 281, 4813, 300, 1389, 689, 291, 50704, 50704, 1261, 300, 646, 666, 257, 7955, 13, 50846, 50846, 1610, 337, 264, 12905, 21156, 260, 644, 420, 264, 31828, 979, 19866, 420, 2035, 2010, 295, 3089, 66, 321, 434, 1417, 466, 11, 51152, 51152, 300, 311, 264, 644, 291, 1062, 2870, 11, 558, 30, 51244, 51244, 865, 13, 51294, 51294, 759, 291, 909, 264, 17501, 281, 428, 2375, 2010, 13, 51414, 51414, 682, 257, 3890, 2058, 1429, 979, 1429, 551, 13, 51544, 51544, 1779, 13, 51594, 51594, 7587, 13, 51644, 51644, 1133, 291, 362, 729, 732, 721, 7472, 4936, 293, 7642, 14759, 13, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.14127039909362793, "compression_ratio": 1.6431372549019607, "no_caption_prob": 3.7266052004270023e-06}, {"id": 557, "seek": 220726, "start": 2207.26, "end": 2214.0400000000004, "text": " But when you do it as a codec, in order to define a new custom type variant, you now", "tokens": [50364, 583, 562, 291, 360, 309, 382, 257, 3089, 66, 11, 294, 1668, 281, 6964, 257, 777, 2375, 2010, 17501, 11, 291, 586, 50703, 50703, 909, 257, 11240, 5021, 293, 291, 584, 3089, 66, 5893, 17501, 472, 420, 17501, 4018, 420, 5413, 322, 577, 867, 51087, 51087, 12869, 300, 2375, 2010, 575, 13, 51201, 51201, 400, 293, 586, 291, 483, 257, 777, 6770, 294, 300, 2445, 300, 2709, 291, 300, 2058, 19866, 13, 51504, 51504, 400, 300, 311, 264, 787, 636, 281, 2105, 264, 2058, 19866, 281, 2058, 1429, 264, 2158, 13, 51698, 51698, 407, 291, 362, 300, 1389, 5629, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.12086529915149395, "compression_ratio": 1.7762557077625571, "no_caption_prob": 5.0936696425196715e-06}, {"id": 558, "seek": 220726, "start": 2214.0400000000004, "end": 2221.7200000000003, "text": " add a pipe chain and you say codec dot variant one or variant zero or depending on how many", "tokens": [50364, 583, 562, 291, 360, 309, 382, 257, 3089, 66, 11, 294, 1668, 281, 6964, 257, 777, 2375, 2010, 17501, 11, 291, 586, 50703, 50703, 909, 257, 11240, 5021, 293, 291, 584, 3089, 66, 5893, 17501, 472, 420, 17501, 4018, 420, 5413, 322, 577, 867, 51087, 51087, 12869, 300, 2375, 2010, 575, 13, 51201, 51201, 400, 293, 586, 291, 483, 257, 777, 6770, 294, 300, 2445, 300, 2709, 291, 300, 2058, 19866, 13, 51504, 51504, 400, 300, 311, 264, 787, 636, 281, 2105, 264, 2058, 19866, 281, 2058, 1429, 264, 2158, 13, 51698, 51698, 407, 291, 362, 300, 1389, 5629, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.12086529915149395, "compression_ratio": 1.7762557077625571, "no_caption_prob": 5.0936696425196715e-06}, {"id": 559, "seek": 220726, "start": 2221.7200000000003, "end": 2224.0, "text": " arguments that custom type has.", "tokens": [50364, 583, 562, 291, 360, 309, 382, 257, 3089, 66, 11, 294, 1668, 281, 6964, 257, 777, 2375, 2010, 17501, 11, 291, 586, 50703, 50703, 909, 257, 11240, 5021, 293, 291, 584, 3089, 66, 5893, 17501, 472, 420, 17501, 4018, 420, 5413, 322, 577, 867, 51087, 51087, 12869, 300, 2375, 2010, 575, 13, 51201, 51201, 400, 293, 586, 291, 483, 257, 777, 6770, 294, 300, 2445, 300, 2709, 291, 300, 2058, 19866, 13, 51504, 51504, 400, 300, 311, 264, 787, 636, 281, 2105, 264, 2058, 19866, 281, 2058, 1429, 264, 2158, 13, 51698, 51698, 407, 291, 362, 300, 1389, 5629, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.12086529915149395, "compression_ratio": 1.7762557077625571, "no_caption_prob": 5.0936696425196715e-06}, {"id": 560, "seek": 220726, "start": 2224.0, "end": 2230.0600000000004, "text": " And and now you get a new argument in that function that gives you that encoder.", "tokens": [50364, 583, 562, 291, 360, 309, 382, 257, 3089, 66, 11, 294, 1668, 281, 6964, 257, 777, 2375, 2010, 17501, 11, 291, 586, 50703, 50703, 909, 257, 11240, 5021, 293, 291, 584, 3089, 66, 5893, 17501, 472, 420, 17501, 4018, 420, 5413, 322, 577, 867, 51087, 51087, 12869, 300, 2375, 2010, 575, 13, 51201, 51201, 400, 293, 586, 291, 483, 257, 777, 6770, 294, 300, 2445, 300, 2709, 291, 300, 2058, 19866, 13, 51504, 51504, 400, 300, 311, 264, 787, 636, 281, 2105, 264, 2058, 19866, 281, 2058, 1429, 264, 2158, 13, 51698, 51698, 407, 291, 362, 300, 1389, 5629, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.12086529915149395, "compression_ratio": 1.7762557077625571, "no_caption_prob": 5.0936696425196715e-06}, {"id": 561, "seek": 220726, "start": 2230.0600000000004, "end": 2233.94, "text": " And that's the only way to access the encoder to encode the value.", "tokens": [50364, 583, 562, 291, 360, 309, 382, 257, 3089, 66, 11, 294, 1668, 281, 6964, 257, 777, 2375, 2010, 17501, 11, 291, 586, 50703, 50703, 909, 257, 11240, 5021, 293, 291, 584, 3089, 66, 5893, 17501, 472, 420, 17501, 4018, 420, 5413, 322, 577, 867, 51087, 51087, 12869, 300, 2375, 2010, 575, 13, 51201, 51201, 400, 293, 586, 291, 483, 257, 777, 6770, 294, 300, 2445, 300, 2709, 291, 300, 2058, 19866, 13, 51504, 51504, 400, 300, 311, 264, 787, 636, 281, 2105, 264, 2058, 19866, 281, 2058, 1429, 264, 2158, 13, 51698, 51698, 407, 291, 362, 300, 1389, 5629, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.12086529915149395, "compression_ratio": 1.7762557077625571, "no_caption_prob": 5.0936696425196715e-06}, {"id": 562, "seek": 220726, "start": 2233.94, "end": 2235.88, "text": " So you have that case statement.", "tokens": [50364, 583, 562, 291, 360, 309, 382, 257, 3089, 66, 11, 294, 1668, 281, 6964, 257, 777, 2375, 2010, 17501, 11, 291, 586, 50703, 50703, 909, 257, 11240, 5021, 293, 291, 584, 3089, 66, 5893, 17501, 472, 420, 17501, 4018, 420, 5413, 322, 577, 867, 51087, 51087, 12869, 300, 2375, 2010, 575, 13, 51201, 51201, 400, 293, 586, 291, 483, 257, 777, 6770, 294, 300, 2445, 300, 2709, 291, 300, 2058, 19866, 13, 51504, 51504, 400, 300, 311, 264, 787, 636, 281, 2105, 264, 2058, 19866, 281, 2058, 1429, 264, 2158, 13, 51698, 51698, 407, 291, 362, 300, 1389, 5629, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.12086529915149395, "compression_ratio": 1.7762557077625571, "no_caption_prob": 5.0936696425196715e-06}, {"id": 563, "seek": 223588, "start": 2235.88, "end": 2240.04, "text": " You could handle that case statement, but you don't have the encoder to encode that", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 564, "seek": 223588, "start": 2240.04, "end": 2241.78, "text": " custom type.", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 565, "seek": 223588, "start": 2241.78, "end": 2243.92, "text": " So it keeps you honest about keeping those things.", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 566, "seek": 223588, "start": 2243.92, "end": 2247.32, "text": " So that's that's the really interesting thing about that, isn't it?", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 567, "seek": 223588, "start": 2247.32, "end": 2248.32, "text": " Yeah.", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 568, "seek": 223588, "start": 2248.32, "end": 2252.76, "text": " And it's basically the other way around that the compiler will lead you like, oh, you forgot", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 569, "seek": 223588, "start": 2252.76, "end": 2257.32, "text": " to add this case, this branch in this case of expression.", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 570, "seek": 223588, "start": 2257.32, "end": 2260.32, "text": " So you add it and then, oh, well, I can't encode it.", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 571, "seek": 223588, "start": 2260.32, "end": 2262.88, "text": " OK, well, I need to add a variant in the arguments.", "tokens": [50364, 509, 727, 4813, 300, 1389, 5629, 11, 457, 291, 500, 380, 362, 264, 2058, 19866, 281, 2058, 1429, 300, 50572, 50572, 2375, 2010, 13, 50659, 50659, 407, 309, 5965, 291, 3245, 466, 5145, 729, 721, 13, 50766, 50766, 407, 300, 311, 300, 311, 264, 534, 1880, 551, 466, 300, 11, 1943, 380, 309, 30, 50936, 50936, 865, 13, 50986, 50986, 400, 309, 311, 1936, 264, 661, 636, 926, 300, 264, 31958, 486, 1477, 291, 411, 11, 1954, 11, 291, 5298, 51208, 51208, 281, 909, 341, 1389, 11, 341, 9819, 294, 341, 1389, 295, 6114, 13, 51436, 51436, 407, 291, 909, 309, 293, 550, 11, 1954, 11, 731, 11, 286, 393, 380, 2058, 1429, 309, 13, 51586, 51586, 2264, 11, 731, 11, 286, 643, 281, 909, 257, 17501, 294, 264, 12869, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18611988491482204, "compression_ratio": 1.7536764705882353, "no_caption_prob": 1.300586973229656e-05}, {"id": 572, "seek": 226288, "start": 2262.88, "end": 2266.2000000000003, "text": " Oh, well, you need to add a variant in the builder pattern.", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 573, "seek": 226288, "start": 2266.2000000000003, "end": 2267.2000000000003, "text": " Mm hmm.", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 574, "seek": 226288, "start": 2267.2000000000003, "end": 2268.2000000000003, "text": " And right.", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 575, "seek": 226288, "start": 2268.2000000000003, "end": 2269.2000000000003, "text": " You're done.", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 576, "seek": 226288, "start": 2269.2000000000003, "end": 2270.2000000000003, "text": " Right.", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 577, "seek": 226288, "start": 2270.2000000000003, "end": 2277.1600000000003, "text": " There's another example that that has been on my mind a lot, which is, you know, we've", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 578, "seek": 226288, "start": 2277.1600000000003, "end": 2282.56, "text": " talked on this show about, you know, in Elm pages, how there's this optimized decoder,", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 579, "seek": 226288, "start": 2282.56, "end": 2288.48, "text": " which will, you know, you you build up a JSON decoder using an API that's exactly like JSON", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 580, "seek": 226288, "start": 2288.48, "end": 2291.96, "text": " decode, you know, and then when you.", "tokens": [50364, 876, 11, 731, 11, 291, 643, 281, 909, 257, 17501, 294, 264, 27377, 5102, 13, 50530, 50530, 8266, 16478, 13, 50580, 50580, 400, 558, 13, 50630, 50630, 509, 434, 1096, 13, 50680, 50680, 1779, 13, 50730, 50730, 821, 311, 1071, 1365, 300, 300, 575, 668, 322, 452, 1575, 257, 688, 11, 597, 307, 11, 291, 458, 11, 321, 600, 51078, 51078, 2825, 322, 341, 855, 466, 11, 291, 458, 11, 294, 2699, 76, 7183, 11, 577, 456, 311, 341, 26941, 979, 19866, 11, 51348, 51348, 597, 486, 11, 291, 458, 11, 291, 291, 1322, 493, 257, 31828, 979, 19866, 1228, 364, 9362, 300, 311, 2293, 411, 31828, 51644, 51644, 979, 1429, 11, 291, 458, 11, 293, 550, 562, 291, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.18997041640743131, "compression_ratio": 1.6234817813765183, "no_caption_prob": 4.4687025365419686e-05}, {"id": 581, "seek": 229196, "start": 2291.96, "end": 2294.52, "text": " Go back to episode one, by the way.", "tokens": [50364, 1037, 646, 281, 3500, 472, 11, 538, 264, 636, 13, 50492, 50492, 1779, 13, 50542, 50542, 1079, 13, 50592, 50592, 400, 562, 291, 2105, 257, 2519, 294, 300, 26941, 979, 19866, 11, 309, 311, 2293, 411, 26440, 257, 2519, 50878, 50878, 294, 257, 31828, 979, 19866, 11, 3993, 300, 833, 264, 13376, 11, 562, 291, 1190, 428, 1322, 11, 309, 311, 11603, 597, 51218, 51218, 2519, 291, 434, 26440, 13, 51326, 51326, 400, 550, 309, 311, 767, 725, 260, 831, 3319, 300, 31828, 300, 1361, 294, 293, 1940, 484, 264, 7909, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10371754294947574, "compression_ratio": 1.6585365853658536, "no_caption_prob": 4.469182749744505e-05}, {"id": 582, "seek": 229196, "start": 2294.52, "end": 2295.52, "text": " Right.", "tokens": [50364, 1037, 646, 281, 3500, 472, 11, 538, 264, 636, 13, 50492, 50492, 1779, 13, 50542, 50542, 1079, 13, 50592, 50592, 400, 562, 291, 2105, 257, 2519, 294, 300, 26941, 979, 19866, 11, 309, 311, 2293, 411, 26440, 257, 2519, 50878, 50878, 294, 257, 31828, 979, 19866, 11, 3993, 300, 833, 264, 13376, 11, 562, 291, 1190, 428, 1322, 11, 309, 311, 11603, 597, 51218, 51218, 2519, 291, 434, 26440, 13, 51326, 51326, 400, 550, 309, 311, 767, 725, 260, 831, 3319, 300, 31828, 300, 1361, 294, 293, 1940, 484, 264, 7909, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10371754294947574, "compression_ratio": 1.6585365853658536, "no_caption_prob": 4.469182749744505e-05}, {"id": 583, "seek": 229196, "start": 2295.52, "end": 2296.52, "text": " Yes.", "tokens": [50364, 1037, 646, 281, 3500, 472, 11, 538, 264, 636, 13, 50492, 50492, 1779, 13, 50542, 50542, 1079, 13, 50592, 50592, 400, 562, 291, 2105, 257, 2519, 294, 300, 26941, 979, 19866, 11, 309, 311, 2293, 411, 26440, 257, 2519, 50878, 50878, 294, 257, 31828, 979, 19866, 11, 3993, 300, 833, 264, 13376, 11, 562, 291, 1190, 428, 1322, 11, 309, 311, 11603, 597, 51218, 51218, 2519, 291, 434, 26440, 13, 51326, 51326, 400, 550, 309, 311, 767, 725, 260, 831, 3319, 300, 31828, 300, 1361, 294, 293, 1940, 484, 264, 7909, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10371754294947574, "compression_ratio": 1.6585365853658536, "no_caption_prob": 4.469182749744505e-05}, {"id": 584, "seek": 229196, "start": 2296.52, "end": 2302.2400000000002, "text": " And when you access a field in that optimized decoder, it's exactly like accessing a field", "tokens": [50364, 1037, 646, 281, 3500, 472, 11, 538, 264, 636, 13, 50492, 50492, 1779, 13, 50542, 50542, 1079, 13, 50592, 50592, 400, 562, 291, 2105, 257, 2519, 294, 300, 26941, 979, 19866, 11, 309, 311, 2293, 411, 26440, 257, 2519, 50878, 50878, 294, 257, 31828, 979, 19866, 11, 3993, 300, 833, 264, 13376, 11, 562, 291, 1190, 428, 1322, 11, 309, 311, 11603, 597, 51218, 51218, 2519, 291, 434, 26440, 13, 51326, 51326, 400, 550, 309, 311, 767, 725, 260, 831, 3319, 300, 31828, 300, 1361, 294, 293, 1940, 484, 264, 7909, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10371754294947574, "compression_ratio": 1.6585365853658536, "no_caption_prob": 4.469182749744505e-05}, {"id": 585, "seek": 229196, "start": 2302.2400000000002, "end": 2309.04, "text": " in a JSON decoder, except that under the hood, when you run your build, it's tracking which", "tokens": [50364, 1037, 646, 281, 3500, 472, 11, 538, 264, 636, 13, 50492, 50492, 1779, 13, 50542, 50542, 1079, 13, 50592, 50592, 400, 562, 291, 2105, 257, 2519, 294, 300, 26941, 979, 19866, 11, 309, 311, 2293, 411, 26440, 257, 2519, 50878, 50878, 294, 257, 31828, 979, 19866, 11, 3993, 300, 833, 264, 13376, 11, 562, 291, 1190, 428, 1322, 11, 309, 311, 11603, 597, 51218, 51218, 2519, 291, 434, 26440, 13, 51326, 51326, 400, 550, 309, 311, 767, 725, 260, 831, 3319, 300, 31828, 300, 1361, 294, 293, 1940, 484, 264, 7909, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10371754294947574, "compression_ratio": 1.6585365853658536, "no_caption_prob": 4.469182749744505e-05}, {"id": 586, "seek": 229196, "start": 2309.04, "end": 2311.2, "text": " field you're accessing.", "tokens": [50364, 1037, 646, 281, 3500, 472, 11, 538, 264, 636, 13, 50492, 50492, 1779, 13, 50542, 50542, 1079, 13, 50592, 50592, 400, 562, 291, 2105, 257, 2519, 294, 300, 26941, 979, 19866, 11, 309, 311, 2293, 411, 26440, 257, 2519, 50878, 50878, 294, 257, 31828, 979, 19866, 11, 3993, 300, 833, 264, 13376, 11, 562, 291, 1190, 428, 1322, 11, 309, 311, 11603, 597, 51218, 51218, 2519, 291, 434, 26440, 13, 51326, 51326, 400, 550, 309, 311, 767, 725, 260, 831, 3319, 300, 31828, 300, 1361, 294, 293, 1940, 484, 264, 7909, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10371754294947574, "compression_ratio": 1.6585365853658536, "no_caption_prob": 4.469182749744505e-05}, {"id": 587, "seek": 229196, "start": 2311.2, "end": 2319.28, "text": " And then it's actually reserializing that JSON that came in and taking out the fields", "tokens": [50364, 1037, 646, 281, 3500, 472, 11, 538, 264, 636, 13, 50492, 50492, 1779, 13, 50542, 50542, 1079, 13, 50592, 50592, 400, 562, 291, 2105, 257, 2519, 294, 300, 26941, 979, 19866, 11, 309, 311, 2293, 411, 26440, 257, 2519, 50878, 50878, 294, 257, 31828, 979, 19866, 11, 3993, 300, 833, 264, 13376, 11, 562, 291, 1190, 428, 1322, 11, 309, 311, 11603, 597, 51218, 51218, 2519, 291, 434, 26440, 13, 51326, 51326, 400, 550, 309, 311, 767, 725, 260, 831, 3319, 300, 31828, 300, 1361, 294, 293, 1940, 484, 264, 7909, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10371754294947574, "compression_ratio": 1.6585365853658536, "no_caption_prob": 4.469182749744505e-05}, {"id": 588, "seek": 231928, "start": 2319.28, "end": 2326.1200000000003, "text": " that you didn't decode, because it can guarantee if you didn't, if you do, you know, decode", "tokens": [50364, 300, 291, 994, 380, 979, 1429, 11, 570, 309, 393, 10815, 498, 291, 994, 380, 11, 498, 291, 360, 11, 291, 458, 11, 979, 1429, 50706, 50706, 5893, 2519, 1783, 293, 979, 1429, 5893, 2519, 398, 11, 457, 291, 500, 380, 360, 979, 1429, 5893, 2519, 1176, 293, 456, 311, 257, 51040, 51040, 1176, 294, 456, 11, 550, 309, 393, 3507, 1314, 1176, 293, 264, 979, 19866, 486, 1190, 2293, 264, 912, 636, 570, 51250, 51250, 291, 994, 380, 2557, 300, 31828, 2158, 13, 51338, 51338, 407, 309, 2516, 264, 264, 8936, 31828, 2158, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.12068941135599155, "compression_ratio": 1.867403314917127, "no_caption_prob": 3.02413336612517e-05}, {"id": 589, "seek": 231928, "start": 2326.1200000000003, "end": 2332.8, "text": " dot field X and decode dot field Y, but you don't do decode dot field Z and there's a", "tokens": [50364, 300, 291, 994, 380, 979, 1429, 11, 570, 309, 393, 10815, 498, 291, 994, 380, 11, 498, 291, 360, 11, 291, 458, 11, 979, 1429, 50706, 50706, 5893, 2519, 1783, 293, 979, 1429, 5893, 2519, 398, 11, 457, 291, 500, 380, 360, 979, 1429, 5893, 2519, 1176, 293, 456, 311, 257, 51040, 51040, 1176, 294, 456, 11, 550, 309, 393, 3507, 1314, 1176, 293, 264, 979, 19866, 486, 1190, 2293, 264, 912, 636, 570, 51250, 51250, 291, 994, 380, 2557, 300, 31828, 2158, 13, 51338, 51338, 407, 309, 2516, 264, 264, 8936, 31828, 2158, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.12068941135599155, "compression_ratio": 1.867403314917127, "no_caption_prob": 3.02413336612517e-05}, {"id": 590, "seek": 231928, "start": 2332.8, "end": 2337.0, "text": " Z in there, then it can throw away Z and the decoder will run exactly the same way because", "tokens": [50364, 300, 291, 994, 380, 979, 1429, 11, 570, 309, 393, 10815, 498, 291, 994, 380, 11, 498, 291, 360, 11, 291, 458, 11, 979, 1429, 50706, 50706, 5893, 2519, 1783, 293, 979, 1429, 5893, 2519, 398, 11, 457, 291, 500, 380, 360, 979, 1429, 5893, 2519, 1176, 293, 456, 311, 257, 51040, 51040, 1176, 294, 456, 11, 550, 309, 393, 3507, 1314, 1176, 293, 264, 979, 19866, 486, 1190, 2293, 264, 912, 636, 570, 51250, 51250, 291, 994, 380, 2557, 300, 31828, 2158, 13, 51338, 51338, 407, 309, 2516, 264, 264, 8936, 31828, 2158, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.12068941135599155, "compression_ratio": 1.867403314917127, "no_caption_prob": 3.02413336612517e-05}, {"id": 591, "seek": 231928, "start": 2337.0, "end": 2338.76, "text": " you didn't touch that JSON value.", "tokens": [50364, 300, 291, 994, 380, 979, 1429, 11, 570, 309, 393, 10815, 498, 291, 994, 380, 11, 498, 291, 360, 11, 291, 458, 11, 979, 1429, 50706, 50706, 5893, 2519, 1783, 293, 979, 1429, 5893, 2519, 398, 11, 457, 291, 500, 380, 360, 979, 1429, 5893, 2519, 1176, 293, 456, 311, 257, 51040, 51040, 1176, 294, 456, 11, 550, 309, 393, 3507, 1314, 1176, 293, 264, 979, 19866, 486, 1190, 2293, 264, 912, 636, 570, 51250, 51250, 291, 994, 380, 2557, 300, 31828, 2158, 13, 51338, 51338, 407, 309, 2516, 264, 264, 8936, 31828, 2158, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.12068941135599155, "compression_ratio": 1.867403314917127, "no_caption_prob": 3.02413336612517e-05}, {"id": 592, "seek": 231928, "start": 2338.76, "end": 2342.6800000000003, "text": " So it takes the the raw JSON value.", "tokens": [50364, 300, 291, 994, 380, 979, 1429, 11, 570, 309, 393, 10815, 498, 291, 994, 380, 11, 498, 291, 360, 11, 291, 458, 11, 979, 1429, 50706, 50706, 5893, 2519, 1783, 293, 979, 1429, 5893, 2519, 398, 11, 457, 291, 500, 380, 360, 979, 1429, 5893, 2519, 1176, 293, 456, 311, 257, 51040, 51040, 1176, 294, 456, 11, 550, 309, 393, 3507, 1314, 1176, 293, 264, 979, 19866, 486, 1190, 2293, 264, 912, 636, 570, 51250, 51250, 291, 994, 380, 2557, 300, 31828, 2158, 13, 51338, 51338, 407, 309, 2516, 264, 264, 8936, 31828, 2158, 13, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.12068941135599155, "compression_ratio": 1.867403314917127, "no_caption_prob": 3.02413336612517e-05}, {"id": 593, "seek": 234268, "start": 2342.68, "end": 2349.3199999999997, "text": " It tracks which ones you touch by doing decode dot field and then it takes that JSON and", "tokens": [50364, 467, 10218, 597, 2306, 291, 2557, 538, 884, 979, 1429, 5893, 2519, 293, 550, 309, 2516, 300, 31828, 293, 50696, 50696, 550, 291, 393, 12828, 484, 439, 295, 264, 44383, 4190, 13, 50818, 50818, 823, 300, 13165, 406, 787, 337, 44383, 7909, 11, 457, 337, 44383, 43840, 294, 15778, 41011, 13, 51178, 51178, 400, 309, 393, 360, 300, 570, 498, 291, 360, 411, 979, 1429, 5893, 412, 1451, 11, 550, 291, 434, 787, 26440, 51570, 51570, 8186, 1451, 294, 341, 31828, 10225, 13, 51718, 51718, 467, 393, 18184, 484, 633, 2167, 661, 551, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10069717679704938, "compression_ratio": 1.6767241379310345, "no_caption_prob": 3.321309122839011e-05}, {"id": 594, "seek": 234268, "start": 2349.3199999999997, "end": 2351.7599999999998, "text": " then you can strip out all of the unused values.", "tokens": [50364, 467, 10218, 597, 2306, 291, 2557, 538, 884, 979, 1429, 5893, 2519, 293, 550, 309, 2516, 300, 31828, 293, 50696, 50696, 550, 291, 393, 12828, 484, 439, 295, 264, 44383, 4190, 13, 50818, 50818, 823, 300, 13165, 406, 787, 337, 44383, 7909, 11, 457, 337, 44383, 43840, 294, 15778, 41011, 13, 51178, 51178, 400, 309, 393, 360, 300, 570, 498, 291, 360, 411, 979, 1429, 5893, 412, 1451, 11, 550, 291, 434, 787, 26440, 51570, 51570, 8186, 1451, 294, 341, 31828, 10225, 13, 51718, 51718, 467, 393, 18184, 484, 633, 2167, 661, 551, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10069717679704938, "compression_ratio": 1.6767241379310345, "no_caption_prob": 3.321309122839011e-05}, {"id": 595, "seek": 234268, "start": 2351.7599999999998, "end": 2358.96, "text": " Now that applies not only for unused fields, but for unused indices in JavaScript arrays.", "tokens": [50364, 467, 10218, 597, 2306, 291, 2557, 538, 884, 979, 1429, 5893, 2519, 293, 550, 309, 2516, 300, 31828, 293, 50696, 50696, 550, 291, 393, 12828, 484, 439, 295, 264, 44383, 4190, 13, 50818, 50818, 823, 300, 13165, 406, 787, 337, 44383, 7909, 11, 457, 337, 44383, 43840, 294, 15778, 41011, 13, 51178, 51178, 400, 309, 393, 360, 300, 570, 498, 291, 360, 411, 979, 1429, 5893, 412, 1451, 11, 550, 291, 434, 787, 26440, 51570, 51570, 8186, 1451, 294, 341, 31828, 10225, 13, 51718, 51718, 467, 393, 18184, 484, 633, 2167, 661, 551, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10069717679704938, "compression_ratio": 1.6767241379310345, "no_caption_prob": 3.321309122839011e-05}, {"id": 596, "seek": 234268, "start": 2358.96, "end": 2366.7999999999997, "text": " And it can do that because if you do like decode dot at four, then you're only accessing", "tokens": [50364, 467, 10218, 597, 2306, 291, 2557, 538, 884, 979, 1429, 5893, 2519, 293, 550, 309, 2516, 300, 31828, 293, 50696, 50696, 550, 291, 393, 12828, 484, 439, 295, 264, 44383, 4190, 13, 50818, 50818, 823, 300, 13165, 406, 787, 337, 44383, 7909, 11, 457, 337, 44383, 43840, 294, 15778, 41011, 13, 51178, 51178, 400, 309, 393, 360, 300, 570, 498, 291, 360, 411, 979, 1429, 5893, 412, 1451, 11, 550, 291, 434, 787, 26440, 51570, 51570, 8186, 1451, 294, 341, 31828, 10225, 13, 51718, 51718, 467, 393, 18184, 484, 633, 2167, 661, 551, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10069717679704938, "compression_ratio": 1.6767241379310345, "no_caption_prob": 3.321309122839011e-05}, {"id": 597, "seek": 234268, "start": 2366.7999999999997, "end": 2369.7599999999998, "text": " index four in this JSON array.", "tokens": [50364, 467, 10218, 597, 2306, 291, 2557, 538, 884, 979, 1429, 5893, 2519, 293, 550, 309, 2516, 300, 31828, 293, 50696, 50696, 550, 291, 393, 12828, 484, 439, 295, 264, 44383, 4190, 13, 50818, 50818, 823, 300, 13165, 406, 787, 337, 44383, 7909, 11, 457, 337, 44383, 43840, 294, 15778, 41011, 13, 51178, 51178, 400, 309, 393, 360, 300, 570, 498, 291, 360, 411, 979, 1429, 5893, 412, 1451, 11, 550, 291, 434, 787, 26440, 51570, 51570, 8186, 1451, 294, 341, 31828, 10225, 13, 51718, 51718, 467, 393, 18184, 484, 633, 2167, 661, 551, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10069717679704938, "compression_ratio": 1.6767241379310345, "no_caption_prob": 3.321309122839011e-05}, {"id": 598, "seek": 234268, "start": 2369.7599999999998, "end": 2372.12, "text": " It can null out every single other thing.", "tokens": [50364, 467, 10218, 597, 2306, 291, 2557, 538, 884, 979, 1429, 5893, 2519, 293, 550, 309, 2516, 300, 31828, 293, 50696, 50696, 550, 291, 393, 12828, 484, 439, 295, 264, 44383, 4190, 13, 50818, 50818, 823, 300, 13165, 406, 787, 337, 44383, 7909, 11, 457, 337, 44383, 43840, 294, 15778, 41011, 13, 51178, 51178, 400, 309, 393, 360, 300, 570, 498, 291, 360, 411, 979, 1429, 5893, 412, 1451, 11, 550, 291, 434, 787, 26440, 51570, 51570, 8186, 1451, 294, 341, 31828, 10225, 13, 51718, 51718, 467, 393, 18184, 484, 633, 2167, 661, 551, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.10069717679704938, "compression_ratio": 1.6767241379310345, "no_caption_prob": 3.321309122839011e-05}, {"id": 599, "seek": 237212, "start": 2372.12, "end": 2378.64, "text": " So when you do, when you run it with a regular JSON decoder, it's guaranteed to access the", "tokens": [50364, 407, 562, 291, 360, 11, 562, 291, 1190, 309, 365, 257, 3890, 31828, 979, 19866, 11, 309, 311, 18031, 281, 2105, 264, 50690, 50690, 551, 300, 390, 412, 1451, 264, 1900, 912, 636, 570, 309, 311, 412, 264, 912, 8186, 11, 457, 291, 458, 50886, 50886, 1203, 1646, 13, 50952, 50952, 407, 300, 311, 767, 1194, 309, 576, 312, 257, 857, 15566, 13, 51140, 51140, 286, 1194, 309, 576, 4159, 264, 700, 1451, 4754, 293, 550, 1319, 264, 8186, 295, 264, 979, 19866, 13, 51688, 51688, 1042, 11, 286, 2041, 309, 727, 1310, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1636751330628687, "compression_ratio": 1.6486486486486487, "no_caption_prob": 8.80103289091494e-06}, {"id": 600, "seek": 237212, "start": 2378.64, "end": 2382.56, "text": " thing that was at four the exact same way because it's at the same index, but you know", "tokens": [50364, 407, 562, 291, 360, 11, 562, 291, 1190, 309, 365, 257, 3890, 31828, 979, 19866, 11, 309, 311, 18031, 281, 2105, 264, 50690, 50690, 551, 300, 390, 412, 1451, 264, 1900, 912, 636, 570, 309, 311, 412, 264, 912, 8186, 11, 457, 291, 458, 50886, 50886, 1203, 1646, 13, 50952, 50952, 407, 300, 311, 767, 1194, 309, 576, 312, 257, 857, 15566, 13, 51140, 51140, 286, 1194, 309, 576, 4159, 264, 700, 1451, 4754, 293, 550, 1319, 264, 8186, 295, 264, 979, 19866, 13, 51688, 51688, 1042, 11, 286, 2041, 309, 727, 1310, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1636751330628687, "compression_ratio": 1.6486486486486487, "no_caption_prob": 8.80103289091494e-06}, {"id": 601, "seek": 237212, "start": 2382.56, "end": 2383.88, "text": " everything else.", "tokens": [50364, 407, 562, 291, 360, 11, 562, 291, 1190, 309, 365, 257, 3890, 31828, 979, 19866, 11, 309, 311, 18031, 281, 2105, 264, 50690, 50690, 551, 300, 390, 412, 1451, 264, 1900, 912, 636, 570, 309, 311, 412, 264, 912, 8186, 11, 457, 291, 458, 50886, 50886, 1203, 1646, 13, 50952, 50952, 407, 300, 311, 767, 1194, 309, 576, 312, 257, 857, 15566, 13, 51140, 51140, 286, 1194, 309, 576, 4159, 264, 700, 1451, 4754, 293, 550, 1319, 264, 8186, 295, 264, 979, 19866, 13, 51688, 51688, 1042, 11, 286, 2041, 309, 727, 1310, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1636751330628687, "compression_ratio": 1.6486486486486487, "no_caption_prob": 8.80103289091494e-06}, {"id": 602, "seek": 237212, "start": 2383.88, "end": 2387.64, "text": " So that's actually thought it would be a bit cooler.", "tokens": [50364, 407, 562, 291, 360, 11, 562, 291, 1190, 309, 365, 257, 3890, 31828, 979, 19866, 11, 309, 311, 18031, 281, 2105, 264, 50690, 50690, 551, 300, 390, 412, 1451, 264, 1900, 912, 636, 570, 309, 311, 412, 264, 912, 8186, 11, 457, 291, 458, 50886, 50886, 1203, 1646, 13, 50952, 50952, 407, 300, 311, 767, 1194, 309, 576, 312, 257, 857, 15566, 13, 51140, 51140, 286, 1194, 309, 576, 4159, 264, 700, 1451, 4754, 293, 550, 1319, 264, 8186, 295, 264, 979, 19866, 13, 51688, 51688, 1042, 11, 286, 2041, 309, 727, 1310, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1636751330628687, "compression_ratio": 1.6486486486486487, "no_caption_prob": 8.80103289091494e-06}, {"id": 603, "seek": 237212, "start": 2387.64, "end": 2398.6, "text": " I thought it would remove the first four items and then change the index of the decoder.", "tokens": [50364, 407, 562, 291, 360, 11, 562, 291, 1190, 309, 365, 257, 3890, 31828, 979, 19866, 11, 309, 311, 18031, 281, 2105, 264, 50690, 50690, 551, 300, 390, 412, 1451, 264, 1900, 912, 636, 570, 309, 311, 412, 264, 912, 8186, 11, 457, 291, 458, 50886, 50886, 1203, 1646, 13, 50952, 50952, 407, 300, 311, 767, 1194, 309, 576, 312, 257, 857, 15566, 13, 51140, 51140, 286, 1194, 309, 576, 4159, 264, 700, 1451, 4754, 293, 550, 1319, 264, 8186, 295, 264, 979, 19866, 13, 51688, 51688, 1042, 11, 286, 2041, 309, 727, 1310, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1636751330628687, "compression_ratio": 1.6486486486486487, "no_caption_prob": 8.80103289091494e-06}, {"id": 604, "seek": 237212, "start": 2398.6, "end": 2401.56, "text": " Well, I guess it could maybe.", "tokens": [50364, 407, 562, 291, 360, 11, 562, 291, 1190, 309, 365, 257, 3890, 31828, 979, 19866, 11, 309, 311, 18031, 281, 2105, 264, 50690, 50690, 551, 300, 390, 412, 1451, 264, 1900, 912, 636, 570, 309, 311, 412, 264, 912, 8186, 11, 457, 291, 458, 50886, 50886, 1203, 1646, 13, 50952, 50952, 407, 300, 311, 767, 1194, 309, 576, 312, 257, 857, 15566, 13, 51140, 51140, 286, 1194, 309, 576, 4159, 264, 700, 1451, 4754, 293, 550, 1319, 264, 8186, 295, 264, 979, 19866, 13, 51688, 51688, 1042, 11, 286, 2041, 309, 727, 1310, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.1636751330628687, "compression_ratio": 1.6486486486486487, "no_caption_prob": 8.80103289091494e-06}, {"id": 605, "seek": 240156, "start": 2401.56, "end": 2404.7999999999997, "text": " You could, it would, that would become pretty tricky.", "tokens": [50364, 509, 727, 11, 309, 576, 11, 300, 576, 1813, 1238, 12414, 13, 50526, 50526, 509, 1116, 643, 281, 3531, 512, 19616, 1589, 294, 1668, 281, 360, 300, 13, 50781, 50781, 407, 411, 437, 286, 360, 294, 2699, 76, 7183, 307, 286, 1190, 341, 411, 562, 291, 360, 2699, 76, 7183, 1322, 11, 286, 747, 264, 51166, 51166, 979, 19866, 11, 1190, 309, 11, 309, 10218, 437, 1412, 307, 1143, 294, 264, 31828, 11, 10640, 729, 721, 382, 885, 21226, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.16691029789936113, "compression_ratio": 1.5357142857142858, "no_caption_prob": 2.977258372993674e-05}, {"id": 606, "seek": 240156, "start": 2404.7999999999997, "end": 2409.9, "text": " You'd need to store some meta information in order to do that.", "tokens": [50364, 509, 727, 11, 309, 576, 11, 300, 576, 1813, 1238, 12414, 13, 50526, 50526, 509, 1116, 643, 281, 3531, 512, 19616, 1589, 294, 1668, 281, 360, 300, 13, 50781, 50781, 407, 411, 437, 286, 360, 294, 2699, 76, 7183, 307, 286, 1190, 341, 411, 562, 291, 360, 2699, 76, 7183, 1322, 11, 286, 747, 264, 51166, 51166, 979, 19866, 11, 1190, 309, 11, 309, 10218, 437, 1412, 307, 1143, 294, 264, 31828, 11, 10640, 729, 721, 382, 885, 21226, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.16691029789936113, "compression_ratio": 1.5357142857142858, "no_caption_prob": 2.977258372993674e-05}, {"id": 607, "seek": 240156, "start": 2409.9, "end": 2417.6, "text": " So like what I do in Elm pages is I run this like when you do Elm pages build, I take the", "tokens": [50364, 509, 727, 11, 309, 576, 11, 300, 576, 1813, 1238, 12414, 13, 50526, 50526, 509, 1116, 643, 281, 3531, 512, 19616, 1589, 294, 1668, 281, 360, 300, 13, 50781, 50781, 407, 411, 437, 286, 360, 294, 2699, 76, 7183, 307, 286, 1190, 341, 411, 562, 291, 360, 2699, 76, 7183, 1322, 11, 286, 747, 264, 51166, 51166, 979, 19866, 11, 1190, 309, 11, 309, 10218, 437, 1412, 307, 1143, 294, 264, 31828, 11, 10640, 729, 721, 382, 885, 21226, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.16691029789936113, "compression_ratio": 1.5357142857142858, "no_caption_prob": 2.977258372993674e-05}, {"id": 608, "seek": 240156, "start": 2417.6, "end": 2426.04, "text": " decoder, run it, it tracks what data is used in the JSON, marks those things as being consumed", "tokens": [50364, 509, 727, 11, 309, 576, 11, 300, 576, 1813, 1238, 12414, 13, 50526, 50526, 509, 1116, 643, 281, 3531, 512, 19616, 1589, 294, 1668, 281, 360, 300, 13, 50781, 50781, 407, 411, 437, 286, 360, 294, 2699, 76, 7183, 307, 286, 1190, 341, 411, 562, 291, 360, 2699, 76, 7183, 1322, 11, 286, 747, 264, 51166, 51166, 979, 19866, 11, 1190, 309, 11, 309, 10218, 437, 1412, 307, 1143, 294, 264, 31828, 11, 10640, 729, 721, 382, 885, 21226, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.16691029789936113, "compression_ratio": 1.5357142857142858, "no_caption_prob": 2.977258372993674e-05}, {"id": 609, "seek": 242604, "start": 2426.04, "end": 2431.96, "text": " and then it creates a stripped down version of the JSON and then that gets stored as the", "tokens": [50364, 293, 550, 309, 7829, 257, 33221, 760, 3037, 295, 264, 31828, 293, 550, 300, 2170, 12187, 382, 264, 50660, 50660, 1412, 300, 311, 23673, 292, 562, 291, 767, 1190, 264, 37852, 13, 50802, 50802, 407, 586, 382, 257, 4195, 11, 562, 291, 352, 293, 291, 2045, 364, 2699, 76, 7183, 3144, 3028, 11, 550, 309, 311, 516, 51154, 51154, 281, 483, 300, 923, 2505, 31828, 1412, 11, 457, 586, 309, 311, 2614, 257, 17528, 2699, 76, 31828, 979, 19866, 322, 300, 13, 51464, 51464, 400, 370, 309, 393, 1190, 264, 979, 19866, 1553, 604, 2121, 10247, 9952, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.07997725056666954, "compression_ratio": 1.68, "no_caption_prob": 3.480690429569222e-05}, {"id": 610, "seek": 242604, "start": 2431.96, "end": 2434.8, "text": " data that's fetched when you actually run the webpage.", "tokens": [50364, 293, 550, 309, 7829, 257, 33221, 760, 3037, 295, 264, 31828, 293, 550, 300, 2170, 12187, 382, 264, 50660, 50660, 1412, 300, 311, 23673, 292, 562, 291, 767, 1190, 264, 37852, 13, 50802, 50802, 407, 586, 382, 257, 4195, 11, 562, 291, 352, 293, 291, 2045, 364, 2699, 76, 7183, 3144, 3028, 11, 550, 309, 311, 516, 51154, 51154, 281, 483, 300, 923, 2505, 31828, 1412, 11, 457, 586, 309, 311, 2614, 257, 17528, 2699, 76, 31828, 979, 19866, 322, 300, 13, 51464, 51464, 400, 370, 309, 393, 1190, 264, 979, 19866, 1553, 604, 2121, 10247, 9952, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.07997725056666954, "compression_ratio": 1.68, "no_caption_prob": 3.480690429569222e-05}, {"id": 611, "seek": 242604, "start": 2434.8, "end": 2441.84, "text": " So now as a user, when you go and you hit an Elm pages website page, then it's going", "tokens": [50364, 293, 550, 309, 7829, 257, 33221, 760, 3037, 295, 264, 31828, 293, 550, 300, 2170, 12187, 382, 264, 50660, 50660, 1412, 300, 311, 23673, 292, 562, 291, 767, 1190, 264, 37852, 13, 50802, 50802, 407, 586, 382, 257, 4195, 11, 562, 291, 352, 293, 291, 2045, 364, 2699, 76, 7183, 3144, 3028, 11, 550, 309, 311, 516, 51154, 51154, 281, 483, 300, 923, 2505, 31828, 1412, 11, 457, 586, 309, 311, 2614, 257, 17528, 2699, 76, 31828, 979, 19866, 322, 300, 13, 51464, 51464, 400, 370, 309, 393, 1190, 264, 979, 19866, 1553, 604, 2121, 10247, 9952, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.07997725056666954, "compression_ratio": 1.68, "no_caption_prob": 3.480690429569222e-05}, {"id": 612, "seek": 242604, "start": 2441.84, "end": 2448.04, "text": " to get that minify JSON data, but now it's running a vanilla Elm JSON decoder on that.", "tokens": [50364, 293, 550, 309, 7829, 257, 33221, 760, 3037, 295, 264, 31828, 293, 550, 300, 2170, 12187, 382, 264, 50660, 50660, 1412, 300, 311, 23673, 292, 562, 291, 767, 1190, 264, 37852, 13, 50802, 50802, 407, 586, 382, 257, 4195, 11, 562, 291, 352, 293, 291, 2045, 364, 2699, 76, 7183, 3144, 3028, 11, 550, 309, 311, 516, 51154, 51154, 281, 483, 300, 923, 2505, 31828, 1412, 11, 457, 586, 309, 311, 2614, 257, 17528, 2699, 76, 31828, 979, 19866, 322, 300, 13, 51464, 51464, 400, 370, 309, 393, 1190, 264, 979, 19866, 1553, 604, 2121, 10247, 9952, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.07997725056666954, "compression_ratio": 1.68, "no_caption_prob": 3.480690429569222e-05}, {"id": 613, "seek": 242604, "start": 2448.04, "end": 2451.66, "text": " And so it can run the decoder without any special fancy logic.", "tokens": [50364, 293, 550, 309, 7829, 257, 33221, 760, 3037, 295, 264, 31828, 293, 550, 300, 2170, 12187, 382, 264, 50660, 50660, 1412, 300, 311, 23673, 292, 562, 291, 767, 1190, 264, 37852, 13, 50802, 50802, 407, 586, 382, 257, 4195, 11, 562, 291, 352, 293, 291, 2045, 364, 2699, 76, 7183, 3144, 3028, 11, 550, 309, 311, 516, 51154, 51154, 281, 483, 300, 923, 2505, 31828, 1412, 11, 457, 586, 309, 311, 2614, 257, 17528, 2699, 76, 31828, 979, 19866, 322, 300, 13, 51464, 51464, 400, 370, 309, 393, 1190, 264, 979, 19866, 1553, 604, 2121, 10247, 9952, 13, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.07997725056666954, "compression_ratio": 1.68, "no_caption_prob": 3.480690429569222e-05}, {"id": 614, "seek": 245166, "start": 2451.66, "end": 2457.0, "text": " It just runs the decoder and it's guaranteed to decode in an equivalent way.", "tokens": [50364, 467, 445, 6676, 264, 979, 19866, 293, 309, 311, 18031, 281, 979, 1429, 294, 364, 10344, 636, 13, 50631, 50631, 1144, 291, 458, 577, 709, 291, 3155, 538, 264, 636, 11, 2673, 30, 50745, 50745, 876, 11, 286, 914, 11, 731, 11, 309, 5946, 11, 558, 30, 50863, 50863, 865, 13, 50913, 50913, 286, 914, 11, 498, 309, 311, 257, 7410, 497, 14497, 9362, 11, 286, 914, 11, 309, 311, 406, 29289, 412, 439, 281, 362, 8760, 15646, 292, 51229, 51229, 7909, 1348, 646, 294, 497, 14497, 21445, 420, 11, 291, 458, 11, 2331, 819, 7909, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.15028353020696356, "compression_ratio": 1.4796380090497738, "no_caption_prob": 2.6273824914824218e-05}, {"id": 615, "seek": 245166, "start": 2457.0, "end": 2459.2799999999997, "text": " Do you know how much you save by the way, usually?", "tokens": [50364, 467, 445, 6676, 264, 979, 19866, 293, 309, 311, 18031, 281, 979, 1429, 294, 364, 10344, 636, 13, 50631, 50631, 1144, 291, 458, 577, 709, 291, 3155, 538, 264, 636, 11, 2673, 30, 50745, 50745, 876, 11, 286, 914, 11, 731, 11, 309, 5946, 11, 558, 30, 50863, 50863, 865, 13, 50913, 50913, 286, 914, 11, 498, 309, 311, 257, 7410, 497, 14497, 9362, 11, 286, 914, 11, 309, 311, 406, 29289, 412, 439, 281, 362, 8760, 15646, 292, 51229, 51229, 7909, 1348, 646, 294, 497, 14497, 21445, 420, 11, 291, 458, 11, 2331, 819, 7909, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.15028353020696356, "compression_ratio": 1.4796380090497738, "no_caption_prob": 2.6273824914824218e-05}, {"id": 616, "seek": 245166, "start": 2459.2799999999997, "end": 2461.64, "text": " Oh, I mean, well, it depends, right?", "tokens": [50364, 467, 445, 6676, 264, 979, 19866, 293, 309, 311, 18031, 281, 979, 1429, 294, 364, 10344, 636, 13, 50631, 50631, 1144, 291, 458, 577, 709, 291, 3155, 538, 264, 636, 11, 2673, 30, 50745, 50745, 876, 11, 286, 914, 11, 731, 11, 309, 5946, 11, 558, 30, 50863, 50863, 865, 13, 50913, 50913, 286, 914, 11, 498, 309, 311, 257, 7410, 497, 14497, 9362, 11, 286, 914, 11, 309, 311, 406, 29289, 412, 439, 281, 362, 8760, 15646, 292, 51229, 51229, 7909, 1348, 646, 294, 497, 14497, 21445, 420, 11, 291, 458, 11, 2331, 819, 7909, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.15028353020696356, "compression_ratio": 1.4796380090497738, "no_caption_prob": 2.6273824914824218e-05}, {"id": 617, "seek": 245166, "start": 2461.64, "end": 2462.64, "text": " Yeah.", "tokens": [50364, 467, 445, 6676, 264, 979, 19866, 293, 309, 311, 18031, 281, 979, 1429, 294, 364, 10344, 636, 13, 50631, 50631, 1144, 291, 458, 577, 709, 291, 3155, 538, 264, 636, 11, 2673, 30, 50745, 50745, 876, 11, 286, 914, 11, 731, 11, 309, 5946, 11, 558, 30, 50863, 50863, 865, 13, 50913, 50913, 286, 914, 11, 498, 309, 311, 257, 7410, 497, 14497, 9362, 11, 286, 914, 11, 309, 311, 406, 29289, 412, 439, 281, 362, 8760, 15646, 292, 51229, 51229, 7909, 1348, 646, 294, 497, 14497, 21445, 420, 11, 291, 458, 11, 2331, 819, 7909, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.15028353020696356, "compression_ratio": 1.4796380090497738, "no_caption_prob": 2.6273824914824218e-05}, {"id": 618, "seek": 245166, "start": 2462.64, "end": 2468.96, "text": " I mean, if it's a giant REST API, I mean, it's not uncommon at all to have deeply nested", "tokens": [50364, 467, 445, 6676, 264, 979, 19866, 293, 309, 311, 18031, 281, 979, 1429, 294, 364, 10344, 636, 13, 50631, 50631, 1144, 291, 458, 577, 709, 291, 3155, 538, 264, 636, 11, 2673, 30, 50745, 50745, 876, 11, 286, 914, 11, 731, 11, 309, 5946, 11, 558, 30, 50863, 50863, 865, 13, 50913, 50913, 286, 914, 11, 498, 309, 311, 257, 7410, 497, 14497, 9362, 11, 286, 914, 11, 309, 311, 406, 29289, 412, 439, 281, 362, 8760, 15646, 292, 51229, 51229, 7909, 1348, 646, 294, 497, 14497, 21445, 420, 11, 291, 458, 11, 2331, 819, 7909, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.15028353020696356, "compression_ratio": 1.4796380090497738, "no_caption_prob": 2.6273824914824218e-05}, {"id": 619, "seek": 245166, "start": 2468.96, "end": 2475.18, "text": " fields coming back in REST APIs or, you know, 200 different fields.", "tokens": [50364, 467, 445, 6676, 264, 979, 19866, 293, 309, 311, 18031, 281, 979, 1429, 294, 364, 10344, 636, 13, 50631, 50631, 1144, 291, 458, 577, 709, 291, 3155, 538, 264, 636, 11, 2673, 30, 50745, 50745, 876, 11, 286, 914, 11, 731, 11, 309, 5946, 11, 558, 30, 50863, 50863, 865, 13, 50913, 50913, 286, 914, 11, 498, 309, 311, 257, 7410, 497, 14497, 9362, 11, 286, 914, 11, 309, 311, 406, 29289, 412, 439, 281, 362, 8760, 15646, 292, 51229, 51229, 7909, 1348, 646, 294, 497, 14497, 21445, 420, 11, 291, 458, 11, 2331, 819, 7909, 13, 51540, 51540], "temperature": 0.0, "avg_logprob": -0.15028353020696356, "compression_ratio": 1.4796380090497738, "no_caption_prob": 2.6273824914824218e-05}, {"id": 620, "seek": 247518, "start": 2475.18, "end": 2482.68, "text": " So like I think it would be, I don't think I can claim to accurately give like the median", "tokens": [50364, 407, 411, 286, 519, 309, 576, 312, 11, 286, 500, 380, 519, 286, 393, 3932, 281, 20095, 976, 411, 264, 26779, 50739, 50739, 3613, 420, 746, 411, 300, 11, 457, 286, 486, 584, 11, 3811, 300, 291, 434, 1242, 732, 7909, 294, 51091, 51091, 257, 497, 14497, 4134, 293, 456, 366, 257, 3262, 7909, 293, 729, 7909, 11, 512, 295, 729, 7909, 366, 11, 51415, 51415, 291, 458, 11, 41011, 293, 15646, 292, 6565, 293, 1507, 13, 51603, 51603, 7061, 385, 311, 13, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.18521098432869748, "compression_ratio": 1.6127450980392157, "no_caption_prob": 5.225024142418988e-05}, {"id": 621, "seek": 247518, "start": 2482.68, "end": 2489.72, "text": " range or something like that, but I will say, imagine that you're getting two fields in", "tokens": [50364, 407, 411, 286, 519, 309, 576, 312, 11, 286, 500, 380, 519, 286, 393, 3932, 281, 20095, 976, 411, 264, 26779, 50739, 50739, 3613, 420, 746, 411, 300, 11, 457, 286, 486, 584, 11, 3811, 300, 291, 434, 1242, 732, 7909, 294, 51091, 51091, 257, 497, 14497, 4134, 293, 456, 366, 257, 3262, 7909, 293, 729, 7909, 11, 512, 295, 729, 7909, 366, 11, 51415, 51415, 291, 458, 11, 41011, 293, 15646, 292, 6565, 293, 1507, 13, 51603, 51603, 7061, 385, 311, 13, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.18521098432869748, "compression_ratio": 1.6127450980392157, "no_caption_prob": 5.225024142418988e-05}, {"id": 622, "seek": 247518, "start": 2489.72, "end": 2496.2, "text": " a REST response and there are a hundred fields and those fields, some of those fields are,", "tokens": [50364, 407, 411, 286, 519, 309, 576, 312, 11, 286, 500, 380, 519, 286, 393, 3932, 281, 20095, 976, 411, 264, 26779, 50739, 50739, 3613, 420, 746, 411, 300, 11, 457, 286, 486, 584, 11, 3811, 300, 291, 434, 1242, 732, 7909, 294, 51091, 51091, 257, 497, 14497, 4134, 293, 456, 366, 257, 3262, 7909, 293, 729, 7909, 11, 512, 295, 729, 7909, 366, 11, 51415, 51415, 291, 458, 11, 41011, 293, 15646, 292, 6565, 293, 1507, 13, 51603, 51603, 7061, 385, 311, 13, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.18521098432869748, "compression_ratio": 1.6127450980392157, "no_caption_prob": 5.225024142418988e-05}, {"id": 623, "seek": 247518, "start": 2496.2, "end": 2499.96, "text": " you know, arrays and nested objects and stuff.", "tokens": [50364, 407, 411, 286, 519, 309, 576, 312, 11, 286, 500, 380, 519, 286, 393, 3932, 281, 20095, 976, 411, 264, 26779, 50739, 50739, 3613, 420, 746, 411, 300, 11, 457, 286, 486, 584, 11, 3811, 300, 291, 434, 1242, 732, 7909, 294, 51091, 51091, 257, 497, 14497, 4134, 293, 456, 366, 257, 3262, 7909, 293, 729, 7909, 11, 512, 295, 729, 7909, 366, 11, 51415, 51415, 291, 458, 11, 41011, 293, 15646, 292, 6565, 293, 1507, 13, 51603, 51603, 7061, 385, 311, 13, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.18521098432869748, "compression_ratio": 1.6127450980392157, "no_caption_prob": 5.225024142418988e-05}, {"id": 624, "seek": 247518, "start": 2499.96, "end": 2501.12, "text": " January me's.", "tokens": [50364, 407, 411, 286, 519, 309, 576, 312, 11, 286, 500, 380, 519, 286, 393, 3932, 281, 20095, 976, 411, 264, 26779, 50739, 50739, 3613, 420, 746, 411, 300, 11, 457, 286, 486, 584, 11, 3811, 300, 291, 434, 1242, 732, 7909, 294, 51091, 51091, 257, 497, 14497, 4134, 293, 456, 366, 257, 3262, 7909, 293, 729, 7909, 11, 512, 295, 729, 7909, 366, 11, 51415, 51415, 291, 458, 11, 41011, 293, 15646, 292, 6565, 293, 1507, 13, 51603, 51603, 7061, 385, 311, 13, 51661, 51661], "temperature": 0.0, "avg_logprob": -0.18521098432869748, "compression_ratio": 1.6127450980392157, "no_caption_prob": 5.225024142418988e-05}, {"id": 625, "seek": 250112, "start": 2501.12, "end": 2505.96, "text": " Yeah, you can, you could sort of do the mental math and imagine that you could easily have,", "tokens": [50364, 865, 11, 291, 393, 11, 291, 727, 1333, 295, 360, 264, 4973, 5221, 293, 3811, 300, 291, 727, 3612, 362, 11, 50606, 50606, 291, 458, 11, 568, 4, 295, 264, 2302, 1412, 4134, 300, 291, 434, 26440, 13, 50854, 50854, 467, 311, 406, 11, 309, 311, 406, 1270, 257, 5985, 295, 264, 12938, 13, 50977, 50977, 407, 309, 588, 709, 5946, 322, 264, 9362, 13, 51146, 51146, 583, 370, 300, 311, 1071, 1880, 3861, 295, 300, 1558, 295, 1228, 341, 1589, 300, 51434, 51434, 291, 1322, 493, 13, 51509, 51509, 407, 291, 434, 11, 291, 434, 979, 8616, 11, 457, 291, 434, 611, 2390, 493, 1589, 382, 291, 979, 1429, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10290341584578805, "compression_ratio": 1.7489878542510122, "no_caption_prob": 6.814462540205568e-05}, {"id": 626, "seek": 250112, "start": 2505.96, "end": 2510.92, "text": " you know, 2% of the entire data response that you're accessing.", "tokens": [50364, 865, 11, 291, 393, 11, 291, 727, 1333, 295, 360, 264, 4973, 5221, 293, 3811, 300, 291, 727, 3612, 362, 11, 50606, 50606, 291, 458, 11, 568, 4, 295, 264, 2302, 1412, 4134, 300, 291, 434, 26440, 13, 50854, 50854, 467, 311, 406, 11, 309, 311, 406, 1270, 257, 5985, 295, 264, 12938, 13, 50977, 50977, 407, 309, 588, 709, 5946, 322, 264, 9362, 13, 51146, 51146, 583, 370, 300, 311, 1071, 1880, 3861, 295, 300, 1558, 295, 1228, 341, 1589, 300, 51434, 51434, 291, 1322, 493, 13, 51509, 51509, 407, 291, 434, 11, 291, 434, 979, 8616, 11, 457, 291, 434, 611, 2390, 493, 1589, 382, 291, 979, 1429, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10290341584578805, "compression_ratio": 1.7489878542510122, "no_caption_prob": 6.814462540205568e-05}, {"id": 627, "seek": 250112, "start": 2510.92, "end": 2513.38, "text": " It's not, it's not such a stretch of the imagination.", "tokens": [50364, 865, 11, 291, 393, 11, 291, 727, 1333, 295, 360, 264, 4973, 5221, 293, 3811, 300, 291, 727, 3612, 362, 11, 50606, 50606, 291, 458, 11, 568, 4, 295, 264, 2302, 1412, 4134, 300, 291, 434, 26440, 13, 50854, 50854, 467, 311, 406, 11, 309, 311, 406, 1270, 257, 5985, 295, 264, 12938, 13, 50977, 50977, 407, 309, 588, 709, 5946, 322, 264, 9362, 13, 51146, 51146, 583, 370, 300, 311, 1071, 1880, 3861, 295, 300, 1558, 295, 1228, 341, 1589, 300, 51434, 51434, 291, 1322, 493, 13, 51509, 51509, 407, 291, 434, 11, 291, 434, 979, 8616, 11, 457, 291, 434, 611, 2390, 493, 1589, 382, 291, 979, 1429, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10290341584578805, "compression_ratio": 1.7489878542510122, "no_caption_prob": 6.814462540205568e-05}, {"id": 628, "seek": 250112, "start": 2513.38, "end": 2516.7599999999998, "text": " So it very much depends on the API.", "tokens": [50364, 865, 11, 291, 393, 11, 291, 727, 1333, 295, 360, 264, 4973, 5221, 293, 3811, 300, 291, 727, 3612, 362, 11, 50606, 50606, 291, 458, 11, 568, 4, 295, 264, 2302, 1412, 4134, 300, 291, 434, 26440, 13, 50854, 50854, 467, 311, 406, 11, 309, 311, 406, 1270, 257, 5985, 295, 264, 12938, 13, 50977, 50977, 407, 309, 588, 709, 5946, 322, 264, 9362, 13, 51146, 51146, 583, 370, 300, 311, 1071, 1880, 3861, 295, 300, 1558, 295, 1228, 341, 1589, 300, 51434, 51434, 291, 1322, 493, 13, 51509, 51509, 407, 291, 434, 11, 291, 434, 979, 8616, 11, 457, 291, 434, 611, 2390, 493, 1589, 382, 291, 979, 1429, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10290341584578805, "compression_ratio": 1.7489878542510122, "no_caption_prob": 6.814462540205568e-05}, {"id": 629, "seek": 250112, "start": 2516.7599999999998, "end": 2522.52, "text": " But so that's another interesting application of that idea of using this information that", "tokens": [50364, 865, 11, 291, 393, 11, 291, 727, 1333, 295, 360, 264, 4973, 5221, 293, 3811, 300, 291, 727, 3612, 362, 11, 50606, 50606, 291, 458, 11, 568, 4, 295, 264, 2302, 1412, 4134, 300, 291, 434, 26440, 13, 50854, 50854, 467, 311, 406, 11, 309, 311, 406, 1270, 257, 5985, 295, 264, 12938, 13, 50977, 50977, 407, 309, 588, 709, 5946, 322, 264, 9362, 13, 51146, 51146, 583, 370, 300, 311, 1071, 1880, 3861, 295, 300, 1558, 295, 1228, 341, 1589, 300, 51434, 51434, 291, 1322, 493, 13, 51509, 51509, 407, 291, 434, 11, 291, 434, 979, 8616, 11, 457, 291, 434, 611, 2390, 493, 1589, 382, 291, 979, 1429, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10290341584578805, "compression_ratio": 1.7489878542510122, "no_caption_prob": 6.814462540205568e-05}, {"id": 630, "seek": 250112, "start": 2522.52, "end": 2524.02, "text": " you build up.", "tokens": [50364, 865, 11, 291, 393, 11, 291, 727, 1333, 295, 360, 264, 4973, 5221, 293, 3811, 300, 291, 727, 3612, 362, 11, 50606, 50606, 291, 458, 11, 568, 4, 295, 264, 2302, 1412, 4134, 300, 291, 434, 26440, 13, 50854, 50854, 467, 311, 406, 11, 309, 311, 406, 1270, 257, 5985, 295, 264, 12938, 13, 50977, 50977, 407, 309, 588, 709, 5946, 322, 264, 9362, 13, 51146, 51146, 583, 370, 300, 311, 1071, 1880, 3861, 295, 300, 1558, 295, 1228, 341, 1589, 300, 51434, 51434, 291, 1322, 493, 13, 51509, 51509, 407, 291, 434, 11, 291, 434, 979, 8616, 11, 457, 291, 434, 611, 2390, 493, 1589, 382, 291, 979, 1429, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10290341584578805, "compression_ratio": 1.7489878542510122, "no_caption_prob": 6.814462540205568e-05}, {"id": 631, "seek": 250112, "start": 2524.02, "end": 2529.72, "text": " So you're, you're decoding, but you're also building up information as you decode.", "tokens": [50364, 865, 11, 291, 393, 11, 291, 727, 1333, 295, 360, 264, 4973, 5221, 293, 3811, 300, 291, 727, 3612, 362, 11, 50606, 50606, 291, 458, 11, 568, 4, 295, 264, 2302, 1412, 4134, 300, 291, 434, 26440, 13, 50854, 50854, 467, 311, 406, 11, 309, 311, 406, 1270, 257, 5985, 295, 264, 12938, 13, 50977, 50977, 407, 309, 588, 709, 5946, 322, 264, 9362, 13, 51146, 51146, 583, 370, 300, 311, 1071, 1880, 3861, 295, 300, 1558, 295, 1228, 341, 1589, 300, 51434, 51434, 291, 1322, 493, 13, 51509, 51509, 407, 291, 434, 11, 291, 434, 979, 8616, 11, 457, 291, 434, 611, 2390, 493, 1589, 382, 291, 979, 1429, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10290341584578805, "compression_ratio": 1.7489878542510122, "no_caption_prob": 6.814462540205568e-05}, {"id": 632, "seek": 252972, "start": 2529.72, "end": 2537.8399999999997, "text": " And actually, you know, Ilias originally built this library, JSON decode exploration where", "tokens": [50364, 400, 767, 11, 291, 458, 11, 286, 2081, 296, 7993, 3094, 341, 6405, 11, 31828, 979, 1429, 16197, 689, 50770, 50770, 437, 309, 775, 307, 309, 11, 291, 393, 1190, 257, 31828, 979, 19866, 293, 291, 393, 976, 257, 9164, 498, 456, 366, 44383, 51074, 51074, 31828, 7909, 13, 51156, 51156, 663, 390, 689, 286, 632, 264, 1558, 13, 51231, 51231, 407, 286, 2351, 796, 472, 786, 11, 291, 458, 11, 360, 291, 519, 291, 1116, 312, 1075, 281, 764, 341, 281, 12828, 484, 44383, 51460, 51460, 31828, 4190, 30, 51510, 51510, 400, 550, 1951, 411, 257, 786, 415, 632, 3094, 257, 1364, 19475, 11, 597, 286, 519, 4590, 493, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.0952262376484118, "compression_ratio": 1.6456692913385826, "no_caption_prob": 2.2473310309578665e-05}, {"id": 633, "seek": 252972, "start": 2537.8399999999997, "end": 2543.9199999999996, "text": " what it does is it, you can run a JSON decoder and you can give a warning if there are unused", "tokens": [50364, 400, 767, 11, 291, 458, 11, 286, 2081, 296, 7993, 3094, 341, 6405, 11, 31828, 979, 1429, 16197, 689, 50770, 50770, 437, 309, 775, 307, 309, 11, 291, 393, 1190, 257, 31828, 979, 19866, 293, 291, 393, 976, 257, 9164, 498, 456, 366, 44383, 51074, 51074, 31828, 7909, 13, 51156, 51156, 663, 390, 689, 286, 632, 264, 1558, 13, 51231, 51231, 407, 286, 2351, 796, 472, 786, 11, 291, 458, 11, 360, 291, 519, 291, 1116, 312, 1075, 281, 764, 341, 281, 12828, 484, 44383, 51460, 51460, 31828, 4190, 30, 51510, 51510, 400, 550, 1951, 411, 257, 786, 415, 632, 3094, 257, 1364, 19475, 11, 597, 286, 519, 4590, 493, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.0952262376484118, "compression_ratio": 1.6456692913385826, "no_caption_prob": 2.2473310309578665e-05}, {"id": 634, "seek": 252972, "start": 2543.9199999999996, "end": 2545.56, "text": " JSON fields.", "tokens": [50364, 400, 767, 11, 291, 458, 11, 286, 2081, 296, 7993, 3094, 341, 6405, 11, 31828, 979, 1429, 16197, 689, 50770, 50770, 437, 309, 775, 307, 309, 11, 291, 393, 1190, 257, 31828, 979, 19866, 293, 291, 393, 976, 257, 9164, 498, 456, 366, 44383, 51074, 51074, 31828, 7909, 13, 51156, 51156, 663, 390, 689, 286, 632, 264, 1558, 13, 51231, 51231, 407, 286, 2351, 796, 472, 786, 11, 291, 458, 11, 360, 291, 519, 291, 1116, 312, 1075, 281, 764, 341, 281, 12828, 484, 44383, 51460, 51460, 31828, 4190, 30, 51510, 51510, 400, 550, 1951, 411, 257, 786, 415, 632, 3094, 257, 1364, 19475, 11, 597, 286, 519, 4590, 493, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.0952262376484118, "compression_ratio": 1.6456692913385826, "no_caption_prob": 2.2473310309578665e-05}, {"id": 635, "seek": 252972, "start": 2545.56, "end": 2547.06, "text": " That was where I had the idea.", "tokens": [50364, 400, 767, 11, 291, 458, 11, 286, 2081, 296, 7993, 3094, 341, 6405, 11, 31828, 979, 1429, 16197, 689, 50770, 50770, 437, 309, 775, 307, 309, 11, 291, 393, 1190, 257, 31828, 979, 19866, 293, 291, 393, 976, 257, 9164, 498, 456, 366, 44383, 51074, 51074, 31828, 7909, 13, 51156, 51156, 663, 390, 689, 286, 632, 264, 1558, 13, 51231, 51231, 407, 286, 2351, 796, 472, 786, 11, 291, 458, 11, 360, 291, 519, 291, 1116, 312, 1075, 281, 764, 341, 281, 12828, 484, 44383, 51460, 51460, 31828, 4190, 30, 51510, 51510, 400, 550, 1951, 411, 257, 786, 415, 632, 3094, 257, 1364, 19475, 11, 597, 286, 519, 4590, 493, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.0952262376484118, "compression_ratio": 1.6456692913385826, "no_caption_prob": 2.2473310309578665e-05}, {"id": 636, "seek": 252972, "start": 2547.06, "end": 2551.64, "text": " So I asked him one day, you know, do you think you'd be able to use this to strip out unused", "tokens": [50364, 400, 767, 11, 291, 458, 11, 286, 2081, 296, 7993, 3094, 341, 6405, 11, 31828, 979, 1429, 16197, 689, 50770, 50770, 437, 309, 775, 307, 309, 11, 291, 393, 1190, 257, 31828, 979, 19866, 293, 291, 393, 976, 257, 9164, 498, 456, 366, 44383, 51074, 51074, 31828, 7909, 13, 51156, 51156, 663, 390, 689, 286, 632, 264, 1558, 13, 51231, 51231, 407, 286, 2351, 796, 472, 786, 11, 291, 458, 11, 360, 291, 519, 291, 1116, 312, 1075, 281, 764, 341, 281, 12828, 484, 44383, 51460, 51460, 31828, 4190, 30, 51510, 51510, 400, 550, 1951, 411, 257, 786, 415, 632, 3094, 257, 1364, 19475, 11, 597, 286, 519, 4590, 493, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.0952262376484118, "compression_ratio": 1.6456692913385826, "no_caption_prob": 2.2473310309578665e-05}, {"id": 637, "seek": 252972, "start": 2551.64, "end": 2552.64, "text": " JSON values?", "tokens": [50364, 400, 767, 11, 291, 458, 11, 286, 2081, 296, 7993, 3094, 341, 6405, 11, 31828, 979, 1429, 16197, 689, 50770, 50770, 437, 309, 775, 307, 309, 11, 291, 393, 1190, 257, 31828, 979, 19866, 293, 291, 393, 976, 257, 9164, 498, 456, 366, 44383, 51074, 51074, 31828, 7909, 13, 51156, 51156, 663, 390, 689, 286, 632, 264, 1558, 13, 51231, 51231, 407, 286, 2351, 796, 472, 786, 11, 291, 458, 11, 360, 291, 519, 291, 1116, 312, 1075, 281, 764, 341, 281, 12828, 484, 44383, 51460, 51460, 31828, 4190, 30, 51510, 51510, 400, 550, 1951, 411, 257, 786, 415, 632, 3094, 257, 1364, 19475, 11, 597, 286, 519, 4590, 493, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.0952262376484118, "compression_ratio": 1.6456692913385826, "no_caption_prob": 2.2473310309578665e-05}, {"id": 638, "seek": 252972, "start": 2552.64, "end": 2558.1, "text": " And then within like a day he had built a working prototype, which I think ended up", "tokens": [50364, 400, 767, 11, 291, 458, 11, 286, 2081, 296, 7993, 3094, 341, 6405, 11, 31828, 979, 1429, 16197, 689, 50770, 50770, 437, 309, 775, 307, 309, 11, 291, 393, 1190, 257, 31828, 979, 19866, 293, 291, 393, 976, 257, 9164, 498, 456, 366, 44383, 51074, 51074, 31828, 7909, 13, 51156, 51156, 663, 390, 689, 286, 632, 264, 1558, 13, 51231, 51231, 407, 286, 2351, 796, 472, 786, 11, 291, 458, 11, 360, 291, 519, 291, 1116, 312, 1075, 281, 764, 341, 281, 12828, 484, 44383, 51460, 51460, 31828, 4190, 30, 51510, 51510, 400, 550, 1951, 411, 257, 786, 415, 632, 3094, 257, 1364, 19475, 11, 597, 286, 519, 4590, 493, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.0952262376484118, "compression_ratio": 1.6456692913385826, "no_caption_prob": 2.2473310309578665e-05}, {"id": 639, "seek": 255810, "start": 2558.1, "end": 2562.72, "text": " pretty much being the release with a couple of like updated docs and test cases after", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 640, "seek": 255810, "start": 2562.72, "end": 2563.72, "text": " that.", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 641, "seek": 255810, "start": 2563.72, "end": 2568.48, "text": " But so the sky's the limit with what you can do with this concept of, you know, building", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 642, "seek": 255810, "start": 2568.48, "end": 2572.72, "text": " up multiple pieces of information at the same time in a pipeline.", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 643, "seek": 255810, "start": 2572.72, "end": 2576.48, "text": " I'm wondering whether you can do something like that for parsers.", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 644, "seek": 255810, "start": 2576.48, "end": 2583.3399999999997, "text": " Like if you try to parse something like ISO 8601.", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 645, "seek": 255810, "start": 2583.3399999999997, "end": 2584.3399999999997, "text": " Your favorite.", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 646, "seek": 255810, "start": 2584.3399999999997, "end": 2585.3399999999997, "text": " That's it.", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 647, "seek": 255810, "start": 2585.3399999999997, "end": 2586.3399999999997, "text": " Yeah.", "tokens": [50364, 1238, 709, 885, 264, 4374, 365, 257, 1916, 295, 411, 10588, 45623, 293, 1500, 3331, 934, 50595, 50595, 300, 13, 50645, 50645, 583, 370, 264, 5443, 311, 264, 4948, 365, 437, 291, 393, 360, 365, 341, 3410, 295, 11, 291, 458, 11, 2390, 50883, 50883, 493, 3866, 3755, 295, 1589, 412, 264, 912, 565, 294, 257, 15517, 13, 51095, 51095, 286, 478, 6359, 1968, 291, 393, 360, 746, 411, 300, 337, 21156, 433, 13, 51283, 51283, 1743, 498, 291, 853, 281, 48377, 746, 411, 25042, 1649, 4550, 16, 13, 51626, 51626, 2260, 2954, 13, 51676, 51676, 663, 311, 309, 13, 51726, 51726, 865, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.11993548605177137, "compression_ratio": 1.5823293172690762, "no_caption_prob": 1.428530777047854e-05}, {"id": 648, "seek": 258634, "start": 2586.34, "end": 2590.76, "text": " I'm sorry, it is 8602.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 649, "seek": 258634, "start": 2590.76, "end": 2591.76, "text": " Brain dump here.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 650, "seek": 258634, "start": 2591.76, "end": 2593.52, "text": " Brain freeze at the last moment.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 651, "seek": 258634, "start": 2593.52, "end": 2597.1200000000003, "text": " So yeah, if you parse ISO 8601.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 652, "seek": 258634, "start": 2597.1200000000003, "end": 2600.96, "text": " Which is a date format for people, for new listeners.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 653, "seek": 258634, "start": 2600.96, "end": 2603.92, "text": " Because surely you'll know it otherwise.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 654, "seek": 258634, "start": 2603.92, "end": 2604.92, "text": " Yeah.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 655, "seek": 258634, "start": 2604.92, "end": 2612.0, "text": " So yeah, you parse it, but then you might also just want to rewrite it as a string.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 656, "seek": 258634, "start": 2612.0, "end": 2613.0, "text": " Right.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 657, "seek": 258634, "start": 2613.0, "end": 2614.0, "text": " Yeah.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 658, "seek": 258634, "start": 2614.0, "end": 2615.0, "text": " Yeah.", "tokens": [50364, 286, 478, 2597, 11, 309, 307, 1649, 4550, 17, 13, 50585, 50585, 29783, 11430, 510, 13, 50635, 50635, 29783, 15959, 412, 264, 1036, 1623, 13, 50723, 50723, 407, 1338, 11, 498, 291, 48377, 25042, 1649, 4550, 16, 13, 50903, 50903, 3013, 307, 257, 4002, 7877, 337, 561, 11, 337, 777, 23274, 13, 51095, 51095, 1436, 11468, 291, 603, 458, 309, 5911, 13, 51243, 51243, 865, 13, 51293, 51293, 407, 1338, 11, 291, 48377, 309, 11, 457, 550, 291, 1062, 611, 445, 528, 281, 28132, 309, 382, 257, 6798, 13, 51647, 51647, 1779, 13, 51697, 51697, 865, 13, 51747, 51747, 865, 13, 51797, 51797], "temperature": 0.0, "avg_logprob": -0.3049348377046131, "compression_ratio": 1.4807692307692308, "no_caption_prob": 4.006216113339178e-05}, {"id": 659, "seek": 261500, "start": 2615.0, "end": 2619.2, "text": " So like for like parsing languages or like in Armoury.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 660, "seek": 261500, "start": 2619.2, "end": 2620.2, "text": " Yeah.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 661, "seek": 261500, "start": 2620.2, "end": 2621.2, "text": " Yeah.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 662, "seek": 261500, "start": 2621.2, "end": 2626.4, "text": " We parse the Arm code and then sometimes we want to rewrite Arm code.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 663, "seek": 261500, "start": 2626.4, "end": 2631.48, "text": " Like what could the Arm format work with as a data structure under the domain?", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 664, "seek": 261500, "start": 2631.48, "end": 2632.48, "text": " I don't know if you can.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 665, "seek": 261500, "start": 2632.48, "end": 2633.48, "text": " Yeah, maybe.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 666, "seek": 261500, "start": 2633.48, "end": 2634.48, "text": " It's interesting.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 667, "seek": 261500, "start": 2634.48, "end": 2637.48, "text": " It is very interesting.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 668, "seek": 261500, "start": 2637.48, "end": 2640.4, "text": " Because you can definitely do the same thing.", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 669, "seek": 261500, "start": 2640.4, "end": 2644.36, "text": " But the question is, would you be able to do it in a way that you, where you would get", "tokens": [50364, 407, 411, 337, 411, 21156, 278, 8650, 420, 411, 294, 11893, 396, 88, 13, 50574, 50574, 865, 13, 50624, 50624, 865, 13, 50674, 50674, 492, 48377, 264, 11893, 3089, 293, 550, 2171, 321, 528, 281, 28132, 11893, 3089, 13, 50934, 50934, 1743, 437, 727, 264, 11893, 7877, 589, 365, 382, 257, 1412, 3877, 833, 264, 9274, 30, 51188, 51188, 286, 500, 380, 458, 498, 291, 393, 13, 51238, 51238, 865, 11, 1310, 13, 51288, 51288, 467, 311, 1880, 13, 51338, 51338, 467, 307, 588, 1880, 13, 51488, 51488, 1436, 291, 393, 2138, 360, 264, 912, 551, 13, 51634, 51634, 583, 264, 1168, 307, 11, 576, 291, 312, 1075, 281, 360, 309, 294, 257, 636, 300, 291, 11, 689, 291, 576, 483, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.35532015991210936, "compression_ratio": 1.6784313725490196, "no_caption_prob": 6.813226355006918e-05}, {"id": 670, "seek": 264436, "start": 2644.36, "end": 2648.8, "text": " the same guarantees as what you have with the Arm Codex API?", "tokens": [50364, 264, 912, 32567, 382, 437, 291, 362, 365, 264, 11893, 15549, 87, 9362, 30, 50586, 50586, 663, 311, 10343, 13, 50636, 50636, 1042, 11, 300, 311, 7970, 364, 5380, 337, 264, 31569, 13, 50904, 50904, 286, 519, 309, 576, 5672, 13, 50999, 50999, 407, 498, 291, 528, 281, 652, 309, 44788, 11, 498, 291, 528, 281, 652, 21156, 278, 257, 28431, 4230, 44788, 11, 51375, 51375, 309, 576, 643, 281, 312, 257, 9859, 11, 406, 364, 12649, 28431, 4230, 13, 51540, 51540, 19948, 291, 576, 643, 281, 1066, 2837, 295, 577, 867, 2418, 1901, 4342, 436, 1143, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.14306175007539637, "compression_ratio": 1.6527196652719665, "no_caption_prob": 2.0144967493251897e-05}, {"id": 671, "seek": 264436, "start": 2648.8, "end": 2649.8, "text": " That's fascinating.", "tokens": [50364, 264, 912, 32567, 382, 437, 291, 362, 365, 264, 11893, 15549, 87, 9362, 30, 50586, 50586, 663, 311, 10343, 13, 50636, 50636, 1042, 11, 300, 311, 7970, 364, 5380, 337, 264, 31569, 13, 50904, 50904, 286, 519, 309, 576, 5672, 13, 50999, 50999, 407, 498, 291, 528, 281, 652, 309, 44788, 11, 498, 291, 528, 281, 652, 21156, 278, 257, 28431, 4230, 44788, 11, 51375, 51375, 309, 576, 643, 281, 312, 257, 9859, 11, 406, 364, 12649, 28431, 4230, 13, 51540, 51540, 19948, 291, 576, 643, 281, 1066, 2837, 295, 577, 867, 2418, 1901, 4342, 436, 1143, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.14306175007539637, "compression_ratio": 1.6527196652719665, "no_caption_prob": 2.0144967493251897e-05}, {"id": 672, "seek": 264436, "start": 2649.8, "end": 2655.1600000000003, "text": " Well, that's apparently an exercise for the listener.", "tokens": [50364, 264, 912, 32567, 382, 437, 291, 362, 365, 264, 11893, 15549, 87, 9362, 30, 50586, 50586, 663, 311, 10343, 13, 50636, 50636, 1042, 11, 300, 311, 7970, 364, 5380, 337, 264, 31569, 13, 50904, 50904, 286, 519, 309, 576, 5672, 13, 50999, 50999, 407, 498, 291, 528, 281, 652, 309, 44788, 11, 498, 291, 528, 281, 652, 21156, 278, 257, 28431, 4230, 44788, 11, 51375, 51375, 309, 576, 643, 281, 312, 257, 9859, 11, 406, 364, 12649, 28431, 4230, 13, 51540, 51540, 19948, 291, 576, 643, 281, 1066, 2837, 295, 577, 867, 2418, 1901, 4342, 436, 1143, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.14306175007539637, "compression_ratio": 1.6527196652719665, "no_caption_prob": 2.0144967493251897e-05}, {"id": 673, "seek": 264436, "start": 2655.1600000000003, "end": 2657.06, "text": " I think it would depend.", "tokens": [50364, 264, 912, 32567, 382, 437, 291, 362, 365, 264, 11893, 15549, 87, 9362, 30, 50586, 50586, 663, 311, 10343, 13, 50636, 50636, 1042, 11, 300, 311, 7970, 364, 5380, 337, 264, 31569, 13, 50904, 50904, 286, 519, 309, 576, 5672, 13, 50999, 50999, 407, 498, 291, 528, 281, 652, 309, 44788, 11, 498, 291, 528, 281, 652, 21156, 278, 257, 28431, 4230, 44788, 11, 51375, 51375, 309, 576, 643, 281, 312, 257, 9859, 11, 406, 364, 12649, 28431, 4230, 13, 51540, 51540, 19948, 291, 576, 643, 281, 1066, 2837, 295, 577, 867, 2418, 1901, 4342, 436, 1143, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.14306175007539637, "compression_ratio": 1.6527196652719665, "no_caption_prob": 2.0144967493251897e-05}, {"id": 674, "seek": 264436, "start": 2657.06, "end": 2664.58, "text": " So if you want to make it reversible, if you want to make parsing a syntax tree reversible,", "tokens": [50364, 264, 912, 32567, 382, 437, 291, 362, 365, 264, 11893, 15549, 87, 9362, 30, 50586, 50586, 663, 311, 10343, 13, 50636, 50636, 1042, 11, 300, 311, 7970, 364, 5380, 337, 264, 31569, 13, 50904, 50904, 286, 519, 309, 576, 5672, 13, 50999, 50999, 407, 498, 291, 528, 281, 652, 309, 44788, 11, 498, 291, 528, 281, 652, 21156, 278, 257, 28431, 4230, 44788, 11, 51375, 51375, 309, 576, 643, 281, 312, 257, 9859, 11, 406, 364, 12649, 28431, 4230, 13, 51540, 51540, 19948, 291, 576, 643, 281, 1066, 2837, 295, 577, 867, 2418, 1901, 4342, 436, 1143, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.14306175007539637, "compression_ratio": 1.6527196652719665, "no_caption_prob": 2.0144967493251897e-05}, {"id": 675, "seek": 264436, "start": 2664.58, "end": 2667.88, "text": " it would need to be a concrete, not an abstract syntax tree.", "tokens": [50364, 264, 912, 32567, 382, 437, 291, 362, 365, 264, 11893, 15549, 87, 9362, 30, 50586, 50586, 663, 311, 10343, 13, 50636, 50636, 1042, 11, 300, 311, 7970, 364, 5380, 337, 264, 31569, 13, 50904, 50904, 286, 519, 309, 576, 5672, 13, 50999, 50999, 407, 498, 291, 528, 281, 652, 309, 44788, 11, 498, 291, 528, 281, 652, 21156, 278, 257, 28431, 4230, 44788, 11, 51375, 51375, 309, 576, 643, 281, 312, 257, 9859, 11, 406, 364, 12649, 28431, 4230, 13, 51540, 51540, 19948, 291, 576, 643, 281, 1066, 2837, 295, 577, 867, 2418, 1901, 4342, 436, 1143, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.14306175007539637, "compression_ratio": 1.6527196652719665, "no_caption_prob": 2.0144967493251897e-05}, {"id": 676, "seek": 264436, "start": 2667.88, "end": 2673.28, "text": " Meaning you would need to keep track of how many white space characters they used.", "tokens": [50364, 264, 912, 32567, 382, 437, 291, 362, 365, 264, 11893, 15549, 87, 9362, 30, 50586, 50586, 663, 311, 10343, 13, 50636, 50636, 1042, 11, 300, 311, 7970, 364, 5380, 337, 264, 31569, 13, 50904, 50904, 286, 519, 309, 576, 5672, 13, 50999, 50999, 407, 498, 291, 528, 281, 652, 309, 44788, 11, 498, 291, 528, 281, 652, 21156, 278, 257, 28431, 4230, 44788, 11, 51375, 51375, 309, 576, 643, 281, 312, 257, 9859, 11, 406, 364, 12649, 28431, 4230, 13, 51540, 51540, 19948, 291, 576, 643, 281, 1066, 2837, 295, 577, 867, 2418, 1901, 4342, 436, 1143, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.14306175007539637, "compression_ratio": 1.6527196652719665, "no_caption_prob": 2.0144967493251897e-05}, {"id": 677, "seek": 267328, "start": 2673.28, "end": 2677.7200000000003, "text": " You know, if it's a syntax that supports trailing commas, you'd need to keep track of whether", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 678, "seek": 267328, "start": 2677.7200000000003, "end": 2681.92, "text": " there was a trailing comma, how many spaces were before or after.", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 679, "seek": 267328, "start": 2681.92, "end": 2682.92, "text": " Anything that could make that syntax.", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 680, "seek": 267328, "start": 2682.92, "end": 2688.6000000000004, "text": " That would need to be part of the data structure you parse it into.", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 681, "seek": 267328, "start": 2688.6000000000004, "end": 2694.0, "text": " I don't think you would need to keep track of every white space, but if you at least", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 682, "seek": 267328, "start": 2694.0, "end": 2698.8, "text": " keep track of the position of everything, then you can infer things again.", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 683, "seek": 267328, "start": 2698.8, "end": 2699.8, "text": " Yeah.", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 684, "seek": 267328, "start": 2699.8, "end": 2700.8, "text": " Yeah.", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 685, "seek": 267328, "start": 2700.8, "end": 2703.1200000000003, "text": " You'd need enough information to be able to infer that.", "tokens": [50364, 509, 458, 11, 498, 309, 311, 257, 28431, 300, 9346, 944, 4883, 800, 296, 11, 291, 1116, 643, 281, 1066, 2837, 295, 1968, 50586, 50586, 456, 390, 257, 944, 4883, 22117, 11, 577, 867, 7673, 645, 949, 420, 934, 13, 50796, 50796, 11998, 300, 727, 652, 300, 28431, 13, 50846, 50846, 663, 576, 643, 281, 312, 644, 295, 264, 1412, 3877, 291, 48377, 309, 666, 13, 51130, 51130, 286, 500, 380, 519, 291, 576, 643, 281, 1066, 2837, 295, 633, 2418, 1901, 11, 457, 498, 291, 412, 1935, 51400, 51400, 1066, 2837, 295, 264, 2535, 295, 1203, 11, 550, 291, 393, 13596, 721, 797, 13, 51640, 51640, 865, 13, 51690, 51690, 865, 13, 51740, 51740, 509, 1116, 643, 1547, 1589, 281, 312, 1075, 281, 13596, 300, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1655935476754458, "compression_ratio": 1.8464419475655431, "no_caption_prob": 2.318714905413799e-05}, {"id": 686, "seek": 270312, "start": 2703.12, "end": 2704.12, "text": " Definitely.", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 687, "seek": 270312, "start": 2704.12, "end": 2711.0, "text": " You would need to have a lossless format if you wanted it to be truly reversible.", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 688, "seek": 270312, "start": 2711.0, "end": 2715.8599999999997, "text": " But if your goal is not to be reversible, yeah, I wonder how much mileage you would", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 689, "seek": 270312, "start": 2715.8599999999997, "end": 2717.12, "text": " get out of that.", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 690, "seek": 270312, "start": 2717.12, "end": 2721.4, "text": " It's also, it can also be, the parsing is the harder part.", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 691, "seek": 270312, "start": 2721.4, "end": 2726.64, "text": " Taking an AST and then printing it out is significantly easier.", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 692, "seek": 270312, "start": 2726.64, "end": 2727.64, "text": " Right.", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 693, "seek": 270312, "start": 2727.64, "end": 2731.7999999999997, "text": " But you still don't want to make mistakes when serializing.", "tokens": [50364, 12151, 13, 50414, 50414, 509, 576, 643, 281, 362, 257, 4470, 1832, 7877, 498, 291, 1415, 309, 281, 312, 4908, 44788, 13, 50758, 50758, 583, 498, 428, 3387, 307, 406, 281, 312, 44788, 11, 1338, 11, 286, 2441, 577, 709, 43121, 291, 576, 51001, 51001, 483, 484, 295, 300, 13, 51064, 51064, 467, 311, 611, 11, 309, 393, 611, 312, 11, 264, 21156, 278, 307, 264, 6081, 644, 13, 51278, 51278, 17837, 364, 316, 6840, 293, 550, 14699, 309, 484, 307, 10591, 3571, 13, 51540, 51540, 1779, 13, 51590, 51590, 583, 291, 920, 500, 380, 528, 281, 652, 8038, 562, 17436, 3319, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.16496219813266647, "compression_ratio": 1.5867768595041323, "no_caption_prob": 7.141652895370498e-05}, {"id": 694, "seek": 273180, "start": 2731.8, "end": 2733.36, "text": " Or do you serializing?", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 695, "seek": 273180, "start": 2733.36, "end": 2735.6000000000004, "text": " You want them to be the same when possible.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 696, "seek": 273180, "start": 2735.6000000000004, "end": 2736.6000000000004, "text": " Right.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 697, "seek": 273180, "start": 2736.6000000000004, "end": 2743.44, "text": " Although since syntaxes typically aren't changing that frequently, it might be less of an issue", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 698, "seek": 273180, "start": 2743.44, "end": 2744.92, "text": " for that kind of thing.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 699, "seek": 273180, "start": 2744.92, "end": 2745.92, "text": " I wonder.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 700, "seek": 273180, "start": 2745.92, "end": 2746.92, "text": " I wonder.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 701, "seek": 273180, "start": 2746.92, "end": 2747.92, "text": " But it is an interesting concept.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 702, "seek": 273180, "start": 2747.92, "end": 2748.92, "text": " Yeah.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 703, "seek": 273180, "start": 2748.92, "end": 2749.92, "text": " Yeah.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 704, "seek": 273180, "start": 2749.92, "end": 2756.0800000000004, "text": " I mean, if you can build a parser the same way, but with these additional guarantees,", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 705, "seek": 273180, "start": 2756.0800000000004, "end": 2757.8, "text": " that sounds like a win win to me.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 706, "seek": 273180, "start": 2757.8, "end": 2758.8, "text": " Yeah.", "tokens": [50364, 1610, 360, 291, 17436, 3319, 30, 50442, 50442, 509, 528, 552, 281, 312, 264, 912, 562, 1944, 13, 50554, 50554, 1779, 13, 50604, 50604, 5780, 1670, 28431, 279, 5850, 3212, 380, 4473, 300, 10374, 11, 309, 1062, 312, 1570, 295, 364, 2734, 50946, 50946, 337, 300, 733, 295, 551, 13, 51020, 51020, 286, 2441, 13, 51070, 51070, 286, 2441, 13, 51120, 51120, 583, 309, 307, 364, 1880, 3410, 13, 51170, 51170, 865, 13, 51220, 51220, 865, 13, 51270, 51270, 286, 914, 11, 498, 291, 393, 1322, 257, 21156, 260, 264, 912, 636, 11, 457, 365, 613, 4497, 32567, 11, 51578, 51578, 300, 3263, 411, 257, 1942, 1942, 281, 385, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.205429303444038, "compression_ratio": 1.5714285714285714, "no_caption_prob": 9.609905100660399e-05}, {"id": 707, "seek": 275880, "start": 2758.8, "end": 2768.1200000000003, "text": " And if you're parsing a phone number and then you know you have a way to turn that back", "tokens": [50364, 400, 498, 291, 434, 21156, 278, 257, 2593, 1230, 293, 550, 291, 458, 291, 362, 257, 636, 281, 1261, 300, 646, 50830, 50830, 666, 257, 2593, 1230, 294, 264, 912, 7877, 11, 550, 498, 291, 362, 6687, 300, 2035, 7877, 51137, 51137, 291, 434, 637, 2414, 646, 484, 393, 312, 21156, 292, 11, 300, 727, 312, 733, 295, 1481, 7263, 13, 51420, 51420, 407, 718, 311, 584, 300, 291, 48377, 257, 2593, 1230, 293, 291, 3241, 11, 370, 498, 291, 3507, 1314, 34153, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1460720917274212, "compression_ratio": 1.7313432835820894, "no_caption_prob": 3.120060500805266e-05}, {"id": 708, "seek": 275880, "start": 2768.1200000000003, "end": 2774.26, "text": " into a phone number in the same format, then if you have confidence that whatever format", "tokens": [50364, 400, 498, 291, 434, 21156, 278, 257, 2593, 1230, 293, 550, 291, 458, 291, 362, 257, 636, 281, 1261, 300, 646, 50830, 50830, 666, 257, 2593, 1230, 294, 264, 912, 7877, 11, 550, 498, 291, 362, 6687, 300, 2035, 7877, 51137, 51137, 291, 434, 637, 2414, 646, 484, 393, 312, 21156, 292, 11, 300, 727, 312, 733, 295, 1481, 7263, 13, 51420, 51420, 407, 718, 311, 584, 300, 291, 48377, 257, 2593, 1230, 293, 291, 3241, 11, 370, 498, 291, 3507, 1314, 34153, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1460720917274212, "compression_ratio": 1.7313432835820894, "no_caption_prob": 3.120060500805266e-05}, {"id": 709, "seek": 275880, "start": 2774.26, "end": 2779.92, "text": " you're spitting back out can be parsed, that could be kind of nice potentially.", "tokens": [50364, 400, 498, 291, 434, 21156, 278, 257, 2593, 1230, 293, 550, 291, 458, 291, 362, 257, 636, 281, 1261, 300, 646, 50830, 50830, 666, 257, 2593, 1230, 294, 264, 912, 7877, 11, 550, 498, 291, 362, 6687, 300, 2035, 7877, 51137, 51137, 291, 434, 637, 2414, 646, 484, 393, 312, 21156, 292, 11, 300, 727, 312, 733, 295, 1481, 7263, 13, 51420, 51420, 407, 718, 311, 584, 300, 291, 48377, 257, 2593, 1230, 293, 291, 3241, 11, 370, 498, 291, 3507, 1314, 34153, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1460720917274212, "compression_ratio": 1.7313432835820894, "no_caption_prob": 3.120060500805266e-05}, {"id": 710, "seek": 275880, "start": 2779.92, "end": 2788.36, "text": " So let's say that you parse a phone number and you accept, so if you throw away parentheses", "tokens": [50364, 400, 498, 291, 434, 21156, 278, 257, 2593, 1230, 293, 550, 291, 458, 291, 362, 257, 636, 281, 1261, 300, 646, 50830, 50830, 666, 257, 2593, 1230, 294, 264, 912, 7877, 11, 550, 498, 291, 362, 6687, 300, 2035, 7877, 51137, 51137, 291, 434, 637, 2414, 646, 484, 393, 312, 21156, 292, 11, 300, 727, 312, 733, 295, 1481, 7263, 13, 51420, 51420, 407, 718, 311, 584, 300, 291, 48377, 257, 2593, 1230, 293, 291, 3241, 11, 370, 498, 291, 3507, 1314, 34153, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1460720917274212, "compression_ratio": 1.7313432835820894, "no_caption_prob": 3.120060500805266e-05}, {"id": 711, "seek": 278836, "start": 2788.36, "end": 2793.2400000000002, "text": " and then you parse a digit, parse a digit, parse a digit, throw away a paren, throw", "tokens": [50364, 293, 550, 291, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 3507, 1314, 257, 280, 4484, 11, 3507, 50608, 50608, 1314, 7673, 11, 3507, 1314, 8240, 279, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 2035, 13, 50902, 50902, 1042, 586, 11, 577, 366, 291, 516, 281, 17436, 1125, 300, 30, 51150, 51150, 509, 434, 445, 516, 281, 4482, 484, 257, 6798, 295, 264, 27011, 13, 51263, 51263, 1610, 1310, 291, 411, 485, 51313, 51313, 1042, 11, 291, 727, 4159, 552, 382, 644, 295, 264, 1908, 9362, 11, 457, 19501, 362, 264, 2010, 11, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.18412406699171344, "compression_ratio": 1.8333333333333333, "no_caption_prob": 2.1782452677143738e-05}, {"id": 712, "seek": 278836, "start": 2793.2400000000002, "end": 2799.1200000000003, "text": " away spaces, throw away dashes, parse a digit, parse a digit, whatever.", "tokens": [50364, 293, 550, 291, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 3507, 1314, 257, 280, 4484, 11, 3507, 50608, 50608, 1314, 7673, 11, 3507, 1314, 8240, 279, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 2035, 13, 50902, 50902, 1042, 586, 11, 577, 366, 291, 516, 281, 17436, 1125, 300, 30, 51150, 51150, 509, 434, 445, 516, 281, 4482, 484, 257, 6798, 295, 264, 27011, 13, 51263, 51263, 1610, 1310, 291, 411, 485, 51313, 51313, 1042, 11, 291, 727, 4159, 552, 382, 644, 295, 264, 1908, 9362, 11, 457, 19501, 362, 264, 2010, 11, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.18412406699171344, "compression_ratio": 1.8333333333333333, "no_caption_prob": 2.1782452677143738e-05}, {"id": 713, "seek": 278836, "start": 2799.1200000000003, "end": 2804.08, "text": " Well now, how are you going to serialize that?", "tokens": [50364, 293, 550, 291, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 3507, 1314, 257, 280, 4484, 11, 3507, 50608, 50608, 1314, 7673, 11, 3507, 1314, 8240, 279, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 2035, 13, 50902, 50902, 1042, 586, 11, 577, 366, 291, 516, 281, 17436, 1125, 300, 30, 51150, 51150, 509, 434, 445, 516, 281, 4482, 484, 257, 6798, 295, 264, 27011, 13, 51263, 51263, 1610, 1310, 291, 411, 485, 51313, 51313, 1042, 11, 291, 727, 4159, 552, 382, 644, 295, 264, 1908, 9362, 11, 457, 19501, 362, 264, 2010, 11, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.18412406699171344, "compression_ratio": 1.8333333333333333, "no_caption_prob": 2.1782452677143738e-05}, {"id": 714, "seek": 278836, "start": 2804.08, "end": 2806.34, "text": " You're just going to print out a string of the digits.", "tokens": [50364, 293, 550, 291, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 3507, 1314, 257, 280, 4484, 11, 3507, 50608, 50608, 1314, 7673, 11, 3507, 1314, 8240, 279, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 2035, 13, 50902, 50902, 1042, 586, 11, 577, 366, 291, 516, 281, 17436, 1125, 300, 30, 51150, 51150, 509, 434, 445, 516, 281, 4482, 484, 257, 6798, 295, 264, 27011, 13, 51263, 51263, 1610, 1310, 291, 411, 485, 51313, 51313, 1042, 11, 291, 727, 4159, 552, 382, 644, 295, 264, 1908, 9362, 11, 457, 19501, 362, 264, 2010, 11, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.18412406699171344, "compression_ratio": 1.8333333333333333, "no_caption_prob": 2.1782452677143738e-05}, {"id": 715, "seek": 278836, "start": 2806.34, "end": 2807.34, "text": " Or maybe you like...", "tokens": [50364, 293, 550, 291, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 3507, 1314, 257, 280, 4484, 11, 3507, 50608, 50608, 1314, 7673, 11, 3507, 1314, 8240, 279, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 2035, 13, 50902, 50902, 1042, 586, 11, 577, 366, 291, 516, 281, 17436, 1125, 300, 30, 51150, 51150, 509, 434, 445, 516, 281, 4482, 484, 257, 6798, 295, 264, 27011, 13, 51263, 51263, 1610, 1310, 291, 411, 485, 51313, 51313, 1042, 11, 291, 727, 4159, 552, 382, 644, 295, 264, 1908, 9362, 11, 457, 19501, 362, 264, 2010, 11, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.18412406699171344, "compression_ratio": 1.8333333333333333, "no_caption_prob": 2.1782452677143738e-05}, {"id": 716, "seek": 278836, "start": 2807.34, "end": 2813.84, "text": " Well, you could remove them as part of the public API, but internally have the type,", "tokens": [50364, 293, 550, 291, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 3507, 1314, 257, 280, 4484, 11, 3507, 50608, 50608, 1314, 7673, 11, 3507, 1314, 8240, 279, 11, 48377, 257, 14293, 11, 48377, 257, 14293, 11, 2035, 13, 50902, 50902, 1042, 586, 11, 577, 366, 291, 516, 281, 17436, 1125, 300, 30, 51150, 51150, 509, 434, 445, 516, 281, 4482, 484, 257, 6798, 295, 264, 27011, 13, 51263, 51263, 1610, 1310, 291, 411, 485, 51313, 51313, 1042, 11, 291, 727, 4159, 552, 382, 644, 295, 264, 1908, 9362, 11, 457, 19501, 362, 264, 2010, 11, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.18412406699171344, "compression_ratio": 1.8333333333333333, "no_caption_prob": 2.1782452677143738e-05}, {"id": 717, "seek": 281384, "start": 2813.84, "end": 2819.28, "text": " you know, big type, which does keep all that white space information.", "tokens": [50364, 291, 458, 11, 955, 2010, 11, 597, 775, 1066, 439, 300, 2418, 1901, 1589, 13, 50636, 50636, 1779, 13, 50686, 50686, 1079, 11, 291, 727, 13, 50792, 50792, 467, 2759, 380, 312, 382, 2042, 394, 570, 291, 576, 362, 257, 688, 295, 4675, 300, 291, 576, 1310, 51080, 51080, 406, 764, 13, 51130, 51130, 286, 2041, 309, 311, 787, 4420, 498, 291, 1319, 437, 291, 48377, 13, 51412, 51412, 1436, 498, 291, 445, 528, 281, 1085, 19014, 309, 11, 550, 445, 1066, 2035, 291, 21156, 292, 7993, 294, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.20508639708809231, "compression_ratio": 1.6057692307692308, "no_caption_prob": 0.00032494773040525615}, {"id": 718, "seek": 281384, "start": 2819.28, "end": 2820.28, "text": " Right.", "tokens": [50364, 291, 458, 11, 955, 2010, 11, 597, 775, 1066, 439, 300, 2418, 1901, 1589, 13, 50636, 50636, 1779, 13, 50686, 50686, 1079, 11, 291, 727, 13, 50792, 50792, 467, 2759, 380, 312, 382, 2042, 394, 570, 291, 576, 362, 257, 688, 295, 4675, 300, 291, 576, 1310, 51080, 51080, 406, 764, 13, 51130, 51130, 286, 2041, 309, 311, 787, 4420, 498, 291, 1319, 437, 291, 48377, 13, 51412, 51412, 1436, 498, 291, 445, 528, 281, 1085, 19014, 309, 11, 550, 445, 1066, 2035, 291, 21156, 292, 7993, 294, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.20508639708809231, "compression_ratio": 1.6057692307692308, "no_caption_prob": 0.00032494773040525615}, {"id": 719, "seek": 281384, "start": 2820.28, "end": 2822.4, "text": " Yes, you could.", "tokens": [50364, 291, 458, 11, 955, 2010, 11, 597, 775, 1066, 439, 300, 2418, 1901, 1589, 13, 50636, 50636, 1779, 13, 50686, 50686, 1079, 11, 291, 727, 13, 50792, 50792, 467, 2759, 380, 312, 382, 2042, 394, 570, 291, 576, 362, 257, 688, 295, 4675, 300, 291, 576, 1310, 51080, 51080, 406, 764, 13, 51130, 51130, 286, 2041, 309, 311, 787, 4420, 498, 291, 1319, 437, 291, 48377, 13, 51412, 51412, 1436, 498, 291, 445, 528, 281, 1085, 19014, 309, 11, 550, 445, 1066, 2035, 291, 21156, 292, 7993, 294, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.20508639708809231, "compression_ratio": 1.6057692307692308, "no_caption_prob": 0.00032494773040525615}, {"id": 720, "seek": 281384, "start": 2822.4, "end": 2828.1600000000003, "text": " It wouldn't be as performant because you would have a lot of memory that you would maybe", "tokens": [50364, 291, 458, 11, 955, 2010, 11, 597, 775, 1066, 439, 300, 2418, 1901, 1589, 13, 50636, 50636, 1779, 13, 50686, 50686, 1079, 11, 291, 727, 13, 50792, 50792, 467, 2759, 380, 312, 382, 2042, 394, 570, 291, 576, 362, 257, 688, 295, 4675, 300, 291, 576, 1310, 51080, 51080, 406, 764, 13, 51130, 51130, 286, 2041, 309, 311, 787, 4420, 498, 291, 1319, 437, 291, 48377, 13, 51412, 51412, 1436, 498, 291, 445, 528, 281, 1085, 19014, 309, 11, 550, 445, 1066, 2035, 291, 21156, 292, 7993, 294, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.20508639708809231, "compression_ratio": 1.6057692307692308, "no_caption_prob": 0.00032494773040525615}, {"id": 721, "seek": 281384, "start": 2828.1600000000003, "end": 2829.1600000000003, "text": " not use.", "tokens": [50364, 291, 458, 11, 955, 2010, 11, 597, 775, 1066, 439, 300, 2418, 1901, 1589, 13, 50636, 50636, 1779, 13, 50686, 50686, 1079, 11, 291, 727, 13, 50792, 50792, 467, 2759, 380, 312, 382, 2042, 394, 570, 291, 576, 362, 257, 688, 295, 4675, 300, 291, 576, 1310, 51080, 51080, 406, 764, 13, 51130, 51130, 286, 2041, 309, 311, 787, 4420, 498, 291, 1319, 437, 291, 48377, 13, 51412, 51412, 1436, 498, 291, 445, 528, 281, 1085, 19014, 309, 11, 550, 445, 1066, 2035, 291, 21156, 292, 7993, 294, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.20508639708809231, "compression_ratio": 1.6057692307692308, "no_caption_prob": 0.00032494773040525615}, {"id": 722, "seek": 281384, "start": 2829.1600000000003, "end": 2834.8, "text": " I guess it's only useful if you change what you parse.", "tokens": [50364, 291, 458, 11, 955, 2010, 11, 597, 775, 1066, 439, 300, 2418, 1901, 1589, 13, 50636, 50636, 1779, 13, 50686, 50686, 1079, 11, 291, 727, 13, 50792, 50792, 467, 2759, 380, 312, 382, 2042, 394, 570, 291, 576, 362, 257, 688, 295, 4675, 300, 291, 576, 1310, 51080, 51080, 406, 764, 13, 51130, 51130, 286, 2041, 309, 311, 787, 4420, 498, 291, 1319, 437, 291, 48377, 13, 51412, 51412, 1436, 498, 291, 445, 528, 281, 1085, 19014, 309, 11, 550, 445, 1066, 2035, 291, 21156, 292, 7993, 294, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.20508639708809231, "compression_ratio": 1.6057692307692308, "no_caption_prob": 0.00032494773040525615}, {"id": 723, "seek": 281384, "start": 2834.8, "end": 2841.6000000000004, "text": " Because if you just want to reprint it, then just keep whatever you parsed originally in", "tokens": [50364, 291, 458, 11, 955, 2010, 11, 597, 775, 1066, 439, 300, 2418, 1901, 1589, 13, 50636, 50636, 1779, 13, 50686, 50686, 1079, 11, 291, 727, 13, 50792, 50792, 467, 2759, 380, 312, 382, 2042, 394, 570, 291, 576, 362, 257, 688, 295, 4675, 300, 291, 576, 1310, 51080, 51080, 406, 764, 13, 51130, 51130, 286, 2041, 309, 311, 787, 4420, 498, 291, 1319, 437, 291, 48377, 13, 51412, 51412, 1436, 498, 291, 445, 528, 281, 1085, 19014, 309, 11, 550, 445, 1066, 2035, 291, 21156, 292, 7993, 294, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.20508639708809231, "compression_ratio": 1.6057692307692308, "no_caption_prob": 0.00032494773040525615}, {"id": 724, "seek": 284160, "start": 2841.6, "end": 2844.24, "text": " memory and then keep it back.", "tokens": [50364, 4675, 293, 550, 1066, 309, 646, 13, 50496, 50496, 583, 498, 337, 5197, 11, 498, 291, 528, 281, 360, 316, 6840, 9258, 4136, 337, 2699, 76, 28431, 11, 550, 309, 393, 50930, 50930, 312, 1880, 13, 50980, 50980, 865, 11, 309, 311, 364, 1880, 3410, 13, 51126, 51126, 865, 11, 286, 519, 300, 341, 5102, 307, 31421, 337, 764, 337, 988, 13, 51392, 51392, 821, 366, 867, 3190, 309, 727, 3079, 13, 51520, 51520, 467, 311, 733, 295, 10654, 300, 321, 434, 1333, 295, 412, 264, 2863, 295, 264, 16197, 295, 341, 3410, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.22168509814204002, "compression_ratio": 1.5810810810810811, "no_caption_prob": 1.4285006727732252e-05}, {"id": 725, "seek": 284160, "start": 2844.24, "end": 2852.92, "text": " But if for instance, if you want to do AST manipulations for Elm syntax, then it can", "tokens": [50364, 4675, 293, 550, 1066, 309, 646, 13, 50496, 50496, 583, 498, 337, 5197, 11, 498, 291, 528, 281, 360, 316, 6840, 9258, 4136, 337, 2699, 76, 28431, 11, 550, 309, 393, 50930, 50930, 312, 1880, 13, 50980, 50980, 865, 11, 309, 311, 364, 1880, 3410, 13, 51126, 51126, 865, 11, 286, 519, 300, 341, 5102, 307, 31421, 337, 764, 337, 988, 13, 51392, 51392, 821, 366, 867, 3190, 309, 727, 3079, 13, 51520, 51520, 467, 311, 733, 295, 10654, 300, 321, 434, 1333, 295, 412, 264, 2863, 295, 264, 16197, 295, 341, 3410, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.22168509814204002, "compression_ratio": 1.5810810810810811, "no_caption_prob": 1.4285006727732252e-05}, {"id": 726, "seek": 284160, "start": 2852.92, "end": 2853.92, "text": " be interesting.", "tokens": [50364, 4675, 293, 550, 1066, 309, 646, 13, 50496, 50496, 583, 498, 337, 5197, 11, 498, 291, 528, 281, 360, 316, 6840, 9258, 4136, 337, 2699, 76, 28431, 11, 550, 309, 393, 50930, 50930, 312, 1880, 13, 50980, 50980, 865, 11, 309, 311, 364, 1880, 3410, 13, 51126, 51126, 865, 11, 286, 519, 300, 341, 5102, 307, 31421, 337, 764, 337, 988, 13, 51392, 51392, 821, 366, 867, 3190, 309, 727, 3079, 13, 51520, 51520, 467, 311, 733, 295, 10654, 300, 321, 434, 1333, 295, 412, 264, 2863, 295, 264, 16197, 295, 341, 3410, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.22168509814204002, "compression_ratio": 1.5810810810810811, "no_caption_prob": 1.4285006727732252e-05}, {"id": 727, "seek": 284160, "start": 2853.92, "end": 2856.8399999999997, "text": " Yeah, it's an interesting concept.", "tokens": [50364, 4675, 293, 550, 1066, 309, 646, 13, 50496, 50496, 583, 498, 337, 5197, 11, 498, 291, 528, 281, 360, 316, 6840, 9258, 4136, 337, 2699, 76, 28431, 11, 550, 309, 393, 50930, 50930, 312, 1880, 13, 50980, 50980, 865, 11, 309, 311, 364, 1880, 3410, 13, 51126, 51126, 865, 11, 286, 519, 300, 341, 5102, 307, 31421, 337, 764, 337, 988, 13, 51392, 51392, 821, 366, 867, 3190, 309, 727, 3079, 13, 51520, 51520, 467, 311, 733, 295, 10654, 300, 321, 434, 1333, 295, 412, 264, 2863, 295, 264, 16197, 295, 341, 3410, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.22168509814204002, "compression_ratio": 1.5810810810810811, "no_caption_prob": 1.4285006727732252e-05}, {"id": 728, "seek": 284160, "start": 2856.8399999999997, "end": 2862.16, "text": " Yeah, I think that this pattern is ripe for use for sure.", "tokens": [50364, 4675, 293, 550, 1066, 309, 646, 13, 50496, 50496, 583, 498, 337, 5197, 11, 498, 291, 528, 281, 360, 316, 6840, 9258, 4136, 337, 2699, 76, 28431, 11, 550, 309, 393, 50930, 50930, 312, 1880, 13, 50980, 50980, 865, 11, 309, 311, 364, 1880, 3410, 13, 51126, 51126, 865, 11, 286, 519, 300, 341, 5102, 307, 31421, 337, 764, 337, 988, 13, 51392, 51392, 821, 366, 867, 3190, 309, 727, 3079, 13, 51520, 51520, 467, 311, 733, 295, 10654, 300, 321, 434, 1333, 295, 412, 264, 2863, 295, 264, 16197, 295, 341, 3410, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.22168509814204002, "compression_ratio": 1.5810810810810811, "no_caption_prob": 1.4285006727732252e-05}, {"id": 729, "seek": 284160, "start": 2862.16, "end": 2864.72, "text": " There are many places it could apply.", "tokens": [50364, 4675, 293, 550, 1066, 309, 646, 13, 50496, 50496, 583, 498, 337, 5197, 11, 498, 291, 528, 281, 360, 316, 6840, 9258, 4136, 337, 2699, 76, 28431, 11, 550, 309, 393, 50930, 50930, 312, 1880, 13, 50980, 50980, 865, 11, 309, 311, 364, 1880, 3410, 13, 51126, 51126, 865, 11, 286, 519, 300, 341, 5102, 307, 31421, 337, 764, 337, 988, 13, 51392, 51392, 821, 366, 867, 3190, 309, 727, 3079, 13, 51520, 51520, 467, 311, 733, 295, 10654, 300, 321, 434, 1333, 295, 412, 264, 2863, 295, 264, 16197, 295, 341, 3410, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.22168509814204002, "compression_ratio": 1.5810810810810811, "no_caption_prob": 1.4285006727732252e-05}, {"id": 730, "seek": 284160, "start": 2864.72, "end": 2869.3199999999997, "text": " It's kind of neat that we're sort of at the beginning of the exploration of this concept.", "tokens": [50364, 4675, 293, 550, 1066, 309, 646, 13, 50496, 50496, 583, 498, 337, 5197, 11, 498, 291, 528, 281, 360, 316, 6840, 9258, 4136, 337, 2699, 76, 28431, 11, 550, 309, 393, 50930, 50930, 312, 1880, 13, 50980, 50980, 865, 11, 309, 311, 364, 1880, 3410, 13, 51126, 51126, 865, 11, 286, 519, 300, 341, 5102, 307, 31421, 337, 764, 337, 988, 13, 51392, 51392, 821, 366, 867, 3190, 309, 727, 3079, 13, 51520, 51520, 467, 311, 733, 295, 10654, 300, 321, 434, 1333, 295, 412, 264, 2863, 295, 264, 16197, 295, 341, 3410, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.22168509814204002, "compression_ratio": 1.5810810810810811, "no_caption_prob": 1.4285006727732252e-05}, {"id": 731, "seek": 286932, "start": 2869.32, "end": 2872.1600000000003, "text": " And I think we'll be seeing more and more applications over time.", "tokens": [50364, 400, 286, 519, 321, 603, 312, 2577, 544, 293, 544, 5821, 670, 565, 13, 50506, 50506, 865, 13, 50556, 50556, 876, 11, 291, 458, 437, 341, 727, 312, 1143, 337, 30, 50698, 50698, 17995, 46410, 20262, 54, 56, 38, 13, 50794, 50794, 1743, 257, 688, 295, 561, 1029, 11, 4177, 11, 286, 362, 341, 17995, 12187, 294, 452, 8149, 13, 51160, 51160, 1664, 286, 12240, 309, 666, 2699, 76, 30, 51256, 51256, 1042, 11, 291, 727, 48377, 309, 281, 17995, 293, 550, 362, 300, 17995, 6063, 312, 44788, 666, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18438577139249412, "compression_ratio": 1.4345794392523366, "no_caption_prob": 2.5070952688110992e-05}, {"id": 732, "seek": 286932, "start": 2872.1600000000003, "end": 2873.1600000000003, "text": " Yeah.", "tokens": [50364, 400, 286, 519, 321, 603, 312, 2577, 544, 293, 544, 5821, 670, 565, 13, 50506, 50506, 865, 13, 50556, 50556, 876, 11, 291, 458, 437, 341, 727, 312, 1143, 337, 30, 50698, 50698, 17995, 46410, 20262, 54, 56, 38, 13, 50794, 50794, 1743, 257, 688, 295, 561, 1029, 11, 4177, 11, 286, 362, 341, 17995, 12187, 294, 452, 8149, 13, 51160, 51160, 1664, 286, 12240, 309, 666, 2699, 76, 30, 51256, 51256, 1042, 11, 291, 727, 48377, 309, 281, 17995, 293, 550, 362, 300, 17995, 6063, 312, 44788, 666, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18438577139249412, "compression_ratio": 1.4345794392523366, "no_caption_prob": 2.5070952688110992e-05}, {"id": 733, "seek": 286932, "start": 2873.1600000000003, "end": 2876.0, "text": " Oh, you know what this could be used for?", "tokens": [50364, 400, 286, 519, 321, 603, 312, 2577, 544, 293, 544, 5821, 670, 565, 13, 50506, 50506, 865, 13, 50556, 50556, 876, 11, 291, 458, 437, 341, 727, 312, 1143, 337, 30, 50698, 50698, 17995, 46410, 20262, 54, 56, 38, 13, 50794, 50794, 1743, 257, 688, 295, 561, 1029, 11, 4177, 11, 286, 362, 341, 17995, 12187, 294, 452, 8149, 13, 51160, 51160, 1664, 286, 12240, 309, 666, 2699, 76, 30, 51256, 51256, 1042, 11, 291, 727, 48377, 309, 281, 17995, 293, 550, 362, 300, 17995, 6063, 312, 44788, 666, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18438577139249412, "compression_ratio": 1.4345794392523366, "no_caption_prob": 2.5070952688110992e-05}, {"id": 734, "seek": 286932, "start": 2876.0, "end": 2877.92, "text": " HTML WYSIWYG.", "tokens": [50364, 400, 286, 519, 321, 603, 312, 2577, 544, 293, 544, 5821, 670, 565, 13, 50506, 50506, 865, 13, 50556, 50556, 876, 11, 291, 458, 437, 341, 727, 312, 1143, 337, 30, 50698, 50698, 17995, 46410, 20262, 54, 56, 38, 13, 50794, 50794, 1743, 257, 688, 295, 561, 1029, 11, 4177, 11, 286, 362, 341, 17995, 12187, 294, 452, 8149, 13, 51160, 51160, 1664, 286, 12240, 309, 666, 2699, 76, 30, 51256, 51256, 1042, 11, 291, 727, 48377, 309, 281, 17995, 293, 550, 362, 300, 17995, 6063, 312, 44788, 666, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18438577139249412, "compression_ratio": 1.4345794392523366, "no_caption_prob": 2.5070952688110992e-05}, {"id": 735, "seek": 286932, "start": 2877.92, "end": 2885.2400000000002, "text": " Like a lot of people ask, hey, I have this HTML stored in my database.", "tokens": [50364, 400, 286, 519, 321, 603, 312, 2577, 544, 293, 544, 5821, 670, 565, 13, 50506, 50506, 865, 13, 50556, 50556, 876, 11, 291, 458, 437, 341, 727, 312, 1143, 337, 30, 50698, 50698, 17995, 46410, 20262, 54, 56, 38, 13, 50794, 50794, 1743, 257, 688, 295, 561, 1029, 11, 4177, 11, 286, 362, 341, 17995, 12187, 294, 452, 8149, 13, 51160, 51160, 1664, 286, 12240, 309, 666, 2699, 76, 30, 51256, 51256, 1042, 11, 291, 727, 48377, 309, 281, 17995, 293, 550, 362, 300, 17995, 6063, 312, 44788, 666, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18438577139249412, "compression_ratio": 1.4345794392523366, "no_caption_prob": 2.5070952688110992e-05}, {"id": 736, "seek": 286932, "start": 2885.2400000000002, "end": 2887.1600000000003, "text": " Can I embed it into Elm?", "tokens": [50364, 400, 286, 519, 321, 603, 312, 2577, 544, 293, 544, 5821, 670, 565, 13, 50506, 50506, 865, 13, 50556, 50556, 876, 11, 291, 458, 437, 341, 727, 312, 1143, 337, 30, 50698, 50698, 17995, 46410, 20262, 54, 56, 38, 13, 50794, 50794, 1743, 257, 688, 295, 561, 1029, 11, 4177, 11, 286, 362, 341, 17995, 12187, 294, 452, 8149, 13, 51160, 51160, 1664, 286, 12240, 309, 666, 2699, 76, 30, 51256, 51256, 1042, 11, 291, 727, 48377, 309, 281, 17995, 293, 550, 362, 300, 17995, 6063, 312, 44788, 666, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18438577139249412, "compression_ratio": 1.4345794392523366, "no_caption_prob": 2.5070952688110992e-05}, {"id": 737, "seek": 286932, "start": 2887.1600000000003, "end": 2895.0, "text": " Well, you could parse it to HTML and then have that HTML somehow be reversible into", "tokens": [50364, 400, 286, 519, 321, 603, 312, 2577, 544, 293, 544, 5821, 670, 565, 13, 50506, 50506, 865, 13, 50556, 50556, 876, 11, 291, 458, 437, 341, 727, 312, 1143, 337, 30, 50698, 50698, 17995, 46410, 20262, 54, 56, 38, 13, 50794, 50794, 1743, 257, 688, 295, 561, 1029, 11, 4177, 11, 286, 362, 341, 17995, 12187, 294, 452, 8149, 13, 51160, 51160, 1664, 286, 12240, 309, 666, 2699, 76, 30, 51256, 51256, 1042, 11, 291, 727, 48377, 309, 281, 17995, 293, 550, 362, 300, 17995, 6063, 312, 44788, 666, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.18438577139249412, "compression_ratio": 1.4345794392523366, "no_caption_prob": 2.5070952688110992e-05}, {"id": 738, "seek": 289500, "start": 2895.0, "end": 2900.12, "text": " a string but also viewable as an HTML from Elm HTML.", "tokens": [50364, 257, 6798, 457, 611, 1910, 712, 382, 364, 17995, 490, 2699, 76, 17995, 13, 50620, 50620, 286, 2041, 300, 393, 652, 2020, 13, 50728, 50728, 14711, 13, 50778, 50778, 286, 2041, 286, 478, 9650, 257, 688, 490, 527, 23274, 586, 13, 51006, 51006, 865, 11, 309, 311, 588, 1880, 13, 51210, 51210, 1485, 551, 300, 321, 2378, 380, 2835, 300, 286, 519, 307, 3163, 18315, 307, 291, 393, 611, 51494, 51494, 764, 341, 6532, 281, 38745, 5256, 2295, 1496, 17436, 2144, 4365, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1756445786048626, "compression_ratio": 1.5571428571428572, "no_caption_prob": 1.4738727259100415e-05}, {"id": 739, "seek": 289500, "start": 2900.12, "end": 2902.28, "text": " I guess that can make sense.", "tokens": [50364, 257, 6798, 457, 611, 1910, 712, 382, 364, 17995, 490, 2699, 76, 17995, 13, 50620, 50620, 286, 2041, 300, 393, 652, 2020, 13, 50728, 50728, 14711, 13, 50778, 50778, 286, 2041, 286, 478, 9650, 257, 688, 490, 527, 23274, 586, 13, 51006, 51006, 865, 11, 309, 311, 588, 1880, 13, 51210, 51210, 1485, 551, 300, 321, 2378, 380, 2835, 300, 286, 519, 307, 3163, 18315, 307, 291, 393, 611, 51494, 51494, 764, 341, 6532, 281, 38745, 5256, 2295, 1496, 17436, 2144, 4365, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1756445786048626, "compression_ratio": 1.5571428571428572, "no_caption_prob": 1.4738727259100415e-05}, {"id": 740, "seek": 289500, "start": 2902.28, "end": 2903.28, "text": " Interesting.", "tokens": [50364, 257, 6798, 457, 611, 1910, 712, 382, 364, 17995, 490, 2699, 76, 17995, 13, 50620, 50620, 286, 2041, 300, 393, 652, 2020, 13, 50728, 50728, 14711, 13, 50778, 50778, 286, 2041, 286, 478, 9650, 257, 688, 490, 527, 23274, 586, 13, 51006, 51006, 865, 11, 309, 311, 588, 1880, 13, 51210, 51210, 1485, 551, 300, 321, 2378, 380, 2835, 300, 286, 519, 307, 3163, 18315, 307, 291, 393, 611, 51494, 51494, 764, 341, 6532, 281, 38745, 5256, 2295, 1496, 17436, 2144, 4365, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1756445786048626, "compression_ratio": 1.5571428571428572, "no_caption_prob": 1.4738727259100415e-05}, {"id": 741, "seek": 289500, "start": 2903.28, "end": 2907.84, "text": " I guess I'm expecting a lot from our listeners now.", "tokens": [50364, 257, 6798, 457, 611, 1910, 712, 382, 364, 17995, 490, 2699, 76, 17995, 13, 50620, 50620, 286, 2041, 300, 393, 652, 2020, 13, 50728, 50728, 14711, 13, 50778, 50778, 286, 2041, 286, 478, 9650, 257, 688, 490, 527, 23274, 586, 13, 51006, 51006, 865, 11, 309, 311, 588, 1880, 13, 51210, 51210, 1485, 551, 300, 321, 2378, 380, 2835, 300, 286, 519, 307, 3163, 18315, 307, 291, 393, 611, 51494, 51494, 764, 341, 6532, 281, 38745, 5256, 2295, 1496, 17436, 2144, 4365, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1756445786048626, "compression_ratio": 1.5571428571428572, "no_caption_prob": 1.4738727259100415e-05}, {"id": 742, "seek": 289500, "start": 2907.84, "end": 2911.92, "text": " Yeah, it's very interesting.", "tokens": [50364, 257, 6798, 457, 611, 1910, 712, 382, 364, 17995, 490, 2699, 76, 17995, 13, 50620, 50620, 286, 2041, 300, 393, 652, 2020, 13, 50728, 50728, 14711, 13, 50778, 50778, 286, 2041, 286, 478, 9650, 257, 688, 490, 527, 23274, 586, 13, 51006, 51006, 865, 11, 309, 311, 588, 1880, 13, 51210, 51210, 1485, 551, 300, 321, 2378, 380, 2835, 300, 286, 519, 307, 3163, 18315, 307, 291, 393, 611, 51494, 51494, 764, 341, 6532, 281, 38745, 5256, 2295, 1496, 17436, 2144, 4365, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1756445786048626, "compression_ratio": 1.5571428571428572, "no_caption_prob": 1.4738727259100415e-05}, {"id": 743, "seek": 289500, "start": 2911.92, "end": 2917.6, "text": " One thing that we haven't mentioned that I think is worth mentioning is you can also", "tokens": [50364, 257, 6798, 457, 611, 1910, 712, 382, 364, 17995, 490, 2699, 76, 17995, 13, 50620, 50620, 286, 2041, 300, 393, 652, 2020, 13, 50728, 50728, 14711, 13, 50778, 50778, 286, 2041, 286, 478, 9650, 257, 688, 490, 527, 23274, 586, 13, 51006, 51006, 865, 11, 309, 311, 588, 1880, 13, 51210, 51210, 1485, 551, 300, 321, 2378, 380, 2835, 300, 286, 519, 307, 3163, 18315, 307, 291, 393, 611, 51494, 51494, 764, 341, 6532, 281, 38745, 5256, 2295, 1496, 17436, 2144, 4365, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1756445786048626, "compression_ratio": 1.5571428571428572, "no_caption_prob": 1.4738727259100415e-05}, {"id": 744, "seek": 289500, "start": 2917.6, "end": 2922.52, "text": " use this technique to encapsulate low level serialization details.", "tokens": [50364, 257, 6798, 457, 611, 1910, 712, 382, 364, 17995, 490, 2699, 76, 17995, 13, 50620, 50620, 286, 2041, 300, 393, 652, 2020, 13, 50728, 50728, 14711, 13, 50778, 50778, 286, 2041, 286, 478, 9650, 257, 688, 490, 527, 23274, 586, 13, 51006, 51006, 865, 11, 309, 311, 588, 1880, 13, 51210, 51210, 1485, 551, 300, 321, 2378, 380, 2835, 300, 286, 519, 307, 3163, 18315, 307, 291, 393, 611, 51494, 51494, 764, 341, 6532, 281, 38745, 5256, 2295, 1496, 17436, 2144, 4365, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1756445786048626, "compression_ratio": 1.5571428571428572, "no_caption_prob": 1.4738727259100415e-05}, {"id": 745, "seek": 292252, "start": 2922.52, "end": 2928.58, "text": " For example, if you wanted to serialize something into bytes, again, this is going to be something", "tokens": [50364, 1171, 1365, 11, 498, 291, 1415, 281, 17436, 1125, 746, 666, 36088, 11, 797, 11, 341, 307, 516, 281, 312, 746, 50667, 50667, 300, 291, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 293, 366, 1228, 264, 912, 3089, 281, 360, 1293, 11, 411, 51027, 51027, 17436, 3319, 512, 6257, 420, 269, 15095, 1412, 420, 2035, 309, 815, 312, 13, 51344, 51344, 1396, 309, 311, 257, 688, 295, 589, 281, 483, 257, 8944, 1364, 40846, 979, 19866, 293, 2058, 19866, 11, 597, 498, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10316420685161244, "compression_ratio": 1.6730769230769231, "no_caption_prob": 2.50699813477695e-05}, {"id": 746, "seek": 292252, "start": 2928.58, "end": 2935.78, "text": " that you control the serialization and deserialization and are using the same code to do both, like", "tokens": [50364, 1171, 1365, 11, 498, 291, 1415, 281, 17436, 1125, 746, 666, 36088, 11, 797, 11, 341, 307, 516, 281, 312, 746, 50667, 50667, 300, 291, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 293, 366, 1228, 264, 912, 3089, 281, 360, 1293, 11, 411, 51027, 51027, 17436, 3319, 512, 6257, 420, 269, 15095, 1412, 420, 2035, 309, 815, 312, 13, 51344, 51344, 1396, 309, 311, 257, 688, 295, 589, 281, 483, 257, 8944, 1364, 40846, 979, 19866, 293, 2058, 19866, 11, 597, 498, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10316420685161244, "compression_ratio": 1.6730769230769231, "no_caption_prob": 2.50699813477695e-05}, {"id": 747, "seek": 292252, "start": 2935.78, "end": 2942.12, "text": " serializing some settings or cached data or whatever it may be.", "tokens": [50364, 1171, 1365, 11, 498, 291, 1415, 281, 17436, 1125, 746, 666, 36088, 11, 797, 11, 341, 307, 516, 281, 312, 746, 50667, 50667, 300, 291, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 293, 366, 1228, 264, 912, 3089, 281, 360, 1293, 11, 411, 51027, 51027, 17436, 3319, 512, 6257, 420, 269, 15095, 1412, 420, 2035, 309, 815, 312, 13, 51344, 51344, 1396, 309, 311, 257, 688, 295, 589, 281, 483, 257, 8944, 1364, 40846, 979, 19866, 293, 2058, 19866, 11, 597, 498, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10316420685161244, "compression_ratio": 1.6730769230769231, "no_caption_prob": 2.50699813477695e-05}, {"id": 748, "seek": 292252, "start": 2942.12, "end": 2949.7599999999998, "text": " Then it's a lot of work to get a correctly working byte decoder and encoder, which if", "tokens": [50364, 1171, 1365, 11, 498, 291, 1415, 281, 17436, 1125, 746, 666, 36088, 11, 797, 11, 341, 307, 516, 281, 312, 746, 50667, 50667, 300, 291, 1969, 264, 17436, 2144, 293, 730, 260, 831, 2144, 293, 366, 1228, 264, 912, 3089, 281, 360, 1293, 11, 411, 51027, 51027, 17436, 3319, 512, 6257, 420, 269, 15095, 1412, 420, 2035, 309, 815, 312, 13, 51344, 51344, 1396, 309, 311, 257, 688, 295, 589, 281, 483, 257, 8944, 1364, 40846, 979, 19866, 293, 2058, 19866, 11, 597, 498, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.10316420685161244, "compression_ratio": 1.6730769230769231, "no_caption_prob": 2.50699813477695e-05}, {"id": 749, "seek": 294976, "start": 2949.76, "end": 2957.26, "text": " you're not familiar, I don't know when, like a year ago maybe, this official Elm bytes", "tokens": [50364, 291, 434, 406, 4963, 11, 286, 500, 380, 458, 562, 11, 411, 257, 1064, 2057, 1310, 11, 341, 4783, 2699, 76, 36088, 50739, 50739, 979, 8616, 7372, 390, 4736, 300, 4045, 291, 281, 360, 17434, 979, 8616, 293, 43430, 11, 597, 50980, 50980, 307, 1596, 1627, 13, 51102, 51102, 509, 393, 2844, 264, 1412, 666, 257, 709, 544, 36398, 1412, 7877, 293, 7263, 483, 512, 3389, 51386, 51386, 16823, 490, 300, 13, 51436, 51436, 5780, 767, 11, 286, 519, 300, 382, 1400, 382, 979, 8616, 264, 1412, 11, 31828, 979, 378, 433, 366, 4362, 51687, 51687, 588, 2370, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.08608138445511605, "compression_ratio": 1.578125, "no_caption_prob": 1.0289247256878298e-05}, {"id": 750, "seek": 294976, "start": 2957.26, "end": 2962.0800000000004, "text": " decoding package was released that allows you to do binary decoding and encoding, which", "tokens": [50364, 291, 434, 406, 4963, 11, 286, 500, 380, 458, 562, 11, 411, 257, 1064, 2057, 1310, 11, 341, 4783, 2699, 76, 36088, 50739, 50739, 979, 8616, 7372, 390, 4736, 300, 4045, 291, 281, 360, 17434, 979, 8616, 293, 43430, 11, 597, 50980, 50980, 307, 1596, 1627, 13, 51102, 51102, 509, 393, 2844, 264, 1412, 666, 257, 709, 544, 36398, 1412, 7877, 293, 7263, 483, 512, 3389, 51386, 51386, 16823, 490, 300, 13, 51436, 51436, 5780, 767, 11, 286, 519, 300, 382, 1400, 382, 979, 8616, 264, 1412, 11, 31828, 979, 378, 433, 366, 4362, 51687, 51687, 588, 2370, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.08608138445511605, "compression_ratio": 1.578125, "no_caption_prob": 1.0289247256878298e-05}, {"id": 751, "seek": 294976, "start": 2962.0800000000004, "end": 2964.5200000000004, "text": " is quite cool.", "tokens": [50364, 291, 434, 406, 4963, 11, 286, 500, 380, 458, 562, 11, 411, 257, 1064, 2057, 1310, 11, 341, 4783, 2699, 76, 36088, 50739, 50739, 979, 8616, 7372, 390, 4736, 300, 4045, 291, 281, 360, 17434, 979, 8616, 293, 43430, 11, 597, 50980, 50980, 307, 1596, 1627, 13, 51102, 51102, 509, 393, 2844, 264, 1412, 666, 257, 709, 544, 36398, 1412, 7877, 293, 7263, 483, 512, 3389, 51386, 51386, 16823, 490, 300, 13, 51436, 51436, 5780, 767, 11, 286, 519, 300, 382, 1400, 382, 979, 8616, 264, 1412, 11, 31828, 979, 378, 433, 366, 4362, 51687, 51687, 588, 2370, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.08608138445511605, "compression_ratio": 1.578125, "no_caption_prob": 1.0289247256878298e-05}, {"id": 752, "seek": 294976, "start": 2964.5200000000004, "end": 2970.2000000000003, "text": " You can pack the data into a much more condensed data format and potentially get some performance", "tokens": [50364, 291, 434, 406, 4963, 11, 286, 500, 380, 458, 562, 11, 411, 257, 1064, 2057, 1310, 11, 341, 4783, 2699, 76, 36088, 50739, 50739, 979, 8616, 7372, 390, 4736, 300, 4045, 291, 281, 360, 17434, 979, 8616, 293, 43430, 11, 597, 50980, 50980, 307, 1596, 1627, 13, 51102, 51102, 509, 393, 2844, 264, 1412, 666, 257, 709, 544, 36398, 1412, 7877, 293, 7263, 483, 512, 3389, 51386, 51386, 16823, 490, 300, 13, 51436, 51436, 5780, 767, 11, 286, 519, 300, 382, 1400, 382, 979, 8616, 264, 1412, 11, 31828, 979, 378, 433, 366, 4362, 51687, 51687, 588, 2370, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.08608138445511605, "compression_ratio": 1.578125, "no_caption_prob": 1.0289247256878298e-05}, {"id": 753, "seek": 294976, "start": 2970.2000000000003, "end": 2971.2000000000003, "text": " gains from that.", "tokens": [50364, 291, 434, 406, 4963, 11, 286, 500, 380, 458, 562, 11, 411, 257, 1064, 2057, 1310, 11, 341, 4783, 2699, 76, 36088, 50739, 50739, 979, 8616, 7372, 390, 4736, 300, 4045, 291, 281, 360, 17434, 979, 8616, 293, 43430, 11, 597, 50980, 50980, 307, 1596, 1627, 13, 51102, 51102, 509, 393, 2844, 264, 1412, 666, 257, 709, 544, 36398, 1412, 7877, 293, 7263, 483, 512, 3389, 51386, 51386, 16823, 490, 300, 13, 51436, 51436, 5780, 767, 11, 286, 519, 300, 382, 1400, 382, 979, 8616, 264, 1412, 11, 31828, 979, 378, 433, 366, 4362, 51687, 51687, 588, 2370, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.08608138445511605, "compression_ratio": 1.578125, "no_caption_prob": 1.0289247256878298e-05}, {"id": 754, "seek": 294976, "start": 2971.2000000000003, "end": 2976.2200000000003, "text": " Although actually, I think that as far as decoding the data, JSON decoders are currently", "tokens": [50364, 291, 434, 406, 4963, 11, 286, 500, 380, 458, 562, 11, 411, 257, 1064, 2057, 1310, 11, 341, 4783, 2699, 76, 36088, 50739, 50739, 979, 8616, 7372, 390, 4736, 300, 4045, 291, 281, 360, 17434, 979, 8616, 293, 43430, 11, 597, 50980, 50980, 307, 1596, 1627, 13, 51102, 51102, 509, 393, 2844, 264, 1412, 666, 257, 709, 544, 36398, 1412, 7877, 293, 7263, 483, 512, 3389, 51386, 51386, 16823, 490, 300, 13, 51436, 51436, 5780, 767, 11, 286, 519, 300, 382, 1400, 382, 979, 8616, 264, 1412, 11, 31828, 979, 378, 433, 366, 4362, 51687, 51687, 588, 2370, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.08608138445511605, "compression_ratio": 1.578125, "no_caption_prob": 1.0289247256878298e-05}, {"id": 755, "seek": 294976, "start": 2976.2200000000003, "end": 2977.2200000000003, "text": " very fast.", "tokens": [50364, 291, 434, 406, 4963, 11, 286, 500, 380, 458, 562, 11, 411, 257, 1064, 2057, 1310, 11, 341, 4783, 2699, 76, 36088, 50739, 50739, 979, 8616, 7372, 390, 4736, 300, 4045, 291, 281, 360, 17434, 979, 8616, 293, 43430, 11, 597, 50980, 50980, 307, 1596, 1627, 13, 51102, 51102, 509, 393, 2844, 264, 1412, 666, 257, 709, 544, 36398, 1412, 7877, 293, 7263, 483, 512, 3389, 51386, 51386, 16823, 490, 300, 13, 51436, 51436, 5780, 767, 11, 286, 519, 300, 382, 1400, 382, 979, 8616, 264, 1412, 11, 31828, 979, 378, 433, 366, 4362, 51687, 51687, 588, 2370, 13, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.08608138445511605, "compression_ratio": 1.578125, "no_caption_prob": 1.0289247256878298e-05}, {"id": 756, "seek": 297722, "start": 2977.22, "end": 2980.9199999999996, "text": " That may change with WebAssembly at some point.", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 757, "seek": 297722, "start": 2980.9199999999996, "end": 2985.8399999999997, "text": " For Elm Review, I still use the JSON optimized version and not the bytes because you can't", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 758, "seek": 297722, "start": 2985.8399999999997, "end": 2989.3999999999996, "text": " send bytes over ports for now.", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 759, "seek": 297722, "start": 2989.3999999999996, "end": 2990.3999999999996, "text": " Got it.", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 760, "seek": 297722, "start": 2990.3999999999996, "end": 2991.3999999999996, "text": " Interesting.", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 761, "seek": 297722, "start": 2991.3999999999996, "end": 2997.04, "text": " Okay, so you have to serialize the bytes to some sort of like base64 encoded string,", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 762, "seek": 297722, "start": 2997.04, "end": 3001.4399999999996, "text": " which represents bytes, but it's not actually directly sending bytes.", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 763, "seek": 297722, "start": 3001.4399999999996, "end": 3006.9599999999996, "text": " Which in my case was less performance according to benchmarks.", "tokens": [50364, 663, 815, 1319, 365, 9573, 10884, 19160, 412, 512, 935, 13, 50549, 50549, 1171, 2699, 76, 19954, 11, 286, 920, 764, 264, 31828, 26941, 3037, 293, 406, 264, 36088, 570, 291, 393, 380, 50795, 50795, 2845, 36088, 670, 18160, 337, 586, 13, 50973, 50973, 5803, 309, 13, 51023, 51023, 14711, 13, 51073, 51073, 1033, 11, 370, 291, 362, 281, 17436, 1125, 264, 36088, 281, 512, 1333, 295, 411, 3096, 19395, 2058, 12340, 6798, 11, 51355, 51355, 597, 8855, 36088, 11, 457, 309, 311, 406, 767, 3838, 7750, 36088, 13, 51575, 51575, 3013, 294, 452, 1389, 390, 1570, 3389, 4650, 281, 43751, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.21061181122401976, "compression_ratio": 1.5055350553505535, "no_caption_prob": 9.665785000834148e-06}, {"id": 764, "seek": 300696, "start": 3006.96, "end": 3013.32, "text": " So the decoding and encoding portion may be slower, and it is slower, than if you were", "tokens": [50364, 407, 264, 979, 8616, 293, 43430, 8044, 815, 312, 14009, 11, 293, 309, 307, 14009, 11, 813, 498, 291, 645, 50682, 50682, 979, 8616, 293, 43430, 31828, 11, 457, 264, 6725, 307, 4356, 13, 50978, 50978, 407, 472, 551, 300, 321, 2378, 380, 9828, 322, 307, 300, 286, 519, 300, 309, 311, 257, 688, 295, 589, 281, 483, 51284, 51284, 257, 40846, 979, 19866, 293, 2058, 19866, 17189, 493, 8944, 13, 51463, 51463, 407, 456, 366, 1629, 4365, 11, 411, 365, 36088, 11, 309, 311, 709, 544, 2295, 1496, 813, 31828, 979, 8616, 51708, 51708, 293, 43430, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11064856660132315, "compression_ratio": 1.7720930232558139, "no_caption_prob": 1.0451436537550762e-05}, {"id": 765, "seek": 300696, "start": 3013.32, "end": 3019.2400000000002, "text": " decoding and encoding JSON, but the storage is smaller.", "tokens": [50364, 407, 264, 979, 8616, 293, 43430, 8044, 815, 312, 14009, 11, 293, 309, 307, 14009, 11, 813, 498, 291, 645, 50682, 50682, 979, 8616, 293, 43430, 31828, 11, 457, 264, 6725, 307, 4356, 13, 50978, 50978, 407, 472, 551, 300, 321, 2378, 380, 9828, 322, 307, 300, 286, 519, 300, 309, 311, 257, 688, 295, 589, 281, 483, 51284, 51284, 257, 40846, 979, 19866, 293, 2058, 19866, 17189, 493, 8944, 13, 51463, 51463, 407, 456, 366, 1629, 4365, 11, 411, 365, 36088, 11, 309, 311, 709, 544, 2295, 1496, 813, 31828, 979, 8616, 51708, 51708, 293, 43430, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11064856660132315, "compression_ratio": 1.7720930232558139, "no_caption_prob": 1.0451436537550762e-05}, {"id": 766, "seek": 300696, "start": 3019.2400000000002, "end": 3025.36, "text": " So one thing that we haven't touched on is that I think that it's a lot of work to get", "tokens": [50364, 407, 264, 979, 8616, 293, 43430, 8044, 815, 312, 14009, 11, 293, 309, 307, 14009, 11, 813, 498, 291, 645, 50682, 50682, 979, 8616, 293, 43430, 31828, 11, 457, 264, 6725, 307, 4356, 13, 50978, 50978, 407, 472, 551, 300, 321, 2378, 380, 9828, 322, 307, 300, 286, 519, 300, 309, 311, 257, 688, 295, 589, 281, 483, 51284, 51284, 257, 40846, 979, 19866, 293, 2058, 19866, 17189, 493, 8944, 13, 51463, 51463, 407, 456, 366, 1629, 4365, 11, 411, 365, 36088, 11, 309, 311, 709, 544, 2295, 1496, 813, 31828, 979, 8616, 51708, 51708, 293, 43430, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11064856660132315, "compression_ratio": 1.7720930232558139, "no_caption_prob": 1.0451436537550762e-05}, {"id": 767, "seek": 300696, "start": 3025.36, "end": 3028.94, "text": " a byte decoder and encoder lined up correctly.", "tokens": [50364, 407, 264, 979, 8616, 293, 43430, 8044, 815, 312, 14009, 11, 293, 309, 307, 14009, 11, 813, 498, 291, 645, 50682, 50682, 979, 8616, 293, 43430, 31828, 11, 457, 264, 6725, 307, 4356, 13, 50978, 50978, 407, 472, 551, 300, 321, 2378, 380, 9828, 322, 307, 300, 286, 519, 300, 309, 311, 257, 688, 295, 589, 281, 483, 51284, 51284, 257, 40846, 979, 19866, 293, 2058, 19866, 17189, 493, 8944, 13, 51463, 51463, 407, 456, 366, 1629, 4365, 11, 411, 365, 36088, 11, 309, 311, 709, 544, 2295, 1496, 813, 31828, 979, 8616, 51708, 51708, 293, 43430, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11064856660132315, "compression_ratio": 1.7720930232558139, "no_caption_prob": 1.0451436537550762e-05}, {"id": 768, "seek": 300696, "start": 3028.94, "end": 3033.84, "text": " So there are certain details, like with bytes, it's much more low level than JSON decoding", "tokens": [50364, 407, 264, 979, 8616, 293, 43430, 8044, 815, 312, 14009, 11, 293, 309, 307, 14009, 11, 813, 498, 291, 645, 50682, 50682, 979, 8616, 293, 43430, 31828, 11, 457, 264, 6725, 307, 4356, 13, 50978, 50978, 407, 472, 551, 300, 321, 2378, 380, 9828, 322, 307, 300, 286, 519, 300, 309, 311, 257, 688, 295, 589, 281, 483, 51284, 51284, 257, 40846, 979, 19866, 293, 2058, 19866, 17189, 493, 8944, 13, 51463, 51463, 407, 456, 366, 1629, 4365, 11, 411, 365, 36088, 11, 309, 311, 709, 544, 2295, 1496, 813, 31828, 979, 8616, 51708, 51708, 293, 43430, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11064856660132315, "compression_ratio": 1.7720930232558139, "no_caption_prob": 1.0451436537550762e-05}, {"id": 769, "seek": 300696, "start": 3033.84, "end": 3034.96, "text": " and encoding.", "tokens": [50364, 407, 264, 979, 8616, 293, 43430, 8044, 815, 312, 14009, 11, 293, 309, 307, 14009, 11, 813, 498, 291, 645, 50682, 50682, 979, 8616, 293, 43430, 31828, 11, 457, 264, 6725, 307, 4356, 13, 50978, 50978, 407, 472, 551, 300, 321, 2378, 380, 9828, 322, 307, 300, 286, 519, 300, 309, 311, 257, 688, 295, 589, 281, 483, 51284, 51284, 257, 40846, 979, 19866, 293, 2058, 19866, 17189, 493, 8944, 13, 51463, 51463, 407, 456, 366, 1629, 4365, 11, 411, 365, 36088, 11, 309, 311, 709, 544, 2295, 1496, 813, 31828, 979, 8616, 51708, 51708, 293, 43430, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11064856660132315, "compression_ratio": 1.7720930232558139, "no_caption_prob": 1.0451436537550762e-05}, {"id": 770, "seek": 303496, "start": 3034.96, "end": 3042.2, "text": " So if you have a list in JSON, it just is going to have an opening array and a closing", "tokens": [50364, 407, 498, 291, 362, 257, 1329, 294, 31828, 11, 309, 445, 307, 516, 281, 362, 364, 5193, 10225, 293, 257, 10377, 50726, 50726, 10225, 24657, 13, 50814, 50814, 1171, 36088, 11, 456, 311, 572, 1270, 551, 13, 50940, 50940, 509, 362, 281, 980, 309, 562, 281, 722, 1237, 337, 257, 1329, 11, 562, 281, 1590, 1237, 337, 257, 1329, 11, 51162, 51162, 597, 1355, 300, 291, 434, 5850, 516, 281, 2058, 1429, 11, 291, 643, 281, 2058, 1429, 264, 1900, 1230, 51360, 51360, 295, 36088, 281, 14732, 1826, 291, 1590, 15083, 309, 382, 300, 1329, 13, 51628, 51628, 400, 370, 300, 311, 588, 2295, 1496, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.10208363966508345, "compression_ratio": 1.728448275862069, "no_caption_prob": 9.818124453886412e-06}, {"id": 771, "seek": 303496, "start": 3042.2, "end": 3043.96, "text": " array notation.", "tokens": [50364, 407, 498, 291, 362, 257, 1329, 294, 31828, 11, 309, 445, 307, 516, 281, 362, 364, 5193, 10225, 293, 257, 10377, 50726, 50726, 10225, 24657, 13, 50814, 50814, 1171, 36088, 11, 456, 311, 572, 1270, 551, 13, 50940, 50940, 509, 362, 281, 980, 309, 562, 281, 722, 1237, 337, 257, 1329, 11, 562, 281, 1590, 1237, 337, 257, 1329, 11, 51162, 51162, 597, 1355, 300, 291, 434, 5850, 516, 281, 2058, 1429, 11, 291, 643, 281, 2058, 1429, 264, 1900, 1230, 51360, 51360, 295, 36088, 281, 14732, 1826, 291, 1590, 15083, 309, 382, 300, 1329, 13, 51628, 51628, 400, 370, 300, 311, 588, 2295, 1496, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.10208363966508345, "compression_ratio": 1.728448275862069, "no_caption_prob": 9.818124453886412e-06}, {"id": 772, "seek": 303496, "start": 3043.96, "end": 3046.48, "text": " For bytes, there's no such thing.", "tokens": [50364, 407, 498, 291, 362, 257, 1329, 294, 31828, 11, 309, 445, 307, 516, 281, 362, 364, 5193, 10225, 293, 257, 10377, 50726, 50726, 10225, 24657, 13, 50814, 50814, 1171, 36088, 11, 456, 311, 572, 1270, 551, 13, 50940, 50940, 509, 362, 281, 980, 309, 562, 281, 722, 1237, 337, 257, 1329, 11, 562, 281, 1590, 1237, 337, 257, 1329, 11, 51162, 51162, 597, 1355, 300, 291, 434, 5850, 516, 281, 2058, 1429, 11, 291, 643, 281, 2058, 1429, 264, 1900, 1230, 51360, 51360, 295, 36088, 281, 14732, 1826, 291, 1590, 15083, 309, 382, 300, 1329, 13, 51628, 51628, 400, 370, 300, 311, 588, 2295, 1496, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.10208363966508345, "compression_ratio": 1.728448275862069, "no_caption_prob": 9.818124453886412e-06}, {"id": 773, "seek": 303496, "start": 3046.48, "end": 3050.92, "text": " You have to tell it when to start looking for a list, when to stop looking for a list,", "tokens": [50364, 407, 498, 291, 362, 257, 1329, 294, 31828, 11, 309, 445, 307, 516, 281, 362, 364, 5193, 10225, 293, 257, 10377, 50726, 50726, 10225, 24657, 13, 50814, 50814, 1171, 36088, 11, 456, 311, 572, 1270, 551, 13, 50940, 50940, 509, 362, 281, 980, 309, 562, 281, 722, 1237, 337, 257, 1329, 11, 562, 281, 1590, 1237, 337, 257, 1329, 11, 51162, 51162, 597, 1355, 300, 291, 434, 5850, 516, 281, 2058, 1429, 11, 291, 643, 281, 2058, 1429, 264, 1900, 1230, 51360, 51360, 295, 36088, 281, 14732, 1826, 291, 1590, 15083, 309, 382, 300, 1329, 13, 51628, 51628, 400, 370, 300, 311, 588, 2295, 1496, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.10208363966508345, "compression_ratio": 1.728448275862069, "no_caption_prob": 9.818124453886412e-06}, {"id": 774, "seek": 303496, "start": 3050.92, "end": 3054.88, "text": " which means that you're typically going to encode, you need to encode the exact number", "tokens": [50364, 407, 498, 291, 362, 257, 1329, 294, 31828, 11, 309, 445, 307, 516, 281, 362, 364, 5193, 10225, 293, 257, 10377, 50726, 50726, 10225, 24657, 13, 50814, 50814, 1171, 36088, 11, 456, 311, 572, 1270, 551, 13, 50940, 50940, 509, 362, 281, 980, 309, 562, 281, 722, 1237, 337, 257, 1329, 11, 562, 281, 1590, 1237, 337, 257, 1329, 11, 51162, 51162, 597, 1355, 300, 291, 434, 5850, 516, 281, 2058, 1429, 11, 291, 643, 281, 2058, 1429, 264, 1900, 1230, 51360, 51360, 295, 36088, 281, 14732, 1826, 291, 1590, 15083, 309, 382, 300, 1329, 13, 51628, 51628, 400, 370, 300, 311, 588, 2295, 1496, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.10208363966508345, "compression_ratio": 1.728448275862069, "no_caption_prob": 9.818124453886412e-06}, {"id": 775, "seek": 303496, "start": 3054.88, "end": 3060.2400000000002, "text": " of bytes to consume until you stop treating it as that list.", "tokens": [50364, 407, 498, 291, 362, 257, 1329, 294, 31828, 11, 309, 445, 307, 516, 281, 362, 364, 5193, 10225, 293, 257, 10377, 50726, 50726, 10225, 24657, 13, 50814, 50814, 1171, 36088, 11, 456, 311, 572, 1270, 551, 13, 50940, 50940, 509, 362, 281, 980, 309, 562, 281, 722, 1237, 337, 257, 1329, 11, 562, 281, 1590, 1237, 337, 257, 1329, 11, 51162, 51162, 597, 1355, 300, 291, 434, 5850, 516, 281, 2058, 1429, 11, 291, 643, 281, 2058, 1429, 264, 1900, 1230, 51360, 51360, 295, 36088, 281, 14732, 1826, 291, 1590, 15083, 309, 382, 300, 1329, 13, 51628, 51628, 400, 370, 300, 311, 588, 2295, 1496, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.10208363966508345, "compression_ratio": 1.728448275862069, "no_caption_prob": 9.818124453886412e-06}, {"id": 776, "seek": 303496, "start": 3060.2400000000002, "end": 3062.6, "text": " And so that's very low level.", "tokens": [50364, 407, 498, 291, 362, 257, 1329, 294, 31828, 11, 309, 445, 307, 516, 281, 362, 364, 5193, 10225, 293, 257, 10377, 50726, 50726, 10225, 24657, 13, 50814, 50814, 1171, 36088, 11, 456, 311, 572, 1270, 551, 13, 50940, 50940, 509, 362, 281, 980, 309, 562, 281, 722, 1237, 337, 257, 1329, 11, 562, 281, 1590, 1237, 337, 257, 1329, 11, 51162, 51162, 597, 1355, 300, 291, 434, 5850, 516, 281, 2058, 1429, 11, 291, 643, 281, 2058, 1429, 264, 1900, 1230, 51360, 51360, 295, 36088, 281, 14732, 1826, 291, 1590, 15083, 309, 382, 300, 1329, 13, 51628, 51628, 400, 370, 300, 311, 588, 2295, 1496, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.10208363966508345, "compression_ratio": 1.728448275862069, "no_caption_prob": 9.818124453886412e-06}, {"id": 777, "seek": 306260, "start": 3062.6, "end": 3067.2, "text": " But if you're using a package that does like a codec for your bytes, then it can build", "tokens": [50364, 583, 498, 291, 434, 1228, 257, 7372, 300, 775, 411, 257, 3089, 66, 337, 428, 36088, 11, 550, 309, 393, 1322, 50594, 50594, 294, 300, 15302, 466, 577, 309, 2058, 4789, 300, 13, 50696, 50696, 407, 309, 1619, 11, 286, 478, 516, 281, 2058, 1429, 257, 1230, 412, 341, 2535, 337, 36088, 13, 51002, 51002, 400, 291, 458, 11, 293, 309, 2058, 4789, 11, 286, 478, 988, 309, 2058, 4789, 17695, 466, 411, 955, 917, 952, 51222, 51222, 420, 707, 917, 952, 886, 11, 293, 721, 411, 300, 11, 558, 30, 51402, 51402, 467, 311, 257, 688, 544, 1090, 1496, 6260, 365, 257, 7372, 411, 341, 13, 51536, 51536, 407, 309, 311, 406, 445, 300, 456, 366, 13366, 721, 291, 393, 483, 2085, 490, 264, 979, 8616, 43430, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.12425759344389944, "compression_ratio": 1.7773722627737227, "no_caption_prob": 1.0952912816719618e-05}, {"id": 778, "seek": 306260, "start": 3067.2, "end": 3069.24, "text": " in that assumption about how it encodes that.", "tokens": [50364, 583, 498, 291, 434, 1228, 257, 7372, 300, 775, 411, 257, 3089, 66, 337, 428, 36088, 11, 550, 309, 393, 1322, 50594, 50594, 294, 300, 15302, 466, 577, 309, 2058, 4789, 300, 13, 50696, 50696, 407, 309, 1619, 11, 286, 478, 516, 281, 2058, 1429, 257, 1230, 412, 341, 2535, 337, 36088, 13, 51002, 51002, 400, 291, 458, 11, 293, 309, 2058, 4789, 11, 286, 478, 988, 309, 2058, 4789, 17695, 466, 411, 955, 917, 952, 51222, 51222, 420, 707, 917, 952, 886, 11, 293, 721, 411, 300, 11, 558, 30, 51402, 51402, 467, 311, 257, 688, 544, 1090, 1496, 6260, 365, 257, 7372, 411, 341, 13, 51536, 51536, 407, 309, 311, 406, 445, 300, 456, 366, 13366, 721, 291, 393, 483, 2085, 490, 264, 979, 8616, 43430, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.12425759344389944, "compression_ratio": 1.7773722627737227, "no_caption_prob": 1.0952912816719618e-05}, {"id": 779, "seek": 306260, "start": 3069.24, "end": 3075.36, "text": " So it says, I'm going to encode a number at this position for bytes.", "tokens": [50364, 583, 498, 291, 434, 1228, 257, 7372, 300, 775, 411, 257, 3089, 66, 337, 428, 36088, 11, 550, 309, 393, 1322, 50594, 50594, 294, 300, 15302, 466, 577, 309, 2058, 4789, 300, 13, 50696, 50696, 407, 309, 1619, 11, 286, 478, 516, 281, 2058, 1429, 257, 1230, 412, 341, 2535, 337, 36088, 13, 51002, 51002, 400, 291, 458, 11, 293, 309, 2058, 4789, 11, 286, 478, 988, 309, 2058, 4789, 17695, 466, 411, 955, 917, 952, 51222, 51222, 420, 707, 917, 952, 886, 11, 293, 721, 411, 300, 11, 558, 30, 51402, 51402, 467, 311, 257, 688, 544, 1090, 1496, 6260, 365, 257, 7372, 411, 341, 13, 51536, 51536, 407, 309, 311, 406, 445, 300, 456, 366, 13366, 721, 291, 393, 483, 2085, 490, 264, 979, 8616, 43430, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.12425759344389944, "compression_ratio": 1.7773722627737227, "no_caption_prob": 1.0952912816719618e-05}, {"id": 780, "seek": 306260, "start": 3075.36, "end": 3079.7599999999998, "text": " And you know, and it encodes, I'm sure it encodes assumptions about like big endian", "tokens": [50364, 583, 498, 291, 434, 1228, 257, 7372, 300, 775, 411, 257, 3089, 66, 337, 428, 36088, 11, 550, 309, 393, 1322, 50594, 50594, 294, 300, 15302, 466, 577, 309, 2058, 4789, 300, 13, 50696, 50696, 407, 309, 1619, 11, 286, 478, 516, 281, 2058, 1429, 257, 1230, 412, 341, 2535, 337, 36088, 13, 51002, 51002, 400, 291, 458, 11, 293, 309, 2058, 4789, 11, 286, 478, 988, 309, 2058, 4789, 17695, 466, 411, 955, 917, 952, 51222, 51222, 420, 707, 917, 952, 886, 11, 293, 721, 411, 300, 11, 558, 30, 51402, 51402, 467, 311, 257, 688, 544, 1090, 1496, 6260, 365, 257, 7372, 411, 341, 13, 51536, 51536, 407, 309, 311, 406, 445, 300, 456, 366, 13366, 721, 291, 393, 483, 2085, 490, 264, 979, 8616, 43430, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.12425759344389944, "compression_ratio": 1.7773722627737227, "no_caption_prob": 1.0952912816719618e-05}, {"id": 781, "seek": 306260, "start": 3079.7599999999998, "end": 3083.36, "text": " or little endian too, and things like that, right?", "tokens": [50364, 583, 498, 291, 434, 1228, 257, 7372, 300, 775, 411, 257, 3089, 66, 337, 428, 36088, 11, 550, 309, 393, 1322, 50594, 50594, 294, 300, 15302, 466, 577, 309, 2058, 4789, 300, 13, 50696, 50696, 407, 309, 1619, 11, 286, 478, 516, 281, 2058, 1429, 257, 1230, 412, 341, 2535, 337, 36088, 13, 51002, 51002, 400, 291, 458, 11, 293, 309, 2058, 4789, 11, 286, 478, 988, 309, 2058, 4789, 17695, 466, 411, 955, 917, 952, 51222, 51222, 420, 707, 917, 952, 886, 11, 293, 721, 411, 300, 11, 558, 30, 51402, 51402, 467, 311, 257, 688, 544, 1090, 1496, 6260, 365, 257, 7372, 411, 341, 13, 51536, 51536, 407, 309, 311, 406, 445, 300, 456, 366, 13366, 721, 291, 393, 483, 2085, 490, 264, 979, 8616, 43430, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.12425759344389944, "compression_ratio": 1.7773722627737227, "no_caption_prob": 1.0952912816719618e-05}, {"id": 782, "seek": 306260, "start": 3083.36, "end": 3086.04, "text": " It's a lot more high level dealing with a package like this.", "tokens": [50364, 583, 498, 291, 434, 1228, 257, 7372, 300, 775, 411, 257, 3089, 66, 337, 428, 36088, 11, 550, 309, 393, 1322, 50594, 50594, 294, 300, 15302, 466, 577, 309, 2058, 4789, 300, 13, 50696, 50696, 407, 309, 1619, 11, 286, 478, 516, 281, 2058, 1429, 257, 1230, 412, 341, 2535, 337, 36088, 13, 51002, 51002, 400, 291, 458, 11, 293, 309, 2058, 4789, 11, 286, 478, 988, 309, 2058, 4789, 17695, 466, 411, 955, 917, 952, 51222, 51222, 420, 707, 917, 952, 886, 11, 293, 721, 411, 300, 11, 558, 30, 51402, 51402, 467, 311, 257, 688, 544, 1090, 1496, 6260, 365, 257, 7372, 411, 341, 13, 51536, 51536, 407, 309, 311, 406, 445, 300, 456, 366, 13366, 721, 291, 393, 483, 2085, 490, 264, 979, 8616, 43430, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.12425759344389944, "compression_ratio": 1.7773722627737227, "no_caption_prob": 1.0952912816719618e-05}, {"id": 783, "seek": 306260, "start": 3086.04, "end": 3090.64, "text": " So it's not just that there are fewer things you can get wrong from the decoding encoding", "tokens": [50364, 583, 498, 291, 434, 1228, 257, 7372, 300, 775, 411, 257, 3089, 66, 337, 428, 36088, 11, 550, 309, 393, 1322, 50594, 50594, 294, 300, 15302, 466, 577, 309, 2058, 4789, 300, 13, 50696, 50696, 407, 309, 1619, 11, 286, 478, 516, 281, 2058, 1429, 257, 1230, 412, 341, 2535, 337, 36088, 13, 51002, 51002, 400, 291, 458, 11, 293, 309, 2058, 4789, 11, 286, 478, 988, 309, 2058, 4789, 17695, 466, 411, 955, 917, 952, 51222, 51222, 420, 707, 917, 952, 886, 11, 293, 721, 411, 300, 11, 558, 30, 51402, 51402, 467, 311, 257, 688, 544, 1090, 1496, 6260, 365, 257, 7372, 411, 341, 13, 51536, 51536, 407, 309, 311, 406, 445, 300, 456, 366, 13366, 721, 291, 393, 483, 2085, 490, 264, 979, 8616, 43430, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.12425759344389944, "compression_ratio": 1.7773722627737227, "no_caption_prob": 1.0952912816719618e-05}, {"id": 784, "seek": 309064, "start": 3090.64, "end": 3095.3599999999997, "text": " perspective, but it can handle some of those low level serialization details.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 785, "seek": 309064, "start": 3095.3599999999997, "end": 3096.3599999999997, "text": " Definitely.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 786, "seek": 309064, "start": 3096.3599999999997, "end": 3098.92, "text": " Bytes have been out for two years apparently already.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 787, "seek": 309064, "start": 3098.92, "end": 3099.92, "text": " Two years, nice.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 788, "seek": 309064, "start": 3099.92, "end": 3100.92, "text": " Yeah, in November.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 789, "seek": 309064, "start": 3100.92, "end": 3106.12, "text": " So by the time this episode airs, I think it will have been two years.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 790, "seek": 309064, "start": 3106.12, "end": 3107.56, "text": " Very nice.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 791, "seek": 309064, "start": 3107.56, "end": 3111.96, "text": " We're just starting to see a lot of explorations happening with bytes, I feel like now.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 792, "seek": 309064, "start": 3111.96, "end": 3113.56, "text": " Yeah, that'd be pretty cool.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 793, "seek": 309064, "start": 3113.56, "end": 3114.56, "text": " Yeah.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 794, "seek": 309064, "start": 3114.56, "end": 3115.56, "text": " To see more.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 795, "seek": 309064, "start": 3115.56, "end": 3116.56, "text": " Yeah.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 796, "seek": 309064, "start": 3116.56, "end": 3117.56, "text": " Well, good stuff.", "tokens": [50364, 4585, 11, 457, 309, 393, 4813, 512, 295, 729, 2295, 1496, 17436, 2144, 4365, 13, 50600, 50600, 12151, 13, 50650, 50650, 3146, 7269, 362, 668, 484, 337, 732, 924, 7970, 1217, 13, 50778, 50778, 4453, 924, 11, 1481, 13, 50828, 50828, 865, 11, 294, 7674, 13, 50878, 50878, 407, 538, 264, 565, 341, 3500, 1988, 82, 11, 286, 519, 309, 486, 362, 668, 732, 924, 13, 51138, 51138, 4372, 1481, 13, 51210, 51210, 492, 434, 445, 2891, 281, 536, 257, 688, 295, 24765, 763, 2737, 365, 36088, 11, 286, 841, 411, 586, 13, 51430, 51430, 865, 11, 300, 1116, 312, 1238, 1627, 13, 51510, 51510, 865, 13, 51560, 51560, 1407, 536, 544, 13, 51610, 51610, 865, 13, 51660, 51660, 1042, 11, 665, 1507, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.22213861346244812, "compression_ratio": 1.588679245283019, "no_caption_prob": 2.8408960133674555e-05}, {"id": 797, "seek": 311756, "start": 3117.56, "end": 3123.4, "text": " Are there any words of wisdom we want to leave for listeners about how to get started?", "tokens": [50364, 2014, 456, 604, 2283, 295, 10712, 321, 528, 281, 1856, 337, 23274, 466, 577, 281, 483, 1409, 30, 50656, 50656, 2305, 281, 574, 337, 4786, 281, 764, 341, 5102, 30, 50792, 50792, 286, 478, 406, 988, 286, 362, 1340, 3163, 5414, 510, 13, 51026, 51026, 1119, 309, 3163, 1228, 2699, 76, 3089, 66, 337, 31828, 30, 51178, 51178, 400, 366, 456, 4786, 11, 291, 458, 11, 300, 291, 519, 291, 727, 915, 281, 764, 309, 11, 291, 458, 11, 51436, 51436, 294, 264, 3089, 17949, 291, 589, 365, 420, 30, 51532, 51532, 286, 764, 309, 337, 269, 2834, 11, 382, 286, 2835, 949, 11, 293, 286, 519, 300, 311, 257, 869, 2650, 337, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12989864186343983, "compression_ratio": 1.6923076923076923, "no_caption_prob": 0.00015114391862880439}, {"id": 798, "seek": 311756, "start": 3123.4, "end": 3126.12, "text": " Where to look for opportunities to use this pattern?", "tokens": [50364, 2014, 456, 604, 2283, 295, 10712, 321, 528, 281, 1856, 337, 23274, 466, 577, 281, 483, 1409, 30, 50656, 50656, 2305, 281, 574, 337, 4786, 281, 764, 341, 5102, 30, 50792, 50792, 286, 478, 406, 988, 286, 362, 1340, 3163, 5414, 510, 13, 51026, 51026, 1119, 309, 3163, 1228, 2699, 76, 3089, 66, 337, 31828, 30, 51178, 51178, 400, 366, 456, 4786, 11, 291, 458, 11, 300, 291, 519, 291, 727, 915, 281, 764, 309, 11, 291, 458, 11, 51436, 51436, 294, 264, 3089, 17949, 291, 589, 365, 420, 30, 51532, 51532, 286, 764, 309, 337, 269, 2834, 11, 382, 286, 2835, 949, 11, 293, 286, 519, 300, 311, 257, 869, 2650, 337, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12989864186343983, "compression_ratio": 1.6923076923076923, "no_caption_prob": 0.00015114391862880439}, {"id": 799, "seek": 311756, "start": 3126.12, "end": 3130.7999999999997, "text": " I'm not sure I have anything worth sharing here.", "tokens": [50364, 2014, 456, 604, 2283, 295, 10712, 321, 528, 281, 1856, 337, 23274, 466, 577, 281, 483, 1409, 30, 50656, 50656, 2305, 281, 574, 337, 4786, 281, 764, 341, 5102, 30, 50792, 50792, 286, 478, 406, 988, 286, 362, 1340, 3163, 5414, 510, 13, 51026, 51026, 1119, 309, 3163, 1228, 2699, 76, 3089, 66, 337, 31828, 30, 51178, 51178, 400, 366, 456, 4786, 11, 291, 458, 11, 300, 291, 519, 291, 727, 915, 281, 764, 309, 11, 291, 458, 11, 51436, 51436, 294, 264, 3089, 17949, 291, 589, 365, 420, 30, 51532, 51532, 286, 764, 309, 337, 269, 2834, 11, 382, 286, 2835, 949, 11, 293, 286, 519, 300, 311, 257, 869, 2650, 337, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12989864186343983, "compression_ratio": 1.6923076923076923, "no_caption_prob": 0.00015114391862880439}, {"id": 800, "seek": 311756, "start": 3130.7999999999997, "end": 3133.84, "text": " Is it worth using Elm codec for JSON?", "tokens": [50364, 2014, 456, 604, 2283, 295, 10712, 321, 528, 281, 1856, 337, 23274, 466, 577, 281, 483, 1409, 30, 50656, 50656, 2305, 281, 574, 337, 4786, 281, 764, 341, 5102, 30, 50792, 50792, 286, 478, 406, 988, 286, 362, 1340, 3163, 5414, 510, 13, 51026, 51026, 1119, 309, 3163, 1228, 2699, 76, 3089, 66, 337, 31828, 30, 51178, 51178, 400, 366, 456, 4786, 11, 291, 458, 11, 300, 291, 519, 291, 727, 915, 281, 764, 309, 11, 291, 458, 11, 51436, 51436, 294, 264, 3089, 17949, 291, 589, 365, 420, 30, 51532, 51532, 286, 764, 309, 337, 269, 2834, 11, 382, 286, 2835, 949, 11, 293, 286, 519, 300, 311, 257, 869, 2650, 337, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12989864186343983, "compression_ratio": 1.6923076923076923, "no_caption_prob": 0.00015114391862880439}, {"id": 801, "seek": 311756, "start": 3133.84, "end": 3139.0, "text": " And are there opportunities, you know, that you think you could find to use it, you know,", "tokens": [50364, 2014, 456, 604, 2283, 295, 10712, 321, 528, 281, 1856, 337, 23274, 466, 577, 281, 483, 1409, 30, 50656, 50656, 2305, 281, 574, 337, 4786, 281, 764, 341, 5102, 30, 50792, 50792, 286, 478, 406, 988, 286, 362, 1340, 3163, 5414, 510, 13, 51026, 51026, 1119, 309, 3163, 1228, 2699, 76, 3089, 66, 337, 31828, 30, 51178, 51178, 400, 366, 456, 4786, 11, 291, 458, 11, 300, 291, 519, 291, 727, 915, 281, 764, 309, 11, 291, 458, 11, 51436, 51436, 294, 264, 3089, 17949, 291, 589, 365, 420, 30, 51532, 51532, 286, 764, 309, 337, 269, 2834, 11, 382, 286, 2835, 949, 11, 293, 286, 519, 300, 311, 257, 869, 2650, 337, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12989864186343983, "compression_ratio": 1.6923076923076923, "no_caption_prob": 0.00015114391862880439}, {"id": 802, "seek": 311756, "start": 3139.0, "end": 3140.92, "text": " in the code bases you work with or?", "tokens": [50364, 2014, 456, 604, 2283, 295, 10712, 321, 528, 281, 1856, 337, 23274, 466, 577, 281, 483, 1409, 30, 50656, 50656, 2305, 281, 574, 337, 4786, 281, 764, 341, 5102, 30, 50792, 50792, 286, 478, 406, 988, 286, 362, 1340, 3163, 5414, 510, 13, 51026, 51026, 1119, 309, 3163, 1228, 2699, 76, 3089, 66, 337, 31828, 30, 51178, 51178, 400, 366, 456, 4786, 11, 291, 458, 11, 300, 291, 519, 291, 727, 915, 281, 764, 309, 11, 291, 458, 11, 51436, 51436, 294, 264, 3089, 17949, 291, 589, 365, 420, 30, 51532, 51532, 286, 764, 309, 337, 269, 2834, 11, 382, 286, 2835, 949, 11, 293, 286, 519, 300, 311, 257, 869, 2650, 337, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12989864186343983, "compression_ratio": 1.6923076923076923, "no_caption_prob": 0.00015114391862880439}, {"id": 803, "seek": 311756, "start": 3140.92, "end": 3145.56, "text": " I use it for caching, as I mentioned before, and I think that's a great opportunity for", "tokens": [50364, 2014, 456, 604, 2283, 295, 10712, 321, 528, 281, 1856, 337, 23274, 466, 577, 281, 483, 1409, 30, 50656, 50656, 2305, 281, 574, 337, 4786, 281, 764, 341, 5102, 30, 50792, 50792, 286, 478, 406, 988, 286, 362, 1340, 3163, 5414, 510, 13, 51026, 51026, 1119, 309, 3163, 1228, 2699, 76, 3089, 66, 337, 31828, 30, 51178, 51178, 400, 366, 456, 4786, 11, 291, 458, 11, 300, 291, 519, 291, 727, 915, 281, 764, 309, 11, 291, 458, 11, 51436, 51436, 294, 264, 3089, 17949, 291, 589, 365, 420, 30, 51532, 51532, 286, 764, 309, 337, 269, 2834, 11, 382, 286, 2835, 949, 11, 293, 286, 519, 300, 311, 257, 869, 2650, 337, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12989864186343983, "compression_ratio": 1.6923076923076923, "no_caption_prob": 0.00015114391862880439}, {"id": 804, "seek": 314556, "start": 3145.56, "end": 3149.92, "text": " it, especially using Martin's Elm serialize.", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 805, "seek": 314556, "start": 3149.92, "end": 3151.12, "text": " By the way, shout out to him.", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 806, "seek": 314556, "start": 3151.12, "end": 3152.6, "text": " He did an amazing job.", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 807, "seek": 314556, "start": 3152.6, "end": 3153.6, "text": " Yeah.", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 808, "seek": 314556, "start": 3153.6, "end": 3158.72, "text": " And apart from that, I haven't played much with decoders, with codecs.", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 809, "seek": 314556, "start": 3158.72, "end": 3164.68, "text": " I think for people who happen to do testing on their ports with Elm program tests, I would", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 810, "seek": 314556, "start": 3164.68, "end": 3166.0, "text": " definitely recommend that.", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 811, "seek": 314556, "start": 3166.0, "end": 3170.32, "text": " But otherwise, I think just keep an eye out for opportunities.", "tokens": [50364, 309, 11, 2318, 1228, 9184, 311, 2699, 76, 17436, 1125, 13, 50582, 50582, 3146, 264, 636, 11, 8043, 484, 281, 796, 13, 50642, 50642, 634, 630, 364, 2243, 1691, 13, 50716, 50716, 865, 13, 50766, 50766, 400, 4936, 490, 300, 11, 286, 2378, 380, 3737, 709, 365, 979, 378, 433, 11, 365, 3089, 14368, 13, 51022, 51022, 286, 519, 337, 561, 567, 1051, 281, 360, 4997, 322, 641, 18160, 365, 2699, 76, 1461, 6921, 11, 286, 576, 51320, 51320, 2138, 2748, 300, 13, 51386, 51386, 583, 5911, 11, 286, 519, 445, 1066, 364, 3313, 484, 337, 4786, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.21665584339815028, "compression_ratio": 1.4978902953586497, "no_caption_prob": 6.604649388464168e-05}, {"id": 812, "seek": 317032, "start": 3170.32, "end": 3175.6400000000003, "text": " And you know, especially if you are serializing and deserializing a format, keep an eye out", "tokens": [50364, 400, 291, 458, 11, 2318, 498, 291, 366, 17436, 3319, 293, 730, 260, 831, 3319, 257, 7877, 11, 1066, 364, 3313, 484, 50630, 50630, 337, 300, 13, 50680, 50680, 400, 544, 19511, 11, 1968, 309, 311, 257, 3089, 66, 420, 406, 11, 574, 484, 337, 4786, 281, 1066, 2837, 50990, 50990, 295, 1589, 382, 257, 2167, 4009, 295, 3494, 293, 1322, 493, 3866, 3755, 295, 1589, 51274, 51274, 412, 1564, 2831, 813, 14759, 13, 51376, 51376, 865, 11, 2138, 13, 51426, 51426, 865, 11, 498, 291, 393, 362, 341, 11, 498, 291, 362, 3866, 33358, 295, 257, 2167, 551, 11, 550, 309, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11472722719300468, "compression_ratio": 1.778723404255319, "no_caption_prob": 5.2216411859262735e-05}, {"id": 813, "seek": 317032, "start": 3175.6400000000003, "end": 3176.6400000000003, "text": " for that.", "tokens": [50364, 400, 291, 458, 11, 2318, 498, 291, 366, 17436, 3319, 293, 730, 260, 831, 3319, 257, 7877, 11, 1066, 364, 3313, 484, 50630, 50630, 337, 300, 13, 50680, 50680, 400, 544, 19511, 11, 1968, 309, 311, 257, 3089, 66, 420, 406, 11, 574, 484, 337, 4786, 281, 1066, 2837, 50990, 50990, 295, 1589, 382, 257, 2167, 4009, 295, 3494, 293, 1322, 493, 3866, 3755, 295, 1589, 51274, 51274, 412, 1564, 2831, 813, 14759, 13, 51376, 51376, 865, 11, 2138, 13, 51426, 51426, 865, 11, 498, 291, 393, 362, 341, 11, 498, 291, 362, 3866, 33358, 295, 257, 2167, 551, 11, 550, 309, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11472722719300468, "compression_ratio": 1.778723404255319, "no_caption_prob": 5.2216411859262735e-05}, {"id": 814, "seek": 317032, "start": 3176.6400000000003, "end": 3182.84, "text": " And more broadly, whether it's a codec or not, look out for opportunities to keep track", "tokens": [50364, 400, 291, 458, 11, 2318, 498, 291, 366, 17436, 3319, 293, 730, 260, 831, 3319, 257, 7877, 11, 1066, 364, 3313, 484, 50630, 50630, 337, 300, 13, 50680, 50680, 400, 544, 19511, 11, 1968, 309, 311, 257, 3089, 66, 420, 406, 11, 574, 484, 337, 4786, 281, 1066, 2837, 50990, 50990, 295, 1589, 382, 257, 2167, 4009, 295, 3494, 293, 1322, 493, 3866, 3755, 295, 1589, 51274, 51274, 412, 1564, 2831, 813, 14759, 13, 51376, 51376, 865, 11, 2138, 13, 51426, 51426, 865, 11, 498, 291, 393, 362, 341, 11, 498, 291, 362, 3866, 33358, 295, 257, 2167, 551, 11, 550, 309, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11472722719300468, "compression_ratio": 1.778723404255319, "no_caption_prob": 5.2216411859262735e-05}, {"id": 815, "seek": 317032, "start": 3182.84, "end": 3188.52, "text": " of information as a single source of truth and build up multiple pieces of information", "tokens": [50364, 400, 291, 458, 11, 2318, 498, 291, 366, 17436, 3319, 293, 730, 260, 831, 3319, 257, 7877, 11, 1066, 364, 3313, 484, 50630, 50630, 337, 300, 13, 50680, 50680, 400, 544, 19511, 11, 1968, 309, 311, 257, 3089, 66, 420, 406, 11, 574, 484, 337, 4786, 281, 1066, 2837, 50990, 50990, 295, 1589, 382, 257, 2167, 4009, 295, 3494, 293, 1322, 493, 3866, 3755, 295, 1589, 51274, 51274, 412, 1564, 2831, 813, 14759, 13, 51376, 51376, 865, 11, 2138, 13, 51426, 51426, 865, 11, 498, 291, 393, 362, 341, 11, 498, 291, 362, 3866, 33358, 295, 257, 2167, 551, 11, 550, 309, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11472722719300468, "compression_ratio": 1.778723404255319, "no_caption_prob": 5.2216411859262735e-05}, {"id": 816, "seek": 317032, "start": 3188.52, "end": 3190.56, "text": " at once rather than separately.", "tokens": [50364, 400, 291, 458, 11, 2318, 498, 291, 366, 17436, 3319, 293, 730, 260, 831, 3319, 257, 7877, 11, 1066, 364, 3313, 484, 50630, 50630, 337, 300, 13, 50680, 50680, 400, 544, 19511, 11, 1968, 309, 311, 257, 3089, 66, 420, 406, 11, 574, 484, 337, 4786, 281, 1066, 2837, 50990, 50990, 295, 1589, 382, 257, 2167, 4009, 295, 3494, 293, 1322, 493, 3866, 3755, 295, 1589, 51274, 51274, 412, 1564, 2831, 813, 14759, 13, 51376, 51376, 865, 11, 2138, 13, 51426, 51426, 865, 11, 498, 291, 393, 362, 341, 11, 498, 291, 362, 3866, 33358, 295, 257, 2167, 551, 11, 550, 309, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11472722719300468, "compression_ratio": 1.778723404255319, "no_caption_prob": 5.2216411859262735e-05}, {"id": 817, "seek": 317032, "start": 3190.56, "end": 3191.56, "text": " Yeah, definitely.", "tokens": [50364, 400, 291, 458, 11, 2318, 498, 291, 366, 17436, 3319, 293, 730, 260, 831, 3319, 257, 7877, 11, 1066, 364, 3313, 484, 50630, 50630, 337, 300, 13, 50680, 50680, 400, 544, 19511, 11, 1968, 309, 311, 257, 3089, 66, 420, 406, 11, 574, 484, 337, 4786, 281, 1066, 2837, 50990, 50990, 295, 1589, 382, 257, 2167, 4009, 295, 3494, 293, 1322, 493, 3866, 3755, 295, 1589, 51274, 51274, 412, 1564, 2831, 813, 14759, 13, 51376, 51376, 865, 11, 2138, 13, 51426, 51426, 865, 11, 498, 291, 393, 362, 341, 11, 498, 291, 362, 3866, 33358, 295, 257, 2167, 551, 11, 550, 309, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11472722719300468, "compression_ratio": 1.778723404255319, "no_caption_prob": 5.2216411859262735e-05}, {"id": 818, "seek": 317032, "start": 3191.56, "end": 3197.6400000000003, "text": " Yeah, if you can have this, if you have multiple representations of a single thing, then it", "tokens": [50364, 400, 291, 458, 11, 2318, 498, 291, 366, 17436, 3319, 293, 730, 260, 831, 3319, 257, 7877, 11, 1066, 364, 3313, 484, 50630, 50630, 337, 300, 13, 50680, 50680, 400, 544, 19511, 11, 1968, 309, 311, 257, 3089, 66, 420, 406, 11, 574, 484, 337, 4786, 281, 1066, 2837, 50990, 50990, 295, 1589, 382, 257, 2167, 4009, 295, 3494, 293, 1322, 493, 3866, 3755, 295, 1589, 51274, 51274, 412, 1564, 2831, 813, 14759, 13, 51376, 51376, 865, 11, 2138, 13, 51426, 51426, 865, 11, 498, 291, 393, 362, 341, 11, 498, 291, 362, 3866, 33358, 295, 257, 2167, 551, 11, 550, 309, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.11472722719300468, "compression_ratio": 1.778723404255319, "no_caption_prob": 5.2216411859262735e-05}, {"id": 819, "seek": 319764, "start": 3197.64, "end": 3202.48, "text": " might be useful to have something like codec or that kind of pattern.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 820, "seek": 319764, "start": 3202.48, "end": 3203.48, "text": " Yeah.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 821, "seek": 319764, "start": 3203.48, "end": 3204.48, "text": " Cool.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 822, "seek": 319764, "start": 3204.48, "end": 3206.0, "text": " And let us know what else you come up with.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 823, "seek": 319764, "start": 3206.0, "end": 3207.0, "text": " Tweet us.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 824, "seek": 319764, "start": 3207.0, "end": 3212.8799999999997, "text": " We'd love to hear what you end up doing with codecs and with that pattern and what instances", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 825, "seek": 319764, "start": 3212.8799999999997, "end": 3215.8399999999997, "text": " of that pattern being applied that you've seen.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 826, "seek": 319764, "start": 3215.8399999999997, "end": 3220.16, "text": " And find us on Twitter and ask us a question.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 827, "seek": 319764, "start": 3220.16, "end": 3222.8799999999997, "text": " elm.radio.com question.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 828, "seek": 319764, "start": 3222.8799999999997, "end": 3225.7999999999997, "text": " Submit a question and we'll hear from you.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 829, "seek": 319764, "start": 3225.7999999999997, "end": 3226.7999999999997, "text": " All right.", "tokens": [50364, 1062, 312, 4420, 281, 362, 746, 411, 3089, 66, 420, 300, 733, 295, 5102, 13, 50606, 50606, 865, 13, 50656, 50656, 8561, 13, 50706, 50706, 400, 718, 505, 458, 437, 1646, 291, 808, 493, 365, 13, 50782, 50782, 314, 10354, 505, 13, 50832, 50832, 492, 1116, 959, 281, 1568, 437, 291, 917, 493, 884, 365, 3089, 14368, 293, 365, 300, 5102, 293, 437, 14519, 51126, 51126, 295, 300, 5102, 885, 6456, 300, 291, 600, 1612, 13, 51274, 51274, 400, 915, 505, 322, 5794, 293, 1029, 505, 257, 1168, 13, 51490, 51490, 806, 76, 13, 6206, 1004, 13, 1112, 1168, 13, 51626, 51626, 8511, 3508, 257, 1168, 293, 321, 603, 1568, 490, 291, 13, 51772, 51772, 1057, 558, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.21460898977811219, "compression_ratio": 1.7391304347826086, "no_caption_prob": 0.00013133895117789507}, {"id": 830, "seek": 322680, "start": 3226.8, "end": 3228.1200000000003, "text": " Thank you for joining us on Value Room.", "tokens": [50364, 1044, 291, 337, 5549, 505, 322, 39352, 19190, 13, 50430, 50430, 9088, 958, 565, 13, 50480, 50480, 9088, 958, 565, 13, 50480], "temperature": 0.0, "avg_logprob": -0.47622764110565186, "compression_ratio": 1.123076923076923, "no_caption_prob": 0.00020015297923237085}, {"id": 831, "seek": 322680, "start": 3228.1200000000003, "end": 3229.1200000000003, "text": " Until next time.", "tokens": [50364, 1044, 291, 337, 5549, 505, 322, 39352, 19190, 13, 50430, 50430, 9088, 958, 565, 13, 50480, 50480, 9088, 958, 565, 13, 50480], "temperature": 0.0, "avg_logprob": -0.47622764110565186, "compression_ratio": 1.123076923076923, "no_caption_prob": 0.00020015297923237085}, {"id": 832, "seek": 322912, "start": 3229.12, "end": 3257.12, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 51764], "temperature": 0.0, "avg_logprob": -0.9801765169416156, "compression_ratio": 0.6666666666666666, "no_caption_prob": 1.777543729986064e-05}], "language": "en"}