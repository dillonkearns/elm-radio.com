{"text": " Hello Jeroen. Hello Dillon. And what are we talking about today? Today we're talking about performance, which we've never talked about before really, I think. Not so much. And so you've been sort of pretty deep in some performance analysis stuff for some Elm Review rules, right? Yeah. So I recently published Elm Review Performance, which has for now only one rule, which is about detecting tail call optimizations or lack thereof. So do you know what tail call optimization is? I do know what tail call optimization is, but it still somewhat confuses me what the actual performance implications are. I understand that it's putting a stack frame for every function call that it's recursively calling if it's not tail call optimized and you can reduce that stack frame. But I don't understand what are the performance characteristics of like adding that stack frame for a recursive call versus just having the memory as it goes through a while loop or whatever. So that's sort of hard to wrap my brain around. Also, sometimes it's difficult to understand how do you transform something that's not tail call optimized to something that's tail call optimized. Those two things confuse me. Yeah. So maybe let's start with the basics. First of all, what is a recursive function? So recursive function is a function that calls itself. So for instance, list.length is a recursive function. I thought you were going to say a recursive function is a recursive function. And to understand a recursive function, you have to understand what a recursive function is. I totally missed my joke there. Yeah, come on. I'm going to try to understand. No, I usually never do the recursive jokes because when I try to do the recursive jokes, that's when I try to do the recursive jokes and that's when I try to do the recursive. Yeah. You don't want to get too stuck on that. Yeah. And that's where tail call optimization comes in. Actually, it doesn't. Yeah. I can't stop you from not having a base case, but still a good day. So a recursive function is one that calls itself. So list.length. I actually don't know if it's implemented in JavaScript or not, but let's imagine it is in Elm. So how would you implement that? You would do a case of the list. So case list of, and if it's empty, then return zero. And otherwise you return one plus list.length of the rest. So list.length calls itself. So you would add one for every element. So that is recursive. A tail call recursive function is one where it's the same thing, but it's just more optimized. So as you said, what happens when you do a function call in JavaScript or in a browser or an engine? When you do a function call, it basically adds the current position and the new position to a stack, the functions call stack. Yes. I'm not going to use the technical terms because I'm not aware of those. But yeah, basically there's a stack. So that's once you return from a function, you know where in the code the engine needs to go back. Right. It's basically like a go to instruction that tells it at a low level, like when you're done, I'm going to store the return value of calling this function in this memory location and I'm going to, and then jump to this code. So that's like generally what's happening there. Yeah, absolutely. So that is pretty cheap, but it does have a cost. Yeah. Right. So if you're recursing 10 times, then you're probably not going to notice it. Yeah. But if you're doing list.length on a list of size 10 and it's not tail call optimized, that's probably okay. Yeah. But if you're doing a thousand or 10,000 or a hundred thousand calls or lists of that size, then it becomes noticeable. And you also have a different problem, which is that the call stack has a limit. Yep. Which when you go past that, that is called a stack overflow. Right. And when you have a function that can give a stack overflow, that's called stack safety. It's not stack safe because it can trigger a stack overflow if it's called with too large of an input or whatever. So in Elm, we say that everything is safe, but you can still trigger stack overflows. So if you actually want to know whether a recursive function is tail call optimized, what you can do is try to write a test where it recurses more than about 10,000 times. And if that doesn't create a problem, if that doesn't crash, then it's sufficiently optimized. And if it crashes, well, it isn't. And you have a runtime error. And you can also run your Elm review performance rule to identify these areas that might not be stack safe, which is really neat. So what is the Elm review rule doing to determine whether something is tail call optimized or not? I remember you saying when you got this working, you'd been thinking about it for a long time. Yeah, almost two years. And then you finally realized how to do it. And you're like, oh, it was actually really simple to implement once I realized what I needed to do. So before I explain that, I think it's nice to explain how a tail call optimized function works. Right. And compared to recursive function. Maybe we should point out that this is an optimization that the Elm compiler just has built in. Yes. That it's turning our code into JavaScript code so it can go ahead and say, oh, you know what? I could rewrite this in a way that doesn't actually do recursive calls under the hood, but I know it's going to give the same result. So that's what we're talking about here. Yeah. So recursive function, a plain one, when it calls itself, it adds to the stack call. An optimized one doesn't have a stack call or less so. More about that later. Right. But it's literally a while loop in the compiled Elm code. Yes. So instead of calling itself, what it does, it creates a while loop with the current element to be, the current arguments, defined outside of the while loop. And the while loop just updates those arguments to be whatever would be the next arguments, the arguments of the next function call. Right. So list.length would be a while loop with a count defined outside the while loop. And in the while loop, it would increment. And the list to be analyzed would be reduced at every step. Is that clear enough? Yes. Okay. So is that able to allocate less memory? Because is it taking the memory scope with the recursive calls if it's not tail call optimized? So the way I understand it, for every call stack, you need to allocate a new variable. Right. Or new variables. Yes. Right. So if you don't have to allocate any new ones, then yeah, you have a lot less to allocate. Right. So that also takes time. So this is time that is saved. And you also don't have to do the call stack and the changing the position. Popping off the call stack and everything. Yeah. Yeah. Popping on, popping off. Yeah. Right. Right. So very tiny things, but when you do 10,000 of them, it matters. Right. So, and we should, you know, stepping back a little to like the why here now, and I think this is, I think you and I both feel the same way here that we're not necessarily experts by any means on performance. But one thing that we can say with confidence is that you should measure performance to identify bottlenecks and not assume that number one, don't assume that something needs to be optimized unless you know it needs to be optimized because you actually benchmarked it. Number two, don't assume that a particular change is in fact going to yield better performance because it's going to do surprising things. Also Elm compiles into JavaScript. That's one layer of indirection. So Elm compiles to JavaScript. You don't know exactly what JavaScript it compiles to. You have some sort of vague sense of if you're calling a function, it's probably going to compile to something that's calling a function in Elm, but you don't know exactly what it's compiling to and what the performance characteristics of different code will be. You can look at it though, because the source code is pretty readable compared to what you might expect. Yes, you can look at it, but also then that JavaScript code is being run by V8 or whatever JavaScript engine and these JavaScript engines do all sorts of really nuanced optimizations with the just in time compilation. I mean things like tail call optimizations, I don't know if any JavaScript engines have that built in now. I know that Evan added tail call optimizations to Elm because at the time the JavaScript engines didn't have that. Yeah. I think it's there in a few. Maybe only one, but not all of them. Okay, yeah. But the point being that don't try to predict what's going to perform well because all sorts of unexpected things are going to perform very well or very poorly counter to your intuition. So just assume that you don't know whether something is going to perform well or not unless you benchmark it and assume that an optimization you try to make without measuring is not necessarily going to improve things. Yeah, tail call optimization is usually still a good one, but if you need to change how the function works to make it work, then yeah, benchmark it. We'll talk about benchmarking later. Yes. So to wrap up tail call optimization to pop the stack again and take our call frame back up there. So in order to optimize, in order to turn something into a tail call optimized invocation, what do you do to do that? So as you said before, the compiler already does it for you. It optimizes function for you, but only if the function has a certain shape. Basically it wants the return value to be in specific positions. So the return value can be in several positions. And I say return value, I mean the recursive call. So it needs to be at the end of a branch. So if you can do a recursive function inside an if else, for instance, you could do it in both branches, the if or the else, but you cannot do it in the condition. You can do it in the branches of a case expression. You can do it in the in of a let expression. So let blah, blah, blah in, in there you can do the recursive call. And that's pretty much it actually. You can compose them together so you can do a recursive call in a if inside of a case branch and that works. And that's it. Like basically it's the recursive call needs to be the last operation that happens. Right. So if you were to do a recursive call plus recursive call, suddenly you're not in the simple case, you know, possibilities that you laid out of case expressions, if expressions, let bindings. It's now a plus expression. A plus expression. Yeah. Yeah. So one thing that is, for instance, a bit odd is like when you call the function recursively using a pipe, like you do one pipe list dot length. Right. Oh yeah. Lists pipe, this is a length. Unfortunately that is not considered function call by the Elm compiler. So it doesn't look like what it expects, therefore it doesn't optimize it. So it really is the if the case and the let's. Right. Which just happens to be with the, with the architecture of the Elm compiler and the, the different passes that it does in compilation. It doesn't see that as it could, but it doesn't. So that's just a thing to know if you're trying to do a tail call optimization. And again, like you should benchmark before you assume that you need that, especially if it's going to make the code more complex. You shouldn't just assume that everything has to be tail call optimized. And but it's a good idea. I mean, it's one area that you could get a runtime exception. Right. So that's a reason to prefer tail call optimizations in itself. Yeah. That's like the biggest reason to do it because the performance gets better, but not that much better. Like a few percent. Right. And if you're, if you're designing a package that is doing, you know, using large data sets in a lot of use cases, then you want to do all these micro optimizations to squeeze a little bit of performance. Of course with, with benchmarking to guide where those performance opportunities are, but for application code, you very much want to avoid runtime exceptions. Yeah. So the Elm compiler does this optimization. I know that other compilers, other languages do other kinds of optimizations, which are more powerful, more useful. I'm not exactly sure what they are, but I've been told that there are. Yeah. And that Elm isn't actually, doesn't actually do tail call optimizations, like optimized functions. So like sale, self call, sale recursion, which is only a subsets. But yeah. Yeah. I don't know much more than that. So what does my Elm review rule does do? So the only thing it does is check whether you have recursive calls in other places than the ones that I mentioned in if, in case. Right. And stuff like that. And that's all it does. Yeah. And yeah, I've been thinking about this rule for a year and a half, two years, maybe like when I started working on Elm review basically. And I was thinking, is it is actually a bit complicated, but then when I understood that it will just work this way, it was like, yeah, this is really simple. This is very easy Elm review rule to write. I feel like that's a very common process in like, I mean, whether it's API design or any sort of like engineering, like that you think really hard in order to find the simple solution, which then when you tell anyone about it, they're like, oh, that seems pretty simple. You're like, yeah, but it was so hard to figure that out. But I explained it to you in the simple way. It took me years to get to that understanding. It's like the Mark Twain, like forgive me for the long letter, but I didn't have time to write you a short one. Yeah. Okay. So is there anything else people should know about tail call optimizations in Elm? So you asked before, how do you optimize recursive function? So in some cases it's like very simple. Sometimes it's removing a pipe. I've made a pull request to Elm community list.extra, yeah, list.extra, where they had a function that was not tail call recursive because they use a pipe, like a lift pipe. Just remove that pipe and add parens and that was it. And that was like a 7% increase in performance. So yeah. That's cool. Okay. Well, that's a good concrete number. Nice. Oh, another thing that I realized after I wrote my blog post and I edited it when I made the announcement was that you have recursive functions, you have non recursive functions and you have partially recursive functions. So it's not actually a thing of the function is recursive, is that the call is recursive. So if you do a recursive call inside one of those allowed places, that gets optimized. If you do another one where it's not allowed, well that one won't get optimized, but it doesn't deoptimize the other one. You will have a while loop in one place and a recursive call, a plain one in a place where it was not allowed. So yeah, I didn't know, but you can have partially recursive functions. Partially tail call optimized. Yes. Right. Yeah. That's really cool. I didn't realize that until I read your blog post either, which we will link to in the show notes. Also, Evan made a great post on how to explain. Also Evan wrote a very good article to explain how it works. Not exactly when it gets applied, which I do better in my article, but it does explain the reasoning for it. Yes. And how to transform something from a non tail call optimized form into a form. Basically you need to sometimes make state explicit in a way that it can be passed down recursively. Yeah. So for instance, how would you optimize list.length? Right. So I think the problem is that if you do, you need to keep track of the running length that you have so far. Because previously we said list.length is basically... One plus. Plus. Plus operation. Plus operation. Right. Yes. So you would need to add an extra argument to get the length so far. And then you would need a list.length.help function that would start with the length so far as zero. Yeah. Usually you split them up into a function, a public function and a helper function. Right. So the public one bootstraps it with some default value, some initial starting value. And then that's sort of like what the stack frame would have been carrying around, that state of the running length. But you're making that an explicit part of the quote unquote state of this recursive call. So you make that explicit and now you can do list... What would it be then? The length of the rest of the list? And is there a plus one in the function invocation? Or where does that plus one go now? Yeah. So I'm going to say it out loud in code. So you would have length which takes a list and that equals list.helper the list zero. And list.helper would... So it takes the list and the results so far. Yes. So you do a case off of that list. If it's empty, you return the results so far. So the accumulated result. And if it's not empty, then you call the function itself with the rest, but the results so far, you add plus one to that. So you do list.helper rest of list and then in parens results so far plus one. Right. So you can do addition in the arguments. Yes. And that's not an issue. But if you turn the recursive function call expression into a plus expression, that deoptimizes that invocation. Yeah. So this is a fairly simple example. Sometimes it's a lot more complex. Like if you need to do recursive... Like when you need to do recursive applications on a tree, like you need to call the recursive function for what's on the left of the tree and what's on the right of the tree. And then you need to combine them together. And that is by definition an operation you do on the result. So that doesn't work. So what you can do is one technique at least is to emulate a stack. So the stack of things that you still need to compute, you make that an argument. Just like the results so far we had before. You make the stack an argument. And maybe also the results so far as a second argument. It feels similar to doing a list fold a little bit. That you have the accumulator and that has all the state that you need. And list.fold is telecooptimized in that way. The difference is that list.fold, you already know beforehand all the elements of the list that you're looping over. Which in recursive function, it might not be the case. Yes. Cool. And I think that's a good thing to know when you're writing Elm code. I gave my rant about how you should benchmark before you assume something is a problem. And to me, the way I think about this stuff is you want to be aware of as many of these sorts of things as possible. So that when you need to improve performance, when you know that there's a bottleneck somewhere, you know what to look for. For opportunities for what to optimize. So you can look at something and you realize you have this burned into your brain that if you do recursive call plus recursive call, oh, that's not telecooptimized. Just having these patterns and being aware of them is very helpful, I think. Julia still writes it, like you just said. Recursive call plus recursive call. And that's fine. In most cases. And then when you really want to optimize, that's when you transform it in a way that is better for performance. But you need to benchmark it. I'm actually very bad at doing that. It's not easy. Yeah. For this one, I would be like, I'm not sure it's going to help performance. But I do care about stack safety. So that's something already. Right. So we should, we should talk about ways to benchmark in Elm. So one of one of my favorite ways to benchmark is just to run Lighthouse. Well that's true too. I mean, to a certain extent, like, so I think we shouldn't assume that performance is a problem unless we benchmark and see it is. But we shouldn't assume that performance is good without benchmarking it either. For example, most of us are going to be using high powered machines that are more powerful than most users are used to. Maybe internet connections that are more powerful than most users are using. You know, a lot of users are going to be accessing our sites on mobile devices, which have far slower internet connections. They don't have 32 gigabytes of RAM. They don't have 32 gigabytes of RAM and 32 cores on their machine. So wait, you have 32 cores? No, I don't have 32 cores. I wish. But they, it takes a lot more to even just like run JavaScript at all and you know, do the run the just in time compilation and all of these fancy things that we're running. So running Lighthouse can give you a little bit of a clue because it will throttle, you know, it'll simulate throttling the network to simulate using a mobile device and simulate, I think it simulates like degrading performance for the mobile Lighthouse. Yeah, I think as well the CPU, I think so. Yeah. Which I have no clue how they do that. Yeah, I know. Just put a sleep between each instruction. You know, I mean, so much effort has gone into these tools, you know, both for like benchmarking and discovering performance issues and for avoiding them with these like very sophisticated optimizations in like these JavaScript engines. But it's really worth using Lighthouse and you know, the Chrome performance tab to analyze these things. So that's really helpful. Understand like pull up the performance tab. You can hit the record button and just run some JavaScript code. If there's something that you suspect might be slow, then you can hit the record button, do that slow operation and then hit the stop button. And then you can see this like bottom up view and you're probably going to find a few readable Elm function names that will point you to some of your bottlenecks in performance. Yeah. So do you have any good resources on how to use that performance tab? Because it is a very nice tool. It has a lot of options, but I'm not sure I would know exactly what everything means. So do you have any good resources on that? Yes. So Jue Lu, is it Jue Lu? Is that how it's pronounced? Arkham. Arkham. We all know Jue. Jue's great. Check out, Jue wrote a blog post called performant Elm. It's a two part series and it basically walks you through this. And that was actually how I discovered this technique and it like steps you through exactly how to do it. And it's really helpful. So we'll leave a link in the show notes and definitely check that out. It's a lot easier than you would imagine. So it's a great idea to run that and try to look for bottlenecks. Also when you run a Lighthouse audit on your site, it now identifies if you have like long running tasks. So now if you want a 60 frame per second animation, so when we're writing Elm code, we're writing something that compiles to JavaScript, which runs in a browser. And so I think it's important to have some general understanding of performance in JavaScript and performance in browsers. And so one really important thing to understand, if you understand one thing about JavaScript buttons, it should be that it's single threaded, right? There's one thread of execution. And if you block it, everything grinds to a halt, including scrolling and input events and you're blocking user interaction, which is very frustrating. Which means that you cannot click on buttons. You cannot type anything. Exactly. All of these, even like built in browser animations of clicking buttons and things will just freeze up and lock up. And so there's like the first input delay Lighthouse metric, which helps identify this kind of issue. And this is starting to become the way that Google ranks sites now. This is becoming a core metric that will actually bump you down in the search results if you have issues with these metrics. So it's important for SEO as well. So if you understand one thing about JavaScript performance, it should be that there's a single thread of execution and don't block that thread. If you're trying to get 60 frame per second animations, that means that you have about 16 milliseconds to perform a blocking operation. So now if you're performing an HTTP request, that's non blocking. That's another thing about JavaScript that there are these non blocking IO operations like performing HTTP requests. And if your HTTP request takes five seconds, that's okay because you're not blocking the main thread. You're queuing that work and it's going to come back and run your single threaded JavaScript when it's done with HTTP request. But for the actual processing of things, that's single threaded and you've got 16 seconds if you want 60 frames per second. 16 milliseconds. Sorry, 16 milliseconds. Don't take 16 seconds to do anything. That would be really bad. And you've got about 50 milliseconds just in general if you want to not be blocking user interactions and having a clunky experience there. Yeah. But it's a bit hard to know when you reach that budget. So basically, how to do as few work as possible. Yeah. Yeah. Try to be as minimal as possible and benchmark, right? Run Lighthouse. If you run Lighthouse, it will tell you if you have long running blocking tasks that take 50 milliseconds or more. And it'll actually point you to where that happens. So that's a great technique. And so another thing, a lot of these performance improvements I find come down to most of the time it's not these micro optimizations. More often it's architectural or algorithmic improvements. If you're doing unnecessary work, try to do less work. If you're holding lots of stuff in memory, try to hold less stuff in memory. If you're constantly transforming things from different data structures, if you're turning something from an Elm list to an array to a dict and then pulling and if you're doing indexed access into large lists in Elm or things like that, those are things to look for. I mean, those are usually fine when the collection size is pretty small. You can do loads of those, no issue. But if it's on a list of a thousand elements, you will start noticing it. And especially if you want to reach that 60 FPS magical number, you should avoid doing this in the view function too much or in every update or things that are recurring. That's a great point. Elm's virtual DOM will avoid any unnecessary work as much as it can. If you have not received a new message, you will not update the model. And if you don't update the model, you don't call the view again. If between two frames no message happens, well, you're good. You have nothing to re render. You have no computation to do. But if you have timed out every millisecond. Then you're calling update every millisecond. And you have 16 messages to handle in one frame. So everything needs to be quite fast. I do think that the virtual DOM or Elm slash browser is calling the view only once per animation frame. So the view can be 16 times as slow as the updates. But still, you don't want to do too many messages if you can avoid it. Right. And there's this push and pull of you want to optimize performance and you want your code to be nice to work with. And those two things are sometimes at odds with each other, which is why you really need to benchmark. So like, for example, like one of the for me, one of the most important design principles in an Elm application is to derive state, not store state. If you have state trickling through and being derived, then you don't have places where things can get stale and out of date and bugs that can come from that. Yeah, you want to source state but not derive state. Well, you want to derive state from the things in the model is what I, you know, we're saying the same thing with different words here. But yeah, so like, basically don't have information that can be derived from your state. Don't duplicate that in multiple places, because that places for bugs to happen and for things to go stale. And it just makes Elm better to work with and makes your code less bug prone and easier to maintain. So like, if that isn't giving you performance problems, you don't want to like memoize things to avoid computations. That should be your last resort. If you in some cases, you may need to do that, but you want to avoid it if you can. And so use this is one place that HTML dot lazy can really help out right is that could take care of memoizing to a certain extent for you. Do you want to introduce what HTML dot lazy does? Yeah, sure. So as I previously Elm will not call the view function if the model didn't change. So it does that at the root of the application. But you can also kind of re implement that logic just by sprinkling your view code with HTML lazy. So basically what it does is when you there's HTML dot lazy dot lazy, which which is a function which takes another function of view function. So something that returns HTML and takes one arguments to if you use lazy to three, if you take use lazy three, etc. And if the arguments to that function did not change, then it will skip the work. It will skip computing the function that you passed to lazy. So that is very nice because if you have something that will rarely change like a header footer, a part of your another part of the page, which is pretty expensive to compute, but it rarely changes, you just sprinkle lazy in there and you will avoid a lot of unnecessary work. Yeah, because next time, I'm renders the whole page, it won't compute that part of the page. Right? Yeah, you're basically proving to Elm through through the signature, it's almost like you're taking the arguments that go through to some like view helper function. But instead of directly calling your view helper function with with the arguments it depends on your, you're giving these lazy helpers that view helper function, which takes an argument. And then you're passing those actual arguments to lazy. And it can and it can say, Oh, if, if this argument hasn't changed, I'm not going to re invoke this function because you've basically proven to Elm that those are the only things that can cause that function to render a different result since they're all pure functions. Yeah. So that is very powerful. And that is very easy to add. Yeah. The only problem is that is also very easy to mess up in any way that is very non Elm ish. Yeah. So what actually needs to work for lazy to work well is that every argument needs to be needs to have the same reference as last call. Right. So what it, what Elm under the hood does is for every argument that you pass to the function, including the function itself, it does equal equal. So is it the same function as before using equal equal or no triple equals triple equals. So, so if it's the same, then it looks at the next argument. If it's that's the same, etc, etc. And if one of them is not the same, then it will recompute the function. I see. So for primitives like strings and integers and bullions and static references like custom types, custom type constructors that have no arguments that will always succeed if it's the same value, like you pass in five and next time you call it and you pass in five, that's fine. But when you create more complex things like records or dictionaries, they actually need to be the same reference. And that's where it gets tricky. I see. So if you compute a value, if you compute a list, if you create one in a view function and you pass that as an argument to the lazy function, then that is a new reference. And that means that it will not be considered the same and therefore the function will be reevaluated. I see. And that is very non Elm ish. Yeah. And can be very confusing. So the worst case is that it's not actually optimized. It's no worse than that, but it's not optimized. And that was what you were trying to do. But so you're saying like, if I had a list and then I ran a list dot map on that, now the reference is different. Yeah. Interesting. But if I did model dot my list, then it says it's just a reference. So it's just passing it through. Yeah. Unless obviously you change that function. Right. Right. Usually things that come from the model are fine. Okay. Yeah, that makes sense. And that's where usually people feel like they need to store derived state in the model is because they want to pass that in as their argument to a lazy function. Yeah. So they do the computation in updates instead of in the view function. Right. So that makes the Elm code a lot less nice, but... Interesting. Sometimes you need to. I wonder if you did something in every update call that said, remove this type of thing from this list. So the model dot my list equals. And if you do my list dot filter, remove something from the list every single time, then that's changing the reference every single time, I'm assuming. We don't normally think about these things in Elm, which is I think why you're saying it doesn't feel very Elm because we don't usually have to think about these things. So you would almost have to avoid updating the reference in that case where the result is the same or compute the result and say if the number of items that it results in is the same, then don't update the reference. So for instance, when you have a module and it uses another module which also has update view and all those, you usually store the model of that in a record. So you have model which has a field subcomponent, which is a model of the subcomponent. So every time a message for that one comes, you will update model and override subcomponent with the new value of subcomponent, even if it didn't change. So that means that subcomponent didn't change, the reference didn't change, but model did. So if you put model as is as an argument to a lazy function, then that one gets recomputed. Right. So in general, with lazy functions, it's probably a good idea to pick off the minimal set of data that you need to pass through to avoid busting the cache, quote, unquote. So you can do like lazy function of subcomponent.view, and pass it model.subcomponent. That would be very good. Yeah, nice. That's really good to know. Yeah. Do you actually know how lazy works under the hood? I don't. Do you? I looked it up because I was curious. I'm guessing it's like in the virtual DOM code. Oh man, you're better than me. Yeah. It is in the virtual DOM code, but where are the values stored? The virtual DOM facts? I don't know. So I always thought like Elm has a global store of lazy functions and their last arguments, which doesn't make sense because sometimes you call the same function with different arguments in the same view, and those would then be very hard to keep track of. And that's absolutely not how it works. It's not a magical global thing. It actually stores all the arguments and the function itself in the virtual DOM. So when it renders a virtual DOM, it knows that this node is something that will be mapped. This node is just plain old HTML. This node is lazy node. Yeah, right. Right. And basically what it does is if this node is lazy, check whether its value has already been computed. If it has a cache in it. If it does, and all of the arguments that are passed, including the function are the same as the one I'm now getting, so nothing changed, then I can just return that value. And I don't have to recompute it again. Right. That makes sense. And otherwise, if something changed or never computed this before, it will compute it. So it will actually call the lazy function during the diff of the virtual DOM, which is way later than I expected. Whereas for the other ones, it's when the view function gets called. But here it's done only when the diff is happening. Right. Interesting. That's really cool. Yeah. And then it sorts that value in the virtual DOM node, the lazy node. And it keeps the whole tree in its model or whatever. Right. So that's a lot cleaner than I expected. Yeah. It's really cool. So do you have a sense of best practices for when and where to use lazy? If there's, like you mentioned, a header or a footer, how much of a difference is that going to make? It's hard to say without benchmarking, right? Yeah. And it's also hard to benchmark that. But do you wait until there's a performance problem to add lazy? Or do you add lazy eagerly or lazily? I guess is what I'm trying to ask. I do it lazily. The only way that it makes sense. Yeah. I rarely use it actually. Maybe because I work mostly with Elm Review where I don't have access to lazy. I use other tricks to do caching. Yeah. Right. The hard way. Yeah. The hard and tricky ways. Yeah. But lazy I rarely use. Where I would use it is more like when I know that I will need to do pretty expensive stuff and things that will rarely change. For instance, if you have a huge list of items and you want to sort them. If the list doesn't change very often, then you can just sprinkle lazy and then you will only do the sorts in the view. Something that I see quite often on the topic is like, oh, where should I sort this? Should I sort it in the updates? Or should I sort it in the view? If you do it in the view and you lazify it, then it's simpler. It's free caching. It's caching that you can't do incorrectly, which should always win. Yeah. Because as we know, there are two difficult problems in computer science. Naming, caching, and off by one errors. Yeah. Exactly. Yeah. No. That's the ideal. You want your values to just trickle through your application without any possibility of getting stale. Yeah. We didn't mention it before, but HTML lazy is very quick in the sense like the comparison with all the arguments is very quick because it does triple equal. By reference. Yeah. Which is very, very fast. Right. So even if it gets defeated, it's not a huge cost. Yeah. But you want to avoid it getting busted. Right. So there's not much maintenance cost or computational overhead to using lazy in a suboptimal spot. Yeah. I think at most it adds 10 comparison. Yeah. Right. Very quick comparison checks. Equal. Yeah. That makes sense. So speaking of comparison. Actually it just might be. Yeah. I think it's one comparison with a list of 10 elements maximum. Yeah. That's what it does. Yeah. Very cool. Yeah. So speaking of comparison, Elm's equality is like, it's so nice to work with. And when you go back to other languages that don't use deep equal by default, you're like, why isn't this equal? These are definitely the same. And you're like, oh, that's right. They're comparing references. And you have to try so hard and use these hacks to check for equality properly. And it's so nice to not think about that in Elm. But that is another place to look for potential performance bottlenecks. If you're doing it over a large set of items doing equality, there is a little bit of a performance cost if you're doing that equality a whole lot or over extremely complex data structures because it is doing it when you do double equal in Elm, it is doing a deep equal. So that's something to be aware of. So I don't know when I'll be done. I am working on an Elm review rule to detect lazy. That would be amazing. And this is really like one of the root rules that I wanted to make for Elm review. Like before I published it, this is really one. I want this one because this is such a non Elm thing. It should not be a problem for us. And we should have a tool to detect it. And that's why I'm making Elm review rule for it. It's a tricky one. It will probably not get it right all the time, but it should help at least. Because you have to do like you were describing in our recent Elm review episode, you have to do flow analysis type stuff to track where references are changing or coming from. Yeah. And the thing is you don't know what will change the reference. For instance, if you call a function, will it change the reference? D doesn't change the reference, list.map does. And you basically need to know what every function does. If you really want to get it right and function from dependencies, I don't have access to search codes. I could, but it would be a lot. It would be very expensive to compute that. Interesting. I will try to get it as right as possible and with as few false positive as possible as usual. Very cool. That's amazing. So maybe it's published already by the time you're hearing this. Oh, yeah, that's true. I'm taking some out today. So don't be surprised if it's not here yet. And I'm being lazy. Yeah, you're either being lazy or you published a lazy package, but lazy somewhere or the other. Yeah. So, okay. So other performance things to think about. So I think, you know, again, like I was saying before, like go back to the basics, think about the platform you're running on. You can't think about performance in a vacuum and we're running code that compiles to JavaScript in a browser. So we have to understand, for example, bundle size is pretty important for initial load performance and Elm has dead code elimination. So I think it's important, even though Elm does this for us under the hood, if you understand what it's doing a little bit, then it might help you take advantage of it more easily. So like basically, I think Mario Rogic was describing it recently saying that it's actually not dead code elimination. It's live code inclusion, which I thought was a nice way to describe it. So like what he means by that is that the Elm compiler lazily pulls in code as needed that you reference. So if code doesn't get referenced, the compiler isn't going to reach it and it's not going to pull that in and compile it. So you start with the main, you look at what it uses, you pull those in, look at what they use, et cetera, et cetera. And when you've reached all the functions that were used, you take all those, you put them in the bundle and you forget all the rest. Right. And Elm doesn't care what you import. If you import something and don't use it, although if you're using Elm review unused, then hopefully you don't have unused imports. But even if you do, Elm doesn't care. It cares the functions that you invoke that are reachable. So Elm does function level dead code elimination. So if you structure things in a way, if you touch a giant record and you only use one field in a giant record, you've just pulled in that giant record to your bundle. Yeah. And I think that's the reason why we tend not to have APIs that expose a record with a to list, from list, blah, blah, blah. Because if you only use one of those, you still get the whole API. Yes, exactly. Yeah, I did that with that in mind in this BCP 47 language tag package I published, which is just basically like a way to use these different language codes with a little bit of type safety, helping you be confident that you're getting the codes correct for languages and countries. And so I don't use any lists or records for it. They're just individual values. And so if there are thousands of codes and you refer to two, then that's what ends up in your bundle. And the fact that Elm has this live code inclusion is that we can put a lot of things in helper packages. Like a very common complaint about the JavaScript ecosystem is about, for instance, lodash, which is very big, but also very useful. But a lot of the functions you will not use in your project, like more than 90%. And we have packages like list, dash extra, dict extra, et cetera. And we can put as many functions as we want in there. It's mostly up to maintenance costs as to what should be in there. But once you add the package and you use one function, while you only use that one function, you don't include all the rest. And that frees us up as library authors to put in as many useful things that we want without having to care about bundle size. And that is very nice. It's really nice. And you see these lodash sub packages that are splitting out separate categories of lodash functions. And I mean, as a user. Every function. Oh, every single function is that? Oh, my gosh. As a user, you don't want the user to need to worry about that. And that's one of the benefits that comes from Elm's purity is that importing a module doesn't have any side effects, running a function doesn't even have any side effects. So you don't need to worry about all of those complexities when you're doing your dead code elimination or your live code inclusion. You can still have side effects when you call a function if it explodes the call stack, but that's about it. Well, that's fair. But at that point, we know how to solve that one. We know how to solve it. And even if the call stack blows up, then Elm can just relax and be like, all right, my job here is done. And we talked about having an awareness of the performance implications of these different techniques and types of code, just so you know what to be on the lookout for if you're looking to optimize something and to look for red flags. I think it's also valuable to understand a little bit about Elm's data structures. And actually, most of the Elm data structures, like if you go to the docs for Elm core dict, for example, then it tells you the complexity of these operations. So it's O log N for insert, remove and querying operations in dict. I think that's really good to know. What does that mean for people who didn't study computer science? Right. I mean, what it means is that there's a relationship between the performance cost of adding, removing or looking up in a dictionary that's related to the size of the number of entries in the dictionary. So the more items there are in the dictionary, the longer it's going to take to remove something. If you say I want to remove something and there are a million things, it's going to take longer than if there were 10 things. Now, it's not linearly related to it where it's going to be a million times slower for a million things than removing one item from a dictionary with one thing. But it means that... That would be the case if it was O of N. That would be the case if it was O of N, exactly. But it's O of log N. And the reason it's log N is because the worst case scenario is it's branching down these branches of a tree so it doesn't have to traverse everything. It can intelligently split the work. And so log of N is way smaller than N for numbers like a million. For numbers like five, obviously it's not going to make much of a difference. But it's important to understand that and just be aware of it. If you're dealing with very large input and you're trying to remove things frequently or add things frequently to a dictionary, that's something you should be aware of. And because I often think of map key value data structures as constant time lookup and insertion and deletion. So I think it's important to realize that it's not for a dict. In a way, in Elm, it feels a bit more expensive. Like if you do dict.get, because the code around it is more complex. You need to do a case of or you need to do maybe map. So it feels a lot more complex than record access or field access in JavaScript, for instance. Yeah. So it's pretty interesting in JavaScript. I recently learned that objects inserting and deleting fields in an object in a JavaScript object makes it like it deoptimizes all of these just in time optimizations that the JavaScript runtime does. Yeah. And also, again, the monomorphic. Yeah. There's this like concept of a shape and it basically calculates where to look for data in an object. But as soon as you change the like prototype by adding or removing things to an object, it can no longer use that reference to quickly figure out where to look things up. And it has to basically recalculate how to look up memory from an object. And anyway, it's surprising the performance characteristics of things are surprising. So even a JavaScript object doesn't necessarily just have like O of one look up time. And a JavaScript map is more optimized for that use case. Yeah. We're going to link to an article called What's Up with Monomorphism? Yeah. Cool. Which is a bit complex, but it explains it well. Yeah. And one thing that is pretty nice that Elm does is that it tries to keep it optimized with this regard. Right. Which is not the case in JavaScript when you write it yourself. Right. Because from Elm 18 to 19, it actually removed the ability to do an object or a record update that changed the shape. Yeah. So Elm Optimize Level 2 is another really great tool that people should check out. And Matt Griffith and Simon Twopp, is that his last name or is that his handle? Either way, they created this really cool tool. And it's a post processing tool that takes the Elm output and it optimizes it using some clever optimization opportunities that Robin found who did a lot of cool optimizations on some of these core data structures like List and Dict. So anyway, that is a nice little free to use tool. You just run it and your performance improves because it tries to optimize the code better for JavaScript engines. Yeah. It will take a few seconds. Yeah, it usually takes around four seconds for me to run. Oh, yeah. So instead of doing Elm dash dash optimize, you do Elm Optimize Level 2 dash dash optimize. Takes a couple seconds longer because it does call Elm make optimize and then does some code transformations. So it's additional work, but it can be very worthwhile. Yeah. But benchmark it. Yeah. And we actually didn't mention Elm Explorations benchmark. Yes. So there's this Elm Explorations package called Benchmark where you can basically create programs or yeah, programs which run functions over and over and over again and compare them. So if you want to know if one function is faster when it's written one way or written another way, then you write them both and then you run a benchmark which compares them and runs it a bunch of times and gives you which one is faster with how likely is it that the results are trustworthy. And it's something that is pretty nice to use. It does make the browser slow, which is annoying. Actually don't even know whether you're supposed not to touch your computer when you're running them. We should mention the browser for the little benchmarking app, not for your actual app. Yeah. I will link to a pull request which I made to this extra where I made a benchmark for an optimization about telecom optimization and you can look at the results there. One thing I haven't found a good way to do yet is using Elm Benchmark is great for comparing two different implementations and for playing around. You can copy an implementation to a parallel module and try some optimizations and figure out if they actually help or hurt. It's really good for that. But for measuring performance over time, it doesn't help you there. I haven't figured out a good process for that because for me, building a markdown parser and some things like this, these are the super performance intensive things where sometimes you do have to sacrifice code maintainability for performance. You need to go for performance because they're so critical for performance. And sometimes you need to add a feature and that will hurt performance. Right. However you change it. Yeah. You need to go that extra effort in a way that often in regular browser applications you don't need to. I would love to have a nice way to track things over time. I guess I really should use this. I know that, so I think it's WebPagetest, if I'm not mistaken, webpagetest.org. I believe you can set that up. And I think maybe Google has a similar thing that you can use through web.dev or something. But I think that it has the ability to track performance over time. I think there are some Netlify plugins that help with this too and maybe some GitHub actions. I'm not sure. I'll add some links to some things in the show notes. Then you can read them and send the results to Dillon. There you go. Yes, that's right. I really should try this out. But I think like webpagetest.org, I think that's a thing that people do is kind of track their Lighthouse scores over time so you can catch any performance degradation. So that could be a helpful thing. That could potentially be something we could use when using maybe benchmarking things. We could create our own little web page that just exercises something and check its performance over time. That will be very expensive compute in CPU time. By the way, so I said when you need to add features, sometimes performance will be degraded. I think I see a lot, especially in the JavaScript ecosystem. There's a new tool which is 10 times as fast as other similar projects. This is React but 10 times faster. When it's new, it's often because they don't have the same feature parity. So like, yeah, you are faster, but you don't handle that one. Are you hinting at ES build? I am not thinking of ES build at all. I actually don't have anything in particular in mind. Very often it's like when you implement the same features that other things have, then you will need to incur big performance costs. So I'm always very wary about things that say, oh, we're so fast. We're so much faster. But you're also kind of new. So beware, beware. Interesting. But if you have the same parity, feature parity, great, awesome. Go for it. Oh, no, yeah, where I often see it is like for linters. There's RSLint, which is ESLint written in Rust. That's what all the cool kids are doing these days. They're rewriting JavaScript tools in Rust or Go, which is probably a good idea. Which is probably a good idea, yeah. And it's so much faster than ESLint. It's great. But it doesn't have custom built rules. So it doesn't have all the rules built by the community. It doesn't have rules that you can build yourself, which is a huge feature in ESLint. And you can't compare the two, in my opinion, without that. And it will be a problem for them to include it into compiled source code. So especially in that instance, I'm like, yeah, no, you're fast, sure. But no, you can't say that. Performance is just so good, though. When you have amazing performance, the experience is incomparable. It just feels so much nicer to use it. So performance is a worthy endeavor, but it is also a never ending challenge. But go for that low hanging fruit, sprinkle in some lazy, run Lighthouse, see what happens. Spend your time focusing on the bottlenecks, not doing random optimizations that make your code hard to maintain, but don't actually impact your critical path for performance. Also serve things up with a CDN. Get that time to first byte down, get the first load performance improved. Get all the low hanging fruit that you can. A lot of the performance will come from web techniques and Elm techniques. Probably the biggest ones. Exactly. Yeah. And that's the other reason you always benchmark. If you make something 100 times faster and it's taking a nanosecond, then that's great. But if you made something 1% faster and it was taking two seconds, then that would have paid for itself much better. So sometimes just adding a little preload directive to preload a font and do that initial handshake or make sure that you're running Terser or some sort of minifier on your Elm output. We'll share a link to the instructions for how to do that in the show notes, both with Elm Optimize Level 2 and with Vanilla Elm. It's not about Elm performance. Elm runs in the browser. So you've got to think about Elm performance, but also the platform it's running in. Feel like we need the more you know, a little sparkling sound whenever we give our public service announcements. All right. Well, I think we've covered performance. All of performance. We also have a whole episode Lighthouse. That's true. Yes. You forgot about it? I've bad. It was a long time ago. Yeah, yeah, that's true. There are a lot of good resources out there on optimizing those details, too. I'll drop a link to a couple of talks about that as well. The Jake and Surma, the Google dev rel guys have some really cool talks where they go into some of these details. So I'll drop a link to a few of those talks. All right. We covered everything now. There you go. Your apps will never have performance issues ever again. Well, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello Jeroen.", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello Dillon.", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 2, "seek": 0, "start": 2.0, "end": 3.0, "text": " And what are we talking about today?", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 3, "seek": 0, "start": 3.0, "end": 8.0, "text": " Today we're talking about performance, which we've never talked about before really, I", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 4, "seek": 0, "start": 8.0, "end": 9.0, "text": " think.", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 5, "seek": 0, "start": 9.0, "end": 10.0, "text": " Not so much.", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 6, "seek": 0, "start": 10.0, "end": 20.0, "text": " And so you've been sort of pretty deep in some performance analysis stuff for some Elm", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 7, "seek": 0, "start": 20.0, "end": 22.0, "text": " Review rules, right?", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 8, "seek": 0, "start": 22.0, "end": 23.0, "text": " Yeah.", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 9, "seek": 0, "start": 23.0, "end": 29.0, "text": " So I recently published Elm Review Performance, which has for now only one rule, which is", "tokens": [50364, 2425, 508, 2032, 268, 13, 50414, 50414, 2425, 28160, 13, 50464, 50464, 400, 437, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 321, 434, 1417, 466, 3389, 11, 597, 321, 600, 1128, 2825, 466, 949, 534, 11, 286, 50764, 50764, 519, 13, 50814, 50814, 1726, 370, 709, 13, 50864, 50864, 400, 370, 291, 600, 668, 1333, 295, 1238, 2452, 294, 512, 3389, 5215, 1507, 337, 512, 2699, 76, 51364, 51364, 19954, 4474, 11, 558, 30, 51464, 51464, 865, 13, 51514, 51514, 407, 286, 3938, 6572, 2699, 76, 19954, 25047, 11, 597, 575, 337, 586, 787, 472, 4978, 11, 597, 307, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.22996629987444198, "compression_ratio": 1.6331877729257642, "no_caption_prob": 0.07674232125282288}, {"id": 10, "seek": 2900, "start": 29.0, "end": 35.0, "text": " about detecting tail call optimizations or lack thereof.", "tokens": [50364, 466, 40237, 6838, 818, 5028, 14455, 420, 5011, 456, 2670, 13, 50664, 50664, 407, 360, 291, 458, 437, 6838, 818, 19618, 307, 30, 50764, 50764, 286, 360, 458, 437, 6838, 818, 19618, 307, 11, 457, 309, 920, 8344, 1497, 8355, 385, 437, 264, 51264, 51264, 3539, 3389, 16602, 366, 13, 51364, 51364, 286, 1223, 300, 309, 311, 3372, 257, 8630, 3920, 337, 633, 2445, 818, 300, 309, 311, 20560, 3413, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04890941606985556, "compression_ratio": 1.726775956284153, "no_caption_prob": 6.604798545595258e-05}, {"id": 11, "seek": 2900, "start": 35.0, "end": 37.0, "text": " So do you know what tail call optimization is?", "tokens": [50364, 466, 40237, 6838, 818, 5028, 14455, 420, 5011, 456, 2670, 13, 50664, 50664, 407, 360, 291, 458, 437, 6838, 818, 19618, 307, 30, 50764, 50764, 286, 360, 458, 437, 6838, 818, 19618, 307, 11, 457, 309, 920, 8344, 1497, 8355, 385, 437, 264, 51264, 51264, 3539, 3389, 16602, 366, 13, 51364, 51364, 286, 1223, 300, 309, 311, 3372, 257, 8630, 3920, 337, 633, 2445, 818, 300, 309, 311, 20560, 3413, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04890941606985556, "compression_ratio": 1.726775956284153, "no_caption_prob": 6.604798545595258e-05}, {"id": 12, "seek": 2900, "start": 37.0, "end": 47.0, "text": " I do know what tail call optimization is, but it still somewhat confuses me what the", "tokens": [50364, 466, 40237, 6838, 818, 5028, 14455, 420, 5011, 456, 2670, 13, 50664, 50664, 407, 360, 291, 458, 437, 6838, 818, 19618, 307, 30, 50764, 50764, 286, 360, 458, 437, 6838, 818, 19618, 307, 11, 457, 309, 920, 8344, 1497, 8355, 385, 437, 264, 51264, 51264, 3539, 3389, 16602, 366, 13, 51364, 51364, 286, 1223, 300, 309, 311, 3372, 257, 8630, 3920, 337, 633, 2445, 818, 300, 309, 311, 20560, 3413, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04890941606985556, "compression_ratio": 1.726775956284153, "no_caption_prob": 6.604798545595258e-05}, {"id": 13, "seek": 2900, "start": 47.0, "end": 49.0, "text": " actual performance implications are.", "tokens": [50364, 466, 40237, 6838, 818, 5028, 14455, 420, 5011, 456, 2670, 13, 50664, 50664, 407, 360, 291, 458, 437, 6838, 818, 19618, 307, 30, 50764, 50764, 286, 360, 458, 437, 6838, 818, 19618, 307, 11, 457, 309, 920, 8344, 1497, 8355, 385, 437, 264, 51264, 51264, 3539, 3389, 16602, 366, 13, 51364, 51364, 286, 1223, 300, 309, 311, 3372, 257, 8630, 3920, 337, 633, 2445, 818, 300, 309, 311, 20560, 3413, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04890941606985556, "compression_ratio": 1.726775956284153, "no_caption_prob": 6.604798545595258e-05}, {"id": 14, "seek": 2900, "start": 49.0, "end": 55.0, "text": " I understand that it's putting a stack frame for every function call that it's recursively", "tokens": [50364, 466, 40237, 6838, 818, 5028, 14455, 420, 5011, 456, 2670, 13, 50664, 50664, 407, 360, 291, 458, 437, 6838, 818, 19618, 307, 30, 50764, 50764, 286, 360, 458, 437, 6838, 818, 19618, 307, 11, 457, 309, 920, 8344, 1497, 8355, 385, 437, 264, 51264, 51264, 3539, 3389, 16602, 366, 13, 51364, 51364, 286, 1223, 300, 309, 311, 3372, 257, 8630, 3920, 337, 633, 2445, 818, 300, 309, 311, 20560, 3413, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.04890941606985556, "compression_ratio": 1.726775956284153, "no_caption_prob": 6.604798545595258e-05}, {"id": 15, "seek": 5500, "start": 55.0, "end": 60.0, "text": " calling if it's not tail call optimized and you can reduce that stack frame.", "tokens": [50364, 5141, 498, 309, 311, 406, 6838, 818, 26941, 293, 291, 393, 5407, 300, 8630, 3920, 13, 50614, 50614, 583, 286, 500, 380, 1223, 437, 366, 264, 3389, 10891, 295, 411, 5127, 300, 8630, 50914, 50914, 3920, 337, 257, 20560, 488, 818, 5717, 445, 1419, 264, 4675, 382, 309, 1709, 807, 257, 1339, 6367, 51264, 51264, 420, 2035, 13, 51314, 51314, 407, 300, 311, 1333, 295, 1152, 281, 7019, 452, 3567, 926, 13, 51414, 51414, 2743, 11, 2171, 309, 311, 2252, 281, 1223, 577, 360, 291, 4088, 746, 300, 311, 406, 51664, 51664, 6838, 818, 26941, 281, 746, 300, 311, 6838, 818, 26941, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057171696814421184, "compression_ratio": 1.8339920948616601, "no_caption_prob": 3.70508678315673e-05}, {"id": 16, "seek": 5500, "start": 60.0, "end": 66.0, "text": " But I don't understand what are the performance characteristics of like adding that stack", "tokens": [50364, 5141, 498, 309, 311, 406, 6838, 818, 26941, 293, 291, 393, 5407, 300, 8630, 3920, 13, 50614, 50614, 583, 286, 500, 380, 1223, 437, 366, 264, 3389, 10891, 295, 411, 5127, 300, 8630, 50914, 50914, 3920, 337, 257, 20560, 488, 818, 5717, 445, 1419, 264, 4675, 382, 309, 1709, 807, 257, 1339, 6367, 51264, 51264, 420, 2035, 13, 51314, 51314, 407, 300, 311, 1333, 295, 1152, 281, 7019, 452, 3567, 926, 13, 51414, 51414, 2743, 11, 2171, 309, 311, 2252, 281, 1223, 577, 360, 291, 4088, 746, 300, 311, 406, 51664, 51664, 6838, 818, 26941, 281, 746, 300, 311, 6838, 818, 26941, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057171696814421184, "compression_ratio": 1.8339920948616601, "no_caption_prob": 3.70508678315673e-05}, {"id": 17, "seek": 5500, "start": 66.0, "end": 73.0, "text": " frame for a recursive call versus just having the memory as it goes through a while loop", "tokens": [50364, 5141, 498, 309, 311, 406, 6838, 818, 26941, 293, 291, 393, 5407, 300, 8630, 3920, 13, 50614, 50614, 583, 286, 500, 380, 1223, 437, 366, 264, 3389, 10891, 295, 411, 5127, 300, 8630, 50914, 50914, 3920, 337, 257, 20560, 488, 818, 5717, 445, 1419, 264, 4675, 382, 309, 1709, 807, 257, 1339, 6367, 51264, 51264, 420, 2035, 13, 51314, 51314, 407, 300, 311, 1333, 295, 1152, 281, 7019, 452, 3567, 926, 13, 51414, 51414, 2743, 11, 2171, 309, 311, 2252, 281, 1223, 577, 360, 291, 4088, 746, 300, 311, 406, 51664, 51664, 6838, 818, 26941, 281, 746, 300, 311, 6838, 818, 26941, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057171696814421184, "compression_ratio": 1.8339920948616601, "no_caption_prob": 3.70508678315673e-05}, {"id": 18, "seek": 5500, "start": 73.0, "end": 74.0, "text": " or whatever.", "tokens": [50364, 5141, 498, 309, 311, 406, 6838, 818, 26941, 293, 291, 393, 5407, 300, 8630, 3920, 13, 50614, 50614, 583, 286, 500, 380, 1223, 437, 366, 264, 3389, 10891, 295, 411, 5127, 300, 8630, 50914, 50914, 3920, 337, 257, 20560, 488, 818, 5717, 445, 1419, 264, 4675, 382, 309, 1709, 807, 257, 1339, 6367, 51264, 51264, 420, 2035, 13, 51314, 51314, 407, 300, 311, 1333, 295, 1152, 281, 7019, 452, 3567, 926, 13, 51414, 51414, 2743, 11, 2171, 309, 311, 2252, 281, 1223, 577, 360, 291, 4088, 746, 300, 311, 406, 51664, 51664, 6838, 818, 26941, 281, 746, 300, 311, 6838, 818, 26941, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057171696814421184, "compression_ratio": 1.8339920948616601, "no_caption_prob": 3.70508678315673e-05}, {"id": 19, "seek": 5500, "start": 74.0, "end": 76.0, "text": " So that's sort of hard to wrap my brain around.", "tokens": [50364, 5141, 498, 309, 311, 406, 6838, 818, 26941, 293, 291, 393, 5407, 300, 8630, 3920, 13, 50614, 50614, 583, 286, 500, 380, 1223, 437, 366, 264, 3389, 10891, 295, 411, 5127, 300, 8630, 50914, 50914, 3920, 337, 257, 20560, 488, 818, 5717, 445, 1419, 264, 4675, 382, 309, 1709, 807, 257, 1339, 6367, 51264, 51264, 420, 2035, 13, 51314, 51314, 407, 300, 311, 1333, 295, 1152, 281, 7019, 452, 3567, 926, 13, 51414, 51414, 2743, 11, 2171, 309, 311, 2252, 281, 1223, 577, 360, 291, 4088, 746, 300, 311, 406, 51664, 51664, 6838, 818, 26941, 281, 746, 300, 311, 6838, 818, 26941, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057171696814421184, "compression_ratio": 1.8339920948616601, "no_caption_prob": 3.70508678315673e-05}, {"id": 20, "seek": 5500, "start": 76.0, "end": 81.0, "text": " Also, sometimes it's difficult to understand how do you transform something that's not", "tokens": [50364, 5141, 498, 309, 311, 406, 6838, 818, 26941, 293, 291, 393, 5407, 300, 8630, 3920, 13, 50614, 50614, 583, 286, 500, 380, 1223, 437, 366, 264, 3389, 10891, 295, 411, 5127, 300, 8630, 50914, 50914, 3920, 337, 257, 20560, 488, 818, 5717, 445, 1419, 264, 4675, 382, 309, 1709, 807, 257, 1339, 6367, 51264, 51264, 420, 2035, 13, 51314, 51314, 407, 300, 311, 1333, 295, 1152, 281, 7019, 452, 3567, 926, 13, 51414, 51414, 2743, 11, 2171, 309, 311, 2252, 281, 1223, 577, 360, 291, 4088, 746, 300, 311, 406, 51664, 51664, 6838, 818, 26941, 281, 746, 300, 311, 6838, 818, 26941, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057171696814421184, "compression_ratio": 1.8339920948616601, "no_caption_prob": 3.70508678315673e-05}, {"id": 21, "seek": 5500, "start": 81.0, "end": 84.0, "text": " tail call optimized to something that's tail call optimized.", "tokens": [50364, 5141, 498, 309, 311, 406, 6838, 818, 26941, 293, 291, 393, 5407, 300, 8630, 3920, 13, 50614, 50614, 583, 286, 500, 380, 1223, 437, 366, 264, 3389, 10891, 295, 411, 5127, 300, 8630, 50914, 50914, 3920, 337, 257, 20560, 488, 818, 5717, 445, 1419, 264, 4675, 382, 309, 1709, 807, 257, 1339, 6367, 51264, 51264, 420, 2035, 13, 51314, 51314, 407, 300, 311, 1333, 295, 1152, 281, 7019, 452, 3567, 926, 13, 51414, 51414, 2743, 11, 2171, 309, 311, 2252, 281, 1223, 577, 360, 291, 4088, 746, 300, 311, 406, 51664, 51664, 6838, 818, 26941, 281, 746, 300, 311, 6838, 818, 26941, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.057171696814421184, "compression_ratio": 1.8339920948616601, "no_caption_prob": 3.70508678315673e-05}, {"id": 22, "seek": 8400, "start": 84.0, "end": 86.0, "text": " Those two things confuse me.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 23, "seek": 8400, "start": 86.0, "end": 87.0, "text": " Yeah.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 24, "seek": 8400, "start": 87.0, "end": 90.0, "text": " So maybe let's start with the basics.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 25, "seek": 8400, "start": 90.0, "end": 92.0, "text": " First of all, what is a recursive function?", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 26, "seek": 8400, "start": 92.0, "end": 96.0, "text": " So recursive function is a function that calls itself.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 27, "seek": 8400, "start": 96.0, "end": 102.0, "text": " So for instance, list.length is a recursive function.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 28, "seek": 8400, "start": 102.0, "end": 106.0, "text": " I thought you were going to say a recursive function is a recursive function.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 29, "seek": 8400, "start": 106.0, "end": 109.0, "text": " And to understand a recursive function, you have to understand what a recursive function", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 30, "seek": 8400, "start": 109.0, "end": 110.0, "text": " is.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 31, "seek": 8400, "start": 110.0, "end": 112.0, "text": " I totally missed my joke there.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 32, "seek": 8400, "start": 112.0, "end": 113.0, "text": " Yeah, come on.", "tokens": [50364, 3950, 732, 721, 28584, 385, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 1310, 718, 311, 722, 365, 264, 14688, 13, 50664, 50664, 2386, 295, 439, 11, 437, 307, 257, 20560, 488, 2445, 30, 50764, 50764, 407, 20560, 488, 2445, 307, 257, 2445, 300, 5498, 2564, 13, 50964, 50964, 407, 337, 5197, 11, 1329, 13, 45390, 307, 257, 20560, 488, 2445, 13, 51264, 51264, 286, 1194, 291, 645, 516, 281, 584, 257, 20560, 488, 2445, 307, 257, 20560, 488, 2445, 13, 51464, 51464, 400, 281, 1223, 257, 20560, 488, 2445, 11, 291, 362, 281, 1223, 437, 257, 20560, 488, 2445, 51614, 51614, 307, 13, 51664, 51664, 286, 3879, 6721, 452, 7647, 456, 13, 51764, 51764, 865, 11, 808, 322, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06326547745735414, "compression_ratio": 2.0136363636363637, "no_caption_prob": 1.8924856703961268e-05}, {"id": 33, "seek": 11300, "start": 113.0, "end": 115.0, "text": " I'm going to try to understand.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 34, "seek": 11300, "start": 115.0, "end": 123.0, "text": " No, I usually never do the recursive jokes because when I try to do the recursive jokes,", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 35, "seek": 11300, "start": 123.0, "end": 127.0, "text": " that's when I try to do the recursive jokes and that's when I try to do the recursive.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 36, "seek": 11300, "start": 127.0, "end": 128.0, "text": " Yeah.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 37, "seek": 11300, "start": 128.0, "end": 129.0, "text": " You don't want to get too stuck on that.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 38, "seek": 11300, "start": 129.0, "end": 130.0, "text": " Yeah.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 39, "seek": 11300, "start": 130.0, "end": 132.0, "text": " And that's where tail call optimization comes in.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 40, "seek": 11300, "start": 132.0, "end": 133.0, "text": " Actually, it doesn't.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 41, "seek": 11300, "start": 133.0, "end": 134.0, "text": " Yeah.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 42, "seek": 11300, "start": 134.0, "end": 137.0, "text": " I can't stop you from not having a base case, but still a good day.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 43, "seek": 11300, "start": 137.0, "end": 140.0, "text": " So a recursive function is one that calls itself.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 44, "seek": 11300, "start": 140.0, "end": 141.0, "text": " So list.length.", "tokens": [50364, 286, 478, 516, 281, 853, 281, 1223, 13, 50464, 50464, 883, 11, 286, 2673, 1128, 360, 264, 20560, 488, 14439, 570, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 11, 50864, 50864, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 14439, 293, 300, 311, 562, 286, 853, 281, 360, 264, 20560, 488, 13, 51064, 51064, 865, 13, 51114, 51114, 509, 500, 380, 528, 281, 483, 886, 5541, 322, 300, 13, 51164, 51164, 865, 13, 51214, 51214, 400, 300, 311, 689, 6838, 818, 19618, 1487, 294, 13, 51314, 51314, 5135, 11, 309, 1177, 380, 13, 51364, 51364, 865, 13, 51414, 51414, 286, 393, 380, 1590, 291, 490, 406, 1419, 257, 3096, 1389, 11, 457, 920, 257, 665, 786, 13, 51564, 51564, 407, 257, 20560, 488, 2445, 307, 472, 300, 5498, 2564, 13, 51714, 51714, 407, 1329, 13, 45390, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.18851189448915678, "compression_ratio": 1.926530612244898, "no_caption_prob": 0.00010554333857726306}, {"id": 45, "seek": 14100, "start": 141.0, "end": 145.0, "text": " I actually don't know if it's implemented in JavaScript or not, but let's imagine it", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 46, "seek": 14100, "start": 145.0, "end": 146.0, "text": " is in Elm.", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 47, "seek": 14100, "start": 146.0, "end": 148.0, "text": " So how would you implement that?", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 48, "seek": 14100, "start": 148.0, "end": 152.0, "text": " You would do a case of the list.", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 49, "seek": 14100, "start": 152.0, "end": 157.0, "text": " So case list of, and if it's empty, then return zero.", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 50, "seek": 14100, "start": 157.0, "end": 162.0, "text": " And otherwise you return one plus list.length of the rest.", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 51, "seek": 14100, "start": 162.0, "end": 165.0, "text": " So list.length calls itself.", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 52, "seek": 14100, "start": 165.0, "end": 168.0, "text": " So you would add one for every element.", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 53, "seek": 14100, "start": 168.0, "end": 170.0, "text": " So that is recursive.", "tokens": [50364, 286, 767, 500, 380, 458, 498, 309, 311, 12270, 294, 15778, 420, 406, 11, 457, 718, 311, 3811, 309, 50564, 50564, 307, 294, 2699, 76, 13, 50614, 50614, 407, 577, 576, 291, 4445, 300, 30, 50714, 50714, 509, 576, 360, 257, 1389, 295, 264, 1329, 13, 50914, 50914, 407, 1389, 1329, 295, 11, 293, 498, 309, 311, 6707, 11, 550, 2736, 4018, 13, 51164, 51164, 400, 5911, 291, 2736, 472, 1804, 1329, 13, 45390, 295, 264, 1472, 13, 51414, 51414, 407, 1329, 13, 45390, 5498, 2564, 13, 51564, 51564, 407, 291, 576, 909, 472, 337, 633, 4478, 13, 51714, 51714, 407, 300, 307, 20560, 488, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07685875459150834, "compression_ratio": 1.6590909090909092, "no_caption_prob": 5.224986671237275e-05}, {"id": 54, "seek": 17000, "start": 170.0, "end": 177.0, "text": " A tail call recursive function is one where it's the same thing, but it's just more optimized.", "tokens": [50364, 316, 6838, 818, 20560, 488, 2445, 307, 472, 689, 309, 311, 264, 912, 551, 11, 457, 309, 311, 445, 544, 26941, 13, 50714, 50714, 407, 382, 291, 848, 11, 437, 2314, 562, 291, 360, 257, 2445, 818, 294, 15778, 420, 294, 257, 11185, 51114, 51114, 420, 364, 2848, 30, 51164, 51164, 1133, 291, 360, 257, 2445, 818, 11, 309, 1936, 10860, 264, 2190, 2535, 293, 264, 777, 2535, 51464, 51464, 281, 257, 8630, 11, 264, 6828, 818, 8630, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09049462175917351, "compression_ratio": 1.6683673469387754, "no_caption_prob": 9.912692621583119e-05}, {"id": 55, "seek": 17000, "start": 177.0, "end": 185.0, "text": " So as you said, what happens when you do a function call in JavaScript or in a browser", "tokens": [50364, 316, 6838, 818, 20560, 488, 2445, 307, 472, 689, 309, 311, 264, 912, 551, 11, 457, 309, 311, 445, 544, 26941, 13, 50714, 50714, 407, 382, 291, 848, 11, 437, 2314, 562, 291, 360, 257, 2445, 818, 294, 15778, 420, 294, 257, 11185, 51114, 51114, 420, 364, 2848, 30, 51164, 51164, 1133, 291, 360, 257, 2445, 818, 11, 309, 1936, 10860, 264, 2190, 2535, 293, 264, 777, 2535, 51464, 51464, 281, 257, 8630, 11, 264, 6828, 818, 8630, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09049462175917351, "compression_ratio": 1.6683673469387754, "no_caption_prob": 9.912692621583119e-05}, {"id": 56, "seek": 17000, "start": 185.0, "end": 186.0, "text": " or an engine?", "tokens": [50364, 316, 6838, 818, 20560, 488, 2445, 307, 472, 689, 309, 311, 264, 912, 551, 11, 457, 309, 311, 445, 544, 26941, 13, 50714, 50714, 407, 382, 291, 848, 11, 437, 2314, 562, 291, 360, 257, 2445, 818, 294, 15778, 420, 294, 257, 11185, 51114, 51114, 420, 364, 2848, 30, 51164, 51164, 1133, 291, 360, 257, 2445, 818, 11, 309, 1936, 10860, 264, 2190, 2535, 293, 264, 777, 2535, 51464, 51464, 281, 257, 8630, 11, 264, 6828, 818, 8630, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09049462175917351, "compression_ratio": 1.6683673469387754, "no_caption_prob": 9.912692621583119e-05}, {"id": 57, "seek": 17000, "start": 186.0, "end": 192.0, "text": " When you do a function call, it basically adds the current position and the new position", "tokens": [50364, 316, 6838, 818, 20560, 488, 2445, 307, 472, 689, 309, 311, 264, 912, 551, 11, 457, 309, 311, 445, 544, 26941, 13, 50714, 50714, 407, 382, 291, 848, 11, 437, 2314, 562, 291, 360, 257, 2445, 818, 294, 15778, 420, 294, 257, 11185, 51114, 51114, 420, 364, 2848, 30, 51164, 51164, 1133, 291, 360, 257, 2445, 818, 11, 309, 1936, 10860, 264, 2190, 2535, 293, 264, 777, 2535, 51464, 51464, 281, 257, 8630, 11, 264, 6828, 818, 8630, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09049462175917351, "compression_ratio": 1.6683673469387754, "no_caption_prob": 9.912692621583119e-05}, {"id": 58, "seek": 17000, "start": 192.0, "end": 196.0, "text": " to a stack, the functions call stack.", "tokens": [50364, 316, 6838, 818, 20560, 488, 2445, 307, 472, 689, 309, 311, 264, 912, 551, 11, 457, 309, 311, 445, 544, 26941, 13, 50714, 50714, 407, 382, 291, 848, 11, 437, 2314, 562, 291, 360, 257, 2445, 818, 294, 15778, 420, 294, 257, 11185, 51114, 51114, 420, 364, 2848, 30, 51164, 51164, 1133, 291, 360, 257, 2445, 818, 11, 309, 1936, 10860, 264, 2190, 2535, 293, 264, 777, 2535, 51464, 51464, 281, 257, 8630, 11, 264, 6828, 818, 8630, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09049462175917351, "compression_ratio": 1.6683673469387754, "no_caption_prob": 9.912692621583119e-05}, {"id": 59, "seek": 17000, "start": 196.0, "end": 197.0, "text": " Yes.", "tokens": [50364, 316, 6838, 818, 20560, 488, 2445, 307, 472, 689, 309, 311, 264, 912, 551, 11, 457, 309, 311, 445, 544, 26941, 13, 50714, 50714, 407, 382, 291, 848, 11, 437, 2314, 562, 291, 360, 257, 2445, 818, 294, 15778, 420, 294, 257, 11185, 51114, 51114, 420, 364, 2848, 30, 51164, 51164, 1133, 291, 360, 257, 2445, 818, 11, 309, 1936, 10860, 264, 2190, 2535, 293, 264, 777, 2535, 51464, 51464, 281, 257, 8630, 11, 264, 6828, 818, 8630, 13, 51664, 51664, 1079, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.09049462175917351, "compression_ratio": 1.6683673469387754, "no_caption_prob": 9.912692621583119e-05}, {"id": 60, "seek": 19700, "start": 197.0, "end": 201.0, "text": " I'm not going to use the technical terms because I'm not aware of those.", "tokens": [50364, 286, 478, 406, 516, 281, 764, 264, 6191, 2115, 570, 286, 478, 406, 3650, 295, 729, 13, 50564, 50564, 583, 1338, 11, 1936, 456, 311, 257, 8630, 13, 50664, 50664, 407, 300, 311, 1564, 291, 2736, 490, 257, 2445, 11, 291, 458, 689, 294, 264, 3089, 264, 2848, 2203, 50964, 50964, 281, 352, 646, 13, 51064, 51064, 1779, 13, 51114, 51114, 467, 311, 1936, 411, 257, 352, 281, 10951, 300, 5112, 309, 412, 257, 2295, 1496, 11, 411, 562, 291, 434, 51514, 51514, 1096, 11, 286, 478, 516, 281, 3531, 264, 2736, 2158, 295, 5141, 341, 2445, 294, 341, 4675, 4914, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06955872036161877, "compression_ratio": 1.6652542372881356, "no_caption_prob": 2.5070250558201224e-05}, {"id": 61, "seek": 19700, "start": 201.0, "end": 203.0, "text": " But yeah, basically there's a stack.", "tokens": [50364, 286, 478, 406, 516, 281, 764, 264, 6191, 2115, 570, 286, 478, 406, 3650, 295, 729, 13, 50564, 50564, 583, 1338, 11, 1936, 456, 311, 257, 8630, 13, 50664, 50664, 407, 300, 311, 1564, 291, 2736, 490, 257, 2445, 11, 291, 458, 689, 294, 264, 3089, 264, 2848, 2203, 50964, 50964, 281, 352, 646, 13, 51064, 51064, 1779, 13, 51114, 51114, 467, 311, 1936, 411, 257, 352, 281, 10951, 300, 5112, 309, 412, 257, 2295, 1496, 11, 411, 562, 291, 434, 51514, 51514, 1096, 11, 286, 478, 516, 281, 3531, 264, 2736, 2158, 295, 5141, 341, 2445, 294, 341, 4675, 4914, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06955872036161877, "compression_ratio": 1.6652542372881356, "no_caption_prob": 2.5070250558201224e-05}, {"id": 62, "seek": 19700, "start": 203.0, "end": 209.0, "text": " So that's once you return from a function, you know where in the code the engine needs", "tokens": [50364, 286, 478, 406, 516, 281, 764, 264, 6191, 2115, 570, 286, 478, 406, 3650, 295, 729, 13, 50564, 50564, 583, 1338, 11, 1936, 456, 311, 257, 8630, 13, 50664, 50664, 407, 300, 311, 1564, 291, 2736, 490, 257, 2445, 11, 291, 458, 689, 294, 264, 3089, 264, 2848, 2203, 50964, 50964, 281, 352, 646, 13, 51064, 51064, 1779, 13, 51114, 51114, 467, 311, 1936, 411, 257, 352, 281, 10951, 300, 5112, 309, 412, 257, 2295, 1496, 11, 411, 562, 291, 434, 51514, 51514, 1096, 11, 286, 478, 516, 281, 3531, 264, 2736, 2158, 295, 5141, 341, 2445, 294, 341, 4675, 4914, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06955872036161877, "compression_ratio": 1.6652542372881356, "no_caption_prob": 2.5070250558201224e-05}, {"id": 63, "seek": 19700, "start": 209.0, "end": 211.0, "text": " to go back.", "tokens": [50364, 286, 478, 406, 516, 281, 764, 264, 6191, 2115, 570, 286, 478, 406, 3650, 295, 729, 13, 50564, 50564, 583, 1338, 11, 1936, 456, 311, 257, 8630, 13, 50664, 50664, 407, 300, 311, 1564, 291, 2736, 490, 257, 2445, 11, 291, 458, 689, 294, 264, 3089, 264, 2848, 2203, 50964, 50964, 281, 352, 646, 13, 51064, 51064, 1779, 13, 51114, 51114, 467, 311, 1936, 411, 257, 352, 281, 10951, 300, 5112, 309, 412, 257, 2295, 1496, 11, 411, 562, 291, 434, 51514, 51514, 1096, 11, 286, 478, 516, 281, 3531, 264, 2736, 2158, 295, 5141, 341, 2445, 294, 341, 4675, 4914, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06955872036161877, "compression_ratio": 1.6652542372881356, "no_caption_prob": 2.5070250558201224e-05}, {"id": 64, "seek": 19700, "start": 211.0, "end": 212.0, "text": " Right.", "tokens": [50364, 286, 478, 406, 516, 281, 764, 264, 6191, 2115, 570, 286, 478, 406, 3650, 295, 729, 13, 50564, 50564, 583, 1338, 11, 1936, 456, 311, 257, 8630, 13, 50664, 50664, 407, 300, 311, 1564, 291, 2736, 490, 257, 2445, 11, 291, 458, 689, 294, 264, 3089, 264, 2848, 2203, 50964, 50964, 281, 352, 646, 13, 51064, 51064, 1779, 13, 51114, 51114, 467, 311, 1936, 411, 257, 352, 281, 10951, 300, 5112, 309, 412, 257, 2295, 1496, 11, 411, 562, 291, 434, 51514, 51514, 1096, 11, 286, 478, 516, 281, 3531, 264, 2736, 2158, 295, 5141, 341, 2445, 294, 341, 4675, 4914, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06955872036161877, "compression_ratio": 1.6652542372881356, "no_caption_prob": 2.5070250558201224e-05}, {"id": 65, "seek": 19700, "start": 212.0, "end": 220.0, "text": " It's basically like a go to instruction that tells it at a low level, like when you're", "tokens": [50364, 286, 478, 406, 516, 281, 764, 264, 6191, 2115, 570, 286, 478, 406, 3650, 295, 729, 13, 50564, 50564, 583, 1338, 11, 1936, 456, 311, 257, 8630, 13, 50664, 50664, 407, 300, 311, 1564, 291, 2736, 490, 257, 2445, 11, 291, 458, 689, 294, 264, 3089, 264, 2848, 2203, 50964, 50964, 281, 352, 646, 13, 51064, 51064, 1779, 13, 51114, 51114, 467, 311, 1936, 411, 257, 352, 281, 10951, 300, 5112, 309, 412, 257, 2295, 1496, 11, 411, 562, 291, 434, 51514, 51514, 1096, 11, 286, 478, 516, 281, 3531, 264, 2736, 2158, 295, 5141, 341, 2445, 294, 341, 4675, 4914, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06955872036161877, "compression_ratio": 1.6652542372881356, "no_caption_prob": 2.5070250558201224e-05}, {"id": 66, "seek": 19700, "start": 220.0, "end": 226.0, "text": " done, I'm going to store the return value of calling this function in this memory location", "tokens": [50364, 286, 478, 406, 516, 281, 764, 264, 6191, 2115, 570, 286, 478, 406, 3650, 295, 729, 13, 50564, 50564, 583, 1338, 11, 1936, 456, 311, 257, 8630, 13, 50664, 50664, 407, 300, 311, 1564, 291, 2736, 490, 257, 2445, 11, 291, 458, 689, 294, 264, 3089, 264, 2848, 2203, 50964, 50964, 281, 352, 646, 13, 51064, 51064, 1779, 13, 51114, 51114, 467, 311, 1936, 411, 257, 352, 281, 10951, 300, 5112, 309, 412, 257, 2295, 1496, 11, 411, 562, 291, 434, 51514, 51514, 1096, 11, 286, 478, 516, 281, 3531, 264, 2736, 2158, 295, 5141, 341, 2445, 294, 341, 4675, 4914, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06955872036161877, "compression_ratio": 1.6652542372881356, "no_caption_prob": 2.5070250558201224e-05}, {"id": 67, "seek": 22600, "start": 226.0, "end": 229.0, "text": " and I'm going to, and then jump to this code.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 68, "seek": 22600, "start": 229.0, "end": 232.0, "text": " So that's like generally what's happening there.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 69, "seek": 22600, "start": 232.0, "end": 234.0, "text": " Yeah, absolutely.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 70, "seek": 22600, "start": 234.0, "end": 238.0, "text": " So that is pretty cheap, but it does have a cost.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 71, "seek": 22600, "start": 238.0, "end": 239.0, "text": " Yeah.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 72, "seek": 22600, "start": 239.0, "end": 240.0, "text": " Right.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 73, "seek": 22600, "start": 240.0, "end": 245.0, "text": " So if you're recursing 10 times, then you're probably not going to notice it.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 74, "seek": 22600, "start": 245.0, "end": 246.0, "text": " Yeah.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 75, "seek": 22600, "start": 246.0, "end": 251.0, "text": " But if you're doing list.length on a list of size 10 and it's not tail call optimized,", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 76, "seek": 22600, "start": 251.0, "end": 252.0, "text": " that's probably okay.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 77, "seek": 22600, "start": 252.0, "end": 253.0, "text": " Yeah.", "tokens": [50364, 293, 286, 478, 516, 281, 11, 293, 550, 3012, 281, 341, 3089, 13, 50514, 50514, 407, 300, 311, 411, 5101, 437, 311, 2737, 456, 13, 50664, 50664, 865, 11, 3122, 13, 50764, 50764, 407, 300, 307, 1238, 7084, 11, 457, 309, 775, 362, 257, 2063, 13, 50964, 50964, 865, 13, 51014, 51014, 1779, 13, 51064, 51064, 407, 498, 291, 434, 20560, 278, 1266, 1413, 11, 550, 291, 434, 1391, 406, 516, 281, 3449, 309, 13, 51314, 51314, 865, 13, 51364, 51364, 583, 498, 291, 434, 884, 1329, 13, 45390, 322, 257, 1329, 295, 2744, 1266, 293, 309, 311, 406, 6838, 818, 26941, 11, 51614, 51614, 300, 311, 1391, 1392, 13, 51664, 51664, 865, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06948615736880545, "compression_ratio": 1.6622222222222223, "no_caption_prob": 5.0643564463825896e-05}, {"id": 78, "seek": 25300, "start": 253.0, "end": 258.0, "text": " But if you're doing a thousand or 10,000 or a hundred thousand calls or lists of that", "tokens": [50364, 583, 498, 291, 434, 884, 257, 4714, 420, 1266, 11, 1360, 420, 257, 3262, 4714, 5498, 420, 14511, 295, 300, 50614, 50614, 2744, 11, 550, 309, 3643, 26041, 13, 50764, 50764, 400, 291, 611, 362, 257, 819, 1154, 11, 597, 307, 300, 264, 818, 8630, 575, 257, 4948, 13, 51064, 51064, 7010, 13, 51114, 51114, 3013, 562, 291, 352, 1791, 300, 11, 300, 307, 1219, 257, 8630, 37772, 13, 51314, 51314, 1779, 13, 51364, 51364, 400, 562, 291, 362, 257, 2445, 300, 393, 976, 257, 8630, 37772, 11, 300, 311, 1219, 8630, 4514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13435050419398717, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.3552318452857435e-05}, {"id": 79, "seek": 25300, "start": 258.0, "end": 261.0, "text": " size, then it becomes noticeable.", "tokens": [50364, 583, 498, 291, 434, 884, 257, 4714, 420, 1266, 11, 1360, 420, 257, 3262, 4714, 5498, 420, 14511, 295, 300, 50614, 50614, 2744, 11, 550, 309, 3643, 26041, 13, 50764, 50764, 400, 291, 611, 362, 257, 819, 1154, 11, 597, 307, 300, 264, 818, 8630, 575, 257, 4948, 13, 51064, 51064, 7010, 13, 51114, 51114, 3013, 562, 291, 352, 1791, 300, 11, 300, 307, 1219, 257, 8630, 37772, 13, 51314, 51314, 1779, 13, 51364, 51364, 400, 562, 291, 362, 257, 2445, 300, 393, 976, 257, 8630, 37772, 11, 300, 311, 1219, 8630, 4514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13435050419398717, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.3552318452857435e-05}, {"id": 80, "seek": 25300, "start": 261.0, "end": 267.0, "text": " And you also have a different problem, which is that the call stack has a limit.", "tokens": [50364, 583, 498, 291, 434, 884, 257, 4714, 420, 1266, 11, 1360, 420, 257, 3262, 4714, 5498, 420, 14511, 295, 300, 50614, 50614, 2744, 11, 550, 309, 3643, 26041, 13, 50764, 50764, 400, 291, 611, 362, 257, 819, 1154, 11, 597, 307, 300, 264, 818, 8630, 575, 257, 4948, 13, 51064, 51064, 7010, 13, 51114, 51114, 3013, 562, 291, 352, 1791, 300, 11, 300, 307, 1219, 257, 8630, 37772, 13, 51314, 51314, 1779, 13, 51364, 51364, 400, 562, 291, 362, 257, 2445, 300, 393, 976, 257, 8630, 37772, 11, 300, 311, 1219, 8630, 4514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13435050419398717, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.3552318452857435e-05}, {"id": 81, "seek": 25300, "start": 267.0, "end": 268.0, "text": " Yep.", "tokens": [50364, 583, 498, 291, 434, 884, 257, 4714, 420, 1266, 11, 1360, 420, 257, 3262, 4714, 5498, 420, 14511, 295, 300, 50614, 50614, 2744, 11, 550, 309, 3643, 26041, 13, 50764, 50764, 400, 291, 611, 362, 257, 819, 1154, 11, 597, 307, 300, 264, 818, 8630, 575, 257, 4948, 13, 51064, 51064, 7010, 13, 51114, 51114, 3013, 562, 291, 352, 1791, 300, 11, 300, 307, 1219, 257, 8630, 37772, 13, 51314, 51314, 1779, 13, 51364, 51364, 400, 562, 291, 362, 257, 2445, 300, 393, 976, 257, 8630, 37772, 11, 300, 311, 1219, 8630, 4514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13435050419398717, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.3552318452857435e-05}, {"id": 82, "seek": 25300, "start": 268.0, "end": 272.0, "text": " Which when you go past that, that is called a stack overflow.", "tokens": [50364, 583, 498, 291, 434, 884, 257, 4714, 420, 1266, 11, 1360, 420, 257, 3262, 4714, 5498, 420, 14511, 295, 300, 50614, 50614, 2744, 11, 550, 309, 3643, 26041, 13, 50764, 50764, 400, 291, 611, 362, 257, 819, 1154, 11, 597, 307, 300, 264, 818, 8630, 575, 257, 4948, 13, 51064, 51064, 7010, 13, 51114, 51114, 3013, 562, 291, 352, 1791, 300, 11, 300, 307, 1219, 257, 8630, 37772, 13, 51314, 51314, 1779, 13, 51364, 51364, 400, 562, 291, 362, 257, 2445, 300, 393, 976, 257, 8630, 37772, 11, 300, 311, 1219, 8630, 4514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13435050419398717, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.3552318452857435e-05}, {"id": 83, "seek": 25300, "start": 272.0, "end": 273.0, "text": " Right.", "tokens": [50364, 583, 498, 291, 434, 884, 257, 4714, 420, 1266, 11, 1360, 420, 257, 3262, 4714, 5498, 420, 14511, 295, 300, 50614, 50614, 2744, 11, 550, 309, 3643, 26041, 13, 50764, 50764, 400, 291, 611, 362, 257, 819, 1154, 11, 597, 307, 300, 264, 818, 8630, 575, 257, 4948, 13, 51064, 51064, 7010, 13, 51114, 51114, 3013, 562, 291, 352, 1791, 300, 11, 300, 307, 1219, 257, 8630, 37772, 13, 51314, 51314, 1779, 13, 51364, 51364, 400, 562, 291, 362, 257, 2445, 300, 393, 976, 257, 8630, 37772, 11, 300, 311, 1219, 8630, 4514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13435050419398717, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.3552318452857435e-05}, {"id": 84, "seek": 25300, "start": 273.0, "end": 278.0, "text": " And when you have a function that can give a stack overflow, that's called stack safety.", "tokens": [50364, 583, 498, 291, 434, 884, 257, 4714, 420, 1266, 11, 1360, 420, 257, 3262, 4714, 5498, 420, 14511, 295, 300, 50614, 50614, 2744, 11, 550, 309, 3643, 26041, 13, 50764, 50764, 400, 291, 611, 362, 257, 819, 1154, 11, 597, 307, 300, 264, 818, 8630, 575, 257, 4948, 13, 51064, 51064, 7010, 13, 51114, 51114, 3013, 562, 291, 352, 1791, 300, 11, 300, 307, 1219, 257, 8630, 37772, 13, 51314, 51314, 1779, 13, 51364, 51364, 400, 562, 291, 362, 257, 2445, 300, 393, 976, 257, 8630, 37772, 11, 300, 311, 1219, 8630, 4514, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.13435050419398717, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.3552318452857435e-05}, {"id": 85, "seek": 27800, "start": 278.0, "end": 284.0, "text": " It's not stack safe because it can trigger a stack overflow if it's called with too large", "tokens": [50364, 467, 311, 406, 8630, 3273, 570, 309, 393, 7875, 257, 8630, 37772, 498, 309, 311, 1219, 365, 886, 2416, 50664, 50664, 295, 364, 4846, 420, 2035, 13, 50764, 50764, 407, 294, 2699, 76, 11, 321, 584, 300, 1203, 307, 3273, 11, 457, 291, 393, 920, 7875, 8630, 670, 33229, 13, 51064, 51064, 407, 498, 291, 767, 528, 281, 458, 1968, 257, 20560, 488, 2445, 307, 6838, 818, 26941, 11, 51314, 51314, 437, 291, 393, 360, 307, 853, 281, 2464, 257, 1500, 689, 309, 20560, 279, 544, 813, 466, 1266, 11, 1360, 1413, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06255707789942161, "compression_ratio": 1.617391304347826, "no_caption_prob": 3.269857188570313e-05}, {"id": 86, "seek": 27800, "start": 284.0, "end": 286.0, "text": " of an input or whatever.", "tokens": [50364, 467, 311, 406, 8630, 3273, 570, 309, 393, 7875, 257, 8630, 37772, 498, 309, 311, 1219, 365, 886, 2416, 50664, 50664, 295, 364, 4846, 420, 2035, 13, 50764, 50764, 407, 294, 2699, 76, 11, 321, 584, 300, 1203, 307, 3273, 11, 457, 291, 393, 920, 7875, 8630, 670, 33229, 13, 51064, 51064, 407, 498, 291, 767, 528, 281, 458, 1968, 257, 20560, 488, 2445, 307, 6838, 818, 26941, 11, 51314, 51314, 437, 291, 393, 360, 307, 853, 281, 2464, 257, 1500, 689, 309, 20560, 279, 544, 813, 466, 1266, 11, 1360, 1413, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06255707789942161, "compression_ratio": 1.617391304347826, "no_caption_prob": 3.269857188570313e-05}, {"id": 87, "seek": 27800, "start": 286.0, "end": 292.0, "text": " So in Elm, we say that everything is safe, but you can still trigger stack overflows.", "tokens": [50364, 467, 311, 406, 8630, 3273, 570, 309, 393, 7875, 257, 8630, 37772, 498, 309, 311, 1219, 365, 886, 2416, 50664, 50664, 295, 364, 4846, 420, 2035, 13, 50764, 50764, 407, 294, 2699, 76, 11, 321, 584, 300, 1203, 307, 3273, 11, 457, 291, 393, 920, 7875, 8630, 670, 33229, 13, 51064, 51064, 407, 498, 291, 767, 528, 281, 458, 1968, 257, 20560, 488, 2445, 307, 6838, 818, 26941, 11, 51314, 51314, 437, 291, 393, 360, 307, 853, 281, 2464, 257, 1500, 689, 309, 20560, 279, 544, 813, 466, 1266, 11, 1360, 1413, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06255707789942161, "compression_ratio": 1.617391304347826, "no_caption_prob": 3.269857188570313e-05}, {"id": 88, "seek": 27800, "start": 292.0, "end": 297.0, "text": " So if you actually want to know whether a recursive function is tail call optimized,", "tokens": [50364, 467, 311, 406, 8630, 3273, 570, 309, 393, 7875, 257, 8630, 37772, 498, 309, 311, 1219, 365, 886, 2416, 50664, 50664, 295, 364, 4846, 420, 2035, 13, 50764, 50764, 407, 294, 2699, 76, 11, 321, 584, 300, 1203, 307, 3273, 11, 457, 291, 393, 920, 7875, 8630, 670, 33229, 13, 51064, 51064, 407, 498, 291, 767, 528, 281, 458, 1968, 257, 20560, 488, 2445, 307, 6838, 818, 26941, 11, 51314, 51314, 437, 291, 393, 360, 307, 853, 281, 2464, 257, 1500, 689, 309, 20560, 279, 544, 813, 466, 1266, 11, 1360, 1413, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06255707789942161, "compression_ratio": 1.617391304347826, "no_caption_prob": 3.269857188570313e-05}, {"id": 89, "seek": 27800, "start": 297.0, "end": 305.0, "text": " what you can do is try to write a test where it recurses more than about 10,000 times.", "tokens": [50364, 467, 311, 406, 8630, 3273, 570, 309, 393, 7875, 257, 8630, 37772, 498, 309, 311, 1219, 365, 886, 2416, 50664, 50664, 295, 364, 4846, 420, 2035, 13, 50764, 50764, 407, 294, 2699, 76, 11, 321, 584, 300, 1203, 307, 3273, 11, 457, 291, 393, 920, 7875, 8630, 670, 33229, 13, 51064, 51064, 407, 498, 291, 767, 528, 281, 458, 1968, 257, 20560, 488, 2445, 307, 6838, 818, 26941, 11, 51314, 51314, 437, 291, 393, 360, 307, 853, 281, 2464, 257, 1500, 689, 309, 20560, 279, 544, 813, 466, 1266, 11, 1360, 1413, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06255707789942161, "compression_ratio": 1.617391304347826, "no_caption_prob": 3.269857188570313e-05}, {"id": 90, "seek": 30500, "start": 305.0, "end": 313.0, "text": " And if that doesn't create a problem, if that doesn't crash, then it's sufficiently optimized.", "tokens": [50364, 400, 498, 300, 1177, 380, 1884, 257, 1154, 11, 498, 300, 1177, 380, 8252, 11, 550, 309, 311, 31868, 26941, 13, 50764, 50764, 400, 498, 309, 28642, 11, 731, 11, 309, 1943, 380, 13, 50864, 50864, 400, 291, 362, 257, 34474, 6713, 13, 51014, 51014, 400, 291, 393, 611, 1190, 428, 2699, 76, 3131, 3389, 4978, 281, 5876, 613, 3179, 300, 1062, 406, 51464, 51464, 312, 8630, 3273, 11, 597, 307, 534, 10654, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05878657561082106, "compression_ratio": 1.5792349726775956, "no_caption_prob": 1.3631207366415765e-05}, {"id": 91, "seek": 30500, "start": 313.0, "end": 315.0, "text": " And if it crashes, well, it isn't.", "tokens": [50364, 400, 498, 300, 1177, 380, 1884, 257, 1154, 11, 498, 300, 1177, 380, 8252, 11, 550, 309, 311, 31868, 26941, 13, 50764, 50764, 400, 498, 309, 28642, 11, 731, 11, 309, 1943, 380, 13, 50864, 50864, 400, 291, 362, 257, 34474, 6713, 13, 51014, 51014, 400, 291, 393, 611, 1190, 428, 2699, 76, 3131, 3389, 4978, 281, 5876, 613, 3179, 300, 1062, 406, 51464, 51464, 312, 8630, 3273, 11, 597, 307, 534, 10654, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05878657561082106, "compression_ratio": 1.5792349726775956, "no_caption_prob": 1.3631207366415765e-05}, {"id": 92, "seek": 30500, "start": 315.0, "end": 318.0, "text": " And you have a runtime error.", "tokens": [50364, 400, 498, 300, 1177, 380, 1884, 257, 1154, 11, 498, 300, 1177, 380, 8252, 11, 550, 309, 311, 31868, 26941, 13, 50764, 50764, 400, 498, 309, 28642, 11, 731, 11, 309, 1943, 380, 13, 50864, 50864, 400, 291, 362, 257, 34474, 6713, 13, 51014, 51014, 400, 291, 393, 611, 1190, 428, 2699, 76, 3131, 3389, 4978, 281, 5876, 613, 3179, 300, 1062, 406, 51464, 51464, 312, 8630, 3273, 11, 597, 307, 534, 10654, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05878657561082106, "compression_ratio": 1.5792349726775956, "no_caption_prob": 1.3631207366415765e-05}, {"id": 93, "seek": 30500, "start": 318.0, "end": 327.0, "text": " And you can also run your Elm review performance rule to identify these areas that might not", "tokens": [50364, 400, 498, 300, 1177, 380, 1884, 257, 1154, 11, 498, 300, 1177, 380, 8252, 11, 550, 309, 311, 31868, 26941, 13, 50764, 50764, 400, 498, 309, 28642, 11, 731, 11, 309, 1943, 380, 13, 50864, 50864, 400, 291, 362, 257, 34474, 6713, 13, 51014, 51014, 400, 291, 393, 611, 1190, 428, 2699, 76, 3131, 3389, 4978, 281, 5876, 613, 3179, 300, 1062, 406, 51464, 51464, 312, 8630, 3273, 11, 597, 307, 534, 10654, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05878657561082106, "compression_ratio": 1.5792349726775956, "no_caption_prob": 1.3631207366415765e-05}, {"id": 94, "seek": 30500, "start": 327.0, "end": 330.0, "text": " be stack safe, which is really neat.", "tokens": [50364, 400, 498, 300, 1177, 380, 1884, 257, 1154, 11, 498, 300, 1177, 380, 8252, 11, 550, 309, 311, 31868, 26941, 13, 50764, 50764, 400, 498, 309, 28642, 11, 731, 11, 309, 1943, 380, 13, 50864, 50864, 400, 291, 362, 257, 34474, 6713, 13, 51014, 51014, 400, 291, 393, 611, 1190, 428, 2699, 76, 3131, 3389, 4978, 281, 5876, 613, 3179, 300, 1062, 406, 51464, 51464, 312, 8630, 3273, 11, 597, 307, 534, 10654, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05878657561082106, "compression_ratio": 1.5792349726775956, "no_caption_prob": 1.3631207366415765e-05}, {"id": 95, "seek": 33000, "start": 330.0, "end": 338.0, "text": " So what is the Elm review rule doing to determine whether something is tail call optimized or not?", "tokens": [50364, 407, 437, 307, 264, 2699, 76, 3131, 4978, 884, 281, 6997, 1968, 746, 307, 6838, 818, 26941, 420, 406, 30, 50764, 50764, 286, 1604, 291, 1566, 562, 291, 658, 341, 1364, 11, 291, 1116, 668, 1953, 466, 309, 337, 257, 938, 565, 13, 51014, 51014, 865, 11, 1920, 732, 924, 13, 51114, 51114, 400, 550, 291, 2721, 5334, 577, 281, 360, 309, 13, 51214, 51214, 400, 291, 434, 411, 11, 1954, 11, 309, 390, 767, 534, 2199, 281, 4445, 1564, 286, 5334, 437, 286, 2978, 281, 360, 13, 51464, 51464, 407, 949, 286, 2903, 300, 11, 286, 519, 309, 311, 1481, 281, 2903, 577, 257, 6838, 818, 26941, 2445, 1985, 13, 51764, 51764, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05312320164271763, "compression_ratio": 1.706959706959707, "no_caption_prob": 2.7107935238745995e-05}, {"id": 96, "seek": 33000, "start": 338.0, "end": 343.0, "text": " I remember you saying when you got this working, you'd been thinking about it for a long time.", "tokens": [50364, 407, 437, 307, 264, 2699, 76, 3131, 4978, 884, 281, 6997, 1968, 746, 307, 6838, 818, 26941, 420, 406, 30, 50764, 50764, 286, 1604, 291, 1566, 562, 291, 658, 341, 1364, 11, 291, 1116, 668, 1953, 466, 309, 337, 257, 938, 565, 13, 51014, 51014, 865, 11, 1920, 732, 924, 13, 51114, 51114, 400, 550, 291, 2721, 5334, 577, 281, 360, 309, 13, 51214, 51214, 400, 291, 434, 411, 11, 1954, 11, 309, 390, 767, 534, 2199, 281, 4445, 1564, 286, 5334, 437, 286, 2978, 281, 360, 13, 51464, 51464, 407, 949, 286, 2903, 300, 11, 286, 519, 309, 311, 1481, 281, 2903, 577, 257, 6838, 818, 26941, 2445, 1985, 13, 51764, 51764, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05312320164271763, "compression_ratio": 1.706959706959707, "no_caption_prob": 2.7107935238745995e-05}, {"id": 97, "seek": 33000, "start": 343.0, "end": 345.0, "text": " Yeah, almost two years.", "tokens": [50364, 407, 437, 307, 264, 2699, 76, 3131, 4978, 884, 281, 6997, 1968, 746, 307, 6838, 818, 26941, 420, 406, 30, 50764, 50764, 286, 1604, 291, 1566, 562, 291, 658, 341, 1364, 11, 291, 1116, 668, 1953, 466, 309, 337, 257, 938, 565, 13, 51014, 51014, 865, 11, 1920, 732, 924, 13, 51114, 51114, 400, 550, 291, 2721, 5334, 577, 281, 360, 309, 13, 51214, 51214, 400, 291, 434, 411, 11, 1954, 11, 309, 390, 767, 534, 2199, 281, 4445, 1564, 286, 5334, 437, 286, 2978, 281, 360, 13, 51464, 51464, 407, 949, 286, 2903, 300, 11, 286, 519, 309, 311, 1481, 281, 2903, 577, 257, 6838, 818, 26941, 2445, 1985, 13, 51764, 51764, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05312320164271763, "compression_ratio": 1.706959706959707, "no_caption_prob": 2.7107935238745995e-05}, {"id": 98, "seek": 33000, "start": 345.0, "end": 347.0, "text": " And then you finally realized how to do it.", "tokens": [50364, 407, 437, 307, 264, 2699, 76, 3131, 4978, 884, 281, 6997, 1968, 746, 307, 6838, 818, 26941, 420, 406, 30, 50764, 50764, 286, 1604, 291, 1566, 562, 291, 658, 341, 1364, 11, 291, 1116, 668, 1953, 466, 309, 337, 257, 938, 565, 13, 51014, 51014, 865, 11, 1920, 732, 924, 13, 51114, 51114, 400, 550, 291, 2721, 5334, 577, 281, 360, 309, 13, 51214, 51214, 400, 291, 434, 411, 11, 1954, 11, 309, 390, 767, 534, 2199, 281, 4445, 1564, 286, 5334, 437, 286, 2978, 281, 360, 13, 51464, 51464, 407, 949, 286, 2903, 300, 11, 286, 519, 309, 311, 1481, 281, 2903, 577, 257, 6838, 818, 26941, 2445, 1985, 13, 51764, 51764, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05312320164271763, "compression_ratio": 1.706959706959707, "no_caption_prob": 2.7107935238745995e-05}, {"id": 99, "seek": 33000, "start": 347.0, "end": 352.0, "text": " And you're like, oh, it was actually really simple to implement once I realized what I needed to do.", "tokens": [50364, 407, 437, 307, 264, 2699, 76, 3131, 4978, 884, 281, 6997, 1968, 746, 307, 6838, 818, 26941, 420, 406, 30, 50764, 50764, 286, 1604, 291, 1566, 562, 291, 658, 341, 1364, 11, 291, 1116, 668, 1953, 466, 309, 337, 257, 938, 565, 13, 51014, 51014, 865, 11, 1920, 732, 924, 13, 51114, 51114, 400, 550, 291, 2721, 5334, 577, 281, 360, 309, 13, 51214, 51214, 400, 291, 434, 411, 11, 1954, 11, 309, 390, 767, 534, 2199, 281, 4445, 1564, 286, 5334, 437, 286, 2978, 281, 360, 13, 51464, 51464, 407, 949, 286, 2903, 300, 11, 286, 519, 309, 311, 1481, 281, 2903, 577, 257, 6838, 818, 26941, 2445, 1985, 13, 51764, 51764, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05312320164271763, "compression_ratio": 1.706959706959707, "no_caption_prob": 2.7107935238745995e-05}, {"id": 100, "seek": 33000, "start": 352.0, "end": 358.0, "text": " So before I explain that, I think it's nice to explain how a tail call optimized function works.", "tokens": [50364, 407, 437, 307, 264, 2699, 76, 3131, 4978, 884, 281, 6997, 1968, 746, 307, 6838, 818, 26941, 420, 406, 30, 50764, 50764, 286, 1604, 291, 1566, 562, 291, 658, 341, 1364, 11, 291, 1116, 668, 1953, 466, 309, 337, 257, 938, 565, 13, 51014, 51014, 865, 11, 1920, 732, 924, 13, 51114, 51114, 400, 550, 291, 2721, 5334, 577, 281, 360, 309, 13, 51214, 51214, 400, 291, 434, 411, 11, 1954, 11, 309, 390, 767, 534, 2199, 281, 4445, 1564, 286, 5334, 437, 286, 2978, 281, 360, 13, 51464, 51464, 407, 949, 286, 2903, 300, 11, 286, 519, 309, 311, 1481, 281, 2903, 577, 257, 6838, 818, 26941, 2445, 1985, 13, 51764, 51764, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05312320164271763, "compression_ratio": 1.706959706959707, "no_caption_prob": 2.7107935238745995e-05}, {"id": 101, "seek": 33000, "start": 358.0, "end": 359.0, "text": " Right.", "tokens": [50364, 407, 437, 307, 264, 2699, 76, 3131, 4978, 884, 281, 6997, 1968, 746, 307, 6838, 818, 26941, 420, 406, 30, 50764, 50764, 286, 1604, 291, 1566, 562, 291, 658, 341, 1364, 11, 291, 1116, 668, 1953, 466, 309, 337, 257, 938, 565, 13, 51014, 51014, 865, 11, 1920, 732, 924, 13, 51114, 51114, 400, 550, 291, 2721, 5334, 577, 281, 360, 309, 13, 51214, 51214, 400, 291, 434, 411, 11, 1954, 11, 309, 390, 767, 534, 2199, 281, 4445, 1564, 286, 5334, 437, 286, 2978, 281, 360, 13, 51464, 51464, 407, 949, 286, 2903, 300, 11, 286, 519, 309, 311, 1481, 281, 2903, 577, 257, 6838, 818, 26941, 2445, 1985, 13, 51764, 51764, 1779, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05312320164271763, "compression_ratio": 1.706959706959707, "no_caption_prob": 2.7107935238745995e-05}, {"id": 102, "seek": 35900, "start": 359.0, "end": 361.0, "text": " And compared to recursive function.", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 103, "seek": 35900, "start": 361.0, "end": 367.0, "text": " Maybe we should point out that this is an optimization that the Elm compiler just has built in.", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 104, "seek": 35900, "start": 367.0, "end": 368.0, "text": " Yes.", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 105, "seek": 35900, "start": 368.0, "end": 374.0, "text": " That it's turning our code into JavaScript code so it can go ahead and say, oh, you know what?", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 106, "seek": 35900, "start": 374.0, "end": 379.0, "text": " I could rewrite this in a way that doesn't actually do recursive calls under the hood,", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 107, "seek": 35900, "start": 379.0, "end": 381.0, "text": " but I know it's going to give the same result.", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 108, "seek": 35900, "start": 381.0, "end": 382.0, "text": " So that's what we're talking about here.", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 109, "seek": 35900, "start": 382.0, "end": 383.0, "text": " Yeah.", "tokens": [50364, 400, 5347, 281, 20560, 488, 2445, 13, 50464, 50464, 2704, 321, 820, 935, 484, 300, 341, 307, 364, 19618, 300, 264, 2699, 76, 31958, 445, 575, 3094, 294, 13, 50764, 50764, 1079, 13, 50814, 50814, 663, 309, 311, 6246, 527, 3089, 666, 15778, 3089, 370, 309, 393, 352, 2286, 293, 584, 11, 1954, 11, 291, 458, 437, 30, 51114, 51114, 286, 727, 28132, 341, 294, 257, 636, 300, 1177, 380, 767, 360, 20560, 488, 5498, 833, 264, 13376, 11, 51364, 51364, 457, 286, 458, 309, 311, 516, 281, 976, 264, 912, 1874, 13, 51464, 51464, 407, 300, 311, 437, 321, 434, 1417, 466, 510, 13, 51514, 51514, 865, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07560662463702987, "compression_ratio": 1.5547169811320756, "no_caption_prob": 4.6111137635307387e-05}, {"id": 110, "seek": 38300, "start": 383.0, "end": 390.0, "text": " So recursive function, a plain one, when it calls itself, it adds to the stack call.", "tokens": [50364, 407, 20560, 488, 2445, 11, 257, 11121, 472, 11, 562, 309, 5498, 2564, 11, 309, 10860, 281, 264, 8630, 818, 13, 50714, 50714, 1107, 26941, 472, 1177, 380, 362, 257, 8630, 818, 420, 1570, 370, 13, 50964, 50964, 5048, 466, 300, 1780, 13, 51064, 51064, 1779, 13, 51114, 51114, 583, 309, 311, 3736, 257, 1339, 6367, 294, 264, 36548, 2699, 76, 3089, 13, 51264, 51264, 1079, 13, 51314, 51314, 407, 2602, 295, 5141, 2564, 11, 437, 309, 775, 11, 309, 7829, 257, 1339, 6367, 365, 264, 2190, 4478, 281, 312, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13108618886847245, "compression_ratio": 1.5514018691588785, "no_caption_prob": 9.817006684897933e-06}, {"id": 111, "seek": 38300, "start": 390.0, "end": 395.0, "text": " An optimized one doesn't have a stack call or less so.", "tokens": [50364, 407, 20560, 488, 2445, 11, 257, 11121, 472, 11, 562, 309, 5498, 2564, 11, 309, 10860, 281, 264, 8630, 818, 13, 50714, 50714, 1107, 26941, 472, 1177, 380, 362, 257, 8630, 818, 420, 1570, 370, 13, 50964, 50964, 5048, 466, 300, 1780, 13, 51064, 51064, 1779, 13, 51114, 51114, 583, 309, 311, 3736, 257, 1339, 6367, 294, 264, 36548, 2699, 76, 3089, 13, 51264, 51264, 1079, 13, 51314, 51314, 407, 2602, 295, 5141, 2564, 11, 437, 309, 775, 11, 309, 7829, 257, 1339, 6367, 365, 264, 2190, 4478, 281, 312, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13108618886847245, "compression_ratio": 1.5514018691588785, "no_caption_prob": 9.817006684897933e-06}, {"id": 112, "seek": 38300, "start": 395.0, "end": 397.0, "text": " More about that later.", "tokens": [50364, 407, 20560, 488, 2445, 11, 257, 11121, 472, 11, 562, 309, 5498, 2564, 11, 309, 10860, 281, 264, 8630, 818, 13, 50714, 50714, 1107, 26941, 472, 1177, 380, 362, 257, 8630, 818, 420, 1570, 370, 13, 50964, 50964, 5048, 466, 300, 1780, 13, 51064, 51064, 1779, 13, 51114, 51114, 583, 309, 311, 3736, 257, 1339, 6367, 294, 264, 36548, 2699, 76, 3089, 13, 51264, 51264, 1079, 13, 51314, 51314, 407, 2602, 295, 5141, 2564, 11, 437, 309, 775, 11, 309, 7829, 257, 1339, 6367, 365, 264, 2190, 4478, 281, 312, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13108618886847245, "compression_ratio": 1.5514018691588785, "no_caption_prob": 9.817006684897933e-06}, {"id": 113, "seek": 38300, "start": 397.0, "end": 398.0, "text": " Right.", "tokens": [50364, 407, 20560, 488, 2445, 11, 257, 11121, 472, 11, 562, 309, 5498, 2564, 11, 309, 10860, 281, 264, 8630, 818, 13, 50714, 50714, 1107, 26941, 472, 1177, 380, 362, 257, 8630, 818, 420, 1570, 370, 13, 50964, 50964, 5048, 466, 300, 1780, 13, 51064, 51064, 1779, 13, 51114, 51114, 583, 309, 311, 3736, 257, 1339, 6367, 294, 264, 36548, 2699, 76, 3089, 13, 51264, 51264, 1079, 13, 51314, 51314, 407, 2602, 295, 5141, 2564, 11, 437, 309, 775, 11, 309, 7829, 257, 1339, 6367, 365, 264, 2190, 4478, 281, 312, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13108618886847245, "compression_ratio": 1.5514018691588785, "no_caption_prob": 9.817006684897933e-06}, {"id": 114, "seek": 38300, "start": 398.0, "end": 401.0, "text": " But it's literally a while loop in the compiled Elm code.", "tokens": [50364, 407, 20560, 488, 2445, 11, 257, 11121, 472, 11, 562, 309, 5498, 2564, 11, 309, 10860, 281, 264, 8630, 818, 13, 50714, 50714, 1107, 26941, 472, 1177, 380, 362, 257, 8630, 818, 420, 1570, 370, 13, 50964, 50964, 5048, 466, 300, 1780, 13, 51064, 51064, 1779, 13, 51114, 51114, 583, 309, 311, 3736, 257, 1339, 6367, 294, 264, 36548, 2699, 76, 3089, 13, 51264, 51264, 1079, 13, 51314, 51314, 407, 2602, 295, 5141, 2564, 11, 437, 309, 775, 11, 309, 7829, 257, 1339, 6367, 365, 264, 2190, 4478, 281, 312, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13108618886847245, "compression_ratio": 1.5514018691588785, "no_caption_prob": 9.817006684897933e-06}, {"id": 115, "seek": 38300, "start": 401.0, "end": 402.0, "text": " Yes.", "tokens": [50364, 407, 20560, 488, 2445, 11, 257, 11121, 472, 11, 562, 309, 5498, 2564, 11, 309, 10860, 281, 264, 8630, 818, 13, 50714, 50714, 1107, 26941, 472, 1177, 380, 362, 257, 8630, 818, 420, 1570, 370, 13, 50964, 50964, 5048, 466, 300, 1780, 13, 51064, 51064, 1779, 13, 51114, 51114, 583, 309, 311, 3736, 257, 1339, 6367, 294, 264, 36548, 2699, 76, 3089, 13, 51264, 51264, 1079, 13, 51314, 51314, 407, 2602, 295, 5141, 2564, 11, 437, 309, 775, 11, 309, 7829, 257, 1339, 6367, 365, 264, 2190, 4478, 281, 312, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13108618886847245, "compression_ratio": 1.5514018691588785, "no_caption_prob": 9.817006684897933e-06}, {"id": 116, "seek": 38300, "start": 402.0, "end": 411.0, "text": " So instead of calling itself, what it does, it creates a while loop with the current element to be,", "tokens": [50364, 407, 20560, 488, 2445, 11, 257, 11121, 472, 11, 562, 309, 5498, 2564, 11, 309, 10860, 281, 264, 8630, 818, 13, 50714, 50714, 1107, 26941, 472, 1177, 380, 362, 257, 8630, 818, 420, 1570, 370, 13, 50964, 50964, 5048, 466, 300, 1780, 13, 51064, 51064, 1779, 13, 51114, 51114, 583, 309, 311, 3736, 257, 1339, 6367, 294, 264, 36548, 2699, 76, 3089, 13, 51264, 51264, 1079, 13, 51314, 51314, 407, 2602, 295, 5141, 2564, 11, 437, 309, 775, 11, 309, 7829, 257, 1339, 6367, 365, 264, 2190, 4478, 281, 312, 11, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.13108618886847245, "compression_ratio": 1.5514018691588785, "no_caption_prob": 9.817006684897933e-06}, {"id": 117, "seek": 41100, "start": 411.0, "end": 414.0, "text": " the current arguments, defined outside of the while loop.", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 118, "seek": 41100, "start": 414.0, "end": 420.0, "text": " And the while loop just updates those arguments to be whatever would be the next arguments,", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 119, "seek": 41100, "start": 420.0, "end": 422.0, "text": " the arguments of the next function call.", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 120, "seek": 41100, "start": 422.0, "end": 423.0, "text": " Right.", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 121, "seek": 41100, "start": 423.0, "end": 430.0, "text": " So list.length would be a while loop with a count defined outside the while loop.", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 122, "seek": 41100, "start": 430.0, "end": 434.0, "text": " And in the while loop, it would increment.", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 123, "seek": 41100, "start": 434.0, "end": 439.0, "text": " And the list to be analyzed would be reduced at every step.", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 124, "seek": 41100, "start": 439.0, "end": 440.0, "text": " Is that clear enough?", "tokens": [50364, 264, 2190, 12869, 11, 7642, 2380, 295, 264, 1339, 6367, 13, 50514, 50514, 400, 264, 1339, 6367, 445, 9205, 729, 12869, 281, 312, 2035, 576, 312, 264, 958, 12869, 11, 50814, 50814, 264, 12869, 295, 264, 958, 2445, 818, 13, 50914, 50914, 1779, 13, 50964, 50964, 407, 1329, 13, 45390, 576, 312, 257, 1339, 6367, 365, 257, 1207, 7642, 2380, 264, 1339, 6367, 13, 51314, 51314, 400, 294, 264, 1339, 6367, 11, 309, 576, 26200, 13, 51514, 51514, 400, 264, 1329, 281, 312, 28181, 576, 312, 9212, 412, 633, 1823, 13, 51764, 51764, 1119, 300, 1850, 1547, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07558438357184916, "compression_ratio": 1.9707317073170731, "no_caption_prob": 2.5070850824704394e-05}, {"id": 125, "seek": 44000, "start": 440.0, "end": 441.0, "text": " Yes.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 126, "seek": 44000, "start": 441.0, "end": 442.0, "text": " Okay.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 127, "seek": 44000, "start": 442.0, "end": 446.0, "text": " So is that able to allocate less memory?", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 128, "seek": 44000, "start": 446.0, "end": 454.0, "text": " Because is it taking the memory scope with the recursive calls if it's not tail call optimized?", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 129, "seek": 44000, "start": 454.0, "end": 459.0, "text": " So the way I understand it, for every call stack, you need to allocate a new variable.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 130, "seek": 44000, "start": 459.0, "end": 460.0, "text": " Right.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 131, "seek": 44000, "start": 460.0, "end": 461.0, "text": " Or new variables.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 132, "seek": 44000, "start": 461.0, "end": 462.0, "text": " Yes.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 133, "seek": 44000, "start": 462.0, "end": 463.0, "text": " Right.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 134, "seek": 44000, "start": 463.0, "end": 469.0, "text": " So if you don't have to allocate any new ones, then yeah, you have a lot less to allocate.", "tokens": [50364, 1079, 13, 50414, 50414, 1033, 13, 50464, 50464, 407, 307, 300, 1075, 281, 35713, 1570, 4675, 30, 50664, 50664, 1436, 307, 309, 1940, 264, 4675, 11923, 365, 264, 20560, 488, 5498, 498, 309, 311, 406, 6838, 818, 26941, 30, 51064, 51064, 407, 264, 636, 286, 1223, 309, 11, 337, 633, 818, 8630, 11, 291, 643, 281, 35713, 257, 777, 7006, 13, 51314, 51314, 1779, 13, 51364, 51364, 1610, 777, 9102, 13, 51414, 51414, 1079, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 498, 291, 500, 380, 362, 281, 35713, 604, 777, 2306, 11, 550, 1338, 11, 291, 362, 257, 688, 1570, 281, 35713, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.09341114538687247, "compression_ratio": 1.6605504587155964, "no_caption_prob": 0.00014882584218867123}, {"id": 135, "seek": 46900, "start": 469.0, "end": 470.0, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 136, "seek": 46900, "start": 470.0, "end": 472.0, "text": " So that also takes time.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 137, "seek": 46900, "start": 472.0, "end": 475.0, "text": " So this is time that is saved.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 138, "seek": 46900, "start": 475.0, "end": 480.0, "text": " And you also don't have to do the call stack and the changing the position.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 139, "seek": 46900, "start": 480.0, "end": 482.0, "text": " Popping off the call stack and everything.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 140, "seek": 46900, "start": 482.0, "end": 483.0, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 141, "seek": 46900, "start": 483.0, "end": 484.0, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 142, "seek": 46900, "start": 484.0, "end": 485.0, "text": " Popping on, popping off.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 143, "seek": 46900, "start": 485.0, "end": 486.0, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 144, "seek": 46900, "start": 486.0, "end": 487.0, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 145, "seek": 46900, "start": 487.0, "end": 488.0, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 146, "seek": 46900, "start": 488.0, "end": 492.0, "text": " So very tiny things, but when you do 10,000 of them, it matters.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 147, "seek": 46900, "start": 492.0, "end": 493.0, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 300, 611, 2516, 565, 13, 50514, 50514, 407, 341, 307, 565, 300, 307, 6624, 13, 50664, 50664, 400, 291, 611, 500, 380, 362, 281, 360, 264, 818, 8630, 293, 264, 4473, 264, 2535, 13, 50914, 50914, 10215, 3381, 766, 264, 818, 8630, 293, 1203, 13, 51014, 51014, 865, 13, 51064, 51064, 865, 13, 51114, 51114, 10215, 3381, 322, 11, 18374, 766, 13, 51164, 51164, 865, 13, 51214, 51214, 1779, 13, 51264, 51264, 1779, 13, 51314, 51314, 407, 588, 5870, 721, 11, 457, 562, 291, 360, 1266, 11, 1360, 295, 552, 11, 309, 7001, 13, 51514, 51514, 1779, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08330321089129582, "compression_ratio": 1.7318435754189945, "no_caption_prob": 4.908565460937098e-05}, {"id": 148, "seek": 49300, "start": 493.0, "end": 499.68, "text": " So, and we should, you know, stepping back a little to like the why here now, and I think", "tokens": [50364, 407, 11, 293, 321, 820, 11, 291, 458, 11, 16821, 646, 257, 707, 281, 411, 264, 983, 510, 586, 11, 293, 286, 519, 50698, 50698, 341, 307, 11, 286, 519, 291, 293, 286, 1293, 841, 264, 912, 636, 510, 300, 321, 434, 406, 4725, 8572, 51036, 51036, 538, 604, 1355, 322, 3389, 13, 51166, 51166, 583, 472, 551, 300, 321, 393, 584, 365, 6687, 307, 300, 291, 820, 3481, 3389, 281, 51462, 51462, 5876, 44641, 2761, 293, 406, 6552, 300, 1230, 472, 11, 500, 380, 6552, 300, 746, 2203, 281, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11422748768583257, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.071664832532406e-05}, {"id": 149, "seek": 49300, "start": 499.68, "end": 506.44, "text": " this is, I think you and I both feel the same way here that we're not necessarily experts", "tokens": [50364, 407, 11, 293, 321, 820, 11, 291, 458, 11, 16821, 646, 257, 707, 281, 411, 264, 983, 510, 586, 11, 293, 286, 519, 50698, 50698, 341, 307, 11, 286, 519, 291, 293, 286, 1293, 841, 264, 912, 636, 510, 300, 321, 434, 406, 4725, 8572, 51036, 51036, 538, 604, 1355, 322, 3389, 13, 51166, 51166, 583, 472, 551, 300, 321, 393, 584, 365, 6687, 307, 300, 291, 820, 3481, 3389, 281, 51462, 51462, 5876, 44641, 2761, 293, 406, 6552, 300, 1230, 472, 11, 500, 380, 6552, 300, 746, 2203, 281, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11422748768583257, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.071664832532406e-05}, {"id": 150, "seek": 49300, "start": 506.44, "end": 509.04, "text": " by any means on performance.", "tokens": [50364, 407, 11, 293, 321, 820, 11, 291, 458, 11, 16821, 646, 257, 707, 281, 411, 264, 983, 510, 586, 11, 293, 286, 519, 50698, 50698, 341, 307, 11, 286, 519, 291, 293, 286, 1293, 841, 264, 912, 636, 510, 300, 321, 434, 406, 4725, 8572, 51036, 51036, 538, 604, 1355, 322, 3389, 13, 51166, 51166, 583, 472, 551, 300, 321, 393, 584, 365, 6687, 307, 300, 291, 820, 3481, 3389, 281, 51462, 51462, 5876, 44641, 2761, 293, 406, 6552, 300, 1230, 472, 11, 500, 380, 6552, 300, 746, 2203, 281, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11422748768583257, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.071664832532406e-05}, {"id": 151, "seek": 49300, "start": 509.04, "end": 514.96, "text": " But one thing that we can say with confidence is that you should measure performance to", "tokens": [50364, 407, 11, 293, 321, 820, 11, 291, 458, 11, 16821, 646, 257, 707, 281, 411, 264, 983, 510, 586, 11, 293, 286, 519, 50698, 50698, 341, 307, 11, 286, 519, 291, 293, 286, 1293, 841, 264, 912, 636, 510, 300, 321, 434, 406, 4725, 8572, 51036, 51036, 538, 604, 1355, 322, 3389, 13, 51166, 51166, 583, 472, 551, 300, 321, 393, 584, 365, 6687, 307, 300, 291, 820, 3481, 3389, 281, 51462, 51462, 5876, 44641, 2761, 293, 406, 6552, 300, 1230, 472, 11, 500, 380, 6552, 300, 746, 2203, 281, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11422748768583257, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.071664832532406e-05}, {"id": 152, "seek": 49300, "start": 514.96, "end": 521.64, "text": " identify bottlenecks and not assume that number one, don't assume that something needs to", "tokens": [50364, 407, 11, 293, 321, 820, 11, 291, 458, 11, 16821, 646, 257, 707, 281, 411, 264, 983, 510, 586, 11, 293, 286, 519, 50698, 50698, 341, 307, 11, 286, 519, 291, 293, 286, 1293, 841, 264, 912, 636, 510, 300, 321, 434, 406, 4725, 8572, 51036, 51036, 538, 604, 1355, 322, 3389, 13, 51166, 51166, 583, 472, 551, 300, 321, 393, 584, 365, 6687, 307, 300, 291, 820, 3481, 3389, 281, 51462, 51462, 5876, 44641, 2761, 293, 406, 6552, 300, 1230, 472, 11, 500, 380, 6552, 300, 746, 2203, 281, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.11422748768583257, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.071664832532406e-05}, {"id": 153, "seek": 52164, "start": 521.64, "end": 526.12, "text": " be optimized unless you know it needs to be optimized because you actually benchmarked", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 154, "seek": 52164, "start": 526.12, "end": 527.12, "text": " it.", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 155, "seek": 52164, "start": 527.12, "end": 532.66, "text": " Number two, don't assume that a particular change is in fact going to yield better performance", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 156, "seek": 52164, "start": 532.66, "end": 535.48, "text": " because it's going to do surprising things.", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 157, "seek": 52164, "start": 535.48, "end": 539.3199999999999, "text": " Also Elm compiles into JavaScript.", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 158, "seek": 52164, "start": 539.3199999999999, "end": 540.84, "text": " That's one layer of indirection.", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 159, "seek": 52164, "start": 540.84, "end": 543.62, "text": " So Elm compiles to JavaScript.", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 160, "seek": 52164, "start": 543.62, "end": 546.8, "text": " You don't know exactly what JavaScript it compiles to.", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 161, "seek": 52164, "start": 546.8, "end": 551.24, "text": " You have some sort of vague sense of if you're calling a function, it's probably going to", "tokens": [50364, 312, 26941, 5969, 291, 458, 309, 2203, 281, 312, 26941, 570, 291, 767, 18927, 292, 50588, 50588, 309, 13, 50638, 50638, 5118, 732, 11, 500, 380, 6552, 300, 257, 1729, 1319, 307, 294, 1186, 516, 281, 11257, 1101, 3389, 50915, 50915, 570, 309, 311, 516, 281, 360, 8830, 721, 13, 51056, 51056, 2743, 2699, 76, 715, 4680, 666, 15778, 13, 51248, 51248, 663, 311, 472, 4583, 295, 1016, 621, 882, 13, 51324, 51324, 407, 2699, 76, 715, 4680, 281, 15778, 13, 51463, 51463, 509, 500, 380, 458, 2293, 437, 15778, 309, 715, 4680, 281, 13, 51622, 51622, 509, 362, 512, 1333, 295, 24247, 2020, 295, 498, 291, 434, 5141, 257, 2445, 11, 309, 311, 1391, 516, 281, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.08821559937532283, "compression_ratio": 1.7262773722627738, "no_caption_prob": 8.13954284240026e-06}, {"id": 162, "seek": 55124, "start": 551.24, "end": 556.34, "text": " compile to something that's calling a function in Elm, but you don't know exactly what it's", "tokens": [50364, 31413, 281, 746, 300, 311, 5141, 257, 2445, 294, 2699, 76, 11, 457, 291, 500, 380, 458, 2293, 437, 309, 311, 50619, 50619, 715, 4883, 281, 293, 437, 264, 3389, 10891, 295, 819, 3089, 486, 312, 13, 50876, 50876, 509, 393, 574, 412, 309, 1673, 11, 570, 264, 4009, 3089, 307, 1238, 49857, 5347, 281, 437, 291, 51066, 51066, 1062, 2066, 13, 51116, 51116, 1079, 11, 291, 393, 574, 412, 309, 11, 457, 611, 550, 300, 15778, 3089, 307, 885, 1190, 538, 691, 23, 420, 2035, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.11682812372843425, "compression_ratio": 1.593073593073593, "no_caption_prob": 2.8409400329110213e-05}, {"id": 163, "seek": 55124, "start": 556.34, "end": 561.48, "text": " compiling to and what the performance characteristics of different code will be.", "tokens": [50364, 31413, 281, 746, 300, 311, 5141, 257, 2445, 294, 2699, 76, 11, 457, 291, 500, 380, 458, 2293, 437, 309, 311, 50619, 50619, 715, 4883, 281, 293, 437, 264, 3389, 10891, 295, 819, 3089, 486, 312, 13, 50876, 50876, 509, 393, 574, 412, 309, 1673, 11, 570, 264, 4009, 3089, 307, 1238, 49857, 5347, 281, 437, 291, 51066, 51066, 1062, 2066, 13, 51116, 51116, 1079, 11, 291, 393, 574, 412, 309, 11, 457, 611, 550, 300, 15778, 3089, 307, 885, 1190, 538, 691, 23, 420, 2035, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.11682812372843425, "compression_ratio": 1.593073593073593, "no_caption_prob": 2.8409400329110213e-05}, {"id": 164, "seek": 55124, "start": 561.48, "end": 565.28, "text": " You can look at it though, because the source code is pretty readable compared to what you", "tokens": [50364, 31413, 281, 746, 300, 311, 5141, 257, 2445, 294, 2699, 76, 11, 457, 291, 500, 380, 458, 2293, 437, 309, 311, 50619, 50619, 715, 4883, 281, 293, 437, 264, 3389, 10891, 295, 819, 3089, 486, 312, 13, 50876, 50876, 509, 393, 574, 412, 309, 1673, 11, 570, 264, 4009, 3089, 307, 1238, 49857, 5347, 281, 437, 291, 51066, 51066, 1062, 2066, 13, 51116, 51116, 1079, 11, 291, 393, 574, 412, 309, 11, 457, 611, 550, 300, 15778, 3089, 307, 885, 1190, 538, 691, 23, 420, 2035, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.11682812372843425, "compression_ratio": 1.593073593073593, "no_caption_prob": 2.8409400329110213e-05}, {"id": 165, "seek": 55124, "start": 565.28, "end": 566.28, "text": " might expect.", "tokens": [50364, 31413, 281, 746, 300, 311, 5141, 257, 2445, 294, 2699, 76, 11, 457, 291, 500, 380, 458, 2293, 437, 309, 311, 50619, 50619, 715, 4883, 281, 293, 437, 264, 3389, 10891, 295, 819, 3089, 486, 312, 13, 50876, 50876, 509, 393, 574, 412, 309, 1673, 11, 570, 264, 4009, 3089, 307, 1238, 49857, 5347, 281, 437, 291, 51066, 51066, 1062, 2066, 13, 51116, 51116, 1079, 11, 291, 393, 574, 412, 309, 11, 457, 611, 550, 300, 15778, 3089, 307, 885, 1190, 538, 691, 23, 420, 2035, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.11682812372843425, "compression_ratio": 1.593073593073593, "no_caption_prob": 2.8409400329110213e-05}, {"id": 166, "seek": 55124, "start": 566.28, "end": 573.64, "text": " Yes, you can look at it, but also then that JavaScript code is being run by V8 or whatever", "tokens": [50364, 31413, 281, 746, 300, 311, 5141, 257, 2445, 294, 2699, 76, 11, 457, 291, 500, 380, 458, 2293, 437, 309, 311, 50619, 50619, 715, 4883, 281, 293, 437, 264, 3389, 10891, 295, 819, 3089, 486, 312, 13, 50876, 50876, 509, 393, 574, 412, 309, 1673, 11, 570, 264, 4009, 3089, 307, 1238, 49857, 5347, 281, 437, 291, 51066, 51066, 1062, 2066, 13, 51116, 51116, 1079, 11, 291, 393, 574, 412, 309, 11, 457, 611, 550, 300, 15778, 3089, 307, 885, 1190, 538, 691, 23, 420, 2035, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.11682812372843425, "compression_ratio": 1.593073593073593, "no_caption_prob": 2.8409400329110213e-05}, {"id": 167, "seek": 57364, "start": 573.64, "end": 581.74, "text": " JavaScript engine and these JavaScript engines do all sorts of really nuanced optimizations", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 168, "seek": 57364, "start": 581.74, "end": 584.28, "text": " with the just in time compilation.", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 169, "seek": 57364, "start": 584.28, "end": 589.98, "text": " I mean things like tail call optimizations, I don't know if any JavaScript engines have", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 170, "seek": 57364, "start": 589.98, "end": 591.3199999999999, "text": " that built in now.", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 171, "seek": 57364, "start": 591.3199999999999, "end": 598.56, "text": " I know that Evan added tail call optimizations to Elm because at the time the JavaScript", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 172, "seek": 57364, "start": 598.56, "end": 599.84, "text": " engines didn't have that.", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 173, "seek": 57364, "start": 599.84, "end": 600.84, "text": " Yeah.", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 174, "seek": 57364, "start": 600.84, "end": 602.68, "text": " I think it's there in a few.", "tokens": [50364, 15778, 2848, 293, 613, 15778, 12982, 360, 439, 7527, 295, 534, 45115, 5028, 14455, 50769, 50769, 365, 264, 445, 294, 565, 40261, 13, 50896, 50896, 286, 914, 721, 411, 6838, 818, 5028, 14455, 11, 286, 500, 380, 458, 498, 604, 15778, 12982, 362, 51181, 51181, 300, 3094, 294, 586, 13, 51248, 51248, 286, 458, 300, 22613, 3869, 6838, 818, 5028, 14455, 281, 2699, 76, 570, 412, 264, 565, 264, 15778, 51610, 51610, 12982, 994, 380, 362, 300, 13, 51674, 51674, 865, 13, 51724, 51724, 286, 519, 309, 311, 456, 294, 257, 1326, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16484747227934218, "compression_ratio": 1.8238095238095238, "no_caption_prob": 1.2606696145667229e-05}, {"id": 175, "seek": 60268, "start": 602.68, "end": 605.12, "text": " Maybe only one, but not all of them.", "tokens": [50364, 2704, 787, 472, 11, 457, 406, 439, 295, 552, 13, 50486, 50486, 1033, 11, 1338, 13, 50536, 50536, 583, 264, 935, 885, 300, 500, 380, 853, 281, 6069, 437, 311, 516, 281, 2042, 731, 570, 439, 7527, 50806, 50806, 295, 13106, 721, 366, 516, 281, 2042, 588, 731, 420, 588, 22271, 5682, 281, 428, 24002, 13, 51092, 51092, 407, 445, 6552, 300, 291, 500, 380, 458, 1968, 746, 307, 516, 281, 2042, 731, 420, 406, 51376, 51376, 5969, 291, 18927, 309, 293, 6552, 300, 364, 19618, 291, 853, 281, 652, 1553, 13389, 51679, 51679, 307, 406, 4725, 516, 281, 3470, 721, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15099584831381743, "compression_ratio": 1.7461538461538462, "no_caption_prob": 1.0616040526656434e-05}, {"id": 176, "seek": 60268, "start": 605.12, "end": 606.12, "text": " Okay, yeah.", "tokens": [50364, 2704, 787, 472, 11, 457, 406, 439, 295, 552, 13, 50486, 50486, 1033, 11, 1338, 13, 50536, 50536, 583, 264, 935, 885, 300, 500, 380, 853, 281, 6069, 437, 311, 516, 281, 2042, 731, 570, 439, 7527, 50806, 50806, 295, 13106, 721, 366, 516, 281, 2042, 588, 731, 420, 588, 22271, 5682, 281, 428, 24002, 13, 51092, 51092, 407, 445, 6552, 300, 291, 500, 380, 458, 1968, 746, 307, 516, 281, 2042, 731, 420, 406, 51376, 51376, 5969, 291, 18927, 309, 293, 6552, 300, 364, 19618, 291, 853, 281, 652, 1553, 13389, 51679, 51679, 307, 406, 4725, 516, 281, 3470, 721, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15099584831381743, "compression_ratio": 1.7461538461538462, "no_caption_prob": 1.0616040526656434e-05}, {"id": 177, "seek": 60268, "start": 606.12, "end": 611.52, "text": " But the point being that don't try to predict what's going to perform well because all sorts", "tokens": [50364, 2704, 787, 472, 11, 457, 406, 439, 295, 552, 13, 50486, 50486, 1033, 11, 1338, 13, 50536, 50536, 583, 264, 935, 885, 300, 500, 380, 853, 281, 6069, 437, 311, 516, 281, 2042, 731, 570, 439, 7527, 50806, 50806, 295, 13106, 721, 366, 516, 281, 2042, 588, 731, 420, 588, 22271, 5682, 281, 428, 24002, 13, 51092, 51092, 407, 445, 6552, 300, 291, 500, 380, 458, 1968, 746, 307, 516, 281, 2042, 731, 420, 406, 51376, 51376, 5969, 291, 18927, 309, 293, 6552, 300, 364, 19618, 291, 853, 281, 652, 1553, 13389, 51679, 51679, 307, 406, 4725, 516, 281, 3470, 721, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15099584831381743, "compression_ratio": 1.7461538461538462, "no_caption_prob": 1.0616040526656434e-05}, {"id": 178, "seek": 60268, "start": 611.52, "end": 617.2399999999999, "text": " of unexpected things are going to perform very well or very poorly counter to your intuition.", "tokens": [50364, 2704, 787, 472, 11, 457, 406, 439, 295, 552, 13, 50486, 50486, 1033, 11, 1338, 13, 50536, 50536, 583, 264, 935, 885, 300, 500, 380, 853, 281, 6069, 437, 311, 516, 281, 2042, 731, 570, 439, 7527, 50806, 50806, 295, 13106, 721, 366, 516, 281, 2042, 588, 731, 420, 588, 22271, 5682, 281, 428, 24002, 13, 51092, 51092, 407, 445, 6552, 300, 291, 500, 380, 458, 1968, 746, 307, 516, 281, 2042, 731, 420, 406, 51376, 51376, 5969, 291, 18927, 309, 293, 6552, 300, 364, 19618, 291, 853, 281, 652, 1553, 13389, 51679, 51679, 307, 406, 4725, 516, 281, 3470, 721, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15099584831381743, "compression_ratio": 1.7461538461538462, "no_caption_prob": 1.0616040526656434e-05}, {"id": 179, "seek": 60268, "start": 617.2399999999999, "end": 622.92, "text": " So just assume that you don't know whether something is going to perform well or not", "tokens": [50364, 2704, 787, 472, 11, 457, 406, 439, 295, 552, 13, 50486, 50486, 1033, 11, 1338, 13, 50536, 50536, 583, 264, 935, 885, 300, 500, 380, 853, 281, 6069, 437, 311, 516, 281, 2042, 731, 570, 439, 7527, 50806, 50806, 295, 13106, 721, 366, 516, 281, 2042, 588, 731, 420, 588, 22271, 5682, 281, 428, 24002, 13, 51092, 51092, 407, 445, 6552, 300, 291, 500, 380, 458, 1968, 746, 307, 516, 281, 2042, 731, 420, 406, 51376, 51376, 5969, 291, 18927, 309, 293, 6552, 300, 364, 19618, 291, 853, 281, 652, 1553, 13389, 51679, 51679, 307, 406, 4725, 516, 281, 3470, 721, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15099584831381743, "compression_ratio": 1.7461538461538462, "no_caption_prob": 1.0616040526656434e-05}, {"id": 180, "seek": 60268, "start": 622.92, "end": 628.9799999999999, "text": " unless you benchmark it and assume that an optimization you try to make without measuring", "tokens": [50364, 2704, 787, 472, 11, 457, 406, 439, 295, 552, 13, 50486, 50486, 1033, 11, 1338, 13, 50536, 50536, 583, 264, 935, 885, 300, 500, 380, 853, 281, 6069, 437, 311, 516, 281, 2042, 731, 570, 439, 7527, 50806, 50806, 295, 13106, 721, 366, 516, 281, 2042, 588, 731, 420, 588, 22271, 5682, 281, 428, 24002, 13, 51092, 51092, 407, 445, 6552, 300, 291, 500, 380, 458, 1968, 746, 307, 516, 281, 2042, 731, 420, 406, 51376, 51376, 5969, 291, 18927, 309, 293, 6552, 300, 364, 19618, 291, 853, 281, 652, 1553, 13389, 51679, 51679, 307, 406, 4725, 516, 281, 3470, 721, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15099584831381743, "compression_ratio": 1.7461538461538462, "no_caption_prob": 1.0616040526656434e-05}, {"id": 181, "seek": 60268, "start": 628.9799999999999, "end": 631.12, "text": " is not necessarily going to improve things.", "tokens": [50364, 2704, 787, 472, 11, 457, 406, 439, 295, 552, 13, 50486, 50486, 1033, 11, 1338, 13, 50536, 50536, 583, 264, 935, 885, 300, 500, 380, 853, 281, 6069, 437, 311, 516, 281, 2042, 731, 570, 439, 7527, 50806, 50806, 295, 13106, 721, 366, 516, 281, 2042, 588, 731, 420, 588, 22271, 5682, 281, 428, 24002, 13, 51092, 51092, 407, 445, 6552, 300, 291, 500, 380, 458, 1968, 746, 307, 516, 281, 2042, 731, 420, 406, 51376, 51376, 5969, 291, 18927, 309, 293, 6552, 300, 364, 19618, 291, 853, 281, 652, 1553, 13389, 51679, 51679, 307, 406, 4725, 516, 281, 3470, 721, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.15099584831381743, "compression_ratio": 1.7461538461538462, "no_caption_prob": 1.0616040526656434e-05}, {"id": 182, "seek": 63112, "start": 631.12, "end": 636.68, "text": " Yeah, tail call optimization is usually still a good one, but if you need to change how", "tokens": [50364, 865, 11, 6838, 818, 19618, 307, 2673, 920, 257, 665, 472, 11, 457, 498, 291, 643, 281, 1319, 577, 50642, 50642, 264, 2445, 1985, 281, 652, 309, 589, 11, 550, 1338, 11, 18927, 309, 13, 50906, 50906, 492, 603, 751, 466, 18927, 278, 1780, 13, 51034, 51034, 1079, 13, 51108, 51108, 407, 281, 7019, 493, 6838, 818, 19618, 281, 1665, 264, 8630, 797, 293, 747, 527, 818, 3920, 646, 51426, 51426, 493, 456, 13, 51476, 51476], "temperature": 0.0, "avg_logprob": -0.17525773170666817, "compression_ratio": 1.5879120879120878, "no_caption_prob": 1.2218974916322622e-05}, {"id": 183, "seek": 63112, "start": 636.68, "end": 641.96, "text": " the function works to make it work, then yeah, benchmark it.", "tokens": [50364, 865, 11, 6838, 818, 19618, 307, 2673, 920, 257, 665, 472, 11, 457, 498, 291, 643, 281, 1319, 577, 50642, 50642, 264, 2445, 1985, 281, 652, 309, 589, 11, 550, 1338, 11, 18927, 309, 13, 50906, 50906, 492, 603, 751, 466, 18927, 278, 1780, 13, 51034, 51034, 1079, 13, 51108, 51108, 407, 281, 7019, 493, 6838, 818, 19618, 281, 1665, 264, 8630, 797, 293, 747, 527, 818, 3920, 646, 51426, 51426, 493, 456, 13, 51476, 51476], "temperature": 0.0, "avg_logprob": -0.17525773170666817, "compression_ratio": 1.5879120879120878, "no_caption_prob": 1.2218974916322622e-05}, {"id": 184, "seek": 63112, "start": 641.96, "end": 644.52, "text": " We'll talk about benchmarking later.", "tokens": [50364, 865, 11, 6838, 818, 19618, 307, 2673, 920, 257, 665, 472, 11, 457, 498, 291, 643, 281, 1319, 577, 50642, 50642, 264, 2445, 1985, 281, 652, 309, 589, 11, 550, 1338, 11, 18927, 309, 13, 50906, 50906, 492, 603, 751, 466, 18927, 278, 1780, 13, 51034, 51034, 1079, 13, 51108, 51108, 407, 281, 7019, 493, 6838, 818, 19618, 281, 1665, 264, 8630, 797, 293, 747, 527, 818, 3920, 646, 51426, 51426, 493, 456, 13, 51476, 51476], "temperature": 0.0, "avg_logprob": -0.17525773170666817, "compression_ratio": 1.5879120879120878, "no_caption_prob": 1.2218974916322622e-05}, {"id": 185, "seek": 63112, "start": 644.52, "end": 646.0, "text": " Yes.", "tokens": [50364, 865, 11, 6838, 818, 19618, 307, 2673, 920, 257, 665, 472, 11, 457, 498, 291, 643, 281, 1319, 577, 50642, 50642, 264, 2445, 1985, 281, 652, 309, 589, 11, 550, 1338, 11, 18927, 309, 13, 50906, 50906, 492, 603, 751, 466, 18927, 278, 1780, 13, 51034, 51034, 1079, 13, 51108, 51108, 407, 281, 7019, 493, 6838, 818, 19618, 281, 1665, 264, 8630, 797, 293, 747, 527, 818, 3920, 646, 51426, 51426, 493, 456, 13, 51476, 51476], "temperature": 0.0, "avg_logprob": -0.17525773170666817, "compression_ratio": 1.5879120879120878, "no_caption_prob": 1.2218974916322622e-05}, {"id": 186, "seek": 63112, "start": 646.0, "end": 652.36, "text": " So to wrap up tail call optimization to pop the stack again and take our call frame back", "tokens": [50364, 865, 11, 6838, 818, 19618, 307, 2673, 920, 257, 665, 472, 11, 457, 498, 291, 643, 281, 1319, 577, 50642, 50642, 264, 2445, 1985, 281, 652, 309, 589, 11, 550, 1338, 11, 18927, 309, 13, 50906, 50906, 492, 603, 751, 466, 18927, 278, 1780, 13, 51034, 51034, 1079, 13, 51108, 51108, 407, 281, 7019, 493, 6838, 818, 19618, 281, 1665, 264, 8630, 797, 293, 747, 527, 818, 3920, 646, 51426, 51426, 493, 456, 13, 51476, 51476], "temperature": 0.0, "avg_logprob": -0.17525773170666817, "compression_ratio": 1.5879120879120878, "no_caption_prob": 1.2218974916322622e-05}, {"id": 187, "seek": 63112, "start": 652.36, "end": 653.36, "text": " up there.", "tokens": [50364, 865, 11, 6838, 818, 19618, 307, 2673, 920, 257, 665, 472, 11, 457, 498, 291, 643, 281, 1319, 577, 50642, 50642, 264, 2445, 1985, 281, 652, 309, 589, 11, 550, 1338, 11, 18927, 309, 13, 50906, 50906, 492, 603, 751, 466, 18927, 278, 1780, 13, 51034, 51034, 1079, 13, 51108, 51108, 407, 281, 7019, 493, 6838, 818, 19618, 281, 1665, 264, 8630, 797, 293, 747, 527, 818, 3920, 646, 51426, 51426, 493, 456, 13, 51476, 51476], "temperature": 0.0, "avg_logprob": -0.17525773170666817, "compression_ratio": 1.5879120879120878, "no_caption_prob": 1.2218974916322622e-05}, {"id": 188, "seek": 65336, "start": 653.36, "end": 661.8000000000001, "text": " So in order to optimize, in order to turn something into a tail call optimized invocation,", "tokens": [50364, 407, 294, 1668, 281, 19719, 11, 294, 1668, 281, 1261, 746, 666, 257, 6838, 818, 26941, 1048, 27943, 11, 50786, 50786, 437, 360, 291, 360, 281, 360, 300, 30, 50846, 50846, 407, 382, 291, 848, 949, 11, 264, 31958, 1217, 775, 309, 337, 291, 13, 51052, 51052, 467, 5028, 5660, 2445, 337, 291, 11, 457, 787, 498, 264, 2445, 575, 257, 1629, 3909, 13, 51344, 51344, 8537, 309, 2738, 264, 2736, 2158, 281, 312, 294, 2685, 8432, 13, 51576, 51576, 407, 264, 2736, 2158, 393, 312, 294, 2940, 8432, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.10878914975105448, "compression_ratio": 1.740566037735849, "no_caption_prob": 7.889077096479014e-06}, {"id": 189, "seek": 65336, "start": 661.8000000000001, "end": 663.0, "text": " what do you do to do that?", "tokens": [50364, 407, 294, 1668, 281, 19719, 11, 294, 1668, 281, 1261, 746, 666, 257, 6838, 818, 26941, 1048, 27943, 11, 50786, 50786, 437, 360, 291, 360, 281, 360, 300, 30, 50846, 50846, 407, 382, 291, 848, 949, 11, 264, 31958, 1217, 775, 309, 337, 291, 13, 51052, 51052, 467, 5028, 5660, 2445, 337, 291, 11, 457, 787, 498, 264, 2445, 575, 257, 1629, 3909, 13, 51344, 51344, 8537, 309, 2738, 264, 2736, 2158, 281, 312, 294, 2685, 8432, 13, 51576, 51576, 407, 264, 2736, 2158, 393, 312, 294, 2940, 8432, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.10878914975105448, "compression_ratio": 1.740566037735849, "no_caption_prob": 7.889077096479014e-06}, {"id": 190, "seek": 65336, "start": 663.0, "end": 667.12, "text": " So as you said before, the compiler already does it for you.", "tokens": [50364, 407, 294, 1668, 281, 19719, 11, 294, 1668, 281, 1261, 746, 666, 257, 6838, 818, 26941, 1048, 27943, 11, 50786, 50786, 437, 360, 291, 360, 281, 360, 300, 30, 50846, 50846, 407, 382, 291, 848, 949, 11, 264, 31958, 1217, 775, 309, 337, 291, 13, 51052, 51052, 467, 5028, 5660, 2445, 337, 291, 11, 457, 787, 498, 264, 2445, 575, 257, 1629, 3909, 13, 51344, 51344, 8537, 309, 2738, 264, 2736, 2158, 281, 312, 294, 2685, 8432, 13, 51576, 51576, 407, 264, 2736, 2158, 393, 312, 294, 2940, 8432, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.10878914975105448, "compression_ratio": 1.740566037735849, "no_caption_prob": 7.889077096479014e-06}, {"id": 191, "seek": 65336, "start": 667.12, "end": 672.96, "text": " It optimizes function for you, but only if the function has a certain shape.", "tokens": [50364, 407, 294, 1668, 281, 19719, 11, 294, 1668, 281, 1261, 746, 666, 257, 6838, 818, 26941, 1048, 27943, 11, 50786, 50786, 437, 360, 291, 360, 281, 360, 300, 30, 50846, 50846, 407, 382, 291, 848, 949, 11, 264, 31958, 1217, 775, 309, 337, 291, 13, 51052, 51052, 467, 5028, 5660, 2445, 337, 291, 11, 457, 787, 498, 264, 2445, 575, 257, 1629, 3909, 13, 51344, 51344, 8537, 309, 2738, 264, 2736, 2158, 281, 312, 294, 2685, 8432, 13, 51576, 51576, 407, 264, 2736, 2158, 393, 312, 294, 2940, 8432, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.10878914975105448, "compression_ratio": 1.740566037735849, "no_caption_prob": 7.889077096479014e-06}, {"id": 192, "seek": 65336, "start": 672.96, "end": 677.6, "text": " Basically it wants the return value to be in specific positions.", "tokens": [50364, 407, 294, 1668, 281, 19719, 11, 294, 1668, 281, 1261, 746, 666, 257, 6838, 818, 26941, 1048, 27943, 11, 50786, 50786, 437, 360, 291, 360, 281, 360, 300, 30, 50846, 50846, 407, 382, 291, 848, 949, 11, 264, 31958, 1217, 775, 309, 337, 291, 13, 51052, 51052, 467, 5028, 5660, 2445, 337, 291, 11, 457, 787, 498, 264, 2445, 575, 257, 1629, 3909, 13, 51344, 51344, 8537, 309, 2738, 264, 2736, 2158, 281, 312, 294, 2685, 8432, 13, 51576, 51576, 407, 264, 2736, 2158, 393, 312, 294, 2940, 8432, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.10878914975105448, "compression_ratio": 1.740566037735849, "no_caption_prob": 7.889077096479014e-06}, {"id": 193, "seek": 65336, "start": 677.6, "end": 680.9200000000001, "text": " So the return value can be in several positions.", "tokens": [50364, 407, 294, 1668, 281, 19719, 11, 294, 1668, 281, 1261, 746, 666, 257, 6838, 818, 26941, 1048, 27943, 11, 50786, 50786, 437, 360, 291, 360, 281, 360, 300, 30, 50846, 50846, 407, 382, 291, 848, 949, 11, 264, 31958, 1217, 775, 309, 337, 291, 13, 51052, 51052, 467, 5028, 5660, 2445, 337, 291, 11, 457, 787, 498, 264, 2445, 575, 257, 1629, 3909, 13, 51344, 51344, 8537, 309, 2738, 264, 2736, 2158, 281, 312, 294, 2685, 8432, 13, 51576, 51576, 407, 264, 2736, 2158, 393, 312, 294, 2940, 8432, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.10878914975105448, "compression_ratio": 1.740566037735849, "no_caption_prob": 7.889077096479014e-06}, {"id": 194, "seek": 68092, "start": 680.92, "end": 683.68, "text": " And I say return value, I mean the recursive call.", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 195, "seek": 68092, "start": 683.68, "end": 686.92, "text": " So it needs to be at the end of a branch.", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 196, "seek": 68092, "start": 686.92, "end": 691.5999999999999, "text": " So if you can do a recursive function inside an if else, for instance, you could do it", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 197, "seek": 68092, "start": 691.5999999999999, "end": 696.3199999999999, "text": " in both branches, the if or the else, but you cannot do it in the condition.", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 198, "seek": 68092, "start": 696.3199999999999, "end": 700.04, "text": " You can do it in the branches of a case expression.", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 199, "seek": 68092, "start": 700.04, "end": 703.02, "text": " You can do it in the in of a let expression.", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 200, "seek": 68092, "start": 703.02, "end": 706.6999999999999, "text": " So let blah, blah, blah in, in there you can do the recursive call.", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 201, "seek": 68092, "start": 706.6999999999999, "end": 708.3, "text": " And that's pretty much it actually.", "tokens": [50364, 400, 286, 584, 2736, 2158, 11, 286, 914, 264, 20560, 488, 818, 13, 50502, 50502, 407, 309, 2203, 281, 312, 412, 264, 917, 295, 257, 9819, 13, 50664, 50664, 407, 498, 291, 393, 360, 257, 20560, 488, 2445, 1854, 364, 498, 1646, 11, 337, 5197, 11, 291, 727, 360, 309, 50898, 50898, 294, 1293, 14770, 11, 264, 498, 420, 264, 1646, 11, 457, 291, 2644, 360, 309, 294, 264, 4188, 13, 51134, 51134, 509, 393, 360, 309, 294, 264, 14770, 295, 257, 1389, 6114, 13, 51320, 51320, 509, 393, 360, 309, 294, 264, 294, 295, 257, 718, 6114, 13, 51469, 51469, 407, 718, 12288, 11, 12288, 11, 12288, 294, 11, 294, 456, 291, 393, 360, 264, 20560, 488, 818, 13, 51653, 51653, 400, 300, 311, 1238, 709, 309, 767, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.12255197496556525, "compression_ratio": 1.9869565217391305, "no_caption_prob": 3.117747837677598e-05}, {"id": 202, "seek": 70830, "start": 708.3, "end": 714.8199999999999, "text": " You can compose them together so you can do a recursive call in a if inside of a case", "tokens": [50364, 509, 393, 35925, 552, 1214, 370, 291, 393, 360, 257, 20560, 488, 818, 294, 257, 498, 1854, 295, 257, 1389, 50690, 50690, 9819, 293, 300, 1985, 13, 50780, 50780, 400, 300, 311, 309, 13, 50830, 50830, 1743, 1936, 309, 311, 264, 20560, 488, 818, 2203, 281, 312, 264, 1036, 6916, 300, 2314, 13, 51069, 51069, 1779, 13, 51119, 51119, 407, 498, 291, 645, 281, 360, 257, 20560, 488, 818, 1804, 20560, 488, 818, 11, 5800, 291, 434, 406, 294, 264, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.1759535131000337, "compression_ratio": 1.6574585635359116, "no_caption_prob": 8.530168088327628e-06}, {"id": 203, "seek": 70830, "start": 714.8199999999999, "end": 716.62, "text": " branch and that works.", "tokens": [50364, 509, 393, 35925, 552, 1214, 370, 291, 393, 360, 257, 20560, 488, 818, 294, 257, 498, 1854, 295, 257, 1389, 50690, 50690, 9819, 293, 300, 1985, 13, 50780, 50780, 400, 300, 311, 309, 13, 50830, 50830, 1743, 1936, 309, 311, 264, 20560, 488, 818, 2203, 281, 312, 264, 1036, 6916, 300, 2314, 13, 51069, 51069, 1779, 13, 51119, 51119, 407, 498, 291, 645, 281, 360, 257, 20560, 488, 818, 1804, 20560, 488, 818, 11, 5800, 291, 434, 406, 294, 264, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.1759535131000337, "compression_ratio": 1.6574585635359116, "no_caption_prob": 8.530168088327628e-06}, {"id": 204, "seek": 70830, "start": 716.62, "end": 717.62, "text": " And that's it.", "tokens": [50364, 509, 393, 35925, 552, 1214, 370, 291, 393, 360, 257, 20560, 488, 818, 294, 257, 498, 1854, 295, 257, 1389, 50690, 50690, 9819, 293, 300, 1985, 13, 50780, 50780, 400, 300, 311, 309, 13, 50830, 50830, 1743, 1936, 309, 311, 264, 20560, 488, 818, 2203, 281, 312, 264, 1036, 6916, 300, 2314, 13, 51069, 51069, 1779, 13, 51119, 51119, 407, 498, 291, 645, 281, 360, 257, 20560, 488, 818, 1804, 20560, 488, 818, 11, 5800, 291, 434, 406, 294, 264, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.1759535131000337, "compression_ratio": 1.6574585635359116, "no_caption_prob": 8.530168088327628e-06}, {"id": 205, "seek": 70830, "start": 717.62, "end": 722.4, "text": " Like basically it's the recursive call needs to be the last operation that happens.", "tokens": [50364, 509, 393, 35925, 552, 1214, 370, 291, 393, 360, 257, 20560, 488, 818, 294, 257, 498, 1854, 295, 257, 1389, 50690, 50690, 9819, 293, 300, 1985, 13, 50780, 50780, 400, 300, 311, 309, 13, 50830, 50830, 1743, 1936, 309, 311, 264, 20560, 488, 818, 2203, 281, 312, 264, 1036, 6916, 300, 2314, 13, 51069, 51069, 1779, 13, 51119, 51119, 407, 498, 291, 645, 281, 360, 257, 20560, 488, 818, 1804, 20560, 488, 818, 11, 5800, 291, 434, 406, 294, 264, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.1759535131000337, "compression_ratio": 1.6574585635359116, "no_caption_prob": 8.530168088327628e-06}, {"id": 206, "seek": 70830, "start": 722.4, "end": 723.4, "text": " Right.", "tokens": [50364, 509, 393, 35925, 552, 1214, 370, 291, 393, 360, 257, 20560, 488, 818, 294, 257, 498, 1854, 295, 257, 1389, 50690, 50690, 9819, 293, 300, 1985, 13, 50780, 50780, 400, 300, 311, 309, 13, 50830, 50830, 1743, 1936, 309, 311, 264, 20560, 488, 818, 2203, 281, 312, 264, 1036, 6916, 300, 2314, 13, 51069, 51069, 1779, 13, 51119, 51119, 407, 498, 291, 645, 281, 360, 257, 20560, 488, 818, 1804, 20560, 488, 818, 11, 5800, 291, 434, 406, 294, 264, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.1759535131000337, "compression_ratio": 1.6574585635359116, "no_caption_prob": 8.530168088327628e-06}, {"id": 207, "seek": 70830, "start": 723.4, "end": 732.7199999999999, "text": " So if you were to do a recursive call plus recursive call, suddenly you're not in the", "tokens": [50364, 509, 393, 35925, 552, 1214, 370, 291, 393, 360, 257, 20560, 488, 818, 294, 257, 498, 1854, 295, 257, 1389, 50690, 50690, 9819, 293, 300, 1985, 13, 50780, 50780, 400, 300, 311, 309, 13, 50830, 50830, 1743, 1936, 309, 311, 264, 20560, 488, 818, 2203, 281, 312, 264, 1036, 6916, 300, 2314, 13, 51069, 51069, 1779, 13, 51119, 51119, 407, 498, 291, 645, 281, 360, 257, 20560, 488, 818, 1804, 20560, 488, 818, 11, 5800, 291, 434, 406, 294, 264, 51585, 51585], "temperature": 0.0, "avg_logprob": -0.1759535131000337, "compression_ratio": 1.6574585635359116, "no_caption_prob": 8.530168088327628e-06}, {"id": 208, "seek": 73272, "start": 732.72, "end": 738.86, "text": " simple case, you know, possibilities that you laid out of case expressions, if expressions,", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 209, "seek": 73272, "start": 738.86, "end": 740.1600000000001, "text": " let bindings.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 210, "seek": 73272, "start": 740.1600000000001, "end": 741.9200000000001, "text": " It's now a plus expression.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 211, "seek": 73272, "start": 741.9200000000001, "end": 742.9200000000001, "text": " A plus expression.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 212, "seek": 73272, "start": 742.9200000000001, "end": 743.9200000000001, "text": " Yeah.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 213, "seek": 73272, "start": 743.9200000000001, "end": 744.9200000000001, "text": " Yeah.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 214, "seek": 73272, "start": 744.9200000000001, "end": 750.1600000000001, "text": " So one thing that is, for instance, a bit odd is like when you call the function recursively", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 215, "seek": 73272, "start": 750.1600000000001, "end": 755.2, "text": " using a pipe, like you do one pipe list dot length.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 216, "seek": 73272, "start": 755.2, "end": 756.2, "text": " Right.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 217, "seek": 73272, "start": 756.2, "end": 757.2, "text": " Oh yeah.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 218, "seek": 73272, "start": 757.2, "end": 760.6, "text": " Lists pipe, this is a length.", "tokens": [50364, 2199, 1389, 11, 291, 458, 11, 12178, 300, 291, 9897, 484, 295, 1389, 15277, 11, 498, 15277, 11, 50671, 50671, 718, 14786, 1109, 13, 50736, 50736, 467, 311, 586, 257, 1804, 6114, 13, 50824, 50824, 316, 1804, 6114, 13, 50874, 50874, 865, 13, 50924, 50924, 865, 13, 50974, 50974, 407, 472, 551, 300, 307, 11, 337, 5197, 11, 257, 857, 7401, 307, 411, 562, 291, 818, 264, 2445, 20560, 3413, 51236, 51236, 1228, 257, 11240, 11, 411, 291, 360, 472, 11240, 1329, 5893, 4641, 13, 51488, 51488, 1779, 13, 51538, 51538, 876, 1338, 13, 51588, 51588, 441, 1751, 11240, 11, 341, 307, 257, 4641, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.268574600919671, "compression_ratio": 1.658878504672897, "no_caption_prob": 2.046130430244375e-05}, {"id": 219, "seek": 76060, "start": 760.6, "end": 764.4, "text": " Unfortunately that is not considered function call by the Elm compiler.", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 220, "seek": 76060, "start": 764.4, "end": 768.28, "text": " So it doesn't look like what it expects, therefore it doesn't optimize it.", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 221, "seek": 76060, "start": 768.28, "end": 772.24, "text": " So it really is the if the case and the let's.", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 222, "seek": 76060, "start": 772.24, "end": 773.24, "text": " Right.", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 223, "seek": 76060, "start": 773.24, "end": 778.1800000000001, "text": " Which just happens to be with the, with the architecture of the Elm compiler and the,", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 224, "seek": 76060, "start": 778.1800000000001, "end": 781.3000000000001, "text": " the different passes that it does in compilation.", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 225, "seek": 76060, "start": 781.3000000000001, "end": 785.1800000000001, "text": " It doesn't see that as it could, but it doesn't.", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 226, "seek": 76060, "start": 785.1800000000001, "end": 789.36, "text": " So that's just a thing to know if you're trying to do a tail call optimization.", "tokens": [50364, 8590, 300, 307, 406, 4888, 2445, 818, 538, 264, 2699, 76, 31958, 13, 50554, 50554, 407, 309, 1177, 380, 574, 411, 437, 309, 33280, 11, 4412, 309, 1177, 380, 19719, 309, 13, 50748, 50748, 407, 309, 534, 307, 264, 498, 264, 1389, 293, 264, 718, 311, 13, 50946, 50946, 1779, 13, 50996, 50996, 3013, 445, 2314, 281, 312, 365, 264, 11, 365, 264, 9482, 295, 264, 2699, 76, 31958, 293, 264, 11, 51243, 51243, 264, 819, 11335, 300, 309, 775, 294, 40261, 13, 51399, 51399, 467, 1177, 380, 536, 300, 382, 309, 727, 11, 457, 309, 1177, 380, 13, 51593, 51593, 407, 300, 311, 445, 257, 551, 281, 458, 498, 291, 434, 1382, 281, 360, 257, 6838, 818, 19618, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.15962580711610855, "compression_ratio": 1.7884615384615385, "no_caption_prob": 1.5446037650690414e-05}, {"id": 227, "seek": 78936, "start": 789.36, "end": 796.52, "text": " And again, like you should benchmark before you assume that you need that, especially", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 228, "seek": 78936, "start": 796.52, "end": 800.36, "text": " if it's going to make the code more complex.", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 229, "seek": 78936, "start": 800.36, "end": 804.84, "text": " You shouldn't just assume that everything has to be tail call optimized.", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 230, "seek": 78936, "start": 804.84, "end": 807.84, "text": " And but it's a good idea.", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 231, "seek": 78936, "start": 807.84, "end": 811.36, "text": " I mean, it's one area that you could get a runtime exception.", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 232, "seek": 78936, "start": 811.36, "end": 812.36, "text": " Right.", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 233, "seek": 78936, "start": 812.36, "end": 816.16, "text": " So that's a reason to prefer tail call optimizations in itself.", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 234, "seek": 78936, "start": 816.16, "end": 817.16, "text": " Yeah.", "tokens": [50364, 400, 797, 11, 411, 291, 820, 18927, 949, 291, 6552, 300, 291, 643, 300, 11, 2318, 50722, 50722, 498, 309, 311, 516, 281, 652, 264, 3089, 544, 3997, 13, 50914, 50914, 509, 4659, 380, 445, 6552, 300, 1203, 575, 281, 312, 6838, 818, 26941, 13, 51138, 51138, 400, 457, 309, 311, 257, 665, 1558, 13, 51288, 51288, 286, 914, 11, 309, 311, 472, 1859, 300, 291, 727, 483, 257, 34474, 11183, 13, 51464, 51464, 1779, 13, 51514, 51514, 407, 300, 311, 257, 1778, 281, 4382, 6838, 818, 5028, 14455, 294, 2564, 13, 51704, 51704, 865, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1988750457763672, "compression_ratio": 1.6428571428571428, "no_caption_prob": 1.0289249075867701e-05}, {"id": 235, "seek": 81716, "start": 817.16, "end": 823.4, "text": " That's like the biggest reason to do it because the performance gets better, but not that", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 236, "seek": 81716, "start": 823.4, "end": 824.48, "text": " much better.", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 237, "seek": 81716, "start": 824.48, "end": 825.48, "text": " Like a few percent.", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 238, "seek": 81716, "start": 825.48, "end": 826.48, "text": " Right.", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 239, "seek": 81716, "start": 826.48, "end": 831.68, "text": " And if you're, if you're designing a package that is doing, you know, using large data", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 240, "seek": 81716, "start": 831.68, "end": 837.92, "text": " sets in a lot of use cases, then you want to do all these micro optimizations to squeeze", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 241, "seek": 81716, "start": 837.92, "end": 839.14, "text": " a little bit of performance.", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 242, "seek": 81716, "start": 839.14, "end": 844.52, "text": " Of course with, with benchmarking to guide where those performance opportunities are,", "tokens": [50364, 663, 311, 411, 264, 3880, 1778, 281, 360, 309, 570, 264, 3389, 2170, 1101, 11, 457, 406, 300, 50676, 50676, 709, 1101, 13, 50730, 50730, 1743, 257, 1326, 3043, 13, 50780, 50780, 1779, 13, 50830, 50830, 400, 498, 291, 434, 11, 498, 291, 434, 14685, 257, 7372, 300, 307, 884, 11, 291, 458, 11, 1228, 2416, 1412, 51090, 51090, 6352, 294, 257, 688, 295, 764, 3331, 11, 550, 291, 528, 281, 360, 439, 613, 4532, 5028, 14455, 281, 13578, 51402, 51402, 257, 707, 857, 295, 3389, 13, 51463, 51463, 2720, 1164, 365, 11, 365, 18927, 278, 281, 5934, 689, 729, 3389, 4786, 366, 11, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.13813125645672833, "compression_ratio": 1.6342412451361867, "no_caption_prob": 2.0145309463259764e-05}, {"id": 243, "seek": 84452, "start": 844.52, "end": 848.8, "text": " but for application code, you very much want to avoid runtime exceptions.", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 244, "seek": 84452, "start": 848.8, "end": 849.8, "text": " Yeah.", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 245, "seek": 84452, "start": 849.8, "end": 852.0, "text": " So the Elm compiler does this optimization.", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 246, "seek": 84452, "start": 852.0, "end": 856.76, "text": " I know that other compilers, other languages do other kinds of optimizations, which are", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 247, "seek": 84452, "start": 856.76, "end": 859.1999999999999, "text": " more powerful, more useful.", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 248, "seek": 84452, "start": 859.1999999999999, "end": 862.96, "text": " I'm not exactly sure what they are, but I've been told that there are.", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 249, "seek": 84452, "start": 862.96, "end": 863.96, "text": " Yeah.", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 250, "seek": 84452, "start": 863.96, "end": 868.68, "text": " And that Elm isn't actually, doesn't actually do tail call optimizations, like optimized", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 251, "seek": 84452, "start": 868.68, "end": 869.68, "text": " functions.", "tokens": [50364, 457, 337, 3861, 3089, 11, 291, 588, 709, 528, 281, 5042, 34474, 22847, 13, 50578, 50578, 865, 13, 50628, 50628, 407, 264, 2699, 76, 31958, 775, 341, 19618, 13, 50738, 50738, 286, 458, 300, 661, 715, 388, 433, 11, 661, 8650, 360, 661, 3685, 295, 5028, 14455, 11, 597, 366, 50976, 50976, 544, 4005, 11, 544, 4420, 13, 51098, 51098, 286, 478, 406, 2293, 988, 437, 436, 366, 11, 457, 286, 600, 668, 1907, 300, 456, 366, 13, 51286, 51286, 865, 13, 51336, 51336, 400, 300, 2699, 76, 1943, 380, 767, 11, 1177, 380, 767, 360, 6838, 818, 5028, 14455, 11, 411, 26941, 51572, 51572, 6828, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.18694772806253518, "compression_ratio": 1.7049180327868851, "no_caption_prob": 4.785073087987257e-06}, {"id": 252, "seek": 86968, "start": 869.68, "end": 875.2399999999999, "text": " So like sale, self call, sale recursion, which is only a subsets.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 253, "seek": 86968, "start": 875.2399999999999, "end": 876.2399999999999, "text": " But yeah.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 254, "seek": 86968, "start": 876.2399999999999, "end": 877.2399999999999, "text": " Yeah.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 255, "seek": 86968, "start": 877.2399999999999, "end": 878.92, "text": " I don't know much more than that.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 256, "seek": 86968, "start": 878.92, "end": 882.28, "text": " So what does my Elm review rule does do?", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 257, "seek": 86968, "start": 882.28, "end": 888.4799999999999, "text": " So the only thing it does is check whether you have recursive calls in other places than", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 258, "seek": 86968, "start": 888.4799999999999, "end": 890.8399999999999, "text": " the ones that I mentioned in if, in case.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 259, "seek": 86968, "start": 890.8399999999999, "end": 891.8399999999999, "text": " Right.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 260, "seek": 86968, "start": 891.8399999999999, "end": 892.8399999999999, "text": " And stuff like that.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 261, "seek": 86968, "start": 892.8399999999999, "end": 893.8399999999999, "text": " And that's all it does.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 262, "seek": 86968, "start": 893.8399999999999, "end": 894.8399999999999, "text": " Yeah.", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 263, "seek": 86968, "start": 894.8399999999999, "end": 898.76, "text": " And yeah, I've been thinking about this rule for a year and a half, two years, maybe like", "tokens": [50364, 407, 411, 8680, 11, 2698, 818, 11, 8680, 20560, 313, 11, 597, 307, 787, 257, 2090, 1385, 13, 50642, 50642, 583, 1338, 13, 50692, 50692, 865, 13, 50742, 50742, 286, 500, 380, 458, 709, 544, 813, 300, 13, 50826, 50826, 407, 437, 775, 452, 2699, 76, 3131, 4978, 775, 360, 30, 50994, 50994, 407, 264, 787, 551, 309, 775, 307, 1520, 1968, 291, 362, 20560, 488, 5498, 294, 661, 3190, 813, 51304, 51304, 264, 2306, 300, 286, 2835, 294, 498, 11, 294, 1389, 13, 51422, 51422, 1779, 13, 51472, 51472, 400, 1507, 411, 300, 13, 51522, 51522, 400, 300, 311, 439, 309, 775, 13, 51572, 51572, 865, 13, 51622, 51622, 400, 1338, 11, 286, 600, 668, 1953, 466, 341, 4978, 337, 257, 1064, 293, 257, 1922, 11, 732, 924, 11, 1310, 411, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1886257564320284, "compression_ratio": 1.6603053435114503, "no_caption_prob": 2.2827145585324615e-05}, {"id": 264, "seek": 89876, "start": 898.76, "end": 902.2, "text": " when I started working on Elm review basically.", "tokens": [50364, 562, 286, 1409, 1364, 322, 2699, 76, 3131, 1936, 13, 50536, 50536, 400, 286, 390, 1953, 11, 307, 309, 307, 767, 257, 857, 6179, 11, 457, 550, 562, 286, 7320, 300, 50918, 50918, 309, 486, 445, 589, 341, 636, 11, 309, 390, 411, 11, 1338, 11, 341, 307, 534, 2199, 13, 51120, 51120, 639, 307, 588, 1858, 2699, 76, 3131, 4978, 281, 2464, 13, 51290, 51290, 286, 841, 411, 300, 311, 257, 588, 2689, 1399, 294, 411, 11, 286, 914, 11, 1968, 309, 311, 9362, 1715, 420, 604, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.1708071231842041, "compression_ratio": 1.547945205479452, "no_caption_prob": 2.0145484086242504e-05}, {"id": 265, "seek": 89876, "start": 902.2, "end": 909.84, "text": " And I was thinking, is it is actually a bit complicated, but then when I understood that", "tokens": [50364, 562, 286, 1409, 1364, 322, 2699, 76, 3131, 1936, 13, 50536, 50536, 400, 286, 390, 1953, 11, 307, 309, 307, 767, 257, 857, 6179, 11, 457, 550, 562, 286, 7320, 300, 50918, 50918, 309, 486, 445, 589, 341, 636, 11, 309, 390, 411, 11, 1338, 11, 341, 307, 534, 2199, 13, 51120, 51120, 639, 307, 588, 1858, 2699, 76, 3131, 4978, 281, 2464, 13, 51290, 51290, 286, 841, 411, 300, 311, 257, 588, 2689, 1399, 294, 411, 11, 286, 914, 11, 1968, 309, 311, 9362, 1715, 420, 604, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.1708071231842041, "compression_ratio": 1.547945205479452, "no_caption_prob": 2.0145484086242504e-05}, {"id": 266, "seek": 89876, "start": 909.84, "end": 913.88, "text": " it will just work this way, it was like, yeah, this is really simple.", "tokens": [50364, 562, 286, 1409, 1364, 322, 2699, 76, 3131, 1936, 13, 50536, 50536, 400, 286, 390, 1953, 11, 307, 309, 307, 767, 257, 857, 6179, 11, 457, 550, 562, 286, 7320, 300, 50918, 50918, 309, 486, 445, 589, 341, 636, 11, 309, 390, 411, 11, 1338, 11, 341, 307, 534, 2199, 13, 51120, 51120, 639, 307, 588, 1858, 2699, 76, 3131, 4978, 281, 2464, 13, 51290, 51290, 286, 841, 411, 300, 311, 257, 588, 2689, 1399, 294, 411, 11, 286, 914, 11, 1968, 309, 311, 9362, 1715, 420, 604, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.1708071231842041, "compression_ratio": 1.547945205479452, "no_caption_prob": 2.0145484086242504e-05}, {"id": 267, "seek": 89876, "start": 913.88, "end": 917.28, "text": " This is very easy Elm review rule to write.", "tokens": [50364, 562, 286, 1409, 1364, 322, 2699, 76, 3131, 1936, 13, 50536, 50536, 400, 286, 390, 1953, 11, 307, 309, 307, 767, 257, 857, 6179, 11, 457, 550, 562, 286, 7320, 300, 50918, 50918, 309, 486, 445, 589, 341, 636, 11, 309, 390, 411, 11, 1338, 11, 341, 307, 534, 2199, 13, 51120, 51120, 639, 307, 588, 1858, 2699, 76, 3131, 4978, 281, 2464, 13, 51290, 51290, 286, 841, 411, 300, 311, 257, 588, 2689, 1399, 294, 411, 11, 286, 914, 11, 1968, 309, 311, 9362, 1715, 420, 604, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.1708071231842041, "compression_ratio": 1.547945205479452, "no_caption_prob": 2.0145484086242504e-05}, {"id": 268, "seek": 89876, "start": 917.28, "end": 924.56, "text": " I feel like that's a very common process in like, I mean, whether it's API design or any", "tokens": [50364, 562, 286, 1409, 1364, 322, 2699, 76, 3131, 1936, 13, 50536, 50536, 400, 286, 390, 1953, 11, 307, 309, 307, 767, 257, 857, 6179, 11, 457, 550, 562, 286, 7320, 300, 50918, 50918, 309, 486, 445, 589, 341, 636, 11, 309, 390, 411, 11, 1338, 11, 341, 307, 534, 2199, 13, 51120, 51120, 639, 307, 588, 1858, 2699, 76, 3131, 4978, 281, 2464, 13, 51290, 51290, 286, 841, 411, 300, 311, 257, 588, 2689, 1399, 294, 411, 11, 286, 914, 11, 1968, 309, 311, 9362, 1715, 420, 604, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.1708071231842041, "compression_ratio": 1.547945205479452, "no_caption_prob": 2.0145484086242504e-05}, {"id": 269, "seek": 92456, "start": 924.56, "end": 929.92, "text": " sort of like engineering, like that you think really hard in order to find the simple solution,", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 270, "seek": 92456, "start": 929.92, "end": 933.04, "text": " which then when you tell anyone about it, they're like, oh, that seems pretty simple.", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 271, "seek": 92456, "start": 933.04, "end": 936.0799999999999, "text": " You're like, yeah, but it was so hard to figure that out.", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 272, "seek": 92456, "start": 936.0799999999999, "end": 940.56, "text": " But I explained it to you in the simple way.", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 273, "seek": 92456, "start": 940.56, "end": 944.28, "text": " It took me years to get to that understanding.", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 274, "seek": 92456, "start": 944.28, "end": 949.4799999999999, "text": " It's like the Mark Twain, like forgive me for the long letter, but I didn't have time", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 275, "seek": 92456, "start": 949.4799999999999, "end": 951.4399999999999, "text": " to write you a short one.", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 276, "seek": 92456, "start": 951.4399999999999, "end": 952.4399999999999, "text": " Yeah.", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 277, "seek": 92456, "start": 952.4399999999999, "end": 953.4399999999999, "text": " Okay.", "tokens": [50364, 1333, 295, 411, 7043, 11, 411, 300, 291, 519, 534, 1152, 294, 1668, 281, 915, 264, 2199, 3827, 11, 50632, 50632, 597, 550, 562, 291, 980, 2878, 466, 309, 11, 436, 434, 411, 11, 1954, 11, 300, 2544, 1238, 2199, 13, 50788, 50788, 509, 434, 411, 11, 1338, 11, 457, 309, 390, 370, 1152, 281, 2573, 300, 484, 13, 50940, 50940, 583, 286, 8825, 309, 281, 291, 294, 264, 2199, 636, 13, 51164, 51164, 467, 1890, 385, 924, 281, 483, 281, 300, 3701, 13, 51350, 51350, 467, 311, 411, 264, 3934, 2574, 491, 11, 411, 10718, 385, 337, 264, 938, 5063, 11, 457, 286, 994, 380, 362, 565, 51610, 51610, 281, 2464, 291, 257, 2099, 472, 13, 51708, 51708, 865, 13, 51758, 51758, 1033, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.14221186970555505, "compression_ratio": 1.691449814126394, "no_caption_prob": 5.390911246649921e-05}, {"id": 278, "seek": 95344, "start": 953.44, "end": 959.36, "text": " So is there anything else people should know about tail call optimizations in Elm?", "tokens": [50364, 407, 307, 456, 1340, 1646, 561, 820, 458, 466, 6838, 818, 5028, 14455, 294, 2699, 76, 30, 50660, 50660, 407, 291, 2351, 949, 11, 577, 360, 291, 19719, 20560, 488, 2445, 30, 50924, 50924, 407, 294, 512, 3331, 309, 311, 411, 588, 2199, 13, 51097, 51097, 4803, 309, 311, 12720, 257, 11240, 13, 51170, 51170, 286, 600, 1027, 257, 2235, 5308, 281, 2699, 76, 1768, 1329, 13, 3828, 424, 11, 1338, 11, 1329, 13, 3828, 424, 11, 689, 436, 632, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2621488571166992, "compression_ratio": 1.495049504950495, "no_caption_prob": 2.2123122107586823e-05}, {"id": 279, "seek": 95344, "start": 959.36, "end": 964.6400000000001, "text": " So you asked before, how do you optimize recursive function?", "tokens": [50364, 407, 307, 456, 1340, 1646, 561, 820, 458, 466, 6838, 818, 5028, 14455, 294, 2699, 76, 30, 50660, 50660, 407, 291, 2351, 949, 11, 577, 360, 291, 19719, 20560, 488, 2445, 30, 50924, 50924, 407, 294, 512, 3331, 309, 311, 411, 588, 2199, 13, 51097, 51097, 4803, 309, 311, 12720, 257, 11240, 13, 51170, 51170, 286, 600, 1027, 257, 2235, 5308, 281, 2699, 76, 1768, 1329, 13, 3828, 424, 11, 1338, 11, 1329, 13, 3828, 424, 11, 689, 436, 632, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2621488571166992, "compression_ratio": 1.495049504950495, "no_caption_prob": 2.2123122107586823e-05}, {"id": 280, "seek": 95344, "start": 964.6400000000001, "end": 968.1, "text": " So in some cases it's like very simple.", "tokens": [50364, 407, 307, 456, 1340, 1646, 561, 820, 458, 466, 6838, 818, 5028, 14455, 294, 2699, 76, 30, 50660, 50660, 407, 291, 2351, 949, 11, 577, 360, 291, 19719, 20560, 488, 2445, 30, 50924, 50924, 407, 294, 512, 3331, 309, 311, 411, 588, 2199, 13, 51097, 51097, 4803, 309, 311, 12720, 257, 11240, 13, 51170, 51170, 286, 600, 1027, 257, 2235, 5308, 281, 2699, 76, 1768, 1329, 13, 3828, 424, 11, 1338, 11, 1329, 13, 3828, 424, 11, 689, 436, 632, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2621488571166992, "compression_ratio": 1.495049504950495, "no_caption_prob": 2.2123122107586823e-05}, {"id": 281, "seek": 95344, "start": 968.1, "end": 969.5600000000001, "text": " Sometimes it's removing a pipe.", "tokens": [50364, 407, 307, 456, 1340, 1646, 561, 820, 458, 466, 6838, 818, 5028, 14455, 294, 2699, 76, 30, 50660, 50660, 407, 291, 2351, 949, 11, 577, 360, 291, 19719, 20560, 488, 2445, 30, 50924, 50924, 407, 294, 512, 3331, 309, 311, 411, 588, 2199, 13, 51097, 51097, 4803, 309, 311, 12720, 257, 11240, 13, 51170, 51170, 286, 600, 1027, 257, 2235, 5308, 281, 2699, 76, 1768, 1329, 13, 3828, 424, 11, 1338, 11, 1329, 13, 3828, 424, 11, 689, 436, 632, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2621488571166992, "compression_ratio": 1.495049504950495, "no_caption_prob": 2.2123122107586823e-05}, {"id": 282, "seek": 95344, "start": 969.5600000000001, "end": 980.36, "text": " I've made a pull request to Elm community list.extra, yeah, list.extra, where they had", "tokens": [50364, 407, 307, 456, 1340, 1646, 561, 820, 458, 466, 6838, 818, 5028, 14455, 294, 2699, 76, 30, 50660, 50660, 407, 291, 2351, 949, 11, 577, 360, 291, 19719, 20560, 488, 2445, 30, 50924, 50924, 407, 294, 512, 3331, 309, 311, 411, 588, 2199, 13, 51097, 51097, 4803, 309, 311, 12720, 257, 11240, 13, 51170, 51170, 286, 600, 1027, 257, 2235, 5308, 281, 2699, 76, 1768, 1329, 13, 3828, 424, 11, 1338, 11, 1329, 13, 3828, 424, 11, 689, 436, 632, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2621488571166992, "compression_ratio": 1.495049504950495, "no_caption_prob": 2.2123122107586823e-05}, {"id": 283, "seek": 98036, "start": 980.36, "end": 988.0, "text": " a function that was not tail call recursive because they use a pipe, like a lift pipe.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 284, "seek": 98036, "start": 988.0, "end": 994.08, "text": " Just remove that pipe and add parens and that was it.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 285, "seek": 98036, "start": 994.08, "end": 998.0, "text": " And that was like a 7% increase in performance.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 286, "seek": 98036, "start": 998.0, "end": 999.0, "text": " So yeah.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 287, "seek": 98036, "start": 999.0, "end": 1000.0, "text": " That's cool.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 288, "seek": 98036, "start": 1000.0, "end": 1001.0, "text": " Okay.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 289, "seek": 98036, "start": 1001.0, "end": 1002.4, "text": " Well, that's a good concrete number.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 290, "seek": 98036, "start": 1002.4, "end": 1003.4, "text": " Nice.", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 291, "seek": 98036, "start": 1003.4, "end": 1008.12, "text": " Oh, another thing that I realized after I wrote my blog post and I edited it when I", "tokens": [50364, 257, 2445, 300, 390, 406, 6838, 818, 20560, 488, 570, 436, 764, 257, 11240, 11, 411, 257, 5533, 11240, 13, 50746, 50746, 1449, 4159, 300, 11240, 293, 909, 7448, 3695, 293, 300, 390, 309, 13, 51050, 51050, 400, 300, 390, 411, 257, 1614, 4, 3488, 294, 3389, 13, 51246, 51246, 407, 1338, 13, 51296, 51296, 663, 311, 1627, 13, 51346, 51346, 1033, 13, 51396, 51396, 1042, 11, 300, 311, 257, 665, 9859, 1230, 13, 51466, 51466, 5490, 13, 51516, 51516, 876, 11, 1071, 551, 300, 286, 5334, 934, 286, 4114, 452, 6968, 2183, 293, 286, 23016, 309, 562, 286, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18147396346897754, "compression_ratio": 1.5244444444444445, "no_caption_prob": 1.9222605260438286e-05}, {"id": 292, "seek": 100812, "start": 1008.12, "end": 1013.8, "text": " made the announcement was that you have recursive functions, you have non recursive functions", "tokens": [50364, 1027, 264, 12847, 390, 300, 291, 362, 20560, 488, 6828, 11, 291, 362, 2107, 20560, 488, 6828, 50648, 50648, 293, 291, 362, 18886, 20560, 488, 6828, 13, 50796, 50796, 407, 309, 311, 406, 767, 257, 551, 295, 264, 2445, 307, 20560, 488, 11, 307, 300, 264, 818, 307, 20560, 488, 13, 51266, 51266, 407, 498, 291, 360, 257, 20560, 488, 818, 1854, 472, 295, 729, 4350, 3190, 11, 300, 2170, 26941, 13, 51566, 51566, 759, 291, 360, 1071, 472, 689, 309, 311, 406, 4350, 11, 731, 300, 472, 1582, 380, 483, 26941, 11, 457, 309, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.12499298712219854, "compression_ratio": 2.0406091370558377, "no_caption_prob": 1.5685005564591847e-05}, {"id": 293, "seek": 100812, "start": 1013.8, "end": 1016.76, "text": " and you have partially recursive functions.", "tokens": [50364, 1027, 264, 12847, 390, 300, 291, 362, 20560, 488, 6828, 11, 291, 362, 2107, 20560, 488, 6828, 50648, 50648, 293, 291, 362, 18886, 20560, 488, 6828, 13, 50796, 50796, 407, 309, 311, 406, 767, 257, 551, 295, 264, 2445, 307, 20560, 488, 11, 307, 300, 264, 818, 307, 20560, 488, 13, 51266, 51266, 407, 498, 291, 360, 257, 20560, 488, 818, 1854, 472, 295, 729, 4350, 3190, 11, 300, 2170, 26941, 13, 51566, 51566, 759, 291, 360, 1071, 472, 689, 309, 311, 406, 4350, 11, 731, 300, 472, 1582, 380, 483, 26941, 11, 457, 309, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.12499298712219854, "compression_ratio": 2.0406091370558377, "no_caption_prob": 1.5685005564591847e-05}, {"id": 294, "seek": 100812, "start": 1016.76, "end": 1026.16, "text": " So it's not actually a thing of the function is recursive, is that the call is recursive.", "tokens": [50364, 1027, 264, 12847, 390, 300, 291, 362, 20560, 488, 6828, 11, 291, 362, 2107, 20560, 488, 6828, 50648, 50648, 293, 291, 362, 18886, 20560, 488, 6828, 13, 50796, 50796, 407, 309, 311, 406, 767, 257, 551, 295, 264, 2445, 307, 20560, 488, 11, 307, 300, 264, 818, 307, 20560, 488, 13, 51266, 51266, 407, 498, 291, 360, 257, 20560, 488, 818, 1854, 472, 295, 729, 4350, 3190, 11, 300, 2170, 26941, 13, 51566, 51566, 759, 291, 360, 1071, 472, 689, 309, 311, 406, 4350, 11, 731, 300, 472, 1582, 380, 483, 26941, 11, 457, 309, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.12499298712219854, "compression_ratio": 2.0406091370558377, "no_caption_prob": 1.5685005564591847e-05}, {"id": 295, "seek": 100812, "start": 1026.16, "end": 1032.16, "text": " So if you do a recursive call inside one of those allowed places, that gets optimized.", "tokens": [50364, 1027, 264, 12847, 390, 300, 291, 362, 20560, 488, 6828, 11, 291, 362, 2107, 20560, 488, 6828, 50648, 50648, 293, 291, 362, 18886, 20560, 488, 6828, 13, 50796, 50796, 407, 309, 311, 406, 767, 257, 551, 295, 264, 2445, 307, 20560, 488, 11, 307, 300, 264, 818, 307, 20560, 488, 13, 51266, 51266, 407, 498, 291, 360, 257, 20560, 488, 818, 1854, 472, 295, 729, 4350, 3190, 11, 300, 2170, 26941, 13, 51566, 51566, 759, 291, 360, 1071, 472, 689, 309, 311, 406, 4350, 11, 731, 300, 472, 1582, 380, 483, 26941, 11, 457, 309, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.12499298712219854, "compression_ratio": 2.0406091370558377, "no_caption_prob": 1.5685005564591847e-05}, {"id": 296, "seek": 100812, "start": 1032.16, "end": 1036.7, "text": " If you do another one where it's not allowed, well that one won't get optimized, but it", "tokens": [50364, 1027, 264, 12847, 390, 300, 291, 362, 20560, 488, 6828, 11, 291, 362, 2107, 20560, 488, 6828, 50648, 50648, 293, 291, 362, 18886, 20560, 488, 6828, 13, 50796, 50796, 407, 309, 311, 406, 767, 257, 551, 295, 264, 2445, 307, 20560, 488, 11, 307, 300, 264, 818, 307, 20560, 488, 13, 51266, 51266, 407, 498, 291, 360, 257, 20560, 488, 818, 1854, 472, 295, 729, 4350, 3190, 11, 300, 2170, 26941, 13, 51566, 51566, 759, 291, 360, 1071, 472, 689, 309, 311, 406, 4350, 11, 731, 300, 472, 1582, 380, 483, 26941, 11, 457, 309, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.12499298712219854, "compression_ratio": 2.0406091370558377, "no_caption_prob": 1.5685005564591847e-05}, {"id": 297, "seek": 103670, "start": 1036.7, "end": 1038.3600000000001, "text": " doesn't deoptimize the other one.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 298, "seek": 103670, "start": 1038.3600000000001, "end": 1045.52, "text": " You will have a while loop in one place and a recursive call, a plain one in a place where", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 299, "seek": 103670, "start": 1045.52, "end": 1046.8400000000001, "text": " it was not allowed.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 300, "seek": 103670, "start": 1046.8400000000001, "end": 1052.1200000000001, "text": " So yeah, I didn't know, but you can have partially recursive functions.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 301, "seek": 103670, "start": 1052.1200000000001, "end": 1053.56, "text": " Partially tail call optimized.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 302, "seek": 103670, "start": 1053.56, "end": 1054.56, "text": " Yes.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 303, "seek": 103670, "start": 1054.56, "end": 1055.56, "text": " Right.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 304, "seek": 103670, "start": 1055.56, "end": 1056.56, "text": " Yeah.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 305, "seek": 103670, "start": 1056.56, "end": 1057.56, "text": " That's really cool.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 306, "seek": 103670, "start": 1057.56, "end": 1061.0800000000002, "text": " I didn't realize that until I read your blog post either, which we will link to in the", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 307, "seek": 103670, "start": 1061.0800000000002, "end": 1062.0800000000002, "text": " show notes.", "tokens": [50364, 1177, 380, 368, 5747, 43890, 264, 661, 472, 13, 50447, 50447, 509, 486, 362, 257, 1339, 6367, 294, 472, 1081, 293, 257, 20560, 488, 818, 11, 257, 11121, 472, 294, 257, 1081, 689, 50805, 50805, 309, 390, 406, 4350, 13, 50871, 50871, 407, 1338, 11, 286, 994, 380, 458, 11, 457, 291, 393, 362, 18886, 20560, 488, 6828, 13, 51135, 51135, 4100, 2270, 6838, 818, 26941, 13, 51207, 51207, 1079, 13, 51257, 51257, 1779, 13, 51307, 51307, 865, 13, 51357, 51357, 663, 311, 534, 1627, 13, 51407, 51407, 286, 994, 380, 4325, 300, 1826, 286, 1401, 428, 6968, 2183, 2139, 11, 597, 321, 486, 2113, 281, 294, 264, 51583, 51583, 855, 5570, 13, 51633, 51633], "temperature": 0.0, "avg_logprob": -0.16775501283824953, "compression_ratio": 1.641025641025641, "no_caption_prob": 1.805823194445111e-05}, {"id": 308, "seek": 106208, "start": 1062.08, "end": 1068.1999999999998, "text": " Also, Evan made a great post on how to explain.", "tokens": [50364, 2743, 11, 22613, 1027, 257, 869, 2183, 322, 577, 281, 2903, 13, 50670, 50670, 2743, 22613, 4114, 257, 588, 665, 7222, 281, 2903, 577, 309, 1985, 13, 50860, 50860, 1726, 2293, 562, 309, 2170, 6456, 11, 597, 286, 360, 1101, 294, 452, 7222, 11, 457, 309, 775, 2903, 51146, 51146, 264, 21577, 337, 309, 13, 51270, 51270, 1079, 13, 51320, 51320, 400, 577, 281, 4088, 746, 490, 257, 2107, 6838, 818, 26941, 1254, 666, 257, 1254, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20562383863661024, "compression_ratio": 1.5408163265306123, "no_caption_prob": 2.7107482310384512e-05}, {"id": 309, "seek": 106208, "start": 1068.1999999999998, "end": 1072.0, "text": " Also Evan wrote a very good article to explain how it works.", "tokens": [50364, 2743, 11, 22613, 1027, 257, 869, 2183, 322, 577, 281, 2903, 13, 50670, 50670, 2743, 22613, 4114, 257, 588, 665, 7222, 281, 2903, 577, 309, 1985, 13, 50860, 50860, 1726, 2293, 562, 309, 2170, 6456, 11, 597, 286, 360, 1101, 294, 452, 7222, 11, 457, 309, 775, 2903, 51146, 51146, 264, 21577, 337, 309, 13, 51270, 51270, 1079, 13, 51320, 51320, 400, 577, 281, 4088, 746, 490, 257, 2107, 6838, 818, 26941, 1254, 666, 257, 1254, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20562383863661024, "compression_ratio": 1.5408163265306123, "no_caption_prob": 2.7107482310384512e-05}, {"id": 310, "seek": 106208, "start": 1072.0, "end": 1077.72, "text": " Not exactly when it gets applied, which I do better in my article, but it does explain", "tokens": [50364, 2743, 11, 22613, 1027, 257, 869, 2183, 322, 577, 281, 2903, 13, 50670, 50670, 2743, 22613, 4114, 257, 588, 665, 7222, 281, 2903, 577, 309, 1985, 13, 50860, 50860, 1726, 2293, 562, 309, 2170, 6456, 11, 597, 286, 360, 1101, 294, 452, 7222, 11, 457, 309, 775, 2903, 51146, 51146, 264, 21577, 337, 309, 13, 51270, 51270, 1079, 13, 51320, 51320, 400, 577, 281, 4088, 746, 490, 257, 2107, 6838, 818, 26941, 1254, 666, 257, 1254, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20562383863661024, "compression_ratio": 1.5408163265306123, "no_caption_prob": 2.7107482310384512e-05}, {"id": 311, "seek": 106208, "start": 1077.72, "end": 1080.1999999999998, "text": " the reasoning for it.", "tokens": [50364, 2743, 11, 22613, 1027, 257, 869, 2183, 322, 577, 281, 2903, 13, 50670, 50670, 2743, 22613, 4114, 257, 588, 665, 7222, 281, 2903, 577, 309, 1985, 13, 50860, 50860, 1726, 2293, 562, 309, 2170, 6456, 11, 597, 286, 360, 1101, 294, 452, 7222, 11, 457, 309, 775, 2903, 51146, 51146, 264, 21577, 337, 309, 13, 51270, 51270, 1079, 13, 51320, 51320, 400, 577, 281, 4088, 746, 490, 257, 2107, 6838, 818, 26941, 1254, 666, 257, 1254, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20562383863661024, "compression_ratio": 1.5408163265306123, "no_caption_prob": 2.7107482310384512e-05}, {"id": 312, "seek": 106208, "start": 1080.1999999999998, "end": 1081.1999999999998, "text": " Yes.", "tokens": [50364, 2743, 11, 22613, 1027, 257, 869, 2183, 322, 577, 281, 2903, 13, 50670, 50670, 2743, 22613, 4114, 257, 588, 665, 7222, 281, 2903, 577, 309, 1985, 13, 50860, 50860, 1726, 2293, 562, 309, 2170, 6456, 11, 597, 286, 360, 1101, 294, 452, 7222, 11, 457, 309, 775, 2903, 51146, 51146, 264, 21577, 337, 309, 13, 51270, 51270, 1079, 13, 51320, 51320, 400, 577, 281, 4088, 746, 490, 257, 2107, 6838, 818, 26941, 1254, 666, 257, 1254, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20562383863661024, "compression_ratio": 1.5408163265306123, "no_caption_prob": 2.7107482310384512e-05}, {"id": 313, "seek": 106208, "start": 1081.1999999999998, "end": 1089.08, "text": " And how to transform something from a non tail call optimized form into a form.", "tokens": [50364, 2743, 11, 22613, 1027, 257, 869, 2183, 322, 577, 281, 2903, 13, 50670, 50670, 2743, 22613, 4114, 257, 588, 665, 7222, 281, 2903, 577, 309, 1985, 13, 50860, 50860, 1726, 2293, 562, 309, 2170, 6456, 11, 597, 286, 360, 1101, 294, 452, 7222, 11, 457, 309, 775, 2903, 51146, 51146, 264, 21577, 337, 309, 13, 51270, 51270, 1079, 13, 51320, 51320, 400, 577, 281, 4088, 746, 490, 257, 2107, 6838, 818, 26941, 1254, 666, 257, 1254, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.20562383863661024, "compression_ratio": 1.5408163265306123, "no_caption_prob": 2.7107482310384512e-05}, {"id": 314, "seek": 108908, "start": 1089.08, "end": 1096.6, "text": " Basically you need to sometimes make state explicit in a way that it can be passed down", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 315, "seek": 108908, "start": 1096.6, "end": 1097.6, "text": " recursively.", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 316, "seek": 108908, "start": 1097.6, "end": 1098.6, "text": " Yeah.", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 317, "seek": 108908, "start": 1098.6, "end": 1100.8799999999999, "text": " So for instance, how would you optimize list.length?", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 318, "seek": 108908, "start": 1100.8799999999999, "end": 1101.8799999999999, "text": " Right.", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 319, "seek": 108908, "start": 1101.8799999999999, "end": 1111.3999999999999, "text": " So I think the problem is that if you do, you need to keep track of the running length", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 320, "seek": 108908, "start": 1111.3999999999999, "end": 1113.5, "text": " that you have so far.", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 321, "seek": 108908, "start": 1113.5, "end": 1116.1599999999999, "text": " Because previously we said list.length is basically...", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 322, "seek": 108908, "start": 1116.1599999999999, "end": 1117.1599999999999, "text": " One plus.", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 323, "seek": 108908, "start": 1117.1599999999999, "end": 1118.1599999999999, "text": " Plus.", "tokens": [50364, 8537, 291, 643, 281, 2171, 652, 1785, 13691, 294, 257, 636, 300, 309, 393, 312, 4678, 760, 50740, 50740, 20560, 3413, 13, 50790, 50790, 865, 13, 50840, 50840, 407, 337, 5197, 11, 577, 576, 291, 19719, 1329, 13, 45390, 30, 50954, 50954, 1779, 13, 51004, 51004, 407, 286, 519, 264, 1154, 307, 300, 498, 291, 360, 11, 291, 643, 281, 1066, 2837, 295, 264, 2614, 4641, 51480, 51480, 300, 291, 362, 370, 1400, 13, 51585, 51585, 1436, 8046, 321, 848, 1329, 13, 45390, 307, 1936, 485, 51718, 51718, 1485, 1804, 13, 51768, 51768, 7721, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.16842109988434145, "compression_ratio": 1.5446428571428572, "no_caption_prob": 2.4299832148244604e-05}, {"id": 324, "seek": 111816, "start": 1118.16, "end": 1119.16, "text": " Plus operation.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 325, "seek": 111816, "start": 1119.16, "end": 1120.16, "text": " Plus operation.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 326, "seek": 111816, "start": 1120.16, "end": 1121.16, "text": " Right.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 327, "seek": 111816, "start": 1121.16, "end": 1122.16, "text": " Yes.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 328, "seek": 111816, "start": 1122.16, "end": 1129.16, "text": " So you would need to add an extra argument to get the length so far.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 329, "seek": 111816, "start": 1129.16, "end": 1135.1200000000001, "text": " And then you would need a list.length.help function that would start with the length", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 330, "seek": 111816, "start": 1135.1200000000001, "end": 1136.76, "text": " so far as zero.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 331, "seek": 111816, "start": 1136.76, "end": 1137.76, "text": " Yeah.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 332, "seek": 111816, "start": 1137.76, "end": 1143.3200000000002, "text": " Usually you split them up into a function, a public function and a helper function.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 333, "seek": 111816, "start": 1143.3200000000002, "end": 1144.3200000000002, "text": " Right.", "tokens": [50364, 7721, 6916, 13, 50414, 50414, 7721, 6916, 13, 50464, 50464, 1779, 13, 50514, 50514, 1079, 13, 50564, 50564, 407, 291, 576, 643, 281, 909, 364, 2857, 6770, 281, 483, 264, 4641, 370, 1400, 13, 50914, 50914, 400, 550, 291, 576, 643, 257, 1329, 13, 45390, 13, 37451, 2445, 300, 576, 722, 365, 264, 4641, 51212, 51212, 370, 1400, 382, 4018, 13, 51294, 51294, 865, 13, 51344, 51344, 11419, 291, 7472, 552, 493, 666, 257, 2445, 11, 257, 1908, 2445, 293, 257, 36133, 2445, 13, 51622, 51622, 1779, 13, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.19996908436650815, "compression_ratio": 1.7415730337078652, "no_caption_prob": 9.51614674704615e-06}, {"id": 334, "seek": 114432, "start": 1144.32, "end": 1150.96, "text": " So the public one bootstraps it with some default value, some initial starting value.", "tokens": [50364, 407, 264, 1908, 472, 11450, 19639, 1878, 309, 365, 512, 7576, 2158, 11, 512, 5883, 2891, 2158, 13, 50696, 50696, 400, 550, 300, 311, 1333, 295, 411, 437, 264, 8630, 3920, 576, 362, 668, 9792, 926, 11, 300, 51048, 51048, 1785, 295, 264, 2614, 4641, 13, 51156, 51156, 583, 291, 434, 1455, 300, 364, 13691, 644, 295, 264, 6513, 37557, 1785, 295, 341, 20560, 488, 51452, 51452, 818, 13, 51502, 51502, 407, 291, 652, 300, 13691, 293, 586, 291, 393, 360, 1329, 485, 51696, 51696, 708, 576, 309, 312, 550, 30, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.17878454107987254, "compression_ratio": 1.618421052631579, "no_caption_prob": 5.014678208681289e-06}, {"id": 335, "seek": 114432, "start": 1150.96, "end": 1158.0, "text": " And then that's sort of like what the stack frame would have been carrying around, that", "tokens": [50364, 407, 264, 1908, 472, 11450, 19639, 1878, 309, 365, 512, 7576, 2158, 11, 512, 5883, 2891, 2158, 13, 50696, 50696, 400, 550, 300, 311, 1333, 295, 411, 437, 264, 8630, 3920, 576, 362, 668, 9792, 926, 11, 300, 51048, 51048, 1785, 295, 264, 2614, 4641, 13, 51156, 51156, 583, 291, 434, 1455, 300, 364, 13691, 644, 295, 264, 6513, 37557, 1785, 295, 341, 20560, 488, 51452, 51452, 818, 13, 51502, 51502, 407, 291, 652, 300, 13691, 293, 586, 291, 393, 360, 1329, 485, 51696, 51696, 708, 576, 309, 312, 550, 30, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.17878454107987254, "compression_ratio": 1.618421052631579, "no_caption_prob": 5.014678208681289e-06}, {"id": 336, "seek": 114432, "start": 1158.0, "end": 1160.1599999999999, "text": " state of the running length.", "tokens": [50364, 407, 264, 1908, 472, 11450, 19639, 1878, 309, 365, 512, 7576, 2158, 11, 512, 5883, 2891, 2158, 13, 50696, 50696, 400, 550, 300, 311, 1333, 295, 411, 437, 264, 8630, 3920, 576, 362, 668, 9792, 926, 11, 300, 51048, 51048, 1785, 295, 264, 2614, 4641, 13, 51156, 51156, 583, 291, 434, 1455, 300, 364, 13691, 644, 295, 264, 6513, 37557, 1785, 295, 341, 20560, 488, 51452, 51452, 818, 13, 51502, 51502, 407, 291, 652, 300, 13691, 293, 586, 291, 393, 360, 1329, 485, 51696, 51696, 708, 576, 309, 312, 550, 30, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.17878454107987254, "compression_ratio": 1.618421052631579, "no_caption_prob": 5.014678208681289e-06}, {"id": 337, "seek": 114432, "start": 1160.1599999999999, "end": 1166.08, "text": " But you're making that an explicit part of the quote unquote state of this recursive", "tokens": [50364, 407, 264, 1908, 472, 11450, 19639, 1878, 309, 365, 512, 7576, 2158, 11, 512, 5883, 2891, 2158, 13, 50696, 50696, 400, 550, 300, 311, 1333, 295, 411, 437, 264, 8630, 3920, 576, 362, 668, 9792, 926, 11, 300, 51048, 51048, 1785, 295, 264, 2614, 4641, 13, 51156, 51156, 583, 291, 434, 1455, 300, 364, 13691, 644, 295, 264, 6513, 37557, 1785, 295, 341, 20560, 488, 51452, 51452, 818, 13, 51502, 51502, 407, 291, 652, 300, 13691, 293, 586, 291, 393, 360, 1329, 485, 51696, 51696, 708, 576, 309, 312, 550, 30, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.17878454107987254, "compression_ratio": 1.618421052631579, "no_caption_prob": 5.014678208681289e-06}, {"id": 338, "seek": 114432, "start": 1166.08, "end": 1167.08, "text": " call.", "tokens": [50364, 407, 264, 1908, 472, 11450, 19639, 1878, 309, 365, 512, 7576, 2158, 11, 512, 5883, 2891, 2158, 13, 50696, 50696, 400, 550, 300, 311, 1333, 295, 411, 437, 264, 8630, 3920, 576, 362, 668, 9792, 926, 11, 300, 51048, 51048, 1785, 295, 264, 2614, 4641, 13, 51156, 51156, 583, 291, 434, 1455, 300, 364, 13691, 644, 295, 264, 6513, 37557, 1785, 295, 341, 20560, 488, 51452, 51452, 818, 13, 51502, 51502, 407, 291, 652, 300, 13691, 293, 586, 291, 393, 360, 1329, 485, 51696, 51696, 708, 576, 309, 312, 550, 30, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.17878454107987254, "compression_ratio": 1.618421052631579, "no_caption_prob": 5.014678208681289e-06}, {"id": 339, "seek": 114432, "start": 1167.08, "end": 1170.96, "text": " So you make that explicit and now you can do list...", "tokens": [50364, 407, 264, 1908, 472, 11450, 19639, 1878, 309, 365, 512, 7576, 2158, 11, 512, 5883, 2891, 2158, 13, 50696, 50696, 400, 550, 300, 311, 1333, 295, 411, 437, 264, 8630, 3920, 576, 362, 668, 9792, 926, 11, 300, 51048, 51048, 1785, 295, 264, 2614, 4641, 13, 51156, 51156, 583, 291, 434, 1455, 300, 364, 13691, 644, 295, 264, 6513, 37557, 1785, 295, 341, 20560, 488, 51452, 51452, 818, 13, 51502, 51502, 407, 291, 652, 300, 13691, 293, 586, 291, 393, 360, 1329, 485, 51696, 51696, 708, 576, 309, 312, 550, 30, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.17878454107987254, "compression_ratio": 1.618421052631579, "no_caption_prob": 5.014678208681289e-06}, {"id": 340, "seek": 114432, "start": 1170.96, "end": 1171.96, "text": " What would it be then?", "tokens": [50364, 407, 264, 1908, 472, 11450, 19639, 1878, 309, 365, 512, 7576, 2158, 11, 512, 5883, 2891, 2158, 13, 50696, 50696, 400, 550, 300, 311, 1333, 295, 411, 437, 264, 8630, 3920, 576, 362, 668, 9792, 926, 11, 300, 51048, 51048, 1785, 295, 264, 2614, 4641, 13, 51156, 51156, 583, 291, 434, 1455, 300, 364, 13691, 644, 295, 264, 6513, 37557, 1785, 295, 341, 20560, 488, 51452, 51452, 818, 13, 51502, 51502, 407, 291, 652, 300, 13691, 293, 586, 291, 393, 360, 1329, 485, 51696, 51696, 708, 576, 309, 312, 550, 30, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.17878454107987254, "compression_ratio": 1.618421052631579, "no_caption_prob": 5.014678208681289e-06}, {"id": 341, "seek": 117196, "start": 1171.96, "end": 1175.3600000000001, "text": " The length of the rest of the list?", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 342, "seek": 117196, "start": 1175.3600000000001, "end": 1178.16, "text": " And is there a plus one in the function invocation?", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 343, "seek": 117196, "start": 1178.16, "end": 1180.2, "text": " Or where does that plus one go now?", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 344, "seek": 117196, "start": 1180.2, "end": 1181.2, "text": " Yeah.", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 345, "seek": 117196, "start": 1181.2, "end": 1185.28, "text": " So I'm going to say it out loud in code.", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 346, "seek": 117196, "start": 1185.28, "end": 1195.48, "text": " So you would have length which takes a list and that equals list.helper the list zero.", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 347, "seek": 117196, "start": 1195.48, "end": 1196.7, "text": " And list.helper would...", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 348, "seek": 117196, "start": 1196.7, "end": 1201.28, "text": " So it takes the list and the results so far.", "tokens": [50364, 440, 4641, 295, 264, 1472, 295, 264, 1329, 30, 50534, 50534, 400, 307, 456, 257, 1804, 472, 294, 264, 2445, 1048, 27943, 30, 50674, 50674, 1610, 689, 775, 300, 1804, 472, 352, 586, 30, 50776, 50776, 865, 13, 50826, 50826, 407, 286, 478, 516, 281, 584, 309, 484, 6588, 294, 3089, 13, 51030, 51030, 407, 291, 576, 362, 4641, 597, 2516, 257, 1329, 293, 300, 6915, 1329, 13, 18063, 610, 264, 1329, 4018, 13, 51540, 51540, 400, 1329, 13, 18063, 610, 576, 485, 51601, 51601, 407, 309, 2516, 264, 1329, 293, 264, 3542, 370, 1400, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.24780019760131836, "compression_ratio": 1.676923076923077, "no_caption_prob": 9.368668543174863e-06}, {"id": 349, "seek": 120128, "start": 1201.28, "end": 1202.28, "text": " Yes.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 350, "seek": 120128, "start": 1202.28, "end": 1204.52, "text": " So you do a case off of that list.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 351, "seek": 120128, "start": 1204.52, "end": 1207.28, "text": " If it's empty, you return the results so far.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 352, "seek": 120128, "start": 1207.28, "end": 1210.12, "text": " So the accumulated result.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 353, "seek": 120128, "start": 1210.12, "end": 1217.3999999999999, "text": " And if it's not empty, then you call the function itself with the rest, but the results so far,", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 354, "seek": 120128, "start": 1217.3999999999999, "end": 1218.3999999999999, "text": " you add plus one to that.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 355, "seek": 120128, "start": 1218.3999999999999, "end": 1224.8799999999999, "text": " So you do list.helper rest of list and then in parens results so far plus one.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 356, "seek": 120128, "start": 1224.8799999999999, "end": 1225.8799999999999, "text": " Right.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 357, "seek": 120128, "start": 1225.8799999999999, "end": 1227.84, "text": " So you can do addition in the arguments.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 358, "seek": 120128, "start": 1227.84, "end": 1228.84, "text": " Yes.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 359, "seek": 120128, "start": 1228.84, "end": 1229.92, "text": " And that's not an issue.", "tokens": [50364, 1079, 13, 50414, 50414, 407, 291, 360, 257, 1389, 766, 295, 300, 1329, 13, 50526, 50526, 759, 309, 311, 6707, 11, 291, 2736, 264, 3542, 370, 1400, 13, 50664, 50664, 407, 264, 31346, 1874, 13, 50806, 50806, 400, 498, 309, 311, 406, 6707, 11, 550, 291, 818, 264, 2445, 2564, 365, 264, 1472, 11, 457, 264, 3542, 370, 1400, 11, 51170, 51170, 291, 909, 1804, 472, 281, 300, 13, 51220, 51220, 407, 291, 360, 1329, 13, 18063, 610, 1472, 295, 1329, 293, 550, 294, 7448, 3695, 3542, 370, 1400, 1804, 472, 13, 51544, 51544, 1779, 13, 51594, 51594, 407, 291, 393, 360, 4500, 294, 264, 12869, 13, 51692, 51692, 1079, 13, 51742, 51742, 400, 300, 311, 406, 364, 2734, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.14115691954089749, "compression_ratio": 1.8186046511627907, "no_caption_prob": 1.6964269889285788e-05}, {"id": 360, "seek": 122992, "start": 1229.92, "end": 1237.72, "text": " But if you turn the recursive function call expression into a plus expression, that deoptimizes", "tokens": [50364, 583, 498, 291, 1261, 264, 20560, 488, 2445, 818, 6114, 666, 257, 1804, 6114, 11, 300, 368, 5747, 332, 5660, 50754, 50754, 300, 1048, 27943, 13, 50838, 50838, 865, 13, 50888, 50888, 407, 341, 307, 257, 6457, 2199, 1365, 13, 51068, 51068, 4803, 309, 311, 257, 688, 544, 3997, 13, 51166, 51166, 1743, 498, 291, 643, 281, 360, 20560, 488, 485, 51366, 51366, 1743, 562, 291, 643, 281, 360, 20560, 488, 5821, 322, 257, 4230, 11, 411, 291, 643, 281, 818, 264, 20560, 488, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.16547229073264383, "compression_ratio": 1.7112299465240641, "no_caption_prob": 2.2124899260234088e-05}, {"id": 361, "seek": 122992, "start": 1237.72, "end": 1239.4, "text": " that invocation.", "tokens": [50364, 583, 498, 291, 1261, 264, 20560, 488, 2445, 818, 6114, 666, 257, 1804, 6114, 11, 300, 368, 5747, 332, 5660, 50754, 50754, 300, 1048, 27943, 13, 50838, 50838, 865, 13, 50888, 50888, 407, 341, 307, 257, 6457, 2199, 1365, 13, 51068, 51068, 4803, 309, 311, 257, 688, 544, 3997, 13, 51166, 51166, 1743, 498, 291, 643, 281, 360, 20560, 488, 485, 51366, 51366, 1743, 562, 291, 643, 281, 360, 20560, 488, 5821, 322, 257, 4230, 11, 411, 291, 643, 281, 818, 264, 20560, 488, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.16547229073264383, "compression_ratio": 1.7112299465240641, "no_caption_prob": 2.2124899260234088e-05}, {"id": 362, "seek": 122992, "start": 1239.4, "end": 1240.4, "text": " Yeah.", "tokens": [50364, 583, 498, 291, 1261, 264, 20560, 488, 2445, 818, 6114, 666, 257, 1804, 6114, 11, 300, 368, 5747, 332, 5660, 50754, 50754, 300, 1048, 27943, 13, 50838, 50838, 865, 13, 50888, 50888, 407, 341, 307, 257, 6457, 2199, 1365, 13, 51068, 51068, 4803, 309, 311, 257, 688, 544, 3997, 13, 51166, 51166, 1743, 498, 291, 643, 281, 360, 20560, 488, 485, 51366, 51366, 1743, 562, 291, 643, 281, 360, 20560, 488, 5821, 322, 257, 4230, 11, 411, 291, 643, 281, 818, 264, 20560, 488, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.16547229073264383, "compression_ratio": 1.7112299465240641, "no_caption_prob": 2.2124899260234088e-05}, {"id": 363, "seek": 122992, "start": 1240.4, "end": 1244.0, "text": " So this is a fairly simple example.", "tokens": [50364, 583, 498, 291, 1261, 264, 20560, 488, 2445, 818, 6114, 666, 257, 1804, 6114, 11, 300, 368, 5747, 332, 5660, 50754, 50754, 300, 1048, 27943, 13, 50838, 50838, 865, 13, 50888, 50888, 407, 341, 307, 257, 6457, 2199, 1365, 13, 51068, 51068, 4803, 309, 311, 257, 688, 544, 3997, 13, 51166, 51166, 1743, 498, 291, 643, 281, 360, 20560, 488, 485, 51366, 51366, 1743, 562, 291, 643, 281, 360, 20560, 488, 5821, 322, 257, 4230, 11, 411, 291, 643, 281, 818, 264, 20560, 488, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.16547229073264383, "compression_ratio": 1.7112299465240641, "no_caption_prob": 2.2124899260234088e-05}, {"id": 364, "seek": 122992, "start": 1244.0, "end": 1245.96, "text": " Sometimes it's a lot more complex.", "tokens": [50364, 583, 498, 291, 1261, 264, 20560, 488, 2445, 818, 6114, 666, 257, 1804, 6114, 11, 300, 368, 5747, 332, 5660, 50754, 50754, 300, 1048, 27943, 13, 50838, 50838, 865, 13, 50888, 50888, 407, 341, 307, 257, 6457, 2199, 1365, 13, 51068, 51068, 4803, 309, 311, 257, 688, 544, 3997, 13, 51166, 51166, 1743, 498, 291, 643, 281, 360, 20560, 488, 485, 51366, 51366, 1743, 562, 291, 643, 281, 360, 20560, 488, 5821, 322, 257, 4230, 11, 411, 291, 643, 281, 818, 264, 20560, 488, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.16547229073264383, "compression_ratio": 1.7112299465240641, "no_caption_prob": 2.2124899260234088e-05}, {"id": 365, "seek": 122992, "start": 1245.96, "end": 1249.96, "text": " Like if you need to do recursive...", "tokens": [50364, 583, 498, 291, 1261, 264, 20560, 488, 2445, 818, 6114, 666, 257, 1804, 6114, 11, 300, 368, 5747, 332, 5660, 50754, 50754, 300, 1048, 27943, 13, 50838, 50838, 865, 13, 50888, 50888, 407, 341, 307, 257, 6457, 2199, 1365, 13, 51068, 51068, 4803, 309, 311, 257, 688, 544, 3997, 13, 51166, 51166, 1743, 498, 291, 643, 281, 360, 20560, 488, 485, 51366, 51366, 1743, 562, 291, 643, 281, 360, 20560, 488, 5821, 322, 257, 4230, 11, 411, 291, 643, 281, 818, 264, 20560, 488, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.16547229073264383, "compression_ratio": 1.7112299465240641, "no_caption_prob": 2.2124899260234088e-05}, {"id": 366, "seek": 122992, "start": 1249.96, "end": 1257.38, "text": " Like when you need to do recursive applications on a tree, like you need to call the recursive", "tokens": [50364, 583, 498, 291, 1261, 264, 20560, 488, 2445, 818, 6114, 666, 257, 1804, 6114, 11, 300, 368, 5747, 332, 5660, 50754, 50754, 300, 1048, 27943, 13, 50838, 50838, 865, 13, 50888, 50888, 407, 341, 307, 257, 6457, 2199, 1365, 13, 51068, 51068, 4803, 309, 311, 257, 688, 544, 3997, 13, 51166, 51166, 1743, 498, 291, 643, 281, 360, 20560, 488, 485, 51366, 51366, 1743, 562, 291, 643, 281, 360, 20560, 488, 5821, 322, 257, 4230, 11, 411, 291, 643, 281, 818, 264, 20560, 488, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.16547229073264383, "compression_ratio": 1.7112299465240641, "no_caption_prob": 2.2124899260234088e-05}, {"id": 367, "seek": 125738, "start": 1257.38, "end": 1261.7600000000002, "text": " function for what's on the left of the tree and what's on the right of the tree.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 368, "seek": 125738, "start": 1261.7600000000002, "end": 1264.4, "text": " And then you need to combine them together.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 369, "seek": 125738, "start": 1264.4, "end": 1268.64, "text": " And that is by definition an operation you do on the result.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 370, "seek": 125738, "start": 1268.64, "end": 1269.72, "text": " So that doesn't work.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 371, "seek": 125738, "start": 1269.72, "end": 1274.88, "text": " So what you can do is one technique at least is to emulate a stack.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 372, "seek": 125738, "start": 1274.88, "end": 1279.4, "text": " So the stack of things that you still need to compute, you make that an argument.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 373, "seek": 125738, "start": 1279.4, "end": 1281.88, "text": " Just like the results so far we had before.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 374, "seek": 125738, "start": 1281.88, "end": 1283.48, "text": " You make the stack an argument.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 375, "seek": 125738, "start": 1283.48, "end": 1286.5800000000002, "text": " And maybe also the results so far as a second argument.", "tokens": [50364, 2445, 337, 437, 311, 322, 264, 1411, 295, 264, 4230, 293, 437, 311, 322, 264, 558, 295, 264, 4230, 13, 50583, 50583, 400, 550, 291, 643, 281, 10432, 552, 1214, 13, 50715, 50715, 400, 300, 307, 538, 7123, 364, 6916, 291, 360, 322, 264, 1874, 13, 50927, 50927, 407, 300, 1177, 380, 589, 13, 50981, 50981, 407, 437, 291, 393, 360, 307, 472, 6532, 412, 1935, 307, 281, 45497, 257, 8630, 13, 51239, 51239, 407, 264, 8630, 295, 721, 300, 291, 920, 643, 281, 14722, 11, 291, 652, 300, 364, 6770, 13, 51465, 51465, 1449, 411, 264, 3542, 370, 1400, 321, 632, 949, 13, 51589, 51589, 509, 652, 264, 8630, 364, 6770, 13, 51669, 51669, 400, 1310, 611, 264, 3542, 370, 1400, 382, 257, 1150, 6770, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12338584433985121, "compression_ratio": 1.948207171314741, "no_caption_prob": 1.2410728231770918e-05}, {"id": 376, "seek": 128658, "start": 1286.58, "end": 1289.72, "text": " It feels similar to doing a list fold a little bit.", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 377, "seek": 128658, "start": 1289.72, "end": 1294.24, "text": " That you have the accumulator and that has all the state that you need.", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 378, "seek": 128658, "start": 1294.24, "end": 1299.84, "text": " And list.fold is telecooptimized in that way.", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 379, "seek": 128658, "start": 1299.84, "end": 1305.72, "text": " The difference is that list.fold, you already know beforehand all the elements of the list", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 380, "seek": 128658, "start": 1305.72, "end": 1308.32, "text": " that you're looping over.", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 381, "seek": 128658, "start": 1308.32, "end": 1312.3999999999999, "text": " Which in recursive function, it might not be the case.", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 382, "seek": 128658, "start": 1312.3999999999999, "end": 1313.3999999999999, "text": " Yes.", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 383, "seek": 128658, "start": 1313.3999999999999, "end": 1314.3999999999999, "text": " Cool.", "tokens": [50364, 467, 3417, 2531, 281, 884, 257, 1329, 4860, 257, 707, 857, 13, 50521, 50521, 663, 291, 362, 264, 12989, 16381, 293, 300, 575, 439, 264, 1785, 300, 291, 643, 13, 50747, 50747, 400, 1329, 13, 18353, 307, 4304, 1291, 5747, 332, 1602, 294, 300, 636, 13, 51027, 51027, 440, 2649, 307, 300, 1329, 13, 18353, 11, 291, 1217, 458, 22893, 439, 264, 4959, 295, 264, 1329, 51321, 51321, 300, 291, 434, 6367, 278, 670, 13, 51451, 51451, 3013, 294, 20560, 488, 2445, 11, 309, 1062, 406, 312, 264, 1389, 13, 51655, 51655, 1079, 13, 51705, 51705, 8561, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.20656684800690295, "compression_ratio": 1.592760180995475, "no_caption_prob": 2.710846092668362e-05}, {"id": 384, "seek": 131440, "start": 1314.4, "end": 1321.64, "text": " And I think that's a good thing to know when you're writing Elm code.", "tokens": [50364, 400, 286, 519, 300, 311, 257, 665, 551, 281, 458, 562, 291, 434, 3579, 2699, 76, 3089, 13, 50726, 50726, 286, 2729, 452, 45332, 466, 577, 291, 820, 18927, 949, 291, 6552, 746, 307, 257, 1154, 13, 51050, 51050, 400, 281, 385, 11, 264, 636, 286, 519, 466, 341, 1507, 307, 291, 528, 281, 312, 3650, 295, 382, 867, 295, 613, 51384, 51384, 7527, 295, 721, 382, 1944, 13, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.14582409270822186, "compression_ratio": 1.5054945054945055, "no_caption_prob": 0.00010070800635730848}, {"id": 385, "seek": 131440, "start": 1321.64, "end": 1328.1200000000001, "text": " I gave my rant about how you should benchmark before you assume something is a problem.", "tokens": [50364, 400, 286, 519, 300, 311, 257, 665, 551, 281, 458, 562, 291, 434, 3579, 2699, 76, 3089, 13, 50726, 50726, 286, 2729, 452, 45332, 466, 577, 291, 820, 18927, 949, 291, 6552, 746, 307, 257, 1154, 13, 51050, 51050, 400, 281, 385, 11, 264, 636, 286, 519, 466, 341, 1507, 307, 291, 528, 281, 312, 3650, 295, 382, 867, 295, 613, 51384, 51384, 7527, 295, 721, 382, 1944, 13, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.14582409270822186, "compression_ratio": 1.5054945054945055, "no_caption_prob": 0.00010070800635730848}, {"id": 386, "seek": 131440, "start": 1328.1200000000001, "end": 1334.8000000000002, "text": " And to me, the way I think about this stuff is you want to be aware of as many of these", "tokens": [50364, 400, 286, 519, 300, 311, 257, 665, 551, 281, 458, 562, 291, 434, 3579, 2699, 76, 3089, 13, 50726, 50726, 286, 2729, 452, 45332, 466, 577, 291, 820, 18927, 949, 291, 6552, 746, 307, 257, 1154, 13, 51050, 51050, 400, 281, 385, 11, 264, 636, 286, 519, 466, 341, 1507, 307, 291, 528, 281, 312, 3650, 295, 382, 867, 295, 613, 51384, 51384, 7527, 295, 721, 382, 1944, 13, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.14582409270822186, "compression_ratio": 1.5054945054945055, "no_caption_prob": 0.00010070800635730848}, {"id": 387, "seek": 131440, "start": 1334.8000000000002, "end": 1336.88, "text": " sorts of things as possible.", "tokens": [50364, 400, 286, 519, 300, 311, 257, 665, 551, 281, 458, 562, 291, 434, 3579, 2699, 76, 3089, 13, 50726, 50726, 286, 2729, 452, 45332, 466, 577, 291, 820, 18927, 949, 291, 6552, 746, 307, 257, 1154, 13, 51050, 51050, 400, 281, 385, 11, 264, 636, 286, 519, 466, 341, 1507, 307, 291, 528, 281, 312, 3650, 295, 382, 867, 295, 613, 51384, 51384, 7527, 295, 721, 382, 1944, 13, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.14582409270822186, "compression_ratio": 1.5054945054945055, "no_caption_prob": 0.00010070800635730848}, {"id": 388, "seek": 133688, "start": 1336.88, "end": 1345.16, "text": " So that when you need to improve performance, when you know that there's a bottleneck somewhere,", "tokens": [50364, 407, 300, 562, 291, 643, 281, 3470, 3389, 11, 562, 291, 458, 300, 456, 311, 257, 44641, 547, 4079, 11, 50778, 50778, 291, 458, 437, 281, 574, 337, 13, 50860, 50860, 1171, 4786, 337, 437, 281, 19719, 13, 50992, 50992, 407, 291, 393, 574, 412, 746, 293, 291, 4325, 291, 362, 341, 13490, 666, 428, 3567, 300, 51302, 51302, 498, 291, 360, 20560, 488, 818, 1804, 20560, 488, 818, 11, 1954, 11, 300, 311, 406, 4304, 1291, 5747, 332, 1602, 13, 51606, 51606, 1449, 1419, 613, 8294, 293, 885, 3650, 295, 552, 307, 588, 4961, 11, 286, 519, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14147281646728516, "compression_ratio": 1.6945606694560669, "no_caption_prob": 2.1111722162459046e-05}, {"id": 389, "seek": 133688, "start": 1345.16, "end": 1346.8000000000002, "text": " you know what to look for.", "tokens": [50364, 407, 300, 562, 291, 643, 281, 3470, 3389, 11, 562, 291, 458, 300, 456, 311, 257, 44641, 547, 4079, 11, 50778, 50778, 291, 458, 437, 281, 574, 337, 13, 50860, 50860, 1171, 4786, 337, 437, 281, 19719, 13, 50992, 50992, 407, 291, 393, 574, 412, 746, 293, 291, 4325, 291, 362, 341, 13490, 666, 428, 3567, 300, 51302, 51302, 498, 291, 360, 20560, 488, 818, 1804, 20560, 488, 818, 11, 1954, 11, 300, 311, 406, 4304, 1291, 5747, 332, 1602, 13, 51606, 51606, 1449, 1419, 613, 8294, 293, 885, 3650, 295, 552, 307, 588, 4961, 11, 286, 519, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14147281646728516, "compression_ratio": 1.6945606694560669, "no_caption_prob": 2.1111722162459046e-05}, {"id": 390, "seek": 133688, "start": 1346.8000000000002, "end": 1349.44, "text": " For opportunities for what to optimize.", "tokens": [50364, 407, 300, 562, 291, 643, 281, 3470, 3389, 11, 562, 291, 458, 300, 456, 311, 257, 44641, 547, 4079, 11, 50778, 50778, 291, 458, 437, 281, 574, 337, 13, 50860, 50860, 1171, 4786, 337, 437, 281, 19719, 13, 50992, 50992, 407, 291, 393, 574, 412, 746, 293, 291, 4325, 291, 362, 341, 13490, 666, 428, 3567, 300, 51302, 51302, 498, 291, 360, 20560, 488, 818, 1804, 20560, 488, 818, 11, 1954, 11, 300, 311, 406, 4304, 1291, 5747, 332, 1602, 13, 51606, 51606, 1449, 1419, 613, 8294, 293, 885, 3650, 295, 552, 307, 588, 4961, 11, 286, 519, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14147281646728516, "compression_ratio": 1.6945606694560669, "no_caption_prob": 2.1111722162459046e-05}, {"id": 391, "seek": 133688, "start": 1349.44, "end": 1355.64, "text": " So you can look at something and you realize you have this burned into your brain that", "tokens": [50364, 407, 300, 562, 291, 643, 281, 3470, 3389, 11, 562, 291, 458, 300, 456, 311, 257, 44641, 547, 4079, 11, 50778, 50778, 291, 458, 437, 281, 574, 337, 13, 50860, 50860, 1171, 4786, 337, 437, 281, 19719, 13, 50992, 50992, 407, 291, 393, 574, 412, 746, 293, 291, 4325, 291, 362, 341, 13490, 666, 428, 3567, 300, 51302, 51302, 498, 291, 360, 20560, 488, 818, 1804, 20560, 488, 818, 11, 1954, 11, 300, 311, 406, 4304, 1291, 5747, 332, 1602, 13, 51606, 51606, 1449, 1419, 613, 8294, 293, 885, 3650, 295, 552, 307, 588, 4961, 11, 286, 519, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14147281646728516, "compression_ratio": 1.6945606694560669, "no_caption_prob": 2.1111722162459046e-05}, {"id": 392, "seek": 133688, "start": 1355.64, "end": 1361.72, "text": " if you do recursive call plus recursive call, oh, that's not telecooptimized.", "tokens": [50364, 407, 300, 562, 291, 643, 281, 3470, 3389, 11, 562, 291, 458, 300, 456, 311, 257, 44641, 547, 4079, 11, 50778, 50778, 291, 458, 437, 281, 574, 337, 13, 50860, 50860, 1171, 4786, 337, 437, 281, 19719, 13, 50992, 50992, 407, 291, 393, 574, 412, 746, 293, 291, 4325, 291, 362, 341, 13490, 666, 428, 3567, 300, 51302, 51302, 498, 291, 360, 20560, 488, 818, 1804, 20560, 488, 818, 11, 1954, 11, 300, 311, 406, 4304, 1291, 5747, 332, 1602, 13, 51606, 51606, 1449, 1419, 613, 8294, 293, 885, 3650, 295, 552, 307, 588, 4961, 11, 286, 519, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14147281646728516, "compression_ratio": 1.6945606694560669, "no_caption_prob": 2.1111722162459046e-05}, {"id": 393, "seek": 133688, "start": 1361.72, "end": 1366.2800000000002, "text": " Just having these patterns and being aware of them is very helpful, I think.", "tokens": [50364, 407, 300, 562, 291, 643, 281, 3470, 3389, 11, 562, 291, 458, 300, 456, 311, 257, 44641, 547, 4079, 11, 50778, 50778, 291, 458, 437, 281, 574, 337, 13, 50860, 50860, 1171, 4786, 337, 437, 281, 19719, 13, 50992, 50992, 407, 291, 393, 574, 412, 746, 293, 291, 4325, 291, 362, 341, 13490, 666, 428, 3567, 300, 51302, 51302, 498, 291, 360, 20560, 488, 818, 1804, 20560, 488, 818, 11, 1954, 11, 300, 311, 406, 4304, 1291, 5747, 332, 1602, 13, 51606, 51606, 1449, 1419, 613, 8294, 293, 885, 3650, 295, 552, 307, 588, 4961, 11, 286, 519, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14147281646728516, "compression_ratio": 1.6945606694560669, "no_caption_prob": 2.1111722162459046e-05}, {"id": 394, "seek": 136628, "start": 1366.28, "end": 1370.84, "text": " Julia still writes it, like you just said.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 395, "seek": 136628, "start": 1370.84, "end": 1373.12, "text": " Recursive call plus recursive call.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 396, "seek": 136628, "start": 1373.12, "end": 1375.24, "text": " And that's fine.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 397, "seek": 136628, "start": 1375.24, "end": 1376.24, "text": " In most cases.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 398, "seek": 136628, "start": 1376.24, "end": 1380.92, "text": " And then when you really want to optimize, that's when you transform it in a way that", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 399, "seek": 136628, "start": 1380.92, "end": 1382.6, "text": " is better for performance.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 400, "seek": 136628, "start": 1382.6, "end": 1384.44, "text": " But you need to benchmark it.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 401, "seek": 136628, "start": 1384.44, "end": 1388.68, "text": " I'm actually very bad at doing that.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 402, "seek": 136628, "start": 1388.68, "end": 1389.68, "text": " It's not easy.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 403, "seek": 136628, "start": 1389.68, "end": 1390.68, "text": " Yeah.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 404, "seek": 136628, "start": 1390.68, "end": 1394.06, "text": " For this one, I would be like, I'm not sure it's going to help performance.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 405, "seek": 136628, "start": 1394.06, "end": 1395.8, "text": " But I do care about stack safety.", "tokens": [50364, 18551, 920, 13657, 309, 11, 411, 291, 445, 848, 13, 50592, 50592, 9647, 2156, 488, 818, 1804, 20560, 488, 818, 13, 50706, 50706, 400, 300, 311, 2489, 13, 50812, 50812, 682, 881, 3331, 13, 50862, 50862, 400, 550, 562, 291, 534, 528, 281, 19719, 11, 300, 311, 562, 291, 4088, 309, 294, 257, 636, 300, 51096, 51096, 307, 1101, 337, 3389, 13, 51180, 51180, 583, 291, 643, 281, 18927, 309, 13, 51272, 51272, 286, 478, 767, 588, 1578, 412, 884, 300, 13, 51484, 51484, 467, 311, 406, 1858, 13, 51534, 51534, 865, 13, 51584, 51584, 1171, 341, 472, 11, 286, 576, 312, 411, 11, 286, 478, 406, 988, 309, 311, 516, 281, 854, 3389, 13, 51753, 51753, 583, 286, 360, 1127, 466, 8630, 4514, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.21989310804263565, "compression_ratio": 1.6381322957198443, "no_caption_prob": 3.219125574105419e-05}, {"id": 406, "seek": 139580, "start": 1395.8, "end": 1397.68, "text": " So that's something already.", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 407, "seek": 139580, "start": 1397.68, "end": 1398.68, "text": " Right.", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 408, "seek": 139580, "start": 1398.68, "end": 1403.36, "text": " So we should, we should talk about ways to benchmark in Elm.", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 409, "seek": 139580, "start": 1403.36, "end": 1408.8799999999999, "text": " So one of one of my favorite ways to benchmark is just to run Lighthouse.", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 410, "seek": 139580, "start": 1408.8799999999999, "end": 1410.36, "text": " Well that's true too.", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 411, "seek": 139580, "start": 1410.36, "end": 1416.44, "text": " I mean, to a certain extent, like, so I think we shouldn't assume that performance is a", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 412, "seek": 139580, "start": 1416.44, "end": 1419.56, "text": " problem unless we benchmark and see it is.", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 413, "seek": 139580, "start": 1419.56, "end": 1424.24, "text": " But we shouldn't assume that performance is good without benchmarking it either.", "tokens": [50364, 407, 300, 311, 746, 1217, 13, 50458, 50458, 1779, 13, 50508, 50508, 407, 321, 820, 11, 321, 820, 751, 466, 2098, 281, 18927, 294, 2699, 76, 13, 50742, 50742, 407, 472, 295, 472, 295, 452, 2954, 2098, 281, 18927, 307, 445, 281, 1190, 8279, 6410, 13, 51018, 51018, 1042, 300, 311, 2074, 886, 13, 51092, 51092, 286, 914, 11, 281, 257, 1629, 8396, 11, 411, 11, 370, 286, 519, 321, 4659, 380, 6552, 300, 3389, 307, 257, 51396, 51396, 1154, 5969, 321, 18927, 293, 536, 309, 307, 13, 51552, 51552, 583, 321, 4659, 380, 6552, 300, 3389, 307, 665, 1553, 18927, 278, 309, 2139, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.16120845899669403, "compression_ratio": 1.7876106194690264, "no_caption_prob": 1.3287713045428973e-06}, {"id": 414, "seek": 142424, "start": 1424.24, "end": 1430.22, "text": " For example, most of us are going to be using high powered machines that are more powerful", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 415, "seek": 142424, "start": 1430.22, "end": 1432.74, "text": " than most users are used to.", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 416, "seek": 142424, "start": 1432.74, "end": 1436.1200000000001, "text": " Maybe internet connections that are more powerful than most users are using.", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 417, "seek": 142424, "start": 1436.1200000000001, "end": 1440.78, "text": " You know, a lot of users are going to be accessing our sites on mobile devices, which have far", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 418, "seek": 142424, "start": 1440.78, "end": 1442.48, "text": " slower internet connections.", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 419, "seek": 142424, "start": 1442.48, "end": 1445.96, "text": " They don't have 32 gigabytes of RAM.", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 420, "seek": 142424, "start": 1445.96, "end": 1449.72, "text": " They don't have 32 gigabytes of RAM and 32 cores on their machine.", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 421, "seek": 142424, "start": 1449.72, "end": 1451.64, "text": " So wait, you have 32 cores?", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 422, "seek": 142424, "start": 1451.64, "end": 1453.48, "text": " No, I don't have 32 cores.", "tokens": [50364, 1171, 1365, 11, 881, 295, 505, 366, 516, 281, 312, 1228, 1090, 17786, 8379, 300, 366, 544, 4005, 50663, 50663, 813, 881, 5022, 366, 1143, 281, 13, 50789, 50789, 2704, 4705, 9271, 300, 366, 544, 4005, 813, 881, 5022, 366, 1228, 13, 50958, 50958, 509, 458, 11, 257, 688, 295, 5022, 366, 516, 281, 312, 26440, 527, 7533, 322, 6013, 5759, 11, 597, 362, 1400, 51191, 51191, 14009, 4705, 9271, 13, 51276, 51276, 814, 500, 380, 362, 8858, 42741, 295, 14561, 13, 51450, 51450, 814, 500, 380, 362, 8858, 42741, 295, 14561, 293, 8858, 24826, 322, 641, 3479, 13, 51638, 51638, 407, 1699, 11, 291, 362, 8858, 24826, 30, 51734, 51734, 883, 11, 286, 500, 380, 362, 8858, 24826, 13, 51826, 51826], "temperature": 0.0, "avg_logprob": -0.15703273588611233, "compression_ratio": 1.9793388429752066, "no_caption_prob": 7.646450285392348e-06}, {"id": 423, "seek": 145348, "start": 1453.48, "end": 1455.68, "text": " I wish.", "tokens": [50364, 286, 3172, 13, 50474, 50474, 583, 436, 11, 309, 2516, 257, 688, 544, 281, 754, 445, 411, 1190, 15778, 412, 439, 293, 291, 458, 11, 360, 50886, 50886, 264, 1190, 264, 445, 294, 565, 40261, 293, 439, 295, 613, 10247, 721, 300, 321, 434, 2614, 13, 51102, 51102, 407, 2614, 8279, 6410, 393, 976, 291, 257, 707, 857, 295, 257, 13602, 570, 309, 486, 24235, 11, 291, 51356, 51356, 458, 11, 309, 603, 27817, 739, 1521, 1688, 264, 3209, 281, 27817, 1228, 257, 6013, 4302, 293, 27817, 11, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.1426309813623843, "compression_ratio": 1.6261261261261262, "no_caption_prob": 5.173837962502148e-06}, {"id": 424, "seek": 145348, "start": 1455.68, "end": 1463.92, "text": " But they, it takes a lot more to even just like run JavaScript at all and you know, do", "tokens": [50364, 286, 3172, 13, 50474, 50474, 583, 436, 11, 309, 2516, 257, 688, 544, 281, 754, 445, 411, 1190, 15778, 412, 439, 293, 291, 458, 11, 360, 50886, 50886, 264, 1190, 264, 445, 294, 565, 40261, 293, 439, 295, 613, 10247, 721, 300, 321, 434, 2614, 13, 51102, 51102, 407, 2614, 8279, 6410, 393, 976, 291, 257, 707, 857, 295, 257, 13602, 570, 309, 486, 24235, 11, 291, 51356, 51356, 458, 11, 309, 603, 27817, 739, 1521, 1688, 264, 3209, 281, 27817, 1228, 257, 6013, 4302, 293, 27817, 11, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.1426309813623843, "compression_ratio": 1.6261261261261262, "no_caption_prob": 5.173837962502148e-06}, {"id": 425, "seek": 145348, "start": 1463.92, "end": 1468.24, "text": " the run the just in time compilation and all of these fancy things that we're running.", "tokens": [50364, 286, 3172, 13, 50474, 50474, 583, 436, 11, 309, 2516, 257, 688, 544, 281, 754, 445, 411, 1190, 15778, 412, 439, 293, 291, 458, 11, 360, 50886, 50886, 264, 1190, 264, 445, 294, 565, 40261, 293, 439, 295, 613, 10247, 721, 300, 321, 434, 2614, 13, 51102, 51102, 407, 2614, 8279, 6410, 393, 976, 291, 257, 707, 857, 295, 257, 13602, 570, 309, 486, 24235, 11, 291, 51356, 51356, 458, 11, 309, 603, 27817, 739, 1521, 1688, 264, 3209, 281, 27817, 1228, 257, 6013, 4302, 293, 27817, 11, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.1426309813623843, "compression_ratio": 1.6261261261261262, "no_caption_prob": 5.173837962502148e-06}, {"id": 426, "seek": 145348, "start": 1468.24, "end": 1473.32, "text": " So running Lighthouse can give you a little bit of a clue because it will throttle, you", "tokens": [50364, 286, 3172, 13, 50474, 50474, 583, 436, 11, 309, 2516, 257, 688, 544, 281, 754, 445, 411, 1190, 15778, 412, 439, 293, 291, 458, 11, 360, 50886, 50886, 264, 1190, 264, 445, 294, 565, 40261, 293, 439, 295, 613, 10247, 721, 300, 321, 434, 2614, 13, 51102, 51102, 407, 2614, 8279, 6410, 393, 976, 291, 257, 707, 857, 295, 257, 13602, 570, 309, 486, 24235, 11, 291, 51356, 51356, 458, 11, 309, 603, 27817, 739, 1521, 1688, 264, 3209, 281, 27817, 1228, 257, 6013, 4302, 293, 27817, 11, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.1426309813623843, "compression_ratio": 1.6261261261261262, "no_caption_prob": 5.173837962502148e-06}, {"id": 427, "seek": 145348, "start": 1473.32, "end": 1479.76, "text": " know, it'll simulate throttling the network to simulate using a mobile device and simulate,", "tokens": [50364, 286, 3172, 13, 50474, 50474, 583, 436, 11, 309, 2516, 257, 688, 544, 281, 754, 445, 411, 1190, 15778, 412, 439, 293, 291, 458, 11, 360, 50886, 50886, 264, 1190, 264, 445, 294, 565, 40261, 293, 439, 295, 613, 10247, 721, 300, 321, 434, 2614, 13, 51102, 51102, 407, 2614, 8279, 6410, 393, 976, 291, 257, 707, 857, 295, 257, 13602, 570, 309, 486, 24235, 11, 291, 51356, 51356, 458, 11, 309, 603, 27817, 739, 1521, 1688, 264, 3209, 281, 27817, 1228, 257, 6013, 4302, 293, 27817, 11, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.1426309813623843, "compression_ratio": 1.6261261261261262, "no_caption_prob": 5.173837962502148e-06}, {"id": 428, "seek": 147976, "start": 1479.76, "end": 1484.04, "text": " I think it simulates like degrading performance for the mobile Lighthouse.", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 429, "seek": 147976, "start": 1484.04, "end": 1486.84, "text": " Yeah, I think as well the CPU, I think so.", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 430, "seek": 147976, "start": 1486.84, "end": 1487.84, "text": " Yeah.", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 431, "seek": 147976, "start": 1487.84, "end": 1489.8799999999999, "text": " Which I have no clue how they do that.", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 432, "seek": 147976, "start": 1489.8799999999999, "end": 1491.8, "text": " Yeah, I know.", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 433, "seek": 147976, "start": 1491.8, "end": 1495.56, "text": " Just put a sleep between each instruction.", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 434, "seek": 147976, "start": 1495.56, "end": 1501.84, "text": " You know, I mean, so much effort has gone into these tools, you know, both for like", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 435, "seek": 147976, "start": 1501.84, "end": 1508.0, "text": " benchmarking and discovering performance issues and for avoiding them with these like very", "tokens": [50364, 286, 519, 309, 1034, 26192, 411, 24740, 278, 3389, 337, 264, 6013, 8279, 6410, 13, 50578, 50578, 865, 11, 286, 519, 382, 731, 264, 13199, 11, 286, 519, 370, 13, 50718, 50718, 865, 13, 50768, 50768, 3013, 286, 362, 572, 13602, 577, 436, 360, 300, 13, 50870, 50870, 865, 11, 286, 458, 13, 50966, 50966, 1449, 829, 257, 2817, 1296, 1184, 10951, 13, 51154, 51154, 509, 458, 11, 286, 914, 11, 370, 709, 4630, 575, 2780, 666, 613, 3873, 11, 291, 458, 11, 1293, 337, 411, 51468, 51468, 18927, 278, 293, 24773, 3389, 2663, 293, 337, 20220, 552, 365, 613, 411, 588, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1982344501423386, "compression_ratio": 1.6348547717842323, "no_caption_prob": 2.2124373572296463e-05}, {"id": 436, "seek": 150800, "start": 1508.0, "end": 1512.6, "text": " sophisticated optimizations in like these JavaScript engines.", "tokens": [50364, 16950, 5028, 14455, 294, 411, 613, 15778, 12982, 13, 50594, 50594, 583, 309, 311, 534, 3163, 1228, 8279, 6410, 293, 291, 458, 11, 264, 15327, 3389, 4421, 281, 12477, 50990, 50990, 613, 721, 13, 51040, 51040, 407, 300, 311, 534, 4961, 13, 51172, 51172, 26093, 411, 2235, 493, 264, 3389, 4421, 13, 51354, 51354, 509, 393, 2045, 264, 2136, 2960, 293, 445, 1190, 512, 15778, 3089, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.174858120125784, "compression_ratio": 1.5175879396984924, "no_caption_prob": 3.024064062628895e-05}, {"id": 437, "seek": 150800, "start": 1512.6, "end": 1520.52, "text": " But it's really worth using Lighthouse and you know, the Chrome performance tab to analyze", "tokens": [50364, 16950, 5028, 14455, 294, 411, 613, 15778, 12982, 13, 50594, 50594, 583, 309, 311, 534, 3163, 1228, 8279, 6410, 293, 291, 458, 11, 264, 15327, 3389, 4421, 281, 12477, 50990, 50990, 613, 721, 13, 51040, 51040, 407, 300, 311, 534, 4961, 13, 51172, 51172, 26093, 411, 2235, 493, 264, 3389, 4421, 13, 51354, 51354, 509, 393, 2045, 264, 2136, 2960, 293, 445, 1190, 512, 15778, 3089, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.174858120125784, "compression_ratio": 1.5175879396984924, "no_caption_prob": 3.024064062628895e-05}, {"id": 438, "seek": 150800, "start": 1520.52, "end": 1521.52, "text": " these things.", "tokens": [50364, 16950, 5028, 14455, 294, 411, 613, 15778, 12982, 13, 50594, 50594, 583, 309, 311, 534, 3163, 1228, 8279, 6410, 293, 291, 458, 11, 264, 15327, 3389, 4421, 281, 12477, 50990, 50990, 613, 721, 13, 51040, 51040, 407, 300, 311, 534, 4961, 13, 51172, 51172, 26093, 411, 2235, 493, 264, 3389, 4421, 13, 51354, 51354, 509, 393, 2045, 264, 2136, 2960, 293, 445, 1190, 512, 15778, 3089, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.174858120125784, "compression_ratio": 1.5175879396984924, "no_caption_prob": 3.024064062628895e-05}, {"id": 439, "seek": 150800, "start": 1521.52, "end": 1524.16, "text": " So that's really helpful.", "tokens": [50364, 16950, 5028, 14455, 294, 411, 613, 15778, 12982, 13, 50594, 50594, 583, 309, 311, 534, 3163, 1228, 8279, 6410, 293, 291, 458, 11, 264, 15327, 3389, 4421, 281, 12477, 50990, 50990, 613, 721, 13, 51040, 51040, 407, 300, 311, 534, 4961, 13, 51172, 51172, 26093, 411, 2235, 493, 264, 3389, 4421, 13, 51354, 51354, 509, 393, 2045, 264, 2136, 2960, 293, 445, 1190, 512, 15778, 3089, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.174858120125784, "compression_ratio": 1.5175879396984924, "no_caption_prob": 3.024064062628895e-05}, {"id": 440, "seek": 150800, "start": 1524.16, "end": 1527.8, "text": " Understand like pull up the performance tab.", "tokens": [50364, 16950, 5028, 14455, 294, 411, 613, 15778, 12982, 13, 50594, 50594, 583, 309, 311, 534, 3163, 1228, 8279, 6410, 293, 291, 458, 11, 264, 15327, 3389, 4421, 281, 12477, 50990, 50990, 613, 721, 13, 51040, 51040, 407, 300, 311, 534, 4961, 13, 51172, 51172, 26093, 411, 2235, 493, 264, 3389, 4421, 13, 51354, 51354, 509, 393, 2045, 264, 2136, 2960, 293, 445, 1190, 512, 15778, 3089, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.174858120125784, "compression_ratio": 1.5175879396984924, "no_caption_prob": 3.024064062628895e-05}, {"id": 441, "seek": 150800, "start": 1527.8, "end": 1532.88, "text": " You can hit the record button and just run some JavaScript code.", "tokens": [50364, 16950, 5028, 14455, 294, 411, 613, 15778, 12982, 13, 50594, 50594, 583, 309, 311, 534, 3163, 1228, 8279, 6410, 293, 291, 458, 11, 264, 15327, 3389, 4421, 281, 12477, 50990, 50990, 613, 721, 13, 51040, 51040, 407, 300, 311, 534, 4961, 13, 51172, 51172, 26093, 411, 2235, 493, 264, 3389, 4421, 13, 51354, 51354, 509, 393, 2045, 264, 2136, 2960, 293, 445, 1190, 512, 15778, 3089, 13, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.174858120125784, "compression_ratio": 1.5175879396984924, "no_caption_prob": 3.024064062628895e-05}, {"id": 442, "seek": 153288, "start": 1532.88, "end": 1538.3200000000002, "text": " If there's something that you suspect might be slow, then you can hit the record button,", "tokens": [50364, 759, 456, 311, 746, 300, 291, 9091, 1062, 312, 2964, 11, 550, 291, 393, 2045, 264, 2136, 2960, 11, 50636, 50636, 360, 300, 2964, 6916, 293, 550, 2045, 264, 1590, 2960, 13, 50780, 50780, 400, 550, 291, 393, 536, 341, 411, 2767, 493, 1910, 293, 291, 434, 1391, 516, 281, 915, 257, 1326, 49857, 51036, 51036, 2699, 76, 2445, 5288, 300, 486, 935, 291, 281, 512, 295, 428, 44641, 2761, 294, 3389, 13, 51314, 51314, 865, 13, 51364, 51364, 407, 360, 291, 362, 604, 665, 3593, 322, 577, 281, 764, 300, 3389, 4421, 30, 51564, 51564, 1436, 309, 307, 257, 588, 1481, 2290, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12614806493123373, "compression_ratio": 1.6745098039215687, "no_caption_prob": 1.384540883009322e-05}, {"id": 443, "seek": 153288, "start": 1538.3200000000002, "end": 1541.2, "text": " do that slow operation and then hit the stop button.", "tokens": [50364, 759, 456, 311, 746, 300, 291, 9091, 1062, 312, 2964, 11, 550, 291, 393, 2045, 264, 2136, 2960, 11, 50636, 50636, 360, 300, 2964, 6916, 293, 550, 2045, 264, 1590, 2960, 13, 50780, 50780, 400, 550, 291, 393, 536, 341, 411, 2767, 493, 1910, 293, 291, 434, 1391, 516, 281, 915, 257, 1326, 49857, 51036, 51036, 2699, 76, 2445, 5288, 300, 486, 935, 291, 281, 512, 295, 428, 44641, 2761, 294, 3389, 13, 51314, 51314, 865, 13, 51364, 51364, 407, 360, 291, 362, 604, 665, 3593, 322, 577, 281, 764, 300, 3389, 4421, 30, 51564, 51564, 1436, 309, 307, 257, 588, 1481, 2290, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12614806493123373, "compression_ratio": 1.6745098039215687, "no_caption_prob": 1.384540883009322e-05}, {"id": 444, "seek": 153288, "start": 1541.2, "end": 1546.3200000000002, "text": " And then you can see this like bottom up view and you're probably going to find a few readable", "tokens": [50364, 759, 456, 311, 746, 300, 291, 9091, 1062, 312, 2964, 11, 550, 291, 393, 2045, 264, 2136, 2960, 11, 50636, 50636, 360, 300, 2964, 6916, 293, 550, 2045, 264, 1590, 2960, 13, 50780, 50780, 400, 550, 291, 393, 536, 341, 411, 2767, 493, 1910, 293, 291, 434, 1391, 516, 281, 915, 257, 1326, 49857, 51036, 51036, 2699, 76, 2445, 5288, 300, 486, 935, 291, 281, 512, 295, 428, 44641, 2761, 294, 3389, 13, 51314, 51314, 865, 13, 51364, 51364, 407, 360, 291, 362, 604, 665, 3593, 322, 577, 281, 764, 300, 3389, 4421, 30, 51564, 51564, 1436, 309, 307, 257, 588, 1481, 2290, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12614806493123373, "compression_ratio": 1.6745098039215687, "no_caption_prob": 1.384540883009322e-05}, {"id": 445, "seek": 153288, "start": 1546.3200000000002, "end": 1551.88, "text": " Elm function names that will point you to some of your bottlenecks in performance.", "tokens": [50364, 759, 456, 311, 746, 300, 291, 9091, 1062, 312, 2964, 11, 550, 291, 393, 2045, 264, 2136, 2960, 11, 50636, 50636, 360, 300, 2964, 6916, 293, 550, 2045, 264, 1590, 2960, 13, 50780, 50780, 400, 550, 291, 393, 536, 341, 411, 2767, 493, 1910, 293, 291, 434, 1391, 516, 281, 915, 257, 1326, 49857, 51036, 51036, 2699, 76, 2445, 5288, 300, 486, 935, 291, 281, 512, 295, 428, 44641, 2761, 294, 3389, 13, 51314, 51314, 865, 13, 51364, 51364, 407, 360, 291, 362, 604, 665, 3593, 322, 577, 281, 764, 300, 3389, 4421, 30, 51564, 51564, 1436, 309, 307, 257, 588, 1481, 2290, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12614806493123373, "compression_ratio": 1.6745098039215687, "no_caption_prob": 1.384540883009322e-05}, {"id": 446, "seek": 153288, "start": 1551.88, "end": 1552.88, "text": " Yeah.", "tokens": [50364, 759, 456, 311, 746, 300, 291, 9091, 1062, 312, 2964, 11, 550, 291, 393, 2045, 264, 2136, 2960, 11, 50636, 50636, 360, 300, 2964, 6916, 293, 550, 2045, 264, 1590, 2960, 13, 50780, 50780, 400, 550, 291, 393, 536, 341, 411, 2767, 493, 1910, 293, 291, 434, 1391, 516, 281, 915, 257, 1326, 49857, 51036, 51036, 2699, 76, 2445, 5288, 300, 486, 935, 291, 281, 512, 295, 428, 44641, 2761, 294, 3389, 13, 51314, 51314, 865, 13, 51364, 51364, 407, 360, 291, 362, 604, 665, 3593, 322, 577, 281, 764, 300, 3389, 4421, 30, 51564, 51564, 1436, 309, 307, 257, 588, 1481, 2290, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12614806493123373, "compression_ratio": 1.6745098039215687, "no_caption_prob": 1.384540883009322e-05}, {"id": 447, "seek": 153288, "start": 1552.88, "end": 1556.88, "text": " So do you have any good resources on how to use that performance tab?", "tokens": [50364, 759, 456, 311, 746, 300, 291, 9091, 1062, 312, 2964, 11, 550, 291, 393, 2045, 264, 2136, 2960, 11, 50636, 50636, 360, 300, 2964, 6916, 293, 550, 2045, 264, 1590, 2960, 13, 50780, 50780, 400, 550, 291, 393, 536, 341, 411, 2767, 493, 1910, 293, 291, 434, 1391, 516, 281, 915, 257, 1326, 49857, 51036, 51036, 2699, 76, 2445, 5288, 300, 486, 935, 291, 281, 512, 295, 428, 44641, 2761, 294, 3389, 13, 51314, 51314, 865, 13, 51364, 51364, 407, 360, 291, 362, 604, 665, 3593, 322, 577, 281, 764, 300, 3389, 4421, 30, 51564, 51564, 1436, 309, 307, 257, 588, 1481, 2290, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12614806493123373, "compression_ratio": 1.6745098039215687, "no_caption_prob": 1.384540883009322e-05}, {"id": 448, "seek": 153288, "start": 1556.88, "end": 1560.0800000000002, "text": " Because it is a very nice tool.", "tokens": [50364, 759, 456, 311, 746, 300, 291, 9091, 1062, 312, 2964, 11, 550, 291, 393, 2045, 264, 2136, 2960, 11, 50636, 50636, 360, 300, 2964, 6916, 293, 550, 2045, 264, 1590, 2960, 13, 50780, 50780, 400, 550, 291, 393, 536, 341, 411, 2767, 493, 1910, 293, 291, 434, 1391, 516, 281, 915, 257, 1326, 49857, 51036, 51036, 2699, 76, 2445, 5288, 300, 486, 935, 291, 281, 512, 295, 428, 44641, 2761, 294, 3389, 13, 51314, 51314, 865, 13, 51364, 51364, 407, 360, 291, 362, 604, 665, 3593, 322, 577, 281, 764, 300, 3389, 4421, 30, 51564, 51564, 1436, 309, 307, 257, 588, 1481, 2290, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.12614806493123373, "compression_ratio": 1.6745098039215687, "no_caption_prob": 1.384540883009322e-05}, {"id": 449, "seek": 156008, "start": 1560.08, "end": 1566.48, "text": " It has a lot of options, but I'm not sure I would know exactly what everything means.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 450, "seek": 156008, "start": 1566.48, "end": 1568.56, "text": " So do you have any good resources on that?", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 451, "seek": 156008, "start": 1568.56, "end": 1569.56, "text": " Yes.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 452, "seek": 156008, "start": 1569.56, "end": 1572.48, "text": " So Jue Lu, is it Jue Lu?", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 453, "seek": 156008, "start": 1572.48, "end": 1574.48, "text": " Is that how it's pronounced?", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 454, "seek": 156008, "start": 1574.48, "end": 1575.48, "text": " Arkham.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 455, "seek": 156008, "start": 1575.48, "end": 1576.48, "text": " Arkham.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 456, "seek": 156008, "start": 1576.48, "end": 1577.48, "text": " We all know Jue.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 457, "seek": 156008, "start": 1577.48, "end": 1578.48, "text": " Jue's great.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 458, "seek": 156008, "start": 1578.48, "end": 1582.36, "text": " Check out, Jue wrote a blog post called performant Elm.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 459, "seek": 156008, "start": 1582.36, "end": 1585.32, "text": " It's a two part series and it basically walks you through this.", "tokens": [50364, 467, 575, 257, 688, 295, 3956, 11, 457, 286, 478, 406, 988, 286, 576, 458, 2293, 437, 1203, 1355, 13, 50684, 50684, 407, 360, 291, 362, 604, 665, 3593, 322, 300, 30, 50788, 50788, 1079, 13, 50838, 50838, 407, 508, 622, 5047, 11, 307, 309, 508, 622, 5047, 30, 50984, 50984, 1119, 300, 577, 309, 311, 23155, 30, 51084, 51084, 16427, 4822, 13, 51134, 51134, 16427, 4822, 13, 51184, 51184, 492, 439, 458, 508, 622, 13, 51234, 51234, 508, 622, 311, 869, 13, 51284, 51284, 6881, 484, 11, 508, 622, 4114, 257, 6968, 2183, 1219, 2042, 394, 2699, 76, 13, 51478, 51478, 467, 311, 257, 732, 644, 2638, 293, 309, 1936, 12896, 291, 807, 341, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.19940754572550456, "compression_ratio": 1.4831932773109244, "no_caption_prob": 2.355196193093434e-05}, {"id": 460, "seek": 158532, "start": 1585.32, "end": 1591.36, "text": " And that was actually how I discovered this technique and it like steps you through exactly", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 461, "seek": 158532, "start": 1591.36, "end": 1592.36, "text": " how to do it.", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 462, "seek": 158532, "start": 1592.36, "end": 1593.36, "text": " And it's really helpful.", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 463, "seek": 158532, "start": 1593.36, "end": 1597.22, "text": " So we'll leave a link in the show notes and definitely check that out.", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 464, "seek": 158532, "start": 1597.22, "end": 1599.24, "text": " It's a lot easier than you would imagine.", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 465, "seek": 158532, "start": 1599.24, "end": 1604.56, "text": " So it's a great idea to run that and try to look for bottlenecks.", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 466, "seek": 158532, "start": 1604.56, "end": 1612.76, "text": " Also when you run a Lighthouse audit on your site, it now identifies if you have like long", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 467, "seek": 158532, "start": 1612.76, "end": 1614.04, "text": " running tasks.", "tokens": [50364, 400, 300, 390, 767, 577, 286, 6941, 341, 6532, 293, 309, 411, 4439, 291, 807, 2293, 50666, 50666, 577, 281, 360, 309, 13, 50716, 50716, 400, 309, 311, 534, 4961, 13, 50766, 50766, 407, 321, 603, 1856, 257, 2113, 294, 264, 855, 5570, 293, 2138, 1520, 300, 484, 13, 50959, 50959, 467, 311, 257, 688, 3571, 813, 291, 576, 3811, 13, 51060, 51060, 407, 309, 311, 257, 869, 1558, 281, 1190, 300, 293, 853, 281, 574, 337, 44641, 2761, 13, 51326, 51326, 2743, 562, 291, 1190, 257, 8279, 6410, 17748, 322, 428, 3621, 11, 309, 586, 34597, 498, 291, 362, 411, 938, 51736, 51736, 2614, 9608, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.07884182801117769, "compression_ratio": 1.6338582677165354, "no_caption_prob": 1.5445319149876013e-05}, {"id": 468, "seek": 161404, "start": 1614.04, "end": 1624.62, "text": " So now if you want a 60 frame per second animation, so when we're writing Elm code, we're writing", "tokens": [50364, 407, 586, 498, 291, 528, 257, 4060, 3920, 680, 1150, 9603, 11, 370, 562, 321, 434, 3579, 2699, 76, 3089, 11, 321, 434, 3579, 50893, 50893, 746, 300, 715, 4680, 281, 15778, 11, 597, 6676, 294, 257, 11185, 13, 51064, 51064, 400, 370, 286, 519, 309, 311, 1021, 281, 362, 512, 2674, 3701, 295, 3389, 294, 15778, 51384, 51384, 293, 3389, 294, 36069, 13, 51500, 51500, 400, 370, 472, 534, 1021, 551, 281, 1223, 11, 498, 291, 1223, 472, 551, 466, 15778, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11129184101903161, "compression_ratio": 1.766355140186916, "no_caption_prob": 2.0461973690544255e-05}, {"id": 469, "seek": 161404, "start": 1624.62, "end": 1628.04, "text": " something that compiles to JavaScript, which runs in a browser.", "tokens": [50364, 407, 586, 498, 291, 528, 257, 4060, 3920, 680, 1150, 9603, 11, 370, 562, 321, 434, 3579, 2699, 76, 3089, 11, 321, 434, 3579, 50893, 50893, 746, 300, 715, 4680, 281, 15778, 11, 597, 6676, 294, 257, 11185, 13, 51064, 51064, 400, 370, 286, 519, 309, 311, 1021, 281, 362, 512, 2674, 3701, 295, 3389, 294, 15778, 51384, 51384, 293, 3389, 294, 36069, 13, 51500, 51500, 400, 370, 472, 534, 1021, 551, 281, 1223, 11, 498, 291, 1223, 472, 551, 466, 15778, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11129184101903161, "compression_ratio": 1.766355140186916, "no_caption_prob": 2.0461973690544255e-05}, {"id": 470, "seek": 161404, "start": 1628.04, "end": 1634.44, "text": " And so I think it's important to have some general understanding of performance in JavaScript", "tokens": [50364, 407, 586, 498, 291, 528, 257, 4060, 3920, 680, 1150, 9603, 11, 370, 562, 321, 434, 3579, 2699, 76, 3089, 11, 321, 434, 3579, 50893, 50893, 746, 300, 715, 4680, 281, 15778, 11, 597, 6676, 294, 257, 11185, 13, 51064, 51064, 400, 370, 286, 519, 309, 311, 1021, 281, 362, 512, 2674, 3701, 295, 3389, 294, 15778, 51384, 51384, 293, 3389, 294, 36069, 13, 51500, 51500, 400, 370, 472, 534, 1021, 551, 281, 1223, 11, 498, 291, 1223, 472, 551, 466, 15778, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11129184101903161, "compression_ratio": 1.766355140186916, "no_caption_prob": 2.0461973690544255e-05}, {"id": 471, "seek": 161404, "start": 1634.44, "end": 1636.76, "text": " and performance in browsers.", "tokens": [50364, 407, 586, 498, 291, 528, 257, 4060, 3920, 680, 1150, 9603, 11, 370, 562, 321, 434, 3579, 2699, 76, 3089, 11, 321, 434, 3579, 50893, 50893, 746, 300, 715, 4680, 281, 15778, 11, 597, 6676, 294, 257, 11185, 13, 51064, 51064, 400, 370, 286, 519, 309, 311, 1021, 281, 362, 512, 2674, 3701, 295, 3389, 294, 15778, 51384, 51384, 293, 3389, 294, 36069, 13, 51500, 51500, 400, 370, 472, 534, 1021, 551, 281, 1223, 11, 498, 291, 1223, 472, 551, 466, 15778, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11129184101903161, "compression_ratio": 1.766355140186916, "no_caption_prob": 2.0461973690544255e-05}, {"id": 472, "seek": 161404, "start": 1636.76, "end": 1643.6399999999999, "text": " And so one really important thing to understand, if you understand one thing about JavaScript", "tokens": [50364, 407, 586, 498, 291, 528, 257, 4060, 3920, 680, 1150, 9603, 11, 370, 562, 321, 434, 3579, 2699, 76, 3089, 11, 321, 434, 3579, 50893, 50893, 746, 300, 715, 4680, 281, 15778, 11, 597, 6676, 294, 257, 11185, 13, 51064, 51064, 400, 370, 286, 519, 309, 311, 1021, 281, 362, 512, 2674, 3701, 295, 3389, 294, 15778, 51384, 51384, 293, 3389, 294, 36069, 13, 51500, 51500, 400, 370, 472, 534, 1021, 551, 281, 1223, 11, 498, 291, 1223, 472, 551, 466, 15778, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.11129184101903161, "compression_ratio": 1.766355140186916, "no_caption_prob": 2.0461973690544255e-05}, {"id": 473, "seek": 164364, "start": 1643.64, "end": 1646.96, "text": " buttons, it should be that it's single threaded, right?", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 474, "seek": 164364, "start": 1646.96, "end": 1649.2, "text": " There's one thread of execution.", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 475, "seek": 164364, "start": 1649.2, "end": 1654.24, "text": " And if you block it, everything grinds to a halt, including scrolling and input events", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 476, "seek": 164364, "start": 1654.24, "end": 1659.3200000000002, "text": " and you're blocking user interaction, which is very frustrating.", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 477, "seek": 164364, "start": 1659.3200000000002, "end": 1661.1000000000001, "text": " Which means that you cannot click on buttons.", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 478, "seek": 164364, "start": 1661.1000000000001, "end": 1663.2, "text": " You cannot type anything.", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 479, "seek": 164364, "start": 1663.2, "end": 1664.2, "text": " Exactly.", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 480, "seek": 164364, "start": 1664.2, "end": 1669.3200000000002, "text": " All of these, even like built in browser animations of clicking buttons and things will just freeze", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 481, "seek": 164364, "start": 1669.3200000000002, "end": 1670.5600000000002, "text": " up and lock up.", "tokens": [50364, 9905, 11, 309, 820, 312, 300, 309, 311, 2167, 47493, 11, 558, 30, 50530, 50530, 821, 311, 472, 7207, 295, 15058, 13, 50642, 50642, 400, 498, 291, 3461, 309, 11, 1203, 16700, 82, 281, 257, 12479, 11, 3009, 29053, 293, 4846, 3931, 50894, 50894, 293, 291, 434, 17776, 4195, 9285, 11, 597, 307, 588, 16522, 13, 51148, 51148, 3013, 1355, 300, 291, 2644, 2052, 322, 9905, 13, 51237, 51237, 509, 2644, 2010, 1340, 13, 51342, 51342, 7587, 13, 51392, 51392, 1057, 295, 613, 11, 754, 411, 3094, 294, 11185, 22868, 295, 9697, 9905, 293, 721, 486, 445, 15959, 51648, 51648, 493, 293, 4017, 493, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.13104677637782666, "compression_ratio": 1.6367041198501873, "no_caption_prob": 1.3631196452479344e-05}, {"id": 482, "seek": 167056, "start": 1670.56, "end": 1677.6, "text": " And so there's like the first input delay Lighthouse metric, which helps identify this", "tokens": [50364, 400, 370, 456, 311, 411, 264, 700, 4846, 8577, 8279, 6410, 20678, 11, 597, 3665, 5876, 341, 50716, 50716, 733, 295, 2734, 13, 50766, 50766, 400, 341, 307, 2891, 281, 1813, 264, 636, 300, 3329, 21406, 7533, 586, 13, 51010, 51010, 639, 307, 5617, 257, 4965, 20678, 300, 486, 767, 9961, 291, 760, 294, 264, 3164, 3542, 498, 291, 51360, 51360, 362, 2663, 365, 613, 16367, 13, 51484, 51484, 407, 309, 311, 1021, 337, 22964, 382, 731, 13, 51636, 51636, 407, 498, 291, 1223, 472, 551, 466, 15778, 3389, 11, 309, 820, 312, 300, 456, 311, 257, 2167, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.06664394397361606, "compression_ratio": 1.6037735849056605, "no_caption_prob": 1.1300581718387548e-05}, {"id": 483, "seek": 167056, "start": 1677.6, "end": 1678.6, "text": " kind of issue.", "tokens": [50364, 400, 370, 456, 311, 411, 264, 700, 4846, 8577, 8279, 6410, 20678, 11, 597, 3665, 5876, 341, 50716, 50716, 733, 295, 2734, 13, 50766, 50766, 400, 341, 307, 2891, 281, 1813, 264, 636, 300, 3329, 21406, 7533, 586, 13, 51010, 51010, 639, 307, 5617, 257, 4965, 20678, 300, 486, 767, 9961, 291, 760, 294, 264, 3164, 3542, 498, 291, 51360, 51360, 362, 2663, 365, 613, 16367, 13, 51484, 51484, 407, 309, 311, 1021, 337, 22964, 382, 731, 13, 51636, 51636, 407, 498, 291, 1223, 472, 551, 466, 15778, 3389, 11, 309, 820, 312, 300, 456, 311, 257, 2167, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.06664394397361606, "compression_ratio": 1.6037735849056605, "no_caption_prob": 1.1300581718387548e-05}, {"id": 484, "seek": 167056, "start": 1678.6, "end": 1683.48, "text": " And this is starting to become the way that Google ranks sites now.", "tokens": [50364, 400, 370, 456, 311, 411, 264, 700, 4846, 8577, 8279, 6410, 20678, 11, 597, 3665, 5876, 341, 50716, 50716, 733, 295, 2734, 13, 50766, 50766, 400, 341, 307, 2891, 281, 1813, 264, 636, 300, 3329, 21406, 7533, 586, 13, 51010, 51010, 639, 307, 5617, 257, 4965, 20678, 300, 486, 767, 9961, 291, 760, 294, 264, 3164, 3542, 498, 291, 51360, 51360, 362, 2663, 365, 613, 16367, 13, 51484, 51484, 407, 309, 311, 1021, 337, 22964, 382, 731, 13, 51636, 51636, 407, 498, 291, 1223, 472, 551, 466, 15778, 3389, 11, 309, 820, 312, 300, 456, 311, 257, 2167, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.06664394397361606, "compression_ratio": 1.6037735849056605, "no_caption_prob": 1.1300581718387548e-05}, {"id": 485, "seek": 167056, "start": 1683.48, "end": 1690.48, "text": " This is becoming a core metric that will actually bump you down in the search results if you", "tokens": [50364, 400, 370, 456, 311, 411, 264, 700, 4846, 8577, 8279, 6410, 20678, 11, 597, 3665, 5876, 341, 50716, 50716, 733, 295, 2734, 13, 50766, 50766, 400, 341, 307, 2891, 281, 1813, 264, 636, 300, 3329, 21406, 7533, 586, 13, 51010, 51010, 639, 307, 5617, 257, 4965, 20678, 300, 486, 767, 9961, 291, 760, 294, 264, 3164, 3542, 498, 291, 51360, 51360, 362, 2663, 365, 613, 16367, 13, 51484, 51484, 407, 309, 311, 1021, 337, 22964, 382, 731, 13, 51636, 51636, 407, 498, 291, 1223, 472, 551, 466, 15778, 3389, 11, 309, 820, 312, 300, 456, 311, 257, 2167, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.06664394397361606, "compression_ratio": 1.6037735849056605, "no_caption_prob": 1.1300581718387548e-05}, {"id": 486, "seek": 167056, "start": 1690.48, "end": 1692.96, "text": " have issues with these metrics.", "tokens": [50364, 400, 370, 456, 311, 411, 264, 700, 4846, 8577, 8279, 6410, 20678, 11, 597, 3665, 5876, 341, 50716, 50716, 733, 295, 2734, 13, 50766, 50766, 400, 341, 307, 2891, 281, 1813, 264, 636, 300, 3329, 21406, 7533, 586, 13, 51010, 51010, 639, 307, 5617, 257, 4965, 20678, 300, 486, 767, 9961, 291, 760, 294, 264, 3164, 3542, 498, 291, 51360, 51360, 362, 2663, 365, 613, 16367, 13, 51484, 51484, 407, 309, 311, 1021, 337, 22964, 382, 731, 13, 51636, 51636, 407, 498, 291, 1223, 472, 551, 466, 15778, 3389, 11, 309, 820, 312, 300, 456, 311, 257, 2167, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.06664394397361606, "compression_ratio": 1.6037735849056605, "no_caption_prob": 1.1300581718387548e-05}, {"id": 487, "seek": 167056, "start": 1692.96, "end": 1696.0, "text": " So it's important for SEO as well.", "tokens": [50364, 400, 370, 456, 311, 411, 264, 700, 4846, 8577, 8279, 6410, 20678, 11, 597, 3665, 5876, 341, 50716, 50716, 733, 295, 2734, 13, 50766, 50766, 400, 341, 307, 2891, 281, 1813, 264, 636, 300, 3329, 21406, 7533, 586, 13, 51010, 51010, 639, 307, 5617, 257, 4965, 20678, 300, 486, 767, 9961, 291, 760, 294, 264, 3164, 3542, 498, 291, 51360, 51360, 362, 2663, 365, 613, 16367, 13, 51484, 51484, 407, 309, 311, 1021, 337, 22964, 382, 731, 13, 51636, 51636, 407, 498, 291, 1223, 472, 551, 466, 15778, 3389, 11, 309, 820, 312, 300, 456, 311, 257, 2167, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.06664394397361606, "compression_ratio": 1.6037735849056605, "no_caption_prob": 1.1300581718387548e-05}, {"id": 488, "seek": 167056, "start": 1696.0, "end": 1700.44, "text": " So if you understand one thing about JavaScript performance, it should be that there's a single", "tokens": [50364, 400, 370, 456, 311, 411, 264, 700, 4846, 8577, 8279, 6410, 20678, 11, 597, 3665, 5876, 341, 50716, 50716, 733, 295, 2734, 13, 50766, 50766, 400, 341, 307, 2891, 281, 1813, 264, 636, 300, 3329, 21406, 7533, 586, 13, 51010, 51010, 639, 307, 5617, 257, 4965, 20678, 300, 486, 767, 9961, 291, 760, 294, 264, 3164, 3542, 498, 291, 51360, 51360, 362, 2663, 365, 613, 16367, 13, 51484, 51484, 407, 309, 311, 1021, 337, 22964, 382, 731, 13, 51636, 51636, 407, 498, 291, 1223, 472, 551, 466, 15778, 3389, 11, 309, 820, 312, 300, 456, 311, 257, 2167, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.06664394397361606, "compression_ratio": 1.6037735849056605, "no_caption_prob": 1.1300581718387548e-05}, {"id": 489, "seek": 170044, "start": 1700.44, "end": 1703.24, "text": " thread of execution and don't block that thread.", "tokens": [50364, 7207, 295, 15058, 293, 500, 380, 3461, 300, 7207, 13, 50504, 50504, 759, 291, 434, 1382, 281, 483, 4060, 3920, 680, 1150, 22868, 11, 300, 1355, 300, 291, 362, 466, 50806, 50806, 3165, 34184, 281, 2042, 257, 17776, 6916, 13, 51092, 51092, 407, 586, 498, 291, 434, 10205, 364, 33283, 5308, 11, 300, 311, 2107, 17776, 13, 51379, 51379, 663, 311, 1071, 551, 466, 15778, 300, 456, 366, 613, 2107, 17776, 39839, 7705, 51619, 51619, 411, 10205, 33283, 12475, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.12998140425909133, "compression_ratio": 1.7069767441860466, "no_caption_prob": 6.240878519747639e-06}, {"id": 490, "seek": 170044, "start": 1703.24, "end": 1709.28, "text": " If you're trying to get 60 frame per second animations, that means that you have about", "tokens": [50364, 7207, 295, 15058, 293, 500, 380, 3461, 300, 7207, 13, 50504, 50504, 759, 291, 434, 1382, 281, 483, 4060, 3920, 680, 1150, 22868, 11, 300, 1355, 300, 291, 362, 466, 50806, 50806, 3165, 34184, 281, 2042, 257, 17776, 6916, 13, 51092, 51092, 407, 586, 498, 291, 434, 10205, 364, 33283, 5308, 11, 300, 311, 2107, 17776, 13, 51379, 51379, 663, 311, 1071, 551, 466, 15778, 300, 456, 366, 613, 2107, 17776, 39839, 7705, 51619, 51619, 411, 10205, 33283, 12475, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.12998140425909133, "compression_ratio": 1.7069767441860466, "no_caption_prob": 6.240878519747639e-06}, {"id": 491, "seek": 170044, "start": 1709.28, "end": 1715.0, "text": " 16 milliseconds to perform a blocking operation.", "tokens": [50364, 7207, 295, 15058, 293, 500, 380, 3461, 300, 7207, 13, 50504, 50504, 759, 291, 434, 1382, 281, 483, 4060, 3920, 680, 1150, 22868, 11, 300, 1355, 300, 291, 362, 466, 50806, 50806, 3165, 34184, 281, 2042, 257, 17776, 6916, 13, 51092, 51092, 407, 586, 498, 291, 434, 10205, 364, 33283, 5308, 11, 300, 311, 2107, 17776, 13, 51379, 51379, 663, 311, 1071, 551, 466, 15778, 300, 456, 366, 613, 2107, 17776, 39839, 7705, 51619, 51619, 411, 10205, 33283, 12475, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.12998140425909133, "compression_ratio": 1.7069767441860466, "no_caption_prob": 6.240878519747639e-06}, {"id": 492, "seek": 170044, "start": 1715.0, "end": 1720.74, "text": " So now if you're performing an HTTP request, that's non blocking.", "tokens": [50364, 7207, 295, 15058, 293, 500, 380, 3461, 300, 7207, 13, 50504, 50504, 759, 291, 434, 1382, 281, 483, 4060, 3920, 680, 1150, 22868, 11, 300, 1355, 300, 291, 362, 466, 50806, 50806, 3165, 34184, 281, 2042, 257, 17776, 6916, 13, 51092, 51092, 407, 586, 498, 291, 434, 10205, 364, 33283, 5308, 11, 300, 311, 2107, 17776, 13, 51379, 51379, 663, 311, 1071, 551, 466, 15778, 300, 456, 366, 613, 2107, 17776, 39839, 7705, 51619, 51619, 411, 10205, 33283, 12475, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.12998140425909133, "compression_ratio": 1.7069767441860466, "no_caption_prob": 6.240878519747639e-06}, {"id": 493, "seek": 170044, "start": 1720.74, "end": 1725.54, "text": " That's another thing about JavaScript that there are these non blocking IO operations", "tokens": [50364, 7207, 295, 15058, 293, 500, 380, 3461, 300, 7207, 13, 50504, 50504, 759, 291, 434, 1382, 281, 483, 4060, 3920, 680, 1150, 22868, 11, 300, 1355, 300, 291, 362, 466, 50806, 50806, 3165, 34184, 281, 2042, 257, 17776, 6916, 13, 51092, 51092, 407, 586, 498, 291, 434, 10205, 364, 33283, 5308, 11, 300, 311, 2107, 17776, 13, 51379, 51379, 663, 311, 1071, 551, 466, 15778, 300, 456, 366, 613, 2107, 17776, 39839, 7705, 51619, 51619, 411, 10205, 33283, 12475, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.12998140425909133, "compression_ratio": 1.7069767441860466, "no_caption_prob": 6.240878519747639e-06}, {"id": 494, "seek": 170044, "start": 1725.54, "end": 1728.26, "text": " like performing HTTP requests.", "tokens": [50364, 7207, 295, 15058, 293, 500, 380, 3461, 300, 7207, 13, 50504, 50504, 759, 291, 434, 1382, 281, 483, 4060, 3920, 680, 1150, 22868, 11, 300, 1355, 300, 291, 362, 466, 50806, 50806, 3165, 34184, 281, 2042, 257, 17776, 6916, 13, 51092, 51092, 407, 586, 498, 291, 434, 10205, 364, 33283, 5308, 11, 300, 311, 2107, 17776, 13, 51379, 51379, 663, 311, 1071, 551, 466, 15778, 300, 456, 366, 613, 2107, 17776, 39839, 7705, 51619, 51619, 411, 10205, 33283, 12475, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.12998140425909133, "compression_ratio": 1.7069767441860466, "no_caption_prob": 6.240878519747639e-06}, {"id": 495, "seek": 172826, "start": 1728.26, "end": 1733.84, "text": " And if your HTTP request takes five seconds, that's okay because you're not blocking the", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 496, "seek": 172826, "start": 1733.84, "end": 1734.84, "text": " main thread.", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 497, "seek": 172826, "start": 1734.84, "end": 1740.76, "text": " You're queuing that work and it's going to come back and run your single threaded JavaScript", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 498, "seek": 172826, "start": 1740.76, "end": 1744.64, "text": " when it's done with HTTP request.", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 499, "seek": 172826, "start": 1744.64, "end": 1751.84, "text": " But for the actual processing of things, that's single threaded and you've got 16 seconds", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 500, "seek": 172826, "start": 1751.84, "end": 1754.2, "text": " if you want 60 frames per second.", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 501, "seek": 172826, "start": 1754.2, "end": 1755.2, "text": " 16 milliseconds.", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 502, "seek": 172826, "start": 1755.2, "end": 1757.96, "text": " Sorry, 16 milliseconds.", "tokens": [50364, 400, 498, 428, 33283, 5308, 2516, 1732, 3949, 11, 300, 311, 1392, 570, 291, 434, 406, 17776, 264, 50643, 50643, 2135, 7207, 13, 50693, 50693, 509, 434, 631, 9635, 300, 589, 293, 309, 311, 516, 281, 808, 646, 293, 1190, 428, 2167, 47493, 15778, 50989, 50989, 562, 309, 311, 1096, 365, 33283, 5308, 13, 51183, 51183, 583, 337, 264, 3539, 9007, 295, 721, 11, 300, 311, 2167, 47493, 293, 291, 600, 658, 3165, 3949, 51543, 51543, 498, 291, 528, 4060, 12083, 680, 1150, 13, 51661, 51661, 3165, 34184, 13, 51711, 51711, 4919, 11, 3165, 34184, 13, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.16932554244995118, "compression_ratio": 1.7012987012987013, "no_caption_prob": 4.029401225125184e-06}, {"id": 503, "seek": 175796, "start": 1757.96, "end": 1759.92, "text": " Don't take 16 seconds to do anything.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 504, "seek": 175796, "start": 1759.92, "end": 1761.1200000000001, "text": " That would be really bad.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 505, "seek": 175796, "start": 1761.1200000000001, "end": 1768.96, "text": " And you've got about 50 milliseconds just in general if you want to not be blocking", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 506, "seek": 175796, "start": 1768.96, "end": 1772.1200000000001, "text": " user interactions and having a clunky experience there.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 507, "seek": 175796, "start": 1772.1200000000001, "end": 1773.1200000000001, "text": " Yeah.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 508, "seek": 175796, "start": 1773.1200000000001, "end": 1776.56, "text": " But it's a bit hard to know when you reach that budget.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 509, "seek": 175796, "start": 1776.56, "end": 1780.88, "text": " So basically, how to do as few work as possible.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 510, "seek": 175796, "start": 1780.88, "end": 1781.88, "text": " Yeah.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 511, "seek": 175796, "start": 1781.88, "end": 1782.88, "text": " Yeah.", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 512, "seek": 175796, "start": 1782.88, "end": 1787.44, "text": " Try to be as minimal as possible and benchmark, right?", "tokens": [50364, 1468, 380, 747, 3165, 3949, 281, 360, 1340, 13, 50462, 50462, 663, 576, 312, 534, 1578, 13, 50522, 50522, 400, 291, 600, 658, 466, 2625, 34184, 445, 294, 2674, 498, 291, 528, 281, 406, 312, 17776, 50914, 50914, 4195, 13280, 293, 1419, 257, 596, 25837, 1752, 456, 13, 51072, 51072, 865, 13, 51122, 51122, 583, 309, 311, 257, 857, 1152, 281, 458, 562, 291, 2524, 300, 4706, 13, 51294, 51294, 407, 1936, 11, 577, 281, 360, 382, 1326, 589, 382, 1944, 13, 51510, 51510, 865, 13, 51560, 51560, 865, 13, 51610, 51610, 6526, 281, 312, 382, 13206, 382, 1944, 293, 18927, 11, 558, 30, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.19986548247160735, "compression_ratio": 1.5119047619047619, "no_caption_prob": 1.4970932170399465e-05}, {"id": 513, "seek": 178744, "start": 1787.44, "end": 1788.44, "text": " Run Lighthouse.", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 514, "seek": 178744, "start": 1788.44, "end": 1792.28, "text": " If you run Lighthouse, it will tell you if you have long running blocking tasks that", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 515, "seek": 178744, "start": 1792.28, "end": 1794.64, "text": " take 50 milliseconds or more.", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 516, "seek": 178744, "start": 1794.64, "end": 1797.44, "text": " And it'll actually point you to where that happens.", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 517, "seek": 178744, "start": 1797.44, "end": 1800.0800000000002, "text": " So that's a great technique.", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 518, "seek": 178744, "start": 1800.0800000000002, "end": 1807.28, "text": " And so another thing, a lot of these performance improvements I find come down to most of the", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 519, "seek": 178744, "start": 1807.28, "end": 1810.16, "text": " time it's not these micro optimizations.", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 520, "seek": 178744, "start": 1810.16, "end": 1814.6000000000001, "text": " More often it's architectural or algorithmic improvements.", "tokens": [50364, 8950, 8279, 6410, 13, 50414, 50414, 759, 291, 1190, 8279, 6410, 11, 309, 486, 980, 291, 498, 291, 362, 938, 2614, 17776, 9608, 300, 50606, 50606, 747, 2625, 34184, 420, 544, 13, 50724, 50724, 400, 309, 603, 767, 935, 291, 281, 689, 300, 2314, 13, 50864, 50864, 407, 300, 311, 257, 869, 6532, 13, 50996, 50996, 400, 370, 1071, 551, 11, 257, 688, 295, 613, 3389, 13797, 286, 915, 808, 760, 281, 881, 295, 264, 51356, 51356, 565, 309, 311, 406, 613, 4532, 5028, 14455, 13, 51500, 51500, 5048, 2049, 309, 311, 26621, 420, 9284, 299, 13797, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.10758783303055108, "compression_ratio": 1.6135458167330676, "no_caption_prob": 6.401753489626572e-05}, {"id": 521, "seek": 181460, "start": 1814.6, "end": 1817.6799999999998, "text": " If you're doing unnecessary work, try to do less work.", "tokens": [50364, 759, 291, 434, 884, 19350, 589, 11, 853, 281, 360, 1570, 589, 13, 50518, 50518, 759, 291, 434, 5061, 3195, 295, 1507, 294, 4675, 11, 853, 281, 1797, 1570, 1507, 294, 4675, 13, 50706, 50706, 759, 291, 434, 6460, 27210, 721, 490, 819, 1412, 9227, 11, 498, 291, 434, 6246, 50956, 50956, 746, 490, 364, 2699, 76, 1329, 281, 364, 10225, 281, 257, 12569, 293, 550, 8407, 293, 498, 291, 434, 884, 51336, 51336, 8186, 292, 2105, 666, 2416, 14511, 294, 2699, 76, 420, 721, 411, 300, 11, 729, 366, 721, 281, 574, 51580, 51580, 337, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.0920414405293984, "compression_ratio": 1.8256880733944953, "no_caption_prob": 8.013379556359723e-06}, {"id": 522, "seek": 181460, "start": 1817.6799999999998, "end": 1821.4399999999998, "text": " If you're holding lots of stuff in memory, try to hold less stuff in memory.", "tokens": [50364, 759, 291, 434, 884, 19350, 589, 11, 853, 281, 360, 1570, 589, 13, 50518, 50518, 759, 291, 434, 5061, 3195, 295, 1507, 294, 4675, 11, 853, 281, 1797, 1570, 1507, 294, 4675, 13, 50706, 50706, 759, 291, 434, 6460, 27210, 721, 490, 819, 1412, 9227, 11, 498, 291, 434, 6246, 50956, 50956, 746, 490, 364, 2699, 76, 1329, 281, 364, 10225, 281, 257, 12569, 293, 550, 8407, 293, 498, 291, 434, 884, 51336, 51336, 8186, 292, 2105, 666, 2416, 14511, 294, 2699, 76, 420, 721, 411, 300, 11, 729, 366, 721, 281, 574, 51580, 51580, 337, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.0920414405293984, "compression_ratio": 1.8256880733944953, "no_caption_prob": 8.013379556359723e-06}, {"id": 523, "seek": 181460, "start": 1821.4399999999998, "end": 1826.4399999999998, "text": " If you're constantly transforming things from different data structures, if you're turning", "tokens": [50364, 759, 291, 434, 884, 19350, 589, 11, 853, 281, 360, 1570, 589, 13, 50518, 50518, 759, 291, 434, 5061, 3195, 295, 1507, 294, 4675, 11, 853, 281, 1797, 1570, 1507, 294, 4675, 13, 50706, 50706, 759, 291, 434, 6460, 27210, 721, 490, 819, 1412, 9227, 11, 498, 291, 434, 6246, 50956, 50956, 746, 490, 364, 2699, 76, 1329, 281, 364, 10225, 281, 257, 12569, 293, 550, 8407, 293, 498, 291, 434, 884, 51336, 51336, 8186, 292, 2105, 666, 2416, 14511, 294, 2699, 76, 420, 721, 411, 300, 11, 729, 366, 721, 281, 574, 51580, 51580, 337, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.0920414405293984, "compression_ratio": 1.8256880733944953, "no_caption_prob": 8.013379556359723e-06}, {"id": 524, "seek": 181460, "start": 1826.4399999999998, "end": 1834.04, "text": " something from an Elm list to an array to a dict and then pulling and if you're doing", "tokens": [50364, 759, 291, 434, 884, 19350, 589, 11, 853, 281, 360, 1570, 589, 13, 50518, 50518, 759, 291, 434, 5061, 3195, 295, 1507, 294, 4675, 11, 853, 281, 1797, 1570, 1507, 294, 4675, 13, 50706, 50706, 759, 291, 434, 6460, 27210, 721, 490, 819, 1412, 9227, 11, 498, 291, 434, 6246, 50956, 50956, 746, 490, 364, 2699, 76, 1329, 281, 364, 10225, 281, 257, 12569, 293, 550, 8407, 293, 498, 291, 434, 884, 51336, 51336, 8186, 292, 2105, 666, 2416, 14511, 294, 2699, 76, 420, 721, 411, 300, 11, 729, 366, 721, 281, 574, 51580, 51580, 337, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.0920414405293984, "compression_ratio": 1.8256880733944953, "no_caption_prob": 8.013379556359723e-06}, {"id": 525, "seek": 181460, "start": 1834.04, "end": 1838.9199999999998, "text": " indexed access into large lists in Elm or things like that, those are things to look", "tokens": [50364, 759, 291, 434, 884, 19350, 589, 11, 853, 281, 360, 1570, 589, 13, 50518, 50518, 759, 291, 434, 5061, 3195, 295, 1507, 294, 4675, 11, 853, 281, 1797, 1570, 1507, 294, 4675, 13, 50706, 50706, 759, 291, 434, 6460, 27210, 721, 490, 819, 1412, 9227, 11, 498, 291, 434, 6246, 50956, 50956, 746, 490, 364, 2699, 76, 1329, 281, 364, 10225, 281, 257, 12569, 293, 550, 8407, 293, 498, 291, 434, 884, 51336, 51336, 8186, 292, 2105, 666, 2416, 14511, 294, 2699, 76, 420, 721, 411, 300, 11, 729, 366, 721, 281, 574, 51580, 51580, 337, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.0920414405293984, "compression_ratio": 1.8256880733944953, "no_caption_prob": 8.013379556359723e-06}, {"id": 526, "seek": 181460, "start": 1838.9199999999998, "end": 1839.9199999999998, "text": " for.", "tokens": [50364, 759, 291, 434, 884, 19350, 589, 11, 853, 281, 360, 1570, 589, 13, 50518, 50518, 759, 291, 434, 5061, 3195, 295, 1507, 294, 4675, 11, 853, 281, 1797, 1570, 1507, 294, 4675, 13, 50706, 50706, 759, 291, 434, 6460, 27210, 721, 490, 819, 1412, 9227, 11, 498, 291, 434, 6246, 50956, 50956, 746, 490, 364, 2699, 76, 1329, 281, 364, 10225, 281, 257, 12569, 293, 550, 8407, 293, 498, 291, 434, 884, 51336, 51336, 8186, 292, 2105, 666, 2416, 14511, 294, 2699, 76, 420, 721, 411, 300, 11, 729, 366, 721, 281, 574, 51580, 51580, 337, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.0920414405293984, "compression_ratio": 1.8256880733944953, "no_caption_prob": 8.013379556359723e-06}, {"id": 527, "seek": 183992, "start": 1839.92, "end": 1847.44, "text": " I mean, those are usually fine when the collection size is pretty small.", "tokens": [50364, 286, 914, 11, 729, 366, 2673, 2489, 562, 264, 5765, 2744, 307, 1238, 1359, 13, 50740, 50740, 509, 393, 360, 12668, 295, 729, 11, 572, 2734, 13, 50892, 50892, 583, 498, 309, 311, 322, 257, 1329, 295, 257, 4714, 4959, 11, 291, 486, 722, 21814, 309, 13, 51208, 51208, 400, 2318, 498, 291, 528, 281, 2524, 300, 4060, 26429, 12066, 1230, 11, 291, 820, 5042, 884, 51506, 51506, 341, 294, 264, 1910, 2445, 886, 709, 420, 294, 633, 5623, 420, 721, 300, 366, 32279, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1659325160337298, "compression_ratio": 1.5258620689655173, "no_caption_prob": 2.7533706088433973e-05}, {"id": 528, "seek": 183992, "start": 1847.44, "end": 1850.48, "text": " You can do loads of those, no issue.", "tokens": [50364, 286, 914, 11, 729, 366, 2673, 2489, 562, 264, 5765, 2744, 307, 1238, 1359, 13, 50740, 50740, 509, 393, 360, 12668, 295, 729, 11, 572, 2734, 13, 50892, 50892, 583, 498, 309, 311, 322, 257, 1329, 295, 257, 4714, 4959, 11, 291, 486, 722, 21814, 309, 13, 51208, 51208, 400, 2318, 498, 291, 528, 281, 2524, 300, 4060, 26429, 12066, 1230, 11, 291, 820, 5042, 884, 51506, 51506, 341, 294, 264, 1910, 2445, 886, 709, 420, 294, 633, 5623, 420, 721, 300, 366, 32279, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1659325160337298, "compression_ratio": 1.5258620689655173, "no_caption_prob": 2.7533706088433973e-05}, {"id": 529, "seek": 183992, "start": 1850.48, "end": 1856.8000000000002, "text": " But if it's on a list of a thousand elements, you will start noticing it.", "tokens": [50364, 286, 914, 11, 729, 366, 2673, 2489, 562, 264, 5765, 2744, 307, 1238, 1359, 13, 50740, 50740, 509, 393, 360, 12668, 295, 729, 11, 572, 2734, 13, 50892, 50892, 583, 498, 309, 311, 322, 257, 1329, 295, 257, 4714, 4959, 11, 291, 486, 722, 21814, 309, 13, 51208, 51208, 400, 2318, 498, 291, 528, 281, 2524, 300, 4060, 26429, 12066, 1230, 11, 291, 820, 5042, 884, 51506, 51506, 341, 294, 264, 1910, 2445, 886, 709, 420, 294, 633, 5623, 420, 721, 300, 366, 32279, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1659325160337298, "compression_ratio": 1.5258620689655173, "no_caption_prob": 2.7533706088433973e-05}, {"id": 530, "seek": 183992, "start": 1856.8000000000002, "end": 1862.76, "text": " And especially if you want to reach that 60 FPS magical number, you should avoid doing", "tokens": [50364, 286, 914, 11, 729, 366, 2673, 2489, 562, 264, 5765, 2744, 307, 1238, 1359, 13, 50740, 50740, 509, 393, 360, 12668, 295, 729, 11, 572, 2734, 13, 50892, 50892, 583, 498, 309, 311, 322, 257, 1329, 295, 257, 4714, 4959, 11, 291, 486, 722, 21814, 309, 13, 51208, 51208, 400, 2318, 498, 291, 528, 281, 2524, 300, 4060, 26429, 12066, 1230, 11, 291, 820, 5042, 884, 51506, 51506, 341, 294, 264, 1910, 2445, 886, 709, 420, 294, 633, 5623, 420, 721, 300, 366, 32279, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1659325160337298, "compression_ratio": 1.5258620689655173, "no_caption_prob": 2.7533706088433973e-05}, {"id": 531, "seek": 183992, "start": 1862.76, "end": 1868.8000000000002, "text": " this in the view function too much or in every update or things that are recurring.", "tokens": [50364, 286, 914, 11, 729, 366, 2673, 2489, 562, 264, 5765, 2744, 307, 1238, 1359, 13, 50740, 50740, 509, 393, 360, 12668, 295, 729, 11, 572, 2734, 13, 50892, 50892, 583, 498, 309, 311, 322, 257, 1329, 295, 257, 4714, 4959, 11, 291, 486, 722, 21814, 309, 13, 51208, 51208, 400, 2318, 498, 291, 528, 281, 2524, 300, 4060, 26429, 12066, 1230, 11, 291, 820, 5042, 884, 51506, 51506, 341, 294, 264, 1910, 2445, 886, 709, 420, 294, 633, 5623, 420, 721, 300, 366, 32279, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.1659325160337298, "compression_ratio": 1.5258620689655173, "no_caption_prob": 2.7533706088433973e-05}, {"id": 532, "seek": 186880, "start": 1868.8, "end": 1871.12, "text": " That's a great point.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 533, "seek": 186880, "start": 1871.12, "end": 1877.76, "text": " Elm's virtual DOM will avoid any unnecessary work as much as it can.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 534, "seek": 186880, "start": 1877.76, "end": 1882.8799999999999, "text": " If you have not received a new message, you will not update the model.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 535, "seek": 186880, "start": 1882.8799999999999, "end": 1887.34, "text": " And if you don't update the model, you don't call the view again.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 536, "seek": 186880, "start": 1887.34, "end": 1891.52, "text": " If between two frames no message happens, well, you're good.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 537, "seek": 186880, "start": 1891.52, "end": 1893.1599999999999, "text": " You have nothing to re render.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 538, "seek": 186880, "start": 1893.1599999999999, "end": 1894.96, "text": " You have no computation to do.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 539, "seek": 186880, "start": 1894.96, "end": 1897.48, "text": " But if you have timed out every millisecond.", "tokens": [50364, 663, 311, 257, 869, 935, 13, 50480, 50480, 2699, 76, 311, 6374, 35727, 486, 5042, 604, 19350, 589, 382, 709, 382, 309, 393, 13, 50812, 50812, 759, 291, 362, 406, 4613, 257, 777, 3636, 11, 291, 486, 406, 5623, 264, 2316, 13, 51068, 51068, 400, 498, 291, 500, 380, 5623, 264, 2316, 11, 291, 500, 380, 818, 264, 1910, 797, 13, 51291, 51291, 759, 1296, 732, 12083, 572, 3636, 2314, 11, 731, 11, 291, 434, 665, 13, 51500, 51500, 509, 362, 1825, 281, 319, 15529, 13, 51582, 51582, 509, 362, 572, 24903, 281, 360, 13, 51672, 51672, 583, 498, 291, 362, 44696, 484, 633, 27940, 18882, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.24195382401749893, "compression_ratio": 1.6527196652719665, "no_caption_prob": 3.16921723424457e-05}, {"id": 540, "seek": 189748, "start": 1897.48, "end": 1902.64, "text": " Then you're calling update every millisecond.", "tokens": [50364, 1396, 291, 434, 5141, 5623, 633, 27940, 18882, 13, 50622, 50622, 400, 291, 362, 3165, 7897, 281, 4813, 294, 472, 3920, 13, 50870, 50870, 407, 1203, 2203, 281, 312, 1596, 2370, 13, 51010, 51010, 286, 360, 519, 300, 264, 6374, 35727, 420, 2699, 76, 17330, 11185, 307, 5141, 264, 1910, 787, 1564, 680, 51380, 51380, 9603, 3920, 13, 51510, 51510, 407, 264, 1910, 393, 312, 3165, 1413, 382, 2964, 382, 264, 9205, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2451096571885146, "compression_ratio": 1.4845360824742269, "no_caption_prob": 1.5689032807131298e-05}, {"id": 541, "seek": 189748, "start": 1902.64, "end": 1907.6, "text": " And you have 16 messages to handle in one frame.", "tokens": [50364, 1396, 291, 434, 5141, 5623, 633, 27940, 18882, 13, 50622, 50622, 400, 291, 362, 3165, 7897, 281, 4813, 294, 472, 3920, 13, 50870, 50870, 407, 1203, 2203, 281, 312, 1596, 2370, 13, 51010, 51010, 286, 360, 519, 300, 264, 6374, 35727, 420, 2699, 76, 17330, 11185, 307, 5141, 264, 1910, 787, 1564, 680, 51380, 51380, 9603, 3920, 13, 51510, 51510, 407, 264, 1910, 393, 312, 3165, 1413, 382, 2964, 382, 264, 9205, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2451096571885146, "compression_ratio": 1.4845360824742269, "no_caption_prob": 1.5689032807131298e-05}, {"id": 542, "seek": 189748, "start": 1907.6, "end": 1910.4, "text": " So everything needs to be quite fast.", "tokens": [50364, 1396, 291, 434, 5141, 5623, 633, 27940, 18882, 13, 50622, 50622, 400, 291, 362, 3165, 7897, 281, 4813, 294, 472, 3920, 13, 50870, 50870, 407, 1203, 2203, 281, 312, 1596, 2370, 13, 51010, 51010, 286, 360, 519, 300, 264, 6374, 35727, 420, 2699, 76, 17330, 11185, 307, 5141, 264, 1910, 787, 1564, 680, 51380, 51380, 9603, 3920, 13, 51510, 51510, 407, 264, 1910, 393, 312, 3165, 1413, 382, 2964, 382, 264, 9205, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2451096571885146, "compression_ratio": 1.4845360824742269, "no_caption_prob": 1.5689032807131298e-05}, {"id": 543, "seek": 189748, "start": 1910.4, "end": 1917.8, "text": " I do think that the virtual DOM or Elm slash browser is calling the view only once per", "tokens": [50364, 1396, 291, 434, 5141, 5623, 633, 27940, 18882, 13, 50622, 50622, 400, 291, 362, 3165, 7897, 281, 4813, 294, 472, 3920, 13, 50870, 50870, 407, 1203, 2203, 281, 312, 1596, 2370, 13, 51010, 51010, 286, 360, 519, 300, 264, 6374, 35727, 420, 2699, 76, 17330, 11185, 307, 5141, 264, 1910, 787, 1564, 680, 51380, 51380, 9603, 3920, 13, 51510, 51510, 407, 264, 1910, 393, 312, 3165, 1413, 382, 2964, 382, 264, 9205, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2451096571885146, "compression_ratio": 1.4845360824742269, "no_caption_prob": 1.5689032807131298e-05}, {"id": 544, "seek": 189748, "start": 1917.8, "end": 1920.4, "text": " animation frame.", "tokens": [50364, 1396, 291, 434, 5141, 5623, 633, 27940, 18882, 13, 50622, 50622, 400, 291, 362, 3165, 7897, 281, 4813, 294, 472, 3920, 13, 50870, 50870, 407, 1203, 2203, 281, 312, 1596, 2370, 13, 51010, 51010, 286, 360, 519, 300, 264, 6374, 35727, 420, 2699, 76, 17330, 11185, 307, 5141, 264, 1910, 787, 1564, 680, 51380, 51380, 9603, 3920, 13, 51510, 51510, 407, 264, 1910, 393, 312, 3165, 1413, 382, 2964, 382, 264, 9205, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2451096571885146, "compression_ratio": 1.4845360824742269, "no_caption_prob": 1.5689032807131298e-05}, {"id": 545, "seek": 189748, "start": 1920.4, "end": 1926.08, "text": " So the view can be 16 times as slow as the updates.", "tokens": [50364, 1396, 291, 434, 5141, 5623, 633, 27940, 18882, 13, 50622, 50622, 400, 291, 362, 3165, 7897, 281, 4813, 294, 472, 3920, 13, 50870, 50870, 407, 1203, 2203, 281, 312, 1596, 2370, 13, 51010, 51010, 286, 360, 519, 300, 264, 6374, 35727, 420, 2699, 76, 17330, 11185, 307, 5141, 264, 1910, 787, 1564, 680, 51380, 51380, 9603, 3920, 13, 51510, 51510, 407, 264, 1910, 393, 312, 3165, 1413, 382, 2964, 382, 264, 9205, 13, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.2451096571885146, "compression_ratio": 1.4845360824742269, "no_caption_prob": 1.5689032807131298e-05}, {"id": 546, "seek": 192608, "start": 1926.08, "end": 1934.36, "text": " But still, you don't want to do too many messages if you can avoid it.", "tokens": [50364, 583, 920, 11, 291, 500, 380, 528, 281, 360, 886, 867, 7897, 498, 291, 393, 5042, 309, 13, 50778, 50778, 1779, 13, 50828, 50828, 400, 456, 311, 341, 2944, 293, 2235, 295, 291, 528, 281, 19719, 3389, 293, 291, 528, 428, 51148, 51148, 3089, 281, 312, 1481, 281, 589, 365, 13, 51248, 51248, 400, 729, 732, 721, 366, 2171, 412, 17439, 365, 1184, 661, 11, 597, 307, 983, 291, 534, 643, 51476, 51476, 281, 18927, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.18155238628387452, "compression_ratio": 1.5526315789473684, "no_caption_prob": 2.885635694838129e-05}, {"id": 547, "seek": 192608, "start": 1934.36, "end": 1935.36, "text": " Right.", "tokens": [50364, 583, 920, 11, 291, 500, 380, 528, 281, 360, 886, 867, 7897, 498, 291, 393, 5042, 309, 13, 50778, 50778, 1779, 13, 50828, 50828, 400, 456, 311, 341, 2944, 293, 2235, 295, 291, 528, 281, 19719, 3389, 293, 291, 528, 428, 51148, 51148, 3089, 281, 312, 1481, 281, 589, 365, 13, 51248, 51248, 400, 729, 732, 721, 366, 2171, 412, 17439, 365, 1184, 661, 11, 597, 307, 983, 291, 534, 643, 51476, 51476, 281, 18927, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.18155238628387452, "compression_ratio": 1.5526315789473684, "no_caption_prob": 2.885635694838129e-05}, {"id": 548, "seek": 192608, "start": 1935.36, "end": 1941.76, "text": " And there's this push and pull of you want to optimize performance and you want your", "tokens": [50364, 583, 920, 11, 291, 500, 380, 528, 281, 360, 886, 867, 7897, 498, 291, 393, 5042, 309, 13, 50778, 50778, 1779, 13, 50828, 50828, 400, 456, 311, 341, 2944, 293, 2235, 295, 291, 528, 281, 19719, 3389, 293, 291, 528, 428, 51148, 51148, 3089, 281, 312, 1481, 281, 589, 365, 13, 51248, 51248, 400, 729, 732, 721, 366, 2171, 412, 17439, 365, 1184, 661, 11, 597, 307, 983, 291, 534, 643, 51476, 51476, 281, 18927, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.18155238628387452, "compression_ratio": 1.5526315789473684, "no_caption_prob": 2.885635694838129e-05}, {"id": 549, "seek": 192608, "start": 1941.76, "end": 1943.76, "text": " code to be nice to work with.", "tokens": [50364, 583, 920, 11, 291, 500, 380, 528, 281, 360, 886, 867, 7897, 498, 291, 393, 5042, 309, 13, 50778, 50778, 1779, 13, 50828, 50828, 400, 456, 311, 341, 2944, 293, 2235, 295, 291, 528, 281, 19719, 3389, 293, 291, 528, 428, 51148, 51148, 3089, 281, 312, 1481, 281, 589, 365, 13, 51248, 51248, 400, 729, 732, 721, 366, 2171, 412, 17439, 365, 1184, 661, 11, 597, 307, 983, 291, 534, 643, 51476, 51476, 281, 18927, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.18155238628387452, "compression_ratio": 1.5526315789473684, "no_caption_prob": 2.885635694838129e-05}, {"id": 550, "seek": 192608, "start": 1943.76, "end": 1948.32, "text": " And those two things are sometimes at odds with each other, which is why you really need", "tokens": [50364, 583, 920, 11, 291, 500, 380, 528, 281, 360, 886, 867, 7897, 498, 291, 393, 5042, 309, 13, 50778, 50778, 1779, 13, 50828, 50828, 400, 456, 311, 341, 2944, 293, 2235, 295, 291, 528, 281, 19719, 3389, 293, 291, 528, 428, 51148, 51148, 3089, 281, 312, 1481, 281, 589, 365, 13, 51248, 51248, 400, 729, 732, 721, 366, 2171, 412, 17439, 365, 1184, 661, 11, 597, 307, 983, 291, 534, 643, 51476, 51476, 281, 18927, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.18155238628387452, "compression_ratio": 1.5526315789473684, "no_caption_prob": 2.885635694838129e-05}, {"id": 551, "seek": 192608, "start": 1948.32, "end": 1950.1999999999998, "text": " to benchmark.", "tokens": [50364, 583, 920, 11, 291, 500, 380, 528, 281, 360, 886, 867, 7897, 498, 291, 393, 5042, 309, 13, 50778, 50778, 1779, 13, 50828, 50828, 400, 456, 311, 341, 2944, 293, 2235, 295, 291, 528, 281, 19719, 3389, 293, 291, 528, 428, 51148, 51148, 3089, 281, 312, 1481, 281, 589, 365, 13, 51248, 51248, 400, 729, 732, 721, 366, 2171, 412, 17439, 365, 1184, 661, 11, 597, 307, 983, 291, 534, 643, 51476, 51476, 281, 18927, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.18155238628387452, "compression_ratio": 1.5526315789473684, "no_caption_prob": 2.885635694838129e-05}, {"id": 552, "seek": 195020, "start": 1950.2, "end": 1956.48, "text": " So like, for example, like one of the for me, one of the most important design principles", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 411, 472, 295, 264, 337, 385, 11, 472, 295, 264, 881, 1021, 1715, 9156, 50678, 50678, 294, 364, 2699, 76, 3861, 307, 281, 28446, 1785, 11, 406, 3531, 1785, 13, 50941, 50941, 759, 291, 362, 1785, 4282, 1688, 807, 293, 885, 18949, 11, 550, 291, 500, 380, 362, 3190, 689, 51246, 51246, 721, 393, 483, 342, 1220, 293, 484, 295, 4002, 293, 15120, 300, 393, 808, 490, 300, 13, 51474, 51474, 865, 11, 291, 528, 281, 4009, 1785, 457, 406, 28446, 1785, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.1278250704529465, "compression_ratio": 1.651376146788991, "no_caption_prob": 2.9771963454550132e-05}, {"id": 553, "seek": 195020, "start": 1956.48, "end": 1961.74, "text": " in an Elm application is to derive state, not store state.", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 411, 472, 295, 264, 337, 385, 11, 472, 295, 264, 881, 1021, 1715, 9156, 50678, 50678, 294, 364, 2699, 76, 3861, 307, 281, 28446, 1785, 11, 406, 3531, 1785, 13, 50941, 50941, 759, 291, 362, 1785, 4282, 1688, 807, 293, 885, 18949, 11, 550, 291, 500, 380, 362, 3190, 689, 51246, 51246, 721, 393, 483, 342, 1220, 293, 484, 295, 4002, 293, 15120, 300, 393, 808, 490, 300, 13, 51474, 51474, 865, 11, 291, 528, 281, 4009, 1785, 457, 406, 28446, 1785, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.1278250704529465, "compression_ratio": 1.651376146788991, "no_caption_prob": 2.9771963454550132e-05}, {"id": 554, "seek": 195020, "start": 1961.74, "end": 1967.8400000000001, "text": " If you have state trickling through and being derived, then you don't have places where", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 411, 472, 295, 264, 337, 385, 11, 472, 295, 264, 881, 1021, 1715, 9156, 50678, 50678, 294, 364, 2699, 76, 3861, 307, 281, 28446, 1785, 11, 406, 3531, 1785, 13, 50941, 50941, 759, 291, 362, 1785, 4282, 1688, 807, 293, 885, 18949, 11, 550, 291, 500, 380, 362, 3190, 689, 51246, 51246, 721, 393, 483, 342, 1220, 293, 484, 295, 4002, 293, 15120, 300, 393, 808, 490, 300, 13, 51474, 51474, 865, 11, 291, 528, 281, 4009, 1785, 457, 406, 28446, 1785, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.1278250704529465, "compression_ratio": 1.651376146788991, "no_caption_prob": 2.9771963454550132e-05}, {"id": 555, "seek": 195020, "start": 1967.8400000000001, "end": 1972.4, "text": " things can get stale and out of date and bugs that can come from that.", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 411, 472, 295, 264, 337, 385, 11, 472, 295, 264, 881, 1021, 1715, 9156, 50678, 50678, 294, 364, 2699, 76, 3861, 307, 281, 28446, 1785, 11, 406, 3531, 1785, 13, 50941, 50941, 759, 291, 362, 1785, 4282, 1688, 807, 293, 885, 18949, 11, 550, 291, 500, 380, 362, 3190, 689, 51246, 51246, 721, 393, 483, 342, 1220, 293, 484, 295, 4002, 293, 15120, 300, 393, 808, 490, 300, 13, 51474, 51474, 865, 11, 291, 528, 281, 4009, 1785, 457, 406, 28446, 1785, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.1278250704529465, "compression_ratio": 1.651376146788991, "no_caption_prob": 2.9771963454550132e-05}, {"id": 556, "seek": 195020, "start": 1972.4, "end": 1975.56, "text": " Yeah, you want to source state but not derive state.", "tokens": [50364, 407, 411, 11, 337, 1365, 11, 411, 472, 295, 264, 337, 385, 11, 472, 295, 264, 881, 1021, 1715, 9156, 50678, 50678, 294, 364, 2699, 76, 3861, 307, 281, 28446, 1785, 11, 406, 3531, 1785, 13, 50941, 50941, 759, 291, 362, 1785, 4282, 1688, 807, 293, 885, 18949, 11, 550, 291, 500, 380, 362, 3190, 689, 51246, 51246, 721, 393, 483, 342, 1220, 293, 484, 295, 4002, 293, 15120, 300, 393, 808, 490, 300, 13, 51474, 51474, 865, 11, 291, 528, 281, 4009, 1785, 457, 406, 28446, 1785, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.1278250704529465, "compression_ratio": 1.651376146788991, "no_caption_prob": 2.9771963454550132e-05}, {"id": 557, "seek": 197556, "start": 1975.56, "end": 1982.6799999999998, "text": " Well, you want to derive state from the things in the model is what I, you know, we're saying", "tokens": [50364, 1042, 11, 291, 528, 281, 28446, 1785, 490, 264, 721, 294, 264, 2316, 307, 437, 286, 11, 291, 458, 11, 321, 434, 1566, 50720, 50720, 264, 912, 551, 365, 819, 2283, 510, 13, 50792, 50792, 583, 1338, 11, 370, 411, 11, 1936, 500, 380, 362, 1589, 300, 393, 312, 18949, 490, 428, 1785, 13, 51122, 51122, 1468, 380, 23976, 300, 294, 3866, 3190, 11, 570, 300, 3190, 337, 15120, 281, 1051, 293, 337, 721, 51318, 51318, 281, 352, 342, 1220, 13, 51374, 51374, 400, 309, 445, 1669, 2699, 76, 1101, 281, 589, 365, 293, 1669, 428, 3089, 1570, 7426, 25806, 293, 3571, 51584, 51584, 281, 6909, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11058451678301837, "compression_ratio": 1.6718146718146718, "no_caption_prob": 0.00012146728840889409}, {"id": 558, "seek": 197556, "start": 1982.6799999999998, "end": 1984.12, "text": " the same thing with different words here.", "tokens": [50364, 1042, 11, 291, 528, 281, 28446, 1785, 490, 264, 721, 294, 264, 2316, 307, 437, 286, 11, 291, 458, 11, 321, 434, 1566, 50720, 50720, 264, 912, 551, 365, 819, 2283, 510, 13, 50792, 50792, 583, 1338, 11, 370, 411, 11, 1936, 500, 380, 362, 1589, 300, 393, 312, 18949, 490, 428, 1785, 13, 51122, 51122, 1468, 380, 23976, 300, 294, 3866, 3190, 11, 570, 300, 3190, 337, 15120, 281, 1051, 293, 337, 721, 51318, 51318, 281, 352, 342, 1220, 13, 51374, 51374, 400, 309, 445, 1669, 2699, 76, 1101, 281, 589, 365, 293, 1669, 428, 3089, 1570, 7426, 25806, 293, 3571, 51584, 51584, 281, 6909, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11058451678301837, "compression_ratio": 1.6718146718146718, "no_caption_prob": 0.00012146728840889409}, {"id": 559, "seek": 197556, "start": 1984.12, "end": 1990.72, "text": " But yeah, so like, basically don't have information that can be derived from your state.", "tokens": [50364, 1042, 11, 291, 528, 281, 28446, 1785, 490, 264, 721, 294, 264, 2316, 307, 437, 286, 11, 291, 458, 11, 321, 434, 1566, 50720, 50720, 264, 912, 551, 365, 819, 2283, 510, 13, 50792, 50792, 583, 1338, 11, 370, 411, 11, 1936, 500, 380, 362, 1589, 300, 393, 312, 18949, 490, 428, 1785, 13, 51122, 51122, 1468, 380, 23976, 300, 294, 3866, 3190, 11, 570, 300, 3190, 337, 15120, 281, 1051, 293, 337, 721, 51318, 51318, 281, 352, 342, 1220, 13, 51374, 51374, 400, 309, 445, 1669, 2699, 76, 1101, 281, 589, 365, 293, 1669, 428, 3089, 1570, 7426, 25806, 293, 3571, 51584, 51584, 281, 6909, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11058451678301837, "compression_ratio": 1.6718146718146718, "no_caption_prob": 0.00012146728840889409}, {"id": 560, "seek": 197556, "start": 1990.72, "end": 1994.6399999999999, "text": " Don't duplicate that in multiple places, because that places for bugs to happen and for things", "tokens": [50364, 1042, 11, 291, 528, 281, 28446, 1785, 490, 264, 721, 294, 264, 2316, 307, 437, 286, 11, 291, 458, 11, 321, 434, 1566, 50720, 50720, 264, 912, 551, 365, 819, 2283, 510, 13, 50792, 50792, 583, 1338, 11, 370, 411, 11, 1936, 500, 380, 362, 1589, 300, 393, 312, 18949, 490, 428, 1785, 13, 51122, 51122, 1468, 380, 23976, 300, 294, 3866, 3190, 11, 570, 300, 3190, 337, 15120, 281, 1051, 293, 337, 721, 51318, 51318, 281, 352, 342, 1220, 13, 51374, 51374, 400, 309, 445, 1669, 2699, 76, 1101, 281, 589, 365, 293, 1669, 428, 3089, 1570, 7426, 25806, 293, 3571, 51584, 51584, 281, 6909, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11058451678301837, "compression_ratio": 1.6718146718146718, "no_caption_prob": 0.00012146728840889409}, {"id": 561, "seek": 197556, "start": 1994.6399999999999, "end": 1995.76, "text": " to go stale.", "tokens": [50364, 1042, 11, 291, 528, 281, 28446, 1785, 490, 264, 721, 294, 264, 2316, 307, 437, 286, 11, 291, 458, 11, 321, 434, 1566, 50720, 50720, 264, 912, 551, 365, 819, 2283, 510, 13, 50792, 50792, 583, 1338, 11, 370, 411, 11, 1936, 500, 380, 362, 1589, 300, 393, 312, 18949, 490, 428, 1785, 13, 51122, 51122, 1468, 380, 23976, 300, 294, 3866, 3190, 11, 570, 300, 3190, 337, 15120, 281, 1051, 293, 337, 721, 51318, 51318, 281, 352, 342, 1220, 13, 51374, 51374, 400, 309, 445, 1669, 2699, 76, 1101, 281, 589, 365, 293, 1669, 428, 3089, 1570, 7426, 25806, 293, 3571, 51584, 51584, 281, 6909, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11058451678301837, "compression_ratio": 1.6718146718146718, "no_caption_prob": 0.00012146728840889409}, {"id": 562, "seek": 197556, "start": 1995.76, "end": 1999.96, "text": " And it just makes Elm better to work with and makes your code less bug prone and easier", "tokens": [50364, 1042, 11, 291, 528, 281, 28446, 1785, 490, 264, 721, 294, 264, 2316, 307, 437, 286, 11, 291, 458, 11, 321, 434, 1566, 50720, 50720, 264, 912, 551, 365, 819, 2283, 510, 13, 50792, 50792, 583, 1338, 11, 370, 411, 11, 1936, 500, 380, 362, 1589, 300, 393, 312, 18949, 490, 428, 1785, 13, 51122, 51122, 1468, 380, 23976, 300, 294, 3866, 3190, 11, 570, 300, 3190, 337, 15120, 281, 1051, 293, 337, 721, 51318, 51318, 281, 352, 342, 1220, 13, 51374, 51374, 400, 309, 445, 1669, 2699, 76, 1101, 281, 589, 365, 293, 1669, 428, 3089, 1570, 7426, 25806, 293, 3571, 51584, 51584, 281, 6909, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11058451678301837, "compression_ratio": 1.6718146718146718, "no_caption_prob": 0.00012146728840889409}, {"id": 563, "seek": 197556, "start": 1999.96, "end": 2000.96, "text": " to maintain.", "tokens": [50364, 1042, 11, 291, 528, 281, 28446, 1785, 490, 264, 721, 294, 264, 2316, 307, 437, 286, 11, 291, 458, 11, 321, 434, 1566, 50720, 50720, 264, 912, 551, 365, 819, 2283, 510, 13, 50792, 50792, 583, 1338, 11, 370, 411, 11, 1936, 500, 380, 362, 1589, 300, 393, 312, 18949, 490, 428, 1785, 13, 51122, 51122, 1468, 380, 23976, 300, 294, 3866, 3190, 11, 570, 300, 3190, 337, 15120, 281, 1051, 293, 337, 721, 51318, 51318, 281, 352, 342, 1220, 13, 51374, 51374, 400, 309, 445, 1669, 2699, 76, 1101, 281, 589, 365, 293, 1669, 428, 3089, 1570, 7426, 25806, 293, 3571, 51584, 51584, 281, 6909, 13, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.11058451678301837, "compression_ratio": 1.6718146718146718, "no_caption_prob": 0.00012146728840889409}, {"id": 564, "seek": 200096, "start": 2000.96, "end": 2006.76, "text": " So like, if that isn't giving you performance problems, you don't want to like memoize things", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 565, "seek": 200096, "start": 2006.76, "end": 2009.0, "text": " to avoid computations.", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 566, "seek": 200096, "start": 2009.0, "end": 2010.6000000000001, "text": " That should be your last resort.", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 567, "seek": 200096, "start": 2010.6000000000001, "end": 2015.72, "text": " If you in some cases, you may need to do that, but you want to avoid it if you can.", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 568, "seek": 200096, "start": 2015.72, "end": 2021.72, "text": " And so use this is one place that HTML dot lazy can really help out right is that could", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 569, "seek": 200096, "start": 2021.72, "end": 2025.08, "text": " take care of memoizing to a certain extent for you.", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 570, "seek": 200096, "start": 2025.08, "end": 2027.48, "text": " Do you want to introduce what HTML dot lazy does?", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 571, "seek": 200096, "start": 2027.48, "end": 2028.52, "text": " Yeah, sure.", "tokens": [50364, 407, 411, 11, 498, 300, 1943, 380, 2902, 291, 3389, 2740, 11, 291, 500, 380, 528, 281, 411, 35900, 1125, 721, 50654, 50654, 281, 5042, 2807, 763, 13, 50766, 50766, 663, 820, 312, 428, 1036, 19606, 13, 50846, 50846, 759, 291, 294, 512, 3331, 11, 291, 815, 643, 281, 360, 300, 11, 457, 291, 528, 281, 5042, 309, 498, 291, 393, 13, 51102, 51102, 400, 370, 764, 341, 307, 472, 1081, 300, 17995, 5893, 14847, 393, 534, 854, 484, 558, 307, 300, 727, 51402, 51402, 747, 1127, 295, 35900, 3319, 281, 257, 1629, 8396, 337, 291, 13, 51570, 51570, 1144, 291, 528, 281, 5366, 437, 17995, 5893, 14847, 775, 30, 51690, 51690, 865, 11, 988, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.14884406725565594, "compression_ratio": 1.6477272727272727, "no_caption_prob": 2.8408905563992448e-05}, {"id": 572, "seek": 202852, "start": 2028.52, "end": 2034.6, "text": " So as I previously Elm will not call the view function if the model didn't change.", "tokens": [50364, 407, 382, 286, 8046, 2699, 76, 486, 406, 818, 264, 1910, 2445, 498, 264, 2316, 994, 380, 1319, 13, 50668, 50668, 407, 309, 775, 300, 412, 264, 5593, 295, 264, 3861, 13, 50792, 50792, 583, 291, 393, 611, 733, 295, 319, 4445, 300, 9952, 445, 538, 30885, 1688, 428, 1910, 3089, 365, 51099, 51099, 17995, 14847, 13, 51149, 51149, 407, 1936, 437, 309, 775, 307, 562, 291, 456, 311, 17995, 5893, 14847, 5893, 14847, 11, 597, 597, 307, 257, 2445, 51466, 51466, 597, 2516, 1071, 2445, 295, 1910, 2445, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.18784669105042803, "compression_ratio": 1.6244541484716157, "no_caption_prob": 8.990747915049724e-07}, {"id": 573, "seek": 202852, "start": 2034.6, "end": 2037.08, "text": " So it does that at the root of the application.", "tokens": [50364, 407, 382, 286, 8046, 2699, 76, 486, 406, 818, 264, 1910, 2445, 498, 264, 2316, 994, 380, 1319, 13, 50668, 50668, 407, 309, 775, 300, 412, 264, 5593, 295, 264, 3861, 13, 50792, 50792, 583, 291, 393, 611, 733, 295, 319, 4445, 300, 9952, 445, 538, 30885, 1688, 428, 1910, 3089, 365, 51099, 51099, 17995, 14847, 13, 51149, 51149, 407, 1936, 437, 309, 775, 307, 562, 291, 456, 311, 17995, 5893, 14847, 5893, 14847, 11, 597, 597, 307, 257, 2445, 51466, 51466, 597, 2516, 1071, 2445, 295, 1910, 2445, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.18784669105042803, "compression_ratio": 1.6244541484716157, "no_caption_prob": 8.990747915049724e-07}, {"id": 574, "seek": 202852, "start": 2037.08, "end": 2043.22, "text": " But you can also kind of re implement that logic just by sprinkling your view code with", "tokens": [50364, 407, 382, 286, 8046, 2699, 76, 486, 406, 818, 264, 1910, 2445, 498, 264, 2316, 994, 380, 1319, 13, 50668, 50668, 407, 309, 775, 300, 412, 264, 5593, 295, 264, 3861, 13, 50792, 50792, 583, 291, 393, 611, 733, 295, 319, 4445, 300, 9952, 445, 538, 30885, 1688, 428, 1910, 3089, 365, 51099, 51099, 17995, 14847, 13, 51149, 51149, 407, 1936, 437, 309, 775, 307, 562, 291, 456, 311, 17995, 5893, 14847, 5893, 14847, 11, 597, 597, 307, 257, 2445, 51466, 51466, 597, 2516, 1071, 2445, 295, 1910, 2445, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.18784669105042803, "compression_ratio": 1.6244541484716157, "no_caption_prob": 8.990747915049724e-07}, {"id": 575, "seek": 202852, "start": 2043.22, "end": 2044.22, "text": " HTML lazy.", "tokens": [50364, 407, 382, 286, 8046, 2699, 76, 486, 406, 818, 264, 1910, 2445, 498, 264, 2316, 994, 380, 1319, 13, 50668, 50668, 407, 309, 775, 300, 412, 264, 5593, 295, 264, 3861, 13, 50792, 50792, 583, 291, 393, 611, 733, 295, 319, 4445, 300, 9952, 445, 538, 30885, 1688, 428, 1910, 3089, 365, 51099, 51099, 17995, 14847, 13, 51149, 51149, 407, 1936, 437, 309, 775, 307, 562, 291, 456, 311, 17995, 5893, 14847, 5893, 14847, 11, 597, 597, 307, 257, 2445, 51466, 51466, 597, 2516, 1071, 2445, 295, 1910, 2445, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.18784669105042803, "compression_ratio": 1.6244541484716157, "no_caption_prob": 8.990747915049724e-07}, {"id": 576, "seek": 202852, "start": 2044.22, "end": 2050.56, "text": " So basically what it does is when you there's HTML dot lazy dot lazy, which which is a function", "tokens": [50364, 407, 382, 286, 8046, 2699, 76, 486, 406, 818, 264, 1910, 2445, 498, 264, 2316, 994, 380, 1319, 13, 50668, 50668, 407, 309, 775, 300, 412, 264, 5593, 295, 264, 3861, 13, 50792, 50792, 583, 291, 393, 611, 733, 295, 319, 4445, 300, 9952, 445, 538, 30885, 1688, 428, 1910, 3089, 365, 51099, 51099, 17995, 14847, 13, 51149, 51149, 407, 1936, 437, 309, 775, 307, 562, 291, 456, 311, 17995, 5893, 14847, 5893, 14847, 11, 597, 597, 307, 257, 2445, 51466, 51466, 597, 2516, 1071, 2445, 295, 1910, 2445, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.18784669105042803, "compression_ratio": 1.6244541484716157, "no_caption_prob": 8.990747915049724e-07}, {"id": 577, "seek": 202852, "start": 2050.56, "end": 2052.92, "text": " which takes another function of view function.", "tokens": [50364, 407, 382, 286, 8046, 2699, 76, 486, 406, 818, 264, 1910, 2445, 498, 264, 2316, 994, 380, 1319, 13, 50668, 50668, 407, 309, 775, 300, 412, 264, 5593, 295, 264, 3861, 13, 50792, 50792, 583, 291, 393, 611, 733, 295, 319, 4445, 300, 9952, 445, 538, 30885, 1688, 428, 1910, 3089, 365, 51099, 51099, 17995, 14847, 13, 51149, 51149, 407, 1936, 437, 309, 775, 307, 562, 291, 456, 311, 17995, 5893, 14847, 5893, 14847, 11, 597, 597, 307, 257, 2445, 51466, 51466, 597, 2516, 1071, 2445, 295, 1910, 2445, 13, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.18784669105042803, "compression_ratio": 1.6244541484716157, "no_caption_prob": 8.990747915049724e-07}, {"id": 578, "seek": 205292, "start": 2052.92, "end": 2058.92, "text": " So something that returns HTML and takes one arguments to if you use lazy to three, if", "tokens": [50364, 407, 746, 300, 11247, 17995, 293, 2516, 472, 12869, 281, 498, 291, 764, 14847, 281, 1045, 11, 498, 50664, 50664, 291, 747, 764, 14847, 1045, 11, 5183, 13, 50826, 50826, 400, 498, 264, 12869, 281, 300, 2445, 630, 406, 1319, 11, 550, 309, 486, 10023, 264, 589, 13, 51100, 51100, 467, 486, 10023, 15866, 264, 2445, 300, 291, 4678, 281, 14847, 13, 51364, 51364, 407, 300, 307, 588, 1481, 570, 498, 291, 362, 746, 300, 486, 13752, 1319, 411, 257, 23117, 2671, 260, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.19434874708002264, "compression_ratio": 1.7281553398058251, "no_caption_prob": 2.429903543088585e-05}, {"id": 579, "seek": 205292, "start": 2058.92, "end": 2062.16, "text": " you take use lazy three, etc.", "tokens": [50364, 407, 746, 300, 11247, 17995, 293, 2516, 472, 12869, 281, 498, 291, 764, 14847, 281, 1045, 11, 498, 50664, 50664, 291, 747, 764, 14847, 1045, 11, 5183, 13, 50826, 50826, 400, 498, 264, 12869, 281, 300, 2445, 630, 406, 1319, 11, 550, 309, 486, 10023, 264, 589, 13, 51100, 51100, 467, 486, 10023, 15866, 264, 2445, 300, 291, 4678, 281, 14847, 13, 51364, 51364, 407, 300, 307, 588, 1481, 570, 498, 291, 362, 746, 300, 486, 13752, 1319, 411, 257, 23117, 2671, 260, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.19434874708002264, "compression_ratio": 1.7281553398058251, "no_caption_prob": 2.429903543088585e-05}, {"id": 580, "seek": 205292, "start": 2062.16, "end": 2067.64, "text": " And if the arguments to that function did not change, then it will skip the work.", "tokens": [50364, 407, 746, 300, 11247, 17995, 293, 2516, 472, 12869, 281, 498, 291, 764, 14847, 281, 1045, 11, 498, 50664, 50664, 291, 747, 764, 14847, 1045, 11, 5183, 13, 50826, 50826, 400, 498, 264, 12869, 281, 300, 2445, 630, 406, 1319, 11, 550, 309, 486, 10023, 264, 589, 13, 51100, 51100, 467, 486, 10023, 15866, 264, 2445, 300, 291, 4678, 281, 14847, 13, 51364, 51364, 407, 300, 307, 588, 1481, 570, 498, 291, 362, 746, 300, 486, 13752, 1319, 411, 257, 23117, 2671, 260, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.19434874708002264, "compression_ratio": 1.7281553398058251, "no_caption_prob": 2.429903543088585e-05}, {"id": 581, "seek": 205292, "start": 2067.64, "end": 2072.92, "text": " It will skip computing the function that you passed to lazy.", "tokens": [50364, 407, 746, 300, 11247, 17995, 293, 2516, 472, 12869, 281, 498, 291, 764, 14847, 281, 1045, 11, 498, 50664, 50664, 291, 747, 764, 14847, 1045, 11, 5183, 13, 50826, 50826, 400, 498, 264, 12869, 281, 300, 2445, 630, 406, 1319, 11, 550, 309, 486, 10023, 264, 589, 13, 51100, 51100, 467, 486, 10023, 15866, 264, 2445, 300, 291, 4678, 281, 14847, 13, 51364, 51364, 407, 300, 307, 588, 1481, 570, 498, 291, 362, 746, 300, 486, 13752, 1319, 411, 257, 23117, 2671, 260, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.19434874708002264, "compression_ratio": 1.7281553398058251, "no_caption_prob": 2.429903543088585e-05}, {"id": 582, "seek": 205292, "start": 2072.92, "end": 2079.32, "text": " So that is very nice because if you have something that will rarely change like a header footer,", "tokens": [50364, 407, 746, 300, 11247, 17995, 293, 2516, 472, 12869, 281, 498, 291, 764, 14847, 281, 1045, 11, 498, 50664, 50664, 291, 747, 764, 14847, 1045, 11, 5183, 13, 50826, 50826, 400, 498, 264, 12869, 281, 300, 2445, 630, 406, 1319, 11, 550, 309, 486, 10023, 264, 589, 13, 51100, 51100, 467, 486, 10023, 15866, 264, 2445, 300, 291, 4678, 281, 14847, 13, 51364, 51364, 407, 300, 307, 588, 1481, 570, 498, 291, 362, 746, 300, 486, 13752, 1319, 411, 257, 23117, 2671, 260, 11, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.19434874708002264, "compression_ratio": 1.7281553398058251, "no_caption_prob": 2.429903543088585e-05}, {"id": 583, "seek": 207932, "start": 2079.32, "end": 2085.56, "text": " a part of your another part of the page, which is pretty expensive to compute, but it rarely", "tokens": [50364, 257, 644, 295, 428, 1071, 644, 295, 264, 3028, 11, 597, 307, 1238, 5124, 281, 14722, 11, 457, 309, 13752, 50676, 50676, 2962, 11, 291, 445, 24745, 14847, 294, 456, 293, 291, 486, 5042, 257, 688, 295, 19350, 589, 13, 50976, 50976, 865, 11, 570, 958, 565, 11, 286, 478, 6125, 433, 264, 1379, 3028, 11, 309, 1582, 380, 14722, 300, 644, 295, 264, 3028, 13, 51240, 51240, 1779, 30, 51290, 51290, 865, 11, 291, 434, 1936, 27221, 281, 2699, 76, 807, 807, 264, 13397, 11, 309, 311, 1920, 411, 291, 434, 51560, 51560, 1940, 264, 12869, 300, 352, 807, 281, 512, 411, 1910, 36133, 2445, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.17118716884303736, "compression_ratio": 1.6567164179104477, "no_caption_prob": 1.5445926692336798e-05}, {"id": 584, "seek": 207932, "start": 2085.56, "end": 2091.56, "text": " changes, you just sprinkle lazy in there and you will avoid a lot of unnecessary work.", "tokens": [50364, 257, 644, 295, 428, 1071, 644, 295, 264, 3028, 11, 597, 307, 1238, 5124, 281, 14722, 11, 457, 309, 13752, 50676, 50676, 2962, 11, 291, 445, 24745, 14847, 294, 456, 293, 291, 486, 5042, 257, 688, 295, 19350, 589, 13, 50976, 50976, 865, 11, 570, 958, 565, 11, 286, 478, 6125, 433, 264, 1379, 3028, 11, 309, 1582, 380, 14722, 300, 644, 295, 264, 3028, 13, 51240, 51240, 1779, 30, 51290, 51290, 865, 11, 291, 434, 1936, 27221, 281, 2699, 76, 807, 807, 264, 13397, 11, 309, 311, 1920, 411, 291, 434, 51560, 51560, 1940, 264, 12869, 300, 352, 807, 281, 512, 411, 1910, 36133, 2445, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.17118716884303736, "compression_ratio": 1.6567164179104477, "no_caption_prob": 1.5445926692336798e-05}, {"id": 585, "seek": 207932, "start": 2091.56, "end": 2096.84, "text": " Yeah, because next time, I'm renders the whole page, it won't compute that part of the page.", "tokens": [50364, 257, 644, 295, 428, 1071, 644, 295, 264, 3028, 11, 597, 307, 1238, 5124, 281, 14722, 11, 457, 309, 13752, 50676, 50676, 2962, 11, 291, 445, 24745, 14847, 294, 456, 293, 291, 486, 5042, 257, 688, 295, 19350, 589, 13, 50976, 50976, 865, 11, 570, 958, 565, 11, 286, 478, 6125, 433, 264, 1379, 3028, 11, 309, 1582, 380, 14722, 300, 644, 295, 264, 3028, 13, 51240, 51240, 1779, 30, 51290, 51290, 865, 11, 291, 434, 1936, 27221, 281, 2699, 76, 807, 807, 264, 13397, 11, 309, 311, 1920, 411, 291, 434, 51560, 51560, 1940, 264, 12869, 300, 352, 807, 281, 512, 411, 1910, 36133, 2445, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.17118716884303736, "compression_ratio": 1.6567164179104477, "no_caption_prob": 1.5445926692336798e-05}, {"id": 586, "seek": 207932, "start": 2096.84, "end": 2097.84, "text": " Right?", "tokens": [50364, 257, 644, 295, 428, 1071, 644, 295, 264, 3028, 11, 597, 307, 1238, 5124, 281, 14722, 11, 457, 309, 13752, 50676, 50676, 2962, 11, 291, 445, 24745, 14847, 294, 456, 293, 291, 486, 5042, 257, 688, 295, 19350, 589, 13, 50976, 50976, 865, 11, 570, 958, 565, 11, 286, 478, 6125, 433, 264, 1379, 3028, 11, 309, 1582, 380, 14722, 300, 644, 295, 264, 3028, 13, 51240, 51240, 1779, 30, 51290, 51290, 865, 11, 291, 434, 1936, 27221, 281, 2699, 76, 807, 807, 264, 13397, 11, 309, 311, 1920, 411, 291, 434, 51560, 51560, 1940, 264, 12869, 300, 352, 807, 281, 512, 411, 1910, 36133, 2445, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.17118716884303736, "compression_ratio": 1.6567164179104477, "no_caption_prob": 1.5445926692336798e-05}, {"id": 587, "seek": 207932, "start": 2097.84, "end": 2103.2400000000002, "text": " Yeah, you're basically proving to Elm through through the signature, it's almost like you're", "tokens": [50364, 257, 644, 295, 428, 1071, 644, 295, 264, 3028, 11, 597, 307, 1238, 5124, 281, 14722, 11, 457, 309, 13752, 50676, 50676, 2962, 11, 291, 445, 24745, 14847, 294, 456, 293, 291, 486, 5042, 257, 688, 295, 19350, 589, 13, 50976, 50976, 865, 11, 570, 958, 565, 11, 286, 478, 6125, 433, 264, 1379, 3028, 11, 309, 1582, 380, 14722, 300, 644, 295, 264, 3028, 13, 51240, 51240, 1779, 30, 51290, 51290, 865, 11, 291, 434, 1936, 27221, 281, 2699, 76, 807, 807, 264, 13397, 11, 309, 311, 1920, 411, 291, 434, 51560, 51560, 1940, 264, 12869, 300, 352, 807, 281, 512, 411, 1910, 36133, 2445, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.17118716884303736, "compression_ratio": 1.6567164179104477, "no_caption_prob": 1.5445926692336798e-05}, {"id": 588, "seek": 207932, "start": 2103.2400000000002, "end": 2107.7200000000003, "text": " taking the arguments that go through to some like view helper function.", "tokens": [50364, 257, 644, 295, 428, 1071, 644, 295, 264, 3028, 11, 597, 307, 1238, 5124, 281, 14722, 11, 457, 309, 13752, 50676, 50676, 2962, 11, 291, 445, 24745, 14847, 294, 456, 293, 291, 486, 5042, 257, 688, 295, 19350, 589, 13, 50976, 50976, 865, 11, 570, 958, 565, 11, 286, 478, 6125, 433, 264, 1379, 3028, 11, 309, 1582, 380, 14722, 300, 644, 295, 264, 3028, 13, 51240, 51240, 1779, 30, 51290, 51290, 865, 11, 291, 434, 1936, 27221, 281, 2699, 76, 807, 807, 264, 13397, 11, 309, 311, 1920, 411, 291, 434, 51560, 51560, 1940, 264, 12869, 300, 352, 807, 281, 512, 411, 1910, 36133, 2445, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.17118716884303736, "compression_ratio": 1.6567164179104477, "no_caption_prob": 1.5445926692336798e-05}, {"id": 589, "seek": 210772, "start": 2107.72, "end": 2111.6, "text": " But instead of directly calling your view helper function with with the arguments it", "tokens": [50364, 583, 2602, 295, 3838, 5141, 428, 1910, 36133, 2445, 365, 365, 264, 12869, 309, 50558, 50558, 5946, 322, 428, 11, 291, 434, 2902, 613, 14847, 854, 433, 300, 1910, 36133, 2445, 11, 597, 2516, 50944, 50944, 364, 6770, 13, 51022, 51022, 400, 550, 291, 434, 8437, 729, 3539, 12869, 281, 14847, 13, 51217, 51217, 400, 309, 393, 293, 309, 393, 584, 11, 876, 11, 498, 11, 498, 341, 6770, 6132, 380, 3105, 11, 286, 478, 406, 516, 281, 51439, 51439, 319, 41117, 341, 2445, 570, 291, 600, 1936, 12785, 281, 2699, 76, 300, 729, 366, 264, 787, 721, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13289923761405198, "compression_ratio": 1.7541666666666667, "no_caption_prob": 1.2029241588606965e-05}, {"id": 590, "seek": 210772, "start": 2111.6, "end": 2119.3199999999997, "text": " depends on your, you're giving these lazy helpers that view helper function, which takes", "tokens": [50364, 583, 2602, 295, 3838, 5141, 428, 1910, 36133, 2445, 365, 365, 264, 12869, 309, 50558, 50558, 5946, 322, 428, 11, 291, 434, 2902, 613, 14847, 854, 433, 300, 1910, 36133, 2445, 11, 597, 2516, 50944, 50944, 364, 6770, 13, 51022, 51022, 400, 550, 291, 434, 8437, 729, 3539, 12869, 281, 14847, 13, 51217, 51217, 400, 309, 393, 293, 309, 393, 584, 11, 876, 11, 498, 11, 498, 341, 6770, 6132, 380, 3105, 11, 286, 478, 406, 516, 281, 51439, 51439, 319, 41117, 341, 2445, 570, 291, 600, 1936, 12785, 281, 2699, 76, 300, 729, 366, 264, 787, 721, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13289923761405198, "compression_ratio": 1.7541666666666667, "no_caption_prob": 1.2029241588606965e-05}, {"id": 591, "seek": 210772, "start": 2119.3199999999997, "end": 2120.8799999999997, "text": " an argument.", "tokens": [50364, 583, 2602, 295, 3838, 5141, 428, 1910, 36133, 2445, 365, 365, 264, 12869, 309, 50558, 50558, 5946, 322, 428, 11, 291, 434, 2902, 613, 14847, 854, 433, 300, 1910, 36133, 2445, 11, 597, 2516, 50944, 50944, 364, 6770, 13, 51022, 51022, 400, 550, 291, 434, 8437, 729, 3539, 12869, 281, 14847, 13, 51217, 51217, 400, 309, 393, 293, 309, 393, 584, 11, 876, 11, 498, 11, 498, 341, 6770, 6132, 380, 3105, 11, 286, 478, 406, 516, 281, 51439, 51439, 319, 41117, 341, 2445, 570, 291, 600, 1936, 12785, 281, 2699, 76, 300, 729, 366, 264, 787, 721, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13289923761405198, "compression_ratio": 1.7541666666666667, "no_caption_prob": 1.2029241588606965e-05}, {"id": 592, "seek": 210772, "start": 2120.8799999999997, "end": 2124.7799999999997, "text": " And then you're passing those actual arguments to lazy.", "tokens": [50364, 583, 2602, 295, 3838, 5141, 428, 1910, 36133, 2445, 365, 365, 264, 12869, 309, 50558, 50558, 5946, 322, 428, 11, 291, 434, 2902, 613, 14847, 854, 433, 300, 1910, 36133, 2445, 11, 597, 2516, 50944, 50944, 364, 6770, 13, 51022, 51022, 400, 550, 291, 434, 8437, 729, 3539, 12869, 281, 14847, 13, 51217, 51217, 400, 309, 393, 293, 309, 393, 584, 11, 876, 11, 498, 11, 498, 341, 6770, 6132, 380, 3105, 11, 286, 478, 406, 516, 281, 51439, 51439, 319, 41117, 341, 2445, 570, 291, 600, 1936, 12785, 281, 2699, 76, 300, 729, 366, 264, 787, 721, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13289923761405198, "compression_ratio": 1.7541666666666667, "no_caption_prob": 1.2029241588606965e-05}, {"id": 593, "seek": 210772, "start": 2124.7799999999997, "end": 2129.22, "text": " And it can and it can say, Oh, if, if this argument hasn't changed, I'm not going to", "tokens": [50364, 583, 2602, 295, 3838, 5141, 428, 1910, 36133, 2445, 365, 365, 264, 12869, 309, 50558, 50558, 5946, 322, 428, 11, 291, 434, 2902, 613, 14847, 854, 433, 300, 1910, 36133, 2445, 11, 597, 2516, 50944, 50944, 364, 6770, 13, 51022, 51022, 400, 550, 291, 434, 8437, 729, 3539, 12869, 281, 14847, 13, 51217, 51217, 400, 309, 393, 293, 309, 393, 584, 11, 876, 11, 498, 11, 498, 341, 6770, 6132, 380, 3105, 11, 286, 478, 406, 516, 281, 51439, 51439, 319, 41117, 341, 2445, 570, 291, 600, 1936, 12785, 281, 2699, 76, 300, 729, 366, 264, 787, 721, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13289923761405198, "compression_ratio": 1.7541666666666667, "no_caption_prob": 1.2029241588606965e-05}, {"id": 594, "seek": 210772, "start": 2129.22, "end": 2134.9199999999996, "text": " re invoke this function because you've basically proven to Elm that those are the only things", "tokens": [50364, 583, 2602, 295, 3838, 5141, 428, 1910, 36133, 2445, 365, 365, 264, 12869, 309, 50558, 50558, 5946, 322, 428, 11, 291, 434, 2902, 613, 14847, 854, 433, 300, 1910, 36133, 2445, 11, 597, 2516, 50944, 50944, 364, 6770, 13, 51022, 51022, 400, 550, 291, 434, 8437, 729, 3539, 12869, 281, 14847, 13, 51217, 51217, 400, 309, 393, 293, 309, 393, 584, 11, 876, 11, 498, 11, 498, 341, 6770, 6132, 380, 3105, 11, 286, 478, 406, 516, 281, 51439, 51439, 319, 41117, 341, 2445, 570, 291, 600, 1936, 12785, 281, 2699, 76, 300, 729, 366, 264, 787, 721, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.13289923761405198, "compression_ratio": 1.7541666666666667, "no_caption_prob": 1.2029241588606965e-05}, {"id": 595, "seek": 213492, "start": 2134.92, "end": 2139.04, "text": " that can cause that function to render a different result since they're all pure functions.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 596, "seek": 213492, "start": 2139.04, "end": 2140.04, "text": " Yeah.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 597, "seek": 213492, "start": 2140.04, "end": 2141.28, "text": " So that is very powerful.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 598, "seek": 213492, "start": 2141.28, "end": 2143.08, "text": " And that is very easy to add.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 599, "seek": 213492, "start": 2143.08, "end": 2144.08, "text": " Yeah.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 600, "seek": 213492, "start": 2144.08, "end": 2151.04, "text": " The only problem is that is also very easy to mess up in any way that is very non Elm", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 601, "seek": 213492, "start": 2151.04, "end": 2152.04, "text": " ish.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 602, "seek": 213492, "start": 2152.04, "end": 2153.04, "text": " Yeah.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 603, "seek": 213492, "start": 2153.04, "end": 2158.32, "text": " So what actually needs to work for lazy to work well is that every argument needs to", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 604, "seek": 213492, "start": 2158.32, "end": 2162.32, "text": " be needs to have the same reference as last call.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 605, "seek": 213492, "start": 2162.32, "end": 2163.32, "text": " Right.", "tokens": [50364, 300, 393, 3082, 300, 2445, 281, 15529, 257, 819, 1874, 1670, 436, 434, 439, 6075, 6828, 13, 50570, 50570, 865, 13, 50620, 50620, 407, 300, 307, 588, 4005, 13, 50682, 50682, 400, 300, 307, 588, 1858, 281, 909, 13, 50772, 50772, 865, 13, 50822, 50822, 440, 787, 1154, 307, 300, 307, 611, 588, 1858, 281, 2082, 493, 294, 604, 636, 300, 307, 588, 2107, 2699, 76, 51170, 51170, 307, 71, 13, 51220, 51220, 865, 13, 51270, 51270, 407, 437, 767, 2203, 281, 589, 337, 14847, 281, 589, 731, 307, 300, 633, 6770, 2203, 281, 51534, 51534, 312, 2203, 281, 362, 264, 912, 6408, 382, 1036, 818, 13, 51734, 51734, 1779, 13, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1916776408319888, "compression_ratio": 1.7847533632286996, "no_caption_prob": 1.3631200999952853e-05}, {"id": 606, "seek": 216332, "start": 2163.32, "end": 2170.1200000000003, "text": " So what it, what Elm under the hood does is for every argument that you pass to the function,", "tokens": [50364, 407, 437, 309, 11, 437, 2699, 76, 833, 264, 13376, 775, 307, 337, 633, 6770, 300, 291, 1320, 281, 264, 2445, 11, 50704, 50704, 3009, 264, 2445, 2564, 11, 309, 775, 2681, 2681, 13, 50848, 50848, 407, 307, 309, 264, 912, 2445, 382, 949, 1228, 2681, 2681, 420, 572, 15508, 6915, 15508, 6915, 13, 51176, 51176, 407, 11, 370, 498, 309, 311, 264, 912, 11, 550, 309, 1542, 412, 264, 958, 6770, 13, 51384, 51384, 759, 309, 311, 300, 311, 264, 912, 11, 5183, 11, 5183, 13, 51512, 51512, 400, 498, 472, 295, 552, 307, 406, 264, 912, 11, 550, 309, 486, 48000, 1169, 264, 2445, 13, 51724, 51724, 286, 536, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19311112370984307, "compression_ratio": 1.9116279069767441, "no_caption_prob": 2.50711109401891e-05}, {"id": 607, "seek": 216332, "start": 2170.1200000000003, "end": 2173.0, "text": " including the function itself, it does equal equal.", "tokens": [50364, 407, 437, 309, 11, 437, 2699, 76, 833, 264, 13376, 775, 307, 337, 633, 6770, 300, 291, 1320, 281, 264, 2445, 11, 50704, 50704, 3009, 264, 2445, 2564, 11, 309, 775, 2681, 2681, 13, 50848, 50848, 407, 307, 309, 264, 912, 2445, 382, 949, 1228, 2681, 2681, 420, 572, 15508, 6915, 15508, 6915, 13, 51176, 51176, 407, 11, 370, 498, 309, 311, 264, 912, 11, 550, 309, 1542, 412, 264, 958, 6770, 13, 51384, 51384, 759, 309, 311, 300, 311, 264, 912, 11, 5183, 11, 5183, 13, 51512, 51512, 400, 498, 472, 295, 552, 307, 406, 264, 912, 11, 550, 309, 486, 48000, 1169, 264, 2445, 13, 51724, 51724, 286, 536, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19311112370984307, "compression_ratio": 1.9116279069767441, "no_caption_prob": 2.50711109401891e-05}, {"id": 608, "seek": 216332, "start": 2173.0, "end": 2179.56, "text": " So is it the same function as before using equal equal or no triple equals triple equals.", "tokens": [50364, 407, 437, 309, 11, 437, 2699, 76, 833, 264, 13376, 775, 307, 337, 633, 6770, 300, 291, 1320, 281, 264, 2445, 11, 50704, 50704, 3009, 264, 2445, 2564, 11, 309, 775, 2681, 2681, 13, 50848, 50848, 407, 307, 309, 264, 912, 2445, 382, 949, 1228, 2681, 2681, 420, 572, 15508, 6915, 15508, 6915, 13, 51176, 51176, 407, 11, 370, 498, 309, 311, 264, 912, 11, 550, 309, 1542, 412, 264, 958, 6770, 13, 51384, 51384, 759, 309, 311, 300, 311, 264, 912, 11, 5183, 11, 5183, 13, 51512, 51512, 400, 498, 472, 295, 552, 307, 406, 264, 912, 11, 550, 309, 486, 48000, 1169, 264, 2445, 13, 51724, 51724, 286, 536, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19311112370984307, "compression_ratio": 1.9116279069767441, "no_caption_prob": 2.50711109401891e-05}, {"id": 609, "seek": 216332, "start": 2179.56, "end": 2183.7200000000003, "text": " So, so if it's the same, then it looks at the next argument.", "tokens": [50364, 407, 437, 309, 11, 437, 2699, 76, 833, 264, 13376, 775, 307, 337, 633, 6770, 300, 291, 1320, 281, 264, 2445, 11, 50704, 50704, 3009, 264, 2445, 2564, 11, 309, 775, 2681, 2681, 13, 50848, 50848, 407, 307, 309, 264, 912, 2445, 382, 949, 1228, 2681, 2681, 420, 572, 15508, 6915, 15508, 6915, 13, 51176, 51176, 407, 11, 370, 498, 309, 311, 264, 912, 11, 550, 309, 1542, 412, 264, 958, 6770, 13, 51384, 51384, 759, 309, 311, 300, 311, 264, 912, 11, 5183, 11, 5183, 13, 51512, 51512, 400, 498, 472, 295, 552, 307, 406, 264, 912, 11, 550, 309, 486, 48000, 1169, 264, 2445, 13, 51724, 51724, 286, 536, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19311112370984307, "compression_ratio": 1.9116279069767441, "no_caption_prob": 2.50711109401891e-05}, {"id": 610, "seek": 216332, "start": 2183.7200000000003, "end": 2186.28, "text": " If it's that's the same, etc, etc.", "tokens": [50364, 407, 437, 309, 11, 437, 2699, 76, 833, 264, 13376, 775, 307, 337, 633, 6770, 300, 291, 1320, 281, 264, 2445, 11, 50704, 50704, 3009, 264, 2445, 2564, 11, 309, 775, 2681, 2681, 13, 50848, 50848, 407, 307, 309, 264, 912, 2445, 382, 949, 1228, 2681, 2681, 420, 572, 15508, 6915, 15508, 6915, 13, 51176, 51176, 407, 11, 370, 498, 309, 311, 264, 912, 11, 550, 309, 1542, 412, 264, 958, 6770, 13, 51384, 51384, 759, 309, 311, 300, 311, 264, 912, 11, 5183, 11, 5183, 13, 51512, 51512, 400, 498, 472, 295, 552, 307, 406, 264, 912, 11, 550, 309, 486, 48000, 1169, 264, 2445, 13, 51724, 51724, 286, 536, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19311112370984307, "compression_ratio": 1.9116279069767441, "no_caption_prob": 2.50711109401891e-05}, {"id": 611, "seek": 216332, "start": 2186.28, "end": 2190.52, "text": " And if one of them is not the same, then it will recompute the function.", "tokens": [50364, 407, 437, 309, 11, 437, 2699, 76, 833, 264, 13376, 775, 307, 337, 633, 6770, 300, 291, 1320, 281, 264, 2445, 11, 50704, 50704, 3009, 264, 2445, 2564, 11, 309, 775, 2681, 2681, 13, 50848, 50848, 407, 307, 309, 264, 912, 2445, 382, 949, 1228, 2681, 2681, 420, 572, 15508, 6915, 15508, 6915, 13, 51176, 51176, 407, 11, 370, 498, 309, 311, 264, 912, 11, 550, 309, 1542, 412, 264, 958, 6770, 13, 51384, 51384, 759, 309, 311, 300, 311, 264, 912, 11, 5183, 11, 5183, 13, 51512, 51512, 400, 498, 472, 295, 552, 307, 406, 264, 912, 11, 550, 309, 486, 48000, 1169, 264, 2445, 13, 51724, 51724, 286, 536, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19311112370984307, "compression_ratio": 1.9116279069767441, "no_caption_prob": 2.50711109401891e-05}, {"id": 612, "seek": 216332, "start": 2190.52, "end": 2191.52, "text": " I see.", "tokens": [50364, 407, 437, 309, 11, 437, 2699, 76, 833, 264, 13376, 775, 307, 337, 633, 6770, 300, 291, 1320, 281, 264, 2445, 11, 50704, 50704, 3009, 264, 2445, 2564, 11, 309, 775, 2681, 2681, 13, 50848, 50848, 407, 307, 309, 264, 912, 2445, 382, 949, 1228, 2681, 2681, 420, 572, 15508, 6915, 15508, 6915, 13, 51176, 51176, 407, 11, 370, 498, 309, 311, 264, 912, 11, 550, 309, 1542, 412, 264, 958, 6770, 13, 51384, 51384, 759, 309, 311, 300, 311, 264, 912, 11, 5183, 11, 5183, 13, 51512, 51512, 400, 498, 472, 295, 552, 307, 406, 264, 912, 11, 550, 309, 486, 48000, 1169, 264, 2445, 13, 51724, 51724, 286, 536, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.19311112370984307, "compression_ratio": 1.9116279069767441, "no_caption_prob": 2.50711109401891e-05}, {"id": 613, "seek": 219152, "start": 2191.52, "end": 2198.64, "text": " So for primitives like strings and integers and bullions and static references like custom", "tokens": [50364, 407, 337, 2886, 38970, 411, 13985, 293, 41674, 293, 4693, 626, 293, 13437, 15400, 411, 2375, 50720, 50720, 3467, 11, 2375, 2010, 7690, 830, 300, 362, 572, 12869, 300, 486, 1009, 7754, 498, 309, 311, 51014, 51014, 264, 912, 2158, 11, 411, 291, 1320, 294, 1732, 293, 958, 565, 291, 818, 309, 293, 291, 1320, 294, 1732, 11, 51266, 51266, 300, 311, 2489, 13, 51316, 51316, 583, 562, 291, 1884, 544, 3997, 721, 411, 7724, 420, 22352, 4889, 11, 436, 767, 643, 51672, 51672, 281, 312, 264, 912, 6408, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.14970107788735248, "compression_ratio": 1.7268722466960353, "no_caption_prob": 7.030338019831106e-05}, {"id": 614, "seek": 219152, "start": 2198.64, "end": 2204.52, "text": " types, custom type constructors that have no arguments that will always succeed if it's", "tokens": [50364, 407, 337, 2886, 38970, 411, 13985, 293, 41674, 293, 4693, 626, 293, 13437, 15400, 411, 2375, 50720, 50720, 3467, 11, 2375, 2010, 7690, 830, 300, 362, 572, 12869, 300, 486, 1009, 7754, 498, 309, 311, 51014, 51014, 264, 912, 2158, 11, 411, 291, 1320, 294, 1732, 293, 958, 565, 291, 818, 309, 293, 291, 1320, 294, 1732, 11, 51266, 51266, 300, 311, 2489, 13, 51316, 51316, 583, 562, 291, 1884, 544, 3997, 721, 411, 7724, 420, 22352, 4889, 11, 436, 767, 643, 51672, 51672, 281, 312, 264, 912, 6408, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.14970107788735248, "compression_ratio": 1.7268722466960353, "no_caption_prob": 7.030338019831106e-05}, {"id": 615, "seek": 219152, "start": 2204.52, "end": 2209.56, "text": " the same value, like you pass in five and next time you call it and you pass in five,", "tokens": [50364, 407, 337, 2886, 38970, 411, 13985, 293, 41674, 293, 4693, 626, 293, 13437, 15400, 411, 2375, 50720, 50720, 3467, 11, 2375, 2010, 7690, 830, 300, 362, 572, 12869, 300, 486, 1009, 7754, 498, 309, 311, 51014, 51014, 264, 912, 2158, 11, 411, 291, 1320, 294, 1732, 293, 958, 565, 291, 818, 309, 293, 291, 1320, 294, 1732, 11, 51266, 51266, 300, 311, 2489, 13, 51316, 51316, 583, 562, 291, 1884, 544, 3997, 721, 411, 7724, 420, 22352, 4889, 11, 436, 767, 643, 51672, 51672, 281, 312, 264, 912, 6408, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.14970107788735248, "compression_ratio": 1.7268722466960353, "no_caption_prob": 7.030338019831106e-05}, {"id": 616, "seek": 219152, "start": 2209.56, "end": 2210.56, "text": " that's fine.", "tokens": [50364, 407, 337, 2886, 38970, 411, 13985, 293, 41674, 293, 4693, 626, 293, 13437, 15400, 411, 2375, 50720, 50720, 3467, 11, 2375, 2010, 7690, 830, 300, 362, 572, 12869, 300, 486, 1009, 7754, 498, 309, 311, 51014, 51014, 264, 912, 2158, 11, 411, 291, 1320, 294, 1732, 293, 958, 565, 291, 818, 309, 293, 291, 1320, 294, 1732, 11, 51266, 51266, 300, 311, 2489, 13, 51316, 51316, 583, 562, 291, 1884, 544, 3997, 721, 411, 7724, 420, 22352, 4889, 11, 436, 767, 643, 51672, 51672, 281, 312, 264, 912, 6408, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.14970107788735248, "compression_ratio": 1.7268722466960353, "no_caption_prob": 7.030338019831106e-05}, {"id": 617, "seek": 219152, "start": 2210.56, "end": 2217.68, "text": " But when you create more complex things like records or dictionaries, they actually need", "tokens": [50364, 407, 337, 2886, 38970, 411, 13985, 293, 41674, 293, 4693, 626, 293, 13437, 15400, 411, 2375, 50720, 50720, 3467, 11, 2375, 2010, 7690, 830, 300, 362, 572, 12869, 300, 486, 1009, 7754, 498, 309, 311, 51014, 51014, 264, 912, 2158, 11, 411, 291, 1320, 294, 1732, 293, 958, 565, 291, 818, 309, 293, 291, 1320, 294, 1732, 11, 51266, 51266, 300, 311, 2489, 13, 51316, 51316, 583, 562, 291, 1884, 544, 3997, 721, 411, 7724, 420, 22352, 4889, 11, 436, 767, 643, 51672, 51672, 281, 312, 264, 912, 6408, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.14970107788735248, "compression_ratio": 1.7268722466960353, "no_caption_prob": 7.030338019831106e-05}, {"id": 618, "seek": 219152, "start": 2217.68, "end": 2219.78, "text": " to be the same reference.", "tokens": [50364, 407, 337, 2886, 38970, 411, 13985, 293, 41674, 293, 4693, 626, 293, 13437, 15400, 411, 2375, 50720, 50720, 3467, 11, 2375, 2010, 7690, 830, 300, 362, 572, 12869, 300, 486, 1009, 7754, 498, 309, 311, 51014, 51014, 264, 912, 2158, 11, 411, 291, 1320, 294, 1732, 293, 958, 565, 291, 818, 309, 293, 291, 1320, 294, 1732, 11, 51266, 51266, 300, 311, 2489, 13, 51316, 51316, 583, 562, 291, 1884, 544, 3997, 721, 411, 7724, 420, 22352, 4889, 11, 436, 767, 643, 51672, 51672, 281, 312, 264, 912, 6408, 13, 51777, 51777], "temperature": 0.0, "avg_logprob": -0.14970107788735248, "compression_ratio": 1.7268722466960353, "no_caption_prob": 7.030338019831106e-05}, {"id": 619, "seek": 221978, "start": 2219.78, "end": 2221.6400000000003, "text": " And that's where it gets tricky.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 620, "seek": 221978, "start": 2221.6400000000003, "end": 2222.92, "text": " I see.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 621, "seek": 221978, "start": 2222.92, "end": 2229.6400000000003, "text": " So if you compute a value, if you compute a list, if you create one in a view function", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 622, "seek": 221978, "start": 2229.6400000000003, "end": 2236.0400000000004, "text": " and you pass that as an argument to the lazy function, then that is a new reference.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 623, "seek": 221978, "start": 2236.0400000000004, "end": 2241.84, "text": " And that means that it will not be considered the same and therefore the function will be", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 624, "seek": 221978, "start": 2241.84, "end": 2242.84, "text": " reevaluated.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 625, "seek": 221978, "start": 2242.84, "end": 2243.84, "text": " I see.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 626, "seek": 221978, "start": 2243.84, "end": 2246.6800000000003, "text": " And that is very non Elm ish.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 627, "seek": 221978, "start": 2246.6800000000003, "end": 2247.6800000000003, "text": " Yeah.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 628, "seek": 221978, "start": 2247.6800000000003, "end": 2249.6600000000003, "text": " And can be very confusing.", "tokens": [50364, 400, 300, 311, 689, 309, 2170, 12414, 13, 50457, 50457, 286, 536, 13, 50521, 50521, 407, 498, 291, 14722, 257, 2158, 11, 498, 291, 14722, 257, 1329, 11, 498, 291, 1884, 472, 294, 257, 1910, 2445, 50857, 50857, 293, 291, 1320, 300, 382, 364, 6770, 281, 264, 14847, 2445, 11, 550, 300, 307, 257, 777, 6408, 13, 51177, 51177, 400, 300, 1355, 300, 309, 486, 406, 312, 4888, 264, 912, 293, 4412, 264, 2445, 486, 312, 51467, 51467, 43060, 3337, 27275, 13, 51517, 51517, 286, 536, 13, 51567, 51567, 400, 300, 307, 588, 2107, 2699, 76, 307, 71, 13, 51709, 51709, 865, 13, 51759, 51759, 400, 393, 312, 588, 13181, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.12341724064039147, "compression_ratio": 1.737556561085973, "no_caption_prob": 1.2217011317261495e-05}, {"id": 629, "seek": 224966, "start": 2249.66, "end": 2255.24, "text": " So the worst case is that it's not actually optimized.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 630, "seek": 224966, "start": 2255.24, "end": 2258.24, "text": " It's no worse than that, but it's not optimized.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 631, "seek": 224966, "start": 2258.24, "end": 2259.7999999999997, "text": " And that was what you were trying to do.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 632, "seek": 224966, "start": 2259.7999999999997, "end": 2267.52, "text": " But so you're saying like, if I had a list and then I ran a list dot map on that, now", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 633, "seek": 224966, "start": 2267.52, "end": 2268.92, "text": " the reference is different.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 634, "seek": 224966, "start": 2268.92, "end": 2269.92, "text": " Yeah.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 635, "seek": 224966, "start": 2269.92, "end": 2270.92, "text": " Interesting.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 636, "seek": 224966, "start": 2270.92, "end": 2275.46, "text": " But if I did model dot my list, then it says it's just a reference.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 637, "seek": 224966, "start": 2275.46, "end": 2277.44, "text": " So it's just passing it through.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 638, "seek": 224966, "start": 2277.44, "end": 2278.44, "text": " Yeah.", "tokens": [50364, 407, 264, 5855, 1389, 307, 300, 309, 311, 406, 767, 26941, 13, 50643, 50643, 467, 311, 572, 5324, 813, 300, 11, 457, 309, 311, 406, 26941, 13, 50793, 50793, 400, 300, 390, 437, 291, 645, 1382, 281, 360, 13, 50871, 50871, 583, 370, 291, 434, 1566, 411, 11, 498, 286, 632, 257, 1329, 293, 550, 286, 5872, 257, 1329, 5893, 4471, 322, 300, 11, 586, 51257, 51257, 264, 6408, 307, 819, 13, 51327, 51327, 865, 13, 51377, 51377, 14711, 13, 51427, 51427, 583, 498, 286, 630, 2316, 5893, 452, 1329, 11, 550, 309, 1619, 309, 311, 445, 257, 6408, 13, 51654, 51654, 407, 309, 311, 445, 8437, 309, 807, 13, 51753, 51753, 865, 13, 51803, 51803], "temperature": 0.0, "avg_logprob": -0.1400395571175268, "compression_ratio": 1.786046511627907, "no_caption_prob": 6.439004664571257e-06}, {"id": 639, "seek": 227844, "start": 2278.44, "end": 2282.56, "text": " Unless obviously you change that function.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 640, "seek": 227844, "start": 2282.56, "end": 2283.56, "text": " Right.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 641, "seek": 227844, "start": 2283.56, "end": 2284.56, "text": " Right.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 642, "seek": 227844, "start": 2284.56, "end": 2286.84, "text": " Usually things that come from the model are fine.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 643, "seek": 227844, "start": 2286.84, "end": 2287.84, "text": " Okay.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 644, "seek": 227844, "start": 2287.84, "end": 2289.12, "text": " Yeah, that makes sense.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 645, "seek": 227844, "start": 2289.12, "end": 2294.96, "text": " And that's where usually people feel like they need to store derived state in the model", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 646, "seek": 227844, "start": 2294.96, "end": 2299.64, "text": " is because they want to pass that in as their argument to a lazy function.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 647, "seek": 227844, "start": 2299.64, "end": 2300.64, "text": " Yeah.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 648, "seek": 227844, "start": 2300.64, "end": 2305.48, "text": " So they do the computation in updates instead of in the view function.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 649, "seek": 227844, "start": 2305.48, "end": 2306.48, "text": " Right.", "tokens": [50364, 16581, 2745, 291, 1319, 300, 2445, 13, 50570, 50570, 1779, 13, 50620, 50620, 1779, 13, 50670, 50670, 11419, 721, 300, 808, 490, 264, 2316, 366, 2489, 13, 50784, 50784, 1033, 13, 50834, 50834, 865, 11, 300, 1669, 2020, 13, 50898, 50898, 400, 300, 311, 689, 2673, 561, 841, 411, 436, 643, 281, 3531, 18949, 1785, 294, 264, 2316, 51190, 51190, 307, 570, 436, 528, 281, 1320, 300, 294, 382, 641, 6770, 281, 257, 14847, 2445, 13, 51424, 51424, 865, 13, 51474, 51474, 407, 436, 360, 264, 24903, 294, 9205, 2602, 295, 294, 264, 1910, 2445, 13, 51716, 51716, 1779, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.2402662313901461, "compression_ratio": 1.6798245614035088, "no_caption_prob": 1.26065788208507e-05}, {"id": 650, "seek": 230648, "start": 2306.48, "end": 2310.2, "text": " So that makes the Elm code a lot less nice, but...", "tokens": [50364, 407, 300, 1669, 264, 2699, 76, 3089, 257, 688, 1570, 1481, 11, 457, 485, 50550, 50550, 14711, 13, 50600, 50600, 4803, 291, 643, 281, 13, 50678, 50678, 286, 2441, 498, 291, 630, 746, 294, 633, 5623, 818, 300, 848, 11, 4159, 341, 2010, 295, 551, 51128, 51128, 490, 341, 1329, 13, 51212, 51212, 407, 264, 2316, 5893, 452, 1329, 6915, 13, 51409, 51409, 400, 498, 291, 360, 452, 1329, 5893, 6608, 11, 4159, 746, 490, 264, 1329, 633, 2167, 565, 11, 550, 300, 311, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19969064539129083, "compression_ratio": 1.6443298969072164, "no_caption_prob": 1.7061418020603014e-06}, {"id": 651, "seek": 230648, "start": 2310.2, "end": 2311.2, "text": " Interesting.", "tokens": [50364, 407, 300, 1669, 264, 2699, 76, 3089, 257, 688, 1570, 1481, 11, 457, 485, 50550, 50550, 14711, 13, 50600, 50600, 4803, 291, 643, 281, 13, 50678, 50678, 286, 2441, 498, 291, 630, 746, 294, 633, 5623, 818, 300, 848, 11, 4159, 341, 2010, 295, 551, 51128, 51128, 490, 341, 1329, 13, 51212, 51212, 407, 264, 2316, 5893, 452, 1329, 6915, 13, 51409, 51409, 400, 498, 291, 360, 452, 1329, 5893, 6608, 11, 4159, 746, 490, 264, 1329, 633, 2167, 565, 11, 550, 300, 311, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19969064539129083, "compression_ratio": 1.6443298969072164, "no_caption_prob": 1.7061418020603014e-06}, {"id": 652, "seek": 230648, "start": 2311.2, "end": 2312.76, "text": " Sometimes you need to.", "tokens": [50364, 407, 300, 1669, 264, 2699, 76, 3089, 257, 688, 1570, 1481, 11, 457, 485, 50550, 50550, 14711, 13, 50600, 50600, 4803, 291, 643, 281, 13, 50678, 50678, 286, 2441, 498, 291, 630, 746, 294, 633, 5623, 818, 300, 848, 11, 4159, 341, 2010, 295, 551, 51128, 51128, 490, 341, 1329, 13, 51212, 51212, 407, 264, 2316, 5893, 452, 1329, 6915, 13, 51409, 51409, 400, 498, 291, 360, 452, 1329, 5893, 6608, 11, 4159, 746, 490, 264, 1329, 633, 2167, 565, 11, 550, 300, 311, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19969064539129083, "compression_ratio": 1.6443298969072164, "no_caption_prob": 1.7061418020603014e-06}, {"id": 653, "seek": 230648, "start": 2312.76, "end": 2321.76, "text": " I wonder if you did something in every update call that said, remove this type of thing", "tokens": [50364, 407, 300, 1669, 264, 2699, 76, 3089, 257, 688, 1570, 1481, 11, 457, 485, 50550, 50550, 14711, 13, 50600, 50600, 4803, 291, 643, 281, 13, 50678, 50678, 286, 2441, 498, 291, 630, 746, 294, 633, 5623, 818, 300, 848, 11, 4159, 341, 2010, 295, 551, 51128, 51128, 490, 341, 1329, 13, 51212, 51212, 407, 264, 2316, 5893, 452, 1329, 6915, 13, 51409, 51409, 400, 498, 291, 360, 452, 1329, 5893, 6608, 11, 4159, 746, 490, 264, 1329, 633, 2167, 565, 11, 550, 300, 311, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19969064539129083, "compression_ratio": 1.6443298969072164, "no_caption_prob": 1.7061418020603014e-06}, {"id": 654, "seek": 230648, "start": 2321.76, "end": 2323.44, "text": " from this list.", "tokens": [50364, 407, 300, 1669, 264, 2699, 76, 3089, 257, 688, 1570, 1481, 11, 457, 485, 50550, 50550, 14711, 13, 50600, 50600, 4803, 291, 643, 281, 13, 50678, 50678, 286, 2441, 498, 291, 630, 746, 294, 633, 5623, 818, 300, 848, 11, 4159, 341, 2010, 295, 551, 51128, 51128, 490, 341, 1329, 13, 51212, 51212, 407, 264, 2316, 5893, 452, 1329, 6915, 13, 51409, 51409, 400, 498, 291, 360, 452, 1329, 5893, 6608, 11, 4159, 746, 490, 264, 1329, 633, 2167, 565, 11, 550, 300, 311, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19969064539129083, "compression_ratio": 1.6443298969072164, "no_caption_prob": 1.7061418020603014e-06}, {"id": 655, "seek": 230648, "start": 2323.44, "end": 2327.38, "text": " So the model dot my list equals.", "tokens": [50364, 407, 300, 1669, 264, 2699, 76, 3089, 257, 688, 1570, 1481, 11, 457, 485, 50550, 50550, 14711, 13, 50600, 50600, 4803, 291, 643, 281, 13, 50678, 50678, 286, 2441, 498, 291, 630, 746, 294, 633, 5623, 818, 300, 848, 11, 4159, 341, 2010, 295, 551, 51128, 51128, 490, 341, 1329, 13, 51212, 51212, 407, 264, 2316, 5893, 452, 1329, 6915, 13, 51409, 51409, 400, 498, 291, 360, 452, 1329, 5893, 6608, 11, 4159, 746, 490, 264, 1329, 633, 2167, 565, 11, 550, 300, 311, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19969064539129083, "compression_ratio": 1.6443298969072164, "no_caption_prob": 1.7061418020603014e-06}, {"id": 656, "seek": 230648, "start": 2327.38, "end": 2336.12, "text": " And if you do my list dot filter, remove something from the list every single time, then that's", "tokens": [50364, 407, 300, 1669, 264, 2699, 76, 3089, 257, 688, 1570, 1481, 11, 457, 485, 50550, 50550, 14711, 13, 50600, 50600, 4803, 291, 643, 281, 13, 50678, 50678, 286, 2441, 498, 291, 630, 746, 294, 633, 5623, 818, 300, 848, 11, 4159, 341, 2010, 295, 551, 51128, 51128, 490, 341, 1329, 13, 51212, 51212, 407, 264, 2316, 5893, 452, 1329, 6915, 13, 51409, 51409, 400, 498, 291, 360, 452, 1329, 5893, 6608, 11, 4159, 746, 490, 264, 1329, 633, 2167, 565, 11, 550, 300, 311, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19969064539129083, "compression_ratio": 1.6443298969072164, "no_caption_prob": 1.7061418020603014e-06}, {"id": 657, "seek": 233612, "start": 2336.12, "end": 2339.7599999999998, "text": " changing the reference every single time, I'm assuming.", "tokens": [50364, 4473, 264, 6408, 633, 2167, 565, 11, 286, 478, 11926, 13, 50546, 50546, 492, 500, 380, 5646, 519, 466, 613, 721, 294, 2699, 76, 11, 597, 307, 286, 519, 983, 291, 434, 1566, 50686, 50686, 309, 1177, 380, 841, 588, 2699, 76, 570, 321, 500, 380, 2673, 362, 281, 519, 466, 613, 721, 13, 50886, 50886, 407, 291, 576, 1920, 362, 281, 5042, 25113, 264, 6408, 294, 300, 1389, 689, 264, 1874, 51220, 51220, 307, 264, 912, 420, 14722, 264, 1874, 293, 584, 498, 264, 1230, 295, 4754, 300, 309, 3542, 294, 51525, 51525, 307, 264, 912, 11, 550, 500, 380, 5623, 264, 6408, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.10369499451523527, "compression_ratio": 1.8571428571428572, "no_caption_prob": 2.0142369976383634e-05}, {"id": 658, "seek": 233612, "start": 2339.7599999999998, "end": 2342.56, "text": " We don't normally think about these things in Elm, which is I think why you're saying", "tokens": [50364, 4473, 264, 6408, 633, 2167, 565, 11, 286, 478, 11926, 13, 50546, 50546, 492, 500, 380, 5646, 519, 466, 613, 721, 294, 2699, 76, 11, 597, 307, 286, 519, 983, 291, 434, 1566, 50686, 50686, 309, 1177, 380, 841, 588, 2699, 76, 570, 321, 500, 380, 2673, 362, 281, 519, 466, 613, 721, 13, 50886, 50886, 407, 291, 576, 1920, 362, 281, 5042, 25113, 264, 6408, 294, 300, 1389, 689, 264, 1874, 51220, 51220, 307, 264, 912, 420, 14722, 264, 1874, 293, 584, 498, 264, 1230, 295, 4754, 300, 309, 3542, 294, 51525, 51525, 307, 264, 912, 11, 550, 500, 380, 5623, 264, 6408, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.10369499451523527, "compression_ratio": 1.8571428571428572, "no_caption_prob": 2.0142369976383634e-05}, {"id": 659, "seek": 233612, "start": 2342.56, "end": 2346.56, "text": " it doesn't feel very Elm because we don't usually have to think about these things.", "tokens": [50364, 4473, 264, 6408, 633, 2167, 565, 11, 286, 478, 11926, 13, 50546, 50546, 492, 500, 380, 5646, 519, 466, 613, 721, 294, 2699, 76, 11, 597, 307, 286, 519, 983, 291, 434, 1566, 50686, 50686, 309, 1177, 380, 841, 588, 2699, 76, 570, 321, 500, 380, 2673, 362, 281, 519, 466, 613, 721, 13, 50886, 50886, 407, 291, 576, 1920, 362, 281, 5042, 25113, 264, 6408, 294, 300, 1389, 689, 264, 1874, 51220, 51220, 307, 264, 912, 420, 14722, 264, 1874, 293, 584, 498, 264, 1230, 295, 4754, 300, 309, 3542, 294, 51525, 51525, 307, 264, 912, 11, 550, 500, 380, 5623, 264, 6408, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.10369499451523527, "compression_ratio": 1.8571428571428572, "no_caption_prob": 2.0142369976383634e-05}, {"id": 660, "seek": 233612, "start": 2346.56, "end": 2353.24, "text": " So you would almost have to avoid updating the reference in that case where the result", "tokens": [50364, 4473, 264, 6408, 633, 2167, 565, 11, 286, 478, 11926, 13, 50546, 50546, 492, 500, 380, 5646, 519, 466, 613, 721, 294, 2699, 76, 11, 597, 307, 286, 519, 983, 291, 434, 1566, 50686, 50686, 309, 1177, 380, 841, 588, 2699, 76, 570, 321, 500, 380, 2673, 362, 281, 519, 466, 613, 721, 13, 50886, 50886, 407, 291, 576, 1920, 362, 281, 5042, 25113, 264, 6408, 294, 300, 1389, 689, 264, 1874, 51220, 51220, 307, 264, 912, 420, 14722, 264, 1874, 293, 584, 498, 264, 1230, 295, 4754, 300, 309, 3542, 294, 51525, 51525, 307, 264, 912, 11, 550, 500, 380, 5623, 264, 6408, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.10369499451523527, "compression_ratio": 1.8571428571428572, "no_caption_prob": 2.0142369976383634e-05}, {"id": 661, "seek": 233612, "start": 2353.24, "end": 2359.3399999999997, "text": " is the same or compute the result and say if the number of items that it results in", "tokens": [50364, 4473, 264, 6408, 633, 2167, 565, 11, 286, 478, 11926, 13, 50546, 50546, 492, 500, 380, 5646, 519, 466, 613, 721, 294, 2699, 76, 11, 597, 307, 286, 519, 983, 291, 434, 1566, 50686, 50686, 309, 1177, 380, 841, 588, 2699, 76, 570, 321, 500, 380, 2673, 362, 281, 519, 466, 613, 721, 13, 50886, 50886, 407, 291, 576, 1920, 362, 281, 5042, 25113, 264, 6408, 294, 300, 1389, 689, 264, 1874, 51220, 51220, 307, 264, 912, 420, 14722, 264, 1874, 293, 584, 498, 264, 1230, 295, 4754, 300, 309, 3542, 294, 51525, 51525, 307, 264, 912, 11, 550, 500, 380, 5623, 264, 6408, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.10369499451523527, "compression_ratio": 1.8571428571428572, "no_caption_prob": 2.0142369976383634e-05}, {"id": 662, "seek": 233612, "start": 2359.3399999999997, "end": 2363.04, "text": " is the same, then don't update the reference.", "tokens": [50364, 4473, 264, 6408, 633, 2167, 565, 11, 286, 478, 11926, 13, 50546, 50546, 492, 500, 380, 5646, 519, 466, 613, 721, 294, 2699, 76, 11, 597, 307, 286, 519, 983, 291, 434, 1566, 50686, 50686, 309, 1177, 380, 841, 588, 2699, 76, 570, 321, 500, 380, 2673, 362, 281, 519, 466, 613, 721, 13, 50886, 50886, 407, 291, 576, 1920, 362, 281, 5042, 25113, 264, 6408, 294, 300, 1389, 689, 264, 1874, 51220, 51220, 307, 264, 912, 420, 14722, 264, 1874, 293, 584, 498, 264, 1230, 295, 4754, 300, 309, 3542, 294, 51525, 51525, 307, 264, 912, 11, 550, 500, 380, 5623, 264, 6408, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.10369499451523527, "compression_ratio": 1.8571428571428572, "no_caption_prob": 2.0142369976383634e-05}, {"id": 663, "seek": 236304, "start": 2363.04, "end": 2369.92, "text": " So for instance, when you have a module and it uses another module which also has update", "tokens": [50364, 407, 337, 5197, 11, 562, 291, 362, 257, 10088, 293, 309, 4960, 1071, 10088, 597, 611, 575, 5623, 50708, 50708, 1910, 293, 439, 729, 11, 291, 2673, 3531, 264, 2316, 295, 300, 294, 257, 2136, 13, 51040, 51040, 407, 291, 362, 2316, 597, 575, 257, 2519, 1422, 21541, 30365, 11, 597, 307, 257, 2316, 295, 264, 1422, 21541, 30365, 13, 51473, 51473, 407, 633, 565, 257, 3636, 337, 300, 472, 1487, 11, 291, 486, 5623, 2316, 293, 42321, 1422, 21541, 30365, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13952058904311238, "compression_ratio": 1.783068783068783, "no_caption_prob": 1.0952758202620316e-05}, {"id": 664, "seek": 236304, "start": 2369.92, "end": 2376.56, "text": " view and all those, you usually store the model of that in a record.", "tokens": [50364, 407, 337, 5197, 11, 562, 291, 362, 257, 10088, 293, 309, 4960, 1071, 10088, 597, 611, 575, 5623, 50708, 50708, 1910, 293, 439, 729, 11, 291, 2673, 3531, 264, 2316, 295, 300, 294, 257, 2136, 13, 51040, 51040, 407, 291, 362, 2316, 597, 575, 257, 2519, 1422, 21541, 30365, 11, 597, 307, 257, 2316, 295, 264, 1422, 21541, 30365, 13, 51473, 51473, 407, 633, 565, 257, 3636, 337, 300, 472, 1487, 11, 291, 486, 5623, 2316, 293, 42321, 1422, 21541, 30365, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13952058904311238, "compression_ratio": 1.783068783068783, "no_caption_prob": 1.0952758202620316e-05}, {"id": 665, "seek": 236304, "start": 2376.56, "end": 2385.22, "text": " So you have model which has a field subcomponent, which is a model of the subcomponent.", "tokens": [50364, 407, 337, 5197, 11, 562, 291, 362, 257, 10088, 293, 309, 4960, 1071, 10088, 597, 611, 575, 5623, 50708, 50708, 1910, 293, 439, 729, 11, 291, 2673, 3531, 264, 2316, 295, 300, 294, 257, 2136, 13, 51040, 51040, 407, 291, 362, 2316, 597, 575, 257, 2519, 1422, 21541, 30365, 11, 597, 307, 257, 2316, 295, 264, 1422, 21541, 30365, 13, 51473, 51473, 407, 633, 565, 257, 3636, 337, 300, 472, 1487, 11, 291, 486, 5623, 2316, 293, 42321, 1422, 21541, 30365, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13952058904311238, "compression_ratio": 1.783068783068783, "no_caption_prob": 1.0952758202620316e-05}, {"id": 666, "seek": 236304, "start": 2385.22, "end": 2392.44, "text": " So every time a message for that one comes, you will update model and override subcomponent", "tokens": [50364, 407, 337, 5197, 11, 562, 291, 362, 257, 10088, 293, 309, 4960, 1071, 10088, 597, 611, 575, 5623, 50708, 50708, 1910, 293, 439, 729, 11, 291, 2673, 3531, 264, 2316, 295, 300, 294, 257, 2136, 13, 51040, 51040, 407, 291, 362, 2316, 597, 575, 257, 2519, 1422, 21541, 30365, 11, 597, 307, 257, 2316, 295, 264, 1422, 21541, 30365, 13, 51473, 51473, 407, 633, 565, 257, 3636, 337, 300, 472, 1487, 11, 291, 486, 5623, 2316, 293, 42321, 1422, 21541, 30365, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.13952058904311238, "compression_ratio": 1.783068783068783, "no_caption_prob": 1.0952758202620316e-05}, {"id": 667, "seek": 239244, "start": 2392.44, "end": 2396.96, "text": " with the new value of subcomponent, even if it didn't change.", "tokens": [50364, 365, 264, 777, 2158, 295, 1422, 21541, 30365, 11, 754, 498, 309, 994, 380, 1319, 13, 50590, 50590, 407, 300, 1355, 300, 1422, 21541, 30365, 994, 380, 1319, 11, 264, 6408, 994, 380, 1319, 11, 457, 2316, 630, 13, 50835, 50835, 407, 498, 291, 829, 2316, 382, 307, 382, 364, 6770, 281, 257, 14847, 2445, 11, 550, 300, 472, 2170, 23334, 2582, 292, 13, 51248, 51248, 1779, 13, 51298, 51298, 407, 294, 2674, 11, 365, 14847, 6828, 11, 309, 311, 1391, 257, 665, 1558, 281, 1888, 766, 264, 13206, 992, 295, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.1268545150756836, "compression_ratio": 1.7114427860696517, "no_caption_prob": 1.0953044693451375e-05}, {"id": 668, "seek": 239244, "start": 2396.96, "end": 2401.86, "text": " So that means that subcomponent didn't change, the reference didn't change, but model did.", "tokens": [50364, 365, 264, 777, 2158, 295, 1422, 21541, 30365, 11, 754, 498, 309, 994, 380, 1319, 13, 50590, 50590, 407, 300, 1355, 300, 1422, 21541, 30365, 994, 380, 1319, 11, 264, 6408, 994, 380, 1319, 11, 457, 2316, 630, 13, 50835, 50835, 407, 498, 291, 829, 2316, 382, 307, 382, 364, 6770, 281, 257, 14847, 2445, 11, 550, 300, 472, 2170, 23334, 2582, 292, 13, 51248, 51248, 1779, 13, 51298, 51298, 407, 294, 2674, 11, 365, 14847, 6828, 11, 309, 311, 1391, 257, 665, 1558, 281, 1888, 766, 264, 13206, 992, 295, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.1268545150756836, "compression_ratio": 1.7114427860696517, "no_caption_prob": 1.0953044693451375e-05}, {"id": 669, "seek": 239244, "start": 2401.86, "end": 2410.12, "text": " So if you put model as is as an argument to a lazy function, then that one gets recomputed.", "tokens": [50364, 365, 264, 777, 2158, 295, 1422, 21541, 30365, 11, 754, 498, 309, 994, 380, 1319, 13, 50590, 50590, 407, 300, 1355, 300, 1422, 21541, 30365, 994, 380, 1319, 11, 264, 6408, 994, 380, 1319, 11, 457, 2316, 630, 13, 50835, 50835, 407, 498, 291, 829, 2316, 382, 307, 382, 364, 6770, 281, 257, 14847, 2445, 11, 550, 300, 472, 2170, 23334, 2582, 292, 13, 51248, 51248, 1779, 13, 51298, 51298, 407, 294, 2674, 11, 365, 14847, 6828, 11, 309, 311, 1391, 257, 665, 1558, 281, 1888, 766, 264, 13206, 992, 295, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.1268545150756836, "compression_ratio": 1.7114427860696517, "no_caption_prob": 1.0953044693451375e-05}, {"id": 670, "seek": 239244, "start": 2410.12, "end": 2411.12, "text": " Right.", "tokens": [50364, 365, 264, 777, 2158, 295, 1422, 21541, 30365, 11, 754, 498, 309, 994, 380, 1319, 13, 50590, 50590, 407, 300, 1355, 300, 1422, 21541, 30365, 994, 380, 1319, 11, 264, 6408, 994, 380, 1319, 11, 457, 2316, 630, 13, 50835, 50835, 407, 498, 291, 829, 2316, 382, 307, 382, 364, 6770, 281, 257, 14847, 2445, 11, 550, 300, 472, 2170, 23334, 2582, 292, 13, 51248, 51248, 1779, 13, 51298, 51298, 407, 294, 2674, 11, 365, 14847, 6828, 11, 309, 311, 1391, 257, 665, 1558, 281, 1888, 766, 264, 13206, 992, 295, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.1268545150756836, "compression_ratio": 1.7114427860696517, "no_caption_prob": 1.0953044693451375e-05}, {"id": 671, "seek": 239244, "start": 2411.12, "end": 2417.62, "text": " So in general, with lazy functions, it's probably a good idea to pick off the minimal set of", "tokens": [50364, 365, 264, 777, 2158, 295, 1422, 21541, 30365, 11, 754, 498, 309, 994, 380, 1319, 13, 50590, 50590, 407, 300, 1355, 300, 1422, 21541, 30365, 994, 380, 1319, 11, 264, 6408, 994, 380, 1319, 11, 457, 2316, 630, 13, 50835, 50835, 407, 498, 291, 829, 2316, 382, 307, 382, 364, 6770, 281, 257, 14847, 2445, 11, 550, 300, 472, 2170, 23334, 2582, 292, 13, 51248, 51248, 1779, 13, 51298, 51298, 407, 294, 2674, 11, 365, 14847, 6828, 11, 309, 311, 1391, 257, 665, 1558, 281, 1888, 766, 264, 13206, 992, 295, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.1268545150756836, "compression_ratio": 1.7114427860696517, "no_caption_prob": 1.0953044693451375e-05}, {"id": 672, "seek": 241762, "start": 2417.62, "end": 2423.2799999999997, "text": " data that you need to pass through to avoid busting the cache, quote, unquote.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 673, "seek": 241762, "start": 2423.2799999999997, "end": 2433.7599999999998, "text": " So you can do like lazy function of subcomponent.view, and pass it model.subcomponent.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 674, "seek": 241762, "start": 2433.7599999999998, "end": 2435.3199999999997, "text": " That would be very good.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 675, "seek": 241762, "start": 2435.3199999999997, "end": 2436.9, "text": " Yeah, nice.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 676, "seek": 241762, "start": 2436.9, "end": 2437.9, "text": " That's really good to know.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 677, "seek": 241762, "start": 2437.9, "end": 2438.9, "text": " Yeah.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 678, "seek": 241762, "start": 2438.9, "end": 2442.7999999999997, "text": " Do you actually know how lazy works under the hood?", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 679, "seek": 241762, "start": 2442.7999999999997, "end": 2443.7999999999997, "text": " I don't.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 680, "seek": 241762, "start": 2443.7999999999997, "end": 2444.7999999999997, "text": " Do you?", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 681, "seek": 241762, "start": 2444.7999999999997, "end": 2446.64, "text": " I looked it up because I was curious.", "tokens": [50364, 1412, 300, 291, 643, 281, 1320, 807, 281, 5042, 272, 11712, 264, 19459, 11, 6513, 11, 37557, 13, 50647, 50647, 407, 291, 393, 360, 411, 14847, 2445, 295, 1422, 21541, 30365, 13, 1759, 11, 293, 1320, 309, 2316, 13, 30131, 21541, 30365, 13, 51171, 51171, 663, 576, 312, 588, 665, 13, 51249, 51249, 865, 11, 1481, 13, 51328, 51328, 663, 311, 534, 665, 281, 458, 13, 51378, 51378, 865, 13, 51428, 51428, 1144, 291, 767, 458, 577, 14847, 1985, 833, 264, 13376, 30, 51623, 51623, 286, 500, 380, 13, 51673, 51673, 1144, 291, 30, 51723, 51723, 286, 2956, 309, 493, 570, 286, 390, 6369, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.20370115927599985, "compression_ratio": 1.5520361990950227, "no_caption_prob": 2.355144897592254e-05}, {"id": 682, "seek": 244664, "start": 2446.64, "end": 2450.16, "text": " I'm guessing it's like in the virtual DOM code.", "tokens": [50364, 286, 478, 17939, 309, 311, 411, 294, 264, 6374, 35727, 3089, 13, 50540, 50540, 876, 587, 11, 291, 434, 1101, 813, 385, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 307, 294, 264, 6374, 35727, 3089, 11, 457, 689, 366, 264, 4190, 12187, 30, 50978, 50978, 440, 6374, 35727, 9130, 30, 51116, 51116, 286, 500, 380, 458, 13, 51238, 51238, 407, 286, 1009, 1194, 411, 2699, 76, 575, 257, 4338, 3531, 295, 14847, 6828, 293, 641, 1036, 12869, 11, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.3202325062579419, "compression_ratio": 1.481283422459893, "no_caption_prob": 1.0289256351825316e-05}, {"id": 683, "seek": 244664, "start": 2450.16, "end": 2453.2799999999997, "text": " Oh man, you're better than me.", "tokens": [50364, 286, 478, 17939, 309, 311, 411, 294, 264, 6374, 35727, 3089, 13, 50540, 50540, 876, 587, 11, 291, 434, 1101, 813, 385, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 307, 294, 264, 6374, 35727, 3089, 11, 457, 689, 366, 264, 4190, 12187, 30, 50978, 50978, 440, 6374, 35727, 9130, 30, 51116, 51116, 286, 500, 380, 458, 13, 51238, 51238, 407, 286, 1009, 1194, 411, 2699, 76, 575, 257, 4338, 3531, 295, 14847, 6828, 293, 641, 1036, 12869, 11, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.3202325062579419, "compression_ratio": 1.481283422459893, "no_caption_prob": 1.0289256351825316e-05}, {"id": 684, "seek": 244664, "start": 2453.2799999999997, "end": 2454.2799999999997, "text": " Yeah.", "tokens": [50364, 286, 478, 17939, 309, 311, 411, 294, 264, 6374, 35727, 3089, 13, 50540, 50540, 876, 587, 11, 291, 434, 1101, 813, 385, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 307, 294, 264, 6374, 35727, 3089, 11, 457, 689, 366, 264, 4190, 12187, 30, 50978, 50978, 440, 6374, 35727, 9130, 30, 51116, 51116, 286, 500, 380, 458, 13, 51238, 51238, 407, 286, 1009, 1194, 411, 2699, 76, 575, 257, 4338, 3531, 295, 14847, 6828, 293, 641, 1036, 12869, 11, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.3202325062579419, "compression_ratio": 1.481283422459893, "no_caption_prob": 1.0289256351825316e-05}, {"id": 685, "seek": 244664, "start": 2454.2799999999997, "end": 2458.92, "text": " It is in the virtual DOM code, but where are the values stored?", "tokens": [50364, 286, 478, 17939, 309, 311, 411, 294, 264, 6374, 35727, 3089, 13, 50540, 50540, 876, 587, 11, 291, 434, 1101, 813, 385, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 307, 294, 264, 6374, 35727, 3089, 11, 457, 689, 366, 264, 4190, 12187, 30, 50978, 50978, 440, 6374, 35727, 9130, 30, 51116, 51116, 286, 500, 380, 458, 13, 51238, 51238, 407, 286, 1009, 1194, 411, 2699, 76, 575, 257, 4338, 3531, 295, 14847, 6828, 293, 641, 1036, 12869, 11, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.3202325062579419, "compression_ratio": 1.481283422459893, "no_caption_prob": 1.0289256351825316e-05}, {"id": 686, "seek": 244664, "start": 2458.92, "end": 2461.68, "text": " The virtual DOM facts?", "tokens": [50364, 286, 478, 17939, 309, 311, 411, 294, 264, 6374, 35727, 3089, 13, 50540, 50540, 876, 587, 11, 291, 434, 1101, 813, 385, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 307, 294, 264, 6374, 35727, 3089, 11, 457, 689, 366, 264, 4190, 12187, 30, 50978, 50978, 440, 6374, 35727, 9130, 30, 51116, 51116, 286, 500, 380, 458, 13, 51238, 51238, 407, 286, 1009, 1194, 411, 2699, 76, 575, 257, 4338, 3531, 295, 14847, 6828, 293, 641, 1036, 12869, 11, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.3202325062579419, "compression_ratio": 1.481283422459893, "no_caption_prob": 1.0289256351825316e-05}, {"id": 687, "seek": 244664, "start": 2461.68, "end": 2464.12, "text": " I don't know.", "tokens": [50364, 286, 478, 17939, 309, 311, 411, 294, 264, 6374, 35727, 3089, 13, 50540, 50540, 876, 587, 11, 291, 434, 1101, 813, 385, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 307, 294, 264, 6374, 35727, 3089, 11, 457, 689, 366, 264, 4190, 12187, 30, 50978, 50978, 440, 6374, 35727, 9130, 30, 51116, 51116, 286, 500, 380, 458, 13, 51238, 51238, 407, 286, 1009, 1194, 411, 2699, 76, 575, 257, 4338, 3531, 295, 14847, 6828, 293, 641, 1036, 12869, 11, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.3202325062579419, "compression_ratio": 1.481283422459893, "no_caption_prob": 1.0289256351825316e-05}, {"id": 688, "seek": 244664, "start": 2464.12, "end": 2475.44, "text": " So I always thought like Elm has a global store of lazy functions and their last arguments,", "tokens": [50364, 286, 478, 17939, 309, 311, 411, 294, 264, 6374, 35727, 3089, 13, 50540, 50540, 876, 587, 11, 291, 434, 1101, 813, 385, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 307, 294, 264, 6374, 35727, 3089, 11, 457, 689, 366, 264, 4190, 12187, 30, 50978, 50978, 440, 6374, 35727, 9130, 30, 51116, 51116, 286, 500, 380, 458, 13, 51238, 51238, 407, 286, 1009, 1194, 411, 2699, 76, 575, 257, 4338, 3531, 295, 14847, 6828, 293, 641, 1036, 12869, 11, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.3202325062579419, "compression_ratio": 1.481283422459893, "no_caption_prob": 1.0289256351825316e-05}, {"id": 689, "seek": 247544, "start": 2475.44, "end": 2479.2000000000003, "text": " which doesn't make sense because sometimes you call the same function with different", "tokens": [50364, 597, 1177, 380, 652, 2020, 570, 2171, 291, 818, 264, 912, 2445, 365, 819, 50552, 50552, 12869, 294, 264, 912, 1910, 11, 293, 729, 576, 550, 312, 588, 1152, 281, 1066, 2837, 295, 13, 50992, 50992, 400, 300, 311, 3122, 406, 577, 309, 1985, 13, 51114, 51114, 467, 311, 406, 257, 12066, 4338, 551, 13, 51229, 51229, 467, 767, 9512, 439, 264, 12869, 293, 264, 2445, 2564, 294, 264, 6374, 35727, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.15267851478175112, "compression_ratio": 1.5588235294117647, "no_caption_prob": 1.8924736650660634e-05}, {"id": 690, "seek": 247544, "start": 2479.2000000000003, "end": 2488.0, "text": " arguments in the same view, and those would then be very hard to keep track of.", "tokens": [50364, 597, 1177, 380, 652, 2020, 570, 2171, 291, 818, 264, 912, 2445, 365, 819, 50552, 50552, 12869, 294, 264, 912, 1910, 11, 293, 729, 576, 550, 312, 588, 1152, 281, 1066, 2837, 295, 13, 50992, 50992, 400, 300, 311, 3122, 406, 577, 309, 1985, 13, 51114, 51114, 467, 311, 406, 257, 12066, 4338, 551, 13, 51229, 51229, 467, 767, 9512, 439, 264, 12869, 293, 264, 2445, 2564, 294, 264, 6374, 35727, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.15267851478175112, "compression_ratio": 1.5588235294117647, "no_caption_prob": 1.8924736650660634e-05}, {"id": 691, "seek": 247544, "start": 2488.0, "end": 2490.44, "text": " And that's absolutely not how it works.", "tokens": [50364, 597, 1177, 380, 652, 2020, 570, 2171, 291, 818, 264, 912, 2445, 365, 819, 50552, 50552, 12869, 294, 264, 912, 1910, 11, 293, 729, 576, 550, 312, 588, 1152, 281, 1066, 2837, 295, 13, 50992, 50992, 400, 300, 311, 3122, 406, 577, 309, 1985, 13, 51114, 51114, 467, 311, 406, 257, 12066, 4338, 551, 13, 51229, 51229, 467, 767, 9512, 439, 264, 12869, 293, 264, 2445, 2564, 294, 264, 6374, 35727, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.15267851478175112, "compression_ratio": 1.5588235294117647, "no_caption_prob": 1.8924736650660634e-05}, {"id": 692, "seek": 247544, "start": 2490.44, "end": 2492.7400000000002, "text": " It's not a magical global thing.", "tokens": [50364, 597, 1177, 380, 652, 2020, 570, 2171, 291, 818, 264, 912, 2445, 365, 819, 50552, 50552, 12869, 294, 264, 912, 1910, 11, 293, 729, 576, 550, 312, 588, 1152, 281, 1066, 2837, 295, 13, 50992, 50992, 400, 300, 311, 3122, 406, 577, 309, 1985, 13, 51114, 51114, 467, 311, 406, 257, 12066, 4338, 551, 13, 51229, 51229, 467, 767, 9512, 439, 264, 12869, 293, 264, 2445, 2564, 294, 264, 6374, 35727, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.15267851478175112, "compression_ratio": 1.5588235294117647, "no_caption_prob": 1.8924736650660634e-05}, {"id": 693, "seek": 247544, "start": 2492.7400000000002, "end": 2500.12, "text": " It actually stores all the arguments and the function itself in the virtual DOM.", "tokens": [50364, 597, 1177, 380, 652, 2020, 570, 2171, 291, 818, 264, 912, 2445, 365, 819, 50552, 50552, 12869, 294, 264, 912, 1910, 11, 293, 729, 576, 550, 312, 588, 1152, 281, 1066, 2837, 295, 13, 50992, 50992, 400, 300, 311, 3122, 406, 577, 309, 1985, 13, 51114, 51114, 467, 311, 406, 257, 12066, 4338, 551, 13, 51229, 51229, 467, 767, 9512, 439, 264, 12869, 293, 264, 2445, 2564, 294, 264, 6374, 35727, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.15267851478175112, "compression_ratio": 1.5588235294117647, "no_caption_prob": 1.8924736650660634e-05}, {"id": 694, "seek": 250012, "start": 2500.12, "end": 2507.02, "text": " So when it renders a virtual DOM, it knows that this node is something that will be mapped.", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 695, "seek": 250012, "start": 2507.02, "end": 2511.2799999999997, "text": " This node is just plain old HTML.", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 696, "seek": 250012, "start": 2511.2799999999997, "end": 2513.0, "text": " This node is lazy node.", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 697, "seek": 250012, "start": 2513.0, "end": 2514.0, "text": " Yeah, right.", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 698, "seek": 250012, "start": 2514.0, "end": 2515.0, "text": " Right.", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 699, "seek": 250012, "start": 2515.0, "end": 2520.68, "text": " And basically what it does is if this node is lazy, check whether its value has already", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 700, "seek": 250012, "start": 2520.68, "end": 2521.68, "text": " been computed.", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 701, "seek": 250012, "start": 2521.68, "end": 2523.46, "text": " If it has a cache in it.", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 702, "seek": 250012, "start": 2523.46, "end": 2528.44, "text": " If it does, and all of the arguments that are passed, including the function are the", "tokens": [50364, 407, 562, 309, 6125, 433, 257, 6374, 35727, 11, 309, 3255, 300, 341, 9984, 307, 746, 300, 486, 312, 33318, 13, 50709, 50709, 639, 9984, 307, 445, 11121, 1331, 17995, 13, 50922, 50922, 639, 9984, 307, 14847, 9984, 13, 51008, 51008, 865, 11, 558, 13, 51058, 51058, 1779, 13, 51108, 51108, 400, 1936, 437, 309, 775, 307, 498, 341, 9984, 307, 14847, 11, 1520, 1968, 1080, 2158, 575, 1217, 51392, 51392, 668, 40610, 13, 51442, 51442, 759, 309, 575, 257, 19459, 294, 309, 13, 51531, 51531, 759, 309, 775, 11, 293, 439, 295, 264, 12869, 300, 366, 4678, 11, 3009, 264, 2445, 366, 264, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.16346263885498047, "compression_ratio": 1.598326359832636, "no_caption_prob": 2.282691275468096e-05}, {"id": 703, "seek": 252844, "start": 2528.44, "end": 2536.08, "text": " same as the one I'm now getting, so nothing changed, then I can just return that value.", "tokens": [50364, 912, 382, 264, 472, 286, 478, 586, 1242, 11, 370, 1825, 3105, 11, 550, 286, 393, 445, 2736, 300, 2158, 13, 50746, 50746, 400, 286, 500, 380, 362, 281, 48000, 1169, 309, 797, 13, 50882, 50882, 1779, 13, 50932, 50932, 663, 1669, 2020, 13, 50982, 50982, 400, 5911, 11, 498, 746, 3105, 420, 1128, 40610, 341, 949, 11, 309, 486, 14722, 309, 13, 51283, 51283, 407, 309, 486, 767, 818, 264, 14847, 2445, 1830, 264, 7593, 295, 264, 6374, 35727, 11, 597, 51610, 51610, 307, 636, 1780, 813, 286, 5176, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1817207938746402, "compression_ratio": 1.5391304347826087, "no_caption_prob": 1.9220087779103778e-05}, {"id": 704, "seek": 252844, "start": 2536.08, "end": 2538.8, "text": " And I don't have to recompute it again.", "tokens": [50364, 912, 382, 264, 472, 286, 478, 586, 1242, 11, 370, 1825, 3105, 11, 550, 286, 393, 445, 2736, 300, 2158, 13, 50746, 50746, 400, 286, 500, 380, 362, 281, 48000, 1169, 309, 797, 13, 50882, 50882, 1779, 13, 50932, 50932, 663, 1669, 2020, 13, 50982, 50982, 400, 5911, 11, 498, 746, 3105, 420, 1128, 40610, 341, 949, 11, 309, 486, 14722, 309, 13, 51283, 51283, 407, 309, 486, 767, 818, 264, 14847, 2445, 1830, 264, 7593, 295, 264, 6374, 35727, 11, 597, 51610, 51610, 307, 636, 1780, 813, 286, 5176, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1817207938746402, "compression_ratio": 1.5391304347826087, "no_caption_prob": 1.9220087779103778e-05}, {"id": 705, "seek": 252844, "start": 2538.8, "end": 2539.8, "text": " Right.", "tokens": [50364, 912, 382, 264, 472, 286, 478, 586, 1242, 11, 370, 1825, 3105, 11, 550, 286, 393, 445, 2736, 300, 2158, 13, 50746, 50746, 400, 286, 500, 380, 362, 281, 48000, 1169, 309, 797, 13, 50882, 50882, 1779, 13, 50932, 50932, 663, 1669, 2020, 13, 50982, 50982, 400, 5911, 11, 498, 746, 3105, 420, 1128, 40610, 341, 949, 11, 309, 486, 14722, 309, 13, 51283, 51283, 407, 309, 486, 767, 818, 264, 14847, 2445, 1830, 264, 7593, 295, 264, 6374, 35727, 11, 597, 51610, 51610, 307, 636, 1780, 813, 286, 5176, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1817207938746402, "compression_ratio": 1.5391304347826087, "no_caption_prob": 1.9220087779103778e-05}, {"id": 706, "seek": 252844, "start": 2539.8, "end": 2540.8, "text": " That makes sense.", "tokens": [50364, 912, 382, 264, 472, 286, 478, 586, 1242, 11, 370, 1825, 3105, 11, 550, 286, 393, 445, 2736, 300, 2158, 13, 50746, 50746, 400, 286, 500, 380, 362, 281, 48000, 1169, 309, 797, 13, 50882, 50882, 1779, 13, 50932, 50932, 663, 1669, 2020, 13, 50982, 50982, 400, 5911, 11, 498, 746, 3105, 420, 1128, 40610, 341, 949, 11, 309, 486, 14722, 309, 13, 51283, 51283, 407, 309, 486, 767, 818, 264, 14847, 2445, 1830, 264, 7593, 295, 264, 6374, 35727, 11, 597, 51610, 51610, 307, 636, 1780, 813, 286, 5176, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1817207938746402, "compression_ratio": 1.5391304347826087, "no_caption_prob": 1.9220087779103778e-05}, {"id": 707, "seek": 252844, "start": 2540.8, "end": 2546.82, "text": " And otherwise, if something changed or never computed this before, it will compute it.", "tokens": [50364, 912, 382, 264, 472, 286, 478, 586, 1242, 11, 370, 1825, 3105, 11, 550, 286, 393, 445, 2736, 300, 2158, 13, 50746, 50746, 400, 286, 500, 380, 362, 281, 48000, 1169, 309, 797, 13, 50882, 50882, 1779, 13, 50932, 50932, 663, 1669, 2020, 13, 50982, 50982, 400, 5911, 11, 498, 746, 3105, 420, 1128, 40610, 341, 949, 11, 309, 486, 14722, 309, 13, 51283, 51283, 407, 309, 486, 767, 818, 264, 14847, 2445, 1830, 264, 7593, 295, 264, 6374, 35727, 11, 597, 51610, 51610, 307, 636, 1780, 813, 286, 5176, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1817207938746402, "compression_ratio": 1.5391304347826087, "no_caption_prob": 1.9220087779103778e-05}, {"id": 708, "seek": 252844, "start": 2546.82, "end": 2553.36, "text": " So it will actually call the lazy function during the diff of the virtual DOM, which", "tokens": [50364, 912, 382, 264, 472, 286, 478, 586, 1242, 11, 370, 1825, 3105, 11, 550, 286, 393, 445, 2736, 300, 2158, 13, 50746, 50746, 400, 286, 500, 380, 362, 281, 48000, 1169, 309, 797, 13, 50882, 50882, 1779, 13, 50932, 50932, 663, 1669, 2020, 13, 50982, 50982, 400, 5911, 11, 498, 746, 3105, 420, 1128, 40610, 341, 949, 11, 309, 486, 14722, 309, 13, 51283, 51283, 407, 309, 486, 767, 818, 264, 14847, 2445, 1830, 264, 7593, 295, 264, 6374, 35727, 11, 597, 51610, 51610, 307, 636, 1780, 813, 286, 5176, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1817207938746402, "compression_ratio": 1.5391304347826087, "no_caption_prob": 1.9220087779103778e-05}, {"id": 709, "seek": 252844, "start": 2553.36, "end": 2556.76, "text": " is way later than I expected.", "tokens": [50364, 912, 382, 264, 472, 286, 478, 586, 1242, 11, 370, 1825, 3105, 11, 550, 286, 393, 445, 2736, 300, 2158, 13, 50746, 50746, 400, 286, 500, 380, 362, 281, 48000, 1169, 309, 797, 13, 50882, 50882, 1779, 13, 50932, 50932, 663, 1669, 2020, 13, 50982, 50982, 400, 5911, 11, 498, 746, 3105, 420, 1128, 40610, 341, 949, 11, 309, 486, 14722, 309, 13, 51283, 51283, 407, 309, 486, 767, 818, 264, 14847, 2445, 1830, 264, 7593, 295, 264, 6374, 35727, 11, 597, 51610, 51610, 307, 636, 1780, 813, 286, 5176, 13, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.1817207938746402, "compression_ratio": 1.5391304347826087, "no_caption_prob": 1.9220087779103778e-05}, {"id": 710, "seek": 255676, "start": 2556.76, "end": 2560.7200000000003, "text": " Whereas for the other ones, it's when the view function gets called.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 711, "seek": 255676, "start": 2560.7200000000003, "end": 2564.2400000000002, "text": " But here it's done only when the diff is happening.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 712, "seek": 255676, "start": 2564.2400000000002, "end": 2565.2400000000002, "text": " Right.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 713, "seek": 255676, "start": 2565.2400000000002, "end": 2566.2400000000002, "text": " Interesting.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 714, "seek": 255676, "start": 2566.2400000000002, "end": 2567.2400000000002, "text": " That's really cool.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 715, "seek": 255676, "start": 2567.2400000000002, "end": 2568.2400000000002, "text": " Yeah.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 716, "seek": 255676, "start": 2568.2400000000002, "end": 2572.6000000000004, "text": " And then it sorts that value in the virtual DOM node, the lazy node.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 717, "seek": 255676, "start": 2572.6000000000004, "end": 2579.1200000000003, "text": " And it keeps the whole tree in its model or whatever.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 718, "seek": 255676, "start": 2579.1200000000003, "end": 2580.1200000000003, "text": " Right.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 719, "seek": 255676, "start": 2580.1200000000003, "end": 2582.6800000000003, "text": " So that's a lot cleaner than I expected.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 720, "seek": 255676, "start": 2582.6800000000003, "end": 2583.6800000000003, "text": " Yeah.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 721, "seek": 255676, "start": 2583.6800000000003, "end": 2584.6800000000003, "text": " It's really cool.", "tokens": [50364, 13813, 337, 264, 661, 2306, 11, 309, 311, 562, 264, 1910, 2445, 2170, 1219, 13, 50562, 50562, 583, 510, 309, 311, 1096, 787, 562, 264, 7593, 307, 2737, 13, 50738, 50738, 1779, 13, 50788, 50788, 14711, 13, 50838, 50838, 663, 311, 534, 1627, 13, 50888, 50888, 865, 13, 50938, 50938, 400, 550, 309, 7527, 300, 2158, 294, 264, 6374, 35727, 9984, 11, 264, 14847, 9984, 13, 51156, 51156, 400, 309, 5965, 264, 1379, 4230, 294, 1080, 2316, 420, 2035, 13, 51482, 51482, 1779, 13, 51532, 51532, 407, 300, 311, 257, 688, 16532, 813, 286, 5176, 13, 51660, 51660, 865, 13, 51710, 51710, 467, 311, 534, 1627, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.1868256749333562, "compression_ratio": 1.5973451327433628, "no_caption_prob": 1.3007015695620794e-05}, {"id": 722, "seek": 258468, "start": 2584.68, "end": 2594.0, "text": " So do you have a sense of best practices for when and where to use lazy?", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 723, "seek": 258468, "start": 2594.0, "end": 2600.12, "text": " If there's, like you mentioned, a header or a footer, how much of a difference is that", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 724, "seek": 258468, "start": 2600.12, "end": 2601.12, "text": " going to make?", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 725, "seek": 258468, "start": 2601.12, "end": 2603.0, "text": " It's hard to say without benchmarking, right?", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 726, "seek": 258468, "start": 2603.0, "end": 2604.0, "text": " Yeah.", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 727, "seek": 258468, "start": 2604.0, "end": 2606.68, "text": " And it's also hard to benchmark that.", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 728, "seek": 258468, "start": 2606.68, "end": 2610.7999999999997, "text": " But do you wait until there's a performance problem to add lazy?", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 729, "seek": 258468, "start": 2610.7999999999997, "end": 2613.68, "text": " Or do you add lazy eagerly or lazily?", "tokens": [50364, 407, 360, 291, 362, 257, 2020, 295, 1151, 7525, 337, 562, 293, 689, 281, 764, 14847, 30, 50830, 50830, 759, 456, 311, 11, 411, 291, 2835, 11, 257, 23117, 420, 257, 2671, 260, 11, 577, 709, 295, 257, 2649, 307, 300, 51136, 51136, 516, 281, 652, 30, 51186, 51186, 467, 311, 1152, 281, 584, 1553, 18927, 278, 11, 558, 30, 51280, 51280, 865, 13, 51330, 51330, 400, 309, 311, 611, 1152, 281, 18927, 300, 13, 51464, 51464, 583, 360, 291, 1699, 1826, 456, 311, 257, 3389, 1154, 281, 909, 14847, 30, 51670, 51670, 1610, 360, 291, 909, 14847, 18259, 356, 420, 19320, 953, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.16590667653966834, "compression_ratio": 1.5751072961373391, "no_caption_prob": 1.3211720215622336e-05}, {"id": 730, "seek": 261368, "start": 2613.68, "end": 2615.7599999999998, "text": " I guess is what I'm trying to ask.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 731, "seek": 261368, "start": 2615.7599999999998, "end": 2616.7599999999998, "text": " I do it lazily.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 732, "seek": 261368, "start": 2616.7599999999998, "end": 2621.68, "text": " The only way that it makes sense.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 733, "seek": 261368, "start": 2621.68, "end": 2622.68, "text": " Yeah.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 734, "seek": 261368, "start": 2622.68, "end": 2625.72, "text": " I rarely use it actually.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 735, "seek": 261368, "start": 2625.72, "end": 2632.6, "text": " Maybe because I work mostly with Elm Review where I don't have access to lazy.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 736, "seek": 261368, "start": 2632.6, "end": 2635.0, "text": " I use other tricks to do caching.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 737, "seek": 261368, "start": 2635.0, "end": 2636.0, "text": " Yeah.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 738, "seek": 261368, "start": 2636.0, "end": 2637.0, "text": " Right.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 739, "seek": 261368, "start": 2637.0, "end": 2638.0, "text": " The hard way.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 740, "seek": 261368, "start": 2638.0, "end": 2639.0, "text": " Yeah.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 741, "seek": 261368, "start": 2639.0, "end": 2640.0, "text": " The hard and tricky ways.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 742, "seek": 261368, "start": 2640.0, "end": 2641.0, "text": " Yeah.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 743, "seek": 261368, "start": 2641.0, "end": 2642.52, "text": " But lazy I rarely use.", "tokens": [50364, 286, 2041, 307, 437, 286, 478, 1382, 281, 1029, 13, 50468, 50468, 286, 360, 309, 19320, 953, 13, 50518, 50518, 440, 787, 636, 300, 309, 1669, 2020, 13, 50764, 50764, 865, 13, 50814, 50814, 286, 13752, 764, 309, 767, 13, 50966, 50966, 2704, 570, 286, 589, 5240, 365, 2699, 76, 19954, 689, 286, 500, 380, 362, 2105, 281, 14847, 13, 51310, 51310, 286, 764, 661, 11733, 281, 360, 269, 2834, 13, 51430, 51430, 865, 13, 51480, 51480, 1779, 13, 51530, 51530, 440, 1152, 636, 13, 51580, 51580, 865, 13, 51630, 51630, 440, 1152, 293, 12414, 2098, 13, 51680, 51680, 865, 13, 51730, 51730, 583, 14847, 286, 13752, 764, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.23548651163556936, "compression_ratio": 1.601010101010101, "no_caption_prob": 6.302085967035964e-05}, {"id": 744, "seek": 264252, "start": 2642.52, "end": 2648.8, "text": " Where I would use it is more like when I know that I will need to do pretty expensive stuff", "tokens": [50364, 2305, 286, 576, 764, 309, 307, 544, 411, 562, 286, 458, 300, 286, 486, 643, 281, 360, 1238, 5124, 1507, 50678, 50678, 293, 721, 300, 486, 13752, 1319, 13, 50822, 50822, 1171, 5197, 11, 498, 291, 362, 257, 2603, 1329, 295, 4754, 293, 291, 528, 281, 1333, 552, 13, 51120, 51120, 759, 264, 1329, 1177, 380, 1319, 588, 2049, 11, 550, 291, 393, 445, 24745, 14847, 293, 550, 291, 486, 51370, 51370, 787, 360, 264, 7527, 294, 264, 1910, 13, 51520, 51520, 6595, 300, 286, 536, 1596, 2049, 322, 264, 4829, 307, 411, 11, 1954, 11, 689, 820, 286, 1333, 341, 30, 51720, 51720, 6454, 286, 1333, 309, 294, 264, 9205, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.19546411777364797, "compression_ratio": 1.6755725190839694, "no_caption_prob": 4.069197893841192e-05}, {"id": 745, "seek": 264252, "start": 2648.8, "end": 2651.68, "text": " and things that will rarely change.", "tokens": [50364, 2305, 286, 576, 764, 309, 307, 544, 411, 562, 286, 458, 300, 286, 486, 643, 281, 360, 1238, 5124, 1507, 50678, 50678, 293, 721, 300, 486, 13752, 1319, 13, 50822, 50822, 1171, 5197, 11, 498, 291, 362, 257, 2603, 1329, 295, 4754, 293, 291, 528, 281, 1333, 552, 13, 51120, 51120, 759, 264, 1329, 1177, 380, 1319, 588, 2049, 11, 550, 291, 393, 445, 24745, 14847, 293, 550, 291, 486, 51370, 51370, 787, 360, 264, 7527, 294, 264, 1910, 13, 51520, 51520, 6595, 300, 286, 536, 1596, 2049, 322, 264, 4829, 307, 411, 11, 1954, 11, 689, 820, 286, 1333, 341, 30, 51720, 51720, 6454, 286, 1333, 309, 294, 264, 9205, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.19546411777364797, "compression_ratio": 1.6755725190839694, "no_caption_prob": 4.069197893841192e-05}, {"id": 746, "seek": 264252, "start": 2651.68, "end": 2657.64, "text": " For instance, if you have a huge list of items and you want to sort them.", "tokens": [50364, 2305, 286, 576, 764, 309, 307, 544, 411, 562, 286, 458, 300, 286, 486, 643, 281, 360, 1238, 5124, 1507, 50678, 50678, 293, 721, 300, 486, 13752, 1319, 13, 50822, 50822, 1171, 5197, 11, 498, 291, 362, 257, 2603, 1329, 295, 4754, 293, 291, 528, 281, 1333, 552, 13, 51120, 51120, 759, 264, 1329, 1177, 380, 1319, 588, 2049, 11, 550, 291, 393, 445, 24745, 14847, 293, 550, 291, 486, 51370, 51370, 787, 360, 264, 7527, 294, 264, 1910, 13, 51520, 51520, 6595, 300, 286, 536, 1596, 2049, 322, 264, 4829, 307, 411, 11, 1954, 11, 689, 820, 286, 1333, 341, 30, 51720, 51720, 6454, 286, 1333, 309, 294, 264, 9205, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.19546411777364797, "compression_ratio": 1.6755725190839694, "no_caption_prob": 4.069197893841192e-05}, {"id": 747, "seek": 264252, "start": 2657.64, "end": 2662.64, "text": " If the list doesn't change very often, then you can just sprinkle lazy and then you will", "tokens": [50364, 2305, 286, 576, 764, 309, 307, 544, 411, 562, 286, 458, 300, 286, 486, 643, 281, 360, 1238, 5124, 1507, 50678, 50678, 293, 721, 300, 486, 13752, 1319, 13, 50822, 50822, 1171, 5197, 11, 498, 291, 362, 257, 2603, 1329, 295, 4754, 293, 291, 528, 281, 1333, 552, 13, 51120, 51120, 759, 264, 1329, 1177, 380, 1319, 588, 2049, 11, 550, 291, 393, 445, 24745, 14847, 293, 550, 291, 486, 51370, 51370, 787, 360, 264, 7527, 294, 264, 1910, 13, 51520, 51520, 6595, 300, 286, 536, 1596, 2049, 322, 264, 4829, 307, 411, 11, 1954, 11, 689, 820, 286, 1333, 341, 30, 51720, 51720, 6454, 286, 1333, 309, 294, 264, 9205, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.19546411777364797, "compression_ratio": 1.6755725190839694, "no_caption_prob": 4.069197893841192e-05}, {"id": 748, "seek": 264252, "start": 2662.64, "end": 2665.64, "text": " only do the sorts in the view.", "tokens": [50364, 2305, 286, 576, 764, 309, 307, 544, 411, 562, 286, 458, 300, 286, 486, 643, 281, 360, 1238, 5124, 1507, 50678, 50678, 293, 721, 300, 486, 13752, 1319, 13, 50822, 50822, 1171, 5197, 11, 498, 291, 362, 257, 2603, 1329, 295, 4754, 293, 291, 528, 281, 1333, 552, 13, 51120, 51120, 759, 264, 1329, 1177, 380, 1319, 588, 2049, 11, 550, 291, 393, 445, 24745, 14847, 293, 550, 291, 486, 51370, 51370, 787, 360, 264, 7527, 294, 264, 1910, 13, 51520, 51520, 6595, 300, 286, 536, 1596, 2049, 322, 264, 4829, 307, 411, 11, 1954, 11, 689, 820, 286, 1333, 341, 30, 51720, 51720, 6454, 286, 1333, 309, 294, 264, 9205, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.19546411777364797, "compression_ratio": 1.6755725190839694, "no_caption_prob": 4.069197893841192e-05}, {"id": 749, "seek": 264252, "start": 2665.64, "end": 2669.64, "text": " Something that I see quite often on the topic is like, oh, where should I sort this?", "tokens": [50364, 2305, 286, 576, 764, 309, 307, 544, 411, 562, 286, 458, 300, 286, 486, 643, 281, 360, 1238, 5124, 1507, 50678, 50678, 293, 721, 300, 486, 13752, 1319, 13, 50822, 50822, 1171, 5197, 11, 498, 291, 362, 257, 2603, 1329, 295, 4754, 293, 291, 528, 281, 1333, 552, 13, 51120, 51120, 759, 264, 1329, 1177, 380, 1319, 588, 2049, 11, 550, 291, 393, 445, 24745, 14847, 293, 550, 291, 486, 51370, 51370, 787, 360, 264, 7527, 294, 264, 1910, 13, 51520, 51520, 6595, 300, 286, 536, 1596, 2049, 322, 264, 4829, 307, 411, 11, 1954, 11, 689, 820, 286, 1333, 341, 30, 51720, 51720, 6454, 286, 1333, 309, 294, 264, 9205, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.19546411777364797, "compression_ratio": 1.6755725190839694, "no_caption_prob": 4.069197893841192e-05}, {"id": 750, "seek": 264252, "start": 2669.64, "end": 2671.12, "text": " Should I sort it in the updates?", "tokens": [50364, 2305, 286, 576, 764, 309, 307, 544, 411, 562, 286, 458, 300, 286, 486, 643, 281, 360, 1238, 5124, 1507, 50678, 50678, 293, 721, 300, 486, 13752, 1319, 13, 50822, 50822, 1171, 5197, 11, 498, 291, 362, 257, 2603, 1329, 295, 4754, 293, 291, 528, 281, 1333, 552, 13, 51120, 51120, 759, 264, 1329, 1177, 380, 1319, 588, 2049, 11, 550, 291, 393, 445, 24745, 14847, 293, 550, 291, 486, 51370, 51370, 787, 360, 264, 7527, 294, 264, 1910, 13, 51520, 51520, 6595, 300, 286, 536, 1596, 2049, 322, 264, 4829, 307, 411, 11, 1954, 11, 689, 820, 286, 1333, 341, 30, 51720, 51720, 6454, 286, 1333, 309, 294, 264, 9205, 30, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.19546411777364797, "compression_ratio": 1.6755725190839694, "no_caption_prob": 4.069197893841192e-05}, {"id": 751, "seek": 267112, "start": 2671.12, "end": 2673.4, "text": " Or should I sort it in the view?", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 752, "seek": 267112, "start": 2673.4, "end": 2679.5, "text": " If you do it in the view and you lazify it, then it's simpler.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 753, "seek": 267112, "start": 2679.5, "end": 2680.5, "text": " It's free caching.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 754, "seek": 267112, "start": 2680.5, "end": 2684.96, "text": " It's caching that you can't do incorrectly, which should always win.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 755, "seek": 267112, "start": 2684.96, "end": 2685.96, "text": " Yeah.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 756, "seek": 267112, "start": 2685.96, "end": 2690.56, "text": " Because as we know, there are two difficult problems in computer science.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 757, "seek": 267112, "start": 2690.56, "end": 2693.4, "text": " Naming, caching, and off by one errors.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 758, "seek": 267112, "start": 2693.4, "end": 2694.4, "text": " Yeah.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 759, "seek": 267112, "start": 2694.4, "end": 2695.4, "text": " Exactly.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 760, "seek": 267112, "start": 2695.4, "end": 2696.4, "text": " Yeah.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 761, "seek": 267112, "start": 2696.4, "end": 2697.4, "text": " No.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 762, "seek": 267112, "start": 2697.4, "end": 2699.4, "text": " That's the ideal.", "tokens": [50364, 1610, 820, 286, 1333, 309, 294, 264, 1910, 30, 50478, 50478, 759, 291, 360, 309, 294, 264, 1910, 293, 291, 19320, 2505, 309, 11, 550, 309, 311, 18587, 13, 50783, 50783, 467, 311, 1737, 269, 2834, 13, 50833, 50833, 467, 311, 269, 2834, 300, 291, 393, 380, 360, 42892, 11, 597, 820, 1009, 1942, 13, 51056, 51056, 865, 13, 51106, 51106, 1436, 382, 321, 458, 11, 456, 366, 732, 2252, 2740, 294, 3820, 3497, 13, 51336, 51336, 426, 5184, 11, 269, 2834, 11, 293, 766, 538, 472, 13603, 13, 51478, 51478, 865, 13, 51528, 51528, 7587, 13, 51578, 51578, 865, 13, 51628, 51628, 883, 13, 51678, 51678, 663, 311, 264, 7157, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.19726090595639986, "compression_ratio": 1.5585585585585586, "no_caption_prob": 4.133442052989267e-05}, {"id": 763, "seek": 269940, "start": 2699.4, "end": 2704.96, "text": " You want your values to just trickle through your application without any possibility of", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 764, "seek": 269940, "start": 2704.96, "end": 2705.96, "text": " getting stale.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 765, "seek": 269940, "start": 2705.96, "end": 2706.96, "text": " Yeah.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 766, "seek": 269940, "start": 2706.96, "end": 2712.8, "text": " We didn't mention it before, but HTML lazy is very quick in the sense like the comparison", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 767, "seek": 269940, "start": 2712.8, "end": 2716.92, "text": " with all the arguments is very quick because it does triple equal.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 768, "seek": 269940, "start": 2716.92, "end": 2717.92, "text": " By reference.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 769, "seek": 269940, "start": 2717.92, "end": 2718.92, "text": " Yeah.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 770, "seek": 269940, "start": 2718.92, "end": 2719.92, "text": " Which is very, very fast.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 771, "seek": 269940, "start": 2719.92, "end": 2720.92, "text": " Right.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 772, "seek": 269940, "start": 2720.92, "end": 2724.92, "text": " So even if it gets defeated, it's not a huge cost.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 773, "seek": 269940, "start": 2724.92, "end": 2725.92, "text": " Yeah.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 774, "seek": 269940, "start": 2725.92, "end": 2728.8, "text": " But you want to avoid it getting busted.", "tokens": [50364, 509, 528, 428, 4190, 281, 445, 4282, 306, 807, 428, 3861, 1553, 604, 7959, 295, 50642, 50642, 1242, 342, 1220, 13, 50692, 50692, 865, 13, 50742, 50742, 492, 994, 380, 2152, 309, 949, 11, 457, 17995, 14847, 307, 588, 1702, 294, 264, 2020, 411, 264, 9660, 51034, 51034, 365, 439, 264, 12869, 307, 588, 1702, 570, 309, 775, 15508, 2681, 13, 51240, 51240, 3146, 6408, 13, 51290, 51290, 865, 13, 51340, 51340, 3013, 307, 588, 11, 588, 2370, 13, 51390, 51390, 1779, 13, 51440, 51440, 407, 754, 498, 309, 2170, 15563, 11, 309, 311, 406, 257, 2603, 2063, 13, 51640, 51640, 865, 13, 51690, 51690, 583, 291, 528, 281, 5042, 309, 1242, 41074, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.15781072842872748, "compression_ratio": 1.5795454545454546, "no_caption_prob": 1.7778271285351366e-05}, {"id": 775, "seek": 272880, "start": 2728.8, "end": 2729.8, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 776, "seek": 272880, "start": 2729.8, "end": 2739.0, "text": " So there's not much maintenance cost or computational overhead to using lazy in a suboptimal spot.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 777, "seek": 272880, "start": 2739.0, "end": 2740.0, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 778, "seek": 272880, "start": 2740.0, "end": 2742.6000000000004, "text": " I think at most it adds 10 comparison.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 779, "seek": 272880, "start": 2742.6000000000004, "end": 2743.6000000000004, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 780, "seek": 272880, "start": 2743.6000000000004, "end": 2744.6000000000004, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 781, "seek": 272880, "start": 2744.6000000000004, "end": 2746.1600000000003, "text": " Very quick comparison checks.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 782, "seek": 272880, "start": 2746.1600000000003, "end": 2747.1600000000003, "text": " Equal.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 783, "seek": 272880, "start": 2747.1600000000003, "end": 2748.1600000000003, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 784, "seek": 272880, "start": 2748.1600000000003, "end": 2749.1600000000003, "text": " That makes sense.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 785, "seek": 272880, "start": 2749.1600000000003, "end": 2751.6000000000004, "text": " So speaking of comparison.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 786, "seek": 272880, "start": 2751.6000000000004, "end": 2752.6000000000004, "text": " Actually it just might be.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 787, "seek": 272880, "start": 2752.6000000000004, "end": 2753.6000000000004, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 788, "seek": 272880, "start": 2753.6000000000004, "end": 2756.6000000000004, "text": " I think it's one comparison with a list of 10 elements maximum.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 789, "seek": 272880, "start": 2756.6000000000004, "end": 2757.6000000000004, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 790, "seek": 272880, "start": 2757.6000000000004, "end": 2758.6000000000004, "text": " That's what it does.", "tokens": [50364, 1779, 13, 50414, 50414, 407, 456, 311, 406, 709, 11258, 2063, 420, 28270, 19922, 281, 1228, 14847, 294, 257, 1422, 5747, 10650, 4008, 13, 50874, 50874, 865, 13, 50924, 50924, 286, 519, 412, 881, 309, 10860, 1266, 9660, 13, 51054, 51054, 865, 13, 51104, 51104, 1779, 13, 51154, 51154, 4372, 1702, 9660, 13834, 13, 51232, 51232, 15624, 304, 13, 51282, 51282, 865, 13, 51332, 51332, 663, 1669, 2020, 13, 51382, 51382, 407, 4124, 295, 9660, 13, 51504, 51504, 5135, 309, 445, 1062, 312, 13, 51554, 51554, 865, 13, 51604, 51604, 286, 519, 309, 311, 472, 9660, 365, 257, 1329, 295, 1266, 4959, 6674, 13, 51754, 51754, 865, 13, 51804, 51804, 663, 311, 437, 309, 775, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.20440138181050618, "compression_ratio": 1.6519823788546255, "no_caption_prob": 7.889214430178981e-06}, {"id": 791, "seek": 275860, "start": 2758.6, "end": 2759.6, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 792, "seek": 275860, "start": 2759.6, "end": 2760.6, "text": " Very cool.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 793, "seek": 275860, "start": 2760.6, "end": 2761.6, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 794, "seek": 275860, "start": 2761.6, "end": 2765.92, "text": " So speaking of comparison, Elm's equality is like, it's so nice to work with.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 795, "seek": 275860, "start": 2765.92, "end": 2773.5, "text": " And when you go back to other languages that don't use deep equal by default, you're like,", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 796, "seek": 275860, "start": 2773.5, "end": 2776.04, "text": " why isn't this equal?", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 797, "seek": 275860, "start": 2776.04, "end": 2777.92, "text": " These are definitely the same.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 798, "seek": 275860, "start": 2777.92, "end": 2779.46, "text": " And you're like, oh, that's right.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 799, "seek": 275860, "start": 2779.46, "end": 2780.46, "text": " They're comparing references.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 800, "seek": 275860, "start": 2780.46, "end": 2787.3199999999997, "text": " And you have to try so hard and use these hacks to check for equality properly.", "tokens": [50364, 865, 13, 50414, 50414, 4372, 1627, 13, 50464, 50464, 865, 13, 50514, 50514, 407, 4124, 295, 9660, 11, 2699, 76, 311, 14949, 307, 411, 11, 309, 311, 370, 1481, 281, 589, 365, 13, 50730, 50730, 400, 562, 291, 352, 646, 281, 661, 8650, 300, 500, 380, 764, 2452, 2681, 538, 7576, 11, 291, 434, 411, 11, 51109, 51109, 983, 1943, 380, 341, 2681, 30, 51236, 51236, 1981, 366, 2138, 264, 912, 13, 51330, 51330, 400, 291, 434, 411, 11, 1954, 11, 300, 311, 558, 13, 51407, 51407, 814, 434, 15763, 15400, 13, 51457, 51457, 400, 291, 362, 281, 853, 370, 1152, 293, 764, 613, 33617, 281, 1520, 337, 14949, 6108, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.15613355221955671, "compression_ratio": 1.6141078838174274, "no_caption_prob": 0.0001022946962621063}, {"id": 801, "seek": 278732, "start": 2787.32, "end": 2789.96, "text": " And it's so nice to not think about that in Elm.", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 802, "seek": 278732, "start": 2789.96, "end": 2793.6600000000003, "text": " But that is another place to look for potential performance bottlenecks.", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 803, "seek": 278732, "start": 2793.6600000000003, "end": 2799.48, "text": " If you're doing it over a large set of items doing equality, there is a little bit of a", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 804, "seek": 278732, "start": 2799.48, "end": 2807.28, "text": " performance cost if you're doing that equality a whole lot or over extremely complex data", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 805, "seek": 278732, "start": 2807.28, "end": 2812.04, "text": " structures because it is doing it when you do double equal in Elm, it is doing a deep", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 806, "seek": 278732, "start": 2812.04, "end": 2813.04, "text": " equal.", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 807, "seek": 278732, "start": 2813.04, "end": 2814.54, "text": " So that's something to be aware of.", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 808, "seek": 278732, "start": 2814.54, "end": 2816.48, "text": " So I don't know when I'll be done.", "tokens": [50364, 400, 309, 311, 370, 1481, 281, 406, 519, 466, 300, 294, 2699, 76, 13, 50496, 50496, 583, 300, 307, 1071, 1081, 281, 574, 337, 3995, 3389, 44641, 2761, 13, 50681, 50681, 759, 291, 434, 884, 309, 670, 257, 2416, 992, 295, 4754, 884, 14949, 11, 456, 307, 257, 707, 857, 295, 257, 50972, 50972, 3389, 2063, 498, 291, 434, 884, 300, 14949, 257, 1379, 688, 420, 670, 4664, 3997, 1412, 51362, 51362, 9227, 570, 309, 307, 884, 309, 562, 291, 360, 3834, 2681, 294, 2699, 76, 11, 309, 307, 884, 257, 2452, 51600, 51600, 2681, 13, 51650, 51650, 407, 300, 311, 746, 281, 312, 3650, 295, 13, 51725, 51725, 407, 286, 500, 380, 458, 562, 286, 603, 312, 1096, 13, 51822, 51822], "temperature": 0.0, "avg_logprob": -0.11386323744250883, "compression_ratio": 1.753787878787879, "no_caption_prob": 4.683665247284807e-05}, {"id": 809, "seek": 281648, "start": 2816.48, "end": 2819.96, "text": " I am working on an Elm review rule to detect lazy.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 810, "seek": 281648, "start": 2819.96, "end": 2821.4, "text": " That would be amazing.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 811, "seek": 281648, "start": 2821.4, "end": 2826.68, "text": " And this is really like one of the root rules that I wanted to make for Elm review.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 812, "seek": 281648, "start": 2826.68, "end": 2830.08, "text": " Like before I published it, this is really one.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 813, "seek": 281648, "start": 2830.08, "end": 2833.48, "text": " I want this one because this is such a non Elm thing.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 814, "seek": 281648, "start": 2833.48, "end": 2836.12, "text": " It should not be a problem for us.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 815, "seek": 281648, "start": 2836.12, "end": 2838.44, "text": " And we should have a tool to detect it.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 816, "seek": 281648, "start": 2838.44, "end": 2841.82, "text": " And that's why I'm making Elm review rule for it.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 817, "seek": 281648, "start": 2841.82, "end": 2842.82, "text": " It's a tricky one.", "tokens": [50364, 286, 669, 1364, 322, 364, 2699, 76, 3131, 4978, 281, 5531, 14847, 13, 50538, 50538, 663, 576, 312, 2243, 13, 50610, 50610, 400, 341, 307, 534, 411, 472, 295, 264, 5593, 4474, 300, 286, 1415, 281, 652, 337, 2699, 76, 3131, 13, 50874, 50874, 1743, 949, 286, 6572, 309, 11, 341, 307, 534, 472, 13, 51044, 51044, 286, 528, 341, 472, 570, 341, 307, 1270, 257, 2107, 2699, 76, 551, 13, 51214, 51214, 467, 820, 406, 312, 257, 1154, 337, 505, 13, 51346, 51346, 400, 321, 820, 362, 257, 2290, 281, 5531, 309, 13, 51462, 51462, 400, 300, 311, 983, 286, 478, 1455, 2699, 76, 3131, 4978, 337, 309, 13, 51631, 51631, 467, 311, 257, 12414, 472, 13, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.19438882733954757, "compression_ratio": 1.7521739130434784, "no_caption_prob": 1.0952786396956071e-05}, {"id": 818, "seek": 284282, "start": 2842.82, "end": 2849.2400000000002, "text": " It will probably not get it right all the time, but it should help at least.", "tokens": [50364, 467, 486, 1391, 406, 483, 309, 558, 439, 264, 565, 11, 457, 309, 820, 854, 412, 1935, 13, 50685, 50685, 1436, 291, 362, 281, 360, 411, 291, 645, 16141, 294, 527, 5162, 2699, 76, 3131, 3500, 11, 291, 362, 51019, 51019, 281, 360, 3095, 5215, 2010, 1507, 281, 2837, 689, 15400, 366, 4473, 420, 1348, 490, 13, 51357, 51357, 865, 13, 51407, 51407, 400, 264, 551, 307, 291, 500, 380, 458, 437, 486, 1319, 264, 6408, 13, 51575, 51575, 1171, 5197, 11, 498, 291, 818, 257, 2445, 11, 486, 309, 1319, 264, 6408, 30, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.17466517857142858, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.8407686841092072e-05}, {"id": 819, "seek": 284282, "start": 2849.2400000000002, "end": 2855.92, "text": " Because you have to do like you were describing in our recent Elm review episode, you have", "tokens": [50364, 467, 486, 1391, 406, 483, 309, 558, 439, 264, 565, 11, 457, 309, 820, 854, 412, 1935, 13, 50685, 50685, 1436, 291, 362, 281, 360, 411, 291, 645, 16141, 294, 527, 5162, 2699, 76, 3131, 3500, 11, 291, 362, 51019, 51019, 281, 360, 3095, 5215, 2010, 1507, 281, 2837, 689, 15400, 366, 4473, 420, 1348, 490, 13, 51357, 51357, 865, 13, 51407, 51407, 400, 264, 551, 307, 291, 500, 380, 458, 437, 486, 1319, 264, 6408, 13, 51575, 51575, 1171, 5197, 11, 498, 291, 818, 257, 2445, 11, 486, 309, 1319, 264, 6408, 30, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.17466517857142858, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.8407686841092072e-05}, {"id": 820, "seek": 284282, "start": 2855.92, "end": 2862.6800000000003, "text": " to do flow analysis type stuff to track where references are changing or coming from.", "tokens": [50364, 467, 486, 1391, 406, 483, 309, 558, 439, 264, 565, 11, 457, 309, 820, 854, 412, 1935, 13, 50685, 50685, 1436, 291, 362, 281, 360, 411, 291, 645, 16141, 294, 527, 5162, 2699, 76, 3131, 3500, 11, 291, 362, 51019, 51019, 281, 360, 3095, 5215, 2010, 1507, 281, 2837, 689, 15400, 366, 4473, 420, 1348, 490, 13, 51357, 51357, 865, 13, 51407, 51407, 400, 264, 551, 307, 291, 500, 380, 458, 437, 486, 1319, 264, 6408, 13, 51575, 51575, 1171, 5197, 11, 498, 291, 818, 257, 2445, 11, 486, 309, 1319, 264, 6408, 30, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.17466517857142858, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.8407686841092072e-05}, {"id": 821, "seek": 284282, "start": 2862.6800000000003, "end": 2863.6800000000003, "text": " Yeah.", "tokens": [50364, 467, 486, 1391, 406, 483, 309, 558, 439, 264, 565, 11, 457, 309, 820, 854, 412, 1935, 13, 50685, 50685, 1436, 291, 362, 281, 360, 411, 291, 645, 16141, 294, 527, 5162, 2699, 76, 3131, 3500, 11, 291, 362, 51019, 51019, 281, 360, 3095, 5215, 2010, 1507, 281, 2837, 689, 15400, 366, 4473, 420, 1348, 490, 13, 51357, 51357, 865, 13, 51407, 51407, 400, 264, 551, 307, 291, 500, 380, 458, 437, 486, 1319, 264, 6408, 13, 51575, 51575, 1171, 5197, 11, 498, 291, 818, 257, 2445, 11, 486, 309, 1319, 264, 6408, 30, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.17466517857142858, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.8407686841092072e-05}, {"id": 822, "seek": 284282, "start": 2863.6800000000003, "end": 2867.04, "text": " And the thing is you don't know what will change the reference.", "tokens": [50364, 467, 486, 1391, 406, 483, 309, 558, 439, 264, 565, 11, 457, 309, 820, 854, 412, 1935, 13, 50685, 50685, 1436, 291, 362, 281, 360, 411, 291, 645, 16141, 294, 527, 5162, 2699, 76, 3131, 3500, 11, 291, 362, 51019, 51019, 281, 360, 3095, 5215, 2010, 1507, 281, 2837, 689, 15400, 366, 4473, 420, 1348, 490, 13, 51357, 51357, 865, 13, 51407, 51407, 400, 264, 551, 307, 291, 500, 380, 458, 437, 486, 1319, 264, 6408, 13, 51575, 51575, 1171, 5197, 11, 498, 291, 818, 257, 2445, 11, 486, 309, 1319, 264, 6408, 30, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.17466517857142858, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.8407686841092072e-05}, {"id": 823, "seek": 284282, "start": 2867.04, "end": 2871.0, "text": " For instance, if you call a function, will it change the reference?", "tokens": [50364, 467, 486, 1391, 406, 483, 309, 558, 439, 264, 565, 11, 457, 309, 820, 854, 412, 1935, 13, 50685, 50685, 1436, 291, 362, 281, 360, 411, 291, 645, 16141, 294, 527, 5162, 2699, 76, 3131, 3500, 11, 291, 362, 51019, 51019, 281, 360, 3095, 5215, 2010, 1507, 281, 2837, 689, 15400, 366, 4473, 420, 1348, 490, 13, 51357, 51357, 865, 13, 51407, 51407, 400, 264, 551, 307, 291, 500, 380, 458, 437, 486, 1319, 264, 6408, 13, 51575, 51575, 1171, 5197, 11, 498, 291, 818, 257, 2445, 11, 486, 309, 1319, 264, 6408, 30, 51773, 51773], "temperature": 0.0, "avg_logprob": -0.17466517857142858, "compression_ratio": 1.6428571428571428, "no_caption_prob": 2.8407686841092072e-05}, {"id": 824, "seek": 287100, "start": 2871.0, "end": 2875.0, "text": " D doesn't change the reference, list.map does.", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 825, "seek": 287100, "start": 2875.0, "end": 2879.02, "text": " And you basically need to know what every function does.", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 826, "seek": 287100, "start": 2879.02, "end": 2884.4, "text": " If you really want to get it right and function from dependencies, I don't have access to", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 827, "seek": 287100, "start": 2884.4, "end": 2885.4, "text": " search codes.", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 828, "seek": 287100, "start": 2885.4, "end": 2888.8, "text": " I could, but it would be a lot.", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 829, "seek": 287100, "start": 2888.8, "end": 2891.92, "text": " It would be very expensive to compute that.", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 830, "seek": 287100, "start": 2891.92, "end": 2893.28, "text": " Interesting.", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 831, "seek": 287100, "start": 2893.28, "end": 2899.68, "text": " I will try to get it as right as possible and with as few false positive as possible", "tokens": [50364, 413, 1177, 380, 1319, 264, 6408, 11, 1329, 13, 24223, 775, 13, 50564, 50564, 400, 291, 1936, 643, 281, 458, 437, 633, 2445, 775, 13, 50765, 50765, 759, 291, 534, 528, 281, 483, 309, 558, 293, 2445, 490, 36606, 11, 286, 500, 380, 362, 2105, 281, 51034, 51034, 3164, 14211, 13, 51084, 51084, 286, 727, 11, 457, 309, 576, 312, 257, 688, 13, 51254, 51254, 467, 576, 312, 588, 5124, 281, 14722, 300, 13, 51410, 51410, 14711, 13, 51478, 51478, 286, 486, 853, 281, 483, 309, 382, 558, 382, 1944, 293, 365, 382, 1326, 7908, 3353, 382, 1944, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2699473511938955, "compression_ratio": 1.6784140969162995, "no_caption_prob": 1.7778220353648067e-05}, {"id": 832, "seek": 289968, "start": 2899.68, "end": 2901.8799999999997, "text": " as usual.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 833, "seek": 289968, "start": 2901.8799999999997, "end": 2902.8799999999997, "text": " Very cool.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 834, "seek": 289968, "start": 2902.8799999999997, "end": 2903.8799999999997, "text": " That's amazing.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 835, "seek": 289968, "start": 2903.8799999999997, "end": 2906.64, "text": " So maybe it's published already by the time you're hearing this.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 836, "seek": 289968, "start": 2906.64, "end": 2908.3999999999996, "text": " Oh, yeah, that's true.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 837, "seek": 289968, "start": 2908.3999999999996, "end": 2909.68, "text": " I'm taking some out today.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 838, "seek": 289968, "start": 2909.68, "end": 2914.68, "text": " So don't be surprised if it's not here yet.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 839, "seek": 289968, "start": 2914.68, "end": 2915.68, "text": " And I'm being lazy.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 840, "seek": 289968, "start": 2915.68, "end": 2921.56, "text": " Yeah, you're either being lazy or you published a lazy package, but lazy somewhere or the", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 841, "seek": 289968, "start": 2921.56, "end": 2922.56, "text": " other.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 842, "seek": 289968, "start": 2922.56, "end": 2923.56, "text": " Yeah.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 843, "seek": 289968, "start": 2923.56, "end": 2924.56, "text": " So, okay.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 844, "seek": 289968, "start": 2924.56, "end": 2928.7599999999998, "text": " So other performance things to think about.", "tokens": [50364, 382, 7713, 13, 50474, 50474, 4372, 1627, 13, 50524, 50524, 663, 311, 2243, 13, 50574, 50574, 407, 1310, 309, 311, 6572, 1217, 538, 264, 565, 291, 434, 4763, 341, 13, 50712, 50712, 876, 11, 1338, 11, 300, 311, 2074, 13, 50800, 50800, 286, 478, 1940, 512, 484, 965, 13, 50864, 50864, 407, 500, 380, 312, 6100, 498, 309, 311, 406, 510, 1939, 13, 51114, 51114, 400, 286, 478, 885, 14847, 13, 51164, 51164, 865, 11, 291, 434, 2139, 885, 14847, 420, 291, 6572, 257, 14847, 7372, 11, 457, 14847, 4079, 420, 264, 51458, 51458, 661, 13, 51508, 51508, 865, 13, 51558, 51558, 407, 11, 1392, 13, 51608, 51608, 407, 661, 3389, 721, 281, 519, 466, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.24072066942850748, "compression_ratio": 1.631578947368421, "no_caption_prob": 4.00629396608565e-05}, {"id": 845, "seek": 292876, "start": 2928.76, "end": 2935.4, "text": " So I think, you know, again, like I was saying before, like go back to the basics, think", "tokens": [50364, 407, 286, 519, 11, 291, 458, 11, 797, 11, 411, 286, 390, 1566, 949, 11, 411, 352, 646, 281, 264, 14688, 11, 519, 50696, 50696, 466, 264, 3663, 291, 434, 2614, 322, 13, 50769, 50769, 509, 393, 380, 519, 466, 3389, 294, 257, 14224, 293, 321, 434, 2614, 3089, 300, 715, 4680, 281, 15778, 51085, 51085, 294, 257, 11185, 13, 51138, 51138, 407, 321, 362, 281, 1223, 11, 337, 1365, 11, 24438, 2744, 307, 1238, 1021, 337, 5883, 3677, 51458, 51458, 3389, 293, 2699, 76, 575, 3116, 3089, 29224, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.10917725461594602, "compression_ratio": 1.617391304347826, "no_caption_prob": 1.147845159721328e-05}, {"id": 846, "seek": 292876, "start": 2935.4, "end": 2936.86, "text": " about the platform you're running on.", "tokens": [50364, 407, 286, 519, 11, 291, 458, 11, 797, 11, 411, 286, 390, 1566, 949, 11, 411, 352, 646, 281, 264, 14688, 11, 519, 50696, 50696, 466, 264, 3663, 291, 434, 2614, 322, 13, 50769, 50769, 509, 393, 380, 519, 466, 3389, 294, 257, 14224, 293, 321, 434, 2614, 3089, 300, 715, 4680, 281, 15778, 51085, 51085, 294, 257, 11185, 13, 51138, 51138, 407, 321, 362, 281, 1223, 11, 337, 1365, 11, 24438, 2744, 307, 1238, 1021, 337, 5883, 3677, 51458, 51458, 3389, 293, 2699, 76, 575, 3116, 3089, 29224, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.10917725461594602, "compression_ratio": 1.617391304347826, "no_caption_prob": 1.147845159721328e-05}, {"id": 847, "seek": 292876, "start": 2936.86, "end": 2943.1800000000003, "text": " You can't think about performance in a vacuum and we're running code that compiles to JavaScript", "tokens": [50364, 407, 286, 519, 11, 291, 458, 11, 797, 11, 411, 286, 390, 1566, 949, 11, 411, 352, 646, 281, 264, 14688, 11, 519, 50696, 50696, 466, 264, 3663, 291, 434, 2614, 322, 13, 50769, 50769, 509, 393, 380, 519, 466, 3389, 294, 257, 14224, 293, 321, 434, 2614, 3089, 300, 715, 4680, 281, 15778, 51085, 51085, 294, 257, 11185, 13, 51138, 51138, 407, 321, 362, 281, 1223, 11, 337, 1365, 11, 24438, 2744, 307, 1238, 1021, 337, 5883, 3677, 51458, 51458, 3389, 293, 2699, 76, 575, 3116, 3089, 29224, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.10917725461594602, "compression_ratio": 1.617391304347826, "no_caption_prob": 1.147845159721328e-05}, {"id": 848, "seek": 292876, "start": 2943.1800000000003, "end": 2944.2400000000002, "text": " in a browser.", "tokens": [50364, 407, 286, 519, 11, 291, 458, 11, 797, 11, 411, 286, 390, 1566, 949, 11, 411, 352, 646, 281, 264, 14688, 11, 519, 50696, 50696, 466, 264, 3663, 291, 434, 2614, 322, 13, 50769, 50769, 509, 393, 380, 519, 466, 3389, 294, 257, 14224, 293, 321, 434, 2614, 3089, 300, 715, 4680, 281, 15778, 51085, 51085, 294, 257, 11185, 13, 51138, 51138, 407, 321, 362, 281, 1223, 11, 337, 1365, 11, 24438, 2744, 307, 1238, 1021, 337, 5883, 3677, 51458, 51458, 3389, 293, 2699, 76, 575, 3116, 3089, 29224, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.10917725461594602, "compression_ratio": 1.617391304347826, "no_caption_prob": 1.147845159721328e-05}, {"id": 849, "seek": 292876, "start": 2944.2400000000002, "end": 2950.6400000000003, "text": " So we have to understand, for example, bundle size is pretty important for initial load", "tokens": [50364, 407, 286, 519, 11, 291, 458, 11, 797, 11, 411, 286, 390, 1566, 949, 11, 411, 352, 646, 281, 264, 14688, 11, 519, 50696, 50696, 466, 264, 3663, 291, 434, 2614, 322, 13, 50769, 50769, 509, 393, 380, 519, 466, 3389, 294, 257, 14224, 293, 321, 434, 2614, 3089, 300, 715, 4680, 281, 15778, 51085, 51085, 294, 257, 11185, 13, 51138, 51138, 407, 321, 362, 281, 1223, 11, 337, 1365, 11, 24438, 2744, 307, 1238, 1021, 337, 5883, 3677, 51458, 51458, 3389, 293, 2699, 76, 575, 3116, 3089, 29224, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.10917725461594602, "compression_ratio": 1.617391304347826, "no_caption_prob": 1.147845159721328e-05}, {"id": 850, "seek": 292876, "start": 2950.6400000000003, "end": 2954.1000000000004, "text": " performance and Elm has dead code elimination.", "tokens": [50364, 407, 286, 519, 11, 291, 458, 11, 797, 11, 411, 286, 390, 1566, 949, 11, 411, 352, 646, 281, 264, 14688, 11, 519, 50696, 50696, 466, 264, 3663, 291, 434, 2614, 322, 13, 50769, 50769, 509, 393, 380, 519, 466, 3389, 294, 257, 14224, 293, 321, 434, 2614, 3089, 300, 715, 4680, 281, 15778, 51085, 51085, 294, 257, 11185, 13, 51138, 51138, 407, 321, 362, 281, 1223, 11, 337, 1365, 11, 24438, 2744, 307, 1238, 1021, 337, 5883, 3677, 51458, 51458, 3389, 293, 2699, 76, 575, 3116, 3089, 29224, 13, 51631, 51631], "temperature": 0.0, "avg_logprob": -0.10917725461594602, "compression_ratio": 1.617391304347826, "no_caption_prob": 1.147845159721328e-05}, {"id": 851, "seek": 295410, "start": 2954.1, "end": 2962.92, "text": " So I think it's important, even though Elm does this for us under the hood, if you understand", "tokens": [50364, 407, 286, 519, 309, 311, 1021, 11, 754, 1673, 2699, 76, 775, 341, 337, 505, 833, 264, 13376, 11, 498, 291, 1223, 50805, 50805, 437, 309, 311, 884, 257, 707, 857, 11, 550, 309, 1062, 854, 291, 747, 5002, 295, 309, 544, 3612, 13, 51113, 51113, 407, 411, 1936, 11, 286, 519, 9343, 11860, 299, 390, 16141, 309, 3938, 1566, 300, 309, 311, 767, 51507, 51507, 406, 3116, 3089, 29224, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11332036336263021, "compression_ratio": 1.5025125628140703, "no_caption_prob": 2.4298478820128366e-05}, {"id": 852, "seek": 295410, "start": 2962.92, "end": 2969.08, "text": " what it's doing a little bit, then it might help you take advantage of it more easily.", "tokens": [50364, 407, 286, 519, 309, 311, 1021, 11, 754, 1673, 2699, 76, 775, 341, 337, 505, 833, 264, 13376, 11, 498, 291, 1223, 50805, 50805, 437, 309, 311, 884, 257, 707, 857, 11, 550, 309, 1062, 854, 291, 747, 5002, 295, 309, 544, 3612, 13, 51113, 51113, 407, 411, 1936, 11, 286, 519, 9343, 11860, 299, 390, 16141, 309, 3938, 1566, 300, 309, 311, 767, 51507, 51507, 406, 3116, 3089, 29224, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11332036336263021, "compression_ratio": 1.5025125628140703, "no_caption_prob": 2.4298478820128366e-05}, {"id": 853, "seek": 295410, "start": 2969.08, "end": 2976.96, "text": " So like basically, I think Mario Rogic was describing it recently saying that it's actually", "tokens": [50364, 407, 286, 519, 309, 311, 1021, 11, 754, 1673, 2699, 76, 775, 341, 337, 505, 833, 264, 13376, 11, 498, 291, 1223, 50805, 50805, 437, 309, 311, 884, 257, 707, 857, 11, 550, 309, 1062, 854, 291, 747, 5002, 295, 309, 544, 3612, 13, 51113, 51113, 407, 411, 1936, 11, 286, 519, 9343, 11860, 299, 390, 16141, 309, 3938, 1566, 300, 309, 311, 767, 51507, 51507, 406, 3116, 3089, 29224, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11332036336263021, "compression_ratio": 1.5025125628140703, "no_caption_prob": 2.4298478820128366e-05}, {"id": 854, "seek": 295410, "start": 2976.96, "end": 2979.06, "text": " not dead code elimination.", "tokens": [50364, 407, 286, 519, 309, 311, 1021, 11, 754, 1673, 2699, 76, 775, 341, 337, 505, 833, 264, 13376, 11, 498, 291, 1223, 50805, 50805, 437, 309, 311, 884, 257, 707, 857, 11, 550, 309, 1062, 854, 291, 747, 5002, 295, 309, 544, 3612, 13, 51113, 51113, 407, 411, 1936, 11, 286, 519, 9343, 11860, 299, 390, 16141, 309, 3938, 1566, 300, 309, 311, 767, 51507, 51507, 406, 3116, 3089, 29224, 13, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.11332036336263021, "compression_ratio": 1.5025125628140703, "no_caption_prob": 2.4298478820128366e-05}, {"id": 855, "seek": 297906, "start": 2979.06, "end": 2984.7, "text": " It's live code inclusion, which I thought was a nice way to describe it.", "tokens": [50364, 467, 311, 1621, 3089, 15874, 11, 597, 286, 1194, 390, 257, 1481, 636, 281, 6786, 309, 13, 50646, 50646, 407, 411, 437, 415, 1355, 538, 300, 307, 300, 264, 2699, 76, 31958, 19320, 953, 16982, 294, 3089, 382, 2978, 50966, 50966, 300, 291, 6408, 13, 51027, 51027, 407, 498, 3089, 1177, 380, 483, 32734, 11, 264, 31958, 1943, 380, 516, 281, 2524, 309, 293, 309, 311, 406, 516, 51316, 51316, 281, 2235, 300, 294, 293, 31413, 309, 13, 51423, 51423, 407, 291, 722, 365, 264, 2135, 11, 291, 574, 412, 437, 309, 4960, 11, 291, 2235, 729, 294, 11, 574, 412, 437, 436, 51738, 51738, 764, 11, 1030, 11458, 11, 1030, 11458, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.09447434417202942, "compression_ratio": 1.798283261802575, "no_caption_prob": 2.7534455512068234e-05}, {"id": 856, "seek": 297906, "start": 2984.7, "end": 2991.1, "text": " So like what he means by that is that the Elm compiler lazily pulls in code as needed", "tokens": [50364, 467, 311, 1621, 3089, 15874, 11, 597, 286, 1194, 390, 257, 1481, 636, 281, 6786, 309, 13, 50646, 50646, 407, 411, 437, 415, 1355, 538, 300, 307, 300, 264, 2699, 76, 31958, 19320, 953, 16982, 294, 3089, 382, 2978, 50966, 50966, 300, 291, 6408, 13, 51027, 51027, 407, 498, 3089, 1177, 380, 483, 32734, 11, 264, 31958, 1943, 380, 516, 281, 2524, 309, 293, 309, 311, 406, 516, 51316, 51316, 281, 2235, 300, 294, 293, 31413, 309, 13, 51423, 51423, 407, 291, 722, 365, 264, 2135, 11, 291, 574, 412, 437, 309, 4960, 11, 291, 2235, 729, 294, 11, 574, 412, 437, 436, 51738, 51738, 764, 11, 1030, 11458, 11, 1030, 11458, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.09447434417202942, "compression_ratio": 1.798283261802575, "no_caption_prob": 2.7534455512068234e-05}, {"id": 857, "seek": 297906, "start": 2991.1, "end": 2992.32, "text": " that you reference.", "tokens": [50364, 467, 311, 1621, 3089, 15874, 11, 597, 286, 1194, 390, 257, 1481, 636, 281, 6786, 309, 13, 50646, 50646, 407, 411, 437, 415, 1355, 538, 300, 307, 300, 264, 2699, 76, 31958, 19320, 953, 16982, 294, 3089, 382, 2978, 50966, 50966, 300, 291, 6408, 13, 51027, 51027, 407, 498, 3089, 1177, 380, 483, 32734, 11, 264, 31958, 1943, 380, 516, 281, 2524, 309, 293, 309, 311, 406, 516, 51316, 51316, 281, 2235, 300, 294, 293, 31413, 309, 13, 51423, 51423, 407, 291, 722, 365, 264, 2135, 11, 291, 574, 412, 437, 309, 4960, 11, 291, 2235, 729, 294, 11, 574, 412, 437, 436, 51738, 51738, 764, 11, 1030, 11458, 11, 1030, 11458, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.09447434417202942, "compression_ratio": 1.798283261802575, "no_caption_prob": 2.7534455512068234e-05}, {"id": 858, "seek": 297906, "start": 2992.32, "end": 2998.1, "text": " So if code doesn't get referenced, the compiler isn't going to reach it and it's not going", "tokens": [50364, 467, 311, 1621, 3089, 15874, 11, 597, 286, 1194, 390, 257, 1481, 636, 281, 6786, 309, 13, 50646, 50646, 407, 411, 437, 415, 1355, 538, 300, 307, 300, 264, 2699, 76, 31958, 19320, 953, 16982, 294, 3089, 382, 2978, 50966, 50966, 300, 291, 6408, 13, 51027, 51027, 407, 498, 3089, 1177, 380, 483, 32734, 11, 264, 31958, 1943, 380, 516, 281, 2524, 309, 293, 309, 311, 406, 516, 51316, 51316, 281, 2235, 300, 294, 293, 31413, 309, 13, 51423, 51423, 407, 291, 722, 365, 264, 2135, 11, 291, 574, 412, 437, 309, 4960, 11, 291, 2235, 729, 294, 11, 574, 412, 437, 436, 51738, 51738, 764, 11, 1030, 11458, 11, 1030, 11458, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.09447434417202942, "compression_ratio": 1.798283261802575, "no_caption_prob": 2.7534455512068234e-05}, {"id": 859, "seek": 297906, "start": 2998.1, "end": 3000.24, "text": " to pull that in and compile it.", "tokens": [50364, 467, 311, 1621, 3089, 15874, 11, 597, 286, 1194, 390, 257, 1481, 636, 281, 6786, 309, 13, 50646, 50646, 407, 411, 437, 415, 1355, 538, 300, 307, 300, 264, 2699, 76, 31958, 19320, 953, 16982, 294, 3089, 382, 2978, 50966, 50966, 300, 291, 6408, 13, 51027, 51027, 407, 498, 3089, 1177, 380, 483, 32734, 11, 264, 31958, 1943, 380, 516, 281, 2524, 309, 293, 309, 311, 406, 516, 51316, 51316, 281, 2235, 300, 294, 293, 31413, 309, 13, 51423, 51423, 407, 291, 722, 365, 264, 2135, 11, 291, 574, 412, 437, 309, 4960, 11, 291, 2235, 729, 294, 11, 574, 412, 437, 436, 51738, 51738, 764, 11, 1030, 11458, 11, 1030, 11458, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.09447434417202942, "compression_ratio": 1.798283261802575, "no_caption_prob": 2.7534455512068234e-05}, {"id": 860, "seek": 297906, "start": 3000.24, "end": 3006.54, "text": " So you start with the main, you look at what it uses, you pull those in, look at what they", "tokens": [50364, 467, 311, 1621, 3089, 15874, 11, 597, 286, 1194, 390, 257, 1481, 636, 281, 6786, 309, 13, 50646, 50646, 407, 411, 437, 415, 1355, 538, 300, 307, 300, 264, 2699, 76, 31958, 19320, 953, 16982, 294, 3089, 382, 2978, 50966, 50966, 300, 291, 6408, 13, 51027, 51027, 407, 498, 3089, 1177, 380, 483, 32734, 11, 264, 31958, 1943, 380, 516, 281, 2524, 309, 293, 309, 311, 406, 516, 51316, 51316, 281, 2235, 300, 294, 293, 31413, 309, 13, 51423, 51423, 407, 291, 722, 365, 264, 2135, 11, 291, 574, 412, 437, 309, 4960, 11, 291, 2235, 729, 294, 11, 574, 412, 437, 436, 51738, 51738, 764, 11, 1030, 11458, 11, 1030, 11458, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.09447434417202942, "compression_ratio": 1.798283261802575, "no_caption_prob": 2.7534455512068234e-05}, {"id": 861, "seek": 297906, "start": 3006.54, "end": 3008.52, "text": " use, et cetera, et cetera.", "tokens": [50364, 467, 311, 1621, 3089, 15874, 11, 597, 286, 1194, 390, 257, 1481, 636, 281, 6786, 309, 13, 50646, 50646, 407, 411, 437, 415, 1355, 538, 300, 307, 300, 264, 2699, 76, 31958, 19320, 953, 16982, 294, 3089, 382, 2978, 50966, 50966, 300, 291, 6408, 13, 51027, 51027, 407, 498, 3089, 1177, 380, 483, 32734, 11, 264, 31958, 1943, 380, 516, 281, 2524, 309, 293, 309, 311, 406, 516, 51316, 51316, 281, 2235, 300, 294, 293, 31413, 309, 13, 51423, 51423, 407, 291, 722, 365, 264, 2135, 11, 291, 574, 412, 437, 309, 4960, 11, 291, 2235, 729, 294, 11, 574, 412, 437, 436, 51738, 51738, 764, 11, 1030, 11458, 11, 1030, 11458, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.09447434417202942, "compression_ratio": 1.798283261802575, "no_caption_prob": 2.7534455512068234e-05}, {"id": 862, "seek": 300852, "start": 3008.52, "end": 3014.52, "text": " And when you've reached all the functions that were used, you take all those, you put", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 863, "seek": 300852, "start": 3014.52, "end": 3017.24, "text": " them in the bundle and you forget all the rest.", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 864, "seek": 300852, "start": 3017.24, "end": 3018.24, "text": " Right.", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 865, "seek": 300852, "start": 3018.24, "end": 3021.36, "text": " And Elm doesn't care what you import.", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 866, "seek": 300852, "start": 3021.36, "end": 3026.52, "text": " If you import something and don't use it, although if you're using Elm review unused,", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 867, "seek": 300852, "start": 3026.52, "end": 3029.24, "text": " then hopefully you don't have unused imports.", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 868, "seek": 300852, "start": 3029.24, "end": 3030.98, "text": " But even if you do, Elm doesn't care.", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 869, "seek": 300852, "start": 3030.98, "end": 3036.22, "text": " It cares the functions that you invoke that are reachable.", "tokens": [50364, 400, 562, 291, 600, 6488, 439, 264, 6828, 300, 645, 1143, 11, 291, 747, 439, 729, 11, 291, 829, 50664, 50664, 552, 294, 264, 24438, 293, 291, 2870, 439, 264, 1472, 13, 50800, 50800, 1779, 13, 50850, 50850, 400, 2699, 76, 1177, 380, 1127, 437, 291, 974, 13, 51006, 51006, 759, 291, 974, 746, 293, 500, 380, 764, 309, 11, 4878, 498, 291, 434, 1228, 2699, 76, 3131, 44383, 11, 51264, 51264, 550, 4696, 291, 500, 380, 362, 44383, 41596, 13, 51400, 51400, 583, 754, 498, 291, 360, 11, 2699, 76, 1177, 380, 1127, 13, 51487, 51487, 467, 12310, 264, 6828, 300, 291, 41117, 300, 366, 2524, 712, 13, 51749, 51749], "temperature": 0.0, "avg_logprob": -0.12950694666499585, "compression_ratio": 1.7929515418502202, "no_caption_prob": 1.568918196426239e-05}, {"id": 870, "seek": 303622, "start": 3036.22, "end": 3039.62, "text": " So Elm does function level dead code elimination.", "tokens": [50364, 407, 2699, 76, 775, 2445, 1496, 3116, 3089, 29224, 13, 50534, 50534, 407, 498, 291, 3877, 721, 294, 257, 636, 11, 498, 291, 2557, 257, 7410, 2136, 293, 291, 787, 764, 472, 50898, 50898, 2519, 294, 257, 7410, 2136, 11, 291, 600, 445, 7373, 294, 300, 7410, 2136, 281, 428, 24438, 13, 51122, 51122, 865, 13, 51172, 51172, 400, 286, 519, 300, 311, 264, 1778, 983, 321, 3928, 406, 281, 362, 21445, 300, 19219, 257, 2136, 365, 51504, 51504, 257, 281, 1329, 11, 490, 1329, 11, 12288, 11, 12288, 11, 12288, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1325932741165161, "compression_ratio": 1.613953488372093, "no_caption_prob": 4.2227852645737585e-06}, {"id": 871, "seek": 303622, "start": 3039.62, "end": 3046.8999999999996, "text": " So if you structure things in a way, if you touch a giant record and you only use one", "tokens": [50364, 407, 2699, 76, 775, 2445, 1496, 3116, 3089, 29224, 13, 50534, 50534, 407, 498, 291, 3877, 721, 294, 257, 636, 11, 498, 291, 2557, 257, 7410, 2136, 293, 291, 787, 764, 472, 50898, 50898, 2519, 294, 257, 7410, 2136, 11, 291, 600, 445, 7373, 294, 300, 7410, 2136, 281, 428, 24438, 13, 51122, 51122, 865, 13, 51172, 51172, 400, 286, 519, 300, 311, 264, 1778, 983, 321, 3928, 406, 281, 362, 21445, 300, 19219, 257, 2136, 365, 51504, 51504, 257, 281, 1329, 11, 490, 1329, 11, 12288, 11, 12288, 11, 12288, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1325932741165161, "compression_ratio": 1.613953488372093, "no_caption_prob": 4.2227852645737585e-06}, {"id": 872, "seek": 303622, "start": 3046.8999999999996, "end": 3051.3799999999997, "text": " field in a giant record, you've just pulled in that giant record to your bundle.", "tokens": [50364, 407, 2699, 76, 775, 2445, 1496, 3116, 3089, 29224, 13, 50534, 50534, 407, 498, 291, 3877, 721, 294, 257, 636, 11, 498, 291, 2557, 257, 7410, 2136, 293, 291, 787, 764, 472, 50898, 50898, 2519, 294, 257, 7410, 2136, 11, 291, 600, 445, 7373, 294, 300, 7410, 2136, 281, 428, 24438, 13, 51122, 51122, 865, 13, 51172, 51172, 400, 286, 519, 300, 311, 264, 1778, 983, 321, 3928, 406, 281, 362, 21445, 300, 19219, 257, 2136, 365, 51504, 51504, 257, 281, 1329, 11, 490, 1329, 11, 12288, 11, 12288, 11, 12288, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1325932741165161, "compression_ratio": 1.613953488372093, "no_caption_prob": 4.2227852645737585e-06}, {"id": 873, "seek": 303622, "start": 3051.3799999999997, "end": 3052.3799999999997, "text": " Yeah.", "tokens": [50364, 407, 2699, 76, 775, 2445, 1496, 3116, 3089, 29224, 13, 50534, 50534, 407, 498, 291, 3877, 721, 294, 257, 636, 11, 498, 291, 2557, 257, 7410, 2136, 293, 291, 787, 764, 472, 50898, 50898, 2519, 294, 257, 7410, 2136, 11, 291, 600, 445, 7373, 294, 300, 7410, 2136, 281, 428, 24438, 13, 51122, 51122, 865, 13, 51172, 51172, 400, 286, 519, 300, 311, 264, 1778, 983, 321, 3928, 406, 281, 362, 21445, 300, 19219, 257, 2136, 365, 51504, 51504, 257, 281, 1329, 11, 490, 1329, 11, 12288, 11, 12288, 11, 12288, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1325932741165161, "compression_ratio": 1.613953488372093, "no_caption_prob": 4.2227852645737585e-06}, {"id": 874, "seek": 303622, "start": 3052.3799999999997, "end": 3059.02, "text": " And I think that's the reason why we tend not to have APIs that expose a record with", "tokens": [50364, 407, 2699, 76, 775, 2445, 1496, 3116, 3089, 29224, 13, 50534, 50534, 407, 498, 291, 3877, 721, 294, 257, 636, 11, 498, 291, 2557, 257, 7410, 2136, 293, 291, 787, 764, 472, 50898, 50898, 2519, 294, 257, 7410, 2136, 11, 291, 600, 445, 7373, 294, 300, 7410, 2136, 281, 428, 24438, 13, 51122, 51122, 865, 13, 51172, 51172, 400, 286, 519, 300, 311, 264, 1778, 983, 321, 3928, 406, 281, 362, 21445, 300, 19219, 257, 2136, 365, 51504, 51504, 257, 281, 1329, 11, 490, 1329, 11, 12288, 11, 12288, 11, 12288, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1325932741165161, "compression_ratio": 1.613953488372093, "no_caption_prob": 4.2227852645737585e-06}, {"id": 875, "seek": 303622, "start": 3059.02, "end": 3061.7799999999997, "text": " a to list, from list, blah, blah, blah.", "tokens": [50364, 407, 2699, 76, 775, 2445, 1496, 3116, 3089, 29224, 13, 50534, 50534, 407, 498, 291, 3877, 721, 294, 257, 636, 11, 498, 291, 2557, 257, 7410, 2136, 293, 291, 787, 764, 472, 50898, 50898, 2519, 294, 257, 7410, 2136, 11, 291, 600, 445, 7373, 294, 300, 7410, 2136, 281, 428, 24438, 13, 51122, 51122, 865, 13, 51172, 51172, 400, 286, 519, 300, 311, 264, 1778, 983, 321, 3928, 406, 281, 362, 21445, 300, 19219, 257, 2136, 365, 51504, 51504, 257, 281, 1329, 11, 490, 1329, 11, 12288, 11, 12288, 11, 12288, 13, 51642, 51642], "temperature": 0.0, "avg_logprob": -0.1325932741165161, "compression_ratio": 1.613953488372093, "no_caption_prob": 4.2227852645737585e-06}, {"id": 876, "seek": 306178, "start": 3061.78, "end": 3066.38, "text": " Because if you only use one of those, you still get the whole API.", "tokens": [50364, 1436, 498, 291, 787, 764, 472, 295, 729, 11, 291, 920, 483, 264, 1379, 9362, 13, 50594, 50594, 1079, 11, 2293, 13, 50644, 50644, 865, 11, 286, 630, 300, 365, 300, 294, 1575, 294, 341, 14359, 47, 16953, 2856, 6162, 7372, 286, 6572, 11, 597, 51062, 51062, 307, 445, 1936, 411, 257, 636, 281, 764, 613, 819, 2856, 14211, 365, 257, 707, 857, 51362, 51362, 295, 2010, 4514, 11, 4315, 291, 312, 6679, 300, 291, 434, 1242, 264, 14211, 3006, 337, 8650, 51628, 51628, 293, 3517, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.128225462777274, "compression_ratio": 1.5446808510638297, "no_caption_prob": 1.4738719073648099e-05}, {"id": 877, "seek": 306178, "start": 3066.38, "end": 3067.38, "text": " Yes, exactly.", "tokens": [50364, 1436, 498, 291, 787, 764, 472, 295, 729, 11, 291, 920, 483, 264, 1379, 9362, 13, 50594, 50594, 1079, 11, 2293, 13, 50644, 50644, 865, 11, 286, 630, 300, 365, 300, 294, 1575, 294, 341, 14359, 47, 16953, 2856, 6162, 7372, 286, 6572, 11, 597, 51062, 51062, 307, 445, 1936, 411, 257, 636, 281, 764, 613, 819, 2856, 14211, 365, 257, 707, 857, 51362, 51362, 295, 2010, 4514, 11, 4315, 291, 312, 6679, 300, 291, 434, 1242, 264, 14211, 3006, 337, 8650, 51628, 51628, 293, 3517, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.128225462777274, "compression_ratio": 1.5446808510638297, "no_caption_prob": 1.4738719073648099e-05}, {"id": 878, "seek": 306178, "start": 3067.38, "end": 3075.7400000000002, "text": " Yeah, I did that with that in mind in this BCP 47 language tag package I published, which", "tokens": [50364, 1436, 498, 291, 787, 764, 472, 295, 729, 11, 291, 920, 483, 264, 1379, 9362, 13, 50594, 50594, 1079, 11, 2293, 13, 50644, 50644, 865, 11, 286, 630, 300, 365, 300, 294, 1575, 294, 341, 14359, 47, 16953, 2856, 6162, 7372, 286, 6572, 11, 597, 51062, 51062, 307, 445, 1936, 411, 257, 636, 281, 764, 613, 819, 2856, 14211, 365, 257, 707, 857, 51362, 51362, 295, 2010, 4514, 11, 4315, 291, 312, 6679, 300, 291, 434, 1242, 264, 14211, 3006, 337, 8650, 51628, 51628, 293, 3517, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.128225462777274, "compression_ratio": 1.5446808510638297, "no_caption_prob": 1.4738719073648099e-05}, {"id": 879, "seek": 306178, "start": 3075.7400000000002, "end": 3081.7400000000002, "text": " is just basically like a way to use these different language codes with a little bit", "tokens": [50364, 1436, 498, 291, 787, 764, 472, 295, 729, 11, 291, 920, 483, 264, 1379, 9362, 13, 50594, 50594, 1079, 11, 2293, 13, 50644, 50644, 865, 11, 286, 630, 300, 365, 300, 294, 1575, 294, 341, 14359, 47, 16953, 2856, 6162, 7372, 286, 6572, 11, 597, 51062, 51062, 307, 445, 1936, 411, 257, 636, 281, 764, 613, 819, 2856, 14211, 365, 257, 707, 857, 51362, 51362, 295, 2010, 4514, 11, 4315, 291, 312, 6679, 300, 291, 434, 1242, 264, 14211, 3006, 337, 8650, 51628, 51628, 293, 3517, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.128225462777274, "compression_ratio": 1.5446808510638297, "no_caption_prob": 1.4738719073648099e-05}, {"id": 880, "seek": 306178, "start": 3081.7400000000002, "end": 3087.0600000000004, "text": " of type safety, helping you be confident that you're getting the codes correct for languages", "tokens": [50364, 1436, 498, 291, 787, 764, 472, 295, 729, 11, 291, 920, 483, 264, 1379, 9362, 13, 50594, 50594, 1079, 11, 2293, 13, 50644, 50644, 865, 11, 286, 630, 300, 365, 300, 294, 1575, 294, 341, 14359, 47, 16953, 2856, 6162, 7372, 286, 6572, 11, 597, 51062, 51062, 307, 445, 1936, 411, 257, 636, 281, 764, 613, 819, 2856, 14211, 365, 257, 707, 857, 51362, 51362, 295, 2010, 4514, 11, 4315, 291, 312, 6679, 300, 291, 434, 1242, 264, 14211, 3006, 337, 8650, 51628, 51628, 293, 3517, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.128225462777274, "compression_ratio": 1.5446808510638297, "no_caption_prob": 1.4738719073648099e-05}, {"id": 881, "seek": 306178, "start": 3087.0600000000004, "end": 3088.0600000000004, "text": " and countries.", "tokens": [50364, 1436, 498, 291, 787, 764, 472, 295, 729, 11, 291, 920, 483, 264, 1379, 9362, 13, 50594, 50594, 1079, 11, 2293, 13, 50644, 50644, 865, 11, 286, 630, 300, 365, 300, 294, 1575, 294, 341, 14359, 47, 16953, 2856, 6162, 7372, 286, 6572, 11, 597, 51062, 51062, 307, 445, 1936, 411, 257, 636, 281, 764, 613, 819, 2856, 14211, 365, 257, 707, 857, 51362, 51362, 295, 2010, 4514, 11, 4315, 291, 312, 6679, 300, 291, 434, 1242, 264, 14211, 3006, 337, 8650, 51628, 51628, 293, 3517, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.128225462777274, "compression_ratio": 1.5446808510638297, "no_caption_prob": 1.4738719073648099e-05}, {"id": 882, "seek": 308806, "start": 3088.06, "end": 3092.1, "text": " And so I don't use any lists or records for it.", "tokens": [50364, 400, 370, 286, 500, 380, 764, 604, 14511, 420, 7724, 337, 309, 13, 50566, 50566, 814, 434, 445, 2609, 4190, 13, 50670, 50670, 400, 370, 498, 456, 366, 5383, 295, 14211, 293, 291, 2864, 281, 732, 11, 550, 300, 311, 437, 5314, 493, 50990, 50990, 294, 428, 24438, 13, 51040, 51040, 400, 264, 1186, 300, 2699, 76, 575, 341, 1621, 3089, 15874, 307, 300, 321, 393, 829, 257, 688, 295, 721, 294, 36133, 51442, 51442, 17401, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.1213549154776114, "compression_ratio": 1.4793814432989691, "no_caption_prob": 3.120109249721281e-05}, {"id": 883, "seek": 308806, "start": 3092.1, "end": 3094.18, "text": " They're just individual values.", "tokens": [50364, 400, 370, 286, 500, 380, 764, 604, 14511, 420, 7724, 337, 309, 13, 50566, 50566, 814, 434, 445, 2609, 4190, 13, 50670, 50670, 400, 370, 498, 456, 366, 5383, 295, 14211, 293, 291, 2864, 281, 732, 11, 550, 300, 311, 437, 5314, 493, 50990, 50990, 294, 428, 24438, 13, 51040, 51040, 400, 264, 1186, 300, 2699, 76, 575, 341, 1621, 3089, 15874, 307, 300, 321, 393, 829, 257, 688, 295, 721, 294, 36133, 51442, 51442, 17401, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.1213549154776114, "compression_ratio": 1.4793814432989691, "no_caption_prob": 3.120109249721281e-05}, {"id": 884, "seek": 308806, "start": 3094.18, "end": 3100.58, "text": " And so if there are thousands of codes and you refer to two, then that's what ends up", "tokens": [50364, 400, 370, 286, 500, 380, 764, 604, 14511, 420, 7724, 337, 309, 13, 50566, 50566, 814, 434, 445, 2609, 4190, 13, 50670, 50670, 400, 370, 498, 456, 366, 5383, 295, 14211, 293, 291, 2864, 281, 732, 11, 550, 300, 311, 437, 5314, 493, 50990, 50990, 294, 428, 24438, 13, 51040, 51040, 400, 264, 1186, 300, 2699, 76, 575, 341, 1621, 3089, 15874, 307, 300, 321, 393, 829, 257, 688, 295, 721, 294, 36133, 51442, 51442, 17401, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.1213549154776114, "compression_ratio": 1.4793814432989691, "no_caption_prob": 3.120109249721281e-05}, {"id": 885, "seek": 308806, "start": 3100.58, "end": 3101.58, "text": " in your bundle.", "tokens": [50364, 400, 370, 286, 500, 380, 764, 604, 14511, 420, 7724, 337, 309, 13, 50566, 50566, 814, 434, 445, 2609, 4190, 13, 50670, 50670, 400, 370, 498, 456, 366, 5383, 295, 14211, 293, 291, 2864, 281, 732, 11, 550, 300, 311, 437, 5314, 493, 50990, 50990, 294, 428, 24438, 13, 51040, 51040, 400, 264, 1186, 300, 2699, 76, 575, 341, 1621, 3089, 15874, 307, 300, 321, 393, 829, 257, 688, 295, 721, 294, 36133, 51442, 51442, 17401, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.1213549154776114, "compression_ratio": 1.4793814432989691, "no_caption_prob": 3.120109249721281e-05}, {"id": 886, "seek": 308806, "start": 3101.58, "end": 3109.62, "text": " And the fact that Elm has this live code inclusion is that we can put a lot of things in helper", "tokens": [50364, 400, 370, 286, 500, 380, 764, 604, 14511, 420, 7724, 337, 309, 13, 50566, 50566, 814, 434, 445, 2609, 4190, 13, 50670, 50670, 400, 370, 498, 456, 366, 5383, 295, 14211, 293, 291, 2864, 281, 732, 11, 550, 300, 311, 437, 5314, 493, 50990, 50990, 294, 428, 24438, 13, 51040, 51040, 400, 264, 1186, 300, 2699, 76, 575, 341, 1621, 3089, 15874, 307, 300, 321, 393, 829, 257, 688, 295, 721, 294, 36133, 51442, 51442, 17401, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.1213549154776114, "compression_ratio": 1.4793814432989691, "no_caption_prob": 3.120109249721281e-05}, {"id": 887, "seek": 308806, "start": 3109.62, "end": 3110.62, "text": " packages.", "tokens": [50364, 400, 370, 286, 500, 380, 764, 604, 14511, 420, 7724, 337, 309, 13, 50566, 50566, 814, 434, 445, 2609, 4190, 13, 50670, 50670, 400, 370, 498, 456, 366, 5383, 295, 14211, 293, 291, 2864, 281, 732, 11, 550, 300, 311, 437, 5314, 493, 50990, 50990, 294, 428, 24438, 13, 51040, 51040, 400, 264, 1186, 300, 2699, 76, 575, 341, 1621, 3089, 15874, 307, 300, 321, 393, 829, 257, 688, 295, 721, 294, 36133, 51442, 51442, 17401, 13, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.1213549154776114, "compression_ratio": 1.4793814432989691, "no_caption_prob": 3.120109249721281e-05}, {"id": 888, "seek": 311062, "start": 3110.62, "end": 3119.2599999999998, "text": " Like a very common complaint about the JavaScript ecosystem is about, for instance, lodash,", "tokens": [50364, 1743, 257, 588, 2689, 20100, 466, 264, 15778, 11311, 307, 466, 11, 337, 5197, 11, 33311, 1299, 11, 50796, 50796, 597, 307, 588, 955, 11, 457, 611, 588, 4420, 13, 50964, 50964, 583, 257, 688, 295, 264, 6828, 291, 486, 406, 764, 294, 428, 1716, 11, 411, 544, 813, 4289, 6856, 51288, 51288, 400, 321, 362, 17401, 411, 1329, 11, 8240, 2857, 11, 12569, 2857, 11, 1030, 11458, 13, 51594, 51594, 400, 321, 393, 829, 382, 867, 6828, 382, 321, 528, 294, 456, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1522227959199385, "compression_ratio": 1.5391705069124424, "no_caption_prob": 5.649492231896147e-05}, {"id": 889, "seek": 311062, "start": 3119.2599999999998, "end": 3122.62, "text": " which is very big, but also very useful.", "tokens": [50364, 1743, 257, 588, 2689, 20100, 466, 264, 15778, 11311, 307, 466, 11, 337, 5197, 11, 33311, 1299, 11, 50796, 50796, 597, 307, 588, 955, 11, 457, 611, 588, 4420, 13, 50964, 50964, 583, 257, 688, 295, 264, 6828, 291, 486, 406, 764, 294, 428, 1716, 11, 411, 544, 813, 4289, 6856, 51288, 51288, 400, 321, 362, 17401, 411, 1329, 11, 8240, 2857, 11, 12569, 2857, 11, 1030, 11458, 13, 51594, 51594, 400, 321, 393, 829, 382, 867, 6828, 382, 321, 528, 294, 456, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1522227959199385, "compression_ratio": 1.5391705069124424, "no_caption_prob": 5.649492231896147e-05}, {"id": 890, "seek": 311062, "start": 3122.62, "end": 3129.1, "text": " But a lot of the functions you will not use in your project, like more than 90%.", "tokens": [50364, 1743, 257, 588, 2689, 20100, 466, 264, 15778, 11311, 307, 466, 11, 337, 5197, 11, 33311, 1299, 11, 50796, 50796, 597, 307, 588, 955, 11, 457, 611, 588, 4420, 13, 50964, 50964, 583, 257, 688, 295, 264, 6828, 291, 486, 406, 764, 294, 428, 1716, 11, 411, 544, 813, 4289, 6856, 51288, 51288, 400, 321, 362, 17401, 411, 1329, 11, 8240, 2857, 11, 12569, 2857, 11, 1030, 11458, 13, 51594, 51594, 400, 321, 393, 829, 382, 867, 6828, 382, 321, 528, 294, 456, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1522227959199385, "compression_ratio": 1.5391705069124424, "no_caption_prob": 5.649492231896147e-05}, {"id": 891, "seek": 311062, "start": 3129.1, "end": 3135.22, "text": " And we have packages like list, dash extra, dict extra, et cetera.", "tokens": [50364, 1743, 257, 588, 2689, 20100, 466, 264, 15778, 11311, 307, 466, 11, 337, 5197, 11, 33311, 1299, 11, 50796, 50796, 597, 307, 588, 955, 11, 457, 611, 588, 4420, 13, 50964, 50964, 583, 257, 688, 295, 264, 6828, 291, 486, 406, 764, 294, 428, 1716, 11, 411, 544, 813, 4289, 6856, 51288, 51288, 400, 321, 362, 17401, 411, 1329, 11, 8240, 2857, 11, 12569, 2857, 11, 1030, 11458, 13, 51594, 51594, 400, 321, 393, 829, 382, 867, 6828, 382, 321, 528, 294, 456, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1522227959199385, "compression_ratio": 1.5391705069124424, "no_caption_prob": 5.649492231896147e-05}, {"id": 892, "seek": 311062, "start": 3135.22, "end": 3138.7, "text": " And we can put as many functions as we want in there.", "tokens": [50364, 1743, 257, 588, 2689, 20100, 466, 264, 15778, 11311, 307, 466, 11, 337, 5197, 11, 33311, 1299, 11, 50796, 50796, 597, 307, 588, 955, 11, 457, 611, 588, 4420, 13, 50964, 50964, 583, 257, 688, 295, 264, 6828, 291, 486, 406, 764, 294, 428, 1716, 11, 411, 544, 813, 4289, 6856, 51288, 51288, 400, 321, 362, 17401, 411, 1329, 11, 8240, 2857, 11, 12569, 2857, 11, 1030, 11458, 13, 51594, 51594, 400, 321, 393, 829, 382, 867, 6828, 382, 321, 528, 294, 456, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.1522227959199385, "compression_ratio": 1.5391705069124424, "no_caption_prob": 5.649492231896147e-05}, {"id": 893, "seek": 313870, "start": 3138.7, "end": 3143.58, "text": " It's mostly up to maintenance costs as to what should be in there.", "tokens": [50364, 467, 311, 5240, 493, 281, 11258, 5497, 382, 281, 437, 820, 312, 294, 456, 13, 50608, 50608, 583, 1564, 291, 909, 264, 7372, 293, 291, 764, 472, 2445, 11, 1339, 291, 787, 764, 300, 472, 2445, 11, 50890, 50890, 291, 500, 380, 4090, 439, 264, 1472, 13, 50988, 50988, 400, 300, 2130, 279, 505, 493, 382, 6405, 16552, 281, 829, 294, 382, 867, 4420, 721, 300, 321, 528, 51340, 51340, 1553, 1419, 281, 1127, 466, 24438, 2744, 13, 51502, 51502, 400, 300, 307, 588, 1481, 13, 51596, 51596, 467, 311, 534, 1481, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.07648839655610704, "compression_ratio": 1.6543778801843319, "no_caption_prob": 1.696399885986466e-05}, {"id": 894, "seek": 313870, "start": 3143.58, "end": 3149.22, "text": " But once you add the package and you use one function, while you only use that one function,", "tokens": [50364, 467, 311, 5240, 493, 281, 11258, 5497, 382, 281, 437, 820, 312, 294, 456, 13, 50608, 50608, 583, 1564, 291, 909, 264, 7372, 293, 291, 764, 472, 2445, 11, 1339, 291, 787, 764, 300, 472, 2445, 11, 50890, 50890, 291, 500, 380, 4090, 439, 264, 1472, 13, 50988, 50988, 400, 300, 2130, 279, 505, 493, 382, 6405, 16552, 281, 829, 294, 382, 867, 4420, 721, 300, 321, 528, 51340, 51340, 1553, 1419, 281, 1127, 466, 24438, 2744, 13, 51502, 51502, 400, 300, 307, 588, 1481, 13, 51596, 51596, 467, 311, 534, 1481, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.07648839655610704, "compression_ratio": 1.6543778801843319, "no_caption_prob": 1.696399885986466e-05}, {"id": 895, "seek": 313870, "start": 3149.22, "end": 3151.18, "text": " you don't include all the rest.", "tokens": [50364, 467, 311, 5240, 493, 281, 11258, 5497, 382, 281, 437, 820, 312, 294, 456, 13, 50608, 50608, 583, 1564, 291, 909, 264, 7372, 293, 291, 764, 472, 2445, 11, 1339, 291, 787, 764, 300, 472, 2445, 11, 50890, 50890, 291, 500, 380, 4090, 439, 264, 1472, 13, 50988, 50988, 400, 300, 2130, 279, 505, 493, 382, 6405, 16552, 281, 829, 294, 382, 867, 4420, 721, 300, 321, 528, 51340, 51340, 1553, 1419, 281, 1127, 466, 24438, 2744, 13, 51502, 51502, 400, 300, 307, 588, 1481, 13, 51596, 51596, 467, 311, 534, 1481, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.07648839655610704, "compression_ratio": 1.6543778801843319, "no_caption_prob": 1.696399885986466e-05}, {"id": 896, "seek": 313870, "start": 3151.18, "end": 3158.22, "text": " And that frees us up as library authors to put in as many useful things that we want", "tokens": [50364, 467, 311, 5240, 493, 281, 11258, 5497, 382, 281, 437, 820, 312, 294, 456, 13, 50608, 50608, 583, 1564, 291, 909, 264, 7372, 293, 291, 764, 472, 2445, 11, 1339, 291, 787, 764, 300, 472, 2445, 11, 50890, 50890, 291, 500, 380, 4090, 439, 264, 1472, 13, 50988, 50988, 400, 300, 2130, 279, 505, 493, 382, 6405, 16552, 281, 829, 294, 382, 867, 4420, 721, 300, 321, 528, 51340, 51340, 1553, 1419, 281, 1127, 466, 24438, 2744, 13, 51502, 51502, 400, 300, 307, 588, 1481, 13, 51596, 51596, 467, 311, 534, 1481, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.07648839655610704, "compression_ratio": 1.6543778801843319, "no_caption_prob": 1.696399885986466e-05}, {"id": 897, "seek": 313870, "start": 3158.22, "end": 3161.46, "text": " without having to care about bundle size.", "tokens": [50364, 467, 311, 5240, 493, 281, 11258, 5497, 382, 281, 437, 820, 312, 294, 456, 13, 50608, 50608, 583, 1564, 291, 909, 264, 7372, 293, 291, 764, 472, 2445, 11, 1339, 291, 787, 764, 300, 472, 2445, 11, 50890, 50890, 291, 500, 380, 4090, 439, 264, 1472, 13, 50988, 50988, 400, 300, 2130, 279, 505, 493, 382, 6405, 16552, 281, 829, 294, 382, 867, 4420, 721, 300, 321, 528, 51340, 51340, 1553, 1419, 281, 1127, 466, 24438, 2744, 13, 51502, 51502, 400, 300, 307, 588, 1481, 13, 51596, 51596, 467, 311, 534, 1481, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.07648839655610704, "compression_ratio": 1.6543778801843319, "no_caption_prob": 1.696399885986466e-05}, {"id": 898, "seek": 313870, "start": 3161.46, "end": 3163.3399999999997, "text": " And that is very nice.", "tokens": [50364, 467, 311, 5240, 493, 281, 11258, 5497, 382, 281, 437, 820, 312, 294, 456, 13, 50608, 50608, 583, 1564, 291, 909, 264, 7372, 293, 291, 764, 472, 2445, 11, 1339, 291, 787, 764, 300, 472, 2445, 11, 50890, 50890, 291, 500, 380, 4090, 439, 264, 1472, 13, 50988, 50988, 400, 300, 2130, 279, 505, 493, 382, 6405, 16552, 281, 829, 294, 382, 867, 4420, 721, 300, 321, 528, 51340, 51340, 1553, 1419, 281, 1127, 466, 24438, 2744, 13, 51502, 51502, 400, 300, 307, 588, 1481, 13, 51596, 51596, 467, 311, 534, 1481, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.07648839655610704, "compression_ratio": 1.6543778801843319, "no_caption_prob": 1.696399885986466e-05}, {"id": 899, "seek": 313870, "start": 3163.3399999999997, "end": 3164.3399999999997, "text": " It's really nice.", "tokens": [50364, 467, 311, 5240, 493, 281, 11258, 5497, 382, 281, 437, 820, 312, 294, 456, 13, 50608, 50608, 583, 1564, 291, 909, 264, 7372, 293, 291, 764, 472, 2445, 11, 1339, 291, 787, 764, 300, 472, 2445, 11, 50890, 50890, 291, 500, 380, 4090, 439, 264, 1472, 13, 50988, 50988, 400, 300, 2130, 279, 505, 493, 382, 6405, 16552, 281, 829, 294, 382, 867, 4420, 721, 300, 321, 528, 51340, 51340, 1553, 1419, 281, 1127, 466, 24438, 2744, 13, 51502, 51502, 400, 300, 307, 588, 1481, 13, 51596, 51596, 467, 311, 534, 1481, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.07648839655610704, "compression_ratio": 1.6543778801843319, "no_caption_prob": 1.696399885986466e-05}, {"id": 900, "seek": 316434, "start": 3164.34, "end": 3171.94, "text": " And you see these lodash sub packages that are splitting out separate categories of lodash", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 901, "seek": 316434, "start": 3171.94, "end": 3172.94, "text": " functions.", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 902, "seek": 316434, "start": 3172.94, "end": 3175.2200000000003, "text": " And I mean, as a user.", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 903, "seek": 316434, "start": 3175.2200000000003, "end": 3176.2200000000003, "text": " Every function.", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 904, "seek": 316434, "start": 3176.2200000000003, "end": 3177.78, "text": " Oh, every single function is that?", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 905, "seek": 316434, "start": 3177.78, "end": 3179.3, "text": " Oh, my gosh.", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 906, "seek": 316434, "start": 3179.3, "end": 3183.2200000000003, "text": " As a user, you don't want the user to need to worry about that.", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 907, "seek": 316434, "start": 3183.2200000000003, "end": 3191.54, "text": " And that's one of the benefits that comes from Elm's purity is that importing a module", "tokens": [50364, 400, 291, 536, 613, 33311, 1299, 1422, 17401, 300, 366, 30348, 484, 4994, 10479, 295, 33311, 1299, 50744, 50744, 6828, 13, 50794, 50794, 400, 286, 914, 11, 382, 257, 4195, 13, 50908, 50908, 2048, 2445, 13, 50958, 50958, 876, 11, 633, 2167, 2445, 307, 300, 30, 51036, 51036, 876, 11, 452, 6502, 13, 51112, 51112, 1018, 257, 4195, 11, 291, 500, 380, 528, 264, 4195, 281, 643, 281, 3292, 466, 300, 13, 51308, 51308, 400, 300, 311, 472, 295, 264, 5311, 300, 1487, 490, 2699, 76, 311, 34382, 307, 300, 43866, 257, 10088, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.21928167834724346, "compression_ratio": 1.599056603773585, "no_caption_prob": 6.0136590036563575e-05}, {"id": 908, "seek": 319154, "start": 3191.54, "end": 3195.82, "text": " doesn't have any side effects, running a function doesn't even have any side effects.", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 909, "seek": 319154, "start": 3195.82, "end": 3202.38, "text": " So you don't need to worry about all of those complexities when you're doing your dead code", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 910, "seek": 319154, "start": 3202.38, "end": 3204.72, "text": " elimination or your live code inclusion.", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 911, "seek": 319154, "start": 3204.72, "end": 3209.62, "text": " You can still have side effects when you call a function if it explodes the call stack,", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 912, "seek": 319154, "start": 3209.62, "end": 3210.62, "text": " but that's about it.", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 913, "seek": 319154, "start": 3210.62, "end": 3212.06, "text": " Well, that's fair.", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 914, "seek": 319154, "start": 3212.06, "end": 3215.02, "text": " But at that point, we know how to solve that one.", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 915, "seek": 319154, "start": 3215.02, "end": 3216.02, "text": " We know how to solve it.", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 916, "seek": 319154, "start": 3216.02, "end": 3220.66, "text": " And even if the call stack blows up, then Elm can just relax and be like, all right,", "tokens": [50364, 1177, 380, 362, 604, 1252, 5065, 11, 2614, 257, 2445, 1177, 380, 754, 362, 604, 1252, 5065, 13, 50578, 50578, 407, 291, 500, 380, 643, 281, 3292, 466, 439, 295, 729, 48705, 562, 291, 434, 884, 428, 3116, 3089, 50906, 50906, 29224, 420, 428, 1621, 3089, 15874, 13, 51023, 51023, 509, 393, 920, 362, 1252, 5065, 562, 291, 818, 257, 2445, 498, 309, 42610, 264, 818, 8630, 11, 51268, 51268, 457, 300, 311, 466, 309, 13, 51318, 51318, 1042, 11, 300, 311, 3143, 13, 51390, 51390, 583, 412, 300, 935, 11, 321, 458, 577, 281, 5039, 300, 472, 13, 51538, 51538, 492, 458, 577, 281, 5039, 309, 13, 51588, 51588, 400, 754, 498, 264, 818, 8630, 18458, 493, 11, 550, 2699, 76, 393, 445, 5789, 293, 312, 411, 11, 439, 558, 11, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.12255381135379567, "compression_ratio": 1.8136200716845878, "no_caption_prob": 6.814704101998359e-05}, {"id": 917, "seek": 322066, "start": 3220.66, "end": 3226.7799999999997, "text": " my job here is done.", "tokens": [50364, 452, 1691, 510, 307, 1096, 13, 50670, 50670, 400, 321, 2825, 466, 1419, 364, 8888, 295, 264, 3389, 16602, 295, 613, 819, 51092, 51092, 7512, 293, 3467, 295, 3089, 11, 445, 370, 291, 458, 437, 281, 312, 322, 264, 41025, 337, 498, 291, 434, 51304, 51304, 1237, 281, 19719, 746, 293, 281, 574, 337, 2182, 23265, 13, 51563, 51563, 286, 519, 309, 311, 611, 8263, 281, 1223, 257, 707, 857, 466, 2699, 76, 311, 1412, 9227, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11176615585515529, "compression_ratio": 1.5363636363636364, "no_caption_prob": 1.2029400750179775e-05}, {"id": 918, "seek": 322066, "start": 3226.7799999999997, "end": 3235.22, "text": " And we talked about having an awareness of the performance implications of these different", "tokens": [50364, 452, 1691, 510, 307, 1096, 13, 50670, 50670, 400, 321, 2825, 466, 1419, 364, 8888, 295, 264, 3389, 16602, 295, 613, 819, 51092, 51092, 7512, 293, 3467, 295, 3089, 11, 445, 370, 291, 458, 437, 281, 312, 322, 264, 41025, 337, 498, 291, 434, 51304, 51304, 1237, 281, 19719, 746, 293, 281, 574, 337, 2182, 23265, 13, 51563, 51563, 286, 519, 309, 311, 611, 8263, 281, 1223, 257, 707, 857, 466, 2699, 76, 311, 1412, 9227, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11176615585515529, "compression_ratio": 1.5363636363636364, "no_caption_prob": 1.2029400750179775e-05}, {"id": 919, "seek": 322066, "start": 3235.22, "end": 3239.46, "text": " techniques and types of code, just so you know what to be on the lookout for if you're", "tokens": [50364, 452, 1691, 510, 307, 1096, 13, 50670, 50670, 400, 321, 2825, 466, 1419, 364, 8888, 295, 264, 3389, 16602, 295, 613, 819, 51092, 51092, 7512, 293, 3467, 295, 3089, 11, 445, 370, 291, 458, 437, 281, 312, 322, 264, 41025, 337, 498, 291, 434, 51304, 51304, 1237, 281, 19719, 746, 293, 281, 574, 337, 2182, 23265, 13, 51563, 51563, 286, 519, 309, 311, 611, 8263, 281, 1223, 257, 707, 857, 466, 2699, 76, 311, 1412, 9227, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11176615585515529, "compression_ratio": 1.5363636363636364, "no_caption_prob": 1.2029400750179775e-05}, {"id": 920, "seek": 322066, "start": 3239.46, "end": 3244.64, "text": " looking to optimize something and to look for red flags.", "tokens": [50364, 452, 1691, 510, 307, 1096, 13, 50670, 50670, 400, 321, 2825, 466, 1419, 364, 8888, 295, 264, 3389, 16602, 295, 613, 819, 51092, 51092, 7512, 293, 3467, 295, 3089, 11, 445, 370, 291, 458, 437, 281, 312, 322, 264, 41025, 337, 498, 291, 434, 51304, 51304, 1237, 281, 19719, 746, 293, 281, 574, 337, 2182, 23265, 13, 51563, 51563, 286, 519, 309, 311, 611, 8263, 281, 1223, 257, 707, 857, 466, 2699, 76, 311, 1412, 9227, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11176615585515529, "compression_ratio": 1.5363636363636364, "no_caption_prob": 1.2029400750179775e-05}, {"id": 921, "seek": 322066, "start": 3244.64, "end": 3250.54, "text": " I think it's also valuable to understand a little bit about Elm's data structures.", "tokens": [50364, 452, 1691, 510, 307, 1096, 13, 50670, 50670, 400, 321, 2825, 466, 1419, 364, 8888, 295, 264, 3389, 16602, 295, 613, 819, 51092, 51092, 7512, 293, 3467, 295, 3089, 11, 445, 370, 291, 458, 437, 281, 312, 322, 264, 41025, 337, 498, 291, 434, 51304, 51304, 1237, 281, 19719, 746, 293, 281, 574, 337, 2182, 23265, 13, 51563, 51563, 286, 519, 309, 311, 611, 8263, 281, 1223, 257, 707, 857, 466, 2699, 76, 311, 1412, 9227, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.11176615585515529, "compression_ratio": 1.5363636363636364, "no_caption_prob": 1.2029400750179775e-05}, {"id": 922, "seek": 325054, "start": 3250.54, "end": 3258.92, "text": " And actually, most of the Elm data structures, like if you go to the docs for Elm core dict,", "tokens": [50364, 400, 767, 11, 881, 295, 264, 2699, 76, 1412, 9227, 11, 411, 498, 291, 352, 281, 264, 45623, 337, 2699, 76, 4965, 12569, 11, 50783, 50783, 337, 1365, 11, 550, 309, 5112, 291, 264, 14024, 295, 613, 7705, 13, 51070, 51070, 407, 309, 311, 422, 3565, 426, 337, 8969, 11, 4159, 293, 7083, 1840, 7705, 294, 12569, 13, 51368, 51368, 286, 519, 300, 311, 534, 665, 281, 458, 13, 51502, 51502, 708, 775, 300, 914, 337, 561, 567, 994, 380, 2979, 3820, 3497, 30, 51656, 51656, 1779, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14779757416766623, "compression_ratio": 1.5135135135135136, "no_caption_prob": 8.186353852579487e-07}, {"id": 923, "seek": 325054, "start": 3258.92, "end": 3264.66, "text": " for example, then it tells you the complexity of these operations.", "tokens": [50364, 400, 767, 11, 881, 295, 264, 2699, 76, 1412, 9227, 11, 411, 498, 291, 352, 281, 264, 45623, 337, 2699, 76, 4965, 12569, 11, 50783, 50783, 337, 1365, 11, 550, 309, 5112, 291, 264, 14024, 295, 613, 7705, 13, 51070, 51070, 407, 309, 311, 422, 3565, 426, 337, 8969, 11, 4159, 293, 7083, 1840, 7705, 294, 12569, 13, 51368, 51368, 286, 519, 300, 311, 534, 665, 281, 458, 13, 51502, 51502, 708, 775, 300, 914, 337, 561, 567, 994, 380, 2979, 3820, 3497, 30, 51656, 51656, 1779, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14779757416766623, "compression_ratio": 1.5135135135135136, "no_caption_prob": 8.186353852579487e-07}, {"id": 924, "seek": 325054, "start": 3264.66, "end": 3270.62, "text": " So it's O log N for insert, remove and querying operations in dict.", "tokens": [50364, 400, 767, 11, 881, 295, 264, 2699, 76, 1412, 9227, 11, 411, 498, 291, 352, 281, 264, 45623, 337, 2699, 76, 4965, 12569, 11, 50783, 50783, 337, 1365, 11, 550, 309, 5112, 291, 264, 14024, 295, 613, 7705, 13, 51070, 51070, 407, 309, 311, 422, 3565, 426, 337, 8969, 11, 4159, 293, 7083, 1840, 7705, 294, 12569, 13, 51368, 51368, 286, 519, 300, 311, 534, 665, 281, 458, 13, 51502, 51502, 708, 775, 300, 914, 337, 561, 567, 994, 380, 2979, 3820, 3497, 30, 51656, 51656, 1779, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14779757416766623, "compression_ratio": 1.5135135135135136, "no_caption_prob": 8.186353852579487e-07}, {"id": 925, "seek": 325054, "start": 3270.62, "end": 3273.3, "text": " I think that's really good to know.", "tokens": [50364, 400, 767, 11, 881, 295, 264, 2699, 76, 1412, 9227, 11, 411, 498, 291, 352, 281, 264, 45623, 337, 2699, 76, 4965, 12569, 11, 50783, 50783, 337, 1365, 11, 550, 309, 5112, 291, 264, 14024, 295, 613, 7705, 13, 51070, 51070, 407, 309, 311, 422, 3565, 426, 337, 8969, 11, 4159, 293, 7083, 1840, 7705, 294, 12569, 13, 51368, 51368, 286, 519, 300, 311, 534, 665, 281, 458, 13, 51502, 51502, 708, 775, 300, 914, 337, 561, 567, 994, 380, 2979, 3820, 3497, 30, 51656, 51656, 1779, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14779757416766623, "compression_ratio": 1.5135135135135136, "no_caption_prob": 8.186353852579487e-07}, {"id": 926, "seek": 325054, "start": 3273.3, "end": 3276.38, "text": " What does that mean for people who didn't study computer science?", "tokens": [50364, 400, 767, 11, 881, 295, 264, 2699, 76, 1412, 9227, 11, 411, 498, 291, 352, 281, 264, 45623, 337, 2699, 76, 4965, 12569, 11, 50783, 50783, 337, 1365, 11, 550, 309, 5112, 291, 264, 14024, 295, 613, 7705, 13, 51070, 51070, 407, 309, 311, 422, 3565, 426, 337, 8969, 11, 4159, 293, 7083, 1840, 7705, 294, 12569, 13, 51368, 51368, 286, 519, 300, 311, 534, 665, 281, 458, 13, 51502, 51502, 708, 775, 300, 914, 337, 561, 567, 994, 380, 2979, 3820, 3497, 30, 51656, 51656, 1779, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14779757416766623, "compression_ratio": 1.5135135135135136, "no_caption_prob": 8.186353852579487e-07}, {"id": 927, "seek": 325054, "start": 3276.38, "end": 3277.38, "text": " Right.", "tokens": [50364, 400, 767, 11, 881, 295, 264, 2699, 76, 1412, 9227, 11, 411, 498, 291, 352, 281, 264, 45623, 337, 2699, 76, 4965, 12569, 11, 50783, 50783, 337, 1365, 11, 550, 309, 5112, 291, 264, 14024, 295, 613, 7705, 13, 51070, 51070, 407, 309, 311, 422, 3565, 426, 337, 8969, 11, 4159, 293, 7083, 1840, 7705, 294, 12569, 13, 51368, 51368, 286, 519, 300, 311, 534, 665, 281, 458, 13, 51502, 51502, 708, 775, 300, 914, 337, 561, 567, 994, 380, 2979, 3820, 3497, 30, 51656, 51656, 1779, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14779757416766623, "compression_ratio": 1.5135135135135136, "no_caption_prob": 8.186353852579487e-07}, {"id": 928, "seek": 327738, "start": 3277.38, "end": 3287.46, "text": " I mean, what it means is that there's a relationship between the performance cost of adding, removing", "tokens": [50364, 286, 914, 11, 437, 309, 1355, 307, 300, 456, 311, 257, 2480, 1296, 264, 3389, 2063, 295, 5127, 11, 12720, 50868, 50868, 420, 1237, 493, 294, 257, 25890, 300, 311, 4077, 281, 264, 2744, 295, 264, 1230, 295, 23041, 294, 264, 51230, 51230, 25890, 13, 51280, 51280, 407, 264, 544, 4754, 456, 366, 294, 264, 25890, 11, 264, 2854, 309, 311, 516, 281, 747, 281, 4159, 746, 13, 51552, 51552, 759, 291, 584, 286, 528, 281, 4159, 746, 293, 456, 366, 257, 2459, 721, 11, 309, 311, 516, 281, 51712, 51712, 747, 2854, 813, 498, 456, 645, 1266, 721, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09732879125154935, "compression_ratio": 1.8849557522123894, "no_caption_prob": 7.296233434317401e-06}, {"id": 929, "seek": 327738, "start": 3287.46, "end": 3294.7000000000003, "text": " or looking up in a dictionary that's related to the size of the number of entries in the", "tokens": [50364, 286, 914, 11, 437, 309, 1355, 307, 300, 456, 311, 257, 2480, 1296, 264, 3389, 2063, 295, 5127, 11, 12720, 50868, 50868, 420, 1237, 493, 294, 257, 25890, 300, 311, 4077, 281, 264, 2744, 295, 264, 1230, 295, 23041, 294, 264, 51230, 51230, 25890, 13, 51280, 51280, 407, 264, 544, 4754, 456, 366, 294, 264, 25890, 11, 264, 2854, 309, 311, 516, 281, 747, 281, 4159, 746, 13, 51552, 51552, 759, 291, 584, 286, 528, 281, 4159, 746, 293, 456, 366, 257, 2459, 721, 11, 309, 311, 516, 281, 51712, 51712, 747, 2854, 813, 498, 456, 645, 1266, 721, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09732879125154935, "compression_ratio": 1.8849557522123894, "no_caption_prob": 7.296233434317401e-06}, {"id": 930, "seek": 327738, "start": 3294.7000000000003, "end": 3295.7000000000003, "text": " dictionary.", "tokens": [50364, 286, 914, 11, 437, 309, 1355, 307, 300, 456, 311, 257, 2480, 1296, 264, 3389, 2063, 295, 5127, 11, 12720, 50868, 50868, 420, 1237, 493, 294, 257, 25890, 300, 311, 4077, 281, 264, 2744, 295, 264, 1230, 295, 23041, 294, 264, 51230, 51230, 25890, 13, 51280, 51280, 407, 264, 544, 4754, 456, 366, 294, 264, 25890, 11, 264, 2854, 309, 311, 516, 281, 747, 281, 4159, 746, 13, 51552, 51552, 759, 291, 584, 286, 528, 281, 4159, 746, 293, 456, 366, 257, 2459, 721, 11, 309, 311, 516, 281, 51712, 51712, 747, 2854, 813, 498, 456, 645, 1266, 721, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09732879125154935, "compression_ratio": 1.8849557522123894, "no_caption_prob": 7.296233434317401e-06}, {"id": 931, "seek": 327738, "start": 3295.7000000000003, "end": 3301.1400000000003, "text": " So the more items there are in the dictionary, the longer it's going to take to remove something.", "tokens": [50364, 286, 914, 11, 437, 309, 1355, 307, 300, 456, 311, 257, 2480, 1296, 264, 3389, 2063, 295, 5127, 11, 12720, 50868, 50868, 420, 1237, 493, 294, 257, 25890, 300, 311, 4077, 281, 264, 2744, 295, 264, 1230, 295, 23041, 294, 264, 51230, 51230, 25890, 13, 51280, 51280, 407, 264, 544, 4754, 456, 366, 294, 264, 25890, 11, 264, 2854, 309, 311, 516, 281, 747, 281, 4159, 746, 13, 51552, 51552, 759, 291, 584, 286, 528, 281, 4159, 746, 293, 456, 366, 257, 2459, 721, 11, 309, 311, 516, 281, 51712, 51712, 747, 2854, 813, 498, 456, 645, 1266, 721, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09732879125154935, "compression_ratio": 1.8849557522123894, "no_caption_prob": 7.296233434317401e-06}, {"id": 932, "seek": 327738, "start": 3301.1400000000003, "end": 3304.34, "text": " If you say I want to remove something and there are a million things, it's going to", "tokens": [50364, 286, 914, 11, 437, 309, 1355, 307, 300, 456, 311, 257, 2480, 1296, 264, 3389, 2063, 295, 5127, 11, 12720, 50868, 50868, 420, 1237, 493, 294, 257, 25890, 300, 311, 4077, 281, 264, 2744, 295, 264, 1230, 295, 23041, 294, 264, 51230, 51230, 25890, 13, 51280, 51280, 407, 264, 544, 4754, 456, 366, 294, 264, 25890, 11, 264, 2854, 309, 311, 516, 281, 747, 281, 4159, 746, 13, 51552, 51552, 759, 291, 584, 286, 528, 281, 4159, 746, 293, 456, 366, 257, 2459, 721, 11, 309, 311, 516, 281, 51712, 51712, 747, 2854, 813, 498, 456, 645, 1266, 721, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09732879125154935, "compression_ratio": 1.8849557522123894, "no_caption_prob": 7.296233434317401e-06}, {"id": 933, "seek": 327738, "start": 3304.34, "end": 3306.7000000000003, "text": " take longer than if there were 10 things.", "tokens": [50364, 286, 914, 11, 437, 309, 1355, 307, 300, 456, 311, 257, 2480, 1296, 264, 3389, 2063, 295, 5127, 11, 12720, 50868, 50868, 420, 1237, 493, 294, 257, 25890, 300, 311, 4077, 281, 264, 2744, 295, 264, 1230, 295, 23041, 294, 264, 51230, 51230, 25890, 13, 51280, 51280, 407, 264, 544, 4754, 456, 366, 294, 264, 25890, 11, 264, 2854, 309, 311, 516, 281, 747, 281, 4159, 746, 13, 51552, 51552, 759, 291, 584, 286, 528, 281, 4159, 746, 293, 456, 366, 257, 2459, 721, 11, 309, 311, 516, 281, 51712, 51712, 747, 2854, 813, 498, 456, 645, 1266, 721, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09732879125154935, "compression_ratio": 1.8849557522123894, "no_caption_prob": 7.296233434317401e-06}, {"id": 934, "seek": 330670, "start": 3306.7, "end": 3313.98, "text": " Now, it's not linearly related to it where it's going to be a million times slower for", "tokens": [50364, 823, 11, 309, 311, 406, 43586, 4077, 281, 309, 689, 309, 311, 516, 281, 312, 257, 2459, 1413, 14009, 337, 50728, 50728, 257, 2459, 721, 813, 12720, 472, 3174, 490, 257, 25890, 365, 472, 551, 13, 50982, 50982, 583, 309, 1355, 300, 485, 51050, 51050, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 13, 51172, 51172, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 11, 2293, 13, 51276, 51276, 583, 309, 311, 422, 295, 3565, 426, 13, 400, 264, 1778, 309, 311, 3565, 426, 307, 570, 264, 5855, 1389, 9005, 307, 309, 311, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11225995739686837, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.922298179124482e-05}, {"id": 935, "seek": 330670, "start": 3313.98, "end": 3319.06, "text": " a million things than removing one item from a dictionary with one thing.", "tokens": [50364, 823, 11, 309, 311, 406, 43586, 4077, 281, 309, 689, 309, 311, 516, 281, 312, 257, 2459, 1413, 14009, 337, 50728, 50728, 257, 2459, 721, 813, 12720, 472, 3174, 490, 257, 25890, 365, 472, 551, 13, 50982, 50982, 583, 309, 1355, 300, 485, 51050, 51050, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 13, 51172, 51172, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 11, 2293, 13, 51276, 51276, 583, 309, 311, 422, 295, 3565, 426, 13, 400, 264, 1778, 309, 311, 3565, 426, 307, 570, 264, 5855, 1389, 9005, 307, 309, 311, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11225995739686837, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.922298179124482e-05}, {"id": 936, "seek": 330670, "start": 3319.06, "end": 3320.4199999999996, "text": " But it means that...", "tokens": [50364, 823, 11, 309, 311, 406, 43586, 4077, 281, 309, 689, 309, 311, 516, 281, 312, 257, 2459, 1413, 14009, 337, 50728, 50728, 257, 2459, 721, 813, 12720, 472, 3174, 490, 257, 25890, 365, 472, 551, 13, 50982, 50982, 583, 309, 1355, 300, 485, 51050, 51050, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 13, 51172, 51172, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 11, 2293, 13, 51276, 51276, 583, 309, 311, 422, 295, 3565, 426, 13, 400, 264, 1778, 309, 311, 3565, 426, 307, 570, 264, 5855, 1389, 9005, 307, 309, 311, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11225995739686837, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.922298179124482e-05}, {"id": 937, "seek": 330670, "start": 3320.4199999999996, "end": 3322.8599999999997, "text": " That would be the case if it was O of N.", "tokens": [50364, 823, 11, 309, 311, 406, 43586, 4077, 281, 309, 689, 309, 311, 516, 281, 312, 257, 2459, 1413, 14009, 337, 50728, 50728, 257, 2459, 721, 813, 12720, 472, 3174, 490, 257, 25890, 365, 472, 551, 13, 50982, 50982, 583, 309, 1355, 300, 485, 51050, 51050, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 13, 51172, 51172, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 11, 2293, 13, 51276, 51276, 583, 309, 311, 422, 295, 3565, 426, 13, 400, 264, 1778, 309, 311, 3565, 426, 307, 570, 264, 5855, 1389, 9005, 307, 309, 311, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11225995739686837, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.922298179124482e-05}, {"id": 938, "seek": 330670, "start": 3322.8599999999997, "end": 3324.9399999999996, "text": " That would be the case if it was O of N, exactly.", "tokens": [50364, 823, 11, 309, 311, 406, 43586, 4077, 281, 309, 689, 309, 311, 516, 281, 312, 257, 2459, 1413, 14009, 337, 50728, 50728, 257, 2459, 721, 813, 12720, 472, 3174, 490, 257, 25890, 365, 472, 551, 13, 50982, 50982, 583, 309, 1355, 300, 485, 51050, 51050, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 13, 51172, 51172, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 11, 2293, 13, 51276, 51276, 583, 309, 311, 422, 295, 3565, 426, 13, 400, 264, 1778, 309, 311, 3565, 426, 307, 570, 264, 5855, 1389, 9005, 307, 309, 311, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11225995739686837, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.922298179124482e-05}, {"id": 939, "seek": 330670, "start": 3324.9399999999996, "end": 3332.8599999999997, "text": " But it's O of log N. And the reason it's log N is because the worst case scenario is it's", "tokens": [50364, 823, 11, 309, 311, 406, 43586, 4077, 281, 309, 689, 309, 311, 516, 281, 312, 257, 2459, 1413, 14009, 337, 50728, 50728, 257, 2459, 721, 813, 12720, 472, 3174, 490, 257, 25890, 365, 472, 551, 13, 50982, 50982, 583, 309, 1355, 300, 485, 51050, 51050, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 13, 51172, 51172, 663, 576, 312, 264, 1389, 498, 309, 390, 422, 295, 426, 11, 2293, 13, 51276, 51276, 583, 309, 311, 422, 295, 3565, 426, 13, 400, 264, 1778, 309, 311, 3565, 426, 307, 570, 264, 5855, 1389, 9005, 307, 309, 311, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11225995739686837, "compression_ratio": 1.7832512315270936, "no_caption_prob": 1.922298179124482e-05}, {"id": 940, "seek": 333286, "start": 3332.86, "end": 3337.54, "text": " branching down these branches of a tree so it doesn't have to traverse everything.", "tokens": [50364, 9819, 278, 760, 613, 14770, 295, 257, 4230, 370, 309, 1177, 380, 362, 281, 45674, 1203, 13, 50598, 50598, 467, 393, 5613, 2276, 7472, 264, 589, 13, 50746, 50746, 400, 370, 3565, 295, 426, 307, 636, 4356, 813, 426, 337, 3547, 411, 257, 2459, 13, 51066, 51066, 1171, 3547, 411, 1732, 11, 2745, 309, 311, 406, 516, 281, 652, 709, 295, 257, 2649, 13, 51248, 51248, 583, 309, 311, 1021, 281, 1223, 300, 293, 445, 312, 3650, 295, 309, 13, 51419, 51419, 759, 291, 434, 6260, 365, 588, 2416, 4846, 293, 291, 434, 1382, 281, 4159, 721, 10374, 51640, 51640, 420, 909, 721, 10374, 281, 257, 25890, 11, 300, 311, 746, 291, 820, 312, 3650, 295, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.08653672273493995, "compression_ratio": 1.71875, "no_caption_prob": 3.237740884287632e-06}, {"id": 941, "seek": 333286, "start": 3337.54, "end": 3340.5, "text": " It can intelligently split the work.", "tokens": [50364, 9819, 278, 760, 613, 14770, 295, 257, 4230, 370, 309, 1177, 380, 362, 281, 45674, 1203, 13, 50598, 50598, 467, 393, 5613, 2276, 7472, 264, 589, 13, 50746, 50746, 400, 370, 3565, 295, 426, 307, 636, 4356, 813, 426, 337, 3547, 411, 257, 2459, 13, 51066, 51066, 1171, 3547, 411, 1732, 11, 2745, 309, 311, 406, 516, 281, 652, 709, 295, 257, 2649, 13, 51248, 51248, 583, 309, 311, 1021, 281, 1223, 300, 293, 445, 312, 3650, 295, 309, 13, 51419, 51419, 759, 291, 434, 6260, 365, 588, 2416, 4846, 293, 291, 434, 1382, 281, 4159, 721, 10374, 51640, 51640, 420, 909, 721, 10374, 281, 257, 25890, 11, 300, 311, 746, 291, 820, 312, 3650, 295, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.08653672273493995, "compression_ratio": 1.71875, "no_caption_prob": 3.237740884287632e-06}, {"id": 942, "seek": 333286, "start": 3340.5, "end": 3346.9, "text": " And so log of N is way smaller than N for numbers like a million.", "tokens": [50364, 9819, 278, 760, 613, 14770, 295, 257, 4230, 370, 309, 1177, 380, 362, 281, 45674, 1203, 13, 50598, 50598, 467, 393, 5613, 2276, 7472, 264, 589, 13, 50746, 50746, 400, 370, 3565, 295, 426, 307, 636, 4356, 813, 426, 337, 3547, 411, 257, 2459, 13, 51066, 51066, 1171, 3547, 411, 1732, 11, 2745, 309, 311, 406, 516, 281, 652, 709, 295, 257, 2649, 13, 51248, 51248, 583, 309, 311, 1021, 281, 1223, 300, 293, 445, 312, 3650, 295, 309, 13, 51419, 51419, 759, 291, 434, 6260, 365, 588, 2416, 4846, 293, 291, 434, 1382, 281, 4159, 721, 10374, 51640, 51640, 420, 909, 721, 10374, 281, 257, 25890, 11, 300, 311, 746, 291, 820, 312, 3650, 295, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.08653672273493995, "compression_ratio": 1.71875, "no_caption_prob": 3.237740884287632e-06}, {"id": 943, "seek": 333286, "start": 3346.9, "end": 3350.54, "text": " For numbers like five, obviously it's not going to make much of a difference.", "tokens": [50364, 9819, 278, 760, 613, 14770, 295, 257, 4230, 370, 309, 1177, 380, 362, 281, 45674, 1203, 13, 50598, 50598, 467, 393, 5613, 2276, 7472, 264, 589, 13, 50746, 50746, 400, 370, 3565, 295, 426, 307, 636, 4356, 813, 426, 337, 3547, 411, 257, 2459, 13, 51066, 51066, 1171, 3547, 411, 1732, 11, 2745, 309, 311, 406, 516, 281, 652, 709, 295, 257, 2649, 13, 51248, 51248, 583, 309, 311, 1021, 281, 1223, 300, 293, 445, 312, 3650, 295, 309, 13, 51419, 51419, 759, 291, 434, 6260, 365, 588, 2416, 4846, 293, 291, 434, 1382, 281, 4159, 721, 10374, 51640, 51640, 420, 909, 721, 10374, 281, 257, 25890, 11, 300, 311, 746, 291, 820, 312, 3650, 295, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.08653672273493995, "compression_ratio": 1.71875, "no_caption_prob": 3.237740884287632e-06}, {"id": 944, "seek": 333286, "start": 3350.54, "end": 3353.96, "text": " But it's important to understand that and just be aware of it.", "tokens": [50364, 9819, 278, 760, 613, 14770, 295, 257, 4230, 370, 309, 1177, 380, 362, 281, 45674, 1203, 13, 50598, 50598, 467, 393, 5613, 2276, 7472, 264, 589, 13, 50746, 50746, 400, 370, 3565, 295, 426, 307, 636, 4356, 813, 426, 337, 3547, 411, 257, 2459, 13, 51066, 51066, 1171, 3547, 411, 1732, 11, 2745, 309, 311, 406, 516, 281, 652, 709, 295, 257, 2649, 13, 51248, 51248, 583, 309, 311, 1021, 281, 1223, 300, 293, 445, 312, 3650, 295, 309, 13, 51419, 51419, 759, 291, 434, 6260, 365, 588, 2416, 4846, 293, 291, 434, 1382, 281, 4159, 721, 10374, 51640, 51640, 420, 909, 721, 10374, 281, 257, 25890, 11, 300, 311, 746, 291, 820, 312, 3650, 295, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.08653672273493995, "compression_ratio": 1.71875, "no_caption_prob": 3.237740884287632e-06}, {"id": 945, "seek": 333286, "start": 3353.96, "end": 3358.38, "text": " If you're dealing with very large input and you're trying to remove things frequently", "tokens": [50364, 9819, 278, 760, 613, 14770, 295, 257, 4230, 370, 309, 1177, 380, 362, 281, 45674, 1203, 13, 50598, 50598, 467, 393, 5613, 2276, 7472, 264, 589, 13, 50746, 50746, 400, 370, 3565, 295, 426, 307, 636, 4356, 813, 426, 337, 3547, 411, 257, 2459, 13, 51066, 51066, 1171, 3547, 411, 1732, 11, 2745, 309, 311, 406, 516, 281, 652, 709, 295, 257, 2649, 13, 51248, 51248, 583, 309, 311, 1021, 281, 1223, 300, 293, 445, 312, 3650, 295, 309, 13, 51419, 51419, 759, 291, 434, 6260, 365, 588, 2416, 4846, 293, 291, 434, 1382, 281, 4159, 721, 10374, 51640, 51640, 420, 909, 721, 10374, 281, 257, 25890, 11, 300, 311, 746, 291, 820, 312, 3650, 295, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.08653672273493995, "compression_ratio": 1.71875, "no_caption_prob": 3.237740884287632e-06}, {"id": 946, "seek": 333286, "start": 3358.38, "end": 3362.2200000000003, "text": " or add things frequently to a dictionary, that's something you should be aware of.", "tokens": [50364, 9819, 278, 760, 613, 14770, 295, 257, 4230, 370, 309, 1177, 380, 362, 281, 45674, 1203, 13, 50598, 50598, 467, 393, 5613, 2276, 7472, 264, 589, 13, 50746, 50746, 400, 370, 3565, 295, 426, 307, 636, 4356, 813, 426, 337, 3547, 411, 257, 2459, 13, 51066, 51066, 1171, 3547, 411, 1732, 11, 2745, 309, 311, 406, 516, 281, 652, 709, 295, 257, 2649, 13, 51248, 51248, 583, 309, 311, 1021, 281, 1223, 300, 293, 445, 312, 3650, 295, 309, 13, 51419, 51419, 759, 291, 434, 6260, 365, 588, 2416, 4846, 293, 291, 434, 1382, 281, 4159, 721, 10374, 51640, 51640, 420, 909, 721, 10374, 281, 257, 25890, 11, 300, 311, 746, 291, 820, 312, 3650, 295, 13, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.08653672273493995, "compression_ratio": 1.71875, "no_caption_prob": 3.237740884287632e-06}, {"id": 947, "seek": 336222, "start": 3362.22, "end": 3369.62, "text": " And because I often think of map key value data structures as constant time lookup and", "tokens": [50364, 400, 570, 286, 2049, 519, 295, 4471, 2141, 2158, 1412, 9227, 382, 5754, 565, 574, 1010, 293, 50734, 50734, 8969, 313, 293, 1103, 302, 313, 13, 50811, 50811, 407, 286, 519, 309, 311, 1021, 281, 4325, 300, 309, 311, 406, 337, 257, 12569, 13, 51102, 51102, 682, 257, 636, 11, 294, 2699, 76, 11, 309, 3417, 257, 857, 544, 5124, 13, 51252, 51252, 1743, 498, 291, 360, 12569, 13, 847, 11, 570, 264, 3089, 926, 309, 307, 544, 3997, 13, 51474, 51474, 509, 643, 281, 360, 257, 1389, 295, 420, 291, 643, 281, 360, 1310, 4471, 13, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.19579728759161316, "compression_ratio": 1.547085201793722, "no_caption_prob": 5.7718903008208144e-06}, {"id": 948, "seek": 336222, "start": 3369.62, "end": 3371.16, "text": " insertion and deletion.", "tokens": [50364, 400, 570, 286, 2049, 519, 295, 4471, 2141, 2158, 1412, 9227, 382, 5754, 565, 574, 1010, 293, 50734, 50734, 8969, 313, 293, 1103, 302, 313, 13, 50811, 50811, 407, 286, 519, 309, 311, 1021, 281, 4325, 300, 309, 311, 406, 337, 257, 12569, 13, 51102, 51102, 682, 257, 636, 11, 294, 2699, 76, 11, 309, 3417, 257, 857, 544, 5124, 13, 51252, 51252, 1743, 498, 291, 360, 12569, 13, 847, 11, 570, 264, 3089, 926, 309, 307, 544, 3997, 13, 51474, 51474, 509, 643, 281, 360, 257, 1389, 295, 420, 291, 643, 281, 360, 1310, 4471, 13, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.19579728759161316, "compression_ratio": 1.547085201793722, "no_caption_prob": 5.7718903008208144e-06}, {"id": 949, "seek": 336222, "start": 3371.16, "end": 3376.98, "text": " So I think it's important to realize that it's not for a dict.", "tokens": [50364, 400, 570, 286, 2049, 519, 295, 4471, 2141, 2158, 1412, 9227, 382, 5754, 565, 574, 1010, 293, 50734, 50734, 8969, 313, 293, 1103, 302, 313, 13, 50811, 50811, 407, 286, 519, 309, 311, 1021, 281, 4325, 300, 309, 311, 406, 337, 257, 12569, 13, 51102, 51102, 682, 257, 636, 11, 294, 2699, 76, 11, 309, 3417, 257, 857, 544, 5124, 13, 51252, 51252, 1743, 498, 291, 360, 12569, 13, 847, 11, 570, 264, 3089, 926, 309, 307, 544, 3997, 13, 51474, 51474, 509, 643, 281, 360, 257, 1389, 295, 420, 291, 643, 281, 360, 1310, 4471, 13, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.19579728759161316, "compression_ratio": 1.547085201793722, "no_caption_prob": 5.7718903008208144e-06}, {"id": 950, "seek": 336222, "start": 3376.98, "end": 3379.98, "text": " In a way, in Elm, it feels a bit more expensive.", "tokens": [50364, 400, 570, 286, 2049, 519, 295, 4471, 2141, 2158, 1412, 9227, 382, 5754, 565, 574, 1010, 293, 50734, 50734, 8969, 313, 293, 1103, 302, 313, 13, 50811, 50811, 407, 286, 519, 309, 311, 1021, 281, 4325, 300, 309, 311, 406, 337, 257, 12569, 13, 51102, 51102, 682, 257, 636, 11, 294, 2699, 76, 11, 309, 3417, 257, 857, 544, 5124, 13, 51252, 51252, 1743, 498, 291, 360, 12569, 13, 847, 11, 570, 264, 3089, 926, 309, 307, 544, 3997, 13, 51474, 51474, 509, 643, 281, 360, 257, 1389, 295, 420, 291, 643, 281, 360, 1310, 4471, 13, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.19579728759161316, "compression_ratio": 1.547085201793722, "no_caption_prob": 5.7718903008208144e-06}, {"id": 951, "seek": 336222, "start": 3379.98, "end": 3384.4199999999996, "text": " Like if you do dict.get, because the code around it is more complex.", "tokens": [50364, 400, 570, 286, 2049, 519, 295, 4471, 2141, 2158, 1412, 9227, 382, 5754, 565, 574, 1010, 293, 50734, 50734, 8969, 313, 293, 1103, 302, 313, 13, 50811, 50811, 407, 286, 519, 309, 311, 1021, 281, 4325, 300, 309, 311, 406, 337, 257, 12569, 13, 51102, 51102, 682, 257, 636, 11, 294, 2699, 76, 11, 309, 3417, 257, 857, 544, 5124, 13, 51252, 51252, 1743, 498, 291, 360, 12569, 13, 847, 11, 570, 264, 3089, 926, 309, 307, 544, 3997, 13, 51474, 51474, 509, 643, 281, 360, 257, 1389, 295, 420, 291, 643, 281, 360, 1310, 4471, 13, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.19579728759161316, "compression_ratio": 1.547085201793722, "no_caption_prob": 5.7718903008208144e-06}, {"id": 952, "seek": 336222, "start": 3384.4199999999996, "end": 3387.9599999999996, "text": " You need to do a case of or you need to do maybe map.", "tokens": [50364, 400, 570, 286, 2049, 519, 295, 4471, 2141, 2158, 1412, 9227, 382, 5754, 565, 574, 1010, 293, 50734, 50734, 8969, 313, 293, 1103, 302, 313, 13, 50811, 50811, 407, 286, 519, 309, 311, 1021, 281, 4325, 300, 309, 311, 406, 337, 257, 12569, 13, 51102, 51102, 682, 257, 636, 11, 294, 2699, 76, 11, 309, 3417, 257, 857, 544, 5124, 13, 51252, 51252, 1743, 498, 291, 360, 12569, 13, 847, 11, 570, 264, 3089, 926, 309, 307, 544, 3997, 13, 51474, 51474, 509, 643, 281, 360, 257, 1389, 295, 420, 291, 643, 281, 360, 1310, 4471, 13, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.19579728759161316, "compression_ratio": 1.547085201793722, "no_caption_prob": 5.7718903008208144e-06}, {"id": 953, "seek": 338796, "start": 3387.96, "end": 3394.86, "text": " So it feels a lot more complex than record access or field access in JavaScript, for", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 954, "seek": 338796, "start": 3394.86, "end": 3395.86, "text": " instance.", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 955, "seek": 338796, "start": 3395.86, "end": 3396.86, "text": " Yeah.", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 956, "seek": 338796, "start": 3396.86, "end": 3399.2200000000003, "text": " So it's pretty interesting in JavaScript.", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 957, "seek": 338796, "start": 3399.2200000000003, "end": 3407.86, "text": " I recently learned that objects inserting and deleting fields in an object in a JavaScript", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 958, "seek": 338796, "start": 3407.86, "end": 3414.26, "text": " object makes it like it deoptimizes all of these just in time optimizations that the", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 959, "seek": 338796, "start": 3414.26, "end": 3415.94, "text": " JavaScript runtime does.", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 960, "seek": 338796, "start": 3415.94, "end": 3416.94, "text": " Yeah.", "tokens": [50364, 407, 309, 3417, 257, 688, 544, 3997, 813, 2136, 2105, 420, 2519, 2105, 294, 15778, 11, 337, 50709, 50709, 5197, 13, 50759, 50759, 865, 13, 50809, 50809, 407, 309, 311, 1238, 1880, 294, 15778, 13, 50927, 50927, 286, 3938, 3264, 300, 6565, 46567, 293, 48946, 7909, 294, 364, 2657, 294, 257, 15778, 51359, 51359, 2657, 1669, 309, 411, 309, 368, 5747, 332, 5660, 439, 295, 613, 445, 294, 565, 5028, 14455, 300, 264, 51679, 51679, 15778, 34474, 775, 13, 51763, 51763, 865, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.19509126948214126, "compression_ratio": 1.736318407960199, "no_caption_prob": 4.28929524787236e-06}, {"id": 961, "seek": 341694, "start": 3416.94, "end": 3419.38, "text": " And also, again, the monomorphic.", "tokens": [50364, 400, 611, 11, 797, 11, 264, 1108, 32702, 299, 13, 50486, 50486, 865, 13, 50558, 50558, 821, 311, 341, 411, 3410, 295, 257, 3909, 293, 309, 1936, 4322, 1024, 689, 281, 574, 337, 1412, 50898, 50898, 294, 364, 2657, 13, 50986, 50986, 583, 382, 2321, 382, 291, 1319, 264, 411, 19475, 538, 5127, 420, 12720, 721, 281, 364, 2657, 11, 51294, 51294, 309, 393, 572, 2854, 764, 300, 6408, 281, 2661, 2573, 484, 689, 281, 574, 721, 493, 13, 51496, 51496, 400, 309, 575, 281, 1936, 850, 304, 2444, 473, 577, 281, 574, 493, 4675, 490, 364, 2657, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.16171190576645936, "compression_ratio": 1.6782608695652175, "no_caption_prob": 5.0641952839214355e-05}, {"id": 962, "seek": 341694, "start": 3419.38, "end": 3420.82, "text": " Yeah.", "tokens": [50364, 400, 611, 11, 797, 11, 264, 1108, 32702, 299, 13, 50486, 50486, 865, 13, 50558, 50558, 821, 311, 341, 411, 3410, 295, 257, 3909, 293, 309, 1936, 4322, 1024, 689, 281, 574, 337, 1412, 50898, 50898, 294, 364, 2657, 13, 50986, 50986, 583, 382, 2321, 382, 291, 1319, 264, 411, 19475, 538, 5127, 420, 12720, 721, 281, 364, 2657, 11, 51294, 51294, 309, 393, 572, 2854, 764, 300, 6408, 281, 2661, 2573, 484, 689, 281, 574, 721, 493, 13, 51496, 51496, 400, 309, 575, 281, 1936, 850, 304, 2444, 473, 577, 281, 574, 493, 4675, 490, 364, 2657, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.16171190576645936, "compression_ratio": 1.6782608695652175, "no_caption_prob": 5.0641952839214355e-05}, {"id": 963, "seek": 341694, "start": 3420.82, "end": 3427.62, "text": " There's this like concept of a shape and it basically calculates where to look for data", "tokens": [50364, 400, 611, 11, 797, 11, 264, 1108, 32702, 299, 13, 50486, 50486, 865, 13, 50558, 50558, 821, 311, 341, 411, 3410, 295, 257, 3909, 293, 309, 1936, 4322, 1024, 689, 281, 574, 337, 1412, 50898, 50898, 294, 364, 2657, 13, 50986, 50986, 583, 382, 2321, 382, 291, 1319, 264, 411, 19475, 538, 5127, 420, 12720, 721, 281, 364, 2657, 11, 51294, 51294, 309, 393, 572, 2854, 764, 300, 6408, 281, 2661, 2573, 484, 689, 281, 574, 721, 493, 13, 51496, 51496, 400, 309, 575, 281, 1936, 850, 304, 2444, 473, 577, 281, 574, 493, 4675, 490, 364, 2657, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.16171190576645936, "compression_ratio": 1.6782608695652175, "no_caption_prob": 5.0641952839214355e-05}, {"id": 964, "seek": 341694, "start": 3427.62, "end": 3429.38, "text": " in an object.", "tokens": [50364, 400, 611, 11, 797, 11, 264, 1108, 32702, 299, 13, 50486, 50486, 865, 13, 50558, 50558, 821, 311, 341, 411, 3410, 295, 257, 3909, 293, 309, 1936, 4322, 1024, 689, 281, 574, 337, 1412, 50898, 50898, 294, 364, 2657, 13, 50986, 50986, 583, 382, 2321, 382, 291, 1319, 264, 411, 19475, 538, 5127, 420, 12720, 721, 281, 364, 2657, 11, 51294, 51294, 309, 393, 572, 2854, 764, 300, 6408, 281, 2661, 2573, 484, 689, 281, 574, 721, 493, 13, 51496, 51496, 400, 309, 575, 281, 1936, 850, 304, 2444, 473, 577, 281, 574, 493, 4675, 490, 364, 2657, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.16171190576645936, "compression_ratio": 1.6782608695652175, "no_caption_prob": 5.0641952839214355e-05}, {"id": 965, "seek": 341694, "start": 3429.38, "end": 3435.54, "text": " But as soon as you change the like prototype by adding or removing things to an object,", "tokens": [50364, 400, 611, 11, 797, 11, 264, 1108, 32702, 299, 13, 50486, 50486, 865, 13, 50558, 50558, 821, 311, 341, 411, 3410, 295, 257, 3909, 293, 309, 1936, 4322, 1024, 689, 281, 574, 337, 1412, 50898, 50898, 294, 364, 2657, 13, 50986, 50986, 583, 382, 2321, 382, 291, 1319, 264, 411, 19475, 538, 5127, 420, 12720, 721, 281, 364, 2657, 11, 51294, 51294, 309, 393, 572, 2854, 764, 300, 6408, 281, 2661, 2573, 484, 689, 281, 574, 721, 493, 13, 51496, 51496, 400, 309, 575, 281, 1936, 850, 304, 2444, 473, 577, 281, 574, 493, 4675, 490, 364, 2657, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.16171190576645936, "compression_ratio": 1.6782608695652175, "no_caption_prob": 5.0641952839214355e-05}, {"id": 966, "seek": 341694, "start": 3435.54, "end": 3439.58, "text": " it can no longer use that reference to quickly figure out where to look things up.", "tokens": [50364, 400, 611, 11, 797, 11, 264, 1108, 32702, 299, 13, 50486, 50486, 865, 13, 50558, 50558, 821, 311, 341, 411, 3410, 295, 257, 3909, 293, 309, 1936, 4322, 1024, 689, 281, 574, 337, 1412, 50898, 50898, 294, 364, 2657, 13, 50986, 50986, 583, 382, 2321, 382, 291, 1319, 264, 411, 19475, 538, 5127, 420, 12720, 721, 281, 364, 2657, 11, 51294, 51294, 309, 393, 572, 2854, 764, 300, 6408, 281, 2661, 2573, 484, 689, 281, 574, 721, 493, 13, 51496, 51496, 400, 309, 575, 281, 1936, 850, 304, 2444, 473, 577, 281, 574, 493, 4675, 490, 364, 2657, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.16171190576645936, "compression_ratio": 1.6782608695652175, "no_caption_prob": 5.0641952839214355e-05}, {"id": 967, "seek": 341694, "start": 3439.58, "end": 3444.26, "text": " And it has to basically recalculate how to look up memory from an object.", "tokens": [50364, 400, 611, 11, 797, 11, 264, 1108, 32702, 299, 13, 50486, 50486, 865, 13, 50558, 50558, 821, 311, 341, 411, 3410, 295, 257, 3909, 293, 309, 1936, 4322, 1024, 689, 281, 574, 337, 1412, 50898, 50898, 294, 364, 2657, 13, 50986, 50986, 583, 382, 2321, 382, 291, 1319, 264, 411, 19475, 538, 5127, 420, 12720, 721, 281, 364, 2657, 11, 51294, 51294, 309, 393, 572, 2854, 764, 300, 6408, 281, 2661, 2573, 484, 689, 281, 574, 721, 493, 13, 51496, 51496, 400, 309, 575, 281, 1936, 850, 304, 2444, 473, 577, 281, 574, 493, 4675, 490, 364, 2657, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.16171190576645936, "compression_ratio": 1.6782608695652175, "no_caption_prob": 5.0641952839214355e-05}, {"id": 968, "seek": 344426, "start": 3444.26, "end": 3449.7000000000003, "text": " And anyway, it's surprising the performance characteristics of things are surprising.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 969, "seek": 344426, "start": 3449.7000000000003, "end": 3455.94, "text": " So even a JavaScript object doesn't necessarily just have like O of one look up time.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 970, "seek": 344426, "start": 3455.94, "end": 3459.6200000000003, "text": " And a JavaScript map is more optimized for that use case.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 971, "seek": 344426, "start": 3459.6200000000003, "end": 3460.6200000000003, "text": " Yeah.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 972, "seek": 344426, "start": 3460.6200000000003, "end": 3463.86, "text": " We're going to link to an article called What's Up with Monomorphism?", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 973, "seek": 344426, "start": 3463.86, "end": 3464.86, "text": " Yeah.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 974, "seek": 344426, "start": 3464.86, "end": 3465.86, "text": " Cool.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 975, "seek": 344426, "start": 3465.86, "end": 3468.5, "text": " Which is a bit complex, but it explains it well.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 976, "seek": 344426, "start": 3468.5, "end": 3469.5, "text": " Yeah.", "tokens": [50364, 400, 4033, 11, 309, 311, 8830, 264, 3389, 10891, 295, 721, 366, 8830, 13, 50636, 50636, 407, 754, 257, 15778, 2657, 1177, 380, 4725, 445, 362, 411, 422, 295, 472, 574, 493, 565, 13, 50948, 50948, 400, 257, 15778, 4471, 307, 544, 26941, 337, 300, 764, 1389, 13, 51132, 51132, 865, 13, 51182, 51182, 492, 434, 516, 281, 2113, 281, 364, 7222, 1219, 708, 311, 5858, 365, 4713, 32702, 1434, 30, 51344, 51344, 865, 13, 51394, 51394, 8561, 13, 51444, 51444, 3013, 307, 257, 857, 3997, 11, 457, 309, 13948, 309, 731, 13, 51576, 51576, 865, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.17525149808071627, "compression_ratio": 1.5, "no_caption_prob": 1.952561615325976e-05}, {"id": 977, "seek": 346950, "start": 3469.5, "end": 3474.46, "text": " And one thing that is pretty nice that Elm does is that it tries to keep it optimized", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 978, "seek": 346950, "start": 3474.46, "end": 3476.02, "text": " with this regard.", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 979, "seek": 346950, "start": 3476.02, "end": 3477.02, "text": " Right.", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 980, "seek": 346950, "start": 3477.02, "end": 3482.02, "text": " Which is not the case in JavaScript when you write it yourself.", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 981, "seek": 346950, "start": 3482.02, "end": 3483.02, "text": " Right.", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 982, "seek": 346950, "start": 3483.02, "end": 3490.46, "text": " Because from Elm 18 to 19, it actually removed the ability to do an object or a record update", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 983, "seek": 346950, "start": 3490.46, "end": 3491.86, "text": " that changed the shape.", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 984, "seek": 346950, "start": 3491.86, "end": 3492.86, "text": " Yeah.", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 985, "seek": 346950, "start": 3492.86, "end": 3497.98, "text": " So Elm Optimize Level 2 is another really great tool that people should check out.", "tokens": [50364, 400, 472, 551, 300, 307, 1238, 1481, 300, 2699, 76, 775, 307, 300, 309, 9898, 281, 1066, 309, 26941, 50612, 50612, 365, 341, 3843, 13, 50690, 50690, 1779, 13, 50740, 50740, 3013, 307, 406, 264, 1389, 294, 15778, 562, 291, 2464, 309, 1803, 13, 50990, 50990, 1779, 13, 51040, 51040, 1436, 490, 2699, 76, 2443, 281, 1294, 11, 309, 767, 7261, 264, 3485, 281, 360, 364, 2657, 420, 257, 2136, 5623, 51412, 51412, 300, 3105, 264, 3909, 13, 51482, 51482, 865, 13, 51532, 51532, 407, 2699, 76, 35013, 1125, 16872, 568, 307, 1071, 534, 869, 2290, 300, 561, 820, 1520, 484, 13, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.16528556032000846, "compression_ratio": 1.5275590551181102, "no_caption_prob": 2.3186474209069274e-05}, {"id": 986, "seek": 349798, "start": 3497.98, "end": 3503.42, "text": " And Matt Griffith and Simon Twopp, is that his last name or is that his handle?", "tokens": [50364, 400, 7397, 23765, 355, 293, 13193, 2574, 17158, 11, 307, 300, 702, 1036, 1315, 420, 307, 300, 702, 4813, 30, 50636, 50636, 13746, 636, 11, 436, 2942, 341, 534, 1627, 2290, 13, 50804, 50804, 400, 309, 311, 257, 2183, 9007, 2290, 300, 2516, 264, 2699, 76, 5598, 293, 309, 5028, 5660, 309, 1228, 512, 51172, 51172, 13494, 19618, 4786, 300, 16533, 1352, 567, 630, 257, 688, 295, 1627, 5028, 14455, 51490, 51490, 322, 512, 295, 613, 4965, 1412, 9227, 411, 17668, 293, 413, 985, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.11386337708891107, "compression_ratio": 1.5833333333333333, "no_caption_prob": 6.643367669312283e-06}, {"id": 987, "seek": 349798, "start": 3503.42, "end": 3506.78, "text": " Either way, they created this really cool tool.", "tokens": [50364, 400, 7397, 23765, 355, 293, 13193, 2574, 17158, 11, 307, 300, 702, 1036, 1315, 420, 307, 300, 702, 4813, 30, 50636, 50636, 13746, 636, 11, 436, 2942, 341, 534, 1627, 2290, 13, 50804, 50804, 400, 309, 311, 257, 2183, 9007, 2290, 300, 2516, 264, 2699, 76, 5598, 293, 309, 5028, 5660, 309, 1228, 512, 51172, 51172, 13494, 19618, 4786, 300, 16533, 1352, 567, 630, 257, 688, 295, 1627, 5028, 14455, 51490, 51490, 322, 512, 295, 613, 4965, 1412, 9227, 411, 17668, 293, 413, 985, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.11386337708891107, "compression_ratio": 1.5833333333333333, "no_caption_prob": 6.643367669312283e-06}, {"id": 988, "seek": 349798, "start": 3506.78, "end": 3514.14, "text": " And it's a post processing tool that takes the Elm output and it optimizes it using some", "tokens": [50364, 400, 7397, 23765, 355, 293, 13193, 2574, 17158, 11, 307, 300, 702, 1036, 1315, 420, 307, 300, 702, 4813, 30, 50636, 50636, 13746, 636, 11, 436, 2942, 341, 534, 1627, 2290, 13, 50804, 50804, 400, 309, 311, 257, 2183, 9007, 2290, 300, 2516, 264, 2699, 76, 5598, 293, 309, 5028, 5660, 309, 1228, 512, 51172, 51172, 13494, 19618, 4786, 300, 16533, 1352, 567, 630, 257, 688, 295, 1627, 5028, 14455, 51490, 51490, 322, 512, 295, 613, 4965, 1412, 9227, 411, 17668, 293, 413, 985, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.11386337708891107, "compression_ratio": 1.5833333333333333, "no_caption_prob": 6.643367669312283e-06}, {"id": 989, "seek": 349798, "start": 3514.14, "end": 3520.5, "text": " clever optimization opportunities that Robin found who did a lot of cool optimizations", "tokens": [50364, 400, 7397, 23765, 355, 293, 13193, 2574, 17158, 11, 307, 300, 702, 1036, 1315, 420, 307, 300, 702, 4813, 30, 50636, 50636, 13746, 636, 11, 436, 2942, 341, 534, 1627, 2290, 13, 50804, 50804, 400, 309, 311, 257, 2183, 9007, 2290, 300, 2516, 264, 2699, 76, 5598, 293, 309, 5028, 5660, 309, 1228, 512, 51172, 51172, 13494, 19618, 4786, 300, 16533, 1352, 567, 630, 257, 688, 295, 1627, 5028, 14455, 51490, 51490, 322, 512, 295, 613, 4965, 1412, 9227, 411, 17668, 293, 413, 985, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.11386337708891107, "compression_ratio": 1.5833333333333333, "no_caption_prob": 6.643367669312283e-06}, {"id": 990, "seek": 349798, "start": 3520.5, "end": 3523.86, "text": " on some of these core data structures like List and Dict.", "tokens": [50364, 400, 7397, 23765, 355, 293, 13193, 2574, 17158, 11, 307, 300, 702, 1036, 1315, 420, 307, 300, 702, 4813, 30, 50636, 50636, 13746, 636, 11, 436, 2942, 341, 534, 1627, 2290, 13, 50804, 50804, 400, 309, 311, 257, 2183, 9007, 2290, 300, 2516, 264, 2699, 76, 5598, 293, 309, 5028, 5660, 309, 1228, 512, 51172, 51172, 13494, 19618, 4786, 300, 16533, 1352, 567, 630, 257, 688, 295, 1627, 5028, 14455, 51490, 51490, 322, 512, 295, 613, 4965, 1412, 9227, 411, 17668, 293, 413, 985, 13, 51658, 51658], "temperature": 0.0, "avg_logprob": -0.11386337708891107, "compression_ratio": 1.5833333333333333, "no_caption_prob": 6.643367669312283e-06}, {"id": 991, "seek": 352386, "start": 3523.86, "end": 3529.46, "text": " So anyway, that is a nice little free to use tool.", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 992, "seek": 352386, "start": 3529.46, "end": 3534.08, "text": " You just run it and your performance improves because it tries to optimize the code better", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 993, "seek": 352386, "start": 3534.08, "end": 3536.1800000000003, "text": " for JavaScript engines.", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 994, "seek": 352386, "start": 3536.1800000000003, "end": 3537.1800000000003, "text": " Yeah.", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 995, "seek": 352386, "start": 3537.1800000000003, "end": 3538.6600000000003, "text": " It will take a few seconds.", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 996, "seek": 352386, "start": 3538.6600000000003, "end": 3542.38, "text": " Yeah, it usually takes around four seconds for me to run.", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 997, "seek": 352386, "start": 3542.38, "end": 3543.78, "text": " Oh, yeah.", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 998, "seek": 352386, "start": 3543.78, "end": 3549.82, "text": " So instead of doing Elm dash dash optimize, you do Elm Optimize Level 2 dash dash optimize.", "tokens": [50364, 407, 4033, 11, 300, 307, 257, 1481, 707, 1737, 281, 764, 2290, 13, 50644, 50644, 509, 445, 1190, 309, 293, 428, 3389, 24771, 570, 309, 9898, 281, 19719, 264, 3089, 1101, 50875, 50875, 337, 15778, 12982, 13, 50980, 50980, 865, 13, 51030, 51030, 467, 486, 747, 257, 1326, 3949, 13, 51104, 51104, 865, 11, 309, 2673, 2516, 926, 1451, 3949, 337, 385, 281, 1190, 13, 51290, 51290, 876, 11, 1338, 13, 51360, 51360, 407, 2602, 295, 884, 2699, 76, 8240, 8240, 19719, 11, 291, 360, 2699, 76, 35013, 1125, 16872, 568, 8240, 8240, 19719, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.20029867538298018, "compression_ratio": 1.5884955752212389, "no_caption_prob": 1.733040789986262e-06}, {"id": 999, "seek": 354982, "start": 3549.82, "end": 3556.1800000000003, "text": " Takes a couple seconds longer because it does call Elm make optimize and then does some", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1000, "seek": 354982, "start": 3556.1800000000003, "end": 3557.38, "text": " code transformations.", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1001, "seek": 354982, "start": 3557.38, "end": 3560.54, "text": " So it's additional work, but it can be very worthwhile.", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1002, "seek": 354982, "start": 3560.54, "end": 3561.54, "text": " Yeah.", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1003, "seek": 354982, "start": 3561.54, "end": 3563.2200000000003, "text": " But benchmark it.", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1004, "seek": 354982, "start": 3563.2200000000003, "end": 3564.2200000000003, "text": " Yeah.", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1005, "seek": 354982, "start": 3564.2200000000003, "end": 3568.34, "text": " And we actually didn't mention Elm Explorations benchmark.", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1006, "seek": 354982, "start": 3568.34, "end": 3569.34, "text": " Yes.", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1007, "seek": 354982, "start": 3569.34, "end": 3576.1400000000003, "text": " So there's this Elm Explorations package called Benchmark where you can basically create programs", "tokens": [50364, 44347, 257, 1916, 3949, 2854, 570, 309, 775, 818, 2699, 76, 652, 19719, 293, 550, 775, 512, 50682, 50682, 3089, 34852, 13, 50742, 50742, 407, 309, 311, 4497, 589, 11, 457, 309, 393, 312, 588, 28159, 13, 50900, 50900, 865, 13, 50950, 50950, 583, 18927, 309, 13, 51034, 51034, 865, 13, 51084, 51084, 400, 321, 767, 994, 380, 2152, 2699, 76, 12514, 284, 763, 18927, 13, 51290, 51290, 1079, 13, 51340, 51340, 407, 456, 311, 341, 2699, 76, 12514, 284, 763, 7372, 1219, 3964, 339, 5638, 689, 291, 393, 1936, 1884, 4268, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.2050283153851827, "compression_ratio": 1.6081081081081081, "no_caption_prob": 2.0462302927626297e-05}, {"id": 1008, "seek": 357614, "start": 3576.14, "end": 3584.8199999999997, "text": " or yeah, programs which run functions over and over and over again and compare them.", "tokens": [50364, 420, 1338, 11, 4268, 597, 1190, 6828, 670, 293, 670, 293, 670, 797, 293, 6794, 552, 13, 50798, 50798, 407, 498, 291, 528, 281, 458, 498, 472, 2445, 307, 4663, 562, 309, 311, 3720, 472, 636, 420, 3720, 51098, 51098, 1071, 636, 11, 550, 291, 2464, 552, 1293, 293, 550, 291, 1190, 257, 18927, 597, 38334, 552, 51442, 51442, 293, 6676, 309, 257, 3840, 295, 1413, 293, 2709, 291, 597, 472, 307, 4663, 365, 577, 3700, 307, 309, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0898885552476092, "compression_ratio": 1.78125, "no_caption_prob": 2.885465437429957e-05}, {"id": 1009, "seek": 357614, "start": 3584.8199999999997, "end": 3590.8199999999997, "text": " So if you want to know if one function is faster when it's written one way or written", "tokens": [50364, 420, 1338, 11, 4268, 597, 1190, 6828, 670, 293, 670, 293, 670, 797, 293, 6794, 552, 13, 50798, 50798, 407, 498, 291, 528, 281, 458, 498, 472, 2445, 307, 4663, 562, 309, 311, 3720, 472, 636, 420, 3720, 51098, 51098, 1071, 636, 11, 550, 291, 2464, 552, 1293, 293, 550, 291, 1190, 257, 18927, 597, 38334, 552, 51442, 51442, 293, 6676, 309, 257, 3840, 295, 1413, 293, 2709, 291, 597, 472, 307, 4663, 365, 577, 3700, 307, 309, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0898885552476092, "compression_ratio": 1.78125, "no_caption_prob": 2.885465437429957e-05}, {"id": 1010, "seek": 357614, "start": 3590.8199999999997, "end": 3597.7, "text": " another way, then you write them both and then you run a benchmark which compares them", "tokens": [50364, 420, 1338, 11, 4268, 597, 1190, 6828, 670, 293, 670, 293, 670, 797, 293, 6794, 552, 13, 50798, 50798, 407, 498, 291, 528, 281, 458, 498, 472, 2445, 307, 4663, 562, 309, 311, 3720, 472, 636, 420, 3720, 51098, 51098, 1071, 636, 11, 550, 291, 2464, 552, 1293, 293, 550, 291, 1190, 257, 18927, 597, 38334, 552, 51442, 51442, 293, 6676, 309, 257, 3840, 295, 1413, 293, 2709, 291, 597, 472, 307, 4663, 365, 577, 3700, 307, 309, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0898885552476092, "compression_ratio": 1.78125, "no_caption_prob": 2.885465437429957e-05}, {"id": 1011, "seek": 357614, "start": 3597.7, "end": 3604.22, "text": " and runs it a bunch of times and gives you which one is faster with how likely is it", "tokens": [50364, 420, 1338, 11, 4268, 597, 1190, 6828, 670, 293, 670, 293, 670, 797, 293, 6794, 552, 13, 50798, 50798, 407, 498, 291, 528, 281, 458, 498, 472, 2445, 307, 4663, 562, 309, 311, 3720, 472, 636, 420, 3720, 51098, 51098, 1071, 636, 11, 550, 291, 2464, 552, 1293, 293, 550, 291, 1190, 257, 18927, 597, 38334, 552, 51442, 51442, 293, 6676, 309, 257, 3840, 295, 1413, 293, 2709, 291, 597, 472, 307, 4663, 365, 577, 3700, 307, 309, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0898885552476092, "compression_ratio": 1.78125, "no_caption_prob": 2.885465437429957e-05}, {"id": 1012, "seek": 360422, "start": 3604.22, "end": 3607.62, "text": " that the results are trustworthy.", "tokens": [50364, 300, 264, 3542, 366, 39714, 13, 50534, 50534, 400, 309, 311, 746, 300, 307, 1238, 1481, 281, 764, 13, 50660, 50660, 467, 775, 652, 264, 11185, 2964, 11, 597, 307, 11304, 13, 50862, 50862, 5135, 500, 380, 754, 458, 1968, 291, 434, 3442, 406, 281, 2557, 428, 3820, 562, 291, 434, 2614, 51080, 51080, 552, 13, 51130, 51130, 492, 820, 2152, 264, 11185, 337, 264, 707, 18927, 278, 724, 11, 406, 337, 428, 3539, 724, 13, 51386, 51386, 865, 13, 51468, 51468], "temperature": 0.0, "avg_logprob": -0.17577922911871047, "compression_ratio": 1.5598086124401913, "no_caption_prob": 9.314036287833005e-05}, {"id": 1013, "seek": 360422, "start": 3607.62, "end": 3610.14, "text": " And it's something that is pretty nice to use.", "tokens": [50364, 300, 264, 3542, 366, 39714, 13, 50534, 50534, 400, 309, 311, 746, 300, 307, 1238, 1481, 281, 764, 13, 50660, 50660, 467, 775, 652, 264, 11185, 2964, 11, 597, 307, 11304, 13, 50862, 50862, 5135, 500, 380, 754, 458, 1968, 291, 434, 3442, 406, 281, 2557, 428, 3820, 562, 291, 434, 2614, 51080, 51080, 552, 13, 51130, 51130, 492, 820, 2152, 264, 11185, 337, 264, 707, 18927, 278, 724, 11, 406, 337, 428, 3539, 724, 13, 51386, 51386, 865, 13, 51468, 51468], "temperature": 0.0, "avg_logprob": -0.17577922911871047, "compression_ratio": 1.5598086124401913, "no_caption_prob": 9.314036287833005e-05}, {"id": 1014, "seek": 360422, "start": 3610.14, "end": 3614.18, "text": " It does make the browser slow, which is annoying.", "tokens": [50364, 300, 264, 3542, 366, 39714, 13, 50534, 50534, 400, 309, 311, 746, 300, 307, 1238, 1481, 281, 764, 13, 50660, 50660, 467, 775, 652, 264, 11185, 2964, 11, 597, 307, 11304, 13, 50862, 50862, 5135, 500, 380, 754, 458, 1968, 291, 434, 3442, 406, 281, 2557, 428, 3820, 562, 291, 434, 2614, 51080, 51080, 552, 13, 51130, 51130, 492, 820, 2152, 264, 11185, 337, 264, 707, 18927, 278, 724, 11, 406, 337, 428, 3539, 724, 13, 51386, 51386, 865, 13, 51468, 51468], "temperature": 0.0, "avg_logprob": -0.17577922911871047, "compression_ratio": 1.5598086124401913, "no_caption_prob": 9.314036287833005e-05}, {"id": 1015, "seek": 360422, "start": 3614.18, "end": 3618.54, "text": " Actually don't even know whether you're supposed not to touch your computer when you're running", "tokens": [50364, 300, 264, 3542, 366, 39714, 13, 50534, 50534, 400, 309, 311, 746, 300, 307, 1238, 1481, 281, 764, 13, 50660, 50660, 467, 775, 652, 264, 11185, 2964, 11, 597, 307, 11304, 13, 50862, 50862, 5135, 500, 380, 754, 458, 1968, 291, 434, 3442, 406, 281, 2557, 428, 3820, 562, 291, 434, 2614, 51080, 51080, 552, 13, 51130, 51130, 492, 820, 2152, 264, 11185, 337, 264, 707, 18927, 278, 724, 11, 406, 337, 428, 3539, 724, 13, 51386, 51386, 865, 13, 51468, 51468], "temperature": 0.0, "avg_logprob": -0.17577922911871047, "compression_ratio": 1.5598086124401913, "no_caption_prob": 9.314036287833005e-05}, {"id": 1016, "seek": 360422, "start": 3618.54, "end": 3619.54, "text": " them.", "tokens": [50364, 300, 264, 3542, 366, 39714, 13, 50534, 50534, 400, 309, 311, 746, 300, 307, 1238, 1481, 281, 764, 13, 50660, 50660, 467, 775, 652, 264, 11185, 2964, 11, 597, 307, 11304, 13, 50862, 50862, 5135, 500, 380, 754, 458, 1968, 291, 434, 3442, 406, 281, 2557, 428, 3820, 562, 291, 434, 2614, 51080, 51080, 552, 13, 51130, 51130, 492, 820, 2152, 264, 11185, 337, 264, 707, 18927, 278, 724, 11, 406, 337, 428, 3539, 724, 13, 51386, 51386, 865, 13, 51468, 51468], "temperature": 0.0, "avg_logprob": -0.17577922911871047, "compression_ratio": 1.5598086124401913, "no_caption_prob": 9.314036287833005e-05}, {"id": 1017, "seek": 360422, "start": 3619.54, "end": 3624.66, "text": " We should mention the browser for the little benchmarking app, not for your actual app.", "tokens": [50364, 300, 264, 3542, 366, 39714, 13, 50534, 50534, 400, 309, 311, 746, 300, 307, 1238, 1481, 281, 764, 13, 50660, 50660, 467, 775, 652, 264, 11185, 2964, 11, 597, 307, 11304, 13, 50862, 50862, 5135, 500, 380, 754, 458, 1968, 291, 434, 3442, 406, 281, 2557, 428, 3820, 562, 291, 434, 2614, 51080, 51080, 552, 13, 51130, 51130, 492, 820, 2152, 264, 11185, 337, 264, 707, 18927, 278, 724, 11, 406, 337, 428, 3539, 724, 13, 51386, 51386, 865, 13, 51468, 51468], "temperature": 0.0, "avg_logprob": -0.17577922911871047, "compression_ratio": 1.5598086124401913, "no_caption_prob": 9.314036287833005e-05}, {"id": 1018, "seek": 360422, "start": 3624.66, "end": 3626.2999999999997, "text": " Yeah.", "tokens": [50364, 300, 264, 3542, 366, 39714, 13, 50534, 50534, 400, 309, 311, 746, 300, 307, 1238, 1481, 281, 764, 13, 50660, 50660, 467, 775, 652, 264, 11185, 2964, 11, 597, 307, 11304, 13, 50862, 50862, 5135, 500, 380, 754, 458, 1968, 291, 434, 3442, 406, 281, 2557, 428, 3820, 562, 291, 434, 2614, 51080, 51080, 552, 13, 51130, 51130, 492, 820, 2152, 264, 11185, 337, 264, 707, 18927, 278, 724, 11, 406, 337, 428, 3539, 724, 13, 51386, 51386, 865, 13, 51468, 51468], "temperature": 0.0, "avg_logprob": -0.17577922911871047, "compression_ratio": 1.5598086124401913, "no_caption_prob": 9.314036287833005e-05}, {"id": 1019, "seek": 362630, "start": 3626.3, "end": 3634.26, "text": " I will link to a pull request which I made to this extra where I made a benchmark for", "tokens": [50364, 286, 486, 2113, 281, 257, 2235, 5308, 597, 286, 1027, 281, 341, 2857, 689, 286, 1027, 257, 18927, 337, 50762, 50762, 364, 19618, 466, 4304, 1112, 19618, 293, 291, 393, 574, 412, 264, 3542, 456, 13, 51084, 51084, 1485, 551, 286, 2378, 380, 1352, 257, 665, 636, 281, 360, 1939, 307, 1228, 2699, 76, 3964, 339, 5638, 307, 869, 337, 15763, 51520, 51520, 732, 819, 4445, 763, 293, 337, 2433, 926, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.21529822600515267, "compression_ratio": 1.5621890547263682, "no_caption_prob": 2.7968435460934415e-05}, {"id": 1020, "seek": 362630, "start": 3634.26, "end": 3640.7000000000003, "text": " an optimization about telecom optimization and you can look at the results there.", "tokens": [50364, 286, 486, 2113, 281, 257, 2235, 5308, 597, 286, 1027, 281, 341, 2857, 689, 286, 1027, 257, 18927, 337, 50762, 50762, 364, 19618, 466, 4304, 1112, 19618, 293, 291, 393, 574, 412, 264, 3542, 456, 13, 51084, 51084, 1485, 551, 286, 2378, 380, 1352, 257, 665, 636, 281, 360, 1939, 307, 1228, 2699, 76, 3964, 339, 5638, 307, 869, 337, 15763, 51520, 51520, 732, 819, 4445, 763, 293, 337, 2433, 926, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.21529822600515267, "compression_ratio": 1.5621890547263682, "no_caption_prob": 2.7968435460934415e-05}, {"id": 1021, "seek": 362630, "start": 3640.7000000000003, "end": 3649.42, "text": " One thing I haven't found a good way to do yet is using Elm Benchmark is great for comparing", "tokens": [50364, 286, 486, 2113, 281, 257, 2235, 5308, 597, 286, 1027, 281, 341, 2857, 689, 286, 1027, 257, 18927, 337, 50762, 50762, 364, 19618, 466, 4304, 1112, 19618, 293, 291, 393, 574, 412, 264, 3542, 456, 13, 51084, 51084, 1485, 551, 286, 2378, 380, 1352, 257, 665, 636, 281, 360, 1939, 307, 1228, 2699, 76, 3964, 339, 5638, 307, 869, 337, 15763, 51520, 51520, 732, 819, 4445, 763, 293, 337, 2433, 926, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.21529822600515267, "compression_ratio": 1.5621890547263682, "no_caption_prob": 2.7968435460934415e-05}, {"id": 1022, "seek": 362630, "start": 3649.42, "end": 3652.9, "text": " two different implementations and for playing around.", "tokens": [50364, 286, 486, 2113, 281, 257, 2235, 5308, 597, 286, 1027, 281, 341, 2857, 689, 286, 1027, 257, 18927, 337, 50762, 50762, 364, 19618, 466, 4304, 1112, 19618, 293, 291, 393, 574, 412, 264, 3542, 456, 13, 51084, 51084, 1485, 551, 286, 2378, 380, 1352, 257, 665, 636, 281, 360, 1939, 307, 1228, 2699, 76, 3964, 339, 5638, 307, 869, 337, 15763, 51520, 51520, 732, 819, 4445, 763, 293, 337, 2433, 926, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.21529822600515267, "compression_ratio": 1.5621890547263682, "no_caption_prob": 2.7968435460934415e-05}, {"id": 1023, "seek": 365290, "start": 3652.9, "end": 3660.02, "text": " You can copy an implementation to a parallel module and try some optimizations and figure", "tokens": [50364, 509, 393, 5055, 364, 11420, 281, 257, 8952, 10088, 293, 853, 512, 5028, 14455, 293, 2573, 50720, 50720, 484, 498, 436, 767, 854, 420, 4607, 13, 50862, 50862, 467, 311, 534, 665, 337, 300, 13, 50959, 50959, 583, 337, 13389, 3389, 670, 565, 11, 309, 1177, 380, 854, 291, 456, 13, 51132, 51132, 286, 2378, 380, 8932, 484, 257, 665, 1399, 337, 300, 570, 337, 385, 11, 2390, 257, 1491, 5093, 21156, 260, 51513, 51513, 293, 512, 721, 411, 341, 11, 613, 366, 264, 1687, 3389, 18957, 721, 689, 2171, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11500920640661362, "compression_ratio": 1.6736401673640167, "no_caption_prob": 2.1233583993307548e-06}, {"id": 1024, "seek": 365290, "start": 3660.02, "end": 3662.86, "text": " out if they actually help or hurt.", "tokens": [50364, 509, 393, 5055, 364, 11420, 281, 257, 8952, 10088, 293, 853, 512, 5028, 14455, 293, 2573, 50720, 50720, 484, 498, 436, 767, 854, 420, 4607, 13, 50862, 50862, 467, 311, 534, 665, 337, 300, 13, 50959, 50959, 583, 337, 13389, 3389, 670, 565, 11, 309, 1177, 380, 854, 291, 456, 13, 51132, 51132, 286, 2378, 380, 8932, 484, 257, 665, 1399, 337, 300, 570, 337, 385, 11, 2390, 257, 1491, 5093, 21156, 260, 51513, 51513, 293, 512, 721, 411, 341, 11, 613, 366, 264, 1687, 3389, 18957, 721, 689, 2171, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11500920640661362, "compression_ratio": 1.6736401673640167, "no_caption_prob": 2.1233583993307548e-06}, {"id": 1025, "seek": 365290, "start": 3662.86, "end": 3664.8, "text": " It's really good for that.", "tokens": [50364, 509, 393, 5055, 364, 11420, 281, 257, 8952, 10088, 293, 853, 512, 5028, 14455, 293, 2573, 50720, 50720, 484, 498, 436, 767, 854, 420, 4607, 13, 50862, 50862, 467, 311, 534, 665, 337, 300, 13, 50959, 50959, 583, 337, 13389, 3389, 670, 565, 11, 309, 1177, 380, 854, 291, 456, 13, 51132, 51132, 286, 2378, 380, 8932, 484, 257, 665, 1399, 337, 300, 570, 337, 385, 11, 2390, 257, 1491, 5093, 21156, 260, 51513, 51513, 293, 512, 721, 411, 341, 11, 613, 366, 264, 1687, 3389, 18957, 721, 689, 2171, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11500920640661362, "compression_ratio": 1.6736401673640167, "no_caption_prob": 2.1233583993307548e-06}, {"id": 1026, "seek": 365290, "start": 3664.8, "end": 3668.26, "text": " But for measuring performance over time, it doesn't help you there.", "tokens": [50364, 509, 393, 5055, 364, 11420, 281, 257, 8952, 10088, 293, 853, 512, 5028, 14455, 293, 2573, 50720, 50720, 484, 498, 436, 767, 854, 420, 4607, 13, 50862, 50862, 467, 311, 534, 665, 337, 300, 13, 50959, 50959, 583, 337, 13389, 3389, 670, 565, 11, 309, 1177, 380, 854, 291, 456, 13, 51132, 51132, 286, 2378, 380, 8932, 484, 257, 665, 1399, 337, 300, 570, 337, 385, 11, 2390, 257, 1491, 5093, 21156, 260, 51513, 51513, 293, 512, 721, 411, 341, 11, 613, 366, 264, 1687, 3389, 18957, 721, 689, 2171, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11500920640661362, "compression_ratio": 1.6736401673640167, "no_caption_prob": 2.1233583993307548e-06}, {"id": 1027, "seek": 365290, "start": 3668.26, "end": 3675.88, "text": " I haven't figured out a good process for that because for me, building a markdown parser", "tokens": [50364, 509, 393, 5055, 364, 11420, 281, 257, 8952, 10088, 293, 853, 512, 5028, 14455, 293, 2573, 50720, 50720, 484, 498, 436, 767, 854, 420, 4607, 13, 50862, 50862, 467, 311, 534, 665, 337, 300, 13, 50959, 50959, 583, 337, 13389, 3389, 670, 565, 11, 309, 1177, 380, 854, 291, 456, 13, 51132, 51132, 286, 2378, 380, 8932, 484, 257, 665, 1399, 337, 300, 570, 337, 385, 11, 2390, 257, 1491, 5093, 21156, 260, 51513, 51513, 293, 512, 721, 411, 341, 11, 613, 366, 264, 1687, 3389, 18957, 721, 689, 2171, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11500920640661362, "compression_ratio": 1.6736401673640167, "no_caption_prob": 2.1233583993307548e-06}, {"id": 1028, "seek": 365290, "start": 3675.88, "end": 3680.7000000000003, "text": " and some things like this, these are the super performance intensive things where sometimes", "tokens": [50364, 509, 393, 5055, 364, 11420, 281, 257, 8952, 10088, 293, 853, 512, 5028, 14455, 293, 2573, 50720, 50720, 484, 498, 436, 767, 854, 420, 4607, 13, 50862, 50862, 467, 311, 534, 665, 337, 300, 13, 50959, 50959, 583, 337, 13389, 3389, 670, 565, 11, 309, 1177, 380, 854, 291, 456, 13, 51132, 51132, 286, 2378, 380, 8932, 484, 257, 665, 1399, 337, 300, 570, 337, 385, 11, 2390, 257, 1491, 5093, 21156, 260, 51513, 51513, 293, 512, 721, 411, 341, 11, 613, 366, 264, 1687, 3389, 18957, 721, 689, 2171, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11500920640661362, "compression_ratio": 1.6736401673640167, "no_caption_prob": 2.1233583993307548e-06}, {"id": 1029, "seek": 368070, "start": 3680.7, "end": 3686.2599999999998, "text": " you do have to sacrifice code maintainability for performance.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1030, "seek": 368070, "start": 3686.2599999999998, "end": 3690.58, "text": " You need to go for performance because they're so critical for performance.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1031, "seek": 368070, "start": 3690.58, "end": 3693.66, "text": " And sometimes you need to add a feature and that will hurt performance.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1032, "seek": 368070, "start": 3693.66, "end": 3694.66, "text": " Right.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1033, "seek": 368070, "start": 3694.66, "end": 3696.7, "text": " However you change it.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1034, "seek": 368070, "start": 3696.7, "end": 3697.7, "text": " Yeah.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1035, "seek": 368070, "start": 3697.7, "end": 3703.3199999999997, "text": " You need to go that extra effort in a way that often in regular browser applications", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1036, "seek": 368070, "start": 3703.3199999999997, "end": 3704.58, "text": " you don't need to.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1037, "seek": 368070, "start": 3704.58, "end": 3708.22, "text": " I would love to have a nice way to track things over time.", "tokens": [50364, 291, 360, 362, 281, 11521, 3089, 6909, 2310, 337, 3389, 13, 50642, 50642, 509, 643, 281, 352, 337, 3389, 570, 436, 434, 370, 4924, 337, 3389, 13, 50858, 50858, 400, 2171, 291, 643, 281, 909, 257, 4111, 293, 300, 486, 4607, 3389, 13, 51012, 51012, 1779, 13, 51062, 51062, 2908, 291, 1319, 309, 13, 51164, 51164, 865, 13, 51214, 51214, 509, 643, 281, 352, 300, 2857, 4630, 294, 257, 636, 300, 2049, 294, 3890, 11185, 5821, 51495, 51495, 291, 500, 380, 643, 281, 13, 51558, 51558, 286, 576, 959, 281, 362, 257, 1481, 636, 281, 2837, 721, 670, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1694652484013484, "compression_ratio": 1.7553648068669527, "no_caption_prob": 1.300699841522146e-05}, {"id": 1038, "seek": 370822, "start": 3708.22, "end": 3711.54, "text": " I guess I really should use this.", "tokens": [50364, 286, 2041, 286, 534, 820, 764, 341, 13, 50530, 50530, 286, 458, 300, 11, 370, 286, 519, 309, 311, 9573, 47, 559, 302, 377, 11, 498, 286, 478, 406, 21333, 11, 3670, 79, 559, 302, 377, 13, 4646, 13, 50854, 50854, 286, 1697, 291, 393, 992, 300, 493, 13, 50955, 50955, 400, 286, 519, 1310, 3329, 575, 257, 2531, 551, 300, 291, 393, 764, 807, 3670, 13, 40343, 420, 746, 13, 51259, 51259, 583, 286, 519, 300, 309, 575, 264, 3485, 281, 2837, 3389, 670, 565, 13, 51492, 51492, 286, 519, 456, 366, 512, 6188, 75, 2505, 33759, 300, 854, 365, 341, 886, 293, 1310, 512, 23331, 5909, 13, 51768, 51768, 286, 478, 406, 988, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1757326602935791, "compression_ratio": 1.6284584980237153, "no_caption_prob": 1.4970776646805461e-05}, {"id": 1039, "seek": 370822, "start": 3711.54, "end": 3718.02, "text": " I know that, so I think it's WebPagetest, if I'm not mistaken, webpagetest.org.", "tokens": [50364, 286, 2041, 286, 534, 820, 764, 341, 13, 50530, 50530, 286, 458, 300, 11, 370, 286, 519, 309, 311, 9573, 47, 559, 302, 377, 11, 498, 286, 478, 406, 21333, 11, 3670, 79, 559, 302, 377, 13, 4646, 13, 50854, 50854, 286, 1697, 291, 393, 992, 300, 493, 13, 50955, 50955, 400, 286, 519, 1310, 3329, 575, 257, 2531, 551, 300, 291, 393, 764, 807, 3670, 13, 40343, 420, 746, 13, 51259, 51259, 583, 286, 519, 300, 309, 575, 264, 3485, 281, 2837, 3389, 670, 565, 13, 51492, 51492, 286, 519, 456, 366, 512, 6188, 75, 2505, 33759, 300, 854, 365, 341, 886, 293, 1310, 512, 23331, 5909, 13, 51768, 51768, 286, 478, 406, 988, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1757326602935791, "compression_ratio": 1.6284584980237153, "no_caption_prob": 1.4970776646805461e-05}, {"id": 1040, "seek": 370822, "start": 3718.02, "end": 3720.04, "text": " I believe you can set that up.", "tokens": [50364, 286, 2041, 286, 534, 820, 764, 341, 13, 50530, 50530, 286, 458, 300, 11, 370, 286, 519, 309, 311, 9573, 47, 559, 302, 377, 11, 498, 286, 478, 406, 21333, 11, 3670, 79, 559, 302, 377, 13, 4646, 13, 50854, 50854, 286, 1697, 291, 393, 992, 300, 493, 13, 50955, 50955, 400, 286, 519, 1310, 3329, 575, 257, 2531, 551, 300, 291, 393, 764, 807, 3670, 13, 40343, 420, 746, 13, 51259, 51259, 583, 286, 519, 300, 309, 575, 264, 3485, 281, 2837, 3389, 670, 565, 13, 51492, 51492, 286, 519, 456, 366, 512, 6188, 75, 2505, 33759, 300, 854, 365, 341, 886, 293, 1310, 512, 23331, 5909, 13, 51768, 51768, 286, 478, 406, 988, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1757326602935791, "compression_ratio": 1.6284584980237153, "no_caption_prob": 1.4970776646805461e-05}, {"id": 1041, "seek": 370822, "start": 3720.04, "end": 3726.12, "text": " And I think maybe Google has a similar thing that you can use through web.dev or something.", "tokens": [50364, 286, 2041, 286, 534, 820, 764, 341, 13, 50530, 50530, 286, 458, 300, 11, 370, 286, 519, 309, 311, 9573, 47, 559, 302, 377, 11, 498, 286, 478, 406, 21333, 11, 3670, 79, 559, 302, 377, 13, 4646, 13, 50854, 50854, 286, 1697, 291, 393, 992, 300, 493, 13, 50955, 50955, 400, 286, 519, 1310, 3329, 575, 257, 2531, 551, 300, 291, 393, 764, 807, 3670, 13, 40343, 420, 746, 13, 51259, 51259, 583, 286, 519, 300, 309, 575, 264, 3485, 281, 2837, 3389, 670, 565, 13, 51492, 51492, 286, 519, 456, 366, 512, 6188, 75, 2505, 33759, 300, 854, 365, 341, 886, 293, 1310, 512, 23331, 5909, 13, 51768, 51768, 286, 478, 406, 988, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1757326602935791, "compression_ratio": 1.6284584980237153, "no_caption_prob": 1.4970776646805461e-05}, {"id": 1042, "seek": 370822, "start": 3726.12, "end": 3730.7799999999997, "text": " But I think that it has the ability to track performance over time.", "tokens": [50364, 286, 2041, 286, 534, 820, 764, 341, 13, 50530, 50530, 286, 458, 300, 11, 370, 286, 519, 309, 311, 9573, 47, 559, 302, 377, 11, 498, 286, 478, 406, 21333, 11, 3670, 79, 559, 302, 377, 13, 4646, 13, 50854, 50854, 286, 1697, 291, 393, 992, 300, 493, 13, 50955, 50955, 400, 286, 519, 1310, 3329, 575, 257, 2531, 551, 300, 291, 393, 764, 807, 3670, 13, 40343, 420, 746, 13, 51259, 51259, 583, 286, 519, 300, 309, 575, 264, 3485, 281, 2837, 3389, 670, 565, 13, 51492, 51492, 286, 519, 456, 366, 512, 6188, 75, 2505, 33759, 300, 854, 365, 341, 886, 293, 1310, 512, 23331, 5909, 13, 51768, 51768, 286, 478, 406, 988, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1757326602935791, "compression_ratio": 1.6284584980237153, "no_caption_prob": 1.4970776646805461e-05}, {"id": 1043, "seek": 370822, "start": 3730.7799999999997, "end": 3736.2999999999997, "text": " I think there are some Netlify plugins that help with this too and maybe some GitHub actions.", "tokens": [50364, 286, 2041, 286, 534, 820, 764, 341, 13, 50530, 50530, 286, 458, 300, 11, 370, 286, 519, 309, 311, 9573, 47, 559, 302, 377, 11, 498, 286, 478, 406, 21333, 11, 3670, 79, 559, 302, 377, 13, 4646, 13, 50854, 50854, 286, 1697, 291, 393, 992, 300, 493, 13, 50955, 50955, 400, 286, 519, 1310, 3329, 575, 257, 2531, 551, 300, 291, 393, 764, 807, 3670, 13, 40343, 420, 746, 13, 51259, 51259, 583, 286, 519, 300, 309, 575, 264, 3485, 281, 2837, 3389, 670, 565, 13, 51492, 51492, 286, 519, 456, 366, 512, 6188, 75, 2505, 33759, 300, 854, 365, 341, 886, 293, 1310, 512, 23331, 5909, 13, 51768, 51768, 286, 478, 406, 988, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1757326602935791, "compression_ratio": 1.6284584980237153, "no_caption_prob": 1.4970776646805461e-05}, {"id": 1044, "seek": 370822, "start": 3736.2999999999997, "end": 3737.2999999999997, "text": " I'm not sure.", "tokens": [50364, 286, 2041, 286, 534, 820, 764, 341, 13, 50530, 50530, 286, 458, 300, 11, 370, 286, 519, 309, 311, 9573, 47, 559, 302, 377, 11, 498, 286, 478, 406, 21333, 11, 3670, 79, 559, 302, 377, 13, 4646, 13, 50854, 50854, 286, 1697, 291, 393, 992, 300, 493, 13, 50955, 50955, 400, 286, 519, 1310, 3329, 575, 257, 2531, 551, 300, 291, 393, 764, 807, 3670, 13, 40343, 420, 746, 13, 51259, 51259, 583, 286, 519, 300, 309, 575, 264, 3485, 281, 2837, 3389, 670, 565, 13, 51492, 51492, 286, 519, 456, 366, 512, 6188, 75, 2505, 33759, 300, 854, 365, 341, 886, 293, 1310, 512, 23331, 5909, 13, 51768, 51768, 286, 478, 406, 988, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.1757326602935791, "compression_ratio": 1.6284584980237153, "no_caption_prob": 1.4970776646805461e-05}, {"id": 1045, "seek": 373730, "start": 3737.3, "end": 3740.9, "text": " I'll add some links to some things in the show notes.", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1046, "seek": 373730, "start": 3740.9, "end": 3745.2200000000003, "text": " Then you can read them and send the results to Dillon.", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1047, "seek": 373730, "start": 3745.2200000000003, "end": 3746.2200000000003, "text": " There you go.", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1048, "seek": 373730, "start": 3746.2200000000003, "end": 3748.2200000000003, "text": " Yes, that's right.", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1049, "seek": 373730, "start": 3748.2200000000003, "end": 3750.02, "text": " I really should try this out.", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1050, "seek": 373730, "start": 3750.02, "end": 3755.7400000000002, "text": " But I think like webpagetest.org, I think that's a thing that people do is kind of track", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1051, "seek": 373730, "start": 3755.7400000000002, "end": 3762.96, "text": " their Lighthouse scores over time so you can catch any performance degradation.", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1052, "seek": 373730, "start": 3762.96, "end": 3764.3, "text": " So that could be a helpful thing.", "tokens": [50364, 286, 603, 909, 512, 6123, 281, 512, 721, 294, 264, 855, 5570, 13, 50544, 50544, 1396, 291, 393, 1401, 552, 293, 2845, 264, 3542, 281, 28160, 13, 50760, 50760, 821, 291, 352, 13, 50810, 50810, 1079, 11, 300, 311, 558, 13, 50910, 50910, 286, 534, 820, 853, 341, 484, 13, 51000, 51000, 583, 286, 519, 411, 3670, 79, 559, 302, 377, 13, 4646, 11, 286, 519, 300, 311, 257, 551, 300, 561, 360, 307, 733, 295, 2837, 51286, 51286, 641, 8279, 6410, 13444, 670, 565, 370, 291, 393, 3745, 604, 3389, 40519, 13, 51647, 51647, 407, 300, 727, 312, 257, 4961, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.23156873756479995, "compression_ratio": 1.5872340425531914, "no_caption_prob": 1.2218980373290833e-05}, {"id": 1053, "seek": 376430, "start": 3764.3, "end": 3769.86, "text": " That could potentially be something we could use when using maybe benchmarking things.", "tokens": [50364, 663, 727, 7263, 312, 746, 321, 727, 764, 562, 1228, 1310, 18927, 278, 721, 13, 50642, 50642, 492, 727, 1884, 527, 1065, 707, 3670, 3028, 300, 445, 11900, 746, 293, 1520, 1080, 3389, 50884, 50884, 670, 565, 13, 50934, 50934, 663, 486, 312, 588, 5124, 14722, 294, 13199, 565, 13, 51208, 51208, 3146, 264, 636, 11, 370, 286, 848, 562, 291, 643, 281, 909, 4122, 11, 2171, 3389, 486, 312, 24740, 292, 13, 51516, 51516, 286, 519, 286, 536, 257, 688, 11, 2318, 294, 264, 15778, 11311, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.20196912599646527, "compression_ratio": 1.6097560975609757, "no_caption_prob": 3.535504583851434e-05}, {"id": 1054, "seek": 376430, "start": 3769.86, "end": 3774.7000000000003, "text": " We could create our own little web page that just exercises something and check its performance", "tokens": [50364, 663, 727, 7263, 312, 746, 321, 727, 764, 562, 1228, 1310, 18927, 278, 721, 13, 50642, 50642, 492, 727, 1884, 527, 1065, 707, 3670, 3028, 300, 445, 11900, 746, 293, 1520, 1080, 3389, 50884, 50884, 670, 565, 13, 50934, 50934, 663, 486, 312, 588, 5124, 14722, 294, 13199, 565, 13, 51208, 51208, 3146, 264, 636, 11, 370, 286, 848, 562, 291, 643, 281, 909, 4122, 11, 2171, 3389, 486, 312, 24740, 292, 13, 51516, 51516, 286, 519, 286, 536, 257, 688, 11, 2318, 294, 264, 15778, 11311, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.20196912599646527, "compression_ratio": 1.6097560975609757, "no_caption_prob": 3.535504583851434e-05}, {"id": 1055, "seek": 376430, "start": 3774.7000000000003, "end": 3775.7000000000003, "text": " over time.", "tokens": [50364, 663, 727, 7263, 312, 746, 321, 727, 764, 562, 1228, 1310, 18927, 278, 721, 13, 50642, 50642, 492, 727, 1884, 527, 1065, 707, 3670, 3028, 300, 445, 11900, 746, 293, 1520, 1080, 3389, 50884, 50884, 670, 565, 13, 50934, 50934, 663, 486, 312, 588, 5124, 14722, 294, 13199, 565, 13, 51208, 51208, 3146, 264, 636, 11, 370, 286, 848, 562, 291, 643, 281, 909, 4122, 11, 2171, 3389, 486, 312, 24740, 292, 13, 51516, 51516, 286, 519, 286, 536, 257, 688, 11, 2318, 294, 264, 15778, 11311, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.20196912599646527, "compression_ratio": 1.6097560975609757, "no_caption_prob": 3.535504583851434e-05}, {"id": 1056, "seek": 376430, "start": 3775.7000000000003, "end": 3781.1800000000003, "text": " That will be very expensive compute in CPU time.", "tokens": [50364, 663, 727, 7263, 312, 746, 321, 727, 764, 562, 1228, 1310, 18927, 278, 721, 13, 50642, 50642, 492, 727, 1884, 527, 1065, 707, 3670, 3028, 300, 445, 11900, 746, 293, 1520, 1080, 3389, 50884, 50884, 670, 565, 13, 50934, 50934, 663, 486, 312, 588, 5124, 14722, 294, 13199, 565, 13, 51208, 51208, 3146, 264, 636, 11, 370, 286, 848, 562, 291, 643, 281, 909, 4122, 11, 2171, 3389, 486, 312, 24740, 292, 13, 51516, 51516, 286, 519, 286, 536, 257, 688, 11, 2318, 294, 264, 15778, 11311, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.20196912599646527, "compression_ratio": 1.6097560975609757, "no_caption_prob": 3.535504583851434e-05}, {"id": 1057, "seek": 376430, "start": 3781.1800000000003, "end": 3787.34, "text": " By the way, so I said when you need to add features, sometimes performance will be degraded.", "tokens": [50364, 663, 727, 7263, 312, 746, 321, 727, 764, 562, 1228, 1310, 18927, 278, 721, 13, 50642, 50642, 492, 727, 1884, 527, 1065, 707, 3670, 3028, 300, 445, 11900, 746, 293, 1520, 1080, 3389, 50884, 50884, 670, 565, 13, 50934, 50934, 663, 486, 312, 588, 5124, 14722, 294, 13199, 565, 13, 51208, 51208, 3146, 264, 636, 11, 370, 286, 848, 562, 291, 643, 281, 909, 4122, 11, 2171, 3389, 486, 312, 24740, 292, 13, 51516, 51516, 286, 519, 286, 536, 257, 688, 11, 2318, 294, 264, 15778, 11311, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.20196912599646527, "compression_ratio": 1.6097560975609757, "no_caption_prob": 3.535504583851434e-05}, {"id": 1058, "seek": 376430, "start": 3787.34, "end": 3793.34, "text": " I think I see a lot, especially in the JavaScript ecosystem.", "tokens": [50364, 663, 727, 7263, 312, 746, 321, 727, 764, 562, 1228, 1310, 18927, 278, 721, 13, 50642, 50642, 492, 727, 1884, 527, 1065, 707, 3670, 3028, 300, 445, 11900, 746, 293, 1520, 1080, 3389, 50884, 50884, 670, 565, 13, 50934, 50934, 663, 486, 312, 588, 5124, 14722, 294, 13199, 565, 13, 51208, 51208, 3146, 264, 636, 11, 370, 286, 848, 562, 291, 643, 281, 909, 4122, 11, 2171, 3389, 486, 312, 24740, 292, 13, 51516, 51516, 286, 519, 286, 536, 257, 688, 11, 2318, 294, 264, 15778, 11311, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.20196912599646527, "compression_ratio": 1.6097560975609757, "no_caption_prob": 3.535504583851434e-05}, {"id": 1059, "seek": 379334, "start": 3793.34, "end": 3799.26, "text": " There's a new tool which is 10 times as fast as other similar projects.", "tokens": [50364, 821, 311, 257, 777, 2290, 597, 307, 1266, 1413, 382, 2370, 382, 661, 2531, 4455, 13, 50660, 50660, 639, 307, 30644, 457, 1266, 1413, 4663, 13, 50838, 50838, 1133, 309, 311, 777, 11, 309, 311, 2049, 570, 436, 500, 380, 362, 264, 912, 4111, 44747, 13, 51052, 51052, 407, 411, 11, 1338, 11, 291, 366, 4663, 11, 457, 291, 500, 380, 4813, 300, 472, 13, 51268, 51268, 2014, 291, 12075, 278, 412, 12564, 1322, 30, 51384, 51384, 286, 669, 406, 1953, 295, 12564, 1322, 412, 439, 13, 51494, 51494, 286, 767, 500, 380, 362, 1340, 294, 1729, 294, 1575, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.1994037811572735, "compression_ratio": 1.5964912280701755, "no_caption_prob": 2.3187214537756518e-05}, {"id": 1060, "seek": 379334, "start": 3799.26, "end": 3802.82, "text": " This is React but 10 times faster.", "tokens": [50364, 821, 311, 257, 777, 2290, 597, 307, 1266, 1413, 382, 2370, 382, 661, 2531, 4455, 13, 50660, 50660, 639, 307, 30644, 457, 1266, 1413, 4663, 13, 50838, 50838, 1133, 309, 311, 777, 11, 309, 311, 2049, 570, 436, 500, 380, 362, 264, 912, 4111, 44747, 13, 51052, 51052, 407, 411, 11, 1338, 11, 291, 366, 4663, 11, 457, 291, 500, 380, 4813, 300, 472, 13, 51268, 51268, 2014, 291, 12075, 278, 412, 12564, 1322, 30, 51384, 51384, 286, 669, 406, 1953, 295, 12564, 1322, 412, 439, 13, 51494, 51494, 286, 767, 500, 380, 362, 1340, 294, 1729, 294, 1575, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.1994037811572735, "compression_ratio": 1.5964912280701755, "no_caption_prob": 2.3187214537756518e-05}, {"id": 1061, "seek": 379334, "start": 3802.82, "end": 3807.1000000000004, "text": " When it's new, it's often because they don't have the same feature parity.", "tokens": [50364, 821, 311, 257, 777, 2290, 597, 307, 1266, 1413, 382, 2370, 382, 661, 2531, 4455, 13, 50660, 50660, 639, 307, 30644, 457, 1266, 1413, 4663, 13, 50838, 50838, 1133, 309, 311, 777, 11, 309, 311, 2049, 570, 436, 500, 380, 362, 264, 912, 4111, 44747, 13, 51052, 51052, 407, 411, 11, 1338, 11, 291, 366, 4663, 11, 457, 291, 500, 380, 4813, 300, 472, 13, 51268, 51268, 2014, 291, 12075, 278, 412, 12564, 1322, 30, 51384, 51384, 286, 669, 406, 1953, 295, 12564, 1322, 412, 439, 13, 51494, 51494, 286, 767, 500, 380, 362, 1340, 294, 1729, 294, 1575, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.1994037811572735, "compression_ratio": 1.5964912280701755, "no_caption_prob": 2.3187214537756518e-05}, {"id": 1062, "seek": 379334, "start": 3807.1000000000004, "end": 3811.42, "text": " So like, yeah, you are faster, but you don't handle that one.", "tokens": [50364, 821, 311, 257, 777, 2290, 597, 307, 1266, 1413, 382, 2370, 382, 661, 2531, 4455, 13, 50660, 50660, 639, 307, 30644, 457, 1266, 1413, 4663, 13, 50838, 50838, 1133, 309, 311, 777, 11, 309, 311, 2049, 570, 436, 500, 380, 362, 264, 912, 4111, 44747, 13, 51052, 51052, 407, 411, 11, 1338, 11, 291, 366, 4663, 11, 457, 291, 500, 380, 4813, 300, 472, 13, 51268, 51268, 2014, 291, 12075, 278, 412, 12564, 1322, 30, 51384, 51384, 286, 669, 406, 1953, 295, 12564, 1322, 412, 439, 13, 51494, 51494, 286, 767, 500, 380, 362, 1340, 294, 1729, 294, 1575, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.1994037811572735, "compression_ratio": 1.5964912280701755, "no_caption_prob": 2.3187214537756518e-05}, {"id": 1063, "seek": 379334, "start": 3811.42, "end": 3813.7400000000002, "text": " Are you hinting at ES build?", "tokens": [50364, 821, 311, 257, 777, 2290, 597, 307, 1266, 1413, 382, 2370, 382, 661, 2531, 4455, 13, 50660, 50660, 639, 307, 30644, 457, 1266, 1413, 4663, 13, 50838, 50838, 1133, 309, 311, 777, 11, 309, 311, 2049, 570, 436, 500, 380, 362, 264, 912, 4111, 44747, 13, 51052, 51052, 407, 411, 11, 1338, 11, 291, 366, 4663, 11, 457, 291, 500, 380, 4813, 300, 472, 13, 51268, 51268, 2014, 291, 12075, 278, 412, 12564, 1322, 30, 51384, 51384, 286, 669, 406, 1953, 295, 12564, 1322, 412, 439, 13, 51494, 51494, 286, 767, 500, 380, 362, 1340, 294, 1729, 294, 1575, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.1994037811572735, "compression_ratio": 1.5964912280701755, "no_caption_prob": 2.3187214537756518e-05}, {"id": 1064, "seek": 379334, "start": 3813.7400000000002, "end": 3815.94, "text": " I am not thinking of ES build at all.", "tokens": [50364, 821, 311, 257, 777, 2290, 597, 307, 1266, 1413, 382, 2370, 382, 661, 2531, 4455, 13, 50660, 50660, 639, 307, 30644, 457, 1266, 1413, 4663, 13, 50838, 50838, 1133, 309, 311, 777, 11, 309, 311, 2049, 570, 436, 500, 380, 362, 264, 912, 4111, 44747, 13, 51052, 51052, 407, 411, 11, 1338, 11, 291, 366, 4663, 11, 457, 291, 500, 380, 4813, 300, 472, 13, 51268, 51268, 2014, 291, 12075, 278, 412, 12564, 1322, 30, 51384, 51384, 286, 669, 406, 1953, 295, 12564, 1322, 412, 439, 13, 51494, 51494, 286, 767, 500, 380, 362, 1340, 294, 1729, 294, 1575, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.1994037811572735, "compression_ratio": 1.5964912280701755, "no_caption_prob": 2.3187214537756518e-05}, {"id": 1065, "seek": 379334, "start": 3815.94, "end": 3819.6400000000003, "text": " I actually don't have anything in particular in mind.", "tokens": [50364, 821, 311, 257, 777, 2290, 597, 307, 1266, 1413, 382, 2370, 382, 661, 2531, 4455, 13, 50660, 50660, 639, 307, 30644, 457, 1266, 1413, 4663, 13, 50838, 50838, 1133, 309, 311, 777, 11, 309, 311, 2049, 570, 436, 500, 380, 362, 264, 912, 4111, 44747, 13, 51052, 51052, 407, 411, 11, 1338, 11, 291, 366, 4663, 11, 457, 291, 500, 380, 4813, 300, 472, 13, 51268, 51268, 2014, 291, 12075, 278, 412, 12564, 1322, 30, 51384, 51384, 286, 669, 406, 1953, 295, 12564, 1322, 412, 439, 13, 51494, 51494, 286, 767, 500, 380, 362, 1340, 294, 1729, 294, 1575, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.1994037811572735, "compression_ratio": 1.5964912280701755, "no_caption_prob": 2.3187214537756518e-05}, {"id": 1066, "seek": 381964, "start": 3819.64, "end": 3826.3399999999997, "text": " Very often it's like when you implement the same features that other things have, then", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1067, "seek": 381964, "start": 3826.3399999999997, "end": 3829.94, "text": " you will need to incur big performance costs.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1068, "seek": 381964, "start": 3829.94, "end": 3834.3799999999997, "text": " So I'm always very wary about things that say, oh, we're so fast.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1069, "seek": 381964, "start": 3834.3799999999997, "end": 3835.3799999999997, "text": " We're so much faster.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1070, "seek": 381964, "start": 3835.3799999999997, "end": 3838.54, "text": " But you're also kind of new.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1071, "seek": 381964, "start": 3838.54, "end": 3841.2599999999998, "text": " So beware, beware.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1072, "seek": 381964, "start": 3841.2599999999998, "end": 3842.2599999999998, "text": " Interesting.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1073, "seek": 381964, "start": 3842.2599999999998, "end": 3846.22, "text": " But if you have the same parity, feature parity, great, awesome.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1074, "seek": 381964, "start": 3846.22, "end": 3847.22, "text": " Go for it.", "tokens": [50364, 4372, 2049, 309, 311, 411, 562, 291, 4445, 264, 912, 4122, 300, 661, 721, 362, 11, 550, 50699, 50699, 291, 486, 643, 281, 35774, 955, 3389, 5497, 13, 50879, 50879, 407, 286, 478, 1009, 588, 46585, 466, 721, 300, 584, 11, 1954, 11, 321, 434, 370, 2370, 13, 51101, 51101, 492, 434, 370, 709, 4663, 13, 51151, 51151, 583, 291, 434, 611, 733, 295, 777, 13, 51309, 51309, 407, 312, 3039, 11, 312, 3039, 13, 51445, 51445, 14711, 13, 51495, 51495, 583, 498, 291, 362, 264, 912, 44747, 11, 4111, 44747, 11, 869, 11, 3476, 13, 51693, 51693, 1037, 337, 309, 13, 51743, 51743], "temperature": 0.0, "avg_logprob": -0.19560250696146264, "compression_ratio": 1.5866666666666667, "no_caption_prob": 7.889124390203506e-06}, {"id": 1075, "seek": 384722, "start": 3847.22, "end": 3853.98, "text": " Oh, no, yeah, where I often see it is like for linters.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1076, "seek": 384722, "start": 3853.98, "end": 3860.02, "text": " There's RSLint, which is ESLint written in Rust.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1077, "seek": 384722, "start": 3860.02, "end": 3861.7, "text": " That's what all the cool kids are doing these days.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1078, "seek": 384722, "start": 3861.7, "end": 3867.2999999999997, "text": " They're rewriting JavaScript tools in Rust or Go, which is probably a good idea.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1079, "seek": 384722, "start": 3867.2999999999997, "end": 3869.54, "text": " Which is probably a good idea, yeah.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1080, "seek": 384722, "start": 3869.54, "end": 3872.54, "text": " And it's so much faster than ESLint.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1081, "seek": 384722, "start": 3872.54, "end": 3873.54, "text": " It's great.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1082, "seek": 384722, "start": 3873.54, "end": 3875.2999999999997, "text": " But it doesn't have custom built rules.", "tokens": [50364, 876, 11, 572, 11, 1338, 11, 689, 286, 2049, 536, 309, 307, 411, 337, 22896, 1559, 13, 50702, 50702, 821, 311, 25855, 43, 686, 11, 597, 307, 12564, 43, 686, 3720, 294, 34952, 13, 51004, 51004, 663, 311, 437, 439, 264, 1627, 2301, 366, 884, 613, 1708, 13, 51088, 51088, 814, 434, 319, 19868, 15778, 3873, 294, 34952, 420, 1037, 11, 597, 307, 1391, 257, 665, 1558, 13, 51368, 51368, 3013, 307, 1391, 257, 665, 1558, 11, 1338, 13, 51480, 51480, 400, 309, 311, 370, 709, 4663, 813, 12564, 43, 686, 13, 51630, 51630, 467, 311, 869, 13, 51680, 51680, 583, 309, 1177, 380, 362, 2375, 3094, 4474, 13, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.16843144239577573, "compression_ratio": 1.6061946902654867, "no_caption_prob": 2.392314672761131e-05}, {"id": 1083, "seek": 387530, "start": 3875.3, "end": 3878.5, "text": " So it doesn't have all the rules built by the community.", "tokens": [50364, 407, 309, 1177, 380, 362, 439, 264, 4474, 3094, 538, 264, 1768, 13, 50524, 50524, 467, 1177, 380, 362, 4474, 300, 291, 393, 1322, 1803, 11, 597, 307, 257, 2603, 4111, 294, 12564, 43, 686, 13, 50872, 50872, 400, 291, 393, 380, 6794, 264, 732, 11, 294, 452, 4800, 11, 1553, 300, 13, 51106, 51106, 400, 309, 486, 312, 257, 1154, 337, 552, 281, 4090, 309, 666, 36548, 4009, 3089, 13, 51428, 51428, 407, 2318, 294, 300, 5197, 11, 286, 478, 411, 11, 1338, 11, 572, 11, 291, 434, 2370, 11, 988, 13, 51700, 51700, 583, 572, 11, 291, 393, 380, 584, 300, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1958658430311415, "compression_ratio": 1.5932203389830508, "no_caption_prob": 1.5936198906274512e-05}, {"id": 1084, "seek": 387530, "start": 3878.5, "end": 3885.46, "text": " It doesn't have rules that you can build yourself, which is a huge feature in ESLint.", "tokens": [50364, 407, 309, 1177, 380, 362, 439, 264, 4474, 3094, 538, 264, 1768, 13, 50524, 50524, 467, 1177, 380, 362, 4474, 300, 291, 393, 1322, 1803, 11, 597, 307, 257, 2603, 4111, 294, 12564, 43, 686, 13, 50872, 50872, 400, 291, 393, 380, 6794, 264, 732, 11, 294, 452, 4800, 11, 1553, 300, 13, 51106, 51106, 400, 309, 486, 312, 257, 1154, 337, 552, 281, 4090, 309, 666, 36548, 4009, 3089, 13, 51428, 51428, 407, 2318, 294, 300, 5197, 11, 286, 478, 411, 11, 1338, 11, 572, 11, 291, 434, 2370, 11, 988, 13, 51700, 51700, 583, 572, 11, 291, 393, 380, 584, 300, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1958658430311415, "compression_ratio": 1.5932203389830508, "no_caption_prob": 1.5936198906274512e-05}, {"id": 1085, "seek": 387530, "start": 3885.46, "end": 3890.1400000000003, "text": " And you can't compare the two, in my opinion, without that.", "tokens": [50364, 407, 309, 1177, 380, 362, 439, 264, 4474, 3094, 538, 264, 1768, 13, 50524, 50524, 467, 1177, 380, 362, 4474, 300, 291, 393, 1322, 1803, 11, 597, 307, 257, 2603, 4111, 294, 12564, 43, 686, 13, 50872, 50872, 400, 291, 393, 380, 6794, 264, 732, 11, 294, 452, 4800, 11, 1553, 300, 13, 51106, 51106, 400, 309, 486, 312, 257, 1154, 337, 552, 281, 4090, 309, 666, 36548, 4009, 3089, 13, 51428, 51428, 407, 2318, 294, 300, 5197, 11, 286, 478, 411, 11, 1338, 11, 572, 11, 291, 434, 2370, 11, 988, 13, 51700, 51700, 583, 572, 11, 291, 393, 380, 584, 300, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1958658430311415, "compression_ratio": 1.5932203389830508, "no_caption_prob": 1.5936198906274512e-05}, {"id": 1086, "seek": 387530, "start": 3890.1400000000003, "end": 3896.5800000000004, "text": " And it will be a problem for them to include it into compiled source code.", "tokens": [50364, 407, 309, 1177, 380, 362, 439, 264, 4474, 3094, 538, 264, 1768, 13, 50524, 50524, 467, 1177, 380, 362, 4474, 300, 291, 393, 1322, 1803, 11, 597, 307, 257, 2603, 4111, 294, 12564, 43, 686, 13, 50872, 50872, 400, 291, 393, 380, 6794, 264, 732, 11, 294, 452, 4800, 11, 1553, 300, 13, 51106, 51106, 400, 309, 486, 312, 257, 1154, 337, 552, 281, 4090, 309, 666, 36548, 4009, 3089, 13, 51428, 51428, 407, 2318, 294, 300, 5197, 11, 286, 478, 411, 11, 1338, 11, 572, 11, 291, 434, 2370, 11, 988, 13, 51700, 51700, 583, 572, 11, 291, 393, 380, 584, 300, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1958658430311415, "compression_ratio": 1.5932203389830508, "no_caption_prob": 1.5936198906274512e-05}, {"id": 1087, "seek": 387530, "start": 3896.5800000000004, "end": 3902.02, "text": " So especially in that instance, I'm like, yeah, no, you're fast, sure.", "tokens": [50364, 407, 309, 1177, 380, 362, 439, 264, 4474, 3094, 538, 264, 1768, 13, 50524, 50524, 467, 1177, 380, 362, 4474, 300, 291, 393, 1322, 1803, 11, 597, 307, 257, 2603, 4111, 294, 12564, 43, 686, 13, 50872, 50872, 400, 291, 393, 380, 6794, 264, 732, 11, 294, 452, 4800, 11, 1553, 300, 13, 51106, 51106, 400, 309, 486, 312, 257, 1154, 337, 552, 281, 4090, 309, 666, 36548, 4009, 3089, 13, 51428, 51428, 407, 2318, 294, 300, 5197, 11, 286, 478, 411, 11, 1338, 11, 572, 11, 291, 434, 2370, 11, 988, 13, 51700, 51700, 583, 572, 11, 291, 393, 380, 584, 300, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1958658430311415, "compression_ratio": 1.5932203389830508, "no_caption_prob": 1.5936198906274512e-05}, {"id": 1088, "seek": 387530, "start": 3902.02, "end": 3905.26, "text": " But no, you can't say that.", "tokens": [50364, 407, 309, 1177, 380, 362, 439, 264, 4474, 3094, 538, 264, 1768, 13, 50524, 50524, 467, 1177, 380, 362, 4474, 300, 291, 393, 1322, 1803, 11, 597, 307, 257, 2603, 4111, 294, 12564, 43, 686, 13, 50872, 50872, 400, 291, 393, 380, 6794, 264, 732, 11, 294, 452, 4800, 11, 1553, 300, 13, 51106, 51106, 400, 309, 486, 312, 257, 1154, 337, 552, 281, 4090, 309, 666, 36548, 4009, 3089, 13, 51428, 51428, 407, 2318, 294, 300, 5197, 11, 286, 478, 411, 11, 1338, 11, 572, 11, 291, 434, 2370, 11, 988, 13, 51700, 51700, 583, 572, 11, 291, 393, 380, 584, 300, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.1958658430311415, "compression_ratio": 1.5932203389830508, "no_caption_prob": 1.5936198906274512e-05}, {"id": 1089, "seek": 390526, "start": 3905.26, "end": 3906.82, "text": " Performance is just so good, though.", "tokens": [50364, 25047, 307, 445, 370, 665, 11, 1673, 13, 50442, 50442, 1133, 291, 362, 2243, 3389, 11, 264, 1752, 307, 14036, 42012, 13, 50756, 50756, 467, 445, 3417, 370, 709, 22842, 281, 764, 309, 13, 50876, 50876, 407, 3389, 307, 257, 14829, 34975, 11, 457, 309, 307, 611, 257, 1128, 8121, 3430, 13, 51258, 51258, 583, 352, 337, 300, 2295, 8345, 6773, 11, 24745, 294, 512, 14847, 11, 1190, 8279, 6410, 11, 536, 437, 2314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13450988334945485, "compression_ratio": 1.492822966507177, "no_caption_prob": 0.00014651611854787916}, {"id": 1090, "seek": 390526, "start": 3906.82, "end": 3913.1000000000004, "text": " When you have amazing performance, the experience is incomparable.", "tokens": [50364, 25047, 307, 445, 370, 665, 11, 1673, 13, 50442, 50442, 1133, 291, 362, 2243, 3389, 11, 264, 1752, 307, 14036, 42012, 13, 50756, 50756, 467, 445, 3417, 370, 709, 22842, 281, 764, 309, 13, 50876, 50876, 407, 3389, 307, 257, 14829, 34975, 11, 457, 309, 307, 611, 257, 1128, 8121, 3430, 13, 51258, 51258, 583, 352, 337, 300, 2295, 8345, 6773, 11, 24745, 294, 512, 14847, 11, 1190, 8279, 6410, 11, 536, 437, 2314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13450988334945485, "compression_ratio": 1.492822966507177, "no_caption_prob": 0.00014651611854787916}, {"id": 1091, "seek": 390526, "start": 3913.1000000000004, "end": 3915.5, "text": " It just feels so much nicer to use it.", "tokens": [50364, 25047, 307, 445, 370, 665, 11, 1673, 13, 50442, 50442, 1133, 291, 362, 2243, 3389, 11, 264, 1752, 307, 14036, 42012, 13, 50756, 50756, 467, 445, 3417, 370, 709, 22842, 281, 764, 309, 13, 50876, 50876, 407, 3389, 307, 257, 14829, 34975, 11, 457, 309, 307, 611, 257, 1128, 8121, 3430, 13, 51258, 51258, 583, 352, 337, 300, 2295, 8345, 6773, 11, 24745, 294, 512, 14847, 11, 1190, 8279, 6410, 11, 536, 437, 2314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13450988334945485, "compression_ratio": 1.492822966507177, "no_caption_prob": 0.00014651611854787916}, {"id": 1092, "seek": 390526, "start": 3915.5, "end": 3923.1400000000003, "text": " So performance is a worthy endeavor, but it is also a never ending challenge.", "tokens": [50364, 25047, 307, 445, 370, 665, 11, 1673, 13, 50442, 50442, 1133, 291, 362, 2243, 3389, 11, 264, 1752, 307, 14036, 42012, 13, 50756, 50756, 467, 445, 3417, 370, 709, 22842, 281, 764, 309, 13, 50876, 50876, 407, 3389, 307, 257, 14829, 34975, 11, 457, 309, 307, 611, 257, 1128, 8121, 3430, 13, 51258, 51258, 583, 352, 337, 300, 2295, 8345, 6773, 11, 24745, 294, 512, 14847, 11, 1190, 8279, 6410, 11, 536, 437, 2314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13450988334945485, "compression_ratio": 1.492822966507177, "no_caption_prob": 0.00014651611854787916}, {"id": 1093, "seek": 390526, "start": 3923.1400000000003, "end": 3931.26, "text": " But go for that low hanging fruit, sprinkle in some lazy, run Lighthouse, see what happens.", "tokens": [50364, 25047, 307, 445, 370, 665, 11, 1673, 13, 50442, 50442, 1133, 291, 362, 2243, 3389, 11, 264, 1752, 307, 14036, 42012, 13, 50756, 50756, 467, 445, 3417, 370, 709, 22842, 281, 764, 309, 13, 50876, 50876, 407, 3389, 307, 257, 14829, 34975, 11, 457, 309, 307, 611, 257, 1128, 8121, 3430, 13, 51258, 51258, 583, 352, 337, 300, 2295, 8345, 6773, 11, 24745, 294, 512, 14847, 11, 1190, 8279, 6410, 11, 536, 437, 2314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.13450988334945485, "compression_ratio": 1.492822966507177, "no_caption_prob": 0.00014651611854787916}, {"id": 1094, "seek": 393126, "start": 3931.26, "end": 3935.5800000000004, "text": " Spend your time focusing on the bottlenecks, not doing random optimizations that make your", "tokens": [50364, 1738, 521, 428, 565, 8416, 322, 264, 44641, 2761, 11, 406, 884, 4974, 5028, 14455, 300, 652, 428, 50580, 50580, 3089, 1152, 281, 6909, 11, 457, 500, 380, 767, 2712, 428, 4924, 3100, 337, 3389, 13, 50860, 50860, 2743, 4596, 721, 493, 365, 257, 6743, 45, 13, 51042, 51042, 3240, 300, 565, 281, 700, 40846, 760, 11, 483, 264, 700, 3677, 3389, 9689, 13, 51350, 51350, 3240, 439, 264, 2295, 8345, 6773, 300, 291, 393, 13, 51450, 51450, 316, 688, 295, 264, 3389, 486, 808, 490, 3670, 7512, 293, 2699, 76, 7512, 13, 51776, 51776, 9210, 264, 3880, 2306, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.16355078036968523, "compression_ratio": 1.6311787072243347, "no_caption_prob": 2.507098179194145e-05}, {"id": 1095, "seek": 393126, "start": 3935.5800000000004, "end": 3941.1800000000003, "text": " code hard to maintain, but don't actually impact your critical path for performance.", "tokens": [50364, 1738, 521, 428, 565, 8416, 322, 264, 44641, 2761, 11, 406, 884, 4974, 5028, 14455, 300, 652, 428, 50580, 50580, 3089, 1152, 281, 6909, 11, 457, 500, 380, 767, 2712, 428, 4924, 3100, 337, 3389, 13, 50860, 50860, 2743, 4596, 721, 493, 365, 257, 6743, 45, 13, 51042, 51042, 3240, 300, 565, 281, 700, 40846, 760, 11, 483, 264, 700, 3677, 3389, 9689, 13, 51350, 51350, 3240, 439, 264, 2295, 8345, 6773, 300, 291, 393, 13, 51450, 51450, 316, 688, 295, 264, 3389, 486, 808, 490, 3670, 7512, 293, 2699, 76, 7512, 13, 51776, 51776, 9210, 264, 3880, 2306, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.16355078036968523, "compression_ratio": 1.6311787072243347, "no_caption_prob": 2.507098179194145e-05}, {"id": 1096, "seek": 393126, "start": 3941.1800000000003, "end": 3944.82, "text": " Also serve things up with a CDN.", "tokens": [50364, 1738, 521, 428, 565, 8416, 322, 264, 44641, 2761, 11, 406, 884, 4974, 5028, 14455, 300, 652, 428, 50580, 50580, 3089, 1152, 281, 6909, 11, 457, 500, 380, 767, 2712, 428, 4924, 3100, 337, 3389, 13, 50860, 50860, 2743, 4596, 721, 493, 365, 257, 6743, 45, 13, 51042, 51042, 3240, 300, 565, 281, 700, 40846, 760, 11, 483, 264, 700, 3677, 3389, 9689, 13, 51350, 51350, 3240, 439, 264, 2295, 8345, 6773, 300, 291, 393, 13, 51450, 51450, 316, 688, 295, 264, 3389, 486, 808, 490, 3670, 7512, 293, 2699, 76, 7512, 13, 51776, 51776, 9210, 264, 3880, 2306, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.16355078036968523, "compression_ratio": 1.6311787072243347, "no_caption_prob": 2.507098179194145e-05}, {"id": 1097, "seek": 393126, "start": 3944.82, "end": 3950.98, "text": " Get that time to first byte down, get the first load performance improved.", "tokens": [50364, 1738, 521, 428, 565, 8416, 322, 264, 44641, 2761, 11, 406, 884, 4974, 5028, 14455, 300, 652, 428, 50580, 50580, 3089, 1152, 281, 6909, 11, 457, 500, 380, 767, 2712, 428, 4924, 3100, 337, 3389, 13, 50860, 50860, 2743, 4596, 721, 493, 365, 257, 6743, 45, 13, 51042, 51042, 3240, 300, 565, 281, 700, 40846, 760, 11, 483, 264, 700, 3677, 3389, 9689, 13, 51350, 51350, 3240, 439, 264, 2295, 8345, 6773, 300, 291, 393, 13, 51450, 51450, 316, 688, 295, 264, 3389, 486, 808, 490, 3670, 7512, 293, 2699, 76, 7512, 13, 51776, 51776, 9210, 264, 3880, 2306, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.16355078036968523, "compression_ratio": 1.6311787072243347, "no_caption_prob": 2.507098179194145e-05}, {"id": 1098, "seek": 393126, "start": 3950.98, "end": 3952.98, "text": " Get all the low hanging fruit that you can.", "tokens": [50364, 1738, 521, 428, 565, 8416, 322, 264, 44641, 2761, 11, 406, 884, 4974, 5028, 14455, 300, 652, 428, 50580, 50580, 3089, 1152, 281, 6909, 11, 457, 500, 380, 767, 2712, 428, 4924, 3100, 337, 3389, 13, 50860, 50860, 2743, 4596, 721, 493, 365, 257, 6743, 45, 13, 51042, 51042, 3240, 300, 565, 281, 700, 40846, 760, 11, 483, 264, 700, 3677, 3389, 9689, 13, 51350, 51350, 3240, 439, 264, 2295, 8345, 6773, 300, 291, 393, 13, 51450, 51450, 316, 688, 295, 264, 3389, 486, 808, 490, 3670, 7512, 293, 2699, 76, 7512, 13, 51776, 51776, 9210, 264, 3880, 2306, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.16355078036968523, "compression_ratio": 1.6311787072243347, "no_caption_prob": 2.507098179194145e-05}, {"id": 1099, "seek": 393126, "start": 3952.98, "end": 3959.5, "text": " A lot of the performance will come from web techniques and Elm techniques.", "tokens": [50364, 1738, 521, 428, 565, 8416, 322, 264, 44641, 2761, 11, 406, 884, 4974, 5028, 14455, 300, 652, 428, 50580, 50580, 3089, 1152, 281, 6909, 11, 457, 500, 380, 767, 2712, 428, 4924, 3100, 337, 3389, 13, 50860, 50860, 2743, 4596, 721, 493, 365, 257, 6743, 45, 13, 51042, 51042, 3240, 300, 565, 281, 700, 40846, 760, 11, 483, 264, 700, 3677, 3389, 9689, 13, 51350, 51350, 3240, 439, 264, 2295, 8345, 6773, 300, 291, 393, 13, 51450, 51450, 316, 688, 295, 264, 3389, 486, 808, 490, 3670, 7512, 293, 2699, 76, 7512, 13, 51776, 51776, 9210, 264, 3880, 2306, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.16355078036968523, "compression_ratio": 1.6311787072243347, "no_caption_prob": 2.507098179194145e-05}, {"id": 1100, "seek": 393126, "start": 3959.5, "end": 3960.9, "text": " Probably the biggest ones.", "tokens": [50364, 1738, 521, 428, 565, 8416, 322, 264, 44641, 2761, 11, 406, 884, 4974, 5028, 14455, 300, 652, 428, 50580, 50580, 3089, 1152, 281, 6909, 11, 457, 500, 380, 767, 2712, 428, 4924, 3100, 337, 3389, 13, 50860, 50860, 2743, 4596, 721, 493, 365, 257, 6743, 45, 13, 51042, 51042, 3240, 300, 565, 281, 700, 40846, 760, 11, 483, 264, 700, 3677, 3389, 9689, 13, 51350, 51350, 3240, 439, 264, 2295, 8345, 6773, 300, 291, 393, 13, 51450, 51450, 316, 688, 295, 264, 3389, 486, 808, 490, 3670, 7512, 293, 2699, 76, 7512, 13, 51776, 51776, 9210, 264, 3880, 2306, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.16355078036968523, "compression_ratio": 1.6311787072243347, "no_caption_prob": 2.507098179194145e-05}, {"id": 1101, "seek": 396090, "start": 3960.9, "end": 3961.9, "text": " Exactly.", "tokens": [50364, 7587, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 300, 311, 264, 661, 1778, 291, 1009, 18927, 13, 50626, 50626, 759, 291, 652, 746, 2319, 1413, 4663, 293, 309, 311, 1940, 257, 14067, 541, 18882, 11, 550, 300, 311, 869, 13, 51074, 51074, 583, 498, 291, 1027, 746, 502, 4, 4663, 293, 309, 390, 1940, 732, 3949, 11, 550, 300, 576, 362, 51514, 51514, 4835, 337, 2564, 709, 1101, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13822716635626717, "compression_ratio": 1.563953488372093, "no_caption_prob": 8.349122799700126e-05}, {"id": 1102, "seek": 396090, "start": 3961.9, "end": 3962.9, "text": " Yeah.", "tokens": [50364, 7587, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 300, 311, 264, 661, 1778, 291, 1009, 18927, 13, 50626, 50626, 759, 291, 652, 746, 2319, 1413, 4663, 293, 309, 311, 1940, 257, 14067, 541, 18882, 11, 550, 300, 311, 869, 13, 51074, 51074, 583, 498, 291, 1027, 746, 502, 4, 4663, 293, 309, 390, 1940, 732, 3949, 11, 550, 300, 576, 362, 51514, 51514, 4835, 337, 2564, 709, 1101, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13822716635626717, "compression_ratio": 1.563953488372093, "no_caption_prob": 8.349122799700126e-05}, {"id": 1103, "seek": 396090, "start": 3962.9, "end": 3966.14, "text": " And that's the other reason you always benchmark.", "tokens": [50364, 7587, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 300, 311, 264, 661, 1778, 291, 1009, 18927, 13, 50626, 50626, 759, 291, 652, 746, 2319, 1413, 4663, 293, 309, 311, 1940, 257, 14067, 541, 18882, 11, 550, 300, 311, 869, 13, 51074, 51074, 583, 498, 291, 1027, 746, 502, 4, 4663, 293, 309, 390, 1940, 732, 3949, 11, 550, 300, 576, 362, 51514, 51514, 4835, 337, 2564, 709, 1101, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13822716635626717, "compression_ratio": 1.563953488372093, "no_caption_prob": 8.349122799700126e-05}, {"id": 1104, "seek": 396090, "start": 3966.14, "end": 3975.1, "text": " If you make something 100 times faster and it's taking a nanosecond, then that's great.", "tokens": [50364, 7587, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 300, 311, 264, 661, 1778, 291, 1009, 18927, 13, 50626, 50626, 759, 291, 652, 746, 2319, 1413, 4663, 293, 309, 311, 1940, 257, 14067, 541, 18882, 11, 550, 300, 311, 869, 13, 51074, 51074, 583, 498, 291, 1027, 746, 502, 4, 4663, 293, 309, 390, 1940, 732, 3949, 11, 550, 300, 576, 362, 51514, 51514, 4835, 337, 2564, 709, 1101, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13822716635626717, "compression_ratio": 1.563953488372093, "no_caption_prob": 8.349122799700126e-05}, {"id": 1105, "seek": 396090, "start": 3975.1, "end": 3983.9, "text": " But if you made something 1% faster and it was taking two seconds, then that would have", "tokens": [50364, 7587, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 300, 311, 264, 661, 1778, 291, 1009, 18927, 13, 50626, 50626, 759, 291, 652, 746, 2319, 1413, 4663, 293, 309, 311, 1940, 257, 14067, 541, 18882, 11, 550, 300, 311, 869, 13, 51074, 51074, 583, 498, 291, 1027, 746, 502, 4, 4663, 293, 309, 390, 1940, 732, 3949, 11, 550, 300, 576, 362, 51514, 51514, 4835, 337, 2564, 709, 1101, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13822716635626717, "compression_ratio": 1.563953488372093, "no_caption_prob": 8.349122799700126e-05}, {"id": 1106, "seek": 396090, "start": 3983.9, "end": 3985.54, "text": " paid for itself much better.", "tokens": [50364, 7587, 13, 50414, 50414, 865, 13, 50464, 50464, 400, 300, 311, 264, 661, 1778, 291, 1009, 18927, 13, 50626, 50626, 759, 291, 652, 746, 2319, 1413, 4663, 293, 309, 311, 1940, 257, 14067, 541, 18882, 11, 550, 300, 311, 869, 13, 51074, 51074, 583, 498, 291, 1027, 746, 502, 4, 4663, 293, 309, 390, 1940, 732, 3949, 11, 550, 300, 576, 362, 51514, 51514, 4835, 337, 2564, 709, 1101, 13, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.13822716635626717, "compression_ratio": 1.563953488372093, "no_caption_prob": 8.349122799700126e-05}, {"id": 1107, "seek": 398554, "start": 3985.54, "end": 3992.38, "text": " So sometimes just adding a little preload directive to preload a font and do that initial", "tokens": [50364, 407, 2171, 445, 5127, 257, 707, 659, 2907, 45444, 281, 659, 2907, 257, 10703, 293, 360, 300, 5883, 50706, 50706, 2377, 34593, 420, 652, 988, 300, 291, 434, 2614, 314, 433, 260, 420, 512, 1333, 295, 923, 9902, 322, 428, 2699, 76, 51158, 51158, 5598, 13, 51208, 51208, 492, 603, 2073, 257, 2113, 281, 264, 9415, 337, 577, 281, 360, 300, 294, 264, 855, 5570, 11, 1293, 365, 51466, 51466, 2699, 76, 35013, 1125, 16872, 568, 293, 365, 8979, 5291, 2699, 76, 13, 51700, 51700, 467, 311, 406, 466, 2699, 76, 3389, 13, 51774, 51774, 2699, 76, 6676, 294, 264, 11185, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11052045282327903, "compression_ratio": 1.5720338983050848, "no_caption_prob": 3.3930864447029307e-06}, {"id": 1108, "seek": 398554, "start": 3992.38, "end": 4001.42, "text": " handshake or make sure that you're running Terser or some sort of minifier on your Elm", "tokens": [50364, 407, 2171, 445, 5127, 257, 707, 659, 2907, 45444, 281, 659, 2907, 257, 10703, 293, 360, 300, 5883, 50706, 50706, 2377, 34593, 420, 652, 988, 300, 291, 434, 2614, 314, 433, 260, 420, 512, 1333, 295, 923, 9902, 322, 428, 2699, 76, 51158, 51158, 5598, 13, 51208, 51208, 492, 603, 2073, 257, 2113, 281, 264, 9415, 337, 577, 281, 360, 300, 294, 264, 855, 5570, 11, 1293, 365, 51466, 51466, 2699, 76, 35013, 1125, 16872, 568, 293, 365, 8979, 5291, 2699, 76, 13, 51700, 51700, 467, 311, 406, 466, 2699, 76, 3389, 13, 51774, 51774, 2699, 76, 6676, 294, 264, 11185, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11052045282327903, "compression_ratio": 1.5720338983050848, "no_caption_prob": 3.3930864447029307e-06}, {"id": 1109, "seek": 398554, "start": 4001.42, "end": 4002.42, "text": " output.", "tokens": [50364, 407, 2171, 445, 5127, 257, 707, 659, 2907, 45444, 281, 659, 2907, 257, 10703, 293, 360, 300, 5883, 50706, 50706, 2377, 34593, 420, 652, 988, 300, 291, 434, 2614, 314, 433, 260, 420, 512, 1333, 295, 923, 9902, 322, 428, 2699, 76, 51158, 51158, 5598, 13, 51208, 51208, 492, 603, 2073, 257, 2113, 281, 264, 9415, 337, 577, 281, 360, 300, 294, 264, 855, 5570, 11, 1293, 365, 51466, 51466, 2699, 76, 35013, 1125, 16872, 568, 293, 365, 8979, 5291, 2699, 76, 13, 51700, 51700, 467, 311, 406, 466, 2699, 76, 3389, 13, 51774, 51774, 2699, 76, 6676, 294, 264, 11185, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11052045282327903, "compression_ratio": 1.5720338983050848, "no_caption_prob": 3.3930864447029307e-06}, {"id": 1110, "seek": 398554, "start": 4002.42, "end": 4007.58, "text": " We'll share a link to the instructions for how to do that in the show notes, both with", "tokens": [50364, 407, 2171, 445, 5127, 257, 707, 659, 2907, 45444, 281, 659, 2907, 257, 10703, 293, 360, 300, 5883, 50706, 50706, 2377, 34593, 420, 652, 988, 300, 291, 434, 2614, 314, 433, 260, 420, 512, 1333, 295, 923, 9902, 322, 428, 2699, 76, 51158, 51158, 5598, 13, 51208, 51208, 492, 603, 2073, 257, 2113, 281, 264, 9415, 337, 577, 281, 360, 300, 294, 264, 855, 5570, 11, 1293, 365, 51466, 51466, 2699, 76, 35013, 1125, 16872, 568, 293, 365, 8979, 5291, 2699, 76, 13, 51700, 51700, 467, 311, 406, 466, 2699, 76, 3389, 13, 51774, 51774, 2699, 76, 6676, 294, 264, 11185, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11052045282327903, "compression_ratio": 1.5720338983050848, "no_caption_prob": 3.3930864447029307e-06}, {"id": 1111, "seek": 398554, "start": 4007.58, "end": 4012.2599999999998, "text": " Elm Optimize Level 2 and with Vanilla Elm.", "tokens": [50364, 407, 2171, 445, 5127, 257, 707, 659, 2907, 45444, 281, 659, 2907, 257, 10703, 293, 360, 300, 5883, 50706, 50706, 2377, 34593, 420, 652, 988, 300, 291, 434, 2614, 314, 433, 260, 420, 512, 1333, 295, 923, 9902, 322, 428, 2699, 76, 51158, 51158, 5598, 13, 51208, 51208, 492, 603, 2073, 257, 2113, 281, 264, 9415, 337, 577, 281, 360, 300, 294, 264, 855, 5570, 11, 1293, 365, 51466, 51466, 2699, 76, 35013, 1125, 16872, 568, 293, 365, 8979, 5291, 2699, 76, 13, 51700, 51700, 467, 311, 406, 466, 2699, 76, 3389, 13, 51774, 51774, 2699, 76, 6676, 294, 264, 11185, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11052045282327903, "compression_ratio": 1.5720338983050848, "no_caption_prob": 3.3930864447029307e-06}, {"id": 1112, "seek": 398554, "start": 4012.2599999999998, "end": 4013.74, "text": " It's not about Elm performance.", "tokens": [50364, 407, 2171, 445, 5127, 257, 707, 659, 2907, 45444, 281, 659, 2907, 257, 10703, 293, 360, 300, 5883, 50706, 50706, 2377, 34593, 420, 652, 988, 300, 291, 434, 2614, 314, 433, 260, 420, 512, 1333, 295, 923, 9902, 322, 428, 2699, 76, 51158, 51158, 5598, 13, 51208, 51208, 492, 603, 2073, 257, 2113, 281, 264, 9415, 337, 577, 281, 360, 300, 294, 264, 855, 5570, 11, 1293, 365, 51466, 51466, 2699, 76, 35013, 1125, 16872, 568, 293, 365, 8979, 5291, 2699, 76, 13, 51700, 51700, 467, 311, 406, 466, 2699, 76, 3389, 13, 51774, 51774, 2699, 76, 6676, 294, 264, 11185, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11052045282327903, "compression_ratio": 1.5720338983050848, "no_caption_prob": 3.3930864447029307e-06}, {"id": 1113, "seek": 398554, "start": 4013.74, "end": 4014.98, "text": " Elm runs in the browser.", "tokens": [50364, 407, 2171, 445, 5127, 257, 707, 659, 2907, 45444, 281, 659, 2907, 257, 10703, 293, 360, 300, 5883, 50706, 50706, 2377, 34593, 420, 652, 988, 300, 291, 434, 2614, 314, 433, 260, 420, 512, 1333, 295, 923, 9902, 322, 428, 2699, 76, 51158, 51158, 5598, 13, 51208, 51208, 492, 603, 2073, 257, 2113, 281, 264, 9415, 337, 577, 281, 360, 300, 294, 264, 855, 5570, 11, 1293, 365, 51466, 51466, 2699, 76, 35013, 1125, 16872, 568, 293, 365, 8979, 5291, 2699, 76, 13, 51700, 51700, 467, 311, 406, 466, 2699, 76, 3389, 13, 51774, 51774, 2699, 76, 6676, 294, 264, 11185, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.11052045282327903, "compression_ratio": 1.5720338983050848, "no_caption_prob": 3.3930864447029307e-06}, {"id": 1114, "seek": 401498, "start": 4014.98, "end": 4020.02, "text": " So you've got to think about Elm performance, but also the platform it's running in.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1115, "seek": 401498, "start": 4020.02, "end": 4025.7, "text": " Feel like we need the more you know, a little sparkling sound whenever we give our public", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1116, "seek": 401498, "start": 4025.7, "end": 4027.42, "text": " service announcements.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1117, "seek": 401498, "start": 4027.42, "end": 4030.02, "text": " All right.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1118, "seek": 401498, "start": 4030.02, "end": 4033.98, "text": " Well, I think we've covered performance.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1119, "seek": 401498, "start": 4033.98, "end": 4034.98, "text": " All of performance.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1120, "seek": 401498, "start": 4034.98, "end": 4039.1, "text": " We also have a whole episode Lighthouse.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1121, "seek": 401498, "start": 4039.1, "end": 4040.1, "text": " That's true.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1122, "seek": 401498, "start": 4040.1, "end": 4041.1, "text": " Yes.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1123, "seek": 401498, "start": 4041.1, "end": 4042.1, "text": " You forgot about it?", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1124, "seek": 401498, "start": 4042.1, "end": 4043.1, "text": " I've bad.", "tokens": [50364, 407, 291, 600, 658, 281, 519, 466, 2699, 76, 3389, 11, 457, 611, 264, 3663, 309, 311, 2614, 294, 13, 50616, 50616, 14113, 411, 321, 643, 264, 544, 291, 458, 11, 257, 707, 39967, 1626, 5699, 321, 976, 527, 1908, 50900, 50900, 2643, 23785, 13, 50986, 50986, 1057, 558, 13, 51116, 51116, 1042, 11, 286, 519, 321, 600, 5343, 3389, 13, 51314, 51314, 1057, 295, 3389, 13, 51364, 51364, 492, 611, 362, 257, 1379, 3500, 8279, 6410, 13, 51570, 51570, 663, 311, 2074, 13, 51620, 51620, 1079, 13, 51670, 51670, 509, 5298, 466, 309, 30, 51720, 51720, 286, 600, 1578, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.22073972792852492, "compression_ratio": 1.5276595744680852, "no_caption_prob": 5.594270987785421e-06}, {"id": 1125, "seek": 404310, "start": 4043.1, "end": 4045.54, "text": " It was a long time ago.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1126, "seek": 404310, "start": 4045.54, "end": 4047.3399999999997, "text": " Yeah, yeah, that's true.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1127, "seek": 404310, "start": 4047.3399999999997, "end": 4051.1, "text": " There are a lot of good resources out there on optimizing those details, too.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1128, "seek": 404310, "start": 4051.1, "end": 4054.58, "text": " I'll drop a link to a couple of talks about that as well.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1129, "seek": 404310, "start": 4054.58, "end": 4061.48, "text": " The Jake and Surma, the Google dev rel guys have some really cool talks where they go", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1130, "seek": 404310, "start": 4061.48, "end": 4062.7, "text": " into some of these details.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1131, "seek": 404310, "start": 4062.7, "end": 4064.74, "text": " So I'll drop a link to a few of those talks.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1132, "seek": 404310, "start": 4064.74, "end": 4065.74, "text": " All right.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1133, "seek": 404310, "start": 4065.74, "end": 4066.74, "text": " We covered everything now.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1134, "seek": 404310, "start": 4066.74, "end": 4067.74, "text": " There you go.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1135, "seek": 404310, "start": 4067.74, "end": 4071.38, "text": " Your apps will never have performance issues ever again.", "tokens": [50364, 467, 390, 257, 938, 565, 2057, 13, 50486, 50486, 865, 11, 1338, 11, 300, 311, 2074, 13, 50576, 50576, 821, 366, 257, 688, 295, 665, 3593, 484, 456, 322, 40425, 729, 4365, 11, 886, 13, 50764, 50764, 286, 603, 3270, 257, 2113, 281, 257, 1916, 295, 6686, 466, 300, 382, 731, 13, 50938, 50938, 440, 15822, 293, 6732, 1696, 11, 264, 3329, 1905, 1039, 1074, 362, 512, 534, 1627, 6686, 689, 436, 352, 51283, 51283, 666, 512, 295, 613, 4365, 13, 51344, 51344, 407, 286, 603, 3270, 257, 2113, 281, 257, 1326, 295, 729, 6686, 13, 51446, 51446, 1057, 558, 13, 51496, 51496, 492, 5343, 1203, 586, 13, 51546, 51546, 821, 291, 352, 13, 51596, 51596, 2260, 7733, 486, 1128, 362, 3389, 2663, 1562, 797, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.22297329535851113, "compression_ratio": 1.6678966789667897, "no_caption_prob": 9.460685396334156e-05}, {"id": 1136, "seek": 407138, "start": 4071.38, "end": 4073.7000000000003, "text": " Well, until next time.", "tokens": [50364, 1042, 11, 1826, 958, 565, 13, 50480, 50480, 9088, 958, 565, 13, 50502], "temperature": 0.0, "avg_logprob": -0.22728635470072428, "compression_ratio": 1.1470588235294117, "no_caption_prob": 6.499921437352896e-05}, {"id": 1137, "seek": 407370, "start": 4073.7, "end": 4101.7, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 51764], "temperature": 0.0, "avg_logprob": -0.6827784946986607, "compression_ratio": 0.6666666666666666, "no_caption_prob": 2.3183087250799872e-05}], "language": "en"}